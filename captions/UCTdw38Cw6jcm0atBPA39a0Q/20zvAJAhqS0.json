[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "okay so I think that we can start my name is Oscar dudich and today I came to",
    "start": "6640",
    "end": "13280"
  },
  {
    "text": "talk with you the history of the project France the worst even sourcing system so",
    "start": "13280",
    "end": "19760"
  },
  {
    "text": "this is me I brought with me today this special award because we won with the",
    "start": "19760",
    "end": "25199"
  },
  {
    "text": "project France the title in the first annual context and contest of for the",
    "start": "25199",
    "end": "31920"
  },
  {
    "text": "worst event sourcing system but what's the single man without",
    "start": "31920",
    "end": "37239"
  },
  {
    "start": "34000",
    "end": "122000"
  },
  {
    "text": "the team so let me introduce also other people that took part in that so this is",
    "start": "37239",
    "end": "43200"
  },
  {
    "text": "our development team the Morris is a head of development Roy head of",
    "start": "43200",
    "end": "48480"
  },
  {
    "text": "operations and Katherine is the head of product Michael is our",
    "start": "48480",
    "end": "56120"
  },
  {
    "text": "CEO Jordan is our head of sales and Donnie head of compliance and of course",
    "start": "56120",
    "end": "62399"
  },
  {
    "text": "we had a uh stream team dedicated stream team because we will be crossing a lot",
    "start": "62399",
    "end": "68439"
  },
  {
    "text": "of streams and of course that's me and because as you will know in a minute um",
    "start": "68439",
    "end": "76200"
  },
  {
    "text": "it appeared that to build the worst event sourcing system you actually need to know how to build event sourcing",
    "start": "76200",
    "end": "83360"
  },
  {
    "text": "systems because we wouldn't like to accidentally even create the system that",
    "start": "83360",
    "end": "88439"
  },
  {
    "text": "would be good enough because for us that wouldn't be a correct option so I'm one",
    "start": "88439",
    "end": "96040"
  },
  {
    "text": "of the commenters of the Martin which is a net library that allows to use uh pogress as event store and document",
    "start": "96040",
    "end": "102880"
  },
  {
    "text": "database and I was also working with the first event store so event store DB uh",
    "start": "102880",
    "end": "108600"
  },
  {
    "text": "for some time and I'm also currently a consultant where I'm not always teaching people how to build the worst even",
    "start": "108600",
    "end": "115479"
  },
  {
    "text": "sourcing system sometimes I also teach them how to do it properly but it of the needs of the client of",
    "start": "115479",
    "end": "122039"
  },
  {
    "start": "122000",
    "end": "164000"
  },
  {
    "text": "course so um to give you the example because",
    "start": "122039",
    "end": "127320"
  },
  {
    "text": "the the measurement of the success like if you are winning is the quality of your competitors right so we also had",
    "start": "127320",
    "end": "135239"
  },
  {
    "text": "competitors um the small ones the organized",
    "start": "135239",
    "end": "141280"
  },
  {
    "text": "ones the creative ones the weird",
    "start": "141280",
    "end": "146879"
  },
  {
    "text": "ones and we also had the competition from the biggest cloud providers AWS",
    "start": "146879",
    "end": "152599"
  },
  {
    "text": "tried to beat us uh of course Microsoft also wanted to do it for some reason Google did not but",
    "start": "152599",
    "end": "162640"
  },
  {
    "text": "I think that they were just reasonable because we they already know that we will be hard to beat so let's start with",
    "start": "162640",
    "end": "170120"
  },
  {
    "start": "164000",
    "end": "321000"
  },
  {
    "text": "our first idea so the the idea that we came up and we gathered together because each",
    "start": "170120",
    "end": "179640"
  },
  {
    "text": "uh project even the worst one needs to start from the Whiteboard we put a lot",
    "start": "179640",
    "end": "184760"
  },
  {
    "text": "of sticky notes we group together to discuss that and eventually we came up",
    "start": "184760",
    "end": "190400"
  },
  {
    "text": "with such architecture um if you don't know this architecture then that's good for you",
    "start": "190400",
    "end": "198560"
  },
  {
    "text": "but let me explain it and one disclaimer so I will use the George Orwell analogy",
    "start": "198560",
    "end": "205080"
  },
  {
    "text": "so what is bad for our project is actually good for like a good practice",
    "start": "205080",
    "end": "211920"
  },
  {
    "text": "in general and what's good for our project is actually a bad practice so",
    "start": "211920",
    "end": "218120"
  },
  {
    "text": "this will be a bit of twist but let's go to our first idea so this architecture",
    "start": "218120",
    "end": "225840"
  },
  {
    "text": "might be blurry enough but so to make it a bit more clearer then I blured some of",
    "start": "225840",
    "end": "231480"
  },
  {
    "text": "the stuff so Our intention was when we are getting requests from the API then",
    "start": "231480",
    "end": "238879"
  },
  {
    "text": "the first thing that we do of course we are loading data and there is no surprise that we are loading this data",
    "start": "238879",
    "end": "244439"
  },
  {
    "text": "from the database but then we are running the business logic validating yada yada but",
    "start": "244439",
    "end": "252360"
  },
  {
    "text": "it would be too simple if we store the result in the database right so we are storing that in a queue and during the",
    "start": "252360",
    "end": "260560"
  },
  {
    "text": "the um this presentation I will be using cka as an example because Kafka is",
    "start": "260560",
    "end": "267080"
  },
  {
    "text": "pictured the most as the the best which is uh we'll see if it's the best option",
    "start": "267080",
    "end": "274479"
  },
  {
    "text": "for even sourcing but if I'm saying even uh if I'm saying CFA then you can think",
    "start": "274479",
    "end": "280240"
  },
  {
    "text": "the same that the same would apply to event Bridge Azure event hubs or any",
    "start": "280240",
    "end": "286880"
  },
  {
    "text": "other messaging streaming solution so again instead of storing data in our",
    "start": "286880",
    "end": "293080"
  },
  {
    "text": "database we are immediately putting that into the queue I'm almost sure that you",
    "start": "293080",
    "end": "299120"
  },
  {
    "text": "saw that on the internet right uh because we inspired a lot by",
    "start": "299120",
    "end": "304919"
  },
  {
    "text": "that and then in when we are storing this event then at some point with the",
    "start": "304919",
    "end": "310639"
  },
  {
    "text": "eventual consistency we are getting with some delay uh the event and we are",
    "start": "310639",
    "end": "316240"
  },
  {
    "text": "handling it and after that we are finally storing the result in the database and let's start with the best",
    "start": "316240",
    "end": "324560"
  },
  {
    "start": "321000",
    "end": "402000"
  },
  {
    "text": "case scenario so how it is picture like how it should work in general so let's",
    "start": "324560",
    "end": "330919"
  },
  {
    "text": "say that we were building the accounting system or like the bank account and this",
    "start": "330919",
    "end": "338280"
  },
  {
    "text": "scenario shows that at first we are recording one inflow and then we are trying to withdraw twice the same amount",
    "start": "338280",
    "end": "346120"
  },
  {
    "text": "of money so in the perfect scenario so not perfect for us because that would",
    "start": "346120",
    "end": "351639"
  },
  {
    "text": "mean that the system actually works and we as I mentioned we don't want that so",
    "start": "351639",
    "end": "358680"
  },
  {
    "text": "the perfect scenario is that we are getting the balance from the database then we are appending new event to to",
    "start": "358680",
    "end": "365919"
  },
  {
    "text": "our messaging system and then the the event is handled we are updating our",
    "start": "365919",
    "end": "372240"
  },
  {
    "text": "stating database we have updated balance that's fine and then when we try to",
    "start": "372240",
    "end": "377960"
  },
  {
    "text": "withdraw money then we are doing the same checking balance appending new event as a result handling it and",
    "start": "377960",
    "end": "385479"
  },
  {
    "text": "finally updating database um and in the end so the the last the the",
    "start": "385479",
    "end": "392880"
  },
  {
    "text": "last request should fail because we don't have any money in our account so we are getting balance it's zero we can",
    "start": "392880",
    "end": "400680"
  },
  {
    "text": "reject the request but reality luckely for us uh it's a bit different so let's",
    "start": "400680",
    "end": "410240"
  },
  {
    "start": "402000",
    "end": "512000"
  },
  {
    "text": "say what can go wrong in this scenario so I already mention eventual consistency and let's try to have a look",
    "start": "410240",
    "end": "417360"
  },
  {
    "text": "how it can uh get into this game so we are getting the First Recording uh the",
    "start": "417360",
    "end": "425599"
  },
  {
    "text": "inflow um this works the same way appending even handling",
    "start": "425599",
    "end": "430720"
  },
  {
    "text": "it and uh updating the balance but if we",
    "start": "430720",
    "end": "435759"
  },
  {
    "text": "are withdrawing the first request then of course we can withdraw the money but",
    "start": "435759",
    "end": "441960"
  },
  {
    "text": "in this case we already might have the the delay between the event handler is",
    "start": "441960",
    "end": "447960"
  },
  {
    "text": "getting the event and and the the another request is trying to run the business logic so of course in some",
    "start": "447960",
    "end": "455800"
  },
  {
    "text": "systems that's not an issue maybe in some CR not so critical or without a",
    "start": "455800",
    "end": "461680"
  },
  {
    "text": "huge traffic that could work but our system will be of course really high",
    "start": "461680",
    "end": "467440"
  },
  {
    "text": "traffic high resolution High everything so in that case if we are trying to get",
    "start": "467440",
    "end": "472960"
  },
  {
    "text": "the balance and the event handler didn't update the state in our database then we",
    "start": "472960",
    "end": "478280"
  },
  {
    "text": "are having the wrong state so we our business logic will be validated against",
    "start": "478280",
    "end": "484000"
  },
  {
    "text": "the stale data and that's the re as a result we are pending the new event because the balance wasn't updated and",
    "start": "484000",
    "end": "491520"
  },
  {
    "text": "in the wrong in in as a result if we with the delay apply those two events",
    "start": "491520",
    "end": "497639"
  },
  {
    "text": "then we are getting eventual inconsistency and that's perfectly fine for our case because uh we want to have",
    "start": "497639",
    "end": "506159"
  },
  {
    "text": "the system that looks like it's working but in the itical uh part it won't be",
    "start": "506159",
    "end": "512120"
  },
  {
    "start": "512000",
    "end": "634000"
  },
  {
    "text": "working so let's check another case so item potency and item potency is a word",
    "start": "512120",
    "end": "519200"
  },
  {
    "text": "that you better watch out when you are saying but for some reason we we have to",
    "start": "519200",
    "end": "524279"
  },
  {
    "text": "say I that's our systems are IDM potent and IDM potency means that if we are",
    "start": "524279",
    "end": "531800"
  },
  {
    "text": "handling a specific request twice Thrice or end times then it doesn't doesn't",
    "start": "531800",
    "end": "539640"
  },
  {
    "text": "matter how how many times we will handle a specific request we should get precisely the sem result so let's have a",
    "start": "539640",
    "end": "546880"
  },
  {
    "text": "look on our scenario so we are recording inflow updating the balance but in this",
    "start": "546880",
    "end": "554560"
  },
  {
    "text": "case our cues so any Q they have the",
    "start": "554560",
    "end": "560000"
  },
  {
    "text": "retries mechanism and those retries might happen for various reasons maybe",
    "start": "560000",
    "end": "565240"
  },
  {
    "text": "our service was not available maybe the queue had some issue maybe we had some",
    "start": "565240",
    "end": "571959"
  },
  {
    "text": "temporary issue in our code and then those messaging systems will try to redeliver the message and once that",
    "start": "571959",
    "end": "579480"
  },
  {
    "text": "happen and if we didn't foresee that then we might be handling that twice",
    "start": "579480",
    "end": "586160"
  },
  {
    "text": "Thrice or more times so in this case the first inflow would be handled twice and",
    "start": "586160",
    "end": "592760"
  },
  {
    "text": "instead of getting $100 on our balance we are getting 2 200 and not",
    "start": "592760",
    "end": "598120"
  },
  {
    "text": "surprisingly if we try to handle those two other requests then the second",
    "start": "598120",
    "end": "604480"
  },
  {
    "text": "request won't be rejected because we are again getting the wrong State because we",
    "start": "604480",
    "end": "610519"
  },
  {
    "text": "didn't assume that it might be the case of course we could be uh using some",
    "start": "610519",
    "end": "617160"
  },
  {
    "text": "strategies about handling IDM potency but I can guarantee you that they are",
    "start": "617160",
    "end": "622640"
  },
  {
    "text": "non-trivial and in our system so our uh uh project France definitely we won't be",
    "start": "622640",
    "end": "629839"
  },
  {
    "text": "using them so we are getting item",
    "start": "629839",
    "end": "634800"
  },
  {
    "start": "634000",
    "end": "1018000"
  },
  {
    "text": "noty and the third case that I wanted to explain you and show why we believed",
    "start": "635040",
    "end": "641480"
  },
  {
    "text": "that this strategy and this architecture is a great strategy for building the worst event sourcing system is the event",
    "start": "641480",
    "end": "649480"
  },
  {
    "text": "ordering so this is the department store and if you have a look on those",
    "start": "649480",
    "end": "655120"
  },
  {
    "text": "cues and if I put those TR three people",
    "start": "655120",
    "end": "660279"
  },
  {
    "text": "so we can try to guess which of them will be handled first you you don't know of course the",
    "start": "660279",
    "end": "667639"
  },
  {
    "text": "only thing about this cues in the department store and the only fact that always works is that the queue that we",
    "start": "667639",
    "end": "674000"
  },
  {
    "text": "are standing is the slowest one right but here you can say that probably",
    "start": "674000",
    "end": "680880"
  },
  {
    "text": "if someone is standing in the same queue then you can guarantee that this will be",
    "start": "680880",
    "end": "686800"
  },
  {
    "text": "uh this person will be handled after after the person that is staring uh standing up uh in front of them but",
    "start": "686800",
    "end": "695720"
  },
  {
    "text": "besides different cues you never know because there can be like a change of casier the paper in the drawer may be",
    "start": "695720",
    "end": "703760"
  },
  {
    "text": "finished and so on and so forth there are many scenarios and that's the same case for our messaging systems so if we",
    "start": "703760",
    "end": "711880"
  },
  {
    "text": "have a look on like cka then we have two splits one is topic and the other one is",
    "start": "711880",
    "end": "717519"
  },
  {
    "text": "the partition and topic is a logical split so we can think that our topic in",
    "start": "717519",
    "end": "723040"
  },
  {
    "text": "this example could be department store and partition could be each of the cues",
    "start": "723040",
    "end": "729880"
  },
  {
    "text": "and in Kafka we only have the guarantee on the partition level because this is",
    "start": "729880",
    "end": "736839"
  },
  {
    "text": "the physical how the data is laid out but it's not only for Kafka any other",
    "start": "736839",
    "end": "743040"
  },
  {
    "text": "queing systems like in rabbit you can also get the guarantee only in for the specific queue not between the other",
    "start": "743040",
    "end": "750560"
  },
  {
    "text": "cues and of course that's not a rocket science we can find a way how to and",
    "start": "750560",
    "end": "757600"
  },
  {
    "text": "find a strategy how to split our topics and and partitions um but that quite often is",
    "start": "757600",
    "end": "765839"
  },
  {
    "text": "non-trivial and of what I saw many people forget about that and they are",
    "start": "765839",
    "end": "771160"
  },
  {
    "text": "not thinking about it just using the default strategies and of course in the",
    "start": "771160",
    "end": "776800"
  },
  {
    "text": "project France we also wanted to use those default strategies because why do",
    "start": "776800",
    "end": "782399"
  },
  {
    "text": "we have those cues like in the department store to make the processing faster because this is the tradeoff we",
    "start": "782399",
    "end": "789000"
  },
  {
    "text": "are trading of the either like I mentioned consistency or the ordering",
    "start": "789000",
    "end": "795519"
  },
  {
    "text": "because we want to move the data faster from one place to another but if we",
    "start": "795519",
    "end": "800639"
  },
  {
    "text": "don't know or don't care so like we didn't care then it actually can be",
    "start": "800639",
    "end": "807120"
  },
  {
    "text": "really Troublesome an example example of that is if we want to update the re",
    "start": "807120",
    "end": "812240"
  },
  {
    "text": "model then quite often those events can change the order like there are many",
    "start": "812240",
    "end": "817440"
  },
  {
    "text": "cases even in Kafka like if you have the pre-flight messages and you so that",
    "start": "817440",
    "end": "822920"
  },
  {
    "text": "means that if you are pending events and you said that you it will be caching",
    "start": "822920",
    "end": "828160"
  },
  {
    "text": "like 10 10 messages before putting that on disk then it can get out of order",
    "start": "828160",
    "end": "833959"
  },
  {
    "text": "because of the retries ETC or in the rabbit mq I heard that the a lot of",
    "start": "833959",
    "end": "839240"
  },
  {
    "text": "people are having strategy that if they weren't able to process the message then they are putting it back on the Queue",
    "start": "839240",
    "end": "845680"
  },
  {
    "text": "and then trying to play a roulette until they get the proper message so the",
    "start": "845680",
    "end": "850959"
  },
  {
    "text": "ordering might be broken and in our case that's perfect scenario for us because that's what we wanted to achieve we",
    "start": "850959",
    "end": "858079"
  },
  {
    "text": "wanted to ignore eventual consistency we wanted to ignore the IDM potency and the",
    "start": "858079",
    "end": "863959"
  },
  {
    "text": "ordering we and as you see if we first got the the bank account was opened then",
    "start": "863959",
    "end": "870639"
  },
  {
    "text": "that would work and then inflow recorded but the reality is quite often that this",
    "start": "870639",
    "end": "876000"
  },
  {
    "text": "guarantee might not be fulfilled like for example if you have your strategy that uh each topic is different modu in",
    "start": "876000",
    "end": "884399"
  },
  {
    "text": "your services then between the services you cannot guarantee the order and of course we are getting the",
    "start": "884399",
    "end": "891839"
  },
  {
    "text": "events disordering which is what we wanted to achieve because that's cool",
    "start": "891839",
    "end": "897120"
  },
  {
    "text": "that's great that's perfect case for for us and of course some say and if you",
    "start": "897120",
    "end": "904440"
  },
  {
    "text": "search for the internet then say like yeah okay but you know you are getting",
    "start": "904440",
    "end": "909680"
  },
  {
    "text": "the extreme frut you get the high scalability yada yada and that's fine",
    "start": "909680",
    "end": "915560"
  },
  {
    "text": "because you can use the process managers and you can compensate each of the business operation and that's also what",
    "start": "915560",
    "end": "922600"
  },
  {
    "text": "we wanted to do because process managers and handling",
    "start": "922600",
    "end": "928519"
  },
  {
    "text": "distribut processes is really needed eventual consistency is nothing to be",
    "start": "928519",
    "end": "934360"
  },
  {
    "text": "scared of but if each of the business operation needs to be handled like that",
    "start": "934360",
    "end": "940079"
  },
  {
    "text": "that you don't know whether your data is consistent because your stale state may be always stale and for each business",
    "start": "940079",
    "end": "947480"
  },
  {
    "text": "operation you need to provide the compensation and then compensation for that compensation then that creates some",
    "start": "947480",
    "end": "954880"
  },
  {
    "text": "nightmares like on you you can see on the screen",
    "start": "954880",
    "end": "960319"
  },
  {
    "text": "but the worst thing that happened for us after one year of development is that",
    "start": "960800",
    "end": "967399"
  },
  {
    "text": "Donnie and I mention you the head of the compliance called me and said like hey Oscar we have a",
    "start": "967399",
    "end": "974639"
  },
  {
    "text": "problem and it appeared that to build the event sourcing system you actually need to use",
    "start": "974639",
    "end": "980800"
  },
  {
    "text": "event sourcing system and what I just described is not event sourcing it's EV",
    "start": "980800",
    "end": "987000"
  },
  {
    "text": "streaming so the first thing was that okay that's",
    "start": "987000",
    "end": "993000"
  },
  {
    "text": "bad how we going to make and change the transition if we cannot use all of those",
    "start": "993000",
    "end": "998120"
  },
  {
    "text": "anti patterns that I described but in the end we thought that",
    "start": "998120",
    "end": "1004040"
  },
  {
    "text": "wasting one year for development can be like a bonus for for us for getting the",
    "start": "1004040",
    "end": "1009519"
  },
  {
    "text": "award so that's fine so we rolled up our sleeves and we decided that we will",
    "start": "1009519",
    "end": "1015880"
  },
  {
    "text": "continue our effort and so let's maybe discuss what's actually",
    "start": "1015880",
    "end": "1022000"
  },
  {
    "start": "1018000",
    "end": "1460000"
  },
  {
    "text": "event sourcing so event sourcing in a nutshell is a really simple pattern so",
    "start": "1022000",
    "end": "1028160"
  },
  {
    "text": "we have the event store and event store is a is a database actually",
    "start": "1028160",
    "end": "1035520"
  },
  {
    "text": "and it's focused on the recording and handling our events and getting the",
    "start": "1035520",
    "end": "1041319"
  },
  {
    "text": "granular information about what has happened in our business logic so the",
    "start": "1041319",
    "end": "1046600"
  },
  {
    "text": "first thing that we need to have is the command so the request the intention to do something and that should be business",
    "start": "1046600",
    "end": "1052919"
  },
  {
    "text": "meaningful like withdraw cash from ATM because if we don't have this clear",
    "start": "1052919",
    "end": "1059080"
  },
  {
    "text": "intention then we won't know how to record the meaningful event but essentially that's still a web a request",
    "start": "1059080",
    "end": "1066320"
  },
  {
    "text": "that will probably came through our web API so not nothing different from our regular approach and the first",
    "start": "1066320",
    "end": "1073760"
  },
  {
    "text": "difference that we have is that we are not getting the data from some C cash",
    "start": "1073760",
    "end": "1079520"
  },
  {
    "text": "from some other database because the only dat the only state that we have in",
    "start": "1079520",
    "end": "1084679"
  },
  {
    "text": "event sourcing are our events so we are reading all the events for the specific",
    "start": "1084679",
    "end": "1090799"
  },
  {
    "text": "stream and a stream is like a representation of record once we got",
    "start": "1090799",
    "end": "1096240"
  },
  {
    "text": "those events then in memory we are applying them one by one to get the",
    "start": "1096240",
    "end": "1101960"
  },
  {
    "text": "current state or being precisely State at the certain point in time and once we",
    "start": "1101960",
    "end": "1108600"
  },
  {
    "text": "have it then again there is no difference to any handling of the business logic we need to validate we",
    "start": "1108600",
    "end": "1114720"
  },
  {
    "text": "need to uh run the business rules Etc and the other",
    "start": "1114720",
    "end": "1121840"
  },
  {
    "text": "um and the other difference is that as a result we are not updating the state we",
    "start": "1121840",
    "end": "1127840"
  },
  {
    "text": "are just appending another event to the same stream that we got the events back",
    "start": "1127840",
    "end": "1133159"
  },
  {
    "text": "because as I mentioned events are our state so this is a simple pattern and",
    "start": "1133159",
    "end": "1139159"
  },
  {
    "text": "that wasn't great for us because if it's a simple pattern then building the worst system can be really",
    "start": "1139159",
    "end": "1146200"
  },
  {
    "text": "hard but I already spoiled you the fun because we made it right so does that mean that we cannot",
    "start": "1146200",
    "end": "1153720"
  },
  {
    "text": "use cafka did someone lie in the internet that's not possible that's not",
    "start": "1153720",
    "end": "1159480"
  },
  {
    "text": "happening right so let's think how this",
    "start": "1159480",
    "end": "1165080"
  },
  {
    "text": "confusion came from because when we are dis describing event sourcing then most",
    "start": "1165080",
    "end": "1171080"
  },
  {
    "text": "of the resources are starting that event stores are up and only lock and hello C",
    "start": "1171080",
    "end": "1176919"
  },
  {
    "text": "is up and only loog right that's correct but and essentially most of the",
    "start": "1176919",
    "end": "1182720"
  },
  {
    "text": "implementations or even stor are up and Only log so in that case people are not",
    "start": "1182720",
    "end": "1189640"
  },
  {
    "text": "lying but uh the up and only lock if we have a look then is representing a set",
    "start": "1189640",
    "end": "1197320"
  },
  {
    "text": "of streams and streams as I mentioned represent a specific records so for",
    "start": "1197320",
    "end": "1204640"
  },
  {
    "text": "instance if we have multiple accounts then each account will have its own stream if we have order shopping cart um",
    "start": "1204640",
    "end": "1213880"
  },
  {
    "text": "whatever entity that we have in our system it will be represented by the specific stream type an instance of that",
    "start": "1213880",
    "end": "1220919"
  },
  {
    "text": "object will be represented as a specific stream so we could have a look on our uh",
    "start": "1220919",
    "end": "1228880"
  },
  {
    "text": "event store as logically like a key value database where key is the record",
    "start": "1228880",
    "end": "1236159"
  },
  {
    "text": "ID and the value is the sequence of events and if we think about it like",
    "start": "1236159",
    "end": "1243000"
  },
  {
    "text": "that then it's much easier to reason what guarantee we can expect from uh",
    "start": "1243000",
    "end": "1248679"
  },
  {
    "text": "from event store because if it's a key value database then we can expect the",
    "start": "1248679",
    "end": "1254679"
  },
  {
    "text": "similar guarantee that we have from any other key value database bis",
    "start": "1254679",
    "end": "1260159"
  },
  {
    "text": "right and as I mentioned one stream one record almost most of the time so maybe",
    "start": "1260159",
    "end": "1269880"
  },
  {
    "text": "we could use partitions from Kafka because it looks almost like a stream",
    "start": "1269880",
    "end": "1275039"
  },
  {
    "text": "right so remember loading events in",
    "start": "1275039",
    "end": "1280200"
  },
  {
    "text": "Kafka you are subscribing to events you are not loading them there is no API and in any other messaging system actually I",
    "start": "1280200",
    "end": "1287600"
  },
  {
    "text": "didn't s such API of course you can do some tricks with the um with the with",
    "start": "1287600",
    "end": "1293720"
  },
  {
    "text": "your code and and made some wrapper around subscription but yeah it's still the",
    "start": "1293720",
    "end": "1300559"
  },
  {
    "text": "case and this is the screen from the Kafka block and it appeared that in",
    "start": "1300559",
    "end": "1307200"
  },
  {
    "text": "Kafka in total we can have 200 thousands of partitions so if we try to put a part",
    "start": "1307200",
    "end": "1315279"
  },
  {
    "text": "a stream as a partition then how many record we could have in our system",
    "start": "1315279",
    "end": "1321600"
  },
  {
    "text": "200,000 right so usually people are putting like more than one record inside",
    "start": "1321600",
    "end": "1328600"
  },
  {
    "text": "the partition to went through that because I I'm sure that if you try to build like 200,000 partitions in cafka",
    "start": "1328600",
    "end": "1335919"
  },
  {
    "text": "then it wouldn't be extremely performant but then if you try to load that data from partition then you would be loading",
    "start": "1335919",
    "end": "1343039"
  },
  {
    "text": "not only your specific record but the huge set of other records right",
    "start": "1343039",
    "end": "1349279"
  },
  {
    "text": "so does anyone recognize that what's",
    "start": "1349279",
    "end": "1354640"
  },
  {
    "text": "that anyone is using databases here yeah Denise what's that oh I don't",
    "start": "1354640",
    "end": "1363120"
  },
  {
    "text": "know the answer that's right ahead log or if you're using mssql server this is",
    "start": "1363120",
    "end": "1369520"
  },
  {
    "text": "the transaction log and in the middle in each database relational database even",
    "start": "1369520",
    "end": "1376159"
  },
  {
    "text": "Raven Deb that there is there you can go them and there and ask them is built",
    "start": "1376159",
    "end": "1381240"
  },
  {
    "text": "like that as a center piece of each database is the right ahead log or transaction log which is the log of all",
    "start": "1381240",
    "end": "1389120"
  },
  {
    "text": "operations that you have so insert update delete it's getting first into this app and only lock and then building",
    "start": "1389120",
    "end": "1397240"
  },
  {
    "text": "the tables updating inserting data so from the perspective of the database",
    "start": "1397240",
    "end": "1403120"
  },
  {
    "text": "like tables are read models actually and we could build it it in the",
    "start": "1403120",
    "end": "1409200"
  },
  {
    "text": "same way so event stores are also databases so if they technically are",
    "start": "1409200",
    "end": "1414480"
  },
  {
    "text": "right ahead log and you can put events one after another then that doesn't mean that you The Logical split is",
    "start": "1414480",
    "end": "1421640"
  },
  {
    "text": "different so again log physical split uh",
    "start": "1421640",
    "end": "1427120"
  },
  {
    "text": "streams logical and that's how for example even",
    "start": "1427120",
    "end": "1432559"
  },
  {
    "text": "store DB is built it just builds from scratch you just start zeros and ones on",
    "start": "1432559",
    "end": "1438720"
  },
  {
    "text": "the disk like in any other databases or you might implement it like in Martin so",
    "start": "1438720",
    "end": "1444799"
  },
  {
    "text": "for example keeping all the events in the specific uh tables because keeping",
    "start": "1444799",
    "end": "1451000"
  },
  {
    "text": "data as for example Json B and other information as regular columns because",
    "start": "1451000",
    "end": "1456400"
  },
  {
    "text": "all those metadata will be the same for each of of the event and let's have a look on the last",
    "start": "1456400",
    "end": "1465440"
  },
  {
    "start": "1460000",
    "end": "1546000"
  },
  {
    "text": "um and this time optimistic case so optimistic concurrency so the final",
    "start": "1465440",
    "end": "1471880"
  },
  {
    "text": "piece of making sure that we are making decision based on the latest state so",
    "start": "1471880",
    "end": "1477440"
  },
  {
    "text": "optimistic concurrency works like that and it's not only about even sourcing and even stores I really encourage you",
    "start": "1477440",
    "end": "1484480"
  },
  {
    "text": "to use anywhere with any databases because any database can handle that so",
    "start": "1484480",
    "end": "1491039"
  },
  {
    "text": "it works like that when we two requests that are happening in parallel at first",
    "start": "1491039",
    "end": "1496760"
  },
  {
    "text": "want to access the state then they are getting also the version of the specific state so in event sourcing it could be",
    "start": "1496760",
    "end": "1503159"
  },
  {
    "text": "like the number of events you have in stream and then if you are sending that",
    "start": "1503159",
    "end": "1508559"
  },
  {
    "text": "I want to append new event then you can say that the version that I saw is",
    "start": "1508559",
    "end": "1514000"
  },
  {
    "text": "version number three and database can compare if it's the same as they have in",
    "start": "1514000",
    "end": "1519600"
  },
  {
    "text": "database and after that uh if those versions matches then the save is made",
    "start": "1519600",
    "end": "1526039"
  },
  {
    "text": "and the record in this case event is is appended and then if someone tries to",
    "start": "1526039",
    "end": "1531799"
  },
  {
    "text": "run after that and send that I made my decision based on the version free then",
    "start": "1531799",
    "end": "1537279"
  },
  {
    "text": "database can say that no no no the version now is four so your save",
    "start": "1537279",
    "end": "1543880"
  },
  {
    "text": "shouldn't be made and actually all of that so",
    "start": "1543880",
    "end": "1549200"
  },
  {
    "start": "1546000",
    "end": "1593000"
  },
  {
    "text": "atomicity optimistic concurrency reading your own rights creates a rock solid",
    "start": "1549200",
    "end": "1554919"
  },
  {
    "text": "solution so in even sourcing and even Source we get a so really strong",
    "start": "1554919",
    "end": "1560880"
  },
  {
    "text": "consistency on rights and all the guarantees and can we do optimistic concurrency on cka maybe in the future",
    "start": "1560880",
    "end": "1569960"
  },
  {
    "text": "but I know that the the Fone is not great so I will read priority priority",
    "start": "1569960",
    "end": "1575640"
  },
  {
    "text": "minor resolution unresolved assign unassigned created in",
    "start": "1575640",
    "end": "1584159"
  },
  {
    "text": "2015 and last updated 2018 no not a",
    "start": "1584159",
    "end": "1589799"
  },
  {
    "text": "priority and but actually kfka is okay is there",
    "start": "1589799",
    "end": "1596039"
  },
  {
    "start": "1593000",
    "end": "1668000"
  },
  {
    "text": "anyone's from confluent here no then that means that I",
    "start": "1596039",
    "end": "1601399"
  },
  {
    "text": "might be still a speaker on the Kafka Summit next month because I really like Kafka",
    "start": "1601399",
    "end": "1608080"
  },
  {
    "text": "because it's a really good solution and as I said I'm using kafa just to point because most often it's picture like",
    "start": "1608080",
    "end": "1615159"
  },
  {
    "text": "yeah just use Kafka for even sourcing because kka is a good tool even great",
    "start": "1615159",
    "end": "1620240"
  },
  {
    "text": "tool but for event streaming and it also plays really well with event sourcing",
    "start": "1620240",
    "end": "1627120"
  },
  {
    "text": "because we can put as the Event Source our event store so database and then",
    "start": "1627120",
    "end": "1633480"
  },
  {
    "text": "forward and use Kafka as integration between our services so even sourcing is",
    "start": "1633480",
    "end": "1639279"
  },
  {
    "text": "about recording and storing business facts and making decision based on them",
    "start": "1639279",
    "end": "1644360"
  },
  {
    "text": "so about durability and the quality of your data and even streaming is about moving data",
    "start": "1644360",
    "end": "1652520"
  },
  {
    "text": "from one place to another and that's the main difference",
    "start": "1652520",
    "end": "1658520"
  },
  {
    "text": "even though all of that sounds similar but really it's actually",
    "start": "1658520",
    "end": "1665679"
  },
  {
    "text": "not so okay I think that I bored you a bit with all those technical details then",
    "start": "1665679",
    "end": "1672640"
  },
  {
    "start": "1668000",
    "end": "1836000"
  },
  {
    "text": "let's get Jordan and as I said Jordan",
    "start": "1672640",
    "end": "1678720"
  },
  {
    "text": "I told you that it's a head of sales right but actually it's our hype manager",
    "start": "1678720",
    "end": "1684960"
  },
  {
    "text": "as you can see Jordan is able to deal really well with people and Jordan",
    "start": "1684960",
    "end": "1691080"
  },
  {
    "text": "prepared the strategy for our product because you already know that building",
    "start": "1691080",
    "end": "1696760"
  },
  {
    "text": "even sourcing system you don't need to drop those guarantees like strong",
    "start": "1696760",
    "end": "1702120"
  },
  {
    "text": "consistency you can be still sure that you are making decision based on the latest state which is challenging if you",
    "start": "1702120",
    "end": "1710399"
  },
  {
    "text": "want to build the worst even sourcing system right because it's actually not that simple as it seem so we needed to",
    "start": "1710399",
    "end": "1717720"
  },
  {
    "text": "do some tricks so we wanted to build something like a revolute because we",
    "start": "1717720",
    "end": "1723000"
  },
  {
    "text": "wanted to have like the good matching of the domain just to show people that we",
    "start": "1723000",
    "end": "1728240"
  },
  {
    "text": "care about that we don't and of course we wanted to be kind of also like a",
    "start": "1728240",
    "end": "1734559"
  },
  {
    "text": "Salesforce exposing apis API first Etc and we also wanted to be like a uber but",
    "start": "1734559",
    "end": "1742600"
  },
  {
    "text": "no we we don't want to run taxes but we just want to be running our business for",
    "start": "1742600",
    "end": "1748919"
  },
  {
    "text": "like 10 years and still not be profitable yeah it's a good strategy for",
    "start": "1748919",
    "end": "1755399"
  },
  {
    "text": "the wor system and we also wanted to use all clouds like all if there is any new",
    "start": "1755399",
    "end": "1762600"
  },
  {
    "text": "today we will use it right multic cloud is the goal and",
    "start": "1762600",
    "end": "1769279"
  },
  {
    "text": "we also want to be on premise because why not like I heard like dhh is saying",
    "start": "1769279",
    "end": "1775039"
  },
  {
    "text": "that we should all be on premise right then we will also be on premise why not why not and we will also use",
    "start": "1775039",
    "end": "1784080"
  },
  {
    "text": "blockchain blockchain um sorry that was our initial",
    "start": "1784080",
    "end": "1789200"
  },
  {
    "text": "strategy gen Ai and all of that is creating a ticking",
    "start": "1789200",
    "end": "1797080"
  },
  {
    "text": "bump and thinking bomb is something that we want to achieve because we want to get a lot of money and thanks to this",
    "start": "1797080",
    "end": "1805000"
  },
  {
    "text": "money we can be cheating our stakeholders like you know we are really busy we need we are building a serious",
    "start": "1805000",
    "end": "1812159"
  },
  {
    "text": "product serious architecture when this will be ready soon soon and uh of course at some point even",
    "start": "1812159",
    "end": "1822519"
  },
  {
    "text": "the the most polite I wouldn't like to use other words stakeholders would would",
    "start": "1822519",
    "end": "1829080"
  },
  {
    "text": "realize that we are cheating so we need to do more so this is Morris as I",
    "start": "1829080",
    "end": "1834919"
  },
  {
    "text": "mentioned Morris is our head of development and our strategy will be to build our",
    "start": "1834919",
    "end": "1842840"
  },
  {
    "start": "1836000",
    "end": "1978000"
  },
  {
    "text": "own event store right because that's what we are doing if we are choosing new",
    "start": "1842840",
    "end": "1848120"
  },
  {
    "text": "project and we want to build uh a new project and use as a database relational",
    "start": "1848120",
    "end": "1853720"
  },
  {
    "text": "database then we are saying let's build new relational database",
    "start": "1853720",
    "end": "1858919"
  },
  {
    "text": "right no but for even store that's a common case and I even went to NDC Oslo two",
    "start": "1858919",
    "end": "1867880"
  },
  {
    "text": "years ago you can check that on internet and I show you how to build even store",
    "start": "1867880",
    "end": "1873000"
  },
  {
    "text": "in one hour and actually most of that I built in a 25 minutes and then I was",
    "start": "1873000",
    "end": "1878440"
  },
  {
    "text": "doing claim jokes that you heard like today right I mean no this was much more",
    "start": "1878440",
    "end": "1884279"
  },
  {
    "text": "technical but I just did a social proof right for our stakeholders and so why is",
    "start": "1884279",
    "end": "1891600"
  },
  {
    "text": "it building our own event store so hard so let's say that as I mentioned we want",
    "start": "1891600",
    "end": "1897000"
  },
  {
    "text": "to be um multicloud and on premise then that means that we need to",
    "start": "1897000",
    "end": "1903880"
  },
  {
    "text": "support if either Cloud native databases which are quite often",
    "start": "1903880",
    "end": "1909360"
  },
  {
    "text": "non-trivial and we need to also support like for example postgress or other database that we can",
    "start": "1909360",
    "end": "1916480"
  },
  {
    "text": "run on premise and we of course want to start because",
    "start": "1916480",
    "end": "1922159"
  },
  {
    "text": "we are here in the NDC so we start with the Net Technology but we won't stop on",
    "start": "1922159",
    "end": "1929399"
  },
  {
    "text": "that because we will also write our API to uh to support also Java and nodejs",
    "start": "1929399",
    "end": "1936960"
  },
  {
    "text": "but why and because Michael told us that it",
    "start": "1936960",
    "end": "1942679"
  },
  {
    "text": "will be much easier to get more people to build the event store because and",
    "start": "1942679",
    "end": "1948559"
  },
  {
    "text": "handle and create our services because each service can be run in a different",
    "start": "1948559",
    "end": "1953960"
  },
  {
    "text": "technology it will be easier to hire maybe that's some strategy maybe",
    "start": "1953960",
    "end": "1960159"
  },
  {
    "text": "not only for the worst event sourcing system but that will actually mean that",
    "start": "1960159",
    "end": "1965200"
  },
  {
    "text": "we will start with a simple event store but we will need to maintain all the implementations for",
    "start": "1965200",
    "end": "1973519"
  },
  {
    "text": "all those other services right and that's quite common the case",
    "start": "1973519",
    "end": "1979399"
  },
  {
    "start": "1978000",
    "end": "2151000"
  },
  {
    "text": "and architecture and that that will be another question for you I hope that this time there will be someone that",
    "start": "1979399",
    "end": "1986159"
  },
  {
    "text": "know the answer so what's",
    "start": "1986159",
    "end": "1990600"
  },
  {
    "text": "that uh ex could you repeat onion onion",
    "start": "1992519",
    "end": "1997960"
  },
  {
    "text": "no it's not an onion I mean it looks similar it's",
    "start": "1997960",
    "end": "2003720"
  },
  {
    "text": "Atlantis and Atlantis in the ancient Greece was pictured as the the most",
    "start": "2004159",
    "end": "2010919"
  },
  {
    "text": "sophisticated culture the most Innovative like the the best of the best",
    "start": "2010919",
    "end": "2016679"
  },
  {
    "text": "of the Technical Solutions and when I thought about that when we were doing those workshops that I saw you at the",
    "start": "2016679",
    "end": "2023159"
  },
  {
    "text": "beginning then I F like hell that looks like a clean",
    "start": "2023159",
    "end": "2029720"
  },
  {
    "text": "architecture so we decided that we will use the the clean architecture because",
    "start": "2029720",
    "end": "2035120"
  },
  {
    "text": "it looks like a maze it looks like a on own and do you know what how Atlantis",
    "start": "2035120",
    "end": "2041519"
  },
  {
    "text": "has finished its lifetime then he told that he's never been there he's not",
    "start": "2041519",
    "end": "2049320"
  },
  {
    "text": "lying and Atlantis sunk into the ocean eventually and that's perfect case for",
    "start": "2049320",
    "end": "2056079"
  },
  {
    "text": "our scenario because we want our project to eventually sunk but if they are here",
    "start": "2056079",
    "end": "2062079"
  },
  {
    "text": "like are there any like a clean coders cool",
    "start": "2062079",
    "end": "2068280"
  },
  {
    "text": "then Denis could said like yeah we can use use cases right because use cases will allow to focus on the domain on the",
    "start": "2068280",
    "end": "2075960"
  },
  {
    "text": "business uh Etc and if Denny told that but he",
    "start": "2075960",
    "end": "2081760"
  },
  {
    "text": "didn't then he would be actually right but show me the use cases on those",
    "start": "2081760",
    "end": "2087200"
  },
  {
    "text": "screens I just took it from one of the clean architecture codes like the picture of course you can Implement",
    "start": "2087200",
    "end": "2094280"
  },
  {
    "text": "clean architecture differently but that's the most common case like you have the persistence and then you have",
    "start": "2094280",
    "end": "2100160"
  },
  {
    "text": "like migrations translators and infrastructure uh events tracking",
    "start": "2100160",
    "end": "2107280"
  },
  {
    "text": "validation yada yada so this is a perfect scenario for us because we want",
    "start": "2107280",
    "end": "2112520"
  },
  {
    "text": "to make stuff complicated Mash together hard to maintain and we want to be",
    "start": "2112520",
    "end": "2118640"
  },
  {
    "text": "circling around and capup Theorem we also are",
    "start": "2118640",
    "end": "2123880"
  },
  {
    "text": "aware of the cap theorem because as I said to make something work we need to",
    "start": "2123880",
    "end": "2129000"
  },
  {
    "text": "be sure that accidentally we won't create the proper system right and the",
    "start": "2129000",
    "end": "2134480"
  },
  {
    "text": "cap theorem is saying that we cannot have the system that is both available",
    "start": "2134480",
    "end": "2139960"
  },
  {
    "text": "and consistent and also we are also including the network partitioning which",
    "start": "2139960",
    "end": "2146040"
  },
  {
    "text": "means that we are we won't be losing data on the traffic and I mention you that we have",
    "start": "2146040",
    "end": "2153480"
  },
  {
    "start": "2151000",
    "end": "2423000"
  },
  {
    "text": "the strong consistency in even sourcing and we can we have optimistic concurrency we we know that if we are",
    "start": "2153480",
    "end": "2160960"
  },
  {
    "text": "making decision then we are making it based on the latest state but that's not",
    "start": "2160960",
    "end": "2166200"
  },
  {
    "text": "the case for actually for the re models because quite often not in all solution",
    "start": "2166200",
    "end": "2174119"
  },
  {
    "text": "but for re models we have this eventual consistency and also for the communication between Services we have",
    "start": "2174119",
    "end": "2181079"
  },
  {
    "text": "that and that's fine but we can do a a bit of magic to spoil that as I",
    "start": "2181079",
    "end": "2186920"
  },
  {
    "text": "mentioned eventual inconsistency we can have events disordering and we can have",
    "start": "2186920",
    "end": "2192720"
  },
  {
    "text": "item neny when our business and read model can be broken so that's good",
    "start": "2192720",
    "end": "2198800"
  },
  {
    "text": "that's good and network partitioning I already mentioned that we will be doing",
    "start": "2198800",
    "end": "2205640"
  },
  {
    "text": "multicloud and on premise see how Roy is happy when he learned that he will be",
    "start": "2205640",
    "end": "2212040"
  },
  {
    "text": "needing to hosting that and delivery guarantees so",
    "start": "2212040",
    "end": "2218119"
  },
  {
    "text": "exactly once delivery like a Holy Grail like all all uh Solutions like Kafka",
    "start": "2218119",
    "end": "2225000"
  },
  {
    "text": "like a pools are like any streaming solution is saying that if you publish",
    "start": "2225000",
    "end": "2230240"
  },
  {
    "text": "message then you will get it exactly once but let's have a look how it is in reality so if we are appending like",
    "start": "2230240",
    "end": "2237920"
  },
  {
    "text": "storing State and at the same time trying to append new event then it might be that we store the data in database",
    "start": "2237920",
    "end": "2245119"
  },
  {
    "text": "and when we publish then our service is crushed and no message will be sent and",
    "start": "2245119",
    "end": "2250640"
  },
  {
    "text": "then we are getting inconsistent State potentially then even if we manage to",
    "start": "2250640",
    "end": "2256119"
  },
  {
    "text": "send it then our Q May crash like actually that happens really uh it might",
    "start": "2256119",
    "end": "2263280"
  },
  {
    "text": "be the case that it didn't crash but maybe retention policy just kicked in",
    "start": "2263280",
    "end": "2268440"
  },
  {
    "text": "like the default uh retention policy for messages in CFC I think two",
    "start": "2268440",
    "end": "2274000"
  },
  {
    "text": "weeks and then delivery might be CR because our service might not be",
    "start": "2274000",
    "end": "2279560"
  },
  {
    "text": "available maximum number of rri has been reached or any other reason like even",
    "start": "2279560",
    "end": "2285599"
  },
  {
    "text": "back in our code I mean we don't do backs but we will in France",
    "start": "2285599",
    "end": "2291160"
  },
  {
    "text": "right and then if if we even get the message then we might have an issue and",
    "start": "2291160",
    "end": "2296319"
  },
  {
    "text": "don't store the message so in in in general getting at at least once",
    "start": "2296319",
    "end": "2302839"
  },
  {
    "text": "guarantee is really hard because of that so because all of those cases in the",
    "start": "2302839",
    "end": "2307960"
  },
  {
    "text": "meantime can just fail which is good for us so we could use outbox pattern but we",
    "start": "2307960",
    "end": "2314800"
  },
  {
    "text": "won't and let me tell you why because outbut SP turn means that um you are",
    "start": "2314800",
    "end": "2321839"
  },
  {
    "text": "storing in your database your state update together with the message in the",
    "start": "2321839",
    "end": "2327000"
  },
  {
    "text": "same transaction so either both state and message are stored at the same time",
    "start": "2327000",
    "end": "2332880"
  },
  {
    "text": "or none of them so when you store that into for example some table with the",
    "start": "2332880",
    "end": "2338079"
  },
  {
    "text": "messages or if you are using event sourcing you just appended the event then there is either some process that",
    "start": "2338079",
    "end": "2344680"
  },
  {
    "text": "continuously try to pull new messages and forwards them or you can use some CDC so push based notification and",
    "start": "2344680",
    "end": "2351960"
  },
  {
    "text": "forward them and all of those me messaging system have built in retries",
    "start": "2351960",
    "end": "2358119"
  },
  {
    "text": "so they will be trying to continuously retry and reprocess that but that",
    "start": "2358119",
    "end": "2363359"
  },
  {
    "text": "creates the item potency because it's not that someone wants to spoil our",
    "start": "2363359",
    "end": "2368560"
  },
  {
    "text": "system like we did in in France right people build those retries to make the",
    "start": "2368560",
    "end": "2374920"
  },
  {
    "text": "processing and ensuring that once you send the message that you will get it but technically that means that you want",
    "start": "2374920",
    "end": "2382560"
  },
  {
    "text": "like the exactly once delivery is impossible only at least once exactly",
    "start": "2382560",
    "end": "2389400"
  },
  {
    "text": "once processing yes if you handle that on application side which we don't",
    "start": "2389400",
    "end": "2394480"
  },
  {
    "text": "intend to do and so in instead of cap theorem we will do the crap",
    "start": "2394480",
    "end": "2401319"
  },
  {
    "text": "theorem which means that we will ask our Dev team to ensure that we have",
    "start": "2401319",
    "end": "2407839"
  },
  {
    "text": "100% consistency 100% availability and",
    "start": "2407839",
    "end": "2414040"
  },
  {
    "text": "100% uh toleran for Network partitioning I'm sure that some of you heard that",
    "start": "2414040",
    "end": "2419880"
  },
  {
    "text": "words from your managers right I did and",
    "start": "2419880",
    "end": "2425040"
  },
  {
    "text": "speaking about the managers so we already know that we can build a",
    "start": "2425040",
    "end": "2430400"
  },
  {
    "text": "product model that won't help us to use event sourcing we can use some strates",
    "start": "2430400",
    "end": "2435560"
  },
  {
    "text": "in architecture to make that harder but that's not enough so we wanted to do the",
    "start": "2435560",
    "end": "2442079"
  },
  {
    "text": "product design and unfortunately the next obstacle to win the worst event",
    "start": "2442079",
    "end": "2448240"
  },
  {
    "text": "sourcing uh system title is that actually events are helping in your",
    "start": "2448240",
    "end": "2454160"
  },
  {
    "text": "running your business process because those are screens from event storming",
    "start": "2454160",
    "end": "2459720"
  },
  {
    "text": "event modeling anyone is using that yeah some of you so for others I",
    "start": "2459720",
    "end": "2467560"
  },
  {
    "text": "really encourage that you to check that I mean at least if you don't want to",
    "start": "2467560",
    "end": "2473000"
  },
  {
    "text": "build the worst system right because those techniques are like we are grouping both business and Technical",
    "start": "2473000",
    "end": "2479800"
  },
  {
    "text": "people and we are starting to think about the events so critical parts of",
    "start": "2479800",
    "end": "2484960"
  },
  {
    "text": "our system because business because events are technically both um like",
    "start": "2484960",
    "end": "2491680"
  },
  {
    "text": "showing the what's happening in the business process and they can also be mapped to",
    "start": "2491680",
    "end": "2497880"
  },
  {
    "text": "the technical messages so that helps to streamline discussion between business and Technical people but luckily we have",
    "start": "2497880",
    "end": "2505800"
  },
  {
    "text": "Katherine because if we put the Kine there then she can derail those",
    "start": "2505800",
    "end": "2510960"
  },
  {
    "text": "discussions right and we can have a skewed modeling so for for instance we",
    "start": "2510960",
    "end": "2518280"
  },
  {
    "text": "can use the pattern like CR sourcing CR sourcing is like we are doing CR but on",
    "start": "2518280",
    "end": "2524560"
  },
  {
    "text": "events so instead of having events like transaction initiated payment method",
    "start": "2524560",
    "end": "2530400"
  },
  {
    "text": "selected payment confirmed fraud transaction detected we will be just",
    "start": "2530400",
    "end": "2535839"
  },
  {
    "text": "storing transaction created upd updated deleted so because of that we will be",
    "start": "2535839",
    "end": "2542480"
  },
  {
    "text": "losing one of the biggest benefits of event sourcing so having the granular business information about the process",
    "start": "2542480",
    "end": "2549520"
  },
  {
    "text": "but flattening that to just understanding of created updated deleted and then the subscriber will need to try",
    "start": "2549520",
    "end": "2556720"
  },
  {
    "text": "to guess what has changed the other pattern that we want to use is the other way rout so property",
    "start": "2556720",
    "end": "2563960"
  },
  {
    "text": "sourcing instead of having a single event like for example user personal",
    "start": "2563960",
    "end": "2569119"
  },
  {
    "text": "data uh update updated or refined then we for each of the property of this",
    "start": "2569119",
    "end": "2575760"
  },
  {
    "text": "event we will provide a dedicated event so user first name updated user last",
    "start": "2575760",
    "end": "2581440"
  },
  {
    "text": "name updated uh user address change user email change you can imagine how the",
    "start": "2581440",
    "end": "2587720"
  },
  {
    "text": "comp complexity or the how complicated will be to handle all of that because we",
    "start": "2587720",
    "end": "2593680"
  },
  {
    "text": "will be adding a lot of such events and the other anti patterns that",
    "start": "2593680",
    "end": "2598720"
  },
  {
    "text": "we want to use is passive aggressive events did anyone of you heard that",
    "start": "2598720",
    "end": "2605200"
  },
  {
    "text": "phrase like the the trash bin is full or that the dishwasher has finished",
    "start": "2605200",
    "end": "2615440"
  },
  {
    "text": "cleaning none of you okay I did so",
    "start": "2615440",
    "end": "2620880"
  },
  {
    "text": "passive aggressive events is the pattern where we are changing we are ignoring",
    "start": "2620880",
    "end": "2626480"
  },
  {
    "text": "that there are cases valid cases where we want to have the direct communication",
    "start": "2626480",
    "end": "2632599"
  },
  {
    "text": "and tell someone to do something or in our technical meaning meaning send a",
    "start": "2632599",
    "end": "2638200"
  },
  {
    "text": "commment some intention to do something and then someone can say like not at the moment I'm busy just watching",
    "start": "2638200",
    "end": "2645359"
  },
  {
    "text": "Netflix or in our case it's really important in system to model the",
    "start": "2645359",
    "end": "2651480"
  },
  {
    "text": "communication as it is in reality so sometimes of course we should prefer events because they give us the Loosely",
    "start": "2651480",
    "end": "2658839"
  },
  {
    "text": "coupling potentially and and so on and so forth but sometimes it's really required to to have a clear intention to",
    "start": "2658839",
    "end": "2666319"
  },
  {
    "text": "do something so instead of request pay request payment command we will be",
    "start": "2666319",
    "end": "2672200"
  },
  {
    "text": "publishing like order confirmed and you just do whatever you want so that",
    "start": "2672200",
    "end": "2678240"
  },
  {
    "text": "creates an issue because then tracking what precisely has happened or what",
    "start": "2678240",
    "end": "2683640"
  },
  {
    "text": "reaction we expect from from other services will be much much",
    "start": "2683640",
    "end": "2689599"
  },
  {
    "text": "harder and stream design stream design as any other storage",
    "start": "2689599",
    "end": "2697760"
  },
  {
    "start": "2690000",
    "end": "2875000"
  },
  {
    "text": "technique because even sourcing in the natural is a storage technique like relational databases document approach",
    "start": "2697760",
    "end": "2704760"
  },
  {
    "text": "even sourcing is also storage technique so with the relational databases we are",
    "start": "2704760",
    "end": "2710559"
  },
  {
    "text": "normalizing data document approach we are denormalizing and in in even",
    "start": "2710559",
    "end": "2716200"
  },
  {
    "text": "sourcing we we need to have also our patterns so the first one and the the",
    "start": "2716200",
    "end": "2722800"
  },
  {
    "text": "the thing that you you you usually learn at the end why you should be doing that",
    "start": "2722800",
    "end": "2728200"
  },
  {
    "text": "since the beginning and we of course in France we were telling that we learned that at the end that and that surprised",
    "start": "2728200",
    "end": "2735000"
  },
  {
    "text": "us is that the having the clear distinction between the private and",
    "start": "2735000",
    "end": "2740119"
  },
  {
    "text": "public events or in other words internal and external or as DDD likes to phrase",
    "start": "2740119",
    "end": "2746640"
  },
  {
    "text": "it domain events and integration events why is it so important because let's say",
    "start": "2746640",
    "end": "2752640"
  },
  {
    "text": "that we have those five services so payments configuration report reporting anti fraud detection and notification so",
    "start": "2752640",
    "end": "2760520"
  },
  {
    "text": "if we have even sourcing in our payment module then that means that all the",
    "start": "2760520",
    "end": "2767359"
  },
  {
    "text": "other modules if we just push all those events to the queue then all the other",
    "start": "2767359",
    "end": "2774119"
  },
  {
    "text": "modules will need understand what all those granular events like transaction",
    "start": "2774119",
    "end": "2779200"
  },
  {
    "text": "initiated payment method selected payment sent via Gateway means because",
    "start": "2779200",
    "end": "2784520"
  },
  {
    "text": "they need to gather a bit of the inform information from each of those events to to run the processing and that creates a",
    "start": "2784520",
    "end": "2792319"
  },
  {
    "text": "lot of coupling and also leaking abstraction and if we Event Source",
    "start": "2792319",
    "end": "2798960"
  },
  {
    "text": "everything and we will be publishing all the events all our granular business",
    "start": "2798960",
    "end": "2804640"
  },
  {
    "text": "events outside without doing any other techniques then that will create such a",
    "start": "2804640",
    "end": "2810880"
  },
  {
    "text": "spider web and this is not the place that you would like to be it's called",
    "start": "2810880",
    "end": "2816400"
  },
  {
    "text": "hell or distributed monolith and I've been there don't",
    "start": "2816400",
    "end": "2822880"
  },
  {
    "text": "recommend that so how to deal with that it appears that most often those other",
    "start": "2822880",
    "end": "2829680"
  },
  {
    "text": "modules don't care about our granular information who cares that someone",
    "start": "2829680",
    "end": "2834760"
  },
  {
    "text": "selected the payment method if the transaction wasn't uh completed most of",
    "start": "2834760",
    "end": "2841359"
  },
  {
    "text": "the time they care about the critical parts of the business process so then you can think about the internal events",
    "start": "2841359",
    "end": "2848520"
  },
  {
    "text": "as those that should be understood inside our module and public events or",
    "start": "2848520",
    "end": "2854680"
  },
  {
    "text": "external as understood in the global space so instead of publishing all those",
    "start": "2854680",
    "end": "2860440"
  },
  {
    "text": "granular events we could potentially just publish payment completed or maybe",
    "start": "2860440",
    "end": "2865839"
  },
  {
    "text": "some other checkpoint mapping be before we send it from the granular information",
    "start": "2865839",
    "end": "2871760"
  },
  {
    "text": "and reaching them and sending like a summary event but of course of course we won't",
    "start": "2871760",
    "end": "2877440"
  },
  {
    "start": "2875000",
    "end": "3189000"
  },
  {
    "text": "be doing that and let me tell you about the other thing which is extremely important in event sourcing and of",
    "start": "2877440",
    "end": "2884040"
  },
  {
    "text": "course we will be ignoring that so long living streams so usually when I'm",
    "start": "2884040",
    "end": "2889079"
  },
  {
    "text": "trying to teach and I'm doing Workshop or consultancy then people are asking me okay but what about bank accounts see",
    "start": "2889079",
    "end": "2896240"
  },
  {
    "text": "how many uh transactions you might have I think that I calculated for one of my",
    "start": "2896240",
    "end": "2902200"
  },
  {
    "text": "talk like because I had my bank account created when I was 18 years old so I",
    "start": "2902200",
    "end": "2908599"
  },
  {
    "text": "could have I didn't check that like 30,000 of transaction if I had like free",
    "start": "2908599",
    "end": "2914119"
  },
  {
    "text": "transaction per day then that wouldn't be good if we need to read all those",
    "start": "2914119",
    "end": "2920440"
  },
  {
    "text": "events and M shilov did a thought experiment to show what's the impact of",
    "start": "2920440",
    "end": "2927079"
  },
  {
    "text": "the length of the stream to the io operation so let's say that if we are",
    "start": "2927079",
    "end": "2932400"
  },
  {
    "text": "reading one event then it's one IO operation if we are storing one event",
    "start": "2932400",
    "end": "2937799"
  },
  {
    "text": "then it's one IO operation again so this is showing the line how the time is",
    "start": "2937799",
    "end": "2943920"
  },
  {
    "text": "passing like let's say every second we are appending new event always to the empty stream so this is the line are",
    "start": "2943920",
    "end": "2951079"
  },
  {
    "text": "grow it's all fine so this is like one iio operation zero for reads one for writes if we have",
    "start": "2951079",
    "end": "2959000"
  },
  {
    "text": "stream with one event then that means that we are doing one read and one right which is two iops for two events is free",
    "start": "2959000",
    "end": "2967160"
  },
  {
    "text": "and so on and so forth for 10 it will be like 10 IO operation and one an",
    "start": "2967160",
    "end": "2973079"
  },
  {
    "text": "additional for right but if we cumulate how to get to the stream that have five",
    "start": "2973079",
    "end": "2979240"
  },
  {
    "text": "events then actually to get to that point we need to do 20 IO",
    "start": "2979240",
    "end": "2984960"
  },
  {
    "text": "operation and for 10 events it's 65 so as you see it start to escalate and",
    "start": "2984960",
    "end": "2991480"
  },
  {
    "text": "that's also visible on those diagrams the blue line is for one event and here",
    "start": "2991480",
    "end": "2996760"
  },
  {
    "text": "here the green line is for 10 events and it's still like a linear growth a bit",
    "start": "2996760",
    "end": "3002720"
  },
  {
    "text": "worse but still sounds manageable for 100 events things start to",
    "start": "3002720",
    "end": "3009079"
  },
  {
    "text": "escalate and I will show you for 1,000 events and you might not see that but",
    "start": "3009079",
    "end": "3014480"
  },
  {
    "text": "those previous lines are at the bottom so that clearly says I mean even",
    "start": "3014480",
    "end": "3020480"
  },
  {
    "text": "stores are doing better it's not a real thing like this is like a real each",
    "start": "3020480",
    "end": "3026960"
  },
  {
    "text": "reading each event is like reading one IO they they are optimized for that but",
    "start": "3026960",
    "end": "3032559"
  },
  {
    "text": "still it clearly shows that the L the longer stream you have the slower it",
    "start": "3032559",
    "end": "3038200"
  },
  {
    "text": "gets so no issue we'll use snapshots that's the most common answer for that",
    "start": "3038200",
    "end": "3044319"
  },
  {
    "text": "and of course that's what we did because that was good for our project but not",
    "start": "3044319",
    "end": "3049480"
  },
  {
    "text": "necessarily a good practice let me explain you why because if we try to do",
    "start": "3049480",
    "end": "3056079"
  },
  {
    "text": "the snapshot after each event so store our state somewhere else then it means",
    "start": "3056079",
    "end": "3061280"
  },
  {
    "text": "that we are potentially doubling the size so if we start with that then at some point we realize that okay that",
    "start": "3061280",
    "end": "3067880"
  },
  {
    "text": "doesn't make much sense then let's try to do it every some period of",
    "start": "3067880",
    "end": "3074799"
  },
  {
    "text": "time and then we can read the snapshot and all the events that were appended",
    "start": "3074799",
    "end": "3080760"
  },
  {
    "text": "after the snapshot was created but how to define how often is enough like",
    "start": "3080760",
    "end": "3086200"
  },
  {
    "text": "everything minutes every day every 10 events every hour or specific event type",
    "start": "3086200",
    "end": "3093280"
  },
  {
    "text": "I can tell you that you definitely will be wrong about how often is enough and",
    "start": "3093280",
    "end": "3099520"
  },
  {
    "text": "usually it means that um in the case like for example break fighter if you",
    "start": "3099520",
    "end": "3105440"
  },
  {
    "text": "are building a Commerce platform then then you will have the most the biggest number of events register it and then",
    "start": "3105440",
    "end": "3112520"
  },
  {
    "text": "everything will fail so it is like a HDD pattern which is like hope driven design",
    "start": "3112520",
    "end": "3118680"
  },
  {
    "text": "because we are hoping that we will be right but we won't at some point because",
    "start": "3118680",
    "end": "3124599"
  },
  {
    "text": "snapshots are cash and we all know that if you try to solve an issue with a cash",
    "start": "3124599",
    "end": "3129839"
  },
  {
    "text": "then you have two issues now right and that's what Roy told me at",
    "start": "3129839",
    "end": "3135760"
  },
  {
    "text": "least so we could do closing the books and closing the book means that we are",
    "start": "3135760",
    "end": "3142520"
  },
  {
    "text": "uh instead of keeping a long stream then we might realize that accounting doesn't",
    "start": "3142520",
    "end": "3147760"
  },
  {
    "text": "work like that and we are having like a closing accounting mouth and opening a",
    "start": "3147760",
    "end": "3152960"
  },
  {
    "text": "new one so instead of keeping a long stream we could keep and break it down",
    "start": "3152960",
    "end": "3158440"
  },
  {
    "text": "into streams instead of account to accounting month and then for each month",
    "start": "3158440",
    "end": "3164359"
  },
  {
    "text": "we will get another stream and make it more manageable so see this is like each",
    "start": "3164359",
    "end": "3170119"
  },
  {
    "text": "stream would start with the accounting mouth open and all those that were closed with the accounting mouth closed",
    "start": "3170119",
    "end": "3176680"
  },
  {
    "text": "and that creates usually the man the manageable size of the stream but",
    "start": "3176680",
    "end": "3183839"
  },
  {
    "text": "still did anyone heard about closing the books not in the France",
    "start": "3183839",
    "end": "3189640"
  },
  {
    "start": "3189000",
    "end": "3450000"
  },
  {
    "text": "project so the final thing is that if that wasn't be enough then just to",
    "start": "3189640",
    "end": "3197680"
  },
  {
    "text": "double check like to to do this Final Touch the chef keiss we wanted to build",
    "start": "3197680",
    "end": "3203640"
  },
  {
    "text": "the system to ensure that accidentally people find out how to do it right because unfortunately people tend to do",
    "start": "3203640",
    "end": "3210680"
  },
  {
    "text": "things right at some point like they learn they make it better so we will create the system so we will take",
    "start": "3210680",
    "end": "3217880"
  },
  {
    "text": "experienced people opinionated people like rock style developers that are",
    "start": "3217880",
    "end": "3223280"
  },
  {
    "text": "experienced but not in those Technologies a bit similar but they will",
    "start": "3223280",
    "end": "3229200"
  },
  {
    "text": "like say like hey it just like or why don't you do this one insert right",
    "start": "3229200",
    "end": "3236599"
  },
  {
    "text": "and we were also inspired by William Deming so um that means that a bad",
    "start": "3236599",
    "end": "3242520"
  },
  {
    "text": "system will beat a good person every time and that's what we're going to do and we also Inspire by the Conway law so",
    "start": "3242520",
    "end": "3249960"
  },
  {
    "text": "we will do use Conway law to to make our system worse because we will create",
    "start": "3249960",
    "end": "3257359"
  },
  {
    "text": "organization that will impact in and create the wor architecture also so",
    "start": "3257359",
    "end": "3263880"
  },
  {
    "text": "right now they are really popular the team topology so of course we will use them but in the",
    "start": "3263880",
    "end": "3269559"
  },
  {
    "text": "skewed perspective so we will create the stream align team that is so cross",
    "start": "3269559",
    "end": "3275640"
  },
  {
    "text": "functional that they don't they are not good at anything we will create the",
    "start": "3275640",
    "end": "3280960"
  },
  {
    "text": "enabling team so the team that in in fur should enable but they will be like yeah",
    "start": "3280960",
    "end": "3286480"
  },
  {
    "text": "we are core team we are busy doing our core staff right and complicated",
    "start": "3286480",
    "end": "3292680"
  },
  {
    "text": "subsystem team most of our teams will be complicated subsystem teams because as you know it's complicated and the",
    "start": "3292680",
    "end": "3299680"
  },
  {
    "text": "platform team of course and we will use sapper which is great because at the",
    "start": "3299680",
    "end": "3305559"
  },
  {
    "text": "beginning when I saw this picture of saf then I said like well that's a great joke someone make a pasage of the agile",
    "start": "3305559",
    "end": "3313559"
  },
  {
    "text": "and then I realized that this is real a thing so we use it and of course we will use",
    "start": "3313559",
    "end": "3320319"
  },
  {
    "text": "jira and we will use the fear uncertainty and doubt we will just use",
    "start": "3320319",
    "end": "3326039"
  },
  {
    "text": "all all the best management strategies and won't people quit well we will use",
    "start": "3326039",
    "end": "3332480"
  },
  {
    "text": "also Peter Principle which means that you are getting in the higher rank until",
    "start": "3332480",
    "end": "3339760"
  },
  {
    "text": "you are reaching the your the highest level of incompetence so our old people",
    "start": "3339760",
    "end": "3345200"
  },
  {
    "text": "will reach that level we will be if they were complaining then we will move them up Etc until they realize that they are",
    "start": "3345200",
    "end": "3352880"
  },
  {
    "text": "incompetent and better be quiet and we keep them busy in Poland we are",
    "start": "3352880",
    "end": "3359039"
  },
  {
    "text": "saying that you are running with a Empty Barrel so that's what we're going to do remember we will build our own event",
    "start": "3359039",
    "end": "3365599"
  },
  {
    "text": "store we will use clean architecture and we will pay them a lot because Jordan",
    "start": "3365599",
    "end": "3371039"
  },
  {
    "text": "will handle that right and we will let them play with the",
    "start": "3371039",
    "end": "3376079"
  },
  {
    "text": "fancy technology stack solve those developer Sudoku Etc every day without",
    "start": "3376079",
    "end": "3383039"
  },
  {
    "text": "solving the real case and what if all of that won't be",
    "start": "3383039",
    "end": "3388599"
  },
  {
    "text": "enough any other ideas we will hire",
    "start": "3388599",
    "end": "3397440"
  },
  {
    "text": "consultant and thank you that's",
    "start": "3397880",
    "end": "3402318"
  },
  {
    "text": "[Applause] all so if you scan this QR code there",
    "start": "3403110",
    "end": "3410280"
  },
  {
    "text": "will be a link to my article which is like much shortened and uh with uh less",
    "start": "3410280",
    "end": "3415720"
  },
  {
    "text": "uh lame jokes uh that you can also read and maybe share with your colleagues and",
    "start": "3415720",
    "end": "3421319"
  },
  {
    "text": "I'm here the whole day also tomorrow so don't be shy to uh go to me and uh and",
    "start": "3421319",
    "end": "3428119"
  },
  {
    "text": "talk I'm really happy to discuss that not only how to build the words but also like how to build a good one yes Marco I",
    "start": "3428119",
    "end": "3435640"
  },
  {
    "text": "have an idea to make it yeah something",
    "start": "3435640",
    "end": "3441519"
  },
  {
    "text": "yeah God damn it that will be for the next Edition",
    "start": "3441680",
    "end": "3447280"
  },
  {
    "text": "thank you",
    "start": "3447280",
    "end": "3450520"
  }
]