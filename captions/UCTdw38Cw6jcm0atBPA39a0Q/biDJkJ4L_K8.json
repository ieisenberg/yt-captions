[
  {
    "start": "0",
    "end": "320000"
  },
  {
    "text": "so Bonjour - moon hello everyone my name is Kevin and this is Christophe we both",
    "start": "8490",
    "end": "14820"
  },
  {
    "text": "come from creature which is a French company that does advertisement retargeting and we are here to talk to",
    "start": "14820",
    "end": "21060"
  },
  {
    "text": "you about debugging so to give a bit of context why debugging créteil process",
    "start": "21060",
    "end": "26939"
  },
  {
    "text": "like 200 billion HTTP requests per day over thousands of servers and when you",
    "start": "26939",
    "end": "33420"
  },
  {
    "text": "work at that scale every tiny random bag the kind that has less than 1% chance of",
    "start": "33420",
    "end": "40679"
  },
  {
    "text": "happening is absolutely guaranteed to happen on one of your production servers and so we are part of the creative",
    "start": "40679",
    "end": "47730"
  },
  {
    "text": "performance team and as such one of our job is to help developers jagneauxs this",
    "start": "47730",
    "end": "54600"
  },
  {
    "text": "kind of issue when they happen in production we noticed through our investigation that we tend to approach",
    "start": "54600",
    "end": "62730"
  },
  {
    "text": "the issues with a particular mindset and that's what we'd like to share with you",
    "start": "62730",
    "end": "68909"
  },
  {
    "text": "today so this talk will really focus not on the tools but rather on the methodology",
    "start": "68909",
    "end": "75689"
  },
  {
    "text": "behind those investigations so I was talking about the mindset what is it",
    "start": "75689",
    "end": "81000"
  },
  {
    "text": "about it's very simple in fact the first thing to do when you are faced with a",
    "start": "81000",
    "end": "86430"
  },
  {
    "text": "complex issue is to gather as much data as you can it's very tempting to jump",
    "start": "86430",
    "end": "92430"
  },
  {
    "text": "directly on your tool and I still do it from time to time but you really shouldn't you really should try to",
    "start": "92430",
    "end": "98909"
  },
  {
    "text": "understand as much as the context as you can and most more importantly you need",
    "start": "98909",
    "end": "104340"
  },
  {
    "text": "to make sure that this is data that you can trust you have no idea how many hours we lost investigating stuff based",
    "start": "104340",
    "end": "112259"
  },
  {
    "text": "on forest data so once you've gathered all the data that you can the next step is to try to",
    "start": "112259",
    "end": "120149"
  },
  {
    "text": "understand what it means and it's usually the step where you will start using debugging tool or profilers to",
    "start": "120149",
    "end": "127820"
  },
  {
    "text": "understand better what it is the goal of this step is to make a hypothesis a",
    "start": "127820",
    "end": "133050"
  },
  {
    "text": "theory about what is going on with your application and once you've done that the last and very important step is to",
    "start": "133050",
    "end": "140340"
  },
  {
    "text": "actually verify very fiery that what you think is true and",
    "start": "140340",
    "end": "145560"
  },
  {
    "text": "more often than not you will find that your theory is wrong and it's okay because in the process you will have",
    "start": "145560",
    "end": "151290"
  },
  {
    "text": "learn more stuff about the issue and so you can use this new information to go",
    "start": "151290",
    "end": "156659"
  },
  {
    "text": "back to step one and try again and try again until eventually you managed to solve the problem so to illustrate this",
    "start": "156659",
    "end": "163829"
  },
  {
    "text": "we took two investigations that are a real problem that we faced at créteil",
    "start": "163829",
    "end": "170159"
  },
  {
    "text": "and where we are going to tell you about them so most of our prediction incident",
    "start": "170159",
    "end": "176849"
  },
  {
    "text": "start from the monitoring dashboard so Christophe could you work through it yes",
    "start": "176849",
    "end": "182099"
  },
  {
    "text": "so we are working in the web-scale team which is like a team under all the other",
    "start": "182099",
    "end": "187230"
  },
  {
    "text": "application teams and they have their own graphs and boards related to two",
    "start": "187230",
    "end": "193799"
  },
  {
    "text": "metrics with it to the business and when they come to us it's usually when there is a problem at the clr at the runtime",
    "start": "193799",
    "end": "200310"
  },
  {
    "text": "itself so we have this kind of so maybe I would have to talk like this we have this kind of board where you can see a",
    "start": "200310",
    "end": "208019"
  },
  {
    "text": "lot of stuff related to a.net okay what I want to show you is the kind of",
    "start": "208019",
    "end": "213060"
  },
  {
    "text": "thinking we have to keep in our investigation so we'll take an example and let's say if we have the the okay so",
    "start": "213060",
    "end": "223230"
  },
  {
    "text": "it's not working but anyway this is the demo demo good or not with us today but if you go at the CPU usage level and",
    "start": "223230",
    "end": "231569"
  },
  {
    "text": "let's say we have an increase of the CPU usage what could be the reason for CPU",
    "start": "231569",
    "end": "237449"
  },
  {
    "text": "usage that's the kind of reasoning you have to to take so it can be like we have plenty of exceptions over there so",
    "start": "237449",
    "end": "244139"
  },
  {
    "text": "we need to find a correlation between this and this one and you could show have a bunch of requests coming from the",
    "start": "244139",
    "end": "252349"
  },
  {
    "text": "outside world to our servers and so we can see an increase of requests that could impact the way the garbage",
    "start": "252349",
    "end": "259139"
  },
  {
    "text": "collection is working in our application or you can imagine even weirder",
    "start": "259139",
    "end": "265130"
  },
  {
    "text": "explanation that could be you have more Fred's doing some contention and if you",
    "start": "265130",
    "end": "270810"
  },
  {
    "text": "are using spin locks in the then we'll have like an increase of CPU because the code is spinning doing some",
    "start": "270810",
    "end": "278020"
  },
  {
    "text": "wire loop before going into kernel mode that could be some of the reason when I left University in 1989 after a degree",
    "start": "278020",
    "end": "287530"
  },
  {
    "text": "in artificial intelligence an expert system we used to call that kind of",
    "start": "287530",
    "end": "292840"
  },
  {
    "text": "thinking called AB disc in objective thinking okay so we've been told to add",
    "start": "292840",
    "end": "298030"
  },
  {
    "text": "a cat into our presentation so it went in the first slide to use birth words I view the best work so now we can stop",
    "start": "298030",
    "end": "304540"
  },
  {
    "text": "the rila they're real technical a lot of stuff thank you ok so Wow yeah",
    "start": "304540",
    "end": "312970"
  },
  {
    "text": "real stuff so you manage it myself with powerpoints yes yes ok so let's start",
    "start": "312970",
    "end": "319270"
  },
  {
    "text": "with the the first example and the first example start with this part of the of",
    "start": "319270",
    "end": "326800"
  },
  {
    "start": "320000",
    "end": "430000"
  },
  {
    "text": "the board that we are so again remember the first step is to gather as much information as you can and you have to",
    "start": "326800",
    "end": "333520"
  },
  {
    "text": "trust in what you are looking at so you first need to understand what the contention rate is so the contention",
    "start": "333520",
    "end": "339700"
  },
  {
    "text": "rate is the number of time Fred try to acquire a resource but another thread is",
    "start": "339700",
    "end": "346600"
  },
  {
    "text": "already having this resource so the second thread has to wait which is not good for scalability so once you know",
    "start": "346600",
    "end": "353440"
  },
  {
    "text": "that and if you take a look at this nice evolution of a time certain at 6 of 15th",
    "start": "353440",
    "end": "360730"
  },
  {
    "text": "of June then you can see that the number of contention and its I need to write ok",
    "start": "360730",
    "end": "366610"
  },
  {
    "text": "it's not the number it's the it's the right is drastically increasing all the time so Kevin what can we say about that",
    "start": "366610",
    "end": "373870"
  },
  {
    "text": "so as I said before before jumping on an out on your tool try to get as much",
    "start": "373870",
    "end": "380500"
  },
  {
    "text": "information as you can from this so the first interesting thing about it is that it started on 15 June so start by",
    "start": "380500",
    "end": "387580"
  },
  {
    "text": "wondering what happened that day in our case it was easy it was a new release so it's pretty obvious that we introduced",
    "start": "387580",
    "end": "394690"
  },
  {
    "text": "some kind of regression or so it is that the contention rate increase over time",
    "start": "394690",
    "end": "400180"
  },
  {
    "text": "so it seems to indicate that we have some kind of leak and last but not least",
    "start": "400180",
    "end": "405930"
  },
  {
    "text": "not it's not shown here sorry but the response time is stable which means that",
    "start": "405930",
    "end": "411479"
  },
  {
    "text": "whatever contention we have is probably happening somewhere in the background yeah yeah other words the the execution",
    "start": "411479",
    "end": "419580"
  },
  {
    "text": "of the normal workflow would be impacted so that's about all we can deduce from this so now we have to try to dig deeper",
    "start": "419580",
    "end": "427889"
  },
  {
    "text": "and we know that it's linked to the release so the first of your step would be to check the source code yeah so when",
    "start": "427889",
    "end": "434070"
  },
  {
    "start": "430000",
    "end": "620000"
  },
  {
    "text": "you take a look at the other source code and there is a new release the easy stuff to do is to take a look at the",
    "start": "434070",
    "end": "440009"
  },
  {
    "text": "changes that you have added to the new version so we don't add like tens of",
    "start": "440009",
    "end": "445349"
  },
  {
    "text": "changes but like more than one hundreds of changes for our release and in our case it's a it's a kind of the easy case",
    "start": "445349",
    "end": "453840"
  },
  {
    "text": "why because it's really related to a very specific c-sharp kind of",
    "start": "453840",
    "end": "460110"
  },
  {
    "text": "programming you know we are talking about threading contentions to think about using locks maybe we have added",
    "start": "460110",
    "end": "466889"
  },
  {
    "text": "some locks or some some other pattern that could synchronize the access of a",
    "start": "466889",
    "end": "472979"
  },
  {
    "text": "resource in industry shot code but we took a look at all the changes and nothing was really related to this kind",
    "start": "472979",
    "end": "479970"
  },
  {
    "text": "of pattern so what would be the next step so when you are at this point you",
    "start": "479970",
    "end": "485580"
  },
  {
    "text": "finished with the boring part and you can start having fun with your with yours yes but you should not forget the boring",
    "start": "485580",
    "end": "491940"
  },
  {
    "text": "part okay and we are strong here you think that you like to be in the debugger so Kevin like like love love it",
    "start": "491940",
    "end": "498840"
  },
  {
    "text": "but sometimes the abuse step shouldn't be forgotten okay we want to know more",
    "start": "498840",
    "end": "507960"
  },
  {
    "text": "information about the contention events in terms of that whenever were in dotnet",
    "start": "507960",
    "end": "513570"
  },
  {
    "text": "whenever two threads are containing your lock there is an event that is pushed to etw so if we have a way to listen to",
    "start": "513570",
    "end": "520440"
  },
  {
    "text": "those events we will learn more information about what's happening so there are plenty of etw listeners",
    "start": "520440",
    "end": "526050"
  },
  {
    "text": "available but for this precise use case I like to use JetBrains dot trace because it display everything in a nice",
    "start": "526050",
    "end": "533250"
  },
  {
    "text": "timeline view that is very easy to use and so we took a trace on one of the",
    "start": "533250",
    "end": "538709"
  },
  {
    "text": "producer and when we activate the lock contention filter then you get all those marks that",
    "start": "538709",
    "end": "546840"
  },
  {
    "text": "remind me of DNA sequencing and they each indicate one contention event and",
    "start": "546840",
    "end": "552600"
  },
  {
    "text": "when you hover the mouse over them and try enjoyed working on the screen but",
    "start": "552600",
    "end": "558800"
  },
  {
    "text": "surely you would have a little yeah like this a little window that tells you what",
    "start": "558800",
    "end": "564960"
  },
  {
    "text": "is the method that triggers the contention so the problem here is that",
    "start": "564960",
    "end": "570300"
  },
  {
    "text": "we can do nothing with that simply because we don't know what is supposed to be here where is the regression so",
    "start": "570300",
    "end": "578660"
  },
  {
    "text": "luckily we already know that we have some kind of leak and we also know that",
    "start": "578660",
    "end": "583890"
  },
  {
    "text": "it's not impacting the response time so we can let the server run like that for a while longer so what we did is we let",
    "start": "583890",
    "end": "591840"
  },
  {
    "text": "the server run overnight and the day after we took another trace that you have here and just at a glance you can",
    "start": "591840",
    "end": "598290"
  },
  {
    "text": "see that there is a lot more events and by comparing the two such traces we can",
    "start": "598290",
    "end": "607290"
  },
  {
    "text": "find that the contention the new contention is caused by the fire method in the timer queue timer class so now we",
    "start": "607290",
    "end": "615600"
  },
  {
    "text": "know where it comes from okay so we know where it comes from but it begs new question so time our queue",
    "start": "615600",
    "end": "623040"
  },
  {
    "text": "timer seems rates into timers but how can the timer even close contention so",
    "start": "623040",
    "end": "628890"
  },
  {
    "text": "Christophe can you go up yes saying that yes first time I have to go to do that you know in a conference",
    "start": "628890",
    "end": "634080"
  },
  {
    "text": "ok so this is the kind of step where you usually happen what I mean by that is",
    "start": "634080",
    "end": "640500"
  },
  {
    "text": "that when you are investigating an application the bits your application so you know the source code and you have",
    "start": "640500",
    "end": "646860"
  },
  {
    "text": "the source code but maybe you are using sir parties or maybe you are using the.net framework and in that case here",
    "start": "646860",
    "end": "653850"
  },
  {
    "text": "the timer queue timer it's just an app annotation detail of how the dotnet framework is managing the timer that",
    "start": "653850",
    "end": "661170"
  },
  {
    "text": "your code is creating so you need to take a look at how it's implementing so",
    "start": "661170",
    "end": "666270"
  },
  {
    "text": "you can use the website provided by Microsoft the reference sources or the",
    "start": "666270",
    "end": "671460"
  },
  {
    "text": "soups of net which are very good but I usually prefer to use a decompiler",
    "start": "671460",
    "end": "677090"
  },
  {
    "text": "so this is the D compare I'm using use the one that you want and I want to take",
    "start": "677090",
    "end": "683070"
  },
  {
    "text": "a look at how the construction of a timer as an impact so here the",
    "start": "683070",
    "end": "688650"
  },
  {
    "text": "construction of the of a timer you pass the callback you want the timer to call when it ticks if you want to pass a",
    "start": "688650",
    "end": "694830"
  },
  {
    "text": "state to pass the state and you tell him when it should tick and if there is any",
    "start": "694830",
    "end": "701160"
  },
  {
    "text": "kind of repetition you pass the period easy so this code end up calling timer",
    "start": "701160",
    "end": "708060"
  },
  {
    "text": "set up with the same parameter and in the timer set up you see that the timer",
    "start": "708060",
    "end": "714330"
  },
  {
    "text": "creates a timer holder and the timer order will get an instance of the timer",
    "start": "714330",
    "end": "719700"
  },
  {
    "text": "to time a class the one that we've seen in the in the dot trace solve DNA is",
    "start": "719700",
    "end": "726120"
  },
  {
    "text": "something that you love so much so let's take a look at what the timer to timer is doing",
    "start": "726120",
    "end": "731640"
  },
  {
    "text": "remember we passed the callback the state the due time and the period if there is any repetition so we create a",
    "start": "731640",
    "end": "737520"
  },
  {
    "text": "time a few timer and it's really really simple the time accurate timer is like a poco that keeps all the value that you",
    "start": "737520",
    "end": "746010"
  },
  {
    "text": "have given to the creation of your timer and that's pretty much it so if we take a look at the timer all their class it's",
    "start": "746010",
    "end": "754350"
  },
  {
    "text": "even simpler and just keep track of the timer to China then you would say why would you do that",
    "start": "754350",
    "end": "759960"
  },
  {
    "text": "because it's only purpose is to ensure that if unfortunately you are working",
    "start": "759960",
    "end": "766920"
  },
  {
    "text": "with not perfect developers they might forget to dispose the timer and in that",
    "start": "766920",
    "end": "773130"
  },
  {
    "text": "case this class implements a fertilizer and the finalizer will kicks in after a",
    "start": "773130",
    "end": "778770"
  },
  {
    "text": "garbage collection when the timer order is no more reference and it will close the timer okay so we've seen the timer the timer",
    "start": "778770",
    "end": "786870"
  },
  {
    "text": "queue timer the timer older and oh yes we need to take a look at the fire method maybe and this is one thing that",
    "start": "786870",
    "end": "792780"
  },
  {
    "text": "is with us just waiting for you to to remind me so remember we are looking for",
    "start": "792780",
    "end": "799240"
  },
  {
    "text": "the source of a contention contention is there is one thread trying to acquire the same lock as another thread which",
    "start": "799240",
    "end": "807160"
  },
  {
    "text": "already has the lock so here you can see we have two locks so we have one lock",
    "start": "807160",
    "end": "812790"
  },
  {
    "text": "before calling the callback and one",
    "start": "812790",
    "end": "818080"
  },
  {
    "text": "other lock after having called the codec so okay so now we know that fire can",
    "start": "818080",
    "end": "826930"
  },
  {
    "text": "cause contention but it's a lot of information all at once so can you make a summary we can so it's it it's only",
    "start": "826930",
    "end": "833110"
  },
  {
    "text": "code C sharp code so let's draw a picture when I'm creating a timer under",
    "start": "833110",
    "end": "842380"
  },
  {
    "text": "the hood I get another instance of an object of the timer all the class that is referenced by an M underscore timer",
    "start": "842380",
    "end": "848830"
  },
  {
    "text": "field from the timer object that time holder referenced the timer to timer",
    "start": "848830",
    "end": "853870"
  },
  {
    "text": "through an ml dose go of timer shield and the timer cue timer are stored in a",
    "start": "853870",
    "end": "859750"
  },
  {
    "text": "linked list by the best class library of the.net framework and it's kept by the",
    "start": "859750",
    "end": "865270"
  },
  {
    "text": "time our cue object in the PCL so that way we have a list of timers that are",
    "start": "865270",
    "end": "871600"
  },
  {
    "text": "maintained in memory great so now we understand how timers work we're still",
    "start": "871600",
    "end": "878440"
  },
  {
    "text": "wondering why we are using so many timers well we have some contention so",
    "start": "878440",
    "end": "883660"
  },
  {
    "text": "there are two possibilities either we are using a lot of timers oh we are using just a few timer that are taking a",
    "start": "883660",
    "end": "889300"
  },
  {
    "text": "lot and so to find out what is happening it is time to use my favorite debugging",
    "start": "889300",
    "end": "895810"
  },
  {
    "text": "tool that is windbg and so for that we capture a memory dump on the projection",
    "start": "895810",
    "end": "901930"
  },
  {
    "text": "server and then if we open it with windbg we can run the dump that command",
    "start": "901930",
    "end": "907630"
  },
  {
    "text": "which gives you a summary of all the objects in memory how many of you are",
    "start": "907630",
    "end": "913120"
  },
  {
    "text": "using windbg that's a lot 12 okay 12 okay good okay",
    "start": "913120",
    "end": "919930"
  },
  {
    "text": "so windbg let you open a memory dump and we can take a look at what's inside the",
    "start": "919930",
    "end": "925779"
  },
  {
    "text": "the address space and all the objects that have mentioned in the co2 that we will be doing with script equipment so",
    "start": "925779",
    "end": "932709"
  },
  {
    "text": "once you have exactly the command you can search the timeout queue timer inside yeah because it's reports console",
    "start": "932709",
    "end": "939040"
  },
  {
    "text": "F that's one of the best feature of the tool I mean the one who has laughing the",
    "start": "939040",
    "end": "945610"
  },
  {
    "text": "one who are using a windy VG timer timer service focus we see that we have 14,000",
    "start": "945610",
    "end": "955680"
  },
  {
    "text": "instances of timer timer so just like before you can eject to conclusion after",
    "start": "955680",
    "end": "961779"
  },
  {
    "text": "seeing that number you need to know what is a normal number for your application and from my experience in Krita our",
    "start": "961779",
    "end": "968800"
  },
  {
    "text": "applications tend to use about two thousand timers which is already a lot but here clearly we have like twelve",
    "start": "968800",
    "end": "975850"
  },
  {
    "text": "thousand timers too many that's why I like the world clearly because when I enjoy in créteil in the first",
    "start": "975850",
    "end": "981610"
  },
  {
    "text": "investigation and I end up in this kind of doors and I look at the the number and I see what you have more than 2,000",
    "start": "981610",
    "end": "987970"
  },
  {
    "text": "timers we have a bug there we have a bug that I will tell you and Kevin say no no we need a few hundreds for our Kefka",
    "start": "987970",
    "end": "996160"
  },
  {
    "text": "subsystem and a few other hundreds for this other subsystem and so it might be",
    "start": "996160",
    "end": "1001860"
  },
  {
    "text": "funny when I'm telling the story but it's very important that when you are doing an investigation you know both the",
    "start": "1001860",
    "end": "1008069"
  },
  {
    "text": "source code as I have explained earlier but also the numbers the the way your application is supposed to behave",
    "start": "1008069",
    "end": "1014040"
  },
  {
    "text": "compared to the load for example because in that case this kind of number would",
    "start": "1014040",
    "end": "1020129"
  },
  {
    "text": "mean a lot for you it means like it's red and it's blinking if you don't know these numbers you will just pass through",
    "start": "1020129",
    "end": "1026538"
  },
  {
    "text": "okay so then you can dump your individual sorry instances of timer to",
    "start": "1026539",
    "end": "1033390"
  },
  {
    "text": "see what they are doing for that you can use Adam Hipp - MC command we executed",
    "start": "1033390",
    "end": "1038909"
  },
  {
    "text": "beforehand because it is a 20 20 gigabytes sumo Adam so on this text it",
    "start": "1038909",
    "end": "1045120"
  },
  {
    "text": "takes a bit of time and so if we click on the first one to inspect it we see",
    "start": "1045120",
    "end": "1050429"
  },
  {
    "start": "1047000",
    "end": "1355000"
  },
  {
    "text": "all the fields that crystal told us about yeah but we are interested in the time I'll call back",
    "start": "1050429",
    "end": "1056280"
  },
  {
    "text": "do you know what is this time are doing so if you click on it thank you we have",
    "start": "1056280",
    "end": "1062730"
  },
  {
    "text": "an instance of delegate so with method pointer supposedly you can find the",
    "start": "1062730",
    "end": "1068010"
  },
  {
    "text": "actual method at this card but I know no easy way with windbg to convert this",
    "start": "1068010",
    "end": "1073590"
  },
  {
    "text": "value into meaningful name but fortunately we have something into the",
    "start": "1073590",
    "end": "1078630"
  },
  {
    "text": "target field which means that this is an instance method and just knowing the type that contains the method could give",
    "start": "1078630",
    "end": "1085110"
  },
  {
    "text": "us enough information so if we look we now know that whenever this timer ticks",
    "start": "1085110",
    "end": "1090330"
  },
  {
    "text": "it calls a callback on meta metric and we cannot deduce anything yet so if we",
    "start": "1090330",
    "end": "1096510"
  },
  {
    "text": "take another timeout so for instance take the last one we don't have to scroll all the way just like before we",
    "start": "1096510",
    "end": "1103260"
  },
  {
    "text": "look at the timer call back then at the target and we see that this one timer is used by a cap card matching that",
    "start": "1103260",
    "end": "1110130"
  },
  {
    "text": "accumulator so now that we know how to retrieve the information from the timer we just have to use that for each and",
    "start": "1110130",
    "end": "1117420"
  },
  {
    "text": "every of the 14,000 timers in the in the list so Christopher please like this guy",
    "start": "1117420",
    "end": "1123300"
  },
  {
    "text": "so yeah sure I will I will do that here you are facing the kind of issue that we are often facing at creature",
    "start": "1123300",
    "end": "1130170"
  },
  {
    "text": "with this huge huge memory dump of the application with a lot of objects inside and it's another kind of scalability",
    "start": "1130170",
    "end": "1137370"
  },
  {
    "text": "okay we're talking about runtime scalability for your application but when you are debugging also you don't",
    "start": "1137370",
    "end": "1142830"
  },
  {
    "text": "want to waste your time clicking on stuff and just taking notes or using like an Excel spreadsheet and please so",
    "start": "1142830",
    "end": "1152400"
  },
  {
    "text": "here we need to kind of automate the some part of the of the search so for",
    "start": "1152400",
    "end": "1158250"
  },
  {
    "text": "that you could use windbg with this new version you have a scripting engine based on JavaScript but I was I won't",
    "start": "1158250",
    "end": "1165540"
  },
  {
    "text": "use it throwing about that expectation the work but I prefer to use C shop so",
    "start": "1165540",
    "end": "1171630"
  },
  {
    "text": "Microsoft is providing a nugget package called CLR MD and we see on our MD you",
    "start": "1171630",
    "end": "1179160"
  },
  {
    "text": "are able to do the exact same thing that I have done in windbg meaning that you can follow up the links going into all",
    "start": "1179160",
    "end": "1186000"
  },
  {
    "text": "the instances and I will show you that it's it's really really simple so I have written a tiny",
    "start": "1186000",
    "end": "1192160"
  },
  {
    "text": "application so is it big enough the food a little bit bigger no answer so it's",
    "start": "1192160",
    "end": "1199270"
  },
  {
    "text": "it's big enough so in this library you",
    "start": "1199270",
    "end": "1204790"
  },
  {
    "text": "start with a data target - data target type represent either a memory dump or a",
    "start": "1204790",
    "end": "1211900"
  },
  {
    "text": "running application okay you can you can do both you can connect to a running live application or a memory dump in my",
    "start": "1211900",
    "end": "1218650"
  },
  {
    "text": "case it's it's a memory region then from the data target you ask for the a",
    "start": "1218650",
    "end": "1224320"
  },
  {
    "text": "version of sorry you ask for the running CLR inside this process once you get the",
    "start": "1224320",
    "end": "1230650"
  },
  {
    "text": "runtime you can ask for the heap managed by the garbage collector in that application and then from the hip you",
    "start": "1230650",
    "end": "1238870"
  },
  {
    "text": "iterate on each and every instance of object that is told by the garbage",
    "start": "1238870",
    "end": "1244900"
  },
  {
    "text": "collector so once you get an address because everything ends up on an address",
    "start": "1244900",
    "end": "1250390"
  },
  {
    "text": "I know that the the the.net language for this is a reference okay but in the API",
    "start": "1250390",
    "end": "1256360"
  },
  {
    "text": "it's an address a reference is an address that can change its value but",
    "start": "1256360",
    "end": "1262150"
  },
  {
    "text": "it's an address sorry I have to maybe quicker sorry about that so once you get",
    "start": "1262150",
    "end": "1267640"
  },
  {
    "text": "the address you can ask for its type so which type of object is behind the",
    "start": "1267640",
    "end": "1274330"
  },
  {
    "text": "address that you've taken from the from the it managed by the garbage collector and here we are uninteresting in the",
    "start": "1274330",
    "end": "1281050"
  },
  {
    "text": "timer callback because it is what Kevin did by hand asked me to do by hand and once I get unsure that it's the kind of",
    "start": "1281050",
    "end": "1290320"
  },
  {
    "text": "object that I'm interested in then I'm asking for the definition of its target",
    "start": "1290320",
    "end": "1295330"
  },
  {
    "text": "field if you have done some reflection in dotnet this is very very close to what you are doing in reflection you ask",
    "start": "1295330",
    "end": "1302440"
  },
  {
    "text": "for the definition of a type the definition of a field and then using that definition you ask for the value",
    "start": "1302440",
    "end": "1309400"
  },
  {
    "text": "stored in the underscore target field of the object pointed to by the address and",
    "start": "1309400",
    "end": "1314650"
  },
  {
    "text": "again I'm interesting in the time because this is what I'm looking for I want to count all the type in the",
    "start": "1314650",
    "end": "1322000"
  },
  {
    "text": "instance of type that are referenced by the target adding them into a list and I'm doing",
    "start": "1322000",
    "end": "1328360"
  },
  {
    "text": "some very nice link code that I really love by grouping and sorting so what I'm",
    "start": "1328360",
    "end": "1333910"
  },
  {
    "text": "running this I should get at the top the instance of so I get 12,000 instances of",
    "start": "1333910",
    "end": "1343890"
  },
  {
    "text": "Metro metric so in short we enumerated all the time our callbacks just to see",
    "start": "1343890",
    "end": "1348960"
  },
  {
    "text": "what they tick for yes so I run it before because it's 16 gigs on it yeah",
    "start": "1348960",
    "end": "1354330"
  },
  {
    "text": "so we see that we have 12,000 instances of matrix code code at meta metric and",
    "start": "1354330",
    "end": "1360160"
  },
  {
    "start": "1355000",
    "end": "1375000"
  },
  {
    "text": "this is a number of time of outstanding timers that we have so it's a good",
    "start": "1360160",
    "end": "1366070"
  },
  {
    "text": "coincidence so at that point it's safe to conclude that this is causing our program so the next step is to try",
    "start": "1366070",
    "end": "1372670"
  },
  {
    "text": "understand what is a meta metric yeah so real fast we well nobody actually use",
    "start": "1372670",
    "end": "1380320"
  },
  {
    "start": "1375000",
    "end": "1457000"
  },
  {
    "text": "meta metric it is an internal type instead the developer are using a wrapper that is named meta",
    "start": "1380320",
    "end": "1386740"
  },
  {
    "text": "it keeps a reference to the meta metric to GE get meta property the meta metric",
    "start": "1386740",
    "end": "1392680"
  },
  {
    "text": "as an underscore time a field which contains the timer and whenever the time at 6 it calls a method on the meta",
    "start": "1392680",
    "end": "1400330"
  },
  {
    "text": "metric so now we have to understand what",
    "start": "1400330",
    "end": "1405550"
  },
  {
    "text": "is keeping all of our min symmetric object alive and I can really think of",
    "start": "1405550",
    "end": "1410950"
  },
  {
    "text": "two possibilities either we have a lot of major instances and we are still",
    "start": "1410950",
    "end": "1417370"
  },
  {
    "text": "referencing them somewhere or we forget to disperse the timers and they keep our",
    "start": "1417370",
    "end": "1422950"
  },
  {
    "text": "meta metric objects alive ok so if you remember what I've said about the implementation inside the base class",
    "start": "1422950",
    "end": "1429460"
  },
  {
    "text": "library the timer or the class would be responsible for releasing the timer if",
    "start": "1429460",
    "end": "1435370"
  },
  {
    "text": "we are forgotten so I would start by looking at the the meter potatoes so the",
    "start": "1435370",
    "end": "1441160"
  },
  {
    "text": "good thing about working with an expert see that he can save you some time by providing his variable inside so now",
    "start": "1441160",
    "end": "1448780"
  },
  {
    "text": "that we know that it's almost certain that we are leaking metal objects we can go back to",
    "start": "1448780",
    "end": "1454570"
  },
  {
    "text": "windbg to check that and the first thing we could do is to",
    "start": "1454570",
    "end": "1463360"
  },
  {
    "start": "1457000",
    "end": "1778000"
  },
  {
    "text": "try and find what is referencing our mid symmetric object so we could use a Jessie root command for that but it only",
    "start": "1463360",
    "end": "1470350"
  },
  {
    "text": "display one path to a root and not all the paths and so we don't want necessarily see all the referencing",
    "start": "1470350",
    "end": "1477430"
  },
  {
    "text": "pointing to meta metric so instead I like to use another windbg extension",
    "start": "1477430",
    "end": "1482470"
  },
  {
    "text": "which name is SOS X and he defines a ref command which displays the references",
    "start": "1482470",
    "end": "1488940"
  },
  {
    "text": "going to an object and it's an it's also faster it's also faster and so if we",
    "start": "1488940",
    "end": "1495730"
  },
  {
    "text": "call it on our meta metric we see that it is only referenced by a time I'll call back and not by the meta object so",
    "start": "1495730",
    "end": "1503020"
  },
  {
    "text": "it seems to indicate that Chris off might be wrong on this point but I have a hard time believing it so we're just",
    "start": "1503020",
    "end": "1510010"
  },
  {
    "text": "going to double check if Christophe is right then we should have pretty much as many meter and stands as meta metric",
    "start": "1510010",
    "end": "1516820"
  },
  {
    "text": "that's something we can check easily so we go back to the top and the dope it -",
    "start": "1516820",
    "end": "1521890"
  },
  {
    "text": "start and you're looking for the meta meta meta matrix and here if you can",
    "start": "1521890",
    "end": "1538450"
  },
  {
    "text": "scroll just know okay we can see that we have 800 instances there are not enough",
    "start": "1538450",
    "end": "1544990"
  },
  {
    "text": "even do we have - a thousand metal-matrix so it seems free two points there were a",
    "start": "1544990",
    "end": "1550630"
  },
  {
    "text": "mistake of yours but let's triple check because I can abduct Christophe thank you very much and especially in front of",
    "start": "1550630",
    "end": "1557530"
  },
  {
    "text": "the audience yeah very much so another way to verify what you said would be to iterate on all the timers",
    "start": "1557530",
    "end": "1565360"
  },
  {
    "text": "and we're the ones that are using by whether using meta metrics sorry and",
    "start": "1565360",
    "end": "1571260"
  },
  {
    "text": "check is a I've enclosed okay so I'm going to no no no I'm gonna sell R&D to",
    "start": "1571260",
    "end": "1578650"
  },
  {
    "text": "do though yeah but I want to be faster this time so I like sir I'm Z a lot but",
    "start": "1578650",
    "end": "1585970"
  },
  {
    "text": "the problem with that is that whenever you want to check something you have to live windbg study just video create a",
    "start": "1585970",
    "end": "1593260"
  },
  {
    "text": "new project import the Nugget package write all the boilerplate code script",
    "start": "1593260",
    "end": "1599020"
  },
  {
    "text": "your thing executed then go back to in dbg I feel like this is a break in the",
    "start": "1599020",
    "end": "1604780"
  },
  {
    "text": "workflow and also use waste of time so I wrote this extension for windbg which allow you to write c-sharp code directly",
    "start": "1604780",
    "end": "1612640"
  },
  {
    "text": "from windbg so what is what Kevin did it",
    "start": "1612640",
    "end": "1619540"
  },
  {
    "text": "integrated into the UI itself but in addition it's also I've written all the",
    "start": "1619540",
    "end": "1625090"
  },
  {
    "text": "boilerplate code that I've been using you know getting the memory dump for example here it's windbg that got that",
    "start": "1625090",
    "end": "1632320"
  },
  {
    "text": "and so when you start to write with his extension you see that directly you have the this eep object so you directly have",
    "start": "1632320",
    "end": "1640750"
  },
  {
    "text": "the hip and you can start to write some code so here you want me to explain what you're doing ok so is using an extension",
    "start": "1640750",
    "end": "1649150"
  },
  {
    "text": "method called get proxies and the get coxey's will return the list of all the objects for this type so it's much",
    "start": "1649150",
    "end": "1656410"
  },
  {
    "text": "easier than my loop my big loop when I an emeritus here I just asked for a certain type if it's the time I'll call",
    "start": "1656410",
    "end": "1663190"
  },
  {
    "text": "back then I want to ensure that the underscore target field points to a",
    "start": "1663190",
    "end": "1668290"
  },
  {
    "text": "metal matrix remember we are only interested in the metal metric case and so if this is the case oh yeah so I love",
    "start": "1668290",
    "end": "1675280"
  },
  {
    "text": "this kind of code so if you can try to follow what is written so the the",
    "start": "1675280",
    "end": "1680710"
  },
  {
    "text": "callback as underscore target and the other screw target which point to the timer that points to what is the name of",
    "start": "1680710",
    "end": "1687100"
  },
  {
    "text": "the type of this one older time oq timer",
    "start": "1687100",
    "end": "1693580"
  },
  {
    "text": "and timer and consult yeah I don't remember too many timers so you can see",
    "start": "1693580",
    "end": "1700360"
  },
  {
    "text": "that in under one minute we just wrote what Christophe did in his long Visual",
    "start": "1700360",
    "end": "1707530"
  },
  {
    "text": "Studio program so it can save you a lot of time in yeah I can't even I can give",
    "start": "1707530",
    "end": "1713410"
  },
  {
    "text": "you more reason to use this kind of code which is that this is C sharp this is",
    "start": "1713410",
    "end": "1720550"
  },
  {
    "text": "not reflection like kind of code so it's much more easy to write and the extension",
    "start": "1720550",
    "end": "1726350"
  },
  {
    "text": "that Calvin did which is integrated inside windbg is also available in your",
    "start": "1726350",
    "end": "1733309"
  },
  {
    "text": "own tool like what I've written it's a it's a döner MD extension okay I'm not",
    "start": "1733309",
    "end": "1739760"
  },
  {
    "text": "going to either couch it live because it takes minutes and we are way late but spoiler issue that Christophe is wrong",
    "start": "1739760",
    "end": "1746090"
  },
  {
    "text": "in that one so none of the timer has been closed okay clearly you don't know how final is the sports Christopher okay",
    "start": "1746090",
    "end": "1752779"
  },
  {
    "text": "so I don't know if Anna's also remember we have three different steps in the kind of investigation and the last one",
    "start": "1752779",
    "end": "1759529"
  },
  {
    "text": "is the verified so we have some assumptions Lex from impetuses and you",
    "start": "1759529",
    "end": "1764929"
  },
  {
    "text": "need to confront the Portage's with the fact when there is something not matching like here because I know definitely know how it's working",
    "start": "1764929",
    "end": "1772100"
  },
  {
    "text": "I'm expecting that it shouldn't be like this so I've written a repro of the kind",
    "start": "1772100",
    "end": "1780529"
  },
  {
    "text": "of code that you are describing so here I have an instance of meta metric that",
    "start": "1780529",
    "end": "1785990"
  },
  {
    "text": "reference the timer and when I'm creating a meta metric I create a timer",
    "start": "1785990",
    "end": "1792350"
  },
  {
    "text": "and I'm expecting that on the console I would see a tick tick tick every one",
    "start": "1792350",
    "end": "1798620"
  },
  {
    "text": "second and for the testing framework in the main I'm creating a meter over there",
    "start": "1798620",
    "end": "1805700"
  },
  {
    "text": "which is the one written by this function and then I'm calling the garbage collector a garbage collector",
    "start": "1805700",
    "end": "1811990"
  },
  {
    "text": "saying that please could you bet some room for me so since I'm not referencing this",
    "start": "1811990",
    "end": "1817850"
  },
  {
    "text": "instance anywhere in the code I'm expecting that the garbage collector will get rid of the instance and after",
    "start": "1817850",
    "end": "1825230"
  },
  {
    "text": "the garbage collection happens the finality of Fred will kicks in and see that this object as a finalizer",
    "start": "1825230",
    "end": "1832010"
  },
  {
    "text": "will call the fertilizer and we'd close the timer so I'm expecting to see tick tick tick tick and when I'm press enter",
    "start": "1832010",
    "end": "1840769"
  },
  {
    "text": "no Morty do you agree I don't like of mine really control f5 and tick tick",
    "start": "1840769",
    "end": "1852529"
  },
  {
    "text": "tick tick okay okay okay so maybe you're right",
    "start": "1852529",
    "end": "1858380"
  },
  {
    "text": "like this time yeah this time but then can you explain to me what's going on",
    "start": "1858380",
    "end": "1863420"
  },
  {
    "text": "with the a petition okay so if we go back to the picture because in the damn",
    "start": "1863420",
    "end": "1870230"
  },
  {
    "start": "1865000",
    "end": "2030000"
  },
  {
    "text": "clearly the term the timer's are not reference yes and they are not dispersed yes so let's add the big picture with",
    "start": "1870230",
    "end": "1879620"
  },
  {
    "text": "all the elements that we've seen in in the investigation right now so this is the critical view of the problem so we",
    "start": "1879620",
    "end": "1887030"
  },
  {
    "text": "have a matter that reference a meta metric that reference a timer and the timer will call a callback of Metro",
    "start": "1887030",
    "end": "1893480"
  },
  {
    "text": "metric but here in the picture we also need to add the base class library if",
    "start": "1893480",
    "end": "1898610"
  },
  {
    "text": "you of the implementation so over timer referencing a timer order and the timer order is referencing a timer to timer",
    "start": "1898610",
    "end": "1905020"
  },
  {
    "text": "are we on that yeah what we've seen first in windbg is that the number of",
    "start": "1905020",
    "end": "1911420"
  },
  {
    "text": "matter over there is not enough to explain between eight hundred and twelve",
    "start": "1911420",
    "end": "1920000"
  },
  {
    "text": "thousand it called reference or the timer cutomers and we have also seen with my tiny demo",
    "start": "1920000",
    "end": "1926120"
  },
  {
    "text": "that's my understanding of how the finalizer is working for a timer seems",
    "start": "1926120",
    "end": "1931160"
  },
  {
    "text": "to be right so what's going on so what's going on why isn't the finally they're being executed okay maybe it's because",
    "start": "1931160",
    "end": "1937910"
  },
  {
    "text": "you didn't listen to me when I'm explaining will explain how the timer implementation I'm pretty sure some of",
    "start": "1937910",
    "end": "1944240"
  },
  {
    "text": "you have remember the fact that the VCL is keeping track of all the time of you",
    "start": "1944240",
    "end": "1950720"
  },
  {
    "text": "timer through the timer cue object and the name of the field is s on the score",
    "start": "1950720",
    "end": "1955880"
  },
  {
    "text": "Q and S stands for static okay nice you just explain why the time of Q timer are",
    "start": "1955880",
    "end": "1961820"
  },
  {
    "text": "still alive but it still doesn't explain why the finite others I'm kicking okay so when the garbage collector is trying",
    "start": "1961820",
    "end": "1970010"
  },
  {
    "text": "to figure out if an object should be kept in memory what it does it does a first fast of what is called marking",
    "start": "1970010",
    "end": "1976700"
  },
  {
    "text": "marking in started from all the routes could be on the fret stack could be a",
    "start": "1976700",
    "end": "1981710"
  },
  {
    "text": "static could be in the registers and it goes down following all the fields of all these objects and mark them one",
    "start": "1981710",
    "end": "1988550"
  },
  {
    "text": "after the other so if we follow what it will be doing it will be doing here saying there is a reference here market go",
    "start": "1988550",
    "end": "1995240"
  },
  {
    "text": "there market market and so at the end of the day the timer order will be",
    "start": "1995240",
    "end": "2001630"
  },
  {
    "text": "recursively marked as been used so the garbage collector will see that there is a route down to the timer order so he",
    "start": "2001630",
    "end": "2010510"
  },
  {
    "text": "won't be able to let the Parizeau be executed okay so it makes sense make",
    "start": "2010510",
    "end": "2017230"
  },
  {
    "text": "sense but then what is the point of the time I hold on why did it work in your demo because I was cheating I was",
    "start": "2017230",
    "end": "2024520"
  },
  {
    "text": "cheating just for you just for you not for you just for the audience okay nothing against you really so what's the",
    "start": "2024520",
    "end": "2031570"
  },
  {
    "start": "2030000",
    "end": "2062000"
  },
  {
    "text": "difference between my code and the code that we have in production it's a tiny detail but if you take a",
    "start": "2031570",
    "end": "2037960"
  },
  {
    "text": "look at this function this call to the console it's a static code what I mean",
    "start": "2037960",
    "end": "2045250"
  },
  {
    "text": "by the statical I mean that the compiler will see that we are calling a static function that so it doesn't need to",
    "start": "2045250",
    "end": "2052360"
  },
  {
    "text": "provide the disease implicit parameter as the eden para first parameter of the",
    "start": "2052360",
    "end": "2059560"
  },
  {
    "text": "function so there is no such link here",
    "start": "2059560",
    "end": "2064740"
  },
  {
    "start": "2062000",
    "end": "2195000"
  },
  {
    "text": "there is no link to the Metro metric so okay okay so this concludes in this case",
    "start": "2064740",
    "end": "2072270"
  },
  {
    "text": "whatever you have will learn here sorry we've learned a few things the first thing is that you can't trust Christophe",
    "start": "2072270",
    "end": "2080169"
  },
  {
    "text": "to make a repro the second thing is that in our code the meter type did not",
    "start": "2080169",
    "end": "2087399"
  },
  {
    "text": "implement a disposable where that's our mistake so developer couldn't call",
    "start": "2087400",
    "end": "2092440"
  },
  {
    "text": "dispose on it and it turned out that because of this reference cycle the",
    "start": "2092440",
    "end": "2099640"
  },
  {
    "text": "final user of the timer cannot kick in and so our timers are immortal and so",
    "start": "2099640",
    "end": "2104650"
  },
  {
    "text": "during the lifetime of the application we keep allocating more timers and they",
    "start": "2104650",
    "end": "2110410"
  },
  {
    "text": "generate contention whenever beta and this lead to this progressive increase",
    "start": "2110410",
    "end": "2116560"
  },
  {
    "text": "of contention and they're not sorry to interrupt but when when Kevin was",
    "start": "2116560",
    "end": "2122330"
  },
  {
    "text": "making fun of my ability to reproduce it's something very important you know when you're trying to reproduce the",
    "start": "2122330",
    "end": "2128060"
  },
  {
    "text": "problem try to be in the in the real condition okay okay so what was this",
    "start": "2128060",
    "end": "2136130"
  },
  {
    "text": "thing again I think you were saying that we've done some of the the way we are",
    "start": "2136130",
    "end": "2144280"
  },
  {
    "text": "okay thank you so why did you happen with that version in particular it's",
    "start": "2144490",
    "end": "2150830"
  },
  {
    "text": "because before then we always used matter in singleton class and this was a",
    "start": "2150830",
    "end": "2156770"
  },
  {
    "text": "first version of the application where we used a matter in a transient type and",
    "start": "2156770",
    "end": "2161960"
  },
  {
    "text": "that's why that's why it's revealed the leak and that's why we couldn't see it just looking at other changes the code",
    "start": "2161960",
    "end": "2170630"
  },
  {
    "text": "changes and so the fix has been obviously to implement a disposable in meta and also because it was a lot of",
    "start": "2170630",
    "end": "2177980"
  },
  {
    "text": "work to change all the code that calls matter and we wanted a quick mitigation",
    "start": "2177980",
    "end": "2184130"
  },
  {
    "text": "so we also implemented a finally in meta which is outside of the reference cycle and so this final is a work properly and",
    "start": "2184130",
    "end": "2191840"
  },
  {
    "text": "mitigating the issue like I explained yeah and so through this investigation",
    "start": "2191840",
    "end": "2197590"
  },
  {
    "start": "2195000",
    "end": "2248000"
  },
  {
    "text": "we've seen this mindset I was talking about whenever facing a complex issue that you",
    "start": "2197590",
    "end": "2205310"
  },
  {
    "text": "don't understand first start by gathering as much data as you can make",
    "start": "2205310",
    "end": "2210500"
  },
  {
    "text": "sure this is data that you can trust then try to put that data into context use tools to dig deeper and try to",
    "start": "2210500",
    "end": "2217790"
  },
  {
    "text": "elaborate a theory about what is going on and then don't forget to verify what",
    "start": "2217790",
    "end": "2224090"
  },
  {
    "text": "you think and then try again and again until you manage to solve the problem so",
    "start": "2224090",
    "end": "2229450"
  },
  {
    "text": "this was a fairly straightforward case I think many people here knew about this",
    "start": "2229450",
    "end": "2237290"
  },
  {
    "text": "kind of gotcha with timers so we prepare a second case",
    "start": "2237290",
    "end": "2242560"
  },
  {
    "text": "which is going to be a tiny bit trickier so crystal can you introduce it yes so",
    "start": "2242560",
    "end": "2250700"
  },
  {
    "start": "2248000",
    "end": "2333000"
  },
  {
    "text": "in in that particular case we've seen a",
    "start": "2250700",
    "end": "2256479"
  },
  {
    "text": "brutal increase of the number of exceptions that are managed by our",
    "start": "2256479",
    "end": "2264589"
  },
  {
    "text": "application what I mean by that is if you have a try/catch block and there is an exception that is thrown inside the",
    "start": "2264589",
    "end": "2271519"
  },
  {
    "text": "try block it's called an exception that you can manage and it's the what we call",
    "start": "2271519",
    "end": "2277309"
  },
  {
    "text": "the third chance exception and your code catch the exception usually make a log and that's it but this has true impact",
    "start": "2277309",
    "end": "2284779"
  },
  {
    "text": "on performance so we are monitoring this number and here you see that we started",
    "start": "2284779",
    "end": "2289880"
  },
  {
    "text": "from something very low I can't say it's zero because it ended up at almost 1",
    "start": "2289880",
    "end": "2294979"
  },
  {
    "text": "million exceptions a minute yeah so that's like twenty second twenty",
    "start": "2294979",
    "end": "2300499"
  },
  {
    "text": "thousand per second so so I guess that the application would be on its knees so",
    "start": "2300499",
    "end": "2305749"
  },
  {
    "text": "well surprisingly the application was still running fine and answering to requests just as normal in fact it took",
    "start": "2305749",
    "end": "2313609"
  },
  {
    "text": "us nearly 24 hours to notice the problem so monitoring great great monitoring",
    "start": "2313609",
    "end": "2321609"
  },
  {
    "text": "except except a slight increase in CPU there was nothing wrong with the",
    "start": "2321609",
    "end": "2327079"
  },
  {
    "text": "application okay so what would be the the next step remember we are in a in a",
    "start": "2327079",
    "end": "2335269"
  },
  {
    "start": "2333000",
    "end": "2650000"
  },
  {
    "text": "real world application so we we expect to have logs in our application and as I as I said at the beginning when you are",
    "start": "2335269",
    "end": "2341989"
  },
  {
    "text": "doing your try-catch block in the cache block it's a good practice to lock the exception that your could have seen in",
    "start": "2341989",
    "end": "2349880"
  },
  {
    "text": "the in the cache block so I'm expecting that we we have killed our logging",
    "start": "2349880",
    "end": "2355249"
  },
  {
    "text": "system and it's just swarmed by all the exceptions you can export in here so",
    "start": "2355249",
    "end": "2360410"
  },
  {
    "text": "there was nothing in drugs so maybe it means that we forgot to lock the interception is the catch block I don't",
    "start": "2360410",
    "end": "2366619"
  },
  {
    "text": "know finger pointing we said about developers so when you are in that stage",
    "start": "2366619",
    "end": "2372709"
  },
  {
    "text": "you are like okay we have millions of exceptions but I don't know which exceptions so how could you do that I",
    "start": "2372709",
    "end": "2379789"
  },
  {
    "text": "know a trick which is using a tool from sysinternals and this is the tool that",
    "start": "2379789",
    "end": "2385400"
  },
  {
    "text": "are usually using to take a memory snapshot of an application and get a memory dump file and this tool is called",
    "start": "2385400",
    "end": "2392570"
  },
  {
    "text": "product but you can also use program to list to view in the console all the",
    "start": "2392570",
    "end": "2398780"
  },
  {
    "text": "exception that are thrown in your code and end up into a catch block and for",
    "start": "2398780",
    "end": "2404000"
  },
  {
    "text": "that you are using this common line which is - e for exception one for fortunes exception and the minus F is",
    "start": "2404000",
    "end": "2411260"
  },
  {
    "text": "for the filter and you give nothing for a filter and if you run this with the process ID of your faulting application",
    "start": "2411260",
    "end": "2417860"
  },
  {
    "text": "then you will see the name of the type of all the exception that after all so",
    "start": "2417860",
    "end": "2423290"
  },
  {
    "text": "it is very important to mention that in this talk we are describing what we did",
    "start": "2423290",
    "end": "2428780"
  },
  {
    "text": "back then - for this investigation and not what you should do you shouldn't use",
    "start": "2428780",
    "end": "2434810"
  },
  {
    "text": "program to try the exception instead you should use etw events which much less",
    "start": "2434810",
    "end": "2441470"
  },
  {
    "text": "intrusive but back then we didn't know that so we use program intended that program was so intrusive that after",
    "start": "2441470",
    "end": "2449600"
  },
  {
    "text": "attaching to the process we would see a three for exception and then it will slow down the process so much that it",
    "start": "2449600",
    "end": "2456050"
  },
  {
    "text": "wouldn't be able to do anything more but it helped us to see that the exceptions",
    "start": "2456050",
    "end": "2462500"
  },
  {
    "text": "run our sweat about exceptions that is mean that we have some code that are",
    "start": "2462500",
    "end": "2468410"
  },
  {
    "text": "calling fredita bollocks so I checked the source code looking specifically for fed that abort car and",
    "start": "2468410",
    "end": "2476290"
  },
  {
    "text": "this is not a joke it was really like that I found a call to spread out abort",
    "start": "2476290",
    "end": "2482720"
  },
  {
    "text": "but it was removed from the codebase one week before the release sure and so in fact it was so crazy that I",
    "start": "2482720",
    "end": "2490130"
  },
  {
    "text": "actually went to a production server and decompile just some live there to make sure that the code word on there and",
    "start": "2490130",
    "end": "2496400"
  },
  {
    "text": "indeed each word on there okay so this is something very important remember when you are gathering information for",
    "start": "2496400",
    "end": "2503360"
  },
  {
    "text": "understanding what's going on you need to trust what you are looking at so here",
    "start": "2503360",
    "end": "2508850"
  },
  {
    "text": "we have a kind of coincidence that going into a server or asking our customers to",
    "start": "2508850",
    "end": "2515960"
  },
  {
    "text": "decompile the binary the the Assembly to ensure that the code",
    "start": "2515960",
    "end": "2521599"
  },
  {
    "text": "that is running is really what you think is running it's really really important so don't be scared there is nothing",
    "start": "2521599",
    "end": "2527240"
  },
  {
    "text": "wrong doing that and actually we were talking with some guys at Douglas team",
    "start": "2527240",
    "end": "2532640"
  },
  {
    "text": "team at Microsoft and they were wondering why we would ever use a decompiler since we have the source code",
    "start": "2532640",
    "end": "2538160"
  },
  {
    "text": "of the net core and the source code of our application and the reason is simply that this is the only way to be",
    "start": "2538160",
    "end": "2543829"
  },
  {
    "text": "absolutely certain of that you know what you are indicating yeah anyway so",
    "start": "2543829",
    "end": "2548960"
  },
  {
    "text": "nothing is called sweat dot abort but to get more information I attached a remote",
    "start": "2548960",
    "end": "2554780"
  },
  {
    "text": "debugger and try to see what was going on and I noticed that from time to time in between the straight about exception",
    "start": "2554780",
    "end": "2561170"
  },
  {
    "text": "we will have a cannot unload abdomen exception and this is very interesting because this application is using",
    "start": "2561170",
    "end": "2568250"
  },
  {
    "text": "asp.net and asp.net is known to unload the abdomen when you make a change to a",
    "start": "2568250",
    "end": "2574670"
  },
  {
    "text": "configuration file and whenever you unload an abdomen it upwards all those",
    "start": "2574670",
    "end": "2579799"
  },
  {
    "text": "threads in the domain so it seems like a good community so it just means that somebody is editing the configuration",
    "start": "2579799",
    "end": "2585980"
  },
  {
    "text": "file on the server and saving twenty thousand times configuration file I don't you have this",
    "start": "2585980",
    "end": "2591170"
  },
  {
    "text": "habit that you press ctrl s every time you type a word no 20 I mean yes but not that fast okay okay it must be something",
    "start": "2591170",
    "end": "2598460"
  },
  {
    "text": "different right still looking with with the debugger I noticed something weird",
    "start": "2598460",
    "end": "2603819"
  },
  {
    "text": "is that the three report exception was always happening with the same car stack",
    "start": "2603819",
    "end": "2609670"
  },
  {
    "text": "so if you think about it it makes kind of sense because if we have a bug you",
    "start": "2609670",
    "end": "2614690"
  },
  {
    "text": "can expect we just have one bug that caused the same effect so yeah I'd agree",
    "start": "2614690",
    "end": "2620210"
  },
  {
    "text": "on that because if you are aborting spreads and you have really no reason to have the upward Oh curing every time at",
    "start": "2620210",
    "end": "2628280"
  },
  {
    "text": "the exact same point in the course pack and so since I was wondering about that",
    "start": "2628280",
    "end": "2633290"
  },
  {
    "text": "I checked the shred ID and the straight abort exception is always happening in the same spread always the same thread",
    "start": "2633290",
    "end": "2641720"
  },
  {
    "text": "or by the same twenty thousand times yeah but if you if you check the code it's a source code it makes sense I mean",
    "start": "2641720",
    "end": "2648049"
  },
  {
    "text": "it gets pretty obvious when you see it so this is the curse tack where the thread about exception was happening and",
    "start": "2648049",
    "end": "2654740"
  },
  {
    "start": "2650000",
    "end": "2827000"
  },
  {
    "text": "so we have a metal inside we have an infinite loop okay and inside we do some",
    "start": "2654740",
    "end": "2660800"
  },
  {
    "text": "processing in fact we are uploading a file to a remote server and then we sleep for 15 minutes so why are we not",
    "start": "2660800",
    "end": "2668180"
  },
  {
    "text": "using a timer here I don't know maybe the developer was afraid of leaking timers probably probably probably but",
    "start": "2668180",
    "end": "2676490"
  },
  {
    "text": "the important part here is that it's happening in the try-catch block and it's written purposefully in such a way",
    "start": "2676490",
    "end": "2683869"
  },
  {
    "text": "that if an error happened we retry immediately that's because we expect to",
    "start": "2683869",
    "end": "2689540"
  },
  {
    "text": "have some transient Network here or during the operating and we just want to retry so now imagine this code is",
    "start": "2689540",
    "end": "2696589"
  },
  {
    "text": "running then there is a change in the configuration file so asp.net abort the",
    "start": "2696589",
    "end": "2703760"
  },
  {
    "text": "spread but so it's throw an exception we get into the cache block but then we",
    "start": "2703760",
    "end": "2710390"
  },
  {
    "text": "exit and then we keep going on the while loop so the abdomen tries to abort the",
    "start": "2710390",
    "end": "2717170"
  },
  {
    "text": "spread again so it show a new exception which we are inside this try block so we catch it so we stay in the loop so the",
    "start": "2717170",
    "end": "2725960"
  },
  {
    "text": "abdomen try to abort the thread and I think you get the idea",
    "start": "2725960",
    "end": "2731050"
  },
  {
    "text": "write down your very nice story because I like very nice story so so it could be",
    "start": "2731050",
    "end": "2736460"
  },
  {
    "text": "good except that we are talking about the thread about exception and it is not how or fair about exception is working",
    "start": "2736460",
    "end": "2742849"
  },
  {
    "text": "yeah so so so if I can just resume what",
    "start": "2742849",
    "end": "2748280"
  },
  {
    "text": "you were saying ok we are in there in a in an infinite loop there is a try-catch",
    "start": "2748280",
    "end": "2753619"
  },
  {
    "text": "block and in the middle there is an an exception okay so the exception is",
    "start": "2753619",
    "end": "2758780"
  },
  {
    "text": "caught in the catch block it's a thread about exception so we do whatever we",
    "start": "2758780",
    "end": "2764630"
  },
  {
    "text": "want with the X here and then we exactly what I want we log with what we want but the",
    "start": "2764630",
    "end": "2770060"
  },
  {
    "text": "difference between this kind of exception and the rest of the exception is that after the last execution of your",
    "start": "2770060",
    "end": "2778579"
  },
  {
    "text": "code the runtime will ensure that the front about exception is",
    "start": "2778579",
    "end": "2783950"
  },
  {
    "text": "thrown and we from outside of your tribe lock so you will just have like an",
    "start": "2783950",
    "end": "2789230"
  },
  {
    "text": "infinite loop that stopped at the first iteration so you think that it is going to be strong only one time yes so this",
    "start": "2789230",
    "end": "2796579"
  },
  {
    "text": "is a very nice story Christophe you know I I respect you a lot you're very wise man an expert you",
    "start": "2796579",
    "end": "2802820"
  },
  {
    "text": "graduate in 1989 you are a master of objective thinking but in this case just",
    "start": "2802820",
    "end": "2810619"
  },
  {
    "text": "look at the facts okay just the fact we have 20,000 exception per second they",
    "start": "2810619",
    "end": "2815869"
  },
  {
    "text": "are all happening on the same course tag here yeah and always with the same thread ID and",
    "start": "2815869",
    "end": "2821630"
  },
  {
    "text": "so just looking at the fact and quitting somebody more famous than me he's",
    "start": "2821630",
    "end": "2827780"
  },
  {
    "start": "2827000",
    "end": "3043000"
  },
  {
    "text": "staying with his world that you are wrong Christopher I like this I like this so again remember we have the three",
    "start": "2827780",
    "end": "2834950"
  },
  {
    "text": "steps and here we are at the end of the step two we mean that we have facts we have stuff that we can see and we we",
    "start": "2834950",
    "end": "2842630"
  },
  {
    "text": "know how it's supposed to behave so we have to verify if the facts are wrong or",
    "start": "2842630",
    "end": "2848780"
  },
  {
    "text": "if the guy would say it's better like this is wrong so I will double check that again like the satire you remember",
    "start": "2848780",
    "end": "2856819"
  },
  {
    "text": "ok finalizer so if I'm going to not here here and I",
    "start": "2856819",
    "end": "2864470"
  },
  {
    "text": "think I have something that looks like your nice method so I have a method with",
    "start": "2864470",
    "end": "2870380"
  },
  {
    "text": "an infinite loop I have a try-catch block and in the cache block I'm just",
    "start": "2870380",
    "end": "2877480"
  },
  {
    "text": "pushing to the console the name of the exception so you are logging the exception so I'm logging the exception I",
    "start": "2877480",
    "end": "2883460"
  },
  {
    "text": "was not okay I'm logging the a the exception so how can I test that I'm creating a thread that will be cooling",
    "start": "2883460",
    "end": "2890780"
  },
  {
    "text": "my infinite loop method then I'm starting the thread and when I'm pushing",
    "start": "2890780",
    "end": "2895970"
  },
  {
    "text": "the press the button I will about the thread yeah I never do that with one",
    "start": "2895970",
    "end": "2902900"
  },
  {
    "text": "yeah yeah don't don't do that just for for the audience so if I'm running this",
    "start": "2902900",
    "end": "2908930"
  },
  {
    "text": "I'm expecting to see press 'enter to terminate the the thread working I am",
    "start": "2908930",
    "end": "2915410"
  },
  {
    "text": "pressing just one line we thread about exceptions and I'm telling you that just from the fact we already",
    "start": "2915410",
    "end": "2920900"
  },
  {
    "text": "know that your console is going to be fluid advice for that but let us let steel John speed up is a judge here I'm",
    "start": "2920900",
    "end": "2926900"
  },
  {
    "text": "running the code I have a present to",
    "start": "2926900",
    "end": "2932690"
  },
  {
    "text": "terminate working on so it's very",
    "start": "2932690",
    "end": "2939140"
  },
  {
    "text": "important in this job to learn from your mistakes yes and remember the mistake I",
    "start": "2939140",
    "end": "2944930"
  },
  {
    "text": "did earlier it was a trusting Christophe to make a repro and so if we're not",
    "start": "2944930",
    "end": "2950750"
  },
  {
    "text": "always okay don't throw is my fault if we check the project and we see that it's running in debug mode it's very",
    "start": "2950750",
    "end": "2957320"
  },
  {
    "text": "important to do your repo in the release mode because it changed a lot of thing triggers a lot of optimization and this",
    "start": "2957320",
    "end": "2964250"
  },
  {
    "text": "can change the behavior of your PMI my mistake so this time okay I run it run",
    "start": "2964250",
    "end": "2972290"
  },
  {
    "text": "it working and so another part that is",
    "start": "2972290",
    "end": "2979160"
  },
  {
    "text": "important in this job is not giving up",
    "start": "2979160",
    "end": "2983559"
  },
  {
    "text": "okay once again Christophe is trying to trick you because he's running the",
    "start": "2984340",
    "end": "2990350"
  },
  {
    "text": "project is any CPU and if you are running with the default settings then it will run your program in 32 bits and",
    "start": "2990350",
    "end": "2997520"
  },
  {
    "text": "I now on our server it is running 64-bit you're right",
    "start": "2997520",
    "end": "3003280"
  },
  {
    "text": "lots of things change sorry we are using pointers that have double the size and",
    "start": "3003280",
    "end": "3008410"
  },
  {
    "text": "so maybe it's overflowing some kind of data structure and you never know",
    "start": "3008410",
    "end": "3013660"
  },
  {
    "text": "sure sure sure of the flowing of the Ponyo Ponyo yes so what I'm supposed to",
    "start": "3013660",
    "end": "3019270"
  },
  {
    "text": "I'm just running pointer size right just",
    "start": "3019270",
    "end": "3026500"
  },
  {
    "text": "sighs now so it can't be convicted it can be the poet so here again we have a",
    "start": "3026500",
    "end": "3032350"
  },
  {
    "text": "conflict between different view of the same reality so well later in reality",
    "start": "3032350",
    "end": "3039760"
  },
  {
    "text": "and your view yes okay okay so my reality is supposed to",
    "start": "3039760",
    "end": "3045080"
  },
  {
    "text": "be like this when you are calling thread that abort it's a kind of a synchronous",
    "start": "3045080",
    "end": "3050120"
  },
  {
    "text": "call what I mean by a synchronous I mean that the call itself will set a flag on",
    "start": "3050120",
    "end": "3055760"
  },
  {
    "text": "the thread objects and in the flow of execution of this Fred",
    "start": "3055760",
    "end": "3061220"
  },
  {
    "text": "when enrich what we call safe place by the just-in-time compiler then it will",
    "start": "3061220",
    "end": "3066860"
  },
  {
    "text": "throw the thread about exceptions to be sure that it's in the right thread that the fan about exception will be thrown",
    "start": "3066860",
    "end": "3072860"
  },
  {
    "text": "and then this code check that if you are in a try-catch block at the end of the",
    "start": "3072860",
    "end": "3078740"
  },
  {
    "text": "catch block in ensure that the exception sorry the exception yeah so - take again",
    "start": "3078740",
    "end": "3085910"
  },
  {
    "text": "will be reef route but outside of any try block that's my view of the reality",
    "start": "3085910",
    "end": "3091760"
  },
  {
    "text": "who is writing the code that is generated by the just-in-time compiler",
    "start": "3091760",
    "end": "3097250"
  },
  {
    "text": "okay so that you're interesting because another thing that changed when we are running 64-bit with that framework is",
    "start": "3097250",
    "end": "3103340"
  },
  {
    "text": "that you will be using a rigid which is the Nuge it kind of new you and who say",
    "start": "3103340",
    "end": "3109730"
  },
  {
    "text": "new say bugs and so maybe we've run into a bug in such it and there is one way to",
    "start": "3109730",
    "end": "3116330"
  },
  {
    "text": "find out okay is if you open the application configuration file okay and so time for",
    "start": "3116330",
    "end": "3124610"
  },
  {
    "text": "some live coding you could add a runtime mud run time mode I'm too old for that",
    "start": "3124610",
    "end": "3130100"
  },
  {
    "text": "run time node and here you can add a key which is use legacy JIT like like this",
    "start": "3130100",
    "end": "3141890"
  },
  {
    "text": "no I see it I said so use it like this",
    "start": "3141890",
    "end": "3151569"
  },
  {
    "text": "what oh you mean this so sorry huge legacy",
    "start": "3151960",
    "end": "3160119"
  },
  {
    "text": "jeez I mean there is no auto-completion so just get last legacy get like this oh",
    "start": "3160119",
    "end": "3166210"
  },
  {
    "text": "yes okay so he's doing that because because we gave the same torque at a dot",
    "start": "3166210",
    "end": "3173530"
  },
  {
    "text": "next no it was a data developer days and he did a typo on on purpose here and so",
    "start": "3173530",
    "end": "3180850"
  },
  {
    "text": "it didn't work and I was on a stage wondering why he wasn't working so now I'm careful okay front I'll enable",
    "start": "3180850",
    "end": "3187810"
  },
  {
    "text": "equals first please with with upper case come on well force Oh true yeah first",
    "start": "3187810",
    "end": "3197110"
  },
  {
    "text": "sure because it's usually guess he so I'm expecting true in your team oh no ya",
    "start": "3197110",
    "end": "3203080"
  },
  {
    "text": "[Laughter] don't don't thank me okay it's just saving the",
    "start": "3203080",
    "end": "3210310"
  },
  {
    "text": "demos so what I'm doing this I'm telling at the wrong time that I want to use the",
    "start": "3210310",
    "end": "3216220"
  },
  {
    "text": "the old interesting time compiler when the application would be running so we will be in release 64-bit with the long",
    "start": "3216220",
    "end": "3225250"
  },
  {
    "text": "pointers yeah and with the old just-in-time compiler yeah run it work",
    "start": "3225250",
    "end": "3231130"
  },
  {
    "text": "again just one line and so we've confirmed that there is a bug in digit",
    "start": "3231130",
    "end": "3239220"
  },
  {
    "text": "so the first thing we did is reporting reporting it to Microsoft because we are",
    "start": "3239220",
    "end": "3244810"
  },
  {
    "text": "good citizens yeah so they told us that they would not fix it",
    "start": "3244810",
    "end": "3249960"
  },
  {
    "text": "but they're they have good reason they have good reason it's just that apparently it's very",
    "start": "3250070",
    "end": "3256460"
  },
  {
    "text": "complex fix it happened de Burgh happen only on very specific card and it's only",
    "start": "3256460",
    "end": "3265700"
  },
  {
    "text": "under that framework because you don't have a shredder board on the net core and new aboard no problem so to fix to",
    "start": "3265700",
    "end": "3274250"
  },
  {
    "text": "fix it in our code base what we did is adding another catch block where we specifically catch those",
    "start": "3274250",
    "end": "3281330"
  },
  {
    "text": "read about exception and then we we threw it ourself so that's some conduct",
    "start": "3281330",
    "end": "3286850"
  },
  {
    "text": "I never imagined I would be I would be writing ok so through this case we illustrated the",
    "start": "3286850",
    "end": "3294740"
  },
  {
    "text": "importance of verifying your your assumption which may be which may be",
    "start": "3294740",
    "end": "3301100"
  },
  {
    "text": "incorrect and in fact remember how nothing was logged it was especially",
    "start": "3301100",
    "end": "3307130"
  },
  {
    "text": "hard to find the code of the problem because we didn't show it but in this",
    "start": "3307130",
    "end": "3312830"
  },
  {
    "text": "code there is actually some logging going on in the catch block but it turns out that whenever you entered the",
    "start": "3312830",
    "end": "3319430"
  },
  {
    "text": "abdomen you abort the thread and sew the thread of the a synchronous logger was",
    "start": "3319430",
    "end": "3325550"
  },
  {
    "text": "being aborted and that's why we didn't get any log yeah but if you go with the",
    "start": "3325550",
    "end": "3332540"
  },
  {
    "text": "right mindset and method that method Akali confirm each of your assumption",
    "start": "3332540",
    "end": "3338410"
  },
  {
    "text": "sooner or later you will get to the root of the problem of a letter ok ok so we",
    "start": "3338410",
    "end": "3348710"
  },
  {
    "text": "also wanted to show you that sometimes you need to have your own tool like what",
    "start": "3348710",
    "end": "3355370"
  },
  {
    "text": "I've did which the set of Salah Ramsay some some time you need to extend the tool that you are using like what Kevin",
    "start": "3355370",
    "end": "3363350"
  },
  {
    "text": "did with our windbg because it just helped you to scale in your investigation so don't be scared don't",
    "start": "3363350",
    "end": "3369530"
  },
  {
    "text": "be scared you can do it and it will save you a lot of time I think the the most",
    "start": "3369530",
    "end": "3375860"
  },
  {
    "text": "important type of as you've seen is like you never",
    "start": "3375860",
    "end": "3380920"
  },
  {
    "text": "ever assume that you know what's going on because if what you see is not like",
    "start": "3380920",
    "end": "3387640"
  },
  {
    "text": "what the model that you have in mind you need to verify verify always and more or",
    "start": "3387640",
    "end": "3393280"
  },
  {
    "text": "further not you will see that even with a wise and a long career you might be",
    "start": "3393280",
    "end": "3398710"
  },
  {
    "text": "wrong okay so we are also we have written some blog post so if you want to",
    "start": "3398710",
    "end": "3405970"
  },
  {
    "text": "dig a little bit further inside the tooling inside the kind of the investigation you just look for the",
    "start": "3405970",
    "end": "3411910"
  },
  {
    "text": "creature labs blog series and you can touch us on Twitter if you have any",
    "start": "3411910",
    "end": "3418030"
  },
  {
    "text": "question and I would like to thank you for your passions so I know this is the",
    "start": "3418030",
    "end": "3430060"
  },
  {
    "text": "last session of the day before the the craziness will start so we we have three",
    "start": "3430060",
    "end": "3436390"
  },
  {
    "text": "minutes but since it's the last session if you want to ask more questions we are",
    "start": "3436390",
    "end": "3441610"
  },
  {
    "text": "free to answer no question oh yeah sorry",
    "start": "3441610",
    "end": "3451080"
  },
  {
    "text": "what's my favorite decompiler I'm old enough to remember the reflector time so",
    "start": "3451590",
    "end": "3458050"
  },
  {
    "text": "I used to use reflector before it was no more reflector but I'm using il spy you",
    "start": "3458050",
    "end": "3463330"
  },
  {
    "text": "can use what is it so personally well there is dot peek from jet brain that I",
    "start": "3463330",
    "end": "3470050"
  },
  {
    "text": "like a lot to navigate to cut that it's painfully slow to open so if the jet",
    "start": "3470050",
    "end": "3475090"
  },
  {
    "text": "brain guy in the room please optimize that thing also there is the inspire",
    "start": "3475090",
    "end": "3480700"
  },
  {
    "text": "which is well not as practical than dot",
    "start": "3480700",
    "end": "3485740"
  },
  {
    "text": "peak but it allows us to live debug a process which is incredible yes you can set breakpoints and everything you don't",
    "start": "3485740",
    "end": "3492340"
  },
  {
    "text": "have you don't need to have the source code it's much more than just a compiler",
    "start": "3492340",
    "end": "3498390"
  },
  {
    "text": "James 5d ends by DN sorry for the French accents DN spy sorry just below the",
    "start": "3498390",
    "end": "3506200"
  },
  {
    "text": "light",
    "start": "3506200",
    "end": "3508349"
  },
  {
    "text": "okay so the question was why did you decide to use like a remote debugger",
    "start": "3525089",
    "end": "3532390"
  },
  {
    "text": "instead of having a custom build with more instrumentation inside I think you",
    "start": "3532390",
    "end": "3537880"
  },
  {
    "text": "can answer this one where I can give you answer the first one is time this is",
    "start": "3537880",
    "end": "3543269"
  },
  {
    "text": "well this is what this is Malik or forcefully abort six but we have two",
    "start": "3543269",
    "end": "3550150"
  },
  {
    "text": "cases here with 92 for the leak it's small enough that you wouldn't see it on",
    "start": "3550150",
    "end": "3555579"
  },
  {
    "text": "on a deaf computer so it's really hard to instrument and you don't even know where to instrument actually yes",
    "start": "3555579",
    "end": "3562479"
  },
  {
    "text": "for the stray about succession it's even worse since we didn't even know what triggers it",
    "start": "3562479",
    "end": "3568809"
  },
  {
    "text": "in fact so I mentioned that the abdomen is unloaded when you change a",
    "start": "3568809",
    "end": "3574599"
  },
  {
    "text": "configuration file and the configuration file was changed by the app deploy your",
    "start": "3574599",
    "end": "3580539"
  },
  {
    "text": "application that deploys a file in production and so that's something that",
    "start": "3580539",
    "end": "3585549"
  },
  {
    "text": "is very hard to reproduce and that's why as much as possible we prefer to get",
    "start": "3585549",
    "end": "3591190"
  },
  {
    "text": "information directly from the memory dump because you know that the issue is there if we cannot figure it out then we",
    "start": "3591190",
    "end": "3599949"
  },
  {
    "text": "add more traces to the code and yes and other reason is also that some time",
    "start": "3599949",
    "end": "3606630"
  },
  {
    "text": "you can't reproduce the problem we have we are talking about thousands of servers in six data centers like this so",
    "start": "3606630",
    "end": "3614469"
  },
  {
    "text": "when when we have one that is misbehaving and we try to keep it for a",
    "start": "3614469",
    "end": "3622749"
  },
  {
    "text": "short period of time but with because we have the repro over there and if we change a little bit the code add some",
    "start": "3622749",
    "end": "3630039"
  },
  {
    "text": "logs add some stuff you might change the way the threads are behaving so maybe it will work that's another reason",
    "start": "3630039",
    "end": "3638070"
  },
  {
    "text": "yes yeah yeah exactly",
    "start": "3638070",
    "end": "3643950"
  },
  {
    "text": "yeah any other question yes how do we test the curd before",
    "start": "3643950",
    "end": "3655590"
  },
  {
    "text": "putting it on production sir we test a lot we test a lot so we have a lot of",
    "start": "3655590",
    "end": "3663630"
  },
  {
    "text": "unit tests in the code so it's even so",
    "start": "3663630",
    "end": "3672090"
  },
  {
    "text": "we have the unit test we have the tests that run at the build then we have some",
    "start": "3672090",
    "end": "3677970"
  },
  {
    "text": "dedicated server on which we test several applications because we have",
    "start": "3677970",
    "end": "3683130"
  },
  {
    "text": "like microservices communicating to each other so we have the dish first I mean",
    "start": "3683130",
    "end": "3689070"
  },
  {
    "text": "the last step before going to a production we have three products offers and if you if you just miss the the case",
    "start": "3689070",
    "end": "3698070"
  },
  {
    "text": "where the installer application changed the configuration file then you just don't miss it",
    "start": "3698070",
    "end": "3703410"
  },
  {
    "text": "because we are doing the test in a question of hours not in a crucial knows of days and maybe in this environment we",
    "start": "3703410",
    "end": "3709440"
  },
  {
    "text": "don't deploy until the end of the test so but for those specific issues we",
    "start": "3709440",
    "end": "3715290"
  },
  {
    "text": "don't test it I mean I don't know how to tell that No",
    "start": "3715290",
    "end": "3720289"
  },
  {
    "text": "so how much time then did it take days",
    "start": "3726190",
    "end": "3732019"
  },
  {
    "text": "please two to three days yeah for those investigation yeah they took took about",
    "start": "3732019",
    "end": "3740809"
  },
  {
    "text": "the same time I think yeah well then we have an initiation that took weeks yes",
    "start": "3740809",
    "end": "3747019"
  },
  {
    "text": "we have longer investigation because here it's like kind of simple because we",
    "start": "3747019",
    "end": "3752150"
  },
  {
    "text": "showed you the metric that was interesting and then the part of the",
    "start": "3752150",
    "end": "3757549"
  },
  {
    "text": "code and then because we with large memory dump or so it takes a lot of time",
    "start": "3757549",
    "end": "3762589"
  },
  {
    "text": "that's why we try to automate if you if you look for for the blog and on my name",
    "start": "3762589",
    "end": "3772130"
  },
  {
    "text": "also on github and convinced name you will find all the source code of the",
    "start": "3772130",
    "end": "3778009"
  },
  {
    "text": "extension you will also find the source code of application that are using CLR",
    "start": "3778009",
    "end": "3784190"
  },
  {
    "text": "MD that you could use to make your own tool to automate all the process it's really really simple believe me it's",
    "start": "3784190",
    "end": "3790339"
  },
  {
    "text": "really really simple so try to automate your own investigation it will save you a lot of time so for example for the",
    "start": "3790339",
    "end": "3797869"
  },
  {
    "text": "timer we were doing a lot of stuff like manually and then we wrote our own",
    "start": "3797869",
    "end": "3803150"
  },
  {
    "text": "windbg extension and we just added a new command called timer information and so",
    "start": "3803150",
    "end": "3809029"
  },
  {
    "text": "now we just bang TI and we get the list of all the timers with all the callbacks",
    "start": "3809029",
    "end": "3814089"
  },
  {
    "text": "so we learn from what we are experiencing and we are trying to to",
    "start": "3814089",
    "end": "3820190"
  },
  {
    "text": "minimize the number of time that we are spending on a manual process",
    "start": "3820190",
    "end": "3825670"
  },
  {
    "text": "[Applause]",
    "start": "3828240",
    "end": "3835070"
  }
]