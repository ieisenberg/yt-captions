[
  {
    "text": "hello welcome to the last talk at the conference um so a lot of the time I do these last",
    "start": "420",
    "end": "6540"
  },
  {
    "text": "talks at the conference thing and they're like the worst programming language ever or programming's greatest mistakes and and they're hilarious and",
    "start": "6540",
    "end": "13620"
  },
  {
    "text": "everyone laughs this isn't that this is actually sort of technical",
    "start": "13620",
    "end": "19020"
  },
  {
    "text": "um and and sort of uh opinion based I hesitate to use the phrase opinion based",
    "start": "19020",
    "end": "25680"
  },
  {
    "text": "because that suggests that I'm not necessarily right and I definitely am",
    "start": "25680",
    "end": "31500"
  },
  {
    "text": "um and and the title you're doing it wrong it's possible that you're not doing it wrong you might be doing exactly what",
    "start": "31500",
    "end": "38160"
  },
  {
    "text": "I'm going to talk about here in which case you're doing it right um and you can go back to your company",
    "start": "38160",
    "end": "44219"
  },
  {
    "text": "and say well we are doing it right Mark Rendell agrees with me and they will",
    "start": "44219",
    "end": "49379"
  },
  {
    "text": "have no option but to say who the hell is Mark Rendell um so yes",
    "start": "49379",
    "end": "55379"
  },
  {
    "text": "uh so anyway I'm hoping I'm gonna maybe change a few people's minds um this is",
    "start": "55379",
    "end": "61320"
  },
  {
    "text": "an entrenched thing that I'm going to be talking about uh and uh you've got to",
    "start": "61320",
    "end": "67020"
  },
  {
    "text": "start somewhere so I'm starting here and then they'll put it on YouTube hello YouTube Cheapskates",
    "start": "67020",
    "end": "75000"
  },
  {
    "text": "um and there we go there's some negative comments already uh and yeah so let's",
    "start": "75000",
    "end": "81180"
  },
  {
    "text": "let's crack on with it anyway so open API",
    "start": "81180",
    "end": "85580"
  },
  {
    "text": "I've lost my monitor um so I'm gonna have to turn around and look at the slides which is very",
    "start": "86759",
    "end": "93420"
  },
  {
    "text": "unprofessional until the monitor comes back um so yes right let's go back to that one because it's there so what is it",
    "start": "93420",
    "end": "100380"
  },
  {
    "text": "um obligatory Red Dwarf quote uh because I'm old",
    "start": "100380",
    "end": "106040"
  },
  {
    "text": "if you haven't seen Red Dwarf it's probably on one of the streaming services like um Brit box or something",
    "start": "106040",
    "end": "113220"
  },
  {
    "text": "like that so check it out um but no so open API is a structured uh",
    "start": "113220",
    "end": "120899"
  },
  {
    "text": "uh data format for describing apis um and it was started uh as Swagger and",
    "start": "120899",
    "end": "130560"
  },
  {
    "text": "Swagger was kind of like an independent thing it was just pushed by this one company and then Swagger became open API",
    "start": "130560",
    "end": "139500"
  },
  {
    "text": "2.0 and uh it had some some deficiencies and everything so they used that as the",
    "start": "139500",
    "end": "146879"
  },
  {
    "text": "bouncing off point and then they came up with version 3.0 which is the current version of open API and there is a",
    "start": "146879",
    "end": "156180"
  },
  {
    "text": "slightly newer version uh called 3.1 which has got a few changes and and",
    "start": "156180",
    "end": "162900"
  },
  {
    "text": "usability enhancements over 3.0 and then there's a 4.0 kind of",
    "start": "162900",
    "end": "170459"
  },
  {
    "text": "out there prospective ideas for the next version project which I'll talk about a",
    "start": "170459",
    "end": "176519"
  },
  {
    "text": "little bit at the end but uh use this one",
    "start": "176519",
    "end": "182060"
  },
  {
    "text": "oh yeah no I remember this from the last time I gave this talk I forgot to turn off the animations on my copied and",
    "start": "183120",
    "end": "188819"
  },
  {
    "text": "pasted slide if you've seen programming's greatest mistakes you'll know how many of those are copy and",
    "start": "188819",
    "end": "194700"
  },
  {
    "text": "paste problems so yes the one you should be using at the moment is 3.0 3.1 lovely",
    "start": "194700",
    "end": "201239"
  },
  {
    "text": "new and improved not very well supported by editors and all the tooling and all that sort of stuff doesn't really",
    "start": "201239",
    "end": "207120"
  },
  {
    "text": "support it properly yet so um I suspect all of that will catch up",
    "start": "207120",
    "end": "212819"
  },
  {
    "text": "just as 4.0 gets released and everyone wants to use that so the implementation it kind of",
    "start": "212819",
    "end": "220260"
  },
  {
    "text": "thickers up on here and then it disappears again um I think we killed it last night uh so",
    "start": "220260",
    "end": "227400"
  },
  {
    "text": "yes the implementation of open API this is the thing I really want to talk about okay because",
    "start": "227400",
    "end": "233659"
  },
  {
    "text": "NDC most people come to NDC conferences are DOT net developers",
    "start": "233659",
    "end": "239420"
  },
  {
    "text": "some sometimes you get Java developers who thought it was a go-to and they've",
    "start": "239420",
    "end": "244500"
  },
  {
    "text": "just got terribly terribly lost and and they have to watch all these talks about",
    "start": "244500",
    "end": "250140"
  },
  {
    "text": "the superior technology um but so I'm assuming most people here are",
    "start": "250140",
    "end": "256260"
  },
  {
    "text": "building apis in.net hopefully.net6 uh maybe dot Net 7 if you",
    "start": "256260",
    "end": "262560"
  },
  {
    "text": "work for one of those companies that goes yeah no it's fine we'll use the current release we don't need LTS and",
    "start": "262560",
    "end": "268620"
  },
  {
    "text": "when you do open API what people think of as open API in.net is swashbuckle or",
    "start": "268620",
    "end": "276479"
  },
  {
    "text": "end swag and swashbuckle actually if you dot net new web API now it dumps",
    "start": "276479",
    "end": "282419"
  },
  {
    "text": "swashbuckle in there for you and the way that you add open API to your project is",
    "start": "282419",
    "end": "289979"
  },
  {
    "text": "this you have your controller action method that returns an action result and",
    "start": "289979",
    "end": "297240"
  },
  {
    "text": "it has a parameter from body ad book which is your model that you're using to",
    "start": "297240",
    "end": "302340"
  },
  {
    "text": "serialize as Json and pass up there and without any of these attributes you can",
    "start": "302340",
    "end": "308400"
  },
  {
    "text": "sort of produce a barely usable Swagger UI page that will sort of go well",
    "start": "308400",
    "end": "314100"
  },
  {
    "text": "there's a thing and it's called this and the path is this and it takes these parameters other than that I have no",
    "start": "314100",
    "end": "320400"
  },
  {
    "text": "idea and so you want it to be sort of more descriptive and so you add all",
    "start": "320400",
    "end": "325860"
  },
  {
    "text": "these parameters you go produces response type so all the different responses the thing can produce you",
    "start": "325860",
    "end": "331860"
  },
  {
    "text": "document them in in attributes I have uh at the place where I'm currently working",
    "start": "331860",
    "end": "337620"
  },
  {
    "text": "where they're very big into there should be proper open API documentation for all",
    "start": "337620",
    "end": "343080"
  },
  {
    "text": "the apis and there are a lot of apis and",
    "start": "343080",
    "end": "348360"
  },
  {
    "text": "um three or four lines of code so get",
    "start": "348360",
    "end": "353759"
  },
  {
    "text": "something by the ID and it's like we got an injected Cosmos repository so we get",
    "start": "353759",
    "end": "359759"
  },
  {
    "text": "it and then we return it it's like three lines of code and then 15 lines of",
    "start": "359759",
    "end": "366300"
  },
  {
    "text": "attributes to try and get the open API documentation to to work properly",
    "start": "366300",
    "end": "373080"
  },
  {
    "text": "that's how we do it in.net that's how we have been raised by Microsoft to expect things to",
    "start": "373080",
    "end": "381180"
  },
  {
    "text": "work this kind of Microsoft have a history of this",
    "start": "381180",
    "end": "386600"
  },
  {
    "text": "asp.net the original asp.net web forms the whole point of that was that it",
    "start": "386600",
    "end": "393419"
  },
  {
    "text": "looked a lot like Windows forms so people who had been using Visual Basic to build Windows applications could",
    "start": "393419",
    "end": "400740"
  },
  {
    "text": "switch over to using either vb.net or c-sharp to produce web applications but",
    "start": "400740",
    "end": "406979"
  },
  {
    "text": "they could pretend that they were still building desktop applications so they said on click on a button and it",
    "start": "406979",
    "end": "414300"
  },
  {
    "text": "completely hid the fact that that was doing a round trip to the server and doing magic and then chucking it back down there with a megabyte of view state",
    "start": "414300",
    "end": "421259"
  },
  {
    "text": "to make it work and then there was net remote and then that got replaced by WCF",
    "start": "421259",
    "end": "427199"
  },
  {
    "text": "which supported soap as the the hot new thing in 2006 time is just going so fast",
    "start": "427199",
    "end": "434520"
  },
  {
    "text": "now and and with WCF you basically built",
    "start": "434520",
    "end": "439560"
  },
  {
    "text": "your into built your interface and you put service contracts and data contracts and operation contract on stuff and it",
    "start": "439560",
    "end": "445979"
  },
  {
    "text": "generated the soap XML file and you're kind of like fair enough actually because the wisdal files that it sent",
    "start": "445979",
    "end": "452220"
  },
  {
    "text": "nobody wanted to write those by hand but everybody else in the entire tech industry when they",
    "start": "452220",
    "end": "460680"
  },
  {
    "text": "want to do open API they open a text editor and they edit the open api.yaml",
    "start": "460680",
    "end": "467699"
  },
  {
    "text": "file and they put the information in there and then they build the the API to",
    "start": "467699",
    "end": "475199"
  },
  {
    "text": "match that specification and actually you can get code generators that will generate you a basic node.js Express JS",
    "start": "475199",
    "end": "482240"
  },
  {
    "text": "application based on your open API specification it's only in.net that we",
    "start": "482240",
    "end": "487440"
  },
  {
    "text": "do this thing the wrong way around and I'm going to argue that everybody",
    "start": "487440",
    "end": "492960"
  },
  {
    "text": "else is doing it right and we are doing it wrong and that handcrafted artisanal yaml",
    "start": "492960",
    "end": "501120"
  },
  {
    "text": "files are what we should be using just like everybody else and the thing that triggered this for me",
    "start": "501120",
    "end": "508500"
  },
  {
    "text": "so the place where I'm working at the moment very very API heavy very micro",
    "start": "508500",
    "end": "514140"
  },
  {
    "text": "Services uh lots of things running in Azure functions way too many my Nano Services",
    "start": "514140",
    "end": "520560"
  },
  {
    "text": "actually we need to sort of collapse some of those Nano Services into just microservices and",
    "start": "520560",
    "end": "528360"
  },
  {
    "text": "every one of these apis they have a GitHub repo and they've got the swashbuckle in there",
    "start": "528360",
    "end": "534720"
  },
  {
    "text": "they've got the swashbuckle plug-in to make it work with Azure functions and it",
    "start": "534720",
    "end": "540120"
  },
  {
    "text": "works it generates the the Swagger UI page and you can try things out and all",
    "start": "540120",
    "end": "547080"
  },
  {
    "text": "that sort of stuff and then in the GitHub repo they've got an api.md markdown file",
    "start": "547080",
    "end": "554820"
  },
  {
    "text": "which is hand maintained Which documents the API so that you can go to GitHub and",
    "start": "554820",
    "end": "562140"
  },
  {
    "text": "I was looking at this and it's kind of hash hash and then the path and then",
    "start": "562140",
    "end": "570200"
  },
  {
    "text": "get and then a quick description line and then a code sample with a kind of",
    "start": "570260",
    "end": "577260"
  },
  {
    "text": "this is the the schema for the object and a dotted lists and nested lists and",
    "start": "577260",
    "end": "583740"
  },
  {
    "text": "all this sort of stuff and I'm kind of like you're recreating open API yaml in",
    "start": "583740",
    "end": "590760"
  },
  {
    "text": "markdown so you're still having to hand maintain this thing because you want the",
    "start": "590760",
    "end": "596880"
  },
  {
    "text": "information in your GitHub repository but you're not just using the thing",
    "start": "596880",
    "end": "602640"
  },
  {
    "text": "that's already out there and has editor support and standards and linters and",
    "start": "602640",
    "end": "608600"
  },
  {
    "text": "intellisense and all these kinds of things you're just recreating that ad hoc in markdown why are we doing that",
    "start": "608600",
    "end": "615899"
  },
  {
    "text": "and so hence this talk because you know",
    "start": "615899",
    "end": "621240"
  },
  {
    "text": "yaml you can write your open API specification in Json if you don't mind",
    "start": "621240",
    "end": "628080"
  },
  {
    "text": "wearing out your shift two keys on your keyboard with all the the double quotes",
    "start": "628080",
    "end": "634500"
  },
  {
    "text": "unless you're American in which case it's kind of somewhere over by the return key oh I don't know anyway",
    "start": "634500",
    "end": "640680"
  },
  {
    "text": "um but yes uh people kind of say oh I hate the animal the animal is the worst",
    "start": "640680",
    "end": "646399"
  },
  {
    "text": "serialization format yaml is the worst structured data format and I would argue that yes yaml is the worst structured",
    "start": "646399",
    "end": "653940"
  },
  {
    "text": "data format except for all the others it's basically Json without the double",
    "start": "653940",
    "end": "661079"
  },
  {
    "text": "quotes and curly races all over the place yes It suffers from the same thing",
    "start": "661079",
    "end": "666480"
  },
  {
    "text": "that python can suffer from which is when some idiot checks it out into a editor with tabs instead of spaces they",
    "start": "666480",
    "end": "673440"
  },
  {
    "text": "will break everything but if you want to do anything these days",
    "start": "673440",
    "end": "679380"
  },
  {
    "text": "You're editing yaml files uh if you're going to have GitHub actions to do",
    "start": "679380",
    "end": "684540"
  },
  {
    "text": "builds if you're going to run things in kubernetes if you're going to do any of this sort of devops stuff or CI CD stuff",
    "start": "684540",
    "end": "692040"
  },
  {
    "text": "you've got yaml files in there somewhere so just accept it someone at some point",
    "start": "692040",
    "end": "698339"
  },
  {
    "text": "will come up with something better or a better way of editing yaml files but for the time being let's just deal with it",
    "start": "698339",
    "end": "706680"
  },
  {
    "text": "back in the day so I've been doing this for a very long time I've been doing uh",
    "start": "706680",
    "end": "712019"
  },
  {
    "text": "professional software development since I was 17 years old which was uh 1990.",
    "start": "712019",
    "end": "718560"
  },
  {
    "text": "and when I first started and I went out Contracting and I was writing software",
    "start": "718560",
    "end": "724500"
  },
  {
    "text": "in Infamous 4gl on Unix systems and it was full waterfall there was a thing",
    "start": "724500",
    "end": "731640"
  },
  {
    "text": "called ssadm which was a kind of design and implementation methodology and prints too as well and you weren't",
    "start": "731640",
    "end": "738959"
  },
  {
    "text": "allowed to write a line of code until somebody had given you a specification",
    "start": "738959",
    "end": "744140"
  },
  {
    "text": "that detailed every single line of code that you were supposed to write and you",
    "start": "744140",
    "end": "750720"
  },
  {
    "text": "were just kind of so you'd lit you're translating some business analysts description of the system line by line",
    "start": "750720",
    "end": "758720"
  },
  {
    "text": "into C or inFAMOUS 4gl or whatever the language was and at the time we used to",
    "start": "758720",
    "end": "765899"
  },
  {
    "text": "say why can't we just have specs that compile um what and if or even specs that can be",
    "start": "765899",
    "end": "772560"
  },
  {
    "text": "validated specs that you could lint and say does this spec make sense does it",
    "start": "772560",
    "end": "777600"
  },
  {
    "text": "have all the information that is needed and now we have openapi.yaml and for API specs that's",
    "start": "777600",
    "end": "784500"
  },
  {
    "text": "exactly what that is it is a standard you can lint it you can intelli sense it",
    "start": "784500",
    "end": "789540"
  },
  {
    "text": "you can do all this sort of stuff and we're getting to the point where you can just compile it",
    "start": "789540",
    "end": "794880"
  },
  {
    "text": "um and and it will become a working application",
    "start": "794880",
    "end": "799759"
  },
  {
    "text": "why why do you want us to edit yaml files by hand why do you hate us",
    "start": "799980",
    "end": "806339"
  },
  {
    "text": "uh this is the key thing so if you are the",
    "start": "806339",
    "end": "812040"
  },
  {
    "text": "only person working on an API then this argument holds less weight because you",
    "start": "812040",
    "end": "818220"
  },
  {
    "text": "know it's just you and you're noodling away at the thing and it's fine just just use Swagger and swashbuckle or end",
    "start": "818220",
    "end": "826079"
  },
  {
    "text": "swag or whatever but as soon as you have two people or three people or four",
    "start": "826079",
    "end": "831540"
  },
  {
    "text": "people working on the same project and you're building sort of you know this",
    "start": "831540",
    "end": "837180"
  },
  {
    "text": "guy is doing that controller and that girl's doing the other controller and whatever else is going on you need to",
    "start": "837180",
    "end": "844980"
  },
  {
    "text": "have a source of Truth you need to go this is the schema for the user object",
    "start": "844980",
    "end": "850079"
  },
  {
    "text": "this is the schema for the product object um and this is the format that URLs will",
    "start": "850079",
    "end": "857579"
  },
  {
    "text": "take and this is the standard that we're going to use for error reporting in Json objects and that sort of thing and at",
    "start": "857579",
    "end": "865440"
  },
  {
    "text": "that point you want a design document and you want some standards in your project and yeah you could do markdown",
    "start": "865440",
    "end": "871500"
  },
  {
    "text": "files you could maintain a Word document you could put it wherever you want to do it but open API is right there saying",
    "start": "871500",
    "end": "878820"
  },
  {
    "text": "hello I am the accepted standardized shared widely understood supported by",
    "start": "878820",
    "end": "886199"
  },
  {
    "text": "tools way of doing this please use me you create an open api.yaml file you put",
    "start": "886199",
    "end": "892380"
  },
  {
    "text": "it into your source code repository somebody wants to change the specification they open a pull request",
    "start": "892380",
    "end": "898339"
  },
  {
    "text": "yeah you can't open a pull request on a page in confluence",
    "start": "898339",
    "end": "903420"
  },
  {
    "text": "if you have to use Confluence and if you have to use Confluence I am going to at",
    "start": "903420",
    "end": "909959"
  },
  {
    "text": "some point get NDC to let me set up a booth where people who have to use atlassian",
    "start": "909959",
    "end": "916199"
  },
  {
    "text": "software in their jobs can come and get a hug",
    "start": "916199",
    "end": "921139"
  },
  {
    "text": "can't do completely no jokes um you know it's atlassian",
    "start": "924360",
    "end": "929639"
  },
  {
    "text": "um but yes Confluence specs in Confluence Pages someone comes along and changes it there's no review process",
    "start": "929639",
    "end": "935760"
  },
  {
    "text": "there's no what about this and so forth open api.yaml file git merge can cope",
    "start": "935760",
    "end": "942060"
  },
  {
    "text": "with it really nicely because it's structured get merge kind of understand structured things and it can go through",
    "start": "942060",
    "end": "948660"
  },
  {
    "text": "a review it can go through uh people nitpicking on things and everything else so it's that it becomes that single",
    "start": "948660",
    "end": "956040"
  },
  {
    "text": "source of Truth for your team it separates the design and the implementation and there's that that",
    "start": "956040",
    "end": "963420"
  },
  {
    "text": "famous saying that with six weeks of coding you can save yourself literally",
    "start": "963420",
    "end": "968579"
  },
  {
    "text": "six hours of design time um but sitting around a whiteboard and I'm",
    "start": "968579",
    "end": "976260"
  },
  {
    "text": "actually uh I think it's first time is going to be at NDC Oslo I have a new",
    "start": "976260",
    "end": "981779"
  },
  {
    "text": "two-day workshop on designing and implementing apis and it starts off with",
    "start": "981779",
    "end": "987360"
  },
  {
    "text": "the Whiteboard and going okay so this is the API it's it's interesting because it's going to be a different Workshop every time because I'm not going to tell",
    "start": "987360",
    "end": "994019"
  },
  {
    "text": "them what's right it's just uh idea storming at the start and saying oh",
    "start": "994019",
    "end": "999300"
  },
  {
    "text": "should we have this object and that object but you start around a whiteboard and you design it and you show the links",
    "start": "999300",
    "end": "1004880"
  },
  {
    "text": "and the ways of getting from this place to that place and all this sort of stuff but when it comes time to write that",
    "start": "1004880",
    "end": "1011060"
  },
  {
    "text": "down into a form that then becomes the uh the driver for the project you codify",
    "start": "1011060",
    "end": "1017120"
  },
  {
    "text": "it as open API and then you've got your open api.yaml file in your repository",
    "start": "1017120",
    "end": "1022940"
  },
  {
    "text": "and you work on the code until what happens matches what the specs is if this is separate design and",
    "start": "1022940",
    "end": "1029540"
  },
  {
    "text": "implementation um it's a better description of your API so I'm going to show you some of the",
    "start": "1029540",
    "end": "1036020"
  },
  {
    "text": "stuff that you can stick into these yaml files if you hand craft them artisanally",
    "start": "1036020",
    "end": "1041140"
  },
  {
    "text": "and getting them into swashbuckle or end swag it's possible",
    "start": "1041140",
    "end": "1048079"
  },
  {
    "text": "but some of the ways you have to do it have really really disgusting there's",
    "start": "1048079",
    "end": "1053179"
  },
  {
    "text": "like callbacks and assembly attributes and all sorts of mad stuff in there whereas you can just type it in you can",
    "start": "1053179",
    "end": "1059960"
  },
  {
    "text": "put mark down in some of the sections and the renderers will nicely format that for you with bold sections and code",
    "start": "1059960",
    "end": "1067640"
  },
  {
    "text": "syntax highlighted sections and everything so you actually have a better a human Focus description of your API",
    "start": "1067640",
    "end": "1075500"
  },
  {
    "text": "rather than what the machine generates and finally and I'll show you a couple",
    "start": "1075500",
    "end": "1080720"
  },
  {
    "text": "of examples of this you have automated documentation so as far as most.net",
    "start": "1080720",
    "end": "1086360"
  },
  {
    "text": "developers are concerned the documentation is Swagger UI Swagger UI is not documentation it's a it's a hack",
    "start": "1086360",
    "end": "1093860"
  },
  {
    "text": "it and try it interface but it's not documentation you can produce actual",
    "start": "1093860",
    "end": "1100299"
  },
  {
    "text": "static documentation which you can include in your GitHub repository so",
    "start": "1100299",
    "end": "1105740"
  },
  {
    "text": "your application doesn't even need to be running for somebody to learn how to use it imagine that",
    "start": "1105740",
    "end": "1113559"
  },
  {
    "text": "um this is not open API this is protobuf uh Proto buff",
    "start": "1114200",
    "end": "1120799"
  },
  {
    "text": "and grpc which is another thing that I'm quite hot on uh",
    "start": "1120799",
    "end": "1126620"
  },
  {
    "text": "you define your messages and you define your services in the protobuf language",
    "start": "1126620",
    "end": "1133580"
  },
  {
    "text": "and then you compile that with proto-c and it generates the classes and the",
    "start": "1133580",
    "end": "1140059"
  },
  {
    "text": "stubs for the services and then you override things and you implement it and everything else and again",
    "start": "1140059",
    "end": "1147140"
  },
  {
    "text": "huh in.net uh there are multiple",
    "start": "1147140",
    "end": "1153919"
  },
  {
    "text": "um ways of doing this so Mark gravel who is an extremely talented developer who I",
    "start": "1153919",
    "end": "1161240"
  },
  {
    "text": "have an enormous amount of respect for has a code first way of doing both protobuf and grpc you create C sharp",
    "start": "1161240",
    "end": "1169520"
  },
  {
    "text": "code and you annotate it with attributes and it generates the Proto file at runtime",
    "start": "1169520",
    "end": "1175400"
  },
  {
    "text": "um but the other way of doing it is to write the Proto file and then use the official",
    "start": "1175400",
    "end": "1182740"
  },
  {
    "text": "grpc.net libraries to generate those base classes and the difference is that",
    "start": "1182740",
    "end": "1188660"
  },
  {
    "text": "by doing that you can get a file that you're sharing with your users which is",
    "start": "1188660",
    "end": "1194840"
  },
  {
    "text": "how they create their client to interact with your service but also has all this",
    "start": "1194840",
    "end": "1201679"
  },
  {
    "text": "it has comments this is the other reason why yaml is a",
    "start": "1201679",
    "end": "1207200"
  },
  {
    "text": "superior format to Json because yaml supports comments and Jason doesn't so",
    "start": "1207200",
    "end": "1212600"
  },
  {
    "text": "when you go to use the money type from Google apis you don't have to go well",
    "start": "1212600",
    "end": "1217820"
  },
  {
    "text": "what's units and Nanos what does that mean because there's comments in the",
    "start": "1217820",
    "end": "1222860"
  },
  {
    "text": "Proto file to explain to you how that works",
    "start": "1222860",
    "end": "1228440"
  },
  {
    "text": "so let's start looking at open API because this is the other thing that that I've noticed is it's generated for",
    "start": "1228440",
    "end": "1235820"
  },
  {
    "text": "us so you look at you go to slash Swagger and you get the UI thing comes up quite",
    "start": "1235820",
    "end": "1243020"
  },
  {
    "text": "a lot of dotnet developers who've probably been using this stuff for for years now actually have no idea what",
    "start": "1243020",
    "end": "1249860"
  },
  {
    "text": "open API itself looks like they don't know they've never looked at it they just look at Swagger and they go that's",
    "start": "1249860",
    "end": "1255140"
  },
  {
    "text": "it that's what open API is so let's let's actually dig into what you've got in here so at the top I say this is an",
    "start": "1255140",
    "end": "1261980"
  },
  {
    "text": "open API file and this is version of 3.0.0 at which point Visual Studio code",
    "start": "1261980",
    "end": "1267880"
  },
  {
    "text": "kicks the open API extensions that I have installed and they come to life and start putting red squiggles under",
    "start": "1267880",
    "end": "1274220"
  },
  {
    "text": "everything because I've done it wrong um but uh so I use that as my my top",
    "start": "1274220",
    "end": "1280760"
  },
  {
    "text": "level thing and then I have this info section getting this info section in using n swag or swashbuckle is",
    "start": "1280760",
    "end": "1286220"
  },
  {
    "text": "challenging it's it's no obvious way of doing it um and so I have a title for my uh my",
    "start": "1286220",
    "end": "1292700"
  },
  {
    "text": "API and I tell you which version it is um and then I put contact information in there because I'm nice and if you have",
    "start": "1292700",
    "end": "1299539"
  },
  {
    "text": "problems with my API I want you to be able to contact me we're in a fantasy world here okay so let's just go with it",
    "start": "1299539",
    "end": "1307340"
  },
  {
    "text": "and imagine that I'm that kind of person so it's got my name and my email and a URL where you can find out more and then",
    "start": "1307340",
    "end": "1314000"
  },
  {
    "text": "we have tags we can tag things and things can have more than one tag and if",
    "start": "1314000",
    "end": "1319280"
  },
  {
    "text": "I have this tag section at the top here I can add additional information to the",
    "start": "1319280",
    "end": "1324320"
  },
  {
    "text": "tags like descriptions and so forth and then all I have to do is reference that tag elsewhere in the document and all",
    "start": "1324320",
    "end": "1330919"
  },
  {
    "text": "that information will come with it and then we have paths and uh we declare",
    "start": "1330919",
    "end": "1339140"
  },
  {
    "text": "so we have a paths section in our uh in our yaml file and then beneath that we",
    "start": "1339140",
    "end": "1346760"
  },
  {
    "text": "have a series of objects Each of which is the property name for it is a path so",
    "start": "1346760",
    "end": "1352760"
  },
  {
    "text": "here it's slash read slash or slash red slash books um English yay that's that's quite",
    "start": "1352760",
    "end": "1360020"
  },
  {
    "text": "obviously red and not read okay so just we know and then below that you have",
    "start": "1360020",
    "end": "1367100"
  },
  {
    "text": "operations and you have get and then you have an operation ID that gives it a nice name which will display somewhere",
    "start": "1367100",
    "end": "1374720"
  },
  {
    "text": "very nice and then you have a summary of what this is summary this is one of those so anything that says description",
    "start": "1374720",
    "end": "1380000"
  },
  {
    "text": "or summary you can use yaml's sort of multi-line text feature and you can dump",
    "start": "1380000",
    "end": "1385640"
  },
  {
    "text": "mark down in there and that will render nicely into various user interfaces I say this is part of the book section",
    "start": "1385640",
    "end": "1391760"
  },
  {
    "text": "this is uh got the Tag books on here and then I have a response section and I say",
    "start": "1391760",
    "end": "1397640"
  },
  {
    "text": "okay this could respond with a 200 and the description of that would be okay and uh",
    "start": "1397640",
    "end": "1403640"
  },
  {
    "text": "I can provide more information in there as well so I can say that 200 okay it'll have",
    "start": "1403640",
    "end": "1410360"
  },
  {
    "text": "some content and when the content is application Json then it will adhere to",
    "start": "1410360",
    "end": "1416120"
  },
  {
    "text": "this Json schema and I can reference that and I can declare that at the end of my yaml file and then reuse that",
    "start": "1416120",
    "end": "1423080"
  },
  {
    "text": "declaration all over the place and I can put examples in there as well so you'll",
    "start": "1423080",
    "end": "1429140"
  },
  {
    "text": "see the the schema bit this is what it looks like you'll see in Swagger UI if",
    "start": "1429140",
    "end": "1434900"
  },
  {
    "text": "you're using swashbuckle around swag but the examples um if you have something that can",
    "start": "1434900",
    "end": "1441260"
  },
  {
    "text": "generate them they'll be complete nonsense if you hand code them you can actually go you know this is a proper",
    "start": "1441260",
    "end": "1447440"
  },
  {
    "text": "example of what this might look like schema this is an interesting point so there's",
    "start": "1447440",
    "end": "1454460"
  },
  {
    "text": "a very good way of describing the structure and types of Json documents",
    "start": "1454460",
    "end": "1459679"
  },
  {
    "text": "called Json schema and so um of course open API supports Json",
    "start": "1459679",
    "end": "1466220"
  },
  {
    "text": "schema almost it doesn't uh it mostly supports it but",
    "start": "1466220",
    "end": "1472820"
  },
  {
    "text": "there's a bunch of things that you can do in Json schema that open API completely ignores and there's a couple",
    "start": "1472820",
    "end": "1478100"
  },
  {
    "text": "of things you can do in open API schema that a Json schema validator will Chuck",
    "start": "1478100",
    "end": "1483559"
  },
  {
    "text": "a fit at so yes but you can essentially describe your object to go as",
    "start": "1483559",
    "end": "1490100"
  },
  {
    "text": "application Json it's an object it's got an ID property a title property a finished app property which is a string",
    "start": "1490100",
    "end": "1496760"
  },
  {
    "text": "but it's got the format date time because JavaScript and Json don't know what a date is and so you can put this information in",
    "start": "1496760",
    "end": "1504200"
  },
  {
    "text": "there as well you can describe the parameters so we can say so we have red slash book slash",
    "start": "1504200",
    "end": "1511039"
  },
  {
    "text": "ID so you can get a specific book that you've read from my done that API all",
    "start": "1511039",
    "end": "1516500"
  },
  {
    "text": "these examples come from a thing that I'm kind of building as an example project for this called dundat because a",
    "start": "1516500",
    "end": "1524900"
  },
  {
    "text": "everybody does to-do lists and B to-do lists are really stressful it's just more psychic weight that I don't need",
    "start": "1524900",
    "end": "1531740"
  },
  {
    "text": "bearing down on me so I'm building a done list once I've done something I'll go I've",
    "start": "1531740",
    "end": "1537320"
  },
  {
    "text": "done it that's it it's fine I read it I did a run I played a song Whatever it",
    "start": "1537320",
    "end": "1543200"
  },
  {
    "text": "might be so yes anyway we've got a little squiggly ID thing up in there and then",
    "start": "1543200",
    "end": "1548299"
  },
  {
    "text": "down here we can say oh there's a parameter it's called ID it's in the path you could put in query or in header",
    "start": "1548299",
    "end": "1554659"
  },
  {
    "text": "in there as well and then we've got a schema and it's type is string so we",
    "start": "1554659",
    "end": "1560720"
  },
  {
    "text": "know that it's it's a string format so you could put integer in there or float or whatever and you can say it's",
    "start": "1560720",
    "end": "1565880"
  },
  {
    "text": "required so people know that you have to put that in there because otherwise you'll just get the the other end point",
    "start": "1565880",
    "end": "1574640"
  },
  {
    "text": "and we can describe requests as well in much the same way so if we say I want to",
    "start": "1574640",
    "end": "1579980"
  },
  {
    "text": "say I I covered a distance um then we",
    "start": "1579980",
    "end": "1585580"
  },
  {
    "text": "I really need to check my examples so we go yes uh this is for measuring runs or",
    "start": "1585580",
    "end": "1591380"
  },
  {
    "text": "bike rides or walks or whatever you might be doing and so when you want to say oh I I covered a distance then you",
    "start": "1591380",
    "end": "1598460"
  },
  {
    "text": "need to specify a request body that includes the author and the title of the distance that you covered",
    "start": "1598460",
    "end": "1605059"
  },
  {
    "text": "um that should actually be how far was it what units is that in and what were",
    "start": "1605059",
    "end": "1610279"
  },
  {
    "text": "you doing running cycling or walking but never mind",
    "start": "1610279",
    "end": "1615440"
  },
  {
    "text": "I edited half of it and not the other half never mind anyway um but yes so you can you can specify",
    "start": "1615440",
    "end": "1622400"
  },
  {
    "text": "what your request should look like as well so doing that all the way you know if",
    "start": "1622400",
    "end": "1628820"
  },
  {
    "text": "you have to um copy and paste that schema and into",
    "start": "1628820",
    "end": "1634340"
  },
  {
    "text": "everything that's returning a book or everything that's adding or updating a distance or anything like that then",
    "start": "1634340",
    "end": "1642500"
  },
  {
    "text": "you're going to end up with the kind of copy and paste mistakes that end up with distances having authors and titles and",
    "start": "1642500",
    "end": "1648200"
  },
  {
    "text": "you don't want that so what you want is a sort of shared area where you can declare reusable components and so",
    "start": "1648200",
    "end": "1655520"
  },
  {
    "text": "there's a components section in an open API spec and in there you can put",
    "start": "1655520",
    "end": "1661220"
  },
  {
    "text": "schemas responses request bodies parameters headers security schemes examples links and callbacks and so all",
    "start": "1661220",
    "end": "1669559"
  },
  {
    "text": "of these things if when you've got a location header which is going to have a URL in it you can just create a",
    "start": "1669559",
    "end": "1676340"
  },
  {
    "text": "component under headers that says location or created or whatever you want to call it and then you can just",
    "start": "1676340",
    "end": "1682580"
  },
  {
    "text": "reference that from wherever when you've got a sort of standard um",
    "start": "1682580",
    "end": "1687980"
  },
  {
    "text": "object to represent some data you put that into schemas and then when you've got a 200 response that returns that",
    "start": "1687980",
    "end": "1695600"
  },
  {
    "text": "object from various different places you can create a standard response and then reference that rather than writing out",
    "start": "1695600",
    "end": "1702200"
  },
  {
    "text": "response content their schema and everything else so you can reuse things like this",
    "start": "1702200",
    "end": "1709400"
  },
  {
    "text": "and it's incredibly easy you just have components schemas book and then you declare what that schema is and the same",
    "start": "1709400",
    "end": "1716059"
  },
  {
    "text": "thing with responses and examples and everything else and then you can refer to those",
    "start": "1716059",
    "end": "1721700"
  },
  {
    "text": "as hash slash components and just drag",
    "start": "1721700",
    "end": "1726799"
  },
  {
    "text": "them into other places in the spec and open API passes will take care of rehydrating that and doing all that",
    "start": "1726799",
    "end": "1733400"
  },
  {
    "text": "funky cool stuff you can also have references to external",
    "start": "1733400",
    "end": "1740299"
  },
  {
    "text": "files and so you can have a directory of schema in your open API folder and in",
    "start": "1740299",
    "end": "1749059"
  },
  {
    "text": "there you can have book.yaml and you can have an examples directory and you have examples.yaml and you can reference",
    "start": "1749059",
    "end": "1754880"
  },
  {
    "text": "these things the issue with doing this is that you",
    "start": "1754880",
    "end": "1761059"
  },
  {
    "text": "need to bundle it into a single yaml or Json file for publishing because things",
    "start": "1761059",
    "end": "1768559"
  },
  {
    "text": "like Swagger UI and various other things will not follow those links as a rule",
    "start": "1768559",
    "end": "1775279"
  },
  {
    "text": "um but there is a bundler and I'm writing another one because why would I let the fact that there already is one",
    "start": "1775279",
    "end": "1780919"
  },
  {
    "text": "stop me from writing my own um it's not written in.net is the simple",
    "start": "1780919",
    "end": "1786740"
  },
  {
    "text": "answer for that um I'm going to release a whole bunch of stuff where you type dot netspace open",
    "start": "1786740",
    "end": "1792320"
  },
  {
    "text": "API space and then magic things um so yes and we have security I'm just",
    "start": "1792320",
    "end": "1799159"
  },
  {
    "text": "going to stop because it's I've just remembered that I have code that I can share with you so let's let's",
    "start": "1799159",
    "end": "1805760"
  },
  {
    "text": "take a look at some of this in actual practice",
    "start": "1805760",
    "end": "1810520"
  },
  {
    "text": "so yeah here is my yaml file I'm going to make that a little bit bigger is that all right for people at the back",
    "start": "1811460",
    "end": "1818059"
  },
  {
    "text": "yay um yes says someone two rows back",
    "start": "1818059",
    "end": "1825039"
  },
  {
    "text": "so yeah this is a full open API file um I'm just going to make that right there so I got my info there I've got",
    "start": "1825320",
    "end": "1832159"
  },
  {
    "text": "tags and each of my tags have descriptions attached to them I've got a",
    "start": "1832159",
    "end": "1837740"
  },
  {
    "text": "security section where I'm saying auth zero and that's an empty array this is a",
    "start": "1837740",
    "end": "1843799"
  },
  {
    "text": "really weird thing that I learned about yaml while I was figuring out how to do this stuff if you just want a property",
    "start": "1843799",
    "end": "1849140"
  },
  {
    "text": "name uh then uh in an array of objects you have to put",
    "start": "1849140",
    "end": "1855380"
  },
  {
    "text": "in a property name and then an empty array which is going just just use this thing",
    "start": "1855380",
    "end": "1860419"
  },
  {
    "text": "um but yeah and then I have my paths and I've got read books and that has a get",
    "start": "1860419",
    "end": "1866720"
  },
  {
    "text": "um and you can do get books and it returns a list of completed books which refers to schemas list of books and it",
    "start": "1866720",
    "end": "1874159"
  },
  {
    "text": "has an examples thing there and we have a post operation to add a book and you",
    "start": "1874159",
    "end": "1879500"
  },
  {
    "text": "can see here that that uses the new book um schema but the example is just the title",
    "start": "1879500",
    "end": "1887120"
  },
  {
    "text": "would be Hitchhiker's Guide to the Galaxy and the author would be Douglas Adams and then we have a 201 response",
    "start": "1887120",
    "end": "1893179"
  },
  {
    "text": "which returns a 201 created response and a 400 response which returns a bad",
    "start": "1893179",
    "end": "1900860"
  },
  {
    "text": "request and those are external so if I go over here to responses and I can go",
    "start": "1900860",
    "end": "1907279"
  },
  {
    "text": "to 201 created and ah so the description of this is record created and it's not going to",
    "start": "1907279",
    "end": "1913880"
  },
  {
    "text": "have any content because you shouldn't post operations really shouldn't return",
    "start": "1913880",
    "end": "1918919"
  },
  {
    "text": "the object you've just created they should return a URL so you know how to get it",
    "start": "1918919",
    "end": "1924200"
  },
  {
    "text": "um and so that's going to return a location header which is declared yet somewhere else and here we have a",
    "start": "1924200",
    "end": "1930820"
  },
  {
    "text": "location.yaml which is the absolute URI of the created record and the type would be string I'm pretty sure I could put",
    "start": "1930820",
    "end": "1937460"
  },
  {
    "text": "format no I can't never mind",
    "start": "1937460",
    "end": "1945020"
  },
  {
    "text": "so yeah um so going back to here we've got various other things we've got uh",
    "start": "1945020",
    "end": "1952039"
  },
  {
    "text": "examples We've Got A Hitchhiker's Guide to the Galaxy example and a mort example uh we've got distances",
    "start": "1952039",
    "end": "1959600"
  },
  {
    "text": "um where we can go down to the bottom and see that we also have users we've got an",
    "start": "1959600",
    "end": "1966500"
  },
  {
    "text": "operation initialize user there here we've got our examples and our schemas",
    "start": "1966500",
    "end": "1971840"
  },
  {
    "text": "are all declared and we've got a list of books so when we have a list of something we can just say the type of",
    "start": "1971840",
    "end": "1979159"
  },
  {
    "text": "this is array and the items and then we refer over to the book that we've already previously created",
    "start": "1979159",
    "end": "1986140"
  },
  {
    "text": "distance down here yeah there we go that's more like it ID kilometers and",
    "start": "1986140",
    "end": "1992899"
  },
  {
    "text": "type new distance kilometers and type so the new objects are generally",
    "start": "1992899",
    "end": "1998480"
  },
  {
    "text": "um uh the same as the uh sort of actual objects just minus one property it is",
    "start": "1998480",
    "end": "2005919"
  },
  {
    "text": "possible to do inheritance sort of with Json schema so you can declare the new",
    "start": "2005919",
    "end": "2012039"
  },
  {
    "text": "object and then inherit the object with the ID property from it and just add the ID property but it's really ugly and I",
    "start": "2012039",
    "end": "2019899"
  },
  {
    "text": "hate it and so I don't like doing it but for the distance type we say okay this",
    "start": "2019899",
    "end": "2025299"
  },
  {
    "text": "is a string but it's also an enum so it can only be one of these three values so",
    "start": "2025299",
    "end": "2030460"
  },
  {
    "text": "when someone comes along and generates a client it will actually generate an uh an enumeration for that property so when",
    "start": "2030460",
    "end": "2039159"
  },
  {
    "text": "people pass it in they get to choose it from a list of constants or an enum in typescript or whatever it might be and",
    "start": "2039159",
    "end": "2046059"
  },
  {
    "text": "then down at the bottom here we have security schemes and we can say uh yeah so this has auth",
    "start": "2046059",
    "end": "2054220"
  },
  {
    "text": "zero which is oauth 2 with an implicit flow using this authorization URL and",
    "start": "2054220",
    "end": "2060820"
  },
  {
    "text": "this scope or you can use client credentials and there's a token URL at that end point there so client",
    "start": "2060820",
    "end": "2066940"
  },
  {
    "text": "credentials for your desktop applications implicit flow for saying uh",
    "start": "2066940",
    "end": "2072820"
  },
  {
    "text": "Scott Helm be damned I'm breaking oauth and I know I am",
    "start": "2072820",
    "end": "2078280"
  },
  {
    "text": "okay so yes that was the security bit you can",
    "start": "2078280",
    "end": "2083980"
  },
  {
    "text": "specify your security in there the other thing is problems so it's no longer",
    "start": "2083980",
    "end": "2089560"
  },
  {
    "text": "enough just to return a 400 error and that was a bad request as just",
    "start": "2089560",
    "end": "2094839"
  },
  {
    "text": "incredibly mean to say go ah you sent me a request but it was bad and so I'm",
    "start": "2094839",
    "end": "2100599"
  },
  {
    "text": "refusing to serve it it really helps if you send that person a little bit of information about what exactly was wrong",
    "start": "2100599",
    "end": "2106960"
  },
  {
    "text": "with their request did they uh try and pass a big number into a uuid field or",
    "start": "2106960",
    "end": "2113859"
  },
  {
    "text": "it was a value completely missing and so there's a standard now which is actually",
    "start": "2113859",
    "end": "2119500"
  },
  {
    "text": "has its own mine type application slash problem plus Json which you can return",
    "start": "2119500",
    "end": "2125140"
  },
  {
    "text": "back and it's got us what the error was and where the error occurred and it will handle multiple errors and it will tell",
    "start": "2125140",
    "end": "2131560"
  },
  {
    "text": "you everything that was wrong with your thing an asp netcore will actually generate that for you from the model",
    "start": "2131560",
    "end": "2137800"
  },
  {
    "text": "binding so if the model binding fails because of the required attributes or the regex attributes or anything else it",
    "start": "2137800",
    "end": "2144099"
  },
  {
    "text": "will just give you that as a problem object and you can return it back out I'm fine with that by the way I have no",
    "start": "2144099",
    "end": "2151420"
  },
  {
    "text": "desire for people to start manually writing their own model binding um maybe next year",
    "start": "2151420",
    "end": "2158740"
  },
  {
    "text": "um this is roughly what it looks like uh uh so we have the type is a string and",
    "start": "2158740",
    "end": "2164560"
  },
  {
    "text": "the title is a string detail status instance errors is an object uh it's not an array it's an object so each error",
    "start": "2164560",
    "end": "2171760"
  },
  {
    "text": "has its own thing and then you've got sub errors in there um and then you have extensions which means you can put anything you like in",
    "start": "2171760",
    "end": "2178660"
  },
  {
    "text": "there and that's uh that's forward compatibility um and then we can specify the example",
    "start": "2178660",
    "end": "2185560"
  },
  {
    "text": "here uh and tell it what the type is type would normally be a URL saying this",
    "start": "2185560",
    "end": "2191859"
  },
  {
    "text": "is the type of error and then you can click on that and it'll go yeah this is exactly what you did wrong and why it's a bad thing according to the ietf title",
    "start": "2191859",
    "end": "2199960"
  },
  {
    "text": "one or more validation errors occurred Trace ID so that people can link it to their logging system or their",
    "start": "2199960",
    "end": "2206920"
  },
  {
    "text": "distributed tracing system or open Telemetry or whatever it might be and and other cool stuff",
    "start": "2206920",
    "end": "2214240"
  },
  {
    "text": "so yeah so before I go any further I want to",
    "start": "2214240",
    "end": "2220000"
  },
  {
    "text": "show you some of the really cool stuff that this enables if I can find",
    "start": "2220000",
    "end": "2226060"
  },
  {
    "text": "my link here right this is the repo with all the code so",
    "start": "2226060",
    "end": "2235540"
  },
  {
    "text": "the done that API and a really crappy front end for it because I am not a front-end person but you know it works",
    "start": "2235540",
    "end": "2243820"
  },
  {
    "text": "um and this has got the the dundat folder is there and in the done that folder I've",
    "start": "2243820",
    "end": "2251680"
  },
  {
    "text": "got there's the API that's the the solution with the back end in it and I've got a front end cleverly named",
    "start": "2251680",
    "end": "2259020"
  },
  {
    "text": "solution which has got that in there and I've got an open API folder and in my open API folder I've got my open",
    "start": "2259020",
    "end": "2265560"
  },
  {
    "text": "api.yaml file and responses and headers ignore that that's just uh craft from a",
    "start": "2265560",
    "end": "2272320"
  },
  {
    "text": "mistake I made earlier because it saves time so you don't have to make the mistake during the talk I",
    "start": "2272320",
    "end": "2279640"
  },
  {
    "text": "find that very helpful um and then if we go here you can see",
    "start": "2279640",
    "end": "2286359"
  },
  {
    "text": "that we have a link to open the redoc docs",
    "start": "2286359",
    "end": "2291520"
  },
  {
    "text": "and redoc is this is an open source project and it generates not Swagger UI",
    "start": "2291520",
    "end": "2297940"
  },
  {
    "text": "it generates actual uh documentation this is a statically generated page it's",
    "start": "2297940",
    "end": "2305500"
  },
  {
    "text": "some HTML and some JavaScript and you give it a reference to where your open api.yaml file is and then it just",
    "start": "2305500",
    "end": "2312880"
  },
  {
    "text": "generates all of this information and it's really really helpful",
    "start": "2312880",
    "end": "2318160"
  },
  {
    "text": "um you know down the side here uh uh we say oh you can do get slash read",
    "start": "2318160",
    "end": "2323260"
  },
  {
    "text": "books and we've got a response sample here and I can copy that and that's application Json and I can see what the",
    "start": "2323260",
    "end": "2330280"
  },
  {
    "text": "payload is for this and all sorts of other cool stuff I've got response samples and I can expand everything so I",
    "start": "2330280",
    "end": "2337720"
  },
  {
    "text": "can expand this title out here and this is all pulling these examples are all being pulled from my handcrafted",
    "start": "2337720",
    "end": "2345599"
  },
  {
    "text": "openapi.yaml file which is why they make sense and they're not just random strings and",
    "start": "2345599",
    "end": "2352240"
  },
  {
    "text": "numbers and dates and and everything else and so that's that's really nice it's",
    "start": "2352240",
    "end": "2358060"
  },
  {
    "text": "it's quite nice I thought that was the best thing ever until I saw this",
    "start": "2358060",
    "end": "2365760"
  },
  {
    "text": "so this is elements um similar sort of deal uh it seems to be built on web",
    "start": "2366579",
    "end": "2372820"
  },
  {
    "text": "components and I just like the idea of using something in production that uses web components because I haven't had",
    "start": "2372820",
    "end": "2379300"
  },
  {
    "text": "much chance to do that so this is uh describing the done that API and in here",
    "start": "2379300",
    "end": "2385780"
  },
  {
    "text": "so we immediately see this uses um implicito wolf flow and you can use this",
    "start": "2385780",
    "end": "2390940"
  },
  {
    "text": "to um to go and get an authorization token",
    "start": "2390940",
    "end": "2395980"
  },
  {
    "text": "for it and then if I go into books and I go to get list of completed books",
    "start": "2395980",
    "end": "2401260"
  },
  {
    "text": "not only does it demonstrate the thing here and it says okay so you've got to request the security on the request is",
    "start": "2401260",
    "end": "2408220"
  },
  {
    "text": "oauth 2.0 so you need a token here are the responses the body is going to be an array of this object with an idea title",
    "start": "2408220",
    "end": "2414940"
  },
  {
    "text": "and a finished ad um but then over on the side here we've got a kind of send API request",
    "start": "2414940",
    "end": "2421839"
  },
  {
    "text": "that won't actually work because one two three is not a valid Bearer token but look underneath that request sample C",
    "start": "2421839",
    "end": "2428859"
  },
  {
    "text": "sharp HTTP client so what redoc does is it shows you the curl command to call",
    "start": "2428859",
    "end": "2434200"
  },
  {
    "text": "the API what elements does using a plug-in from from somebody else is it",
    "start": "2434200",
    "end": "2440680"
  },
  {
    "text": "gives you request samples for how to make this request",
    "start": "2440680",
    "end": "2447000"
  },
  {
    "text": "using any of these languages and actually for c-sharp it'll show you how",
    "start": "2448980",
    "end": "2454060"
  },
  {
    "text": "to do it using HTTP client or restsharp if you're a fan of restsharp but if you want to do this from JavaScript then",
    "start": "2454060",
    "end": "2460480"
  },
  {
    "text": "it'll show you how to use the fetch XML HTTP request so if you want to support older browsers there you go that's how",
    "start": "2460480",
    "end": "2467020"
  },
  {
    "text": "you do that oh look there's a copy button it's like stack Overflow just for your API so people can just copy and",
    "start": "2467020",
    "end": "2474280"
  },
  {
    "text": "paste stuff now obviously for a lot of languages n swag will generate you a",
    "start": "2474280",
    "end": "2480220"
  },
  {
    "text": "c-sharp client a strongly typed c-sharp client from an open API specification so that's there as well so this is just",
    "start": "2480220",
    "end": "2487780"
  },
  {
    "text": "another alternative way that you can approach this and the key thing here",
    "start": "2487780",
    "end": "2494560"
  },
  {
    "text": "is that the URL for this page is renderlabs.github.io",
    "start": "2494560",
    "end": "2500619"
  },
  {
    "text": "slash LD nug 2012 uh this is from a different repo",
    "start": "2500619",
    "end": "2507420"
  },
  {
    "text": "NDC LDN 2023 yeah it's the same",
    "start": "2507760",
    "end": "2514000"
  },
  {
    "text": "um I tried this talk out first at london.net User Group which by the way if you live in London you should really",
    "start": "2514000",
    "end": "2519339"
  },
  {
    "text": "sign up for their mailing list and go along they have some fantastic events so yes",
    "start": "2519339",
    "end": "2525220"
  },
  {
    "text": "it's in the GitHub repo the application isn't running anywhere I haven't got the application running in as your app",
    "start": "2525220",
    "end": "2531220"
  },
  {
    "text": "services or or a kubernetes cluster or anything like that but the docs are still available and the docs are",
    "start": "2531220",
    "end": "2538180"
  },
  {
    "text": "generated if we go over to the GitHub repo here",
    "start": "2538180",
    "end": "2544060"
  },
  {
    "text": "uh and oh yeah no that's not the GitHub repo",
    "start": "2544060",
    "end": "2549460"
  },
  {
    "text": "where's the GitHub repo got",
    "start": "2549460",
    "end": "2552900"
  },
  {
    "text": "damn it",
    "start": "2557560",
    "end": "2560339"
  },
  {
    "text": "NDC LDN 2023 okay so we have done that and we have a",
    "start": "2564359",
    "end": "2572560"
  },
  {
    "text": "open API file in here and then if we go back up to here we can go into GitHub",
    "start": "2572560",
    "end": "2580660"
  },
  {
    "text": "workflows and we can go into main.yaml here actually let me bring this up in vs code",
    "start": "2580660",
    "end": "2590200"
  },
  {
    "text": "no",
    "start": "2590200",
    "end": "2592980"
  },
  {
    "text": "there we go right workflows main.yaml it's not a",
    "start": "2610900",
    "end": "2617380"
  },
  {
    "text": "huge great complicated thing so build and deploy Pages uh we have uh",
    "start": "2617380",
    "end": "2624339"
  },
  {
    "text": "on the branch Main um steps check out obviously uh install and",
    "start": "2624339",
    "end": "2631960"
  },
  {
    "text": "build so we're going to use dunda open API as our working directory that's where our",
    "start": "2631960",
    "end": "2637000"
  },
  {
    "text": "yaml file is and their directories below that with responses and examples and schemas and whatever else and then we",
    "start": "2637000",
    "end": "2644020"
  },
  {
    "text": "run npx which is the magic npm thing that installs something from npm and",
    "start": "2644020",
    "end": "2650200"
  },
  {
    "text": "then runs it immediately re-docly CLI bundle this is the thing",
    "start": "2650200",
    "end": "2655720"
  },
  {
    "text": "that turns a whole selection of openapi.yaml and Json files and mungs",
    "start": "2655720",
    "end": "2661660"
  },
  {
    "text": "them all together into a single yaml or Json file",
    "start": "2661660",
    "end": "2667000"
  },
  {
    "text": "um and then that will produce a dist slash done that slash open API and then",
    "start": "2667000",
    "end": "2672700"
  },
  {
    "text": "I use James ives's GitHub Pages deploy action to push that folder dist onto my",
    "start": "2672700",
    "end": "2680920"
  },
  {
    "text": "GH Pages branch which then makes it available as a a page",
    "start": "2680920",
    "end": "2687760"
  },
  {
    "text": "makes the HTML Pages available in there",
    "start": "2687760",
    "end": "2692859"
  },
  {
    "text": "um and that's it that's that's the whole thing",
    "start": "2692859",
    "end": "2699339"
  },
  {
    "text": "um so uh the dist folder here where have we got",
    "start": "2699339",
    "end": "2709500"
  },
  {
    "text": "so yeah this is the stuff that's already in that dist folder so we have elements.html so",
    "start": "2709780",
    "end": "2715960"
  },
  {
    "text": "that elements page that really really nice thing with all the code samples and everything else down the side the C",
    "start": "2715960",
    "end": "2721839"
  },
  {
    "text": "sharp code sample and everything else I don't even need to scroll that that",
    "start": "2721839",
    "end": "2728140"
  },
  {
    "text": "doesn't scroll that's it that's that whole page that plus that yaml file that",
    "start": "2728140",
    "end": "2735280"
  },
  {
    "text": "I put a little bit of effort into writing and creating examples in and all that sort of thing that's the whole",
    "start": "2735280",
    "end": "2742359"
  },
  {
    "text": "thing and it just generates that lovely thing and there's an export thing up at",
    "start": "2742359",
    "end": "2748420"
  },
  {
    "text": "the top right of that which will literally dump the entire thing out as pure static HTML so you could email it",
    "start": "2748420",
    "end": "2754780"
  },
  {
    "text": "to somebody and they could just open it on their computer without needing to be able to see the yaml file",
    "start": "2754780",
    "end": "2760720"
  },
  {
    "text": "um it's also got the redoc HTML it's a little bit more involved but really not",
    "start": "2760720",
    "end": "2766119"
  },
  {
    "text": "very much that's just a link to the uh latest read Oakley um thing on there and we have the open",
    "start": "2766119",
    "end": "2773619"
  },
  {
    "text": "API yaml file which gets overwritten as part of that build step so yeah now I have the uh the standard",
    "start": "2773619",
    "end": "2782440"
  },
  {
    "text": "is maintained in my GitHub repository the developers have all agreed that that's it it's Source controlled we have",
    "start": "2782440",
    "end": "2788319"
  },
  {
    "text": "revisions we have code reviews when someone wants to make a change to the specification but now we can also inside",
    "start": "2788319",
    "end": "2795040"
  },
  {
    "text": "the GitHub repo generate redoxy or elements um HTML and we could put",
    "start": "2795040",
    "end": "2802119"
  },
  {
    "text": "Swagger UI in there as well if we wanted to um but but we don't",
    "start": "2802119",
    "end": "2807880"
  },
  {
    "text": "uh so yes um",
    "start": "2807880",
    "end": "2813880"
  },
  {
    "text": "so at the start uh yep we're doing good I mentioned moonwalk open API 4.0 so",
    "start": "2813880",
    "end": "2820480"
  },
  {
    "text": "this is there's a bunch of people at Microsoft working on this but it's an open API working group there's kind of",
    "start": "2820480",
    "end": "2826119"
  },
  {
    "text": "like a standards body for this um there are some issues with the open API format uh the main one is when you",
    "start": "2826119",
    "end": "2834940"
  },
  {
    "text": "think about the structure you have paths and then you have a path and then below",
    "start": "2834940",
    "end": "2840640"
  },
  {
    "text": "that you have the operations and the name of each operation is the HTTP method that you use get put post delete",
    "start": "2840640",
    "end": "2849400"
  },
  {
    "text": "uh which does not account for the fact that actually sometimes API endpoints",
    "start": "2849400",
    "end": "2856240"
  },
  {
    "text": "are polymorphic and so you might have an API endpoint where you can post stuff and you could post I could make it so",
    "start": "2856240",
    "end": "2865180"
  },
  {
    "text": "that I had a single endpoint done that um and you post something to it and then",
    "start": "2865180",
    "end": "2870940"
  },
  {
    "text": "it uses the structure of the Json document to work out what it is you've done and updates the thing appropriately",
    "start": "2870940",
    "end": "2878099"
  },
  {
    "text": "and that might be quite nice but I can't describe that in open API 3.0 because it",
    "start": "2878099",
    "end": "2884980"
  },
  {
    "text": "just has a single post operation so one of the things moonwalk does one of the big things moonwalk does is it changes",
    "start": "2884980",
    "end": "2891700"
  },
  {
    "text": "that and so under paths we have users so",
    "start": "2891700",
    "end": "2899619"
  },
  {
    "text": "that's just the path there and then we have requests and then we have initialize user so we've switched that",
    "start": "2899619",
    "end": "2906940"
  },
  {
    "text": "around that previously we'd have had operationid colon uh initialize user",
    "start": "2906940",
    "end": "2912760"
  },
  {
    "text": "instead of doing that we actually use initialize user as the name of the operation and then below that we specify",
    "start": "2912760",
    "end": "2919000"
  },
  {
    "text": "that the method is put so this means we can have multiple operations that use the same HTTP method so that's quite",
    "start": "2919000",
    "end": "2926440"
  },
  {
    "text": "nice and there are a few other things that um they've just tidied things up and made",
    "start": "2926440",
    "end": "2932140"
  },
  {
    "text": "them easier for human beings to read and write and and that sort of thing",
    "start": "2932140",
    "end": "2937420"
  },
  {
    "text": "um and the other big change is that the Json schema in Moonwalk is actually",
    "start": "2937420",
    "end": "2945940"
  },
  {
    "text": "Jason schema so they have not subsetted and then slightly superseted Jason",
    "start": "2945940",
    "end": "2950980"
  },
  {
    "text": "schema they've just gone if it's Jason schema it's open API 4.0 schema as well",
    "start": "2950980",
    "end": "2956440"
  },
  {
    "text": "apart from that things are pretty much the same it's not a huge change they haven't changed things with a point of",
    "start": "2956440",
    "end": "2962140"
  },
  {
    "text": "changing things so that is there's a GitHub repo",
    "start": "2962140",
    "end": "2968440"
  },
  {
    "text": "for that github.com oai slash moonwalk you can",
    "start": "2968440",
    "end": "2974140"
  },
  {
    "text": "see some more examples in there you can raise issues they've got a discussion section so you can bike shed to your",
    "start": "2974140",
    "end": "2981339"
  },
  {
    "text": "heart's content and talk about stuff so tools uh Swagger UI you're aware of",
    "start": "2981339",
    "end": "2988599"
  },
  {
    "text": "swaggy UI that's the thing that swashbuckle and then swag throw in there for you we also have redock",
    "start": "2988599",
    "end": "2995140"
  },
  {
    "text": "um which is the one of the options for documentation and also the thing that provides that command line interface",
    "start": "2995140",
    "end": "3001859"
  },
  {
    "text": "where you can bundle the yaml files and everything else there's a thing called wither shins which I put up there",
    "start": "3001859",
    "end": "3008280"
  },
  {
    "text": "because there's a thing called wither shins I have no idea",
    "start": "3008280",
    "end": "3014040"
  },
  {
    "text": "um exactly what is very complicated it's it's like latex or something but one of the things so somewhere",
    "start": "3014040",
    "end": "3021540"
  },
  {
    "text": "inside widdishins there's a way of taking an open API spec and just turning it into markdown which I thought would",
    "start": "3021540",
    "end": "3027180"
  },
  {
    "text": "save people at my organization an awful lot of time even if they have to run the bloody",
    "start": "3027180",
    "end": "3032520"
  },
  {
    "text": "Azure function and then go and get the yaml file from that and then punch it through wither shins and then dump that",
    "start": "3032520",
    "end": "3038579"
  },
  {
    "text": "thing into there uh thing there and elements at the",
    "start": "3038579",
    "end": "3043680"
  },
  {
    "text": "bottom that's my current favorite for uh for documentation and stuff and then we",
    "start": "3043680",
    "end": "3050220"
  },
  {
    "text": "have plugins so if you're using vs code for your thing then open API brackets Swagger",
    "start": "3050220",
    "end": "3058440"
  },
  {
    "text": "close brackets editor is the sort of standard there's that's the best plugin",
    "start": "3058440",
    "end": "3063780"
  },
  {
    "text": "for visual studio code there are several but this one is maintained by 42 crunch it's an inbound marketing tool so they",
    "start": "3063780",
    "end": "3071520"
  },
  {
    "text": "do actually maintain it and put some effort into it and it works very nicely if you use jetbrain's Rider then open",
    "start": "3071520",
    "end": "3079020"
  },
  {
    "text": "API it's a it's a plug-in but it's one of those plugins that's automatically installed and you get really nice things",
    "start": "3079020",
    "end": "3086339"
  },
  {
    "text": "in jetbrains Rider I'll show you some of that in a second if you use Visual Studio don't",
    "start": "3086339",
    "end": "3094400"
  },
  {
    "text": "um so to be completely clear there by all means use it for maintaining and editing",
    "start": "3095940",
    "end": "3103020"
  },
  {
    "text": "and creating and doing everything else and right click publishing your asp.net",
    "start": "3103020",
    "end": "3108599"
  },
  {
    "text": "core applications and your W by all means use it for that it's it's fantastic",
    "start": "3108599",
    "end": "3114359"
  },
  {
    "text": "um but if you want to edit an open API file manually use Visual Studio code unless you already have Rider in which",
    "start": "3114359",
    "end": "3121440"
  },
  {
    "text": "case use Rider uh it's very nice um and then",
    "start": "3121440",
    "end": "3127800"
  },
  {
    "text": "bundling so this is that important step if you've broken your spec down into multiple files to make it easier to",
    "start": "3127800",
    "end": "3134520"
  },
  {
    "text": "manage and do pull requests on and everything else then redo you do npm IG",
    "start": "3134520",
    "end": "3141140"
  },
  {
    "text": "redoxy and then it just becomes available and I am aware that there is a",
    "start": "3141140",
    "end": "3146819"
  },
  {
    "text": "sort of pushback against why do I have to install node when I'm a net developer",
    "start": "3146819",
    "end": "3152880"
  },
  {
    "text": "and I feel you I completely agree with you that is actually why I am writing my",
    "start": "3152880",
    "end": "3158819"
  },
  {
    "text": "own bundler speaking of things that I'm writing uh it's quite a lot actually",
    "start": "3158819",
    "end": "3166500"
  },
  {
    "text": "so render labs open api.web that's already up on nuget that works and I'll",
    "start": "3166500",
    "end": "3172319"
  },
  {
    "text": "just show you very quickly what that looks like in code so here is my done that API solution",
    "start": "3172319",
    "end": "3182880"
  },
  {
    "text": "um so I've commented out the stuff that.net new put in there for me that I don't want",
    "start": "3182880",
    "end": "3189300"
  },
  {
    "text": "um so I've taken out this whole bit about Builder environment is development add endpoints API Explorer that's the",
    "start": "3189300",
    "end": "3196200"
  },
  {
    "text": "API reflection tool that swashbuckle uses to generate open API um add Swagger gen we can take that out",
    "start": "3196200",
    "end": "3203040"
  },
  {
    "text": "of there as well we've just got various bits and pieces there and then in our",
    "start": "3203040",
    "end": "3208339"
  },
  {
    "text": "request pipeline we've got the environment.is development we can take out use Swagger and use Swagger UI those",
    "start": "3208339",
    "end": "3214680"
  },
  {
    "text": "came from swashbuckle and instead we can use app.use static open API that's my",
    "start": "3214680",
    "end": "3222240"
  },
  {
    "text": "thing um",
    "start": "3222240",
    "end": "3225500"
  },
  {
    "text": "there we go it's a bit bigger so yes uh you can either sort of make sure that",
    "start": "3234119",
    "end": "3240660"
  },
  {
    "text": "your open API dot yaml file is copied to your um",
    "start": "3240660",
    "end": "3245819"
  },
  {
    "text": "uh folder along with everything else and then you can specify a path to it or you can embed it as an embedded resource in",
    "start": "3245819",
    "end": "3251520"
  },
  {
    "text": "the assembly so it's just a single dll file and this will pull it out as a manifest resource stream uh we specify",
    "start": "3251520",
    "end": "3259079"
  },
  {
    "text": "the version in there the UI path prefix the Json path the yaml path it will",
    "start": "3259079",
    "end": "3264359"
  },
  {
    "text": "generate both the Json file and the yaml file so we give it a yaml file but it'll",
    "start": "3264359",
    "end": "3269460"
  },
  {
    "text": "turn that into Json if something really wants Json and then I want to put elements documentation on here as well",
    "start": "3269460",
    "end": "3275460"
  },
  {
    "text": "so I tell it the path to use for elements there's a re-docly if you prefer re-docly for some reason you can",
    "start": "3275460",
    "end": "3281400"
  },
  {
    "text": "specify that as well that returns a standard API endpoint convention Builder",
    "start": "3281400",
    "end": "3287940"
  },
  {
    "text": "which means you can put allow Anonymous and all the other things on there you can cache it you can apply cache headers",
    "start": "3287940",
    "end": "3293579"
  },
  {
    "text": "to it and all this sort of stuff so it's a lot more configurable than what swashbuckle throws out",
    "start": "3293579",
    "end": "3301140"
  },
  {
    "text": "um and I can show you that running so here's the Swaggy UI this is being",
    "start": "3301140",
    "end": "3307800"
  },
  {
    "text": "generated that's that is running that came out of there that's showing you the",
    "start": "3307800",
    "end": "3313859"
  },
  {
    "text": "Json and if I go to slag up Swagger swagger no",
    "start": "3313859",
    "end": "3320300"
  },
  {
    "text": "uh V1 Docs that generates the elements",
    "start": "3320300",
    "end": "3326540"
  },
  {
    "text": "HTML so it's on the application and it's in the GitHub repository it's exactly",
    "start": "3326540",
    "end": "3331920"
  },
  {
    "text": "the same because it's exactly the same open API file because it's being bundled using the same tool and published or",
    "start": "3331920",
    "end": "3338400"
  },
  {
    "text": "embedded using the same tool on both build processes",
    "start": "3338400",
    "end": "3344760"
  },
  {
    "text": "so that's there that that already works I'm using that in a couple of things and",
    "start": "3344760",
    "end": "3349859"
  },
  {
    "text": "please do go ahead and use it um things I'm working on the bundler is",
    "start": "3349859",
    "end": "3355800"
  },
  {
    "text": "um it's actually pretty much done I just need to actually wrap it in the.net command line tool and publish that",
    "start": "3355800",
    "end": "3363500"
  },
  {
    "text": "analyzers so this goes the other way around and one of the things that I get",
    "start": "3363500",
    "end": "3368880"
  },
  {
    "text": "pushed back on this is people say ah but if you're generating the open API stuff",
    "start": "3368880",
    "end": "3374579"
  },
  {
    "text": "from your application then you know it's right you know that it's it's right and you go",
    "start": "3374579",
    "end": "3382319"
  },
  {
    "text": "no you don't know it's right you just know it's the same you could very well be wrong in two",
    "start": "3382319",
    "end": "3389640"
  },
  {
    "text": "places automatically saving you fifty percent of the effort of being wrong",
    "start": "3389640",
    "end": "3396059"
  },
  {
    "text": "um so yeah but there is this is a good point uh at least you know that the open",
    "start": "3396059",
    "end": "3403319"
  },
  {
    "text": "API that is being put out matches what the API is actually doing even if that",
    "start": "3403319",
    "end": "3409680"
  },
  {
    "text": "is the wrong thing I would argue that this is a full sense of security I'm working on analyzers where you say hey",
    "start": "3409680",
    "end": "3415680"
  },
  {
    "text": "here's the open API file and it will analyze your minimal API or your",
    "start": "3415680",
    "end": "3420780"
  },
  {
    "text": "controllers or your Azure functions and it will actually tell you hey the spec",
    "start": "3420780",
    "end": "3426300"
  },
  {
    "text": "says that this returns a 404 but I can't see anywhere in your code that you're returning a 404 response so I'm going to",
    "start": "3426300",
    "end": "3433740"
  },
  {
    "text": "put a little squiggle here that says you're not returning a 404 and raise a",
    "start": "3433740",
    "end": "3439079"
  },
  {
    "text": "warning with a code and you can then Mark that warning as an error and make it impossible for somebody to push",
    "start": "3439079",
    "end": "3444660"
  },
  {
    "text": "something through a CI build if the code they've written doesn't do what the spec",
    "start": "3444660",
    "end": "3450180"
  },
  {
    "text": "says it does so that'll be fun openapi.test",
    "start": "3450180",
    "end": "3456619"
  },
  {
    "text": "is an attempt to replace horrible spec flow gherkin style things if you can",
    "start": "3456619",
    "end": "3463079"
  },
  {
    "text": "describe your API in yaml why can't you write the tests for your API in yaml so you can put a request and then expected",
    "start": "3463079",
    "end": "3470819"
  },
  {
    "text": "response and this currently just automatically generates X unit tests at",
    "start": "3470819",
    "end": "3477839"
  },
  {
    "text": "runtime and runs them using theories and then code gen is the last bit and code",
    "start": "3477839",
    "end": "3483960"
  },
  {
    "text": "gen remember I mentioned grpc and protobuf earlier on what grpc generates when you",
    "start": "3483960",
    "end": "3489420"
  },
  {
    "text": "do a service is a base class that has virtual methods for all the things you said it would do and they're not",
    "start": "3489420",
    "end": "3495420"
  },
  {
    "text": "abstract they're virtual you don't have to override them and if you don't overwrite it and then somebody calls it",
    "start": "3495420",
    "end": "3502440"
  },
  {
    "text": "it will throw an RPC exception with a status code that says not implemented so it's basically throw new not implemented",
    "start": "3502440",
    "end": "3508800"
  },
  {
    "text": "exception HTTP has not implemented exception so a code gen thing does is it",
    "start": "3508800",
    "end": "3514380"
  },
  {
    "text": "generates model classes and it generates a base class with these virtual methods it doesn't generate a controller it",
    "start": "3514380",
    "end": "3521400"
  },
  {
    "text": "doesn't generate a minimal API doesn't generate these things it generates its own sort of Base Class which you can",
    "start": "3521400",
    "end": "3528059"
  },
  {
    "text": "then inherit from Implement it's got convenience things in there it will",
    "start": "3528059",
    "end": "3533400"
  },
  {
    "text": "generate automatic result codes but only for the things that you specified in your open API yaml file if you're going",
    "start": "3533400",
    "end": "3540059"
  },
  {
    "text": "why can't I return not found it's because it's not in the spec and then you do that in a class library",
    "start": "3540059",
    "end": "3546900"
  },
  {
    "text": "and then you create a web API project and it will hook it up using minimal API",
    "start": "3546900",
    "end": "3552780"
  },
  {
    "text": "or you can create an Azure functions project and it'll hook it up using Azure functions and then that's going to be",
    "start": "3552780",
    "end": "3559140"
  },
  {
    "text": "pluggable so if someone wants to come along and contribute an extension to it it could generate something that hooks",
    "start": "3559140",
    "end": "3565079"
  },
  {
    "text": "it up to AWS Lambda or Google's app platform or whatever that might be so",
    "start": "3565079",
    "end": "3570359"
  },
  {
    "text": "that one I'm kind of quite excited about because I think that's that's the point where I can go here there you go this is",
    "start": "3570359",
    "end": "3577079"
  },
  {
    "text": "the right way round to do it write the contract generate the code from the contract and then you know that the",
    "start": "3577079",
    "end": "3584040"
  },
  {
    "text": "thing matches because you're overriding a method and you don't have the ability to change it",
    "start": "3584040",
    "end": "3590960"
  },
  {
    "text": "there we go have I convinced anybody to at least think about this show of hands",
    "start": "3591180",
    "end": "3596520"
  },
  {
    "text": "oh fantastic yes good people I love you all go out into the world and spread the",
    "start": "3596520",
    "end": "3602280"
  },
  {
    "text": "poison so yes uh references",
    "start": "3602280",
    "end": "3608599"
  },
  {
    "text": "openapis.org swagger.io that's bugged by the people who originally started all of this open API dot tools is a very",
    "start": "3608599",
    "end": "3615720"
  },
  {
    "text": "helpful list of things there's async API which I suspect Ian would be interested",
    "start": "3615720",
    "end": "3621359"
  },
  {
    "text": "in which is somebody attempting to apply all of this to messaging so you have",
    "start": "3621359",
    "end": "3626819"
  },
  {
    "text": "producers and consumers and uh and things and you can describe the messages",
    "start": "3626819",
    "end": "3631859"
  },
  {
    "text": "and and all that sort of stuff the code for this well this is at LD nug 2022 but",
    "start": "3631859",
    "end": "3637559"
  },
  {
    "text": "it's also at NDC LDN 2023 and that actually is the end of the",
    "start": "3637559",
    "end": "3643319"
  },
  {
    "text": "slideshow click to exit everybody go home is anybody coming to pubconf",
    "start": "3643319",
    "end": "3649200"
  },
  {
    "text": "I'm terrified thank you very much for coming I hope you've enjoyed this I hope you've enjoyed the conference and I hope that I",
    "start": "3649200",
    "end": "3656700"
  },
  {
    "text": "will see you all again next year if not before take care bye",
    "start": "3656700",
    "end": "3662839"
  },
  {
    "text": "foreign",
    "start": "3665400",
    "end": "3667640"
  }
]