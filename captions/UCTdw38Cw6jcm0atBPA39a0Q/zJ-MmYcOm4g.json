[
  {
    "text": "okay so uh well welcome to you you're in the",
    "start": "6799",
    "end": "12080"
  },
  {
    "text": "finishing street right i know in a three-day conference your brain is sort of towards the end of",
    "start": "12080",
    "end": "17920"
  },
  {
    "text": "the third day starting to dribble out of your ears right so it's after lunch time now so this is this is the snooze slot",
    "start": "17920",
    "end": "25840"
  },
  {
    "text": "right so i'm hoping going to try and keep you awake i've also got to stand here otherwise the camera can't see me",
    "start": "25840",
    "end": "31760"
  },
  {
    "text": "i'm going to try and keep you awake um i am going to put anyone here from outside of australia",
    "start": "31760",
    "end": "38719"
  },
  {
    "text": "there's a few i'm really sorry about the weather it really sucks i was in ireland a",
    "start": "38719",
    "end": "44239"
  },
  {
    "text": "couple of weeks ago fully expecting this to be what was happening in ireland as it normally is when i go to ireland and it seems that we've just switched the",
    "start": "44239",
    "end": "49680"
  },
  {
    "text": "weather's over but it's been miserable here so i do apologize for that i can't",
    "start": "49680",
    "end": "54800"
  },
  {
    "text": "do anything about it but i do apologize nonetheless um i hope some of you seen that nec sydney",
    "start": "54800",
    "end": "60800"
  },
  {
    "text": "will be coming back next year um i'm on the programming committee and we are",
    "start": "60800",
    "end": "65840"
  },
  {
    "text": "very keen trying to make this a really great conference we're still trying to work out how to adapt the ndc model for australia if you've got feedback please",
    "start": "65840",
    "end": "72799"
  },
  {
    "text": "do let the organizers know not just giving feedback to speakers",
    "start": "72799",
    "end": "78000"
  },
  {
    "text": "but just letting us know what we can do to make things better next year but we're here to talk about deploying and",
    "start": "78000",
    "end": "83360"
  },
  {
    "text": "scaling microservices um my name is sam newman if you thought i was somebody else you can leave now",
    "start": "83360",
    "end": "88880"
  },
  {
    "text": "you've got a window where it's acceptable um i uh it's just kind of a weird day for me",
    "start": "88880",
    "end": "94720"
  },
  {
    "text": "so i've been working for the last 12 years at a company called thoughtworks this is i've probably done",
    "start": "94720",
    "end": "101360"
  },
  {
    "text": "150 conference presentations in the last 12 years before i joined thoughtworks i'd done xero and today is my last day",
    "start": "101360",
    "end": "108479"
  },
  {
    "text": "working for thoughtworks literally after this talk i have to walk down the road up pitt street and go and hand all my",
    "start": "108479",
    "end": "114399"
  },
  {
    "text": "keys back so it's very weird i had a great time then the last 12 years i'm not trying to start up uh but they are a great company and if you need help on",
    "start": "114399",
    "end": "120640"
  },
  {
    "text": "the stuff i'm going to talk about today there are far worse companies than you than them to go talk to also they're",
    "start": "120640",
    "end": "126479"
  },
  {
    "text": "always hiring and so if you're looking for a great career if you're a graduate experienced person uh please do give",
    "start": "126479",
    "end": "132800"
  },
  {
    "text": "them a call you can say i sent them i don't get referral bonuses anymore so i'm not you know lied in my own pocket",
    "start": "132800",
    "end": "138400"
  },
  {
    "text": "here i also wrote a book called building microservices i feel like i should also",
    "start": "138400",
    "end": "144160"
  },
  {
    "text": "point out right now that i know this conference has a sort of healthy slice of sort of microsoft oriented",
    "start": "144160",
    "end": "150800"
  },
  {
    "text": "technologies um i only have any microsoft technology in my house so",
    "start": "150800",
    "end": "158080"
  },
  {
    "text": "that i can play games that haven't been ported to mac so that's just caveating that out of the",
    "start": "158080",
    "end": "164480"
  },
  {
    "text": "way i'm hoping some of the stuff i'm going to talk about will be generally applicable but just please be aware that",
    "start": "164480",
    "end": "169599"
  },
  {
    "text": "i am not a net person i am not a microsoft e um and so the last thing i",
    "start": "169599",
    "end": "175120"
  },
  {
    "text": "did in this space was actually helping a company owned by microsoft get off of windows onto linux so",
    "start": "175120",
    "end": "182720"
  },
  {
    "text": "if you need deep dark details of the dotnet stack in relation to this stuff i will do my best but please do not be",
    "start": "182720",
    "end": "189360"
  },
  {
    "text": "surprised if i go so we'll see how that goes uh we're going to talk about three things today",
    "start": "189360",
    "end": "195120"
  },
  {
    "text": "we're going to talk about some core principles around how we want to think about packaging up",
    "start": "195120",
    "end": "201120"
  },
  {
    "text": "and deploying our micro services so there's our microsoft's are interesting things people seem to like them a lot",
    "start": "201120",
    "end": "207440"
  },
  {
    "text": "people keep buying my book which i'm very happy about um i can give you bulk discounts if you",
    "start": "207440",
    "end": "213120"
  },
  {
    "text": "want to buy them in 20 or more that's fine by me um but there's a you know that they're nice conceptually than a",
    "start": "213120",
    "end": "218159"
  },
  {
    "text": "nice idea but but people actually struggle knowing how to actually go about deploying them",
    "start": "218159",
    "end": "223280"
  },
  {
    "text": "and actually some basic stuff and packaging them up gets quite interesting so we're going to talk about some core principles around deployment of",
    "start": "223280",
    "end": "229280"
  },
  {
    "text": "microservices that should stand you in good stead no matter what platform you use",
    "start": "229280",
    "end": "234959"
  },
  {
    "text": "once you've got gone through that we're then going to look at the actual types of artifacts that you might want to create",
    "start": "234959",
    "end": "241680"
  },
  {
    "text": "and then based on those artifacts we're going to take a look at three different deployment platforms",
    "start": "241680",
    "end": "248080"
  },
  {
    "text": "that many people have been using for deploying microservices now i think this is going to be useful i hope not only in",
    "start": "248080",
    "end": "253519"
  },
  {
    "text": "getting some insight into the three platforms themselves i'm going to talk about which are kubernetes misos and docker swarm but i'm hoping",
    "start": "253519",
    "end": "260720"
  },
  {
    "text": "more generically it's going to be useful because i'm going to give you some criteria to think about when analyzing other types of platforms that you might",
    "start": "260720",
    "end": "267759"
  },
  {
    "text": "want to use for deploying microservices you may not have access to those specific technologies you might be",
    "start": "267759",
    "end": "273360"
  },
  {
    "text": "looking at other things you might be looking at heroku or pivotal cloud foundry or whatever else but hopefully",
    "start": "273360",
    "end": "280240"
  },
  {
    "text": "you should at least come out with some concrete questions to ask of the next uh suited and booted vendor",
    "start": "280240",
    "end": "286160"
  },
  {
    "text": "that walks through your front door so let's start at the beginning let's talk about core principles and let's start with the basics about what microservices",
    "start": "286160",
    "end": "293680"
  },
  {
    "text": "are i draw them like this i draw them with hexagons it's a nice shape they have names on them i have my services i",
    "start": "293680",
    "end": "301360"
  },
  {
    "text": "want them to be modeled around business domains around business capabilities uh",
    "start": "301360",
    "end": "306720"
  },
  {
    "text": "we've seen that by doing this that we end up with more stable service boundaries because changing",
    "start": "306720",
    "end": "312880"
  },
  {
    "text": "service boundaries is expensive and we also expose seams that make sense to be exposed rather than exposing arbitrary",
    "start": "312880",
    "end": "319600"
  },
  {
    "text": "technical boundaries if you want to know more about modeling those i've done other talks in the past or you can take a look",
    "start": "319600",
    "end": "325680"
  },
  {
    "text": "at the book in terms of this talk the thing i want you to focus on and probably the most",
    "start": "325680",
    "end": "331680"
  },
  {
    "text": "important principle to embrace when using microservices is",
    "start": "331680",
    "end": "337120"
  },
  {
    "text": "actually this one that these things should be independently deployable",
    "start": "337120",
    "end": "343440"
  },
  {
    "text": "it should be the norm not the exception that you can make a change to a single",
    "start": "343440",
    "end": "349440"
  },
  {
    "text": "service and deploy that into production without having to deploy anything else",
    "start": "349440",
    "end": "356800"
  },
  {
    "text": "this is what gives you the ability for teams to own services to have autonomy",
    "start": "356800",
    "end": "362479"
  },
  {
    "text": "about their release cycles this is how you reduce your cycle time this is how you keep the scope of your",
    "start": "362479",
    "end": "368319"
  },
  {
    "text": "releases small keep the risk of those releases small if you're in a place where you're having to do lockstep releases you're going to",
    "start": "368319",
    "end": "374880"
  },
  {
    "text": "have large scope releases those large scope releases will be scary because they're scary you take more time",
    "start": "374880",
    "end": "380800"
  },
  {
    "text": "around them which means they you have longer between the releases which mean the releases get bigger means the releases are scarier so you take more",
    "start": "380800",
    "end": "387520"
  },
  {
    "text": "time around them and so on and so forth and when they fail you end up with more problems because there's a larger scope",
    "start": "387520",
    "end": "393360"
  },
  {
    "text": "of change so it's harder to track down what failed the secret isn't all this is not a microservices point actually this",
    "start": "393360",
    "end": "400080"
  },
  {
    "text": "is a monolithic systems point keeping your release batch size as small as humanly possible is one of the",
    "start": "400080",
    "end": "405759"
  },
  {
    "text": "significant is one of the best things you can do in terms of releasing software frequently",
    "start": "405759",
    "end": "411440"
  },
  {
    "text": "and safely and with microsoft it's no no exception but the key thing is if you have a",
    "start": "411440",
    "end": "417680"
  },
  {
    "text": "situation where you're releasing multiple services in lockstep you are probably in a world which has",
    "start": "417680",
    "end": "424080"
  },
  {
    "text": "significantly more pain than if you had a more monolithic architecture",
    "start": "424080",
    "end": "429680"
  },
  {
    "text": "so independent deployability so we're going to be looking at platforms and deployment techniques we're going to be",
    "start": "429680",
    "end": "435120"
  },
  {
    "text": "thinking about ensuring we can we have that criteria that we can do we can deploy our services independently of",
    "start": "435120",
    "end": "442479"
  },
  {
    "text": "each other we also need to give some thoughts though about how we actually get our",
    "start": "442479",
    "end": "447520"
  },
  {
    "text": "software to where it needs to be how do we go from a laptop to a live environment",
    "start": "447520",
    "end": "454240"
  },
  {
    "text": "most of you are you know have a laptop but it's kind of nice now you know when i first started working at thoughtworks",
    "start": "454240",
    "end": "460560"
  },
  {
    "text": "my laptop was a toshiba techra and at my first client they got burgled and everything in that office got stolen",
    "start": "460560",
    "end": "467440"
  },
  {
    "text": "apart from our laptops because even the burglars took one look at those things and thought yeah no",
    "start": "467440",
    "end": "472720"
  },
  {
    "text": "um so but now i can actually develop right i got very powerful machine here but it's not a production machine right",
    "start": "472720",
    "end": "478800"
  },
  {
    "text": "so i've still got to work out how i go from here to here and this is where we start thinking about things like build",
    "start": "478800",
    "end": "484240"
  },
  {
    "text": "pipelines whether or not you're explicitly modeling these or not conceptually we have this idea that",
    "start": "484240",
    "end": "490000"
  },
  {
    "text": "there are multiple stages involved in taking software out of my hands and move",
    "start": "490000",
    "end": "495599"
  },
  {
    "text": "through moving it through into a production environment many of you actually hands up how many people here are using",
    "start": "495599",
    "end": "501120"
  },
  {
    "text": "some sort of continuous integration process right probably all of you some of you might even have to use tfs",
    "start": "501120",
    "end": "507840"
  },
  {
    "text": "um but you know that's your own fault um so you know you it is amazing it's actually you know like tfs is",
    "start": "507840",
    "end": "514159"
  },
  {
    "text": "legitimately bad at least you know i my experience of a couple of years ago but it's surprising how many people use tfs",
    "start": "514159",
    "end": "520399"
  },
  {
    "text": "not because they wanted to pick the tool they wanted the most they picked tfs because they had an enterprise agreement",
    "start": "520399",
    "end": "526640"
  },
  {
    "text": "with microsoft and they didn't have to pay for license fees that's a terrible reason to pick what is a vital piece of",
    "start": "526640",
    "end": "532560"
  },
  {
    "text": "infrastructure hopefully it's got better but you know anyway so here i have my laptop i've checked some code into",
    "start": "532560",
    "end": "539279"
  },
  {
    "text": "source control i then have some kind of ci process that detects that checking and can then trigger some automated",
    "start": "539279",
    "end": "545279"
  },
  {
    "text": "processes normally the very first thing we're going to do is something like you know build the software make sure it compiles",
    "start": "545279",
    "end": "552160"
  },
  {
    "text": "this is surprising to say this but a decade ago i did most of my time when i first joined thoughtworks about five",
    "start": "552160",
    "end": "557920"
  },
  {
    "text": "years was doing continuous integration infrastructure automation and a surprising amount of that we're going to",
    "start": "557920",
    "end": "564080"
  },
  {
    "text": "clients and just helping them make sure that when they check the code in that it compiled together before we even start",
    "start": "564080",
    "end": "569519"
  },
  {
    "text": "worrying about tests so we compile it and for for none and then what we normally would do here is we would",
    "start": "569519",
    "end": "575519"
  },
  {
    "text": "actually create some kind of artifact that we are going to deploy we bundle our code together right we'll",
    "start": "575519",
    "end": "581920"
  },
  {
    "text": "talk about what those actual artifacts might look later and then we take that artifact and we move it through these",
    "start": "581920",
    "end": "587680"
  },
  {
    "text": "stages and again you might have a cia tool or continuous delivery tool that allows you to model this workflow or you",
    "start": "587680",
    "end": "594560"
  },
  {
    "text": "might just have that in your head somewhere we have a might have a release manager tracking it but conceptually we're taking this software that we've",
    "start": "594560",
    "end": "601440"
  },
  {
    "text": "checked in and we're moving it through these stages saying yes are you good enough okay the automated tests have",
    "start": "601440",
    "end": "606560"
  },
  {
    "text": "passed now we're going to do a uat cycle did the uat pass are our users happy",
    "start": "606560",
    "end": "611600"
  },
  {
    "text": "right maybe now we do some performance tests and if the performance tests for that version of the software pass we",
    "start": "611600",
    "end": "616720"
  },
  {
    "text": "will push it into production some people this is an entirely",
    "start": "616720",
    "end": "621760"
  },
  {
    "text": "automated process that's what's called continuous deployment so a check-in is validated for a number",
    "start": "621760",
    "end": "628880"
  },
  {
    "text": "of steps fully automated hands off and so you have a large number of those check-ins will go straight",
    "start": "628880",
    "end": "634880"
  },
  {
    "text": "through to production things to think about when you have this process",
    "start": "634880",
    "end": "640560"
  },
  {
    "text": "what you want is you want one artifact for all environments the reason for this is twofold firstly",
    "start": "640560",
    "end": "647839"
  },
  {
    "text": "rebuilding and the same artifact from the same version of the code over and over again for different environments",
    "start": "647839",
    "end": "653519"
  },
  {
    "text": "just wastes time and that's kind of odd right why would we do that we want these things to be",
    "start": "653519",
    "end": "658640"
  },
  {
    "text": "fast the second reason you don't want to rebuild artifacts for different environments",
    "start": "658640",
    "end": "664160"
  },
  {
    "text": "is because you can problems can creep in we want the version of the code we ran",
    "start": "664160",
    "end": "670240"
  },
  {
    "text": "the tests on to be what we deployed because if we rebuild our software and maybe pass in",
    "start": "670240",
    "end": "675440"
  },
  {
    "text": "some different compiler flags we can change the behavior of the software such that we will unearth problems in",
    "start": "675440",
    "end": "681760"
  },
  {
    "text": "production that we really should have picked up at tests so we want the version of the code that we ran our tests on the artifact we want to test on",
    "start": "681760",
    "end": "688160"
  },
  {
    "text": "to be the thing we deploy we also want to have the same deployment",
    "start": "688160",
    "end": "693600"
  },
  {
    "text": "process everywhere we like to the same deployment process in production as we're using performance",
    "start": "693600",
    "end": "698640"
  },
  {
    "text": "as we use in uat and again this is because we want to find problems early i would like during my test cycle to",
    "start": "698640",
    "end": "705600"
  },
  {
    "text": "have used the same deployment process i'm going to use in production because if there's a problem with the deployment process i find out then not in",
    "start": "705600",
    "end": "712560"
  },
  {
    "text": "production so all the platforms we're going to look at are going to help us with these things they're going to help",
    "start": "712560",
    "end": "717600"
  },
  {
    "text": "us in terms of having one artifact full environments and they're going to help us in terms of being able to use the same deployment process everywhere",
    "start": "717600",
    "end": "725519"
  },
  {
    "text": "it's probably a sidebar sort of i'm a cli guy i like my command line interface i like dashboards and",
    "start": "725519",
    "end": "732639"
  },
  {
    "text": "guise for viewing things but in terms of carrying out actions i like having a cli",
    "start": "732639",
    "end": "737680"
  },
  {
    "text": "available to me because i can script it i can share it obviously we've got chat bots now that's",
    "start": "737680",
    "end": "743120"
  },
  {
    "text": "which is effectively just a shared communal command line interface this is the deployment script i strive for in",
    "start": "743120",
    "end": "751360"
  },
  {
    "text": "any company in any situation i'm working in i want something that looks like this",
    "start": "751360",
    "end": "757360"
  },
  {
    "text": "we have the name deploy that's a good name it's sort of actually i know what that means that's great then i have the",
    "start": "757360",
    "end": "762959"
  },
  {
    "text": "name of some service this is the returns service okay the next parameter i'm giving it",
    "start": "762959",
    "end": "768880"
  },
  {
    "text": "this script is some version identifiers could be a build number this could be a tag a name some way of",
    "start": "768880",
    "end": "774880"
  },
  {
    "text": "finding out which version of the software you want to deploy normally i want to support local which",
    "start": "774880",
    "end": "781519"
  },
  {
    "text": "means it will be the version of the software i built locally in my machine or maybe latest",
    "start": "781519",
    "end": "787600"
  },
  {
    "text": "which might be the latest green build so the build that's got through far enough through my build",
    "start": "787600",
    "end": "793600"
  },
  {
    "text": "process or it could be an explicit version",
    "start": "793600",
    "end": "799040"
  },
  {
    "text": "and finally i'm going to give it an environment an environment is a place it's a location it's an isolated set of",
    "start": "799040",
    "end": "806079"
  },
  {
    "text": "resources and data which uh which where i deploy my service potentially into different",
    "start": "806079",
    "end": "812839"
  },
  {
    "text": "topologies so this is the idea that i might have a smaller cut down uat",
    "start": "812839",
    "end": "818079"
  },
  {
    "text": "environment which is just there for sort of people to poke around and have a look at or a very fully fledged performance",
    "start": "818079",
    "end": "823760"
  },
  {
    "text": "environment so when uat maybe my service is just a couple of nodes load balanced",
    "start": "823760",
    "end": "829839"
  },
  {
    "text": "on a single database instance i'm sort of trying to keep my environment smaller it's less work i save some money it's",
    "start": "829839",
    "end": "837760"
  },
  {
    "text": "faster to provision as well we're always looking for fast feedback whereas in production my production",
    "start": "837760",
    "end": "844160"
  },
  {
    "text": "setup may be actually a primary replica database uh four nodes load balanced across two",
    "start": "844160",
    "end": "849920"
  },
  {
    "text": "data centers so this is kind of interesting like this is a very familiar thing i think many of you will see this idea that your art if your your",
    "start": "849920",
    "end": "856240"
  },
  {
    "text": "environments have very different topologies but i said earlier that i want the same artifact",
    "start": "856240",
    "end": "862720"
  },
  {
    "text": "for all environments and this becomes a problem because what people often the way people often solve",
    "start": "862720",
    "end": "868399"
  },
  {
    "text": "the environment issue is what they do is they create different artifacts for different environments",
    "start": "868399",
    "end": "874480"
  },
  {
    "text": "and i think for for my approach to work you need to separate out those two concepts what you want is a universal artifact",
    "start": "874480",
    "end": "881040"
  },
  {
    "text": "when i say i want to deploy what version one two three four five of my code there is one artifact version one two three",
    "start": "881040",
    "end": "886880"
  },
  {
    "text": "four five of my code what i need a way of is defining the topology separate",
    "start": "886880",
    "end": "892480"
  },
  {
    "text": "from the artifact again all the things we can look at later on allow you to have that topology",
    "start": "892480",
    "end": "898000"
  },
  {
    "text": "that configuration stored separately from that core artifact and at this point again nothing microsoft is",
    "start": "898000",
    "end": "903839"
  },
  {
    "text": "specific these are exactly the same principles i've used for building employment for the last decade",
    "start": "903839",
    "end": "910240"
  },
  {
    "text": "so core principles for microservices independent deployability make a change to something deploy it into production",
    "start": "910399",
    "end": "916880"
  },
  {
    "text": "in isolation of everything else and if you can't do that get good at that before you add anything else before you",
    "start": "916880",
    "end": "922240"
  },
  {
    "text": "add a second service before you had a third service one artifact for all environments",
    "start": "922240",
    "end": "928800"
  },
  {
    "text": "and use the same deployment process everywhere so",
    "start": "928800",
    "end": "934560"
  },
  {
    "text": "let's go on to what i think this is the marmite topic really i",
    "start": "934560",
    "end": "939600"
  },
  {
    "text": "should say vegemite topic although vegemite is awful so really uh i'm a",
    "start": "939600",
    "end": "944959"
  },
  {
    "text": "marmite fan we've had these conversations and then recently coles delivered promite to our house as a",
    "start": "944959",
    "end": "950000"
  },
  {
    "text": "replacement we couldn't work out what it was a replacement floor we think it was for the floor cleaner because that stuff",
    "start": "950000",
    "end": "955519"
  },
  {
    "text": "is vile anyway some people love this stuff because it's a bit i i do because i'm like a",
    "start": "955519",
    "end": "961120"
  },
  {
    "text": "cis-happiness person this is great you know other people go oh is this interesting but actually it is bear with me it won't take long um artifacts how",
    "start": "961120",
    "end": "969199"
  },
  {
    "text": "do we package our thing up what is the thing what is the artifact we want for our services what can we do with our",
    "start": "969199",
    "end": "975279"
  },
  {
    "text": "things what do you want from an artifact well you know uh",
    "start": "975279",
    "end": "981440"
  },
  {
    "text": "we'd like it to be easy to create we want simple build processes we want simple packaging processes simplicity is",
    "start": "981440",
    "end": "988240"
  },
  {
    "text": "good we've got enough problems on our hands if we're building micro services because we've got to deal with cap theory and physics so let's keep our",
    "start": "988240",
    "end": "995120"
  },
  {
    "text": "packaging simple nice and easy to use we want to make it easy to deploy turns out some of the artifact types",
    "start": "995120",
    "end": "1001680"
  },
  {
    "text": "that are easy to create actually push problems into the deployment space we want something that allows us to",
    "start": "1001680",
    "end": "1008480"
  },
  {
    "text": "abstract out the underlying technology stack in a microservices world this is important because often what you're",
    "start": "1008480",
    "end": "1014639"
  },
  {
    "text": "doing with microservices is you're trying to give yourselves more options you're giving yourselves the ability to",
    "start": "1014639",
    "end": "1021519"
  },
  {
    "text": "try a different technology in a different service it's actually a nice way of incrementally adapting new ideas",
    "start": "1021519",
    "end": "1028160"
  },
  {
    "text": "into your organization the monolithic system you tend to get to make one choice about technology stack idiomatic",
    "start": "1028160",
    "end": "1034079"
  },
  {
    "text": "style database microsoft says you've got the option to say let's try something new here the problem is if every time you do that",
    "start": "1034079",
    "end": "1040240"
  },
  {
    "text": "you have a fundamentally different deployment process your whole deployment process gets quite complicated and",
    "start": "1040240",
    "end": "1045280"
  },
  {
    "text": "difficult and so ideally when an artifact type that sort of hides away the detail of what's happening under the",
    "start": "1045280",
    "end": "1051120"
  },
  {
    "text": "hood we also would like an artifact type",
    "start": "1051120",
    "end": "1056160"
  },
  {
    "text": "that is good for developers and also good for operations people you may be one of the same person or you",
    "start": "1056160",
    "end": "1061760"
  },
  {
    "text": "may not a lot of the time i see artifact choices are driven sometimes by what's easy for",
    "start": "1061760",
    "end": "1068480"
  },
  {
    "text": "developer people and operations people take a look at it and go this is horrendous they then create a different",
    "start": "1068480",
    "end": "1073919"
  },
  {
    "text": "artifact type for their deployment processes and what you end up with is one deployment process for developers",
    "start": "1073919",
    "end": "1079440"
  },
  {
    "text": "and a different deployment process for operations people and we're back to this problem where operations people find",
    "start": "1079440",
    "end": "1084640"
  },
  {
    "text": "problems later on because development people aren't using the same process as them so something that's good for both so let's start at the beginning let's",
    "start": "1084640",
    "end": "1091200"
  },
  {
    "text": "start with tables uh giant bundles of stuff in linux will",
    "start": "1091200",
    "end": "1096240"
  },
  {
    "text": "say a tarball cause we use a tar command this could be a zip file now just like oil leaks um you know",
    "start": "1096240",
    "end": "1103840"
  },
  {
    "text": "where you get like a load of gut seagulls that will sort of become meshed together in oil and then people die in",
    "start": "1103840",
    "end": "1110080"
  },
  {
    "text": "those things tables aren't always good um because their thing is they're just",
    "start": "1110080",
    "end": "1115520"
  },
  {
    "text": "they're really messy the reason we have these zip files or tarballs of destruction is because",
    "start": "1115520",
    "end": "1122640"
  },
  {
    "text": "one reason one reason only they are very very easy to create i just do some compilation and i go",
    "start": "1122640",
    "end": "1130240"
  },
  {
    "text": "yeah zip it up that'll be fine and then normally what you do is you load that up onto the magical capital of",
    "start": "1130240",
    "end": "1136080"
  },
  {
    "text": "doom and catapult across the yawning chasm between you and the poor bastards that have to deploy this thing",
    "start": "1136080",
    "end": "1141840"
  },
  {
    "text": "and they receive it as willingly as goals receive an oil slick the problem here is that i don't",
    "start": "1141840",
    "end": "1147360"
  },
  {
    "text": "actually create easy to deploy outcomes you've packaged a whole bunch of stuff",
    "start": "1147360",
    "end": "1152640"
  },
  {
    "text": "up in a zip file when you actually want to deploy you often have to move files into different locations you might have",
    "start": "1152640",
    "end": "1158160"
  },
  {
    "text": "to change ownership and permissions of who can who can sit where you may need to change execution flags on those sorts",
    "start": "1158160",
    "end": "1164240"
  },
  {
    "text": "of things what often you see with sort of zip file or tarball based artifacts",
    "start": "1164240",
    "end": "1169280"
  },
  {
    "text": "is then a lot of work in the scripts to open things up and move things into the right location this is where people",
    "start": "1169280",
    "end": "1175600"
  },
  {
    "text": "start using loads of powershell puppet chef or ansible because the artifact",
    "start": "1175600",
    "end": "1181840"
  },
  {
    "text": "types themselves have lots of work that needs to be done uh sometimes they can abstract out a tech",
    "start": "1181840",
    "end": "1188080"
  },
  {
    "text": "stack it's a bit agnostic and do a good job of that you can do not good jobs of that are they good for devs and good for",
    "start": "1188080",
    "end": "1193360"
  },
  {
    "text": "ops i'm sorry i'm i'm a semi-ops person and i think these are a terrible idea uh",
    "start": "1193360",
    "end": "1198640"
  },
  {
    "text": "and i hate them and if you know when was the last time you wanted to try out some software on your machine",
    "start": "1198640",
    "end": "1205360"
  },
  {
    "text": "and the process was download this zip file copy these files you would know i'll do something else you know you want a nice you know",
    "start": "1205360",
    "end": "1213200"
  },
  {
    "text": "nougat installed command line right for your own stuff on your own laptop why don't you want the same things for your",
    "start": "1213200",
    "end": "1218640"
  },
  {
    "text": "production systems so don't do this uh let's look at other options well there's a whole bunch of tech stack",
    "start": "1218640",
    "end": "1224480"
  },
  {
    "text": "specific types of artifacts that can be useful i think things like nougat packages pips",
    "start": "1224480",
    "end": "1229760"
  },
  {
    "text": "far you know also you get packages jar files pips gems like",
    "start": "1229760",
    "end": "1235760"
  },
  {
    "text": "some of these can work for services some of them are more fraught a lot of these packages are",
    "start": "1235760",
    "end": "1241120"
  },
  {
    "text": "often really built with shared libraries in mind right shared code you know you want this is yours is",
    "start": "1241120",
    "end": "1246799"
  },
  {
    "text": "your dependency management your package management not really dealt with service deployments in mind",
    "start": "1246799",
    "end": "1253280"
  },
  {
    "text": "some of them can kind of work but they're all a little bit iffy they tend to be somewhat easy to create",
    "start": "1253280",
    "end": "1259840"
  },
  {
    "text": "because if you know that technology stack you often know the tool chain therefore know how to create the artifacts native to that tool chain",
    "start": "1259840",
    "end": "1267520"
  },
  {
    "text": "they're not always easy to deploy though",
    "start": "1267520",
    "end": "1271360"
  },
  {
    "text": "any of you here are ruby anyone bit of ruby around here there's no one at all a couple of people i",
    "start": "1272960",
    "end": "1278720"
  },
  {
    "text": "thought they kept the non-microsoft stuff downstairs um but it's",
    "start": "1278720",
    "end": "1284320"
  },
  {
    "text": "a whole host of like really interesting problems associated with trying to deploy gem files into production systems",
    "start": "1284400",
    "end": "1290320"
  },
  {
    "text": "because a lot of the the ruby packaging deployment tool trains actually open up interesting security holes on your",
    "start": "1290320",
    "end": "1296000"
  },
  {
    "text": "production systems um so this is a bit different they obviously don't abstract out the technology stack because by definition a",
    "start": "1296000",
    "end": "1302240"
  },
  {
    "text": "technology stack specific these deployments um and by definition i'd say also",
    "start": "1302240",
    "end": "1307280"
  },
  {
    "text": "they're not really good for devon ops because lots of people suddenly now have to become an expert in whatever tech stack they are to get up to speed with",
    "start": "1307280",
    "end": "1312960"
  },
  {
    "text": "the tool train that you decided to pick it's less of an issue if you're very homogeneous right if you are if you're",
    "start": "1312960",
    "end": "1318960"
  },
  {
    "text": "going to be just a ruby shop it probably makes a lot of sense for your ops people to be really good at just knowing how to",
    "start": "1318960",
    "end": "1324720"
  },
  {
    "text": "deal with these sorts of things now i i will of course say at this point",
    "start": "1324720",
    "end": "1331600"
  },
  {
    "text": "that there is one technology stack out there that obviously has the perfect",
    "start": "1331600",
    "end": "1338480"
  },
  {
    "text": "form of tech stack specific packaging and that is go because everything in go is awesome it's just the best thing in",
    "start": "1338480",
    "end": "1344480"
  },
  {
    "text": "the world um you know obviously this is the most buzzword-friendly talk here at ndc and i",
    "start": "1344480",
    "end": "1351039"
  },
  {
    "text": "felt like it would be remissively not to say go uh and and docker go docker",
    "start": "1351039",
    "end": "1356640"
  },
  {
    "text": "go go microsoft says go docker mic so it says do go go docker um go is actually",
    "start": "1356640",
    "end": "1361760"
  },
  {
    "text": "kind of interesting because the sort of the native form of packaging in go is a statically linked binary um because of",
    "start": "1361760",
    "end": "1368159"
  },
  {
    "text": "the way sort of the the you know the packaging is handled they actually tend to be very very small",
    "start": "1368159",
    "end": "1374559"
  },
  {
    "text": "tiny little binaries of completely self-contained um and that's kind of interesting because they're actually",
    "start": "1374559",
    "end": "1379919"
  },
  {
    "text": "quite easy to move around and they're actually easy to deploy but it's just like copying binaries around still feels",
    "start": "1379919",
    "end": "1385760"
  },
  {
    "text": "a little bit hinky to me and of course you think about a service deployment you'll still need they need to register that service put start and stop scripts",
    "start": "1385760",
    "end": "1392400"
  },
  {
    "text": "in um but anyway go is kind of fun though anyway so let's skip over that one as well because i don't think that's a good",
    "start": "1392400",
    "end": "1397840"
  },
  {
    "text": "choice for us now here's one that's often overlooked greatly",
    "start": "1397840",
    "end": "1403840"
  },
  {
    "text": "turns out most of us are using an operating system that has natively",
    "start": "1403840",
    "end": "1409520"
  },
  {
    "text": "a very good mechanism for installing software that just kind of works like we're talking here about the",
    "start": "1409520",
    "end": "1415840"
  },
  {
    "text": "operating system specific packaging tool chains how many is here how many people here",
    "start": "1415840",
    "end": "1421279"
  },
  {
    "text": "have done something like this you know logged on to ubuntu box just going to install this",
    "start": "1421279",
    "end": "1426400"
  },
  {
    "text": "maybe even a homebrew cask install stall toxin you get installed these things kind of work right",
    "start": "1426400",
    "end": "1432480"
  },
  {
    "text": "they handle fetching the right version of the software they had installing dependencies that we rely upon",
    "start": "1432480",
    "end": "1438720"
  },
  {
    "text": "and actually if you look at this this isn't that different from that is it i've got some go get me this thing i'm",
    "start": "1438720",
    "end": "1445600"
  },
  {
    "text": "really missing these two flags those are actually easy enough to pass through as variables if you want or in wrapper scripts it's not that hard to do this",
    "start": "1445600",
    "end": "1453760"
  },
  {
    "text": "these kind of are really nice and easy to use so why don't we do it",
    "start": "1454240",
    "end": "1459679"
  },
  {
    "text": "well often because we fall at the first hurdle creating these operating system specific artifacts is in general not",
    "start": "1459679",
    "end": "1467120"
  },
  {
    "text": "easy hands up how many people here have tried bundling net services as msis",
    "start": "1467120",
    "end": "1474159"
  },
  {
    "text": "a couple of people hands up who thinks that was fun right so in the linux space",
    "start": "1474159",
    "end": "1480400"
  },
  {
    "text": "uh packaging managers are just as difficult to work with they're all a bit different across the",
    "start": "1480400",
    "end": "1485840"
  },
  {
    "text": "different platforms uh there is actually a package manager which is like a kind of a meta package manager called fpm which sort of tries",
    "start": "1485840",
    "end": "1493440"
  },
  {
    "text": "to sort of simplify the process and supports multiple different uh online linux platforms and it sort of it simplifies",
    "start": "1493440",
    "end": "1500720"
  },
  {
    "text": "the process by only supporting about 50 of what you can do with the underlying things um fpm stands for effing package",
    "start": "1500720",
    "end": "1507440"
  },
  {
    "text": "manager which gives you an idea about how painful these things are so we don't tend to put the work in and it's a real",
    "start": "1507440",
    "end": "1513360"
  },
  {
    "text": "shame the problem is it's pain now so we avoid it but i think if we bear that pain we really do get the benefits",
    "start": "1513360",
    "end": "1519679"
  },
  {
    "text": "because once you've done that they're really easy to deploy we've all used the command line the",
    "start": "1519679",
    "end": "1526320"
  },
  {
    "text": "developers know those command lines the operations people know as command lines even more so you have support tools",
    "start": "1526320",
    "end": "1531919"
  },
  {
    "text": "around these things so on linux platforms for example i can do things like you know check signing of",
    "start": "1531919",
    "end": "1537760"
  },
  {
    "text": "those packages to make sure i'm not getting wrong packages i've got tools to tell me if i need to patch those",
    "start": "1537760",
    "end": "1543200"
  },
  {
    "text": "services and this is fantastic we have this whole supporting tool training infrastructure that we're not using just",
    "start": "1543200",
    "end": "1549200"
  },
  {
    "text": "because we're too lazy to package them properly in the first place we also completely avoid the need for",
    "start": "1549200",
    "end": "1555360"
  },
  {
    "text": "all these scripts to move things into the right places because all these packaging software that all these packaging formats allow",
    "start": "1555360",
    "end": "1561279"
  },
  {
    "text": "us to define things like what users these things will run out what permissions the file should be what locations these things will be inside",
    "start": "1561279",
    "end": "1568159"
  },
  {
    "text": "the package itself there's no need now for elaborate chef or puppet configurations",
    "start": "1568159",
    "end": "1574080"
  },
  {
    "text": "because i just my puppet you know config my powershell config just becomes",
    "start": "1574080",
    "end": "1579200"
  },
  {
    "text": "install this package this version make sure it's installed done not pages and pages of setup and",
    "start": "1579200",
    "end": "1586000"
  },
  {
    "text": "configuration that you've got to debug and keep fresh they abstract out the technology stack",
    "start": "1586000",
    "end": "1591279"
  },
  {
    "text": "as well right you don't care what's running as long as it launches on that port",
    "start": "1591279",
    "end": "1596960"
  },
  {
    "text": "i don't know what underlying language most of stuff i run on my linux box is written in but it works so would i care",
    "start": "1596960",
    "end": "1604080"
  },
  {
    "text": "good for devs good fiops well i think arts people love this stuff or go crazy for this stuff",
    "start": "1604080",
    "end": "1609520"
  },
  {
    "text": "devs don't often because developers don't work on the same operating system as production systems",
    "start": "1609520",
    "end": "1615600"
  },
  {
    "text": "i mean even those of you in the windows space that's probably the case right a lot of you will be deploying onto a windows server you're actually",
    "start": "1615600",
    "end": "1621360"
  },
  {
    "text": "developing some of you on windows xp still still happens",
    "start": "1621360",
    "end": "1627919"
  },
  {
    "text": "75 of all the atms in australia still on windows xp um it's the smartest thing i think",
    "start": "1627919",
    "end": "1633360"
  },
  {
    "text": "microsoft ever did from a bottom line point of view was end of life in support for windows xp because it meant all the",
    "start": "1633360",
    "end": "1638960"
  },
  {
    "text": "banks in australia have to go and negotiate on a per client basis support agreements with",
    "start": "1638960",
    "end": "1646080"
  },
  {
    "text": "microsoft and they know they can't change the last bank i worked at just down the road here",
    "start": "1646080",
    "end": "1651919"
  },
  {
    "text": "all the devs had these lovely light macbooks a bit getting given and they opened the lids and it was running windows xp and that was just last year",
    "start": "1651919",
    "end": "1660720"
  },
  {
    "text": "anyway so that's the problem so we don't because developers are often in charge",
    "start": "1660720",
    "end": "1666480"
  },
  {
    "text": "of doing initial build scripts they don't put the effort into making it easier to create so they don't do it",
    "start": "1666480",
    "end": "1671600"
  },
  {
    "text": "they just punt on it they don't know the tool change they don't see the value the operations people would love for you for",
    "start": "1671600",
    "end": "1676799"
  },
  {
    "text": "this stuff they really would love you for this stuff they really will it doesn't solve all our problems though",
    "start": "1676799",
    "end": "1682559"
  },
  {
    "text": "um we think about what happens okay i have a build process i check in some code as a result of that checking i generate",
    "start": "1682559",
    "end": "1688799"
  },
  {
    "text": "brand new artifacts i store those artifacts this might use my os specific artifacts i'm gonna store that probably",
    "start": "1688799",
    "end": "1694480"
  },
  {
    "text": "in some kind of artifact repository which is specific to your operating system",
    "start": "1694480",
    "end": "1700399"
  },
  {
    "text": "it's not quite sure what the equivalent is in the dot net space but it might be a deb repo or a young repo for say",
    "start": "1700399",
    "end": "1707440"
  },
  {
    "text": "centos and red hat based systems and that's great and so when i want to deploy my service i bring up a host or",
    "start": "1707440",
    "end": "1714480"
  },
  {
    "text": "maybe i just log into a host or whatever it is and i run my command line and it pulls down that version of the software",
    "start": "1714480",
    "end": "1722000"
  },
  {
    "text": "and runs it locally the the issue is here is is of course one of the things we talked about",
    "start": "1722000",
    "end": "1727760"
  },
  {
    "text": "earlier is we want interdependent well independent deployability of these things and sometimes we can have a whole bunch",
    "start": "1727760",
    "end": "1733279"
  },
  {
    "text": "of situations where deploying more than one service onto the same host be a virtual physical host can have issues",
    "start": "1733279",
    "end": "1740480"
  },
  {
    "text": "can have collisions let's think of a simple example of the kind of collision that we can have when",
    "start": "1740480",
    "end": "1746080"
  },
  {
    "text": "deploying more than one service onto the same host i said before with the operating system",
    "start": "1746080",
    "end": "1752240"
  },
  {
    "text": "specific artifacts that you can do things like define the dependencies that you have as in for this software to run",
    "start": "1752240",
    "end": "1758000"
  },
  {
    "text": "for my service to run i need these other things on this machine so in this example the green service",
    "start": "1758000",
    "end": "1763679"
  },
  {
    "text": "needs version 1.5 of a thing called a and the blue service needs version 2.1",
    "start": "1763679",
    "end": "1769760"
  },
  {
    "text": "of a thing called a sometimes this is okay and they can be kept separate a lot of times they can't",
    "start": "1769760",
    "end": "1778080"
  },
  {
    "text": "especially if what you're relying on for example are not are incompatible subsystems that",
    "start": "1778080",
    "end": "1783360"
  },
  {
    "text": "need to run that same system so you often have to really understand what the transit dependencies are of these",
    "start": "1783360",
    "end": "1788799"
  },
  {
    "text": "systems it can be quite challenging uh anyone here who was deploying jboss",
    "start": "1788799",
    "end": "1794559"
  },
  {
    "text": "apps in the in the 2000s will remember a lovely thing called the unified class",
    "start": "1794559",
    "end": "1799840"
  },
  {
    "text": "loader where you would just get random different classes assigned to you if you had more than one thing in the",
    "start": "1799840",
    "end": "1805279"
  },
  {
    "text": "application container which just blew my mind so this is you sometimes get collisions here",
    "start": "1805279",
    "end": "1810720"
  },
  {
    "text": "and that's just because there is no isolation so we've got a bit of risk now associated with deploying more than one",
    "start": "1810720",
    "end": "1816799"
  },
  {
    "text": "service in the same place likewise we have the same problem from a point of resources you know i'm checking a new",
    "start": "1816799",
    "end": "1822240"
  },
  {
    "text": "version of the purple service and uh i've is that there's a bug in the code and now it's significantly more cpu",
    "start": "1822240",
    "end": "1830799"
  },
  {
    "text": "hungry significantly more resource hungry and on that host it basically consumes all the resources and thereby",
    "start": "1830799",
    "end": "1839039"
  },
  {
    "text": "all the other services on that machine stop working and so we have a situation here where that lack of isolation between those",
    "start": "1839039",
    "end": "1845919"
  },
  {
    "text": "services causes problems during deployment this makes people just this makes people",
    "start": "1845919",
    "end": "1851440"
  },
  {
    "text": "less confident that they can release into independently this is why most organizations that have",
    "start": "1851440",
    "end": "1857760"
  },
  {
    "text": "been using microservices for a while normally end up in a situation",
    "start": "1857760",
    "end": "1862880"
  },
  {
    "text": "where they have one host per service at netflix for example their hosts are",
    "start": "1862880",
    "end": "1869679"
  },
  {
    "text": "they they have very big amazon machine images like 64 gig vms",
    "start": "1869679",
    "end": "1875440"
  },
  {
    "text": "and because their services are very big as well in terms of the amount of traffic they handle",
    "start": "1875440",
    "end": "1881519"
  },
  {
    "text": "other places this is more difficult right if you take say an app with fairly modest resource",
    "start": "1881519",
    "end": "1887200"
  },
  {
    "text": "requirements and you break it into smaller parts those smaller parts themselves have even smaller",
    "start": "1887200",
    "end": "1892559"
  },
  {
    "text": "resource requirements and this becomes a difficult difficulty because",
    "start": "1892559",
    "end": "1897679"
  },
  {
    "text": "that can get quite expensive we'll come back to why in a moment but nonetheless this is a nice idea right we",
    "start": "1897679",
    "end": "1903519"
  },
  {
    "text": "have now isolation i i've got my host i'm only deploying one service on that i don't worry now",
    "start": "1903519",
    "end": "1910480"
  },
  {
    "text": "about there being other services as other dependencies that could collide with",
    "start": "1910480",
    "end": "1915600"
  },
  {
    "text": "other services i don't worry now about using up all the cpu and that service",
    "start": "1915600",
    "end": "1920640"
  },
  {
    "text": "affecting anything else and that service and everything else is protected this is a great model",
    "start": "1920640",
    "end": "1926480"
  },
  {
    "text": "this also opens up then a new kind of artifact for us because normally you don't do that on",
    "start": "1926480",
    "end": "1932159"
  },
  {
    "text": "physical machines normally you're deploying this onto some kind of virtual machine technology you're taking your",
    "start": "1932159",
    "end": "1937360"
  },
  {
    "text": "big physical box and you're breaking up into little parts that then means that what we can start",
    "start": "1937360",
    "end": "1943039"
  },
  {
    "text": "thinking about is packaging our services as custom virtual machine images so taking the operating system and the",
    "start": "1943039",
    "end": "1950880"
  },
  {
    "text": "service art you know the art show service code and saying rather than the artifact of deployment being",
    "start": "1950880",
    "end": "1956720"
  },
  {
    "text": "you know my java application my.net application instead it's my.net application on that operating system",
    "start": "1956720",
    "end": "1964159"
  },
  {
    "text": "packaged up as one binary so um real estate.com.au over in melbourne",
    "start": "1964159",
    "end": "1970720"
  },
  {
    "text": "netflix loads of the amazon people will do this quite routinely they'll create what's called an ami an amazon machine",
    "start": "1970720",
    "end": "1976399"
  },
  {
    "text": "image out of their build pipelines there's some really interesting reasons why this is a good",
    "start": "1976399",
    "end": "1981760"
  },
  {
    "text": "idea the first thing actually is it it it allows you to synchronize sort of",
    "start": "1981760",
    "end": "1987120"
  },
  {
    "text": "provisioning of the infrastructure itself and the service so now what i'm rather than thinking",
    "start": "1987120",
    "end": "1993440"
  },
  {
    "text": "about okay so what i'm going to do is i'm going to bring up a host and i leave that host running leaving running around for a long time and i just deploy newer",
    "start": "1993440",
    "end": "2000080"
  },
  {
    "text": "and newer and newer versions of my service on it over time you know this thing has been around for a long time",
    "start": "2000080",
    "end": "2005840"
  },
  {
    "text": "you know it kind of works but not quite sure how it people have logged in and monkeyed around with the box you can never really",
    "start": "2005840",
    "end": "2011519"
  },
  {
    "text": "recreate that state it's quite difficult to look after in this world when i execute and launch my image it's a brand",
    "start": "2011519",
    "end": "2018640"
  },
  {
    "text": "new machine that means i can be very sure that that machine has been created from stuff that's actually checked into source code",
    "start": "2018640",
    "end": "2024559"
  },
  {
    "text": "which means i have reproducible builds this is how you go from pets to cattle in the cloud world",
    "start": "2024559",
    "end": "2030399"
  },
  {
    "text": "there's also provision really fast as well they're not always easy to create though",
    "start": "2030399",
    "end": "2036640"
  },
  {
    "text": "so the ami tool chain isn't too bad there's aminata from netflix that can help you build these things",
    "start": "2036640",
    "end": "2044559"
  },
  {
    "text": "when you start getting into other virtualization platforms though creating these custom images can be really painful the vmware tool change certainly",
    "start": "2044799",
    "end": "2051200"
  },
  {
    "text": "sucks uh now tachycorp who do some awesome tools uh one of the tools they created a",
    "start": "2051200",
    "end": "2057040"
  },
  {
    "text": "thing called packer pack was sort of like the fpm is like a ver it's like kind of a meta-level virtual machine",
    "start": "2057040",
    "end": "2064079"
  },
  {
    "text": "image creation tool so it can create uh new virtual machine images for",
    "start": "2064079",
    "end": "2069599"
  },
  {
    "text": "digital ocean um i think joint cloud now vmware vsphere a whole bunch of other",
    "start": "2069599",
    "end": "2076079"
  },
  {
    "text": "virtualization technology and that can be quite useful because it can also create vagrant virtual machine images",
    "start": "2076079",
    "end": "2081440"
  },
  {
    "text": "which you can then run on your laptop in sort of isolated environments so if you are interested in custom images and you're going to be supporting more than",
    "start": "2081440",
    "end": "2088398"
  },
  {
    "text": "one platform definitely look at packer uh easy to deploy again this can vary",
    "start": "2088399",
    "end": "2094960"
  },
  {
    "text": "so with amazon amis when you create that ami it's in the cloud you only ever reference it by pointer effectively you",
    "start": "2094960",
    "end": "2101200"
  },
  {
    "text": "pass around an id when you create a custom vmware image",
    "start": "2101200",
    "end": "2106960"
  },
  {
    "text": "that could be several gigabytes in size if you've packaged up say windows os that could be 20 gig",
    "start": "2106960",
    "end": "2113200"
  },
  {
    "text": "uh your network ops people are not going to like it when for every ci bill checking you're creating a 20 gig vm",
    "start": "2113200",
    "end": "2119520"
  },
  {
    "text": "that you're then moving around on their networks they get cross about those things so again this can vary",
    "start": "2119520",
    "end": "2126720"
  },
  {
    "text": "they are excellent at abstracting out the technology stack though you know you just launched the thing",
    "start": "2126720",
    "end": "2132160"
  },
  {
    "text": "your service is already running you don't even know what's there good for devs good for ops",
    "start": "2132160",
    "end": "2137520"
  },
  {
    "text": "i think they're good for operations people you're turning on an appliance your whole application now is this a",
    "start": "2137520",
    "end": "2143760"
  },
  {
    "text": "series of appliances that have a fairly well understood state from an operations point of view from the developer point",
    "start": "2143760",
    "end": "2149520"
  },
  {
    "text": "of view though you have to be careful you have to have other ways of launching application because the life cycle of creating these scenes can take quite a",
    "start": "2149520",
    "end": "2155359"
  },
  {
    "text": "while so this is good to a point but",
    "start": "2155359",
    "end": "2161040"
  },
  {
    "text": "vms are not free virtualization isn't free and the knowledge i can think of is like",
    "start": "2161040",
    "end": "2166079"
  },
  {
    "text": "imagine that your your physical machine is a draw is your sock drawer",
    "start": "2166079",
    "end": "2172640"
  },
  {
    "text": "and you come in and like you look at yourself and your socks are everywhere right they're all mixed together your",
    "start": "2172640",
    "end": "2178160"
  },
  {
    "text": "red socks in with your blue socks and with your green socks you think i'm gonna bring some order out of this chaos",
    "start": "2178160",
    "end": "2183440"
  },
  {
    "text": "and you get some wooden dividers and you put those wooden dividers in your drawer and you've got nice now nice compartments you can separate things out",
    "start": "2183440",
    "end": "2190240"
  },
  {
    "text": "isolated it's easier do you have more space or less space now",
    "start": "2190240",
    "end": "2195280"
  },
  {
    "text": "on your sock drawer you have less the dividers themselves take up space",
    "start": "2195280",
    "end": "2201440"
  },
  {
    "text": "not a lot of space they take up space the more dividers you put in to give you",
    "start": "2201440",
    "end": "2206880"
  },
  {
    "text": "more small component compo um components some components say compartments in your drawer the more",
    "start": "2206880",
    "end": "2212880"
  },
  {
    "text": "dividers you put in the more proportion of the volume of your draw is going into",
    "start": "2212880",
    "end": "2218400"
  },
  {
    "text": "dividers and the less space is available for socks most of the virtualization technology we",
    "start": "2218400",
    "end": "2224880"
  },
  {
    "text": "use has similar issues as you further and further subdivide a physical machine into smaller and",
    "start": "2224880",
    "end": "2230880"
  },
  {
    "text": "smaller vms more of the resources the machine itself are going to ensuring the isolation of",
    "start": "2230880",
    "end": "2236800"
  },
  {
    "text": "those resources than actually being used to run your services this can mean that it can be very",
    "start": "2236800",
    "end": "2242560"
  },
  {
    "text": "expensive to have lots of small vms this is actually the reason why",
    "start": "2242560",
    "end": "2248960"
  },
  {
    "text": "people have got interested in docker i think developers get interested in",
    "start": "2248960",
    "end": "2254079"
  },
  {
    "text": "docker because oh look i can run a command line and i've downloaded like 15 untrusted pieces of code onto my",
    "start": "2254079",
    "end": "2259280"
  },
  {
    "text": "production system um you know friends don't let friends install stuff from the public docker hub",
    "start": "2259280",
    "end": "2264560"
  },
  {
    "text": "it's like finding a usb stick in the gutter just plugging into your machine and going i should be right um the",
    "start": "2264560",
    "end": "2270480"
  },
  {
    "text": "reason it's great is because the this docker gives you a nice tool chain on top of container technology and",
    "start": "2270480",
    "end": "2276880"
  },
  {
    "text": "container technology is different it's subtly different for virtual machines with virtual machines you most of the",
    "start": "2276880",
    "end": "2282800"
  },
  {
    "text": "what virtual machine technology will use will have a thing called a hypervisor that sort of a separate subsystem that",
    "start": "2282800",
    "end": "2288000"
  },
  {
    "text": "ensures isolation between resources those virtual machines themselves have a full operating system stack a full",
    "start": "2288000",
    "end": "2294320"
  },
  {
    "text": "operating system kernel and that's taking up more resources as well container technology uh works by having",
    "start": "2294320",
    "end": "2301200"
  },
  {
    "text": "one single operating system kernel and effectively the kernel manages isolation of resources so you can kind of think of",
    "start": "2301200",
    "end": "2308160"
  },
  {
    "text": "it like branches on a tree and each branch is a separate container and so you have one kernel",
    "start": "2308160",
    "end": "2313520"
  },
  {
    "text": "so that's really nice you don't have and you don't have the overhead of the hypervisor so that means your cost of isolated",
    "start": "2313520",
    "end": "2320400"
  },
  {
    "text": "hosts is drastically reduced because more of your resources are running on services than running the isolation",
    "start": "2320400",
    "end": "2326000"
  },
  {
    "text": "which means you can get away with smaller cheaper machines much more cost effective um",
    "start": "2326000",
    "end": "2331760"
  },
  {
    "text": "it's also quite easy to run this stuff you just download docker and run it it kind of works it's a lot less set up",
    "start": "2331760",
    "end": "2336800"
  },
  {
    "text": "than some other vm technologies and resources are lower as well these things are also blindingly fast to provision",
    "start": "2336800",
    "end": "2343520"
  },
  {
    "text": "container technology in general is much much faster spinning up a full-fledged vm on amazon which is not bad it's",
    "start": "2343520",
    "end": "2350320"
  },
  {
    "text": "certainly faster than some not as fast as google but faster than azure is going to take you a couple of minutes right",
    "start": "2350320",
    "end": "2355760"
  },
  {
    "text": "speed up a decent size vm two minutes still pretty good but two minutes uh i hit enter and i'm expecting",
    "start": "2355760",
    "end": "2363359"
  },
  {
    "text": "e you know even before my prompt has actually returned my you know a container should",
    "start": "2363359",
    "end": "2368800"
  },
  {
    "text": "already be provisioned we're talking milliseconds here fractions of a second here to provision containers",
    "start": "2368800",
    "end": "2375599"
  },
  {
    "text": "when you log into gmail google spins up multiple containers just for you on",
    "start": "2375839",
    "end": "2381359"
  },
  {
    "text": "demand to handle your inbox right you're not waiting two minutes for your inbox to render so these are great",
    "start": "2381359",
    "end": "2387599"
  },
  {
    "text": "really really fast um are they easy to create well so the key things don't say about docker is docker is effectively a a set of scripts",
    "start": "2387599",
    "end": "2394480"
  },
  {
    "text": "on top of container technologies make it easier to use are they easier to create ah there's a few gotchas but actually i",
    "start": "2394480",
    "end": "2400160"
  },
  {
    "text": "say it's easier than creating custom vms easy to deploy yes the tool trainer and docker is really really nice",
    "start": "2400160",
    "end": "2407599"
  },
  {
    "text": "did it abstract out a tech stack do a very good job of that the same as custom vms in this way are they good for devs and good for ops",
    "start": "2407599",
    "end": "2416000"
  },
  {
    "text": "here the issue mostly is is developers love this stuff right operations people are like",
    "start": "2416000",
    "end": "2422160"
  },
  {
    "text": "there's a whole load of tool trains that i don't have now for running production operations and one of the biggest issues here is",
    "start": "2422160",
    "end": "2428160"
  },
  {
    "text": "actually managing docker across multiple machines the core docker tool chain is really",
    "start": "2428160",
    "end": "2433280"
  },
  {
    "text": "about single machine management and so when you want to go across more than one machine as you're as you're",
    "start": "2433280",
    "end": "2439280"
  },
  {
    "text": "very likely going to want to do in a production environment you need to bring in other tools on top and that's what",
    "start": "2439280",
    "end": "2444480"
  },
  {
    "text": "we're going to look at next so we're going to look at some platforms that allow us to take images docker",
    "start": "2444480",
    "end": "2450160"
  },
  {
    "text": "images and sometimes other things and handle those well across multiple machines",
    "start": "2450160",
    "end": "2456160"
  },
  {
    "text": "so again what do we want out of our deployment platforms i'm going to give you three we're going to compare three but there are loads out there so i'm",
    "start": "2456160",
    "end": "2461520"
  },
  {
    "text": "going to give you some sort of cool things to think about when looking at that platform as you want as we mentioned before we need something",
    "start": "2461520",
    "end": "2467040"
  },
  {
    "text": "that allows us to separate our artifact from the environment topology",
    "start": "2467040",
    "end": "2472800"
  },
  {
    "text": "we need something that makes handling these things easy right because actually when you have micro services you've got",
    "start": "2472800",
    "end": "2478000"
  },
  {
    "text": "more small things and therefore you need things that can handle lots of small things",
    "start": "2478000",
    "end": "2483119"
  },
  {
    "text": "you can probably get away with sort of less effective tools for operating at scale when you've got a small number of",
    "start": "2483119",
    "end": "2488480"
  },
  {
    "text": "large things when you've got a large number of small things you need good automation you need good script",
    "start": "2488480",
    "end": "2494400"
  },
  {
    "text": "and we want something that supports docker images uh two of these actually you know one of these platforms",
    "start": "2494400",
    "end": "2500240"
  },
  {
    "text": "only supports dock images the other two have a lot more flexibility than that we can look at three we look at docker swarm this is sort of the",
    "start": "2500240",
    "end": "2507040"
  },
  {
    "text": "freely available out of the box uh multi-machine management for docker",
    "start": "2507040",
    "end": "2513599"
  },
  {
    "text": "that comes from docker themselves uh we look at mesos which is the oldest tool here probably the most mature as",
    "start": "2513599",
    "end": "2520000"
  },
  {
    "text": "well i'd argue but sort of like a giant swiss army knife like a really giant swiss army knife so it can be hard to",
    "start": "2520000",
    "end": "2525839"
  },
  {
    "text": "get your head around and finally we can look at kubernetes which is sort of the oldest it's the it's the",
    "start": "2525839",
    "end": "2532079"
  },
  {
    "text": "sort of the oldest and the newest tool here yeah so kubernetes is based on",
    "start": "2532079",
    "end": "2537119"
  },
  {
    "text": "abstractions that google use internally but it's an open source clean room",
    "start": "2537119",
    "end": "2542440"
  },
  {
    "text": "re-implementation of their internal approach to managing containers so thing to understand is kubernetes is not what",
    "start": "2542440",
    "end": "2548720"
  },
  {
    "text": "google runs internally because they're not stupid enough to let you have that for free it's sort of their sort of",
    "start": "2548720",
    "end": "2555119"
  },
  {
    "text": "external version of it start with docker swarm docker swarm works like how most these",
    "start": "2555119",
    "end": "2561280"
  },
  {
    "text": "systems work whereas you have the machines you're going to run your docker images on and you have some central controller with docker swarm we have a",
    "start": "2561280",
    "end": "2567920"
  },
  {
    "text": "thing called the swarm manager on your nodes you have things called swarm nodes and the small manager talks",
    "start": "2567920",
    "end": "2574079"
  },
  {
    "text": "the swarm nodes the nice thing about docker is if you get used to the command line do you know",
    "start": "2574079",
    "end": "2579200"
  },
  {
    "text": "how to run get processed listings get logs from a single docker node like on your machine",
    "start": "2579200",
    "end": "2585119"
  },
  {
    "text": "all of those well actually about 70 to 80 percent of all of those commands also work at the docker swarm level so you",
    "start": "2585119",
    "end": "2590400"
  },
  {
    "text": "can run those safe seven commands like docker ps docker log on the swarm manager and it effectively multiplexer",
    "start": "2590400",
    "end": "2596319"
  },
  {
    "text": "out so it makes it really really easy for people that have used a single docker machine management to start",
    "start": "2596319",
    "end": "2601359"
  },
  {
    "text": "working with with images in a docker swarm environment",
    "start": "2601359",
    "end": "2606960"
  },
  {
    "text": "it's the small manager's job to work out okay given what you've asked me to do where should i go and put these nodes so",
    "start": "2606960",
    "end": "2612960"
  },
  {
    "text": "it's handling effectively called the scheduling so it can scatter different docker nodes",
    "start": "2612960",
    "end": "2618400"
  },
  {
    "text": "so different docker images containers across all these machines for us",
    "start": "2618400",
    "end": "2623760"
  },
  {
    "text": "one of the things it uses is uh different scheduling strategies this is a similar thing that both kubernetes and",
    "start": "2623760",
    "end": "2629760"
  },
  {
    "text": "mesos have these as well but it's worth diving into what a scheduling strategy can do for you so for example one of the",
    "start": "2629760",
    "end": "2636160"
  },
  {
    "text": "uh sort of built-in charging strategies is bin packing so bin packing is looking to optimize resource consumption so",
    "start": "2636160",
    "end": "2642480"
  },
  {
    "text": "based on the profile of an image you want to deploy it's going to try and use up all the resources on a machine so",
    "start": "2642480",
    "end": "2649200"
  },
  {
    "text": "this is actually a very good approach for optimizing for a small number of machines so in this example here we've fused up",
    "start": "2649200",
    "end": "2655680"
  },
  {
    "text": "all the resources on this node so we've gone over to the other node here and then this node doesn't have anything on it at all",
    "start": "2655680",
    "end": "2661440"
  },
  {
    "text": "this could be a really useful thing to do if you're in a dynamic provisioning environment where you can turn small nodes off to save money so on amazon for",
    "start": "2661440",
    "end": "2667599"
  },
  {
    "text": "example just turn it off if you're not using it this may not though make sense if what you actually want is resiliency because",
    "start": "2667599",
    "end": "2673760"
  },
  {
    "text": "you can you could end up with all the nodes of a given service on one machine which effectively gives you a single",
    "start": "2673760",
    "end": "2679359"
  },
  {
    "text": "point of failure for something like that you could then use a spread strategy and you when you",
    "start": "2679359",
    "end": "2685040"
  },
  {
    "text": "say i want five instances you spread it will try and evenly distribute that node across",
    "start": "2685040",
    "end": "2691200"
  },
  {
    "text": "all of these nodes for you there's other there's even a random changing strategy",
    "start": "2691200",
    "end": "2696960"
  },
  {
    "text": "for just like spreading your stuff in random places i'm guessing just for a laugh because i",
    "start": "2696960",
    "end": "2702160"
  },
  {
    "text": "can't really think why you'd want to do it but anyway um other nice things you know",
    "start": "2702160",
    "end": "2707520"
  },
  {
    "text": "this one of the best things about swab is the way in which embraces the normal docker tool chain so some of you may",
    "start": "2707520",
    "end": "2713359"
  },
  {
    "text": "have used docker compose so this is an example of a very simple docker compose file so this allows you in yaml format",
    "start": "2713359",
    "end": "2719920"
  },
  {
    "text": "to sort of stand up a topology so in this example we're saying i've got one node which is called web it exposes",
    "start": "2719920",
    "end": "2727040"
  },
  {
    "text": "some ports it has a linked volume and it actually has links which is sort of a software defined networking thing",
    "start": "2727040",
    "end": "2733680"
  },
  {
    "text": "through to redis so these two things can talk to each other and by the way i've got a redis node and that's the image i'm going to use this actually allows",
    "start": "2733680",
    "end": "2739760"
  },
  {
    "text": "you to stand up little topologies for your individual services it works quite nicely and this stuff works as well on",
    "start": "2739760",
    "end": "2745680"
  },
  {
    "text": "docker swarm the one thing i would say for independent deployability you're deploying one service by itself that",
    "start": "2745680",
    "end": "2751599"
  },
  {
    "text": "means you want these docker compose files to just be the topology for one service the exception actually is when you want",
    "start": "2751599",
    "end": "2757440"
  },
  {
    "text": "to stand up to say a whole collection of services for maybe test purposes then docker compose and things like it",
    "start": "2757440",
    "end": "2763200"
  },
  {
    "text": "can be quite useful so maybe i'll start five or six services together for say a performance test they can be useful",
    "start": "2763200",
    "end": "2768960"
  },
  {
    "text": "there that's kind of handy so what do we think of docker swarm well",
    "start": "2768960",
    "end": "2774400"
  },
  {
    "text": "there are some problems ish i used to say it doesn't",
    "start": "2774400",
    "end": "2779440"
  },
  {
    "text": "rebalance so if a node went down",
    "start": "2779440",
    "end": "2785040"
  },
  {
    "text": "it wouldn't necessarily redistribute your containers and it wouldn't restart those foul containers those things have now changed but it's fairly recent and i",
    "start": "2785040",
    "end": "2793040"
  },
  {
    "text": "say recent as in it was about six months ago that these things were fixed the reason i'm hesitant here is because when",
    "start": "2793040",
    "end": "2799520"
  },
  {
    "text": "you go into production on a platform like this it kind of needs to work",
    "start": "2799520",
    "end": "2805359"
  },
  {
    "text": "and for me when you've only had the ability to rebalance nodes when they fail or restart containers when they",
    "start": "2805359",
    "end": "2811040"
  },
  {
    "text": "fail fairly recently and i've heard some stories where it doesn't always work consistently i get a little bit edgy so",
    "start": "2811040",
    "end": "2816880"
  },
  {
    "text": "those are new changes that are in there that's a key thing you're looking for from a scheduling platform you want the ability to run this stuff out but what",
    "start": "2816880",
    "end": "2823200"
  },
  {
    "text": "you're often really looking for is some of the characteristics of what we call autonomic systems you want the systems themselves to be self-healing if i'm",
    "start": "2823200",
    "end": "2830000"
  },
  {
    "text": "distributing 50 instances of a service i don't have to come along every 10 minutes and check there's still 50",
    "start": "2830000",
    "end": "2835440"
  },
  {
    "text": "instances in my service i want the scheduling platform itself to ensure that there are always 50 nodes running",
    "start": "2835440",
    "end": "2842720"
  },
  {
    "text": "so it's all like this auto scaling groups in amazon could do this for you and and docker's only docker swarm has",
    "start": "2842720",
    "end": "2848240"
  },
  {
    "text": "only been able to do this for the last six or seven months it plays very very nicely with the rest",
    "start": "2848240",
    "end": "2853760"
  },
  {
    "text": "of docker however the case studies are very thin on the ground um",
    "start": "2853760",
    "end": "2859119"
  },
  {
    "text": "last time i did the research and this was about six months ago um i found two case studies for people using docker",
    "start": "2859119",
    "end": "2865520"
  },
  {
    "text": "swarm in anger one was from rackspace one was my o'reilly who actually published my book",
    "start": "2865520",
    "end": "2871040"
  },
  {
    "text": "i found out that so the rackspace case study was where they'd use docker swarm to implement a platform as a service",
    "start": "2871040",
    "end": "2876960"
  },
  {
    "text": "the o'reilly case study was actually a case study of them using the rackspace pads that was in turn using docker swarm",
    "start": "2876960",
    "end": "2882800"
  },
  {
    "text": "so actually those two case studies were actually the same case study again i'm a bit risk adverse i want to like this is",
    "start": "2882800",
    "end": "2889200"
  },
  {
    "text": "not necessarily where i want to take my risk and so docker swarm is a bit you know it's very",
    "start": "2889200",
    "end": "2895359"
  },
  {
    "text": "easy to use and get up and running but these are the things that give me hesitation about picking it as a a",
    "start": "2895359",
    "end": "2901040"
  },
  {
    "text": "production platform let's talk about misos misos again is very simple uh similar right we have a",
    "start": "2901040",
    "end": "2907200"
  },
  {
    "text": "misos master the mesos masters talks to the actual machines where we're gonna",
    "start": "2907200",
    "end": "2912319"
  },
  {
    "text": "run our jobs it talks to a thing called a misos agent and at this point we have to talk about",
    "start": "2912319",
    "end": "2917839"
  },
  {
    "text": "one of the things that makes me source powerful and confusing because we have to talk about what misos calls a",
    "start": "2917839",
    "end": "2925200"
  },
  {
    "text": "framework a miso's framework has really confused me for a while because i think of a",
    "start": "2925200",
    "end": "2930640"
  },
  {
    "text": "framework as something that helps me use another thing right you know so uh like hibernate is a",
    "start": "2930640",
    "end": "2937040"
  },
  {
    "text": "framework for not understanding databases um but it's something to help me use something else frameworks in mesos are",
    "start": "2937040",
    "end": "2943200"
  },
  {
    "text": "something quite different and it's not really helpful we do this all the time in computing we have terms",
    "start": "2943200",
    "end": "2948240"
  },
  {
    "text": "that we understand what we mean and then we decide in a different context use that exact same word to mean something completely different and it's not",
    "start": "2948240",
    "end": "2954319"
  },
  {
    "text": "helpful a miso's framework is actually really a pair it's two things it's more like a",
    "start": "2954319",
    "end": "2960240"
  },
  {
    "text": "plug-in it would be a better phrase for it what it is is a scheduler and that's a bit of software that would run on the",
    "start": "2960240",
    "end": "2966240"
  },
  {
    "text": "master and works out how to sort of send out the jobs and it's an executor and that's an environment in which a job",
    "start": "2966240",
    "end": "2972800"
  },
  {
    "text": "will run so you can have one mesos framework for hadoop and actually the space that mesos",
    "start": "2972800",
    "end": "2978960"
  },
  {
    "text": "is often used in is the space of things like data processing running hadoop spam swarm on spark say hadoop",
    "start": "2978960",
    "end": "2986559"
  },
  {
    "text": "spark and uh you know other map reduced type style jobs",
    "start": "2986559",
    "end": "2992720"
  },
  {
    "text": "um so i have a hadoop scheduler and so when i was shipping my hadoop job i talked to the hadoop scheduler and it will have it",
    "start": "2992720",
    "end": "2998720"
  },
  {
    "text": "will support sort of my ecosystem and then i run an executor and my jobs run inside that executor",
    "start": "2998720",
    "end": "3005520"
  },
  {
    "text": "and so this is quite a plugable system this already is great because then you can start thinking that i could have one",
    "start": "3005520",
    "end": "3011200"
  },
  {
    "text": "mesos cluster that i could use for multiple different purposes which is not necessarily the case for",
    "start": "3011200",
    "end": "3016480"
  },
  {
    "text": "docker swarm the um plugin the framework that we",
    "start": "3016480",
    "end": "3021520"
  },
  {
    "text": "would use for running microservices would be marathon so marathon is a",
    "start": "3021520",
    "end": "3027359"
  },
  {
    "text": "framework for running persistent long-running jobs so it's the thing that will ensure",
    "start": "3027359",
    "end": "3034160"
  },
  {
    "text": "sort of the state is managed so marathon supports natively supports",
    "start": "3034160",
    "end": "3039760"
  },
  {
    "text": "docker images it does support other types of applications running inside it it is a thing that's going to maintain",
    "start": "3039760",
    "end": "3045359"
  },
  {
    "text": "desired state this framework model is really interesting because when a new",
    "start": "3045359",
    "end": "3051119"
  },
  {
    "text": "technology comes out you can actually drop it in and support it more natively so for people like your you know your",
    "start": "3051119",
    "end": "3056319"
  },
  {
    "text": "data processing people that really know about running hadoop jobs and that stuff right using the the hadoop schedule is a",
    "start": "3056319",
    "end": "3061839"
  },
  {
    "text": "nice level of distraction but you're making multiple uses of the same online hardware this can actually make for a",
    "start": "3061839",
    "end": "3067440"
  },
  {
    "text": "really good utilization of your physical resources you can also think of other types of frameworks you can drop in",
    "start": "3067440",
    "end": "3073680"
  },
  {
    "text": "so aromatic is an interesting framework whereas marathon is for long-running persistent",
    "start": "3073680",
    "end": "3080000"
  },
  {
    "text": "jobs that maintain desired state aerometic is for really short wedding jobs",
    "start": "3080000",
    "end": "3085200"
  },
  {
    "text": "it's up for running one-shot containers so i run it and it executes and it dies",
    "start": "3085200",
    "end": "3090640"
  },
  {
    "text": "it's not very useful is it hands up though who here has heard of",
    "start": "3090640",
    "end": "3096400"
  },
  {
    "text": "amazon lambda right aromatic is kind of half of amazon lambda running now on your own",
    "start": "3096400",
    "end": "3102960"
  },
  {
    "text": "infrastructure it's the part that gives you a command line that lets you an api to execute",
    "start": "3102960",
    "end": "3108240"
  },
  {
    "text": "that container all you need to do is stick an api gateway on top of it and aromatic kind of gives you",
    "start": "3108240",
    "end": "3113839"
  },
  {
    "text": "amazon lander running on nisos alongside now you've got your serverless",
    "start": "3113839",
    "end": "3118880"
  },
  {
    "text": "architecture god that time annoys me alongside your non-serverless architecture on your servers anyway it's",
    "start": "3118880",
    "end": "3125200"
  },
  {
    "text": "very confusing but it's a very powerful model so misos very it's great if you've got mixed",
    "start": "3125200",
    "end": "3131359"
  },
  {
    "text": "workloads it's also very interesting if you look at experimenting with their diesel stuff",
    "start": "3131359",
    "end": "3136839"
  },
  {
    "text": "that the data center operating system that provides of high level abstractions for running things like cassandra you",
    "start": "3136839",
    "end": "3143040"
  },
  {
    "text": "can mix all those workloads on the same infrastructure it is very powerful it is",
    "start": "3143040",
    "end": "3148079"
  },
  {
    "text": "very fully featured it is very widely used there are some great case studies",
    "start": "3148079",
    "end": "3153200"
  },
  {
    "text": "out there out there how many people here have an iphone how many people here have used siri on",
    "start": "3153200",
    "end": "3158319"
  },
  {
    "text": "your iphone you are running on a misos cluster so apple did some talks like last year",
    "start": "3158319",
    "end": "3165680"
  },
  {
    "text": "talking about how they use misos to scale siri they actually wrote their own framework rather than using marathon and",
    "start": "3165680",
    "end": "3171520"
  },
  {
    "text": "they're running like 30 000 node uh mesos clusters so there are some great",
    "start": "3171520",
    "end": "3177440"
  },
  {
    "text": "case studies at very large scale here but there are lots of moving parts",
    "start": "3177440",
    "end": "3183599"
  },
  {
    "text": "um you sort of there's a few things to get your head around let's talk about kubernetes",
    "start": "3183599",
    "end": "3190319"
  },
  {
    "text": "you know very new very sexy it's got google it's got some uh quite a few companies behind it core os are behind",
    "start": "3190319",
    "end": "3196240"
  },
  {
    "text": "it um red hat's open shift v3 which",
    "start": "3196240",
    "end": "3201760"
  },
  {
    "text": "is basically a re-badged packaged kubernetes um",
    "start": "3201760",
    "end": "3207520"
  },
  {
    "text": "microsoft actually had one of the earliest examples of public hosted kubernetes on azure they got that out before google you can run uh sort of",
    "start": "3207520",
    "end": "3214880"
  },
  {
    "text": "turnkey kubernetes on a lot of hosting platforms um similar architecture very familiar",
    "start": "3214880",
    "end": "3221520"
  },
  {
    "text": "architecture now now we're going to think of an api server we now talk to things that are called cubelets that's",
    "start": "3221520",
    "end": "3227119"
  },
  {
    "text": "quite cute i like that and like all the other platforms i've got some command line stuff or i can",
    "start": "3227119",
    "end": "3232720"
  },
  {
    "text": "make api calls this central server and that's going to schedule my jobs and it deploys things as well now the",
    "start": "3232720",
    "end": "3239359"
  },
  {
    "text": "things it deploys is slightly different we're not deploying now instances of a docker container",
    "start": "3239359",
    "end": "3245680"
  },
  {
    "text": "we're actually deploying a thing called pods",
    "start": "3245680",
    "end": "3250480"
  },
  {
    "text": "so pods are a tightly coupled set of containers that will run on one node",
    "start": "3251280",
    "end": "3257520"
  },
  {
    "text": "so you might have two or three containers all together in one node and that get deployed together all the time",
    "start": "3257520",
    "end": "3262880"
  },
  {
    "text": "you might also bundle in their configuration this could be how you put your configuration files in there so your configuration files could be one",
    "start": "3262880",
    "end": "3268640"
  },
  {
    "text": "way of keeping them separate from the artifact to go in here or for volumes um cells are kind of mortal this isn't a",
    "start": "3268640",
    "end": "3274400"
  },
  {
    "text": "conceptual service this is just like i'm deploying a pod so sort of when you schedule something you're scheduling",
    "start": "3274400",
    "end": "3280799"
  },
  {
    "text": "pods to be deployed now this abstraction bugs me because it really feels like it's an abstraction",
    "start": "3280799",
    "end": "3286480"
  },
  {
    "text": "based specifically on performance optimizations that google use internally you're not going to want to deploy pods",
    "start": "3286480",
    "end": "3293920"
  },
  {
    "text": "with loads of services inside them because you want independent scheduling of your services because you want independent deployment of your services",
    "start": "3293920",
    "end": "3300720"
  },
  {
    "text": "therefore it's when you have these pods anything you really like to have in them very often are going to be maybe a some",
    "start": "3300720",
    "end": "3306880"
  },
  {
    "text": "configuration files or maybe like a volume that's it you don't really going to be combining multiple services",
    "start": "3306880",
    "end": "3313119"
  },
  {
    "text": "together inside one pod kubernetes and mesos and docker swarm all have scheduling strategies that",
    "start": "3313119",
    "end": "3319440"
  },
  {
    "text": "allow you to say when i deploy this service could you try and deploy it next to this one if you can for performance",
    "start": "3319440",
    "end": "3325520"
  },
  {
    "text": "optimizations so you can already handle that stuff at the scheduling layer so quite wide in pods it's always bugs me a",
    "start": "3325520",
    "end": "3331760"
  },
  {
    "text": "bit and this is an internal abstraction that's been made external and i don't think it's always very helpful",
    "start": "3331760",
    "end": "3338240"
  },
  {
    "text": "and this isn't really a service either this sort of feels like it's trying to be a higher level of abstraction than",
    "start": "3338240",
    "end": "3343760"
  },
  {
    "text": "the other stuff we talked about it's not quite but it does have a concept of a service which mesos doesn't really",
    "start": "3343760",
    "end": "3350640"
  },
  {
    "text": "uh and service definitions look like this it's in jason which really annoys me all the examples in jason they",
    "start": "3350640",
    "end": "3355920"
  },
  {
    "text": "support yaml too and yam was much more readable anyway so here we see some stuff we see we've got a name of a",
    "start": "3355920",
    "end": "3361680"
  },
  {
    "text": "service we've got some port information this is so similar layout to docker swarm this again like docker swarm could be how",
    "start": "3361680",
    "end": "3369200"
  },
  {
    "text": "docker compose could be how we define our topology for our different environments uh and so basically what a service is is",
    "start": "3369200",
    "end": "3376640"
  },
  {
    "text": "a mapping between a set of pods and some metadata and ports so you see here this",
    "start": "3376640",
    "end": "3382960"
  },
  {
    "text": "thing called a selector and what that's going to do is say this service consists of any pods",
    "start": "3382960",
    "end": "3388880"
  },
  {
    "text": "that map this selection criteria and so on the machine what's actually",
    "start": "3388880",
    "end": "3393920"
  },
  {
    "text": "happening is you've got a little thing called the service proxy and as pods are deployed the search proxy is going do",
    "start": "3393920",
    "end": "3399280"
  },
  {
    "text": "you match any services i know about oh you do right i'm going to expose you uh",
    "start": "3399280",
    "end": "3404400"
  },
  {
    "text": "actually you can you've got other things inside um kubernetes that allow you to do things like sort of sort of sort of",
    "start": "3404400",
    "end": "3410079"
  },
  {
    "text": "load balancing as well so you can actually which is again a nice feature um and i thought this was great okay",
    "start": "3410079",
    "end": "3416720"
  },
  {
    "text": "great i really want to actually work at the level of the service conceptually i think about scaling up a service i'm",
    "start": "3416720",
    "end": "3423119"
  },
  {
    "text": "talking about deploying a service but in kubernetes it's all a bit different because you don't scale a",
    "start": "3423119",
    "end": "3428720"
  },
  {
    "text": "service you actually scale the pods you don't deploy a service you actually deploy the pods",
    "start": "3428720",
    "end": "3434880"
  },
  {
    "text": "and this sort of doesn't really fit very easily with me and so actually most things that i've spoken to and the",
    "start": "3434880",
    "end": "3440400"
  },
  {
    "text": "company i'm currently working at all end up with abstractions on top of this stuff to hide away this sort of odd",
    "start": "3440400",
    "end": "3447599"
  },
  {
    "text": "disjointed set of abstractions anyway",
    "start": "3447599",
    "end": "3452640"
  },
  {
    "text": "uh kubernetes it is slightly simpler to set up the mesos are you say simpler i'm saying difference is",
    "start": "3452640",
    "end": "3459680"
  },
  {
    "text": "not that great anymore to be honest we now look to play around with um kubernetes and more anger it's also a",
    "start": "3459680",
    "end": "3465520"
  },
  {
    "text": "more single purpose you don't have this idea that you can do mixed work clothes it doesn't have the same pluggable execution",
    "start": "3465520",
    "end": "3470960"
  },
  {
    "text": "concept that mesos does this is going to be more single purpose for you it is a little bit closer in abstraction",
    "start": "3470960",
    "end": "3477040"
  },
  {
    "text": "to a platform as a service but it isn't actually close enough to heroku-like paths for it to be really",
    "start": "3477040",
    "end": "3483760"
  },
  {
    "text": "a big differential in my mind it adds some things which are useful replication control stuff low bouncy type stuff",
    "start": "3483760",
    "end": "3490240"
  },
  {
    "text": "but still not high enough level for me to say that i would definitely use it because of the high level abstraction",
    "start": "3490240",
    "end": "3496480"
  },
  {
    "text": "pods can be a bit confusing um it is fairly new it still does have issues uh they had",
    "start": "3496480",
    "end": "3502640"
  },
  {
    "text": "problems at the beginning of the year i know at the end of last year where they couldn't actually scale the 100 machines",
    "start": "3502640",
    "end": "3508480"
  },
  {
    "text": "those things have been fixed people are working through i say they have got impressive industry support um",
    "start": "3508480",
    "end": "3515280"
  },
  {
    "text": "i would say that uh you can run these things you know you can go and fire up a kubernetes instance on google or",
    "start": "3515280",
    "end": "3522079"
  },
  {
    "text": "microsoft you can also do the same thing for misos though as well so in terms of summarizing this if i'm",
    "start": "3522079",
    "end": "3528960"
  },
  {
    "text": "thinking about these three platforms right now i'm interested in sort of a docker-based deployment for my micro services",
    "start": "3528960",
    "end": "3536079"
  },
  {
    "text": "um i pretty much take docker swarm out of the mix immediately it might get there eventually it's not there now",
    "start": "3536079",
    "end": "3542960"
  },
  {
    "text": "there's not enough features there i would probably suggest baking two of these off and i would suggest going to",
    "start": "3542960",
    "end": "3549520"
  },
  {
    "text": "somewhere like google and just spinning up a message instance spin up a kubernetes instance",
    "start": "3549520",
    "end": "3554799"
  },
  {
    "text": "and then just see what it's like to work with and then think of that from the deployment process point of view and",
    "start": "3554799",
    "end": "3559920"
  },
  {
    "text": "then try setting these up yourself and see what they're like um they both have they all have little",
    "start": "3559920",
    "end": "3566640"
  },
  {
    "text": "quirks and little interesting issues uh i i found it quite funny i was diving",
    "start": "3566640",
    "end": "3571680"
  },
  {
    "text": "into kubernetes to see how it does secret storage and the way uh kubernetes stores secret information",
    "start": "3571680",
    "end": "3578319"
  },
  {
    "text": "is in plain text uh which is odd anyway",
    "start": "3578319",
    "end": "3583680"
  },
  {
    "text": "these are some there are some legitimately hard problems here but just to summarize talking about the core principles of",
    "start": "3583680",
    "end": "3589599"
  },
  {
    "text": "micro service deployment independent deployability make sure that whatever you do around",
    "start": "3589599",
    "end": "3595760"
  },
  {
    "text": "your tool chain around your artifacts around your platforms allows you to make one change to a service and deploy it by itself into production one artifact for",
    "start": "3595760",
    "end": "3602960"
  },
  {
    "text": "all environments don't rebuild artifacts that introduces delay and introduces the potential for",
    "start": "3602960",
    "end": "3609200"
  },
  {
    "text": "error so separate your topology from your artifact to make that work and use the same deployment process everywhere",
    "start": "3609200",
    "end": "3617520"
  },
  {
    "text": "consider using docker images as artifacts because it gives you much cheaper isolated execution environments",
    "start": "3617520",
    "end": "3623280"
  },
  {
    "text": "your services even if you can't use docker images consider things like custom images if",
    "start": "3623280",
    "end": "3628880"
  },
  {
    "text": "you're on a cloud platform think about amazon amis or digitalocean think about droplets",
    "start": "3628880",
    "end": "3634160"
  },
  {
    "text": "i also actually shared with you a few criteria for selecting a platform i will leave you with one just sort of",
    "start": "3634160",
    "end": "3640000"
  },
  {
    "text": "caveat this whole space is a little bit new and edgy",
    "start": "3640000",
    "end": "3646240"
  },
  {
    "text": "right it's not just that the platforms themselves are new and have probably more churn than any",
    "start": "3646240",
    "end": "3651839"
  },
  {
    "text": "other space in microservices these deployment platforms but the concept of what good looks like is changing for us",
    "start": "3651839",
    "end": "3657280"
  },
  {
    "text": "all the time so just be aware that i think it's kind of very important when you get",
    "start": "3657280",
    "end": "3663520"
  },
  {
    "text": "to a certain scale microservices that you have a platform that gives you these abstractions but you may actually end up picking",
    "start": "3663520",
    "end": "3669280"
  },
  {
    "text": "something and then revisiting your decision in a year from now it is essential you actually bake these",
    "start": "3669280",
    "end": "3674480"
  },
  {
    "text": "things off for yourselves you're gonna go to a vendor great but don't go to just one vendor get at least two of them",
    "start": "3674480",
    "end": "3680240"
  },
  {
    "text": "in to bake off um i was gonna leave you some other things if you want to buy my book directly from o'reilly you can use",
    "start": "3680240",
    "end": "3685359"
  },
  {
    "text": "the code authd that gets you 40 off uh i've also got a",
    "start": "3685359",
    "end": "3690480"
  },
  {
    "text": "blog and a podcast at sam newman.io and i think we're a little bit over but i'm happy to go into the break to answer",
    "start": "3690480",
    "end": "3697119"
  },
  {
    "text": "some questions so any questions",
    "start": "3697119",
    "end": "3703040"
  },
  {
    "text": "over there so one of the problems we have with",
    "start": "3703040",
    "end": "3708240"
  },
  {
    "text": "independently deploying the microservices the version dependencies",
    "start": "3708240",
    "end": "3713280"
  },
  {
    "text": "of other microservices depending yeah what are some tactics around that so",
    "start": "3713280",
    "end": "3718559"
  },
  {
    "text": "you've kind of got so firstly is knowing whether or not you're going to break somebody else",
    "start": "3718559",
    "end": "3724480"
  },
  {
    "text": "right ideally you don't ideally you do expansion only changes and you don't make backwards compatible changes right",
    "start": "3724480",
    "end": "3730400"
  },
  {
    "text": "that's ideally the key thing is even when you think you're doing it you may get it wrong um so then i would say",
    "start": "3730400",
    "end": "3737599"
  },
  {
    "text": "think about your testing approach to catch those cases you need to know what's going to happen uh that's actually beth scurry there is a third",
    "start": "3737599",
    "end": "3744240"
  },
  {
    "text": "second person down who i did introduce you did a talk a couple days ago about a tool called pax which does contributive and testing that helps catch the changes",
    "start": "3744240",
    "end": "3750960"
  },
  {
    "text": "before they occur um but sometimes you have to introduce backwards incompatible changes so then",
    "start": "3750960",
    "end": "3756720"
  },
  {
    "text": "you've got two options one option is okay i've got i'm breaking",
    "start": "3756720",
    "end": "3762799"
  },
  {
    "text": "you you're calling me i'm gonna break you breaking you so i'm actually going to leave the old version of me lying around",
    "start": "3762799",
    "end": "3769039"
  },
  {
    "text": "so you can still call the old version of me and i'm going to deploy a brand new version next to it and then i can give you time so when you're ready to make",
    "start": "3769039",
    "end": "3775680"
  },
  {
    "text": "your deployment change to use the new api to use the new backwashing compatible change you redirect to me instead then i",
    "start": "3775680",
    "end": "3782480"
  },
  {
    "text": "can retire the old version that requires work around service discovery knowing what you're running",
    "start": "3782480",
    "end": "3788799"
  },
  {
    "text": "requires conversation uh about this stuff and some places i've seen they can't",
    "start": "3788799",
    "end": "3794720"
  },
  {
    "text": "they don't get the clients to update and they just leave you things lying around which has a bigger footprint when you have multiple different versions of the",
    "start": "3794720",
    "end": "3800640"
  },
  {
    "text": "same service lying around they are effectively branches of code if you've got to fix a bug you've now got to fix in multiple places the other option is",
    "start": "3800640",
    "end": "3806960"
  },
  {
    "text": "when you make it backwards incompatible change is is actually effectively on the same service version to have two",
    "start": "3806960",
    "end": "3812640"
  },
  {
    "text": "different endpoints so it's the same version of the code but you have two different endpoints",
    "start": "3812640",
    "end": "3818319"
  },
  {
    "text": "i've used both approaches i prefer the latter because it simplifies my topology and avoids that sort of branching issue",
    "start": "3818319",
    "end": "3825680"
  },
  {
    "text": "but both are viable probably time for one more question",
    "start": "3825680",
    "end": "3831920"
  },
  {
    "text": "okay uh well if you do think of anything else i'm at sam newman i hope you've",
    "start": "3834000",
    "end": "3839359"
  },
  {
    "text": "enjoyed ndc please as i say do give feedback and please do think about coming back next year tell all your",
    "start": "3839359",
    "end": "3844640"
  },
  {
    "text": "friends and your colleagues but i hope you enjoy the rest of today",
    "start": "3844640",
    "end": "3850920"
  },
  {
    "text": "you",
    "start": "3854400",
    "end": "3856480"
  }
]