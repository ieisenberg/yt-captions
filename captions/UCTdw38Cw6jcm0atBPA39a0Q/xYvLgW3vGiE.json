[
  {
    "text": "i think we can start so my name is michael stipe i'm the author of the hot chocolate",
    "start": "960",
    "end": "7200"
  },
  {
    "text": "graphql library.net so one of the biggest graphql implementations in the net ecosystem and",
    "start": "7200",
    "end": "14320"
  },
  {
    "text": "i'm also one of the members of the graphql technical steering committee today i want to talk to you about",
    "start": "14320",
    "end": "20240"
  },
  {
    "text": "graphical observability and actually observability stands at the end of this",
    "start": "20240",
    "end": "26400"
  },
  {
    "text": "talk it's it will be essentially the result of our",
    "start": "26400",
    "end": "31599"
  },
  {
    "text": "analysis of the problem that we can face in distributed graphql",
    "start": "31599",
    "end": "37200"
  },
  {
    "text": "systems the issues we will explore actually are not just",
    "start": "37200",
    "end": "43680"
  },
  {
    "text": "a problem that we will face with graphql it could also happen in rest deployments or grpc or whatever",
    "start": "43680",
    "end": "51760"
  },
  {
    "text": "but in graphql we have some some",
    "start": "51760",
    "end": "56800"
  },
  {
    "text": "unique challenges because in rest or grpc you actually",
    "start": "56800",
    "end": "63120"
  },
  {
    "text": "can very easily test what the performance characteristics of certain requests",
    "start": "63120",
    "end": "70240"
  },
  {
    "text": "are with graphql that is more more difficult let's have a look at a simple graphql",
    "start": "70240",
    "end": "77280"
  },
  {
    "text": "query this you could say is the hello world of graphql it's a very simple query that just asks",
    "start": "77280",
    "end": "85040"
  },
  {
    "text": "for the currently signed in user of our system and from for from that user for the name",
    "start": "85040",
    "end": "90799"
  },
  {
    "text": "it's actually the slide i open with when i explain what graphql is",
    "start": "90799",
    "end": "97438"
  },
  {
    "text": "and if we send such a request to our graphql backend as we expect",
    "start": "97600",
    "end": "102720"
  },
  {
    "text": "we get something very close to our request almost like our empty json graph was filled up with",
    "start": "102720",
    "end": "109840"
  },
  {
    "text": "data we get the data that our graphql has ever resolved",
    "start": "109840",
    "end": "115840"
  },
  {
    "text": "but that's just a simple graphql request it's easy to look at what the",
    "start": "116159",
    "end": "121600"
  },
  {
    "text": "performance characteristics of such a request would be but graphql is not that simple because",
    "start": "121600",
    "end": "128160"
  },
  {
    "text": "we can drill in we can ask for more data as our use cases change or",
    "start": "128160",
    "end": "134000"
  },
  {
    "text": "our clients maybe we are going from a mobile to a desktop client and now we want to display more data",
    "start": "134000",
    "end": "142440"
  },
  {
    "text": "and it's not only about like simple sparse fields like here we are actually getting",
    "start": "143520",
    "end": "149040"
  },
  {
    "text": "just more data from our user but we can really drill into connections",
    "start": "149040",
    "end": "154959"
  },
  {
    "text": "in graphql like maybe get the friends of this user",
    "start": "154959",
    "end": "160000"
  },
  {
    "text": "and we could even go deeper get the friends of the friends and so on what that means is that it's not clear",
    "start": "160000",
    "end": "166560"
  },
  {
    "text": "in the beginning what services and what components we will use in graphql",
    "start": "166560",
    "end": "173200"
  },
  {
    "text": "so typically in graphql or that's how facebook started we have a system",
    "start": "175920",
    "end": "182480"
  },
  {
    "text": "where graphql is a very thin layer of our business layer and allows us to select the data from",
    "start": "182480",
    "end": "189040"
  },
  {
    "text": "our business apis that we need for certain components or",
    "start": "189040",
    "end": "194800"
  },
  {
    "text": "use cases or whatever but as graphql was open sourced and",
    "start": "194800",
    "end": "201120"
  },
  {
    "text": "introduced the community we saw more of the cases",
    "start": "201120",
    "end": "206400"
  },
  {
    "text": "where we distribute or we essentially compensate microservices you could say",
    "start": "206400",
    "end": "213120"
  },
  {
    "text": "the graphical monoliths on top of our microsoft microservice architecture is",
    "start": "213120",
    "end": "218799"
  },
  {
    "text": "often a compensation for the complexity that you would have in knowing where's this endpoint where do i get this data",
    "start": "218799",
    "end": "225920"
  },
  {
    "text": "and that was graphic where you have this single point of entry but it also",
    "start": "225920",
    "end": "232319"
  },
  {
    "text": "makes our task in predicting how performant each request is",
    "start": "232319",
    "end": "238080"
  },
  {
    "text": "or how performing our system is more difficult because if somebody changes something in",
    "start": "238080",
    "end": "245040"
  },
  {
    "text": "one of our downstream services then our performance characteristics might",
    "start": "245040",
    "end": "251439"
  },
  {
    "text": "change for the whole system yeah typically",
    "start": "251439",
    "end": "257519"
  },
  {
    "text": "that is one of the setups that we see often in in in the wild",
    "start": "257519",
    "end": "263520"
  },
  {
    "text": "where we have a couple of topic domain services i would say to",
    "start": "263520",
    "end": "268560"
  },
  {
    "text": "them not even microservices that care about certain topics",
    "start": "268560",
    "end": "275680"
  },
  {
    "text": "but as graphql matures and also takes on these federation concepts",
    "start": "275680",
    "end": "283360"
  },
  {
    "text": "what we see more and more is these federated concepts where you have like even multiple graphql servers and have",
    "start": "283360",
    "end": "289120"
  },
  {
    "text": "multiple components underneath and are aggregated with the graph gateway",
    "start": "289120",
    "end": "294960"
  },
  {
    "text": "a common example is for instance apollo federation",
    "start": "294960",
    "end": "299600"
  },
  {
    "text": "so how do we analyze issues in such an environment",
    "start": "300720",
    "end": "306560"
  },
  {
    "text": "and often issues when do we discover issues most of the times when someone",
    "start": "307039",
    "end": "312320"
  },
  {
    "text": "comes to us and tells us there's something wrong with your system maybe an admin comes over",
    "start": "312320",
    "end": "317680"
  },
  {
    "text": "to the to the developer teams and says look our system is at its limit",
    "start": "317680",
    "end": "323919"
  },
  {
    "text": "something is wrong you deployed something yesterday at best maybe on a friday",
    "start": "323919",
    "end": "330720"
  },
  {
    "text": "and then you run into issues over the weekend so typically what we what we see in",
    "start": "330720",
    "end": "338000"
  },
  {
    "text": "projects let me get out of this here is something and",
    "start": "338000",
    "end": "344160"
  },
  {
    "text": "let me just start a demo",
    "start": "344160",
    "end": "349680"
  },
  {
    "text": "first let's start the client",
    "start": "350160",
    "end": "353840"
  },
  {
    "text": "and this is a react client and we have a back end for cryptocurrencies not that i'm really",
    "start": "355520",
    "end": "361039"
  },
  {
    "text": "invested in them but just because it's fancy",
    "start": "361039",
    "end": "367560"
  },
  {
    "text": "and that's don't need to watch that",
    "start": "369759",
    "end": "373440"
  },
  {
    "text": "and use some chrome here",
    "start": "376639",
    "end": "380759"
  },
  {
    "text": "okay all right",
    "start": "384880",
    "end": "392280"
  },
  {
    "text": "okay so let's say we run into",
    "start": "394400",
    "end": "399520"
  },
  {
    "text": "problems at production with our application here how would we analyze that typically what",
    "start": "399520",
    "end": "405840"
  },
  {
    "text": "developers do at least in a naive way is maybe run it on our local system",
    "start": "405840",
    "end": "413039"
  },
  {
    "text": "have a look at what the system does when i do refreshes maybe when i go into",
    "start": "413039",
    "end": "420240"
  },
  {
    "text": "maybe um the bitcoin data have a look at",
    "start": "420240",
    "end": "425280"
  },
  {
    "text": "if that is slow maybe not maybe yes as i go through this application i",
    "start": "425280",
    "end": "430560"
  },
  {
    "text": "actually have to say it's it's kind of smooth it really runs very well and i don't see",
    "start": "430560",
    "end": "437039"
  },
  {
    "text": "any performance issues in this system and that's typically because on the local machine",
    "start": "437039",
    "end": "442960"
  },
  {
    "text": "your stuff will almost always run very well",
    "start": "442960",
    "end": "447840"
  },
  {
    "text": "and a naive approach here could be that we maybe look at some logging data",
    "start": "448639",
    "end": "455440"
  },
  {
    "text": "logging data might be on our console not the best idea but that's maybe a first indicator to look",
    "start": "456000",
    "end": "462160"
  },
  {
    "text": "at issues that we would face in our application so if we for instance let's go back to",
    "start": "462160",
    "end": "468639"
  },
  {
    "text": "our initial list refresh that and let me",
    "start": "468639",
    "end": "474240"
  },
  {
    "text": "just pull that in refresh our application and we can see",
    "start": "474240",
    "end": "480000"
  },
  {
    "text": "it's really really actually nice and quick but what we can see is",
    "start": "480000",
    "end": "485520"
  },
  {
    "text": "that there's there's a whole lot going on here we can see that there are sqls going on",
    "start": "485520",
    "end": "491840"
  },
  {
    "text": "there are more escorts going on and there are even http requests going",
    "start": "491840",
    "end": "497120"
  },
  {
    "text": "on so there's a whole lot of data being fetched just to get",
    "start": "497120",
    "end": "502479"
  },
  {
    "text": "a list of simple cryptocurrencies here and if i even go",
    "start": "502479",
    "end": "508400"
  },
  {
    "text": "if i even just drill into one of those cryptocurrencies i can see there's a whole lot of http requests actually",
    "start": "508400",
    "end": "514719"
  },
  {
    "text": "going on you can see here is something being fetched from a price api",
    "start": "514719",
    "end": "520560"
  },
  {
    "text": "as i said with graphql we often have this aggregation of rest services or grpc services",
    "start": "520560",
    "end": "528000"
  },
  {
    "text": "so there's maybe um something else going on behind these services",
    "start": "528000",
    "end": "534959"
  },
  {
    "text": "but that also shows the limitation of logging actually you can see what's happening in your",
    "start": "534959",
    "end": "540720"
  },
  {
    "text": "system but it's kind of sealed off and also these data is not really",
    "start": "540720",
    "end": "546839"
  },
  {
    "text": "accessible for me like it's not connected and i can sift through these log files",
    "start": "546839",
    "end": "553920"
  },
  {
    "text": "and that's what we did for the last 10 years maybe but it's very hard to analyze them there",
    "start": "553920",
    "end": "560800"
  },
  {
    "text": "are tools for that and most people will not look at the console but still it's very disconnected and i",
    "start": "560800",
    "end": "567839"
  },
  {
    "text": "don't see what's going on here so the first approach to solve that in graphql was to",
    "start": "567839",
    "end": "575279"
  },
  {
    "text": "introduce something that we called apollo tracing it's a protocol to look at the graph",
    "start": "575279",
    "end": "581040"
  },
  {
    "text": "data essentially to look at the resolver performance",
    "start": "581040",
    "end": "586480"
  },
  {
    "text": "so how would we do that let me go out here and let's have a look at some code",
    "start": "586480",
    "end": "594080"
  },
  {
    "text": "so this is my graphql server",
    "start": "594080",
    "end": "598160"
  },
  {
    "text": "so quite nice and organized and what i want to do is",
    "start": "599279",
    "end": "605760"
  },
  {
    "text": "add some more insights into my graph and in order to set up apollo tracing",
    "start": "605760",
    "end": "612320"
  },
  {
    "text": "and we will look at what a product tracing really is i can just chain into my graphical configuration at apollo",
    "start": "612320",
    "end": "618959"
  },
  {
    "text": "tracing here and in our case we do always this is actually not a good idea because apollo",
    "start": "618959",
    "end": "626000"
  },
  {
    "text": "tracing will create a huge amount of data and put that on our request",
    "start": "626000",
    "end": "631279"
  },
  {
    "text": "and we actually don't want that but let's do it just to get some idea about that",
    "start": "631279",
    "end": "639680"
  },
  {
    "text": "i have to say that apollo tracing is actually now deprecated but it's a first step to have",
    "start": "639680",
    "end": "646240"
  },
  {
    "text": "a look at this and it's deprecated for the reason i already said it produces a lot of data which it puts in our payload",
    "start": "646240",
    "end": "655680"
  },
  {
    "text": "so what is apollo tracing i'm using here now let me just",
    "start": "657120",
    "end": "662800"
  },
  {
    "text": "get into that we are running on port 5000 and it's",
    "start": "662800",
    "end": "670720"
  },
  {
    "text": "graphql let's open that so this is playground another graphql ide",
    "start": "670720",
    "end": "678959"
  },
  {
    "text": "and what we can see here is essentially our schema being fetched i hope",
    "start": "678959",
    "end": "684959"
  },
  {
    "text": "or not oh",
    "start": "684959",
    "end": "690160"
  },
  {
    "text": "yeah that wasn't a mistake made i should run my server",
    "start": "690160",
    "end": "697040"
  },
  {
    "text": "okay okay my server is running",
    "start": "701040",
    "end": "706320"
  },
  {
    "text": "okay recovered okay so with this ide i essentially can run",
    "start": "708640",
    "end": "716560"
  },
  {
    "text": "graphql queries so i can go in here say okay i want to fetch the assets",
    "start": "716560",
    "end": "723200"
  },
  {
    "text": "and maybe from the assets i want to grab the nodes which are the actual assets",
    "start": "724399",
    "end": "730639"
  },
  {
    "text": "and from there maybe the name and i can run that and then down here i have this tracing",
    "start": "730639",
    "end": "736880"
  },
  {
    "text": "blade which essentially tells me how long this resolver ran like in this instance it",
    "start": "736880",
    "end": "742079"
  },
  {
    "text": "just took 60 milliseconds so that's imaginable the um",
    "start": "742079",
    "end": "748480"
  },
  {
    "text": "the into in order to get the actual performance inside we should grab",
    "start": "748480",
    "end": "753600"
  },
  {
    "text": "maybe some proper request from our client let's have a look at that we go into our",
    "start": "753600",
    "end": "760320"
  },
  {
    "text": "developer tools here and maybe just",
    "start": "760320",
    "end": "765680"
  },
  {
    "text": "just rerun our graphql client fetch and then we can see here's our graphql request being made",
    "start": "765680",
    "end": "775600"
  },
  {
    "text": "and we can just copy that over into our graphql ide here",
    "start": "775600",
    "end": "782639"
  },
  {
    "text": "and you can see it gets a variable in here and that can be defined down here and we",
    "start": "782639",
    "end": "789760"
  },
  {
    "text": "can also grab that from our from our request here",
    "start": "789760",
    "end": "795519"
  },
  {
    "text": "let me do that and then let's see",
    "start": "795519",
    "end": "801360"
  },
  {
    "text": "and then we can rerun this thing and we get some more performance inside",
    "start": "801360",
    "end": "808959"
  },
  {
    "text": "like we can see there is a price change which actually takes 49 milliseconds",
    "start": "808959",
    "end": "815519"
  },
  {
    "text": "so this is the longest time we are waiting in this request",
    "start": "815519",
    "end": "820880"
  },
  {
    "text": "so we get kind of an idea where um we where we spend some time on processing",
    "start": "820880",
    "end": "829199"
  },
  {
    "text": "but you also can see why apollo tracing is actually deprecated",
    "start": "829199",
    "end": "835199"
  },
  {
    "text": "first it produces a whole lot of data on your on your payload on your request payload",
    "start": "835199",
    "end": "840880"
  },
  {
    "text": "and second it doesn't really connect this data like the runtime data to what's actually happening in your system",
    "start": "840880",
    "end": "848560"
  },
  {
    "text": "and that is kind of bad the the second thing here is what we've looked so far at is actually",
    "start": "848560",
    "end": "858160"
  },
  {
    "text": "logging and some kind of tracing here",
    "start": "858160",
    "end": "863279"
  },
  {
    "text": "but not in the way that we are being informed that something is wrong we actually have to actively look at things",
    "start": "863279",
    "end": "870560"
  },
  {
    "text": "explore what is wrong we have to search for things and that kind of is a bad",
    "start": "870560",
    "end": "875839"
  },
  {
    "text": "thing because we only will react to problems",
    "start": "875839",
    "end": "883399"
  },
  {
    "text": "and and that is where actually observability comes in",
    "start": "886639",
    "end": "892399"
  },
  {
    "text": "so observability is kind of bringing also",
    "start": "892399",
    "end": "897680"
  },
  {
    "text": "a lot of these data together but instead of constantly pulling systems looking at systems trying to",
    "start": "897680",
    "end": "904800"
  },
  {
    "text": "reproduce things we're actually actively informed data is always collected by our system",
    "start": "904800",
    "end": "913360"
  },
  {
    "text": "and we kind of can create trigger or set",
    "start": "913360",
    "end": "919120"
  },
  {
    "text": "like use ml to get informed when something behaves different or if our",
    "start": "919120",
    "end": "924720"
  },
  {
    "text": "system gets into trouble and then we can react to this data",
    "start": "924720",
    "end": "931279"
  },
  {
    "text": "before our business is disrupted or before our client calls us telling us",
    "start": "931279",
    "end": "937440"
  },
  {
    "text": "that he cannot look into his bank account or whatever",
    "start": "937440",
    "end": "942560"
  },
  {
    "text": "so observability in the past was very difficult and i worked on a large",
    "start": "946800",
    "end": "951839"
  },
  {
    "text": "project i think four years ago and we built our own",
    "start": "951839",
    "end": "958000"
  },
  {
    "text": "observability solution we essentially injected into each request http request",
    "start": "958000",
    "end": "963839"
  },
  {
    "text": "we injected a correlation id we created something we used um",
    "start": "963839",
    "end": "970560"
  },
  {
    "text": "event tracing for windows back then to create spans and we had to aggregate we",
    "start": "970560",
    "end": "975600"
  },
  {
    "text": "had to write things to collect the data to push it to an end point we look we actually looked back then at",
    "start": "975600",
    "end": "983120"
  },
  {
    "text": "solutions to handle this large data stream and make it really",
    "start": "983120",
    "end": "990639"
  },
  {
    "text": "accessible but it it took a huge amount of time",
    "start": "990639",
    "end": "995680"
  },
  {
    "text": "to build up that system and there was one developer just working on this solution back then and it was never good",
    "start": "995680",
    "end": "1004880"
  },
  {
    "text": "and that is where the industry came together and created open telemetry and that is a standardization",
    "start": "1005519",
    "end": "1012519"
  },
  {
    "text": "to implement observability solutions and actually there was a lot of work",
    "start": "1014240",
    "end": "1020160"
  },
  {
    "text": "around that there was something called open open tracing and open sensors",
    "start": "1020160",
    "end": "1026558"
  },
  {
    "text": "which were competing projects and luckily google microsoft and everybody",
    "start": "1026559",
    "end": "1032640"
  },
  {
    "text": "came together and said let's put these two projects together and make one",
    "start": "1032640",
    "end": "1039038"
  },
  {
    "text": "approach to introduce open telemetry",
    "start": "1039039",
    "end": "1044798"
  },
  {
    "text": "so when we talk about open telemetry and observability in general",
    "start": "1046319",
    "end": "1051679"
  },
  {
    "text": "there are a couple of terms that are important so first we want to instrument our api",
    "start": "1051679",
    "end": "1058559"
  },
  {
    "text": "and that means we want to hook into events and so on",
    "start": "1058559",
    "end": "1064080"
  },
  {
    "text": "into our system and produce data",
    "start": "1064080",
    "end": "1067840"
  },
  {
    "text": "and that data we want to collect and export",
    "start": "1070640",
    "end": "1077360"
  },
  {
    "text": "and these are important terms we will pick them up over the course of this talk and talk",
    "start": "1077360",
    "end": "1083520"
  },
  {
    "text": "again about them",
    "start": "1083520",
    "end": "1086320"
  },
  {
    "text": "another important thing that we talk about when we talk about open telemetry is the term melt",
    "start": "1090320",
    "end": "1096559"
  },
  {
    "text": "and that means metrics events locks and traces",
    "start": "1096559",
    "end": "1103440"
  },
  {
    "text": "so locks is what you know today it was reused today it's what we print often on",
    "start": "1103440",
    "end": "1108880"
  },
  {
    "text": "the console what we put in files uh what we had over the years",
    "start": "1108880",
    "end": "1114080"
  },
  {
    "text": "then we have traces and traces mark um and we use in.net this the term the api",
    "start": "1114080",
    "end": "1120320"
  },
  {
    "text": "term spence where we essentially put spends around important things like an http call a database call or things like",
    "start": "1120320",
    "end": "1127679"
  },
  {
    "text": "that and logs that happen in this spans are correlated",
    "start": "1127679",
    "end": "1135559"
  },
  {
    "text": "events is essentially things that happen on our system if you think about the vendor vending machine if you press a",
    "start": "1136160",
    "end": "1142400"
  },
  {
    "text": "button that's something something is happening there so these are our events that we collect",
    "start": "1142400",
    "end": "1148080"
  },
  {
    "text": "and metrics are like the cpu cycles you're using the garbage",
    "start": "1148080",
    "end": "1154960"
  },
  {
    "text": "collection runs you have the requests that go through your system and so on and so forth",
    "start": "1154960",
    "end": "1163240"
  },
  {
    "text": "so when we look at an open telemetry instrumented application",
    "start": "1164320",
    "end": "1169520"
  },
  {
    "text": "we essentially have a platform api and in microsoft and in a",
    "start": "1169520",
    "end": "1175280"
  },
  {
    "text": "microsoft solution or a.net solution we have this new activity api which which",
    "start": "1175280",
    "end": "1180640"
  },
  {
    "text": "allows us to create these traces we have our logger and we have our new meter api to produce",
    "start": "1180640",
    "end": "1188400"
  },
  {
    "text": "metrics and then we have the native open telemetry sdk it's open source it's on",
    "start": "1188400",
    "end": "1195520"
  },
  {
    "text": "github and microsoft is contributing to it so it's microsoft engineers that are contributing to that project",
    "start": "1195520",
    "end": "1203440"
  },
  {
    "text": "and the open telemetry api essentially takes this data that is being produced through this generic apis that we have",
    "start": "1203440",
    "end": "1209280"
  },
  {
    "text": "in net process it and then export it and exporting means",
    "start": "1209280",
    "end": "1215039"
  },
  {
    "text": "that you're essentially transforming the data and giving them to a certain open",
    "start": "1215039",
    "end": "1220400"
  },
  {
    "text": "telemetry solution like jager or elastic or whatever you like or honeycomb is",
    "start": "1220400",
    "end": "1227600"
  },
  {
    "text": "also a good solution in a typical setup",
    "start": "1227600",
    "end": "1232640"
  },
  {
    "text": "we would not just export to our open telemetry backend",
    "start": "1232640",
    "end": "1237760"
  },
  {
    "text": "but we would have something like a collector a collector lets us essentially offload",
    "start": "1237760",
    "end": "1243679"
  },
  {
    "text": "the telemetry data to another service that preprocesses the data",
    "start": "1243679",
    "end": "1250559"
  },
  {
    "text": "and then batches it to the actual telemetry backend",
    "start": "1250559",
    "end": "1255919"
  },
  {
    "text": "so while i in the demos",
    "start": "1255919",
    "end": "1260639"
  },
  {
    "text": "now we'll not use a collector because it's more set up um in general i would do that because",
    "start": "1260960",
    "end": "1269600"
  },
  {
    "text": "like if you have a kubernetes cluster for instance with multiple pots running there and each port would directly go to",
    "start": "1269600",
    "end": "1276720"
  },
  {
    "text": "the telemetry backend and push the data there you generate a lot of overhead and",
    "start": "1276720",
    "end": "1283120"
  },
  {
    "text": "use a lot of networks connections and using the collector essentially allows you to to centralize that and",
    "start": "1283120",
    "end": "1290559"
  },
  {
    "text": "also to avoid like side effects of this telemetry data generation",
    "start": "1290559",
    "end": "1296559"
  },
  {
    "text": "so this lets you more control how your system performs in our demos we will use elastic",
    "start": "1296559",
    "end": "1303280"
  },
  {
    "text": "observability today and i hope the internet works because i have everything in the cloud",
    "start": "1303280",
    "end": "1309919"
  },
  {
    "text": "okay let's have a look at how we can get that together",
    "start": "1309919",
    "end": "1317720"
  },
  {
    "text": "okay what we have seen so far is that we don't really see the performance problems in our system",
    "start": "1319600",
    "end": "1326640"
  },
  {
    "text": "so how could we instrument it to make everything visible here and let people explore what actually is happening with",
    "start": "1326640",
    "end": "1333679"
  },
  {
    "text": "our system so the first thing is we need to put",
    "start": "1333679",
    "end": "1339919"
  },
  {
    "text": "open telemetry in here and i already did that kind of so i added all the packages and at the",
    "start": "1339919",
    "end": "1346799"
  },
  {
    "text": "moment open telemetry is not released yet so we have this",
    "start": "1346799",
    "end": "1352960"
  },
  {
    "text": "version 1.2 release candidate 4 and",
    "start": "1352960",
    "end": "1359039"
  },
  {
    "text": "1.0 release candidate 9 and that has something to do with the",
    "start": "1359039",
    "end": "1364159"
  },
  {
    "text": "core libraries have a certain previous preview version and also the",
    "start": "1364159",
    "end": "1369200"
  },
  {
    "text": "exporters and instrumentation apis have certain versions and they",
    "start": "1369200",
    "end": "1375440"
  },
  {
    "text": "not every release candidate aligns with the other so at the moment it's a bit",
    "start": "1375440",
    "end": "1381360"
  },
  {
    "text": "still early days but it's already really really good",
    "start": "1381360",
    "end": "1386559"
  },
  {
    "text": "if you don't want to head into like uh the open telemetry api yet",
    "start": "1386559",
    "end": "1392799"
  },
  {
    "text": "then there is also the solution to use vendor-specific apis like elastic has a lot of packages that",
    "start": "1392799",
    "end": "1400080"
  },
  {
    "text": "actually allow you the same thing but are already production version",
    "start": "1400080",
    "end": "1405679"
  },
  {
    "text": "i recommend if you have a new project go for the optional between apis they are already released candidate",
    "start": "1405679",
    "end": "1412320"
  },
  {
    "text": "phase still there's a lot of a lot happening but they",
    "start": "1412320",
    "end": "1418640"
  },
  {
    "text": "already work very well if you know the right versions okay",
    "start": "1418640",
    "end": "1424320"
  },
  {
    "text": "so what we are using here is first the asp.net core",
    "start": "1424320",
    "end": "1430000"
  },
  {
    "text": "instrumentation and the http instrumentation that means we will automatically get",
    "start": "1430000",
    "end": "1435840"
  },
  {
    "text": "insights into http cores done through the http client and also",
    "start": "1435840",
    "end": "1441600"
  },
  {
    "text": "everything that happens in our asp.net core system also we are using the open telemetry",
    "start": "1441600",
    "end": "1446960"
  },
  {
    "text": "protocol exporter that means um it's also called the otlp",
    "start": "1446960",
    "end": "1453279"
  },
  {
    "text": "or auto otpl protocol",
    "start": "1453279",
    "end": "1459200"
  },
  {
    "text": "and the elastic back-end that we are using is actually supporting this this",
    "start": "1459200",
    "end": "1464720"
  },
  {
    "text": "protocol if you're using jager they have a specific",
    "start": "1464720",
    "end": "1470559"
  },
  {
    "text": "protocol to export to that system okay",
    "start": "1470880",
    "end": "1475919"
  },
  {
    "text": "another important thing that we are using is the hot chocolate diagnostics package here",
    "start": "1475919",
    "end": "1482400"
  },
  {
    "text": "that already exists in a release version so we're just using a preview because it's",
    "start": "1482400",
    "end": "1488480"
  },
  {
    "text": "more fun okay so how do we instrument an api so the",
    "start": "1488480",
    "end": "1495279"
  },
  {
    "text": "first thing is that we need to expose some metadata about our service",
    "start": "1495279",
    "end": "1500880"
  },
  {
    "text": "that means we put an api description in here",
    "start": "1500880",
    "end": "1506320"
  },
  {
    "text": "and for that we use the resource builder and what we expose essentially is that",
    "start": "1507279",
    "end": "1512640"
  },
  {
    "text": "our api is called coin api it's in the demo namespace that's just",
    "start": "1512640",
    "end": "1518960"
  },
  {
    "text": "if you have a lot of a lot of applications you can better filter through them",
    "start": "1518960",
    "end": "1524720"
  },
  {
    "text": "and then we say okay this is actually version two and we have the development",
    "start": "1524720",
    "end": "1530080"
  },
  {
    "text": "environment and we are using.net six",
    "start": "1530080",
    "end": "1535120"
  },
  {
    "text": "okay so we are exposing already some information about our system here then we talked about metrics and",
    "start": "1535120",
    "end": "1544320"
  },
  {
    "text": "traces and so on and we have to register what we want to expose here so we can say",
    "start": "1544799",
    "end": "1552000"
  },
  {
    "text": "let's expose some metrics some open telemetry metrics and we want to",
    "start": "1552000",
    "end": "1557360"
  },
  {
    "text": "expose here the http client instrumentation events and also the",
    "start": "1557360",
    "end": "1562960"
  },
  {
    "text": "asp.net core instrumentation events and we are exposing that for our api",
    "start": "1562960",
    "end": "1570080"
  },
  {
    "text": "that's the description we made further up in the file and as i said we are going to our open",
    "start": "1570080",
    "end": "1577360"
  },
  {
    "text": "to our open telemetry backend from elastic and pushing our data there",
    "start": "1577360",
    "end": "1584400"
  },
  {
    "text": "so the it's actually really easy to set that up right you point to your",
    "start": "1584400",
    "end": "1589919"
  },
  {
    "text": "elastic server there then um you put some api key in there and then",
    "start": "1589919",
    "end": "1595760"
  },
  {
    "text": "you're done and if you are using like the collector you just",
    "start": "1595760",
    "end": "1601120"
  },
  {
    "text": "point to a local collector and actually all the the connection details are in that collector that's also a reason why i",
    "start": "1601120",
    "end": "1607840"
  },
  {
    "text": "would use a collector because you don't have to copy the api key into every",
    "start": "1607840",
    "end": "1613520"
  },
  {
    "text": "every service that you're hosting okay the second thing that we need to put in",
    "start": "1613520",
    "end": "1620320"
  },
  {
    "text": "is our traces and again we are collecting here the",
    "start": "1620320",
    "end": "1627760"
  },
  {
    "text": "http client information the um asp.net core information and we",
    "start": "1627760",
    "end": "1632880"
  },
  {
    "text": "are also collecting the hot chocolate events so our graphql events here",
    "start": "1632880",
    "end": "1639440"
  },
  {
    "text": "but there is one more thing we have to do before we can use that and that is actually",
    "start": "1639440",
    "end": "1644880"
  },
  {
    "text": "instrumenting our schema because producing tracing data also has a performance impact on your system it's",
    "start": "1644880",
    "end": "1651679"
  },
  {
    "text": "not for free right so it's not a lot but you have to be aware",
    "start": "1651679",
    "end": "1658240"
  },
  {
    "text": "about that and that's why by default we don't instrument the api so in order to instrument that you just",
    "start": "1658240",
    "end": "1665039"
  },
  {
    "text": "say add instrumentation here and you're done",
    "start": "1665039",
    "end": "1670640"
  },
  {
    "text": "and now we can just run our system it's not ideal we will see why but",
    "start": "1670720",
    "end": "1677520"
  },
  {
    "text": "but let's go into that so i'm going into my",
    "start": "1677600",
    "end": "1682640"
  },
  {
    "text": "elastic back end",
    "start": "1682640",
    "end": "1685679"
  },
  {
    "text": "yes coming up no not coming up",
    "start": "1688080",
    "end": "1694600"
  },
  {
    "text": "okay let me log in",
    "start": "1699039",
    "end": "1703200"
  },
  {
    "text": "okay so i can see here's my ndc demo i can go in here",
    "start": "1704080",
    "end": "1711240"
  },
  {
    "text": "and then i see all the elastic products i can use actually when i tell people we are doing observability with elastic",
    "start": "1711520",
    "end": "1718720"
  },
  {
    "text": "many people don't realize that elastic has this great solution for observability they all",
    "start": "1718720",
    "end": "1726240"
  },
  {
    "text": "all the people are associating elastic with elasticsearch",
    "start": "1726240",
    "end": "1731279"
  },
  {
    "text": "what they did is essentially built on top of elasticsearch or this observability because with elasticsearch",
    "start": "1731279",
    "end": "1737200"
  },
  {
    "text": "you have these great aggregations and stuff you can create these kibana keyword key",
    "start": "1737200",
    "end": "1743520"
  },
  {
    "text": "dashboards and so on and what they essentially did is taking all this great technology",
    "start": "1743520",
    "end": "1749360"
  },
  {
    "text": "and building a very nice observability solution so what we can see here",
    "start": "1749360",
    "end": "1756720"
  },
  {
    "text": "first is this apm and there we have that's the first area",
    "start": "1756720",
    "end": "1762240"
  },
  {
    "text": "where we focus on and then we have something called a service map and before we even look into",
    "start": "1762240",
    "end": "1768320"
  },
  {
    "text": "our system we will have a look at this service map but at the moment you can see in the",
    "start": "1768320",
    "end": "1773840"
  },
  {
    "text": "last 15 minutes there was no data being produced so our system is already up and running",
    "start": "1773840",
    "end": "1781679"
  },
  {
    "text": "and let's go back to our client here and let's um maybe go",
    "start": "1781679",
    "end": "1787600"
  },
  {
    "text": "to the root and we run it a couple of times to produce some data for our",
    "start": "1787600",
    "end": "1794399"
  },
  {
    "text": "telemetry backend go back here let's refresh",
    "start": "1794399",
    "end": "1801039"
  },
  {
    "text": "and see we can see that there is suddenly some",
    "start": "1801039",
    "end": "1807760"
  },
  {
    "text": "data so we can see there's a coin api and it uses actually an azure function in our system",
    "start": "1807760",
    "end": "1814880"
  },
  {
    "text": "let's do a bit more let's go to our bitcoin here",
    "start": "1814880",
    "end": "1821000"
  },
  {
    "text": "i'm just refreshing that a couple of times to get more data",
    "start": "1822720",
    "end": "1827760"
  },
  {
    "text": "and let's refresh that again",
    "start": "1827760",
    "end": "1831799"
  },
  {
    "text": "doesn't produce a lot more let me just refresh that and",
    "start": "1838799",
    "end": "1846960"
  },
  {
    "text": "oh and anomaly is detected okay we can look at that later",
    "start": "1847760",
    "end": "1852799"
  },
  {
    "text": "okay it should show more but let's dig in further",
    "start": "1854240",
    "end": "1859600"
  },
  {
    "text": "and i think the problem that we are having here",
    "start": "1859600",
    "end": "1865519"
  },
  {
    "text": "is actually a different yeah so what we can see here in our",
    "start": "1865519",
    "end": "1871760"
  },
  {
    "text": "transactions is actually that we have this graphql endpoint and we're getting a lot of requests into",
    "start": "1871760",
    "end": "1878559"
  },
  {
    "text": "that you can see that's my http that is coming in and then you can see here's my graph to",
    "start": "1878559",
    "end": "1885120"
  },
  {
    "text": "a request which is called view container query",
    "start": "1885120",
    "end": "1890159"
  },
  {
    "text": "and then you can see a lot of other things and this is the latency distribution over",
    "start": "1890159",
    "end": "1896720"
  },
  {
    "text": "our request and we could zoom into various things and then you can see okay",
    "start": "1896720",
    "end": "1902559"
  },
  {
    "text": "we just have graphql here and that is because we have this http standard span from",
    "start": "1902559",
    "end": "1909600"
  },
  {
    "text": "asp.net core and it thinks all the requests going to that endpoint are actually the same",
    "start": "1909600",
    "end": "1915840"
  },
  {
    "text": "and that's a different with graphql we actually have to rewrite some spends here",
    "start": "1915840",
    "end": "1922080"
  },
  {
    "text": "to make it more discover and tell the system that these are different requests that are going to this endpoint",
    "start": "1922080",
    "end": "1930159"
  },
  {
    "text": "so the good thing is in open telemetry that we can standardize anything even",
    "start": "1930159",
    "end": "1936480"
  },
  {
    "text": "the events or the the spends from somebody else and in this case we want to rewrite the",
    "start": "1936480",
    "end": "1942720"
  },
  {
    "text": "spends from asp.net core so how would we do that",
    "start": "1942720",
    "end": "1948159"
  },
  {
    "text": "it's quite easy we can pass into this instrumentation by into this instrumentation configuration",
    "start": "1948159",
    "end": "1954559"
  },
  {
    "text": "here some configuration",
    "start": "1954559",
    "end": "1960158"
  },
  {
    "text": "and tell it to re-name our root activity that's the first thing",
    "start": "1961200",
    "end": "1966640"
  },
  {
    "text": "and also and i know that is we might want to include the document",
    "start": "1966640",
    "end": "1972720"
  },
  {
    "text": "the document is the actual graphql request that's a bit more data",
    "start": "1972720",
    "end": "1979600"
  },
  {
    "text": "but it's it's useful to analyze what graphical request actually causes the",
    "start": "1979600",
    "end": "1985039"
  },
  {
    "text": "issue on our system and to make it very neat let's create",
    "start": "1985039",
    "end": "1991360"
  },
  {
    "text": "something that we call an activity rewriter an activity enricher actually",
    "start": "1991360",
    "end": "1998799"
  },
  {
    "text": "dot cs and then we call it custom activity enricher",
    "start": "1999279",
    "end": "2007039"
  },
  {
    "text": "so an activity enricher and that is specific like this is how we do it in hot chocolate in asp.net",
    "start": "2007039",
    "end": "2014159"
  },
  {
    "text": "core they essentially have a lambda where you can do the same so every implementation does it a bit different",
    "start": "2014159",
    "end": "2021600"
  },
  {
    "text": "let's generate the constructor here that is just passed in by the system so",
    "start": "2021600",
    "end": "2026720"
  },
  {
    "text": "we actually can create these events in a performant way",
    "start": "2026720",
    "end": "2032399"
  },
  {
    "text": "so we get a string builder pool here and stuff like that we don't care about that but then we can override",
    "start": "2032399",
    "end": "2038880"
  },
  {
    "text": "a couple of our events you can see so i can enrich the batch request for instance or",
    "start": "2038880",
    "end": "2045840"
  },
  {
    "text": "whatever i want in in our case we want to rewrite the root activity",
    "start": "2045840",
    "end": "2053280"
  },
  {
    "text": "of asp.net core so we actually will return here",
    "start": "2053280",
    "end": "2059280"
  },
  {
    "text": "the display name of our active of our root activity and rewrite the root activity of asp.net core so we have more",
    "start": "2059280",
    "end": "2067679"
  },
  {
    "text": "useful data okay let's hook that quickly up and then we",
    "start": "2067679",
    "end": "2074000"
  },
  {
    "text": "run our request and then we will get more useful data okay let's go here",
    "start": "2074000",
    "end": "2081919"
  },
  {
    "text": "better dot at singleton",
    "start": "2081919",
    "end": "2087679"
  },
  {
    "text": "and then activity enricher",
    "start": "2087679",
    "end": "2091200"
  },
  {
    "text": "okay let's rerun this thing it will work",
    "start": "2095280",
    "end": "2101280"
  },
  {
    "text": "then just refresh our request here a couple of times",
    "start": "2101599",
    "end": "2108400"
  },
  {
    "text": "and then go back to elastic then we actually",
    "start": "2108400",
    "end": "2113760"
  },
  {
    "text": "will see some useful data okay",
    "start": "2113760",
    "end": "2119520"
  },
  {
    "text": "so we can go in our coin api let's refresh that",
    "start": "2119520",
    "end": "2127560"
  },
  {
    "text": "it takes",
    "start": "2130240",
    "end": "2132800"
  },
  {
    "text": "let's rerun it again",
    "start": "2135280",
    "end": "2139240"
  },
  {
    "text": "that was me",
    "start": "2147599",
    "end": "2150160"
  },
  {
    "text": "if not then i have also that there it's come",
    "start": "2156640",
    "end": "2161680"
  },
  {
    "text": "so now we can see like here we have that is how our new requests now look like",
    "start": "2161680",
    "end": "2168400"
  },
  {
    "text": "there we can see we have the viewer container query that's actually the query name that the",
    "start": "2168400",
    "end": "2173680"
  },
  {
    "text": "client guys gave to our graphql request and we can see that we do an asset by",
    "start": "2173680",
    "end": "2179359"
  },
  {
    "text": "symbol here which is just a root period we don't see the full graphql",
    "start": "2179359",
    "end": "2184800"
  },
  {
    "text": "request here but that's okay it's just as a header and now each request will be",
    "start": "2184800",
    "end": "2190320"
  },
  {
    "text": "will be tracked distinctly in our in our elastic cluster",
    "start": "2190320",
    "end": "2195440"
  },
  {
    "text": "and we can now see much better what's going on in our system like we have the",
    "start": "2195440",
    "end": "2201440"
  },
  {
    "text": "latency distribution and this is essentially you have buckets how well your request",
    "start": "2201440",
    "end": "2208320"
  },
  {
    "text": "performs over time and like here we can see two of our transactions",
    "start": "2208320",
    "end": "2215280"
  },
  {
    "text": "uh 78 milliseconds then we have like this one here which is one second",
    "start": "2215280",
    "end": "2220480"
  },
  {
    "text": "probably when the server was not warm and so on and so forth and if we go into this span and these",
    "start": "2220480",
    "end": "2228000"
  },
  {
    "text": "are the spencer i was talking about we can look at metadata for instance we can see the graphql",
    "start": "2228000",
    "end": "2234079"
  },
  {
    "text": "request that we are looking at we can also look at the hashes from our",
    "start": "2234079",
    "end": "2239520"
  },
  {
    "text": "request or what request type it is and so on",
    "start": "2239520",
    "end": "2245280"
  },
  {
    "text": "but we also can drill in like we can see this span here for instance you can see this pass",
    "start": "2245359",
    "end": "2251599"
  },
  {
    "text": "this is one specific field in our graphquare request which took 44 milliseconds",
    "start": "2251599",
    "end": "2257440"
  },
  {
    "text": "and we can see that there's a batch happening here and that there is a http request going on",
    "start": "2257440",
    "end": "2264960"
  },
  {
    "text": "and we also can have a look into that it's actually calling our azure functions that we saw in the service map",
    "start": "2264960",
    "end": "2270640"
  },
  {
    "text": "initially and we should actually get some insights of",
    "start": "2270640",
    "end": "2277839"
  },
  {
    "text": "our http of our of our map but don't fear because i actually have",
    "start": "2277839",
    "end": "2286640"
  },
  {
    "text": "prepared some more data before my talk let's take",
    "start": "2286720",
    "end": "2292880"
  },
  {
    "text": "20 million let's look at the longer span",
    "start": "2292880",
    "end": "2299319"
  },
  {
    "text": "price api so what we should see",
    "start": "2300240",
    "end": "2306440"
  },
  {
    "text": "let's have a look at if we can get this",
    "start": "2313200",
    "end": "2318400"
  },
  {
    "text": "request out production",
    "start": "2318400",
    "end": "2322880"
  },
  {
    "text": "i'm very sorry this worked so well in the last",
    "start": "2325200",
    "end": "2331280"
  },
  {
    "text": "presentation okay what we should see is that we actually can drill into our other",
    "start": "2331280",
    "end": "2337760"
  },
  {
    "text": "service here and let me just pick that up from",
    "start": "2337760",
    "end": "2344320"
  },
  {
    "text": "my price api we should be able to look into our price api here",
    "start": "2344320",
    "end": "2351599"
  },
  {
    "text": "and then actually see even through to our database so here you can see that is actually the",
    "start": "2351599",
    "end": "2357520"
  },
  {
    "text": "azure function that is behind it and there we can see our database calls being made",
    "start": "2357520",
    "end": "2363760"
  },
  {
    "text": "i don't know why it doesn't correlate this yet but hopefully",
    "start": "2363760",
    "end": "2369920"
  },
  {
    "text": "my production system is up and we can have a look at that okay",
    "start": "2369920",
    "end": "2376800"
  },
  {
    "text": "never happened and then i can make my point maybe still",
    "start": "2378720",
    "end": "2387520"
  },
  {
    "text": "work job inquiries okay that should work",
    "start": "2388240",
    "end": "2394400"
  },
  {
    "text": "okay this is actually the the same service but i put into production",
    "start": "2394400",
    "end": "2400400"
  },
  {
    "text": "so let's quickly copy over our request here",
    "start": "2400400",
    "end": "2405359"
  },
  {
    "text": "and put that together and produce some data on our production system",
    "start": "2405440",
    "end": "2411800"
  },
  {
    "text": "and then hope oh i know",
    "start": "2413440",
    "end": "2420078"
  },
  {
    "text": "so before the talk just five minutes before i thought i had this api key in my system",
    "start": "2421280",
    "end": "2427440"
  },
  {
    "text": "from the last presentation and i wanted to get rid of this because i thought it was visible on my thing",
    "start": "2427440",
    "end": "2434160"
  },
  {
    "text": "and the azure function actually has this old api key so it's not reporting anymore the",
    "start": "2434160",
    "end": "2441040"
  },
  {
    "text": "performance data let's see if we can fix that",
    "start": "2441040",
    "end": "2447040"
  },
  {
    "text": "that was",
    "start": "2447040",
    "end": "2450359"
  },
  {
    "text": "that's demo gone wrong damn it",
    "start": "2452319",
    "end": "2458960"
  },
  {
    "text": "okay okay and here that's actually our azure",
    "start": "2459040",
    "end": "2464319"
  },
  {
    "text": "function and i made some big mistakes in here and we should have seen them by now",
    "start": "2464319",
    "end": "2471280"
  },
  {
    "text": "but actually i killed this api key here",
    "start": "2471280",
    "end": "2480359"
  },
  {
    "text": "let's just quickly copy that over and redeploy it and hopefully it",
    "start": "2480880",
    "end": "2487280"
  },
  {
    "text": "it will not take for the whole talk to appear on",
    "start": "2487280",
    "end": "2492839"
  },
  {
    "text": "azure let's grab this one",
    "start": "2492839",
    "end": "2496960"
  },
  {
    "text": "put it in our azure function and put in the other edit function do we have more",
    "start": "2500079",
    "end": "2505520"
  },
  {
    "text": "editor functions everything is all right",
    "start": "2505520",
    "end": "2509839"
  },
  {
    "text": "functions deploy mvp credits then there",
    "start": "2516319",
    "end": "2525040"
  },
  {
    "text": "let's see if that works out deploy",
    "start": "2526640",
    "end": "2530720"
  },
  {
    "text": "this is real life deployment",
    "start": "2532160",
    "end": "2536119"
  },
  {
    "text": "okay going to azure",
    "start": "2539520",
    "end": "2542800"
  },
  {
    "text": "this is an example why you shouldn't change your demos just five minutes",
    "start": "2545440",
    "end": "2551119"
  },
  {
    "text": "before you do the talk",
    "start": "2551119",
    "end": "2554240"
  },
  {
    "text": "okay let's see if we get better data now",
    "start": "2556480",
    "end": "2561119"
  },
  {
    "text": "let's use our application maybe also a couple of times yeah maybe looks good that the network",
    "start": "2562720",
    "end": "2569599"
  },
  {
    "text": "layer is not anymore there",
    "start": "2569599",
    "end": "2573560"
  },
  {
    "text": "let's see yeah it's coming back",
    "start": "2579280",
    "end": "2586960"
  },
  {
    "text": "okay okay let's let's have a look",
    "start": "2588160",
    "end": "2593599"
  },
  {
    "text": "so we go on development",
    "start": "2593599",
    "end": "2597359"
  },
  {
    "text": "refresh last 15 minutes",
    "start": "2599680",
    "end": "2606440"
  },
  {
    "text": "could be that's too late",
    "start": "2609440",
    "end": "2612560"
  },
  {
    "text": "yeah it's dead oh no it's coming ah that's now my so this is what i",
    "start": "2617920",
    "end": "2624319"
  },
  {
    "text": "showed you initially and didn't work and it was because of this api key now we also get the data so that's",
    "start": "2624319",
    "end": "2630640"
  },
  {
    "text": "actually what i wanted to start with but i didn't get that my demo update that i produced actually",
    "start": "2630640",
    "end": "2637200"
  },
  {
    "text": "and wrecked the whole demo here so what we can see here is without specifying",
    "start": "2637200",
    "end": "2642560"
  },
  {
    "text": "that the system can from our tracing data actually create this nice service",
    "start": "2642560",
    "end": "2648000"
  },
  {
    "text": "map so we get the coin api is actually using azure functions downstream and then it's using",
    "start": "2648000",
    "end": "2654640"
  },
  {
    "text": "a postgres database here and if we go into our tracing data now",
    "start": "2654640",
    "end": "2659760"
  },
  {
    "text": "hopefully yeah now the data is all there we can look into our coin api",
    "start": "2659760",
    "end": "2665920"
  },
  {
    "text": "in development then we can look at our request that we are producing here",
    "start": "2665920",
    "end": "2671680"
  },
  {
    "text": "and if we re if you get the right span maybe",
    "start": "2671680",
    "end": "2676800"
  },
  {
    "text": "we should see this picture and so that is not anymore just an http",
    "start": "2676800",
    "end": "2683520"
  },
  {
    "text": "request here we actually can see the that is my azure functions that we are calling we are calling version two of my",
    "start": "2683520",
    "end": "2690400"
  },
  {
    "text": "azure functions and what we can see is that it actually has two database requests",
    "start": "2690400",
    "end": "2697119"
  },
  {
    "text": "and we have another azure functions here that is having two more",
    "start": "2697119",
    "end": "2702800"
  },
  {
    "text": "database requests this could be the moment where we think that that could be something suspicious",
    "start": "2702800",
    "end": "2709599"
  },
  {
    "text": "so let's maybe go back to our client and let's have a look at what's actually",
    "start": "2709599",
    "end": "2716000"
  },
  {
    "text": "happening when we call our list request here",
    "start": "2716000",
    "end": "2721680"
  },
  {
    "text": "and um okay that should be enough data let's go back to our coin api",
    "start": "2723440",
    "end": "2732280"
  },
  {
    "text": "refresh that maybe it's coming in because it's snow",
    "start": "2733839",
    "end": "2742280"
  },
  {
    "text": "okay come on",
    "start": "2746160",
    "end": "2750880"
  },
  {
    "text": "we should have been here a couple of hours ago",
    "start": "2753200",
    "end": "2760400"
  },
  {
    "text": "okay so now it should be there let's go in the coin api okay now we can see the dashboard",
    "start": "2760400",
    "end": "2766880"
  },
  {
    "text": "request is coming in and when we look at that we actually can see that there is a couple more spends",
    "start": "2766880",
    "end": "2773440"
  },
  {
    "text": "happening here there's a batching is happening here so we're batching from the graphql to our azure function and we",
    "start": "2773440",
    "end": "2779760"
  },
  {
    "text": "can see that there is like a lot of database calls happening like one two",
    "start": "2779760",
    "end": "2785680"
  },
  {
    "text": "three four and we actually can have a look at these database cores and have a look at them and we can see",
    "start": "2785680",
    "end": "2792640"
  },
  {
    "text": "that although we are batching to our azure function it loads the price information for uh",
    "start": "2792640",
    "end": "2799040"
  },
  {
    "text": "cryptocurrencies one by one you can see the limit here you can see that it's actually selecting",
    "start": "2799040",
    "end": "2804960"
  },
  {
    "text": "on top of the on top of the the",
    "start": "2804960",
    "end": "2811359"
  },
  {
    "text": "the id and just taking one id by the other so this is the moment where you actually",
    "start": "2811680",
    "end": "2819040"
  },
  {
    "text": "get visible or you make visible that in distributed systems",
    "start": "2819040",
    "end": "2825440"
  },
  {
    "text": "you suddenly can look into the other system you don't just get the picture of the graphql server itself",
    "start": "2826560",
    "end": "2833040"
  },
  {
    "text": "but you also get the insights into the azure functions and also into the",
    "start": "2833040",
    "end": "2838720"
  },
  {
    "text": "database and like this is postgresql this is also working for mongodb for other systems so",
    "start": "2838720",
    "end": "2846079"
  },
  {
    "text": "all the vendors are actually providing new um new open telemetry integrations so you",
    "start": "2846079",
    "end": "2853359"
  },
  {
    "text": "get that for free you just plug that in like i did in our solution here and then you get the data for free",
    "start": "2853359",
    "end": "2861280"
  },
  {
    "text": "but you can extend that also like i showed you we wrote the root span we can also provide",
    "start": "2862559",
    "end": "2869280"
  },
  {
    "text": "our own metrics to that and um that is also something we haven't",
    "start": "2869280",
    "end": "2875680"
  },
  {
    "text": "yet looked in and i don't think we will get to that point because i messed up the",
    "start": "2875680",
    "end": "2880960"
  },
  {
    "text": "the initial demos um because the cool thing with elastic is actually that you can define",
    "start": "2880960",
    "end": "2888240"
  },
  {
    "text": "now these alerts and rules like i could say now to my system that's actually very late that i discovered",
    "start": "2888240",
    "end": "2894880"
  },
  {
    "text": "that i had to look at the spans in a real system we would create allergen rules",
    "start": "2894880",
    "end": "2901920"
  },
  {
    "text": "maybe for latency that we say okay if the latency for a request is out of bounds of a request or",
    "start": "2901920",
    "end": "2908960"
  },
  {
    "text": "if there are anomalies like we suddenly detect that there are lots of database calls in our request that weren't there",
    "start": "2908960",
    "end": "2915520"
  },
  {
    "text": "before then send me a mail or do something else you can add tasks to",
    "start": "2915520",
    "end": "2922640"
  },
  {
    "text": "that and do something that will make sure that your engineers are aware of this changed behavior",
    "start": "2922640",
    "end": "2929440"
  },
  {
    "text": "before your customer really calls okay so there's one more thing let's",
    "start": "2929440",
    "end": "2936240"
  },
  {
    "text": "let's try to get it in and that is actually metrics and we haven't looked at them",
    "start": "2936240",
    "end": "2941760"
  },
  {
    "text": "at the moment we just looked at metrics at traces and metrics allow you to",
    "start": "2941760",
    "end": "2947839"
  },
  {
    "text": "have much simpler indicators don't look at the spans we actually look at",
    "start": "2947839",
    "end": "2953280"
  },
  {
    "text": "at very simple numbers like requests per second that we get through our system so how would we use that in our",
    "start": "2953280",
    "end": "2960480"
  },
  {
    "text": "graphql api so we already set up metrics here and these will provide like general",
    "start": "2960480",
    "end": "2965839"
  },
  {
    "text": "metrics how many http requests go through maybe gc insights and so on and so forth",
    "start": "2965839",
    "end": "2972000"
  },
  {
    "text": "but how do we hook up custom events into our system and um that we would do",
    "start": "2972000",
    "end": "2978640"
  },
  {
    "text": "by creating something that we call in graphql diagnostic events listener",
    "start": "2978640",
    "end": "2985838"
  },
  {
    "text": "let's see yes and let's just",
    "start": "2986240",
    "end": "2992480"
  },
  {
    "text": "create this guy here log interceptor and it's a execution diagnostic event listener and we then",
    "start": "2992480",
    "end": "2999280"
  },
  {
    "text": "can essentially override any event that is happening in our execution engine",
    "start": "2999280",
    "end": "3005200"
  },
  {
    "text": "and let's just use execute request here and maybe",
    "start": "3005200",
    "end": "3011119"
  },
  {
    "text": "i already have a template for that yeah let's take that meter",
    "start": "3011119",
    "end": "3017119"
  },
  {
    "text": "so then we put a meter in and that's a new api from microsoft i think they're introduced in dot net six which allows",
    "start": "3017119",
    "end": "3023440"
  },
  {
    "text": "us to produce metrics not open telemetry specific but we",
    "start": "3023440",
    "end": "3029440"
  },
  {
    "text": "can hook that up to open telemetry to report these metrics to",
    "start": "3029440",
    "end": "3035040"
  },
  {
    "text": "our elastic back end so i'm calling here my meter demo.graphql it's version one",
    "start": "3035040",
    "end": "3041280"
  },
  {
    "text": "and my counter that i'm setting up here is requests and every time then there is a graphql",
    "start": "3041280",
    "end": "3048000"
  },
  {
    "text": "request happening on our system i will just count it up by one there could be other things like you could have",
    "start": "3048000",
    "end": "3054559"
  },
  {
    "text": "uh meters that measure how much system um how much uh how much crypto cryptocurrencies are",
    "start": "3054559",
    "end": "3061760"
  },
  {
    "text": "bought every day or whatever you can put these meters into critical",
    "start": "3061760",
    "end": "3068800"
  },
  {
    "text": "parts of your system and measure how well it performs so we are just putting it here so to measure the requests that",
    "start": "3068800",
    "end": "3075680"
  },
  {
    "text": "we have and then we go to our open terry stream open telemetry metrics",
    "start": "3075680",
    "end": "3083520"
  },
  {
    "text": "section and say add a meter",
    "start": "3083520",
    "end": "3088960"
  },
  {
    "text": "and we call the meter let me just copy that thing here that is",
    "start": "3089280",
    "end": "3095200"
  },
  {
    "text": "our meter that we want to report to open geriatry and then we",
    "start": "3095200",
    "end": "3101440"
  },
  {
    "text": "essentially are done the one most thing that we have to do is register our new diagnostic events here",
    "start": "3101440",
    "end": "3109359"
  },
  {
    "text": "diagnostic event listener how did we call it it was the matrix",
    "start": "3109359",
    "end": "3116000"
  },
  {
    "text": "we hook it up here",
    "start": "3116000",
    "end": "3119119"
  },
  {
    "text": "just run it and then we should",
    "start": "3121359",
    "end": "3126960"
  },
  {
    "text": "be able to just rerun our client again",
    "start": "3126960",
    "end": "3132960"
  },
  {
    "text": "and our meter should be tracked we should be able to query it from elastic",
    "start": "3132960",
    "end": "3139760"
  },
  {
    "text": "and why it always takes a bit is because by default we are batching these requests so",
    "start": "3139760",
    "end": "3145520"
  },
  {
    "text": "essentially the open telemetry api will await",
    "start": "3145520",
    "end": "3150799"
  },
  {
    "text": "and not send every request to elastic but only",
    "start": "3150880",
    "end": "3157200"
  },
  {
    "text": "um after a certain amount of time or there are a certain amount of requests there so we now have here",
    "start": "3157200",
    "end": "3163599"
  },
  {
    "text": "our inventory section we can just auto refresh that",
    "start": "3163599",
    "end": "3168800"
  },
  {
    "text": "and we should have now here our request so that's our request that's our new",
    "start": "3168800",
    "end": "3175839"
  },
  {
    "text": "metric that we have here and yeah we have it here i can just refresh it and there should at some",
    "start": "3175839",
    "end": "3183839"
  },
  {
    "text": "point be some insights into it let's go for an average",
    "start": "3183839",
    "end": "3191440"
  },
  {
    "text": "okay requests",
    "start": "3192839",
    "end": "3197040"
  },
  {
    "text": "it doesn't matter let's go for 12 hours",
    "start": "3199599",
    "end": "3204720"
  },
  {
    "text": "update yeah there you can see that's what i did before when i created this little demo you can",
    "start": "3204720",
    "end": "3211440"
  },
  {
    "text": "see here i had 22 requests on average of on my system in a certain amount of time",
    "start": "3211440",
    "end": "3218160"
  },
  {
    "text": "and you can then go and add these rules on top of that",
    "start": "3218160",
    "end": "3223839"
  },
  {
    "text": "to get informed when these go out of bounds like we could say here that is a",
    "start": "3224640",
    "end": "3230400"
  },
  {
    "text": "max request alert and then we can essentially say when average of requests is above is",
    "start": "3230400",
    "end": "3238480"
  },
  {
    "text": "above 1000 we should tell an engineer that's how easy is is you can that you",
    "start": "3238480",
    "end": "3244400"
  },
  {
    "text": "can create these notifications in elastic and from my experience we are using elastic",
    "start": "3244400",
    "end": "3251359"
  },
  {
    "text": "in production now in many systems and even though we didn't know we had production issues we suddenly could see",
    "start": "3251359",
    "end": "3259040"
  },
  {
    "text": "them like we went into this into this that we just explored our",
    "start": "3259040",
    "end": "3265839"
  },
  {
    "text": "stuff that we hooked up there we looked at our request and then we suddenly",
    "start": "3265839",
    "end": "3271760"
  },
  {
    "text": "let me go back here to the coin api then we discovered exactly what we see",
    "start": "3271760",
    "end": "3277839"
  },
  {
    "text": "here that we that we had um multiple database requests we weren't",
    "start": "3277839",
    "end": "3283359"
  },
  {
    "text": "aware of and uh that things weren't batched correctly and so on and so forth",
    "start": "3283359",
    "end": "3288880"
  },
  {
    "text": "so just by hooking that up into your system you will already discover things that don't run well",
    "start": "3288880",
    "end": "3294799"
  },
  {
    "text": "even if you didn't discover them so far and i'm really sorry that",
    "start": "3294799",
    "end": "3302799"
  },
  {
    "text": "things fell apart today but",
    "start": "3302799",
    "end": "3309040"
  },
  {
    "text": "we are at an end",
    "start": "3309040",
    "end": "3312000"
  },
  {
    "text": "i'm next week in london again and i speak about building modern",
    "start": "3314160",
    "end": "3319440"
  },
  {
    "text": "graphic applications at the microsoft reactor that is more an introduction to graphql",
    "start": "3319440",
    "end": "3325280"
  },
  {
    "text": "with hands-on so if you like to learn more about graphql then you're welcome",
    "start": "3325280",
    "end": "3330559"
  },
  {
    "text": "to join and our project is open source you can find us on chili cream hot chocolate on",
    "start": "3330559",
    "end": "3337839"
  },
  {
    "text": "github and if you want to follow me you can if you have questions shoot",
    "start": "3337839",
    "end": "3345640"
  },
  {
    "text": "um",
    "start": "3353119",
    "end": "3356119"
  },
  {
    "text": "you",
    "start": "3367440",
    "end": "3369520"
  }
]