[
  {
    "text": "hello hello how are you all doing how was your",
    "start": "3840",
    "end": "9759"
  },
  {
    "text": "lunch cool well you know what I have a rule about speaking like right after",
    "start": "9759",
    "end": "14920"
  },
  {
    "text": "lunch uh I'm actually half Spanish and half Moroccan in both of my both of these cultures we you cestas after you",
    "start": "14920",
    "end": "22439"
  },
  {
    "text": "know after our lunch I don't get a siesta you don't get a siesta okay that's the",
    "start": "22439",
    "end": "28800"
  },
  {
    "text": "rule well welcome everyone so around a decade ago probably a 10ish years ago I",
    "start": "28800",
    "end": "35079"
  },
  {
    "text": "remember that I was working for a customer and we were basically building",
    "start": "35079",
    "end": "40480"
  },
  {
    "text": "a sort of retail system right it we started from scratch they had a bunch of like physical stores really successful",
    "start": "40480",
    "end": "47320"
  },
  {
    "text": "and now they wanted to to build like an online offering and yeah it was it was",
    "start": "47320",
    "end": "52719"
  },
  {
    "text": "really fun to work on this from scratch at the time we basically uh built a very",
    "start": "52719",
    "end": "58239"
  },
  {
    "text": "simple architecture to get started because we weren't really like fully understanding yet what the requirements",
    "start": "58239",
    "end": "64760"
  },
  {
    "text": "were and figuring it out so a couple of years in we ended up with something like",
    "start": "64760",
    "end": "70040"
  },
  {
    "text": "this a monolith now I'm assuming that you are way more familiar with this",
    "start": "70040",
    "end": "75119"
  },
  {
    "text": "structure than I am because this is based here in Oslo in Norway right and this is called the monolith now I use",
    "start": "75119",
    "end": "82240"
  },
  {
    "text": "this picture on purpose why well because over the last year years monolithic",
    "start": "82240",
    "end": "88520"
  },
  {
    "text": "architectures have gotten this sort of negative connotation oh mon ethic architectures are bad but the thing is",
    "start": "88520",
    "end": "94479"
  },
  {
    "text": "that they also bring quite a lot of benefits especially when you're building a completely new application you don't",
    "start": "94479",
    "end": "101640"
  },
  {
    "text": "understand your business requirements yet you're not entirely sure what you're going to build and you're kind of",
    "start": "101640",
    "end": "107439"
  },
  {
    "text": "figuring things out right also from a developer experience point of view it's pretty simple usually you have one big",
    "start": "107439",
    "end": "114520"
  },
  {
    "text": "solution it's an F5 run debug experience also versioning wise you know you deploy",
    "start": "114520",
    "end": "120520"
  },
  {
    "text": "this to production you don't have to care about versions because you're deploying the whole thing to production",
    "start": "120520",
    "end": "126119"
  },
  {
    "text": "all at once every time so you don't have to care about oh is this component compatible with that component so there",
    "start": "126119",
    "end": "132200"
  },
  {
    "text": "are a lot of benefits and actually this architecture it worked quite well for us",
    "start": "132200",
    "end": "138040"
  },
  {
    "text": "for a couple of years but then demand started growing and it did start to show",
    "start": "138040",
    "end": "144360"
  },
  {
    "text": "you know some cracks as it really grew out of bounds that we you know designed it for now those cracks basically",
    "start": "144360",
    "end": "151360"
  },
  {
    "text": "started to manifest as failed requests sometimes we would lose requests that",
    "start": "151360",
    "end": "156840"
  },
  {
    "text": "was tricky it's like oh what and like the user said that they did something but we can't see that anywhere and we",
    "start": "156840",
    "end": "163280"
  },
  {
    "text": "also saw that there was a very high strain on the single database that was supporting this application now in the",
    "start": "163280",
    "end": "170120"
  },
  {
    "text": "worst case of the scenario sometimes everything just came crashing down because we couldn't deal with the load",
    "start": "170120",
    "end": "175440"
  },
  {
    "text": "that was being thrown at us in the moment now given all that increased demand we realized okay you know this",
    "start": "175440",
    "end": "182959"
  },
  {
    "text": "architecture was really good for us at the time our reality is really different right now so we need to evolve this",
    "start": "182959",
    "end": "189599"
  },
  {
    "text": "thing and we started to think about how are we going to evolve this architecture to be able to support the load that we",
    "start": "189599",
    "end": "196599"
  },
  {
    "text": "are experiencing in production in production today now at the time it was",
    "start": "196599",
    "end": "201959"
  },
  {
    "text": "like event driven systems and message Bas systems coming up so we quickly concluded let's use messaging it's going",
    "start": "201959",
    "end": "209040"
  },
  {
    "text": "to solve all of our problems right because it brings actually a bunch of benefits now first of all it actually",
    "start": "209040",
    "end": "216680"
  },
  {
    "text": "will give us better performance right because now we can gradually scale individual components that can deal with",
    "start": "216680",
    "end": "223360"
  },
  {
    "text": "all of that load and we will see our performance rise we will also see that we have increased resilience because now",
    "start": "223360",
    "end": "230280"
  },
  {
    "text": "all of those messages are stored on a broker if something goes wrong we can always retry so that's going to be a lot",
    "start": "230280",
    "end": "235760"
  },
  {
    "text": "better also easier decoupling one of the main reasons is that we love event driven systems right or M Space Systems",
    "start": "235760",
    "end": "243040"
  },
  {
    "text": "it allows us a lot more flexibility in decoupling our systems and like I said",
    "start": "243040",
    "end": "248079"
  },
  {
    "text": "it allows us to just scale the components that need it we don't have to spend a lot of money scaling up an",
    "start": "248079",
    "end": "254720"
  },
  {
    "text": "entire an entire monolithic application which can become quite costly so we were",
    "start": "254720",
    "end": "260560"
  },
  {
    "text": "like all over the moon super excited this is going to fix all of our problems and we immediately jumped in without",
    "start": "260560",
    "end": "267840"
  },
  {
    "text": "really considering all of the the challenges that now we would have to address as well and that's when we",
    "start": "267840",
    "end": "274039"
  },
  {
    "text": "started to bump in quite a few walls now first of all one of the things that we saw is that the system became slower",
    "start": "274039",
    "end": "280960"
  },
  {
    "text": "wait a second our whole goal was to make the system faster right well it was",
    "start": "280960",
    "end": "286240"
  },
  {
    "text": "slower and significantly so so that was not great another problem we ran into is",
    "start": "286240",
    "end": "291759"
  },
  {
    "text": "that the UI became incredibly inconsistent we had customers sometimes reading support cases and saying hey I",
    "start": "291759",
    "end": "298400"
  },
  {
    "text": "just did this but the system doesn't reflect it and it was a lot of confusion and very",
    "start": "298400",
    "end": "304240"
  },
  {
    "text": "painful one of the things we also observed is that sometimes we would receive duplicate messages and the thing",
    "start": "304240",
    "end": "311080"
  },
  {
    "text": "is we didn't really account for that so that's when we started to see failures and even side effect",
    "start": "311080",
    "end": "317800"
  },
  {
    "text": "sometimes another thing that we did not think about up front is that sometimes messages could arrive out of",
    "start": "317800",
    "end": "325039"
  },
  {
    "text": "order and the problem in that case is that we didn't really see technical",
    "start": "325039",
    "end": "330600"
  },
  {
    "text": "failures like exceptions no it it sort of like turned up into side effects like",
    "start": "330600",
    "end": "336960"
  },
  {
    "text": "stuff that just you would look at the data and you would say this can't happen like how did this even get in here H it",
    "start": "336960",
    "end": "344280"
  },
  {
    "text": "was ugly and then finally we also found it incredibly hard to troubleshoot because now we had basic basically",
    "start": "344280",
    "end": "350400"
  },
  {
    "text": "messages flowing around the system and this going from there and there and it was a lot of cognitive low to be able to",
    "start": "350400",
    "end": "356639"
  },
  {
    "text": "understand what the system was actually doing now we were basically just fighting",
    "start": "356639",
    "end": "362800"
  },
  {
    "text": "these things as they happened and just like learning while we were doing with an application in production with",
    "start": "362800",
    "end": "369000"
  },
  {
    "text": "customers putting in orders quite stressful and as we were just like hot",
    "start": "369000",
    "end": "374120"
  },
  {
    "text": "fixing and and and just working our way around things after a while we we saw",
    "start": "374120",
    "end": "380680"
  },
  {
    "text": "that our application became a little bit like this a distributed big ball of mud now I",
    "start": "380680",
    "end": "388199"
  },
  {
    "text": "mean you have to agree that the monolith from before looked a lot better than that right so we had to",
    "start": "388199",
    "end": "395120"
  },
  {
    "text": "admit that we had actually made things a lot worse so my name is Lila bua I'm a",
    "start": "395120",
    "end": "401720"
  },
  {
    "text": "solution architect and software engineer I work at a company called particular software where we build end service bus",
    "start": "401720",
    "end": "407400"
  },
  {
    "text": "that's a messaging middleware technology so you could argue that messaging occupies my day most of my days right",
    "start": "407400",
    "end": "415840"
  },
  {
    "text": "but even before I was working at particular I was out in the field building these systems trying to learn",
    "start": "415840",
    "end": "421599"
  },
  {
    "text": "how to incorporate architectural Styles like this and that's exactly what I want to share with you today like all of",
    "start": "421599",
    "end": "427319"
  },
  {
    "text": "those learnings that I experienced the hard way so that hopefully you don't have to okay so let's zoom in into all",
    "start": "427319",
    "end": "435319"
  },
  {
    "text": "of these individual problems one by one starting with the system is slower after",
    "start": "435319",
    "end": "441160"
  },
  {
    "text": "all of those wonderful Over the Rainbow promises that our system was going to be faster it was actually slower now in",
    "start": "441160",
    "end": "449240"
  },
  {
    "text": "order order to understand why that happened why did the system actually become slower we also need to understand",
    "start": "449240",
    "end": "456800"
  },
  {
    "text": "how the application used to work before we transitioned to a message-based architecture and one of the things to",
    "start": "456800",
    "end": "463800"
  },
  {
    "text": "consider specifically is the main communication pattern and that was request response now it doesn't matter",
    "start": "463800",
    "end": "471639"
  },
  {
    "text": "whether you're using grpc or you're using HTTP calls or you're even still using WCF in some of your applications",
    "start": "471639",
    "end": "478960"
  },
  {
    "text": "right the underlying pattern is the same it's request response you have synchronous communication happening",
    "start": "478960",
    "end": "485319"
  },
  {
    "text": "between two components now the idea is that you basically have a sender that",
    "start": "485319",
    "end": "490639"
  },
  {
    "text": "sends some or requests some information or requests to do something directly to",
    "start": "490639",
    "end": "496360"
  },
  {
    "text": "the receiver and there's a blocking operation until that receiver processes that request and provides us with an",
    "start": "496360",
    "end": "503479"
  },
  {
    "text": "answer and then we continue right now we had been using this pattern for years so",
    "start": "503479",
    "end": "509879"
  },
  {
    "text": "it was only like logical for us to start doing this over messaging and that's where the Slowdown",
    "start": "509879",
    "end": "517240"
  },
  {
    "text": "actually starts the show because the thing is that where synchronous communication request response looks a",
    "start": "517240",
    "end": "524720"
  },
  {
    "text": "little bit like this where you have a direct connection between the producer and the consumer and you're just waiting for the result the thing is that when",
    "start": "524720",
    "end": "531440"
  },
  {
    "text": "you start to do this over messaging it looks very different because now you have a producer sending a message goes",
    "start": "531440",
    "end": "538079"
  },
  {
    "text": "onto the request queue and the consumer when they are available and when they have time to handle that message will",
    "start": "538079",
    "end": "545480"
  },
  {
    "text": "process it the answer to that message that goes on to another message and",
    "start": "545480",
    "end": "551040"
  },
  {
    "text": "another response cue which again is routed back to the producer which will",
    "start": "551040",
    "end": "556200"
  },
  {
    "text": "also process it when it's available when it has the capacity to deal with that so",
    "start": "556200",
    "end": "561519"
  },
  {
    "text": "many more hops more infrastructure and if you just go in and replace every synchronous call with an asynchronous",
    "start": "561519",
    "end": "568000"
  },
  {
    "text": "call then you can see how you make things slow right now one of the things",
    "start": "568000",
    "end": "573279"
  },
  {
    "text": "that I Al always like to stress especially to people who are sort of new to building event driven systems is that",
    "start": "573279",
    "end": "578920"
  },
  {
    "text": "it's important to understand that now you've shifted from using synchronous communication to asynchronous",
    "start": "578920",
    "end": "586320"
  },
  {
    "text": "communication and I always like to use silly analogies so let me tell you about",
    "start": "586320",
    "end": "591360"
  },
  {
    "text": "this time where my mom got her first cell phone at the time I of course",
    "start": "591360",
    "end": "596560"
  },
  {
    "text": "already had my own cell phone right those were the times but um yeah I remember us sort of",
    "start": "596560",
    "end": "602600"
  },
  {
    "text": "explaining to my mom like how she should start using this and we taught her like this is how you make a phone call and",
    "start": "602600",
    "end": "610000"
  },
  {
    "text": "boy did she know how to make phone calls because she called me all the time like",
    "start": "610000",
    "end": "616480"
  },
  {
    "text": "really all the time and I love her but it was a little bit overwhelming because",
    "start": "616480",
    "end": "621800"
  },
  {
    "text": "the thing is that sometimes I didn't have time to pick up I wouldn't have heard the phone or sometimes I was",
    "start": "621800",
    "end": "627480"
  },
  {
    "text": "ignoring the phone sorry Mom love you the thing is that at some point I was",
    "start": "627480",
    "end": "633560"
  },
  {
    "text": "really overwhelmed and picked up less and less but the problem is that that also had a counter reaction in her it",
    "start": "633560",
    "end": "640279"
  },
  {
    "text": "would completely hijack her day she'd be like super worried asking herself if I was okay what was going on so also she",
    "start": "640279",
    "end": "648320"
  },
  {
    "text": "was experiencing the side effects now at some point I came home and I was like Mom let me show you how to use text",
    "start": "648320",
    "end": "655959"
  },
  {
    "text": "messages now the idea that I want you to take away from this is that even in an",
    "start": "655959",
    "end": "661040"
  },
  {
    "text": "event driven system even in a message based system not all communication is suited to be",
    "start": "661040",
    "end": "667160"
  },
  {
    "text": "asynchronous right some communication still is useful to do in a synchronous way if you have someone waiting for that",
    "start": "667160",
    "end": "674720"
  },
  {
    "text": "result immediately use synchronous communication you can combine them both",
    "start": "674720",
    "end": "680000"
  },
  {
    "text": "right it requires a shift to see where the type of communication is best suited now with that being said let's",
    "start": "680000",
    "end": "687760"
  },
  {
    "text": "consider which communic ation patterns that we have available in a message",
    "start": "687760",
    "end": "692920"
  },
  {
    "text": "based or event driven systems and there are three different patterns to choose from we have one-way communication we",
    "start": "692920",
    "end": "700040"
  },
  {
    "text": "have request response and publish subscribe now I always enjoy using real",
    "start": "700040",
    "end": "705320"
  },
  {
    "text": "life analogies to explain these types of things because it makes it a little bit more fun for me and also hopefully for",
    "start": "705320",
    "end": "710760"
  },
  {
    "text": "you so what I'm going to do is use our family dinner time to explain how these",
    "start": "710760",
    "end": "716800"
  },
  {
    "text": "different patterns work so my husband is the one that usually cooks at home he enjoys doing that and I enjoy him doing",
    "start": "716800",
    "end": "724240"
  },
  {
    "text": "that so at some point he will in the evening look at me and he will send me a message and say hey I'm going to make",
    "start": "724240",
    "end": "730680"
  },
  {
    "text": "dinner now that message is directed specifically at me he wants me to be aware he's not expecting a response he",
    "start": "730680",
    "end": "737880"
  },
  {
    "text": "doesn't need me to get up or do anything I can just continue with you know household or helping the kids to their",
    "start": "737880",
    "end": "743880"
  },
  {
    "text": "homework continue on I just he just wants me to be aware but at some point dinner is close",
    "start": "743880",
    "end": "750600"
  },
  {
    "text": "to ready and he'll like pop out his head from from the kitchen and say hey dinner in five now at that point we're using",
    "start": "750600",
    "end": "758120"
  },
  {
    "text": "the request response pattern because he does expect a response from me he wants",
    "start": "758120",
    "end": "763440"
  },
  {
    "text": "me to basically get up get with the kids take them to the kitchen make sure that everything is on the table get everyone",
    "start": "763440",
    "end": "769800"
  },
  {
    "text": "ready so that when the food is on the table we can all start it's still a synchronous communication because it's",
    "start": "769800",
    "end": "775959"
  },
  {
    "text": "not that he's standing there like come on are you coming over or what like as long as I respond within an acceptable",
    "start": "775959",
    "end": "782800"
  },
  {
    "text": "amount of time it's fine I can just come over and get things",
    "start": "782800",
    "end": "788040"
  },
  {
    "text": "done and then finally if it was a good day and this applies mostly to my",
    "start": "788040",
    "end": "793920"
  },
  {
    "text": "youngest and she ate well which is not every day unfortunately then my husband",
    "start": "793920",
    "end": "799720"
  },
  {
    "text": "and I will look at each other and we'll say yeah it's an ice cream type of day now at that point we will publish an",
    "start": "799720",
    "end": "806440"
  },
  {
    "text": "event stating that there's ice cream available now why are we using publish subscribe",
    "start": "806440",
    "end": "812760"
  },
  {
    "text": "well because we're just making the kids aware that you know they can go get an",
    "start": "812760",
    "end": "818279"
  },
  {
    "text": "ice cream if they want they're big enough to walk over to the freezer open it up take their own ice cream we're not",
    "start": "818279",
    "end": "824600"
  },
  {
    "text": "doing this for them any anymore and I don't really care if they hurt me that is their problem but I can promise you",
    "start": "824600",
    "end": "831639"
  },
  {
    "text": "that they're subscribed to the ice cream available event for sure now the thing is that before we can",
    "start": "831639",
    "end": "838399"
  },
  {
    "text": "even consider consider which pattern is actually the best to start to incorporate in our systems we have to",
    "start": "838399",
    "end": "845279"
  },
  {
    "text": "engage in one of the most important activities when actually splitting up a monolith and that is",
    "start": "845279",
    "end": "852399"
  },
  {
    "text": "decoupling because the thing is that when you read about message Brokers and message based applications and event",
    "start": "852399",
    "end": "858519"
  },
  {
    "text": "driven applications you get this idea that decoupling is just going to magically happen it's not this is an",
    "start": "858519",
    "end": "867240"
  },
  {
    "text": "activity that you need to engag in you need to go back look at your code and",
    "start": "867240",
    "end": "872440"
  },
  {
    "text": "and find the service boundaries that will allow you to split things up into separate components right or you will",
    "start": "872440",
    "end": "879360"
  },
  {
    "text": "still end up with a highly coupled mess over messaging distributed ball of mud",
    "start": "879360",
    "end": "885000"
  },
  {
    "text": "now the thing is again whether you're using messaging or not once you start building a distributed application where",
    "start": "885000",
    "end": "891320"
  },
  {
    "text": "you have multiple components interacting with each other these tips will be really important for you to consider so",
    "start": "891320",
    "end": "897759"
  },
  {
    "text": "let's consider a couple of tips that can be helpful when you want to start to untangle application code now we're",
    "start": "897759",
    "end": "905279"
  },
  {
    "text": "going to use our trusted place order process because we all sort of know how this works right it's comfortable now we",
    "start": "905279",
    "end": "911839"
  },
  {
    "text": "want to place an order you know we got we want to get some payment package deliver all that adjust our stock and",
    "start": "911839",
    "end": "917959"
  },
  {
    "text": "then also check if our customer is now a gold customer or something like that now",
    "start": "917959",
    "end": "923160"
  },
  {
    "text": "the thing is that when we engage in a conversation with our business stakeholders we could quickly come up",
    "start": "923160",
    "end": "929360"
  },
  {
    "text": "with a story like this right first we do the storing of the order then we're going to charge the credit card and so",
    "start": "929360",
    "end": "934959"
  },
  {
    "text": "forth because when we engaging conversations people tell us things in a",
    "start": "934959",
    "end": "940399"
  },
  {
    "text": "certain order and we immediately accept it it's one of those underlying biases in people so one of the things that I",
    "start": "940399",
    "end": "947279"
  },
  {
    "text": "like to actively do is as a first step eliminate all the ordering from your head just write down all of those things",
    "start": "947279",
    "end": "954040"
  },
  {
    "text": "as individual steps that have nothing to do with them and rather understand the",
    "start": "954040",
    "end": "959120"
  },
  {
    "text": "order prerequisites and sort of things from asking questions right now one of",
    "start": "959120",
    "end": "964519"
  },
  {
    "text": "the things that I usually tend to ask is what are the things in this workflow if you will that tend to naturally happen",
    "start": "964519",
    "end": "972040"
  },
  {
    "text": "at different points in time and then you might say well you know packaging and shipping because that requires some",
    "start": "972040",
    "end": "978639"
  },
  {
    "text": "manual intervention someone coming in putting stuff in a box printing a label and and so forth right but it could also",
    "start": "978639",
    "end": "985959"
  },
  {
    "text": "be ordering more stock because maybe within this or organization we've decided to always have a moment on",
    "start": "985959",
    "end": "992079"
  },
  {
    "text": "Friday evening to order additional stock for the upcoming week that's one part another thing is",
    "start": "992079",
    "end": "1000240"
  },
  {
    "text": "that you also need to start to think about what are what is like actually the order so for example do we want to",
    "start": "1000240",
    "end": "1007279"
  },
  {
    "text": "adjust our stock only after we've built the order well no we want to immediately",
    "start": "1007279",
    "end": "1012399"
  },
  {
    "text": "do that when we package the order so we can keep our stock as up to date as",
    "start": "1012399",
    "end": "1017680"
  },
  {
    "text": "humanly possible right maybe the same thing we could consider with uh verifying our customer",
    "start": "1017680",
    "end": "1024120"
  },
  {
    "text": "status in this case the requirement is that we verify our customer status after",
    "start": "1024120",
    "end": "1029160"
  },
  {
    "text": "the entire order has been fulfilled but in another retail business it might be immediately after we charge the credit",
    "start": "1029160",
    "end": "1035760"
  },
  {
    "text": "card so it's always important to revalidate these assumptions even though we think we know the",
    "start": "1035760",
    "end": "1043160"
  },
  {
    "text": "domain another thing to ask yourself is am I introducing any technical",
    "start": "1043559",
    "end": "1049400"
  },
  {
    "text": "prerequisites for example I've had the habit for years that I would store the data first and",
    "start": "1049400",
    "end": "1055840"
  },
  {
    "text": "then continue so that I was able to link to the data store the order then charge",
    "start": "1055840",
    "end": "1061039"
  },
  {
    "text": "the credit card so I can link the payment to that order but is that really",
    "start": "1061039",
    "end": "1066840"
  },
  {
    "text": "necessary because if you would consider pre- assigning the order ID even before",
    "start": "1066840",
    "end": "1072919"
  },
  {
    "text": "it's been stored in the database then it doesn't matter whether you store the order first or not right right this is",
    "start": "1072919",
    "end": "1079880"
  },
  {
    "text": "where I feel that years and years of using relational databases can sometimes stand in our way and actually M force",
    "start": "1079880",
    "end": "1087440"
  },
  {
    "text": "ourselves into situations that provide us less flexibility and more complexity right if we pre-assign the order ID we",
    "start": "1087440",
    "end": "1094799"
  },
  {
    "text": "can link up things later and enforce that relationship at a later point when the order is then",
    "start": "1094799",
    "end": "1101840"
  },
  {
    "text": "available and then finally we also need to understand all of those individual",
    "start": "1101840",
    "end": "1108360"
  },
  {
    "text": "steps what would happen if one of the steps fails so for example if we are",
    "start": "1108360",
    "end": "1114480"
  },
  {
    "text": "able to store the order but something fails when charging the credit card do we then want to go and delete the order",
    "start": "1114480",
    "end": "1119840"
  },
  {
    "text": "from the database probably not no we just want to send the customer an email and say hey",
    "start": "1119840",
    "end": "1125520"
  },
  {
    "text": "your credit card bounced can you please update your payment details if we're able to charge the",
    "start": "1125520",
    "end": "1131440"
  },
  {
    "text": "order but we don't have sufficient stock do we immediately want to refund most companies don't do that once they have",
    "start": "1131440",
    "end": "1137840"
  },
  {
    "text": "your money they're going to keep you waiting for a couple of days while they back order right so but it's important",
    "start": "1137840",
    "end": "1144000"
  },
  {
    "text": "to basically identify the steps that can succeed on their own and also understand",
    "start": "1144000",
    "end": "1149640"
  },
  {
    "text": "if one of the steps failed what are the compensating actions that I need to take in those other parts that have already",
    "start": "1149640",
    "end": "1155360"
  },
  {
    "text": "been completed and then finally there's also the data that also really matters",
    "start": "1155360",
    "end": "1162000"
  },
  {
    "text": "because the thing is that I have been talking about an order for a while and nobody's put up their hand of wait wait",
    "start": "1162000",
    "end": "1168520"
  },
  {
    "text": "what what do you mean with an order I don't understand what that is because an order is something that we can all",
    "start": "1168520",
    "end": "1175559"
  },
  {
    "text": "reason about we have a conceptual idea of what that means but when we are",
    "start": "1175559",
    "end": "1181440"
  },
  {
    "text": "trying to figure out our service boundaries we need to actually break that apart and start to think more in",
    "start": "1181440",
    "end": "1188000"
  },
  {
    "text": "terms of the attributes of an order and which things actually belong together",
    "start": "1188000",
    "end": "1194480"
  },
  {
    "text": "because in the con in the context of for example a sales Sur service we would",
    "start": "1194480",
    "end": "1199840"
  },
  {
    "text": "care about the order reference who ordered it when was it ordered but in the context of a payment",
    "start": "1199840",
    "end": "1208000"
  },
  {
    "text": "we only really care about the payment method and we care what the total order amount was and whether they maybe used a",
    "start": "1208000",
    "end": "1214280"
  },
  {
    "text": "gift card or a voucher or something like that in the context of a package we want",
    "start": "1214280",
    "end": "1219679"
  },
  {
    "text": "to know okay how many items are there in are there basically ordered are there any fragile items that we have to take",
    "start": "1219679",
    "end": "1226720"
  },
  {
    "text": "care of during packaging those are completely different concerns and during shipment we want to know how many",
    "start": "1226720",
    "end": "1233000"
  },
  {
    "text": "packages are we actually going to ship so that we can understand that what are the package Dimensions did they maybe",
    "start": "1233000",
    "end": "1240080"
  },
  {
    "text": "choose like expedited shipping or something like that and then finally in the context of an invoice usually we",
    "start": "1240080",
    "end": "1246880"
  },
  {
    "text": "want to know did they ask for a physical invoice a printed one or do they want it delivered to their mailbox and are they",
    "start": "1246880",
    "end": "1253520"
  },
  {
    "text": "maybe vat exempt because then we may need to adjust our invoice",
    "start": "1253520",
    "end": "1259240"
  },
  {
    "text": "it's really important to start sort of stepping away from that entity-based thinking and in in essence start",
    "start": "1259240",
    "end": "1266559"
  },
  {
    "text": "thinking about the attributes and which attributes tend to basically uh change",
    "start": "1266559",
    "end": "1271760"
  },
  {
    "text": "and evolve together so finding the right service boundaries also means that we need to understand how that data is",
    "start": "1271760",
    "end": "1278880"
  },
  {
    "text": "evolving right so which behavior is likely to change what is likely to",
    "start": "1278880",
    "end": "1284880"
  },
  {
    "text": "change is something that we want to isolate from stuff that doesn't change a lot okay when it comes to what data we",
    "start": "1284880",
    "end": "1291640"
  },
  {
    "text": "also want to ask what data tends to change together if you think about a product for example who's never who's",
    "start": "1291640",
    "end": "1298600"
  },
  {
    "text": "ever worked in a system that has a product table okay almost everyone right now a",
    "start": "1298600",
    "end": "1305080"
  },
  {
    "text": "product has a name it has an image it has a price if the price changes is it",
    "start": "1305080",
    "end": "1311039"
  },
  {
    "text": "likely also going to affect the product name not really right but if the product",
    "start": "1311039",
    "end": "1317400"
  },
  {
    "text": "name changes is it likely to affect the product image that's more likely if",
    "start": "1317400",
    "end": "1323240"
  },
  {
    "text": "you're doing a rebranding or something like that so it it becomes important to start to think about which attributes",
    "start": "1323240",
    "end": "1331200"
  },
  {
    "text": "change together and keep that data together so the data doesn't change",
    "start": "1331200",
    "end": "1336279"
  },
  {
    "text": "often you can isolate that and the data that changes more often you can isolate",
    "start": "1336279",
    "end": "1341720"
  },
  {
    "text": "that away as well okay also what data and behavior tends",
    "start": "1341720",
    "end": "1347240"
  },
  {
    "text": "to depend on each other for example I've seen a retail business where they",
    "start": "1347240",
    "end": "1352480"
  },
  {
    "text": "actually had completely different pricing for like end customers or",
    "start": "1352480",
    "end": "1359080"
  },
  {
    "text": "customers that were basically also retail reselling what they were buying from us like it's not that it was vat",
    "start": "1359080",
    "end": "1365600"
  },
  {
    "text": "exempt it was completely different pricing so basically the price now depended on the customer type well if",
    "start": "1365600",
    "end": "1373520"
  },
  {
    "text": "there's a dependency then maybe we should store that data together right that's the point",
    "start": "1373520",
    "end": "1380080"
  },
  {
    "text": "and finally also ask yourself what data pertains to the same transactional",
    "start": "1380080",
    "end": "1385880"
  },
  {
    "text": "boundary because if you're looking for high consistency between certain data",
    "start": "1385880",
    "end": "1391840"
  },
  {
    "text": "then you have to put it together because otherwise the best you're going to get is eventual consistency right I've seen",
    "start": "1391840",
    "end": "1398320"
  },
  {
    "text": "this problem all the time sometimes it feels like hard to accept but if you want High consistency it should be part",
    "start": "1398320",
    "end": "1404760"
  },
  {
    "text": "of the same surface boundary it should be stored in the same database",
    "start": "1404760",
    "end": "1410440"
  },
  {
    "text": "now one of the things that can really help with this is practicing anti- requirements who's heard of that",
    "start": "1410520",
    "end": "1416520"
  },
  {
    "text": "before not many hands okay so the idea is basically that you're going to think about the attributes of a concept like",
    "start": "1416520",
    "end": "1423760"
  },
  {
    "text": "an order or like a product and you're going to start asking silly questions to basically try to find where",
    "start": "1423760",
    "end": "1430480"
  },
  {
    "text": "are you able to cut things apart like the example that I said previously if I change the price is the image of the",
    "start": "1430480",
    "end": "1437279"
  },
  {
    "text": "product also going to change change no of course not Lea do you even know what we're doing",
    "start": "1437279",
    "end": "1443279"
  },
  {
    "text": "here if people react that way great because you just found a place where you",
    "start": "1443279",
    "end": "1449200"
  },
  {
    "text": "can safely split the data apart and it's going to be okay right so that's basically the type of of conversations",
    "start": "1449200",
    "end": "1456360"
  },
  {
    "text": "that you want to engage in so now of course this is not",
    "start": "1456360",
    "end": "1462159"
  },
  {
    "text": "something that we can do alone we have to engage with our business stakeholders",
    "start": "1462159",
    "end": "1468200"
  },
  {
    "text": "now one of the most successful projects that I have worked on in my life is when we migrated a complete banking system",
    "start": "1468200",
    "end": "1475679"
  },
  {
    "text": "from a Mainframe to a modern. net application what I think made that",
    "start": "1475679",
    "end": "1481000"
  },
  {
    "text": "successful is the fact that they actually moved people that were you know in the business working with customers",
    "start": "1481000",
    "end": "1488039"
  },
  {
    "text": "on a daily basis that were looking for a different CH challenge put them on the on the IT department and I could just",
    "start": "1488039",
    "end": "1495039"
  },
  {
    "text": "turn around and ask them questions like we need High collaboration between the",
    "start": "1495039",
    "end": "1500919"
  },
  {
    "text": "engineers between our Architects between our software engineers and our business stakeholders continuously asking these",
    "start": "1500919",
    "end": "1507520"
  },
  {
    "text": "questions just scheduling a meeting and then figuring it out in an hour it's probably not going to work",
    "start": "1507520",
    "end": "1514520"
  },
  {
    "text": "right this requires a repetitive investment so event storming can also be a great technique to try to figure out",
    "start": "1514520",
    "end": "1521000"
  },
  {
    "text": "how things work together and your goal here is to uncover any false assumptions",
    "start": "1521000",
    "end": "1526240"
  },
  {
    "text": "that you may be making about the business domain so keep asking questions even if",
    "start": "1526240",
    "end": "1532840"
  },
  {
    "text": "you feel annoying you're doing your job right when you feel that way promise and finally keep doing this",
    "start": "1532840",
    "end": "1540080"
  },
  {
    "text": "that's why I I I always say like if you have the opportunity to pull some of your business stakeholders into the same",
    "start": "1540080",
    "end": "1547159"
  },
  {
    "text": "physical room where you are working do it like I promise it's going to be a",
    "start": "1547159",
    "end": "1552480"
  },
  {
    "text": "great exercise so after doing this for a while we ended up somewhere here which looks",
    "start": "1552480",
    "end": "1558679"
  },
  {
    "text": "very different than that initial picture that we had",
    "start": "1558679",
    "end": "1563520"
  },
  {
    "text": "right now it's only when we had this figured out that we could also start to think about okay how are we going to",
    "start": "1564919",
    "end": "1570600"
  },
  {
    "text": "communicate in between all of these services and like we said earlier we have one-way communication request reply",
    "start": "1570600",
    "end": "1577799"
  },
  {
    "text": "and publish subscribe to use from now the thing is that there's one here that is always like super popular publish",
    "start": "1577799",
    "end": "1585080"
  },
  {
    "text": "subscribe why any",
    "start": "1585080",
    "end": "1590240"
  },
  {
    "text": "one because it helps the couple right but the thing is that with",
    "start": "1590600",
    "end": "1597279"
  },
  {
    "text": "anything good in this industry it's also sometimes overused and that brings me to the passive aggressive publisher let me",
    "start": "1597279",
    "end": "1604520"
  },
  {
    "text": "quickly Circle back to the family dinner analogy like I told you my husband tends",
    "start": "1604520",
    "end": "1609559"
  },
  {
    "text": "to make dinner I really appreciate that so I clean up the kitchen after it's only fair we're a team we collaborate",
    "start": "1609559",
    "end": "1617120"
  },
  {
    "text": "now the thing is there are some of these days that I swear I walk into the kitchen and I'm like did you use every",
    "start": "1617120",
    "end": "1622399"
  },
  {
    "text": "pot and pan that we had in the house like really now at that point I might decide",
    "start": "1622399",
    "end": "1629360"
  },
  {
    "text": "to say okay I'm going to publish an event stating that the kitchen is messy that's valid right I mean it's a fact",
    "start": "1629360",
    "end": "1636840"
  },
  {
    "text": "it's a state that the system has arrived to the kitchen is messy and it's already happened it's an",
    "start": "1636840",
    "end": "1643320"
  },
  {
    "text": "event now the biggest problem here is that as a publisher I have an",
    "start": "1643320",
    "end": "1648600"
  },
  {
    "text": "expectation first of all that my husband is listening to me that he's subscribed",
    "start": "1648600",
    "end": "1654919"
  },
  {
    "text": "right but even worse that I expect him to do something I expect him to get up",
    "start": "1654919",
    "end": "1660399"
  },
  {
    "text": "come to the kitchen and actually help me clean up the mess now I think we can all agree that this type of",
    "start": "1660399",
    "end": "1666240"
  },
  {
    "text": "communication not really good for your for your relationships well guess what not really",
    "start": "1666240",
    "end": "1672200"
  },
  {
    "text": "good for your systems either so that's why it's really important to always keep in mind that",
    "start": "1672200",
    "end": "1678799"
  },
  {
    "text": "you should never use published subscribe when you expect something specific to be",
    "start": "1678799",
    "end": "1684039"
  },
  {
    "text": "done from within the context of your own service boundary okay if you need a",
    "start": "1684039",
    "end": "1689360"
  },
  {
    "text": "response with any data to continue when you publish an event no then again",
    "start": "1689360",
    "end": "1695200"
  },
  {
    "text": "passive aggressive communication and finally if you need any control over who",
    "start": "1695200",
    "end": "1701279"
  },
  {
    "text": "receives or subscribes to that event also not a good fit because again as a",
    "start": "1701279",
    "end": "1706799"
  },
  {
    "text": "publisher you should never even even care from your perspective it shouldn't even matter if you have any subscribers",
    "start": "1706799",
    "end": "1712480"
  },
  {
    "text": "you should not care okay now the thing is that if you run into situations like",
    "start": "1712480",
    "end": "1718159"
  },
  {
    "text": "these the best thing is to still use command-driven communication send a",
    "start": "1718159",
    "end": "1723360"
  },
  {
    "text": "message and make your intent clear make the coupling clear because coupling is",
    "start": "1723360",
    "end": "1728600"
  },
  {
    "text": "still there you just made it Invisible by by using publish subscribe but it is still there it will come back to bite",
    "start": "1728600",
    "end": "1736200"
  },
  {
    "text": "you okay so let's recap this first chapter I know it was the longest one so bear with me now as we said we want to",
    "start": "1736200",
    "end": "1745039"
  },
  {
    "text": "decouple as much as we can by finding service boundaries actually I don't really like the word decoupling because",
    "start": "1745039",
    "end": "1751880"
  },
  {
    "text": "we don't want to decouple we want to manage coupling something that is decoupled does just not work together",
    "start": "1751880",
    "end": "1758120"
  },
  {
    "text": "right so it's about balancing and managing the coupling find all of that behavior the",
    "start": "1758120",
    "end": "1764440"
  },
  {
    "text": "data dependency stuff that tends to change together keep that together even",
    "start": "1764440",
    "end": "1769559"
  },
  {
    "text": "though it may feel weird don't name your services up front because that's just going to make it harder to make stuff",
    "start": "1769559",
    "end": "1775559"
  },
  {
    "text": "fit in there that doesn't really fit in there be driven by these types of dependencies instead instead of Concepts",
    "start": "1775559",
    "end": "1782519"
  },
  {
    "text": "that you know in the real world and also pinpoint the transactional boundaries of",
    "start": "1782519",
    "end": "1788159"
  },
  {
    "text": "your services so that you can understand where you need the high data consistency and finally that will enable",
    "start": "1788159",
    "end": "1795039"
  },
  {
    "text": "you to choose the right communication pattern to use to to communicate across those different",
    "start": "1795039",
    "end": "1801559"
  },
  {
    "text": "services that brings me to the next problem when our UI became",
    "start": "1801760",
    "end": "1807039"
  },
  {
    "text": "inconsistent now the thing is that all of these things were previously executed",
    "start": "1807039",
    "end": "1812240"
  },
  {
    "text": "in a synchronous Manner and now we're using asynchronous communication and that started to cause some glitches in",
    "start": "1812240",
    "end": "1819159"
  },
  {
    "text": "the systems like a user would do something and they wouldn't immediately see the effect of what they did and they",
    "start": "1819159",
    "end": "1826159"
  },
  {
    "text": "would immediately think that something went wrong right now the thing is that",
    "start": "1826159",
    "end": "1831519"
  },
  {
    "text": "this is something that really we have to accept a little when we're moving to asynchronous communication because now",
    "start": "1831519",
    "end": "1837640"
  },
  {
    "text": "we're getting a promise that something will be done but we don't really have any certainty of when that will be done",
    "start": "1837640",
    "end": "1844200"
  },
  {
    "text": "so there are techniques that we can apply to basically adjust our user experience now the first one is to",
    "start": "1844200",
    "end": "1851000"
  },
  {
    "text": "adjust the language right if previously you had a system where you placed an order and it said congratulations your",
    "start": "1851000",
    "end": "1858159"
  },
  {
    "text": "order is now on the way well the thing is what does the user then expect that their order is on the",
    "start": "1858159",
    "end": "1865000"
  },
  {
    "text": "way right but if you tell them well thank you very much we've received your",
    "start": "1865000",
    "end": "1871120"
  },
  {
    "text": "your order and we will get to it as soon as we can well then you're setting completely different expectations also",
    "start": "1871120",
    "end": "1877840"
  },
  {
    "text": "to your user if they're not then going to be refreshing they'll be more likely to step away and trust that you'll get",
    "start": "1877840",
    "end": "1884440"
  },
  {
    "text": "to it right so language is really important here but there's also another option that we can use and that's",
    "start": "1884440",
    "end": "1891200"
  },
  {
    "text": "basically sort of creating the illusion of progress because what users really",
    "start": "1891200",
    "end": "1896600"
  },
  {
    "text": "miss when they do something they want to see the result of that they want to see that like I did something they don't",
    "start": "1896600",
    "end": "1903639"
  },
  {
    "text": "want that to be invisible so one of the things that we can do is once we send over a message",
    "start": "1903639",
    "end": "1910279"
  },
  {
    "text": "right ensuring that our message has been successfully delivered to the broker we have that promise of it will get",
    "start": "1910279",
    "end": "1916120"
  },
  {
    "text": "processed at some point now what we can do then is use a little bit of creative freedom to basically",
    "start": "1916120",
    "end": "1922960"
  },
  {
    "text": "show the user progress even though it hasn't actually happened yet because if you think about the order example again",
    "start": "1922960",
    "end": "1930559"
  },
  {
    "text": "they just gave us all of their information they just said what they ordered we know what they paid we know",
    "start": "1930559",
    "end": "1936159"
  },
  {
    "text": "where they wanted delivered because they just gave us all of that information so we could just show them that",
    "start": "1936159",
    "end": "1943000"
  },
  {
    "text": "information like most of the systems I've seen there's like a post requ and",
    "start": "1943000",
    "end": "1948760"
  },
  {
    "text": "then immediately a get request to get the same information back from the database to then show it to the",
    "start": "1948760",
    "end": "1954039"
  },
  {
    "text": "user is that really needed not really you could just immediately do that and assume that it",
    "start": "1954039",
    "end": "1960720"
  },
  {
    "text": "will get stored at some point okay that gives you a little bit of flexibility there with asynchronous",
    "start": "1960720",
    "end": "1967760"
  },
  {
    "text": "communication you could even keep that around in some kind of local storage or a cache for a limited amount of time of",
    "start": "1967760",
    "end": "1975240"
  },
  {
    "text": "course because of course this data is going to become stale and at some point you can't rely on it and that's why in",
    "start": "1975240",
    "end": "1981200"
  },
  {
    "text": "asynchronous systems we also need to start thinking about defining SLA service level",
    "start": "1981200",
    "end": "1987120"
  },
  {
    "text": "agreements because all of those individual steps that we have now how can we now",
    "start": "1987120",
    "end": "1994120"
  },
  {
    "text": "manage something like oh well it can take longer for 10 seconds for the order to be stored or something is wrong if",
    "start": "1994120",
    "end": "2001840"
  },
  {
    "text": "we're using synchronous communication that's something that we could manage with a timeout for example but now we",
    "start": "2001840",
    "end": "2007120"
  },
  {
    "text": "can't do that anymore right so it becomes important to start to think about each individual step and ask",
    "start": "2007120",
    "end": "2014440"
  },
  {
    "text": "yourself what is the longest amount of time for this to be done and that would",
    "start": "2014440",
    "end": "2019480"
  },
  {
    "text": "be acceptable to our business stakeholders and then of course we need to enforce them we can't just think",
    "start": "2019480",
    "end": "2026320"
  },
  {
    "text": "about them we need to enforce them and that is where delayed messages come in",
    "start": "2026320",
    "end": "2032080"
  },
  {
    "text": "who's ever used like delayed or future messages okay a couple of hands cool",
    "start": "2032080",
    "end": "2038279"
  },
  {
    "text": "that's great because I I actually find that this is an incredibly powerful and yet very underused feature uh in in most",
    "start": "2038279",
    "end": "2046480"
  },
  {
    "text": "message-based systems but basically the idea is that you're going to send a",
    "start": "2046480",
    "end": "2051520"
  },
  {
    "text": "message with a delivery date in the future and this is supported out of the",
    "start": "2051520",
    "end": "2056839"
  },
  {
    "text": "box by many message Brokers out there you can use this in Azure service bus you can use this in Amazon sqs and even",
    "start": "2056839",
    "end": "2063040"
  },
  {
    "text": "rabbit mq if you use their delay delivery plugin and there are middleware Frameworks out there wink wink that also",
    "start": "2063040",
    "end": "2071000"
  },
  {
    "text": "that also do this but the idea is basically that for every step that you execute right you're going to calculate",
    "start": "2071000",
    "end": "2078440"
  },
  {
    "text": "the SLA expiration date immediately when you send the request so now you're requesting for that order to be paid and",
    "start": "2078440",
    "end": "2085240"
  },
  {
    "text": "you're stating okay this has to be paid two days from now otherwise my SLA is expired so what you then do is as you",
    "start": "2085240",
    "end": "2092878"
  },
  {
    "text": "send the message to get the order paid you're immediately going to also send the message in the future two days now",
    "start": "2092879",
    "end": "2100720"
  },
  {
    "text": "when that message then arrives you're just going to verify hey that order one two three has that been paid already",
    "start": "2100720",
    "end": "2108160"
  },
  {
    "text": "yeah okay we're good to go has it not been paid okay now we maybe need to",
    "start": "2108160",
    "end": "2113480"
  },
  {
    "text": "cancel it it's been two days now doing it this way is great because it allows you to also recover",
    "start": "2113480",
    "end": "2120079"
  },
  {
    "text": "from technical failures like maybe the payment provider being down but also it",
    "start": "2120079",
    "end": "2125440"
  },
  {
    "text": "allows you to recover from business type of failures right for example the",
    "start": "2125440",
    "end": "2130520"
  },
  {
    "text": "customer's credit card bounced like everything is technically working but they don't have any money on their",
    "start": "2130520",
    "end": "2136599"
  },
  {
    "text": "account left and given two days you can give them some flexibility to update their payment information",
    "start": "2136599",
    "end": "2143520"
  },
  {
    "text": "right so the idea is that you can then take any appropriate action at the point in time where the SLA",
    "start": "2143520",
    "end": "2151520"
  },
  {
    "text": "expires all right so to recap this part it's really important when we transition",
    "start": "2151520",
    "end": "2157680"
  },
  {
    "text": "to an asynchronous based communication type of system that we adjust the language in our user interface the way",
    "start": "2157680",
    "end": "2164680"
  },
  {
    "text": "we communicate with our users is also going to significantly change even the way the user interface interacts is also",
    "start": "2164680",
    "end": "2171119"
  },
  {
    "text": "going to be impacted we can also here and there create the illusion of progress have to",
    "start": "2171119",
    "end": "2176839"
  },
  {
    "text": "be really careful then to also think about those slas and to enforce them as well and we can use also delayed",
    "start": "2176839",
    "end": "2184319"
  },
  {
    "text": "messages to enforce them and make that a little bit more easy for us as",
    "start": "2184319",
    "end": "2189800"
  },
  {
    "text": "well okay the next problem things occur out of order I feel like I'll never hear",
    "start": "2189800",
    "end": "2196400"
  },
  {
    "text": "the end of this problem now doesn't that look like an amazing",
    "start": "2196400",
    "end": "2201800"
  },
  {
    "text": "sock drawer I would love for my sock drawer to look like",
    "start": "2201800",
    "end": "2207240"
  },
  {
    "text": "this but the question is do I need it to look like this does it stop being",
    "start": "2207240",
    "end": "2213760"
  },
  {
    "text": "functional if I just intermingle all the colors all over the place not really",
    "start": "2213760",
    "end": "2219119"
  },
  {
    "text": "right let's reconsider this order workflow now this is a sort of flow charty type of thing so there's already",
    "start": "2219119",
    "end": "2225560"
  },
  {
    "text": "an order sort of in there but there's also a requirement hidden there because",
    "start": "2225560",
    "end": "2231640"
  },
  {
    "text": "we only want to package the order once the order has been both charged and stored in the database that's our",
    "start": "2231640",
    "end": "2238000"
  },
  {
    "text": "business prerequisite okay now the challenge with doing something like this",
    "start": "2238000",
    "end": "2243200"
  },
  {
    "text": "in a in a more decoupled system is that those concerns are being handled by different services so how would we know",
    "start": "2243200",
    "end": "2250240"
  },
  {
    "text": "when both of those things are true it's problem like these that I",
    "start": "2250240",
    "end": "2256160"
  },
  {
    "text": "usually see at the bases of people seeking out ordered messaging right these are the type of",
    "start": "2256160",
    "end": "2262839"
  },
  {
    "text": "things it's not really that you need an order it's that you have difficult prerequisites to manage something to",
    "start": "2262839",
    "end": "2269079"
  },
  {
    "text": "keep in mind whenever you think like oh I need I need this to be ordered now the thing is that we could",
    "start": "2269079",
    "end": "2276040"
  },
  {
    "text": "try to make this ordered right by sending out the messages in the order that we expect them to be processed and",
    "start": "2276040",
    "end": "2282560"
  },
  {
    "text": "this will work actually probably 97% of the time or so but then there's the 3%",
    "start": "2282560",
    "end": "2288839"
  },
  {
    "text": "and then the system it's is on its head right because there are many reasons",
    "start": "2288839",
    "end": "2294079"
  },
  {
    "text": "that could cause your messages to arrive out of order first of all latency one of",
    "start": "2294079",
    "end": "2300680"
  },
  {
    "text": "the policies of distributed computing if you've never heard of that before we have books on this at the stand no",
    "start": "2300680",
    "end": "2307800"
  },
  {
    "text": "marketing just a really good read so if you've never heard of those come by at the at the stand and I'll I'll give you",
    "start": "2307800",
    "end": "2313079"
  },
  {
    "text": "one very gladly but it could also be processing time you're sending out two messages first a then B but it takes uh",
    "start": "2313079",
    "end": "2322040"
  },
  {
    "text": "a lot longer to process message a then it takes to process message B so subsequent messages will appear out of",
    "start": "2322040",
    "end": "2328520"
  },
  {
    "text": "order it could also be concurrency right now you've scaled out one of your",
    "start": "2328520",
    "end": "2333839"
  },
  {
    "text": "components you have multiple Compu consumers that are consuming from the same q and you're prefetching a lot of",
    "start": "2333839",
    "end": "2341240"
  },
  {
    "text": "messages by-by inq ordering doesn't exist anymore it could also be to do an",
    "start": "2341240",
    "end": "2347839"
  },
  {
    "text": "increase in in load right where you have some of the components in your system perfectly keeping up and then other ones",
    "start": "2347839",
    "end": "2354240"
  },
  {
    "text": "that are suffering and your message is somewhere there in the queue while the rest of the system is keeping up again",
    "start": "2354240",
    "end": "2359960"
  },
  {
    "text": "this could cause also other messages to appear out of order and finally could be to to retries",
    "start": "2359960",
    "end": "2367079"
  },
  {
    "text": "right of the great things of building these types of systems is that you have your message safely stored on the broker",
    "start": "2367079",
    "end": "2372440"
  },
  {
    "text": "you can continue retrying when failures occur but that's also going to slow down things and cause that outof ordering",
    "start": "2372440",
    "end": "2379160"
  },
  {
    "text": "issue sometimes and finally if one of your services becomes",
    "start": "2379160",
    "end": "2384359"
  },
  {
    "text": "unavailable that's fine you all of those messages will pile up but again this can",
    "start": "2384359",
    "end": "2389760"
  },
  {
    "text": "also cause out of order messages to appear so one common solution I've seen",
    "start": "2389760",
    "end": "2395720"
  },
  {
    "text": "is to just force order back in now one of the ways to do this is to",
    "start": "2395720",
    "end": "2401480"
  },
  {
    "text": "basically say we're just going to execute a step wait until that has been successfully completely done and then",
    "start": "2401480",
    "end": "2408160"
  },
  {
    "text": "we're going to kick off the next step right if you do this you've basically",
    "start": "2408160",
    "end": "2414640"
  },
  {
    "text": "taken all of the benefits of messages of messaging comfortably walked over to the trash bin and thrown it all away this is",
    "start": "2414640",
    "end": "2422280"
  },
  {
    "text": "how you make a system slow because now you're just in introducing a lot of lat",
    "start": "2422280",
    "end": "2427480"
  },
  {
    "text": "see for no reason and the thing is also think about the coupling because if you pull in the",
    "start": "2427480",
    "end": "2433599"
  },
  {
    "text": "underlying services that are basically taking care of all of those individual steps they are now coupled together",
    "start": "2433599",
    "end": "2440680"
  },
  {
    "text": "because now sales knows about payments because it kicks off the next message and payments knows about shipments and",
    "start": "2440680",
    "end": "2446680"
  },
  {
    "text": "shipments knows about invoicing and so forth oh and by the way this is just one",
    "start": "2446680",
    "end": "2452319"
  },
  {
    "text": "of the 15,000 workflows in your massive application this is how you build that",
    "start": "2452319",
    "end": "2458200"
  },
  {
    "text": "distributed ball of mud One Step at the time so but the thing is I don't want",
    "start": "2458200",
    "end": "2465280"
  },
  {
    "text": "the coupling I just want the ordering so how would we go about that and that's where orchestration can",
    "start": "2465280",
    "end": "2472560"
  },
  {
    "text": "offer some help now orchestration is basically a coordination mechanism that",
    "start": "2472560",
    "end": "2478280"
  },
  {
    "text": "you can use in a vent driven microservice uh type of of architectures or applications that basically is going",
    "start": "2478280",
    "end": "2485400"
  },
  {
    "text": "to introduce a central comp component that drives the business process that is",
    "start": "2485400",
    "end": "2490440"
  },
  {
    "text": "going to drive that workflow that order workflow that we saw earlier right this",
    "start": "2490440",
    "end": "2495800"
  },
  {
    "text": "component knows and also takes the responsibility of storing the state of",
    "start": "2495800",
    "end": "2501720"
  },
  {
    "text": "where that workflow is so it will know has this already been paid has this",
    "start": "2501720",
    "end": "2506960"
  },
  {
    "text": "already been you know charged U invoiced or something like that",
    "start": "2506960",
    "end": "2512319"
  },
  {
    "text": "right it will also based on that information decide what is the next step",
    "start": "2512319",
    "end": "2517839"
  },
  {
    "text": "and also when that should be executed and this is basically a way that we can",
    "start": "2517839",
    "end": "2522880"
  },
  {
    "text": "recreate the order or rather another way I'd like you to think about it is a way",
    "start": "2522880",
    "end": "2528079"
  },
  {
    "text": "to handle more complex prerequisites forget about the idea of an order now if we tried to visualize that",
    "start": "2528079",
    "end": "2535440"
  },
  {
    "text": "a little bit right now we would have the user coming in sending that initial message to the message broker that kicks",
    "start": "2535440",
    "end": "2542079"
  },
  {
    "text": "off the order orchestrator the orchestrator will then tell sales to basically store the order and payments",
    "start": "2542079",
    "end": "2548760"
  },
  {
    "text": "to charge the order at that point sales is back and says hey I'm done I have it stored and then the orchestrator will",
    "start": "2548760",
    "end": "2555599"
  },
  {
    "text": "say oh cool but you know what I can't package this just yet because I need it",
    "start": "2555599",
    "end": "2560960"
  },
  {
    "text": "to be paid for first as well it can keep track of that but it can already continue with adjusting the customer",
    "start": "2560960",
    "end": "2567400"
  },
  {
    "text": "status because we want to do that immediately after payment and then when payment is back and says yeah I'm done",
    "start": "2567400",
    "end": "2573520"
  },
  {
    "text": "now then the orchestrator can say okay now I can continue with the rest of my",
    "start": "2573520",
    "end": "2579200"
  },
  {
    "text": "order fulfillment process now this is a lot better because",
    "start": "2579200",
    "end": "2586800"
  },
  {
    "text": "now all of those individual services at the bottom they're not coupled to each other anymore they're unaware of each",
    "start": "2586800",
    "end": "2593200"
  },
  {
    "text": "other but there's still a lot of coupling because now we have an individual component that orchestrator",
    "start": "2593200",
    "end": "2599359"
  },
  {
    "text": "that is aware of all of those underlying services and that's also still something",
    "start": "2599359",
    "end": "2604559"
  },
  {
    "text": "that we want to manage and balance across our system but at least it's already a lot more scoped than having",
    "start": "2604559",
    "end": "2611960"
  },
  {
    "text": "all of these arrows going in every direction so one of the things that we can basically do is to",
    "start": "2611960",
    "end": "2619280"
  },
  {
    "text": "basically manage the amount of surfaces that an orchestrator knows about so if",
    "start": "2619280",
    "end": "2624960"
  },
  {
    "text": "you start to ask yourself what doesn't fit in this list you could say well you know adjusting the customer status that",
    "start": "2624960",
    "end": "2630720"
  },
  {
    "text": "shouldn't even be part of a workflow there's no complexity involved we are just going to subscribe to the payment",
    "start": "2630720",
    "end": "2637200"
  },
  {
    "text": "event and then customer uh customer status service can do whatever it needs to do okay but let's argue that for",
    "start": "2637200",
    "end": "2645119"
  },
  {
    "text": "example the adjusting the stock that is complex enough for us to introduce a",
    "start": "2645119",
    "end": "2650280"
  },
  {
    "text": "dedicated workflow a DED dedicated orchestrator to take care of all of those involved",
    "start": "2650280",
    "end": "2656880"
  },
  {
    "text": "steps and this basically helps narrow down the dependencies of each individual",
    "start": "2656880",
    "end": "2664720"
  },
  {
    "text": "orchestrator now the main reason I tend to look at orchestration is to handle a",
    "start": "2664720",
    "end": "2670440"
  },
  {
    "text": "lot more complex prerequisites it's to create visibility in very very difficult",
    "start": "2670440",
    "end": "2676160"
  },
  {
    "text": "um workflows but if you're still around tomorrow I have a talk in the morning where I go in depth into orchestration",
    "start": "2676160",
    "end": "2684000"
  },
  {
    "text": "it will be a very intense one hour where we look at all of the trade-offs and what you can do when you should choose",
    "start": "2684000",
    "end": "2689599"
  },
  {
    "text": "one pattern over the other as well so definitely check that out now one of the other things to",
    "start": "2689599",
    "end": "2697119"
  },
  {
    "text": "consider is also to consider what would happen if you need to compensate we",
    "start": "2697119",
    "end": "2703720"
  },
  {
    "text": "earlier talked about what would happen if I can charge the order but I don't have enough stock right at that point if",
    "start": "2703720",
    "end": "2710400"
  },
  {
    "text": "you can backorder the the the order for any reason then you might have to init",
    "start": "2710400",
    "end": "2716440"
  },
  {
    "text": "end up canceling the order and actually refunding your customer now one of the things that you will find is that in an",
    "start": "2716440",
    "end": "2722839"
  },
  {
    "text": "orchestrated approach you already have access to all of those those services",
    "start": "2722839",
    "end": "2728240"
  },
  {
    "text": "that you will need to undo the operations that you did earlier so that can also become a lot more easy in this",
    "start": "2728240",
    "end": "2736880"
  },
  {
    "text": "approach all right to recap this problem right you have to expect out of order",
    "start": "2736960",
    "end": "2742480"
  },
  {
    "text": "messages that's like the first thing that I would like you to take away because the thing is they're going to happen don't put",
    "start": "2742480",
    "end": "2749640"
  },
  {
    "text": "your head in the sand right you'd rather think about this upfront and understand how your system would react if this",
    "start": "2749640",
    "end": "2756079"
  },
  {
    "text": "message comes in after that message then for it to happen on a Friday at 5:00 p.m. when you're bound to leave to the",
    "start": "2756079",
    "end": "2763319"
  },
  {
    "text": "Caribbean or something on vacation right so test those out of order cases so that",
    "start": "2763319",
    "end": "2768760"
  },
  {
    "text": "you can know so that you can understand how your system would react and what you need to do in order to mitigate that",
    "start": "2768760",
    "end": "2776400"
  },
  {
    "text": "also you can consider the orchestration pattern for more complex workflows now it's also still important",
    "start": "2776400",
    "end": "2783920"
  },
  {
    "text": "to guard the amount of coupling that you introduce in a single orchestrator because this",
    "start": "2783920",
    "end": "2790240"
  },
  {
    "text": "can tend to lend itself as a sort of easy component to just add steps to and",
    "start": "2790240",
    "end": "2797000"
  },
  {
    "text": "then you're building your next little monolith which you don't want right and",
    "start": "2797000",
    "end": "2802480"
  },
  {
    "text": "finally one of the Alternatives is actually choreography which is exactly what my talk is about tomorrow so I'll",
    "start": "2802480",
    "end": "2808920"
  },
  {
    "text": "leave it at that and hopefully I've made you a little bit",
    "start": "2808920",
    "end": "2813359"
  },
  {
    "text": "curious all right brings me to the next problem it's impossible to troubleshoot",
    "start": "2815839",
    "end": "2822400"
  },
  {
    "text": "failures this is another problem that affects any type of distributed system but even more so if you use asynchronous",
    "start": "2822400",
    "end": "2829920"
  },
  {
    "text": "communication it's just magnitudes of more painful so the thing is that in our",
    "start": "2829920",
    "end": "2837400"
  },
  {
    "text": "monolithic approach when you think about the code execution it's quite simple right you can literally debug through",
    "start": "2837400",
    "end": "2844240"
  },
  {
    "text": "the code go from one method to the other see what data is being passed on you can investigate your call stack you can",
    "start": "2844240",
    "end": "2851359"
  },
  {
    "text": "understand where you came from and how things changed to see where you're at but the thing is that when you move",
    "start": "2851359",
    "end": "2858559"
  },
  {
    "text": "to a distributed approach to a message based approach and you think about your code execution that looks a lot more",
    "start": "2858559",
    "end": "2865200"
  },
  {
    "text": "like this there's like events just flowing all all around and it's like oh my God this message and that message and",
    "start": "2865200",
    "end": "2872599"
  },
  {
    "text": "what resulted in what that can become quite overwhelming when you are trying",
    "start": "2872599",
    "end": "2878119"
  },
  {
    "text": "to solve problems in a production environment so one of the things that we",
    "start": "2878119",
    "end": "2884119"
  },
  {
    "text": "can do no one of the things that we have to do is test now I keep saying this and",
    "start": "2884119",
    "end": "2892240"
  },
  {
    "text": "okay who who consistently tests their application",
    "start": "2892240",
    "end": "2897520"
  },
  {
    "text": "code okay I'm seeing a few hands going like this",
    "start": "2897520",
    "end": "2905040"
  },
  {
    "text": "or so I will say it again testing is really",
    "start": "2905200",
    "end": "2910240"
  },
  {
    "text": "essential to building resilient and trustworthy applications but if you are",
    "start": "2910240",
    "end": "2916240"
  },
  {
    "text": "building distributed applications if you're using messaging if you have events flowing from here to there and",
    "start": "2916240",
    "end": "2923160"
  },
  {
    "text": "things just happening you cannot afford to not test like really you're just",
    "start": "2923160",
    "end": "2929880"
  },
  {
    "text": "making your own life a lot more difficult so invest in a testing strategy it's really important",
    "start": "2929880",
    "end": "2937319"
  },
  {
    "text": "but there's one big flaw in testing because the thing is that we only ever really test the test cases that we even",
    "start": "2937319",
    "end": "2944240"
  },
  {
    "text": "can think about and there's always something that we forgot that we never even considered could happen and that's",
    "start": "2944240",
    "end": "2951319"
  },
  {
    "text": "where the fun bugs are right so how do we handle those well that's where we also need to",
    "start": "2951319",
    "end": "2957520"
  },
  {
    "text": "invest in observability right who's heard of observability before okay lots of hands cool really nice now",
    "start": "2957520",
    "end": "2965119"
  },
  {
    "text": "observability is basically a technique that can help us recreate that visibility that we lose when we've sort",
    "start": "2965119",
    "end": "2972799"
  },
  {
    "text": "of shift to distributed applications especially using asynchronous communication because it's not easy to",
    "start": "2972799",
    "end": "2980319"
  },
  {
    "text": "understand where our errors originate because when you see a failure okay it",
    "start": "2980319",
    "end": "2985440"
  },
  {
    "text": "fails in this component but where is the ca that could basically be five Services",
    "start": "2985440",
    "end": "2991040"
  },
  {
    "text": "Upstream right so it's really important to be able to have a tool that gives you that visibility so the whole idea about",
    "start": "2991040",
    "end": "2997720"
  },
  {
    "text": "observability is collecting Telemetry from inside of your applications stored at outside of your applications so that",
    "start": "2997720",
    "end": "3004079"
  },
  {
    "text": "you have some some data to look at that can be in the form of logs traces and even metrics and nowadays we use the",
    "start": "3004079",
    "end": "3012040"
  },
  {
    "text": "open Telemetry project to do exactly that so that we can collect and generate that Telemetry in a way that is",
    "start": "3012040",
    "end": "3018799"
  },
  {
    "text": "standardized now I'm not going to go to deeply into this not because I don't care I was talking and I forgot about my",
    "start": "3018799",
    "end": "3025799"
  },
  {
    "text": "slides but fine it's available crossplatform cross cross runtime I think 11 languages so it doesn't even",
    "start": "3025799",
    "end": "3032400"
  },
  {
    "text": "matter which stack that you're using you'll be able to get that Telemetry end to",
    "start": "3032400",
    "end": "3037880"
  },
  {
    "text": "end so I'm not going to continue talking about this not because I don't care about it because but because I cared",
    "start": "3037880",
    "end": "3044160"
  },
  {
    "text": "about it enough to have a dedicated talk about it who was in my talk last year here at Oslo okay welcome back well for",
    "start": "3044160",
    "end": "3051920"
  },
  {
    "text": "those of you who weren't there you can scan the QR code it will take you to one of my giup reposts where you will find a",
    "start": "3051920",
    "end": "3057920"
  },
  {
    "text": "link to the recording but also a bunch of additional resources around open",
    "start": "3057920",
    "end": "3063280"
  },
  {
    "text": "Telemetry around observability and even samples for you to play around with as well and if you have any questions you",
    "start": "3063280",
    "end": "3070559"
  },
  {
    "text": "just come find me and I'm happy to chat and that brings me to the last",
    "start": "3070559",
    "end": "3076680"
  },
  {
    "text": "problem of the day I'm still in time I'm hearing so much noise so the duplicate problem now when",
    "start": "3076680",
    "end": "3085160"
  },
  {
    "text": "we build a message mess based system we're using a message broker right by definition every send or publish",
    "start": "3085160",
    "end": "3091160"
  },
  {
    "text": "operation that we execute in a system is an at least once operation and that is true unless you're",
    "start": "3091160",
    "end": "3098359"
  },
  {
    "text": "willing to sometimes lose data right because otherwise it could be that a message is never received which is not",
    "start": "3098359",
    "end": "3105160"
  },
  {
    "text": "usually the case in business applications so I'm going to assume that you want at least once message",
    "start": "3105160",
    "end": "3112400"
  },
  {
    "text": "delivery the downside of at least once message delivery is that by definition",
    "start": "3112400",
    "end": "3117720"
  },
  {
    "text": "at some point you will get a duplicate message right and the thing is that now all of",
    "start": "3117720",
    "end": "3124839"
  },
  {
    "text": "your message handlers in your applications need a way to deal with that need to understand have I seen this",
    "start": "3124839",
    "end": "3130839"
  },
  {
    "text": "message before because then I shouldn't process it again that or we need item",
    "start": "3130839",
    "end": "3136599"
  },
  {
    "text": "potency now I find that item potency is one of the main paradigms in the IT industry in distributed applications",
    "start": "3136599",
    "end": "3143200"
  },
  {
    "text": "because it's incredibly easy to explain in incred L hard to implement so for",
    "start": "3143200",
    "end": "3148960"
  },
  {
    "text": "those of you who haven't heard about it you can basically think or explain item potency with the example of a light",
    "start": "3148960",
    "end": "3154880"
  },
  {
    "text": "switch because we have the flip switch but we also have a push button as a light switch right now the flip switch",
    "start": "3154880",
    "end": "3162520"
  },
  {
    "text": "is item potent because it doesn't matter how many times I flip it down the state",
    "start": "3162520",
    "end": "3167599"
  },
  {
    "text": "of the light is not going to change the push button on the other hand is not item potent because if I keep",
    "start": "3167599",
    "end": "3174440"
  },
  {
    "text": "pushing it multiple times the state of the light is going to change like I said",
    "start": "3174440",
    "end": "3179760"
  },
  {
    "text": "really easy to explain in a system H bit harder right and what do we do with",
    "start": "3179760",
    "end": "3186400"
  },
  {
    "text": "difficult problems we avoid them and that's why we have message",
    "start": "3186400",
    "end": "3191720"
  },
  {
    "text": "duplication so message D duplication is a mechanism that will allow you to",
    "start": "3191720",
    "end": "3196760"
  },
  {
    "text": "detect whether the incoming message has already been processed before right so",
    "start": "3196760",
    "end": "3202119"
  },
  {
    "text": "the idea is basically that then if we see oh we've already taken care of of this then we'll just throw it out we've",
    "start": "3202119",
    "end": "3208240"
  },
  {
    "text": "already done this the way that this works is based on a deterministic message ID so that means that when we",
    "start": "3208240",
    "end": "3214920"
  },
  {
    "text": "send out a message we will have to always regenerate the same ID we can for",
    "start": "3214920",
    "end": "3220040"
  },
  {
    "text": "for example do that based on an entity ID we want to charge an order",
    "start": "3220040",
    "end": "3225160"
  },
  {
    "text": "5673 and then create an ID based on that so that even if we retry that",
    "start": "3225160",
    "end": "3230960"
  },
  {
    "text": "operation we will send out a message with the same message ID so that we're able to throw thr it away because we",
    "start": "3230960",
    "end": "3237319"
  },
  {
    "text": "recognize it okay now the thing is that if you have very high throughput right",
    "start": "3237319",
    "end": "3243799"
  },
  {
    "text": "then this can also become costly because the way that this works is that every processed message you're going to keep",
    "start": "3243799",
    "end": "3249799"
  },
  {
    "text": "track of that so you can do this forever and that's why this type of mechanism",
    "start": "3249799",
    "end": "3255680"
  },
  {
    "text": "usually works based on a d duplication window so we will keep all of the",
    "start": "3255680",
    "end": "3260799"
  },
  {
    "text": "processed messages around for a period amount of time now duplicates to come",
    "start": "3260799",
    "end": "3266839"
  },
  {
    "text": "very close together because they're usually a result of retries so usually that's enough but it's also not",
    "start": "3266839",
    "end": "3272960"
  },
  {
    "text": "impossible that a message comes in beyond the D duplication window and then",
    "start": "3272960",
    "end": "3278040"
  },
  {
    "text": "we will treat it as we've never seen it before so still something to be aware of but we're not entirely done then",
    "start": "3278040",
    "end": "3285960"
  },
  {
    "text": "because even with message D duplication we still have the atomicity problem now",
    "start": "3285960",
    "end": "3292280"
  },
  {
    "text": "the thing is that as we're building modern distributed systems we also started to use different types of",
    "start": "3292280",
    "end": "3298040"
  },
  {
    "text": "infrastructure so that we're using the right tools for the right job and in essence that's great right because we're",
    "start": "3298040",
    "end": "3304000"
  },
  {
    "text": "using the right infrastructure for the specific concern that we are handling and we can do that in an autonomous way",
    "start": "3304000",
    "end": "3310280"
  },
  {
    "text": "across our across our Individual Services but the problem is no",
    "start": "3310280",
    "end": "3316440"
  },
  {
    "text": "distributed transactions right so we can't create consistency across those different types",
    "start": "3316440",
    "end": "3322440"
  },
  {
    "text": "of infrastructure now all of those different types of infrastructure structure usually do provide some kind",
    "start": "3322440",
    "end": "3328640"
  },
  {
    "text": "of transaction management right SQL server has has uh transactions database transactions cosmosdb offers",
    "start": "3328640",
    "end": "3335000"
  },
  {
    "text": "partition-based transactions and even Azure service bus has cross entity transactions the issue is we can't",
    "start": "3335000",
    "end": "3341480"
  },
  {
    "text": "combine those transaction guarantees into one right",
    "start": "3341480",
    "end": "3346799"
  },
  {
    "text": "so they wouldn't work so if you want for example what you do in a database to be",
    "start": "3346799",
    "end": "3352119"
  },
  {
    "text": "consistent to the messages that you send out to a broker a transaction scoper around that is never going to help now",
    "start": "3352119",
    "end": "3358799"
  },
  {
    "text": "one of the ways that we handle that problem in the messaging space is with the outbox feature that's basically a",
    "start": "3358799",
    "end": "3365160"
  },
  {
    "text": "pattern that's going to give you that consistency across your message operations and your database operations",
    "start": "3365160",
    "end": "3372559"
  },
  {
    "text": "still doesn't cover everything okay let's say that you're in a scenario where you want to generate an invoice",
    "start": "3372559",
    "end": "3378280"
  },
  {
    "text": "PDF store that on blob store the reference to that blob in your data store SQL server and then publish a",
    "start": "3378280",
    "end": "3385720"
  },
  {
    "text": "message the storage of that blob you can't make that a part of the outbox there's no way",
    "start": "3385720",
    "end": "3393240"
  },
  {
    "text": "to do that important to be aware of that but let's say that you do have",
    "start": "3393240",
    "end": "3398359"
  },
  {
    "text": "something like that where you need consistency across more types of infrastructure a multiphase commit type",
    "start": "3398359",
    "end": "3404760"
  },
  {
    "text": "of situation that's where you can start to use the Saga distributed transactions pattern now any of you have used in",
    "start": "3404760",
    "end": "3412319"
  },
  {
    "text": "service bus or something like that okay okay so I'm not talking about an inservice basaga just to make that clear",
    "start": "3412319",
    "end": "3419359"
  },
  {
    "text": "this is a different pattern it's more of a concept right but you can use an inservice basaga to implement this the",
    "start": "3419359",
    "end": "3426039"
  },
  {
    "text": "idea here is that a saga distributed transactions pattern is basically a failure management pattern okay what",
    "start": "3426039",
    "end": "3433480"
  },
  {
    "text": "we're going to do is create that data consistency step by step and Implement that multiphase commit if you want by",
    "start": "3433480",
    "end": "3439599"
  },
  {
    "text": "using a sequence of local transactions so we're going to do a transaction against one piece of infrastructure and",
    "start": "3439599",
    "end": "3445760"
  },
  {
    "text": "then the next and if something fails in that sequence we'll also roll back all of the previous",
    "start": "3445760",
    "end": "3453079"
  },
  {
    "text": "pieces of infrastructure that we touched I'll show you a quick example so that you can visualize it so our Saga wants",
    "start": "3453079",
    "end": "3459839"
  },
  {
    "text": "to store some data in the SQL database of service a we'll do that okay everything's fine then it wants to Tor",
    "start": "3459839",
    "end": "3466799"
  },
  {
    "text": "some data in the cosmos DB in service one we're good next step is storing some",
    "start": "3466799",
    "end": "3473240"
  },
  {
    "text": "data in the SQL database of service B now something goes wrong there now at",
    "start": "3473240",
    "end": "3479000"
  },
  {
    "text": "that point The Saga understands this but also knows what has already happened so it will go back to service a and say",
    "start": "3479000",
    "end": "3485599"
  },
  {
    "text": "undo what you did in Cosmos and please also remove what you stored in the SQL database",
    "start": "3485599",
    "end": "3492079"
  },
  {
    "text": "earlier and by the way this is a horrible example and I did it on purpose",
    "start": "3492079",
    "end": "3497960"
  },
  {
    "text": "because if you find yourself using this pattern to create a multiphase commit",
    "start": "3497960",
    "end": "3503319"
  },
  {
    "text": "across multiple Services then you got your service boundaries wrong okay this",
    "start": "3503319",
    "end": "3509000"
  },
  {
    "text": "should always be condensed to a single service boundary but this way you get the conceptual idea of how that would",
    "start": "3509000",
    "end": "3517039"
  },
  {
    "text": "work okay so when it comes to item potency I don't have a silver ballet sorry but I can give you strategies the",
    "start": "3517039",
    "end": "3524599"
  },
  {
    "text": "first one if you can if you have the possibility to do this make your code",
    "start": "3524599",
    "end": "3530520"
  },
  {
    "text": "item potent but also know that this is going to be a continuous effort that",
    "start": "3530520",
    "end": "3535799"
  },
  {
    "text": "every everyone on the team is going to have to understand item potency because every time something changes you have to",
    "start": "3535799",
    "end": "3541520"
  },
  {
    "text": "ask yourself is a change still item potent now so it's a continuous effort",
    "start": "3541520",
    "end": "3546760"
  },
  {
    "text": "but if you can I would still recommend it it can save you a lot of trouble you can also use the Saga to to",
    "start": "3546760",
    "end": "3555000"
  },
  {
    "text": "mimic those distributed transactions to basically create eventual consistency by using a sequence of local transactions",
    "start": "3555000",
    "end": "3562640"
  },
  {
    "text": "across different pieces of infrastructure if you have any communication happening within your",
    "start": "3562640",
    "end": "3568599"
  },
  {
    "text": "system boundaries please do it over q's and don't do do it over HTTP apis",
    "start": "3568599",
    "end": "3574319"
  },
  {
    "text": "because then you have message D duplication out of the box and just by using a deterministic ID you won't have",
    "start": "3574319",
    "end": "3582200"
  },
  {
    "text": "duplicates if you have any rest apis that you need to integrate with that are outside of the boundaries of your system",
    "start": "3582200",
    "end": "3588319"
  },
  {
    "text": "then ask if they're item potent because usually that will require you again to use some kind of a deterministic idea ID",
    "start": "3588319",
    "end": "3596440"
  },
  {
    "text": "in in case they didn't make all of their hand all of their handling code item potent something to",
    "start": "3596440",
    "end": "3602039"
  },
  {
    "text": "verify and finally investigate compensating requests if you don't have",
    "start": "3602039",
    "end": "3607520"
  },
  {
    "text": "any guarantee that those rest apis are going to be em potent because if you do something twice you will also have to",
    "start": "3607520",
    "end": "3613440"
  },
  {
    "text": "understand how do I undo that and that brings me to the end I know this was a really packed session I",
    "start": "3613440",
    "end": "3620119"
  },
  {
    "text": "wanted to give you as much information as I could we don't have time for questions but I'm going to be around for the rest of the conference",
    "start": "3620119",
    "end": "3626559"
  },
  {
    "text": "if you have questions so a quick recap messaging gives you options when it",
    "start": "3626559",
    "end": "3631720"
  },
  {
    "text": "comes to implementing scalable reliable systems okay but it's not going to be",
    "start": "3631720",
    "end": "3638480"
  },
  {
    "text": "your silver bullet you have to really be conscient of all of the problem spaces that you're also entering when",
    "start": "3638480",
    "end": "3644359"
  },
  {
    "text": "introducing that so you have to really commit to decoupling your logic and your data and finally think of how out of",
    "start": "3644359",
    "end": "3652280"
  },
  {
    "text": "order processing is going to affect your more complex workflow invest in observability okay I'm happy",
    "start": "3652280",
    "end": "3659000"
  },
  {
    "text": "to talk to you about this really passionate about the subject as well and finally make item potency a key pattern",
    "start": "3659000",
    "end": "3665839"
  },
  {
    "text": "in your designs as well thanks a lot for listening if you scan the QR code more",
    "start": "3665839",
    "end": "3671119"
  },
  {
    "text": "resources for you and any questions please come chat to me",
    "start": "3671119",
    "end": "3677200"
  }
]