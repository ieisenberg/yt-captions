[
  {
    "text": "all right so uh welcome all five of you",
    "start": "2440",
    "end": "7480"
  },
  {
    "text": "um my name is Austin Bingham I work for and part own a small company about an",
    "start": "7480",
    "end": "13639"
  },
  {
    "text": "hour east of here in ascar if you know where that is just south of Oslo um we",
    "start": "13639",
    "end": "19000"
  },
  {
    "text": "do a bunch of python Consulting training um contract development all that kind of",
    "start": "19000",
    "end": "24039"
  },
  {
    "text": "stuff coaching mentoring You Name It Whatever somebody will pay us for We Do It um and it tends to be in Python we are known for that",
    "start": "24039",
    "end": "30679"
  },
  {
    "text": "um what I'll be talking about today you can read the slide mutation testing in Python with cosmic ray and we'll talk",
    "start": "30679",
    "end": "36360"
  },
  {
    "text": "about the theory what is mutation testing and we'll talk about some of the nuts and bolts of actually doing it most",
    "start": "36360",
    "end": "43960"
  },
  {
    "text": "of this talk most of the material doesn't matter if you know python or not mutation testing is a general technique",
    "start": "43960",
    "end": "50320"
  },
  {
    "text": "um just by show hands who is already quite aware of what mutation testing is",
    "start": "50320",
    "end": "56039"
  },
  {
    "text": "okay a halfish of the crowd okay so there's there's a reason to talk about the first part okay good um but so again",
    "start": "56039",
    "end": "62480"
  },
  {
    "text": "yeah if you're not a python expert don't worry very little of this has much of anything to do with python per",
    "start": "62480",
    "end": "67680"
  },
  {
    "text": "se um yeah go over a bit of the agenda here in introduction to the theory of mutation testing this it's quite an",
    "start": "67680",
    "end": "74200"
  },
  {
    "text": "academic topic actually a lot of interesting academic elements to it that I would love to give an infinite time and money address um an overview of the",
    "start": "74200",
    "end": "82240"
  },
  {
    "text": "very real practical difficulties we're just talking about a second ago and we'll look at cosmic ray this is a",
    "start": "82240",
    "end": "88320"
  },
  {
    "text": "program and application we've written to do do mutation testing specifically of python code most mutation testing tools that in",
    "start": "88320",
    "end": "96520"
  },
  {
    "text": "fact all that I can think of are language specific because of the details of how mutation testing works I know",
    "start": "96520",
    "end": "101600"
  },
  {
    "text": "there have been efforts to produce Frameworks that were language agnostic and I don't know if those have gone",
    "start": "101600",
    "end": "107040"
  },
  {
    "text": "anywhere it seems like a tremendous effort that would be riddled with really really hard problems it may not be worth",
    "start": "107040",
    "end": "113240"
  },
  {
    "text": "putting the energy into I don't know and I know there are some llvm level mutation testing efforts as well so",
    "start": "113240",
    "end": "118799"
  },
  {
    "text": "those would be more pay in language I suppose um but and time permitting uh a",
    "start": "118799",
    "end": "125039"
  },
  {
    "text": "demo I think we'll have plenty of time um so we'll do a little demo just to show you how it looks and we'll also look at some practical applications",
    "start": "125039",
    "end": "131360"
  },
  {
    "text": "times we've used cosmic ray uh and we can take questions and probably just Talk Amongst ourselves I know that at",
    "start": "131360",
    "end": "137680"
  },
  {
    "text": "least one other person has some real experience using mutation testing in very different environments than your",
    "start": "137680",
    "end": "143480"
  },
  {
    "text": "standard Python program so it's interesting to um compare well two folks have experience using mutation testing",
    "start": "143480",
    "end": "149280"
  },
  {
    "text": "uh so we can can have a panel discussion okay so mutation testing what this is from pit test.org pit test is the gold standard",
    "start": "149280",
    "end": "156599"
  },
  {
    "text": "mutation testing tool for Java the jdk universe uh mutation testing is conceptually quite simple faults or",
    "start": "156599",
    "end": "163560"
  },
  {
    "text": "mutations are automatically seated into your code we take your source code we just change little bits of it and then",
    "start": "163560",
    "end": "168760"
  },
  {
    "text": "you run your tests and if a tests fail then the mutation is killed and this is good if your tests pass it means that",
    "start": "168760",
    "end": "174680"
  },
  {
    "text": "the mutation lived and your tests are probably not good enough there's a couple of things a couple of reasons",
    "start": "174680",
    "end": "179840"
  },
  {
    "text": "your the mutation might live one bad test suite two dead code there's a couple of reasons and the quality of",
    "start": "179840",
    "end": "185920"
  },
  {
    "text": "your tests can be gauged by the percentage of mutations killed right so what do we mean what's",
    "start": "185920",
    "end": "192040"
  },
  {
    "text": "what's actually going on what are the parts here in mutation testing you have the code under test your library your",
    "start": "192040",
    "end": "197480"
  },
  {
    "text": "application whatever you want to call it and you have your test Suite those are those need to be kept separate right",
    "start": "197480",
    "end": "203159"
  },
  {
    "text": "because you're going to be mutating one of them and running the other one and if you're mutating your test Suite on accident that's could to be a very",
    "start": "203159",
    "end": "208760"
  },
  {
    "text": "confusing scenario typically at least the way um cosmic ray runs for now you introduce a",
    "start": "208760",
    "end": "216200"
  },
  {
    "text": "single very small change to the code under test so change an operator to a",
    "start": "216200",
    "end": "221239"
  },
  {
    "text": "different operator change a number to a different number and then you run the test Suite ideally every change you make will",
    "start": "221239",
    "end": "229599"
  },
  {
    "text": "result in some kind of failure in your test Suite okay that's the goal that would mean you have a in a sense a",
    "start": "229599",
    "end": "235599"
  },
  {
    "text": "perfect test Suite very simple Cor algorithm so to",
    "start": "235599",
    "end": "240799"
  },
  {
    "text": "speak we'll talk about what we mean by operators but for every operator in the list of mutation operators for every",
    "start": "240799",
    "end": "246640"
  },
  {
    "text": "place in your code where that operator could apply make that change and then run the tests and then okay implicit",
    "start": "246640",
    "end": "252439"
  },
  {
    "text": "here undo the change you just made right uh I guess I should actually add that to this slide but um this is it this is the",
    "start": "252439",
    "end": "259400"
  },
  {
    "text": "the Beating Heart of cosmic ray and I'm sure many other mutation testing tools",
    "start": "259400",
    "end": "265120"
  },
  {
    "text": "okay very straightforward why do why do we do this what what does mutation testing tell us",
    "start": "265120",
    "end": "271240"
  },
  {
    "text": "about our code that's hard to read you're all going to go blind from reading that sorry um one killed your",
    "start": "271240",
    "end": "277759"
  },
  {
    "text": "tests can will fail after the mutation is made this is good this means that your test Suite is robust enough to",
    "start": "277759",
    "end": "284240"
  },
  {
    "text": "detect an actual Behavior changing modification to your code of course this points to a corollary about the kinds of",
    "start": "284240",
    "end": "290320"
  },
  {
    "text": "mutations you make these changes need to in principle be detectable right and this is actually an interesting area of",
    "start": "290320",
    "end": "297720"
  },
  {
    "text": "discussion they could be incompetent there may the code change May produce an inherent flaw",
    "start": "297720",
    "end": "304560"
  },
  {
    "text": "in your code a syntax error sometimes uh that would be a poorly designed operator or there are other reasons you might go",
    "start": "304560",
    "end": "310479"
  },
  {
    "text": "into an infinite Loop or it may just for some reason cause your program to um not fail a test per se but just a crash and",
    "start": "310479",
    "end": "316919"
  },
  {
    "text": "we would call these incompetent mutants and then the big bad red box is if your test Suite passes it means the mutant",
    "start": "316919",
    "end": "323880"
  },
  {
    "text": "survived and you don't want that either your tests are inadequate to protect",
    "start": "323880",
    "end": "330000"
  },
  {
    "text": "this change this Behavior modifying change or the code that was mutated is",
    "start": "330000",
    "end": "335400"
  },
  {
    "text": "extraneous and this is a signal that you can excise it from your body of code yes",
    "start": "335400",
    "end": "340520"
  },
  {
    "text": "I guess there there there's yeah there's the notion of an equivalent mutant and we'll",
    "start": "340520",
    "end": "346720"
  },
  {
    "text": "um yeah we'll we'll touch on that a bit that's another area where you have to you have to put your thinking cap on",
    "start": "346720",
    "end": "352400"
  },
  {
    "text": "when it when the tests fail or when your test Suite succeeds under mutation you it's not an immediate signal that of",
    "start": "352400",
    "end": "357759"
  },
  {
    "text": "what to do you have to then start thinking hard about what is this telling me about my code or my test yeah and",
    "start": "357759",
    "end": "363240"
  },
  {
    "text": "this notion of benign or equivalent mutants is is a difficult one of course we have to have a meme okay so we want",
    "start": "363240",
    "end": "368919"
  },
  {
    "text": "to kill all the mutants that's the goal of mutation testing is anytime a mutant pops up you're going to fix your test Suite modify your code in some way you",
    "start": "368919",
    "end": "375960"
  },
  {
    "text": "need to take care of it account for it at least be aware of it so what are the goals of mutation",
    "start": "375960",
    "end": "382759"
  },
  {
    "text": "testing they probably quite apparent um in one sense it's just a much better",
    "start": "382759",
    "end": "388199"
  },
  {
    "text": "kind of coverage analysis you there's there's lots of people who um aim for 100% coverage and that's actually",
    "start": "388199",
    "end": "394840"
  },
  {
    "text": "relatively easy to get if you're if you're motivated to do it um but what does that actually tell you 100%",
    "start": "394840",
    "end": "401080"
  },
  {
    "text": "coverage tells you I've I've executed every line of code in my program I've run all the uh the paths through my code",
    "start": "401080",
    "end": "408680"
  },
  {
    "text": "that okay that's telling you something right it means you not you don't have a totally brain dead program but it's not really telling you that your tests are",
    "start": "408680",
    "end": "415599"
  },
  {
    "text": "that you understand what your program is doing right your test weight somehow forces execution of all the paths in the",
    "start": "415599",
    "end": "421160"
  },
  {
    "text": "program but is it is the behavior what you want or you just think you have the behavior you",
    "start": "421160",
    "end": "427919"
  },
  {
    "text": "want cosmic ray mutation testing helps you helps you believe come to the",
    "start": "427919",
    "end": "433039"
  },
  {
    "text": "conclusion that your functionality is actually verified that my tests are actually able to detect and are telling",
    "start": "433039",
    "end": "440520"
  },
  {
    "text": "me about the real behavior of my program and not just causing execution of bits of code without doing any kind of",
    "start": "440520",
    "end": "445720"
  },
  {
    "text": "assertions right so it is a an adjunct or you can say a layer on top of",
    "start": "445720",
    "end": "451080"
  },
  {
    "text": "coverage testing and in some sense the entry point to doing mutation testing is 100% coverage because without that of",
    "start": "451080",
    "end": "457440"
  },
  {
    "text": "course you would have a test Suite just passing all the time right a second goal and you know",
    "start": "457440",
    "end": "464960"
  },
  {
    "text": "related to this is detecting unnecessary code this is this is to me quite important you know having code hanging around that's not doing anything is is",
    "start": "464960",
    "end": "471800"
  },
  {
    "text": "is a guaranteed it's a liability right you don't want it there you want to get rid of it or at least understand that it",
    "start": "471800",
    "end": "477039"
  },
  {
    "text": "doesn't need to be looked after the way Live code needs looked after so if you have a survivor in your mutation test",
    "start": "477039",
    "end": "483360"
  },
  {
    "text": "run this can indicate code which you can just excise so um I like this picture to",
    "start": "483360",
    "end": "489560"
  },
  {
    "text": "demonstrate this because this is of course well who can identify what that is why might I put it up",
    "start": "489560",
    "end": "495599"
  },
  {
    "text": "there it's the lower intestine right and and this this is the appendix that many",
    "start": "495599",
    "end": "501000"
  },
  {
    "text": "people have removed right and for a long time say this is this is representative of the code that we don't need because",
    "start": "501000",
    "end": "506599"
  },
  {
    "text": "we can cut it out and I was told growing up that we literally don't need it doesn't do anything on our body it's",
    "start": "506599",
    "end": "512159"
  },
  {
    "text": "just this old thing but in fact it turns out maybe it does some things and this is to this helps me to illustrate the",
    "start": "512159",
    "end": "517760"
  },
  {
    "text": "idea that when when you get a Survivor you need to look hard at the thing that has survived and decide what does this",
    "start": "517760",
    "end": "523518"
  },
  {
    "text": "really mean do I not need this or do I need it what role does it play in my my universe right so this is another",
    "start": "523519",
    "end": "530920"
  },
  {
    "text": "possibility when you have a surviving mutant is that you can just remove the",
    "start": "530920",
    "end": "536200"
  },
  {
    "text": "code okay I hope you're getting the picture that it's kind of a simple idea",
    "start": "536279",
    "end": "541399"
  },
  {
    "text": "right it's a straightforward thing um conceptually um a question a lot of",
    "start": "541399",
    "end": "546959"
  },
  {
    "text": "folks have immediately is what kind of changes are you going to make to the code um there are lots and lots and we'll look at a few but here's another",
    "start": "546959",
    "end": "553519"
  },
  {
    "text": "picture I'm going to ask you about why would I put this picture up and you recognize",
    "start": "553519",
    "end": "560600"
  },
  {
    "text": "this yeah it's it's it's it's a moth okay but okay what what did this moth",
    "start": "560640",
    "end": "568120"
  },
  {
    "text": "do it it evolved in in in front of our eyes so to speak so this this this moth uh is um",
    "start": "568120",
    "end": "576040"
  },
  {
    "text": "uh a lot of them are in areas like Birmingham in the UK where there's a lot of limestone buildings that were at one",
    "start": "576040",
    "end": "581800"
  },
  {
    "text": "point very very bright white and these things were very very bright white as well so they wouldn't be spotted by the birds then we discover coal we discover",
    "start": "581800",
    "end": "589560"
  },
  {
    "text": "how to burn coal and we do it on mass and we all those white buildings became black and all the really white moths got",
    "start": "589560",
    "end": "595560"
  },
  {
    "text": "eaten really quickly and they evolved to be black and then of course we cleaned up and we took all the black stuff off",
    "start": "595560",
    "end": "602040"
  },
  {
    "text": "the buildings and they evolved back so it's a it's a nice picture a nice story okay and genetic genetic mutation so a",
    "start": "602040",
    "end": "609920"
  },
  {
    "text": "common kind of thing we'll do is replace you know in this case greater than with with less than it's crude but make that",
    "start": "609920",
    "end": "615839"
  },
  {
    "text": "swap your test Suite ought to be able to figure out that that's happening right that's something we can typically te",
    "start": "615839",
    "end": "621120"
  },
  {
    "text": "detect um replacing break with continue right this is a a common thing or",
    "start": "621120",
    "end": "626600"
  },
  {
    "text": "imagine imagine the uh the inverse of this replacing continue continue with break what would that do to your program very",
    "start": "626600",
    "end": "632920"
  },
  {
    "text": "often often lead to like an infinite Loop right you've reached the termination point of your Loop and you're trying to get out of it but",
    "start": "632920",
    "end": "638480"
  },
  {
    "text": "suddenly your break has become a continu you're just going to Loop forever and this points to one of the complexities",
    "start": "638480",
    "end": "643800"
  },
  {
    "text": "that we'll we'll look at in a little bit this possibility of infinite Loops there's you can find research you know",
    "start": "643800",
    "end": "651519"
  },
  {
    "text": "bodies of these lists of things you could do you know uh conditional operator deletion or hidden variable",
    "start": "651519",
    "end": "658399"
  },
  {
    "text": "deletion super calling insert all sorts of things can can be done Cosmic gray doesn't do it's not exhaustive on this",
    "start": "658399",
    "end": "664720"
  },
  {
    "text": "list we have a substantially smaller list but this gives you an idea of the kinds of things people think we could be",
    "start": "664720",
    "end": "672600"
  },
  {
    "text": "doing so there are a lot of mutations that we can think of as language agnostic they don't have anything really to do with with python um you know",
    "start": "672600",
    "end": "679560"
  },
  {
    "text": "replacing constants a number with a different number or a string with a different string uh replacing um in this",
    "start": "679560",
    "end": "686560"
  },
  {
    "text": "case a variable with a a lital l being passed into a function um or is",
    "start": "686560",
    "end": "692200"
  },
  {
    "text": "generally replacing variables with literals replacing arithmetic operators",
    "start": "692200",
    "end": "698440"
  },
  {
    "text": "this is a good one also another interesting one because are there cases where doing that",
    "start": "698440",
    "end": "704000"
  },
  {
    "text": "replacement will lead to no functionality change yes of",
    "start": "704000",
    "end": "709160"
  },
  {
    "text": "course relational operator replacement of course all these kinds of things that we can do in lots and lots of languages",
    "start": "709160",
    "end": "715680"
  },
  {
    "text": "adding unary minuses or removing them right there are some that are more specific to",
    "start": "715680",
    "end": "722639"
  },
  {
    "text": "say object oriented languages right so maybe changing uh public to private or",
    "start": "722639",
    "end": "727720"
  },
  {
    "text": "um removing a method overload you know swapping Base Class orders this is this",
    "start": "727720",
    "end": "734639"
  },
  {
    "text": "uh I don't I I I suppose this might cause a problem in C++ but it certainly would cause a problem in Python right",
    "start": "734639",
    "end": "740959"
  },
  {
    "text": "python is very sensitive in fact to the order of um your base classes and so this could wreak havoc yes",
    "start": "740959",
    "end": "751079"
  },
  {
    "text": "access well if if I if I change something from private public to private and then try to compile but presumably",
    "start": "752839",
    "end": "758680"
  },
  {
    "text": "that has to be part of the phase of a um yeah yeah the other way around is",
    "start": "758680",
    "end": "763880"
  },
  {
    "text": "that's an interesting one maybe um yeah private to public yeah it's a good",
    "start": "763880",
    "end": "769880"
  },
  {
    "text": "question not I guess you just wouldn't have that modifier you would that would fall in the category of things just not to do um okay maybe some that apply to",
    "start": "769880",
    "end": "778480"
  },
  {
    "text": "you know functional programming languages you swapping the order of of pattern matching Clauses although this applies now to Python and other",
    "start": "778480",
    "end": "784880"
  },
  {
    "text": "languages that have taken these ideas on board so you can see that there you know some mutations broadly apply to all",
    "start": "784880",
    "end": "790279"
  },
  {
    "text": "languages some mutations apply to you know very specific bits of Technology",
    "start": "790279",
    "end": "796360"
  },
  {
    "text": "okay so again all the stuff you talked about is probably quite straightforward to think about but there are some",
    "start": "796360",
    "end": "802079"
  },
  {
    "text": "serious issues serious problems that we face when uh trying to do mutation testing in practice the theory is nice",
    "start": "802079",
    "end": "808440"
  },
  {
    "text": "and clean and simp simple which is what Hooks a lot of people it takes a long long long long time you know imagine so",
    "start": "808440",
    "end": "815399"
  },
  {
    "text": "how many places in your code have the potential to be mutated multiplied by",
    "start": "815399",
    "end": "820880"
  },
  {
    "text": "how long your test Suite takes your test Suite takes 30 seconds times 100,000",
    "start": "820880",
    "end": "826079"
  },
  {
    "text": "locations that could be changed you're looking at a long time right and then that can just grow from there um okay",
    "start": "826079",
    "end": "833199"
  },
  {
    "text": "another Picture Quiz does anybody recognize that experiment yeah the",
    "start": "833199",
    "end": "839440"
  },
  {
    "text": "Taro yes yeah the the tar dropper pitch drop experiment so this has dropped several times but never on camera yeah",
    "start": "839440",
    "end": "845880"
  },
  {
    "text": "there this poor Professor somewhere who's I think he's in Australia he's he's wanted to see this this is tar of",
    "start": "845880",
    "end": "851120"
  },
  {
    "text": "some sort some very viscous fluid that drips like every 17 years or something like that and he just like it's his life goal to see it drip and he just keeps",
    "start": "851120",
    "end": "857519"
  },
  {
    "text": "missing it um but it does slowly drip out of that container much like the rate",
    "start": "857519",
    "end": "863320"
  },
  {
    "text": "at which at at which mutation testing can do can can run at so what do what do we want to do about to that well",
    "start": "863320",
    "end": "870600"
  },
  {
    "text": "parallelization all right this is this is a a prime candidate for parallelization it is embarrassingly",
    "start": "870600",
    "end": "876639"
  },
  {
    "text": "parallel you take your your codebase you put it on a million machines you run your test Suite A million times in",
    "start": "876639",
    "end": "882440"
  },
  {
    "text": "parallel that can save you if you have access to a million machines which we all do in some sense these days but then",
    "start": "882440",
    "end": "888240"
  },
  {
    "text": "it becomes a question of money right can we do that um you can try techniques",
    "start": "888240",
    "end": "894440"
  },
  {
    "text": "related to baselining where you run one full mutation testing suite and then you try to keep track of of okay I've made",
    "start": "894440",
    "end": "900040"
  },
  {
    "text": "this change to my production code only run mutations over the parts of code that I think are relevant to that or",
    "start": "900040",
    "end": "906600"
  },
  {
    "text": "only run tests that I think are relevant to that and I see you shaking your head this is very heris right this is very",
    "start": "906600",
    "end": "913079"
  },
  {
    "text": "much a guessing game um not quite a guessing game but it's it's not a perfect approach but it can be a",
    "start": "913079",
    "end": "918759"
  },
  {
    "text": "practical way to approach this if you just do not have time or facility to run um to run the entire test Suite the",
    "start": "918759",
    "end": "926079"
  },
  {
    "text": "entire mutation testing Suite all the time so you try to only run test on modified code if you can make a guess at",
    "start": "926079",
    "end": "932440"
  },
  {
    "text": "what that modified code is or the modified code paths really through your code and only mutate code that you've",
    "start": "932440",
    "end": "938240"
  },
  {
    "text": "modified that's another approach and you can combine these it kind of does well very much relies on though having this initial Baseline having a a sense of",
    "start": "938240",
    "end": "945079"
  },
  {
    "text": "where I where I started from which hopefully was 100% yes I think uh the",
    "start": "945079",
    "end": "954040"
  },
  {
    "text": "coverage yes is that what they call it I can't I forget the term but yeah",
    "start": "954040",
    "end": "959199"
  },
  {
    "text": "coverage coverage can coverage you can tell it tells which test which right so",
    "start": "959199",
    "end": "966319"
  },
  {
    "text": "so yeah you can you can you can get this information okay yeah the only valid option is function okay okay take what",
    "start": "966319",
    "end": "974120"
  },
  {
    "text": "we can get I'm not about to go try and rewrite coverage um yeah so this this is a strategy you can try to apply and um",
    "start": "974120",
    "end": "981120"
  },
  {
    "text": "I've heard of it being applied um in practice and and and working so this this is I talking to people whove tried",
    "start": "981120",
    "end": "988759"
  },
  {
    "text": "to to do mutation testing who've thought about using it this is this is the main showstopper for them it is just not practical to do on a frequent",
    "start": "988759",
    "end": "995600"
  },
  {
    "text": "basis um or you could try to speed up your test Suite right do what we've been we've been told this for years now your",
    "start": "995600",
    "end": "1001560"
  },
  {
    "text": "test Suite should run super fast and of course that's really hard to do so maybe this is motivation to try to speed up",
    "start": "1001560",
    "end": "1006959"
  },
  {
    "text": "our test Suites okay another problem an easier",
    "start": "1006959",
    "end": "1012040"
  },
  {
    "text": "problem in many ways is incompetence detection so sometimes I make a change to a um to my code and it doesn't really",
    "start": "1012040",
    "end": "1021399"
  },
  {
    "text": "even run the test Suites so let's look at yeah so we have the problem that maybe our code has gone off into an",
    "start": "1021399",
    "end": "1026760"
  },
  {
    "text": "infinite Loop or maybe it's a very very long Loop so we all know who that is right that is it's Alan Turing right",
    "start": "1026760",
    "end": "1034120"
  },
  {
    "text": "right he played Allan touring in a movie I like that animation so if I want to know I've made a change to my code isn't",
    "start": "1034120",
    "end": "1039520"
  },
  {
    "text": "going to enter an infinite Loop he's told this that you will never be able to know that not generally speaking he",
    "start": "1039520",
    "end": "1044678"
  },
  {
    "text": "proved that right famously so and I think he basically said you you can't you cannot generally detect if you've",
    "start": "1044679",
    "end": "1050720"
  },
  {
    "text": "made code that's going into an infinite Loop you just have to kind of run it and put on your thinking cap um and a lot",
    "start": "1050720",
    "end": "1056880"
  },
  {
    "text": "this happens frequently in mutation testing",
    "start": "1056880",
    "end": "1062960"
  },
  {
    "text": "um wait on let me just go back here I should have a note here the",
    "start": "1062960",
    "end": "1068320"
  },
  {
    "text": "standard thing to do of course is just time out like say I know my test Suite ought to run in like 10 seconds so if it",
    "start": "1068320",
    "end": "1073520"
  },
  {
    "text": "takes a minute I'm just going to kill it and call that a um call that killed you know and say that's successful",
    "start": "1073520",
    "end": "1080840"
  },
  {
    "text": "okay this is a sneakier problem this this can be very language specific so oh here's a body of python code I apologize",
    "start": "1081039",
    "end": "1087039"
  },
  {
    "text": "if you're not a a python reader um there's a mutation I can make in here",
    "start": "1087039",
    "end": "1093640"
  },
  {
    "text": "which is difficult to impossible to detect with any any test that I can think of",
    "start": "1093640",
    "end": "1100280"
  },
  {
    "text": "this is from the python standard libraries documentation telling you how to use this class here a double-ended q",
    "start": "1100280",
    "end": "1107240"
  },
  {
    "text": "and this is a function for consuming an arbitrary interal you just want to force it to evaluate all of its values if it's",
    "start": "1107240",
    "end": "1112960"
  },
  {
    "text": "maybe it's a a lazy input iter iterator and it's telling you make a double-ended q that takes that iterator but the",
    "start": "1112960",
    "end": "1119520"
  },
  {
    "text": "double-ended Q's length Max maxes out at zero right so we're we're we're",
    "start": "1119520",
    "end": "1124880"
  },
  {
    "text": "leveraging the fact that this this Constructor here will just consume whatever you pass into it but it doesn't",
    "start": "1124880",
    "end": "1130720"
  },
  {
    "text": "consume any extra memory so it's it's a it's a way to consume iterables if you need to force their",
    "start": "1130720",
    "end": "1136520"
  },
  {
    "text": "evaluation cosmic ray is going to look at this and go oh I see you got a nice zero there after Max Len and I'm going",
    "start": "1136520",
    "end": "1142559"
  },
  {
    "text": "to make that a one or make it a 10 right functionally this is going to be exactly",
    "start": "1142559",
    "end": "1148360"
  },
  {
    "text": "the same the only way that you could tell that there's any difference is",
    "start": "1148360",
    "end": "1153960"
  },
  {
    "text": "maybe monitor memory usage for that extra 10 bytes or whatever that it's allocating it's it's conceivably",
    "start": "1153960",
    "end": "1161840"
  },
  {
    "text": "possible it's after all it's just a computer but it's a kind of test that you would never sensibly write right so",
    "start": "1161840",
    "end": "1169280"
  },
  {
    "text": "there's a whole class of things like this um we call equivalent mutants where",
    "start": "1169280",
    "end": "1174480"
  },
  {
    "text": "I've make I made a mutation and it's a sensible mutation in some ways but it is not really detectable in any practical",
    "start": "1174480",
    "end": "1179640"
  },
  {
    "text": "way um and this is this is one example and I I like this example because it comes from you know a very authoritative",
    "start": "1179640",
    "end": "1186600"
  },
  {
    "text": "um Source the python standard Library documentation um yeah I don't know what you would do about this except you just",
    "start": "1186600",
    "end": "1192679"
  },
  {
    "text": "tell your tool not to mutate that you have to just tell it not to touch that",
    "start": "1192679",
    "end": "1198080"
  },
  {
    "text": "touch that zero right okay I should have shown that before",
    "start": "1198080",
    "end": "1203280"
  },
  {
    "text": "okay it's another interesting one in in another pythonism um you may have seen",
    "start": "1203280",
    "end": "1209760"
  },
  {
    "text": "this kind of code in py files and what it says is if this magic variable Dunder",
    "start": "1209760",
    "end": "1215280"
  },
  {
    "text": "name is equal to that string Dunder main then I do something special and this condition only holds when your when your",
    "start": "1215280",
    "end": "1221520"
  },
  {
    "text": "module is being run as the top level module right when it's the main driver which it will never be in a test Suite",
    "start": "1221520",
    "end": "1228240"
  },
  {
    "text": "right so if there's complicated code in this body that gets mutated your test Suite is really completely incapable of",
    "start": "1228240",
    "end": "1235440"
  },
  {
    "text": "detecting it because this will never be run in that situation so it's another situation where you need to somehow tell",
    "start": "1235440",
    "end": "1240679"
  },
  {
    "text": "your tool please just don't mutate anything inside there yes thing you want if you just change name To None or zero",
    "start": "1240679",
    "end": "1247559"
  },
  {
    "text": "or to anything yeah and another good point yeah that because condition is always false yeah yeah yes can you um",
    "start": "1247559",
    "end": "1257400"
  },
  {
    "text": "guide it by coverage guided on on on what yeah so this is similar to what he was saying a second",
    "start": "1257400",
    "end": "1263400"
  },
  {
    "text": "ago we can we can point coverage at our code and then have a sense of what drives what and see that this is maybe",
    "start": "1263400",
    "end": "1268480"
  },
  {
    "text": "never run yeah that's another way to use coverage um coverage analysis yeah um",
    "start": "1268480",
    "end": "1274679"
  },
  {
    "text": "but the the it's these these Thorns right you look at this nice graceful theory of mutation testing and then there's all these just these gut punches",
    "start": "1274679",
    "end": "1280960"
  },
  {
    "text": "you get about things that are hard and that make you not want to do it okay so",
    "start": "1280960",
    "end": "1287400"
  },
  {
    "text": "that that's that's the theory of mutation testing and we are doing well on time so that brings us to cosmic ray",
    "start": "1287400",
    "end": "1295480"
  },
  {
    "text": "right this is the the tool we've been working on for a long time at this point I I got I learned about mutation testing from Seb Rose at acq or some some London",
    "start": "1295480",
    "end": "1303360"
  },
  {
    "text": "conference at one point but he got me hooked and I thought I I could write a tool to do this right how hard could it",
    "start": "1303360",
    "end": "1309080"
  },
  {
    "text": "possibly be and that was 10 years ago um the tool is fairly capable at this point but it doesn't get a lot of attention",
    "start": "1309080",
    "end": "1315159"
  },
  {
    "text": "these days we don't have time to put into it the K all the",
    "start": "1315159",
    "end": "1320480"
  },
  {
    "text": "Mage I don't think that I I think I made that that slide myself yeah I think",
    "start": "1320480",
    "end": "1325520"
  },
  {
    "text": "seb's seb's I've seen it before maybe um I've certainly given this presentation before so um so if if you want if you",
    "start": "1325520",
    "end": "1334559"
  },
  {
    "text": "want solid proof that cosmic ray is a good tool um here's a what used to be",
    "start": "1334559",
    "end": "1341000"
  },
  {
    "text": "Twitter X conversation about mutation testing somebody says mutation testing sounds cool somebody else says any",
    "start": "1341000",
    "end": "1347080"
  },
  {
    "text": "recommendations and somebody says da da but the python 1 cosmic ray has decent",
    "start": "1347080",
    "end": "1352960"
  },
  {
    "text": "design okay on Twitter this is you know how Twitter normally is right so this this is incredible to get some some love",
    "start": "1352960",
    "end": "1359480"
  },
  {
    "text": "in in in that uh that cesspit of discussion um I like to think the design is good um in some ways I've used cosmic",
    "start": "1359480",
    "end": "1366559"
  },
  {
    "text": "ray as a testing ground for completely orthogonal things I want to try a new design approach I want to try new",
    "start": "1366559",
    "end": "1371640"
  },
  {
    "text": "tooling cosmic ray has been a Sandbox for that so I think it's evolved to a pretty good design um",
    "start": "1371640",
    "end": "1379720"
  },
  {
    "text": "there are a number of implementation challenges we needed to consider when we started writing this we had to you know we're building a kind of Tower of Babel",
    "start": "1379720",
    "end": "1386720"
  },
  {
    "text": "here um we have to somehow figure out which mutations to make I've got a bunch of",
    "start": "1386720",
    "end": "1392080"
  },
  {
    "text": "python code and I've got a test suite and I have to just what do I do to even figure out you know just from the from",
    "start": "1392080",
    "end": "1397240"
  },
  {
    "text": "the get-go how do I mechanize that automate that I then have to somehow make these mutations one at a time right",
    "start": "1397240",
    "end": "1403679"
  },
  {
    "text": "I I can't hire somebody to I could but you can't really hire somebody to go and do that you need the machine to do it so how what's the technology I need to",
    "start": "1403679",
    "end": "1409960"
  },
  {
    "text": "apply to make that work I then need to run the test Suite against each mutant that's not so difficult although I tried",
    "start": "1409960",
    "end": "1416279"
  },
  {
    "text": "some very complicated approaches at first which are dumb um and all the time I have to keep in mind that there's all",
    "start": "1416279",
    "end": "1422480"
  },
  {
    "text": "these other complexities that we talked about it takes a long time that there are equivalent mutants that there is",
    "start": "1422480",
    "end": "1427840"
  },
  {
    "text": "these issues we need to to deal with so this was you know these were the first order issues we had to deal with when we",
    "start": "1427840",
    "end": "1433720"
  },
  {
    "text": "set out to to make the tool so we'll look at how we address all of these",
    "start": "1433720",
    "end": "1439520"
  },
  {
    "text": "um at the heart of what six um Cosmic gray does are operators excuse me",
    "start": "1439520",
    "end": "1445360"
  },
  {
    "text": "conceptually operators are quite simple they are the things that know how to make a particular change right they know",
    "start": "1445360",
    "end": "1451679"
  },
  {
    "text": "that oh if I see a plus I can make that into a minus or if I see a plus I can make it into a star um they have two",
    "start": "1451679",
    "end": "1459960"
  },
  {
    "text": "primary jobs identify all the places in your code where they could make a change so the very first thing Cosmic gry does",
    "start": "1459960",
    "end": "1465960"
  },
  {
    "text": "is it just scans your code with all the operators it makes a list of all the things he could potentially do and each",
    "start": "1465960",
    "end": "1471120"
  },
  {
    "text": "operator um reports back operators are getting some to some of the details",
    "start": "1471120",
    "end": "1476760"
  },
  {
    "text": "there provided as plugin so you can write your own operators if you have maybe domain specific mutations you want",
    "start": "1476760",
    "end": "1481799"
  },
  {
    "text": "to make if you don't like the way we've written ours you can add and remove as you as you",
    "start": "1481799",
    "end": "1487279"
  },
  {
    "text": "desire the second job of course of an operator then is to on request go and",
    "start": "1487279",
    "end": "1492640"
  },
  {
    "text": "make the change so cosmic ray will scan your whole body of code make a big list of what to do and then one at a time",
    "start": "1492640",
    "end": "1498360"
  },
  {
    "text": "refer back to the operators and say okay now go do the thing you've told me you know how to",
    "start": "1498360",
    "end": "1504080"
  },
  {
    "text": "do yeah it's in specifically its job is not to decide when to do that mutation that's up to the orchestrating Machinery",
    "start": "1504080",
    "end": "1511399"
  },
  {
    "text": "inside the rest of the system so here's an API if you want to",
    "start": "1511399",
    "end": "1517159"
  },
  {
    "text": "go out and write your own cosmic ray operator this is pretty much what you have to do you have to write a function",
    "start": "1517159",
    "end": "1522600"
  },
  {
    "text": "that calculates all the mutation positions for a particular as node we'll talk abouts in a bit uh you need to",
    "start": "1522600",
    "end": "1529120"
  },
  {
    "text": "write a mutate function which actually does the mutation on that as node worth",
    "start": "1529120",
    "end": "1534240"
  },
  {
    "text": "noting is it's each and you can kind of get this from the doc strings and so forth is that each as node could",
    "start": "1534240",
    "end": "1540039"
  },
  {
    "text": "potentially be modified multiple times um there are that is to handle some",
    "start": "1540039",
    "end": "1545720"
  },
  {
    "text": "weird edge cases I call them edge cases weird cases in the in the way Python's is put together uh but it turns out that",
    "start": "1545720",
    "end": "1552039"
  },
  {
    "text": "this is this is this is necessary um so you'll be told later on then you need to go mutate that node and at that index",
    "start": "1552039",
    "end": "1559200"
  },
  {
    "text": "the nth change you said you could make there we've added recently support for a",
    "start": "1559200",
    "end": "1565640"
  },
  {
    "text": "notion of arguments that you can pass to operators to control the way they work that's still I'm still on the fence",
    "start": "1565640",
    "end": "1572039"
  },
  {
    "text": "about whether I like that or not um and then this is kind of cool your operator can tell can Pro needs to actually",
    "start": "1572039",
    "end": "1578559"
  },
  {
    "text": "provide a list of examples of what it's going to do and we plug these in our test Suite to the cosmic rate test Suite",
    "start": "1578559",
    "end": "1584640"
  },
  {
    "text": "to try to at least verify that the mutation operators are not insane if they say see the example would be like",
    "start": "1584640",
    "end": "1589760"
  },
  {
    "text": "I'm going to I'll take code that looks like this to code that looks like this and then we'll actually use the operator to do that to verify that it's not lying",
    "start": "1589760",
    "end": "1596600"
  },
  {
    "text": "about what it can do and that uh provides good documentation as well so tests and",
    "start": "1596600",
    "end": "1602360"
  },
  {
    "text": "documentation um as I mentioned we work on an abstract syntax tree we don't work directly on the code and we offload all",
    "start": "1602360",
    "end": "1610480"
  },
  {
    "text": "the heavy lifting to parso which is an amazing Library it has saved me so much",
    "start": "1610480",
    "end": "1615520"
  },
  {
    "text": "time um I'm sure everybody's reasonably familiar with the idea of an though it takes code like 1 + 2 * 3 and produces",
    "start": "1615520",
    "end": "1623600"
  },
  {
    "text": "some in memory representation that is manipulable a bunch of objects that I can examine to figure out what the code",
    "start": "1623600",
    "end": "1629200"
  },
  {
    "text": "is going to do and it's these things these nodes that Paro produces that we Traverse and then mutate and then turn",
    "start": "1629200",
    "end": "1636840"
  },
  {
    "text": "back into code okay so that's yeah so we use Paro elements for",
    "start": "1636840",
    "end": "1644000"
  },
  {
    "text": "generating ests from python source code source code files and then taking modifieds and writing those",
    "start": "1644000",
    "end": "1651279"
  },
  {
    "text": "back out to dis this is another superpower that parso has is um its ability to take an as and",
    "start": "1651279",
    "end": "1657720"
  },
  {
    "text": "produce the the exact code we've always wanted it to be able to produce it does a very good job of this um this points",
    "start": "1657720",
    "end": "1665240"
  },
  {
    "text": "to a subtle limitation subtle depending on what kind of code you write of cosmic rays it only works on pure python code",
    "start": "1665240",
    "end": "1671559"
  },
  {
    "text": "of course python programs can involve C extension rust extensions syon all sorts",
    "start": "1671559",
    "end": "1676679"
  },
  {
    "text": "of stuff that we just do not handle um in fact we probably do not handle them very gracefully either there going to be",
    "start": "1676679",
    "end": "1682000"
  },
  {
    "text": "times I bet when Cosmic rate just kind of freaks out when it runs into a module it doesn't recognize it's open work",
    "start": "1682000",
    "end": "1689000"
  },
  {
    "text": "there um but yeah we lean heavily on parso so putting all of this together",
    "start": "1689000",
    "end": "1694240"
  },
  {
    "text": "first thing we do when we run the initialization phase of a cosmic rate test run is we generate uh an a from a",
    "start": "1694240",
    "end": "1700519"
  },
  {
    "text": "source file we then use our built-in oper our operators in Cosmic rid to actually calculate the mutation sites by",
    "start": "1700519",
    "end": "1707080"
  },
  {
    "text": "scanning the as we then one by one mutate the and then use Paro again to write that converted a",
    "start": "1707080",
    "end": "1715039"
  },
  {
    "text": "out to disk and then of course I I do need to make this explicit we then undo",
    "start": "1715039",
    "end": "1720200"
  },
  {
    "text": "that of course between each mutation we go back to the original code each time",
    "start": "1720200",
    "end": "1726840"
  },
  {
    "text": "yeah so in summary we use Paro to transform Source trees into ests we Implement whatever operators you want we",
    "start": "1726840",
    "end": "1734039"
  },
  {
    "text": "cosmic ray comes with a bunch but you can add your own if you want to uh which detects and then mutate the code and we",
    "start": "1734039",
    "end": "1740039"
  },
  {
    "text": "use as Paro to Dos back into code um say Paro 100 times here Paro is really cool",
    "start": "1740039",
    "end": "1746679"
  },
  {
    "text": "if you're working with python code and you need to parse it that's the way to go I've been super pleased with it I",
    "start": "1746679",
    "end": "1751880"
  },
  {
    "text": "think I mean it's it's an underlying technology for lots of linters and stuff like that so it's quite good it's it's",
    "start": "1751880",
    "end": "1757440"
  },
  {
    "text": "been tested very very broadly um okay figuring out what to",
    "start": "1757440",
    "end": "1762679"
  },
  {
    "text": "mutate we've given a high level example of that cosmic ray operates at the B on the basis of python packages right so I",
    "start": "1762679",
    "end": "1769640"
  },
  {
    "text": "I make my configuration to tell Cosmic gr what to do and I point it at a single package that may be they have a bunch of",
    "start": "1769640",
    "end": "1774799"
  },
  {
    "text": "subm modules inside of it but I it works on a on a single package route so the user will specify a single package",
    "start": "1774799",
    "end": "1781120"
  },
  {
    "text": "that's going to get mutated cosm cray will scan that package and all of its subpackages down to the the leaves um as",
    "start": "1781120",
    "end": "1788039"
  },
  {
    "text": "I mentioned there are limitations what kinds of modules it can mutate you know anything exotic that's not just pure python code it'll break um but you can",
    "start": "1788039",
    "end": "1795519"
  },
  {
    "text": "also tell Cosmic rate to ignore certain parts of the the package tree so if if",
    "start": "1795519",
    "end": "1801960"
  },
  {
    "text": "you know you've got some branch of packages that just aren't thoroughly tested you can just tell Cosmic gray",
    "start": "1801960",
    "end": "1807039"
  },
  {
    "text": "please ignore these um with pretty fine grain granularity and this is this is an",
    "start": "1807039",
    "end": "1812960"
  },
  {
    "text": "important tool for letting people test the say important stuff in their system",
    "start": "1812960",
    "end": "1818799"
  },
  {
    "text": "the stuff that really does benefit from being highly tested maybe the the the web server that shows the cat pictures",
    "start": "1818799",
    "end": "1824159"
  },
  {
    "text": "is not that important but the part that runs the pacemaker that's really important so you want to be able to bifurcate your test efforts there it'd",
    "start": "1824159",
    "end": "1832000"
  },
  {
    "text": "be a weird program right that had a web server with cat pictures and a pacemaker in it but maybe it",
    "start": "1832000",
    "end": "1838480"
  },
  {
    "text": "exists and then we run tests right testing overview is is quite simple we figure out what to mutate we create a",
    "start": "1838480",
    "end": "1844640"
  },
  {
    "text": "mutant that is make the change on dis we write that mutant down to dis all this is happening in in a very natural",
    "start": "1844640",
    "end": "1851519"
  },
  {
    "text": "organic python environment there's not some sophisticated virtualized python",
    "start": "1851519",
    "end": "1856720"
  },
  {
    "text": "environment or something like that it's just we just modify your code on disk it's as dumb as that so you never have to think hard about some alternative",
    "start": "1856720",
    "end": "1865399"
  },
  {
    "text": "Universe in which mutation testing is occurring it occurs very much like your normal test Suites would run like your normal development environment is put",
    "start": "1865399",
    "end": "1872279"
  },
  {
    "text": "together we run whatever your test command happens to be it's just a a shell command so generally it's py test",
    "start": "1872279",
    "end": "1878840"
  },
  {
    "text": "right or maybe it's python unit test or whatever testing tool you use you just tell us the command to run and we run",
    "start": "1878840",
    "end": "1884919"
  },
  {
    "text": "it then write back the original code and this is all done in a separate process",
    "start": "1884919",
    "end": "1892840"
  },
  {
    "text": "right so that if some mutation occurs the main reason for this is is uh",
    "start": "1892840",
    "end": "1897919"
  },
  {
    "text": "sandboxing so if some if we make a mutation to the code and it um causes some weird new Behavior to",
    "start": "1897919",
    "end": "1905720"
  },
  {
    "text": "occur maybe you inserted a divide by zero into a um you know to a c files",
    "start": "1905720",
    "end": "1911320"
  },
  {
    "text": "call that is now affecting code and it breaks everything um a seg faal is not going to bring down the actual testing",
    "start": "1911320",
    "end": "1917039"
  },
  {
    "text": "process that's the main reason we initially at least ran these in a sub",
    "start": "1917039",
    "end": "1922159"
  },
  {
    "text": "process um yeah we talked about uh how to deal with incompetent mutants that",
    "start": "1922159",
    "end": "1927200"
  },
  {
    "text": "have potentially entered infinite Loops um two basic alternatives are an absolute timeout or a timeout based on a",
    "start": "1927200",
    "end": "1934159"
  },
  {
    "text": "baseline so most of the time you know if you know your test Suite should run at about 10 seconds you just pick a bigger",
    "start": "1934159",
    "end": "1940320"
  },
  {
    "text": "number than 10 seconds and put that in your configuration you can also ask Cosmic rate to first run the test Suite",
    "start": "1940320",
    "end": "1947000"
  },
  {
    "text": "on unmutated code record how long that takes and then it'll pick a bigger number than that as the as the timeout",
    "start": "1947000",
    "end": "1954039"
  },
  {
    "text": "so you can ask it to be automated but generally folks know how fast their test Suite ought to run this is not perfect right there are",
    "start": "1954039",
    "end": "1961360"
  },
  {
    "text": "times when maybe you've made a change that it's just going to make your program run longer um and then die",
    "start": "1961360",
    "end": "1967279"
  },
  {
    "text": "naturally uh or survive for that matter and we we really can't know that it's a",
    "start": "1967279",
    "end": "1973559"
  },
  {
    "text": "hard problem the rest of the tech is is okay interesting but not not critical this is",
    "start": "1973559",
    "end": "1980240"
  },
  {
    "text": "getting down into some of the the python guts um we use a system called stor for loading up our plugins this is very very",
    "start": "1980240",
    "end": "1986960"
  },
  {
    "text": "commonly used in the um in the python world it's well understood works really",
    "start": "1986960",
    "end": "1992159"
  },
  {
    "text": "well um this allows us to ship you know a bunch of you know plugins with cosmic",
    "start": "1992159",
    "end": "1997799"
  },
  {
    "text": "ray but also let other people provide their own plugins just by installing their own package so seor Works based on",
    "start": "1997799",
    "end": "2005600"
  },
  {
    "text": "individual python packages contributing to a named entry point um so to speak it's using their terminology so if you",
    "start": "2005600",
    "end": "2012760"
  },
  {
    "text": "want you can provide all the operators you want we ALS we have operators sorry plugins we have plugins for operators as",
    "start": "2012760",
    "end": "2018760"
  },
  {
    "text": "well as what we call Distributors Distributors are strategy for sending workout in in in um in parallel right so",
    "start": "2018760",
    "end": "2026600"
  },
  {
    "text": "the the standard distributor we use is called local it just runs one test local on your machine but we also have the",
    "start": "2026600",
    "end": "2033639"
  },
  {
    "text": "HTTP uh distributor and the idea there is that on whatever many machines you want you run these little listener",
    "start": "2033639",
    "end": "2039639"
  },
  {
    "text": "programs Each of which has its own copy of the code and then we will distribute work to those and then you can um run",
    "start": "2039639",
    "end": "2048398"
  },
  {
    "text": "faster and then maybe you want to write one that's based on celery or some you know HPC system or something and you can",
    "start": "2048399",
    "end": "2053679"
  },
  {
    "text": "do that and plug it into to cosmic ray and it should just work okay we we use SQ light and a",
    "start": "2053679",
    "end": "2062118"
  },
  {
    "text": "little SQL Alchemy layer on top of that for storing the um the work manifest so",
    "start": "2062119",
    "end": "2067320"
  },
  {
    "text": "I mentioned that at the beginning of a cosmic array run we scan the entire body of code to figure out what the work coming up is and we just write every one",
    "start": "2067320",
    "end": "2073560"
  },
  {
    "text": "of those as a line into a database um and then the actual execution phase is just marching down the lines in that",
    "start": "2073560",
    "end": "2079839"
  },
  {
    "text": "database looking for any line that doesn't have a result in it already uh this is um it's super convenient right",
    "start": "2079839",
    "end": "2086960"
  },
  {
    "text": "it's good having a little database I can write to it also has the immeasurably valuable quality that I can start stop",
    "start": "2086960",
    "end": "2094599"
  },
  {
    "text": "and restart a cosmic ray run and it will pick up where it left off very naturally because Cosmic gray it's its algorithm",
    "start": "2094599",
    "end": "2100359"
  },
  {
    "text": "is dumb it looks at the database and goes find a row that doesn't have a result in it and then that becomes the next thing I run as results arrive we",
    "start": "2100359",
    "end": "2107280"
  },
  {
    "text": "stick them in the database and that way we can keep track in a very natural way of where we are in the run right we use",
    "start": "2107280",
    "end": "2115119"
  },
  {
    "text": "I'm sorry I don't have this set up so I can see my next slide so I'm sometimes getting ahead of myself yeah so we keep track of the work to be done in a",
    "start": "2115119",
    "end": "2121280"
  },
  {
    "text": "database and we only schedule work items that don't have results and this allows Interruption and resumption of runs",
    "start": "2121280",
    "end": "2128359"
  },
  {
    "text": "and it's a natural place for the results that's where we keep track of killed survived incompetent and so forth and",
    "start": "2128359",
    "end": "2134640"
  },
  {
    "text": "the output from the test runs we use click if you're writing a command line interface in Python and",
    "start": "2134640",
    "end": "2141359"
  },
  {
    "text": "you're not using click you're doing it the wrong way I I feel quite confident in saying that it's an amazing tool um",
    "start": "2141359",
    "end": "2147040"
  },
  {
    "text": "and we use it for everything at 60 North uh it's it's just great um someday",
    "start": "2147040",
    "end": "2152160"
  },
  {
    "text": "somebody write something better but for now this is the king it's really good stuff so if you've never run into it and",
    "start": "2152160",
    "end": "2157720"
  },
  {
    "text": "you're using any other package for writing command line interfaces I suggest at least exploring this to see if this will improve your",
    "start": "2157720",
    "end": "2165079"
  },
  {
    "text": "life yeah it's part of the pallets project um there's some more exotic",
    "start": "2165079",
    "end": "2172280"
  },
  {
    "text": "technology that can be applied um to cosmic ray one of them is a tool we've",
    "start": "2172280",
    "end": "2177920"
  },
  {
    "text": "written called Spore Spore is uh means um to track in Norwegian uh and the idea",
    "start": "2177920",
    "end": "2186200"
  },
  {
    "text": "of spor well let's motivate it a bit we have these problems that we talked about",
    "start": "2186200",
    "end": "2191599"
  },
  {
    "text": "earlier of code that can never be reached right one way to deal with those would be like to use comments pragma",
    "start": "2191599",
    "end": "2197760"
  },
  {
    "text": "comments that say you know comment please don't mutate this like you would do for a lot of linting tools and stuff",
    "start": "2197760",
    "end": "2202800"
  },
  {
    "text": "you know to turn off linting rules and stuff um that's that's how mut mut work",
    "start": "2202800",
    "end": "2207920"
  },
  {
    "text": "that's how mut mut works and we have support for that as well in cosmic ray but I've always kind of hated those kinds of tools because what if I need to",
    "start": "2207920",
    "end": "2215319"
  },
  {
    "text": "put two things on a line suddenly there's it it's like it's just ugly it's a hack it's always felt like a hack to me no matter how well it actually works",
    "start": "2215319",
    "end": "2221880"
  },
  {
    "text": "in practice I just don't like it right so this is my personal aesthetic coming up and I said okay I was at at a",
    "start": "2221880",
    "end": "2228599"
  },
  {
    "text": "conference talking with um David mckever you probably met him very very smart guy super nerd and we start start thinking",
    "start": "2228599",
    "end": "2235640"
  },
  {
    "text": "like well can we just have an external file that says that points into the file it says you know don't don't mutate",
    "start": "2235640",
    "end": "2242000"
  },
  {
    "text": "apply some data with that line in that file and of course that's that's really easy to do the problem is how do you",
    "start": "2242000",
    "end": "2248480"
  },
  {
    "text": "keep that file up to date with changes in the code right so we thought real",
    "start": "2248480",
    "end": "2253599"
  },
  {
    "text": "hard about it and I set off to work and ended up writing this tool which attempts to do that it allows you to have an external file with metadata in",
    "start": "2253599",
    "end": "2260240"
  },
  {
    "text": "it that refers into other files and then as your code changes you can run Spore",
    "start": "2260240",
    "end": "2266319"
  },
  {
    "text": "and it will try to realign these anchors we call them with um with the code in",
    "start": "2266319",
    "end": "2272440"
  },
  {
    "text": "there that's a whole other talk in of itself actually very interesting talk but um so there is experimental plugin",
    "start": "2272440",
    "end": "2278960"
  },
  {
    "text": "so to speak for um a filter technically for cosmic ray that um will run Sport",
    "start": "2278960",
    "end": "2284720"
  },
  {
    "text": "and try to and and and figure out places that it's not supposed to be mutating and it works but it's not very well tested and there may be some bit rot in",
    "start": "2284720",
    "end": "2291720"
  },
  {
    "text": "the program but it's a neat idea um and it uses some really cool algorithms from",
    "start": "2291720",
    "end": "2296920"
  },
  {
    "text": "genetics research and stuff there's some neat computer science involved it's it's a it's another one of these kind of engaging projects that we'll never make",
    "start": "2296920",
    "end": "2304359"
  },
  {
    "text": "never pay the rent but will'll always be fun to work on so this exists so you can try it out and you can use Spore for all sorts of other stuff the idea really was",
    "start": "2304359",
    "end": "2310800"
  },
  {
    "text": "to make a general purpose tool that would allow people to do exactly that associate data with source code or",
    "start": "2310800",
    "end": "2317480"
  },
  {
    "text": "really any text file um without having to embed it in the source code and then you can track it at G or whatever like",
    "start": "2317480",
    "end": "2323160"
  },
  {
    "text": "that it's it's a neat idea um so this is the the fundamental",
    "start": "2323160",
    "end": "2328359"
  },
  {
    "text": "idea okay so there is as ever a mountain of remaining work um oop sorry uh",
    "start": "2328359",
    "end": "2335839"
  },
  {
    "text": "improved metadata anchoring this is something related to Spore but better ways of putting signals in the code or",
    "start": "2335839",
    "end": "2342839"
  },
  {
    "text": "somewhere telling the tool what to do and what not to do guiding it with metadata support for more kinds of",
    "start": "2342839",
    "end": "2347920"
  },
  {
    "text": "modules there's no reason we couldn't in principle work with say scyon code um it would be more difficult to work with C++",
    "start": "2347920",
    "end": "2353880"
  },
  {
    "text": "code or rust um that just feels very very much different to me but there are",
    "start": "2353880",
    "end": "2359119"
  },
  {
    "text": "certain format you certain uh dialects of code that we could probably work with um quite",
    "start": "2359119",
    "end": "2365079"
  },
  {
    "text": "naturally better integration with coverage test as has been discussed here this this is something that it it's it's",
    "start": "2365079",
    "end": "2370720"
  },
  {
    "text": "kind of obvious right I just you know there's only 24 hours in a day so it hasn't received any love",
    "start": "2370720",
    "end": "2377599"
  },
  {
    "text": "um more operators um we have a good swath of operators that have proving",
    "start": "2377599",
    "end": "2383680"
  },
  {
    "text": "themselves quite robust and effective but there's always more uh especially as the language changes you P the last time",
    "start": "2383680",
    "end": "2390160"
  },
  {
    "text": "I really seriously wrot operators was probably in Python 39 the language has evolved 13 rc1 just came out so there's",
    "start": "2390160",
    "end": "2397440"
  },
  {
    "text": "new language features that just aren't represented in our list of operators uh uh match for example is not not",
    "start": "2397440",
    "end": "2404960"
  },
  {
    "text": "accounted for I believe I think there's one more higher order operators this is a this is a something that comes to us",
    "start": "2404960",
    "end": "2412400"
  },
  {
    "text": "from the research end of things and I don't know a whole lot about the the theory but the idea fundamentally is you",
    "start": "2412400",
    "end": "2418720"
  },
  {
    "text": "you make multiple oper changes at once and then if if those work then you can",
    "start": "2418720",
    "end": "2424560"
  },
  {
    "text": "determine if if the mutant um is killed k then you can presume that those are all somehow okay and if it survives then",
    "start": "2424560",
    "end": "2430720"
  },
  {
    "text": "you need to BCT down to the the one that actually caused the failure again I'm waving my hands here because the details",
    "start": "2430720",
    "end": "2436040"
  },
  {
    "text": "of it are I just know this exists but this is something that is supposed to help deal with the the runtime um growth",
    "start": "2436040",
    "end": "2443839"
  },
  {
    "text": "that you can by running more mut mutations at once uh you can reduce the",
    "start": "2443839",
    "end": "2449079"
  },
  {
    "text": "amount of work you have to do okay that was Theory that's implementation I want to show you that it actually does work",
    "start": "2449079",
    "end": "2455000"
  },
  {
    "text": "from a real project that we worked on at 60 North it's a this is uh oil reservoir",
    "start": "2455000",
    "end": "2461480"
  },
  {
    "text": "modeling software our history is in oil and gas so this is It's a pretty picture right um a lot of data in the oil and",
    "start": "2461480",
    "end": "2467319"
  },
  {
    "text": "gas world is stored in a format called segy which is not a format it is like 30 formats but we wrote sepy to parse these",
    "start": "2467319",
    "end": "2475839"
  },
  {
    "text": "files because we needed to for some reason um segy the format comes from way back",
    "start": "2475839",
    "end": "2482800"
  },
  {
    "text": "in the day and it used to run on these old IBM system 3 360 systems and from",
    "start": "2482800",
    "end": "2489640"
  },
  {
    "text": "that Heritage you have a special floating Point format right the IBM",
    "start": "2489640",
    "end": "2495960"
  },
  {
    "text": "floating Point format I don't know what its official name is but we at some point realized we had to be able to deal",
    "start": "2495960",
    "end": "2501720"
  },
  {
    "text": "with those um those kinds of floating Point numbers in the files and so we had to write this function IBM to I to turn",
    "start": "2501720",
    "end": "2508079"
  },
  {
    "text": "them into real floats God's floats right um and that's that's what this does and",
    "start": "2508079",
    "end": "2513440"
  },
  {
    "text": "you look at that it looks okay it works right this will pass every test you throw at it but it has",
    "start": "2513440",
    "end": "2520839"
  },
  {
    "text": "a an inefficiency in it that we would never have found without without Cosmic gr inefficiency that might matter but",
    "start": "2520839",
    "end": "2529200"
  },
  {
    "text": "it's interesting that it was found at all um there's a test in the test suite",
    "start": "2529200",
    "end": "2534560"
  },
  {
    "text": "for this that passes in all zeros and expects that to come out as zero so all",
    "start": "2534560",
    "end": "2540079"
  },
  {
    "text": "zeros in you 0 is going to come out unchanged 000000 0 we ran we ran cosmic",
    "start": "2540079",
    "end": "2546640"
  },
  {
    "text": "ray on this and it flagged this here so we' broken up the input big Indian bytes into",
    "start": "2546640",
    "end": "2554280"
  },
  {
    "text": "individual bytes and Cosmic re has said well it seems that if I mutate that operator or I take it away I think is",
    "start": "2554280",
    "end": "2560079"
  },
  {
    "text": "what it did nothing changes you had a Survivor and it just turns out the",
    "start": "2560079",
    "end": "2565520"
  },
  {
    "text": "relationship between IBM and i e floating point is that if um if it's all",
    "start": "2565520",
    "end": "2571319"
  },
  {
    "text": "zeros then it then a and a is always guaranteed to be equal to B in that case and this is an unnecessary check in this",
    "start": "2571319",
    "end": "2578040"
  },
  {
    "text": "optimization here so we're we're trying to speed things up by by detecting zero and then returning zero but it turns out",
    "start": "2578040",
    "end": "2584280"
  },
  {
    "text": "that this is unnecessary you can make any change you want here let's see I think we have a",
    "start": "2584280",
    "end": "2590640"
  },
  {
    "text": "better yeah so cosmic ray made some kind of change like this oh no here we",
    "start": "2590640",
    "end": "2597119"
  },
  {
    "text": "started using um yeah we modified the test as a result using hypothesis which is another amazing tool another shout",
    "start": "2597119",
    "end": "2603079"
  },
  {
    "text": "out to David mckever an incredible tool um Cosmic cray told us you don't need that",
    "start": "2603079",
    "end": "2608599"
  },
  {
    "text": "a equals and we said okay we took that away and we updated this test to pump in all the integers from 0 to 255 as the",
    "start": "2608599",
    "end": "2615280"
  },
  {
    "text": "first bite here and you always get zero out as long as these are all zeros cosmic ray had detected that we had an",
    "start": "2615280",
    "end": "2621040"
  },
  {
    "text": "unnecessary bit of um analysis going on in our function okay that's you know",
    "start": "2621040",
    "end": "2626839"
  },
  {
    "text": "it's not going to save the world but it's kind of cool and it gives you an idea that this can actually provide some practical results with very little",
    "start": "2626839",
    "end": "2632880"
  },
  {
    "text": "effort really as long as you have the time to do it it's really just pushing a button",
    "start": "2632880",
    "end": "2638200"
  },
  {
    "text": "so right demo let's see if we can make this work thank you thank you um you",
    "start": "2638200",
    "end": "2643599"
  },
  {
    "text": "should talk to alexand also seg oh okay yeah there's a",
    "start": "2643599",
    "end": "2651160"
  },
  {
    "text": "couple floating around um yeah yeah I've I've I think I had to use that at some",
    "start": "2651160",
    "end": "2658160"
  },
  {
    "text": "point are they from um are they from Ecuador yeah yeah me to oh okay then I I",
    "start": "2658160",
    "end": "2663440"
  },
  {
    "text": "have certainly worked with that because okay sorry total total other project I had to load some yeah yeah um yeah I I",
    "start": "2663440",
    "end": "2672960"
  },
  {
    "text": "think I have some bug reports actually filed not bug suggestions right so I'm",
    "start": "2672960",
    "end": "2678480"
  },
  {
    "text": "going to do a quick doesn't even have to be that quick demo of cosmic ray let me",
    "start": "2678480",
    "end": "2683720"
  },
  {
    "text": "switch over to my editor here so just to orient you a bit let me make that a bit",
    "start": "2683720",
    "end": "2689079"
  },
  {
    "text": "bigger as well get rid of some noise is that font big enough yeah okay it it",
    "start": "2689079",
    "end": "2695880"
  },
  {
    "text": "could be bigger yeah that okay so the first thing you're going to",
    "start": "2695880",
    "end": "2702720"
  },
  {
    "text": "do in a cosmic ray test run is Define a config file thison file it's a what is it yl I guess it is uh maybe toml I",
    "start": "2702720",
    "end": "2710200"
  },
  {
    "text": "don't know um and you're going to specify a few things you're going to specify the yeah I can use a pointer the",
    "start": "2710200",
    "end": "2716200"
  },
  {
    "text": "name of the package that you want to mutate our test Suite has a package called atom because of course you know",
    "start": "2716200",
    "end": "2722240"
  },
  {
    "text": "mutating the the first person um a timeout 10 seconds",
    "start": "2722240",
    "end": "2727640"
  },
  {
    "text": "any modules that you want to exclude the command you want to run to run your tests and the name of the distributor",
    "start": "2727640",
    "end": "2734240"
  },
  {
    "text": "you're going to use in this case local so we're just running a bunch of P test base tests using the local distributor",
    "start": "2734240",
    "end": "2741160"
  },
  {
    "text": "um just to show you that all that code exists me scroll down here here is the",
    "start": "2741160",
    "end": "2746480"
  },
  {
    "text": "python package called atom and it's got a bunch of files in it three files and we have our test Suite here which has a",
    "start": "2746480",
    "end": "2752640"
  },
  {
    "text": "bunch of tests and this test Suite provides 100% coverage for the atom",
    "start": "2752640",
    "end": "2757960"
  },
  {
    "text": "module the first thing you need to do then let me just close that is",
    "start": "2757960",
    "end": "2763400"
  },
  {
    "text": "initialize let me do that is initialize Cosmic array in it so I'm telling at",
    "start": "2763400",
    "end": "2769920"
  },
  {
    "text": "Cosmic array please initialize a results database using this config file so I'm",
    "start": "2769920",
    "end": "2776280"
  },
  {
    "text": "going to go ahead and run that it thinks quick all it's done there is loaded up",
    "start": "2776280",
    "end": "2781760"
  },
  {
    "text": "all the source code run all the operators over it to figure out what could be mutated and kept kept a line in the D database for each of those things",
    "start": "2781760",
    "end": "2789000"
  },
  {
    "text": "the real fun stuff in fact I meant make sure I wanted to make a note to do this",
    "start": "2789000",
    "end": "2794240"
  },
  {
    "text": "um let me find a good body of code here yeah if you watch the code here on the screen I'm about to kick off the actual",
    "start": "2794240",
    "end": "2801520"
  },
  {
    "text": "mutation testing run so this exec command here so you'll see it start",
    "start": "2801520",
    "end": "2806839"
  },
  {
    "text": "printing out the work it think it's doing and you'll see occasionally you'll see things blip change up on the screen",
    "start": "2806839",
    "end": "2811880"
  },
  {
    "text": "that's cosmic ray making the changes okay so it's doing a bunch of",
    "start": "2811880",
    "end": "2817079"
  },
  {
    "text": "work and you I think you see things happening right each of those is a single mutation that is then being tested with the test Suite you can see",
    "start": "2817079",
    "end": "2823200"
  },
  {
    "text": "we're paused here right it seems we're paused we replaced break with continued and entered into an infinite loop we're",
    "start": "2823200",
    "end": "2828480"
  },
  {
    "text": "going to break after 10 seconds continues doing its work think think think think",
    "start": "2828480",
    "end": "2835440"
  },
  {
    "text": "think yeah more thinking more working okay and now it's done um and so what are the results so",
    "start": "2836240",
    "end": "2845839"
  },
  {
    "text": "the CR report is a tool we have that analyzes that little database and will tell you it ran 67 total jobs 607 of",
    "start": "2845839",
    "end": "2854000"
  },
  {
    "text": "them are complete and there were zero surviving mutants okay so this is okay this this is showing that cosmic ray can",
    "start": "2854000",
    "end": "2860720"
  },
  {
    "text": "um run all these tests and Report useful information but let's let's show it actually finding a",
    "start": "2860720",
    "end": "2867359"
  },
  {
    "text": "Survivor uh the way to do that is to come in and take take one of these",
    "start": "2867359",
    "end": "2875319"
  },
  {
    "text": "tests and comment it out right I've taken away a test which means that there's now some bit of behavior in the",
    "start": "2875319",
    "end": "2881599"
  },
  {
    "text": "program in the package that doesn't have any code any test checking for Its Behavior so we should end up with a",
    "start": "2881599",
    "end": "2888920"
  },
  {
    "text": "surviving mutant in this case so I have to reinitialize and then rerun and that'll",
    "start": "2888920",
    "end": "2895760"
  },
  {
    "text": "take same amount of time yeah I should figure out how long",
    "start": "2895760",
    "end": "2901079"
  },
  {
    "text": "this takes and learn a song that's exactly that long and I could sing that song every time what takes about 20 seconds I",
    "start": "2901079",
    "end": "2907960"
  },
  {
    "text": "suppose but yeah I don't think we see any information here claiming there's a failure but then we'll do see report in",
    "start": "2907960",
    "end": "2915079"
  },
  {
    "text": "a second and we'll see that it detected some survivors",
    "start": "2915079",
    "end": "2922240"
  },
  {
    "text": "okay great total 67 all of them ran two surviving mutants cool can we get more",
    "start": "2922720",
    "end": "2930440"
  },
  {
    "text": "information let's look at this file here called",
    "start": "2930440",
    "end": "2937960"
  },
  {
    "text": "we have another program called CR HTML which is just it just analyzes the database and spits out some HTML based",
    "start": "2937960",
    "end": "2943559"
  },
  {
    "text": "on what it sees there and if I refresh this yeah we ran it at 17850 67 jobs and",
    "start": "2943559",
    "end": "2950799"
  },
  {
    "text": "here's the job list let's find something in red here we go before I look at those",
    "start": "2950799",
    "end": "2956119"
  },
  {
    "text": "results let's look at the tests that I took away the test here was that Adam 1.",
    "start": "2956119",
    "end": "2962079"
  },
  {
    "text": "constant number returned the number 42 that's what I expect and if I look in Adam 1 over here here and I look",
    "start": "2962079",
    "end": "2969040"
  },
  {
    "text": "for constant oh if I could type this would work constant number there's a function",
    "start": "2969040",
    "end": "2975720"
  },
  {
    "text": "there all it does is return 42 but of course cosmic ray is going to see that and say no you now return 43 or you now",
    "start": "2975720",
    "end": "2981079"
  },
  {
    "text": "return High something like that so if I look at the results here we see the",
    "start": "2981079",
    "end": "2987119"
  },
  {
    "text": "cosmic cray said yeah I came in here I went to that I went to that function I changed it from 42 to 43 and here's the",
    "start": "2987119",
    "end": "2994520"
  },
  {
    "text": "test Suite results here and we see that I made that change and",
    "start": "2994520",
    "end": "3000960"
  },
  {
    "text": "yet everything survived so you need to figure out what's going on right this is the nature of the feedback you get from",
    "start": "3000960",
    "end": "3009280"
  },
  {
    "text": "cosmic ray or really any mutation testing tool okay everything worked",
    "start": "3009280",
    "end": "3016799"
  },
  {
    "text": "okay that's it that's um you know if that motivates you to go and tri cosmic ray or any other mutation testing tool",
    "start": "3016799",
    "end": "3023280"
  },
  {
    "text": "it's um it's an interesting area it has a lot of potential that I is untapped",
    "start": "3023280",
    "end": "3028760"
  },
  {
    "text": "for reasons we've discussed but that you have a you know there's there's a convert here in the room he can tell",
    "start": "3028760",
    "end": "3034559"
  },
  {
    "text": "you what it's like you know in production in in real life um and and we've used this with with clients on",
    "start": "3034559",
    "end": "3040680"
  },
  {
    "text": "other projects that I not allowed to talk about so much but it can be a practical tool in in in the real world",
    "start": "3040680",
    "end": "3046359"
  },
  {
    "text": "but it takes some thought and planning and um well a discussion we were having",
    "start": "3046359",
    "end": "3052040"
  },
  {
    "text": "earlier was that maybe if you use mutation testing from the beginning of a project it actually guides the way you",
    "start": "3052040",
    "end": "3057240"
  },
  {
    "text": "build the project and it may lead to better or at least different approaches",
    "start": "3057240",
    "end": "3062359"
  },
  {
    "text": "to coding things I've always been a fan of using tests to guide the way I I write my code and this is maybe another",
    "start": "3062359",
    "end": "3067400"
  },
  {
    "text": "example of that um good testing results in better design almost always in my experience and this is maybe another",
    "start": "3067400",
    "end": "3073599"
  },
  {
    "text": "example so that's all I've got um we have I think some 10ish minutes for",
    "start": "3073599",
    "end": "3078960"
  },
  {
    "text": "questions or we can talk or whatever or just go get a beer anything there any any",
    "start": "3078960",
    "end": "3085000"
  },
  {
    "text": "questions I I am not buying um but isn't it's open bar tonight right so yes I'm",
    "start": "3085000",
    "end": "3091119"
  },
  {
    "text": "buying I'm buying at the party tonight um yes yeah I don't know how",
    "start": "3091119",
    "end": "3099400"
  },
  {
    "text": "um I but uh one of the big frustrations",
    "start": "3099400",
    "end": "3106160"
  },
  {
    "text": "with the m was that um usually when you start running you expect the whole thing",
    "start": "3106160",
    "end": "3112240"
  },
  {
    "text": "to take overnight right uh but I can start looking at the stuff that it does",
    "start": "3112240",
    "end": "3117720"
  },
  {
    "text": "tell me oh there's survivors yeah I would really like to yeah check those out and start coming up with some",
    "start": "3117720",
    "end": "3124440"
  },
  {
    "text": "actions so cosmic ray is I'm echoing now is designed to let you analyze the results as it goes so this SQ light",
    "start": "3124440",
    "end": "3131000"
  },
  {
    "text": "under the hood it's got transactions it's perfectly capable of um reading the results and so you you should be able to",
    "start": "3131000",
    "end": "3137240"
  },
  {
    "text": "run those the CR report CR HTML tools as as you go without interrupting things",
    "start": "3137240",
    "end": "3143440"
  },
  {
    "text": "and then uh kind of you said it would be great at something",
    "start": "3143440",
    "end": "3150520"
  },
  {
    "text": "you know say no that's fine in a",
    "start": "3150520",
    "end": "3155640"
  },
  {
    "text": "way oh to use sport yeah um that that that again that is a tool that should",
    "start": "3155640",
    "end": "3161319"
  },
  {
    "text": "work I mean I know that under its guts are are pretty solid but it's also it's",
    "start": "3161319",
    "end": "3166920"
  },
  {
    "text": "it's not perfect it is somewhat based on hertica can just get lost it can just",
    "start": "3166920",
    "end": "3173720"
  },
  {
    "text": "report that it can't make a quality match anymore but just the in the process of like going through all of the",
    "start": "3173720",
    "end": "3180880"
  },
  {
    "text": "survivors which is sort of my goal here to kind of like look up all the survivors and make yeah then I might",
    "start": "3180880",
    "end": "3187240"
  },
  {
    "text": "want to rerun after I made changes to the test or so on and then during that I just",
    "start": "3187240",
    "end": "3193000"
  },
  {
    "text": "want to go that's not an issue that's not an issue yeah so yeah you could just go into Spore and keep track of all",
    "start": "3193000",
    "end": "3199200"
  },
  {
    "text": "those things and say don't don't test this don't test this yeah that that's that should be a very well supported use",
    "start": "3199200",
    "end": "3204480"
  },
  {
    "text": "case I mean that's the the basic idea but whether it's whether it work for you is is",
    "start": "3204480",
    "end": "3210040"
  },
  {
    "text": "dependent but give me a call I would you know I won't even charge you to talk about I would",
    "start": "3210040",
    "end": "3215680"
  },
  {
    "text": "really I mean that that's not entirely impractical right that that there's some button on here that says add this to the",
    "start": "3215680",
    "end": "3221480"
  },
  {
    "text": "Spore file and ignore it or or or make it a priority or something you all these things are possibly just yeah um 24 yeah",
    "start": "3221480",
    "end": "3230559"
  },
  {
    "text": "only 24 hours in a day if we just fix that then everything would be okay anyhow that's that's cosmic ray that's",
    "start": "3230559",
    "end": "3237280"
  },
  {
    "text": "mutation testing um",
    "start": "3237280",
    "end": "3241079"
  },
  {
    "text": "yeah no absolutely in fact I'm I'm a big fan of getting rid of unit tests as soon",
    "start": "3245960",
    "end": "3251280"
  },
  {
    "text": "as they are not valuable anymore when I have higher level tests that tests my functionality that that is",
    "start": "3251280",
    "end": "3256480"
  },
  {
    "text": "probably one of the keys to Breaking the time barrier right because now I'm not running all these microscopic tests I'm",
    "start": "3256480",
    "end": "3263440"
  },
  {
    "text": "running highle tests that actually test the behavior of my system to help me flush out this this would be a great way to flush out what is actually not used",
    "start": "3263440",
    "end": "3270760"
  },
  {
    "text": "based on what the users are able to do to the system I I think that would be a really effective way to approach it",
    "start": "3270760",
    "end": "3278760"
  },
  {
    "text": "yeah yeah yeah yeah mean there's definitely a discussion to be had but um",
    "start": "3278760",
    "end": "3285280"
  },
  {
    "text": "yeah I I have found myself maybe naively drifting much more",
    "start": "3285280",
    "end": "3290720"
  },
  {
    "text": "I mean this is getting off topic but towards right relying on higher level tests than lower level tests but um that",
    "start": "3290720",
    "end": "3296880"
  },
  {
    "text": "is just an issue of practicality maybe in the projects I work on I'm not sure think it's more like a type of thing",
    "start": "3296880",
    "end": "3302200"
  },
  {
    "text": "where encapsulation is not something have",
    "start": "3302200",
    "end": "3307960"
  },
  {
    "text": "support well yeah okay I do encapsulation I'm just not forced to do it just like hide this hide all of these",
    "start": "3307960",
    "end": "3316280"
  },
  {
    "text": "details and don't talk St yeah right yeah that's that's a good point yeah there's no way to to prevent something",
    "start": "3316280",
    "end": "3322920"
  },
  {
    "text": "from being tested in Python I can always dip under the hood and uh and and break",
    "start": "3322920",
    "end": "3328559"
  },
  {
    "text": "things yeah lots to talk about well yeah",
    "start": "3328559",
    "end": "3332960"
  },
  {
    "text": "yeah yeah Marcus",
    "start": "3341680",
    "end": "3345440"
  },
  {
    "text": "sh okay",
    "start": "3347799",
    "end": "3352079"
  },
  {
    "text": "yeah yeah",
    "start": "3353880",
    "end": "3357880"
  },
  {
    "text": "mhm okay",
    "start": "3368319",
    "end": "3372240"
  },
  {
    "text": "yeah that's a really good yeah",
    "start": "3375839",
    "end": "3382039"
  },
  {
    "text": "yeah what what language was he in you said oh oh yeah yeah yeah yeah Ruby would",
    "start": "3382559",
    "end": "3388920"
  },
  {
    "text": "have a lot of the same characteristics I guess as python in kind of the dynamism and the the quick feedback",
    "start": "3388920",
    "end": "3396200"
  },
  {
    "text": "yeah all right well let's let's uh let's call it a wrap it's probably party time soon so um thank you for being the four",
    "start": "3397880",
    "end": "3405640"
  },
  {
    "text": "or five people in here",
    "start": "3405640",
    "end": "3409318"
  }
]