[
  {
    "text": "so uh hi everyone welcome to NDC Sydney it's so good I am a little bit excited",
    "start": "9059",
    "end": "15120"
  },
  {
    "text": "that we're actually doing this in person for a change um has anyone been to a in-person conference since pre I don't know the",
    "start": "15120",
    "end": "22020"
  },
  {
    "text": "Dark Ages before covert yep okay good um",
    "start": "22020",
    "end": "27119"
  },
  {
    "text": "so I think this is a great chance for us all to connect and meet each other hopefully when you're in between sessions you do the the nerdy introvert",
    "start": "27119",
    "end": "35700"
  },
  {
    "text": "thing of making sure you don't talk to anyone you just kind of stand near other people and you know look like that",
    "start": "35700",
    "end": "42300"
  },
  {
    "text": "um that said feel free to come up and talk to me anytime at all I'm quite happy to have a chat to anyone",
    "start": "42300",
    "end": "47399"
  },
  {
    "text": "um if there's questions coming out from this talk as well or or you're interested in a job with Willow sorry",
    "start": "47399",
    "end": "53940"
  },
  {
    "text": "um add you know got to do that sort of thing um I am happy to talk my name is Richard",
    "start": "53940",
    "end": "59219"
  },
  {
    "text": "Banks you can see it on the screen there I'm not going to talk about myself other than to say I am a distinguished engineer at Willow and distinguish just",
    "start": "59219",
    "end": "65640"
  },
  {
    "text": "means old apparently so that's why the gray hair or the lack of um and I was one of those people who put",
    "start": "65640",
    "end": "71760"
  },
  {
    "text": "their hands up for more than 20 years doing something I was like you can't tell right I look like I'm 18. it's",
    "start": "71760",
    "end": "77400"
  },
  {
    "text": "great um so um when we're talking this is a talk about performance by the way um before I",
    "start": "77400",
    "end": "83820"
  },
  {
    "text": "move on to the the next slide um you probably figured that out from the name hopefully hopefully",
    "start": "83820",
    "end": "91380"
  },
  {
    "text": "um but the the intent of this talk was is really driven by what we've seen in the net space over the last",
    "start": "91380",
    "end": "98220"
  },
  {
    "text": "three four releases now five you know from basically full framework to dot net",
    "start": "98220",
    "end": "103380"
  },
  {
    "text": "core two was kind of like let's make it work and then at three Microsoft went let's make this thing bloody fast",
    "start": "103380",
    "end": "110280"
  },
  {
    "text": "and then they made it faster and then they you know skipped four and went to five um and that got faster again and then",
    "start": "110280",
    "end": "116220"
  },
  {
    "text": "six has become faster again and with seven there's even more work and I don't know if any of you have had a look at uh",
    "start": "116220",
    "end": "121380"
  },
  {
    "text": "some of the posts coming out of Microsoft recently around the performance improvements that happen within the framework itself and the low",
    "start": "121380",
    "end": "128160"
  },
  {
    "text": "level detail they go to to explain how they've optimized code that is in hot paths so that that everyone using",
    "start": "128160",
    "end": "135120"
  },
  {
    "text": "the framework gets lifted up by those changes uh and you look at it and you go through",
    "start": "135120",
    "end": "140580"
  },
  {
    "text": "the details it's like bloody hell how do I do this this is kind of propeller head stuff what I want",
    "start": "140580",
    "end": "147480"
  },
  {
    "text": "to do is take the the idea and the process of performance Improvement and figure out how we can apply it to our",
    "start": "147480",
    "end": "153840"
  },
  {
    "text": "own code so that performance improvements is something that we can all adopt and all",
    "start": "153840",
    "end": "159420"
  },
  {
    "text": "benefit from and that it's not the inner workings of a.net framework that give us performance but it's just",
    "start": "159420",
    "end": "165300"
  },
  {
    "text": "going through the steps of what's there so this is effectively going to be a walkthrough of a library which I will",
    "start": "165300",
    "end": "172319"
  },
  {
    "text": "give you the name of in a little bit explaining how the process works what we want to be thinking about and going from",
    "start": "172319",
    "end": "178260"
  },
  {
    "text": "there now the obvious tip for any type of performance improvements the primary goal is very simple",
    "start": "178260",
    "end": "184560"
  },
  {
    "text": "I know genius that's why I'm standing up the front and you're not",
    "start": "184560",
    "end": "189599"
  },
  {
    "text": "um do less and that's a great tip and at that point we could just stop the talk here and we're done because we've done",
    "start": "189599",
    "end": "195599"
  },
  {
    "text": "less um in reality is less water right so less IO is the obvious thing for most of our",
    "start": "195599",
    "end": "202860"
  },
  {
    "text": "applications we're not doing Frameworks we're not doing a lot of CPU stuff most of our applications are going to be doing less i o",
    "start": "202860",
    "end": "209040"
  },
  {
    "text": "the classic n plus one calls to databases is anyone other than me done that",
    "start": "209040",
    "end": "214620"
  },
  {
    "text": "or you're just liars okay all right the second one got it",
    "start": "214620",
    "end": "219659"
  },
  {
    "text": "um less IO is really important even just the amount of things you might make the same number of calls but if you reduce",
    "start": "219659",
    "end": "225480"
  },
  {
    "text": "your bandwidth you will get better performance because you're sending less data less i o to disk you know all these",
    "start": "225480",
    "end": "232140"
  },
  {
    "text": "sort of operations any CPU improvements and performance improvements at a CPU level are going to be dwarfed by the",
    "start": "232140",
    "end": "238980"
  },
  {
    "text": "improvements that you can make in terms of i o I don't know if you've seen this at all I ran across this years ago it's",
    "start": "238980",
    "end": "246360"
  },
  {
    "text": "the idea of if if we take IO or compute latency and expand that to human scale",
    "start": "246360",
    "end": "252720"
  },
  {
    "text": "what happens so if we consider one CPU cycle is you know one human second",
    "start": "252720",
    "end": "259320"
  },
  {
    "text": "I like some of the numbers here for example memory access is about four minutes I",
    "start": "259320",
    "end": "265320"
  },
  {
    "text": "can save something to to memory in or do a memory operation in four minutes so I'll get back to you",
    "start": "265320",
    "end": "271680"
  },
  {
    "text": "we'll just sit around and wait it's not very exciting or we get right",
    "start": "271680",
    "end": "277139"
  },
  {
    "text": "down the bottom the using the internet send a message between San Francisco and New York",
    "start": "277139",
    "end": "282900"
  },
  {
    "text": "five years now the obvious thing is if that was",
    "start": "282900",
    "end": "288419"
  },
  {
    "text": "real then uh what did you do at work today dear um",
    "start": "288419",
    "end": "293820"
  },
  {
    "text": "I'm still sending that packet I'll get back to you in five years time the boss is going to be like good job",
    "start": "293820",
    "end": "299639"
  },
  {
    "text": "good job well done you get a raise um but of course we're in Australia our internet is so much better than that",
    "start": "299639",
    "end": "305040"
  },
  {
    "text": "right Sydney to New York anyone want to guess 30 years maybe something like that at",
    "start": "305040",
    "end": "311520"
  },
  {
    "text": "human scale so what did you do in your career I sent a message to New York all the",
    "start": "311520",
    "end": "318300"
  },
  {
    "text": "best um and if we think about that you can see you know the the performance improvements from an i o perspective",
    "start": "318300",
    "end": "324000"
  },
  {
    "text": "versus CPU and everything else it's just chalk and cheese so always focus on performance around i",
    "start": "324000",
    "end": "329940"
  },
  {
    "text": "o first so that's why I have it top and there's why it's the red line item there beyond that we have thread blocking",
    "start": "329940",
    "end": "337320"
  },
  {
    "text": "anything that's going to block execution garbage collector classic example this",
    "start": "337320",
    "end": "342479"
  },
  {
    "text": "is why async and await has become so popular in recent times because we can start doing more things while threads",
    "start": "342479",
    "end": "348479"
  },
  {
    "text": "are waiting for Io to complete and the like so we want to keep on top of that you can overdo it I had some code I was",
    "start": "348479",
    "end": "355259"
  },
  {
    "text": "looking at a little while ago and I didn't write it which is unusual where",
    "start": "355259",
    "end": "360960"
  },
  {
    "text": "we basically took a piece of work and spread it across multiple threads so many threads that we started the thread",
    "start": "360960",
    "end": "367380"
  },
  {
    "text": "pull um good job because we didn't think about maximums and we just made the whole application worse because then",
    "start": "367380",
    "end": "373560"
  },
  {
    "text": "we've got overheads of thread creation and we're all sitting around waiting for a turn no one's getting anything but",
    "start": "373560",
    "end": "378780"
  },
  {
    "text": "it's multi-threaded why is it not working that's again just my experience right no one else has done that",
    "start": "378780",
    "end": "384840"
  },
  {
    "text": "okay good yeah yeah all right well I'm going to learn from you guys um and the last one being CPU they're",
    "start": "384840",
    "end": "390960"
  },
  {
    "text": "obviously everything at the end of the day runs with CPU we want to focus on that as well but it is third in the hierarchy of what we normally think",
    "start": "390960",
    "end": "397139"
  },
  {
    "text": "about um this is where also memory allocation comes into play memory allocation Drive",
    "start": "397139",
    "end": "403139"
  },
  {
    "text": "CPU load you have to allocate the memory you have to deallocate it you have to keep track of it it's all CPU time and",
    "start": "403139",
    "end": "410340"
  },
  {
    "text": "there are other benefits around improving performance from a CPU perspective is in such as",
    "start": "410340",
    "end": "416400"
  },
  {
    "text": "heat generation something we need to consider Green Computing initiatives heat generation",
    "start": "416400",
    "end": "421500"
  },
  {
    "text": "energy consumption if I use less CPU I'm using less energy and given where we're",
    "start": "421500",
    "end": "426780"
  },
  {
    "text": "at with energy these days and the impending energy crisis thanks to electric cars and everything else that's going to occur",
    "start": "426780",
    "end": "432600"
  },
  {
    "text": "guaranteed and you should probably jump to I think Richard Campbell's doing a",
    "start": "432600",
    "end": "437639"
  },
  {
    "text": "talk on this later tomorrow might be worth going to um",
    "start": "437639",
    "end": "443099"
  },
  {
    "text": "a lot of that is going to be really important for us that that Green Computing initiatives that are",
    "start": "443099",
    "end": "448620"
  },
  {
    "text": "happening will end up impacting our industry and we will have to pay attention to it so performance Improvement is valuable from that",
    "start": "448620",
    "end": "454440"
  },
  {
    "text": "perspective all right so that's the Preamble the way I think about performance as you can see",
    "start": "454440",
    "end": "460620"
  },
  {
    "text": "I treat it like detective work I don't want to say I'm Sherlock Holmes because I'm not um but I do like that idea of there is a",
    "start": "460620",
    "end": "467520"
  },
  {
    "text": "problem I'm trying to discover what the problem is I'm trying to find the root cause of what's going on and then I'm",
    "start": "467520",
    "end": "472560"
  },
  {
    "text": "going to problem solve that thing so not only do I find the culprit and go aha Watson",
    "start": "472560",
    "end": "478259"
  },
  {
    "text": "um but I'm also then going to take that culprit and beat the crap out of them um",
    "start": "478259",
    "end": "483300"
  },
  {
    "text": "so to speak I'm not in occurring violence in the room at all but to then improve that situation and",
    "start": "483300",
    "end": "490680"
  },
  {
    "text": "make things better so it's kind of cool I like puzzle solving it's great fun I",
    "start": "490680",
    "end": "496020"
  },
  {
    "text": "like the idea of investigating so I enjoy this sort of work now there are some prerequisites before doing that",
    "start": "496020",
    "end": "501300"
  },
  {
    "text": "good test coverage too many times I've seen people named Richard",
    "start": "501300",
    "end": "506580"
  },
  {
    "text": "um go and do some performance Improvement and think everything's wonderful Go and show someone else how wonderful",
    "start": "506580",
    "end": "513240"
  },
  {
    "text": "the performance is only to realize the performance is great because I actually skipped a whole lot of processing that should have occurred",
    "start": "513240",
    "end": "520339"
  },
  {
    "text": "so test coverage gives you that safety net um and these days hopefully",
    "start": "521219",
    "end": "527279"
  },
  {
    "text": "I'm not even going to ask hopefully we have good test coverage in our applications or at least enough to have",
    "start": "527279",
    "end": "532980"
  },
  {
    "text": "some confidence and the other thing that that we have as a prerequisite is our mindset the",
    "start": "532980",
    "end": "539279"
  },
  {
    "text": "biggest thing from a performance work perspective to have in your mindset is",
    "start": "539279",
    "end": "544440"
  },
  {
    "text": "Thinking Beyond the abstractions it's really easy with Computing obviously these days that we have abstraction",
    "start": "544440",
    "end": "550140"
  },
  {
    "text": "after abstraction after abstraction but all of it all comes down to what's happening on the network and what's",
    "start": "550140",
    "end": "555300"
  },
  {
    "text": "happening in the CPU effectively or what's happening in terms of IO and and being too abstracted is a problem Entity",
    "start": "555300",
    "end": "562380"
  },
  {
    "text": "framework for example is great in that it lets you interact with databases without having",
    "start": "562380",
    "end": "567720"
  },
  {
    "text": "to really think about it but we've all seen maybe not all of us some of us might be",
    "start": "567720",
    "end": "573120"
  },
  {
    "text": "perfect the rest of us have seen really bad results from EF code that has been",
    "start": "573120",
    "end": "580080"
  },
  {
    "text": "he is doing the right thing but our usage of it is bad because we didn't understand the abstractions",
    "start": "580080",
    "end": "585600"
  },
  {
    "text": "um that said by the way.net 7 coming up recently uh next month coming up recently in the future",
    "start": "585600",
    "end": "592380"
  },
  {
    "text": "coming up next month has some good improvements from performance around EF itself they've done some work to try and",
    "start": "592380",
    "end": "597899"
  },
  {
    "text": "remove and reduce round tripping to databases for certain types of",
    "start": "597899",
    "end": "603120"
  },
  {
    "text": "operations which is fantastic because we're going to get for most of our applications a great performance",
    "start": "603120",
    "end": "608880"
  },
  {
    "text": "Improvement by doing nothing else other than updating to the latest version it's like yes that's my kind of",
    "start": "608880",
    "end": "614820"
  },
  {
    "text": "improvement so there are things we are then running a simple Loop which is identify",
    "start": "614820",
    "end": "621060"
  },
  {
    "text": "something that matters to our end users there's no no point spending three weeks four weeks doing a",
    "start": "621060",
    "end": "626880"
  },
  {
    "text": "performance Improvement to save 20 milliseconds off an operation that happens once a year it's not really a",
    "start": "626880",
    "end": "632160"
  },
  {
    "text": "return on investment on that so find something that matters to your users that has value Baseline your current performance",
    "start": "632160",
    "end": "638040"
  },
  {
    "text": "this is obvious hopefully make the change assess your performance rinse and repeat",
    "start": "638040",
    "end": "644640"
  },
  {
    "text": "am I going to do exactly that we're going to do this with a library called PDF pig that's the name of the",
    "start": "644640",
    "end": "650579"
  },
  {
    "text": "talk see what I did there it's pretty good pad on the back for myself PDF pig is a",
    "start": "650579",
    "end": "657120"
  },
  {
    "text": "pretty popular Library uh it's a port of Apache box uh PDF box as you can see",
    "start": "657120",
    "end": "662220"
  },
  {
    "text": "um I'm using version 0.7 because the team that writes or looks after maintains pdfp has done their own",
    "start": "662220",
    "end": "668519"
  },
  {
    "text": "performance improvements so I didn't want to take something that was already well optimized and then try and improve that I wanted to cheat and make it",
    "start": "668519",
    "end": "674640"
  },
  {
    "text": "easier for myself so I've gone back to a previous version um the good things around this and why I'm",
    "start": "674640",
    "end": "681540"
  },
  {
    "text": "using it is it's fairly isolated which is Handy for a talk it's a library so it's good and it's got",
    "start": "681540",
    "end": "687839"
  },
  {
    "text": "good test Suite so there's good coverage on this um anyone use this by the way I'm",
    "start": "687839",
    "end": "692940"
  },
  {
    "text": "curious no anyone never heard of it before and now goes oh I'd like to use that yeah",
    "start": "692940",
    "end": "698459"
  },
  {
    "text": "okay there we go good all right you're welcome um and we're going to be using a few tools",
    "start": "698459",
    "end": "704360"
  },
  {
    "text": "I don't want to go too deep into a lot of tooling I'm going to keep this really simple so that it's something we can all",
    "start": "704360",
    "end": "709620"
  },
  {
    "text": "adapt to and use it at our work so perfume benchmark.net I'll put these links up",
    "start": "709620",
    "end": "715200"
  },
  {
    "text": "again at the end speed scope and we're going to look at the net source code believe it or not because we need to go",
    "start": "715200",
    "end": "721680"
  },
  {
    "text": "beyond the abstractions all right so we're going to do it let's go let's go Richard let's jump across to",
    "start": "721680",
    "end": "728220"
  },
  {
    "text": "vs code excellent all right so vs code is awesome for doing c-sharp development",
    "start": "728220",
    "end": "734040"
  },
  {
    "text": "there's going to be talk on that later by gentleman over here Mr melgi um",
    "start": "734040",
    "end": "739680"
  },
  {
    "text": "I don't use the visual studio idea anymore it's no point this does everything I",
    "start": "739680",
    "end": "745440"
  },
  {
    "text": "need and I've got you can see pdfp and the test Library running there so uh wow",
    "start": "745440",
    "end": "751260"
  },
  {
    "text": "this resolution's fantastic by the way and I could look at the tests and just",
    "start": "751260",
    "end": "756540"
  },
  {
    "text": "to prove that they run I can run some of those tests and this all do its thing and go hey look there's tests and it",
    "start": "756540",
    "end": "762420"
  },
  {
    "text": "works and everything's good I won't run the entire Suite because the integration tests take about 10 minutes and it's probably not a very exciting 10 minutes",
    "start": "762420",
    "end": "768899"
  },
  {
    "text": "watching tests run um and I've done what most of us will do",
    "start": "768899",
    "end": "773940"
  },
  {
    "text": "first time we go and do any baselining of performance which is right our own little test wrapper utility thing has",
    "start": "773940",
    "end": "779820"
  },
  {
    "text": "anyone done this this code might look familiar we start the stopwatch",
    "start": "779820",
    "end": "786480"
  },
  {
    "text": "we make some calls and we've stopped the stopwatch print the results of the screen",
    "start": "786480",
    "end": "791940"
  },
  {
    "text": "yeah who did this last week okay good all right",
    "start": "791940",
    "end": "800240"
  },
  {
    "text": "so we're going to run this code here and I'm just going to do the classic.net run config release",
    "start": "800279",
    "end": "806579"
  },
  {
    "text": "not debug don't make the mistake that I have done far too many times of forgetting to put it in release mode",
    "start": "806579",
    "end": "811980"
  },
  {
    "text": "debug is going to be slower you haven't got the code optimizations you're not measuring what your users will see so",
    "start": "811980",
    "end": "817500"
  },
  {
    "text": "run it in release mode and this is going to do its thing and cool it took 7.6 seconds to process a PDF file",
    "start": "817500",
    "end": "825600"
  },
  {
    "text": "figure out these 838 pages and 198 320 words beautiful I'm in fact going to do the",
    "start": "825600",
    "end": "832680"
  },
  {
    "text": "next thing that we all do which is go to notepad and go cool let me just write that number down uh where'd notepad go come back come",
    "start": "832680",
    "end": "839579"
  },
  {
    "text": "back there you are all right so that is what we say 7.6 7.6",
    "start": "839579",
    "end": "847500"
  },
  {
    "text": "and I'll just zoom that up",
    "start": "847500",
    "end": "851180"
  },
  {
    "text": "7.6 now what's the problem with what I've just done problem is my results are highly",
    "start": "852800",
    "end": "860519"
  },
  {
    "text": "inconsistent because I'm running on an operating system operating systems are doing other",
    "start": "860519",
    "end": "866160"
  },
  {
    "text": "things at the same time I'm never going to get a pure result so liar",
    "start": "866160",
    "end": "872760"
  },
  {
    "text": "Liar Liar all right we can cheat we can make stuff",
    "start": "872760",
    "end": "877800"
  },
  {
    "text": "happen and we can do this and I'm going to be now doing things on the operating system and",
    "start": "877800",
    "end": "883320"
  },
  {
    "text": "come on don't meet me out yes thank you now it takes longer",
    "start": "883320",
    "end": "888980"
  },
  {
    "text": "so now I might have looked at that first result and got an 8-0 and then run the test again and gone seven six and go yes",
    "start": "889079",
    "end": "896459"
  },
  {
    "text": "I've just shaved five percent off my application without any real understanding that I've",
    "start": "896459",
    "end": "903060"
  },
  {
    "text": "actually done nothing at all we have to do performance work by running out the perf test a lot of times",
    "start": "903060",
    "end": "910260"
  },
  {
    "text": "and looking for deltas and looking at means and distribution and everything else we should also make sure that we're",
    "start": "910260",
    "end": "915660"
  },
  {
    "text": "running our machine without background as few background processes as possible run it in high performance mode so that",
    "start": "915660",
    "end": "921660"
  },
  {
    "text": "you don't have CPU throttling going on under the hood again beyond the abstraction and the like button let's",
    "start": "921660",
    "end": "927720"
  },
  {
    "text": "say for the moment that our number when we average it out goes to about seven eight is that okay with people",
    "start": "927720",
    "end": "935060"
  },
  {
    "text": "yeah you're okay okay good all right first thing Improvement wise that we are",
    "start": "935639",
    "end": "941399"
  },
  {
    "text": "going to do here is I cheated and I'm running this as a.net31 app",
    "start": "941399",
    "end": "947940"
  },
  {
    "text": "just to show you the improvements in a framework let's change that to six",
    "start": "947940",
    "end": "955320"
  },
  {
    "text": "run it again anyone want to guess what the numbers are going to be four seconds oh",
    "start": "955320",
    "end": "962820"
  },
  {
    "text": "five seven twelve who said twelve me 6.3 oh okay and we'll run it again and",
    "start": "962820",
    "end": "971519"
  },
  {
    "text": "of course I'll try my best to make it go slower just for consistency and fun and",
    "start": "971519",
    "end": "977839"
  },
  {
    "text": "you want to see the PDF by the way we're using homoziliad which has 838 pages",
    "start": "977839",
    "end": "985380"
  },
  {
    "text": "I thought I'd do a small PDF text Heavy what's that 6.9 so we're definitely",
    "start": "985380",
    "end": "991920"
  },
  {
    "text": "getting some performance improvements here which is a good thing simplest performance Improvement you can",
    "start": "991920",
    "end": "997440"
  },
  {
    "text": "make if you've got old code update the latest runtime you're going to get the benefits and when seven comes",
    "start": "997440",
    "end": "1003500"
  },
  {
    "text": "out you will get more benefits there is also a talk later this week uh talking",
    "start": "1003500",
    "end": "1008720"
  },
  {
    "text": "about the other parts of net performance and improvements in general profile guided optimization a whole bunch of",
    "start": "1008720",
    "end": "1015440"
  },
  {
    "text": "other things that are happening in that space GC improvements and and the like if you're interested in this space",
    "start": "1015440",
    "end": "1020480"
  },
  {
    "text": "strongly recommend going to that one um I'll be sitting in the back as well a 6.2 6.9 6.3 let's say that's a lazy six",
    "start": "1020480",
    "end": "1030438"
  },
  {
    "text": "five for want of a better term so we've just said 1.3 seconds by doing nothing else",
    "start": "1030439",
    "end": "1035720"
  },
  {
    "text": "I'm definitely going to the boss and saying hey can I have a pay rise they might laugh at me but it doesn't",
    "start": "1035720",
    "end": "1041660"
  },
  {
    "text": "hurt to try all right now that done let's actually",
    "start": "1041660",
    "end": "1047540"
  },
  {
    "text": "figure out where things are happening now if I look at my code and I want to improve this Loop",
    "start": "1047540",
    "end": "1053780"
  },
  {
    "text": "here I'm opening a document I'm parsing it getting some structure a number of",
    "start": "1053780",
    "end": "1059600"
  },
  {
    "text": "pages then there's a loop I don't know technically I do because I've looked at it but I don't know looking at the code",
    "start": "1059600",
    "end": "1066020"
  },
  {
    "text": "where the performance time is where can I save time in this is it in the parsing inside PDF document open is it in",
    "start": "1066020",
    "end": "1072320"
  },
  {
    "text": "hitting some of these methods is it in get words is it get page I can't tell",
    "start": "1072320",
    "end": "1077419"
  },
  {
    "text": "some of this could be statically done when the parsing happens and it's it's a simple property return it could be much",
    "start": "1077419",
    "end": "1083120"
  },
  {
    "text": "deeper I could go and look at the code and try and Eyeball my way through it again I'm",
    "start": "1083120",
    "end": "1088580"
  },
  {
    "text": "sure none of us have ever done that at all this week",
    "start": "1088580",
    "end": "1094700"
  },
  {
    "text": "um I don't want to do that I actually want to use a tool to do it for me which is great I'm going to profile the code this",
    "start": "1094700",
    "end": "1101900"
  },
  {
    "text": "is perfume I can't make the font any bigger I'm sorry so they're going to be",
    "start": "1101900",
    "end": "1107000"
  },
  {
    "text": "a little bit of zoomy zoomy going on it's a technical term Zoomy Zoomy I'm going to run a command and it's",
    "start": "1107000",
    "end": "1113360"
  },
  {
    "text": "going to say hey sunshine you're profiling at the kernel level you need to elevate so I will do that",
    "start": "1113360",
    "end": "1120799"
  },
  {
    "text": "now before I show this UI let me go back to get out of there and go back to the",
    "start": "1120799",
    "end": "1126559"
  },
  {
    "text": "slides this is your typical developer written",
    "start": "1126559",
    "end": "1132080"
  },
  {
    "text": "user interface and I'm sure we've never done this ourselves as well right we like building the the shuttle control system and",
    "start": "1132080",
    "end": "1139100"
  },
  {
    "text": "wondering why users don't find it easy to use um there's a few things here first I'm",
    "start": "1139100",
    "end": "1144200"
  },
  {
    "text": "going to run a command which is our application our compiled application it's in release mode obviously",
    "start": "1144200",
    "end": "1150799"
  },
  {
    "text": "um perfume will take by default a sample every millisecond so every millisecond it will stop execution of what's going",
    "start": "1150799",
    "end": "1156919"
  },
  {
    "text": "on grab the call Stacks of every single process on the system so it will slow my machine down",
    "start": "1156919",
    "end": "1164299"
  },
  {
    "text": "and record that and every millisecond does the same thing because we want to see where things are at so sampling",
    "start": "1164299",
    "end": "1169520"
  },
  {
    "text": "every millisecond we are also going to capture a few things here we're going to capture thread time so we can see if",
    "start": "1169520",
    "end": "1175039"
  },
  {
    "text": "there's threading happening in the application we're going to look at file Lao because I know I'm doing some interaction and I O is important and",
    "start": "1175039",
    "end": "1180980"
  },
  {
    "text": "we're going to look at memory allocation to see if we're going to have issues with garbage collector and and the like",
    "start": "1180980",
    "end": "1187100"
  },
  {
    "text": "when we've done this we are also going to see uh some output",
    "start": "1187100",
    "end": "1193039"
  },
  {
    "text": "that looks a little like this so we will see a lot of options in terms of what perfview captures which is great",
    "start": "1193039",
    "end": "1199460"
  },
  {
    "text": "I don't care about most of them for this particular case we care about the ones that are highlighted which are CPU",
    "start": "1199460",
    "end": "1204559"
  },
  {
    "text": "Stacks garbage collection statistics the thread time and particularly noting the",
    "start": "1204559",
    "end": "1210559"
  },
  {
    "text": "ready thread one so this is more where you've got threads that are available to do work and ready to do work but can't",
    "start": "1210559",
    "end": "1217880"
  },
  {
    "text": "so they're blocked and disk IO reasonable",
    "start": "1217880",
    "end": "1224120"
  },
  {
    "text": "yes absolutely I think that's great let's continue he says talking to himself",
    "start": "1224120",
    "end": "1229460"
  },
  {
    "text": "all right put a few turn off thread time I will just bump this up so it's easier to see",
    "start": "1229460",
    "end": "1235100"
  },
  {
    "text": "so you can see I'm not lying I turned off merge because I don't need to share this file anywhere else well I forgot",
    "start": "1235100",
    "end": "1240740"
  },
  {
    "text": "that one and run the command the window disappears and we end up seeing over",
    "start": "1240740",
    "end": "1246440"
  },
  {
    "text": "here that something's working this is perfect doing its thing who's used this tool",
    "start": "1246440",
    "end": "1252080"
  },
  {
    "text": "okay um for those who haven't this is a Microsoft tool",
    "start": "1252080",
    "end": "1257419"
  },
  {
    "text": "it's very cool and it's going to spit out some results",
    "start": "1257419",
    "end": "1263179"
  },
  {
    "text": "and open it up and there we go awesome so",
    "start": "1263179",
    "end": "1268400"
  },
  {
    "text": "here's our CPU Stacks our memory and",
    "start": "1268400",
    "end": "1273940"
  },
  {
    "text": "disk i o and thread time so the first thing I'm going to look at is the garbage collector",
    "start": "1273940",
    "end": "1279620"
  },
  {
    "text": "GC stats now I want to go to the performance tester",
    "start": "1279620",
    "end": "1286039"
  },
  {
    "text": "one and I can see here that it's going to give me some numbers which is fantastic uh let me bump that up just a little",
    "start": "1286039",
    "end": "1293179"
  },
  {
    "text": "more so it's easier to see here's our stats of gen 0 1 and 2 Collections and how long we've paused and what I see",
    "start": "1293179",
    "end": "1299059"
  },
  {
    "text": "here is that we've made 10 Gen 2 runs and it's cost us in total 8.3",
    "start": "1299059",
    "end": "1305539"
  },
  {
    "text": "milliseconds is this our performance bottleneck",
    "start": "1305539",
    "end": "1310760"
  },
  {
    "text": "cool so from an investigation detective perspective we can ignore this yeah we could probably allocate less",
    "start": "1310760",
    "end": "1316940"
  },
  {
    "text": "memory but it's not our bottleneck so we need to focus on the things that matter and it's not that so noting that I go",
    "start": "1316940",
    "end": "1324140"
  },
  {
    "text": "okay sweet ignore that let's go look at disk IO now before I do this",
    "start": "1324140",
    "end": "1330380"
  },
  {
    "text": "you will see a view that looks something like this now I'll Zoom it up again",
    "start": "1330380",
    "end": "1336799"
  },
  {
    "text": "develop your built UI it looks confusing at the start particularly that thing",
    "start": "1336799",
    "end": "1342020"
  },
  {
    "text": "above the wind which has the asterisks's and the letters and the nines and everything else perfume has inbuilt help",
    "start": "1342020",
    "end": "1350000"
  },
  {
    "text": "which is good it's dense it takes a little bit to read it and understand at times but it is",
    "start": "1350000",
    "end": "1356120"
  },
  {
    "text": "like all things with great power comes terrible documentation um but it is really actually pretty good",
    "start": "1356120",
    "end": "1363200"
  },
  {
    "text": "um because it will tell me what these dots mean the dot in this case is that",
    "start": "1363200",
    "end": "1369440"
  },
  {
    "text": "in this in this time period This Thread process method call whatever",
    "start": "1369440",
    "end": "1376460"
  },
  {
    "text": "it is on the left consumed between 0 and 0.1 percent of our total time or our total metric",
    "start": "1376460",
    "end": "1384260"
  },
  {
    "text": "and it does 32 buckets across the execution period that we ran for and just kind of gives us an ASCII version",
    "start": "1384260",
    "end": "1390799"
  },
  {
    "text": "of a a little heat chart thingy ticker that's the word I'm after which",
    "start": "1390799",
    "end": "1398120"
  },
  {
    "text": "is nice so when you get used to it you can eyeball something and go oh okay I'm not interested that's not my problem it's in really that that one above",
    "start": "1398120",
    "end": "1406580"
  },
  {
    "text": "um which is cool so let's go back and actually look at the results that we've got in this",
    "start": "1406580",
    "end": "1412880"
  },
  {
    "text": "particular case so disk IO stacks so there is",
    "start": "1412880",
    "end": "1418400"
  },
  {
    "text": "every process on my system I told you there's everything so I've",
    "start": "1418400",
    "end": "1424159"
  },
  {
    "text": "yes you are correct there is a lot of processes your operating system is doing in the background and why you get so",
    "start": "1424159",
    "end": "1429320"
  },
  {
    "text": "much inconsistency in terms of how things operate it's kind of frightening um kind of cool at the same time",
    "start": "1429320",
    "end": "1436159"
  },
  {
    "text": "so let's open performance tester which is sorry about the fact that it keeps moving on me which is this application",
    "start": "1436159",
    "end": "1442159"
  },
  {
    "text": "here and looking at this",
    "start": "1442159",
    "end": "1448100"
  },
  {
    "text": "if I come along and eyeball our metric chart here what do I see",
    "start": "1448100",
    "end": "1457039"
  },
  {
    "text": "this guy oh at the start probably where we're loading the file up and not much after that",
    "start": "1457039",
    "end": "1463520"
  },
  {
    "text": "is this process i o bound not really so cool we've eliminated eliminated",
    "start": "1463520",
    "end": "1470179"
  },
  {
    "text": "another suspect in our investigation D Watson so I can move on from that one then I'm",
    "start": "1470179",
    "end": "1476659"
  },
  {
    "text": "going to go to thread time let's see if we're blocked on threading again open the performance tester",
    "start": "1476659",
    "end": "1483760"
  },
  {
    "text": "cool and I'm just going to go straight to the name one which looks like the screenshot I showed earlier",
    "start": "1484400",
    "end": "1489500"
  },
  {
    "text": "and you'll see now perfume when you do this particular view generates",
    "start": "1489500",
    "end": "1495100"
  },
  {
    "text": "categorizes threads into pseudo States indicating if it was blocked doing some",
    "start": "1495100",
    "end": "1501500"
  },
  {
    "text": "CPU work and doing a hard fault or something else and you can see some",
    "start": "1501500",
    "end": "1507080"
  },
  {
    "text": "of them here readied by thread ID and weighting these are the ones we're interested in",
    "start": "1507080",
    "end": "1514000"
  },
  {
    "text": "um I'll make that a little bit larger just because I like zooming in and making you seasick um ready by thread ID is basically",
    "start": "1514100",
    "end": "1521000"
  },
  {
    "text": "saying there's a thread that was readied by another thing and it was sitting around and waiting for in this case less",
    "start": "1521000",
    "end": "1526640"
  },
  {
    "text": "than a millisecond okay um",
    "start": "1526640",
    "end": "1531860"
  },
  {
    "text": "oops almost all right that's horrible okay coming back up tier block time we had 88 block time and 11 CPU time are we",
    "start": "1531860",
    "end": "1541820"
  },
  {
    "text": "in trouble here from a Threading perspective it's a trick question everyone's going I",
    "start": "1541820",
    "end": "1548720"
  },
  {
    "text": "don't know how to answer that one you're the one up the front all right turns out not all block time",
    "start": "1548720",
    "end": "1554840"
  },
  {
    "text": "is created equal if I go back to the call tree what I see is I have a startup thread",
    "start": "1554840",
    "end": "1562220"
  },
  {
    "text": "and then 10 other threads that have been created by dotnet as part of running the process and if I come across to the",
    "start": "1562220",
    "end": "1568760"
  },
  {
    "text": "right I can see time is spent on all these mostly but",
    "start": "1568760",
    "end": "1574039"
  },
  {
    "text": "what have we got we got the background garbage collector we've got the jet doing its thing the tig compilation workers stage one and two we've got",
    "start": "1574039",
    "end": "1580880"
  },
  {
    "text": "the.net finalizer for probably releasing the file i o file handle that I created and then a bunch of other threads that",
    "start": "1580880",
    "end": "1588080"
  },
  {
    "text": "have done a grand total of one millisecond of time and almost no processing at all so if I make those",
    "start": "1588080",
    "end": "1594919"
  },
  {
    "text": "somehow more available it's not going to help these threads are blocked because they've got nothing to do",
    "start": "1594919",
    "end": "1601580"
  },
  {
    "text": "which is why we want the ready time that's the one that really counts so what I see here is if I just",
    "start": "1601580",
    "end": "1607340"
  },
  {
    "text": "filtered down to my startup thread and if I right click and include item sorry",
    "start": "1607340",
    "end": "1612860"
  },
  {
    "text": "about the zooming there I wish I could control that better um and go back to by name I now see CPU",
    "start": "1612860",
    "end": "1620720"
  },
  {
    "text": "time is 99.2 percent of this application so what do we need to investigate",
    "start": "1620720",
    "end": "1629080"
  },
  {
    "text": "CPU time yay which is exactly the bottom of the stack that I talked about ironic",
    "start": "1629299",
    "end": "1634520"
  },
  {
    "text": "I know um but at least we've done that process of eliminating candidates and working through what's important so when IO",
    "start": "1634520",
    "end": "1641659"
  },
  {
    "text": "gov you know blocking anything okay this is a CPU bound application now I could",
    "start": "1641659",
    "end": "1646820"
  },
  {
    "text": "start digging into this in a little more detail and I will I'm just going to open the",
    "start": "1646820",
    "end": "1652520"
  },
  {
    "text": "CPU stacks for a moment just to have a look at what's going on here",
    "start": "1652520",
    "end": "1659120"
  },
  {
    "text": "I can see I have the jit creating arrays and newing things up and get page doing",
    "start": "1659120",
    "end": "1666140"
  },
  {
    "text": "something or something along those lines get page was one of those methods that",
    "start": "1666140",
    "end": "1671360"
  },
  {
    "text": "we called in our loop it's the one that's got the most work in here that's probably our Focus",
    "start": "1671360",
    "end": "1677600"
  },
  {
    "text": "at this point I can then jump in and try and dig through everything but I want to isolate the code a little bit more I",
    "start": "1677600",
    "end": "1682700"
  },
  {
    "text": "want to isolate the performance I should mention uh can you see this one here NT dll question mark exclamation and module",
    "start": "1682700",
    "end": "1690260"
  },
  {
    "text": "question mark exclamation question mark this is basically perfume saying I don't",
    "start": "1690260",
    "end": "1696080"
  },
  {
    "text": "know what symbols you're talking about you will see uh things like this module",
    "start": "1696080",
    "end": "1701419"
  },
  {
    "text": "CLR Jets so we've got the module name before the exclamation point and then a question mark saying we don't",
    "start": "1701419",
    "end": "1706940"
  },
  {
    "text": "have the pdbs and the symbols loaded if you right click one of those rows",
    "start": "1706940",
    "end": "1712159"
  },
  {
    "text": "do look up symbols perfume will go and try and load the symbols from symbol server for the",
    "start": "1712159",
    "end": "1718400"
  },
  {
    "text": "library and then be able to expand that into the particular method which is handy when you want to look at what's going on inside the framework again",
    "start": "1718400",
    "end": "1724580"
  },
  {
    "text": "going beyond the abstraction the module question mark question mark exclamation question mark exclamation",
    "start": "1724580",
    "end": "1730520"
  },
  {
    "text": "what the hell um is effective as saying I can't tell you what the module name is and I can't",
    "start": "1730520",
    "end": "1735980"
  },
  {
    "text": "tell you what method in the unknown module name it is this is typically caused by Anonymous methods that I",
    "start": "1735980",
    "end": "1743320"
  },
  {
    "text": "produced or runtime generated code because they're not statically compiled",
    "start": "1743320",
    "end": "1748460"
  },
  {
    "text": "at that point as long as that's a small percentage it's not going to affect your overall performance if it is you can do",
    "start": "1748460",
    "end": "1754880"
  },
  {
    "text": "things in perfume to roll those numbers up into the parent call and basically look at the parent methods find out",
    "start": "1754880",
    "end": "1760159"
  },
  {
    "text": "where it's happening uh we're not going to see a lot of that so that's more for your information",
    "start": "1760159",
    "end": "1765620"
  },
  {
    "text": "all right so I don't want to run this all the time and try and dig through I'm going to",
    "start": "1765620",
    "end": "1772100"
  },
  {
    "text": "cheat because I can and I'm going to get reset so that I can move forward and go",
    "start": "1772100",
    "end": "1778700"
  },
  {
    "text": "to it's switch step two sorry about that being on the microphone and load up benchmark.net who's used",
    "start": "1778700",
    "end": "1787279"
  },
  {
    "text": "this again it is a freaking awesome tool",
    "start": "1787279",
    "end": "1793760"
  },
  {
    "text": "um it's going to do all the statistical work that I mentioned before you know how we were taking eight seconds and I",
    "start": "1793760",
    "end": "1800000"
  },
  {
    "text": "would have had to run it a few times ago that's about fingering the air 8.7 seconds to execute",
    "start": "1800000",
    "end": "1805279"
  },
  {
    "text": "perfume is going to do that for me and do it much better um what I need to do is tell perfume",
    "start": "1805279",
    "end": "1810980"
  },
  {
    "text": "what to Benchmark so I put a benchmark attribute on a method and run it which is our get page method that we",
    "start": "1810980",
    "end": "1817640"
  },
  {
    "text": "looked at earlier I went yeah this is probably a problem and I'm going to run it for page number one 20 and 50 to see",
    "start": "1817640",
    "end": "1823159"
  },
  {
    "text": "if there's any variation between how far we have to dig through in the PDF file because maybe each time we ask we're",
    "start": "1823159",
    "end": "1829340"
  },
  {
    "text": "going back to the start and moving forward so let's go run that and we're going to",
    "start": "1829340",
    "end": "1835279"
  },
  {
    "text": "go dot slash benchmarks and again.net run release mode",
    "start": "1835279",
    "end": "1842919"
  },
  {
    "text": "now you will see a few things happening here firstly there will be three runs of",
    "start": "1843860",
    "end": "1849020"
  },
  {
    "text": "The Benchmark one for each of the page numbers that we're getting benchmark.net will do some nice things",
    "start": "1849020",
    "end": "1854899"
  },
  {
    "text": "for us firstly it will execute the code a few times to get the jit to get out of the way basically ask the jit to do that",
    "start": "1854899",
    "end": "1861980"
  },
  {
    "text": "initial tiered compilation and and just say take this method to make sure it's all sweet",
    "start": "1861980",
    "end": "1867200"
  },
  {
    "text": "then it will try and run the test a few times to figure out how many iterations it can do at once",
    "start": "1867200",
    "end": "1873200"
  },
  {
    "text": "to get a reasonable number to work with so in this case we've landed on 512 operations",
    "start": "1873200",
    "end": "1878240"
  },
  {
    "text": "then it runs those 512 operations a few times as a batch to see that the numbers are stable and the guesswork was correct",
    "start": "1878240",
    "end": "1885100"
  },
  {
    "text": "and then it runs the actual workload and this actual workload piece where we're",
    "start": "1885100",
    "end": "1890659"
  },
  {
    "text": "doing the numbers and you can see this time this is Page 20 because it was the second one in the list",
    "start": "1890659",
    "end": "1896059"
  },
  {
    "text": "instead of doing 512 we're doing 128 easy indicator that 20 is going to be",
    "start": "1896059",
    "end": "1901159"
  },
  {
    "text": "slower than one and we can see also six milliseconds per operation these sort of numbers coming",
    "start": "1901159",
    "end": "1908000"
  },
  {
    "text": "up it's going to do its thing and then it will pop out and run uh 450 and at",
    "start": "1908000",
    "end": "1914179"
  },
  {
    "text": "the end once it's all done its magic we'll be able to compare the results of time per operation and how much memory",
    "start": "1914179",
    "end": "1920600"
  },
  {
    "text": "is consumed um and if you can Muck around with those settings in benchmark.net and get other",
    "start": "1920600",
    "end": "1926960"
  },
  {
    "text": "numbers out of it but it's very very nice way of doing things so rather than doing my manual riches crappy",
    "start": "1926960",
    "end": "1934399"
  },
  {
    "text": "performance tester thing I could have taken that Loop put it inside benchmark.net and run it and got a much",
    "start": "1934399",
    "end": "1941240"
  },
  {
    "text": "more accurate and statistical representation of the work that was occurring it is important by the way to note that",
    "start": "1941240",
    "end": "1947960"
  },
  {
    "text": "with benchmark.net you need to do something with the return values otherwise the compiler is going to go",
    "start": "1947960",
    "end": "1953179"
  },
  {
    "text": "hey you know what you're not using this I'm just going to optimize you out when you're doing release mode and then your",
    "start": "1953179",
    "end": "1958340"
  },
  {
    "text": "benchmarks are like that's just fantastic and again I've never done that and",
    "start": "1958340",
    "end": "1963559"
  },
  {
    "text": "wondered why my code was so fast um so here we go here's our results awesome",
    "start": "1963559",
    "end": "1970279"
  },
  {
    "text": "we have it's wrapped around a little bit let me just zoom that out just a",
    "start": "1970279",
    "end": "1976279"
  },
  {
    "text": "fraction so the page number one took 1.25 milliseconds page 26.28 page 50.",
    "start": "1976279",
    "end": "1983980"
  },
  {
    "text": "surprisingly less time",
    "start": "1983980",
    "end": "1987640"
  },
  {
    "text": "okay fair enough um and we can see that page 20 somehow",
    "start": "1989539",
    "end": "1994820"
  },
  {
    "text": "managed to trigger some Gen 2 collections used three and a half Meg of memory page 50 3.5 page one 800k",
    "start": "1994820",
    "end": "2004840"
  },
  {
    "text": "okay cool I'm not going to dig into the code I don't need to understand why I'm trying to find performance problems",
    "start": "2004840",
    "end": "2011200"
  },
  {
    "text": "um one of the Temptations when we're doing this type of work is to start digging into more than we should and",
    "start": "2011200",
    "end": "2017380"
  },
  {
    "text": "losing our focus and then going what the hell was I doing I've lost track now um and the disciplined part of problem",
    "start": "2017380",
    "end": "2023559"
  },
  {
    "text": "solving is really important here what it tells me is that page 20 is probably the one we want to focus on in",
    "start": "2023559",
    "end": "2028779"
  },
  {
    "text": "this particular case so I'm going to go back to benchmark.net and just clear that out",
    "start": "2028779",
    "end": "2035799"
  },
  {
    "text": "and that out and then I'm going to run this again but I'm now going to profile the execution for The Benchmark of just",
    "start": "2035799",
    "end": "2042220"
  },
  {
    "text": "page 20. so I can do that by doing uh Dash p etw",
    "start": "2042220",
    "end": "2049500"
  },
  {
    "text": "which is cool this is not going to work because it's going to say hey you know what Richard uh you can't do etw tracing",
    "start": "2049780",
    "end": "2055720"
  },
  {
    "text": "unless you're elevated and going yes you are correct that's why",
    "start": "2055720",
    "end": "2060940"
  },
  {
    "text": "I prepared earlier it's like a cooking show here I think and here's something I prepared earlier",
    "start": "2060940",
    "end": "2067179"
  },
  {
    "text": "and I probably want to be in the right folder thank you for pointing that out",
    "start": "2067179",
    "end": "2072480"
  },
  {
    "text": "so we'll run that 20 again and this time it's going to run the profiler alongside",
    "start": "2074139",
    "end": "2079179"
  },
  {
    "text": "it so we can see exactly what's happening where CPU is being allocated within the get page method to try and",
    "start": "2079179",
    "end": "2085000"
  },
  {
    "text": "find what's occurring I should probably hit the thing to start at hey instead of just waiting and going",
    "start": "2085000",
    "end": "2090398"
  },
  {
    "text": "why is it not running yet all right so it's doing a build you can see also in terms of the build that we",
    "start": "2090399",
    "end": "2097240"
  },
  {
    "text": "are doing the release mode builds we're turning off building parallel deterministic optimized true making sure",
    "start": "2097240",
    "end": "2103359"
  },
  {
    "text": "everything's all good again these are controllable settings in benchmark.net",
    "start": "2103359",
    "end": "2110619"
  },
  {
    "text": "and there we go here's our pilot coming through 128 operations per batch which",
    "start": "2110619",
    "end": "2116500"
  },
  {
    "text": "is good or per workload I should say warm the workload up make sure it's all good",
    "start": "2116500",
    "end": "2122440"
  },
  {
    "text": "and then do the actual run this will run until",
    "start": "2122440",
    "end": "2127920"
  },
  {
    "text": "benchmark.net decides there's enough statistical consistency and then we'll stop",
    "start": "2127920",
    "end": "2134740"
  },
  {
    "text": "if it doesn't find any consistency it will run up to 100 times and then go okay you've had enough we should stop",
    "start": "2134740",
    "end": "2140260"
  },
  {
    "text": "anyway it's kind of like when the kids keep asking can I stay up just a little longer and you go all right all right no",
    "start": "2140260",
    "end": "2146079"
  },
  {
    "text": "now let's go to bed so we're done which is great and we have generated a profile in this folder here",
    "start": "2146079",
    "end": "2154660"
  },
  {
    "text": "which I am now going to go and open in perfume so if I go up to here and change",
    "start": "2154660",
    "end": "2163240"
  },
  {
    "text": "the folder path to the one we just saw I've got my Benchmark there I'm going to",
    "start": "2163240",
    "end": "2168280"
  },
  {
    "text": "open that up double click it cool now at this point I can jump into",
    "start": "2168280",
    "end": "2173740"
  },
  {
    "text": "the CPU stacks I don't want to do that you're like why why because",
    "start": "2173740",
    "end": "2180280"
  },
  {
    "text": "stuff's been happening benchmark.net ran it how many times I didn't count actually it ran it a few",
    "start": "2180280",
    "end": "2187480"
  },
  {
    "text": "times but when it runs each Benchmark each workload it creates an",
    "start": "2187480",
    "end": "2193359"
  },
  {
    "text": "event an etw event that we can use to see what's going on so Benchmark start and",
    "start": "2193359",
    "end": "2199240"
  },
  {
    "text": "stop is for the entire run workload actual start and stop are the",
    "start": "2199240",
    "end": "2205060"
  },
  {
    "text": "things we're interested in this is after the jit has done its thing after it's done the piloting after it's done everything else",
    "start": "2205060",
    "end": "2210579"
  },
  {
    "text": "and we can then look at two events start and stop and grab the time",
    "start": "2210579",
    "end": "2217180"
  },
  {
    "text": "right click that and go hey open the CPU stacks for just this period of time now",
    "start": "2217180",
    "end": "2223000"
  },
  {
    "text": "I've narrowed in my investigation to just a single Benchmark run so I have a much better view of what's going on",
    "start": "2223000",
    "end": "2228760"
  },
  {
    "text": "inside the code and I see here now a few interesting things I see yes get page sucking up all",
    "start": "2228760",
    "end": "2235660"
  },
  {
    "text": "my time damn you get page um decimal calculations some core CLR",
    "start": "2235660",
    "end": "2241540"
  },
  {
    "text": "stuff that's occurring whatever else um but this is a summarized view there's a",
    "start": "2241540",
    "end": "2248440"
  },
  {
    "text": "grouping that's occurred here I want to make this less Groot and sorry",
    "start": "2248440",
    "end": "2254980"
  },
  {
    "text": "about that let's go to no grouping this is the detail of everything that's occurring this is",
    "start": "2254980",
    "end": "2261180"
  },
  {
    "text": "instead of going with summarized things and trying to help me focus on just the big picture I'm going into the Weeds now",
    "start": "2261180",
    "end": "2267040"
  },
  {
    "text": "what is occurring transformation matrix multiplied decimals transform Etc there's some oh there's one of those",
    "start": "2267040",
    "end": "2273280"
  },
  {
    "text": "classic I don't know what the hell this is um there is also a little view in perf",
    "start": "2273280",
    "end": "2278560"
  },
  {
    "text": "view called The Flame graph now this is fantastic and look at how horrible that",
    "start": "2278560",
    "end": "2283720"
  },
  {
    "text": "is all at the same time let me Zoom that out and try using this on anything and trying to figure out",
    "start": "2283720",
    "end": "2289900"
  },
  {
    "text": "what's going on I don't want to do that that's that's not good so I'm going to take this and save the view as",
    "start": "2289900",
    "end": "2297880"
  },
  {
    "text": "a speed scope file speed scope is a nice little utility",
    "start": "2297880",
    "end": "2303760"
  },
  {
    "text": "that exists online that says hey you can go and upload performance charts to me",
    "start": "2303760",
    "end": "2310660"
  },
  {
    "text": "and give you a much more flexible visualized view of what's going on and I can dig through things and I can",
    "start": "2310660",
    "end": "2317680"
  },
  {
    "text": "highlight time and narrow in on ranges and everything um but if you have a look up the left here",
    "start": "2317680",
    "end": "2323920"
  },
  {
    "text": "there is a left heavy view which is going to collapse all the calls that are in the same level of the call stack",
    "start": "2323920",
    "end": "2329140"
  },
  {
    "text": "shoveling to the left and then try and group The Children underneath that which lets me get a better view of overall time so if I come down I see here",
    "start": "2329140",
    "end": "2337920"
  },
  {
    "text": "there's some work around this is transformation matrix transform",
    "start": "2337920",
    "end": "2343780"
  },
  {
    "text": "and it's taking a PDF Point overall this is 29 of our execution",
    "start": "2343780",
    "end": "2349000"
  },
  {
    "text": "hopefully you can see that okay I can zoom it in one more time just to make it in bigger",
    "start": "2349000",
    "end": "2356320"
  },
  {
    "text": "and we also have other methods that are floating around as well what's also nice is if I just uh",
    "start": "2356320",
    "end": "2365079"
  },
  {
    "text": "select all the time again at a certain level when you click",
    "start": "2365079",
    "end": "2370240"
  },
  {
    "text": "something you can see hopefully you can see it will highlight where else that same method is being called",
    "start": "2370240",
    "end": "2376780"
  },
  {
    "text": "so I can get a few I feel for where it is in the call stack and if we're being recursive and and the like so that's",
    "start": "2376780",
    "end": "2383619"
  },
  {
    "text": "cool but what I see in general is that this is all in transformation matrix multiply there's a lot of work going on",
    "start": "2383619",
    "end": "2390460"
  },
  {
    "text": "there so we do what we do which is at this point go okay and now we're talking let's go",
    "start": "2390460",
    "end": "2396579"
  },
  {
    "text": "to transformation matrix and let's go to the multiply method",
    "start": "2396579",
    "end": "2402220"
  },
  {
    "text": "all right and here's our method",
    "start": "2402220",
    "end": "2409660"
  },
  {
    "text": "that's",
    "start": "2409660",
    "end": "2412260"
  },
  {
    "text": "cool so we're spending 45 of our time in here can I improve this code",
    "start": "2415000",
    "end": "2422040"
  },
  {
    "text": "doesn't look like it right welcome to Performance work think beyond the abstraction",
    "start": "2423400",
    "end": "2430780"
  },
  {
    "text": "what we're doing here and when you understand how PDFs work a little bit more is it PDFs are basically to pass",
    "start": "2430780",
    "end": "2436960"
  },
  {
    "text": "them we have coordinate systems and we're trying to figure out where things are on page PDFs are rendered as effectively",
    "start": "2436960",
    "end": "2443020"
  },
  {
    "text": "pictures just it's how they work and to work out where",
    "start": "2443020",
    "end": "2448540"
  },
  {
    "text": "a word is and to do a word count you have to kind of go hey there's letters and all these letters are near each other and they all fit within a bounding",
    "start": "2448540",
    "end": "2454480"
  },
  {
    "text": "box and to work out the bounding box you need a coordinate system and to be accurate the developers built",
    "start": "2454480",
    "end": "2460839"
  },
  {
    "text": "this with decimals so that we can be really accurate around where our box is",
    "start": "2460839",
    "end": "2466060"
  },
  {
    "text": "anyone know what gaming engines use all the time they use decimals right",
    "start": "2466060",
    "end": "2473500"
  },
  {
    "text": "no because decimals suck decimals are great for finance we want accuracy in our currency not really useful when",
    "start": "2473500",
    "end": "2480160"
  },
  {
    "text": "you're doing geometry or not as good because what's the difference between this shape and this shape",
    "start": "2480160",
    "end": "2487960"
  },
  {
    "text": "which is the difference between a decimal and a float nothing at all in fact",
    "start": "2487960",
    "end": "2494320"
  },
  {
    "text": "let's go and prove this not that one Richard this one",
    "start": "2494320",
    "end": "2499599"
  },
  {
    "text": "and I mentioned before we were going to look at the net source code so let's go to source",
    "start": "2499599",
    "end": "2505599"
  },
  {
    "text": ".net and look at the implementation beyond the abstraction of a decimal",
    "start": "2505599",
    "end": "2512079"
  },
  {
    "text": "all right here we go here's your decimal",
    "start": "2512079",
    "end": "2517720"
  },
  {
    "text": "and let's go look at operator asterisks which as we know is",
    "start": "2517720",
    "end": "2523599"
  },
  {
    "text": "our multiplication the multiplication that's that's really awesome",
    "start": "2523599",
    "end": "2528880"
  },
  {
    "text": "um there you go operator asterisks cause another method to do variable",
    "start": "2528880",
    "end": "2535420"
  },
  {
    "text": "decimal multiplication excellent anyone know what that does under the hood no because you've never looked at",
    "start": "2535420",
    "end": "2541780"
  },
  {
    "text": "neither did I before this um here it is we are on line 1323",
    "start": "2541780",
    "end": "2550119"
  },
  {
    "text": "this will do your heading I'll just scroll slowly I'll tell you when we hit the bottom",
    "start": "2550960",
    "end": "2557400"
  },
  {
    "text": "we're not there yet are we there yet are we there yet oh look at that comment",
    "start": "2558760",
    "end": "2565060"
  },
  {
    "text": "90 60 192 bit results what the f okay",
    "start": "2565060",
    "end": "2570820"
  },
  {
    "text": "where are we still going by the way and we're still going and oh there we are no wait no we're not oh damn it oh",
    "start": "2570820",
    "end": "2577960"
  },
  {
    "text": "look there's go-to's love it um and then finally we head down to 15 18 and that's the end of our",
    "start": "2577960",
    "end": "2584140"
  },
  {
    "text": "multiplication method shall we have a look at double for a comparison",
    "start": "2584140",
    "end": "2591480"
  },
  {
    "text": "all right um I'll just I'll start scrolling I'll tell you when we stop",
    "start": "2594099",
    "end": "2599440"
  },
  {
    "text": "all right we stopped what are we doing with doubles when we multiply we're effectively putting two",
    "start": "2599440",
    "end": "2604780"
  },
  {
    "text": "operands into registers and asking the CPU to multiply them and job done end of story",
    "start": "2604780",
    "end": "2609940"
  },
  {
    "text": "because CPUs love floating Point numbers they will deal with them all day long decimals are an abstraction over the top",
    "start": "2609940",
    "end": "2616839"
  },
  {
    "text": "of vintages painful extra compute time so we want to",
    "start": "2616839",
    "end": "2622780"
  },
  {
    "text": "improve our performance do we need the accuracy of a decimal this is where tests are important",
    "start": "2622780",
    "end": "2629260"
  },
  {
    "text": "I've got a test Suite I can make some changes and verify the test still works so let's make that change",
    "start": "2629260",
    "end": "2634540"
  },
  {
    "text": "and when I say make that change let's actually jump to the branch",
    "start": "2634540",
    "end": "2640019"
  },
  {
    "text": "and what I'm going to do here is go to step three",
    "start": "2641920",
    "end": "2647440"
  },
  {
    "text": "in the code I've now built in my benchmarks a new Benchmark using",
    "start": "2647440",
    "end": "2654220"
  },
  {
    "text": "PDF point this is a one of those smaller classes um that if we have a look at it is",
    "start": "2654220",
    "end": "2661540"
  },
  {
    "text": "effectively an x and y coordinate as a decimal and an X of y coordinate as a double I create a new version of that so",
    "start": "2661540",
    "end": "2669460"
  },
  {
    "text": "I can compare the decimal implementation with the double implementation and do some operations on it to see how it runs",
    "start": "2669460",
    "end": "2675640"
  },
  {
    "text": "this is fun I like doing this it's great um so now we're going to run our benchmark",
    "start": "2675640",
    "end": "2684460"
  },
  {
    "text": "and I'm going to run our PDF point one number one this time just to compare two different",
    "start": "2684460",
    "end": "2691060"
  },
  {
    "text": "implementations of exactly the same code changing just the types",
    "start": "2691060",
    "end": "2696160"
  },
  {
    "text": "anyone want to have a guess of how much faster this will be given you saw the 300 lines or whatever it was in code",
    "start": "2696160",
    "end": "2702819"
  },
  {
    "text": "it's going to be at least one percent right all right so I think this is the decimal",
    "start": "2702819",
    "end": "2709300"
  },
  {
    "text": "one running first I can't tell you but you can see how many operations are in each workload",
    "start": "2709300",
    "end": "2715500"
  },
  {
    "text": "6.7 67 million is that the number 67 million that's cool",
    "start": "2715500",
    "end": "2722079"
  },
  {
    "text": "that's a good number all right do your thing do your thing do your thing I'll just sing to myself",
    "start": "2722079",
    "end": "2728800"
  },
  {
    "text": "do you want me to tell some jokes while this is running I was gonna say tell some bad dad jokes but there are no bad dad jokes just so",
    "start": "2728800",
    "end": "2735760"
  },
  {
    "text": "you know and how many operations for this one",
    "start": "2735760",
    "end": "2742780"
  },
  {
    "text": "five one two three five hundred and thirty six million operations I'm guessing this one's going to be a little",
    "start": "2742780",
    "end": "2748180"
  },
  {
    "text": "bit faster all right",
    "start": "2748180",
    "end": "2753220"
  },
  {
    "text": "come on baby you can do it how many work light actuals before we",
    "start": "2753220",
    "end": "2758859"
  },
  {
    "text": "stop 18. do I hear 20.",
    "start": "2758859",
    "end": "2764980"
  },
  {
    "text": "are you 25 this is always part of the fun right",
    "start": "2764980",
    "end": "2770140"
  },
  {
    "text": "when will this finish four hours later come on",
    "start": "2770140",
    "end": "2775720"
  },
  {
    "text": "38. all right",
    "start": "2775720",
    "end": "2779940"
  },
  {
    "text": "look at the difference because we went beyond the abstraction",
    "start": "2781060",
    "end": "2787359"
  },
  {
    "text": "we focused on an area we went through the loop we measured we Baseline we changed",
    "start": "2787359",
    "end": "2792460"
  },
  {
    "text": "to verify things now this is a very discreet piece of work that we're doing here this is not necessarily something",
    "start": "2792460",
    "end": "2798579"
  },
  {
    "text": "that will work across the entire application but I can see that by simply for this method moving from decimals to",
    "start": "2798579",
    "end": "2803859"
  },
  {
    "text": "doubles for this point improved performance by I can't even do that as a percentage",
    "start": "2803859",
    "end": "2808900"
  },
  {
    "text": "it's now 0.6 of a percent of the time it took before",
    "start": "2808900",
    "end": "2813940"
  },
  {
    "text": "now that's freaking awesome um let's go one step further and apply",
    "start": "2813940",
    "end": "2821020"
  },
  {
    "text": "it across the entire code base shall we where relevant now it should only be for geometries",
    "start": "2821020",
    "end": "2826780"
  },
  {
    "text": "there are certain other numbers that make sense as decimals and if we change them to floats are going to cause bugs",
    "start": "2826780",
    "end": "2832780"
  },
  {
    "text": "um probably don't want to do that so we do need to be careful which is again why it's important to have that test Suite",
    "start": "2832780",
    "end": "2838000"
  },
  {
    "text": "there so let's get switched to step four and in this case",
    "start": "2838000",
    "end": "2845260"
  },
  {
    "text": "I've now gone and behind the scenes you'll see that I've added things for",
    "start": "2845260",
    "end": "2850540"
  },
  {
    "text": "the transformation matrix I had a decimal and a double implementation and I changed things around and I've moved",
    "start": "2850540",
    "end": "2856119"
  },
  {
    "text": "it all about and everything else which I'm not going to run through with you what I am going to do",
    "start": "2856119",
    "end": "2862300"
  },
  {
    "text": "is go back to our low ball quality performance tester application",
    "start": "2862300",
    "end": "2870420"
  },
  {
    "text": "just to go finger in the air the entire operation roughly how much has it improved",
    "start": "2870579",
    "end": "2877440"
  },
  {
    "text": "guesses",
    "start": "2877540",
    "end": "2880319"
  },
  {
    "text": "no guesses if only that were true",
    "start": "2883720",
    "end": "2891880"
  },
  {
    "text": "all right let's run release mode now you can tell that I've made changes because I haven't cleaned up the",
    "start": "2891880",
    "end": "2897339"
  },
  {
    "text": "compiler warnings welcome to Richard's development technique 101",
    "start": "2897339",
    "end": "2902880"
  },
  {
    "text": "if you can't see that maybe you can see that",
    "start": "2904300",
    "end": "2910800"
  },
  {
    "text": "in fact let's do it without the Run bin release net six",
    "start": "2911200",
    "end": "2917079"
  },
  {
    "text": "uh performance test uh dot XE",
    "start": "2917079",
    "end": "2922740"
  },
  {
    "text": "so we had 4.4 4.1",
    "start": "2923319",
    "end": "2928420"
  },
  {
    "text": "four point hopefully four two so roughly what now",
    "start": "2928540",
    "end": "2936359"
  },
  {
    "text": "four two four three something like that four two are we okay with that number pretend that I've run this 98 times and",
    "start": "2936579",
    "end": "2942339"
  },
  {
    "text": "I've run the Jet and I've done all the other stuff that benchmark.net does beautifully um",
    "start": "2942339",
    "end": "2947740"
  },
  {
    "text": "all right so uh let's go to our notepad",
    "start": "2947740",
    "end": "2953740"
  },
  {
    "text": "where we had our rough numbers before",
    "start": "2953740",
    "end": "2957599"
  },
  {
    "text": "and we are now at 4.3 seconds so from our starting point of dot net core 31",
    "start": "2958839",
    "end": "2963880"
  },
  {
    "text": "which was a cheating start point I get it um I'm going to say I'm claiming it anyway that we got almost a 50 well 40",
    "start": "2963880",
    "end": "2970780"
  },
  {
    "text": "Improvement something like that we've saved 3.5 seconds",
    "start": "2970780",
    "end": "2976240"
  },
  {
    "text": "not bad for one hour's work wasn't one hour's work just pretend um but even from our.net6 code we have",
    "start": "2976240",
    "end": "2983020"
  },
  {
    "text": "saved over two seconds so there's a 30 Improvement for the same run time simply because we went through that process of",
    "start": "2983020",
    "end": "2990220"
  },
  {
    "text": "having the tests Thinking Beyond the surface level Baseline change Baseline again now when",
    "start": "2990220",
    "end": "2996940"
  },
  {
    "text": "I Was preparing this talk I did do the good thing of making performance worse through some of the changes I was trying",
    "start": "2996940",
    "end": "3003680"
  },
  {
    "text": "again this is why the baselining is there because you want to know that when you've made the change it has made a",
    "start": "3003680",
    "end": "3009060"
  },
  {
    "text": "difference a positive difference so coming back to our slides",
    "start": "3009060",
    "end": "3016579"
  },
  {
    "text": "so detective work with puzzle solving we went we identified we baselined",
    "start": "3016579",
    "end": "3022680"
  },
  {
    "text": "we came we saw we conquered it was fantastic then we went home and watched Netflix",
    "start": "3022680",
    "end": "3029400"
  },
  {
    "text": "um the tools we used perfview benchmark.net",
    "start": "3029400",
    "end": "3036119"
  },
  {
    "text": "speed scope to visualize that flame graph in a better way that's not something you have to do but these are all free tools which is great",
    "start": "3036119",
    "end": "3042800"
  },
  {
    "text": "and going beyond the surface at times for the.net source code now you might in",
    "start": "3042800",
    "end": "3048480"
  },
  {
    "text": "some of your applications not be going to dot net source code but going into third-party libraries",
    "start": "3048480",
    "end": "3054180"
  },
  {
    "text": "with most of our things being on nuget a lot of our dependencies on nuget and open source these days being able to dig",
    "start": "3054180",
    "end": "3059339"
  },
  {
    "text": "into third-party libraries is a normal part of development you should and I would encourage you to do that",
    "start": "3059339",
    "end": "3065700"
  },
  {
    "text": "with the Microsoft source code it's all open as well",
    "start": "3065700",
    "end": "3070880"
  },
  {
    "text": "yeah.net codes out there in invisible in the public you might not want to dive into that given what we saw",
    "start": "3070880",
    "end": "3077040"
  },
  {
    "text": "leave that for others and just understand the framework's good but at times you might want to go and have a",
    "start": "3077040",
    "end": "3082380"
  },
  {
    "text": "look and see what it's doing under the hood um and again investigate Beyond just what your code",
    "start": "3082380",
    "end": "3088740"
  },
  {
    "text": "does it's really easy to look online at a line of code and go this looks pretty simple and move on I did that with what",
    "start": "3088740",
    "end": "3094920"
  },
  {
    "text": "we looked at today the first time I went through it okay there's some Matrix numbers okay fine move on and it wasn't until I",
    "start": "3094920",
    "end": "3101880"
  },
  {
    "text": "stepped back paused and went hang on why are we using decimals",
    "start": "3101880",
    "end": "3108240"
  },
  {
    "text": "where's the value and I went ah beyond the surface level",
    "start": "3108240",
    "end": "3114420"
  },
  {
    "text": "all right and at that point we are done I even finished early",
    "start": "3114420",
    "end": "3120300"
  },
  {
    "text": "because it's a performance talk bad jokes aside um",
    "start": "3120300",
    "end": "3126300"
  },
  {
    "text": "that's it in terms of talk we're done now go back to work or go enjoy the rest of the conference or ask questions I'm",
    "start": "3126300",
    "end": "3131520"
  },
  {
    "text": "open for questions yo",
    "start": "3131520",
    "end": "3136800"
  },
  {
    "text": "experience",
    "start": "3136800",
    "end": "3139579"
  },
  {
    "text": "okay so the question what's the experience like upskilling Junior developers with this pair programming",
    "start": "3142640",
    "end": "3149280"
  },
  {
    "text": "more than anything else I mentioned before the overthreading problem that",
    "start": "3149280",
    "end": "3154380"
  },
  {
    "text": "was someone who had less experience in the industry and the way I helped them through that was to walk through and literally do something like this as a an",
    "start": "3154380",
    "end": "3161940"
  },
  {
    "text": "example of the process and just show them by example step by step it does take time but you know it's the classic",
    "start": "3161940",
    "end": "3168720"
  },
  {
    "text": "teach someone to fish versus do the fishing for them and so they can then take that and apply it themselves",
    "start": "3168720",
    "end": "3174359"
  },
  {
    "text": "afterwards so just look for those opportunities and see how it goes from there",
    "start": "3174359",
    "end": "3180180"
  },
  {
    "text": "good question other ones up the back and behind the spotlight that I can't see",
    "start": "3180180",
    "end": "3187400"
  },
  {
    "text": "is perfume for Mac perfume is available for Linux at least the Gathering of data actually I'll show",
    "start": "3188819",
    "end": "3196619"
  },
  {
    "text": "you here we'll just go to uh github.com",
    "start": "3196619",
    "end": "3202760"
  },
  {
    "text": "Microsoft perfview and it's dot net core so you can jump in",
    "start": "3202760",
    "end": "3209940"
  },
  {
    "text": "and get perf View and Trace events which are all built in um that's downloadable and and run it um",
    "start": "3209940",
    "end": "3216960"
  },
  {
    "text": "previous versions.net purview 2 Trace event was separate so if you're running in Linux you had to go and run trace",
    "start": "3216960",
    "end": "3223319"
  },
  {
    "text": "event to do the capture separately and bring it back to Windows to analyze I'm pretty sure three is now runnable on",
    "start": "3223319",
    "end": "3230280"
  },
  {
    "text": "um on Mac and Linux and everything else because it's a net core program and",
    "start": "3230280",
    "end": "3237000"
  },
  {
    "text": "uses WPF Maybe I haven't looked at that part of the source code",
    "start": "3237000",
    "end": "3242579"
  },
  {
    "text": "um but yeah should be okay other questions uh over here",
    "start": "3242579",
    "end": "3249920"
  },
  {
    "text": "yep",
    "start": "3252300",
    "end": "3254720"
  },
  {
    "text": "and it's not obviously how to make it feel less yeah",
    "start": "3261960",
    "end": "3267000"
  },
  {
    "text": "that's the how do you go beyond the surface level question so the question just to repeat is if I find something",
    "start": "3271339",
    "end": "3277079"
  },
  {
    "text": "that I think needs to be improved but I'm not sure how to improve it what do I do um",
    "start": "3277079",
    "end": "3283020"
  },
  {
    "text": "what do most people do in that situation you start exploring you start trying",
    "start": "3283020",
    "end": "3288660"
  },
  {
    "text": "things and this is where that baselining and and re-measuring becomes really important so it might take you a few",
    "start": "3288660",
    "end": "3294780"
  },
  {
    "text": "iterations to play around with it and go I don't know you know for example I'm doing string manipulation do I want to",
    "start": "3294780",
    "end": "3300960"
  },
  {
    "text": "turn this from a string into a span and then do some work across spans for example or use a memory of type T kind",
    "start": "3300960",
    "end": "3307500"
  },
  {
    "text": "of construct um only one way to find out try it see if it works or not the other",
    "start": "3307500",
    "end": "3314880"
  },
  {
    "text": "thing you can do is look up the tree so it's not always what's below it's what what you're being called from",
    "start": "3314880",
    "end": "3321599"
  },
  {
    "text": "and maybe you're being called too many times from parent code so again something like the flame graph",
    "start": "3321599",
    "end": "3327960"
  },
  {
    "text": "you might see that there are lots of callers coming into the same method and that your method is spread everywhere so",
    "start": "3327960",
    "end": "3335040"
  },
  {
    "text": "maybe it's a case of collating that and doing a work in batch somewhere else or pre-computing things",
    "start": "3335040",
    "end": "3340800"
  },
  {
    "text": "and and changing some of your application design so that you're not as chatty particularly for Network calls and the",
    "start": "3340800",
    "end": "3347460"
  },
  {
    "text": "like um there's no real",
    "start": "3347460",
    "end": "3352800"
  },
  {
    "text": "guidance I can give you other than to try stuff but think more about the problem overall not just the specific so",
    "start": "3352800",
    "end": "3359220"
  },
  {
    "text": "you will go deep and you will also go up in terms of nice work other questions",
    "start": "3359220",
    "end": "3366660"
  },
  {
    "text": "yep yep",
    "start": "3366660",
    "end": "3373819"
  },
  {
    "text": "um so yes though there's some of the tools you'll use microservices are going to be you're looking at the network",
    "start": "3378480",
    "end": "3384540"
  },
  {
    "text": "calls so in the profiler yep",
    "start": "3384540",
    "end": "3389880"
  },
  {
    "text": "um sorry yeah waiting for it to work",
    "start": "3391020",
    "end": "3398000"
  },
  {
    "text": "probably for a single service so the question",
    "start": "3399960",
    "end": "3405059"
  },
  {
    "text": "just for those who didn't hear is what do we do in a micro Services situation um so if we're doing a single service",
    "start": "3405059",
    "end": "3411059"
  },
  {
    "text": "it's effectively an executable so you know you you might want to abstract away",
    "start": "3411059",
    "end": "3416540"
  },
  {
    "text": "uh Network because I have mock implementations if you are running in kubernetes there's",
    "start": "3416540",
    "end": "3424079"
  },
  {
    "text": "a tool we use internally called telepresence where we can actually have",
    "start": "3424079",
    "end": "3429599"
  },
  {
    "text": "our app or our microservice is deployed to a cluster and using telepresence run",
    "start": "3429599",
    "end": "3435240"
  },
  {
    "text": "one service locally and basically proxy Network traffic to my local machine and back up so I can run a full environment",
    "start": "3435240",
    "end": "3440520"
  },
  {
    "text": "with just one service on my local machine and do work around that so that",
    "start": "3440520",
    "end": "3445619"
  },
  {
    "text": "if that's a value uh Telly Telly presence dot IO this uh",
    "start": "3445619",
    "end": "3453000"
  },
  {
    "text": "cool thing here that's yep well they changed the website",
    "start": "3453000",
    "end": "3458700"
  },
  {
    "text": "um that's effectively this I'll just quiet",
    "start": "3458700",
    "end": "3464880"
  },
  {
    "text": "we're going way off track here but that's okay I don't mind doing that um",
    "start": "3464880",
    "end": "3470660"
  },
  {
    "text": "this one one of these architecture something uh",
    "start": "3471660",
    "end": "3479299"
  },
  {
    "text": "load the page no that's intercepts anyway um effectively this tool will as I said do",
    "start": "3479400",
    "end": "3485880"
  },
  {
    "text": "proxy until from your local machine so you can then attach to your local machine you don't even have to run it in a container",
    "start": "3485880",
    "end": "3492000"
  },
  {
    "text": "you can actually run a local process and have the traffic intercepted going to and from which is just",
    "start": "3492000",
    "end": "3498480"
  },
  {
    "text": "fantastic needs a bit of setup you've got to have some obviously uh updates on the cluster",
    "start": "3498480",
    "end": "3505680"
  },
  {
    "text": "to put in the the Interceptor don't do it in production",
    "start": "3505680",
    "end": "3510619"
  },
  {
    "text": "but that could work alternatively you try and run containers or mock services",
    "start": "3511859",
    "end": "3516900"
  },
  {
    "text": "or something so you can isolate but yeah uh final question from anyone",
    "start": "3516900",
    "end": "3523819"
  },
  {
    "text": "I can't see if you're over there but that's okay all right well in that case ladies and gentlemen thank you very much go enjoy NDC and I will talk to you soon",
    "start": "3524400",
    "end": "3533240"
  },
  {
    "text": "foreign [Applause]",
    "start": "3533760",
    "end": "3537500"
  }
]