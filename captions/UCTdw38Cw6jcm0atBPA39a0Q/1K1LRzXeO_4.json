[
  {
    "text": "hello everybody my clickbaity title has worked",
    "start": "2220",
    "end": "8660"
  },
  {
    "text": "fantastic welcome to open API you're doing it wrong and I would just like to",
    "start": "8660",
    "end": "14700"
  },
  {
    "text": "thank each and every one of you individually for coming to my talk because I don't have very much content",
    "start": "14700",
    "end": "21300"
  },
  {
    "text": "so hi Morton thank you hi what's your name no I'm kidding",
    "start": "21300",
    "end": "27140"
  },
  {
    "text": "uh yeah no this is uh this is a talk that popped into my head uh at the end",
    "start": "27140",
    "end": "34559"
  },
  {
    "text": "of last year where I was working where I'm still working where we have a lot of apis we're an API first company lots of",
    "start": "34559",
    "end": "40920"
  },
  {
    "text": "teams working on apis that other teams will call and mostly those are HTTP apis",
    "start": "40920",
    "end": "48440"
  },
  {
    "text": "internally they call them rest apis they're not rest apis no apis are rest apis rest was a stupid",
    "start": "48440",
    "end": "56039"
  },
  {
    "text": "idea and we're not doing it now we just use rest API to refer to any API that's",
    "start": "56039",
    "end": "62219"
  },
  {
    "text": "Json over HTTP but it's not rest it's um it's open API and as dot net developers",
    "start": "62219",
    "end": "70580"
  },
  {
    "text": "the killer burning question for all of us when it comes to open API and Swagger",
    "start": "70580",
    "end": "77400"
  },
  {
    "text": "is should I use swashbuckle or should I use n swag and I am here to answer that",
    "start": "77400",
    "end": "84479"
  },
  {
    "text": "question once and for all",
    "start": "84479",
    "end": "89179"
  },
  {
    "text": "okay I don't have anything against the people behind swashbuckle and then",
    "start": "92820",
    "end": "99360"
  },
  {
    "text": "swag and what they do they do well and",
    "start": "99360",
    "end": "104880"
  },
  {
    "text": "it's better than nothing it's better than just not having Swagger for your",
    "start": "104880",
    "end": "111360"
  },
  {
    "text": "project but it is missing the point of open API it's missing the point of",
    "start": "111360",
    "end": "118200"
  },
  {
    "text": "swagger and I'm hoping over the next 58 minutes to convince you of that and send",
    "start": "118200",
    "end": "124740"
  },
  {
    "text": "you a way to do things differently so let's start off by talking about what open API is because",
    "start": "124740",
    "end": "131819"
  },
  {
    "text": "as dot net developers you include swashbuckle or end swag in your startup",
    "start": "131819",
    "end": "138060"
  },
  {
    "text": "code for your ASP netcore project and you put the attributes on things and then something happens and your website",
    "start": "138060",
    "end": "145680"
  },
  {
    "text": "your API magically has a slash Swagger slash UI index.html page you don't know where it",
    "start": "145680",
    "end": "152879"
  },
  {
    "text": "came from but it shows your API if you set it up properly it makes it possible to call your API and and run test things",
    "start": "152879",
    "end": "160440"
  },
  {
    "text": "against it not many people in the.net world look at",
    "start": "160440",
    "end": "165959"
  },
  {
    "text": "the actual openapi.json file that is being generated underneath that that's the",
    "start": "165959",
    "end": "174000"
  },
  {
    "text": "actual documentation of your API so let's start we'll talk about the open API versions so open API 2.0 was Swagger",
    "start": "174000",
    "end": "184140"
  },
  {
    "text": "so there was Swagger um one and Swagger 2.0 and then Swagger",
    "start": "184140",
    "end": "190680"
  },
  {
    "text": "2.0 they said okay this is going to be a standard we're going to call it open API people are going to collaborate on it",
    "start": "190680",
    "end": "196440"
  },
  {
    "text": "and then so the next version was not called Swagger it was called open API 3.0 this is the current version this is",
    "start": "196440",
    "end": "204239"
  },
  {
    "text": "the thing that's supported by all the tooling uh and and everything else that's out there there is an open API",
    "start": "204239",
    "end": "210800"
  },
  {
    "text": "3.1 which is new and improved and we'll talk about the main difference there",
    "start": "210800",
    "end": "216720"
  },
  {
    "text": "later on and there is a speculative open API 4.0 which currently has the code",
    "start": "216720",
    "end": "224400"
  },
  {
    "text": "name moonwalk and we'll look at that later on as well but for the time being right now if you want the best",
    "start": "224400",
    "end": "230879"
  },
  {
    "text": "experience you should use open API 3.0 fun fact this is the first time I've",
    "start": "230879",
    "end": "237060"
  },
  {
    "text": "done this presentation where I remembered to make this slide already",
    "start": "237060",
    "end": "242580"
  },
  {
    "text": "have everything remove the animation on the slide because it used to go open and then all the versions would disappear",
    "start": "242580",
    "end": "247920"
  },
  {
    "text": "and it would just have to use this one Arrow so yay me third time fourth time lucky",
    "start": "247920",
    "end": "254580"
  },
  {
    "text": "so how do we Implement open API well like I say in.net we had a bunch of",
    "start": "254580",
    "end": "260940"
  },
  {
    "text": "attributes to our MVC controllers or we had a bunch of dot this dot that dot the",
    "start": "260940",
    "end": "266520"
  },
  {
    "text": "other method calls on the end of our minimal API definitions and we say okay",
    "start": "266520",
    "end": "272100"
  },
  {
    "text": "so this is an ad and it's a post method and it produces 201 with a type of book",
    "start": "272100",
    "end": "278460"
  },
  {
    "text": "and we just fill our codes with attributes I see a lot of apis where what they're actually",
    "start": "278460",
    "end": "285300"
  },
  {
    "text": "doing is incredibly simple they've got a DB context being injected they get a",
    "start": "285300",
    "end": "290759"
  },
  {
    "text": "record by ID and this is a whole other talk they then return the Entity",
    "start": "290759",
    "end": "296520"
  },
  {
    "text": "framework class so that it can be serialized adjacent don't do that either but I'm not going to get into that now",
    "start": "296520",
    "end": "302600"
  },
  {
    "text": "so you end up with this situation where to get a quality open API description of",
    "start": "302600",
    "end": "310139"
  },
  {
    "text": "the project there's more lines of code given over to those attributes than there is to the functionality of your",
    "start": "310139",
    "end": "317880"
  },
  {
    "text": "code which is just weird and wrong you get methods that won't fit on a page",
    "start": "317880",
    "end": "323759"
  },
  {
    "text": "because the attributes section is is running at like 30 of the things",
    "start": "323759",
    "end": "330380"
  },
  {
    "text": "everywhere else in the node world in the python world in the Ruby world in in all",
    "start": "330380",
    "end": "335880"
  },
  {
    "text": "the other places when they do open AP I think some Java things might now do the",
    "start": "335880",
    "end": "341000"
  },
  {
    "text": "reflection-based stuff but most uh teams particularly in the dynamic world where",
    "start": "341000",
    "end": "347580"
  },
  {
    "text": "it can't make inferences about types and generate Json schemas and that sort of thing they write their open API file by",
    "start": "347580",
    "end": "354479"
  },
  {
    "text": "hand usually in the yaml unless they really hate themselves and then they build the application to",
    "start": "354479",
    "end": "361979"
  },
  {
    "text": "match their open API dot yaml file they are hand crafted artisanal yaml files",
    "start": "361979",
    "end": "368220"
  },
  {
    "text": "that people maintain and Source control and I know some people uh sort of got",
    "start": "368220",
    "end": "375060"
  },
  {
    "text": "yaml fatigue at this point if you're using Docker or particularly if you're using kubernetes because you've got your",
    "start": "375060",
    "end": "381300"
  },
  {
    "text": "kubernetes resource files and you've got your Helm charts and you've got this and that and the other and then you've got",
    "start": "381300",
    "end": "388020"
  },
  {
    "text": "your CI CD pipelines with GitHub actions or as your devops which is another crapload of yaml there's yaml all over",
    "start": "388020",
    "end": "395160"
  },
  {
    "text": "the place and you just you don't want another piece of yaml in your life just deal with it it's always going to be all",
    "start": "395160",
    "end": "402060"
  },
  {
    "text": "yaml files all the way down uh when we get to webassembly running in little web",
    "start": "402060",
    "end": "407759"
  },
  {
    "text": "assembly containers we're still going to have yaml manifests for them so just",
    "start": "407759",
    "end": "413220"
  },
  {
    "text": "it's fine let's just use a gamble it's the absolute worst data serialization",
    "start": "413220",
    "end": "420180"
  },
  {
    "text": "and structuring format except for all the others we've tried",
    "start": "420180",
    "end": "426199"
  },
  {
    "text": "I still remember I've been doing this not speaking at conferences um and but I have been uh professional",
    "start": "426960",
    "end": "434699"
  },
  {
    "text": "software developer since 1990 so that's 33 years um when we first started when I was",
    "start": "434699",
    "end": "441660"
  },
  {
    "text": "started out with Infamous 4gl and wise Terminals and sco xenix and that sort of",
    "start": "441660",
    "end": "446759"
  },
  {
    "text": "stuff uh we had waterfall we had ssadm we had prints too there was a process",
    "start": "446759",
    "end": "453419"
  },
  {
    "text": "and business analysts would generate specifications and then analyst",
    "start": "453419",
    "end": "459660"
  },
  {
    "text": "programmers would then turn those specifications into code and we actually",
    "start": "459660",
    "end": "466560"
  },
  {
    "text": "used to say wouldn't it be really nice we used to use lint to check that our C",
    "start": "466560",
    "end": "471599"
  },
  {
    "text": "was going to compile before we tried to compile it because lint would run in about two minutes and the bills used to",
    "start": "471599",
    "end": "478500"
  },
  {
    "text": "take two and a half hours and we played table tennis and when you say wouldn't it be great if you could lint the spec",
    "start": "478500",
    "end": "484560"
  },
  {
    "text": "if you could check that the spec was correct if there was some kind of compile step that the spec could go",
    "start": "484560",
    "end": "490620"
  },
  {
    "text": "through because it was Word documents or it was text it wasn't Word documents this was 1990. there were text documents",
    "start": "490620",
    "end": "497220"
  },
  {
    "text": "they were they were just unstructured and now we actually have a spec format",
    "start": "497220",
    "end": "504240"
  },
  {
    "text": "that you can lint and it will tell you if there are errors and you can check",
    "start": "504240",
    "end": "509879"
  },
  {
    "text": "that it's right and it's called open API and when we're building Json over HTTP",
    "start": "509879",
    "end": "515940"
  },
  {
    "text": "apis this is our specification I actually see people so they go oh",
    "start": "515940",
    "end": "523260"
  },
  {
    "text": "we're going to use swashbuckle we're going to use n swag to generate our open api.json file but we need the spec for",
    "start": "523260",
    "end": "528959"
  },
  {
    "text": "the API so they write the spec in markdown in the GitHub repository and what you're doing is you're writing here",
    "start": "528959",
    "end": "535980"
  },
  {
    "text": "open API yaml file in markdown with headers instead of sections and",
    "start": "535980",
    "end": "541260"
  },
  {
    "text": "everything else and it's this is something we've been brought to expect in the world of dot",
    "start": "541260",
    "end": "549360"
  },
  {
    "text": "net and I blame WCF um I blame WCF for many many things",
    "start": "549360",
    "end": "557120"
  },
  {
    "text": "including my failure to achieve Microsoft certification",
    "start": "557120",
    "end": "562880"
  },
  {
    "text": "because I I breathed The Entity frame and various components I could not",
    "start": "563040",
    "end": "569100"
  },
  {
    "text": "because it kept asking me questions about the configuration files and uh",
    "start": "569100",
    "end": "574320"
  },
  {
    "text": "server config and everything else um but uh the main reason why I blame",
    "start": "574320",
    "end": "579899"
  },
  {
    "text": "WCF is that the thing it did uh 90 of the time when we use WCF we were",
    "start": "579899",
    "end": "586980"
  },
  {
    "text": "building a soap service and the idea was that you would write your contract using",
    "start": "586980",
    "end": "592380"
  },
  {
    "text": "C sharp and decorate it with some attributes and then it would generate this ship this is wisdal uh web service",
    "start": "592380",
    "end": "599760"
  },
  {
    "text": "definition language and this in eight point font is just uh",
    "start": "599760",
    "end": "607380"
  },
  {
    "text": "two messages uh and one operation with an input and and so yeah if you actually",
    "start": "607380",
    "end": "614339"
  },
  {
    "text": "built a WCF service that had like a service with let's say 15 methods on it",
    "start": "614339",
    "end": "620399"
  },
  {
    "text": "that wisdal file would just be impenetrable XML going on for page after",
    "start": "620399",
    "end": "625560"
  },
  {
    "text": "page and so in that context yeah okay that was good",
    "start": "625560",
    "end": "631680"
  },
  {
    "text": "nobody wants to hand maintain a wisdal file but then we got used to this idea",
    "start": "631680",
    "end": "636839"
  },
  {
    "text": "that these API definitions were going to be generated for us and so we've ended up with swashbuckle and end swag and uh",
    "start": "636839",
    "end": "644760"
  },
  {
    "text": "and also grpc um the alternative implementation of grpc which Mark gravel does got a lot of",
    "start": "644760",
    "end": "652260"
  },
  {
    "text": "respect for Mark he's a great programmer but his grpc implementation is from hell and you shouldn't use it",
    "start": "652260",
    "end": "660560"
  },
  {
    "text": "um so why am I so against this so your open API file and I'm going to",
    "start": "660600",
    "end": "669120"
  },
  {
    "text": "say it's just the yaml file don't do the Json way but it's the source of Truth",
    "start": "669120",
    "end": "674700"
  },
  {
    "text": "for your team okay this is what you have agreed that your API should look like",
    "start": "674700",
    "end": "680959"
  },
  {
    "text": "and if you can have that in a single file a single formattable highlightable",
    "start": "680959",
    "end": "688140"
  },
  {
    "text": "text file that you can all compare and if you want to make changes to the",
    "start": "688140",
    "end": "693959"
  },
  {
    "text": "design of the API you can do it in one place and you can view it without having",
    "start": "693959",
    "end": "700079"
  },
  {
    "text": "to clone and build and run the application so that you can actually get",
    "start": "700079",
    "end": "706320"
  },
  {
    "text": "the Json file out of it that can be your specification that is what you have all",
    "start": "706320",
    "end": "712500"
  },
  {
    "text": "agreed this is um this is the key point if you are using",
    "start": "712500",
    "end": "719700"
  },
  {
    "text": "swashbuckle or n swag your design and your implementation are the same thing if you want to change the design you",
    "start": "719700",
    "end": "727320"
  },
  {
    "text": "have to change the implementation there's no two-step process now for some",
    "start": "727320",
    "end": "733019"
  },
  {
    "text": "things if you're working on a quick and dirty API and it's just you maybe that's okay but you know hands up if you are",
    "start": "733019",
    "end": "740160"
  },
  {
    "text": "actually just working on a quick and dirty API and it's just you in your day job hands up if you're part of a team",
    "start": "740160",
    "end": "746640"
  },
  {
    "text": "working on an API yeah there we go hands up if your arms don't work",
    "start": "746640",
    "end": "753680"
  },
  {
    "text": "but yeah you sit around and you argue and you say",
    "start": "754440",
    "end": "760220"
  },
  {
    "text": "this should return this type of object it should have these properties it should have this list of other objects",
    "start": "760220",
    "end": "766079"
  },
  {
    "text": "inside it and then we need to support a get and a put and a post and we should",
    "start": "766079",
    "end": "771420"
  },
  {
    "text": "have a get with a list and a get with an ID that gets a specific one and maybe we want a way of querying it and posts",
    "start": "771420",
    "end": "777480"
  },
  {
    "text": "should return 201 and puts should return 202 no they shouldn't they should return",
    "start": "777480",
    "end": "782519"
  },
  {
    "text": "a 201 if it's created or a 200 if it was already there and we've updated it and no it shouldn't it should return a 204",
    "start": "782519",
    "end": "788339"
  },
  {
    "text": "no content 90 of the meeting will obviously be which variant of a 200",
    "start": "788339",
    "end": "793440"
  },
  {
    "text": "return code you're actually returning but when you have decided and agreed it it goes into your open api.yaml file",
    "start": "793440",
    "end": "801600"
  },
  {
    "text": "okay didn't sort that one out",
    "start": "801600",
    "end": "807839"
  },
  {
    "text": "better description I can't no idea how to mess with the animations on them on PowerPoint uh but I can build apis",
    "start": "807839",
    "end": "815940"
  },
  {
    "text": "so it is a better description of your API than can be generated by nswag or",
    "start": "815940",
    "end": "821880"
  },
  {
    "text": "swashbuckle theoretically possible if you know the",
    "start": "821880",
    "end": "827880"
  },
  {
    "text": "magic incantations and all the attributes and all the extension methods and all the options that you can put",
    "start": "827880",
    "end": "834720"
  },
  {
    "text": "into the startup code to set almost every part of an open API",
    "start": "834720",
    "end": "842899"
  },
  {
    "text": "description that can be set it's just it gets really difficult for some of them",
    "start": "842899",
    "end": "849800"
  },
  {
    "text": "and there's other things you can do in a yaml file like for example yaml files",
    "start": "849800",
    "end": "856500"
  },
  {
    "text": "support comments and I haven't found anything in N swag or swashbuckle that will let you add",
    "start": "856500",
    "end": "862680"
  },
  {
    "text": "comments into your output Json or yeah well certainly not in your Json but into",
    "start": "862680",
    "end": "868980"
  },
  {
    "text": "your output yaml file and we can do automated documentation of",
    "start": "868980",
    "end": "874920"
  },
  {
    "text": "this as well and I'm going to show examples of that later on and when I say documentation I don't mean Swagger UI I",
    "start": "874920",
    "end": "882240"
  },
  {
    "text": "mean some actual really nice static documentation files uh that you can",
    "start": "882240",
    "end": "887579"
  },
  {
    "text": "publish that will then get people off your back and stop saying Hey how do I call this from curl how do I call this",
    "start": "887579",
    "end": "893760"
  },
  {
    "text": "from python so I'm going to this this is grpc",
    "start": "893760",
    "end": "899279"
  },
  {
    "text": "actually this is just Proto buff uh the way protobuf works and grpc works",
    "start": "899279",
    "end": "906540"
  },
  {
    "text": "this is cross-platform It's supported by almost everything and you write a Proto",
    "start": "906540",
    "end": "911820"
  },
  {
    "text": "file and I've been doing a workshop for a few years now on how to do grpc in.net",
    "start": "911820",
    "end": "917160"
  },
  {
    "text": "using this protofile approach and you define your messages and you define your services and then the compiler generates",
    "start": "917160",
    "end": "925519"
  },
  {
    "text": "stubs for those uh those assets so it generates the classes for the messages",
    "start": "925519",
    "end": "932220"
  },
  {
    "text": "and it generates a base class for the service and then it uh you you can use",
    "start": "932220",
    "end": "938339"
  },
  {
    "text": "that and all the serialization code is pre-generated and so it works really well with Native iot and that sort of thing",
    "start": "938339",
    "end": "944760"
  },
  {
    "text": "um but you can see here this is uh the money type this is from Google's public apis uh that they use for things like",
    "start": "944760",
    "end": "952560"
  },
  {
    "text": "AdSense and double click and so forth and they there's no decimal type in protobuf they have double and Float",
    "start": "952560",
    "end": "959639"
  },
  {
    "text": "which obviously isn't great for money and so they have this money type which has a currency code and a units and a",
    "start": "959639",
    "end": "966480"
  },
  {
    "text": "memos and this is the file that they publish if you download money.proto from the Google apis uh site and this is it",
    "start": "966480",
    "end": "974579"
  },
  {
    "text": "and you can see it's got comments in here it's saying okay string currency code uh telling you that it's a string",
    "start": "974579",
    "end": "981720"
  },
  {
    "text": "is not particularly useful telling you that it's defined in ISO 4217 means you",
    "start": "981720",
    "end": "987060"
  },
  {
    "text": "can go and find a pirated copy of iso4217 somewhere because ISO charge for",
    "start": "987060",
    "end": "992940"
  },
  {
    "text": "access to their bloody standards and then it explains that the whole units of the amount and the Nanos of the amount",
    "start": "992940",
    "end": "999600"
  },
  {
    "text": "it tells you how those are working you can put comments in there and you can't",
    "start": "999600",
    "end": "1004940"
  },
  {
    "text": "do that with using n swag or swashbuckle but if you're writing a yaml file by hand you can put as many comments as you",
    "start": "1004940",
    "end": "1011300"
  },
  {
    "text": "like in there so I mentioned earlier that I think the",
    "start": "1011300",
    "end": "1017959"
  },
  {
    "text": "majority of net developers and by the way if you're already doing this then the total uh the title of the talk was",
    "start": "1017959",
    "end": "1024319"
  },
  {
    "text": "wrong and I love you and you're awesome and carry on doing it um and but if you arguing with somebody",
    "start": "1024319",
    "end": "1029540"
  },
  {
    "text": "uh then you can point them and go look Mark rindall says you should do it this way and so that must be true",
    "start": "1029540",
    "end": "1036500"
  },
  {
    "text": "uh uh if you're using swashbuckle if you're",
    "start": "1036500",
    "end": "1042380"
  },
  {
    "text": "using n swag there's a very good chance that you don't have the faintest idea of what's actually in that file that it",
    "start": "1042380",
    "end": "1048079"
  },
  {
    "text": "generates whether it's Json or yaml and so we're going to take a look at the actual structure of open API uh and and",
    "start": "1048079",
    "end": "1055820"
  },
  {
    "text": "how you would build it out so we start off at the top we have kind",
    "start": "1055820",
    "end": "1060860"
  },
  {
    "text": "of like our header and we tell the we're telling the text editor essentially at",
    "start": "1060860",
    "end": "1066260"
  },
  {
    "text": "this point this is open API 3.0 so use those linting rules and intellisense and",
    "start": "1066260",
    "end": "1071780"
  },
  {
    "text": "so forth and then we have an info section there's a bunch of stuff that can go in here but we've got a title and",
    "start": "1071780",
    "end": "1078080"
  },
  {
    "text": "a version that's kind of like the bare minimum and then we can put our contact information in there as well including",
    "start": "1078080",
    "end": "1083299"
  },
  {
    "text": "my email address which is now on YouTube that's going to be fun and I'll just draw attention to it in case anybody",
    "start": "1083299",
    "end": "1089360"
  },
  {
    "text": "didn't notice uh and then we can define tags as well and we'll come back to tags uh in a",
    "start": "1089360",
    "end": "1095900"
  },
  {
    "text": "little while and then the top level kind of set of",
    "start": "1095900",
    "end": "1100940"
  },
  {
    "text": "items uh in an open API document is your paths",
    "start": "1100940",
    "end": "1106640"
  },
  {
    "text": "so we have a paths section and then we just put in the Uris so here we've got",
    "start": "1106640",
    "end": "1112039"
  },
  {
    "text": "slash red slash books and we say this has got a get method on it and that is",
    "start": "1112039",
    "end": "1117980"
  },
  {
    "text": "the HTTP method so you're going to have get put post patch delete Etc",
    "start": "1117980",
    "end": "1123820"
  },
  {
    "text": "operation ID sadly optional your open API file will lint perfectly well",
    "start": "1123820",
    "end": "1130340"
  },
  {
    "text": "without an operation ID but you really should put one in there it's very helpful we have a summary and you can",
    "start": "1130340",
    "end": "1136880"
  },
  {
    "text": "actually put markdown in there you can tell it do the yaml thing for a multi-line string which I think is a",
    "start": "1136880",
    "end": "1143419"
  },
  {
    "text": "pipe and then you just do a text following that and so you can",
    "start": "1143419",
    "end": "1149059"
  },
  {
    "text": "write as much as you want about what this method is doing what this endpoint is doing we say which of the tags this",
    "start": "1149059",
    "end": "1157760"
  },
  {
    "text": "is part of so this is part of our books tag and then we Define our responses and",
    "start": "1157760",
    "end": "1162919"
  },
  {
    "text": "we say Okay so we've got a 200 response we're going to put that in quotes because yaml can do weird things if you",
    "start": "1162919",
    "end": "1168559"
  },
  {
    "text": "use numbers as property names so we'll put 200 in there we'll say the description of that is okay",
    "start": "1168559",
    "end": "1176000"
  },
  {
    "text": "and then we drill into our response",
    "start": "1176000",
    "end": "1181039"
  },
  {
    "text": "so we can specify the content of our response and we can actually specify",
    "start": "1181039",
    "end": "1187820"
  },
  {
    "text": "different descriptions of That content based on media types ninety percent of",
    "start": "1187820",
    "end": "1193640"
  },
  {
    "text": "the time you're just going to say application slash Json but if you're working in a place where you've got Java",
    "start": "1193640",
    "end": "1200360"
  },
  {
    "text": "programmers in the early 2000s are calling your service then you could put",
    "start": "1200360",
    "end": "1205460"
  },
  {
    "text": "application slash XML or some other format in there as well and then we can specify a schema and in",
    "start": "1205460",
    "end": "1212900"
  },
  {
    "text": "this case to make it fit on the screen I'm just using a reference and we can also specify examples and that's really",
    "start": "1212900",
    "end": "1219679"
  },
  {
    "text": "nice as well that means that in the documentation when it's generated instead of going oh",
    "start": "1219679",
    "end": "1226400"
  },
  {
    "text": "this one's a number one one one one one this one's a string quote string quote",
    "start": "1226400",
    "end": "1231679"
  },
  {
    "text": "it will actually use realistic looking examples of your domain",
    "start": "1231679",
    "end": "1239179"
  },
  {
    "text": "schema schema is basically adjacent basically",
    "start": "1239179",
    "end": "1244220"
  },
  {
    "text": "Json schema okay so we have schema type object properties so it's written in the",
    "start": "1244220",
    "end": "1250700"
  },
  {
    "text": "Apple but it's Json schema and yaml is Json but without the quotes and curly",
    "start": "1250700",
    "end": "1257179"
  },
  {
    "text": "braces and with significant white space they are the underlying representation is essentially the same you can use Json",
    "start": "1257179",
    "end": "1263780"
  },
  {
    "text": "inside the animal you can use Json arrays and all sorts of weird stuff but we have schema so the type of this is",
    "start": "1263780",
    "end": "1269840"
  },
  {
    "text": "object it has some properties uh type ID title and author those are strings",
    "start": "1269840",
    "end": "1275780"
  },
  {
    "text": "finished at is a string but the format of it is a date time because Json doesn't understand dates so we have to",
    "start": "1275780",
    "end": "1282559"
  },
  {
    "text": "say this is going to be a date time so that means that'll be an uh an ISO 8601",
    "start": "1282559",
    "end": "1288020"
  },
  {
    "text": "date format on there and we can put that in line or we can",
    "start": "1288020",
    "end": "1294200"
  },
  {
    "text": "put it somewhere else and we can reference it so yes and",
    "start": "1294200",
    "end": "1299480"
  },
  {
    "text": "uh it's it's Json schema but okay so the",
    "start": "1299480",
    "end": "1305000"
  },
  {
    "text": "difference uh the primary difference between open API 3.0 and open API 3.1 is",
    "start": "1305000",
    "end": "1311659"
  },
  {
    "text": "that in 3.1 it actually is Json schema it follows the same rules the same",
    "start": "1311659",
    "end": "1316760"
  },
  {
    "text": "validation same everything else in 3.0 it's kind of a subset bit of a superset",
    "start": "1316760",
    "end": "1323360"
  },
  {
    "text": "call it a variant of Json schema it's pretty much the same unless you're doing very weird things you're not going to",
    "start": "1323360",
    "end": "1329720"
  },
  {
    "text": "run into uh issues with that okay",
    "start": "1329720",
    "end": "1335000"
  },
  {
    "text": "and then we have our parameters that are being passed in to our",
    "start": "1335000",
    "end": "1340280"
  },
  {
    "text": "um our methods and so here we've got our path is uh Slash red slash book slash ID",
    "start": "1340280",
    "end": "1347419"
  },
  {
    "text": "um in curly braces it's the same format as is used in almost every routing system certainly the same as is used",
    "start": "1347419",
    "end": "1353780"
  },
  {
    "text": "in.net or ASB net core so this gets it actually gets the details of a completed",
    "start": "1353780",
    "end": "1359840"
  },
  {
    "text": "book but we have our parameters list here and we see Name ID so that's linking it to that ID part from the path",
    "start": "1359840",
    "end": "1366860"
  },
  {
    "text": "there we tell it it's in the path and you can also say in body or in headers",
    "start": "1366860",
    "end": "1373720"
  },
  {
    "text": "in there as well and then we can put a schema in there since this is in our",
    "start": "1373720",
    "end": "1378860"
  },
  {
    "text": "path it's obviously just going to be a simple type like an INT or a string but",
    "start": "1378860",
    "end": "1384559"
  },
  {
    "text": "if it's in the body then it could potentially be a full Json schema is it required yes",
    "start": "1384559",
    "end": "1392179"
  },
  {
    "text": "and uh that's uh yeah",
    "start": "1392179",
    "end": "1398299"
  },
  {
    "text": "that's how parameters work I thought I had something else to say there but I don't okay",
    "start": "1398299",
    "end": "1404360"
  },
  {
    "text": "so requests if we have a post operation it's got a",
    "start": "1404360",
    "end": "1410120"
  },
  {
    "text": "request body if we have a put operation it probably has a request body and so here we can have a request body and we",
    "start": "1410120",
    "end": "1418340"
  },
  {
    "text": "can say we can specify the content and the application type and so forth we can have a schema in here we can also have a",
    "start": "1418340",
    "end": "1423980"
  },
  {
    "text": "required section on our object schema here that says you have to put in title and author otherwise we're going to send",
    "start": "1423980",
    "end": "1430460"
  },
  {
    "text": "you a 400 bad request response and so we can put that in there as well",
    "start": "1430460",
    "end": "1437539"
  },
  {
    "text": "so an API uh if I've got my my sort of done that",
    "start": "1437539",
    "end": "1444380"
  },
  {
    "text": "API which is what I'm using as an example here done that is I don't like to do lists because they're incredibly",
    "start": "1444380",
    "end": "1450320"
  },
  {
    "text": "stressful and it's too much pressure so I'm creating a done list so after I've",
    "start": "1450320",
    "end": "1456200"
  },
  {
    "text": "done something I can just arbitrarily go I did that but I haven't got anything saying oh you need to do that I just go",
    "start": "1456200",
    "end": "1462559"
  },
  {
    "text": "yay I have succeeded so I get all the gratification and and benefit and",
    "start": "1462559",
    "end": "1468440"
  },
  {
    "text": "endorphins of marking something is done with it never having been there marked as not yet done so this is this all",
    "start": "1468440",
    "end": "1475520"
  },
  {
    "text": "comes from that so this is kind of like add a distance for a run or a walk or",
    "start": "1475520",
    "end": "1480679"
  },
  {
    "text": "something and obviously the properties of a distance would be a title and an author and I didn't just completely",
    "start": "1480679",
    "end": "1487580"
  },
  {
    "text": "screw up my code samples one day I'll give this talk and I'll have fixed all this instead of just",
    "start": "1487580",
    "end": "1493520"
  },
  {
    "text": "calling it out like an idiot uh but today is not that day",
    "start": "1493520",
    "end": "1499419"
  },
  {
    "text": "um so yes but like one of the things in there is",
    "start": "1499940",
    "end": "1505039"
  },
  {
    "text": "books which do have a title and an author and a date that I finished it at and if I get a list of books then the",
    "start": "1505039",
    "end": "1510679"
  },
  {
    "text": "response type the schema is going to be booked if I get a single book then the response type is going to be booked if I",
    "start": "1510679",
    "end": "1516020"
  },
  {
    "text": "post a book the request type is is going to be booked I don't want to repeat that",
    "start": "1516020",
    "end": "1521059"
  },
  {
    "text": "all over the place and so we have components and I'm going to switch over",
    "start": "1521059",
    "end": "1526820"
  },
  {
    "text": "at this point to Visual Studio code",
    "start": "1526820",
    "end": "1532820"
  },
  {
    "text": "and I'm going to move this onto here where he and we're going to close",
    "start": "1532820",
    "end": "1539779"
  },
  {
    "text": "that and we're going to zoom in okay",
    "start": "1539779",
    "end": "1546500"
  },
  {
    "text": "so this is can you see that at the back it's a big screen should be able to so",
    "start": "1546500",
    "end": "1552020"
  },
  {
    "text": "yeah here we have our books and our authors and our distances and our users",
    "start": "1552020",
    "end": "1557779"
  },
  {
    "text": "um and so you can see here that I've got this dollar ref list of books and",
    "start": "1557779",
    "end": "1563059"
  },
  {
    "text": "components examples lists of books right down at the bottom of this API here I",
    "start": "1563059",
    "end": "1569659"
  },
  {
    "text": "have a component section so this is the other top level section you have info paths and components there's one or two",
    "start": "1569659",
    "end": "1577880"
  },
  {
    "text": "others but these are the main ones within here we have various different types of reusable components so we have",
    "start": "1577880",
    "end": "1585440"
  },
  {
    "text": "examples here and we can see the list of books uh the value of that is two",
    "start": "1585440",
    "end": "1592279"
  },
  {
    "text": "objects each with an ID a title and an author",
    "start": "1592279",
    "end": "1598580"
  },
  {
    "text": "um and we have a single entry for Hitchhiker's Guide to the Galaxy and",
    "start": "1598580",
    "end": "1603860"
  },
  {
    "text": "Mort um and then we have a schemas section and we have a book here",
    "start": "1603860",
    "end": "1609460"
  },
  {
    "text": "that has a an IED and a title and a finish that and",
    "start": "1609460",
    "end": "1616580"
  },
  {
    "text": "we have a new book which just has a title and an author and we have our list of books which is an array and we can",
    "start": "1616580",
    "end": "1622520"
  },
  {
    "text": "reference things inside here and so on and so on all the way down to",
    "start": "1622520",
    "end": "1628700"
  },
  {
    "text": "the bottom there okay",
    "start": "1628700",
    "end": "1633580"
  },
  {
    "text": "the things that we can stick in components are these schemas so our Json",
    "start": "1635059",
    "end": "1641900"
  },
  {
    "text": "schemer objects responses and request bodies we can put those in there so we",
    "start": "1641900",
    "end": "1648080"
  },
  {
    "text": "don't have to keep redefining a response parameters so if we've frequently got an",
    "start": "1648080",
    "end": "1654140"
  },
  {
    "text": "ID parameter for example and we're using guides across our entire system for our",
    "start": "1654140",
    "end": "1660500"
  },
  {
    "text": "IDs then we can define an IED which is a type string and format uuid and then",
    "start": "1660500",
    "end": "1667820"
  },
  {
    "text": "reuse that across the entire system headers so location headers or content",
    "start": "1667820",
    "end": "1674059"
  },
  {
    "text": "type headers that sort of thing security schemes we'll take a look at in a minute examples which are really good and make",
    "start": "1674059",
    "end": "1680600"
  },
  {
    "text": "your documentation look a lot better links and callbacks I've not used those",
    "start": "1680600",
    "end": "1687140"
  },
  {
    "text": "in anger so but they're in there I'm not 100 sure what they're for but if you",
    "start": "1687140",
    "end": "1692840"
  },
  {
    "text": "need them I figure you'll figure it out So This Is How We Do components we have",
    "start": "1692840",
    "end": "1700220"
  },
  {
    "text": "that component section at the end of the file and then we reference those using a",
    "start": "1700220",
    "end": "1706039"
  },
  {
    "text": "dollar ref property underneath so if we say we're referencing a schema we say schema colon and then a property inside",
    "start": "1706039",
    "end": "1712880"
  },
  {
    "text": "that that says dollar ref and points to where the actual schema object is so I I",
    "start": "1712880",
    "end": "1720320"
  },
  {
    "text": "get confused with that sometimes until I've sort of got a couple of examples and I go sort of content application",
    "start": "1720320",
    "end": "1726080"
  },
  {
    "text": "slash Json and then dollar ref right away no doesn't work it doesn't know what I'm referencing",
    "start": "1726080",
    "end": "1732620"
  },
  {
    "text": "the other thing you can do and as you get to a point where you've got a bigger API and more people working on it is you",
    "start": "1732620",
    "end": "1739820"
  },
  {
    "text": "can actually reference external files so you can dump your schema into individual",
    "start": "1739820",
    "end": "1746419"
  },
  {
    "text": "yaml files or Json files you can reference these as Json as well and then",
    "start": "1746419",
    "end": "1751820"
  },
  {
    "text": "you can just import it in so if the reference starts with a pound symbol or",
    "start": "1751820",
    "end": "1758059"
  },
  {
    "text": "a hash symbol if you're not American why did I say Pound symbol my God I'm British that's not a pound",
    "start": "1758059",
    "end": "1764779"
  },
  {
    "text": "symbol it's a hash or a sharp anyway so that will look in the existing file",
    "start": "1764779",
    "end": "1770299"
  },
  {
    "text": "under component slash schemas uh if it doesn't start with a hash then it will",
    "start": "1770299",
    "end": "1776240"
  },
  {
    "text": "look for an actual file uh with a path relative to the current file",
    "start": "1776240",
    "end": "1783620"
  },
  {
    "text": "so one of those things that I had in that list of components is actually security this is something that I really",
    "start": "1783620",
    "end": "1791299"
  },
  {
    "text": "don't see often enough in uh Swagger uis for people who were doing",
    "start": "1791299",
    "end": "1797779"
  },
  {
    "text": "um swashbuckle or or n swag is quite tricky to set it up and tell it how to",
    "start": "1797779",
    "end": "1803779"
  },
  {
    "text": "do authentication so in our component section we can have a security",
    "start": "1803779",
    "end": "1810679"
  },
  {
    "text": "schemes section and then we can Define schemes within that our application",
    "start": "1810679",
    "end": "1817039"
  },
  {
    "text": "supports so I've got my API it's using auth zero to let you authenticate",
    "start": "1817039",
    "end": "1822500"
  },
  {
    "text": "because I am made of money sorry author",
    "start": "1822500",
    "end": "1827720"
  },
  {
    "text": "um but no it's it could be identity server could be anything else but I can say the",
    "start": "1827720",
    "end": "1833179"
  },
  {
    "text": "type is oauth 2 there's a few types that can go in there and then I can specify the flows that are supported so we've",
    "start": "1833179",
    "end": "1839419"
  },
  {
    "text": "got implicit where it will redirect you over to this authorization URL and this",
    "start": "1839419",
    "end": "1844700"
  },
  {
    "text": "specifies the Scopes that are going to be requested when you go over to that",
    "start": "1844700",
    "end": "1850880"
  },
  {
    "text": "and we also have client credentials and we have a token URL that you can go to with a client ID and a client secret and",
    "start": "1850880",
    "end": "1857600"
  },
  {
    "text": "get back a bearer token that you can use to access the API and then I can",
    "start": "1857600",
    "end": "1864340"
  },
  {
    "text": "actually on the top of my um",
    "start": "1864340",
    "end": "1869919"
  },
  {
    "text": "open api.yaml file here another top level thing and I can say security",
    "start": "1870919",
    "end": "1878140"
  },
  {
    "text": "and the security scheme for this is auth zero and then empty array so it is",
    "start": "1878140",
    "end": "1884960"
  },
  {
    "text": "possible to put more things in there but I just want the property name in the yaml the best way to kind of just have a",
    "start": "1884960",
    "end": "1891080"
  },
  {
    "text": "key that just means something by its presence but doesn't have a value is to use an empty array for some reason",
    "start": "1891080",
    "end": "1899559"
  },
  {
    "text": "okay your API is going out there into the",
    "start": "1900200",
    "end": "1907520"
  },
  {
    "text": "world and people are going to call it and if there's one thing I've learned about people in my 50 years of existence",
    "start": "1907520",
    "end": "1912740"
  },
  {
    "text": "it's that uh so I can go two ways here",
    "start": "1912740",
    "end": "1918260"
  },
  {
    "text": "they're stupid is is the mean way of doing it it's no",
    "start": "1918260",
    "end": "1923480"
  },
  {
    "text": "people make mistakes and they're going to call your API and they're not going to have formed their request object",
    "start": "1923480",
    "end": "1929120"
  },
  {
    "text": "properly or they URL properly or something is going to be wrong with the requests that they send you or maybe",
    "start": "1929120",
    "end": "1935539"
  },
  {
    "text": "you've made a mistake and something goes wrong and an exception gets thrown or maybe you're relying on an external",
    "start": "1935539",
    "end": "1942020"
  },
  {
    "text": "service like a database or a redis cache or a blob S3 storage or blob storage all",
    "start": "1942020",
    "end": "1949880"
  },
  {
    "text": "sorts of things can go wrong and you need a way to communicate to the person",
    "start": "1949880",
    "end": "1955520"
  },
  {
    "text": "calling your API that something has gone wrong if somebody has sent you an object which",
    "start": "1955520",
    "end": "1964039"
  },
  {
    "text": "has got sort of in total with nesting and everything else 80 properties okay",
    "start": "1964039",
    "end": "1970179"
  },
  {
    "text": "and you're trying to you validate it and go are all these properties okay and one",
    "start": "1970179",
    "end": "1976880"
  },
  {
    "text": "of them isn't and your response to that person is 400 bad requests no content",
    "start": "1976880",
    "end": "1984380"
  },
  {
    "text": "that's not very helpful so there is a sort of standard it's kind",
    "start": "1984380",
    "end": "1992539"
  },
  {
    "text": "of I'm not sure it's actually maintained by anybody but it is agreed upon there's a standard format for returning problems",
    "start": "1992539",
    "end": "2000100"
  },
  {
    "text": "in Json the mime type for it is application slash problem plus Json",
    "start": "2000100",
    "end": "2007419"
  },
  {
    "text": "um and it looks roughly like this we have a problem details it's got an object we say as a type so what type of",
    "start": "2007419",
    "end": "2014799"
  },
  {
    "text": "problem is it is it an internal server error is it an external provider error is it uh something wrong with your",
    "start": "2014799",
    "end": "2020559"
  },
  {
    "text": "object error uh we have a and that would normally so the purists would say that",
    "start": "2020559",
    "end": "2026860"
  },
  {
    "text": "should be a fully qualified URL ideally it would point to an HTML page that",
    "start": "2026860",
    "end": "2034179"
  },
  {
    "text": "describes that type of error Nobody Does that we have the title and the details",
    "start": "2034179",
    "end": "2040000"
  },
  {
    "text": "so that's where you put in the text for the user to read the consumer to read we have the status that's the HTTP status",
    "start": "2040000",
    "end": "2045580"
  },
  {
    "text": "code we have an instance which is like a trace ID so like",
    "start": "2045580",
    "end": "2050940"
  },
  {
    "text": "activity.current.id you can put that in there and then we have objects which is essentially a dictionary but in Json a",
    "start": "2050940",
    "end": "2057638"
  },
  {
    "text": "dictionary is just another object with properties and so forth and then we have extensions which is where you can put",
    "start": "2057639",
    "end": "2063820"
  },
  {
    "text": "whatever the hell you like and we have an example of this here so",
    "start": "2063820",
    "end": "2069099"
  },
  {
    "text": "um it this does actually point to an RFC 7231 one or more validation errors",
    "start": "2069099",
    "end": "2074919"
  },
  {
    "text": "occurred uh and 400 we've got our Trace ID in there but we've also got in errors",
    "start": "2074919",
    "end": "2081700"
  },
  {
    "text": "uh the way to fill this out if it's a bad request is for each property that",
    "start": "2081700",
    "end": "2087220"
  },
  {
    "text": "there was a problem with you use that as a key and then you put in a string list",
    "start": "2087220",
    "end": "2093580"
  },
  {
    "text": "a list of strings of things that were wrong with that property so maybe it's",
    "start": "2093580",
    "end": "2100900"
  },
  {
    "text": "really weird when you can have more than one problem with the same property I",
    "start": "2100900",
    "end": "2106900"
  },
  {
    "text": "struggled to think of of scenarios for that but you could have more than one uh",
    "start": "2106900",
    "end": "2112000"
  },
  {
    "text": "problem with it you go this is too long and Too Short um make it exactly the right length",
    "start": "2112000",
    "end": "2118680"
  },
  {
    "text": "so yes okay um so let's jump back to uh this code",
    "start": "2118680",
    "end": "2127839"
  },
  {
    "text": "here and we can see if I look at post we've got a 400 and it will return this",
    "start": "2127839",
    "end": "2135579"
  },
  {
    "text": "400 bad request so we can go up and we can open uh we've got a responses folder here and",
    "start": "2135579",
    "end": "2144700"
  },
  {
    "text": "we've got a 400 bad request um and this content type is application",
    "start": "2144700",
    "end": "2151780"
  },
  {
    "text": "problem plus Json and we have a validation problem details yaml and then we can specify this in here and say",
    "start": "2151780",
    "end": "2159460"
  },
  {
    "text": "what's going on there I also have a 201 created and if we return according to proper",
    "start": "2159460",
    "end": "2168339"
  },
  {
    "text": "HTTP API things if you have created something joins me nuts that the created method in",
    "start": "2168339",
    "end": "2175839"
  },
  {
    "text": "an MVC controller you can pass in the object and it'll serialize it back into the response which is not really the way",
    "start": "2175839",
    "end": "2183220"
  },
  {
    "text": "you're supposed to do it you return a 201 created and then you set a location header and say this is where you can do",
    "start": "2183220",
    "end": "2188920"
  },
  {
    "text": "a get if you want to refetch that object and find out what id I assigned to it",
    "start": "2188920",
    "end": "2195460"
  },
  {
    "text": "magically or that sort of thing so in headers here we just have a",
    "start": "2195460",
    "end": "2202000"
  },
  {
    "text": "location header and we can see this is the absolute URI of the created record and it's it's a string because of course",
    "start": "2202000",
    "end": "2208540"
  },
  {
    "text": "it is it's a header okay so yeah we have this problem details and",
    "start": "2208540",
    "end": "2214000"
  },
  {
    "text": "then any request that has a post or a put or anything like",
    "start": "2214000",
    "end": "2221800"
  },
  {
    "text": "that has the potential to return problem details um except for some reason this one okay",
    "start": "2221800",
    "end": "2227619"
  },
  {
    "text": "all this code is on GitHub by the way so um don't worry too much if you're not",
    "start": "2227619",
    "end": "2232740"
  },
  {
    "text": "managing to write it all down as I scroll through it okay",
    "start": "2232740",
    "end": "2238420"
  },
  {
    "text": "so that's open API 3.0 that's where we are at the moment um when I",
    "start": "2238420",
    "end": "2244720"
  },
  {
    "text": "uh went on Twitter and said I'm doing a new talk to tell.net developers to stop",
    "start": "2244720",
    "end": "2252220"
  },
  {
    "text": "using swashbuckle and end swag Daryl Miller who is on the open API working",
    "start": "2252220",
    "end": "2258280"
  },
  {
    "text": "group uh sent me a DM and said yeah good luck with that but he pointed me at some stuff that",
    "start": "2258280",
    "end": "2265180"
  },
  {
    "text": "they're working on and one of the things they're working on is open API 4.0 which is currently called moonwalk and",
    "start": "2265180",
    "end": "2272740"
  },
  {
    "text": "it attempts to fix some problems with open API 3.0 and it does it fixes them",
    "start": "2272740",
    "end": "2280780"
  },
  {
    "text": "in in a nice way um the key thing here is that we have paths",
    "start": "2280780",
    "end": "2290020"
  },
  {
    "text": "and we have red slash books and we have our tags but then below that instead of",
    "start": "2290020",
    "end": "2296380"
  },
  {
    "text": "having get put post delete whatever we have requests and then what used to be",
    "start": "2296380",
    "end": "2304060"
  },
  {
    "text": "operational ID becomes a top level key in a yaml and then within that we",
    "start": "2304060",
    "end": "2310480"
  },
  {
    "text": "specify that the method is get and the description and responses and everything else is pretty much the same except in",
    "start": "2310480",
    "end": "2317380"
  },
  {
    "text": "responses instead of using the status code we say there is an OK response which will be status 200 there may be",
    "start": "2317380",
    "end": "2324820"
  },
  {
    "text": "other responses the key difference here and the thing that",
    "start": "2324820",
    "end": "2331420"
  },
  {
    "text": "this recognizes that open API 3.0 doesn't recognize is that you can have polymorphic endpoints so you could have",
    "start": "2331420",
    "end": "2339099"
  },
  {
    "text": "an end point where you post something to it and if you post",
    "start": "2339099",
    "end": "2344859"
  },
  {
    "text": "object Foo then it will do one thing and if you post object bar it will do",
    "start": "2344859",
    "end": "2351460"
  },
  {
    "text": "another thing and if you post object Wibble it will do another thing and those three things will all return",
    "start": "2351460",
    "end": "2357640"
  },
  {
    "text": "different responses now in open API 3.0 you say post and then you can specify",
    "start": "2357640",
    "end": "2365740"
  },
  {
    "text": "multiple possible content types that they could post and you could specify",
    "start": "2365740",
    "end": "2370780"
  },
  {
    "text": "multiple possible response types that it will return but there's no way of saying",
    "start": "2370780",
    "end": "2376599"
  },
  {
    "text": "if you post this you'll get that if you post this you'll get that and if you post this you'll get that open API for",
    "start": "2376599",
    "end": "2382780"
  },
  {
    "text": "moonwalk lets you say you can post to the same URL different objects and the",
    "start": "2382780",
    "end": "2389320"
  },
  {
    "text": "behavior will be different and it allows you to describe that and the response is okay there also allows you to say okay",
    "start": "2389320",
    "end": "2396400"
  },
  {
    "text": "I'm going to have three different ways that I describe a 400 bad request to you",
    "start": "2396400",
    "end": "2403780"
  },
  {
    "text": "so I'm going to separate out whether it's a server Ferreira an external dependency error or you've done",
    "start": "2403780",
    "end": "2410200"
  },
  {
    "text": "something wrong and you can have you can name those and you can give them different descriptions",
    "start": "2410200",
    "end": "2417099"
  },
  {
    "text": "okay there's some really neat tooling out",
    "start": "2417099",
    "end": "2422200"
  },
  {
    "text": "there for open API for people who are generating this stuff",
    "start": "2422200",
    "end": "2429640"
  },
  {
    "text": "um they're Swagger UI that's the thing that everybody's seen okay that's the thing",
    "start": "2429640",
    "end": "2435280"
  },
  {
    "text": "the swashbuckle and end swag magically add to your API application Swagger UI",
    "start": "2435280",
    "end": "2441099"
  },
  {
    "text": "is great it's still called Swagger UI it's not called open API UI because",
    "start": "2441099",
    "end": "2446700"
  },
  {
    "text": "Swagger is still a trademarked name uh belonging to Smart bear",
    "start": "2446700",
    "end": "2452520"
  },
  {
    "text": "and so the UI is still called Swagger the underlying document is called open",
    "start": "2452520",
    "end": "2458800"
  },
  {
    "text": "API so we all know about that one but then there's uh there's redoc and this allows",
    "start": "2458800",
    "end": "2464320"
  },
  {
    "text": "you to do interesting things with your yaml or Json files from the command line",
    "start": "2464320",
    "end": "2469500"
  },
  {
    "text": "uh like for example bundling so you can if you've got like I have in my sample",
    "start": "2469500",
    "end": "2475660"
  },
  {
    "text": "code everything broken up into lots of different files uh you want to bundle",
    "start": "2475660",
    "end": "2480820"
  },
  {
    "text": "that compile it into a single file uh for deployment along with your website",
    "start": "2480820",
    "end": "2487240"
  },
  {
    "text": "to drive swaggy UI Swagger UI won't follow links between files apart from anything else and so redoc allows you to",
    "start": "2487240",
    "end": "2495400"
  },
  {
    "text": "bundle everything into a single file it also will generate a yaml file and a",
    "start": "2495400",
    "end": "2501160"
  },
  {
    "text": "Json file from the same source as well we just with The Shins and re-slate is a",
    "start": "2501160",
    "end": "2510280"
  },
  {
    "text": "way of generating documentation uh based on redoc will also generate static",
    "start": "2510280",
    "end": "2515920"
  },
  {
    "text": "documentation files so it's basically an HTML file with some inline CSS and JavaScript that then loads your",
    "start": "2515920",
    "end": "2524320"
  },
  {
    "text": "um Json file and turns into a lovely documentation page with a shins and",
    "start": "2524320",
    "end": "2530079"
  },
  {
    "text": "resellate is another way of doing that it's uh sort of pythony node sort of",
    "start": "2530079",
    "end": "2535359"
  },
  {
    "text": "solution and then there's elements and I'm going to show you elements in a minute because I love elements it's",
    "start": "2535359",
    "end": "2541240"
  },
  {
    "text": "great in terms of actually working with this stuff uh vs code there are multiple",
    "start": "2541240",
    "end": "2549099"
  },
  {
    "text": "extensions for working with open api.yaml files the one that I recommend",
    "start": "2549099",
    "end": "2554880"
  },
  {
    "text": "is by 42 crunch okay they're all okay but the 42 crunch one",
    "start": "2554880",
    "end": "2562300"
  },
  {
    "text": "has just been the most stable uh provides the best intellisense provides the best red squiggles all that sort of",
    "start": "2562300",
    "end": "2569200"
  },
  {
    "text": "thing if you're using jetbrains Rider you just have open API support is built",
    "start": "2569200",
    "end": "2576339"
  },
  {
    "text": "in out of the box and also if you're using jetbrain's Rider if you've actually got an open API file in your",
    "start": "2576339",
    "end": "2583599"
  },
  {
    "text": "project it will do magical things it lights up it generates test code for you",
    "start": "2583599",
    "end": "2589240"
  },
  {
    "text": "it does all sorts of insane stuff it's it generates like a postman style thing",
    "start": "2589240",
    "end": "2594700"
  },
  {
    "text": "for calling your API just from having that file there",
    "start": "2594700",
    "end": "2600579"
  },
  {
    "text": "so bundling reedokley is an npm package and so you do npm install minus G re",
    "start": "2600579",
    "end": "2609339"
  },
  {
    "text": "dockly and wait while it downloads the internet somewhere into your valuable C",
    "start": "2609339",
    "end": "2615160"
  },
  {
    "text": "drive where you don't have very much space and then you can do this from the command line",
    "start": "2615160",
    "end": "2621160"
  },
  {
    "text": "uh so that will follow all the links and then it will embed any referenced files it'll just move those into components",
    "start": "2621160",
    "end": "2628119"
  },
  {
    "text": "rewrite those refs so that you have a single file uh for deploying to your",
    "start": "2628119",
    "end": "2634240"
  },
  {
    "text": "application okay so I said I was going to show you elements I'm going to show you uh the",
    "start": "2634240",
    "end": "2641859"
  },
  {
    "text": "other thing that I really like about this I'm going to zoom in because that's",
    "start": "2641859",
    "end": "2647200"
  },
  {
    "text": "ridiculous okay",
    "start": "2647200",
    "end": "2652859"
  },
  {
    "text": "um this is the code so note that down that's where you can get the stuff from the uh",
    "start": "2652900",
    "end": "2660460"
  },
  {
    "text": "slides will be in there after the talk as well I'll do that before I shut up and leave so yes",
    "start": "2660460",
    "end": "2667359"
  },
  {
    "text": "uh if you're Json file if you're yaml file if your Json file is generated by",
    "start": "2667359",
    "end": "2673420"
  },
  {
    "text": "swashbuckle or end swag and people go how do I get the documentation for your site and you go uh clone this run it or",
    "start": "2673420",
    "end": "2679780"
  },
  {
    "text": "go to the actual thing running in production and look at the Swagger UI and that's the documentation if you have",
    "start": "2679780",
    "end": "2687220"
  },
  {
    "text": "it as a source controlled item which you should be doing anyway because as I say",
    "start": "2687220",
    "end": "2692319"
  },
  {
    "text": "this is your agreed design and your source of Truth for your project for your developers to be working from but",
    "start": "2692319",
    "end": "2698079"
  },
  {
    "text": "if you have that in your GitHub repository you can just do some very",
    "start": "2698079",
    "end": "2703839"
  },
  {
    "text": "simple GitHub actions and I mean simple and you can generate the documentation",
    "start": "2703839",
    "end": "2709060"
  },
  {
    "text": "into GitHub pages and then when someone comes along you can actually on your",
    "start": "2709060",
    "end": "2715599"
  },
  {
    "text": "readme file say oh look here's the documentation and it's not a complicated GitHub action",
    "start": "2715599",
    "end": "2722619"
  },
  {
    "text": "it is so you have to go through the thing of saying um",
    "start": "2722619",
    "end": "2728640"
  },
  {
    "text": "I'm going to show this in code instead because that looks horrible",
    "start": "2728680",
    "end": "2735780"
  },
  {
    "text": "uh no I don't go away",
    "start": "2738460",
    "end": "2743760"
  },
  {
    "text": "right so this is our GitHub workflow we need write permission because we're going to",
    "start": "2745359",
    "end": "2751900"
  },
  {
    "text": "be modifying a branch and we have build and deploy so install and build step we",
    "start": "2751900",
    "end": "2757900"
  },
  {
    "text": "can use npx so node is pre-installed on all GitHub workers so we can use npx",
    "start": "2757900",
    "end": "2763780"
  },
  {
    "text": "which says don't actually install this package just download it cache it locally run it and then trash it so we",
    "start": "2763780",
    "end": "2769839"
  },
  {
    "text": "say npx redox CLI bundle open API blah blah blah and then we can use this",
    "start": "2769839",
    "end": "2776800"
  },
  {
    "text": "deploy GitHub action which James Ives whoever he is wrote which will take our",
    "start": "2776800",
    "end": "2782140"
  },
  {
    "text": "dist folder from the current directory and copy it into a branch the GitHub",
    "start": "2782140",
    "end": "2789640"
  },
  {
    "text": "Pages branch in this particular case that's it that runs on every check-in",
    "start": "2789640",
    "end": "2795220"
  },
  {
    "text": "and then if I go back to here and I can show you the two",
    "start": "2795220",
    "end": "2802800"
  },
  {
    "text": "documentation options so I'll show you redoc first",
    "start": "2802800",
    "end": "2808020"
  },
  {
    "text": "okay I hope that looks better on the big does that look better on the big screen because it looks like hell down here",
    "start": "2808420",
    "end": "2814780"
  },
  {
    "text": "that's sort of readable isn't it but um yes so this is uh this is redoc and we",
    "start": "2814780",
    "end": "2822280"
  },
  {
    "text": "get a lovely uh sort of set of documentation here um we can go to different sections here",
    "start": "2822280",
    "end": "2829119"
  },
  {
    "text": "and remember earlier on I mentioned tags and why they're useful so",
    "start": "2829119",
    "end": "2835420"
  },
  {
    "text": "Swagger uis that are generated by n swag or swashbuckle unless you know that",
    "start": "2835420",
    "end": "2841720"
  },
  {
    "text": "there is a tag attribute that you can add to controllers for example or",
    "start": "2841720",
    "end": "2846760"
  },
  {
    "text": "methods action methods it'll just be a massive list of uh end points if you put",
    "start": "2846760",
    "end": "2854859"
  },
  {
    "text": "tags into your open API it breaks those down into sections in Swagger so you can see what the books bit does what the",
    "start": "2854859",
    "end": "2860560"
  },
  {
    "text": "user's bit does what the distance is bit does and everything else and the same thing when you have your redock code",
    "start": "2860560",
    "end": "2867579"
  },
  {
    "text": "here and so we can drill that we can see that the authorization for this is auth zero",
    "start": "2867579",
    "end": "2873579"
  },
  {
    "text": "we can see that's the flow type there client credentials there's our token URL",
    "start": "2873579",
    "end": "2879220"
  },
  {
    "text": "there's our implicit authorization URL we have our response which is going to",
    "start": "2879220",
    "end": "2885339"
  },
  {
    "text": "be application Json and it's going to be an array of these object types and",
    "start": "2885339",
    "end": "2892060"
  },
  {
    "text": "we have all the things that we can do in there so that's redoc and I was quite",
    "start": "2892060",
    "end": "2897099"
  },
  {
    "text": "chuffed oh and over here on the right it's got sort of sample Json for each of",
    "start": "2897099",
    "end": "2903160"
  },
  {
    "text": "those uh methods so uh this is the payload that we should be sending proper",
    "start": "2903160",
    "end": "2909640"
  },
  {
    "text": "examples because I actually took the time to put proper examples in there so it's not just randomly generating",
    "start": "2909640",
    "end": "2915160"
  },
  {
    "text": "strings so I thought that was quite nice and then I found elements",
    "start": "2915160",
    "end": "2920200"
  },
  {
    "text": "um",
    "start": "2920200",
    "end": "2922318"
  },
  {
    "text": "elements so elements this is this uses web",
    "start": "2928060",
    "end": "2934060"
  },
  {
    "text": "components uh it's by stoplight it is open source and elements uh breaks",
    "start": "2934060",
    "end": "2940480"
  },
  {
    "text": "things down like this it looks quite a lot like redock until you go into let's",
    "start": "2940480",
    "end": "2946540"
  },
  {
    "text": "say books and let's say add a completed book here okay so we can see over here our auth is",
    "start": "2946540",
    "end": "2954460"
  },
  {
    "text": "going to be token and our body this is an example thing we actually have send API requests if I authenticate using",
    "start": "2954460",
    "end": "2961780"
  },
  {
    "text": "this and because I've put the URL to authenticate with auth zero it will go and do that bounce around the URL not",
    "start": "2961780",
    "end": "2968260"
  },
  {
    "text": "going to do it right now because all zero gets weird about um conference Wi-Fi",
    "start": "2968260",
    "end": "2974140"
  },
  {
    "text": "uh but uh and we can see it's got roughly the same set of things here we've got the responses that it might",
    "start": "2974140",
    "end": "2980680"
  },
  {
    "text": "return um and everything else but then come over here and we go okay so here's how to send a",
    "start": "2980680",
    "end": "2988359"
  },
  {
    "text": "request to this API from JavaScript using XML HTTP request uh here's how to",
    "start": "2988359",
    "end": "2995859"
  },
  {
    "text": "do it using fetch is jQuery something else uh here's how to do it from python",
    "start": "2995859",
    "end": "3001200"
  },
  {
    "text": "in Python 3 or using requests here's how to do it in C sharp using HTTP client or",
    "start": "3001200",
    "end": "3007440"
  },
  {
    "text": "using restsharp so if I want to call this using an HTTP client I can just oh",
    "start": "3007440",
    "end": "3014040"
  },
  {
    "text": "look there's a copy button so people can copy and paste wherever they're using your API from they can copy and paste",
    "start": "3014040",
    "end": "3020579"
  },
  {
    "text": "the code from the elements documentation into their application and they can call",
    "start": "3020579",
    "end": "3025980"
  },
  {
    "text": "your API using that I love elements it's fantastic",
    "start": "3025980",
    "end": "3032420"
  },
  {
    "text": "so there's a bunch of stuff that I'm kind of noodling with and building to make",
    "start": "3032760",
    "end": "3039720"
  },
  {
    "text": "this work properly the one that's kind of out there and and you can do things",
    "start": "3039720",
    "end": "3044760"
  },
  {
    "text": "with it is open API dot web uh because obviously if you're just",
    "start": "3044760",
    "end": "3051960"
  },
  {
    "text": "going to hand code your open API file and then dump it into your project you",
    "start": "3051960",
    "end": "3058500"
  },
  {
    "text": "need a way to serve that out and so open api.web lets you embed that as a static",
    "start": "3058500",
    "end": "3064440"
  },
  {
    "text": "resource and then it will serve it out and it will also serve the Swagger UI HTML and JavaScript and CSS it will also",
    "start": "3064440",
    "end": "3072359"
  },
  {
    "text": "serve either redoc or elements or both if you want both I'll show you how that",
    "start": "3072359",
    "end": "3077819"
  },
  {
    "text": "looks in the startup code for this project",
    "start": "3077819",
    "end": "3083480"
  },
  {
    "text": "so if we go to API here and SRC",
    "start": "3083880",
    "end": "3089900"
  },
  {
    "text": "and program I've commented out the swashbuckle code",
    "start": "3089900",
    "end": "3096300"
  },
  {
    "text": "so we no longer need an endpoints API Explorer and we no longer need Swagger",
    "start": "3096300",
    "end": "3104280"
  },
  {
    "text": "gen we just have our normal stuff there we no longer need use Swagger and use",
    "start": "3104280",
    "end": "3110280"
  },
  {
    "text": "Swagger UI we can just replace those with this okay it's big I'm working on",
    "start": "3110280",
    "end": "3116700"
  },
  {
    "text": "same defaults and and other ways of doing this uh but",
    "start": "3116700",
    "end": "3122520"
  },
  {
    "text": "um so you specify the assembly that's got the resource in it and then the path to the resource uh in that assembly so",
    "start": "3122520",
    "end": "3128700"
  },
  {
    "text": "that's the embedded resource and then we can put some open API options on there we can say this is version one uh the UI",
    "start": "3128700",
    "end": "3135540"
  },
  {
    "text": "path prefix is Swagger the Json path is going to be here the yaml path is going to be here if what you embed is yaml it",
    "start": "3135540",
    "end": "3142740"
  },
  {
    "text": "will convert it to Json and vice versa so it will serve both kinds and then I",
    "start": "3142740",
    "end": "3147900"
  },
  {
    "text": "can say I want elements documentation by specifying this element section and just saying Swagger V1 docs",
    "start": "3147900",
    "end": "3155599"
  },
  {
    "text": "and then that returns a normal routing uh sort of app thing so you can put on",
    "start": "3155599",
    "end": "3162480"
  },
  {
    "text": "allow Anonymous and calls and anything else you might want to do on any of the endpoints that are generated in there",
    "start": "3162480",
    "end": "3169380"
  },
  {
    "text": "okay um",
    "start": "3169380",
    "end": "3173660"
  },
  {
    "text": "stuff that I am working on uh",
    "start": "3174599",
    "end": "3180780"
  },
  {
    "text": "some analyzers so at the moment the the big argument that",
    "start": "3180780",
    "end": "3187319"
  },
  {
    "text": "people sort of come back with is yes but if I want to change my API now I have to",
    "start": "3187319",
    "end": "3192599"
  },
  {
    "text": "change it in two places and what if they get out of sync um and uh yes I can sort of see that I",
    "start": "3192599",
    "end": "3201780"
  },
  {
    "text": "mean you know just don't you're a grown-up do things properly uh but also",
    "start": "3201780",
    "end": "3207240"
  },
  {
    "text": "if your design and implementation are both in the same place and they're wrong that just means you're wrong twice in",
    "start": "3207240",
    "end": "3213480"
  },
  {
    "text": "one place um that makes sense yes it does but no I'm working on some analyzers",
    "start": "3213480",
    "end": "3219960"
  },
  {
    "text": "that will look at your open api.yaml file and then say are you actually implementing that can I find where",
    "start": "3219960",
    "end": "3226500"
  },
  {
    "text": "you're returning a 401 or a 403 or a 404 can I uh does the object you're",
    "start": "3226500",
    "end": "3232559"
  },
  {
    "text": "accepting is the body of this request actually matched to what you specified in the schema and can I put red",
    "start": "3232559",
    "end": "3238980"
  },
  {
    "text": "squiggles under there and can I generate warnings that you can then set as errors so your web application won't build if",
    "start": "3238980",
    "end": "3246480"
  },
  {
    "text": "it doesn't match the specification I think that could be quite useful I'm building a bundler in.net so you don't",
    "start": "3246480",
    "end": "3253079"
  },
  {
    "text": "have to install node to bundle your yaml into a single file",
    "start": "3253079",
    "end": "3258839"
  },
  {
    "text": "um I'm working on a test thing where you can write the tests in yaml so it looks",
    "start": "3258839",
    "end": "3264780"
  },
  {
    "text": "quite a lot like an open API file and then it generates X unit tests based on",
    "start": "3264780",
    "end": "3269880"
  },
  {
    "text": "that and then the really fun one and the thing that I think is potentially the most interesting is some code gen",
    "start": "3269880",
    "end": "3276359"
  },
  {
    "text": "because remember I showed you the Proto file and the way grpc works and it generates the model classes and the",
    "start": "3276359",
    "end": "3283559"
  },
  {
    "text": "stubs for the service class so you get something you maintain those Proto files",
    "start": "3283559",
    "end": "3288720"
  },
  {
    "text": "but you get something in exchange it's the other way around you're not sort of generating the information from the code",
    "start": "3288720",
    "end": "3295740"
  },
  {
    "text": "it generates code from the information and so I started looking at ways of doing that now there are quite a few",
    "start": "3295740",
    "end": "3302040"
  },
  {
    "text": "tools out there for things like node and Python and so forth that you can say",
    "start": "3302040",
    "end": "3307260"
  },
  {
    "text": "here's my open API file generate me a flask application and it will do the skeleton it will sort of scaffold out",
    "start": "3307260",
    "end": "3315000"
  },
  {
    "text": "that application for you but it'll do it once and then you change the",
    "start": "3315000",
    "end": "3320400"
  },
  {
    "text": "specification it won't update you right it can't rewrite the code that it's already written so it's a kind of use",
    "start": "3320400",
    "end": "3326099"
  },
  {
    "text": "once thing so what I'm working on is something that will generate the model",
    "start": "3326099",
    "end": "3332339"
  },
  {
    "text": "classes for you and then generate a base class very much like the grpc service",
    "start": "3332339",
    "end": "3338160"
  },
  {
    "text": "based class and then you implement that and then there's a library that will",
    "start": "3338160",
    "end": "3344700"
  },
  {
    "text": "hook it up using minimal API so it'll run just in a Docker container or as a service on app services or whatever else",
    "start": "3344700",
    "end": "3351920"
  },
  {
    "text": "but also another package that will hook it up to Azure functions and so it'll",
    "start": "3351920",
    "end": "3358079"
  },
  {
    "text": "generate functions for each of those things another one that will hook it up to AWS Lambda and make this open so that",
    "start": "3358079",
    "end": "3364680"
  },
  {
    "text": "people can get it to hook up to whatever they want then if you change your spec it regenerates the base class and",
    "start": "3364680",
    "end": "3371819"
  },
  {
    "text": "potentially the model types and then if there's a breaking change your application won't compile and you'll",
    "start": "3371819",
    "end": "3378540"
  },
  {
    "text": "have a pretty good clue that you should be calling this version two as well so that's something I'm working on too",
    "start": "3378540",
    "end": "3386000"
  },
  {
    "text": "I'm very happy to talk more about this I'm around for the rest of the day I'm doing the lock mode at the end of the",
    "start": "3386000",
    "end": "3391440"
  },
  {
    "text": "day so if you've got any questions then please grab me outside rather than",
    "start": "3391440",
    "end": "3397740"
  },
  {
    "text": "coming on here because it's weird standing up here and ask answering questions but yes have I changed",
    "start": "3397740",
    "end": "3404700"
  },
  {
    "text": "anybody's mind is anybody going to go back and and try doing this",
    "start": "3404700",
    "end": "3410000"
  },
  {
    "text": "I suck who's going to carry on using swashbuckle or end swag",
    "start": "3411240",
    "end": "3417900"
  },
  {
    "text": "yeah well baby steps baby steps I'll get there in the end",
    "start": "3417900",
    "end": "3424559"
  },
  {
    "text": "that's it thank you very much for listening to me and I'll see you at the end of the day cheers",
    "start": "3424559",
    "end": "3431960"
  }
]