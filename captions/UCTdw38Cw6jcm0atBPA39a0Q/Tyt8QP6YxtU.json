[
  {
    "text": "okay so welcome to my talk which is uh infrastructure software so infrastructure software is a talk",
    "start": "80",
    "end": "7680"
  },
  {
    "text": "that is related to using the tooling in order to build your systems into the cloud uh my name is paul stack i'm stack 72",
    "start": "7680",
    "end": "15200"
  },
  {
    "text": "and i work for a company called pollumi everything you see today is open source i'm not going to ask you to pay for",
    "start": "15200",
    "end": "21199"
  },
  {
    "text": "anything but the examples that i am giving will show you pollute me as a tool so different companies different people",
    "start": "21199",
    "end": "30000"
  },
  {
    "text": "are at different levels of a cloud transition there are notoriously three different levels so we",
    "start": "30000",
    "end": "35840"
  },
  {
    "text": "have v1 which is like traditional end-tier style architectures that have been pushed to",
    "start": "35840",
    "end": "41040"
  },
  {
    "text": "the cloud so you just think that you've picked up your your physical data center and moved it to the cloud you have some",
    "start": "41040",
    "end": "46320"
  },
  {
    "text": "application servers you have some web servers they're long managed and they're usually managed by a",
    "start": "46320",
    "end": "52719"
  },
  {
    "text": "configuration management tool maybe puppet maybe chef maybe ansible maybe something like this and they're longer",
    "start": "52719",
    "end": "57760"
  },
  {
    "text": "running tools that you sort of care for in a little way then you move into v2 v2 is a little bit of a more",
    "start": "57760",
    "end": "64400"
  },
  {
    "text": "transitional style so it's a little bit of end-tier style architecture but",
    "start": "64400",
    "end": "69840"
  },
  {
    "text": "using managed services maybe hosted sql server or aurora in aws",
    "start": "69840",
    "end": "76320"
  },
  {
    "text": "maybe taking advantage of containers like docker and your system starts become a little bit more ephemeral so effectively you can",
    "start": "76320",
    "end": "84240"
  },
  {
    "text": "much more move into the immutable style infrastructures where infrastructures can be created and destroyed and they don't really have",
    "start": "84240",
    "end": "90799"
  },
  {
    "text": "long-running state held within the application themselves because you know that that's sort of a little bit dangerous when you",
    "start": "90799",
    "end": "97520"
  },
  {
    "text": "go to the cloud and then you have v3 infrastructures these are what we class as modern infrastructures you've probably",
    "start": "97520",
    "end": "103200"
  },
  {
    "text": "heard the term cloud native or microservices or all these different things and this is what we mean by the",
    "start": "103200",
    "end": "109439"
  },
  {
    "text": "modern infrastructure so you're probably using a container scheduler maybe kubernetes maybe hash",
    "start": "109439",
    "end": "116479"
  },
  {
    "text": "court nomad um you're taking advantage of maybe serverless you're taking advantage of",
    "start": "116479",
    "end": "122079"
  },
  {
    "text": "hosted monitoring tools that are feeding by excuse me back into your code and",
    "start": "122079",
    "end": "127600"
  },
  {
    "text": "everything is sort of fully dynamic and and it's very difficult to get",
    "start": "127600",
    "end": "132879"
  },
  {
    "text": "each and every piece running because there are so many different pieces of your of your system if you think of it in terms of",
    "start": "132879",
    "end": "139440"
  },
  {
    "text": "microservices you know you could have 5000 microservices running within your system",
    "start": "139440",
    "end": "145120"
  },
  {
    "text": "but to run all 5000 on your on your um developer laptop would be very difficult so",
    "start": "145120",
    "end": "150480"
  },
  {
    "text": "there are different ecosystems and there are excuse me different parts of the ecosystem and different people are at different levels so i'm not saying that",
    "start": "150480",
    "end": "157040"
  },
  {
    "text": "if you're not at v3 you're not doing the right thing that's really not the point of this talk",
    "start": "157040",
    "end": "162640"
  },
  {
    "text": "all of the tooling that exists today and i do mean all of the tooling so we're talking cloud formation we're talking",
    "start": "162640",
    "end": "168640"
  },
  {
    "text": "arm templates we're talking hashicorp terraform we're talking pollumi we're talking puppet we're talking",
    "start": "168640",
    "end": "174720"
  },
  {
    "text": "ansible they target specific levels or a combination of levels of all of the",
    "start": "174720",
    "end": "180159"
  },
  {
    "text": "transitions but we had ter we at palumi believe that we're very much",
    "start": "180159",
    "end": "186159"
  },
  {
    "text": "targeting targeting v3 because we're taking advantage of real languages in order to understand and build sort of",
    "start": "186159",
    "end": "192800"
  },
  {
    "text": "these dynamic architectures as we go and i'll show you that as we go through so just to get everybody on the same",
    "start": "192800",
    "end": "198640"
  },
  {
    "text": "page what is infrastructure as code it's a way of eliminating error-prone manual changes",
    "start": "198640",
    "end": "204239"
  },
  {
    "text": "it's a way of bringing your best practices to infrastructure and you gain visibility through code",
    "start": "204239",
    "end": "209360"
  },
  {
    "text": "reviews and previews so you're codifying your infrastructure it's automated and it's repeatable",
    "start": "209360",
    "end": "215760"
  },
  {
    "text": "and it's faster to get to market and because it is actually got plans and previews it's actually",
    "start": "215760",
    "end": "222400"
  },
  {
    "text": "safe and predictable so it's a declarative syntax whereas at polumi we believe that we're",
    "start": "222400",
    "end": "228799"
  },
  {
    "text": "actually modern infrastructure as code because we use real languages you get to create layers of abstraction",
    "start": "228799",
    "end": "234480"
  },
  {
    "text": "so real apis real packages you can use your favorite tools your ides your testing you can deploy it",
    "start": "234480",
    "end": "240799"
  },
  {
    "text": "you have a cli which for your your git ops interaction which hooks into your ci cd workflow",
    "start": "240799",
    "end": "246000"
  },
  {
    "text": "and of course because of that you can audit all your changes that go with it across all the other tools as well",
    "start": "246000",
    "end": "252319"
  },
  {
    "text": "so for us we don't believe that it's infrastructure as code we actually believe it's infrastructure software because we're using real",
    "start": "252319",
    "end": "258400"
  },
  {
    "text": "languages we can actually take advantage of the real language ecosystems and we can start to actually really",
    "start": "258400",
    "end": "264960"
  },
  {
    "text": "build in proper development practices into our infrastructure we no longer have to have",
    "start": "264960",
    "end": "270880"
  },
  {
    "text": "these rubbish bash scripts or really nasty json files or dsl files that have",
    "start": "270880",
    "end": "277440"
  },
  {
    "text": "grown and not been given care and attention we believe that you can actually create",
    "start": "277440",
    "end": "282639"
  },
  {
    "text": "real software in the same way you would create your real application infrastructure code is just as important",
    "start": "282639",
    "end": "288080"
  },
  {
    "text": "as application code because without the infrastructure code you can't deploy your application so you",
    "start": "288080",
    "end": "293120"
  },
  {
    "text": "need to treat it with the same care and respect so palumi has a number of layers that",
    "start": "293120",
    "end": "298560"
  },
  {
    "text": "allow you to do this so let's start at the bottom and we will say that it has a",
    "start": "298560",
    "end": "304000"
  },
  {
    "text": "like a layer of of providers this is our foundation everything's built upon so we have",
    "start": "304000",
    "end": "309199"
  },
  {
    "text": "access to the sdks and the apis for aws azure google cloud",
    "start": "309199",
    "end": "314320"
  },
  {
    "text": "kubernetes openstack digitalocean vmware datadog cloudflare new relic and so many more tools and because we",
    "start": "314320",
    "end": "320800"
  },
  {
    "text": "have that you can create raw infrastructure against those pieces of",
    "start": "320800",
    "end": "326880"
  },
  {
    "text": "those vendors or those specific clouds then because of that we can create libraries on top of those which will",
    "start": "326880",
    "end": "333600"
  },
  {
    "text": "actually be layers of abstraction which allow you to interact with containers or serverless or infrastructure",
    "start": "333600",
    "end": "339280"
  },
  {
    "text": "and then as at pollumi we have developed this idea called crosswalk where we have created",
    "start": "339280",
    "end": "345199"
  },
  {
    "text": "the best practices in the simplest way in order to make people as productive as possible",
    "start": "345199",
    "end": "351199"
  },
  {
    "text": "so i'll give you an example of of crosswalk in action to create a fully working vpc",
    "start": "351199",
    "end": "358639"
  },
  {
    "text": "in amazon so a vpc is your own virtual private cloud you would need the vpc you would need",
    "start": "358639",
    "end": "364000"
  },
  {
    "text": "the subnets that go with it you would need the internet gateway you would need if it was private subnets",
    "start": "364000",
    "end": "369520"
  },
  {
    "text": "you'd need um the right tables and the right table associations that allow you to talk into uh the private subnet and then you",
    "start": "369520",
    "end": "377520"
  },
  {
    "text": "would need some nat gateways which would actually allow your private subnets to talk right to",
    "start": "377520",
    "end": "382880"
  },
  {
    "text": "the internet now there's a lot of boilerplate code there and we've actually been able to wrap that",
    "start": "382880",
    "end": "388319"
  },
  {
    "text": "away in a single line of code which will actually take care of that for you and i can show you that in a demonstration very shortly",
    "start": "388319",
    "end": "395840"
  },
  {
    "text": "so i said pollumi is modern infrastructure as code that allows you to take advantage of your",
    "start": "395840",
    "end": "401520"
  },
  {
    "text": "existing tools in your existing ecosystem so we support of course all major source code",
    "start": "401520",
    "end": "408720"
  },
  {
    "text": "providers i'm not saying these are the only ones of course these are the like the ones that we we have most usage",
    "start": "408720",
    "end": "414319"
  },
  {
    "text": "from so github atlassian gitlab vsts and we support javascript",
    "start": "414319",
    "end": "419360"
  },
  {
    "text": "and typescript we support python we support go and we support all of the net core",
    "start": "419360",
    "end": "424800"
  },
  {
    "text": "ecosystem languages so c sharp um f sharp and vb we are real languages therefore we can",
    "start": "424800",
    "end": "430319"
  },
  {
    "text": "take advantage of npm we can take advantage of nougat we can take advantage of pipey we can hook into",
    "start": "430319",
    "end": "435919"
  },
  {
    "text": "cicd systems and then as i said uh previously we actually have support for aws azure gcp",
    "start": "435919",
    "end": "442400"
  },
  {
    "text": "kubernetes openstack digitaloceanpacket.net and so many other clouds",
    "start": "442400",
    "end": "448720"
  },
  {
    "text": "so it's important to understand that even though it's using real languages pollumi is",
    "start": "448720",
    "end": "454319"
  },
  {
    "text": "declarative by default it is actually end state that you declare so in this small application you will",
    "start": "454319",
    "end": "461360"
  },
  {
    "text": "see in typescript you would declare that you want a security group with these ingress rules you would declare that you",
    "start": "461360",
    "end": "468800"
  },
  {
    "text": "need this specific instance and using the specific security group that goes with it",
    "start": "468800",
    "end": "474800"
  },
  {
    "text": "and the ami of course that we said as a constant but because it's an imperative application",
    "start": "474800",
    "end": "480479"
  },
  {
    "text": "you need to understand and create the correct application structure that will allow",
    "start": "480479",
    "end": "485599"
  },
  {
    "text": "you to run it because in this case in javascript if i was to try and declare the instance before the security group",
    "start": "485599",
    "end": "491520"
  },
  {
    "text": "then of course that's not a correct um application structure and it would actually fail to compile so",
    "start": "491520",
    "end": "497840"
  },
  {
    "text": "it's really given you the ability to create that end state configuration in an imperative manner",
    "start": "497840",
    "end": "504560"
  },
  {
    "text": "it has of course got support for loops and conditions and real programming constructs",
    "start": "504560",
    "end": "510160"
  },
  {
    "text": "so in this example we only provision a vpc if there's excuse me a vpc and public",
    "start": "510160",
    "end": "516000"
  },
  {
    "text": "subnet if there's a cider block for it okay so you can start to take advantage of of understanding the conditionals that",
    "start": "516000",
    "end": "521360"
  },
  {
    "text": "are happening in your system we have multi-provider workflows where the output of",
    "start": "521360",
    "end": "526399"
  },
  {
    "text": "one resource can be the input of another resource you'll see that the engine x the excuse",
    "start": "526399",
    "end": "532240"
  },
  {
    "text": "me the constant bucket um will actually store our nginx configuration and that is then actually",
    "start": "532240",
    "end": "538560"
  },
  {
    "text": "passed into your kubernetes deployment in the spec so you can see bucket bucket domain name",
    "start": "538560",
    "end": "544720"
  },
  {
    "text": "we have reusability so you can actually package things up into your own apis so your operations team can create",
    "start": "544720",
    "end": "551440"
  },
  {
    "text": "apis around networking or around kubernetes or around these areas that",
    "start": "551440",
    "end": "556800"
  },
  {
    "text": "you as developers are not so caring about you don't care about how to",
    "start": "556800",
    "end": "562640"
  },
  {
    "text": "build a kubernetes cluster you need a kubernetes cluster in your environment that you can actually start to deploy",
    "start": "562640",
    "end": "568000"
  },
  {
    "text": "your um applications onto to test your applications so we can actually allow you to package them",
    "start": "568000",
    "end": "573760"
  },
  {
    "text": "up within your environment and and reuse those and then we can start to do much more",
    "start": "573760",
    "end": "579600"
  },
  {
    "text": "interesting things so this is an example of advanced um orchestration so what this code is",
    "start": "579600",
    "end": "586080"
  },
  {
    "text": "doing right now is it is creating three replicas of a deployment so we're going to call that our canary",
    "start": "586080",
    "end": "592080"
  },
  {
    "text": "after the three replicas have been created it will then go off to check prometheus because it's real code we can",
    "start": "592080",
    "end": "599279"
  },
  {
    "text": "actually import the prometheus sdk package or we can actually talk out to the prometheus api directly",
    "start": "599279",
    "end": "605839"
  },
  {
    "text": "once we're happy inside this check metrics um function once we're happy that everything works as expected",
    "start": "605839",
    "end": "612240"
  },
  {
    "text": "then we can actually proceed with the next 10 replicas of our cluster so no more blue-green deploys or",
    "start": "612240",
    "end": "619440"
  },
  {
    "text": "um roto-canary rollouts that would actually allow you to talk to do one half then go off and manually",
    "start": "619440",
    "end": "626160"
  },
  {
    "text": "look at some graphs and then come back and hope everything is okay and then manually deploy the rest this would actually allow you to",
    "start": "626160",
    "end": "632560"
  },
  {
    "text": "encompass everything within the same application one of the new things that we've actually added in uh poloomi 2.0",
    "start": "632560",
    "end": "640000"
  },
  {
    "text": "which was released maybe a month ago now maybe a month and a half is the ability to have real test driven",
    "start": "640000",
    "end": "645440"
  },
  {
    "text": "infrastructure so infrastructure testing is hard because the feedback loop is extremely",
    "start": "645440",
    "end": "653120"
  },
  {
    "text": "slow because you actually have to wait on resources to to spin up and understand what's happening",
    "start": "653120",
    "end": "659040"
  },
  {
    "text": "but if we think about that what we're doing there is we're testing that the res the api request that we've",
    "start": "659040",
    "end": "667040"
  },
  {
    "text": "sent to our specific cloud is actually valid after it has spun up the infrastructure",
    "start": "667040",
    "end": "672399"
  },
  {
    "text": "so we know that if we give a cloud a specific request that they will give us a well-formed",
    "start": "672399",
    "end": "678959"
  },
  {
    "text": "response so in polluting we can actually mock that response right now and we can actually say hey if there's a",
    "start": "678959",
    "end": "685839"
  },
  {
    "text": "request to uh to create a new resource if it's a resource of this specific type",
    "start": "685839",
    "end": "691920"
  },
  {
    "text": "then we can mock that the response from the cloud would be x if it is uh of another type it would",
    "start": "691920",
    "end": "698640"
  },
  {
    "text": "be response y if it's another type it will be response z and because of that we can then",
    "start": "698640",
    "end": "704720"
  },
  {
    "text": "actually test that our code works not the actual cloud themselves because",
    "start": "704720",
    "end": "710399"
  },
  {
    "text": "you know most of the time our tests are actually testing that it's the cloud rather than our specific code that's",
    "start": "710399",
    "end": "716560"
  },
  {
    "text": "been written and my favorite feature about pollumi is",
    "start": "716560",
    "end": "721600"
  },
  {
    "text": "the secrets management infrastructure is code tooling",
    "start": "721600",
    "end": "728320"
  },
  {
    "text": "has predominantly not had secrets management as a first class member uh throughout",
    "start": "728320",
    "end": "734240"
  },
  {
    "text": "the years we've usually had to use another tool that goes with it or it's been bolted on throughout time",
    "start": "734240",
    "end": "741680"
  },
  {
    "text": "but palumi was actually built with secrets management um built in by default so we will",
    "start": "741680",
    "end": "747920"
  },
  {
    "text": "take care of secret management for you when you create a project and i will show you that very soon and it's it actually allows you to",
    "start": "747920",
    "end": "755680"
  },
  {
    "text": "integrate with existing providers that you have if you don't use aws kms or azure key vault or",
    "start": "755680",
    "end": "762079"
  },
  {
    "text": "google cloud kms or hashtag vault then pollumi will assign a pluma kms key to your project",
    "start": "762079",
    "end": "769680"
  },
  {
    "text": "and it will use that which under the hood is using aws kms and you don't have to worry about",
    "start": "769680",
    "end": "776639"
  },
  {
    "text": "setting up the infrastructure for it but of course you can bring your own and bringing your own will adhere to your own security protocols within your",
    "start": "776639",
    "end": "782959"
  },
  {
    "text": "organization this is one of my favorite features and it's one of the first ones i'm going to demo",
    "start": "782959",
    "end": "789040"
  },
  {
    "text": "super fast just to talk about the internals of pollumi plummy as a client and cli okay the cli",
    "start": "789040",
    "end": "795760"
  },
  {
    "text": "tool on your local machine or on your ci tool will read the credentials it will not",
    "start": "795760",
    "end": "801680"
  },
  {
    "text": "transport the credentials anywhere else so the cli makes two calls",
    "start": "801680",
    "end": "806720"
  },
  {
    "text": "it makes a call to your cloud when it actually has the api call and it of course does that over https",
    "start": "806720",
    "end": "813200"
  },
  {
    "text": "and it will authenticate correctly against the cloud and then it will actually talk to app",
    "start": "813200",
    "end": "818480"
  },
  {
    "text": "or api.pollumi.com or app.plummy.com to store your state that's only the",
    "start": "818480",
    "end": "823920"
  },
  {
    "text": "metadata the metadata does not include your credentials we never leak those off",
    "start": "823920",
    "end": "830240"
  },
  {
    "text": "uh the local machine or you do not have to use the polumi sas",
    "start": "830240",
    "end": "836399"
  },
  {
    "text": "what you can actually do is you can use an s3 bucket um or a gcp bucket or an",
    "start": "836399",
    "end": "843920"
  },
  {
    "text": "azure blob and you can log in very quickly and store your state there so you don't even have to talk to polumi in",
    "start": "843920",
    "end": "851199"
  },
  {
    "text": "any way shape or form it's really important i think someone may have had a question because i heard a beep if someone has a",
    "start": "851199",
    "end": "857279"
  },
  {
    "text": "question on that please do um ask it",
    "start": "857279",
    "end": "861440"
  },
  {
    "text": "no i'll continue on so let's go and actually start writing some codes that we can see",
    "start": "866000",
    "end": "871360"
  },
  {
    "text": "this in action i know it's really important to know here that just before i started this",
    "start": "871360",
    "end": "878480"
  },
  {
    "text": "talk amazon have started having api error rates so",
    "start": "878480",
    "end": "883600"
  },
  {
    "text": "my demo may be interesting but we shall see if it is interesting or not um and uh so let's go and have a look at",
    "start": "883600",
    "end": "891519"
  },
  {
    "text": "it so i created just a folder there's nothing in the folder absolutely zero in here and uh the first",
    "start": "891519",
    "end": "898399"
  },
  {
    "text": "thing is that we palumi is a cli i told you so if i run pulumi it will give us",
    "start": "898399",
    "end": "903440"
  },
  {
    "text": "all of the available commands of bulumi but what it actually does is it says the most popular",
    "start": "903440",
    "end": "910160"
  },
  {
    "text": "commands that people used or they begin working with is polluting you pulling me up stack config or destroy",
    "start": "910160",
    "end": "916079"
  },
  {
    "text": "and then it has all of the other ones so pulling me new is by default polomimi is a by default",
    "start": "916079",
    "end": "922399"
  },
  {
    "text": "an interactive cli so if we run the command polymenu it will give us",
    "start": "922399",
    "end": "927920"
  },
  {
    "text": "a list of pre-scaffolded templates that actually have everything all of the",
    "start": "927920",
    "end": "933199"
  },
  {
    "text": "dependencies required in order to run a pollumi application so today i'm going to choose aws",
    "start": "933199",
    "end": "938480"
  },
  {
    "text": "typescript i've given this demo like a hundred times in aws typescript and it'll be the fastest to show you a lot",
    "start": "938480",
    "end": "944079"
  },
  {
    "text": "of good information so we're gonna call it ntc oslo you can give it a description",
    "start": "944079",
    "end": "950800"
  },
  {
    "text": "and then it'll ask you do you want the stack so stacks in pollumi you can think of a",
    "start": "950800",
    "end": "956160"
  },
  {
    "text": "stack as an environment so dev testing staging production but you can also think of a stack as",
    "start": "956160",
    "end": "962959"
  },
  {
    "text": "each in developer each individual developer can have their own stack a stack is a way of managing a state",
    "start": "962959",
    "end": "971040"
  },
  {
    "text": "for a group of resources and you can have multiple stacks pointing to the same project",
    "start": "971040",
    "end": "977120"
  },
  {
    "text": "so this is what allows you to deploy independently of each other and each stack can have its own",
    "start": "977120",
    "end": "982399"
  },
  {
    "text": "configuration so if you think that your production stack needs one set of credentials your dev stack needs a",
    "start": "982399",
    "end": "988079"
  },
  {
    "text": "different set of credentials and this is actually how we take care of it so we're just going to say dev because we're not going to get any multiple",
    "start": "988079",
    "end": "993360"
  },
  {
    "text": "stacks today and then it'll ask us a region so i'm going to say us west 2",
    "start": "993360",
    "end": "998959"
  },
  {
    "text": "because i know that every demo that i give today works in us west 2 or should work in us west 2. and then of",
    "start": "998959",
    "end": "1005120"
  },
  {
    "text": "course it's javascript so it's going to download and install the entire internet so that is",
    "start": "1005120",
    "end": "1011839"
  },
  {
    "text": "an entire pollumi application that has been scaffolded so let's go and write some code okay so",
    "start": "1013199",
    "end": "1019120"
  },
  {
    "text": "i'm just going to open my id very fast and we can see in",
    "start": "1019120",
    "end": "1025760"
  },
  {
    "text": "presentation mode i apologize and what it's given us is a number of",
    "start": "1025760",
    "end": "1031120"
  },
  {
    "text": "things firstly it has all of our node modules okay it has a git ignore it has index.ts which we'll come back to our",
    "start": "1031120",
    "end": "1036839"
  },
  {
    "text": "package.json okay which ours has our dependencies it has a polumi.yaml",
    "start": "1036839",
    "end": "1042000"
  },
  {
    "text": "okay this is the description of the plummies um project including the runtime so if",
    "start": "1042000",
    "end": "1048240"
  },
  {
    "text": "we change the runtime to net it would actually run c sharp or f sharp or whatever um and then lastly it has a",
    "start": "1048240",
    "end": "1054919"
  },
  {
    "text": "palomi.stack.yaml file so in this case we chose dev so it's a dev file the dev file can have",
    "start": "1054919",
    "end": "1060080"
  },
  {
    "text": "config us west too the prod file can have a config",
    "start": "1060080",
    "end": "1065200"
  },
  {
    "text": "u.s east one for example is a region in uh in aws and then lastly it has uh our",
    "start": "1065200",
    "end": "1071520"
  },
  {
    "text": "index that's yes so it has three different things in our index that's yes first it has our imports so if we think of these like our",
    "start": "1071520",
    "end": "1077440"
  },
  {
    "text": "packages so polomi being the helpers the actual engine you know access to the plummy",
    "start": "1077440",
    "end": "1082880"
  },
  {
    "text": "engine itself aws being the raw providers and aws x being that crosswalk compatible um",
    "start": "1082880",
    "end": "1090480"
  },
  {
    "text": "api that sits across the top and then we can actually write some programs against this so everything in our cloud and i'm using",
    "start": "1090480",
    "end": "1097200"
  },
  {
    "text": "amazon here and the same style of demo can be given to azure and you would have the same style",
    "start": "1097200",
    "end": "1102720"
  },
  {
    "text": "of packages so we have aws.s3.bucket or i can say const x equals new aws.rds",
    "start": "1102720",
    "end": "1112559"
  },
  {
    "text": "which is the database component and we would actually see that it's an instance so we get full autocomplete because of the fact",
    "start": "1112559",
    "end": "1119520"
  },
  {
    "text": "that we are a type language now for the anyone who in the is watching the talk if you're a",
    "start": "1119520",
    "end": "1126000"
  },
  {
    "text": "javascript person please do not laugh at my javascript i am not a javascript developer but this actually",
    "start": "1126000",
    "end": "1132080"
  },
  {
    "text": "is extremely simple to get growing with pollumi so that is everything that is a working pollumi application",
    "start": "1132080",
    "end": "1138720"
  },
  {
    "text": "and if i m chain which is um i use a tool for managing my credentials",
    "start": "1138720",
    "end": "1145520"
  },
  {
    "text": "locally and if i say m chain this just loads my credentials pulling me up what pollumi",
    "start": "1145520",
    "end": "1150559"
  },
  {
    "text": "will do is it will try and create a plan of what it's going to do so the first thing it says is going to create a dev stack",
    "start": "1150559",
    "end": "1156960"
  },
  {
    "text": "because it doesn't exist right now and as part of that dev stack it will create",
    "start": "1156960",
    "end": "1162080"
  },
  {
    "text": "a number of resources now the resources in this case will only be an s3 bucket and nothing else",
    "start": "1162080",
    "end": "1168720"
  },
  {
    "text": "and we can have a look at the details of what it's going to do now there's one interesting thing to note right here is",
    "start": "1168720",
    "end": "1174960"
  },
  {
    "text": "the bucket that it's going to deploy has a um suffix on the name",
    "start": "1174960",
    "end": "1180720"
  },
  {
    "text": "pollumi by default will take the constructor name",
    "start": "1180720",
    "end": "1185919"
  },
  {
    "text": "add a random suffix to it and that would be the name of the resource by default we employ auto naming by default because we",
    "start": "1185919",
    "end": "1193280"
  },
  {
    "text": "try and allow you the ability to create before destroy in the cloud there are a lot of resources let's say",
    "start": "1193280",
    "end": "1200160"
  },
  {
    "text": "uh storage accounts and azure s3 buckets in aws um",
    "start": "1200160",
    "end": "1206080"
  },
  {
    "text": "aws launch configurations loads of different pieces that you cannot create a new one before",
    "start": "1206080",
    "end": "1211520"
  },
  {
    "text": "you delete the old one and if you're trying to use a strongly typed name then of course at that point you can",
    "start": "1211520",
    "end": "1217679"
  },
  {
    "text": "be in some problems because the name already exists and it would allow you to do it so by default polymer will actually um",
    "start": "1217679",
    "end": "1226080"
  },
  {
    "text": "auto name for you we're going to say no here and then i can actually override that and i can",
    "start": "1226080",
    "end": "1231600"
  },
  {
    "text": "call it bucket and i can say ndc oslo 2020",
    "start": "1231600",
    "end": "1237520"
  },
  {
    "text": "demo so we're actually strongly naming the bucket right now so i go back to blooming up and of",
    "start": "1237520",
    "end": "1244640"
  },
  {
    "text": "course pulling me up this time will tell me that it's going to create the bucket with the exact name that i specified",
    "start": "1244640",
    "end": "1251120"
  },
  {
    "text": "in one second please there we go and we can see it's",
    "start": "1252080",
    "end": "1259039"
  },
  {
    "text": "an ndc oslo 2020 demo and let's roll that bucket up so polomi now",
    "start": "1259039",
    "end": "1264320"
  },
  {
    "text": "has that in its state i can promise you that this specific account has",
    "start": "1264320",
    "end": "1269440"
  },
  {
    "text": "hundreds of s3 buckets but this pollumi application itself only cares about this specific s3 bucket",
    "start": "1269440",
    "end": "1277360"
  },
  {
    "text": "and nothing else i really hope somebody else hasn't snagged that bucket there we go it's created good and we get",
    "start": "1277360",
    "end": "1283840"
  },
  {
    "text": "the bucket name back so if i say polumi stack export we can have a look at the state that it actually",
    "start": "1283840",
    "end": "1290240"
  },
  {
    "text": "holds and just to show you that we don't store any credentials it has the manifest number it has the",
    "start": "1290240",
    "end": "1298400"
  },
  {
    "text": "secrets provider the secret provider just being that we're actually logged into the service it doesn't store",
    "start": "1298400",
    "end": "1303679"
  },
  {
    "text": "any credentials or any way shape or form and there are no s3 credentials actually",
    "start": "1303679",
    "end": "1308720"
  },
  {
    "text": "excuse me aws credentials being stored in our state file or transmitted in our state file",
    "start": "1308720",
    "end": "1313840"
  },
  {
    "text": "this json blob is everything that is being pushed to our state our metadata server and",
    "start": "1313840",
    "end": "1319200"
  },
  {
    "text": "nothing else and we can see that it's created the bucket and it has all of these specific outputs",
    "start": "1319200",
    "end": "1325039"
  },
  {
    "text": "that come with it okay so we can add some tags to it",
    "start": "1325039",
    "end": "1332720"
  },
  {
    "text": "tags and we can say owner",
    "start": "1332720",
    "end": "1336559"
  },
  {
    "text": "72 and the next pollumi up it will actually only tell me what has",
    "start": "1338080",
    "end": "1343600"
  },
  {
    "text": "changed because it has the state it understands it what the state is currently in our application and it will tell me",
    "start": "1343600",
    "end": "1351120"
  },
  {
    "text": "that it's going to change the tags and we can have a look at the details and it's only going to touch the tags",
    "start": "1351120",
    "end": "1356480"
  },
  {
    "text": "and nothing else and then lastly if i destroy it because this is not interesting and this part of the demo we",
    "start": "1356480",
    "end": "1363280"
  },
  {
    "text": "can see it's only going to destroy that specific bucket and nothing else within this account and we can say yes that goes with that",
    "start": "1363280",
    "end": "1370320"
  },
  {
    "text": "so that is the most basic um flow of a pollumi provider",
    "start": "1370320",
    "end": "1375919"
  },
  {
    "text": "okay let's go and write some more interesting code that actually is a little more useful so i have some code",
    "start": "1375919",
    "end": "1383039"
  },
  {
    "text": "that i've already written and let me just grab it so the first thing that we need to do",
    "start": "1383039",
    "end": "1388720"
  },
  {
    "text": "is i am going to create a number of resources okay again please",
    "start": "1388720",
    "end": "1396400"
  },
  {
    "text": "don't laugh at my javascript i promise you it's um it only gets better",
    "start": "1396400",
    "end": "1401520"
  },
  {
    "text": "i can't actually get any worse with javascript but that's okay so we have firstly we go off to aws and",
    "start": "1401520",
    "end": "1408320"
  },
  {
    "text": "we get the ami for a specific ubuntu image that we want to launch a machine up",
    "start": "1408320",
    "end": "1413919"
  },
  {
    "text": "then we have an ssh key that please never do this in production where you embed your public key in your",
    "start": "1413919",
    "end": "1419919"
  },
  {
    "text": "infrastructure then we have a security group that goes with it so let's say that we actually want to",
    "start": "1419919",
    "end": "1426000"
  },
  {
    "text": "launch multiple web servers here this is why i love javascript as a demo",
    "start": "1426000",
    "end": "1431360"
  },
  {
    "text": "because i can say let web servers equals an empty unbounded array and i can actually say",
    "start": "1431360",
    "end": "1445840"
  },
  {
    "text": "okay so we're in a real loop right now we can actually take advantage of all of",
    "start": "1451200",
    "end": "1457120"
  },
  {
    "text": "being able to look and taken care of everything inside the ecosystem so we're going to say",
    "start": "1457120",
    "end": "1462720"
  },
  {
    "text": "we need to usually do something like const web server equals new aws",
    "start": "1462720",
    "end": "1470960"
  },
  {
    "text": "ec2 dot web server excuse me that instance um our instance will need to",
    "start": "1470960",
    "end": "1477360"
  },
  {
    "text": "have a unique name for everything in the loop okay just because that's how bloomy works",
    "start": "1477360",
    "end": "1482400"
  },
  {
    "text": "every part of every individual resource needs its own and unique name so here we're just going",
    "start": "1482400",
    "end": "1489279"
  },
  {
    "text": "to use the number which will be x then we can actually say our ami",
    "start": "1489279",
    "end": "1494880"
  },
  {
    "text": "will be ubuntu that id",
    "start": "1494880",
    "end": "1501840"
  },
  {
    "text": "we're getting look we're actually getting full intelligence the whole way drawing like we're missing our instance type we're missing some other",
    "start": "1502080",
    "end": "1508559"
  },
  {
    "text": "other things i'm going to say our key name is our key",
    "start": "1508559",
    "end": "1515840"
  },
  {
    "text": "name i'm going to say our vpc security group ids",
    "start": "1516480",
    "end": "1521600"
  },
  {
    "text": "are our open security group dot id gonna come back and i'll show you",
    "start": "1521600",
    "end": "1528960"
  },
  {
    "text": "in a second uh what's wrong right there and lastly um our instance type let's do t2 media",
    "start": "1528960",
    "end": "1535919"
  },
  {
    "text": "okay just because i know that that's the case now usually this would look okay code and you would actually run your",
    "start": "1535919",
    "end": "1540960"
  },
  {
    "text": "tool and it would actually come back with an error in the tool we know polomi understands straight away",
    "start": "1540960",
    "end": "1546880"
  },
  {
    "text": "that a string is not assignable to an array so we understand that this actually",
    "start": "1546880",
    "end": "1553039"
  },
  {
    "text": "needs to be an array so polumi has given us because only because of the fact that we're",
    "start": "1553039",
    "end": "1559120"
  },
  {
    "text": "using real languages it's given us the hints as it goes along and then lastly we can say webservers.push",
    "start": "1559120",
    "end": "1566320"
  },
  {
    "text": "and we can small lambda x dot public dns",
    "start": "1566320",
    "end": "1571840"
  },
  {
    "text": "public ip",
    "start": "1572240",
    "end": "1574960"
  },
  {
    "text": "and then lastly we can export const web server ips",
    "start": "1580799",
    "end": "1587600"
  },
  {
    "text": "equals web servers dot map",
    "start": "1587600",
    "end": "1592000"
  },
  {
    "text": "and you can actually pull the information out of it now this is a little bit painful because we need to declare and",
    "start": "1593279",
    "end": "1598799"
  },
  {
    "text": "we need to actually push individual pieces so what we can really do is we can",
    "start": "1598799",
    "end": "1603960"
  },
  {
    "text": "webservers.push the entire instance",
    "start": "1603960",
    "end": "1609278"
  },
  {
    "text": "into the array and then i can say web servers x dot and i have full access to everything",
    "start": "1609360",
    "end": "1615840"
  },
  {
    "text": "inside here using the individual map and of course my auto completes giving me now if i went and ran that",
    "start": "1615840",
    "end": "1624399"
  },
  {
    "text": "let me just show you pulling me up here it is going to tell me it's going to create 100 instances plus the stack and of",
    "start": "1624720",
    "end": "1632000"
  },
  {
    "text": "course because the the instances um have no relationship between each other it can",
    "start": "1632000",
    "end": "1638399"
  },
  {
    "text": "do all of those instances at the same time",
    "start": "1638399",
    "end": "1643760"
  },
  {
    "text": "there we go so it'll create 103 resources in total we're going to say no so that's not really of use",
    "start": "1645360",
    "end": "1652799"
  },
  {
    "text": "let's actually take advantage of you know not everybody knows each and every",
    "start": "1652799",
    "end": "1658399"
  },
  {
    "text": "individual piece here so what we can do is we create our own individual component",
    "start": "1658399",
    "end": "1663600"
  },
  {
    "text": "and i can say webserver.ts",
    "start": "1663600",
    "end": "1668960"
  },
  {
    "text": "and my web server.ts would um do the following so i can",
    "start": "1668960",
    "end": "1675440"
  },
  {
    "text": "import star as polumi from polumi",
    "start": "1675440",
    "end": "1683279"
  },
  {
    "text": "and i can import star as aws from at lumi aws",
    "start": "1683279",
    "end": "1689600"
  },
  {
    "text": "okay now polomi this is typescript so we can take advantage of inheritance i can actually",
    "start": "1689600",
    "end": "1697278"
  },
  {
    "text": "export a class [Music] not just inheritance here but of course",
    "start": "1698159",
    "end": "1703600"
  },
  {
    "text": "real programming constructs i'm not taking advantage of custom resources right now i can say export a class which will be",
    "start": "1703600",
    "end": "1709120"
  },
  {
    "text": "web server web server itself will return a public",
    "start": "1709120",
    "end": "1718080"
  },
  {
    "text": "read only vm which will be of type aws.ec2",
    "start": "1718080",
    "end": "1725520"
  },
  {
    "text": "instance and then we need a constructor",
    "start": "1725520",
    "end": "1732639"
  },
  {
    "text": "the constructor will take a name which is a type string it will take an ami id which is of type uh polumi.input",
    "start": "1734480",
    "end": "1744799"
  },
  {
    "text": "string i'll explain that in a second and lastly it will take an instance type",
    "start": "1744799",
    "end": "1752320"
  },
  {
    "text": "which we can just pass in as a string so we have our our class set up",
    "start": "1752320",
    "end": "1759840"
  },
  {
    "text": "everything is working as expected and then i can say this dot vm equals new aws that ec2",
    "start": "1759840",
    "end": "1769200"
  },
  {
    "text": "that instance we will actually say that the instance will be named",
    "start": "1769200",
    "end": "1775919"
  },
  {
    "text": "and we can say the ami id is our ami id",
    "start": "1775919",
    "end": "1781440"
  },
  {
    "text": "we can say our instance type is our instance type",
    "start": "1781440",
    "end": "1789440"
  },
  {
    "text": "and then i'm actually just going to move some of these files just to make it nice and simple i'm going to move security group and ssh",
    "start": "1789440",
    "end": "1795279"
  },
  {
    "text": "key because they can be specific to this individual class itself",
    "start": "1795279",
    "end": "1801200"
  },
  {
    "text": "and i'll just embed them in this file i can say our ssh key",
    "start": "1801200",
    "end": "1809840"
  },
  {
    "text": "key name i apologize is ssh key dot key name and then lastly i can say vpc",
    "start": "1811600",
    "end": "1817760"
  },
  {
    "text": "security group ids is open security group dot id",
    "start": "1817760",
    "end": "1823279"
  },
  {
    "text": "now of course this is telling me straight away that this is actually not the correct type because it needs to be an instance type",
    "start": "1823279",
    "end": "1828799"
  },
  {
    "text": "so we created this uh this helper class which we can say aws.ec2.instancetype",
    "start": "1828799",
    "end": "1836720"
  },
  {
    "text": "and i'll show you that in action in a second which will now mean it is assignable as expected and everything works and all of the the",
    "start": "1836720",
    "end": "1843919"
  },
  {
    "text": "code works as expected now instead of creating a new ec2 instance here what i can actually do is i can say new",
    "start": "1843919",
    "end": "1850640"
  },
  {
    "text": "web server notice my ide will not",
    "start": "1850640",
    "end": "1858559"
  },
  {
    "text": "there we go there's our import statement so we're importing web server from the web server class we will pass in",
    "start": "1858559",
    "end": "1865360"
  },
  {
    "text": "web server dash dollar x and it takes like two more parameters",
    "start": "1865360",
    "end": "1874559"
  },
  {
    "text": "which will have an ami needs to be ubuntu i apologize ubuntu",
    "start": "1874559",
    "end": "1881120"
  },
  {
    "text": "dot id then it needs to be aws i told you before like we created this helper layer for instance type so we can",
    "start": "1881120",
    "end": "1888799"
  },
  {
    "text": "say aws.ec2 that instance types dots and we get autocomplete for all of the instance",
    "start": "1888799",
    "end": "1894960"
  },
  {
    "text": "types inside aws and that works as expected",
    "start": "1894960",
    "end": "1901600"
  },
  {
    "text": "and notice that our id has told us wait a minute this isn't correct because public ip doesn't exist on x anymore",
    "start": "1902399",
    "end": "1908640"
  },
  {
    "text": "because x returns a vm which has public ip inside it so straight away we've been able to",
    "start": "1908640",
    "end": "1914240"
  },
  {
    "text": "refactor and actually push a number of pieces of components down into the web server class",
    "start": "1914240",
    "end": "1920480"
  },
  {
    "text": "that can be packaged up and it can actually be distributed amongst developers or operators or whatever",
    "start": "1920480",
    "end": "1926399"
  },
  {
    "text": "so creating those layers of abstraction are nice and simple let's do something more interesting let",
    "start": "1926399",
    "end": "1934080"
  },
  {
    "text": "us have a look at the secret management of polomi so the first",
    "start": "1934080",
    "end": "1940559"
  },
  {
    "text": "thing i need to do is i need to install at pollumi and i'm going to say random so random is",
    "start": "1940559",
    "end": "1946480"
  },
  {
    "text": "like it it suggests it's a package that allows you to create random strings and random pieces of functionality and importantly random",
    "start": "1946480",
    "end": "1953600"
  },
  {
    "text": "passwords that are of like you know different character strengths and things like this so the first thing i'm going to do is import star as",
    "start": "1953600",
    "end": "1960840"
  },
  {
    "text": "random from me slash random okay",
    "start": "1960840",
    "end": "1967120"
  },
  {
    "text": "now i'm going to say const my password equals new random random password i'm going say demo one",
    "start": "1967360",
    "end": "1976960"
  },
  {
    "text": "and i want that password to be 30 characters and have special characters especially",
    "start": "1976960",
    "end": "1983440"
  },
  {
    "text": "true okay now what we can actually do and this is how most tools work today i can const",
    "start": "1983440",
    "end": "1990640"
  },
  {
    "text": "um password value equals my password and i know that this is stored in result",
    "start": "1990640",
    "end": "1996880"
  },
  {
    "text": "and um if i go and i run gloomy up i'm gonna say yes here so i'm gonna skip",
    "start": "1996880",
    "end": "2002880"
  },
  {
    "text": "the prompt which actually asks you for yes and i'm going to say skip preview this",
    "start": "2002880",
    "end": "2008720"
  },
  {
    "text": "sort of puts pollumi into the ci mode um where it doesn't have any interactivity that comes back at all",
    "start": "2008720",
    "end": "2014960"
  },
  {
    "text": "and what this allows us to do is we actually get a password that will be prompted and pushed out and",
    "start": "2014960",
    "end": "2021360"
  },
  {
    "text": "you can see that it's in plain text now i told you pulling me with secret by default",
    "start": "2021360",
    "end": "2026640"
  },
  {
    "text": "we actually have a secret provider i'm enabled and if i do exactly the same thing with",
    "start": "2026640",
    "end": "2032720"
  },
  {
    "text": "the second random password the third argument to the resource cons",
    "start": "2032720",
    "end": "2038480"
  },
  {
    "text": "the resource is uh called custom resource options and inside here we can actually take",
    "start": "2038480",
    "end": "2044240"
  },
  {
    "text": "advantage of additional secret outputs and it's stringly typed right now but that could change in the future",
    "start": "2044240",
    "end": "2050079"
  },
  {
    "text": "and this allows us to be any outputs of that name",
    "start": "2050079",
    "end": "2056398"
  },
  {
    "text": "so result from the parameter the output parameter result will be treated as a secret there are a",
    "start": "2056399",
    "end": "2061520"
  },
  {
    "text": "lot of interesting extra things in here so you can actually mark things as the leak before replace import if you have",
    "start": "2061520",
    "end": "2067358"
  },
  {
    "text": "existing infrastructure um you can actually protect your infrastructure so that gloomy will never",
    "start": "2067359",
    "end": "2073440"
  },
  {
    "text": "destroy it um ignore any changes that happen in your infrastructure you can version it you can have aliases",
    "start": "2073440",
    "end": "2078638"
  },
  {
    "text": "custom timeouts everything right there's a lot of different things in here but for now we're just going to say the",
    "start": "2078639",
    "end": "2083839"
  },
  {
    "text": "output will be a result and i'm going to say my password 2 is my password to",
    "start": "2083839",
    "end": "2088878"
  },
  {
    "text": "that result now if i run the same you'll see the first one comes back as normal um as the um",
    "start": "2088879",
    "end": "2097200"
  },
  {
    "text": "the unencrypted string but you'll see the second one is actually secret and even inside pollumi state",
    "start": "2097200",
    "end": "2105599"
  },
  {
    "text": "we will see that it is stored as secret we can see the cipher text right here okay this is using uh polymer kms like i told",
    "start": "2105599",
    "end": "2112480"
  },
  {
    "text": "you because it's there but when i put lumi stack in it to create a new",
    "start": "2112480",
    "end": "2118000"
  },
  {
    "text": "um provider you can very much pass in your own kms id your own azure key vault or gcp kms or",
    "start": "2118000",
    "end": "2125680"
  },
  {
    "text": "of course if you use hashicorp vault we can use hashicorp as well to do that so for us this is",
    "start": "2125680",
    "end": "2130800"
  },
  {
    "text": "extremely important but you don't just set secrets that way so let's say we need a",
    "start": "2130800",
    "end": "2136960"
  },
  {
    "text": "password that is going to be used inside our application so if i say polumi config set",
    "start": "2136960",
    "end": "2142000"
  },
  {
    "text": "my database root password and it'll be password one two three four",
    "start": "2142000",
    "end": "2148480"
  },
  {
    "text": "exclamation mark you need the exclamation mark unless it's secret and to make it secret um and we can see that by default for me",
    "start": "2148480",
    "end": "2155599"
  },
  {
    "text": "doesn't know that is a secret so we can pass the same and we could say with secret and we can see",
    "start": "2155599",
    "end": "2163680"
  },
  {
    "text": "it has been used as a secure string now it's really important to show you",
    "start": "2163680",
    "end": "2169119"
  },
  {
    "text": "one thing here so if i import star as com as uh polumi",
    "start": "2169119",
    "end": "2174960"
  },
  {
    "text": "from blooming then i want to show you that",
    "start": "2174960",
    "end": "2181839"
  },
  {
    "text": "we keep pat we actually pass it around as a secret the whole way through okay",
    "start": "2181839",
    "end": "2189280"
  },
  {
    "text": "we don't decrypt it and then use it with it's actually only used at the point of",
    "start": "2189280",
    "end": "2194960"
  },
  {
    "text": "execution is when it's actually decrypted and passed around otherwise it is a secret and i'm going to show you that so const",
    "start": "2194960",
    "end": "2201280"
  },
  {
    "text": "my db password equals config.getsecret",
    "start": "2201280",
    "end": "2207440"
  },
  {
    "text": "and the secret that i called it was my database root password and then lastly i can export it",
    "start": "2207440",
    "end": "2215599"
  },
  {
    "text": "export cons x equals that and if i pull me up right now",
    "start": "2215599",
    "end": "2223838"
  },
  {
    "text": "we will get the correct behavior which will pass and we will see it coming back x is",
    "start": "2226800",
    "end": "2232000"
  },
  {
    "text": "a secret and of course more importantly is x is stored as a secret in our provider",
    "start": "2232000",
    "end": "2240480"
  },
  {
    "text": "there we go it is stored as a ciphertext so everything by default the outputs are all stored as",
    "start": "2240480",
    "end": "2246560"
  },
  {
    "text": "ciphertext and you can push as many of these in as you need so as well as result we can pass length",
    "start": "2246560",
    "end": "2254000"
  },
  {
    "text": "we can pass special so nobody can actually see if it's a character that's been encrypted with special uh characters or how big the password is",
    "start": "2254000",
    "end": "2261760"
  },
  {
    "text": "and so on and palumi will store all of those and one last time we can have a look at",
    "start": "2261760",
    "end": "2268160"
  },
  {
    "text": "and it will there'll be no changes because all it's doing right now is changing the state and nothing else we can see that there are three",
    "start": "2269359",
    "end": "2275119"
  },
  {
    "text": "unchanged resources and if we go back to our state we can see that special is now encrypted",
    "start": "2275119",
    "end": "2280240"
  },
  {
    "text": "result is encrypted and length is encrypted so you can encrypt any output parameter that you require in",
    "start": "2280240",
    "end": "2286560"
  },
  {
    "text": "order to keep your state as safe as possible so that is",
    "start": "2286560",
    "end": "2294880"
  },
  {
    "text": "secret management secret management for us is extremely important okay so i'm just going to destroy that application",
    "start": "2294880",
    "end": "2301119"
  },
  {
    "text": "right now let's go to something a little more what have i got 20 minutes okay perfect i have a lot of time i have a lot of time",
    "start": "2301119",
    "end": "2307680"
  },
  {
    "text": "so let's actually go in and create someone a little bit more interested for those in aws",
    "start": "2307680",
    "end": "2313599"
  },
  {
    "text": "um if you know in aws that secret management is or excuse me i am",
    "start": "2313599",
    "end": "2319040"
  },
  {
    "text": "management is painful because you actually have to use json blobs everywhere so this shows",
    "start": "2319040",
    "end": "2326880"
  },
  {
    "text": "the ability of how polumi can actually abstract that away from you so let's i usually",
    "start": "2326880",
    "end": "2332160"
  },
  {
    "text": "in person i would give a prize for the person who can help me code this hey",
    "start": "2332160",
    "end": "2340240"
  },
  {
    "text": "folks i'm really sorry i didn't realize i was kicked out i asked that if everyone could hear me and they said yes so i don't understand what happened",
    "start": "2340240",
    "end": "2348160"
  },
  {
    "text": "i apologize for that and so what i was actually showing is um i was uh",
    "start": "2348160",
    "end": "2356000"
  },
  {
    "text": "where was i up to so i was showing that we were able to create a layer of abstraction around an api",
    "start": "2356000",
    "end": "2362320"
  },
  {
    "text": "gateway and hook a lambda function up to the api gateway with the correct",
    "start": "2362320",
    "end": "2368079"
  },
  {
    "text": "permissions that pollumi would package the api gateway for us the api gateway actually excuse me the",
    "start": "2368079",
    "end": "2375680"
  },
  {
    "text": "lambda has code in it that talks to um aws dynamodb because we've",
    "start": "2375680",
    "end": "2383520"
  },
  {
    "text": "imported this aws sdk package plummy understands that it needs to include",
    "start": "2383520",
    "end": "2388560"
  },
  {
    "text": "that as a reference within your lambda and lastly um it actually will expose",
    "start": "2388560",
    "end": "2394880"
  },
  {
    "text": "that lambda when somebody makes a get request to the slash route on the api gateway",
    "start": "2394880",
    "end": "2400079"
  },
  {
    "text": "okay so in the code what that actually looks like and it looks like i am is dying right",
    "start": "2400079",
    "end": "2407200"
  },
  {
    "text": "now but i'm still hearing people maybe talking",
    "start": "2407200",
    "end": "2412880"
  },
  {
    "text": "to me can you s oh good i thought that was",
    "start": "2412880",
    "end": "2418960"
  },
  {
    "text": "like can you can everyone hear me yes okay perfect perfect perfect i don't",
    "start": "2418960",
    "end": "2424880"
  },
  {
    "text": "want to be kicked out again i don't want to be kicked out again and so we can actually see that it's packaging and building the software as",
    "start": "2424880",
    "end": "2431599"
  },
  {
    "text": "well as our infrastructure at the same time and that's extremely um useful because as a developer we maybe",
    "start": "2431599",
    "end": "2438240"
  },
  {
    "text": "don't care about all of the individual components that are required in order to get our lambda into the cloud let it let this",
    "start": "2438240",
    "end": "2445440"
  },
  {
    "text": "specific package that has been created deploy this for you now it looks like this deployment is not",
    "start": "2445440",
    "end": "2451599"
  },
  {
    "text": "going to happen because um i am is still down i believe",
    "start": "2451599",
    "end": "2456960"
  },
  {
    "text": "and um it won't allow me to roll out the i am but effectively what i would be able to do then",
    "start": "2456960",
    "end": "2462000"
  },
  {
    "text": "would be to make a curl request to the um slash endpoint of the url and the url",
    "start": "2462000",
    "end": "2468240"
  },
  {
    "text": "i actually um have outputted from the site that has been created and it would actually see the hits actually triggering up so it's",
    "start": "2468240",
    "end": "2475440"
  },
  {
    "text": "extremely useful in terms of doing that but what we can do is we can cancel it and then we can actually",
    "start": "2475440",
    "end": "2481599"
  },
  {
    "text": "see palomi's actually telling you if you terminate it it's going to give you orphaned resources um so we don't care we'll just say",
    "start": "2481599",
    "end": "2487520"
  },
  {
    "text": "pollute me cancel to cancel the update and then lastly",
    "start": "2487520",
    "end": "2493040"
  },
  {
    "text": "there we go update has completed i'm just going to destroy the infrastructure that goes with that",
    "start": "2493040",
    "end": "2498160"
  },
  {
    "text": "so the serverless um layers of abstraction is is extremely useful here because uh it",
    "start": "2498160",
    "end": "2506240"
  },
  {
    "text": "gives us the ability that we can actually do different things so let me just go into another folder demo",
    "start": "2506240",
    "end": "2512800"
  },
  {
    "text": "testing i have one last demo because i have five minutes demo testing",
    "start": "2512800",
    "end": "2519440"
  },
  {
    "text": "see the demo testing there we go i'm going to scaffold a new pollumi application",
    "start": "2520079",
    "end": "2526240"
  },
  {
    "text": "so polluting new aws typescript i'm going to say yes",
    "start": "2526240",
    "end": "2532960"
  },
  {
    "text": "and you can see it chooses the defaults for me um but i'm going to override the",
    "start": "2534560",
    "end": "2540800"
  },
  {
    "text": "configuration of the region so pollumi config set aws region",
    "start": "2540800",
    "end": "2546319"
  },
  {
    "text": "is us west 2. going to install another package so npm",
    "start": "2546319",
    "end": "2553520"
  },
  {
    "text": "install at paloomi and the polomi package is a layer of",
    "start": "2553520",
    "end": "2560880"
  },
  {
    "text": "abstraction around eks which allows us to create kubernetes components",
    "start": "2560880",
    "end": "2565920"
  },
  {
    "text": "and i'm going to install that i'm going to create a folder called tests i'm going to go",
    "start": "2565920",
    "end": "2571680"
  },
  {
    "text": "inside the tests folder and i'm going to scaffold a new polumi",
    "start": "2571680",
    "end": "2576720"
  },
  {
    "text": "policy pack which will allow us to run the tests so plummy policy new aws typescript",
    "start": "2576720",
    "end": "2584240"
  },
  {
    "text": "and that just sets up some basic um like configuration that allows us to do different things and",
    "start": "2584240",
    "end": "2590640"
  },
  {
    "text": "i just need to add some code in here okay so the first thing i'm going to do",
    "start": "2590640",
    "end": "2596960"
  },
  {
    "text": "is i am going to open my id",
    "start": "2596960",
    "end": "2603200"
  },
  {
    "text": "okay so my ide will allow me to do a number of things here so firstly in tests i'm going to kill",
    "start": "2605119",
    "end": "2612000"
  },
  {
    "text": "everything that's in here and i'm going to write a policy test okay this is policies that will always",
    "start": "2612000",
    "end": "2617760"
  },
  {
    "text": "apply to the code every time you try and deploy the code okay and what it is is i want to verify that",
    "start": "2617760",
    "end": "2623760"
  },
  {
    "text": "a specific version of eks has been deployed",
    "start": "2623760",
    "end": "2629920"
  }
]