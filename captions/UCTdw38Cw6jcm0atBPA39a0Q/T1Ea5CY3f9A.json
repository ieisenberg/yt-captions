[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "so good morning so I'm bill Wagner I",
    "start": "9640",
    "end": "14790"
  },
  {
    "text": "work with Microsoft primarily creating teaching materials for dotnet and c-sharp the focus of this talk he is",
    "start": "14790",
    "end": "23980"
  },
  {
    "text": "going to be going open bringing c-sharp out into the wild and how we're going to",
    "start": "23980",
    "end": "30939"
  },
  {
    "text": "be evolving the language from this point forward so first just a little bit of a",
    "start": "30939",
    "end": "36640"
  },
  {
    "start": "34000",
    "end": "126000"
  },
  {
    "text": "recap from last year where we are and what the really big goal is for the c-sharp team and for my team helping",
    "start": "36640",
    "end": "42010"
  },
  {
    "text": "developers work with c-sharp stack overflows most popular technologies nice c-sharp is sitting",
    "start": "42010",
    "end": "50290"
  },
  {
    "text": "there in the fourth place we'd like to be higher stack overflows most love",
    "start": "50290",
    "end": "57280"
  },
  {
    "text": "technologies once again we're in this list interestingly the languages above",
    "start": "57280",
    "end": "66340"
  },
  {
    "text": "us in the most loved technologies typescript is getting quite a bit of use",
    "start": "66340",
    "end": "73960"
  },
  {
    "text": "but a lot of them are and python is very popular but a lot of the languages are very niche very small communities one of",
    "start": "73960",
    "end": "83020"
  },
  {
    "text": "the things that we're really proud of that we want to continue is c-sharp and typescript which is quite a ways down",
    "start": "83020",
    "end": "90100"
  },
  {
    "text": "but c-sharp and typescript are the only languages that appear on",
    "start": "90100",
    "end": "95950"
  },
  {
    "text": "both of those lists as of the end of last year so we're one of very few languages that are both used by a very",
    "start": "95950",
    "end": "103270"
  },
  {
    "text": "very large community and loved by a high percentage of that community that's our",
    "start": "103270",
    "end": "110140"
  },
  {
    "text": "goal and our mission is to stay on both of those lists and hopefully to move up on both of those lists by keeping",
    "start": "110140",
    "end": "116409"
  },
  {
    "text": "c-sharp relevant keeping it modern and investing in it in ways that help",
    "start": "116409",
    "end": "122409"
  },
  {
    "text": "developers build what we're building today so here's a lot of what we're",
    "start": "122409",
    "end": "127870"
  },
  {
    "start": "126000",
    "end": "155000"
  },
  {
    "text": "gonna be going over today so I'm going to talk about different things that we are doing to be going open with c-sharp open source open platform open language",
    "start": "127870",
    "end": "135879"
  },
  {
    "text": "API Kross IDE open design and an open mind so that's",
    "start": "135879",
    "end": "141970"
  },
  {
    "text": "basically our agenda I'll take questions throughout the talk from anyone who has them if they're on",
    "start": "141970",
    "end": "148480"
  },
  {
    "text": "something I'll cover it later I'll defer to that point but in general I'm happy to take questions as we go let's talk",
    "start": "148480",
    "end": "156490"
  },
  {
    "start": "155000",
    "end": "336000"
  },
  {
    "text": "about open source the runtime for dotnet is open source the framework is open source the compiler is open source our",
    "start": "156490",
    "end": "164860"
  },
  {
    "text": "documentation is open source now you've seen a lot of things whether it build or other Microsoft events where we talk",
    "start": "164860",
    "end": "171250"
  },
  {
    "text": "about what we're doing in github so very briefly as far as that goes in a lot of",
    "start": "171250",
    "end": "177310"
  },
  {
    "text": "what we are doing with documentation we're also trying to bring that out into",
    "start": "177310",
    "end": "184180"
  },
  {
    "text": "the open and learn more about what people are struggling with what developers need to know where we're not",
    "start": "184180",
    "end": "190780"
  },
  {
    "text": "explaining things clearly one thing you're going to see light up this week is you've probably seen a fair amount of",
    "start": "190780",
    "end": "197950"
  },
  {
    "text": "confusion on the terms that framework net standard net core net this net",
    "start": "197950",
    "end": "203550"
  },
  {
    "text": "everywhere and so on we've put a lot of work into a new glossary to really define those terms very clearly to make",
    "start": "203550",
    "end": "212080"
  },
  {
    "text": "it very clear exactly what we mean when we say dotnet standard or die net framework this is one that I'm working",
    "start": "212080",
    "end": "219190"
  },
  {
    "text": "on right now anything in the docs repo which is Keep Calm Slashdot net slash Docs where I'm looking at a possible way",
    "start": "219190",
    "end": "228040"
  },
  {
    "text": "of redesigning how most of the c-sharp content is put together so I've already",
    "start": "228040",
    "end": "234070"
  },
  {
    "text": "got comments from a couple MVPs from a couple of members of the compiler team",
    "start": "234070",
    "end": "239799"
  },
  {
    "text": "from Mads and so on this will probably stay with this label of discussion for",
    "start": "239799",
    "end": "247360"
  },
  {
    "text": "another month or two to get more feedback find out exactly what people think of the idea refine it then we'll",
    "start": "247360",
    "end": "253060"
  },
  {
    "text": "start to build a planned around it so we're doing this for a lot of the things that we're looking at is we're going to start by trying opening a discussion",
    "start": "253060",
    "end": "258700"
  },
  {
    "text": "going here's what we think we need to do here's our proposal how do you like it",
    "start": "258700",
    "end": "264340"
  },
  {
    "text": "how can we refine it what we'll do more to help others if you go to the dotnet",
    "start": "264340",
    "end": "270190"
  },
  {
    "text": "organization one thing I want to point out for a group here internationally is",
    "start": "270190",
    "end": "275469"
  },
  {
    "text": "in addition to get up slash docks that all of our localized versions of the",
    "start": "275469",
    "end": "283419"
  },
  {
    "text": "documentation are open-source as well so if you're a non-native English speaker if your preferred language is something",
    "start": "283419",
    "end": "290110"
  },
  {
    "text": "different and you find a bug in any of the translations those are all open source as well happy to get PRS or",
    "start": "290110",
    "end": "297819"
  },
  {
    "text": "issues on any of the translations so everything we do is open source there's",
    "start": "297819",
    "end": "306039"
  },
  {
    "text": "also a button if you find something very quickly if we look at the documentation",
    "start": "306039",
    "end": "311679"
  },
  {
    "text": "under Doc's like if I were to go to the Torah c-sharp if I were to find a bug",
    "start": "311679",
    "end": "317079"
  },
  {
    "text": "here if I click on the edit button it's going to take you directly to that file in our github repo if you were to",
    "start": "317079",
    "end": "323529"
  },
  {
    "text": "hit edit make a change save it it'll submit a PR for us so we want to make",
    "start": "323529",
    "end": "328869"
  },
  {
    "text": "that as seamless as possible for anything that we might be doing",
    "start": "328869",
    "end": "333689"
  },
  {
    "start": "336000",
    "end": "346000"
  },
  {
    "text": "cross-platform c-sharp runs almost everywhere it's really kind of nice with",
    "start": "336659",
    "end": "347379"
  },
  {
    "start": "346000",
    "end": "357000"
  },
  {
    "text": "xamarin we've run on iOS we run on Android we run on Mac just in case",
    "start": "347379",
    "end": "353289"
  },
  {
    "text": "anyone's wondering we do still run on Windows as well if you look at unity one",
    "start": "353289",
    "end": "358899"
  },
  {
    "text": "of the leading game engines 2d 3d game engines massively cross-platform c-sharp",
    "start": "358899",
    "end": "364719"
  },
  {
    "text": "compiler runs there you may have seen the network go down late here Monday",
    "start": "364719",
    "end": "371439"
  },
  {
    "start": "367000",
    "end": "389000"
  },
  {
    "text": "night Tuesday morning here when we shipped dotnet core 2.0 and visual studio.net core is a lightweight",
    "start": "371439",
    "end": "378429"
  },
  {
    "text": "platform server cloud workloads Linux Mac and yes it does run on Windows",
    "start": "378429",
    "end": "383800"
  },
  {
    "text": "as well so c-sharp is available on all those different platforms C sharp",
    "start": "383800",
    "end": "391329"
  },
  {
    "start": "389000",
    "end": "752000"
  },
  {
    "text": "everywhere we have this one dotnet concept so this is one that still causes",
    "start": "391329",
    "end": "397779"
  },
  {
    "text": "a lot of confusion so who knows the difference between done that standard dotnet framework that's kind of what I",
    "start": "397779",
    "end": "403869"
  },
  {
    "text": "thought okay it's a very briefly dotnet standard is a",
    "start": "403869",
    "end": "409919"
  },
  {
    "text": "contract anything that says we support dotnet standard that's a set of api's",
    "start": "409919",
    "end": "416490"
  },
  {
    "text": "that should run on anything that says it's dotnet dotnet framework is what we",
    "start": "416490",
    "end": "423330"
  },
  {
    "text": "would have historically referred to as a dotnet framework that runs on Windows and it implements dotnet standard okay",
    "start": "423330",
    "end": "432410"
  },
  {
    "text": "dotnet core so you've gotten that core 2.0 release implements dotnet standard",
    "start": "432410",
    "end": "438930"
  },
  {
    "text": "2.0 and runs cross-platform xamarin dot Android for instance would be a an",
    "start": "438930",
    "end": "446130"
  },
  {
    "text": "implementation of dotnet standard plus other things for Android that runs on Android so for any of those",
    "start": "446130",
    "end": "452720"
  },
  {
    "text": "implementations it may and very likely does include more than net standard",
    "start": "452720",
    "end": "459349"
  },
  {
    "text": "dinettes standard is the set of API is guaranteed to be available on all platforms okay now at the moment there's",
    "start": "459349",
    "end": "467490"
  },
  {
    "text": "a bit of an asterisk there because some of those api's may throw not implemented exceptions that's because we're trying",
    "start": "467490",
    "end": "473789"
  },
  {
    "text": "to move to get to this as consistent as possible now the reason this is",
    "start": "473789",
    "end": "479010"
  },
  {
    "text": "important and the reason that standard is important is for as many libraries as we can especially nougat packages we",
    "start": "479010",
    "end": "487530"
  },
  {
    "text": "want to say that your dependency is a version of.net standard so then you're",
    "start": "487530",
    "end": "494010"
  },
  {
    "text": "going to compile against dotnet sane or 2.0 and that means that the binaries you create will run in an environment where",
    "start": "494010",
    "end": "502979"
  },
  {
    "text": "anything that implements that in a standard 2.0 is running so if you take that library or that nougat package put",
    "start": "502979",
    "end": "509250"
  },
  {
    "text": "it on Windows and a full framework app it's going to run against that net framework if you put it in a diner core",
    "start": "509250",
    "end": "515820"
  },
  {
    "text": "app it's gonna run against dotnet core but your dependency is dotnet standard",
    "start": "515820",
    "end": "521520"
  },
  {
    "text": "yes",
    "start": "521520",
    "end": "523729"
  },
  {
    "text": "right mm-hmm I I don't believe there is",
    "start": "528480",
    "end": "535959"
  },
  {
    "text": "a timeline established for that the way I like to explain it is there are we",
    "start": "535959",
    "end": "541300"
  },
  {
    "text": "think of four buckets for api's okay first let's take an API that's all",
    "start": "541300",
    "end": "546970"
  },
  {
    "text": "managed code something like systems that collections then that should run",
    "start": "546970",
    "end": "553959"
  },
  {
    "text": "everywhere so that's going to run everywhere that's good that's the easy bucket now I'm really simplifying some of them",
    "start": "553959",
    "end": "559600"
  },
  {
    "text": "aren't easy but that's the easy bucket there is a set of api's that are implemented on all platforms but their",
    "start": "559600",
    "end": "567070"
  },
  {
    "text": "implementation is different so let's take system dot IO works with the file system a Windows file system is",
    "start": "567070",
    "end": "574209"
  },
  {
    "text": "different than a Mac file system so it's some layer that's going to be different",
    "start": "574209",
    "end": "579430"
  },
  {
    "text": "implementations networking is a different one the system networking",
    "start": "579430",
    "end": "585040"
  },
  {
    "text": "api's are built into the Windows OS on Linux we take a dependency on an OSS",
    "start": "585040",
    "end": "591790"
  },
  {
    "text": "library to do HTTP and TCP and other networking so the API surface is the",
    "start": "591790",
    "end": "597850"
  },
  {
    "text": "same the implementation is different now we get to the two really hard buckets where there's a fair amount of",
    "start": "597850",
    "end": "603100"
  },
  {
    "text": "discussion the first really hard bucket is because in its original implementation dotnet framework had some",
    "start": "603100",
    "end": "609850"
  },
  {
    "text": "windows specific api's there isn't something like the registry on linux",
    "start": "609850",
    "end": "616649"
  },
  {
    "text": "those throw not implemented exceptions in some cases we may try to implement something underneath it that acts like a",
    "start": "616649",
    "end": "623110"
  },
  {
    "text": "registry for application only don't know but those may for historical reasons",
    "start": "623110",
    "end": "630310"
  },
  {
    "text": "just continue to throw stuff why would they be in the standard because taking",
    "start": "630310",
    "end": "635770"
  },
  {
    "text": "them out would break a lot of other code that for historical reasons put things in the registry so we can fix some",
    "start": "635770",
    "end": "642760"
  },
  {
    "text": "things remove some of the dependency where a path goes through certain bits",
    "start": "642760",
    "end": "648760"
  },
  {
    "text": "of code but still has to compile against something that might not be there the",
    "start": "648760",
    "end": "654160"
  },
  {
    "text": "fourth path that is a little bit tricky is where it relates to reflection",
    "start": "654160",
    "end": "659199"
  },
  {
    "text": "okay so and in this path we have a few different interesting things coming up",
    "start": "659199",
    "end": "664969"
  },
  {
    "text": "keeping dotnet modern if you think of a device like a phone in an ideal world I",
    "start": "664969",
    "end": "670699"
  },
  {
    "text": "don't want to jet on my phone all right because that uses battery uses memory so on and so forth in an ideal world I",
    "start": "670699",
    "end": "678169"
  },
  {
    "text": "upload packages into the store that have already been turned into executable code",
    "start": "678169",
    "end": "683659"
  },
  {
    "text": "compiled and I pull down those images that means reflection won't be available",
    "start": "683659",
    "end": "689269"
  },
  {
    "text": "because they've already been compiled in the metadata is removed so that's a different engineering problem and figure",
    "start": "689269",
    "end": "695419"
  },
  {
    "text": "out what do we really need for reflection and standard to do certain things and what kind of things can we",
    "start": "695419",
    "end": "702859"
  },
  {
    "text": "live without so those last two buckets especially get hard okay if you watch",
    "start": "702859",
    "end": "709819"
  },
  {
    "text": "the core CLR and core effects repos you'll and especially the dotnet blog",
    "start": "709819",
    "end": "715099"
  },
  {
    "text": "when emo talks about these problems you get a good idea where it's going so I",
    "start": "715099",
    "end": "721399"
  },
  {
    "text": "don't know that there's a timeline for saying that no API and dotnet standard will ever thrown out implementing",
    "start": "721399",
    "end": "727579"
  },
  {
    "text": "exceptions I don't know if that's even something that is feasible okay but it",
    "start": "727579",
    "end": "737389"
  },
  {
    "text": "is for historical reasons to try to be as backwards compatible as possible okay other questions on dotnet standard and",
    "start": "737389",
    "end": "743809"
  },
  {
    "text": "where that parts going so now you can all tell your friends and explain their difference right secular cool okay going",
    "start": "743809",
    "end": "754369"
  },
  {
    "start": "752000",
    "end": "765000"
  },
  {
    "text": "open working with Rosalyn so Roslyn at one point was a code name for the new compiler it's now the API is to work",
    "start": "754369",
    "end": "762319"
  },
  {
    "text": "with things about that so we have syntax trees and more the goal behind Rosalyn",
    "start": "762319",
    "end": "768889"
  },
  {
    "start": "765000",
    "end": "811000"
  },
  {
    "text": "and the c-sharp language engine also the vb.net language engine is there should",
    "start": "768889",
    "end": "773899"
  },
  {
    "text": "need to be only one code base in the world to understand c-sharp so if you",
    "start": "773899",
    "end": "781159"
  },
  {
    "text": "want to build an IDE or an editor if you want to build Lin tearing analysis tools",
    "start": "781159",
    "end": "787659"
  },
  {
    "text": "code checking static analysis fixes factorings source generation scripting",
    "start": "787659",
    "end": "797110"
  },
  {
    "text": "rebels maybe compiling you should be able to use the Rosalynn api's to do",
    "start": "797110",
    "end": "802630"
  },
  {
    "text": "that one tree to rule them all builds an expression tree let's go climate since",
    "start": "802630",
    "end": "812290"
  },
  {
    "start": "811000",
    "end": "836000"
  },
  {
    "text": "it's do that across ide omni sharp project so it's a open source community",
    "start": "812290",
    "end": "819160"
  },
  {
    "text": "project leverages Rozlyn language services and is used by all of these",
    "start": "819160",
    "end": "824200"
  },
  {
    "text": "editors in order to provide intel asan's syntax coloring and so on in any of",
    "start": "824200",
    "end": "830200"
  },
  {
    "text": "those editors all leveraging Rosling",
    "start": "830200",
    "end": "834510"
  },
  {
    "start": "836000",
    "end": "877000"
  },
  {
    "text": "open design so language design really is a conversation how do we want to extend",
    "start": "836730",
    "end": "844720"
  },
  {
    "text": "the language to make it easier and to make all of you more productive using",
    "start": "844720",
    "end": "849940"
  },
  {
    "text": "c-sharp what things can come next you know there's a discussion around this",
    "start": "849940",
    "end": "855610"
  },
  {
    "text": "where we have things that i'll hear people in the community say oh gee c-sharp it's already 7 it's mature lets",
    "start": "855610",
    "end": "863440"
  },
  {
    "text": "isn't it done yet no we think there's",
    "start": "863440",
    "end": "868510"
  },
  {
    "text": "some stuff it could be cool i'll show you some of the things we're looking at for c-sharp 8 in this talk get some",
    "start": "868510",
    "end": "875290"
  },
  {
    "text": "feedback on some of those ideas and especially having an open mind c-sharp",
    "start": "875290",
    "end": "882370"
  },
  {
    "start": "877000",
    "end": "921000"
  },
  {
    "text": "started as an object-oriented language there's a very interesting thing that we're finding right now is that believe",
    "start": "882370",
    "end": "889900"
  },
  {
    "text": "it or not not every problem should be solved with objects who knew but it's kind of in the DNA",
    "start": "889900",
    "end": "900400"
  },
  {
    "text": "that c-sharp started that way so now how do we break it out of just that paradigm and make it a language we can use in a",
    "start": "900400",
    "end": "908710"
  },
  {
    "text": "lot of different ways in a lot of different paradigms and yet not make it the language that has every feature in",
    "start": "908710",
    "end": "914800"
  },
  {
    "text": "the world where you really wish stuff was missing because then it's just hard to use",
    "start": "914800",
    "end": "921870"
  },
  {
    "start": "921000",
    "end": "1045000"
  },
  {
    "text": "going back briefly c-sharp with the open language discussion there's a language",
    "start": "922519",
    "end": "929300"
  },
  {
    "text": "repository dotnet slash c-sharp lang which is where language discussion goes",
    "start": "929300",
    "end": "934740"
  },
  {
    "text": "on so to the extent that you want to participate offer feedback discuss",
    "start": "934740",
    "end": "940769"
  },
  {
    "text": "issues in there is if we look at the issues list there are two really",
    "start": "940769",
    "end": "946980"
  },
  {
    "text": "important or actually three really important labels to look at if we look",
    "start": "946980",
    "end": "951990"
  },
  {
    "text": "at the discussion label some of those will be the language design meeting notes comment threads on any of those",
    "start": "951990",
    "end": "958589"
  },
  {
    "text": "discussing different features to to stay really close with is there is a proposal",
    "start": "958589",
    "end": "966269"
  },
  {
    "text": "label so these are the list of features that are being proposed for language",
    "start": "966269",
    "end": "971399"
  },
  {
    "text": "design we got a page where it's 22 different open language design proposals",
    "start": "971399",
    "end": "979130"
  },
  {
    "text": "another one that's reasonably close to that label is the proposal champion any",
    "start": "979130",
    "end": "986100"
  },
  {
    "text": "of these talk about exactly what will be done and how things work so there will",
    "start": "986100",
    "end": "992520"
  },
  {
    "text": "be this template at the top proposals added and you can see this one none of these things have been done yet",
    "start": "992520",
    "end": "997740"
  },
  {
    "text": "proposed so proposals been added discussed in the language design meeting decision in the language design meeting",
    "start": "997740",
    "end": "1004660"
  },
  {
    "text": "finalized so it's done rejected or inactive if it's going to be worked on",
    "start": "1004660",
    "end": "1010700"
  },
  {
    "text": "is its fact for any of the proposal champion this issue will track how that",
    "start": "1010700",
    "end": "1016910"
  },
  {
    "text": "features moving through the language design process",
    "start": "1016910",
    "end": "1021490"
  },
  {
    "text": "many of those issues are going to have fairly good lengthy discussions on them participate as a feature you care about",
    "start": "1026049",
    "end": "1033548"
  },
  {
    "text": "if it's something you think would make the language look really bad weigh in with your feedback so where are we right",
    "start": "1033549",
    "end": "1046269"
  },
  {
    "start": "1045000",
    "end": "1059000"
  },
  {
    "text": "now and where are we going okay c-sharp 7.0 it's there use it who's been using c-sharp 7 oh features come on people",
    "start": "1046269",
    "end": "1054879"
  },
  {
    "text": "let's go there's more fun stuff there see c-sharp 7.1 our first point release",
    "start": "1054879",
    "end": "1063659"
  },
  {
    "start": "1059000",
    "end": "1080000"
  },
  {
    "text": "tiny features really small don't be afraid of them it's okay it's there it",
    "start": "1063659",
    "end": "1069279"
  },
  {
    "text": "shipped dropped Monday I'm gonna be demoing each of those features or at least see the ones that we really have",
    "start": "1069279",
    "end": "1075389"
  },
  {
    "text": "code to work with seven point to the",
    "start": "1075389",
    "end": "1082029"
  },
  {
    "start": "1080000",
    "end": "1137000"
  },
  {
    "text": "next point release the features that are targeted for that release from that c-sharp lang repo safe efficient",
    "start": "1082029",
    "end": "1089379"
  },
  {
    "text": "low-level code think of now that unity allows us to write cross-platform stuff",
    "start": "1089379",
    "end": "1095529"
  },
  {
    "text": "with this game engine game developers really want to get some performance so",
    "start": "1095529",
    "end": "1100960"
  },
  {
    "text": "do some of the people doing ml or artificial intelligence or other related things we want to be able to write",
    "start": "1100960",
    "end": "1108059"
  },
  {
    "text": "low-level very efficient code but because we're C sharp we want to write",
    "start": "1108059",
    "end": "1115090"
  },
  {
    "text": "it safely don't want to have to drop down into C or C++ and go tracing void",
    "start": "1115090",
    "end": "1120580"
  },
  {
    "text": "star star pointers everywhere we've been there we've done that it hurts it's not",
    "start": "1120580",
    "end": "1125799"
  },
  {
    "text": "fun c-sharp 7.3 maybe next steps for",
    "start": "1125799",
    "end": "1132489"
  },
  {
    "text": "pattern matching now we're starting to get question marks you look once again at that c-sharp language repo if I go",
    "start": "1132489",
    "end": "1139450"
  },
  {
    "start": "1137000",
    "end": "1168000"
  },
  {
    "text": "back to the issues page and I click on",
    "start": "1139450",
    "end": "1144850"
  },
  {
    "text": "the milestones you can see things that have been set out here 7.2 Candidate",
    "start": "1144850",
    "end": "1151629"
  },
  {
    "text": "7 dot X so this might be another seven-point release some other major",
    "start": "1151629",
    "end": "1159279"
  },
  {
    "text": "release some other minor release a tow candidates and so on c-sharp 8.0 major",
    "start": "1159279",
    "end": "1172570"
  },
  {
    "start": "1168000",
    "end": "1220000"
  },
  {
    "text": "features so here's a theme in this if you look at the point releases the",
    "start": "1172570",
    "end": "1177790"
  },
  {
    "text": "features that are going to be added are going to be small things that can be shipped incrementally major release is",
    "start": "1177790",
    "end": "1187000"
  },
  {
    "text": "going to be c-sharp 8.0 at this point in time the thinking is that the standard",
    "start": "1187000",
    "end": "1193120"
  },
  {
    "text": "and the language specification is only going to be formally updated on the major point releases okay or the major",
    "start": "1193120",
    "end": "1201690"
  },
  {
    "text": "releases seven eight and so on rather than go through the standards work for each point release doesn't mean the",
    "start": "1201690",
    "end": "1209830"
  },
  {
    "text": "features won't respect just means we're not going to go through the whole formal review and standards process so let's",
    "start": "1209830",
    "end": "1217810"
  },
  {
    "text": "slide over here let's start looking at stuff that we can do with c-sharp 7.1 so",
    "start": "1217810",
    "end": "1224380"
  },
  {
    "start": "1220000",
    "end": "1245000"
  },
  {
    "text": "a lot of these kind of just tweak on some things added in c-sharp seven so",
    "start": "1224380",
    "end": "1230500"
  },
  {
    "text": "what this application does as part of our group working with Doc's we have a",
    "start": "1230500",
    "end": "1235930"
  },
  {
    "text": "meeting once a week where we triage any issues any plans work for the documentation website god-willing with",
    "start": "1235930",
    "end": "1244810"
  },
  {
    "text": "our network what this app does is it goes out uses octo kit it's a dinette",
    "start": "1244810",
    "end": "1250180"
  },
  {
    "text": "core console application grabs all our open issues run several different linked",
    "start": "1250180",
    "end": "1255730"
  },
  {
    "text": "queries and gives me the list of things we do and this is basically the agenda for our meeting issues that have no",
    "start": "1255730",
    "end": "1262540"
  },
  {
    "text": "milestones that means we haven't looked at them yet we're going to look at them figure out where they go we have milestones based",
    "start": "1262540",
    "end": "1269290"
  },
  {
    "text": "on the month these are the things that we intend to get done in August we're probably a little bit behind there we do",
    "start": "1269290",
    "end": "1279280"
  },
  {
    "text": "things by quarter as well to have a kind of a longer timeline of what kind of things we want to do each quarter and",
    "start": "1279280",
    "end": "1286110"
  },
  {
    "text": "then we have the backlog bucket where we look at thankfully there's no part",
    "start": "1286110",
    "end": "1293179"
  },
  {
    "text": "zero backlog issues which is good probably one and pry to and then",
    "start": "1293179",
    "end": "1300889"
  },
  {
    "text": "anything that wasn't prioritized often those are going to be things that might be discussions where we're not ready to start on yet so that's what the",
    "start": "1300889",
    "end": "1309169"
  },
  {
    "text": "application does right now it's written in C sharp 7 has using most of those",
    "start": "1309169",
    "end": "1318440"
  },
  {
    "start": "1310000",
    "end": "1506000"
  },
  {
    "text": "features and what I'm going to do I'm going to now convert this slowly into",
    "start": "1318440",
    "end": "1323859"
  },
  {
    "text": "adding some of those 7.1 features one of the first ones is C sharp 7.1 supports",
    "start": "1323859",
    "end": "1332179"
  },
  {
    "text": "async main methods for council applications because async in a console",
    "start": "1332179",
    "end": "1338239"
  },
  {
    "text": "app is hard the correct way to do it is what I have written here where I'm calling this private static async task",
    "start": "1338239",
    "end": "1346039"
  },
  {
    "text": "returning method I get it's a waiter and I look at its result okay it's because",
    "start": "1346039",
    "end": "1354379"
  },
  {
    "text": "those are won't block the threads so I avoid deadlocks and it forces waiting",
    "start": "1354379",
    "end": "1361809"
  },
  {
    "text": "code we've seen in the wild and we've seen this question answered on Stack Overflow several times is if I remove",
    "start": "1361809",
    "end": "1369229"
  },
  {
    "text": "this and I run this app I get a warning",
    "start": "1369229",
    "end": "1374830"
  },
  {
    "text": "and my program exited how come I started",
    "start": "1374830",
    "end": "1383719"
  },
  {
    "text": "an async task I didn't wait for that task to finish my program exited so I",
    "start": "1383719",
    "end": "1391460"
  },
  {
    "text": "never executed the stuff that happens after it comes back you can also get into deadlock situations with this if",
    "start": "1391460",
    "end": "1398419"
  },
  {
    "text": "you're doing something where you block waiting for another task to finish that task tries to send a notification back",
    "start": "1398419",
    "end": "1405279"
  },
  {
    "text": "into the first context you can end up with deadlock so this is something",
    "start": "1405279",
    "end": "1410479"
  },
  {
    "text": "simple the programmers can get wrong so let's make a nice simple feature to make it easier to use so I'm just gonna",
    "start": "1410479",
    "end": "1418330"
  },
  {
    "text": "remove a few lines right here okay so now I have this static void main",
    "start": "1418330",
    "end": "1426530"
  },
  {
    "text": "which thankfully won't work and I'll get to that in a second but if you notice I now have red squiggles on any place",
    "start": "1426530",
    "end": "1434180"
  },
  {
    "text": "where I'm awaiting because I have not turned on the 7.1 features and the error",
    "start": "1434180",
    "end": "1440930"
  },
  {
    "text": "message here says that the weight operator can only be used within an",
    "start": "1440930",
    "end": "1450830"
  },
  {
    "text": "async method so on and so forth we all know that okay fine so I'm gonna go static async void I feel bad just doing",
    "start": "1450830",
    "end": "1459860"
  },
  {
    "text": "that but I got rid of all a fair amount of my squiggles so we'll go ahead and do a build and right now it says program",
    "start": "1459860",
    "end": "1467630"
  },
  {
    "text": "does not contain a static main suitable for an entry point okay so now I've just",
    "start": "1467630",
    "end": "1474890"
  },
  {
    "text": "compiled this thing but there's no main that fits in 7.0 that would be true so",
    "start": "1474890",
    "end": "1481160"
  },
  {
    "text": "I'm going to change this to tasks I feel",
    "start": "1481160",
    "end": "1486560"
  },
  {
    "text": "better already just returning a task from an async method rather than async void and now if we try to do a build I",
    "start": "1486560",
    "end": "1492800"
  },
  {
    "text": "still get an error it now says program does not contain a valid entry point",
    "start": "1492800",
    "end": "1499100"
  },
  {
    "text": "okay well now we're gonna have to do a little bit of actual work so right click",
    "start": "1499100",
    "end": "1505010"
  },
  {
    "text": "on our project node go down to the build tab click advanced now here's one",
    "start": "1505010",
    "end": "1514100"
  },
  {
    "start": "1506000",
    "end": "2047000"
  },
  {
    "text": "important thing as we go into this world of point releases with nothing in your CS proj the default for this language",
    "start": "1514100",
    "end": "1522710"
  },
  {
    "text": "version setting is going to be the latest major language version in this",
    "start": "1522710",
    "end": "1528020"
  },
  {
    "text": "case C sharp 7.0 so if nothing's in a CS proj the latest major version of the",
    "start": "1528020",
    "end": "1534230"
  },
  {
    "text": "compiler on the machine you've installed is the version that will get used to turn on the seizure of 7.1 features I",
    "start": "1534230",
    "end": "1541360"
  },
  {
    "text": "can either set it to latest which uses the latest c-sharp minor' version on",
    "start": "1541360",
    "end": "1549350"
  },
  {
    "text": "this machine or i could specifically set it to c-sharp 7.1",
    "start": "1549350",
    "end": "1555080"
  },
  {
    "text": "say okay another new feature that came out in Visual Studio is I can now edit",
    "start": "1555080",
    "end": "1561259"
  },
  {
    "text": "the CS proj we loading and unloading and all that nonsense what got added was",
    "start": "1561259",
    "end": "1567860"
  },
  {
    "text": "this one property group condition C language version latest cool",
    "start": "1567860",
    "end": "1573639"
  },
  {
    "text": "other versions I can set would be anything all the way back to c-sharp one",
    "start": "1573639",
    "end": "1582039"
  },
  {
    "text": "and any specific version that the compiler on this machine supports one",
    "start": "1582039",
    "end": "1588049"
  },
  {
    "text": "two three four five six seven and 7.1",
    "start": "1588049",
    "end": "1593528"
  },
  {
    "text": "now the reason for this decision and now my squiggle should go away the reason",
    "start": "1594609",
    "end": "1603019"
  },
  {
    "text": "for this decision is if we think of CI bills we think of building things in the cloud and containers or any of any of",
    "start": "1603019",
    "end": "1609259"
  },
  {
    "text": "these new thing new workloads that we're trying to do we would like to be able to",
    "start": "1609259",
    "end": "1614269"
  },
  {
    "text": "separate delivering the tools and installing new tools with the version of",
    "start": "1614269",
    "end": "1620480"
  },
  {
    "text": "the language I want to use for a particular project so now if I'm on my machine where I have 7.1 if I load an",
    "start": "1620480",
    "end": "1627830"
  },
  {
    "text": "open source project and they're still on seven oh I will get compiler errors if I",
    "start": "1627830",
    "end": "1633200"
  },
  {
    "text": "accidentally sneak in a seven point one feature nice building the cloud the same",
    "start": "1633200",
    "end": "1639769"
  },
  {
    "text": "kind of thing from working with a particular customer that's still on six I can specifically set that project for",
    "start": "1639769",
    "end": "1648499"
  },
  {
    "text": "that compiler version and in my environment even when I have the newer bits installed the compiler will",
    "start": "1648499",
    "end": "1656029"
  },
  {
    "text": "validate to that version of the language okay separating the between the two it",
    "start": "1656029",
    "end": "1662899"
  },
  {
    "text": "is just a setting in CS proj well I'm using Visual Studio to show the IDE this will work on core projects on the Mac",
    "start": "1662899",
    "end": "1669440"
  },
  {
    "text": "just modify it in an editor just like we do with anything else one last bit on",
    "start": "1669440",
    "end": "1677659"
  },
  {
    "text": "this feature that I do like is if I change this now to a sync void which is",
    "start": "1677659",
    "end": "1683179"
  },
  {
    "text": "bad we won't do that I do a build I will now once again get an air",
    "start": "1683179",
    "end": "1688400"
  },
  {
    "text": "that I don't have a suitable entry point the main method now must return either a",
    "start": "1688400",
    "end": "1694970"
  },
  {
    "text": "task or if your program returns an error code an integral error code it can also",
    "start": "1694970",
    "end": "1702980"
  },
  {
    "text": "return tasks event so you can return",
    "start": "1702980",
    "end": "1708260"
  },
  {
    "text": "void int synchronous main task task event asynchronous main anything else",
    "start": "1708260",
    "end": "1716030"
  },
  {
    "text": "will not compile and effectively what the compiler generates is just like the",
    "start": "1716030",
    "end": "1722840"
  },
  {
    "text": "code that I started with if I go all the way back to there it will generate a hidden main entry point right that you",
    "start": "1722840",
    "end": "1730940"
  },
  {
    "text": "know main dot get a waiter so on and so forth so that's our first fun feature",
    "start": "1730940",
    "end": "1739600"
  },
  {
    "text": "async made you that first bracket there",
    "start": "1739600",
    "end": "1746210"
  },
  {
    "text": "we go okay second interesting fun feature is a",
    "start": "1746210",
    "end": "1754519"
  },
  {
    "text": "couple worthwhile changes involving involving the default keyword if I take",
    "start": "1754519",
    "end": "1766450"
  },
  {
    "text": "this method right here which displays the issues where I'm going to do a few other changes to it as well if you see",
    "start": "1767139",
    "end": "1773360"
  },
  {
    "text": "the second parameter there I've got a header string I want to print out if I",
    "start": "1773360",
    "end": "1778580"
  },
  {
    "text": "don't specify anything I say it's default of string basically the null",
    "start": "1778580",
    "end": "1783620"
  },
  {
    "text": "string seems redundant to give the name",
    "start": "1783620",
    "end": "1789529"
  },
  {
    "text": "twice so let's just remove that and it just equals default in places where",
    "start": "1789529",
    "end": "1795830"
  },
  {
    "text": "default of T the type can be inferred the string header equals default works",
    "start": "1795830",
    "end": "1801649"
  },
  {
    "text": "very nicely one place where I really really like this feature is it for a few",
    "start": "1801649",
    "end": "1810470"
  },
  {
    "text": "very interesting reasons we can't assign var to a lambda or we can't declare",
    "start": "1810470",
    "end": "1815870"
  },
  {
    "text": "lambdas using the VAR keyword if I were to try to change this from func of issue",
    "start": "1815870",
    "end": "1822289"
  },
  {
    "text": "bool to save our okay at that point it",
    "start": "1822289",
    "end": "1828500"
  },
  {
    "text": "doesn't compile because it can't figure out what it is because lambdas don't have type information so it's I don't know what to",
    "start": "1828500",
    "end": "1835010"
  },
  {
    "text": "make it well if I have not declared it",
    "start": "1835010",
    "end": "1840529"
  },
  {
    "text": "yet if I were to separate it out for whatever reason and I wanted to",
    "start": "1840529",
    "end": "1847700"
  },
  {
    "text": "initialize this you know this whole",
    "start": "1847700",
    "end": "1853070"
  },
  {
    "text": "default of issue func",
    "start": "1853070",
    "end": "1858470"
  },
  {
    "text": "of issue comma bool that's kind of an",
    "start": "1858470",
    "end": "1864320"
  },
  {
    "text": "ugly expression I've got the type on both sides doesn't really add anything",
    "start": "1864320",
    "end": "1870190"
  },
  {
    "text": "so we'll just say equals default cool so",
    "start": "1877419",
    "end": "1884259"
  },
  {
    "text": "in any place where the type can be inferred default keyword can be used",
    "start": "1884259",
    "end": "1889659"
  },
  {
    "text": "instead of default expression with the type inside it",
    "start": "1889659",
    "end": "1895079"
  },
  {
    "text": "the third real interesting little tidbit that we're trying to add is that we've added is if I go back down to this",
    "start": "1897149",
    "end": "1904450"
  },
  {
    "text": "display issues you can see I'm passing in that that lambda I'm now going to run",
    "start": "1904450",
    "end": "1911229"
  },
  {
    "text": "a link query and a my select I'm creating a tuple which is a new 7.0",
    "start": "1911229",
    "end": "1917109"
  },
  {
    "text": "feature so this tuple where you see I have number : issued that number title :",
    "start": "1917109",
    "end": "1923889"
  },
  {
    "text": "issued that title so on that's just the tuple think of that is a very very",
    "start": "1923889",
    "end": "1929229"
  },
  {
    "text": "lightweight type that carries across bits of data it has three fields named",
    "start": "1929229",
    "end": "1935619"
  },
  {
    "text": "number title and author which are number",
    "start": "1935619",
    "end": "1943450"
  },
  {
    "text": "and two strings integer and two strings now for what the compiler does with",
    "start": "1943450",
    "end": "1951190"
  },
  {
    "text": "tuples that is magic is with tuples in general the field names the type that's",
    "start": "1951190",
    "end": "1957519"
  },
  {
    "text": "used system value tuple has field names item 1 item 2 item 3 and so on and so",
    "start": "1957519",
    "end": "1963729"
  },
  {
    "text": "forth those names don't have a lot of semantics by specifying them here I've",
    "start": "1963729",
    "end": "1971619"
  },
  {
    "text": "given them those names in c-sharp 7 L and C sharp 7 point 1 if the field name",
    "start": "1971619",
    "end": "1982239"
  },
  {
    "text": "can be inferred I can remove that declaration and this will give me field",
    "start": "1982239",
    "end": "1987879"
  },
  {
    "text": "names number title and author what you can see that I'm using here when I print",
    "start": "1987879",
    "end": "1993399"
  },
  {
    "text": "the message out okay if I switch back to c-sharp 7.0 the field names would be",
    "start": "1993399",
    "end": "2000690"
  },
  {
    "text": "item 1 item 2 an author so again a small little feature designed to mean that we",
    "start": "2000690",
    "end": "2008039"
  },
  {
    "text": "have a little bit less code to work with a little bit less have to type especially repeated things",
    "start": "2008039",
    "end": "2014560"
  },
  {
    "text": "to have to type question on that and",
    "start": "2014560",
    "end": "2025690"
  },
  {
    "text": "that shipped this is it all those features shipped earlier this week makes",
    "start": "2025690",
    "end": "2033850"
  },
  {
    "text": "you sheriffs having a little bit nicer okay questions I need those those are",
    "start": "2033850",
    "end": "2042490"
  },
  {
    "text": "the major features that came out in c-sharp 7.1 the big key that we want to talk to you on any of those is in seven",
    "start": "2042490",
    "end": "2049388"
  },
  {
    "start": "2047000",
    "end": "2068000"
  },
  {
    "text": "point one tiny point release it will be turned off by default you will have to",
    "start": "2049389",
    "end": "2054730"
  },
  {
    "text": "turn it on by adding that Lang inside your CS proj file and it will be on only",
    "start": "2054730",
    "end": "2063820"
  },
  {
    "text": "for those projects so now let's look at",
    "start": "2063820",
    "end": "2069398"
  },
  {
    "text": "some of the bigger ideas that are coming for or planned for c-sharp eight at this",
    "start": "2069399",
    "end": "2075398"
  },
  {
    "text": "point what we have to say is none of these may happen they're all in discussion",
    "start": "2075399",
    "end": "2081040"
  },
  {
    "text": "these look like likely candidates but this is not saying that these are the",
    "start": "2081040",
    "end": "2087820"
  },
  {
    "text": "features the first one is async streams and disposables they deal with two",
    "start": "2087820",
    "end": "2094570"
  },
  {
    "text": "particularly thorny problems than asynchronous programming the first one",
    "start": "2094570",
    "end": "2101200"
  },
  {
    "text": "here is that if I am grabbing things out of a database get people async I now",
    "start": "2101200",
    "end": "2107410"
  },
  {
    "text": "that this async innumerable I can await it do things with those people inside",
    "start": "2107410",
    "end": "2115420"
  },
  {
    "text": "that loop it may actually do another oh wait as it reads further in the stream",
    "start": "2115420",
    "end": "2120820"
  },
  {
    "text": "right if we think of either reading from a file I might read the first thousand bytes and I want to have to await for",
    "start": "2120820",
    "end": "2128200"
  },
  {
    "text": "more network traffic or more file reading to get more things out this is kind of ugly code in current async I",
    "start": "2128200",
    "end": "2135070"
  },
  {
    "text": "have to do a sync read a block fill a block deal with it make another async call and so on and so forth generate",
    "start": "2135070",
    "end": "2140650"
  },
  {
    "text": "some very thorny stuff so async stream hopefully we can be able to await each",
    "start": "2140650",
    "end": "2148270"
  },
  {
    "text": "element if they're handed to us or await blocks of elements async disposable this",
    "start": "2148270",
    "end": "2157359"
  },
  {
    "start": "2154000",
    "end": "2242000"
  },
  {
    "text": "is the other really interesting problem if I write an async method if I write a",
    "start": "2157359",
    "end": "2162790"
  },
  {
    "text": "task returning method that does async work and sometimes in that method I",
    "start": "2162790",
    "end": "2169680"
  },
  {
    "text": "allocate a disposable resource when do you dispose of it it can be easy to",
    "start": "2169680",
    "end": "2175990"
  },
  {
    "text": "write code that accidentally disposes of the resource before you're done using it because you've hit in a weight he",
    "start": "2175990",
    "end": "2182650"
  },
  {
    "text": "returned from a method yeah exit a using block so if stuff gets disposed you wait",
    "start": "2182650",
    "end": "2188200"
  },
  {
    "text": "for task finishes you go back into the method and you're using a disposed that's bad that's not good",
    "start": "2188200",
    "end": "2194770"
  },
  {
    "text": "so let's introduce this is ink disposable interface so now I'm going to",
    "start": "2194770",
    "end": "2203260"
  },
  {
    "text": "await doing something I'm going to do a bunch of stuff inside there I can await anywhere inside this that I want and it",
    "start": "2203260",
    "end": "2210760"
  },
  {
    "text": "will only get disposed when I'm done with the block that I'm awaiting on the outside that using a wait adding that",
    "start": "2210760",
    "end": "2217300"
  },
  {
    "text": "new keyword there which says don't dispose of this thing until all of this stuff is done right simplifying that",
    "start": "2217300",
    "end": "2227980"
  },
  {
    "text": "resource management for async programming okay I'm seeing some very",
    "start": "2227980",
    "end": "2233920"
  },
  {
    "text": "thoughtful looks here people have had this book haven't you yeah hopefully",
    "start": "2233920",
    "end": "2239530"
  },
  {
    "text": "making that easier the idea of extension",
    "start": "2239530",
    "end": "2246010"
  },
  {
    "start": "2242000",
    "end": "2369000"
  },
  {
    "text": "everything so let's look at what this",
    "start": "2246010",
    "end": "2251440"
  },
  {
    "text": "code is trying to do and this is code written as a demo of what the language features would be we believe that the",
    "start": "2251440",
    "end": "2258820"
  },
  {
    "text": "typical use of this kind of construct is going to be where we're not adding that",
    "start": "2258820",
    "end": "2264820"
  },
  {
    "text": "many methods here I might use typical normal inheritance but where you might",
    "start": "2264820",
    "end": "2270280"
  },
  {
    "text": "just want one or two things to add to a class to make a new class so here's the",
    "start": "2270280",
    "end": "2275710"
  },
  {
    "text": "idea behind what is designed here is we have a person and we are going to extend it by making",
    "start": "2275710",
    "end": "2281410"
  },
  {
    "text": "an enrollee in a class an enrollee has",
    "start": "2281410",
    "end": "2286690"
  },
  {
    "text": "one new property which is the supervisor which is a professor but other than that",
    "start": "2286690",
    "end": "2294070"
  },
  {
    "text": "it has all the behavior of a person okay and we're going to do it all with",
    "start": "2294070",
    "end": "2300430"
  },
  {
    "text": "extension everything's so first we're going to make a static field just normal",
    "start": "2300430",
    "end": "2305740"
  },
  {
    "text": "static field we know how to do that person professor we've got a dictionary people - professors now let's look at",
    "start": "2305740",
    "end": "2313210"
  },
  {
    "text": "the instance constructor this is an enrollee constructor but notice that it",
    "start": "2313210",
    "end": "2318700"
  },
  {
    "text": "says person but it's got an extra field on it it's going to call one of the person constructors and then it's going",
    "start": "2318700",
    "end": "2325840"
  },
  {
    "text": "to also call an instance method to enroll and set the supervisor so if you",
    "start": "2325840",
    "end": "2330970"
  },
  {
    "text": "look at enroll this is a static instance method that is an extension you see we have the extension keyword on the class",
    "start": "2330970",
    "end": "2336820"
  },
  {
    "text": "definition enroll we're going to use that static field to set this extra",
    "start": "2336820",
    "end": "2343990"
  },
  {
    "text": "property we can retrieve that property from that static collection and we have",
    "start": "2343990",
    "end": "2349300"
  },
  {
    "text": "the static property to get all of the students which is every single one of the enrollees so we've built this whole",
    "start": "2349300",
    "end": "2356890"
  },
  {
    "text": "new class not by building a class but just by using extension methods because",
    "start": "2356890",
    "end": "2362770"
  },
  {
    "text": "we can now have more extension everything this one is my favorite one",
    "start": "2362770",
    "end": "2372810"
  },
  {
    "start": "2369000",
    "end": "2460000"
  },
  {
    "text": "quick show of hands who's does anything with Jason type data some of you are",
    "start": "2372810",
    "end": "2381070"
  },
  {
    "text": "lying because I didn't see every hand up here's the idea as we move more and more",
    "start": "2381070",
    "end": "2386410"
  },
  {
    "text": "toward this world where programs are broken up in microservices I'm sorry I did have to use that buzzword or broken",
    "start": "2386410",
    "end": "2393400"
  },
  {
    "text": "into other different services that talk to each other we move further away from",
    "start": "2393400",
    "end": "2398440"
  },
  {
    "text": "that idea of object-oriented oriented programming we said objects have",
    "start": "2398440",
    "end": "2404550"
  },
  {
    "text": "properties and all the methods and transforms that work on them and they travel together as",
    "start": "2404550",
    "end": "2410570"
  },
  {
    "text": "checked that is a quite work in this service-oriented transferring data back",
    "start": "2410570",
    "end": "2415670"
  },
  {
    "text": "and forth between machines mode so well so now we separate data and the",
    "start": "2415670",
    "end": "2421730"
  },
  {
    "text": "functions that work on them for some at some of these end points so we find",
    "start": "2421730",
    "end": "2427340"
  },
  {
    "text": "ourselves building types that don't have any behavior they simply store data one",
    "start": "2427340",
    "end": "2435230"
  },
  {
    "text": "way they simply store data we've used two poles we can make simple classes getters and setters or just get instance",
    "start": "2435230",
    "end": "2442550"
  },
  {
    "text": "and so on and so forth let's make it really easy that declares a person and",
    "start": "2442550",
    "end": "2449030"
  },
  {
    "text": "it is a person that has two fields a first and a last to believe their names",
    "start": "2449030",
    "end": "2454420"
  },
  {
    "text": "what the compiler will generate for this class definition is something that looks",
    "start": "2454420",
    "end": "2461300"
  },
  {
    "start": "2460000",
    "end": "2590000"
  },
  {
    "text": "like this okay so we built a class person the implements I equatable person",
    "start": "2461300",
    "end": "2467240"
  },
  {
    "text": "we've got to public get only fields we've got a constructor that sets those",
    "start": "2467240",
    "end": "2474440"
  },
  {
    "text": "get only fields we've got deconstruction",
    "start": "2474440",
    "end": "2480260"
  },
  {
    "text": "so we can pull out just the first or the last or deconstruct it into a tuple they're deconstructed into variables and",
    "start": "2480260",
    "end": "2486710"
  },
  {
    "text": "so on and so forth we've got it equals we've got an override of equals and we've got an override of get hash code",
    "start": "2486710",
    "end": "2494650"
  },
  {
    "text": "where we're going to wave our hands and say it's this great hash function that the compiler will generate for us that",
    "start": "2494650",
    "end": "2500000"
  },
  {
    "text": "we don't have to ok and that's the idea of what we will build for a record type",
    "start": "2500000",
    "end": "2506560"
  },
  {
    "text": "you get to type this and you get that all of that sound like a big win",
    "start": "2506560",
    "end": "2517390"
  },
  {
    "text": "what's that sounds like f-sharp one may",
    "start": "2517390",
    "end": "2522430"
  },
  {
    "text": "think that the F sharp and C sharp teams do talk to each other about things like that and I think here here gets to one",
    "start": "2522430",
    "end": "2528910"
  },
  {
    "text": "of the the comments that I made earlier that I think is really important about how this is going to evolve F sharp is a",
    "start": "2528910",
    "end": "2535870"
  },
  {
    "text": "functional language that works in dotnet so it can kind of use some",
    "start": "2535870",
    "end": "2541570"
  },
  {
    "text": "object-oriented stuff now and then to deal with the framework but F sharps syntax and the way you program at F",
    "start": "2541570",
    "end": "2549520"
  },
  {
    "text": "sharp is primarily functional c-sharp sits at the other end of the table it's",
    "start": "2549520",
    "end": "2555430"
  },
  {
    "text": "primarily object-oriented that's how it you know started that's what it was in the beginning it does something things",
    "start": "2555430",
    "end": "2563590"
  },
  {
    "text": "in a functional way now in that link being a good example reactive extensions things like record types pattern",
    "start": "2563590",
    "end": "2570460"
  },
  {
    "text": "matching are starting to come into the language but it probably will never be the functional language F sharp is F",
    "start": "2570460",
    "end": "2577720"
  },
  {
    "text": "sharp is great as a functional language",
    "start": "2577720",
    "end": "2582150"
  },
  {
    "text": "but I still hate creating all those types to do D serialization stuff so this is cool okay so open for business a",
    "start": "2584460",
    "end": "2593080"
  },
  {
    "start": "2590000",
    "end": "2603000"
  },
  {
    "text": "little bit little final sections on some of the things that we're doing in terms of where we're going with different",
    "start": "2593080",
    "end": "2598480"
  },
  {
    "text": "directions that was a look at C sharp eight and so on now you get to a lot of",
    "start": "2598480",
    "end": "2605320"
  },
  {
    "start": "2603000",
    "end": "2910000"
  },
  {
    "text": "the resources and things that are coming up language strategy we have a couple",
    "start": "2605320",
    "end": "2611560"
  },
  {
    "text": "different blogs there on what is the dotnet framework or got net manage",
    "start": "2611560",
    "end": "2616840"
  },
  {
    "text": "language teams strategy in terms of where does F sharp go where does C sharp",
    "start": "2616840",
    "end": "2623650"
  },
  {
    "text": "go where does vb.net go all three have strong futures F sharp is used it's a",
    "start": "2623650",
    "end": "2631510"
  },
  {
    "text": "very functional language has some very key constituencies in analytical",
    "start": "2631510",
    "end": "2639520"
  },
  {
    "text": "programming be a financial other areas c-sharp is meant to be a very powerful",
    "start": "2639520",
    "end": "2645390"
  },
  {
    "text": "general-purpose language vb.net very powerful general-purpose language",
    "start": "2645390",
    "end": "2651670"
  },
  {
    "text": "a little bit different community more built on productivity so on see sharp",
    "start": "2651670",
    "end": "2658210"
  },
  {
    "text": "design as I mentioned there's the github.com dotnet c-sharp language blogs",
    "start": "2658210",
    "end": "2663400"
  },
  {
    "text": "that MSDN this was from March new features in c-sharp seven it's also now",
    "start": "2663400",
    "end": "2668710"
  },
  {
    "text": "covered under Docs our Docs repos github",
    "start": "2668710",
    "end": "2674230"
  },
  {
    "text": "calm dotnet slash Doc's ask us questions participate there as well help us build",
    "start": "2674230",
    "end": "2679780"
  },
  {
    "text": "things that make it easier for you to be more productive a couple I have grayed",
    "start": "2679780",
    "end": "2685000"
  },
  {
    "text": "out because they're not turned on just yet but they're going to go live shortly",
    "start": "2685000",
    "end": "2690480"
  },
  {
    "text": "one thing we've learned when we started the docs project the repo wasn't you",
    "start": "2690480",
    "end": "2698799"
  },
  {
    "text": "know really large repo it was the stuff that we'd written when we added all the different versions of all the different",
    "start": "2698799",
    "end": "2704710"
  },
  {
    "text": "dotnet frameworks clone can take a while clone can take a long while on the",
    "start": "2704710",
    "end": "2710319"
  },
  {
    "text": "network like here at the hotel so we're going to split out the API Doc's into a different reference the Roslyn API Doc's",
    "start": "2710319",
    "end": "2718030"
  },
  {
    "text": "we're starting to tour with the idea of how do we manage Doc's for all the different nougat packages so we're",
    "start": "2718030",
    "end": "2723309"
  },
  {
    "text": "probably going to end up with more repos there as well and then of course github commnets left Roslyn that's where the",
    "start": "2723309",
    "end": "2730990"
  },
  {
    "text": "compiler lives some of the things to see from the future there this is one of",
    "start": "2730990",
    "end": "2742380"
  },
  {
    "text": "exploring what c-sharp does internally if you were to make this a little bit larger see there we go is that a",
    "start": "2742380",
    "end": "2753059"
  },
  {
    "text": "reasonably large good a real sharp dot",
    "start": "2753059",
    "end": "2759609"
  },
  {
    "text": "io allows you to type any code or copy or paste any code in the left-hand side",
    "start": "2759609",
    "end": "2765099"
  },
  {
    "text": "of that window and in the right-hand side using Rozlyn you can take a look at",
    "start": "2765099",
    "end": "2770410"
  },
  {
    "text": "what it will generate and c-sharp and VB what the JIT will do for actual assembly",
    "start": "2770410",
    "end": "2776490"
  },
  {
    "text": "you can see the syntax tree and you can see it for either debug or release",
    "start": "2776490",
    "end": "2781990"
  },
  {
    "text": "builds so if you're ever very curious about what different constructs set up this is one good way to do it",
    "start": "2781990",
    "end": "2790540"
  },
  {
    "text": "final thing I want to show that in terms of putting these together I took this",
    "start": "2790630",
    "end": "2796730"
  },
  {
    "text": "demo app and know this is fairly small this is what 80 lines of code if I go",
    "start": "2796730",
    "end": "2804470"
  },
  {
    "text": "back into my property page here first",
    "start": "2804470",
    "end": "2809630"
  },
  {
    "text": "I'm just going to turn this back to see sharp seven and point out a couple of the errors there and there we go",
    "start": "2809630",
    "end": "2822290"
  },
  {
    "text": "come on dry start getting all our squiggles for any place that I added one",
    "start": "2822290",
    "end": "2829099"
  },
  {
    "text": "of the new features the one I did want to point out is here where I have the",
    "start": "2829099",
    "end": "2834680"
  },
  {
    "text": "tuples the field names now if you notice number and title no longer have semantic",
    "start": "2834680",
    "end": "2840890"
  },
  {
    "text": "names the only way I could refer to those is as item 1 or item 2 don't know",
    "start": "2840890",
    "end": "2854270"
  },
  {
    "text": "why I'm not seeing those as",
    "start": "2854270",
    "end": "2857470"
  },
  {
    "text": "there we go but in terms of how far",
    "start": "2861130",
    "end": "2867310"
  },
  {
    "text": "c-sharp has evolved just because they",
    "start": "2867310",
    "end": "2872440"
  },
  {
    "text": "can be everyone so it's fun to see if I went back to C sharp one there's almost",
    "start": "2872440",
    "end": "2883150"
  },
  {
    "text": "not a line in here that does it make you some something that's been added other than our using statements any of my",
    "start": "2883150",
    "end": "2890380"
  },
  {
    "text": "awaits any of the link stuff any of the",
    "start": "2890380",
    "end": "2895630"
  },
  {
    "text": "generics it's been a pretty long fun trip so far var it's all I think we just",
    "start": "2895630",
    "end": "2903460"
  },
  {
    "text": "grown quite a bit over the years",
    "start": "2903460",
    "end": "2906630"
  },
  {
    "start": "2910000",
    "end": "3268000"
  },
  {
    "text": "fine a little bit and reach me on twitter at bill was published in march",
    "start": "2910290",
    "end": "2921370"
  },
  {
    "text": "so is certainly available the publication date for more effective C sharp is in August so if it is not",
    "start": "2921370",
    "end": "2927940"
  },
  {
    "text": "available today it will be very very shortly effective CCRI reorganized all",
    "start": "2927940",
    "end": "2933310"
  },
  {
    "text": "100 items around different themes release wise effective c-sharp covers up",
    "start": "2933310",
    "end": "2941260"
  },
  {
    "text": "through six more effective covers one through seven on different themes the",
    "start": "2941260",
    "end": "2947800"
  },
  {
    "text": "places you'll find me as I will be it and ask me anything this afternoon at 130 or 140 with Bart to Schmitt and",
    "start": "2947800",
    "end": "2954610"
  },
  {
    "text": "Richard Campbell which is always fun any other questions on anything too sharp related yes",
    "start": "2954610",
    "end": "2962880"
  },
  {
    "text": "yes why",
    "start": "2972440",
    "end": "2976480"
  },
  {
    "text": "I believe that is primarily based on how CS proj parses it I think a typical use",
    "start": "2983520",
    "end": "2991950"
  },
  {
    "text": "is going to be to set it for all configurations because I agree I can't",
    "start": "2991950",
    "end": "2997140"
  },
  {
    "text": "come up with any reason why you would do it right right but even when you do that",
    "start": "2997140",
    "end": "3004460"
  },
  {
    "text": "now it writes the property group twice or for as many different configurations you have I think that is based on how",
    "start": "3004460",
    "end": "3013310"
  },
  {
    "text": "it's set up I am gonna it might be just the visuals let's try this let's this may be a",
    "start": "3013310",
    "end": "3024650"
  },
  {
    "text": "visual studio thing let's just try this let's just change this to latest because",
    "start": "3024650",
    "end": "3033500"
  },
  {
    "text": "I'm pretty sure I've done this on core but I put it in there so it's just in the property group for everything if I",
    "start": "3033500",
    "end": "3039710"
  },
  {
    "text": "look here I'm not getting any errors yeah that's a Visual Studio IDE thing so",
    "start": "3039710",
    "end": "3048200"
  },
  {
    "text": "I don't have to put it there that's just what the IDE g-i that that's what Visual Studio is IDE",
    "start": "3048200",
    "end": "3053450"
  },
  {
    "text": "editor generates so that was a great",
    "start": "3053450",
    "end": "3060560"
  },
  {
    "text": "question you can put it there I will also I think I kind of glossed over this that flag and cos project runs on Mac",
    "start": "3060560",
    "end": "3067910"
  },
  {
    "text": "and Linux and if you're on Mac future studio for Mac obeys this flag but",
    "start": "3067910",
    "end": "3072980"
  },
  {
    "text": "doesn't have a UI to set it any other questions yes",
    "start": "3072980",
    "end": "3080830"
  },
  {
    "text": "right I missed the last part desert",
    "start": "3085210",
    "end": "3094780"
  },
  {
    "text": "yes yes I will give you the order of the",
    "start": "3096520",
    "end": "3107090"
  },
  {
    "text": "tasks so if you look here once again the",
    "start": "3107090",
    "end": "3114380"
  },
  {
    "text": "labels here give a hint to a couple things if you notice one and two are labeled ISO one and ISO - those were",
    "start": "3114380",
    "end": "3121610"
  },
  {
    "text": "official ISO standards that effort elapsed for a while and for a period of",
    "start": "3121610",
    "end": "3129650"
  },
  {
    "text": "time the ACMA c-sharp standardization committee has been working on taking",
    "start": "3129650",
    "end": "3136130"
  },
  {
    "text": "everything from three four and five applying it to ISO - and getting a",
    "start": "3136130",
    "end": "3143530"
  },
  {
    "text": "standard for c-sharp five okay that work",
    "start": "3143530",
    "end": "3149390"
  },
  {
    "text": "was taking priority over moving beyond draft 4 6 and 7 because understandably",
    "start": "3149390",
    "end": "3156380"
  },
  {
    "text": "Mads a few other people who work on the spec are in the Standards Committee as well which I am a member of by the way",
    "start": "3156380",
    "end": "3163700"
  },
  {
    "text": "so the C sharp five official ACMA standard is getting very very close so",
    "start": "3163700",
    "end": "3170600"
  },
  {
    "text": "the order of things that we are going to do is send out the five standard take",
    "start": "3170600",
    "end": "3177230"
  },
  {
    "text": "the six draft which was based on the Microsoft version of c-sharp 5 find the",
    "start": "3177230",
    "end": "3182840"
  },
  {
    "text": "changes to that apply it to the standard 5 and make standard 6 and so on and so",
    "start": "3182840",
    "end": "3188330"
  },
  {
    "text": "forth so the reality is we do have some spec debt to pay off so beyond getting 5",
    "start": "3188330",
    "end": "3197240"
  },
  {
    "text": "Dunton which is soon I don't have a date for the other things some of it will",
    "start": "3197240",
    "end": "3206390"
  },
  {
    "text": "probably happen in the open you know in the c-sharp lang repo one of the things",
    "start": "3206390",
    "end": "3212300"
  },
  {
    "text": "that is I thought there we go in the c-sharp",
    "start": "3212300",
    "end": "3218820"
  },
  {
    "text": "language repo one of the directories there is yes I am hey wait there we go",
    "start": "3218820",
    "end": "3230300"
  },
  {
    "text": "in the c-sharp language repo one of the folders is for the spec and that is the",
    "start": "3230300",
    "end": "3237060"
  },
  {
    "text": "C sharp six draft we are pulling that in the dock so it's also published on docks",
    "start": "3237060",
    "end": "3242790"
  },
  {
    "text": "we'll be doing the same with every update that comes out okay any other",
    "start": "3242790",
    "end": "3250440"
  },
  {
    "text": "questions thank you very much for your time hope you enjoyed it and I'll be",
    "start": "3250440",
    "end": "3256680"
  },
  {
    "text": "around for lunch if you want to chat and upstairs after lunch thank you [Applause]",
    "start": "3256680",
    "end": "3266050"
  }
]