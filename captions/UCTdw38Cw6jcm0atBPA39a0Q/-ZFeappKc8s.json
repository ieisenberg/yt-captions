[
  {
    "text": "all right uh looks like we're on time welcome everyone um sorry for the um",
    "start": "4759",
    "end": "12320"
  },
  {
    "text": "standing rows in the back um hope you'll find it worthwhile to uh not spare your",
    "start": "12320",
    "end": "20160"
  },
  {
    "text": "legs uh so we're going to spend um most of this hour chatting about um",
    "start": "20160",
    "end": "27160"
  },
  {
    "text": "experience of bridging Two Worlds and uh I'm going to share some case studies I'm",
    "start": "27160",
    "end": "32680"
  },
  {
    "text": "going to ask some questions I by Design I sort of want um dialogue here so feel",
    "start": "32680",
    "end": "41480"
  },
  {
    "text": "free to engage uh feel free to interrupt ask questions uh I do plan to not finish",
    "start": "41480",
    "end": "48079"
  },
  {
    "text": "exactly on time so I have plenty of uh time for um Q&A and interaction but even",
    "start": "48079",
    "end": "55000"
  },
  {
    "text": "if we don't have enough time or maybe some of you don't want to be on record here",
    "start": "55000",
    "end": "60480"
  },
  {
    "text": "uh do find me after the session find me on the hallways I'll be here till tomorrow morning so don't be shy reach",
    "start": "60480",
    "end": "68400"
  },
  {
    "text": "out I'm I'm very interested in um being um sharing experience here so I very",
    "start": "68400",
    "end": "75200"
  },
  {
    "text": "much look forward not to prescribe or tell but to learn as well so do come up",
    "start": "75200",
    "end": "82479"
  },
  {
    "text": "to me share your experience um if you have a different opinions and so on uh",
    "start": "82479",
    "end": "88400"
  },
  {
    "text": "so Al also I've been told to stay kind of close to the podium because the room has a weird",
    "start": "88400",
    "end": "95079"
  },
  {
    "text": "shape so I'll try not to move if I go too far it just remind me I hide behind the",
    "start": "95079",
    "end": "100880"
  },
  {
    "text": "podium all right so these are some of the places where I've done some damage in the past or",
    "start": "100880",
    "end": "107040"
  },
  {
    "text": "currently um if they look familiar I'm sorry uh and because I didn't want to",
    "start": "107040",
    "end": "114960"
  },
  {
    "text": "disappoint uh sorry Robert uh",
    "start": "114960",
    "end": "120560"
  },
  {
    "text": "uh couldn't help myself so Robert how many of you have been in",
    "start": "121119",
    "end": "126759"
  },
  {
    "text": "Robert's session yesterday oh excellent that's more than half of the room excellent uh good so I",
    "start": "126759",
    "end": "135040"
  },
  {
    "text": "think that's a perfect segue into what I'm going to talk about today um so uh",
    "start": "135040",
    "end": "141200"
  },
  {
    "text": "I'm not it's not like um we're taking opposit points of view or anything like",
    "start": "141200",
    "end": "146840"
  },
  {
    "text": "that it's I I very much see this as a continuation of the discussion we had",
    "start": "146840",
    "end": "152680"
  },
  {
    "text": "yesterday and I think we had pretty pretty nice uh dialogue nice questions",
    "start": "152680",
    "end": "157879"
  },
  {
    "text": "so this is very much a continuations and I'm going to try and hope to succeed to answer some of those questions uh that",
    "start": "157879",
    "end": "165400"
  },
  {
    "text": "Robert had on the slides yesterday for the people on recording or",
    "start": "165400",
    "end": "172920"
  },
  {
    "text": "who weren't yesterday in the room I strongly encourage to find the video",
    "start": "172920",
    "end": "178120"
  },
  {
    "text": "recording and watch it all right so disclaimer I'm not here to",
    "start": "178120",
    "end": "186440"
  },
  {
    "text": "convert anyone to rust um don't want to start any language words um I'm not",
    "start": "186440",
    "end": "192560"
  },
  {
    "text": "going to talk about syntax or uh bike shed various design decisions in the",
    "start": "192560",
    "end": "198640"
  },
  {
    "text": "language I'm not going to try to compare programming languages not going to try to sell you on to anything not going to",
    "start": "198640",
    "end": "205480"
  },
  {
    "text": "sell you any Library any design philosophy I'm going to not going to tell you to rewrite your stuff in Rust",
    "start": "205480",
    "end": "212080"
  },
  {
    "text": "that's for sure and I think the main point here is that and we've seen this uh yesterday in",
    "start": "212080",
    "end": "220560"
  },
  {
    "text": "in uh in Robert's talk as well the idea is that we need to learn to coexist this",
    "start": "220560",
    "end": "227560"
  },
  {
    "text": "is not a zero sum game for us to succeed uh C++ and C uh don't have to fail and",
    "start": "227560",
    "end": "235640"
  },
  {
    "text": "for a very long long time we're going to have to learn how to build stuff where",
    "start": "235640",
    "end": "241480"
  },
  {
    "text": "rust and c and C++ coexist and I'm going to spend a significant part of today's",
    "start": "241480",
    "end": "248159"
  },
  {
    "text": "presentation talking about ways to improve and Harden CN C++ code and ways",
    "start": "248159",
    "end": "255120"
  },
  {
    "text": "in which we can successfully Bridge these worlds and how we can develop software products in this hybrid uh",
    "start": "255120",
    "end": "263440"
  },
  {
    "text": "environments hybrid Pro projects and how we can manage these transitions I'm going to share some case studies from",
    "start": "263440",
    "end": "269759"
  },
  {
    "text": "from Microsoft uh and from other companies as",
    "start": "269759",
    "end": "274440"
  },
  {
    "text": "well I'm going to intentionally not use the remote so I don't go away okay so this talk is U not about programming per",
    "start": "276360",
    "end": "284320"
  },
  {
    "text": "se U I don't even think I have a snippet of code so if that's what you're looking",
    "start": "284320",
    "end": "290800"
  },
  {
    "text": "for please make room for the standing people so so it's it's not about left",
    "start": "290800",
    "end": "298240"
  },
  {
    "text": "and right compare transform your code that kind of thing it's more about engineering not programming per se it's",
    "start": "298240",
    "end": "305840"
  },
  {
    "text": "about how we evolve the systems the challenges we face when we set out to do these um ports when we want to write uh",
    "start": "305840",
    "end": "314520"
  },
  {
    "text": "new components in Rust when we want to Port existing stuff to rust how we interrupt and challenges along the way",
    "start": "314520",
    "end": "322479"
  },
  {
    "text": "by the way I for the people who don't know the flamingo book there's a link right there and uh also as a",
    "start": "322479",
    "end": "330400"
  },
  {
    "text": "worthwhile mention all my slides have lots of links in them so when you do get",
    "start": "330400",
    "end": "335759"
  },
  {
    "text": "the slides afterwards if you're curious just click around plenty of",
    "start": "335759",
    "end": "341840"
  },
  {
    "text": "links all right so I'm going to talk about uh challenges of bootstrapping a",
    "start": "342319",
    "end": "349280"
  },
  {
    "text": "new team bootstrapping a project finding the right combination of skills um in",
    "start": "349280",
    "end": "355440"
  },
  {
    "text": "terms of uh systems experience programming rust EXP experience uh",
    "start": "355440",
    "end": "361080"
  },
  {
    "text": "service development experience and so on uh and challenges of onboarding new",
    "start": "361080",
    "end": "367479"
  },
  {
    "text": "people and hiring and all sorts of interesting things and I I'm very much interested to hear uh stuff from from",
    "start": "367479",
    "end": "374120"
  },
  {
    "text": "your companies from your projects uh if you can share uh so I'm trying to sort of Set uh some expectations um tell you",
    "start": "374120",
    "end": "382599"
  },
  {
    "text": "about some misconceptions that we've seen and maybe tackle some occasional",
    "start": "382599",
    "end": "387960"
  },
  {
    "text": "myths around these things so rough path towards these things is uh",
    "start": "387960",
    "end": "395400"
  },
  {
    "text": "why would teams want to be interested in Rust uh some of the challenges on the",
    "start": "395400",
    "end": "401479"
  },
  {
    "text": "path to rust in terms of learning bootstrapping Engineering Systems that's a big deal uh so again going back to the",
    "start": "401479",
    "end": "408960"
  },
  {
    "text": "thing that it's not just about writing the rust code Engineering Systems is a big part of the",
    "start": "408960",
    "end": "414879"
  },
  {
    "text": "equation uh of course interrup not living in isolation bubbles",
    "start": "414879",
    "end": "420240"
  },
  {
    "text": "rarely you will find situations where you have perfectly isolated systems that you can not interact with outside things",
    "start": "420240",
    "end": "428199"
  },
  {
    "text": "and all sorts of problems and some wins all right but first why are we",
    "start": "428199",
    "end": "437319"
  },
  {
    "text": "interested in these kinds of things CU it's not like we're just bored and oh let's learn a new thing and let's put",
    "start": "437319",
    "end": "444240"
  },
  {
    "text": "everything upside down and figure out how to deal with it there are reasons uh and the I would",
    "start": "444240",
    "end": "452319"
  },
  {
    "text": "say the reasons mainly fall into three",
    "start": "452319",
    "end": "457680"
  },
  {
    "text": "categories I would say first one would be security",
    "start": "457680",
    "end": "464240"
  },
  {
    "text": "vulnerabilities stuff that goes Kaboom and you need to deal with that and you",
    "start": "464240",
    "end": "469400"
  },
  {
    "text": "want and they're costly and you want to reduce these incidents you want to have",
    "start": "469400",
    "end": "474560"
  },
  {
    "text": "quick ways of mitigating them and try to eliminate as as many as of these",
    "start": "474560",
    "end": "482039"
  },
  {
    "text": "headaches as you can right then there's the um let's call it",
    "start": "482039",
    "end": "489440"
  },
  {
    "text": "I don't know government care institutions that come up with various things to push us over the edge uh all",
    "start": "489440",
    "end": "497520"
  },
  {
    "text": "sorts of regulations all sorts of mandates all sorts of prescribed things",
    "start": "497520",
    "end": "504120"
  },
  {
    "text": "to lock us down or to push us to improve however you want to see",
    "start": "504120",
    "end": "510759"
  },
  {
    "text": "uh and security initiatives right we've talked about this for a couple of years",
    "start": "510759",
    "end": "516640"
  },
  {
    "text": "now and the third one maybe less obvious to uh everyone is uh cutting down costs",
    "start": "516640",
    "end": "526519"
  },
  {
    "text": "and I I want to stress here because maybe for this audience",
    "start": "526519",
    "end": "534959"
  },
  {
    "text": "uh primarily interest in rust or rust things mainly comes from uh C C++",
    "start": "534959",
    "end": "544399"
  },
  {
    "text": "systems programming Universe uh pursuing or being interested in Rusty",
    "start": "544399",
    "end": "550839"
  },
  {
    "text": "things but there's a different audience and that is uh people who are doing um",
    "start": "550839",
    "end": "557839"
  },
  {
    "text": "service development writing microservices in whatever language for Microsoft cases mostly CP and net and",
    "start": "557839",
    "end": "566079"
  },
  {
    "text": "there's a substantial class of projects and people interested in that audience",
    "start": "566079",
    "end": "572160"
  },
  {
    "text": "in Rust not for the security benefits or getting rid of some government agency",
    "start": "572160",
    "end": "578079"
  },
  {
    "text": "because those systems are by far and large secure but for costs because they see",
    "start": "578079",
    "end": "584920"
  },
  {
    "text": "rust as a cost-saving opportunity in reducing operating cost in data",
    "start": "584920",
    "end": "591320"
  },
  {
    "text": "centers okay so I think we've established that C++ is",
    "start": "593160",
    "end": "599600"
  },
  {
    "text": "inherently unsafe and there's not much we can do about it notice the asteris",
    "start": "599600",
    "end": "605279"
  },
  {
    "text": "there I have lots to say about the asterisk uh but we've known this for for",
    "start": "605279",
    "end": "611600"
  },
  {
    "text": "many many years again from Microsoft point of view",
    "start": "611600",
    "end": "617680"
  },
  {
    "text": "again very skewed point of view but the one I care about",
    "start": "617680",
    "end": "623480"
  },
  {
    "text": "uh C CV is and I would say memory vulnerability memory safety issues are",
    "start": "623480",
    "end": "630360"
  },
  {
    "text": "still the dominant cause of CVS in in Microsoft roughly they've always been",
    "start": "630360",
    "end": "637839"
  },
  {
    "text": "between 60 70 something per of all uh CVS and if you want to see like a more",
    "start": "637839",
    "end": "645560"
  },
  {
    "text": "detailed breakdown I don't know if that's quite readable uh so um you have",
    "start": "645560",
    "end": "651639"
  },
  {
    "text": "hip corruption he hip outof bounds reads uh stack corruption type confusion",
    "start": "651639",
    "end": "658399"
  },
  {
    "text": "uninitialized stuff and new s the free roughly the the breakdown sorry if",
    "start": "658399",
    "end": "664160"
  },
  {
    "text": "the font is too small for the people in the back all right so let's think about some",
    "start": "664160",
    "end": "671200"
  },
  {
    "text": "of these um classes in how we evaluate them with regards to the systems",
    "start": "671200",
    "end": "678079"
  },
  {
    "text": "languages that we use at Microsoft uh so we have object Life Time",
    "start": "678079",
    "end": "684079"
  },
  {
    "text": "type safety bound safety and uninitialized safety sort of picking the",
    "start": "684079",
    "end": "689399"
  },
  {
    "text": "most obvious contenders here",
    "start": "689399",
    "end": "695240"
  },
  {
    "text": "so I'm not going to try to go through all the rows columns in the table here",
    "start": "695240",
    "end": "700839"
  },
  {
    "text": "just going to leave them a bit to uh for you to to glance we can sort of see the appeal of",
    "start": "700839",
    "end": "711920"
  },
  {
    "text": "the rust promise in terms of checking these boxes more readily than we can",
    "start": "711920",
    "end": "718519"
  },
  {
    "text": "foresee and and C++ that doesn't mean we can't check some of these boxes for C and C++ but we",
    "start": "718519",
    "end": "726680"
  },
  {
    "text": "need extra effort extra tools extra pain and for some of those it's impossible to",
    "start": "726680",
    "end": "732760"
  },
  {
    "text": "prove uh and improve the situation",
    "start": "732760",
    "end": "737959"
  },
  {
    "text": "significantly so in terms of if we go further down into bug",
    "start": "739560",
    "end": "747959"
  },
  {
    "text": "classes and potential mitigations there's a couple of them",
    "start": "747959",
    "end": "753320"
  },
  {
    "text": "that have deterministic or probabilistic uh mitigations and again you can safely",
    "start": "753320",
    "end": "761160"
  },
  {
    "text": "ignore the percentages there uh I just took the data from um in internal",
    "start": "761160",
    "end": "766839"
  },
  {
    "text": "presentation but we can mostly solved",
    "start": "766839",
    "end": "772320"
  },
  {
    "text": "uh some of these for C++ with extra tuning and better Cod gen",
    "start": "772320",
    "end": "779760"
  },
  {
    "text": "but there's some of them that are inherently impossible to to get any",
    "start": "779760",
    "end": "786680"
  },
  {
    "text": "confidence about we can say that we can take a box and we did the best effort",
    "start": "786680",
    "end": "792760"
  },
  {
    "text": "but we can't get any significant confidence that we address those issues",
    "start": "792760",
    "end": "798079"
  },
  {
    "text": "and statistically we see improvements so when we deploy these hardening",
    "start": "798079",
    "end": "804199"
  },
  {
    "text": "techniques these extra gates to make sure that we improve the those the",
    "start": "804199",
    "end": "811800"
  },
  {
    "text": "security of of this native code that we we ship we see statistical improvements",
    "start": "811800",
    "end": "817000"
  },
  {
    "text": "but the improvements are not significant or proportional to the efforts involved in getting",
    "start": "817000",
    "end": "825279"
  },
  {
    "text": "there so some of the ongoing efforts um making step changes in our um sdl",
    "start": "825880",
    "end": "833920"
  },
  {
    "text": "operations to make further Investments to to meet the needs of of our services",
    "start": "833920",
    "end": "840600"
  },
  {
    "text": "um and new stuff that's coming up completing deployment of code ql to",
    "start": "840600",
    "end": "847680"
  },
  {
    "text": "make sure we gain more quality control and more gates in our CI and of course",
    "start": "847680",
    "end": "853639"
  },
  {
    "text": "we feedback learnings from operating these things at scale so we actually um",
    "start": "853639",
    "end": "860399"
  },
  {
    "text": "do a lot of learning by just looking at huge amounts of data in in the",
    "start": "860399",
    "end": "866639"
  },
  {
    "text": "world we continue to invest in hardening C and C++ code like I was saying um it",
    "start": "866639",
    "end": "872279"
  },
  {
    "text": "would be foolish to say oh this is a lost game Let's WR write everything in Rust problems will be automatically",
    "start": "872279",
    "end": "878360"
  },
  {
    "text": "solved uh we are working and investing a lot in hardening existing CN C++ because",
    "start": "878360",
    "end": "885959"
  },
  {
    "text": "it's a lot of code but at the same time we are standardizing on Rust and other memory",
    "start": "885959",
    "end": "892720"
  },
  {
    "text": "safe languages where we can so we diligently choose where we invest in",
    "start": "892720",
    "end": "899279"
  },
  {
    "text": "either ports or writing new stuff in Rust of course we want to support the",
    "start": "899279",
    "end": "905759"
  },
  {
    "text": "the whole ecosystem so we do contribute to the rust Foundation um we do build",
    "start": "905759",
    "end": "911560"
  },
  {
    "text": "developer tools and we started heavily investing in developer tooling for rust so that we help the lives of um internal",
    "start": "911560",
    "end": "919720"
  },
  {
    "text": "developers who are on this journey and uh in in the community at large so we're",
    "start": "919720",
    "end": "927079"
  },
  {
    "text": "attacking these problems I would say on multiple fronts we're improving the",
    "start": "927079",
    "end": "932600"
  },
  {
    "text": "situation of existing stuff and we're creating this Bridges and starting",
    "start": "932600",
    "end": "938920"
  },
  {
    "text": "rolling out better and better tooling and libraries to help these projects that are seeking",
    "start": "938920",
    "end": "946880"
  },
  {
    "text": "refuge and rust again I'm going to spend some time",
    "start": "946880",
    "end": "954399"
  },
  {
    "text": "now on improving the situation for C++ uh",
    "start": "954399",
    "end": "959639"
  },
  {
    "text": "NC so C++ will never be 100% safe language let's get that out of the way",
    "start": "959639",
    "end": "967440"
  },
  {
    "text": "right now when and when I say safe I mean all these kinds of safeties there's many types of safety not just the ones",
    "start": "967440",
    "end": "974680"
  },
  {
    "text": "that I showed in in those uh stats and",
    "start": "974680",
    "end": "979399"
  },
  {
    "text": "charts but it can be much much safer with proper tooling and some",
    "start": "979920",
    "end": "986240"
  },
  {
    "text": "discipline so short term we're investing in tactical efforts to eliminate the attack surfaces as as much",
    "start": "986240",
    "end": "993720"
  },
  {
    "text": "as possible reduce them uh we try to block classes of exploit techniques by",
    "start": "993720",
    "end": "1000399"
  },
  {
    "text": "smart tooling or Cod genen uh we do a lot of static analysis for potential",
    "start": "1000399",
    "end": "1006759"
  },
  {
    "text": "vulnerabilities so try to proactively find these things and of course lots of",
    "start": "1006759",
    "end": "1011800"
  },
  {
    "text": "dynamic analysis and fing and we've deployed over the years last 20 so years",
    "start": "1011800",
    "end": "1018959"
  },
  {
    "text": "lots of tools and compilers things and components and",
    "start": "1018959",
    "end": "1025120"
  },
  {
    "text": "other binary stuff post compilation and all sorts of acronym soups that some of",
    "start": "1025120",
    "end": "1031438"
  },
  {
    "text": "them I don't even know what they mean uh they all do their part um to improve the",
    "start": "1031439",
    "end": "1039120"
  },
  {
    "text": "situation long term there's more Strategic investment going on uh on our side in sort of a",
    "start": "1040079",
    "end": "1047760"
  },
  {
    "text": "combination of sof sofware and Hardware mitigations to detect and eliminate these uh safety issues memory safety",
    "start": "1047760",
    "end": "1053799"
  },
  {
    "text": "issues things like um in guaranteed initializations pool zeroing um cast",
    "start": "1053799",
    "end": "1061320"
  },
  {
    "text": "guards memory tagging architectures which can have a bigger",
    "start": "1061320",
    "end": "1066520"
  },
  {
    "text": "broader impact long term but these are significant efforts that are not immediately uh rolling",
    "start": "1066520",
    "end": "1073559"
  },
  {
    "text": "out for example one strategic one would on on memory tagging would be to help",
    "start": "1073559",
    "end": "1079799"
  },
  {
    "text": "developers catch these bugs uh signal stuff like hard with support for Hardware uh a",
    "start": "1079799",
    "end": "1086640"
  },
  {
    "text": "sanitizer uh to be able to find these things and prevent them to being shipped",
    "start": "1086640",
    "end": "1092400"
  },
  {
    "text": "to customers or being exploitable if they are shipped so there's a non-trivial CPU a",
    "start": "1092400",
    "end": "1099440"
  },
  {
    "text": "memory overhead here but it's good enough in some scenarios to be enabled",
    "start": "1099440",
    "end": "1106360"
  },
  {
    "text": "by default in production and I say those being good enough for for these",
    "start": "1106360",
    "end": "1114240"
  },
  {
    "text": "most of these scenarios I would say is a good indicator that people will actually turn it",
    "start": "1114240",
    "end": "1119600"
  },
  {
    "text": "on um Google to deploy this to Android soon uh Apple is expected to deploy",
    "start": "1119600",
    "end": "1125360"
  },
  {
    "text": "these kinds of things um in in their devices as well and we are working with",
    "start": "1125360",
    "end": "1131440"
  },
  {
    "text": "silicon Partners in designing these kinds of uh memory tagging architectures",
    "start": "1131440",
    "end": "1136640"
  },
  {
    "text": "um that scale a vast range from the smallest things to our our big uh Azure",
    "start": "1136640",
    "end": "1143039"
  },
  {
    "text": "servers and the goal is to by default make this an on path in Windows",
    "start": "1143039",
    "end": "1153080"
  },
  {
    "text": "that we're going to sort of not opt in into security but rather have it on by",
    "start": "1153080",
    "end": "1159720"
  },
  {
    "text": "default and of course the plan is to secure the cloud as well",
    "start": "1159720",
    "end": "1165840"
  },
  {
    "text": "right all right so we've seen a lot of I think for the past 3 years a lot of",
    "start": "1166159",
    "end": "1173159"
  },
  {
    "text": "talks on all sorts of takes and responses to",
    "start": "1173159",
    "end": "1179360"
  },
  {
    "text": "security and these um mandates um that",
    "start": "1179360",
    "end": "1184679"
  },
  {
    "text": "we have to deal with somehow um ranging",
    "start": "1184679",
    "end": "1190440"
  },
  {
    "text": "from acknowledging the issue identifying common pain",
    "start": "1190440",
    "end": "1196960"
  },
  {
    "text": "points identifying potential Solutions and strategies and good practices uh",
    "start": "1196960",
    "end": "1202240"
  },
  {
    "text": "talking about U undefined behavior and uh Unbound unbounded undefined behavior",
    "start": "1202240",
    "end": "1209400"
  },
  {
    "text": "and so on um so it's not exactly a new thing here just highlighted a couple of",
    "start": "1209400",
    "end": "1215120"
  },
  {
    "text": "uh talks that I liked on this topic I need to address UB uh because uh",
    "start": "1215120",
    "end": "1223200"
  },
  {
    "text": "people tend to obsess just about um memory safety but sort of forget the",
    "start": "1223200",
    "end": "1230919"
  },
  {
    "text": "elephant in the room here so I I wouldn't say C++ can be totally safe",
    "start": "1230919",
    "end": "1238280"
  },
  {
    "text": "until we could get rid of all of UB and this is unrealistic we can't eliminate",
    "start": "1238280",
    "end": "1243600"
  },
  {
    "text": "all UB in in the language for good reasons but at a minimum unbounding",
    "start": "1243600",
    "end": "1249640"
  },
  {
    "text": "undefined behaviors should be eliminated so we will never be able to",
    "start": "1249640",
    "end": "1256080"
  },
  {
    "text": "make guarantees about safe of C++ but we can improve the situation",
    "start": "1256080",
    "end": "1262039"
  },
  {
    "text": "significantly uh including on the UB space so but when doing these kinds of",
    "start": "1262039",
    "end": "1269440"
  },
  {
    "text": "things we're is going to be faced with tradeoffs and I would",
    "start": "1269440",
    "end": "1276000"
  },
  {
    "text": "say for Tool developers there's trade-offs to be made between",
    "start": "1276000",
    "end": "1281640"
  },
  {
    "text": "performance compatibility all sorts of API guarantees",
    "start": "1281640",
    "end": "1287360"
  },
  {
    "text": "and and for users as well users of the languages and libraries and tools",
    "start": "1287360",
    "end": "1293840"
  },
  {
    "text": "because as soon as you have these under switches either own by default or not",
    "start": "1293840",
    "end": "1301640"
  },
  {
    "text": "people are going to mess with the switches because they're there and there's I would say",
    "start": "1301640",
    "end": "1308440"
  },
  {
    "text": "the there's a bigger shift here that needs to happen uh not just being there",
    "start": "1308440",
    "end": "1313960"
  },
  {
    "text": "in terms of language design Library design better tooling better Cod and so on but also sort in terms of priorities",
    "start": "1313960",
    "end": "1323400"
  },
  {
    "text": "for projects and a mind shift for the people driving those projects so it's",
    "start": "1323400",
    "end": "1329320"
  },
  {
    "text": "it's a long journey but we'll have to do it anecdotally or not um I do encourage",
    "start": "1329320",
    "end": "1336400"
  },
  {
    "text": "you to read uh this blog post by corantin Jabo uh on on safety tou is",
    "start": "1336400",
    "end": "1342600"
  },
  {
    "text": "couple of these uh issues I would say it's a very well written piece um funny",
    "start": "1342600",
    "end": "1347880"
  },
  {
    "text": "and insightful uh so if you're interested in sort of exploring some of these topics um give",
    "start": "1347880",
    "end": "1353880"
  },
  {
    "text": "it a read um I think the full link is right there you can even do it now if you're",
    "start": "1353880",
    "end": "1360200"
  },
  {
    "text": "bored it's much funnier uh anyway so on Lifetime safety there's multiple",
    "start": "1360200",
    "end": "1366760"
  },
  {
    "text": "approaches that have been around for for years now from garbage collection to",
    "start": "1366760",
    "end": "1373679"
  },
  {
    "text": "dynamic memory analysis uh statically enforcing all sorts of rules",
    "start": "1373679",
    "end": "1379159"
  },
  {
    "text": "um either by the compiler or the language we have opinionated things here",
    "start": "1379159",
    "end": "1385320"
  },
  {
    "text": "like the borrow Checker rust or the circle um experimental compiler that",
    "start": "1385320",
    "end": "1391360"
  },
  {
    "text": "tries to bring uh this Barrow Checker philosophy to C++ but again my claim is",
    "start": "1391360",
    "end": "1397760"
  },
  {
    "text": "that that's no longer C++ so uh but uh if you're curious I",
    "start": "1397760",
    "end": "1403960"
  },
  {
    "text": "strongly encourage you to actually check that out to find out what can be done uh with these kinds of uh designs in",
    "start": "1403960",
    "end": "1412919"
  },
  {
    "text": "C++ um maybe c+++ I don't um anyway so mutable value",
    "start": "1412919",
    "end": "1420360"
  },
  {
    "text": "semantics another strategy to address some of these things U of course no direct",
    "start": "1420360",
    "end": "1425440"
  },
  {
    "text": "mutation uh all these uh pure functional languages um less so with Traction in in",
    "start": "1425440",
    "end": "1433760"
  },
  {
    "text": "Industry uh and tooling of course things like clanked ID as we see all sorts of",
    "start": "1433760",
    "end": "1439679"
  },
  {
    "text": "commercial analyzers out there that can find all sorts of interesting",
    "start": "1439679",
    "end": "1445520"
  },
  {
    "text": "things uh from Good Stuff through false positives and making you work through",
    "start": "1445520",
    "end": "1453760"
  },
  {
    "text": "piles and piles of things uh and configurations but they're all helping",
    "start": "1453760",
    "end": "1459039"
  },
  {
    "text": "um I'm I'm not I'm I'm not saying they are Breeze to",
    "start": "1459039",
    "end": "1465279"
  },
  {
    "text": "use um and some of them are not even cheap but are definitely worth it so I",
    "start": "1465279",
    "end": "1471120"
  },
  {
    "text": "would say it's it's worth spending time figuring out how they work how to",
    "start": "1471120",
    "end": "1476799"
  },
  {
    "text": "properly configure them mine through the big pile of output from them and figure",
    "start": "1476799",
    "end": "1482399"
  },
  {
    "text": "out uh what you can fix what you can address and what you need to maybe suppress or temporarily defer definitely",
    "start": "1482399",
    "end": "1489360"
  },
  {
    "text": "worth it I would even go as far as saying you need more than one because",
    "start": "1489360",
    "end": "1494720"
  },
  {
    "text": "they're each have their strength and weaknesses so overlap might be might be best so give",
    "start": "1494720",
    "end": "1502720"
  },
  {
    "text": "them a try and of course the one of the cornerstones of the rust design",
    "start": "1502720",
    "end": "1509679"
  },
  {
    "text": "philosophy in terms of type system uh that is um how we deal with references",
    "start": "1509679",
    "end": "1516120"
  },
  {
    "text": "and aliasing um either multiple immutable references to the same piece of data or a unique mutable references",
    "start": "1516120",
    "end": "1525000"
  },
  {
    "text": "reference to that thing not any of of any other",
    "start": "1525000",
    "end": "1530960"
  },
  {
    "text": "combination so I'd say with when it comes to C++ an existing code uh we need",
    "start": "1530960",
    "end": "1536440"
  },
  {
    "text": "to shift from that always a to always almost always analyze so we need",
    "start": "1536440",
    "end": "1544840"
  },
  {
    "text": "to build this habit of job is not done when the stuff compiles job is done when",
    "start": "1544840",
    "end": "1552399"
  },
  {
    "text": "we did proper analysis when we did fuzzing when it we enabled all the",
    "start": "1552399",
    "end": "1558320"
  },
  {
    "text": "possible Gates we could in our CI pipelines to make sure that we have more confidence in the",
    "start": "1558320",
    "end": "1564679"
  },
  {
    "text": "stuff that we're going to ship so uh we need to get out of this mindset that",
    "start": "1564679",
    "end": "1569840"
  },
  {
    "text": "we're done because it compiles it's not enough even if we have",
    "start": "1569840",
    "end": "1576080"
  },
  {
    "text": "even in compilers many interesting new switches and functionalities uh to",
    "start": "1576080",
    "end": "1581480"
  },
  {
    "text": "harden the the the code so there's all sorts of security Technologies um",
    "start": "1581480",
    "end": "1588480"
  },
  {
    "text": "I've copied some of these acronym soups here uh we've had some of these for for",
    "start": "1588480",
    "end": "1593559"
  },
  {
    "text": "years uh with successful uh usage in in projects just want to raise awareness uh",
    "start": "1593559",
    "end": "1600000"
  },
  {
    "text": "if you're if you're not familiar with these kinds of acronyms get familiar with",
    "start": "1600000",
    "end": "1605240"
  },
  {
    "text": "them um and most of this stuff is not msvc specific they're available in all",
    "start": "1605240",
    "end": "1611760"
  },
  {
    "text": "major uh compilers similar stuff uh new thing how many people have",
    "start": "1611760",
    "end": "1619000"
  },
  {
    "text": "heard of these custom attributes I literally see one hand just",
    "start": "1619000",
    "end": "1624279"
  },
  {
    "text": "one hand okay I'm so happy I put this slide in okay so do check them out these",
    "start": "1624279",
    "end": "1630399"
  },
  {
    "text": "are relatively new developments let's say year maybe if I remember correctly I",
    "start": "1630399",
    "end": "1636399"
  },
  {
    "text": "pasted some links there again for your uh investigation pleasure uh so these",
    "start": "1636399",
    "end": "1642279"
  },
  {
    "text": "are lifetime annotations that you can use now in C++ no need to for any fancy",
    "start": "1642279",
    "end": "1647799"
  },
  {
    "text": "new comp compiler uh they work now uh so for situations where control flow",
    "start": "1647799",
    "end": "1654840"
  },
  {
    "text": "analysis and regular tool inference cannot prove",
    "start": "1654840",
    "end": "1661000"
  },
  {
    "text": "more or cannot help more you can actually help the tools you can",
    "start": "1661000",
    "end": "1666600"
  },
  {
    "text": "explicitly decorate and express your intent with regards to how references",
    "start": "1666600",
    "end": "1672000"
  },
  {
    "text": "and lifetimes are bound it's not rust lifetime notations",
    "start": "1672000",
    "end": "1678760"
  },
  {
    "text": "but you can express intent you can be more deliberate and you can help tooling pinpoint real issues and not just flood",
    "start": "1678760",
    "end": "1686760"
  },
  {
    "text": "you with false positives I do recommend this presentation from uh last year's cppb",
    "start": "1686760",
    "end": "1694440"
  },
  {
    "text": "con uh by far one of my favorite presentations from from last year's",
    "start": "1694440",
    "end": "1699600"
  },
  {
    "text": "Edition not just because I'm friends with Gabor but highly encourage you to to watch this uh he goes into lot of",
    "start": "1699600",
    "end": "1708840"
  },
  {
    "text": "detail about current landscape avilability how these kinds of things",
    "start": "1708840",
    "end": "1713919"
  },
  {
    "text": "work not just in msvc so strongly encourage you to check out this talk if",
    "start": "1713919",
    "end": "1719399"
  },
  {
    "text": "you haven't seen it my experience is that very few people are aware of it but the people who have seen it say it's",
    "start": "1719399",
    "end": "1726640"
  },
  {
    "text": "life changing lifetime changing sorry okay so I rented a lot uh C++ will",
    "start": "1726640",
    "end": "1739399"
  },
  {
    "text": "never offer any safety guarantees but we can definitely do a better job of",
    "start": "1739399",
    "end": "1746440"
  },
  {
    "text": "securing it right with good tooling and a change in in in mindset I would",
    "start": "1746440",
    "end": "1752840"
  },
  {
    "text": "say so um this was a pretty this tweet",
    "start": "1752840",
    "end": "1758200"
  },
  {
    "text": "was pretty popular um exactly two years ago right",
    "start": "1758200",
    "end": "1763399"
  },
  {
    "text": "uh just rewrite everything in Rust rust is the future blah blah blah where when",
    "start": "1763399",
    "end": "1768440"
  },
  {
    "text": "a guy at this level usually says something like this it has consequences",
    "start": "1768440",
    "end": "1774480"
  },
  {
    "text": "right he's a pretty important guy in in in Microsoft and when he says stuff like",
    "start": "1774480",
    "end": "1781399"
  },
  {
    "text": "this usually it doesn't end up with some likes and shares on Twitter it ends up",
    "start": "1781399",
    "end": "1786960"
  },
  {
    "text": "with stuff getting done and stuff has been done",
    "start": "1786960",
    "end": "1793440"
  },
  {
    "text": "uh all right so I have to acknowledge the the the cloud because uh that's uh sort of",
    "start": "1793440",
    "end": "1803200"
  },
  {
    "text": "central to many things now so there's this Azure security Evolution um secure",
    "start": "1803200",
    "end": "1810120"
  },
  {
    "text": "multi tenacy confidential compute and uh rust uh so the there's this whole Mantra",
    "start": "1810120",
    "end": "1817840"
  },
  {
    "text": "in in Azure and in Microsoft in general of um trust build up trust in systems in",
    "start": "1817840",
    "end": "1825960"
  },
  {
    "text": "services in products and so on so uh they like to play with this uh U",
    "start": "1825960",
    "end": "1834200"
  },
  {
    "text": "thing and but it's not just Microsoft I think it's no longer news um by now most",
    "start": "1834200",
    "end": "1840360"
  },
  {
    "text": "people know that Frost is in in the Linux kernel with Linus's",
    "start": "1840360",
    "end": "1845880"
  },
  {
    "text": "blessing um so lots of things have been moving in that space um lots of new",
    "start": "1845880",
    "end": "1853640"
  },
  {
    "text": "developments but there's some friction uh probably some of you heard some of the recent drama with the file system",
    "start": "1853640",
    "end": "1860840"
  },
  {
    "text": "group uh in in the lingu kernel and people not being extremely civilized and",
    "start": "1860840",
    "end": "1868320"
  },
  {
    "text": "sort of going Beyond technical arguments again",
    "start": "1868320",
    "end": "1875080"
  },
  {
    "text": "communities and various interests and agendas sometimes conflict with",
    "start": "1875080",
    "end": "1880960"
  },
  {
    "text": "technical priorities but things are moving so rust in Linux is slowly",
    "start": "1880960",
    "end": "1886639"
  },
  {
    "text": "growing of course rust is in the windows kernel",
    "start": "1886639",
    "end": "1893559"
  },
  {
    "text": "um there's been so since more than a year ago right in various stages and",
    "start": "1893559",
    "end": "1900039"
  },
  {
    "text": "experiments and I'm going to talk about some of these things uh and of course rust is in",
    "start": "1900039",
    "end": "1907519"
  },
  {
    "text": "Android as well and growing um last stats I've seen I think were Android 13",
    "start": "1907519",
    "end": "1914320"
  },
  {
    "text": "and 14 so it's slowly growing in in Android uh significantly",
    "start": "1914320",
    "end": "1920240"
  },
  {
    "text": "so uh so I'm going to share some stuff now",
    "start": "1920240",
    "end": "1925320"
  },
  {
    "text": "um some of these case studies that have been made public um but there's more",
    "start": "1925320",
    "end": "1932039"
  },
  {
    "text": "that I I'm probably going to be able to talk about maybe next year uh so there's",
    "start": "1932039",
    "end": "1937960"
  },
  {
    "text": "more going on but I'm going to share sort of a few case studies and tidbits from from",
    "start": "1937960",
    "end": "1944399"
  },
  {
    "text": "Microsoft so in Windows 11 we ported uh two uh candidate components uh to rust",
    "start": "1944399",
    "end": "1951679"
  },
  {
    "text": "and these are direct right and GDI um so give you some context here uh",
    "start": "1951679",
    "end": "1959480"
  },
  {
    "text": "the idea is uh we didn't pick just random components and say let's do this",
    "start": "1959480",
    "end": "1965320"
  },
  {
    "text": "in Rust and see how it goes uh so we can brag about it uh we picked",
    "start": "1965320",
    "end": "1972720"
  },
  {
    "text": "some strategic components either because of",
    "start": "1972720",
    "end": "1978440"
  },
  {
    "text": "their attack service or vulnerability history or about feasibility of",
    "start": "1978440",
    "end": "1986399"
  },
  {
    "text": "onboarding on such projects and learning from them because we can't just",
    "start": "1986399",
    "end": "1991799"
  },
  {
    "text": "pick any component that might be too difficult to to on board to to rust",
    "start": "1991799",
    "end": "1997960"
  },
  {
    "text": "either because of dependencies of How It's architected and so on so when we",
    "start": "1997960",
    "end": "2004120"
  },
  {
    "text": "choose these things we consider many many criteria about how we pick them so",
    "start": "2004120",
    "end": "2012480"
  },
  {
    "text": "we go through these steps of exploration flighting and production with them uh",
    "start": "2012480",
    "end": "2019159"
  },
  {
    "text": "and direct impact when we writing some of these components from C and C++ uh in",
    "start": "2019159",
    "end": "2025039"
  },
  {
    "text": "Rust is of course to improve security but I would say an equally important",
    "start": "2025039",
    "end": "2030320"
  },
  {
    "text": "thing as we begin uh this journey and begin doesn't mean we we did it this",
    "start": "2030320",
    "end": "2037039"
  },
  {
    "text": "year begin in terms of Microsoft 50e scale right um is to gain experience so",
    "start": "2037039",
    "end": "2044279"
  },
  {
    "text": "I would say this is an an equally important thing to gain experience in in",
    "start": "2044279",
    "end": "2049560"
  },
  {
    "text": "transitioning these components in production to rust not just some hobby new project that nobody's using uh",
    "start": "2049560",
    "end": "2057679"
  },
  {
    "text": "so and we're evaluating for many of these new uh projects we're evaluating",
    "start": "2057679",
    "end": "2064280"
  },
  {
    "text": "many uh many aspects here the cost of Lear learning the cost of on boarding",
    "start": "2064280",
    "end": "2069398"
  },
  {
    "text": "the new team to a new technology the cost of Engineering Systems retooling uh the cost of porting itself um how",
    "start": "2069399",
    "end": "2076878"
  },
  {
    "text": "expensive to extend new stuff not just Port existing stuff um how ready are we",
    "start": "2076879",
    "end": "2082839"
  },
  {
    "text": "internally to to to build test deploy verify these things so there's again",
    "start": "2082839",
    "end": "2089800"
  },
  {
    "text": "going back to um one of my very first slides it's way more than just rewriting",
    "start": "2089800",
    "end": "2096240"
  },
  {
    "text": "it to rust some sometimes that's the easiest part not always sometimes that's",
    "start": "2096240",
    "end": "2101960"
  },
  {
    "text": "the easiest part the hardest part is the engineering behind it what it takes to",
    "start": "2101960",
    "end": "2108280"
  },
  {
    "text": "to to get that new code and get it through all the Engineering Systems requirements uh",
    "start": "2108280",
    "end": "2116800"
  },
  {
    "text": "in Microsoft to be able to test and ship that thing it's not enough just to build",
    "start": "2116800",
    "end": "2123920"
  },
  {
    "text": "it so is is are we really ready in terms of tooling and pipelines and debugging",
    "start": "2123920",
    "end": "2129760"
  },
  {
    "text": "and performance indicators and all sorts of other internal things that we need to",
    "start": "2129760",
    "end": "2136000"
  },
  {
    "text": "check uh they they still work and what are the cost of maintaining these things long term",
    "start": "2136000",
    "end": "2142839"
  },
  {
    "text": "because once you do the the the port there's a significant cost",
    "start": "2142839",
    "end": "2149960"
  },
  {
    "text": "of going forward because the plan is not to create an",
    "start": "2149960",
    "end": "2155960"
  },
  {
    "text": "alternative universe and abandon the whole thing the plan is how do we take this how do we take this",
    "start": "2155960",
    "end": "2163040"
  },
  {
    "text": "hybrid world now and evolve them together how we how do we keep them",
    "start": "2163040",
    "end": "2169319"
  },
  {
    "text": "working together how do we make modifications in either Parts either the C++ part or the the rust thing and the",
    "start": "2169319",
    "end": "2176359"
  },
  {
    "text": "rust thing continues to grow to evolve and so on so how do we evolve this hybrid systems and what's the cost of",
    "start": "2176359",
    "end": "2183520"
  },
  {
    "text": "dealing with these hybrid systems are they really worth it",
    "start": "2183520",
    "end": "2189200"
  },
  {
    "text": "first such example uh that we tried in in in Windows is direct right component and",
    "start": "2189240",
    "end": "2196839"
  },
  {
    "text": "specifically uh direct core uh so if you're not familiar with this thing is",
    "start": "2196839",
    "end": "2202680"
  },
  {
    "text": "is a stack for text analysis rendering glyphs layout everything related to",
    "start": "2202680",
    "end": "2209760"
  },
  {
    "text": "putting text on screen in Windows and direct direct",
    "start": "2209760",
    "end": "2214880"
  },
  {
    "text": "right core is actually crossplatform and that's the component that office",
    "start": "2214880",
    "end": "2220240"
  },
  {
    "text": "uses internally so it's it's supposed to work on all platforms where office runs",
    "start": "2220240",
    "end": "2227359"
  },
  {
    "text": "that includes Android iOS Linux Windows whatever it's it's supposed to be",
    "start": "2227359",
    "end": "2233800"
  },
  {
    "text": "everywhere uh the direct right core and we started with this port in",
    "start": "2233800",
    "end": "2241200"
  },
  {
    "text": "2020 and uh we reported this this thing to rust and sort of to get an understanding",
    "start": "2241200",
    "end": "2249480"
  },
  {
    "text": "of how we can carve this space with regards to this component doesn't leave",
    "start": "2249480",
    "end": "2255920"
  },
  {
    "text": "in isolation it's not a a bubble we need to call out external stuff and external",
    "start": "2255920",
    "end": "2262400"
  },
  {
    "text": "stuff of course will call out into this component because it's a system component lots of apps are using it uh",
    "start": "2262400",
    "end": "2269520"
  },
  {
    "text": "and in when you do this sort of targeted um",
    "start": "2269520",
    "end": "2274960"
  },
  {
    "text": "ports you have to identify boundaries and it's not",
    "start": "2274960",
    "end": "2280560"
  },
  {
    "text": "always the final stage or the target boundary of your intended port or",
    "start": "2280560",
    "end": "2287400"
  },
  {
    "text": "intended rewrite sometimes you have to carve out these boundaries in incremental fashion to see okay now",
    "start": "2287400",
    "end": "2295359"
  },
  {
    "text": "first phase we're carving out this far and we're doing it and we make want to",
    "start": "2295359",
    "end": "2301560"
  },
  {
    "text": "make sure it works with everything else and then we carve out more then we carve out more until we sort of reach a",
    "start": "2301560",
    "end": "2307079"
  },
  {
    "text": "natural um stopping point for what we set out to do with that component right",
    "start": "2307079",
    "end": "2315560"
  },
  {
    "text": "and in Windows a lot of stuff is sort of com like and even if it's not exactly",
    "start": "2315560",
    "end": "2322040"
  },
  {
    "text": "like com com because it needs to be crossplatform some of these things work",
    "start": "2322040",
    "end": "2328359"
  },
  {
    "text": "in common ways so they Expo expose these kind of um boundaries that are com like",
    "start": "2328359",
    "end": "2336520"
  },
  {
    "text": "so these this turned out to be these perfect regions these perfect targets uh",
    "start": "2336520",
    "end": "2342599"
  },
  {
    "text": "that the team chose for these uh ports so of course um rust code is",
    "start": "2342599",
    "end": "2351280"
  },
  {
    "text": "directly callable from through these com interfaces from outside so because uh",
    "start": "2351280",
    "end": "2356960"
  },
  {
    "text": "direct right exposes uh user level apis so they need to be able to call and",
    "start": "2356960",
    "end": "2362800"
  },
  {
    "text": "internally it has dependencies so we need to be able to bridge those gaps and",
    "start": "2362800",
    "end": "2371520"
  },
  {
    "text": "and have these natural boundaries actually work uh I'm not expecting you to read",
    "start": "2371520",
    "end": "2379079"
  },
  {
    "text": "this thing maybe when you get the slides this is sort of like an infographic kind of thing um laying out the the details",
    "start": "2379079",
    "end": "2386200"
  },
  {
    "text": "of the project and various parts of it I stole this from a colleague so I'm more interested again",
    "start": "2386200",
    "end": "2393599"
  },
  {
    "text": "going back to the engineering side of things um again this is not not a big project direct right core is not a huge",
    "start": "2393599",
    "end": "2401000"
  },
  {
    "text": "thing uh so and it was sort of a starter",
    "start": "2401000",
    "end": "2406119"
  },
  {
    "text": "experiment for uh the windows team so very few experienced thrust developers",
    "start": "2406119",
    "end": "2413880"
  },
  {
    "text": "and many many unknowns because none of these things were figured out U both in",
    "start": "2413880",
    "end": "2420280"
  },
  {
    "text": "terms of the the strategy to to do that port and in terms of Engineering",
    "start": "2420280",
    "end": "2425960"
  },
  {
    "text": "Systems rough this sort of was the The Experience so you can consider this",
    "start": "2425960",
    "end": "2433800"
  },
  {
    "text": "first first encounter experience kind of thing what does it take to embark on",
    "start": "2433800",
    "end": "2440480"
  },
  {
    "text": "some Journey again uh numbers may not have any meaning to you but sort of",
    "start": "2440480",
    "end": "2446599"
  },
  {
    "text": "maybe give you some clue that it's not in years investment it can be done in a",
    "start": "2446599",
    "end": "2454000"
  },
  {
    "text": "reasonable amount of time for a reasonable component but not a trivial",
    "start": "2454000",
    "end": "2460760"
  },
  {
    "text": "one another experiment that is a bit more involved is um win32 GD GDI uh this",
    "start": "2462359",
    "end": "2470400"
  },
  {
    "text": "is the component that handles uh graphic rendering 2D graphic rendering um this drives all the windows",
    "start": "2470400",
    "end": "2478520"
  },
  {
    "text": "surfaces in in Windows and and so on it's it's very old component in in the",
    "start": "2478520",
    "end": "2483560"
  },
  {
    "text": "operating system from late ' 80s early '90s and it's perf critical It Was",
    "start": "2483560",
    "end": "2488920"
  },
  {
    "text": "Written in mostly in C it was targeting really old CPUs um highly optimized",
    "start": "2488920",
    "end": "2496319"
  },
  {
    "text": "thing of course used by everything in in in the graphical part of the operating",
    "start": "2496319",
    "end": "2502599"
  },
  {
    "text": "system so it's it's not a toy component right so um lots",
    "start": "2502599",
    "end": "2510839"
  },
  {
    "text": "of data types and apis and many many many many uh dependence on on this",
    "start": "2510839",
    "end": "2517319"
  },
  {
    "text": "component of course um this is this was a challenging one",
    "start": "2517319",
    "end": "2522599"
  },
  {
    "text": "and was specifically chosen because it's a challenging one uh this has not been",
    "start": "2522599",
    "end": "2528880"
  },
  {
    "text": "fully uh ported to rust uh it's it's a big thing it's a big component but parts",
    "start": "2528880",
    "end": "2535599"
  },
  {
    "text": "of it are uh ported already and more so",
    "start": "2535599",
    "end": "2541319"
  },
  {
    "text": "and and we're validating this process uh Windows does boot with the rust version",
    "start": "2541319",
    "end": "2547359"
  },
  {
    "text": "all GDI test pass again but that's and the component is of course in in in flighting to prove viability in real",
    "start": "2547359",
    "end": "2554839"
  },
  {
    "text": "world scenarios right so but it's it's a long journey so it's this is a big component performance of the ported code",
    "start": "2554839",
    "end": "2562000"
  },
  {
    "text": "was excellent in some benchmarks even better than the C the C and C++ version",
    "start": "2562000",
    "end": "2569160"
  },
  {
    "text": "I keep saying C and C++ version because I'm ashamed to say C++ not really",
    "start": "2569160",
    "end": "2574480"
  },
  {
    "text": "C++ so but it's not really C so anyway C+ uh so",
    "start": "2574480",
    "end": "2581839"
  },
  {
    "text": "um so performance is excellent proven by office tests because this component of",
    "start": "2581839",
    "end": "2587359"
  },
  {
    "text": "course is used in in office as well uh proven by micro benchmarks and so and so",
    "start": "2587359",
    "end": "2592440"
  },
  {
    "text": "on uh again as part of this learning and journey um we did notice shortcomings",
    "start": "2592440",
    "end": "2600200"
  },
  {
    "text": "and there worst contributions to Upstream rust project with learnings",
    "start": "2600200",
    "end": "2605319"
  },
  {
    "text": "from this experiment things that we we found out to be missing and our teams",
    "start": "2605319",
    "end": "2610720"
  },
  {
    "text": "contributed back uh and we have team members actively uh contributing to uh",
    "start": "2610720",
    "end": "2617000"
  },
  {
    "text": "rust project um so lots of calls to external",
    "start": "2617000",
    "end": "2623559"
  },
  {
    "text": "uh CN C++ functions uh still lots of unsafe code of course because this is a",
    "start": "2623559",
    "end": "2629599"
  },
  {
    "text": "a fairly large component and just a tiny bit of it was uh written to uh Rewritten",
    "start": "2629599",
    "end": "2636119"
  },
  {
    "text": "to rust the region handling code and a bit more and as we rewrite so right now",
    "start": "2636119",
    "end": "2643480"
  },
  {
    "text": "there's tons of unsafe in this bridge between rust and and the C++ parts of it",
    "start": "2643480",
    "end": "2650680"
  },
  {
    "text": "but as we rewrite more of it in Rust this unsafe surface is reduced so the",
    "start": "2650680",
    "end": "2657119"
  },
  {
    "text": "more you migrate the less um unsafe unsafe surface you have in this boundary",
    "start": "2657119",
    "end": "2663400"
  },
  {
    "text": "again going back to these carving out these regions of that you can gradually",
    "start": "2663400",
    "end": "2668480"
  },
  {
    "text": "incrementally port and of course a big milestone here was being able to write a",
    "start": "2668480",
    "end": "2674200"
  },
  {
    "text": "CIS in completely safe code um so again this was a fairly",
    "start": "2674200",
    "end": "2681359"
  },
  {
    "text": "significant learning opportunity there's more many many many",
    "start": "2681359",
    "end": "2686960"
  },
  {
    "text": "more oxidation efforts going on in the company uh can't talk about many of them",
    "start": "2686960",
    "end": "2693680"
  },
  {
    "text": "uh definitely not on record U but I can sort of give you teasers if you reach",
    "start": "2693680",
    "end": "2699440"
  },
  {
    "text": "out to me uh privately lots of them spanning from system components um in in Windows and",
    "start": "2699440",
    "end": "2707480"
  },
  {
    "text": "and other software that you know and use uh to services that are running in Azure",
    "start": "2707480",
    "end": "2714800"
  },
  {
    "text": "and services that are running in substr cloud and other significant Parts again",
    "start": "2714800",
    "end": "2719839"
  },
  {
    "text": "when we want to those service um projects for rust",
    "start": "2719839",
    "end": "2726520"
  },
  {
    "text": "are mainly driven by either reducing latency or improving performance or",
    "start": "2726520",
    "end": "2732640"
  },
  {
    "text": "reducing operating costs uh some some mths around um rust",
    "start": "2732640",
    "end": "2742000"
  },
  {
    "text": "on boarding um many many people um when they look at rust they sort of get",
    "start": "2742000",
    "end": "2749200"
  },
  {
    "text": "scared because it has a very shouty syntax friend of mine likes to joke that I don't like rust because it screams at",
    "start": "2749200",
    "end": "2755839"
  },
  {
    "text": "me has exclamation points everywhere uh so it it is a sort of a learning curve",
    "start": "2755839",
    "end": "2763680"
  },
  {
    "text": "uh and the mainstream U misconception is that it takes a long time to to learn to",
    "start": "2763680",
    "end": "2769359"
  },
  {
    "text": "on board to become proficient in and so on uh this is a um case study that",
    "start": "2769359",
    "end": "2775079"
  },
  {
    "text": "Google published roughly two years ago um around some of these misconceptions",
    "start": "2775079",
    "end": "2780599"
  },
  {
    "text": "around learning around uh quality of Diagnostics um quality of generated code",
    "start": "2780599",
    "end": "2789240"
  },
  {
    "text": "um challenges of interrup and unsafe and so on uh I do encourage you to read it if you want um it's not exactly super",
    "start": "2789240",
    "end": "2796000"
  },
  {
    "text": "new already two years old but it gives you a glimpse of how these things um go",
    "start": "2796000",
    "end": "2802960"
  },
  {
    "text": "internally we sort of saw the same kind of things uh so um we saw that",
    "start": "2802960",
    "end": "2810400"
  },
  {
    "text": "developers uh manage to on board rust fairly quickly uh you it's not the kind",
    "start": "2810400",
    "end": "2816200"
  },
  {
    "text": "of thing you become proficient in in a week right it takes some time between",
    "start": "2816200",
    "end": "2821240"
  },
  {
    "text": "before you gain some confidence and and become prolific at it but it's not",
    "start": "2821240",
    "end": "2826520"
  },
  {
    "text": "something that um is a stopper so we have yet to find",
    "start": "2826520",
    "end": "2834640"
  },
  {
    "text": "people who say the the friction on path to rust is",
    "start": "2834640",
    "end": "2839720"
  },
  {
    "text": "learning rust or learning the libraries and ecosystem and so on there's like I",
    "start": "2839720",
    "end": "2845359"
  },
  {
    "text": "told you there's many many other Alles related to um Engineering Systems and",
    "start": "2845359",
    "end": "2851240"
  },
  {
    "text": "Engineering in general how to build and evolve these systems in a hybrid way that are much more um interesting and",
    "start": "2851240",
    "end": "2859960"
  },
  {
    "text": "occupy a lot of our time rather than just learning the language in",
    "start": "2859960",
    "end": "2866079"
  },
  {
    "text": "library uh a couple of interesting blog posts I I'm trying not to I'm",
    "start": "2866079",
    "end": "2871240"
  },
  {
    "text": "intentionally pasting links from uh Google as well because they've been sharing a lot of these uh Journey",
    "start": "2871240",
    "end": "2877680"
  },
  {
    "text": "publicly and I just don't want to make this all about Microsoft right so I intentionally put out some uh",
    "start": "2877680",
    "end": "2884599"
  },
  {
    "text": "interesting articles uh that I liked from uh Google with regards to uh their",
    "start": "2884599",
    "end": "2891640"
  },
  {
    "text": "rust um on boarding on various projects uh including learning on boarding",
    "start": "2891640",
    "end": "2897880"
  },
  {
    "text": "Engineering Systems tools used and so on I do encourage you to read them and",
    "start": "2897880",
    "end": "2904960"
  },
  {
    "text": "even uh B metal rust that that's a big thing me I mentioned interop so interop",
    "start": "2904960",
    "end": "2913760"
  },
  {
    "text": "is increasingly becoming a an important problem because the more stuff we're",
    "start": "2913760",
    "end": "2920280"
  },
  {
    "text": "going to write the more of these boundaries we're going to face uh in interacting with existing code uh when",
    "start": "2920280",
    "end": "2927599"
  },
  {
    "text": "you pick and choose and say oh I'm going to choose this tiny little component I'm going to choose this nice little project",
    "start": "2927599",
    "end": "2934079"
  },
  {
    "text": "because I know there's lower risk of uh hitting real problems uh interacting",
    "start": "2934079",
    "end": "2940280"
  },
  {
    "text": "with dependence or dependencies but when you get to a point where you need to go and and do some",
    "start": "2940280",
    "end": "2947079"
  },
  {
    "text": "serious stuff uh then more of this interop will come up and this is where",
    "start": "2947079",
    "end": "2952960"
  },
  {
    "text": "we need to invest more in building these Bridges there's already pretty good tools out there uh I",
    "start": "2952960",
    "end": "2961480"
  },
  {
    "text": "linked a couple of them uh at at the bottom of the slide creates and and",
    "start": "2961480",
    "end": "2967520"
  },
  {
    "text": "tools that can help bridging these gaps oh and I forgot to mention the the windows crate so if you're interested in",
    "start": "2967520",
    "end": "2974720"
  },
  {
    "text": "interacting with uh Windows apis Windows crate is a must uh but anyway these are um",
    "start": "2974720",
    "end": "2983400"
  },
  {
    "text": "operating system agnostic tools uh to help you with uh rust C++ inup this so",
    "start": "2983400",
    "end": "2990680"
  },
  {
    "text": "let me be as Frank as possible the situation is not great uh right now now it's not bad",
    "start": "2990680",
    "end": "2998119"
  },
  {
    "text": "either but it's constantly improving and the thing that is awesome",
    "start": "2998119",
    "end": "3005480"
  },
  {
    "text": "is that big companies because now they have vested interest in this succeeding",
    "start": "3005480",
    "end": "3010520"
  },
  {
    "text": "it's no longer an incubation project is no longer a hobby thing for some",
    "start": "3010520",
    "end": "3015839"
  },
  {
    "text": "developers or some team some in some corner of the company and so on big companies see this as a strategic move",
    "start": "3015839",
    "end": "3023839"
  },
  {
    "text": "and they're funding serious efforts to help this uh interrup story so that",
    "start": "3023839",
    "end": "3030400"
  },
  {
    "text": "applies to many of your uh favorite big Tech corporations out there so they're",
    "start": "3030400",
    "end": "3036760"
  },
  {
    "text": "investing seriously in there and and the inter situation is improving it's it's not perfect right",
    "start": "3036760",
    "end": "3043599"
  },
  {
    "text": "now so I'm not going to sell you any uh lies here uh and you can do it right uh it's",
    "start": "3043599",
    "end": "3053880"
  },
  {
    "text": "although the interrupt could could be better right now now that's not a stopper you can very well write hybrid",
    "start": "3053880",
    "end": "3061240"
  },
  {
    "text": "C++ and rust code and combine them in the same uh module and and have them",
    "start": "3061240",
    "end": "3069240"
  },
  {
    "text": "working it's that's not the showstopper it can be sometimes too loud it can be",
    "start": "3069240",
    "end": "3077319"
  },
  {
    "text": "maybe unnecessarily acrobatic or maybe too noisy but that's not the",
    "start": "3077319",
    "end": "3082880"
  },
  {
    "text": "showstopper again going back Engineering Systems and tooling that's where the uh",
    "start": "3082880",
    "end": "3089839"
  },
  {
    "text": "pain is and where we're working heavily to to address that and improve",
    "start": "3089839",
    "end": "3095760"
  },
  {
    "text": "it so learning uh I I I I I loved so so",
    "start": "3095760",
    "end": "3101440"
  },
  {
    "text": "much when I saw this TW it's fairly recent one but I think it it perfectly describes what I'm seeing in in sort of",
    "start": "3101440",
    "end": "3109480"
  },
  {
    "text": "friends and acquaintances uh being on this journey so it's this is exactly the",
    "start": "3109480",
    "end": "3115599"
  },
  {
    "text": "two kinds of uh reactions I'm I'm usually getting from people I know",
    "start": "3115599",
    "end": "3120760"
  },
  {
    "text": "anyway um so with regards to learning there's plenty of books materials uh",
    "start": "3120760",
    "end": "3126880"
  },
  {
    "text": "trainings out there um lots of good stuff I would say the most successful",
    "start": "3126880",
    "end": "3133960"
  },
  {
    "text": "thing uh and again uh Google is very open about this thing and they",
    "start": "3133960",
    "end": "3139599"
  },
  {
    "text": "published case studies about their internal success on this journey do read",
    "start": "3139599",
    "end": "3145400"
  },
  {
    "text": "it don't believe believe what I'm saying here uh they do have uh invested and",
    "start": "3145400",
    "end": "3151559"
  },
  {
    "text": "built this internal curriculum uh that they using with hundreds and hundreds of",
    "start": "3151559",
    "end": "3156799"
  },
  {
    "text": "of their engineers and it's all open source or public you can browse it has",
    "start": "3156799",
    "end": "3162119"
  },
  {
    "text": "rust fundamentals um basically all you need to know to get",
    "start": "3162119",
    "end": "3168119"
  },
  {
    "text": "started and familiarize yourself with the concepts plus specific verticals",
    "start": "3168119",
    "end": "3175000"
  },
  {
    "text": "stuff specific for Android stuff specific for Android for chromium development in Rust uh stuff related to",
    "start": "3175000",
    "end": "3182079"
  },
  {
    "text": "Kernel development and embedded and concurrency so I I found this resource",
    "start": "3182079",
    "end": "3189200"
  },
  {
    "text": "uh very very good and all the people I I've shared it with said um they they",
    "start": "3189200",
    "end": "3195920"
  },
  {
    "text": "liked it and uh it served them well all right so now uh again going",
    "start": "3195920",
    "end": "3203760"
  },
  {
    "text": "back to not the is not the problem the sort",
    "start": "3203760",
    "end": "3208960"
  },
  {
    "text": "of ecosystem and Engineering Systems around it is the problem you have to consume some stuff",
    "start": "3208960",
    "end": "3216400"
  },
  {
    "text": "it's unrealistic that you're going to build everything from scratch you will in some way or another consume some",
    "start": "3216400",
    "end": "3223400"
  },
  {
    "text": "stuff that is done by others right and you need a way to not end up in npm",
    "start": "3223400",
    "end": "3230559"
  },
  {
    "text": "world uh and when you get some transitive dependency on some weird as",
    "start": "3230559",
    "end": "3237440"
  },
  {
    "text": "crate that you didn't even know you were importing for some obscure reason right you don't want a pad left in Rust right",
    "start": "3237440",
    "end": "3245720"
  },
  {
    "text": "uh so teams who started on this journey",
    "start": "3245720",
    "end": "3253079"
  },
  {
    "text": "quickly discovered that just pulling in crates to solve the problem quickly is",
    "start": "3253079",
    "end": "3258400"
  },
  {
    "text": "not a recipe for Success sure you can build a prototype you can build your favorite hobby project and put it on",
    "start": "3258400",
    "end": "3265079"
  },
  {
    "text": "GitHub take Mark I'm a rust developer when you're building real stuff in for",
    "start": "3265079",
    "end": "3272119"
  },
  {
    "text": "production use you need to pass some quality gates in terms of dependencies you're you're building",
    "start": "3272119",
    "end": "3279760"
  },
  {
    "text": "on top of right in terms of um in formally we call this software build of",
    "start": "3279760",
    "end": "3285880"
  },
  {
    "text": "materials or auditing or in terms of and there's many many criteria to evaluate",
    "start": "3285880",
    "end": "3291920"
  },
  {
    "text": "this stuff so there's all",
    "start": "3291920",
    "end": "3296440"
  },
  {
    "text": "maintainers of the maintainer ecosystem Evolution over time is it",
    "start": "3300880",
    "end": "3307960"
  },
  {
    "text": "viable is it maintain many many criter",
    "start": "3307960",
    "end": "3315040"
  },
  {
    "text": "it's a good stter but if you want to improve a",
    "start": "3351359",
    "end": "3357760"
  },
  {
    "text": "[Music] system need further but it's a very",
    "start": "3357760",
    "end": "3367200"
  },
  {
    "text": "[Music]",
    "start": "3368370",
    "end": "3372510"
  },
  {
    "text": "start so again we are",
    "start": "3373599",
    "end": "3378839"
  },
  {
    "text": "taking here we at of things we SA",
    "start": "3379119",
    "end": "3387640"
  },
  {
    "text": "[Music] build Sy",
    "start": "3390110",
    "end": "3397760"
  },
  {
    "text": "system C use intern forious",
    "start": "3398480",
    "end": "3405960"
  },
  {
    "text": "reasons so again the list of things that we can investigate and evaluate on",
    "start": "3405960",
    "end": "3416160"
  },
  {
    "text": "and of course they have different sort of priorities in terms of how important they are in the scoring system so we of",
    "start": "3416760",
    "end": "3423319"
  },
  {
    "text": "build the score card B and some of them are more important than others it's not",
    "start": "3423319",
    "end": "3430160"
  },
  {
    "text": "physics here we came up with system that we think and con [Music]",
    "start": "3430160",
    "end": "3437119"
  },
  {
    "text": "ad I would say you need ask yourself the kind of questions you might not use the",
    "start": "3437119",
    "end": "3442640"
  },
  {
    "text": "same criteria that we're using [Music]",
    "start": "3442640",
    "end": "3448480"
  },
  {
    "text": "but other companies are doing the same things other companies that are",
    "start": "3448480",
    "end": "3453559"
  },
  {
    "text": "consuming open source TR projects they're using their own criteria",
    "start": "3453559",
    "end": "3458960"
  },
  {
    "text": "own evaluation system and my encouragement to you is to do the same",
    "start": "3458960",
    "end": "3464359"
  },
  {
    "text": "build whatever things",
    "start": "3464359",
    "end": "3468318"
  },
  {
    "text": "so there's there's risks when when you're using these things there's security",
    "start": "3477280",
    "end": "3483079"
  },
  {
    "text": "risks there stability maintenance related issues uh",
    "start": "3483079",
    "end": "3488400"
  },
  {
    "text": "so stability issu you need to be aware that am I building on something that's",
    "start": "3488400",
    "end": "3494680"
  },
  {
    "text": "to be further develop can I can I work maintainers can I become a",
    "start": "3494680",
    "end": "3502400"
  },
  {
    "text": "maintainer you don't want to end up in a world where you just leech something and",
    "start": "3502400",
    "end": "3508400"
  },
  {
    "text": "don't ask questions or you just for everything because you think you're smart that's not the successful",
    "start": "3508400",
    "end": "3517839"
  },
  {
    "text": "successful so again I strongly encourage you to",
    "start": "3517839",
    "end": "3523960"
  },
  {
    "text": "[Music]",
    "start": "3525220",
    "end": "3530680"
  },
  {
    "text": "invest cerent because if each team builds their own",
    "start": "3530680",
    "end": "3537480"
  },
  {
    "text": "their own system it's not going to end up well because at some point you will",
    "start": "3537480",
    "end": "3542799"
  },
  {
    "text": "have to interact components and so even in big companies you will have you will end up",
    "start": "3542799",
    "end": "3549920"
  },
  {
    "text": "having weird interactions anden",
    "start": "3549920",
    "end": "3554680"
  },
  {
    "text": "I and them automatable design with the CR scoring",
    "start": "3558039",
    "end": "3564359"
  },
  {
    "text": "system but autom and do these checks and you can actually query all all these parameters all these",
    "start": "3564359",
    "end": "3572799"
  },
  {
    "text": "criteria can be quer",
    "start": "3572799",
    "end": "3576799"
  },
  {
    "text": "program all s ofour so you [Music]",
    "start": "3578079",
    "end": "3584480"
  },
  {
    "text": "can and you can easily any component that you want",
    "start": "3585559",
    "end": "3592838"
  },
  {
    "text": "[Music]",
    "start": "3593920",
    "end": "3597089"
  },
  {
    "text": "have e",
    "start": "3624960",
    "end": "3628960"
  }
]