[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "perfect welcome to the NDC Copenhagen sweatbox um if you if you need to like",
    "start": "1520",
    "end": "8200"
  },
  {
    "text": "strip down to your shorts get Refreshments take a break don't but I wouldn't be offended um so I Am David",
    "start": "8200",
    "end": "15599"
  },
  {
    "text": "and I want to talk to you about this really um weird through line in technology I love finding all the weird",
    "start": "15599",
    "end": "20960"
  },
  {
    "text": "through lines in technology that runs from a bunch of kids at MIT in the 1980s",
    "start": "20960",
    "end": "26880"
  },
  {
    "text": "through John carac all the way through to fortnite in the 2020s and really about how people's",
    "start": "26880",
    "end": "33520"
  },
  {
    "text": "creative urge to make things with just about anything they can find always seems to succeed so there's a lot of",
    "start": "33520",
    "end": "39840"
  },
  {
    "text": "code in this talk a lot a lot of code Silla and um there'll be Links at the",
    "start": "39840",
    "end": "45320"
  },
  {
    "text": "end so if you miss a bit don't worry if it's a bit too small yell at me and then don't worry um so we're going to get to",
    "start": "45320",
    "end": "51520"
  },
  {
    "text": "building game engines from scratch in a browser in a little while but first I want to tell you a bit of a story about",
    "start": "51520",
    "end": "57239"
  },
  {
    "text": "the first ever video game mod now quick question anyone ever modded a",
    "start": "57239",
    "end": "62559"
  },
  {
    "start": "60000",
    "end": "182000"
  },
  {
    "text": "video game okay so this great so in 1981 a",
    "start": "62559",
    "end": "68520"
  },
  {
    "text": "couple of MIT students named Doug McCrae and Kevin Curran started a company",
    "start": "68520",
    "end": "73880"
  },
  {
    "text": "called General computers great company name and um and they released their first game and it was called super",
    "start": "73880",
    "end": "80200"
  },
  {
    "text": "missile attack now what was really interesting about super missile attack is that it was an unofficial sequel to",
    "start": "80200",
    "end": "87000"
  },
  {
    "text": "the arcade game Missile Command um and and the two students have programmed the",
    "start": "87000",
    "end": "92079"
  },
  {
    "text": "game by building an arcade modification like a hardware hack so they built a",
    "start": "92079",
    "end": "97560"
  },
  {
    "text": "board that you could physically attach to the original Missile Command arcade cabinet rewire some of the circuitry and",
    "start": "97560",
    "end": "104640"
  },
  {
    "text": "it would make the game harder now they followed this up by building a game called crazy Auto using a similar",
    "start": "104640",
    "end": "111079"
  },
  {
    "text": "technique to modify Pacman um then they modified arcade cabinets again and they",
    "start": "111079",
    "end": "116759"
  },
  {
    "text": "accidentally invented game modding now what the mods did is they took the original arcade pcbs and they added a",
    "start": "116759",
    "end": "123360"
  },
  {
    "text": "few new features mostly to increase the difficulty because you got to remember in 1981 there were like 10",
    "start": "123360",
    "end": "129679"
  },
  {
    "text": "games um so for their part Atari obviously tried to sue them out of business and instead actually they ended",
    "start": "129679",
    "end": "136920"
  },
  {
    "text": "up hiring them and coming up with a settlement and as part of their settlement atar with Atari they agreed",
    "start": "136920",
    "end": "142760"
  },
  {
    "text": "never to sell unlicensed mods again like Scouts Honor which is funny because a",
    "start": "142760",
    "end": "148160"
  },
  {
    "text": "lot of people in this room might have played Crazy Auto because what actually happened is they sold crazy Auto to",
    "start": "148160",
    "end": "153640"
  },
  {
    "text": "Midway who changed the Sprite and released it as Mrs Pac-Man so the first ever game well the",
    "start": "153640",
    "end": "160680"
  },
  {
    "text": "second ever game mod technically became a product so I find this really fascinating because they were probably",
    "start": "160680",
    "end": "166879"
  },
  {
    "text": "the first people to get into games in the way that most people probably get into games today which is basically",
    "start": "166879",
    "end": "173360"
  },
  {
    "text": "screwing around with something that they had on their computer as a kid um and through modding games and using now",
    "start": "173360",
    "end": "179840"
  },
  {
    "text": "general purpose game engines in fact that trend of modifying",
    "start": "179840",
    "end": "185680"
  },
  {
    "start": "182000",
    "end": "228000"
  },
  {
    "text": "arcade cabinets persisted all the way through to the late ' 80s and early 90s so my other really favorite example of",
    "start": "185680",
    "end": "191599"
  },
  {
    "text": "this um was was this game here so unless you were born in about 1980 you probably",
    "start": "191599",
    "end": "198080"
  },
  {
    "text": "never played Street Fighter 2 rainbow Edition not really one that ever comes",
    "start": "198080",
    "end": "203280"
  },
  {
    "text": "up but it was a a hack to an arcade cabinet in Japan that was so popular",
    "start": "203280",
    "end": "208480"
  },
  {
    "text": "that it made more money in 1992 than the the original Street Fighter 2 game and",
    "start": "208480",
    "end": "214239"
  },
  {
    "text": "eventually Capcom cloned the hack and they released it as Street Fighter 2 Champion Edition on the Mega Drive and",
    "start": "214239",
    "end": "221200"
  },
  {
    "text": "snz um so literally a fan favorite version of the game came from someone screwing around with the",
    "start": "221200",
    "end": "228360"
  },
  {
    "start": "228000",
    "end": "310000"
  },
  {
    "text": "rules now it it's interesting because early gaming especially was super super self-contained so each game you made",
    "start": "228360",
    "end": "235200"
  },
  {
    "text": "required kind of Mastery of the target platform and its hardware and the gameplay logic and the rendering code it",
    "start": "235200",
    "end": "240680"
  },
  {
    "text": "was all intertwined these were just programs for specific machines and if you look at game ports at the time you",
    "start": "240680",
    "end": "245959"
  },
  {
    "text": "can you can see that because early game ports weren't really ports at all they were just complete re-implementations of",
    "start": "245959",
    "end": "252560"
  },
  {
    "text": "the game by looking at one of them and try to recode it on another uh piece of Hardware normally by different people",
    "start": "252560",
    "end": "258840"
  },
  {
    "text": "you know those games you know paper boy is famously a very ported example of a game that is different on every platform",
    "start": "258840",
    "end": "264639"
  },
  {
    "text": "and bad on many of them and as games got more and more complex bigger businesses and organizations motivated by getting",
    "start": "264639",
    "end": "271600"
  },
  {
    "text": "to Market quicker cuz capitalism going to capitalism uh started building games",
    "start": "271600",
    "end": "276960"
  },
  {
    "text": "on top of their previous completed games to to speed up development and there were really weird little anomalies here",
    "start": "276960",
    "end": "283000"
  },
  {
    "text": "now I don't know did anyone know this that Super Mario Land uh Super Mario Brothers even on the NZ was built on the",
    "start": "283000",
    "end": "290720"
  },
  {
    "text": "code base of excite bike that came out the year before because Mario's Locomotion is the same as excite bike's",
    "start": "290720",
    "end": "298840"
  },
  {
    "text": "uh movement code so super interesting history of this and as the 80s kind of progressed lots and",
    "start": "298840",
    "end": "305360"
  },
  {
    "text": "lots of companies started building internal game development toolkits and shared code",
    "start": "305360",
    "end": "310720"
  },
  {
    "start": "310000",
    "end": "381000"
  },
  {
    "text": "bases so this led through kind of the late ' 80s and the early '90s into this boom of what were marketed at the time",
    "start": "310720",
    "end": "316919"
  },
  {
    "text": "as game creation kits so some of them were private youve got things like the",
    "start": "316919",
    "end": "322039"
  },
  {
    "text": "the wonderfully named scum engine which anyone that's played a Lucas Arts point and click adventure will have used um",
    "start": "322039",
    "end": "328160"
  },
  {
    "text": "scum of course stood for the script creation utility for man uh Maniac",
    "start": "328160",
    "end": "333639"
  },
  {
    "text": "mansion and other creation kits actually started to be launched as commercial",
    "start": "333639",
    "end": "339120"
  },
  {
    "text": "products rather than Game Dev tools for companies so when I was a kid in the early '90s I remembered using click and",
    "start": "339120",
    "end": "344840"
  },
  {
    "text": "play which is like a gooey Dragon drop thing to make little games um but Gary",
    "start": "344840",
    "end": "350000"
  },
  {
    "text": "kitchen's game maker was probably the first um commercial kit uh that hit the",
    "start": "350000",
    "end": "355680"
  },
  {
    "text": "market in 1985 other popular things you may have heard of RPG Maker um RPG Maker",
    "start": "355680",
    "end": "362120"
  },
  {
    "text": "celebrating its 30th year this year making kind of Indie role playing games that get ported to everything so while",
    "start": "362120",
    "end": "369360"
  },
  {
    "text": "game engines didn't exist in their traditional former everyone was trying to work out the answer to the same",
    "start": "369360",
    "end": "375280"
  },
  {
    "text": "problem how do we generalize bits of code and build new games without having to rebuild everything from scratch every",
    "start": "375280",
    "end": "381880"
  },
  {
    "text": "time so every talk on video games ever leads to Quake I think is basically the",
    "start": "381880",
    "end": "388599"
  },
  {
    "text": "truth and everything changed mostly when ID released doom and you know I feel",
    "start": "388599",
    "end": "393919"
  },
  {
    "text": "like I literally have three talks that are just like Doom's really great you should play Doom it's really important",
    "start": "393919",
    "end": "399319"
  },
  {
    "text": "so in 1993 Doom popularized the idea of user created game mods for the first",
    "start": "399319",
    "end": "405840"
  },
  {
    "text": "time specifically spurred on by mapmaking because Dooms Network multiplayer was such a big hit people",
    "start": "405840",
    "end": "412120"
  },
  {
    "text": "wanted to play maps other people have made there was a little bit of commercial licensing of the Doom code",
    "start": "412120",
    "end": "417240"
  },
  {
    "text": "base at the time so notably to Raven sof Ware who made heretic I believe Raven are now still um working in the Call of",
    "start": "417240",
    "end": "423840"
  },
  {
    "text": "Duty mines uh they also built heretic uh on top of it who which was produced by ID software Jean Romero and hexon after",
    "start": "423840",
    "end": "431759"
  },
  {
    "text": "then So Raven ended up modifying the Doom code base to extend its features",
    "start": "431759",
    "end": "437120"
  },
  {
    "text": "right and and this kind of gave ID software that little spark of an idea because there was a business model here",
    "start": "437120",
    "end": "443120"
  },
  {
    "text": "so they followed up Doom with Quake which introduced the more than a level editor driven mods like the this idea of",
    "start": "443120",
    "end": "450280"
  },
  {
    "text": "total conversions so they introduced something called Quake SE which was a uh a dialect of the sea programming",
    "start": "450280",
    "end": "456479"
  },
  {
    "text": "language noteworthy to me personally because it's why I wanted to learn C when I was a kid um and it was kind of",
    "start": "456479",
    "end": "463360"
  },
  {
    "text": "built as this extensibility point a compiled language based on C but designed specifically to interact with",
    "start": "463360",
    "end": "469879"
  },
  {
    "text": "Quake now at that time ID started licensing the Quake engine to other companies so notably valve software who",
    "start": "469879",
    "end": "476960"
  },
  {
    "text": "made halflife in 1998 so they modified the Quake code base which they referred to it as the gold Source literally",
    "start": "476960",
    "end": "484840"
  },
  {
    "text": "because ID gave them a gold CD with a folder on it called source and that's why the source engine is called Source",
    "start": "484840",
    "end": "492360"
  },
  {
    "text": "it's weird um and then finally obviously epic turned up and they introduced",
    "start": "492360",
    "end": "498240"
  },
  {
    "text": "unreal and the Unreal Engine when they were still wonderfully called epic Mega games which is an excellent company name",
    "start": "498240",
    "end": "504720"
  },
  {
    "text": "so that was kind of 1998 and they they followed ID's licensing model and started licensing their own at the time",
    "start": "504720",
    "end": "511080"
  },
  {
    "text": "very impressive 3D engine um which was the engine that powered unreal now it's",
    "start": "511080",
    "end": "516518"
  },
  {
    "text": "mostly lost to history but Ken Silverman built the build engine which was actually called the build engine in 1995",
    "start": "516519",
    "end": "524519"
  },
  {
    "text": "to power jute Nukem 3D which came out the next year and it's not clear when the word game engine emerged but I think",
    "start": "524519",
    "end": "533720"
  },
  {
    "text": "it was probably ID adopting Silverman's word engine when they were getting into",
    "start": "533720",
    "end": "539839"
  },
  {
    "text": "the licensing business and by the time epic turned up the word engine was then kind of",
    "start": "539839",
    "end": "545760"
  },
  {
    "text": "popular so you know much of the terminology that we have to describe all these Legacy engines actually was",
    "start": "545760",
    "end": "551720"
  },
  {
    "text": "retrofitted onto them after the fact um and actually the late '90s and early",
    "start": "551720",
    "end": "558040"
  },
  {
    "text": "2000s led to this explosion of reusable game engines as all the big technology Publishers started building their own",
    "start": "558040",
    "end": "564480"
  },
  {
    "text": "in-house engines or licensing engines to start building their own franchise games on and for for a long time both the the",
    "start": "564480",
    "end": "571920"
  },
  {
    "text": "Quake engine which is now called idtech and the Unreal Engine which is still called the Unreal Engine um with the two",
    "start": "571920",
    "end": "579760"
  },
  {
    "text": "kind of Waring technology code bases um so I think it's kind of amazing actually",
    "start": "579760",
    "end": "585399"
  },
  {
    "text": "that the Unreal Engine today has a like a version lineage that goes back to",
    "start": "585399",
    "end": "590959"
  },
  {
    "start": "591000",
    "end": "715000"
  },
  {
    "text": "1998 so that's talk about what game engine actually is and it's funny because you see lots",
    "start": "591399",
    "end": "598200"
  },
  {
    "text": "of discourse on the internet people hate on game engines and they what they're really talking about is things like what the graphics look like which is not",
    "start": "598200",
    "end": "604920"
  },
  {
    "text": "really a game engine so I guess for a web audience um",
    "start": "604920",
    "end": "610440"
  },
  {
    "text": "game engines are the web Frameworks of video game development is the obvious Shand to they Frameworks that provide a",
    "start": "610440",
    "end": "616720"
  },
  {
    "text": "programming model for you to build games on and they tend to come with lots of optional libraries and modules that are",
    "start": "616720",
    "end": "622760"
  },
  {
    "text": "capable of um like really diverse ranges of things and often they tend to provide an opinionated programming model of how",
    "start": "622760",
    "end": "629480"
  },
  {
    "text": "they think a game should be constructed so they'll usually come with modules for things like rendering graphics and",
    "start": "629480",
    "end": "634560"
  },
  {
    "text": "handling input and audio and game logic and AI systems and data streaming and",
    "start": "634560",
    "end": "640160"
  },
  {
    "text": "all these kind of capabilities that you see in this chart up here now engines are obviously and uh because of this",
    "start": "640160",
    "end": "646839"
  },
  {
    "text": "quite modular and tend to be customized by lenses or people that are building",
    "start": "646839",
    "end": "651959"
  },
  {
    "text": "games in them and extended to do kind of unique things in specific games now on",
    "start": "651959",
    "end": "657560"
  },
  {
    "text": "top of all of this engines are often useful just because as long as the engine code you're using is ported to",
    "start": "657560",
    "end": "663680"
  },
  {
    "text": "different platforms your game will probably run right and that's cool from a kind of a business perspective so for",
    "start": "663680",
    "end": "671120"
  },
  {
    "text": "reasons that we will get into later um I ended up building a game engine that runs in web browsers over a period of of",
    "start": "671120",
    "end": "677200"
  },
  {
    "text": "about 10 days a couple of years ago um so what I want to do is I want to use some of these techniques as examples to",
    "start": "677200",
    "end": "683079"
  },
  {
    "text": "show you how some of these subsystems are created and hold together um so",
    "start": "683079",
    "end": "688480"
  },
  {
    "text": "obligatory caveat before we start there are many valid designs for game engines these are this is just one of them uh",
    "start": "688480",
    "end": "695200"
  },
  {
    "text": "these are some representative implementations they're not exhaustive uh if I was being exhaustive you'd",
    "start": "695200",
    "end": "701240"
  },
  {
    "text": "probably be here for a three-year degree uh consider this an introduction to the concepts not the code to copy and paste",
    "start": "701240",
    "end": "707000"
  },
  {
    "text": "into your cool new game um I say that with a bit of a side eye to the YouTube people who will",
    "start": "707000",
    "end": "712639"
  },
  {
    "text": "probably complain about this later so I want to start off with one of",
    "start": "712639",
    "end": "718320"
  },
  {
    "start": "715000",
    "end": "771000"
  },
  {
    "text": "the most Core Concepts of a of a most realtime game engines a game Loop so while not all games run in a loop most",
    "start": "718320",
    "end": "725959"
  },
  {
    "text": "realtime games do and the game Loop tends to run at a fixed tick rate or",
    "start": "725959",
    "end": "731760"
  },
  {
    "text": "update rate depending on which engine you're talking about and what the that does is it coordinates the execution of",
    "start": "731760",
    "end": "737320"
  },
  {
    "text": "all of the other subsystems in a a game engine so they tend to do things like Poll for user input increment AI execute",
    "start": "737320",
    "end": "744399"
  },
  {
    "text": "user defined game code and they step forward the game every tick now additionally a game Loop would have run",
    "start": "744399",
    "end": "750560"
  },
  {
    "text": "at a fixed refresh rate but over time a lot of engines have have decoupled the internal tick rate of the game from the",
    "start": "750560",
    "end": "757160"
  },
  {
    "text": "rendering systems this is specifically because if you've ever taken a really old game and Tred to run it on Modern",
    "start": "757160",
    "end": "763199"
  },
  {
    "text": "Hardware that runs it really really quickly that tick rate is accelerated because the the refresh rate of the",
    "start": "763199",
    "end": "768440"
  },
  {
    "text": "screen generally was coupled to the game now renderers or rendering engines",
    "start": "768440",
    "end": "775560"
  },
  {
    "start": "771000",
    "end": "822000"
  },
  {
    "text": "what they do is they take the game State whatever the bag of data that the game operates is and they generate visuals to",
    "start": "775560",
    "end": "781199"
  },
  {
    "text": "a game now 2D renderers are generally concerned with render ordering Sprite",
    "start": "781199",
    "end": "786600"
  },
  {
    "text": "animations camera positioning and post-processing effects now conversely",
    "start": "786600",
    "end": "792160"
  },
  {
    "text": "3D renderers tend to deal with things like 3D asset loading pipelines and data streaming and texture mapping and",
    "start": "792160",
    "end": "798600"
  },
  {
    "text": "usually scheduling calls to GPU um implementations for things like pixel",
    "start": "798600",
    "end": "803720"
  },
  {
    "text": "shaders and fancy graphical effects and you know renderers tend to support different low level Graphics API so you",
    "start": "803720",
    "end": "810519"
  },
  {
    "text": "might have heard of you know the obvious ones like direct X and Vulcan and openg or Apple's metal which I'm sure somebody",
    "start": "810519",
    "end": "817720"
  },
  {
    "text": "uses um but they all support different physical Target platforms and then finally I want to",
    "start": "817720",
    "end": "824440"
  },
  {
    "start": "822000",
    "end": "868000"
  },
  {
    "text": "talk about scenes as a concept for organization now not all game engines have scenes but a lot of the engines you",
    "start": "824440",
    "end": "830839"
  },
  {
    "text": "see today notably things like Unity use a scene metaphor where like a scene is a",
    "start": "830839",
    "end": "838040"
  },
  {
    "text": "high level abstraction but the kind of thing that the game is doing at the time so maybe you have your first person",
    "start": "838040",
    "end": "845199"
  },
  {
    "text": "scene where you're navigating the world or an inventory management scene or a miname scene or a main menu an options",
    "start": "845199",
    "end": "853040"
  },
  {
    "text": "scene it's a way to collect different categories of of of kind of subsections of your game and generally a scene will",
    "start": "853040",
    "end": "860120"
  },
  {
    "text": "describe you know behaviors and contains objects or NPCs or Game World",
    "start": "860120",
    "end": "867240"
  },
  {
    "text": "elements so to bring some of these Concepts to life I want to take a look at the admittedly slight uh slightly",
    "start": "867240",
    "end": "875360"
  },
  {
    "start": "868000",
    "end": "949000"
  },
  {
    "text": "overdesigned version of conways Game of Life so I'm I don't know if you've heard",
    "start": "875360",
    "end": "880759"
  },
  {
    "text": "of this game before um but it's basically meant to simulate life it's a",
    "start": "880759",
    "end": "886000"
  },
  {
    "text": "simple cellular automation game that was designed by a mathematician called JN Conway in the 70s now the reason this is",
    "start": "886000",
    "end": "893639"
  },
  {
    "text": "interesting in the discussion of games is it was technically designed to be a zero player game where it's initial",
    "start": "893639",
    "end": "899560"
  },
  {
    "text": "State requiring no further input and then the games of the rule the rules of the game get applied to it and it will",
    "start": "899560",
    "end": "905680"
  },
  {
    "text": "mutate over time until the game finishes Now The Game of Life takes place on a 2d grid where each grid location can either",
    "start": "905680",
    "end": "912639"
  },
  {
    "text": "be alive or dead and every time the game updates the cells around the board",
    "start": "912639",
    "end": "917720"
  },
  {
    "text": "change state so the rules are very simple any living cell with two or uh",
    "start": "917720",
    "end": "924040"
  },
  {
    "text": "with two live neighbors dies as if by underpopulation any cell",
    "start": "924040",
    "end": "929399"
  },
  {
    "text": "with two or three neighbors Lives On to the Next Generation and any living cell",
    "start": "929399",
    "end": "935399"
  },
  {
    "text": "with three or more neighbors dies because of overpopulation finally any cell with",
    "start": "935399",
    "end": "941440"
  },
  {
    "text": "exactly three lab Neighbors comes alive so we've got this kind of state machine thing so I want to break this down in a",
    "start": "941440",
    "end": "949519"
  },
  {
    "start": "949000",
    "end": "1124000"
  },
  {
    "text": "little bit of code which God that's going to be tough to read excellent um I",
    "start": "949519",
    "end": "955240"
  },
  {
    "text": "hope we brought our Theta binocular um so we're going to Define a really minimal um possible engine so",
    "start": "955240",
    "end": "961920"
  },
  {
    "text": "this is the smallest game engine I could possibly imagine which is why it's in a small font clearly now our game engine",
    "start": "961920",
    "end": "968519"
  },
  {
    "text": "contains basically an instance of an i renderer and an I Scene two interfaces",
    "start": "968519",
    "end": "975560"
  },
  {
    "text": "now the scene can be set from the external call and code and then we've implemented a game Loop literally just a",
    "start": "975560",
    "end": "981000"
  },
  {
    "text": "tick that refreshes every step through the uh the game now our game Loop calls an update function on the scene and it",
    "start": "981000",
    "end": "988600"
  },
  {
    "text": "calls an update function on the renderer and that's all we're doing right so we just got this thing that ticks",
    "start": "988600",
    "end": "994279"
  },
  {
    "text": "forwards uh we do it every 100 millisecond using an API in the browser called request animation frame which is",
    "start": "994279",
    "end": "999759"
  },
  {
    "text": "like a battery efficient stepping frame now we need a little bit bit of startup",
    "start": "999759",
    "end": "1007639"
  },
  {
    "text": "code um so I made a HTML file that calls the Javascript file and passes it a",
    "start": "1007639",
    "end": "1012680"
  },
  {
    "text": "canvas right so our St our startup code is going to create what I've called a",
    "start": "1012680",
    "end": "1017959"
  },
  {
    "text": "canvas renderer and the game engine that you just saw and then we set the game of life scen as",
    "start": "1017959",
    "end": "1023880"
  },
  {
    "text": "the thing that the engine is running so really really simple kind of framework level execution",
    "start": "1023880",
    "end": "1029720"
  },
  {
    "text": "code now you don't have to read this this is meant to be small um our Game of Life scene implements the iene interface",
    "start": "1029720",
    "end": "1036918"
  },
  {
    "text": "so it has an init and an update and a render function and the code in the middle is just those rules that we're",
    "start": "1036919",
    "end": "1043400"
  },
  {
    "text": "just counting the cells around each element in the grid and we're flipping them to either alive or dead so it's not",
    "start": "1043400",
    "end": "1049480"
  },
  {
    "text": "not interesting what it really does so if we zoom in on that update function there the rules are now please",
    "start": "1049480",
    "end": "1056880"
  },
  {
    "text": "don't try and read that but the most important thing is it takes a snapshot at the start iterates over the cells",
    "start": "1056880",
    "end": "1063039"
  },
  {
    "text": "flips the flags and sets the new world State on the way out so we've got this kind of every tick",
    "start": "1063039",
    "end": "1070000"
  },
  {
    "text": "operation and then in our render call I'm going to show you that the greatest rendering engine you have ever seen in",
    "start": "1070000",
    "end": "1075080"
  },
  {
    "text": "your entire life um it draws squares all can do is draw squares it's great",
    "start": "1075080",
    "end": "1080480"
  },
  {
    "text": "perfect why would you need anything more um so in our render core we just Loop through our cells and we draw a black",
    "start": "1080480",
    "end": "1086000"
  },
  {
    "text": "cell or a teal cell depending on whether the cell is alive or dead it's dumb but it works right and and this is",
    "start": "1086000",
    "end": "1093840"
  },
  {
    "text": "the code of our glorious canvas renderer and all I'm really doing here is wrapping the basic browser the basic",
    "start": "1093840",
    "end": "1100799"
  },
  {
    "text": "browsers the browser basic API for drawing so you might notice there's one interesting thing here where we are",
    "start": "1100799",
    "end": "1106760"
  },
  {
    "text": "flipping the the y axis in 2D space because when you're in a browser NN is",
    "start": "1106760",
    "end": "1112840"
  },
  {
    "text": "top left and when you're in a game world not n is bottom left so we're just doing a little bit of mats there to make sure",
    "start": "1112840",
    "end": "1118679"
  },
  {
    "text": "everything looks right and it won't affect this example you wouldn't even notice but it will",
    "start": "1118679",
    "end": "1123960"
  },
  {
    "text": "later and it works and we can run it and it's cool and there you go you can all leave now single player game engine zero",
    "start": "1123960",
    "end": "1130919"
  },
  {
    "start": "1124000",
    "end": "1150000"
  },
  {
    "text": "interaction you got this it's cool um obviously you could write a game of life",
    "start": "1130919",
    "end": "1136480"
  },
  {
    "text": "implementation in about that much code and you don't need need all the the kind of overdesign of an engine and a renderer and all those abstractions um",
    "start": "1136480",
    "end": "1144360"
  },
  {
    "text": "but it's a really good example of what that core looping element of most modern games looks",
    "start": "1144360",
    "end": "1150520"
  },
  {
    "start": "1150000",
    "end": "1196000"
  },
  {
    "text": "like so while watching the game of Life play out and its zero player existence",
    "start": "1150520",
    "end": "1156000"
  },
  {
    "text": "over and over is the most fun I personally can possibly imagine I think most people want a little bit more from",
    "start": "1156000",
    "end": "1161679"
  },
  {
    "text": "their games so I want to talk about input handling a little bit so input handling subsystems are used to convert",
    "start": "1161679",
    "end": "1168159"
  },
  {
    "text": "input from things like game pads and mice and keyboards through what we would call a key map or or a button map into",
    "start": "1168159",
    "end": "1175039"
  },
  {
    "text": "desired game actions so kind of requests for changes in the game world that you can pass around the game this is this is",
    "start": "1175039",
    "end": "1181480"
  },
  {
    "text": "useful because it allows you to kind of both decouple input from action and",
    "start": "1181480",
    "end": "1187000"
  },
  {
    "text": "allows you know people to override key bindings which is great for accessibility and all the Esports",
    "start": "1187000",
    "end": "1192480"
  },
  {
    "text": "Masters looking to beat your key bindings so we're going to need a game",
    "start": "1192480",
    "end": "1198000"
  },
  {
    "start": "1196000",
    "end": "1228000"
  },
  {
    "text": "to rip off our next example after we ripped off the game of life and there's an excellent Little Indie platform game",
    "start": "1198000",
    "end": "1204240"
  },
  {
    "text": "that started Life as a flash game in the 2010s called Thomas Was Alone now it's a",
    "start": "1204240",
    "end": "1209640"
  },
  {
    "text": "game about a computer Mainframe going wild and malfunctioning Ai and you should probably play it it's really cool",
    "start": "1209640",
    "end": "1215400"
  },
  {
    "text": "uh but most importantly all of its characters are just various Square objects that you can see playing in the",
    "start": "1215400",
    "end": "1221000"
  },
  {
    "text": "video there so we're going to make our own version of this game I'm going to call it David was alone and we're going to start with input handling",
    "start": "1221000",
    "end": "1229360"
  },
  {
    "start": "1228000",
    "end": "1379000"
  },
  {
    "text": "so this should be a bit bigger even if the contrast is bad because it's beautiful in here um building on our own",
    "start": "1229360",
    "end": "1236200"
  },
  {
    "text": "glorious Game of Life engine we're going to add a new interface an I input device for our engine now the input device",
    "start": "1236200",
    "end": "1242880"
  },
  {
    "text": "implementations are going to be responsible for mapping input to an object containing the currently requested game actions now thankfully",
    "start": "1242880",
    "end": "1250159"
  },
  {
    "text": "modern web browsers are really good at this and they can deal with about any form of uh input by default so that",
    "start": "1250159",
    "end": "1256840"
  },
  {
    "text": "includes game pads touch and obviously mouse and keyboard so here what we're doing is",
    "start": "1256840",
    "end": "1263520"
  },
  {
    "text": "we're updating our engine to keep track of a connected input device in an array and then we're going to modify our game",
    "start": "1263520",
    "end": "1269440"
  },
  {
    "text": "Loop to pass this collection of input devices to our scene on each update scan so the scene can call into this",
    "start": "1269440",
    "end": "1276480"
  },
  {
    "text": "interface and see what game actions the user has requested finally obviously exposing a function for our startup code",
    "start": "1276480",
    "end": "1283120"
  },
  {
    "text": "to connect input devices so this is our keyboard class you don't need to again to read it",
    "start": "1283120",
    "end": "1289520"
  },
  {
    "text": "carefully what we're doing is we're just wrapping the browser event listener on key down and on key up and um and what",
    "start": "1289520",
    "end": "1296159"
  },
  {
    "text": "we're doing is we're keeping track of which button is pressed in a set so we can query it inside of our scene so when",
    "start": "1296159",
    "end": "1303240"
  },
  {
    "text": "get current actions is called what we do is we return this actions object which sets States for left and right and jump",
    "start": "1303240",
    "end": "1310480"
  },
  {
    "text": "all the things you need for a modern video game and you can see here again you don't need to read it the GamePad API",
    "start": "1310480",
    "end": "1317120"
  },
  {
    "text": "isn't much more complicated all we're really doing is detecting USB connection events and keeping track of a Gamepad ID",
    "start": "1317120",
    "end": "1324120"
  },
  {
    "text": "and what this does is it allows us to use a d-pad on any standard Xbox or PlayStation controller connected via USB",
    "start": "1324120",
    "end": "1330480"
  },
  {
    "text": "the browser just supports this stuff super awesome um so we're keeping track of which Gamepad is connected and",
    "start": "1330480",
    "end": "1335720"
  },
  {
    "text": "querying its uh button State on line 26 at the bottom",
    "start": "1335720",
    "end": "1341360"
  },
  {
    "text": "there and then finally in our level seam we can flatten all the controller inputs down so there's a bit of a a a reduce",
    "start": "1341360",
    "end": "1349039"
  },
  {
    "text": "here that checks the state of each button and then we can move all of our hardcoded player character object when a",
    "start": "1349039",
    "end": "1355840"
  },
  {
    "text": "valid game action is requested so luckily David was alone is entirely made up of squares so our existing renderer",
    "start": "1355840",
    "end": "1362559"
  },
  {
    "text": "is perfect for the job and I can draw a glorious square and it works fine and it's perfect so up in the top corner you",
    "start": "1362559",
    "end": "1369400"
  },
  {
    "text": "can see where we changed the index page and what we've done is we've added our keyboard and controller inputs by",
    "start": "1369400",
    "end": "1374440"
  },
  {
    "text": "calling that connected devices sorry connect input devices function",
    "start": "1374440",
    "end": "1380120"
  },
  {
    "text": "so David might be able to move but he's Defying Gravity and he's still very very",
    "start": "1380120",
    "end": "1385320"
  },
  {
    "text": "alone and all we're doing here really is just moving a square just an x y coordinate when uh and that gets",
    "start": "1385320",
    "end": "1392240"
  },
  {
    "text": "rendered on a canvas which is reset to White on every Loop so it's not really a character with any behaviors it's just",
    "start": "1392240",
    "end": "1400000"
  },
  {
    "text": "really two coordinates and a square that we're moving so let's make that a bit more sophisticated",
    "start": "1400000",
    "end": "1407080"
  },
  {
    "start": "1406000",
    "end": "1502000"
  },
  {
    "text": "now at the moment we don't really have a player character in our game um game",
    "start": "1411000",
    "end": "1416120"
  },
  {
    "text": "engines generally keep track of what we call entities and just like in any other kind of program an entity is at the very",
    "start": "1416120",
    "end": "1422360"
  },
  {
    "text": "least a collection of data sometimes stored alongside the behavior um in kind",
    "start": "1422360",
    "end": "1428039"
  },
  {
    "text": "of a traditional oo model now building game entities for Behavior helps us keep",
    "start": "1428039",
    "end": "1433320"
  },
  {
    "text": "all of our logic out of the main scene and organize our code better it's it's literally just a structural organization",
    "start": "1433320",
    "end": "1439640"
  },
  {
    "text": "pattern for for Game Dev and to add the concept of entities to our code base what we're going to do",
    "start": "1439640",
    "end": "1446080"
  },
  {
    "text": "is we're going to firstly create a new draw function in our renderer this will keep all the display logic abstracted",
    "start": "1446080",
    "end": "1452240"
  },
  {
    "text": "from the core of the game operations and then what we're going to do is we're going to add a few new interfaces something called I updatable that",
    "start": "1452240",
    "end": "1458799"
  },
  {
    "text": "describes anything at all in the game world that can be updated when the game ticks and then a game entity that has a",
    "start": "1458799",
    "end": "1465480"
  },
  {
    "text": "physical location in the game world so that just means an X and A Y and a width and a height which itself is then",
    "start": "1465480",
    "end": "1472799"
  },
  {
    "text": "updatable and you can kind of see where I'm going here right we can then we can move all of our logic from updating our",
    "start": "1472799",
    "end": "1478600"
  },
  {
    "text": "player into this new player character entity and that generalizes our level scene more which is now just responsible",
    "start": "1478600",
    "end": "1485760"
  },
  {
    "text": "for calling update on every single entity that it's keeping track with that's stored inside the scene and while",
    "start": "1485760",
    "end": "1491840"
  },
  {
    "text": "it might feel like we're just moving code around this this basically means that we can now add other kinds of entities to the scene that all tick and",
    "start": "1491840",
    "end": "1499440"
  },
  {
    "text": "all get rendered by the renderer now another really common",
    "start": "1499440",
    "end": "1505399"
  },
  {
    "start": "1502000",
    "end": "1700000"
  },
  {
    "text": "approach in game development is to is to implement something called entity component systems so the language here is a little",
    "start": "1505399",
    "end": "1512399"
  },
  {
    "text": "bit tricky because everything in programming means three things so let's talk about the terminology right so in a",
    "start": "1512399",
    "end": "1518320"
  },
  {
    "text": "traditional object-oriented design data is collocated with the functions that apply to it so commonly modeled as",
    "start": "1518320",
    "end": "1525240"
  },
  {
    "text": "classes in most of your programming languages now games in the the late 90s notably if anyone remembers thief the",
    "start": "1525240",
    "end": "1530880"
  },
  {
    "text": "Dark Ages they pioneered this idea um of entity component systems though the name",
    "start": "1530880",
    "end": "1536320"
  },
  {
    "text": "didn't exist at the time um and they were almost the opposite of oo where the data and the state of the system doesn't",
    "start": "1536320",
    "end": "1543080"
  },
  {
    "text": "contain the behaviors at all it's just the raw structured data and there's a registration table of some kind now it",
    "start": "1543080",
    "end": "1549480"
  },
  {
    "text": "depends on the engine as to how this is implemented um that ties that data to",
    "start": "1549480",
    "end": "1555320"
  },
  {
    "text": "the various systems that apply to that data called components in this analogy",
    "start": "1555320",
    "end": "1561120"
  },
  {
    "text": "and then every tick those systems running get handed the data that is registered for them and they increment",
    "start": "1561120",
    "end": "1566600"
  },
  {
    "text": "the state now this changes our relationship from updating each object in memory to running the AI system and",
    "start": "1566600",
    "end": "1573320"
  },
  {
    "text": "process the logic run the rendering system run the movement Run the game logic um so it's a bit a little bit like",
    "start": "1573320",
    "end": "1580640"
  },
  {
    "text": "a visitor pattern if you've ever implemented one of those in like standard development now inspired by this though",
    "start": "1580640",
    "end": "1588679"
  },
  {
    "text": "not explicitly an ECS in the 2D engines I built I like the idea of introducing this concept of characteristics so",
    "start": "1588679",
    "end": "1595840"
  },
  {
    "text": "attributes that entities can maintain a subscription to that can be used by multiple entities in the game world so",
    "start": "1595840",
    "end": "1603240"
  },
  {
    "text": "for example both the player and enemies can be physics objects that gravity applies to maybe something can be",
    "start": "1603240",
    "end": "1610080"
  },
  {
    "text": "killable or jumpable so I like using the word characteristics or behaviors because it",
    "start": "1610080",
    "end": "1616159"
  },
  {
    "text": "avoids this often overloaded component language used in ECS because like",
    "start": "1616159",
    "end": "1622000"
  },
  {
    "text": "component means about 30 things I can think of so to adapt our engine we've added an update context that contains",
    "start": "1622000",
    "end": "1628840"
  },
  {
    "text": "our game state to be passed around on each update of the game Loop and we modified our game entity to contain an",
    "start": "1628840",
    "end": "1634760"
  },
  {
    "text": "array of characteristics that are themselves updatable now of course we added a very",
    "start": "1634760",
    "end": "1641399"
  },
  {
    "text": "simple interface for characteristics to to implement where they can execute logic as well kind of big",
    "start": "1641399",
    "end": "1648799"
  },
  {
    "text": "enough now our level scene is now responsible for just triggering the update function of any characteristics",
    "start": "1648799",
    "end": "1654840"
  },
  {
    "text": "that our entities happen to have applied to them and then optionally calling update if there's any further logic",
    "start": "1654840",
    "end": "1660760"
  },
  {
    "text": "that's contained inside of our entities so we got these two different places to put logic stuff for just that entity and",
    "start": "1660760",
    "end": "1666960"
  },
  {
    "text": "stuff that applies to lots of different entities which gives us a nice way to do kind of composition over inheritance",
    "start": "1666960",
    "end": "1674880"
  },
  {
    "text": "reuse so it Slims down our entity cluster minimum right so one of the nice",
    "start": "1674880",
    "end": "1680440"
  },
  {
    "text": "things about generalizing these behaviors is that you can take one system and apply it to lots of different",
    "start": "1680440",
    "end": "1686399"
  },
  {
    "text": "kinds of entities and you'll notice in this example I'm just adding an instance of the characteristic to an array rather",
    "start": "1686399",
    "end": "1692480"
  },
  {
    "text": "than using like a registration table that we resolve at runtime mostly because it's just easier for a small",
    "start": "1692480",
    "end": "1699840"
  },
  {
    "text": "example now while moving our existing Behavior into an ECS like structure",
    "start": "1699840",
    "end": "1705960"
  },
  {
    "start": "1700000",
    "end": "1733000"
  },
  {
    "text": "might make our code look a little bit neater uh it it also has prepared us for adding",
    "start": "1705960",
    "end": "1711120"
  },
  {
    "text": "physics to the toy engine because having physics apply to something can be implemented as a characteristic so",
    "start": "1711120",
    "end": "1717640"
  },
  {
    "text": "physics simulations are complicated and I can't do maths and they're hard and being realistic makes them not fun and",
    "start": "1717640",
    "end": "1723919"
  },
  {
    "text": "basically they all suck um so for a 2d platforming game we're just going to do",
    "start": "1723919",
    "end": "1729960"
  },
  {
    "text": "Mario physics right Mario physics is easy so first to do Mario physics we",
    "start": "1729960",
    "end": "1735720"
  },
  {
    "start": "1733000",
    "end": "1897000"
  },
  {
    "text": "need to rework how we Implement our controls so rather than just kind of forcefully moving a square left and",
    "start": "1735720",
    "end": "1741440"
  },
  {
    "text": "right we're going to set a velocity right so something gets faster and gets slower and we're going to add some",
    "start": "1741440",
    "end": "1747919"
  },
  {
    "text": "variables to store the current object X and Y and velocity and Define a bit of a",
    "start": "1747919",
    "end": "1753200"
  },
  {
    "text": "weight which will help us Implement jumping and falling and also a flag to tell if we're jumping now we've set",
    "start": "1753200",
    "end": "1759360"
  },
  {
    "text": "these values in our player character class but we're also adding a new physics object characteristic after the",
    "start": "1759360",
    "end": "1765120"
  },
  {
    "text": "existing controllable one that lets us move our Square around so next all we're going to do is",
    "start": "1765120",
    "end": "1771760"
  },
  {
    "text": "we're going to go back to that controllable characteristic and instead of setting a value we're going to instead increment or decrement of",
    "start": "1771760",
    "end": "1778279"
  },
  {
    "text": "velocity when keys are pressed up to a maximum cap and we're also going to add",
    "start": "1778279",
    "end": "1784080"
  },
  {
    "text": "support for jumping by setting a velocity y um value when someone requests that jump",
    "start": "1784080",
    "end": "1791440"
  },
  {
    "text": "action so now finally we can Implement our physics object car characteristic now",
    "start": "1792080",
    "end": "1799480"
  },
  {
    "text": "I'm not going to reproduce the entire kind of characteristic here but I want to call out a few important things",
    "start": "1799480",
    "end": "1805039"
  },
  {
    "text": "firstly we're going to calculate some Collision points that line the bottom pixels and the middle point of our box",
    "start": "1805039",
    "end": "1811480"
  },
  {
    "text": "now this is important because it gives you Collision detection both a solid way to find the ground you see if anything",
    "start": "1811480",
    "end": "1816720"
  },
  {
    "text": "at that bottom is is touching the floor um but also it's a little bit of a it",
    "start": "1816720",
    "end": "1821840"
  },
  {
    "text": "gives you a little bit of give when you're colliding during jumps cuz what you don't want to play in a 2d platform",
    "start": "1821840",
    "end": "1827039"
  },
  {
    "text": "game is where every time you Bang Your Head on the top of a platform you fall to the floor again right you like a",
    "start": "1827039",
    "end": "1832960"
  },
  {
    "text": "little bit of overlap and a little bit of nice gentle give and then finally we we apply gravity right and we're going",
    "start": "1832960",
    "end": "1839640"
  },
  {
    "text": "to implement jumping by splitting the amount of time it should take for our object to Fall by our 60 frames a second",
    "start": "1839640",
    "end": "1845919"
  },
  {
    "text": "frame rate and just slowly decrease the upwards velocity of our character until it reaches zero and then the graphic the",
    "start": "1845919",
    "end": "1853880"
  },
  {
    "text": "the physics code that makes the uh the character fall again until it reaches the Flor will just take into effect so",
    "start": "1853880",
    "end": "1860120"
  },
  {
    "text": "combine those two things we have a control that sets the velocity which means when someone presses a jump key",
    "start": "1860120",
    "end": "1866159"
  },
  {
    "text": "they will first move upwards and then they will slowly slow down and fall in an arc like Mario it's kind of pleasing",
    "start": "1866159",
    "end": "1872760"
  },
  {
    "text": "so actually implementing the falling is done when we calculate gravity right so a speed that the entity will fall per",
    "start": "1872760",
    "end": "1878840"
  },
  {
    "text": "game update is set and if they're never not on Solid Ground we just move them downwards increasing the speed until",
    "start": "1878840",
    "end": "1885080"
  },
  {
    "text": "they reach a terminal velocity for their weight now after adjusting our X and Y velocities we apply movement to The",
    "start": "1885080",
    "end": "1891360"
  },
  {
    "text": "Entity to shift it to the next location in the screen so this is just happening every single",
    "start": "1891360",
    "end": "1897639"
  },
  {
    "start": "1897000",
    "end": "1908000"
  },
  {
    "text": "tick and and this is what our game engine and seal and our scene files look like at this point he can fall David can",
    "start": "1897639",
    "end": "1904679"
  },
  {
    "text": "jump but he's definitely still alone so anyone heard of blue Peter",
    "start": "1904679",
    "end": "1912159"
  },
  {
    "start": "1908000",
    "end": "1974000"
  },
  {
    "text": "who's British in the room okay perfect now in the UK we have this kids TV show",
    "start": "1912159",
    "end": "1917600"
  },
  {
    "text": "called blue Peter it's the longest running kids TV show in the world and they frequently show you how to build",
    "start": "1917600",
    "end": "1922799"
  },
  {
    "text": "things out of kind of paper cups and bits of cardboard and they have this great popular phrase here's one I made",
    "start": "1922799",
    "end": "1928600"
  },
  {
    "text": "earlier now if you will allow me a bit of a blue Peter moment here I'm going to switch gears as we move to our next",
    "start": "1928600",
    "end": "1934440"
  },
  {
    "text": "example um so a couple of years ago during preparation for a conference Booth I spent a furious 10 days building",
    "start": "1934440",
    "end": "1941360"
  },
  {
    "text": "a 2d game Engine That Could run in a web browser now the idea was that attendees could walk by and play the game compl",
    "start": "1941360",
    "end": "1947880"
  },
  {
    "text": "beating asynchronously with everyone else that day in like a Mario Kart inspired ghost race against themselves",
    "start": "1947880",
    "end": "1953760"
  },
  {
    "text": "it's quite fun um it had to run on a booth on mobile phones and work with controllers and not suck um so as we",
    "start": "1953760",
    "end": "1960880"
  },
  {
    "text": "move on to the talking about Graphics I'd like to introduce you to the magnum opus that is I am Jam the game where you",
    "start": "1960880",
    "end": "1969840"
  },
  {
    "text": "a humble orange try to become Jam so here's here's the one we made",
    "start": "1969840",
    "end": "1976399"
  },
  {
    "start": "1974000",
    "end": "2014000"
  },
  {
    "text": "earlier um so so while I was working on the nuts and bolts of this game engine to make all the stuff hang together Joe",
    "start": "1976399",
    "end": "1982080"
  },
  {
    "text": "who's sitting in the front here who uh was working on all of this gorgeous pixel art to make the thing actually",
    "start": "1982080",
    "end": "1989000"
  },
  {
    "text": "come to life and work um I can't do this that's that's a lot of pixels um so",
    "start": "1989000",
    "end": "1994440"
  },
  {
    "text": "other than how good they all look there's nothing special about the graphics here you know there's a couple of jpegs of background art some key",
    "start": "1994440",
    "end": "2000840"
  },
  {
    "text": "frames for enemy mice that try to eat our Intrepid orange and some kind of cute clutter objects now we need to get",
    "start": "2000840",
    "end": "2007639"
  },
  {
    "text": "the into our game engine so we can draw more than just squares right so this is why we need",
    "start": "2007639",
    "end": "2013679"
  },
  {
    "start": "2014000",
    "end": "2161000"
  },
  {
    "text": "Sprites so Sprites uh animation sheets made up several images that get played",
    "start": "2014200",
    "end": "2020080"
  },
  {
    "text": "like an animation they're like um a digital version of a flip book that you would draw as a kid so much like our",
    "start": "2020080",
    "end": "2026399"
  },
  {
    "text": "earlier player character entity in the code base for IM am gem we had to design an entity that keeps track of the",
    "start": "2026399",
    "end": "2032360"
  },
  {
    "text": "animation frames so we can increment them correctly to animate as the game plays out step them forwards so our game",
    "start": "2032360",
    "end": "2039320"
  },
  {
    "text": "used two conventions we supported animated gifs which we would write to our canvas element in the browser",
    "start": "2039320",
    "end": "2045960"
  },
  {
    "text": "directly and it supported a series of images that we could load sequentially and sequence them and pack them together",
    "start": "2045960",
    "end": "2052919"
  },
  {
    "text": "now 2D engines tend to use either flap files which is something that gets called Sprite sheets often which are",
    "start": "2052919",
    "end": "2059240"
  },
  {
    "text": "normally one big image with an offset that you chunk through um normally in a line and you just kind of shift the",
    "start": "2059240",
    "end": "2065158"
  },
  {
    "text": "offset as you read them like a flip book um but in our case we just had a load of single files on the dis that we loaded",
    "start": "2065159",
    "end": "2070679"
  },
  {
    "text": "from a web server because we've got like 20 images now this is the character class",
    "start": "2070679",
    "end": "2077240"
  },
  {
    "text": "for IM IM Jam it's a touch busier than the one from David Was Alone um and we",
    "start": "2077240",
    "end": "2082398"
  },
  {
    "text": "have two Sprites associated with our character so there's only really the bid at the bottom that's important um our character class",
    "start": "2082399",
    "end": "2089118"
  },
  {
    "text": "initializes its Sprite when it loads and each time the game updates it's uh we called it tick here uh it it calls tick",
    "start": "2089119",
    "end": "2096720"
  },
  {
    "text": "on the Sprite and the Sprite chooses whether it needs to step its frame forwards now our drawing logic is also a",
    "start": "2096720",
    "end": "2102800"
  },
  {
    "text": "little bit more complicated because of the character State you got to check if they're standing still or they're moving",
    "start": "2102800",
    "end": "2108079"
  },
  {
    "text": "or they're jumping because you want to pick a specific frame when they're doing those things um but once we work out if",
    "start": "2108079",
    "end": "2113960"
  },
  {
    "text": "we're alive or dead and if we're moving or not we just call draw and the Sprite function does the the heavy lifting to",
    "start": "2113960",
    "end": "2120480"
  },
  {
    "text": "select the appropriate image to draw to the canvas now the Sprite class is responsible for loading all the frames",
    "start": "2120480",
    "end": "2126920"
  },
  {
    "text": "in a sequence and the other thing it has to do is it has to create flipped versions of the Sprites when things run left to right",
    "start": "2126920",
    "end": "2134440"
  },
  {
    "text": "and right to left so we do a little bit of image processing um done with the confusingly named but still awesome lib",
    "start": "2134440",
    "end": "2141560"
  },
  {
    "text": "GIF uh so every five updates to the game the frame counter will proceed and then",
    "start": "2141560",
    "end": "2147000"
  },
  {
    "text": "when the Sprite class is asked to draw it will draw the next frame and draw the next frame now this class is responsible",
    "start": "2147000",
    "end": "2153520"
  },
  {
    "text": "for drawing the image onto our canvas directly because the renderer and IM Jam is a little bit different from our",
    "start": "2153520",
    "end": "2159200"
  },
  {
    "text": "previous example and it works beautiful mice has",
    "start": "2159200",
    "end": "2164760"
  },
  {
    "start": "2161000",
    "end": "2170000"
  },
  {
    "text": "anyone ever said",
    "start": "2164760",
    "end": "2167440"
  },
  {
    "text": "that so in a 2d game layers are rendered on top of each other to create this",
    "start": "2169839",
    "end": "2176040"
  },
  {
    "start": "2170000",
    "end": "2288000"
  },
  {
    "text": "sense of depth right and you'll see this in all the classics you know your Sonics with your Parallax scrolling and your",
    "start": "2176040",
    "end": "2181880"
  },
  {
    "text": "Marios where you can run behind things so what tends to happen is um visual elements are ordered from back to front",
    "start": "2181880",
    "end": "2188680"
  },
  {
    "text": "kind of like using a Photoshop layer we have the background layer which is the furthest layer away from the viewer that",
    "start": "2188680",
    "end": "2194200"
  },
  {
    "text": "normally contains static images that set the scene sometimes you'll have a couple of backgrounds that scroll you have the",
    "start": "2194200",
    "end": "2200920"
  },
  {
    "text": "the the middle ground layer that tends to add elements that are closer to the viewer but the character always runs in",
    "start": "2200920",
    "end": "2206240"
  },
  {
    "text": "front of and then generally the foreground layer where the player character runs ahead and you will get all of the assets that you need to",
    "start": "2206240",
    "end": "2212319"
  },
  {
    "text": "render and you will draw them back to front um because our background is one big image we just really laying game",
    "start": "2212319",
    "end": "2219160"
  },
  {
    "text": "entities on top of an image and we've got a bit of a z index system so there's a couple of things that we put in the",
    "start": "2219160",
    "end": "2224640"
  },
  {
    "text": "scene like um bottles of jam that you can run in front of and a couple of other assets that are cool so you can",
    "start": "2224640",
    "end": "2231000"
  },
  {
    "text": "see an example of the way our items overlaid here with this slightly translucent jug and I'll show you the",
    "start": "2231000",
    "end": "2236359"
  },
  {
    "text": "game running in a in a bit and you you'll kind of see this all folded down these two",
    "start": "2236359",
    "end": "2241920"
  },
  {
    "text": "perspectives so for this game we implemented a super lowii camera that worked out what where what to draw in",
    "start": "2242160",
    "end": "2249400"
  },
  {
    "text": "our canvas based on the player's position in the world and it basically just Scrolls the background and all the",
    "start": "2249400",
    "end": "2255000"
  },
  {
    "text": "assets left and right and the player character never really goes anything at all never really goes anywhere at all",
    "start": "2255000",
    "end": "2261079"
  },
  {
    "text": "and the illusion is maintained um the other thing that it has to do though is when you start at the leftmost edge of",
    "start": "2261079",
    "end": "2267760"
  },
  {
    "text": "the screen and the rightmost edge of the screen actually has to finally move that player Sprite so we have this tiny kind",
    "start": "2267760",
    "end": "2273880"
  },
  {
    "text": "of to Canvas position uh class to convert all of our Sprite locations to",
    "start": "2273880",
    "end": "2279160"
  },
  {
    "text": "where they should be rendered and obviously anything that's rendered off the minus axis on the left or off the",
    "start": "2279160",
    "end": "2285160"
  },
  {
    "text": "width of the canvas just",
    "start": "2285160",
    "end": "2288280"
  },
  {
    "start": "2288000",
    "end": "2339000"
  },
  {
    "text": "disappears now traditional 2D games are often made up of tile sets and level",
    "start": "2291400",
    "end": "2296720"
  },
  {
    "text": "data and the idea is like old systems didn't necessarily have the amount of memory to have these big jpegs stored in",
    "start": "2296720",
    "end": "2304119"
  },
  {
    "text": "memory so you would have repeating tiles that would have different attributes associated with them and the level data",
    "start": "2304119",
    "end": "2310400"
  },
  {
    "text": "would just really be a pointer to that little chunk of level and they were tiled across the screen now frequently",
    "start": "2310400",
    "end": "2317480"
  },
  {
    "text": "those level tiles would be things like they would be passable or destructible or solid uh when rendered now it's good",
    "start": "2317480",
    "end": "2324599"
  },
  {
    "text": "for memory efficiency because you know we're blessed with Modern Hardware today",
    "start": "2324599",
    "end": "2329760"
  },
  {
    "text": "our whole jpegs 130 kilobytes so I decided to not do any performance optimization to that I don't think I",
    "start": "2329760",
    "end": "2336079"
  },
  {
    "text": "could improve on the JP standard so in this 2D engine we're",
    "start": "2336079",
    "end": "2341760"
  },
  {
    "start": "2339000",
    "end": "2498000"
  },
  {
    "text": "using something called bounded box collision and collision detection is very very complicated in different kinds",
    "start": "2341760",
    "end": "2347000"
  },
  {
    "text": "of game engines but in 2D it's quite simple now each of our entities has this box drawn around it with various",
    "start": "2347000",
    "end": "2353400"
  },
  {
    "text": "Collision points like we talked about before so we line of collision points at the bottom one in the center some around",
    "start": "2353400",
    "end": "2359400"
  },
  {
    "text": "the corners and we can set up where we want the Collision points to be so it's not always the square box that's",
    "start": "2359400",
    "end": "2364920"
  },
  {
    "text": "colliding and you can have odd-shaped objects now each of our this is relatively",
    "start": "2364920",
    "end": "2370200"
  },
  {
    "text": "inexpensive because as the game ticks the uh the player character just checks if any of its specific points are",
    "start": "2370200",
    "end": "2377319"
  },
  {
    "text": "colliding with the environment and um what we make this even cheaper by using those hot spots around our box so for",
    "start": "2377319",
    "end": "2384240"
  },
  {
    "text": "instance the four corners and we just check if they've crossed over the coordinates of each other to see if those boxes are intersecting so if",
    "start": "2384240",
    "end": "2391400"
  },
  {
    "text": "you've ever used an engine like unity and um you might have heard the Collision detection routines called box",
    "start": "2391400",
    "end": "2397520"
  },
  {
    "text": "colliders or the wonderfully opaque AABB which stands for axis aligned",
    "start": "2397520",
    "end": "2403319"
  },
  {
    "text": "bounding boxes wonderful um that's kind of the Collision detection used in a lot of simple 3D",
    "start": "2403319",
    "end": "2410640"
  },
  {
    "text": "games so we're using this fun little hack for level geometry in our game for Collision detection so we have this",
    "start": "2410640",
    "end": "2417760"
  },
  {
    "text": "second image that matches exactly our level in dimensions and uh we just",
    "start": "2417760",
    "end": "2423880"
  },
  {
    "text": "painted it in black and white brilliant hack um so so we use the colors of specific parts of the level to determine",
    "start": "2423880",
    "end": "2430480"
  },
  {
    "text": "if Terrain is solid if it'll kill you all the the scary red stuff or if it's",
    "start": "2430480",
    "end": "2435880"
  },
  {
    "text": "the end Target goal the green stuff so this is really really easy to do in the browser because the native API support",
    "start": "2435880",
    "end": "2441760"
  },
  {
    "text": "this trivially we're just loading the Collision map jpeg in an invisible canvas and we know that our player",
    "start": "2441760",
    "end": "2448520"
  },
  {
    "text": "location is going to be the same in the world as it is on the Collision map and we just use the the get image data API",
    "start": "2448520",
    "end": "2455319"
  },
  {
    "text": "with the XY coordinates to to pluck out the color of each of our Collision points and check if we can move or not",
    "start": "2455319",
    "end": "2461680"
  },
  {
    "text": "so pretty simple if you know if you had a drastically larger level this approach would be probably not very scalable but",
    "start": "2461680",
    "end": "2469440"
  },
  {
    "text": "for levels that are like a minute or two long actually it's a really simple and intuitive way to encode this data that's",
    "start": "2469440",
    "end": "2476359"
  },
  {
    "text": "really easy to edit and a lot of the things that you get with modern game engines are easy editors and uh all I",
    "start": "2476359",
    "end": "2482640"
  },
  {
    "text": "have is paint so the Collision detection code in this version of game engine just scans",
    "start": "2482640",
    "end": "2488720"
  },
  {
    "text": "downward to find the black color to determine if we're on the uh the Solid Ground if you're in a passable State",
    "start": "2488720",
    "end": "2494680"
  },
  {
    "text": "otherwise our characters can move freely so our enemy Collision mostly Works",
    "start": "2494680",
    "end": "2502000"
  },
  {
    "start": "2498000",
    "end": "2604000"
  },
  {
    "text": "based on those hot spots and this is a debug mode that I built into the engine you know I think the easiest way to",
    "start": "2502000",
    "end": "2507800"
  },
  {
    "text": "understand it is just to see it running and the gem gang contains this view where we just render the Collision",
    "start": "2507800",
    "end": "2513280"
  },
  {
    "text": "points in red on the UI now this technique allows us to make sure that we can get some nice game feel you you",
    "start": "2513280",
    "end": "2520520"
  },
  {
    "text": "could see that actually if I I realize I need to go back again to make that play you'll notice actually we're only really",
    "start": "2520520",
    "end": "2526520"
  },
  {
    "text": "checking the floor and the center point right and it means that that box when it jumps over that weird boxy Mouse doesn't",
    "start": "2526520",
    "end": "2533480"
  },
  {
    "text": "die if he lands on the back half of the mouse as it's running away because if every time you clip The Edge it would",
    "start": "2533480",
    "end": "2539160"
  },
  {
    "text": "feel horrible so a lot of 2D platform game feel is a combination of the way that your physics feel and the",
    "start": "2539160",
    "end": "2545440"
  },
  {
    "text": "sensitivity and forgiveness B into your Collision detection you'll find lots and lots of 2D games especially that do",
    "start": "2545440",
    "end": "2551599"
  },
  {
    "text": "things like if you uh if you think you missed that jump no you didn't no you didn't if you were about five pixels",
    "start": "2551599",
    "end": "2557680"
  },
  {
    "text": "away you definitely made that jump don't worry about it right and that makes games feel",
    "start": "2557680",
    "end": "2562960"
  },
  {
    "text": "good now our code to deal with the player death exists in the update function of our enemy entity actually so",
    "start": "2562960",
    "end": "2570200"
  },
  {
    "text": "every time the enemy updates it just checks who it's colliding with and if it happens to be the player and the player",
    "start": "2570200",
    "end": "2576400"
  },
  {
    "text": "happens to be live it'll find that behavior of killable and say hey killable Behavior execute and what that",
    "start": "2576400",
    "end": "2583640"
  },
  {
    "text": "does is it sets the state to dead on the player and ends the game um you can Implement all sorts of different entity",
    "start": "2583640",
    "end": "2590040"
  },
  {
    "text": "interactions in the same manner and that's why having characteristics is really useful because you can generalize",
    "start": "2590040",
    "end": "2595280"
  },
  {
    "text": "that stuff and not have to write like a killable player a killable enemy 10 different variations of the killable",
    "start": "2595280",
    "end": "2601359"
  },
  {
    "text": "enemy Etc",
    "start": "2601359",
    "end": "2604960"
  },
  {
    "start": "2604000",
    "end": "2876000"
  },
  {
    "text": "let's talk about AI so AI use in games is a huge and vast topic that covers",
    "start": "2607760",
    "end": "2614559"
  },
  {
    "text": "multiple different approaches and programming Styles here that would be impossible to dent in a couple of slides",
    "start": "2614559",
    "end": "2621440"
  },
  {
    "text": "now the way it's triggered however is generally consistent with all the other game Loop driven updates in the game so",
    "start": "2621440",
    "end": "2627520"
  },
  {
    "text": "every nth tick the AI for each entity uh or the AI subsystem processing the game",
    "start": "2627520",
    "end": "2633200"
  },
  {
    "text": "data if you're doing um an ECS based system execute some logic and makes our",
    "start": "2633200",
    "end": "2638520"
  },
  {
    "text": "players do something now these are some great examples of games with drastically",
    "start": "2638520",
    "end": "2645559"
  },
  {
    "text": "different approaches to AI so most games have some kind of pathf finding AI using",
    "start": "2645559",
    "end": "2651119"
  },
  {
    "text": "either something called navigation meses which are I imagine invisible roads across the game the game world or common",
    "start": "2651119",
    "end": "2657760"
  },
  {
    "text": "algorithms like AAR pathf finding um and then they have a bunch of other series of techniques layered on top of",
    "start": "2657760",
    "end": "2663960"
  },
  {
    "text": "navigation to help the entities choose what they do so games like Halo popularize using",
    "start": "2663960",
    "end": "2669680"
  },
  {
    "text": "something called Behavior trees where characters have sets of actions that they can pick from while uh GOP goal",
    "start": "2669680",
    "end": "2677800"
  },
  {
    "text": "oriented action planning is really popular in games with kind of emerging gameplay systems where entities are",
    "start": "2677800",
    "end": "2684040"
  },
  {
    "text": "given a goal and a set of actions that they can perform along with tests to see if they're getting closer um probably",
    "start": "2684040",
    "end": "2691079"
  },
  {
    "text": "first popularized by the game fear where they had AI agents that got given actions to hunt the play player um the",
    "start": "2691079",
    "end": "2698280"
  },
  {
    "text": "games of the late '90s uh were really big on experimenting with neural networks so creatures and black and",
    "start": "2698280",
    "end": "2705079"
  },
  {
    "text": "white on here used um used neural networks games like doom and halflife",
    "start": "2705079",
    "end": "2710559"
  },
  {
    "text": "used finite State machines which actually continues to be a pretty popular approach and and then finally a",
    "start": "2710559",
    "end": "2716520"
  },
  {
    "text": "bunch of kind of more hybrid AI approaches so you got games like left for dead where they had regular MPC AI",
    "start": "2716520",
    "end": "2723400"
  },
  {
    "text": "but they also had an AI director that not only controlled the enemies but it also had like a state machine where it",
    "start": "2723400",
    "end": "2731119"
  },
  {
    "text": "monitored how active the player was and how stressful the game was for the",
    "start": "2731119",
    "end": "2736640"
  },
  {
    "text": "player and would ratchet up intensity up and down if the player wasn't doing much right so it's kind of competing AI in",
    "start": "2736640",
    "end": "2743319"
  },
  {
    "text": "the same game world so if you're interested in deep Dives about different AI techniques there's a really brilliant",
    "start": "2743319",
    "end": "2748960"
  },
  {
    "text": "kind of substack on YouTube called AI in games um loads and loads of real deep dive videos into all these different",
    "start": "2748960",
    "end": "2754680"
  },
  {
    "text": "kinds of systems absolutely recommend a um however for completeness sake I want",
    "start": "2754680",
    "end": "2760400"
  },
  {
    "text": "us to take a quick look at the um AI in uh IM am",
    "start": "2760400",
    "end": "2766880"
  },
  {
    "text": "Jam so the AI in am Jam uh it it runs from left to right and attempts not to",
    "start": "2766880",
    "end": "2773520"
  },
  {
    "text": "fall off cliffs stunning stunning I mean to be fair me too uh so our simple AI",
    "start": "2773520",
    "end": "2780079"
  },
  {
    "text": "just gives uh the enemy an x velocity of four pixels per tick in whatever",
    "start": "2780079",
    "end": "2785319"
  },
  {
    "text": "Direction it's facing when it spawned and every tick the enemy AI looks ahead",
    "start": "2785319",
    "end": "2790559"
  },
  {
    "text": "and says am I about to fall to my death off a cliff if the answer is yes it",
    "start": "2790559",
    "end": "2795800"
  },
  {
    "text": "turns around um it also checks if it's stuck right so if it's collided with a wall by",
    "start": "2795800",
    "end": "2802160"
  },
  {
    "text": "checking if it's current X location is the same as the one it was adding its last tick and if it's hit a wall it",
    "start": "2802160",
    "end": "2809119"
  },
  {
    "text": "turns around um this means our AI basically will just run backwards and forwards",
    "start": "2809119",
    "end": "2814640"
  },
  {
    "text": "along any platform it spawns on but won't fall into the pits and kills itself which is what the first version",
    "start": "2814640",
    "end": "2820480"
  },
  {
    "text": "of the AI definitely did all the time so originally I'd written this really aggressive AI that made use of this cool",
    "start": "2820480",
    "end": "2827200"
  },
  {
    "text": "off counter that you can see remnants of on like the third line of code there and um the gameplay experience was",
    "start": "2827200",
    "end": "2833359"
  },
  {
    "text": "distinctly unfun because if you ever stop moving for more than about 100",
    "start": "2833359",
    "end": "2838680"
  },
  {
    "text": "milliseconds the mouse would turn around and hunt you down and you could not Escape them it was just like a furious",
    "start": "2838680",
    "end": "2844760"
  },
  {
    "text": "speed run through the match um so I thought it'd be this is a really good example of having to actually tune",
    "start": "2844760",
    "end": "2851280"
  },
  {
    "text": "the AI to be Dumber to make the game more fun and I promise you every video",
    "start": "2851280",
    "end": "2856440"
  },
  {
    "text": "game you ever play has its AI tune to be Dumber to make it fun for you there's lots of um excellent examples of how",
    "start": "2856440",
    "end": "2862640"
  },
  {
    "text": "like for instance in the game Bioshock uh the first shot that an AI enemy takes",
    "start": "2862640",
    "end": "2868559"
  },
  {
    "text": "at you will always miss because it's no fun to be shot in the back by something you didn't see",
    "start": "2868559",
    "end": "2876880"
  },
  {
    "start": "2876000",
    "end": "3054000"
  },
  {
    "text": "so can't really do a whole talk without about building games without letting you play one so I've made a single player",
    "start": "2877000",
    "end": "2883440"
  },
  {
    "text": "version of the IM Jam game where you can race against your own ghosts hopefully",
    "start": "2883440",
    "end": "2888480"
  },
  {
    "text": "this will work if you try it now it should work on your phones with touch input I'll let you work out the controls",
    "start": "2888480",
    "end": "2894000"
  },
  {
    "text": "um or with controllers if you plug an Xbox game uh gam pad in or with a mouse and keyboard I'm kind of super proud",
    "start": "2894000",
    "end": "2901400"
  },
  {
    "text": "about how fun this quick little game turned out especially given the incredible artwork and actually people",
    "start": "2901400",
    "end": "2907599"
  },
  {
    "text": "loved it at the event that it was in so I'm going to try I don't know whether I'm going to be",
    "start": "2907599",
    "end": "2913079"
  },
  {
    "text": "able to play this here on the screen just for the sake of completeness",
    "start": "2913079",
    "end": "2918839"
  },
  {
    "text": "jam there we go it does in fact work now you can see here we can do this oh",
    "start": "2918839",
    "end": "2926760"
  },
  {
    "text": "my mouse cursor is a long way away I'm going to die there's some other cool bits of AI",
    "start": "2926760",
    "end": "2932640"
  },
  {
    "text": "in here right so as we run here there's a really tricky jump here that's really twe",
    "start": "2932640",
    "end": "2938720"
  },
  {
    "text": "uh this this piece of toast is AI that tries to detect the player and jumps when you're",
    "start": "2938720",
    "end": "2943960"
  },
  {
    "text": "nearby and then finally if I can still do this I can make it all the way over",
    "start": "2943960",
    "end": "2949240"
  },
  {
    "text": "here no and hopefully God I'm really really",
    "start": "2949240",
    "end": "2955400"
  },
  {
    "text": "bad at this when I'm playing a a monitor by my feet and I can become Jam",
    "start": "2955400",
    "end": "2962870"
  },
  {
    "text": "[Applause]",
    "start": "2962870",
    "end": "2966639"
  },
  {
    "text": "so there's a huge amount of game engines out there why did I build this um you",
    "start": "2971079",
    "end": "2976359"
  },
  {
    "text": "know what I think you know if you're going to build a game tomorrow just use godo or Unity or mreal or but something",
    "start": "2976359",
    "end": "2982720"
  },
  {
    "text": "honestly and there's about a 100 JavaScript game engines that'll take care of a lot of the rendering code for",
    "start": "2982720",
    "end": "2988079"
  },
  {
    "text": "you that we've gone through in this um but I think if you want to really be serious about making games it's good to",
    "start": "2988079",
    "end": "2993640"
  },
  {
    "text": "understand the Primitive kind of data structures and the way you should structure and engine to make this stuff work so I thought it was really fun and",
    "start": "2993640",
    "end": "3000559"
  },
  {
    "text": "given that this is more of a developer Festival Les less of a conference we should do some fun stuff occasionally um",
    "start": "3000559",
    "end": "3008280"
  },
  {
    "text": "but yes please choose prior art generally I hope you've had fun with this I hope this has been interesting",
    "start": "3008280",
    "end": "3014720"
  },
  {
    "text": "and I hope you've been a bit inspired to go and make your own toys um it's it's fun to program for not",
    "start": "3014720",
    "end": "3021119"
  },
  {
    "text": "money so yeah please have a fun rest of the conference if I see you around I'd love to hang out wrote a kids book about",
    "start": "3021119",
    "end": "3027960"
  },
  {
    "text": "building games for 10-year-old me um that was the book I wanted when I was 10 you can buy it where books are sold um",
    "start": "3027960",
    "end": "3035400"
  },
  {
    "text": "follow me on socials blah blah blah it's my birthday in two days so if you bring",
    "start": "3035400",
    "end": "3040680"
  },
  {
    "text": "me a shot I'll drink it it's a challenge this is how I",
    "start": "3040680",
    "end": "3047359"
  },
  {
    "text": "die thanks everyone really appreciate it",
    "start": "3051520",
    "end": "3056559"
  }
]