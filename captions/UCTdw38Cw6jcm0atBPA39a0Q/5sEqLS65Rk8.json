[
  {
    "start": "0",
    "end": "288000"
  },
  {
    "text": "hello welcome to the second talk in a row and I've got another one this afternoon and I'm doing a pub quiz this",
    "start": "3799",
    "end": "10200"
  },
  {
    "text": "evening and I'm doing pubcon on Friday if you're not who's going to pubcon oh you got to go to pubcon it's",
    "start": "10200",
    "end": "16400"
  },
  {
    "text": "just it's fantastic watch all the proper speakers make complete idiots of themselves yes come drink mainly drink",
    "start": "16400",
    "end": "24840"
  },
  {
    "text": "actually it's funnier if you drink so yes brav new.net",
    "start": "24840",
    "end": "31360"
  },
  {
    "text": "um you may just have seen my my other talk about why I'm not leaving net and",
    "start": "31360",
    "end": "36559"
  },
  {
    "text": "this is where I'm going to dig in more into new net and net core and ASP net",
    "start": "36559",
    "end": "42280"
  },
  {
    "text": "core and what's good about it and the new stuff that you need to learn because",
    "start": "42280",
    "end": "48719"
  },
  {
    "text": "net is now a proper crossplatform Standalone modern open-source",
    "start": "48719",
    "end": "56199"
  },
  {
    "text": "programming language environment framework platform thing and and that",
    "start": "56199",
    "end": "61239"
  },
  {
    "text": "means that there's a whole bunch of new stuff that you need to learn you can the good thing the good thing is that you can forget all the i stuff and all that",
    "start": "61239",
    "end": "69200"
  },
  {
    "text": "XML web.config stuff and all those Powershell commands you can just forget all of that and learn nice easy bash",
    "start": "69200",
    "end": "76159"
  },
  {
    "text": "commands and Json uh configuration and and maybe some yaml or some in files and",
    "start": "76159",
    "end": "83479"
  },
  {
    "text": "environment variables and that sort of thing cuz we have newnet we don't have old.net anymore old old.net was big and",
    "start": "83479",
    "end": "91520"
  },
  {
    "text": "slow and it only ran on Windows and if you look on the techken power benchmarks",
    "start": "91520",
    "end": "96680"
  },
  {
    "text": "with old.net it was doing oh somewhere around 23,000 requests per second for",
    "start": "96680",
    "end": "102600"
  },
  {
    "text": "the plain text Benchmark it was not quick it was easy it was very easy to build applications",
    "start": "102600",
    "end": "109240"
  },
  {
    "text": "with old net but uh they were big and slow and they were quite expensive to",
    "start": "109240",
    "end": "114479"
  },
  {
    "text": "run because you had to have Windows servers and SQL boxes and all this sort of stuff and now we have net core which",
    "start": "114479",
    "end": "121200"
  },
  {
    "text": "is light and fast and agile and this is a Thompson's gazelle which is in the top 10 uh fastest animals on Earth cuz I",
    "start": "121200",
    "end": "128759"
  },
  {
    "text": "didn't want to do the cheatah cuz it seemed too obvious but yes and net core",
    "start": "128759",
    "end": "134160"
  },
  {
    "text": "crossplatform runs on Linux and so now we can spin up Linux boxes and uh using",
    "start": "134160",
    "end": "140720"
  },
  {
    "text": "terraform or um vagrant or whatever and we can deploy our net core code and we",
    "start": "140720",
    "end": "146400"
  },
  {
    "text": "can just pick up the entire thing the CLR and the the run time and the SDK and",
    "start": "146400",
    "end": "152000"
  },
  {
    "text": "we can just bundle it all up into a a zip file or a tar file and then dump it on a Linux box and it'll just run and",
    "start": "152000",
    "end": "158840"
  },
  {
    "text": "pretty soon like I don't know if it's in this year or maybe early next year but you'll be able to do Native compilation",
    "start": "158840",
    "end": "165159"
  },
  {
    "text": "you'll be able to use core RT and do that /t colon link native thing and just",
    "start": "165159",
    "end": "170480"
  },
  {
    "text": "create a single native executable file that is your entire web application and",
    "start": "170480",
    "end": "176280"
  },
  {
    "text": "just pick it up and put it on a machine and go run that and my web application is running and so there's all this new",
    "start": "176280",
    "end": "183159"
  },
  {
    "text": "stuff and all these new things that we need to learn and of course we're developers and if there's one thing that",
    "start": "183159",
    "end": "188680"
  },
  {
    "text": "you can say about developers it is this we fear change we're not good with it we",
    "start": "188680",
    "end": "195000"
  },
  {
    "text": "don't like it when you move our cheese and so um I'm I just want to kind of go",
    "start": "195000",
    "end": "201280"
  },
  {
    "text": "over some of this stuff and and show you some of the really cool things that you can do with new.net that people who've",
    "start": "201280",
    "end": "208439"
  },
  {
    "text": "been doing things like no and Ruby and python have maybe been taking for granted for all this time this",
    "start": "208439",
    "end": "215920"
  },
  {
    "text": "um so we'll we'll kind of cover the the basics and then I'm going to talk a bit",
    "start": "215920",
    "end": "221599"
  },
  {
    "text": "about Docker and then I'm going to talk a bit about microservices because net core and ASP",
    "start": "221599",
    "end": "228080"
  },
  {
    "text": "net core are great for building microservice architectures much better than traditional net when I was still",
    "start": "228080",
    "end": "234760"
  },
  {
    "text": "doing traditional net and aspnet MVC and web API 5 point whatever the hell it's",
    "start": "234760",
    "end": "240280"
  },
  {
    "text": "on um and having to deploy into I app pools and so forth and people started",
    "start": "240280",
    "end": "246920"
  },
  {
    "text": "talking about micro services and I was kind of like that sounds just really complicated and why would I want to do",
    "start": "246920",
    "end": "252239"
  },
  {
    "text": "that once you get into lightweight um Standalone executables that you can just",
    "start": "252239",
    "end": "258120"
  },
  {
    "text": "deploy and put in Docker containers and you get a proper nice devops uh continuous integration continuous",
    "start": "258120",
    "end": "264479"
  },
  {
    "text": "deployment pipeline this stuff starts to make a lot more sense but then once you start creating mic Services you go ah",
    "start": "264479",
    "end": "271039"
  },
  {
    "text": "hang on there's a whole bunch of other stuff that I need to start worrying about now because I've got this one running over here and this one running",
    "start": "271039",
    "end": "276680"
  },
  {
    "text": "over there and I need to worry about partitions and performance and all sorts of other stuff so I'm going to talk a bit about that kind of thing so but so",
    "start": "276680",
    "end": "285080"
  },
  {
    "text": "to start off with uh new things things that are mainly different so the big",
    "start": "285080",
    "end": "291080"
  },
  {
    "start": "288000",
    "end": "385000"
  },
  {
    "text": "difference for an ASB net core application is that it runs on Kestrel",
    "start": "291080",
    "end": "296360"
  },
  {
    "text": "and Kestrel is Microsoft's new n based web server it's a console application so",
    "start": "296360",
    "end": "303120"
  },
  {
    "text": "when you create an aspnet core application you go net new MVC it creates a console application and it's",
    "start": "303120",
    "end": "309960"
  },
  {
    "text": "got a program.cs file and the program.cs file creates a web host and then runs it",
    "start": "309960",
    "end": "315360"
  },
  {
    "text": "and then that carries on running until you press contrl C or kill the process and so this introduces there's no I you",
    "start": "315360",
    "end": "324000"
  },
  {
    "text": "can put it behind I if you run it on Windows and you install the IIs module",
    "start": "324000",
    "end": "329759"
  },
  {
    "text": "IIs is actually just acting as a reverse proxy to the kestral web server so there's no none of that integrated",
    "start": "329759",
    "end": "336600"
  },
  {
    "text": "pipeline that you got in ASP net 4.5 or 4.6 um so this is just a console",
    "start": "336600",
    "end": "342880"
  },
  {
    "text": "application so the configuration story has changed and one of the things that you start uh using a lot more with ASP",
    "start": "342880",
    "end": "350039"
  },
  {
    "text": "net core is environment variables and uh an alternative configuration sources so we're going to look at some of those and",
    "start": "350039",
    "end": "356600"
  },
  {
    "text": "so I've created an application this is an application that I Ed when I do my workshops um and we build this up over a",
    "start": "356600",
    "end": "364000"
  },
  {
    "text": "couple of days and it's uh it's incredibly silly but it's just very",
    "start": "364000",
    "end": "369039"
  },
  {
    "text": "useful for for sorting out the stuff that we need to demonstrate excuse me I've got a frog in my throat is that an",
    "start": "369039",
    "end": "377199"
  },
  {
    "text": "expression in Norway I'm guessing probably",
    "start": "377199",
    "end": "383240"
  },
  {
    "text": "not so this is my application Rocket stop I'm getting ahead of the curve here",
    "start": "383240",
    "end": "389800"
  },
  {
    "start": "385000",
    "end": "900000"
  },
  {
    "text": "I figure that when Elon Musk starts sending regular transports to Mars uh",
    "start": "389800",
    "end": "395400"
  },
  {
    "text": "that's like a six-month Journey um even when Mars is at its closest point so I'm going to hook some asteroids and put",
    "start": "395400",
    "end": "402199"
  },
  {
    "text": "them like every month along the route to Mars and then the Rockets will be able to stop and people be able to get out",
    "start": "402199",
    "end": "407960"
  },
  {
    "text": "and use the toilet and that sort of thing um so I'm I'm getting ahe I",
    "start": "407960",
    "end": "413919"
  },
  {
    "text": "haven't worked out the asteroid bit yet but I figured I'd start writing the software to manage these rocket stops um",
    "start": "413919",
    "end": "419599"
  },
  {
    "text": "along the way okay so I've got my rocket stop application um which I need to exit",
    "start": "419599",
    "end": "425919"
  },
  {
    "text": "PowerPoint and then do the alt tab thing so here is rocket stop this is running in Visual Studio code um and uh I've got",
    "start": "425919",
    "end": "434319"
  },
  {
    "text": "my rocket stop web application here uh with my docking controller and my home",
    "start": "434319",
    "end": "440120"
  },
  {
    "text": "controller and that's that's my sort of MVC application and then I've got an API",
    "start": "440120",
    "end": "446479"
  },
  {
    "text": "application here which is a microservice and this is handling the the docking",
    "start": "446479",
    "end": "452639"
  },
  {
    "text": "data okay now um running these things uh",
    "start": "452639",
    "end": "459479"
  },
  {
    "text": "as microser so in uh if you do this in traditional. net you end up with two web",
    "start": "459479",
    "end": "466039"
  },
  {
    "text": "applications and in the kind of properties page they'll each have a different port and you run it on Local",
    "start": "466039",
    "end": "471520"
  },
  {
    "text": "Host uh something and Local Host something else um when I'm working with",
    "start": "471520",
    "end": "476960"
  },
  {
    "text": "a net core application an aspet core application I have to run them both from the command line and they will default",
    "start": "476960",
    "end": "483520"
  },
  {
    "text": "to running Cal defaults to running on Local Host 5000 if you don't tell it",
    "start": "483520",
    "end": "488680"
  },
  {
    "text": "differently so oh and this is um this is asp.net Core 2 as well where's my CS Pro",
    "start": "488680",
    "end": "496560"
  },
  {
    "text": "File so yes there we go um so you see I'm targeting netc core app 2.0 here",
    "start": "496560",
    "end": "505520"
  },
  {
    "text": "um and the really nice thing uh I don't know if you seen this yet if you went to the to any",
    "start": "505520",
    "end": "512120"
  },
  {
    "text": "of Daman or David's talks you might have seen this but now there is a single meta package that you have to reference",
    "start": "512120",
    "end": "518440"
  },
  {
    "text": "called microsoft. aspnetcore doall and that just pulls in the",
    "start": "518440",
    "end": "523599"
  },
  {
    "text": "entire set of ASP net cor so it's login configuration dependency injection MVC",
    "start": "523600",
    "end": "529640"
  },
  {
    "text": "razor the whole lot the nice thing is that now when you publish your application uh even if you publish it in",
    "start": "529640",
    "end": "536040"
  },
  {
    "text": "Standalone it runs an analysis over it and works which dlls you actually need",
    "start": "536040",
    "end": "541279"
  },
  {
    "text": "and only bundles those in so if you don't use razor it won't pull in razor and that sort of thing um so talk a bit",
    "start": "541279",
    "end": "549000"
  },
  {
    "text": "more about that later ignore the other things that are there at the moment but I've got uh so I've got my net core",
    "start": "549000",
    "end": "555120"
  },
  {
    "text": "application there um so if I want to run that",
    "start": "555120",
    "end": "560920"
  },
  {
    "text": "um I need to find I need to be able to tell it that I'm running in development mode",
    "start": "560920",
    "end": "568279"
  },
  {
    "text": "because I've got some code in uh in my program CS",
    "start": "568279",
    "end": "575800"
  },
  {
    "text": "here so this has got a lot shorter as well this is now just create default Builder on web host so all those things",
    "start": "575800",
    "end": "582000"
  },
  {
    "text": "that in ASP net cor 1.0 and 1.1 you had to create your configuration and hook",
    "start": "582000",
    "end": "587680"
  },
  {
    "text": "these things up this create default Builder just does that for you now uh",
    "start": "587680",
    "end": "592720"
  },
  {
    "text": "and so it looks for a file called app settings. Json and then if you set the environment that you're running in it",
    "start": "592720",
    "end": "599480"
  },
  {
    "text": "look for a file called that app settings do whatever. Json so you have the concept of a development environment a",
    "start": "599480",
    "end": "606279"
  },
  {
    "text": "staging environment and the production environment okay so to set to tell it it's running in development I set an",
    "start": "606279",
    "end": "612560"
  },
  {
    "text": "environment variable um so I'm going to say this is",
    "start": "612560",
    "end": "617640"
  },
  {
    "text": "uh Windows command line here so I'm going to say set ASP net core uncore",
    "start": "617640",
    "end": "622680"
  },
  {
    "text": "environment equals development okay and then I can start",
    "start": "622680",
    "end": "629519"
  },
  {
    "text": "this application up by doing net now I can do net run and that will just launch",
    "start": "629519",
    "end": "636440"
  },
  {
    "text": "it and then if I change something I just go back in and I kill it and then start it running again um but there's",
    "start": "636440",
    "end": "643480"
  },
  {
    "text": "something called net watch that you can get which is very useful uh you say net",
    "start": "643480",
    "end": "649560"
  },
  {
    "text": "watch run and it keeps an eye on all your C files and all your Json files and",
    "start": "649560",
    "end": "655399"
  },
  {
    "text": "any other files that affect the build of the application and if any of them change it kills the process and rebuilds",
    "start": "655399",
    "end": "662800"
  },
  {
    "text": "it and starts it running again so it's very useful to include that in your code",
    "start": "662800",
    "end": "668160"
  },
  {
    "text": "all you have to do is pull in this line",
    "start": "668160",
    "end": "675279"
  },
  {
    "text": "here um so it's a it's not a package reference it's a net CLI tool reference",
    "start": "675279",
    "end": "682440"
  },
  {
    "text": "and it's microsoft.net Watcher tools and the version is",
    "start": "682440",
    "end": "687720"
  },
  {
    "text": "2.0.0 preview - final because Microsoft version numbers which I will be",
    "start": "687720",
    "end": "693839"
  },
  {
    "text": "explaining at pubcon um it's it's numerology so yes um the one above I'll",
    "start": "693839",
    "end": "700680"
  },
  {
    "text": "talk about a little while later on that's just there by default so that means that I can say net watch run and",
    "start": "700680",
    "end": "707279"
  },
  {
    "text": "that will build my application and start it eventually come",
    "start": "707279",
    "end": "714639"
  },
  {
    "text": "on this is a state-ofthe-art quad core",
    "start": "714639",
    "end": "720120"
  },
  {
    "text": "16 GB of RAM",
    "start": "720120",
    "end": "724920"
  },
  {
    "text": "laptop you need to get I do I need to get there is there is no such thing as a faster one than this laptop unless I get",
    "start": "729760",
    "end": "736079"
  },
  {
    "text": "one of those massive ACA Predators right so the other but I've got my microservice and I need my microservice",
    "start": "736079",
    "end": "741839"
  },
  {
    "text": "running at the same time so that my main web application can talk to my microservice and so here uh I'm going to",
    "start": "741839",
    "end": "748360"
  },
  {
    "text": "set asp net core environment equals development and I'm also going to set",
    "start": "748360",
    "end": "755000"
  },
  {
    "text": "aspet core URLs equals HTTP colon",
    "start": "755000",
    "end": "760880"
  },
  {
    "text": "localhost colon 50001 okay",
    "start": "760880",
    "end": "767880"
  },
  {
    "text": "um that's fine it should still be working um that's just something that's not there yet that I'm going to put in",
    "start": "771680",
    "end": "777839"
  },
  {
    "text": "later on okay uh and so then I'm going to say net watch run here as well so this is going",
    "start": "777839",
    "end": "783760"
  },
  {
    "text": "to run on Port",
    "start": "783760",
    "end": "786480"
  },
  {
    "text": "50001 and this is starting up and so this is using Entity framework core",
    "start": "790160",
    "end": "796440"
  },
  {
    "text": "again Entity framework core 2.0 to talk to a SQL Server database which is where it's actually keeping track of which",
    "start": "796440",
    "end": "804000"
  },
  {
    "text": "spaceships are docked in which Bays um so there we go connecting to SQL",
    "start": "804000",
    "end": "810760"
  },
  {
    "text": "connected running the migration come on come on come on come",
    "start": "810760",
    "end": "817199"
  },
  {
    "text": "on come on so let's go and find",
    "start": "817199",
    "end": "823560"
  },
  {
    "text": "a so I go to Local Host",
    "start": "824199",
    "end": "830079"
  },
  {
    "text": "5000 find out whether that's so there you go there's there's the web application running um welcome to Moon",
    "start": "831279",
    "end": "838440"
  },
  {
    "text": "uh this is the rocket stop on the moon obviously that's the easiest place to build the first one and then if I go to",
    "start": "838440",
    "end": "844079"
  },
  {
    "text": "slash docking that should have my so yes there you go my migration ran my initial",
    "start": "844079",
    "end": "851639"
  },
  {
    "text": "seed data was created um and I've got my web application on Port 5000 talking to",
    "start": "851639",
    "end": "858680"
  },
  {
    "text": "my micros service on Port 50001 okay now when you build uh a",
    "start": "858680",
    "end": "864519"
  },
  {
    "text": "microservice architecture the whole point is that if I had a list of Bays coming from",
    "start": "864519",
    "end": "871399"
  },
  {
    "text": "somewhere that would be another microservice if I had my catering that would probably be half a dozen microservices if I had stock control",
    "start": "871399",
    "end": "878680"
  },
  {
    "text": "that' be like 12 more microservices so you end up with a lot of microservices and it's quite difficult to keep track",
    "start": "878680",
    "end": "884279"
  },
  {
    "text": "of all the numbers and every time you want to bring up a complete set of microservices for testing or working",
    "start": "884279",
    "end": "890880"
  },
  {
    "text": "with you've got to go and have that many console windows open and just run this and run this and run this and run this",
    "start": "890880",
    "end": "897040"
  },
  {
    "text": "so that gets quite annoying quite quickly",
    "start": "897040",
    "end": "901040"
  },
  {
    "start": "900000",
    "end": "1154000"
  },
  {
    "text": "so um this is sort of how you do this from the command line you set your ASP net core URLs and then you got to try",
    "start": "905839",
    "end": "911839"
  },
  {
    "text": "and keep track of what's running where and and everything else um which is",
    "start": "911839",
    "end": "916920"
  },
  {
    "text": "quite annoying and that is why we use Docker so is anyone using",
    "start": "916920",
    "end": "923800"
  },
  {
    "text": "Docker already for for their deployments and everything else so docker is one of",
    "start": "923800",
    "end": "929480"
  },
  {
    "text": "those things where people go oh Docker docker's great you got to use Docker and you just go why I don't understand the",
    "start": "929480",
    "end": "935880"
  },
  {
    "text": "point of Docker and then you use Docker for uh how many times can I say Docker",
    "start": "935880",
    "end": "940920"
  },
  {
    "text": "without officially coming to a paragraph in in my speech um you use Docker for",
    "start": "940920",
    "end": "946639"
  },
  {
    "text": "for a couple of weeks and then you just go I everything must run in Docker how can I how did I ever live without Docker",
    "start": "946639",
    "end": "953360"
  },
  {
    "text": "um so what Docker is is just very very small virtual machines okay it's",
    "start": "953360",
    "end": "959040"
  },
  {
    "text": "actually not virtual machines it's processes running with their own pretend",
    "start": "959040",
    "end": "964079"
  },
  {
    "text": "file system that they carry around with them so they have their dependencies bundled along with them and they're run",
    "start": "964079",
    "end": "971360"
  },
  {
    "text": "in their own kind of isolated process space so a thing running in a Docker container can't see the other things",
    "start": "971360",
    "end": "978279"
  },
  {
    "text": "running in other Docker containers and it can't see anything on the host machine unless you accidentally tell it",
    "start": "978279",
    "end": "983440"
  },
  {
    "text": "it can or on purpose tell it it can sometimes but usually accidentally um and so but they all share the same",
    "start": "983440",
    "end": "990000"
  },
  {
    "text": "process space they're all running on the same kernel uh so you can run dozens of them all on the same machine I've had",
    "start": "990000",
    "end": "996079"
  },
  {
    "text": "like 20 something Docker containers all running on this machine at the same time because they are just processes they're",
    "start": "996079",
    "end": "1002040"
  },
  {
    "text": "just processes that can't see each other and can't see the actual dis for example the SQL Server that my",
    "start": "1002040",
    "end": "1009680"
  },
  {
    "text": "application just attached to is not running SQL server on my Windows laptop",
    "start": "1009680",
    "end": "1016360"
  },
  {
    "text": "because I like using my Windows laptop for playing Forza Horizon 3 in my hotel room I carry an Xbox controller around",
    "start": "1016360",
    "end": "1023560"
  },
  {
    "text": "just for that purpose and every time I want to play Forza Horizon 3 I really don't want to have to bring up the services window and shut down SQL Server",
    "start": "1023560",
    "end": "1031038"
  },
  {
    "text": "to stop it using 8 gbt of my memory so SQL Server now runs on Linux and",
    "start": "1031039",
    "end": "1036918"
  },
  {
    "text": "Microsoft maintain a Docker container with the current Edge version of SQL Server 2017 for Linux and I can run that",
    "start": "1036919",
    "end": "1045720"
  },
  {
    "text": "just using this uh this little script here it's um Docker run uh in detached",
    "start": "1045720",
    "end": "1052840"
  },
  {
    "text": "mode the minus D says run in detached mode so just start in the background and keep going until I kill you uh minus E",
    "start": "1052840",
    "end": "1059240"
  },
  {
    "text": "accept Ula equals y which says I accept the enduser license agreement um set the",
    "start": "1059240",
    "end": "1066200"
  },
  {
    "text": "uh system administrator password to secret squirrel with numbers I use that password for all my social media",
    "start": "1066200",
    "end": "1073080"
  },
  {
    "text": "accounts please feel free to hack me and post nice things about go",
    "start": "1073080",
    "end": "1080840"
  },
  {
    "text": "uh the minus P 1433 1433 says link that",
    "start": "1083400",
    "end": "1089120"
  },
  {
    "text": "Port that Network port on the docker container to that Network port on my",
    "start": "1089120",
    "end": "1094520"
  },
  {
    "text": "machine um so it now looks as though I have SQL Server running and listening on Port",
    "start": "1094520",
    "end": "1099720"
  },
  {
    "text": "1433 and then that last bit there should say Microsoft mssql server uh- Linux um",
    "start": "1099720",
    "end": "1107720"
  },
  {
    "text": "I forgot to put the the Microsoft slash on there at the start okay um so yes and",
    "start": "1107720",
    "end": "1115760"
  },
  {
    "text": "I can prove that that's running in there by doing Docker PS and you can see there",
    "start": "1115760",
    "end": "1121679"
  },
  {
    "text": "that I've got Microsoft msql server Linux and it's been up for 22 minutes cuz I started it just before this talk",
    "start": "1121679",
    "end": "1128520"
  },
  {
    "text": "so that was completely fresh pull and then my migration ran and that started up okay so and I can pull in I I've got",
    "start": "1128520",
    "end": "1136760"
  },
  {
    "text": "posters I've got elastic search stacks and Elk Stacks pretty much anything you",
    "start": "1136760",
    "end": "1142280"
  },
  {
    "text": "could possibly want to run these days you can get in a Docker container so of course you want to take your code and",
    "start": "1142280",
    "end": "1149200"
  },
  {
    "text": "put that in a Docker container so you can get all that goodness as well and so",
    "start": "1149200",
    "end": "1154960"
  },
  {
    "start": "1154000",
    "end": "1575000"
  },
  {
    "text": "we have um ASP net course so Microsoft",
    "start": "1154960",
    "end": "1161679"
  },
  {
    "text": "maintain uh what are called base images when you create a Docker image you base",
    "start": "1161679",
    "end": "1167360"
  },
  {
    "text": "it on an existing image image and so there's a a node base image and a python",
    "start": "1167360",
    "end": "1172799"
  },
  {
    "text": "base image and there are net based images and there's actually there's a net core as a microsoft.net base image",
    "start": "1172799",
    "end": "1180640"
  },
  {
    "text": "um and a microsoft.net SDK base image and so you could download that and then",
    "start": "1180640",
    "end": "1187600"
  },
  {
    "text": "shell into it and run the net SDK inside the docker container without having to",
    "start": "1187600",
    "end": "1193039"
  },
  {
    "text": "install net actually on your machine um the really nice thing these days is",
    "start": "1193039",
    "end": "1199600"
  },
  {
    "text": "Microsoft have made windows work inside Docker containers as well and so you've",
    "start": "1199600",
    "end": "1206039"
  },
  {
    "text": "got this it's kind of complicated so Docker generally as Linux and it was",
    "start": "1206039",
    "end": "1211600"
  },
  {
    "text": "using Linux c groups and Nam spaces and that sort of thing and then Microsoft when all containers those look good we",
    "start": "1211600",
    "end": "1217080"
  },
  {
    "text": "should do something like that and rather than doing the typical Microsoft thing and Reinventing all the wheels they",
    "start": "1217080",
    "end": "1223000"
  },
  {
    "text": "worked with Docker to make windows work in containers and so you can get Windows",
    "start": "1223000",
    "end": "1229120"
  },
  {
    "text": "uh server Nano core and you can run net core applications in that and you can",
    "start": "1229120",
    "end": "1234240"
  },
  {
    "text": "also get Windows Server core uh containers and you can run full NET Framework in that but you still manage",
    "start": "1234240",
    "end": "1240760"
  },
  {
    "text": "it with Docker so you still say Docker pull Microsoft Windows Server core and then run a load of startup things and",
    "start": "1240760",
    "end": "1247360"
  },
  {
    "text": "then you can push that and you can run it in hyperv and and all this sort of stuff but everything I'm showing you",
    "start": "1247360",
    "end": "1252400"
  },
  {
    "text": "today is running on Linux containers just because it's easier for me um so",
    "start": "1252400",
    "end": "1258600"
  },
  {
    "text": "there's a net core and a net SDK and then there's an asp net core base image",
    "start": "1258600",
    "end": "1264080"
  },
  {
    "text": "and an asp net core build um base image okay those are are two separate",
    "start": "1264080",
    "end": "1271159"
  },
  {
    "text": "things um until recently when I was doing my talks and my demos on my",
    "start": "1271159",
    "end": "1276559"
  },
  {
    "text": "workshops we would just use the SDK image or the build image and the docker",
    "start": "1276559",
    "end": "1282120"
  },
  {
    "text": "file for that would look something like this so here we're saying uh the first",
    "start": "1282120",
    "end": "1287520"
  },
  {
    "text": "line of any Docker file is from which is saying this is the base image I want to use to build my Docker container so",
    "start": "1287520",
    "end": "1293360"
  },
  {
    "text": "we're saying from Microsoft ASP netore build uh work dur is essentially it's",
    "start": "1293360",
    "end": "1299520"
  },
  {
    "text": "like CD but Docker remembers it so every time the container starts up that will be the working directory and then the",
    "start": "1299520",
    "end": "1306960"
  },
  {
    "text": "copy dot dot says copy everything from the current host directory where I've run Docker build into the um app",
    "start": "1306960",
    "end": "1316640"
  },
  {
    "text": "directory as it is now on the dock image then run net restore because you",
    "start": "1316640",
    "end": "1322440"
  },
  {
    "text": "got to pull down all the packages that you need to uh run your net application your aspet application then run net",
    "start": "1322440",
    "end": "1329520"
  },
  {
    "text": "build and then set the entry point to net run and so then when the container",
    "start": "1329520",
    "end": "1335000"
  },
  {
    "text": "starts up it'll use that and it'll just say I'm in the app directory I'll do netr run and your application will start",
    "start": "1335000",
    "end": "1340240"
  },
  {
    "text": "up okay the problem is that the ASP netcore build image itself is enormous",
    "start": "1340240",
    "end": "1347159"
  },
  {
    "text": "it's like 2 gigabytes because it's got all the build Essentials and the C++ SDK",
    "start": "1347159",
    "end": "1353640"
  },
  {
    "text": "and all sorts of other stuff and the whole Microsoft build Pipeline and Ms build and everything else so it's",
    "start": "1353640",
    "end": "1359039"
  },
  {
    "text": "enormous the other problem with that is that although you've built the",
    "start": "1359039",
    "end": "1364159"
  },
  {
    "text": "application so when it starts up it is just running a pre-built application all your source code is still in the docker",
    "start": "1364159",
    "end": "1372559"
  },
  {
    "text": "container and in the docker image so anybody who wants to can just pull that Docker container down start it up shell",
    "start": "1372559",
    "end": "1378960"
  },
  {
    "text": "into it and get all your source code out and frankly if I wanted to ship my",
    "start": "1378960",
    "end": "1384200"
  },
  {
    "text": "source code I'd be doing node um I I would rather build my source code and",
    "start": "1384200",
    "end": "1390320"
  },
  {
    "text": "keep it all to myself so uh there was a hacky kind of way around this where you",
    "start": "1390320",
    "end": "1398240"
  },
  {
    "text": "would have a two-stage what we called multi-stage Docker build okay so you had one Docker file that did the build and",
    "start": "1398240",
    "end": "1407240"
  },
  {
    "text": "you would either mount a volume zoom into that Docker container or you would Mount you would access the files inside",
    "start": "1407240",
    "end": "1413880"
  },
  {
    "text": "that Docker container afterwards and you would copy the published output from the build into another Docker image and then",
    "start": "1413880",
    "end": "1422279"
  },
  {
    "text": "that would be the thing that you actually shipped okay but Docker this",
    "start": "1422279",
    "end": "1428039"
  },
  {
    "text": "happened it's still like the standard way of doing it but in the next version of Docker which you can get if you",
    "start": "1428039",
    "end": "1433799"
  },
  {
    "text": "download the edge build from uh doer. they have actually gone you know what",
    "start": "1433799",
    "end": "1438960"
  },
  {
    "text": "everybody's using this pattern all over the place let's just support it out of the box and so now we have a",
    "start": "1438960",
    "end": "1444799"
  },
  {
    "text": "multi-stage uh build Docker file so now we can do this we can say from Microsoft",
    "start": "1444799",
    "end": "1451279"
  },
  {
    "text": "ASP netore build and give it a name so we give that image uh and name in our",
    "start": "1451279",
    "end": "1457120"
  },
  {
    "text": "build process uh create a new work D and I'm going to call this SRC to differentiate",
    "start": "1457120",
    "end": "1462480"
  },
  {
    "text": "it so this is where I'm putting my source code copy everything into it Run net restore and then run net publ",
    "start": "1462480",
    "end": "1469279"
  },
  {
    "text": "and set the output to SL app which will just get created um and set the configuration to release so we don't get",
    "start": "1469279",
    "end": "1476640"
  },
  {
    "text": "a debug build out and then in my in the same Docker file I put another from and",
    "start": "1476640",
    "end": "1482760"
  },
  {
    "text": "this is coming from Microsoft ASP net Core 2 okay so this is just the runtime",
    "start": "1482760",
    "end": "1489600"
  },
  {
    "text": "so the build uh image is about 2 GB okay",
    "start": "1489600",
    "end": "1495000"
  },
  {
    "text": "it is it's big that's big for a Docker file um The Run time image is about 200",
    "start": "1495000",
    "end": "1500799"
  },
  {
    "text": "megabytes which is actually quite small and it's going to get smaller once they get this working on the Alpine thing",
    "start": "1500799",
    "end": "1506240"
  },
  {
    "text": "that base image is probably going to go down to about 50 megabytes which is Tiny",
    "start": "1506240",
    "end": "1511720"
  },
  {
    "text": "and then on my second line uh in the second block I'm saying copy Das Das",
    "start": "1511720",
    "end": "1517520"
  },
  {
    "text": "from build so go to that image you built in the first stage of this build and just copy the files out of there",
    "start": "1517520",
    "end": "1523799"
  },
  {
    "text": "directly into here and then set work dirta SL app on this new image and then",
    "start": "1523799",
    "end": "1529720"
  },
  {
    "text": "do the entrypoint uh. net and just run rocket stop. dll okay so and I'll just",
    "start": "1529720",
    "end": "1536520"
  },
  {
    "text": "show you what the output from a publish looks like so um just do a net",
    "start": "1536520",
    "end": "1543520"
  },
  {
    "text": "publish uh dout dot dot SL do",
    "start": "1543520",
    "end": "1549200"
  },
  {
    "text": "dotout um you know we can't see it right no I do not know",
    "start": "1549200",
    "end": "1554320"
  },
  {
    "text": "that um",
    "start": "1554320",
    "end": "1560240"
  },
  {
    "text": "hang on it's all right because I'm mucking it up at the",
    "start": "1562440",
    "end": "1569399"
  },
  {
    "text": "moment yes it is",
    "start": "1569399",
    "end": "1576159"
  },
  {
    "text": "right there it is there's the command that I I got right first time while you weren't",
    "start": "1577640",
    "end": "1583799"
  },
  {
    "text": "looking okay so this is an MVC application this has got cshtml files has got razor views in it okay which has",
    "start": "1583960",
    "end": "1590120"
  },
  {
    "text": "always been fun for kind of building stuff so if I go to um my out directory",
    "start": "1590120",
    "end": "1596000"
  },
  {
    "text": "here which I've just created you can see that what we've got uh we've got a dubdub dub root folder so",
    "start": "1596000",
    "end": "1602520"
  },
  {
    "text": "that was included in my publish that's all my JavaScript files and my CSS files and everything else um we've got rocket",
    "start": "1602520",
    "end": "1608559"
  },
  {
    "text": "stop. dll which is my application which is uh 24K and we've got rocket stop.",
    "start": "1608559",
    "end": "1615320"
  },
  {
    "text": "precompiled views. dll and that is all my CSH HTML files that have been",
    "start": "1615320",
    "end": "1621440"
  },
  {
    "text": "pre-compiled in advance and bundled up into a dll so even the source code for",
    "start": "1621440",
    "end": "1626840"
  },
  {
    "text": "your razor code isn't shipped with your application we don't need to ship the views directory anymore which is pretty",
    "start": "1626840",
    "end": "1633039"
  },
  {
    "text": "neat that is what uh this line here is doing the",
    "start": "1633039",
    "end": "1639399"
  },
  {
    "text": "Microsoft Visual Studio web code generation tools it pre compiles your CSH HTML files into a dll and deploys",
    "start": "1639399",
    "end": "1647480"
  },
  {
    "text": "those okay so that's what's being created and then that's what we're copying onto our",
    "start": "1647480",
    "end": "1654919"
  },
  {
    "start": "1648000",
    "end": "2011000"
  },
  {
    "text": "Docker image uh from uh in our multi-stage build so if",
    "start": "1654919",
    "end": "1661600"
  },
  {
    "text": "you want to get that it's going to be in the next version that is officially released but which was supposed to be in",
    "start": "1661600",
    "end": "1666880"
  },
  {
    "text": "May uh still hasn't actually landed yet unless it's landed since like 11:00 last night when I wrote this talk um it's not",
    "start": "1666880",
    "end": "1676120"
  },
  {
    "text": "true um but yeah if you get the edge build of the community edition of Docker",
    "start": "1676120",
    "end": "1681760"
  },
  {
    "text": "uh then you'll be able to do this multi-stage build thing and it is very cool my favorite thing about it is that",
    "start": "1681760",
    "end": "1688200"
  },
  {
    "text": "if you wanted to do a multi-stage build you actually had to use a proper complicated continuous integration",
    "start": "1688200",
    "end": "1693799"
  },
  {
    "text": "process like Jenkins or team City or something like that because you had these two Docker commands and two",
    "start": "1693799",
    "end": "1699880"
  },
  {
    "text": "separate Docker files now you've got this multi-stage build within a single Docker file you can just attach your",
    "start": "1699880",
    "end": "1705880"
  },
  {
    "text": "GitHub repository to your Docker hub repository and set the automated build",
    "start": "1705880",
    "end": "1711559"
  },
  {
    "text": "uh process so that when you do a commit to a particular branch on your GitHub repository the docker Hub will do a pull",
    "start": "1711559",
    "end": "1718919"
  },
  {
    "text": "and Docker build the docker file and then that just becomes the new image so that combination of GitHub and dockerhub",
    "start": "1718919",
    "end": "1726080"
  },
  {
    "text": "just becomes your entire CI process obviously you still want to run some tests oh",
    "start": "1726080",
    "end": "1733640"
  },
  {
    "text": "yes okay so now I've got I've got my um Docker file in my rocket stop things",
    "start": "1734679",
    "end": "1742720"
  },
  {
    "text": "here so here's my Docker file for um my main application and here is my Docker",
    "start": "1742720",
    "end": "1749440"
  },
  {
    "text": "file for my um other application and the only",
    "start": "1749440",
    "end": "1754480"
  },
  {
    "text": "difference there is that this one's running a different dll down at the bottom",
    "start": "1754480",
    "end": "1759799"
  },
  {
    "text": "here okay um so I want to start these up and what",
    "start": "1759799",
    "end": "1766799"
  },
  {
    "text": "I would normally do for that is I would do uh SRC back rocket stop so to build",
    "start": "1766799",
    "end": "1773679"
  },
  {
    "text": "this manually I would say Docker build minus t um manual RS dot okay and",
    "start": "1773679",
    "end": "1782000"
  },
  {
    "text": "that'll go through and this is running it's running net restore um over the uh",
    "start": "1782000",
    "end": "1788919"
  },
  {
    "text": "over the NDC shared Wi-Fi so everybody hates me now um and it's it's creating",
    "start": "1788919",
    "end": "1795240"
  },
  {
    "text": "this Docker container it's done done the restore I'm slightly concerned that I've got",
    "start": "1795240",
    "end": "1801200"
  },
  {
    "text": "Forza Horizon 3 running in the background somewhere I I think",
    "start": "1801200",
    "end": "1807399"
  },
  {
    "text": "um and then I would start this up with Docker run uh oh you couldn't connect to the server oh that's",
    "start": "1807399",
    "end": "1816039"
  },
  {
    "text": "good I may possibly be about to hate my",
    "start": "1820039",
    "end": "1824679"
  },
  {
    "text": "life",
    "start": "1826960",
    "end": "1829960"
  },
  {
    "text": "okay let's just kill that then uh right it doesn't matter because I've already got them built so that's okay right um",
    "start": "1832279",
    "end": "1840600"
  },
  {
    "text": "so then I would run that with Docker run and uh if I go to uh Docker",
    "start": "1840600",
    "end": "1846519"
  },
  {
    "text": "images um you can see that I have got an image here right so this none here is",
    "start": "1846519",
    "end": "1853679"
  },
  {
    "text": "the one that I've just killed and you can see that's 2.18 gigabytes this is one I prepared earlier which is local",
    "start": "1853679",
    "end": "1860399"
  },
  {
    "text": "/rs which is my local copy of Rocket stop and that's 305 megabytes which is pretty small for a Docker container and",
    "start": "1860399",
    "end": "1866639"
  },
  {
    "text": "you may be thinking you know what 2 gabt isn't that big for a Docker container but bear in mind that one of the places",
    "start": "1866639",
    "end": "1874799"
  },
  {
    "text": "you can run Docker is on Internet of Things Micro Devices you can have like a",
    "start": "1874799",
    "end": "1880159"
  },
  {
    "text": "Raspberry Pi uh model B and you might have a 4 GB SD micro card stuffed in",
    "start": "1880159",
    "end": "1886720"
  },
  {
    "text": "there so actually two 2 GB is quite a lot and there is a big difference if you're deploying to these things and",
    "start": "1886720",
    "end": "1892639"
  },
  {
    "text": "Docker are really pushing on the Internet of Things use Cas as a way of deploying their code so it is um it is",
    "start": "1892639",
    "end": "1899880"
  },
  {
    "text": "worth shaving off those uh 1.8 gabyt when you do your build step",
    "start": "1899880",
    "end": "1906200"
  },
  {
    "text": "okay so then I would say um Docker run minus P um 880 colon 80 uh local slrs",
    "start": "1906200",
    "end": "1916639"
  },
  {
    "text": "and this will start up my um my",
    "start": "1916639",
    "end": "1923799"
  },
  {
    "text": "container and so you can see that's now running uh and it's listening on Port 80 okay so the ASP net core base image sets",
    "start": "1923799",
    "end": "1932039"
  },
  {
    "text": "that ASP net core url's environment variable to 80 which is obviously the",
    "start": "1932039",
    "end": "1937720"
  },
  {
    "text": "port you want uh a a web application to be listening on",
    "start": "1937720",
    "end": "1944120"
  },
  {
    "text": "it's going to run all the applications in all the docker containers all going to be listening on Port 80 but they're",
    "start": "1944120",
    "end": "1949559"
  },
  {
    "text": "listening on Port 80 in the container not on the host machine that minus P command that I um passed in",
    "start": "1949559",
    "end": "1958559"
  },
  {
    "text": "there uh so I told that to run on 8080 didn't I so I go to Local Host",
    "start": "1958559",
    "end": "1964600"
  },
  {
    "text": "8080 and that's the code running inside the docker container so I've bound Port 0 inside that container to port 8080 on",
    "start": "1964600",
    "end": "1972919"
  },
  {
    "text": "my actual host machine it's nice and easy that way you can just publish all your",
    "start": "1972919",
    "end": "1979840"
  },
  {
    "start": "2011000",
    "end": "2385000"
  },
  {
    "text": "a yaml file see I told you you're going to need to learn yaml um so this is Docker compose and you basically set up",
    "start": "2037840",
    "end": "2045399"
  },
  {
    "text": "all the services that you need and all the networks that you need as well so you create virtual networks between the",
    "start": "2045399",
    "end": "2052079"
  },
  {
    "text": "different Docker containers so that they can see each other so in this instance I'm creating a network called RS net",
    "start": "2052079",
    "end": "2058079"
  },
  {
    "text": "rocket stop net uh and the driver is bridge if I was to take this and run it in production I would spin up a Docker",
    "start": "2058079",
    "end": "2065040"
  },
  {
    "text": "swarm somewhere in a Data Center and use something similar to this but I would use an overlay Network which would allow",
    "start": "2065040",
    "end": "2070720"
  },
  {
    "text": "all the containers on the Swarm to see each other um so my Docker compose",
    "start": "2070720",
    "end": "2077760"
  },
  {
    "text": "file is down at the bottom here and it looks like this can't see it because I've still Yes",
    "start": "2077760",
    "end": "2087638"
  },
  {
    "text": "ah okay got it right so this is my Docker composed file so up at the top",
    "start": "2089679",
    "end": "2096358"
  },
  {
    "text": "there I've got my SQL Server Linux um this is going to spin up a new SQL server Linux box and I've got a rocket",
    "start": "2096359",
    "end": "2102720"
  },
  {
    "text": "stop docking um and I've got uh I'm saying this is the image if you can find",
    "start": "2102720",
    "end": "2108599"
  },
  {
    "text": "the image just run the image if you can't find the image use this to build uh a new copy of the image um I've got",
    "start": "2108599",
    "end": "2115960"
  },
  {
    "text": "the docker plugin for visual studio code which is why I'm getting these nice popups telling me what the hell I'm",
    "start": "2115960",
    "end": "2121520"
  },
  {
    "text": "doing which is very handy because I don't know um I'm going to set an environment variable so uh ASP net",
    "start": "2121520",
    "end": "2128480"
  },
  {
    "text": "Calles configuration builds up in layers so you've got your app settings. Json",
    "start": "2128480",
    "end": "2133520"
  },
  {
    "text": "then app settings. development. Json and then environment variables and then command line so I can override what's in",
    "start": "2133520",
    "end": "2140040"
  },
  {
    "text": "connection strings docking DB by setting this environment variable that's a double underscore as the separator on",
    "start": "2140040",
    "end": "2146560"
  },
  {
    "text": "those so that will tell the docking service to use Ms SQL as its data source",
    "start": "2146560",
    "end": "2153480"
  },
  {
    "text": "okay um and you can see we've got the password see squirrel there that data",
    "start": "2153480",
    "end": "2159720"
  },
  {
    "text": "source name is the name of this service here okay so that's going to get hooked together the DNS server that's provided",
    "start": "2159720",
    "end": "2168079"
  },
  {
    "text": "by Docker on the bridge Network when you look for Ms SQL will return the IP address of that Ms SQL Docker container",
    "start": "2168079",
    "end": "2175960"
  },
  {
    "text": "then rocket stop I'm going to set it Services docking to point to http colon rocket stop docking so that'll be able",
    "start": "2175960",
    "end": "2183000"
  },
  {
    "text": "to see this container once I bring that up and then down at the bottom here I've",
    "start": "2183000",
    "end": "2189720"
  },
  {
    "text": "got a whole load of other stuff as well um for influx and grafana which we're",
    "start": "2189720",
    "end": "2195720"
  },
  {
    "text": "going to be looking at in a moment okay so let's stop that",
    "start": "2195720",
    "end": "2203078"
  },
  {
    "text": "and we'll do uh Docker Das compose RM",
    "start": "2203560",
    "end": "2209400"
  },
  {
    "text": "just to clean up any containers I may have had already and then I'm just going to say Docker Dash compose up",
    "start": "2209400",
    "end": "2218319"
  },
  {
    "text": "okay so that's spinning up all these different Docker containers",
    "start": "2218319",
    "end": "2223480"
  },
  {
    "text": "this is creating me an entire micro service cluster on my development machine okay um and everything's running",
    "start": "2223480",
    "end": "2231480"
  },
  {
    "text": "here uh and I've got a thing saying login failed for user sa and failed to",
    "start": "2231480",
    "end": "2238240"
  },
  {
    "text": "expl there um but then yes so you get",
    "start": "2238240",
    "end": "2244200"
  },
  {
    "text": "into this interesting thing I'm going to show you some of the code that does this in a moment uh when you're bringing up this microservice cluster you might have",
    "start": "2244200",
    "end": "2251280"
  },
  {
    "text": "your application starts and tries to run the migrations before the MS SQL container has actually spun up and",
    "start": "2251280",
    "end": "2257400"
  },
  {
    "text": "started uh accepting incoming requests so you end up writing an awful lot of",
    "start": "2257400",
    "end": "2262440"
  },
  {
    "text": "code like this uh where's my data docking context in",
    "start": "2262440",
    "end": "2271800"
  },
  {
    "text": "it um so because I'm spinning up a brand new SQL Server instance every time I run",
    "start": "2271800",
    "end": "2277079"
  },
  {
    "text": "this I'm sping up a brand new SQL Server instance so my database doesn't exist it's not like when you've got Ms SQL um",
    "start": "2277079",
    "end": "2285200"
  },
  {
    "text": "whatever the application I can't even remember what the application is called uh Studio management",
    "start": "2285200",
    "end": "2290760"
  },
  {
    "text": "studio um you can't do that and create the database and then run the migrations and everything you're having to run the migrations as part of the startup so",
    "start": "2290760",
    "end": "2297240"
  },
  {
    "text": "I've got this uh thing that retries for a minute waiting for the database to start up um and I have to pull in the",
    "start": "2297240",
    "end": "2304240"
  },
  {
    "text": "connection string and then change the database to master because obviously docking DB doesn't exist yet uh so yes",
    "start": "2304240",
    "end": "2310720"
  },
  {
    "text": "there's there's lots of fun going on in there um so we retry six times and wait",
    "start": "2310720",
    "end": "2316359"
  },
  {
    "text": "10 seconds between each one but now I've got that up and running and if I go back to my Docker file we can see that I told",
    "start": "2316359",
    "end": "2323280"
  },
  {
    "text": "it to bind rocket stop to Port 8081 so that should now be showing on",
    "start": "2323280",
    "end": "2331440"
  },
  {
    "text": "there okay yes it is and if I go to/ doing and",
    "start": "2331440",
    "end": "2337560"
  },
  {
    "text": "and I can dock a ship and put it in Bay C and we'll call it vogon",
    "start": "2337560",
    "end": "2343960"
  },
  {
    "text": "Constructor and dock that one and so that's going in there as well okay so that's everything is all just brought up",
    "start": "2343960",
    "end": "2350560"
  },
  {
    "text": "and running and I can check this code into GitHub and somebody else as long as",
    "start": "2350560",
    "end": "2356720"
  },
  {
    "text": "they've got Docker installed on their machine and running can do a git clone Docker compose up and get an entire",
    "start": "2356720",
    "end": "2363839"
  },
  {
    "text": "microservice architecture with all the dependencies up and running if Docker can't find the image that's in the",
    "start": "2363839",
    "end": "2370240"
  },
  {
    "text": "docker composed file it will try and pull it from the repository if it's not on the repository and you've got a build thing it will build it for you okay so",
    "start": "2370240",
    "end": "2377960"
  },
  {
    "text": "this makes microservices really really really easy to work with except you",
    "start": "2377960",
    "end": "2383119"
  },
  {
    "text": "still got a whole bunch of other stuff that you have to worry about when you're building this sort of thing so I took a look once I'd started",
    "start": "2383119",
    "end": "2391800"
  },
  {
    "start": "2385000",
    "end": "2752000"
  },
  {
    "text": "getting into this whole kind of thought Works Martin Fowler buzzwords thing I",
    "start": "2391800",
    "end": "2396880"
  },
  {
    "text": "thought I'd go and look at what's happening in other EOS systems that have been doing this architecture for a bit longer and I found um Java has a couple",
    "start": "2396880",
    "end": "2406319"
  },
  {
    "text": "of framework kit things called Spring Boot and drop wizard which have got a",
    "start": "2406319",
    "end": "2412400"
  },
  {
    "text": "whole bunch of bits and pieces that are very useful for doing microservices go if you like that sort of thing my",
    "start": "2412400",
    "end": "2419280"
  },
  {
    "text": "microphone feels like it's falling apart um go has something called go kit and so I was looking into what these things um",
    "start": "2419280",
    "end": "2426200"
  },
  {
    "text": "have in them and the big thing that that becomes important with microservices if",
    "start": "2426200",
    "end": "2431280"
  },
  {
    "text": "you've got one application and everything's included in that one monolithic application it's very easy to",
    "start": "2431280",
    "end": "2436960"
  },
  {
    "text": "know if everything's okay you hit the application and it's either there or it's not once you've decomposed that",
    "start": "2436960",
    "end": "2443160"
  },
  {
    "text": "into 100 microservices you've got 100 things to keep an eye on and so you need some sort of monitoring uh in there",
    "start": "2443160",
    "end": "2451680"
  },
  {
    "text": "and there are various aspects to monitoring you got to make sure that all these services are healthy that they're",
    "start": "2451680",
    "end": "2456720"
  },
  {
    "text": "all running right that they're all uh working at the right time seriously this is falling off okay",
    "start": "2456720",
    "end": "2464359"
  },
  {
    "text": "um so you need something for logging and actually for ASP net core for logging",
    "start": "2464359",
    "end": "2469760"
  },
  {
    "text": "we've got logging it's there's I loger factory and you can attach things to it and you can attach serilog and log finet",
    "start": "2469760",
    "end": "2475839"
  },
  {
    "text": "to it and then pipe the content onto as your table storage or a SQL database or",
    "start": "2475839",
    "end": "2481440"
  },
  {
    "text": "elastic search or Splunk or wherever you want it to go okay so logging is taken care of but you also need metric met and",
    "start": "2481440",
    "end": "2488560"
  },
  {
    "text": "Metric is not the same as logging logging is uh information about stuff",
    "start": "2488560",
    "end": "2493839"
  },
  {
    "text": "that has happened okay metrics is statistical information about how long",
    "start": "2493839",
    "end": "2499640"
  },
  {
    "text": "it took how often it's happening it's the metrics are the sort of things that you can do lovely pretty dashboards from",
    "start": "2499640",
    "end": "2505480"
  },
  {
    "text": "logs of the things that you go and search in when something's gone wrong to figure out what it was okay so you got",
    "start": "2505480",
    "end": "2511480"
  },
  {
    "text": "metrics and then you've also got health checks so you need to be able to go to a service and say are you healthy and that",
    "start": "2511480",
    "end": "2519319"
  },
  {
    "text": "doesn't just mean are you running can I ping you it means if I ask you to do something to the database are you going",
    "start": "2519319",
    "end": "2525640"
  },
  {
    "text": "to be able to do it so the health check endpoint has to say right I've got a DAT",
    "start": "2525640",
    "end": "2530960"
  },
  {
    "text": "I know this is my database connection string when you hit the health check end point I'm going to open that connection",
    "start": "2530960",
    "end": "2536640"
  },
  {
    "text": "and return okay as long as the connection opened okay if the connection doesn't open I'm going to return an",
    "start": "2536640",
    "end": "2542680"
  },
  {
    "text": "error code and you will know not to direct any more requests to me okay insanely complicated it turns out these",
    "start": "2542680",
    "end": "2550480"
  },
  {
    "text": "microservices and then you got circuit breakers and circuit breakers are wrappers around the API boundaries",
    "start": "2550480",
    "end": "2557599"
  },
  {
    "text": "between the different services and the circuit breaker pattern says you might sort of in background just ping a health",
    "start": "2557599",
    "end": "2564880"
  },
  {
    "text": "check on one of your dependent services and say are you there are you there or you might have a circuit breaker that",
    "start": "2564880",
    "end": "2570760"
  },
  {
    "text": "you wrap around an actual operation and you say if that operation fails twice stop trying it for for 5 minutes and and",
    "start": "2570760",
    "end": "2579119"
  },
  {
    "text": "then pick up trying again so you don't end up spamming all your other services with potential denial of service attacks",
    "start": "2579119",
    "end": "2585200"
  },
  {
    "text": "okay so these are all the different aspects of monitoring logging like I say we've got covered uh with microsoft.",
    "start": "2585200",
    "end": "2591040"
  },
  {
    "text": "extension. logging I was went looking for for the metric side of things and",
    "start": "2591040",
    "end": "2596119"
  },
  {
    "text": "there were a few ports of the drop wizard metrics Library uh the direct",
    "start": "2596119",
    "end": "2603160"
  },
  {
    "text": "ports of the Java library and they've all at various stages of a bment and so forth and then I found at metric um and",
    "start": "2603160",
    "end": "2611000"
  },
  {
    "text": "the website for that is at metric. and at metric uh guy called Alan",
    "start": "2611000",
    "end": "2617079"
  },
  {
    "text": "Hardy does this it's Bonkers it's it's one of the best bits of net open source",
    "start": "2617079",
    "end": "2624319"
  },
  {
    "text": "I have ever seen in my entire life okay so remember that address this is I'm",
    "start": "2624319",
    "end": "2630160"
  },
  {
    "text": "going to demo the stuff that's in there now um so we've got these are your",
    "start": "2630160",
    "end": "2635960"
  },
  {
    "text": "metric types these are the types of data that you're going to pull out and the first one is called appex and this is",
    "start": "2635960",
    "end": "2641680"
  },
  {
    "text": "application performance Index this is an industry standard and it says is this service performing uh within",
    "start": "2641680",
    "end": "2649200"
  },
  {
    "text": "expectations you can set what those expectations are but it's like a user satisfaction index if you put this on",
    "start": "2649200",
    "end": "2655559"
  },
  {
    "text": "your website it will say everything's okay if you're serving your kind of main",
    "start": "2655559",
    "end": "2660760"
  },
  {
    "text": "web page out in under 100 milliseconds if it's taking over half a second it'll say no that's useless if it's gone down",
    "start": "2660760",
    "end": "2666880"
  },
  {
    "text": "so appex is uh the dashboards that you use understand appex and you can create",
    "start": "2666880",
    "end": "2672400"
  },
  {
    "text": "dashboards based on it then you got counters which is just how often has this thing happened or how how many",
    "start": "2672400",
    "end": "2678400"
  },
  {
    "text": "times has this thing happened you've got gauges which is just a single number that changes over time so you might say",
    "start": "2678400",
    "end": "2684720"
  },
  {
    "text": "how many users are currently active on the system would be a gauge so uh I've got you know every time someone logs in",
    "start": "2684720",
    "end": "2691280"
  },
  {
    "text": "you add one to this number and every time someone logs out you take one away and so you can map that over time as",
    "start": "2691280",
    "end": "2696520"
  },
  {
    "text": "well uh you've got histograms which is when you say so there's less than 100 milliseconds less than half a second",
    "start": "2696520",
    "end": "2702920"
  },
  {
    "text": "less than a second more than a second and get a distribution of values over there you got a meter which is um how",
    "start": "2702920",
    "end": "2710440"
  },
  {
    "text": "frequently something is happening so how many times per minute and how many times has it happened in total and then you",
    "start": "2710440",
    "end": "2716359"
  },
  {
    "text": "got a timer which is like a meter and uh",
    "start": "2716359",
    "end": "2721480"
  },
  {
    "text": "and how long it took at the same time so you can see this is happening this often",
    "start": "2721480",
    "end": "2726839"
  },
  {
    "text": "it on average it takes this amount of time uh you can link that up with a histogram it's all incredibly",
    "start": "2726839",
    "end": "2732160"
  },
  {
    "text": "complicated okay um app metrics adds end points to",
    "start": "2732160",
    "end": "2738240"
  },
  {
    "text": "your application so that you can pull this data out and the three simplest ones are/ metric SL health and slping",
    "start": "2738240",
    "end": "2745800"
  },
  {
    "text": "slping just returns pong and it just goes yes this process is running we're going to take a look at metrics and",
    "start": "2745800",
    "end": "2750839"
  },
  {
    "text": "health but before we do that I'm just going to show you how easy it is to include this in your project and why I",
    "start": "2750839",
    "end": "2758040"
  },
  {
    "text": "am so impressed with it so we have four references that I've added to my",
    "start": "2758040",
    "end": "2764240"
  },
  {
    "text": "application uh the app metrics core this um it doesn't specifically Say it'll",
    "start": "2764240",
    "end": "2769839"
  },
  {
    "text": "work with a net core app too but it will um it's not touching any of the internal stuff uh or none of the stuff that it's",
    "start": "2769839",
    "end": "2776040"
  },
  {
    "text": "touching internally appears to have changed in a way that stops IT from working uh then we got the MVC extension",
    "start": "2776040",
    "end": "2782440"
  },
  {
    "text": "which means it knows about the ASP net core MVC framework and can hook into various things in that we got an influx",
    "start": "2782440",
    "end": "2788800"
  },
  {
    "text": "DB reporter which we'll look at in shortly and we've got the Json formatter which is the thing that's going to hit",
    "start": "2788800",
    "end": "2794160"
  },
  {
    "text": "these end points okay and then to hook this up it's a big chunk of code to hook",
    "start": "2794160",
    "end": "2800240"
  },
  {
    "text": "the the middleware up to do this okay um that's it's not",
    "start": "2800240",
    "end": "2806720"
  },
  {
    "text": "that it's this Okay",
    "start": "2806720",
    "end": "2812119"
  },
  {
    "text": "so we've got our configure metric function here but the thing is this will be essentially the same for pretty much",
    "start": "2812160",
    "end": "2818720"
  },
  {
    "text": "every application you create so I'm I'm tempted to kind of create a new get",
    "start": "2818720",
    "end": "2823960"
  },
  {
    "text": "package of my own that just has my standard setup for this has all the dependencies for those four things so",
    "start": "2823960",
    "end": "2831119"
  },
  {
    "text": "that I can just install my new get package and just have this configure metric the only thing that's really",
    "start": "2831119",
    "end": "2836280"
  },
  {
    "text": "going to change from uh from use to use is where",
    "start": "2836280",
    "end": "2843440"
  },
  {
    "text": "my um in influx DB is that I'm going to be",
    "start": "2843440",
    "end": "2849520"
  },
  {
    "text": "reporting stuff to and my default context label which is essentially what I'm uh going to mark all my metrics with",
    "start": "2849520",
    "end": "2857480"
  },
  {
    "text": "so I got this I got my service collection here which is where I'm registering my dependencies and I just",
    "start": "2857480",
    "end": "2862760"
  },
  {
    "text": "say services. add metrics I can set various options here um so I can set my",
    "start": "2862760",
    "end": "2868520"
  },
  {
    "text": "server to the machine name which will be the docker machine name and it's running inside Docker the app is going to be my",
    "start": "2868520",
    "end": "2874160"
  },
  {
    "text": "assembly name so rocket stop. dll and I can use to get my ASP net core",
    "start": "2874160",
    "end": "2879839"
  },
  {
    "text": "environment and say either prod or staging or development um then I'm going to add various types of output",
    "start": "2879839",
    "end": "2886920"
  },
  {
    "text": "serialization text serialization health serialization health checks add the metrics middleware add the reporting to",
    "start": "2886920",
    "end": "2894119"
  },
  {
    "text": "send it out to influx these are the influx settings which we'll look at in a moment um and then I just say app.use",
    "start": "2894119",
    "end": "2900920"
  },
  {
    "text": "metrics and app.use metrics reporting okay so it's a lot of boilerplate code",
    "start": "2900920",
    "end": "2906280"
  },
  {
    "text": "but like I said it's the same boilerplate code every time you can either copy and paste it every time you create a new service or you can stick it",
    "start": "2906280",
    "end": "2913160"
  },
  {
    "text": "in there I've put it between the bit that says use the developer exception",
    "start": "2913160",
    "end": "2919400"
  },
  {
    "text": "page and uh use static file so it's going to tell me how long it takes to",
    "start": "2919400",
    "end": "2925440"
  },
  {
    "text": "serve static files but it won't tell me how long it takes to serve error pages I don't want it to do that because those",
    "start": "2925440",
    "end": "2931920"
  },
  {
    "text": "error pages will catch errors and then the metrics won't get to see the errors so when you're doing doing this",
    "start": "2931920",
    "end": "2937119"
  },
  {
    "text": "configure application it's in kind of reverse order so uh it'll do the metrics",
    "start": "2937119",
    "end": "2942680"
  },
  {
    "text": "and then if it was an error it'll carry on reporting that up to the error page and then down at the bottom I've got my",
    "start": "2942680",
    "end": "2947880"
  },
  {
    "text": "use MBC there okay so if I go back to my docking thing here um and we go to uh",
    "start": "2947880",
    "end": "2957920"
  },
  {
    "text": "metrics you can see that this is picked up uh this is just the Json output for",
    "start": "2957920",
    "end": "2964280"
  },
  {
    "text": "everything that's happened so far okay okay um and if I go to",
    "start": "2964280",
    "end": "2972280"
  },
  {
    "text": "health you can see my health checks that are in there um now if",
    "start": "2972280",
    "end": "2977520"
  },
  {
    "text": "I uh thank you um so yes that tells me which health",
    "start": "2977520",
    "end": "2985079"
  },
  {
    "text": "checks are healthy and which are degraded and so forth so if I've got monitoring I can be pinging that health",
    "start": "2985079",
    "end": "2990760"
  },
  {
    "text": "check every 5 Seconds um and setting up alerts on dashboards or sending people",
    "start": "2990760",
    "end": "2997280"
  },
  {
    "text": "text messages or whatever if something goes down and it gives you details on what actually has gone down so if you've got a microservice that depends on two",
    "start": "2997280",
    "end": "3005200"
  },
  {
    "text": "databases and some kind of cloud service um it'll be able to tell you which of",
    "start": "3005200",
    "end": "3011079"
  },
  {
    "text": "those three things has become unavailable or unhealthy so you get your health check out of there uh to",
    "start": "3011079",
    "end": "3016480"
  },
  {
    "text": "implement a health check all you have to do is uh create",
    "start": "3016480",
    "end": "3024559"
  },
  {
    "text": "a class that inherits from the app metric health",
    "start": "3024559",
    "end": "3030040"
  },
  {
    "text": "check Base Class it'll work with any dependency injection youve set up so you don't need",
    "start": "3030040",
    "end": "3035839"
  },
  {
    "text": "to worry about where you're getting your connection strings or anything from um and you can just say uh do my connection",
    "start": "3035839",
    "end": "3043599"
  },
  {
    "text": "string and set the connect time out to 5 Seconds try and open that and if it works then return healthy if it doesn't",
    "start": "3043599",
    "end": "3050760"
  },
  {
    "text": "work at metrics will pick up the exception and incorporate that into the error report on the unhealthy status",
    "start": "3050760",
    "end": "3057559"
  },
  {
    "text": "Okay so we've got our health check there just by creating that you can have as many of those as you want and it'll report them all healthy or all unhealthy",
    "start": "3057559",
    "end": "3064559"
  },
  {
    "text": "when you get into the thing and if we just do ping then you just get pong back which",
    "start": "3064559",
    "end": "3070280"
  },
  {
    "text": "says yes this process is running no idea whether it's healthy or not but it's quite handy to know whether it's there",
    "start": "3070280",
    "end": "3076000"
  },
  {
    "text": "at all so so that's fun but what you really want when you're doing monitoring and",
    "start": "3076000",
    "end": "3082720"
  },
  {
    "start": "3078000",
    "end": "3358000"
  },
  {
    "text": "metrics and all this sort of good stuff is reporting you want lovely dashboards don't you you want those things that you",
    "start": "3082720",
    "end": "3088400"
  },
  {
    "text": "see on on radiators and so forth in in like modern development shops and so forth now those it's easy enough to set",
    "start": "3088400",
    "end": "3095960"
  },
  {
    "text": "it up you saw the the chunk of code that was pushing stuff out to um influx DB",
    "start": "3095960",
    "end": "3101200"
  },
  {
    "text": "and influx DB is a Time serious database it's specifically designed just to record values over time useless for",
    "start": "3101200",
    "end": "3107720"
  },
  {
    "text": "anything else fantastic for monitoring and metrics and app metrics will push",
    "start": "3107720",
    "end": "3112839"
  },
  {
    "text": "stuff out to that it'll also push it out to graphite and Prometheus and various other sources if you want it to to actually look at",
    "start": "3112839",
    "end": "3119920"
  },
  {
    "text": "what's in your influx DB you need to use grafana and so I'm going to go to gra uh",
    "start": "3119920",
    "end": "3124960"
  },
  {
    "text": "go back to my browser and I'm going to go to Port",
    "start": "3124960",
    "end": "3134359"
  },
  {
    "text": "3,000 because that's where I bound grafana to and I'm going to go to admin admin",
    "start": "3134359",
    "end": "3141880"
  },
  {
    "text": "and log in there and then I'm going to add my data source and that's going to be HTTP code on influx DB colon",
    "start": "3141880",
    "end": "3149839"
  },
  {
    "text": "8086 and it's not graphite it's influx DB and the database is at metrics okay",
    "start": "3149839",
    "end": "3157920"
  },
  {
    "text": "and this is going to be my default data source and that's",
    "start": "3157920",
    "end": "3163680"
  },
  {
    "text": "added and that hasn't worked oh that's yes sorry",
    "start": "3169000",
    "end": "3178519"
  },
  {
    "text": "influx um actually no let's call it app metric I put the host in the wrong",
    "start": "3178920",
    "end": "3188160"
  },
  {
    "text": "place right okay success data source is",
    "start": "3190200",
    "end": "3195920"
  },
  {
    "text": "working so now in my lovely new world I go to here and it says oh you need to",
    "start": "3195920",
    "end": "3201960"
  },
  {
    "text": "create a new dashboard and I go how do I create and then it's got this thing here and then I'm going to say I want to",
    "start": "3201960",
    "end": "3207200"
  },
  {
    "text": "graph I don't how do I add things to this graph grafana is quite complicated okay so now this is my favorite thing",
    "start": "3207200",
    "end": "3214040"
  },
  {
    "text": "about this at metric project the people who make grafana run a kind of repository where you can put templates",
    "start": "3214040",
    "end": "3220960"
  },
  {
    "text": "for dashboards okay and the guy who's done the app metric open source library",
    "start": "3220960",
    "end": "3226760"
  },
  {
    "text": "has created a template specifically for the output of the app metric uh library",
    "start": "3226760",
    "end": "3232599"
  },
  {
    "text": "and so I can go to um dashboard and say",
    "start": "3232599",
    "end": "3237799"
  },
  {
    "text": "import uh and I'm going to ignore my changes there so I can either upload a Json file which I've exported from",
    "start": "3237799",
    "end": "3244480"
  },
  {
    "text": "somewhere else or I can get one from the grafana dashboard and the grafana dashboard so",
    "start": "3244480",
    "end": "3251799"
  },
  {
    "text": "go to grafana Labs here and you can see we've got the app metrics web monitoring influx DB and we've got a dashboard and",
    "start": "3251799",
    "end": "3258760"
  },
  {
    "text": "its identity is 2125 so I can go back to here and just say 2125 uh and it goes off and it finds it",
    "start": "3258760",
    "end": "3266240"
  },
  {
    "text": "and I'm going to say import that and I immediately get this amazing like",
    "start": "3266240",
    "end": "3271920"
  },
  {
    "text": "brilliant dashboard where it's saying things are healthy um and if I go back to my rocket stop and I say Docker",
    "start": "3271920",
    "end": "3279480"
  },
  {
    "text": "ship um and why have you oh no that's not the right one that's why Local Host",
    "start": "3279480",
    "end": "3287440"
  },
  {
    "text": "8081 um and go to SL docking uh and then I can say Docker ship and put it in Bay",
    "start": "3287680",
    "end": "3295559"
  },
  {
    "text": "F and I can can dock the Millennium Falcon in there because I",
    "start": "3295559",
    "end": "3301520"
  },
  {
    "text": "don't care um I'm going to mix uh hitchhiker's guy to the Galaxy in Star Wars and if you don't like it you can",
    "start": "3301520",
    "end": "3307400"
  },
  {
    "text": "start off um okay and then I can go back to my metric dashboard here and I've got my",
    "start": "3307400",
    "end": "3313960"
  },
  {
    "text": "overview thing at the top here that's showing these are how many errors I've got these are my requests per minute",
    "start": "3313960",
    "end": "3319920"
  },
  {
    "text": "it's like a proper dashboard and I just had to type in 2125 to get it out and",
    "start": "3319920",
    "end": "3325359"
  },
  {
    "text": "now I can stick this well actually what I can do now is I can play Forza Horizon 3 for the rest of the",
    "start": "3325359",
    "end": "3330839"
  },
  {
    "text": "day and then at 5:25 I can put this up on the big screen and pretend this is what I've been doing all day um so",
    "start": "3330839",
    "end": "3338680"
  },
  {
    "text": "that's that's how I work does anyone want to hire me by the way I no you're",
    "start": "3338680",
    "end": "3345200"
  },
  {
    "text": "mean so anyway and all the instructions to do that are on the site it's app",
    "start": "3345200",
    "end": "3350400"
  },
  {
    "text": "dmetrics doio so that's that's the kind of that's the visual bit um of what I",
    "start": "3350400",
    "end": "3355760"
  },
  {
    "text": "could demonstrate great the stuff that uh is also",
    "start": "3355760",
    "end": "3360920"
  },
  {
    "text": "outstanding um that you need to worry about and I'm going to recommend a couple of things to look at but I",
    "start": "3360920",
    "end": "3366960"
  },
  {
    "text": "haven't got time for the demos cuz the rest of it was so cool um so but yes the",
    "start": "3366960",
    "end": "3372920"
  },
  {
    "text": "rabbit hole goes really really really deep okay um so there's uh service",
    "start": "3372920",
    "end": "3379720"
  },
  {
    "text": "Discovery once you've got all these Services up and running you need to be able to find all the different Services it's okay for all the stuff you've got",
    "start": "3379720",
    "end": "3386079"
  },
  {
    "text": "running running inside Docker whether you're running in swarm or kubernetes or whatever because they provide DNS so you",
    "start": "3386079",
    "end": "3391680"
  },
  {
    "text": "just use the name of the service and you can see it but if you've got things outside like with 12 Factor apps you're",
    "start": "3391680",
    "end": "3397319"
  },
  {
    "text": "talking to an a SQL database or a postr or something external then you need to",
    "start": "3397319",
    "end": "3402720"
  },
  {
    "text": "put the URLs for that so you need a distributed service Discovery uh system",
    "start": "3402720",
    "end": "3408039"
  },
  {
    "text": "something like console uh is great that's from Hashi cor there's etcd there's zookeeper if you really want to",
    "start": "3408039",
    "end": "3414720"
  },
  {
    "text": "just piss off your um Ops people say get a zookeeper cluster up and keep it running um that'll just take one of them",
    "start": "3414720",
    "end": "3422280"
  },
  {
    "text": "completely out of the running um so yes and for working with console and SED",
    "start": "3422280",
    "end": "3427680"
  },
  {
    "text": "there's a library called microphone that you can use uh which is a little bit abandoned but um it it works okay he",
    "start": "3427680",
    "end": "3434520"
  },
  {
    "text": "just hasn't updated it for for net core 2.0 yet uh the circuit breaker pattern there's a couple of libraries for that",
    "start": "3434520",
    "end": "3440480"
  },
  {
    "text": "there's poly uh which is not just circuit breaker it does a whole kind of exponential retries for um kind of",
    "start": "3440480",
    "end": "3447000"
  },
  {
    "text": "temporary partitions and so forth there's also circuit breaker. net which is a more kind of literal circuit",
    "start": "3447000",
    "end": "3452640"
  },
  {
    "text": "breaker Library um there are other protocols that you're going to have to start",
    "start": "3452640",
    "end": "3457680"
  },
  {
    "text": "looking at using so HTTP is not necessarily the best most efficient protocol for services in a microservice",
    "start": "3457680",
    "end": "3464240"
  },
  {
    "text": "cluster to communicate there are things like grpc and Thrift and there are libraries for running grpc and Thrift",
    "start": "3464240",
    "end": "3471559"
  },
  {
    "text": "protocols client and server in C um but according to David Fowler in the talk uh",
    "start": "3471559",
    "end": "3478640"
  },
  {
    "text": "on ASP net Futures last night one of the things they're looking to do with krol is abstract the concept of HTTP away",
    "start": "3478640",
    "end": "3486119"
  },
  {
    "text": "from Kestrel so Kestrel becomes like a networking um server more like libuv and",
    "start": "3486119",
    "end": "3492280"
  },
  {
    "text": "then uh you'll be able to run grpc or Thrift kind of directly on top of kestrel um so that's going to be cool uh",
    "start": "3492280",
    "end": "3499880"
  },
  {
    "text": "there's actors so once you get into this thing where you go I got hundreds of microservices and I'm Distributing a job",
    "start": "3499880",
    "end": "3505559"
  },
  {
    "text": "and pushing it out and I want all of you to just solve different bits of this and then we'll pull it all back in again and",
    "start": "3505559",
    "end": "3511000"
  },
  {
    "text": "turn it into a response so then you start looking at actor Frameworks so you got a.net which is a literal Port of the",
    "start": "3511000",
    "end": "3516799"
  },
  {
    "text": "Java ACA framework you've got Proto actor which is a kind of what would happen if we started it from scratch",
    "start": "3516799",
    "end": "3523000"
  },
  {
    "text": "you've got orans which is Microsoft's version of this thing um and so you need to start looking at those things as well",
    "start": "3523000",
    "end": "3529359"
  },
  {
    "text": "you've got distributed code so you need things like buses and rabbit mq and zero mq and redis for storing data that's",
    "start": "3529359",
    "end": "3538039"
  },
  {
    "text": "being worked on by a whole bunch of different actors so that they can all pull it out and push it back in again",
    "start": "3538039",
    "end": "3543079"
  },
  {
    "text": "and create uh collaborated results um the monitoring thing which I don't have time to show you which is Zipkin uh",
    "start": "3543079",
    "end": "3550280"
  },
  {
    "text": "Zipkin will Mark a request when it comes into one service and then you wrap it around your requests to other services",
    "start": "3550280",
    "end": "3557640"
  },
  {
    "text": "and it creates a distributed Trace so you get like a a Gant chart that says",
    "start": "3557640",
    "end": "3563559"
  },
  {
    "text": "okay the overall request took this long but but this request within it took this long and this request within that took",
    "start": "3563559",
    "end": "3569400"
  },
  {
    "text": "that long and it's like one of those function timer things that you get when you profile AET application except it's",
    "start": "3569400",
    "end": "3575760"
  },
  {
    "text": "run across the entire thing it's based on a white paper by Google but it was actually created by Twitter and there's",
    "start": "3575760",
    "end": "3581640"
  },
  {
    "text": "a c Shar library for it uh Zipkin 4net is the one that works best at the moment",
    "start": "3581640",
    "end": "3587200"
  },
  {
    "text": "so there's all this sort of stuff to come as well in this new net world and that's without even thinking that maybe",
    "start": "3587200",
    "end": "3594000"
  },
  {
    "text": "now we've got this proper modern lightweight opsource distributed code",
    "start": "3594000",
    "end": "3600319"
  },
  {
    "text": "Factory that we can use maybe we can create something new like the Java guys have been doing and the go guys have",
    "start": "3600319",
    "end": "3606319"
  },
  {
    "text": "been doing and we can do it in net and we can stick it out there so go and do it thank you very",
    "start": "3606319",
    "end": "3612860"
  },
  {
    "text": "[Applause]",
    "start": "3612860",
    "end": "3617139"
  },
  {
    "text": "much",
    "start": "3619920",
    "end": "3622920"
  }
]