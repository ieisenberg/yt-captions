[
  {
    "start": "0",
    "end": "228000"
  },
  {
    "text": "okay hi welcome",
    "start": "1020",
    "end": "5419"
  },
  {
    "text": "thank you so how many of you have been to Philippe's excellent talk just before",
    "start": "6720",
    "end": "12840"
  },
  {
    "text": "this one yeah excellent so we can leave [Laughter]",
    "start": "12840",
    "end": "18359"
  },
  {
    "text": "it almost feels a little bit pointless now to talk about all of this that's why I I decided I'm you know like",
    "start": "18359",
    "end": "24359"
  },
  {
    "text": "basically the talk has two parts one is more like the how and um sorry the why and the tech the the historical",
    "start": "24359",
    "end": "30960"
  },
  {
    "text": "perspective so to speak I'm gonna like try to get through this a little bit quicker because we are at a security",
    "start": "30960",
    "end": "36120"
  },
  {
    "text": "conference I think you all believe me that Crossfire request forgery does exist yeah which not not everyone does",
    "start": "36120",
    "end": "43020"
  },
  {
    "text": "but and and then we're going to focus more on the BFF part and uh you know like how",
    "start": "43020",
    "end": "48780"
  },
  {
    "text": "we build it uh how you can build it uh and and some things we learned along the",
    "start": "48780",
    "end": "53940"
  },
  {
    "text": "way I guess okay so my name is Dominic I do security",
    "start": "53940",
    "end": "59280"
  },
  {
    "text": "for a living and I've built a couple of uh projects",
    "start": "59280",
    "end": "64320"
  },
  {
    "text": "like identity server and also this BFF library that we are that we build based on you know Lessons Learned",
    "start": "64320",
    "end": "70680"
  },
  {
    "text": "um from this talk and and many many other things um oh yeah and the you can reach me here",
    "start": "70680",
    "end": "77460"
  },
  {
    "text": "and the slides are here on speaker deck so if you want to have the slides afterwards just feel free to download",
    "start": "77460",
    "end": "82680"
  },
  {
    "text": "them good so as I said um I want to first look a little bit at",
    "start": "82680",
    "end": "88619"
  },
  {
    "text": "history where we are yeah um or where we are coming from and then and then",
    "start": "88619",
    "end": "94140"
  },
  {
    "text": "basically looking uh spending more time with the this new uh new ish actually uh",
    "start": "94140",
    "end": "99720"
  },
  {
    "text": "idea of a BFF which is not best friends forever as you probably know it's uh it's a uh back end for front end yeah so",
    "start": "99720",
    "end": "108360"
  },
  {
    "text": "um basically you know um if you've been doing that stuff for long enough like like me right I mean I have the gray",
    "start": "108360",
    "end": "114899"
  },
  {
    "text": "hair to prove it um you've seen multiple waves of guidance how to secure front-end",
    "start": "114899",
    "end": "121680"
  },
  {
    "text": "applications right it's it's a bit like a pendulum yeah that's the way I see this yeah first we were swinging totally",
    "start": "121680",
    "end": "127140"
  },
  {
    "text": "towards uh secure everything with cookies right and then cookies we had some problems with that and we were",
    "start": "127140",
    "end": "132360"
  },
  {
    "text": "swinging more like secure everything with tokens yeah and now as often the",
    "start": "132360",
    "end": "137459"
  },
  {
    "text": "truth I guess is somewhere in the middle which brings us then to the back end for a front-end pattern which kind of tries",
    "start": "137459",
    "end": "142920"
  },
  {
    "text": "to separate the concerns between the UI and the security Parts okay",
    "start": "142920",
    "end": "148560"
  },
  {
    "text": "so yeah so let's go quickly over this um one thing um I I've got called out recently by on",
    "start": "148560",
    "end": "155879"
  },
  {
    "text": "Hacker News saying like ah this guy doesn't know anything about spas and JavaScript why would we listen to him",
    "start": "155879",
    "end": "161879"
  },
  {
    "text": "yeah his security guidance doesn't apply to us yeah um I wrote this blog post with the title",
    "start": "161879",
    "end": "168060"
  },
  {
    "text": "Spas are dead which is of course perfect click bait yeah",
    "start": "168060",
    "end": "174000"
  },
  {
    "text": "um but I said in the very first sentence yeah that's a joke people didn't read that far I think",
    "start": "174000",
    "end": "181160"
  },
  {
    "text": "um so whenever I talk about spas or browser-based applications or you know Blazer awesome or whatever you want to",
    "start": "182819",
    "end": "189480"
  },
  {
    "text": "call it it's from my point of view which is typically business applications okay so",
    "start": "189480",
    "end": "195959"
  },
  {
    "text": "we have a browser-based application running in the browser I very often deal with authentication typically via openly",
    "start": "195959",
    "end": "201720"
  },
  {
    "text": "connect for you know single sign-on purposes for Federation software as a service you know all of these scenarios",
    "start": "201720",
    "end": "208319"
  },
  {
    "text": "and I pretty often deal with then you have to call apis from that front end and very often oauth is somewhere used",
    "start": "208319",
    "end": "214800"
  },
  {
    "text": "in that architecture now so that's kind of like the world I'm living in and I totally acknowledge that there might be",
    "start": "214800",
    "end": "220799"
  },
  {
    "text": "spars out there that don't have this architecture and maybe for these bars the talk doesn't apply who knows I don't",
    "start": "220799",
    "end": "226799"
  },
  {
    "text": "know them yeah so um as I said when I started writing web",
    "start": "226799",
    "end": "234360"
  },
  {
    "text": "applications right that was like uh classic ASP for example Microsoft active",
    "start": "234360",
    "end": "239760"
  },
  {
    "text": "server Pages you know afterwards asp.net yeah and pretty much everything was",
    "start": "239760",
    "end": "245879"
  },
  {
    "text": "what the cool kids today call server side rendered applications right it's a new invention yeah it means",
    "start": "245879",
    "end": "253200"
  },
  {
    "text": "that that the UI is coming from the server um and you know pretty much we use the",
    "start": "253200",
    "end": "259620"
  },
  {
    "text": "postback model right you rendered a page there was a form you click a button you submit back to the server and the cookie",
    "start": "259620",
    "end": "265440"
  },
  {
    "text": "right was authenticating that postback back to the server right and then Microsoft or at some point the the HX",
    "start": "265440",
    "end": "273060"
  },
  {
    "text": "term got coined right and Microsoft does anyone remember the HX control toolkit",
    "start": "273060",
    "end": "278699"
  },
  {
    "text": "for for asp.net Brilliant Invention right you just slapped something on no more flickering in the browser which was",
    "start": "278699",
    "end": "285180"
  },
  {
    "text": "the goal we wanted to achieve right it was horrible technically and again it it used this",
    "start": "285180",
    "end": "294000"
  },
  {
    "text": "thing called you know HX calls under the covers to to avoid the postback but it was still using cookies of course to to",
    "start": "294000",
    "end": "300300"
  },
  {
    "text": "secure the whole thing right um and then at some point in cross-centric respiratory was discovered",
    "start": "300300",
    "end": "306300"
  },
  {
    "text": "right um which is exactly attacking this that the browser is just sending the cookie",
    "start": "306300",
    "end": "312840"
  },
  {
    "text": "on your behalf automatically there's nothing you have to do right and I think the very first or the very first known",
    "start": "312840",
    "end": "318900"
  },
  {
    "text": "to me big web application that was uh attacked using sea serve was Amazon",
    "start": "318900",
    "end": "324120"
  },
  {
    "text": "right you you remember the one click buy button where you had like a link on the web page and you clicked the link and",
    "start": "324120",
    "end": "330300"
  },
  {
    "text": "you bought a book and it was using basically the fact that you are logged into Amazon the cookie",
    "start": "330300",
    "end": "335340"
  },
  {
    "text": "travels along you click the link you buy the book now guess what if I put up a blog post about my book and I put like",
    "start": "335340",
    "end": "342180"
  },
  {
    "text": "an image tag on that and put the image source to that one click buy button you're not only reading my blog post",
    "start": "342180",
    "end": "347220"
  },
  {
    "text": "you're also buying my book right and that was basically",
    "start": "347220",
    "end": "352500"
  },
  {
    "text": "um crosstalk request forgery and the way it worked is basically you know you open a tab in your browser you go to your application you log in the browser sends",
    "start": "352500",
    "end": "359460"
  },
  {
    "text": "you an authentication cookie and you're good to go right and now imagine you're opening another tab in",
    "start": "359460",
    "end": "365520"
  },
  {
    "text": "the browser you're going to evil.com whatever right um and then evil.com starts making HTTP",
    "start": "365520",
    "end": "371940"
  },
  {
    "text": "calls to the application backend yeah calling something and by and basically",
    "start": "371940",
    "end": "377520"
  },
  {
    "text": "because the browser has an authentication cookie for the server-side app it's going to send along that authentication cookie here as well",
    "start": "377520",
    "end": "382740"
  },
  {
    "text": "right um that doesn't even need Ajax right you could just do four on postbacks or you",
    "start": "382740",
    "end": "388259"
  },
  {
    "text": "know things like that yeah um so that's cross request forgery normally I would I would do a demo for",
    "start": "388259",
    "end": "394560"
  },
  {
    "text": "that as I said I believe you that you believe me yeah um so that was a problem because people",
    "start": "394560",
    "end": "401220"
  },
  {
    "text": "started securing their api-ish endpoints using cookies yeah and when we",
    "start": "401220",
    "end": "407580"
  },
  {
    "text": "discovered this it it became possible to call these API endpoints from a from a",
    "start": "407580",
    "end": "413580"
  },
  {
    "text": "third party right from from a from across side that's where the name comes from yeah",
    "start": "413580",
    "end": "418800"
  },
  {
    "text": "um and for everyone who did MVC in their life they know there is a countermeasure for that right it's called anti-fortery",
    "start": "418800",
    "end": "426120"
  },
  {
    "text": "tokens yeah and the way nd43 tokens worked is is that when you're rendering",
    "start": "426120",
    "end": "431220"
  },
  {
    "text": "down a form yeah they are setting an md43 cookie and they are embedding an",
    "start": "431220",
    "end": "437280"
  },
  {
    "text": "anti-forgery token into the form field right um which is like an application",
    "start": "437280",
    "end": "442860"
  },
  {
    "text": "generated secret if you like um and when you're posting back the form uh both values post back the cookie and",
    "start": "442860",
    "end": "449759"
  },
  {
    "text": "the hidden field you had a server-side filter running here that looked at both values if they were fine okay good we'll",
    "start": "449759",
    "end": "456720"
  },
  {
    "text": "be good to go okay pretty much every MVC developer in the world knows this right",
    "start": "456720",
    "end": "462599"
  },
  {
    "text": "because it was part of all the templates that Microsoft put out there",
    "start": "462599",
    "end": "467699"
  },
  {
    "text": "what about web apis did you secure them in the same way",
    "start": "467699",
    "end": "475400"
  },
  {
    "text": "well in theory yes right um the the solution could have been right you're rendering down the form",
    "start": "477120",
    "end": "483120"
  },
  {
    "text": "um and then when you're making making the HX callback you're sending the cookie and you are reading the value of",
    "start": "483120",
    "end": "488639"
  },
  {
    "text": "that field here and you're putting it on a header and sending back to the server how many of you did that",
    "start": "488639",
    "end": "494280"
  },
  {
    "text": "a couple right but much less than everybody just said like yeah NBC right why because",
    "start": "494280",
    "end": "499740"
  },
  {
    "text": "Microsoft was never including this in the templates right many people didn't know about this that that you have to do",
    "start": "499740",
    "end": "505979"
  },
  {
    "text": "this yeah um and I did a lot of code reviews in my life where I found exactly that all the",
    "start": "505979",
    "end": "512520"
  },
  {
    "text": "NBC endpoints were perfectly secured but the API endpoints were just open to across that request forgery ma'am so",
    "start": "512520",
    "end": "520020"
  },
  {
    "text": "um this was a problem right and um this is now getting us closer to our story here is um",
    "start": "520020",
    "end": "526260"
  },
  {
    "text": "the ietf saw that problem too right and the IIT I said okay you know what we're working on this overall spec",
    "start": "526260",
    "end": "533519"
  },
  {
    "text": "um how about we try to start off the browser problem as well and see since at this at",
    "start": "533519",
    "end": "542100"
  },
  {
    "text": "this moment in time it all boiled down to that the cookies are the problems here so why don't we replace the cookies",
    "start": "542100",
    "end": "548399"
  },
  {
    "text": "with tokens right tokens have this nice properties that they are not sent automatically by",
    "start": "548399",
    "end": "555720"
  },
  {
    "text": "the browser you have to explicitly send them which means crosstalk request forgery is not the issue here yeah",
    "start": "555720",
    "end": "562380"
  },
  {
    "text": "um also people like the idea that with tokens you could come you could now send",
    "start": "562380",
    "end": "567959"
  },
  {
    "text": "stuff cross origin or cross side which you couldn't do um with cookies so",
    "start": "567959",
    "end": "574260"
  },
  {
    "text": "there's actually when when you go back to the overall archive every single email that they ever wrote about the",
    "start": "574260",
    "end": "581279"
  },
  {
    "text": "overall spec is archived yeah and when you go back to 2000 I don't know nine or",
    "start": "581279",
    "end": "586860"
  },
  {
    "text": "something someone said like we should think about overall for browser-based applications and the immediate response",
    "start": "586860",
    "end": "593160"
  },
  {
    "text": "was why would you ever build an application using JavaScript so",
    "start": "593160",
    "end": "599040"
  },
  {
    "text": "so they didn't consider this in in the first place but there were some people saying yeah this is going to be a thing",
    "start": "599040",
    "end": "604260"
  },
  {
    "text": "yeah believe me and um so they started thinking about this and uh By the time",
    "start": "604260",
    "end": "611279"
  },
  {
    "text": "um um you know like the the code flow in oauth did exist before but the code for",
    "start": "611279",
    "end": "617399"
  },
  {
    "text": "didn't work because you could not do cross-origin HX calls in JavaScript and",
    "start": "617399",
    "end": "622620"
  },
  {
    "text": "that would be the you know the prerequisite for getting the back Channel token so they came up with this other thing called implicit flows yeah",
    "start": "622620",
    "end": "628500"
  },
  {
    "text": "and at the implicit flow which kind of is an evil hack right uh and what the",
    "start": "628500",
    "end": "634260"
  },
  {
    "text": "implicit flow try to solve is doing um cross-origin requests and the the",
    "start": "634260",
    "end": "639959"
  },
  {
    "text": "solution for that was we're gonna basically make the whole or thing work with redirects only yeah like top level",
    "start": "639959",
    "end": "646560"
  },
  {
    "text": "redirects and we're gonna ship our tokens over urls okay so just you know",
    "start": "646560",
    "end": "652860"
  },
  {
    "text": "I'm sorry but I have flows on my slide just to recap that right that's how",
    "start": "652860",
    "end": "658200"
  },
  {
    "text": "implicit flow worked you made a token request to the server the server send you back the access token on the URL and",
    "start": "658200",
    "end": "664680"
  },
  {
    "text": "then you would store the access token in inside of your browser right and then",
    "start": "664680",
    "end": "669720"
  },
  {
    "text": "you would use it now is that good from a security point of",
    "start": "669720",
    "end": "675000"
  },
  {
    "text": "view I mean to make it short no",
    "start": "675000",
    "end": "679940"
  },
  {
    "start": "677000",
    "end": "793000"
  },
  {
    "text": "um transmission of tokens over URLs is is",
    "start": "681720",
    "end": "687240"
  },
  {
    "text": "leaky as it can get okay these URLs are ending up in log files in browser histories in",
    "start": "687240",
    "end": "694800"
  },
  {
    "text": "Reverse proxies in referral headers right and you could link them with your own problems and and so on so there were",
    "start": "694800",
    "end": "701579"
  },
  {
    "text": "lots of ways how you could um leak those tokens right and since",
    "start": "701579",
    "end": "707640"
  },
  {
    "text": "there are better tokens for all of you that know you know came to my talk yesterday they are better tokens once you have the token you can use it ma'am",
    "start": "707640",
    "end": "714959"
  },
  {
    "text": "um so they they did the first thing they try to fix now and um fast forwarding to",
    "start": "714959",
    "end": "722940"
  },
  {
    "text": "today is they deprecated this flow altogether because they thought okay the only reason we invented this flow was",
    "start": "722940",
    "end": "729000"
  },
  {
    "text": "because certain things did not exist back then for example cross origin uh",
    "start": "729000",
    "end": "734100"
  },
  {
    "text": "you know HX calls for example yeah so they said okay now we have that course right now we have that we don't need it",
    "start": "734100",
    "end": "740760"
  },
  {
    "text": "anymore and we can make this much better right so they said okay and from now on applications will use the code flow the",
    "start": "740760",
    "end": "747019"
  },
  {
    "text": "browser-based applications which in a nutshell looks like this right you're first opening the front Channel doing all of your UI stuff and then you're",
    "start": "747019",
    "end": "753720"
  },
  {
    "text": "getting the actual access token over a back Channel yeah like an HX call basically which means it does not need",
    "start": "753720",
    "end": "760019"
  },
  {
    "text": "to be transmitted anymore over the URL",
    "start": "760019",
    "end": "766200"
  },
  {
    "text": "okay so they solved one problem but",
    "start": "766200",
    "end": "771360"
  },
  {
    "text": "you still have to store that token and manage it in inside the browser which is the other half of the equation which you",
    "start": "771360",
    "end": "778200"
  },
  {
    "text": "know Philip just explained in great detail is not secure because we have the problem of",
    "start": "778200",
    "end": "783300"
  },
  {
    "text": "cross-site scripting and once you have cross-eyed scripting or other similar things you can either exfiltrate that token or reuse some other state in the",
    "start": "783300",
    "end": "791459"
  },
  {
    "text": "front and to to get your own tokens right so that's the main problem here token",
    "start": "791459",
    "end": "797160"
  },
  {
    "start": "793000",
    "end": "1025000"
  },
  {
    "text": "storage is an unsolved problem in browsers there is no Secure Storage in the",
    "start": "797160",
    "end": "804060"
  },
  {
    "text": "browser right every storage mechanism by Design is accessible from JavaScript and whatever is accessible from JavaScript",
    "start": "804060",
    "end": "809339"
  },
  {
    "text": "is accessible from malicious JavaScript injected into your code right",
    "start": "809339",
    "end": "814800"
  },
  {
    "text": "um and again I'm feeling like I'm repeating Philips",
    "start": "814800",
    "end": "820399"
  },
  {
    "text": "story here it is on top of the ovest top 10 for the last",
    "start": "820399",
    "end": "826620"
  },
  {
    "text": "15 years or 10 years or whatever right some sort of injection attacks I'm pretty cool there's some research from",
    "start": "826620",
    "end": "832380"
  },
  {
    "text": "Google showing that Specter attacks you know the thing where you can start you know expect there was this this attack",
    "start": "832380",
    "end": "838139"
  },
  {
    "text": "against servers where you could start reading RAM on the server that they also work in browsers right so you could",
    "start": "838139",
    "end": "845160"
  },
  {
    "text": "potentially with with valid JavaScript yeah start poking around in the in the",
    "start": "845160",
    "end": "850860"
  },
  {
    "text": "ram of the browser process for example yeah so again the browser is not a great",
    "start": "850860",
    "end": "856320"
  },
  {
    "text": "place to store tokens yeah that's why back then in the implicit flow they they",
    "start": "856320",
    "end": "862380"
  },
  {
    "text": "thought like yeah okay this is going to be a problem that's why they did not allow refresh tokens in the first place right because refresh tokens if you if",
    "start": "862380",
    "end": "869519"
  },
  {
    "text": "you leak an access token that's bad if you leak a refresh token that's even worse because that allows the attacker to get new access tokens right so",
    "start": "869519",
    "end": "877680"
  },
  {
    "text": "um let me show you that so that's um a JavaScript library that we worked on many years ago and basically this is",
    "start": "877680",
    "end": "884519"
  },
  {
    "text": "exactly doing what the overall spec was suggesting you're driving the complete open by the connect and overflow from",
    "start": "884519",
    "end": "890820"
  },
  {
    "text": "the browser with code flow Pixi all the bells and whistles okay",
    "start": "890820",
    "end": "898320"
  },
  {
    "text": "um so when I run this",
    "start": "898320",
    "end": "902420"
  },
  {
    "text": "right I'm at the same design school as a Philip",
    "start": "905279",
    "end": "910699"
  },
  {
    "text": "um you know you log in you're getting your login UI",
    "start": "912300",
    "end": "919680"
  },
  {
    "text": "all of the old magic is happening bam tokens in the browser right and now the API can start as",
    "start": "919680",
    "end": "926339"
  },
  {
    "text": "already the client can start calling calling apis of course these tokens need to be stored somewhere right in in this",
    "start": "926339",
    "end": "933660"
  },
  {
    "text": "case it is a",
    "start": "933660",
    "end": "938300"
  },
  {
    "text": "where is it word",
    "start": "939660",
    "end": "945079"
  },
  {
    "text": "where are my tokens data they used to be in in session storage I know that's weird let's restart",
    "start": "949079",
    "end": "956060"
  },
  {
    "text": "log in",
    "start": "958500",
    "end": "961160"
  },
  {
    "text": "hmm huh it doesn't matter you get my point yeah",
    "start": "970139",
    "end": "976920"
  },
  {
    "text": "um I I'm not sure why this is not working this worked like an hour ago um but you know they are somewhere in",
    "start": "976920",
    "end": "982980"
  },
  {
    "text": "the browser okay in memory in session storage in local storage indexeddb whatever and when you're getting",
    "start": "982980",
    "end": "989940"
  },
  {
    "text": "um uh um and an injection attack of thoughts you can steal that token okay",
    "start": "989940",
    "end": "998220"
  },
  {
    "text": "so as I said and that's why originally um the implicit flow disallowed refresh",
    "start": "998220",
    "end": "1004220"
  },
  {
    "text": "tokens because to mitigate that risk but refresh tokens are a way of of doing",
    "start": "1004220",
    "end": "1009500"
  },
  {
    "text": "session management for apis right because the access token will expire at some point and then you need a new",
    "start": "1009500",
    "end": "1015380"
  },
  {
    "text": "access token right I mean that's just the way it works um so you know",
    "start": "1015380",
    "end": "1020899"
  },
  {
    "text": "um replacement technology for that which I want to talk about next",
    "start": "1020899",
    "end": "1026540"
  },
  {
    "start": "1025000",
    "end": "1229000"
  },
  {
    "text": "um so in absence of refresh tokens the over the openly connect people invented a",
    "start": "1026540",
    "end": "1033740"
  },
  {
    "text": "couple of workarounds again for being able to get new access tokens based on",
    "start": "1033740",
    "end": "1039620"
  },
  {
    "text": "the session lifetime you have with the with the um with the authorization server called Silent renew and I'll show",
    "start": "1039620",
    "end": "1046160"
  },
  {
    "text": "you that in a second um and another thing that is a concern",
    "start": "1046160",
    "end": "1051380"
  },
  {
    "text": "for a business application is if the session ends on the authorization server or on the openly connect provider or if",
    "start": "1051380",
    "end": "1058460"
  },
  {
    "text": "the user logs out somewhere how do you send log out messages to your client applications right which is in",
    "start": "1058460",
    "end": "1064880"
  },
  {
    "text": "JavaScript a little bit a little bit more complicated because they are not you know by definition not connected so they came up with a couple of techniques",
    "start": "1064880",
    "end": "1072559"
  },
  {
    "text": "that I want to show you here um so I'm not sure about it is not working",
    "start": "1072559",
    "end": "1080059"
  },
  {
    "text": "um but you see here um so the first the first problem let's say",
    "start": "1080059",
    "end": "1087679"
  },
  {
    "text": "is how how do we send um well no the first problem is how how do we get new tokens okay so you see",
    "start": "1087679",
    "end": "1094580"
  },
  {
    "text": "there's there's this renew token button here and the idea is that the application monitors the token Lifetime and when the token lifetime comes to an",
    "start": "1094580",
    "end": "1101480"
  },
  {
    "text": "end it silently gets a new token okay so [Music] um",
    "start": "1101480",
    "end": "1107419"
  },
  {
    "text": "when I click the renew token um button you see what's happening here",
    "start": "1107419",
    "end": "1112700"
  },
  {
    "text": "it's hard to see especially from the back but for a for a short moment here there's an iframe being opened to the",
    "start": "1112700",
    "end": "1120860"
  },
  {
    "text": "the authorization server back with a special parameter called prompt equals none which basically says don't expect",
    "start": "1120860",
    "end": "1126440"
  },
  {
    "text": "this to be inside inside of a UI flow it's just a way to silently get a new access token to replace the expiring",
    "start": "1126440",
    "end": "1133940"
  },
  {
    "text": "access token in my front end and the nice property about this approach was is",
    "start": "1133940",
    "end": "1139280"
  },
  {
    "text": "that it only works as long as the user has an existing session with the provider right once the session ends the",
    "start": "1139280",
    "end": "1146419"
  },
  {
    "text": "iframe will be unauthenticated there will be no token coming back okay",
    "start": "1146419",
    "end": "1151820"
  },
  {
    "text": "um and the other iframe you see here is a one that points to an endpoint on the",
    "start": "1151820",
    "end": "1158900"
  },
  {
    "text": "provider called the check session endpoint and that idea here is that you opened an iframe in the origin of the",
    "start": "1158900",
    "end": "1166100"
  },
  {
    "text": "open open the connect provider and inside of that there was code running checking if the",
    "start": "1166100",
    "end": "1171740"
  },
  {
    "text": "user is still logged in on the server okay and if the session ends on the server it will post a message back to",
    "start": "1171740",
    "end": "1178940"
  },
  {
    "text": "the hosting application saying hey session has ended please log out the user in the front end okay so these were",
    "start": "1178940",
    "end": "1184460"
  },
  {
    "text": "the two session management features that they introduced a couple of years ago yeah so when I do this do I need classes",
    "start": "1184460",
    "end": "1191960"
  },
  {
    "text": "for that I guess I do um when I go to the Token server here",
    "start": "1191960",
    "end": "1197600"
  },
  {
    "text": "yeah and go here and log out when I press the log out button you know",
    "start": "1197600",
    "end": "1203419"
  },
  {
    "text": "that iframe will detect the cookie is gone it will fire the event and I'm it's",
    "start": "1203419",
    "end": "1209179"
  },
  {
    "text": "magic you are signed out from your application okay so that is um how it used to work",
    "start": "1209179",
    "end": "1216440"
  },
  {
    "text": "and you know part of the talk is is how painful it is for developers to keep up with all of these recommendations that",
    "start": "1216440",
    "end": "1222620"
  },
  {
    "text": "are changing all the time ma'am now",
    "start": "1222620",
    "end": "1227620"
  },
  {
    "start": "1229000",
    "end": "1303000"
  },
  {
    "text": "um this JavaScript that that's kind of like a Side Story here but the JavaScript library that you just saw",
    "start": "1231799",
    "end": "1237200"
  },
  {
    "text": "that implemented all of this silent renew check session and so on that that was written by us a couple of years ago",
    "start": "1237200",
    "end": "1242780"
  },
  {
    "text": "it's called ordc client.js is is anyone using that yeah a couple of people yeah it's an officially certified client",
    "start": "1242780",
    "end": "1250700"
  },
  {
    "text": "Library by the open Money foundation so you know it's it's a blessed implementation yeah uh Brock my",
    "start": "1250700",
    "end": "1257000"
  },
  {
    "text": "colleague who was working on that he didn't well he was frustrated maintaining it yeah",
    "start": "1257000",
    "end": "1263840"
  },
  {
    "text": "you know JavaScript you know the whole JavaScript landscape is changing constantly uh you know you know people",
    "start": "1263840",
    "end": "1270020"
  },
  {
    "text": "said like okay can we open a pop-up for login instead of doing redirect guess what the pop-up how to open a pop-up in",
    "start": "1270020",
    "end": "1276799"
  },
  {
    "text": "a browser is not standardized across any browser for example it works different in Edge and whatever",
    "start": "1276799",
    "end": "1282500"
  },
  {
    "text": "um you know and you have to you know and all of these problems actually led us to",
    "start": "1282500",
    "end": "1287780"
  },
  {
    "text": "to stop maintaining the library okay um",
    "start": "1287780",
    "end": "1293000"
  },
  {
    "text": "on one hand it promoted in our opinion a bad style of storing the tokens in the browser on the other hand which I'll",
    "start": "1293000",
    "end": "1299780"
  },
  {
    "text": "show you next it is not really future proof because browsers are changing ma'am",
    "start": "1299780",
    "end": "1306140"
  },
  {
    "start": "1303000",
    "end": "1531000"
  },
  {
    "text": "um it is pretty much well it is a done deal",
    "start": "1306140",
    "end": "1311240"
  },
  {
    "text": "that every browser will sooner or later change the way how they deal with",
    "start": "1311240",
    "end": "1316520"
  },
  {
    "text": "cookies especially so-called third-party cookies the other basically cookies which are third party to the current",
    "start": "1316520",
    "end": "1321919"
  },
  {
    "text": "domain you are on yeah and the official reason they're doing that is is to stop uh you know tracking in the browser and",
    "start": "1321919",
    "end": "1329059"
  },
  {
    "text": "advertising and so on yeah um and",
    "start": "1329059",
    "end": "1336220"
  },
  {
    "text": "Safari did that already actually already like two years ago yeah they they",
    "start": "1337000",
    "end": "1342260"
  },
  {
    "text": "started a third party blocking any third-party cookie in in your in your application",
    "start": "1342260",
    "end": "1348740"
  },
  {
    "text": "um Chrome wanted to do it and postponed it because I think they were sued by the",
    "start": "1348740",
    "end": "1353960"
  },
  {
    "text": "EU because all of their websites wouldn't work anymore um because they're like this portal",
    "start": "1353960",
    "end": "1359600"
  },
  {
    "text": "style applications right Which pull in iframes from all kinds of places and so on um but yeah people some people refer to",
    "start": "1359600",
    "end": "1366740"
  },
  {
    "text": "that as the Google Chrome cookie apocalypse um because uh does anyone remember when",
    "start": "1366740",
    "end": "1373039"
  },
  {
    "text": "Google introduced same-site cookies like three years ago  break breaks right that's the",
    "start": "1373039",
    "end": "1380600"
  },
  {
    "text": "same thing that's going to happen here again okay so you've seen these two State management",
    "start": "1380600",
    "end": "1386320"
  },
  {
    "text": "techniques right they were both using an iframe pointing to a third-party site which is the openmody connect provider",
    "start": "1386320",
    "end": "1392780"
  },
  {
    "text": "and they both were relying on the fact that in this iframe you are sending the session cookie along right",
    "start": "1392780",
    "end": "1399580"
  },
  {
    "text": "this doesn't work anymore okay so let me show you the same the",
    "start": "1399640",
    "end": "1404659"
  },
  {
    "text": "absolute same application that I just run um this year localhost 5001",
    "start": "1404659",
    "end": "1413500"
  },
  {
    "text": "in safari able I need my glasses",
    "start": "1414140",
    "end": "1422380"
  },
  {
    "text": "Okay so looks almost the same yeah so much for",
    "start": "1423380",
    "end": "1428600"
  },
  {
    "text": "browser standardization um when I know and stuff will happen now yeah when I",
    "start": "1428600",
    "end": "1435740"
  },
  {
    "text": "click the login link but but to explain what is happening is I'm now pressing the login button I go to the Token",
    "start": "1435740",
    "end": "1441860"
  },
  {
    "text": "server come back with the tokens and everything it's going to open the check session iframe it's going to wait for",
    "start": "1441860",
    "end": "1447140"
  },
  {
    "text": "the server to tell them hey they are locked out right but the iframe is oh the iframe is opened across domain",
    "start": "1447140",
    "end": "1453140"
  },
  {
    "text": "boundaries meaning it's a third party site from Safari's point of view it will not send you the session cookie along",
    "start": "1453140",
    "end": "1459200"
  },
  {
    "text": "and the token server will immediately tell the client the user is not even logged in",
    "start": "1459200",
    "end": "1464780"
  },
  {
    "text": "okay so when I do this",
    "start": "1464780",
    "end": "1469059"
  },
  {
    "text": "login",
    "start": "1471260",
    "end": "1473740"
  },
  {
    "text": "yeah of course the renew token thing will not work either because it it it's",
    "start": "1476799",
    "end": "1482780"
  },
  {
    "text": "based on the same technique of sending this session cookie across iframe boundaries so long story short this",
    "start": "1482780",
    "end": "1489679"
  },
  {
    "text": "didn't work anymore which then LED people to make the decision you know what now we're going to bring refresh tokens",
    "start": "1489679",
    "end": "1496460"
  },
  {
    "text": "to the browser right the implicit flow didn't allow it but we're not using implicit flow anymore right the spec",
    "start": "1496460",
    "end": "1501559"
  },
  {
    "text": "doesn't say anything about code flow so it's allowed right and now that this is kind of like",
    "start": "1501559",
    "end": "1506960"
  },
  {
    "text": "where Philippe's talk started right now D is under the assumption that browser-based applications have access and refresh tokens right and now you're",
    "start": "1506960",
    "end": "1513559"
  },
  {
    "text": "running into all of these problems that um we talked about in the previous talk if they can can be exfiltrated it's bad",
    "start": "1513559",
    "end": "1520460"
  },
  {
    "text": "if they can be somehow abused to get new ones it's bad and um you're opening up",
    "start": "1520460",
    "end": "1526640"
  },
  {
    "text": "the attack surface considerably okay um",
    "start": "1526640",
    "end": "1533620"
  },
  {
    "start": "1531000",
    "end": "1617000"
  },
  {
    "text": "Firefox will make that change as well I think Brave I can't remember Brave has",
    "start": "1533799",
    "end": "1539539"
  },
  {
    "text": "an option which is turned off right now they already do it yeah have you ever tried to open Microsoft teams with brave",
    "start": "1539539",
    "end": "1547700"
  },
  {
    "text": "they tell you use it using older browser please this one is too secure",
    "start": "1547700",
    "end": "1553840"
  },
  {
    "text": "yeah yeah",
    "start": "1554480",
    "end": "1557020"
  },
  {
    "text": "it's coming okay every browser will change this Behavior which will break every application that you build let's",
    "start": "1561440",
    "end": "1567260"
  },
  {
    "text": "say three years ago using the current best practices yeah",
    "start": "1567260",
    "end": "1572960"
  },
  {
    "text": "um you know some people argue that Chrome removing cookies from the browser is is a way to stop all of the",
    "start": "1572960",
    "end": "1580159"
  },
  {
    "text": "advertising and tracking networks besides Googles but that's just you know conspiracy theories okay",
    "start": "1580159",
    "end": "1589340"
  },
  {
    "text": "um yeah so yes so we've seen we've seen that it doesn't work anymore yeah um",
    "start": "1590120",
    "end": "1597100"
  },
  {
    "text": "so this leaves us kind of like in a limbo right I mean the cookie only way we saw has the crosstalk address forgery",
    "start": "1597380",
    "end": "1603679"
  },
  {
    "text": "problems the token only way has all of the Crosshair scripting and stuff doesn't work anymore the way we",
    "start": "1603679",
    "end": "1610279"
  },
  {
    "text": "want it and we are forced to pull in refresh tokens and so on um so we have to rethink all of this I",
    "start": "1610279",
    "end": "1616460"
  },
  {
    "text": "think ma'am um now it turns out there are some good browser changes as well",
    "start": "1616460",
    "end": "1622159"
  },
  {
    "start": "1617000",
    "end": "1704000"
  },
  {
    "text": "um you know like when we go back all the time to cross request forgery we identified that the behavior how",
    "start": "1622159",
    "end": "1629059"
  },
  {
    "text": "browsers deal with cookies is the main problem here right because browsers are sending those cookies to whatever origin",
    "start": "1629059",
    "end": "1636320"
  },
  {
    "text": "they came came back in the first place and even if I'm making cross-site requests the browser will just take the cookies and send the cookie across site",
    "start": "1636320",
    "end": "1643279"
  },
  {
    "text": "because they think it's where it belongs right so actually maybe right from the start they should have focused on",
    "start": "1643279",
    "end": "1649279"
  },
  {
    "text": "solving that problem first and that is what happened with this thing called same side or at least they reduced the",
    "start": "1649279",
    "end": "1655760"
  },
  {
    "text": "attack surface considerably by introducing this thing called same side cookies and what same side cookies means",
    "start": "1655760",
    "end": "1661100"
  },
  {
    "text": "is um when you get a cookie from site one it will only send that cookie back to site one if the postback or the call",
    "start": "1661100",
    "end": "1668179"
  },
  {
    "text": "actually comes from site one okay uh and not side two two side one which you",
    "start": "1668179",
    "end": "1674600"
  },
  {
    "text": "would have thought why isn't wasn't that the case right from the start ma'am",
    "start": "1674600",
    "end": "1679700"
  },
  {
    "text": "um so and you know as I said when Google introduced that feature many",
    "start": "1679700",
    "end": "1684919"
  },
  {
    "text": "applications uh were breaking yeah but now two years later or three years later",
    "start": "1684919",
    "end": "1690380"
  },
  {
    "text": "it is pretty much deployed in every single browser these days and the behavior kind of is harmonized mostly I",
    "start": "1690380",
    "end": "1696919"
  },
  {
    "text": "guess um so this is now a real feature we can use to build applications yeah",
    "start": "1696919",
    "end": "1704659"
  },
  {
    "start": "1704000",
    "end": "1750000"
  },
  {
    "text": "um which means we should have we should maybe rethink the whole cookie approach",
    "start": "1704659",
    "end": "1710000"
  },
  {
    "text": "before we even use tokens to solve it okay",
    "start": "1710000",
    "end": "1715039"
  },
  {
    "text": "um at the same time we mentioned it this morning already there is some new uh work going on",
    "start": "1715039",
    "end": "1721640"
  },
  {
    "text": "um at the ietf about how to secure browser-based applications this has been a lingering issue for many many years",
    "start": "1721640",
    "end": "1727700"
  },
  {
    "text": "nobody wanted to touch it because you know they are kind of they knew once you start writing that spec you're going to",
    "start": "1727700",
    "end": "1733400"
  },
  {
    "text": "open Pandora's Box and you will uncover many problems in the browser which are unrelated to oauth and tokens which is",
    "start": "1733400",
    "end": "1740419"
  },
  {
    "text": "just you know just the way it is in browsers yeah um we also mentioned this morning and I'm",
    "start": "1740419",
    "end": "1746840"
  },
  {
    "text": "totally agreeing with Philip that there are some things which are not perfect but",
    "start": "1746840",
    "end": "1752919"
  },
  {
    "start": "1750000",
    "end": "1850000"
  },
  {
    "text": "for me the most essential part of that document is that it makes people aware of you should think",
    "start": "1752960",
    "end": "1759740"
  },
  {
    "text": "um of your web applications in two terms one is applications with a backend and",
    "start": "1759740",
    "end": "1765200"
  },
  {
    "text": "one is applications without a back end right like the the pipe dream of many JavaScript developers was I am just",
    "start": "1765200",
    "end": "1771440"
  },
  {
    "text": "going to deploy my Js and my HTML on on a CDN that's all I need right I don't",
    "start": "1771440",
    "end": "1778340"
  },
  {
    "text": "need a web server for that I don't need a back end right I'm just deploying my application files and then I'm I I'm a",
    "start": "1778340",
    "end": "1783919"
  },
  {
    "text": "standalone application right of course if you are doing this then you have to",
    "start": "1783919",
    "end": "1789559"
  },
  {
    "text": "do your overall in the browser you have to do your open body connect the browser you have to store your talk deposit",
    "start": "1789559",
    "end": "1794779"
  },
  {
    "text": "because there is nothing else that could help you with that right um so the more secure approach they are",
    "start": "1794779",
    "end": "1801980"
  },
  {
    "text": "actually um recommending is applications with a backend meaning you have your",
    "start": "1801980",
    "end": "1807740"
  },
  {
    "text": "browser-based application doing the UI you have an application server that is doing all of the security stuff like",
    "start": "1807740",
    "end": "1814039"
  },
  {
    "text": "overflows tokens token storage token management and you have your backend resources that you access why are and",
    "start": "1814039",
    "end": "1822559"
  },
  {
    "text": "that's that's the thing that Frozen if you love why are the application servers so the the JavaScript does not make API calls anymore directly to the apis it is",
    "start": "1822559",
    "end": "1830659"
  },
  {
    "text": "using the application server who has the tokens and manages the tokens to to basically forward these calls",
    "start": "1830659",
    "end": "1837980"
  },
  {
    "text": "right and that is now what we call or what what many people in the security space call a",
    "start": "1837980",
    "end": "1844640"
  },
  {
    "text": "backend for front-end architecture yeah so in other words I guess uh the the",
    "start": "1844640",
    "end": "1851539"
  },
  {
    "start": "1850000",
    "end": "1894000"
  },
  {
    "text": "classic server side model was like this everything was happening on the application server right uh these are",
    "start": "1851539",
    "end": "1856940"
  },
  {
    "text": "the the fundamental building blocks you have your authentication oauth Library you have session management you have token management and you have your UI",
    "start": "1856940",
    "end": "1862580"
  },
  {
    "text": "okay now the spa era flipped this all around",
    "start": "1862580",
    "end": "1868100"
  },
  {
    "text": "and basically made everyone the browser yeah and the model we are proposing with the BFF is this watch this nice",
    "start": "1868100",
    "end": "1875960"
  },
  {
    "text": "animation okay um we are separating the concerns yeah",
    "start": "1875960",
    "end": "1881720"
  },
  {
    "text": "in the browser you have the UI framework right doing all of the flashy stuff um and then all of the security stuff is",
    "start": "1881720",
    "end": "1888860"
  },
  {
    "text": "going to the application server ma'am okay so how does it work",
    "start": "1888860",
    "end": "1896260"
  },
  {
    "start": "1894000",
    "end": "1963000"
  },
  {
    "text": "so I am an asp.net core guy right so that's what I did and what I built",
    "start": "1897140",
    "end": "1902840"
  },
  {
    "text": "um and the good news is uh 80 of the building blocks are already part of the",
    "start": "1902840",
    "end": "1909320"
  },
  {
    "text": "product so many of that stuff is already in 180 core itself so",
    "start": "1909320",
    "end": "1916279"
  },
  {
    "text": "um for openly connect and oauth we have the openly connect authentication Handler in in a Sprint corpage which is",
    "start": "1916279",
    "end": "1921620"
  },
  {
    "text": "really good which is the best openly connect client I've ever used honestly yeah it covers all of your requirements",
    "start": "1921620",
    "end": "1929240"
  },
  {
    "text": "uh the flows Pixi code flow everything okay so that's a proven",
    "start": "1929240",
    "end": "1935059"
  },
  {
    "text": "server-side component which is by lengths better than anything I've seen for JavaScript yeah",
    "start": "1935059",
    "end": "1941600"
  },
  {
    "text": "um session management right cookies yeah first class citizen in eighth minute core token management not so much that",
    "start": "1941600",
    "end": "1949039"
  },
  {
    "text": "there's a library I wrote I will show you that later um and then API endpoints I will show you how how to do that and then",
    "start": "1949039",
    "end": "1955820"
  },
  {
    "text": "ultimately you have your static assets to serve your HTML CSS JavaScript and so on for the for the UI okay",
    "start": "1955820",
    "end": "1963679"
  },
  {
    "start": "1963000",
    "end": "2040000"
  },
  {
    "text": "so full disclosure um I I worked on a commercial product um called to end the BFF",
    "start": "1963679",
    "end": "1969980"
  },
  {
    "text": "um it is exactly doing what I'm showing you um this is not about selling anything the",
    "start": "1969980",
    "end": "1976220"
  },
  {
    "text": "the the library is free for individuals and companies with less than one million dollars of Revenue if you are above that",
    "start": "1976220",
    "end": "1983179"
  },
  {
    "text": "threshold you can afford it otherwise just keep using it um",
    "start": "1983179",
    "end": "1988760"
  },
  {
    "text": "good so what are the building blocks if you would like to build a BFF using asp.net for all you need a way to serve",
    "start": "1988760",
    "end": "1995539"
  },
  {
    "text": "your static assets right JavaScript HTML CSS um that's where they have the so-called",
    "start": "1995539",
    "end": "2000700"
  },
  {
    "text": "static files middleware in in aspin core you basically point to a directory on your hard disk and then it just serves",
    "start": "2000700",
    "end": "2007240"
  },
  {
    "text": "these things as a CDN basically yeah or a static file server",
    "start": "2007240",
    "end": "2012279"
  },
  {
    "text": "authentication and token requests using the authentication Handler and then we have cookies they support same-site",
    "start": "2012279",
    "end": "2018340"
  },
  {
    "text": "cookies they support all the bells and whistles you can throw in host prefix cookies and you know",
    "start": "2018340",
    "end": "2023980"
  },
  {
    "text": "um other stuff and then you can also layer on top additional ND forgery protection",
    "start": "2023980",
    "end": "2029740"
  },
  {
    "text": "which I'll show you in a second as well yeah",
    "start": "2029740",
    "end": "2035158"
  },
  {
    "text": "I'll show that later as well yeah yes absolutely",
    "start": "2035679",
    "end": "2040899"
  },
  {
    "start": "2040000",
    "end": "2073000"
  },
  {
    "text": "Okay so this morning in the",
    "start": "2040899",
    "end": "2047100"
  },
  {
    "text": "do we expose login and log out now to the front end if it's happening on the server so to speak right",
    "start": "2047919",
    "end": "2054158"
  },
  {
    "text": "um and it's simple right all you have to do on the server side is you're just exposing two endpoints they log in and",
    "start": "2054159",
    "end": "2060280"
  },
  {
    "text": "log out and when the front end calls these login endpoint or the logout endpoint you are triggering your server",
    "start": "2060280",
    "end": "2066520"
  },
  {
    "text": "Side openmodyconnect Library to start the login process or or stop it",
    "start": "2066520",
    "end": "2071980"
  },
  {
    "text": "okay and the way you're doing that is by just plugging in the standard open ID connect authentication Handler for",
    "start": "2071980",
    "end": "2078940"
  },
  {
    "start": "2073000",
    "end": "2121000"
  },
  {
    "text": "Microsoft you configure your oidc stuff right where is my authentication server",
    "start": "2078940",
    "end": "2085060"
  },
  {
    "text": "client ID client secret interesting point right by using that that approach",
    "start": "2085060",
    "end": "2090099"
  },
  {
    "text": "you are turning your spa which used to be a public line into a confidential client because now you are securely",
    "start": "2090099",
    "end": "2096460"
  },
  {
    "text": "storing a secret yeah using Code flow query response",
    "start": "2096460",
    "end": "2101740"
  },
  {
    "text": "um and you are basically asking for the Scopes like API access and that's",
    "start": "2101740",
    "end": "2107200"
  },
  {
    "text": "refresh tokens okay and once there's this this has happened",
    "start": "2107200",
    "end": "2113380"
  },
  {
    "text": "right um then the server Side Library will issue a cookie",
    "start": "2113380",
    "end": "2119500"
  },
  {
    "text": "and once that cookie is established in other words you have a session you basically",
    "start": "2119500",
    "end": "2125140"
  },
  {
    "start": "2121000",
    "end": "2175000"
  },
  {
    "text": "another good idea would be to expose an endpoint uh on the on the server on the",
    "start": "2125140",
    "end": "2130300"
  },
  {
    "text": "BFF so that your JavaScript front-end can read the session information of the user first name last name you know",
    "start": "2130300",
    "end": "2136119"
  },
  {
    "text": "favorite color whatever you want to expose basically yeah even nicer is if you would find a way",
    "start": "2136119",
    "end": "2142660"
  },
  {
    "text": "to do that without sliding the cookie yeah because some some customers use",
    "start": "2142660",
    "end": "2147880"
  },
  {
    "text": "that also this is user endpoint for check session reasons right so you could imagine once",
    "start": "2147880",
    "end": "2154660"
  },
  {
    "text": "a minute I ping the user endpoint to see if the user is still logged in but that's counter productive if by",
    "start": "2154660",
    "end": "2160720"
  },
  {
    "text": "pinging the user endpoint you are sliding the cookie into the future right if you're using sliding expiration cookies good news starting with.net6 you",
    "start": "2160720",
    "end": "2168760"
  },
  {
    "text": "have a way to stop sliding exploration on a per request basis which is quite nice",
    "start": "2168760",
    "end": "2173800"
  },
  {
    "text": "okay so and then you plug in the cookie Handler from Microsoft yeah",
    "start": "2173800",
    "end": "2179740"
  },
  {
    "start": "2175000",
    "end": "2465000"
  },
  {
    "text": "um you set your exploration your sliding or not you set your same side by the way",
    "start": "2179740",
    "end": "2186339"
  },
  {
    "text": "using this approach you can use strict same side note which is quite nice because you're not you're not handling a",
    "start": "2186339",
    "end": "2192700"
  },
  {
    "text": "postback from the server anymore you can basically use the highest same side mode to secure your cookies that this might",
    "start": "2192700",
    "end": "2199900"
  },
  {
    "text": "not be compatible with your application because maybe you're having links between applications and this is not working",
    "start": "2199900",
    "end": "2206380"
  },
  {
    "text": "with them but it's possible which was before that not easily possible",
    "start": "2206380",
    "end": "2212020"
  },
  {
    "text": "okay let's do this let's switch to a different demo um",
    "start": "2212020",
    "end": "2218099"
  },
  {
    "text": "okay so here's my BFF host",
    "start": "2227200",
    "end": "2232200"
  },
  {
    "text": "it's a standard aspin core application um I'm adding MVC here because I have",
    "start": "2232480",
    "end": "2239320"
  },
  {
    "text": "some controllers I'll show you in a second I'm adding some Plumbing that we need with adbff",
    "start": "2239320",
    "end": "2244780"
  },
  {
    "text": "um and then essentially I'm doing exactly what I just told you I'm adding a cookie as a",
    "start": "2244780",
    "end": "2251680"
  },
  {
    "text": "support for cookies and support for openmody connect on the server side okay and then the the",
    "start": "2251680",
    "end": "2258400"
  },
  {
    "text": "free endpoints I just mentioned like the login endpoint and the logout endpoint and the user endpoint they are basically",
    "start": "2258400",
    "end": "2264040"
  },
  {
    "text": "added here using this you know the endpoint system in asp.core and that gives you this free local endpoints to",
    "start": "2264040",
    "end": "2270760"
  },
  {
    "text": "to trigger the the free fundamental session management operations okay",
    "start": "2270760",
    "end": "2276700"
  },
  {
    "text": "um right and when I run this",
    "start": "2276700",
    "end": "2283540"
  },
  {
    "text": "the the front end is pure JavaScript right um look at that a silly to do application",
    "start": "2283540",
    "end": "2290320"
  },
  {
    "text": "um not written by me because otherwise it would look even worse yeah um but basically you see here there's a",
    "start": "2290320",
    "end": "2297520"
  },
  {
    "text": "login link just like we had with our spa before and all it does is it goes to the login endpoint in the local application",
    "start": "2297520",
    "end": "2304060"
  },
  {
    "text": "okay and from a user perspective it's doing exactly the same thing as before it",
    "start": "2304060",
    "end": "2309579"
  },
  {
    "text": "shows the login page right um login",
    "start": "2309579",
    "end": "2316680"
  },
  {
    "text": "here we are okay um if I would look at the cookies",
    "start": "2316780",
    "end": "2322660"
  },
  {
    "text": "maybe this is at least working yeah so that is a big cookie now okay",
    "start": "2322660",
    "end": "2329320"
  },
  {
    "text": "um that was another question this morning like since now you're storing the whole session information including",
    "start": "2329320",
    "end": "2334359"
  },
  {
    "text": "the access tokens and the claims everything in the cookie will the cookie get bigger yes absolutely okay and that",
    "start": "2334359",
    "end": "2340300"
  },
  {
    "text": "is kind of like what eighth minute core does by default it just puts everything in the cookie they have this Nifty",
    "start": "2340300",
    "end": "2345520"
  },
  {
    "text": "mechanism that they know a cookie has a size of four kilobytes and if you're exceeding that they're gonna open a",
    "start": "2345520",
    "end": "2351700"
  },
  {
    "text": "second cookie and the third cookie and the fourth cookie unless you're basically running out of cookies yeah and they tell you oh look at that there",
    "start": "2351700",
    "end": "2358359"
  },
  {
    "text": "are two chunks here and these two cookies are basically your session okay this might be okay for you this might be",
    "start": "2358359",
    "end": "2364000"
  },
  {
    "text": "an issue depending on the browser and your deployment scenario but also aspin core by default can't just store",
    "start": "2364000",
    "end": "2370119"
  },
  {
    "text": "everything in a server-side database or cache and just emits a cookie with a good right and then on the way back you",
    "start": "2370119",
    "end": "2375940"
  },
  {
    "text": "just take the good go to the server side session and rehydrate the whole thing so there's no no difference here",
    "start": "2375940",
    "end": "2383260"
  },
  {
    "text": "um from a from a user point of view okay and that's all as I said standard",
    "start": "2383260",
    "end": "2389619"
  },
  {
    "text": "aspirin core same goes for the logout endpoint right I click that I go to my to my BFF",
    "start": "2389619",
    "end": "2396760"
  },
  {
    "text": "the BFF starts to logout and I'm I'm logged out again",
    "start": "2396760",
    "end": "2401800"
  },
  {
    "text": "okay so log in again just to you know make sure it works twice",
    "start": "2401800",
    "end": "2408540"
  },
  {
    "text": "um and this one here is the session basically a way for the the client application to get the session",
    "start": "2408940",
    "end": "2414579"
  },
  {
    "text": "information right and what this is doing in my simple implementation it's just basically echoing back the contents of",
    "start": "2414579",
    "end": "2419980"
  },
  {
    "text": "the cookie or the the cookies the claims in the cookie would be the right term yeah and you see UI is much harder than",
    "start": "2419980",
    "end": "2427540"
  },
  {
    "text": "security um it's almost there",
    "start": "2427540",
    "end": "2432760"
  },
  {
    "text": "um but basically that's what you would find in the cookie right these are the claims that your application might care",
    "start": "2432760",
    "end": "2438040"
  },
  {
    "text": "about the authentication method session ID subject ID name you know Lookout URL when will the",
    "start": "2438040",
    "end": "2446619"
  },
  {
    "text": "session expire is another information that you can proactively ask the server for example and so on yeah",
    "start": "2446619",
    "end": "2453940"
  },
  {
    "text": "okay oh yeah and actually you can create to-do items just to prove that",
    "start": "2453940",
    "end": "2462000"
  },
  {
    "text": "yeah and the way this works um the to-do items is of course why an API",
    "start": "2462160",
    "end": "2467500"
  },
  {
    "start": "2465000",
    "end": "2582000"
  },
  {
    "text": "right so it's uh it's the next thing I guess we have to talk about uh sorry no first before we go to the API let me",
    "start": "2467500",
    "end": "2474520"
  },
  {
    "text": "talk about session change notifications yeah so what if your application is actually relying on session change notifications from the provider so what",
    "start": "2474520",
    "end": "2482140"
  },
  {
    "text": "if you're building a business application right and the requirement is is if the user logs out of any of your applications all applications should get",
    "start": "2482140",
    "end": "2488740"
  },
  {
    "text": "logged out at the same time it's called single logout right um",
    "start": "2488740",
    "end": "2493839"
  },
  {
    "text": "the old technique was to open this cross side iframe right and and waiting for",
    "start": "2493839",
    "end": "2498940"
  },
  {
    "text": "notifications for that this doesn't work anymore and for those people who did openly connect they might know the so-called front Channel notifications as",
    "start": "2498940",
    "end": "2505540"
  },
  {
    "text": "well which is again using iframes which doesn't work anymore across site boundaries yeah guess what there's a",
    "start": "2505540",
    "end": "2512440"
  },
  {
    "text": "third notification mechanism which is called back Channel lockout notifications and the the way this works",
    "start": "2512440",
    "end": "2518619"
  },
  {
    "text": "is basically is that um the token server posts a Json web",
    "start": "2518619",
    "end": "2525520"
  },
  {
    "text": "token to the back end of your to the BFF basically right to the BFF and notifies",
    "start": "2525520",
    "end": "2531940"
  },
  {
    "text": "the BFF hey the user has logged out from somewhere either from the token server itself or from some other application",
    "start": "2531940",
    "end": "2538000"
  },
  {
    "text": "and then the BFF knows that the logout has occurred it can kill the session server side right and then the next time",
    "start": "2538000",
    "end": "2545980"
  },
  {
    "text": "the front end will query the user endpoint it will say user is locked out that's how you would implement this in",
    "start": "2545980",
    "end": "2551500"
  },
  {
    "text": "this world yeah again that's that's a piece we had to add because Microsoft does not support",
    "start": "2551500",
    "end": "2557619"
  },
  {
    "text": "back Channel notifications yet I would assume they do at some point because you know Azure ID is by",
    "start": "2557619",
    "end": "2564339"
  },
  {
    "text": "definition always a cross-site token service right it lives on login.microsoftonline.com and once all",
    "start": "2564339",
    "end": "2570220"
  },
  {
    "text": "of the browsers change their cookie Behavior every log out from Azure ID will be broken which means they need to",
    "start": "2570220",
    "end": "2575740"
  },
  {
    "text": "implement at some point right or you're using our implementation",
    "start": "2575740",
    "end": "2581200"
  },
  {
    "text": "okay good apis yeah so um",
    "start": "2581200",
    "end": "2587940"
  },
  {
    "start": "2582000",
    "end": "2683000"
  },
  {
    "text": "Philip this morning said that a BFF could be almost like a completely generic piece of software no logic in",
    "start": "2588160",
    "end": "2594400"
  },
  {
    "text": "there just basically a thing you run configuration file and that is definitely one of the styles that people",
    "start": "2594400",
    "end": "2599740"
  },
  {
    "text": "use and I'll show some Styles later on um but when we implemented BFFs with customers we identified especially for",
    "start": "2599740",
    "end": "2607960"
  },
  {
    "text": "more simpler applications that um they they call lots of apis",
    "start": "2607960",
    "end": "2614140"
  },
  {
    "text": "that are only called by this one front end they are never shared between anything else",
    "start": "2614140",
    "end": "2620680"
  },
  {
    "text": "okay so if you identify front-end exclusive apis then you have to ask",
    "start": "2620680",
    "end": "2626800"
  },
  {
    "text": "yourself is it worth putting them into a shared location or you should have just put them into the BFF directly",
    "start": "2626800",
    "end": "2632500"
  },
  {
    "text": "right so in other words if you realize I'm only I'm only calling first party",
    "start": "2632500",
    "end": "2637900"
  },
  {
    "text": "front-end same same side same origin apis you don't need oauth",
    "start": "2637900",
    "end": "2644440"
  },
  {
    "text": "there's no need to harm an access token here okay you can you can put them directly",
    "start": "2644440",
    "end": "2650859"
  },
  {
    "text": "into the back end use the cookie to secure the communication right",
    "start": "2650859",
    "end": "2656020"
  },
  {
    "text": "and that's exactly what we're doing with this to-do API here right so ultimately this to do controller is just an MVC",
    "start": "2656020",
    "end": "2664060"
  },
  {
    "text": "controller all right sitting in in the BFF itself it is secured by the same side cookie no",
    "start": "2664060",
    "end": "2671260"
  },
  {
    "text": "oauth is needed for them okay",
    "start": "2671260",
    "end": "2675660"
  },
  {
    "text": "nice which are shared by multiple clients and multiple callers then you can't use this technique and I'll show you in a second how that would work",
    "start": "2676599",
    "end": "2684060"
  },
  {
    "text": "good now",
    "start": "2684099",
    "end": "2688619"
  },
  {
    "text": "so I said earlier that with same-site cookies right we now have a nice",
    "start": "2690880",
    "end": "2696040"
  },
  {
    "text": "security boundary by default if we want to secure our local apis with cookies only right because now we've seen that",
    "start": "2696040",
    "end": "2702880"
  },
  {
    "text": "cookies they only travel with inside boundaries um now that is good and you get that by",
    "start": "2702880",
    "end": "2709780"
  },
  {
    "text": "default now um but by definition what same side means",
    "start": "2709780",
    "end": "2716140"
  },
  {
    "text": "is everything that's within that site is trusted right so if you have my company.com and you",
    "start": "2716140",
    "end": "2721720"
  },
  {
    "text": "have 500 sub domains everyone trusts every other subdomain on that on that company web",
    "start": "2721720",
    "end": "2727599"
  },
  {
    "text": "uh DNS name whatever you call it right um so if you trust you know if you're",
    "start": "2727599",
    "end": "2735099"
  },
  {
    "text": "running your banking application on one sub domain and the marketing guys run their CRM on this other thing do you",
    "start": "2735099",
    "end": "2740140"
  },
  {
    "text": "trust them right so um that's one thing they have",
    "start": "2740140",
    "end": "2745599"
  },
  {
    "text": "been historically attacks where attackers were able to take over subdomains from companies right and now",
    "start": "2745599",
    "end": "2752400"
  },
  {
    "text": "a same-site domain runs under attacker control well",
    "start": "2752400",
    "end": "2757540"
  },
  {
    "text": "um that's why actually if you leave all credit goes to you you convinced me that we need",
    "start": "2757540",
    "end": "2762940"
  },
  {
    "text": "something else than just same site protection so we added anti-faulty protection as well on top so that you",
    "start": "2762940",
    "end": "2769420"
  },
  {
    "text": "can secure your BFF not only um for same site sandboxing but for same origin sandboxing and uh it just blew my",
    "start": "2769420",
    "end": "2778240"
  },
  {
    "text": "mind by the way you know like you know cross you know Andy fortree tokens right",
    "start": "2778240",
    "end": "2783520"
  },
  {
    "text": "in in Aspirin core they are these long things that they generate and hash and blah blah blah and as I learned from",
    "start": "2783520",
    "end": "2789339"
  },
  {
    "text": "Philippe you don't need all of this just put an extra header on your HTTP call use an uh a custom header name right and",
    "start": "2789339",
    "end": "2797380"
  },
  {
    "text": "by virtue of now requiring a cookie and the custom header this will always",
    "start": "2797380",
    "end": "2802780"
  },
  {
    "text": "trigger course pre-flight requests if you would make that call cross origin",
    "start": "2802780",
    "end": "2808300"
  },
  {
    "text": "yeah huh what does it even mean",
    "start": "2808300",
    "end": "2813960"
  },
  {
    "text": "um you know course allows by but you know the reason why cores exists is to allow cross origin Ajax calls right and",
    "start": "2815740",
    "end": "2822460"
  },
  {
    "text": "course has two modes yeah one is if you're doing a simple request as they call it a get request for example they",
    "start": "2822460",
    "end": "2827800"
  },
  {
    "text": "make the request and expect on the way back some special headers saying like this was okay to do",
    "start": "2827800",
    "end": "2833380"
  },
  {
    "text": "okay but if you're doing a complex request which I think yeah means for",
    "start": "2833380",
    "end": "2838420"
  },
  {
    "text": "example with credentials and a custom header then they're doing a so-called pre-flight request where they first",
    "start": "2838420",
    "end": "2843880"
  },
  {
    "text": "asked the API I'm going to make this this request now it is okay and if the",
    "start": "2843880",
    "end": "2849160"
  },
  {
    "text": "API doesn't respond with the right data they what the browser won't do it",
    "start": "2849160",
    "end": "2855040"
  },
  {
    "text": "okay now going back to Specter attacks where I said like maybe you're able to read the RAM on the on the browser it's",
    "start": "2855040",
    "end": "2860980"
  },
  {
    "text": "actually good to do pre-flight and not even have the data in the first place right so it's a little bit you know kind",
    "start": "2860980",
    "end": "2867880"
  },
  {
    "text": "of nice anyways so it turns out by just adding a static custom header to your HX calls",
    "start": "2867880",
    "end": "2875859"
  },
  {
    "text": "um and enforcing them on the server side you are automatically getting uh single",
    "start": "2875859",
    "end": "2882460"
  },
  {
    "text": "origin like a same origin sandbox okay",
    "start": "2882460",
    "end": "2888280"
  },
  {
    "text": "so that's what we do um you know and with all of these Frameworks you can just write some Handler that automatically adds that",
    "start": "2888280",
    "end": "2894760"
  },
  {
    "text": "header on outgoing calls and if you want to see it on the server side",
    "start": "2894760",
    "end": "2900720"
  },
  {
    "text": "here that's the middleware that we call BFF the BFF middleware and what this",
    "start": "2901420",
    "end": "2906460"
  },
  {
    "text": "enforces is that when you're making an API call to an endpoint that is marked as a BFF endpoint it ensures or enforces",
    "start": "2906460",
    "end": "2914859"
  },
  {
    "text": "that this static XC surf header is present otherwise it will reject the",
    "start": "2914859",
    "end": "2920260"
  },
  {
    "text": "call okay",
    "start": "2920260",
    "end": "2925380"
  },
  {
    "text": "cool",
    "start": "2925480",
    "end": "2927960"
  },
  {
    "text": "so that's local apis yeah this only works if you don't have a",
    "start": "2930700",
    "end": "2937240"
  },
  {
    "text": "course policy that actually allows other Origins so if you can combine this with the course policies just like yeah",
    "start": "2937240",
    "end": "2943060"
  },
  {
    "text": "whatever we accept anything from anywhere then sure yes um so yes you're very right thank",
    "start": "2943060",
    "end": "2949540"
  },
  {
    "text": "you um and by Def in this model here we assume that the front end and the back-end application are the same",
    "start": "2949540",
    "end": "2955300"
  },
  {
    "text": "application so there is no course right yes um I'll show you later some deployment",
    "start": "2955300",
    "end": "2961599"
  },
  {
    "text": "models that other people like to do where your course is required and then you start having to be careful about what you open up ma'am yes",
    "start": "2961599",
    "end": "2969280"
  },
  {
    "text": "good uh uh yeah okay so local apis are easy what",
    "start": "2969280",
    "end": "2975640"
  },
  {
    "start": "2971000",
    "end": "3184000"
  },
  {
    "text": "if you don't want to do that yeah what if you want to keep your BFF as generic as possible and don't want to do",
    "start": "2975640",
    "end": "2980859"
  },
  {
    "text": "business logic in there or you want to call apis which are shared by other",
    "start": "2980859",
    "end": "2986619"
  },
  {
    "text": "um clients for example right um and ultimately the answer is reverse",
    "start": "2986619",
    "end": "2992020"
  },
  {
    "text": "proxy okay so you somehow need to proxy them from the BFF to the ultimate location",
    "start": "2992020",
    "end": "2997960"
  },
  {
    "text": "and why do we need to do that basically you secure the the connection between",
    "start": "2997960",
    "end": "3003180"
  },
  {
    "text": "the front end and the BFF using the cookie and the uh and default tree header and then on the server side we",
    "start": "3003180",
    "end": "3009720"
  },
  {
    "text": "store the access token and then the reverse proxy will take the access token and call that remote API on behalf of",
    "start": "3009720",
    "end": "3016140"
  },
  {
    "text": "the currently locked on user okay now you know many ways how to do",
    "start": "3016140",
    "end": "3021720"
  },
  {
    "text": "that um you could run a real reverse proxy we have customers doing this with you know kubernetes increased controllers and all",
    "start": "3021720",
    "end": "3028380"
  },
  {
    "text": "kinds of things um what I really like is um a package from Microsoft called Yap which is",
    "start": "3028380",
    "end": "3034859"
  },
  {
    "text": "probably the so let's say it's easy to Google yeah",
    "start": "3034859",
    "end": "3040079"
  },
  {
    "text": "it's going to be your first hit but it's a really stupid name it's it stands for yet another reverse proxy",
    "start": "3040079",
    "end": "3046140"
  },
  {
    "text": "okay anyways um but the nice thing about Yap is it's",
    "start": "3046140",
    "end": "3051420"
  },
  {
    "text": "basically it is a reverse proxy middleware so you can put that reverse proxy into your application and",
    "start": "3051420",
    "end": "3058800"
  },
  {
    "text": "basically say something like if a call comes in on slash API forward this to server 5 API and you don't have to run a",
    "start": "3058800",
    "end": "3066960"
  },
  {
    "text": "separate reverse proxy a server or product you know like like an ID proofing it is actually part of your BFF",
    "start": "3066960",
    "end": "3075059"
  },
  {
    "text": "host okay um so",
    "start": "3075059",
    "end": "3080940"
  },
  {
    "text": "in other words if we want to enable remote apis you can basically just do something like",
    "start": "3080940",
    "end": "3086700"
  },
  {
    "text": "this in your pipeline on the BFF basically say Hey whenever a call comes",
    "start": "3086700",
    "end": "3093300"
  },
  {
    "text": "in on slash to do is the actual API server is living here oh and by the way while forwarding that API call attach",
    "start": "3093300",
    "end": "3099960"
  },
  {
    "text": "the access token of the currently locked on user okay",
    "start": "3099960",
    "end": "3105540"
  },
  {
    "text": "so basically by by doing this and and then just you know to prove my point",
    "start": "3105540",
    "end": "3110940"
  },
  {
    "text": "I'm gonna uncomment our local API and now I'm going to run the to-do API",
    "start": "3110940",
    "end": "3117359"
  },
  {
    "text": "on a separate host okay and this separate host is now just a normal API right oops",
    "start": "3117359",
    "end": "3123540"
  },
  {
    "text": "um that is doing JWT right that's just a standalone API that",
    "start": "3123540",
    "end": "3128940"
  },
  {
    "text": "expects the token from the token server and it doesn't make any assumptions who is calling it so let's run this back-end",
    "start": "3128940",
    "end": "3136079"
  },
  {
    "text": "host right around the front-end host",
    "start": "3136079",
    "end": "3142280"
  },
  {
    "text": "and we are now log out and log in",
    "start": "3142559",
    "end": "3150078"
  },
  {
    "text": "see my to-do API is still working but now it's living on a different API server",
    "start": "3152760",
    "end": "3158280"
  },
  {
    "text": "and it's completely transparent to the front-end application and you can move your API at any point in time let's say",
    "start": "3158280",
    "end": "3164460"
  },
  {
    "text": "it started out as an exclusive API now you want to share it or the other way around you just add this reverse proxy",
    "start": "3164460",
    "end": "3171540"
  },
  {
    "text": "route and your application doesn't need to change and there are no tokens in the front end yeah",
    "start": "3171540",
    "end": "3178800"
  },
  {
    "text": "okay so we are almost done",
    "start": "3178800",
    "end": "3184040"
  },
  {
    "text": "so yeah so that's that oh yeah and by the way I I should mention the way we implemented this forwarding thing is is",
    "start": "3184680",
    "end": "3190920"
  },
  {
    "text": "it now does um the cookie check first right if you're actually allowed to access that",
    "start": "3190920",
    "end": "3196500"
  },
  {
    "text": "proxied endpoint it does the anti-forgery check and then it only does",
    "start": "3196500",
    "end": "3202020"
  },
  {
    "text": "that if there is actually a token for the user available so yeah so basically it hides all of that endpoints behind",
    "start": "3202020",
    "end": "3209540"
  },
  {
    "text": "multiple additional Security checks ma'am",
    "start": "3209540",
    "end": "3215359"
  },
  {
    "text": "token management mode yes so",
    "start": "3216420",
    "end": "3221819"
  },
  {
    "start": "3217000",
    "end": "3277000"
  },
  {
    "text": "um one feature I am missing from Microsoft's old money connect Plumbing is token management so they they did a",
    "start": "3221819",
    "end": "3229740"
  },
  {
    "text": "great job of getting the initial access token and getting the initial refresh token but that's where they stop okay",
    "start": "3229740",
    "end": "3234780"
  },
  {
    "text": "and I think uh I told them like at least five years ago that this is missing and every single application that does oauth",
    "start": "3234780",
    "end": "3241920"
  },
  {
    "text": "needs to do refresh token handling and why isn't that built into their own libraries and",
    "start": "3241920",
    "end": "3248040"
  },
  {
    "text": "it didn't happen long story short okay so I wrote a library for that it's here it's free uh you know apache2",
    "start": "3248040",
    "end": "3255960"
  },
  {
    "text": "um and you can just block that into a spinet core and it does exactly that it it keeps track of access token lifetimes",
    "start": "3255960",
    "end": "3261660"
  },
  {
    "text": "once the X tokens is about to expire it will use the refresh token get a new access token and basically make sure",
    "start": "3261660",
    "end": "3267780"
  },
  {
    "text": "that your application always has a valid access token to call you to call your apis man",
    "start": "3267780",
    "end": "3273839"
  },
  {
    "text": "I can't download it now because they're running out of time um yes so the last thing I want to talk about",
    "start": "3273839",
    "end": "3280140"
  },
  {
    "start": "3277000",
    "end": "3599000"
  },
  {
    "text": "here is um the various BFF Styles now yeah so when you present this",
    "start": "3280140",
    "end": "3286160"
  },
  {
    "text": "architecture to customers or whoever you will get mixed reactions you know some",
    "start": "3286160",
    "end": "3292920"
  },
  {
    "text": "people don't like the reverse proxy part some people think it's too much complexity to build a BFF and we had this discussion already in",
    "start": "3292920",
    "end": "3299640"
  },
  {
    "text": "the morning right but it is the only way to implement a spa and keeping the",
    "start": "3299640",
    "end": "3306000"
  },
  {
    "text": "tokens out of the browser full stop Okay so",
    "start": "3306000",
    "end": "3312119"
  },
  {
    "text": "the probably the most simplistic way to deploy a BFF would be you have a you know you have your domain here where the",
    "start": "3312119",
    "end": "3318420"
  },
  {
    "text": "application comes from here's your BFF host with the plumbing with your endpoints with your UI assets and you",
    "start": "3318420",
    "end": "3325859"
  },
  {
    "text": "reverse proxy to your API endpoints if need be right that's exactly what I showed you in this simple demo now that",
    "start": "3325859",
    "end": "3334319"
  },
  {
    "text": "works fine I think for smaller applications for smaller application teams that own all the bits and pieces",
    "start": "3334319",
    "end": "3340319"
  },
  {
    "text": "that own the front end on the back end they use the same programming Technologies I guess yeah like the same",
    "start": "3340319",
    "end": "3347220"
  },
  {
    "text": "IDE maybe and things like that um so in other words if you're a net shop",
    "start": "3347220",
    "end": "3352859"
  },
  {
    "text": "okay then this is perfect right um once the teams get bigger maybe they",
    "start": "3352859",
    "end": "3358859"
  },
  {
    "text": "want to use different Technologies and so on then be very very",
    "start": "3358859",
    "end": "3364020"
  },
  {
    "text": "often see now basically a split host architecture yeah and one flavor of a",
    "start": "3364020",
    "end": "3369420"
  },
  {
    "text": "split host architecture would be this where basically your UI comes from one",
    "start": "3369420",
    "end": "3374700"
  },
  {
    "text": "URL which could be a CDN and the BFF lives on a different domain or a",
    "start": "3374700",
    "end": "3379800"
  },
  {
    "text": "different uh typically a different subdomain you know that you get the same side thing",
    "start": "3379800",
    "end": "3385200"
  },
  {
    "text": "um and now of course the the consequence of that is as you rightly",
    "start": "3385200",
    "end": "3391980"
  },
  {
    "text": "say now you need course right because now your UI your JavaScript the caller now tries to cross",
    "start": "3391980",
    "end": "3398819"
  },
  {
    "text": "origin call Api endpoints and now you have to open up the origin in this case",
    "start": "3398819",
    "end": "3405260"
  },
  {
    "text": "app.company.com to the back end and now now you have to be careful of course right because we have nd40 protection if",
    "start": "3405260",
    "end": "3411599"
  },
  {
    "text": "you open it up too much like allow all headers or whatever yeah or allow all Origins you know people do stuff like",
    "start": "3411599",
    "end": "3418500"
  },
  {
    "text": "that um then of course the nd40 protection is is gone yeah but it's totally viable to do it",
    "start": "3418500",
    "end": "3426300"
  },
  {
    "text": "like this but you do need to understand how course Works to to create",
    "start": "3426300",
    "end": "3431880"
  },
  {
    "text": "the right course um policy another architecture I've recently seen that",
    "start": "3431880",
    "end": "3437099"
  },
  {
    "text": "gets around that problem looks like this [Music] yeah basically using two reverse proxies",
    "start": "3437099",
    "end": "3445380"
  },
  {
    "text": "yeah where basically the application comes from here and now",
    "start": "3445380",
    "end": "3451079"
  },
  {
    "text": "um actually the front end comes from here the BFF comes from here but from a browser point of view they all look like",
    "start": "3451079",
    "end": "3457020"
  },
  {
    "text": "the same backend because there's a reverse proxy proxying in both directions basically",
    "start": "3457020",
    "end": "3463260"
  },
  {
    "text": "that gets you around the course problem but now you have two reverse proxies and some people say like yeah come on look",
    "start": "3463260",
    "end": "3469500"
  },
  {
    "text": "at the web there are 15 reverse proxies already on the way to the application host so what's what's one more",
    "start": "3469500",
    "end": "3476760"
  },
  {
    "text": "right yeah it's up to you right um and the very last pattern I want to show you which we touched upon very",
    "start": "3476760",
    "end": "3482760"
  },
  {
    "text": "briefly this morning is what the ITF calls the token mediating BFF",
    "start": "3482760",
    "end": "3490319"
  },
  {
    "text": "now that looks weird because now the front end starts calling apis again directly so",
    "start": "3490319",
    "end": "3497099"
  },
  {
    "text": "they have a section in their spec that says if you can't go full BFF",
    "start": "3497099",
    "end": "3503760"
  },
  {
    "text": "for whatever reason and by the way full BFF is the more secure version of this that that's what they literally say is",
    "start": "3503760",
    "end": "3510240"
  },
  {
    "text": "then you could go like as Philip called it half off bff or",
    "start": "3510240",
    "end": "3516599"
  },
  {
    "text": "partial BFF Maybe the idea is that all of the token handling still happens on the back end",
    "start": "3516599",
    "end": "3523559"
  },
  {
    "text": "refresh tokens flows and so on and then you are exposing a token endpoint to the",
    "start": "3523559",
    "end": "3528960"
  },
  {
    "text": "front end where the front end can get an access token but no refresh token and then call the apis directly now these",
    "start": "3528960",
    "end": "3536460"
  },
  {
    "text": "access tokens would typically be very short-lived right so that you are minimizing the risk of token",
    "start": "3536460",
    "end": "3542099"
  },
  {
    "text": "exfiltration or you know the effectiveness at least um but of course this only goes halfway",
    "start": "3542099",
    "end": "3548700"
  },
  {
    "text": "right um while this removes some of the concerns it does not remove the concern",
    "start": "3548700",
    "end": "3554640"
  },
  {
    "text": "of we don't want tokens in the browser right um",
    "start": "3554640",
    "end": "3559680"
  },
  {
    "text": "Some Cloud vendors say this is the better approach for scalability I don't know I'm I'm not a cloud vendor",
    "start": "3559680",
    "end": "3567359"
  },
  {
    "text": "um I don't know um but you know there is some trade-off somewhere right it is definitely not as",
    "start": "3567359",
    "end": "3573900"
  },
  {
    "text": "easy as just doing everything in the browser you need to have some Trader somewhere full BFF split host single host TMI they all have",
    "start": "3573900",
    "end": "3582059"
  },
  {
    "text": "their little pros and cons I personally would not do this if I'm not forced to do it I I would rather go for the full",
    "start": "3582059",
    "end": "3588839"
  },
  {
    "text": "BFF style approach but just to make you aware that this also exists",
    "start": "3588839",
    "end": "3594599"
  },
  {
    "text": "great right on time",
    "start": "3594599",
    "end": "3598579"
  },
  {
    "text": "yourself it's it's obvious yeah web security is hard okay that's the summary here",
    "start": "3600599",
    "end": "3607559"
  },
  {
    "text": "um and I I am 100 with Philippe saying you",
    "start": "3607559",
    "end": "3613680"
  },
  {
    "text": "cannot for security reasons draw drive over and openly connect from JavaScript",
    "start": "3613680",
    "end": "3618780"
  },
  {
    "text": "it's it's it's it's a problem okay and the BFF is the solution to that at least",
    "start": "3618780",
    "end": "3624480"
  },
  {
    "text": "from my point of view and now you can ask me anything thank you [Applause]",
    "start": "3624480",
    "end": "3633460"
  },
  {
    "text": "before we get kicked out yeah",
    "start": "3638099",
    "end": "3641900"
  },
  {
    "text": "so yeah good news yeah fully supports websockets and hp2 and all the bells",
    "start": "3655859",
    "end": "3661440"
  },
  {
    "text": "grpc and all the bells and whistles which is quite nice",
    "start": "3661440",
    "end": "3665660"
  },
  {
    "text": "no",
    "start": "3682200",
    "end": "3685200"
  },
  {
    "text": "so that the question is does PFF implies sticky sessions and I think the answer is no you can have a cluster of BFF and",
    "start": "3689700",
    "end": "3696900"
  },
  {
    "text": "endpoints right which uh which share the same cookie signature keys and everything and you",
    "start": "3696900",
    "end": "3703980"
  },
  {
    "text": "can do the same failover techniques as as with any other architecture",
    "start": "3703980",
    "end": "3709400"
  },
  {
    "text": "yeah I mean the tokens could be stored in the cookie itself or the cookie is just near a marker for the session and",
    "start": "3713220",
    "end": "3718920"
  },
  {
    "text": "the actual tokens are stored server side but BFF does not imply stickiness no",
    "start": "3718920",
    "end": "3726020"
  },
  {
    "text": "get it out anyway",
    "start": "3733160",
    "end": "3736578"
  },
  {
    "text": "yep",
    "start": "3741000",
    "end": "3744000"
  },
  {
    "text": "last question here",
    "start": "3748619",
    "end": "3751640"
  },
  {
    "text": "incremental consent you mean that spec that got canceled",
    "start": "3757200",
    "end": "3763079"
  },
  {
    "text": "five years ago [Laughter]",
    "start": "3763079",
    "end": "3768119"
  },
  {
    "text": "that you need to go back to the Token server somehow signal that you need more consent they will take care of the UI",
    "start": "3770460",
    "end": "3777540"
  },
  {
    "text": "and then send you back tokens I I mean there's nothing special for the BFF it is complicated either way you're using",
    "start": "3777540",
    "end": "3784619"
  },
  {
    "text": "it okay cool thanks bye bye",
    "start": "3784619",
    "end": "3790400"
  },
  {
    "text": "[Applause]",
    "start": "3790400",
    "end": "3794199"
  }
]