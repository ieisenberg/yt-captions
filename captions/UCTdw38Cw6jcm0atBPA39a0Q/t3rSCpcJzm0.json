[
  {
    "text": "hello everyone thank you all for coming so my name is mark seaman and",
    "start": "7839",
    "end": "14320"
  },
  {
    "text": "you can probably tell uh if you want to know more about me there's information that blocked uploaded dks i'm not going to tie you with any of that",
    "start": "14320",
    "end": "21199"
  },
  {
    "text": "um so this talk is called fractal architecture as it says on the slide and before i",
    "start": "21199",
    "end": "27920"
  },
  {
    "text": "dive into you know the next slide i think it's it's a good idea to just establish what um what sort of problem",
    "start": "27920",
    "end": "35040"
  },
  {
    "text": "that this um presentation addresses so uh this this presentation addresses",
    "start": "35040",
    "end": "40160"
  },
  {
    "text": "the problem of um software development productivity i think most of us you know probably have the experience that we",
    "start": "40160",
    "end": "46320"
  },
  {
    "text": "would like um software development to be more productive you know to happen",
    "start": "46320",
    "end": "51520"
  },
  {
    "text": "faster to be more you know um responsive to to user requirements and things like",
    "start": "51520",
    "end": "56559"
  },
  {
    "text": "that so that's you know this this is generally the idea you know it seems like we're not really doing um we could",
    "start": "56559",
    "end": "62480"
  },
  {
    "text": "we could probably do better with software development productivity and and this talk tries to address that this problem i'm not saying this is the only",
    "start": "62480",
    "end": "68799"
  },
  {
    "text": "solution but i think it's a fairly important one so why is software development productivity not as good as we would",
    "start": "68799",
    "end": "75119"
  },
  {
    "text": "like it to be and i think one of the reasons is that we spend a lot of time",
    "start": "75119",
    "end": "80799"
  },
  {
    "text": "reading existing code we actually struggle to to read the existing code and robert c martin agrees with me one of his book",
    "start": "80799",
    "end": "87920"
  },
  {
    "text": "books is writing the ratio of time spent reading versus writing is well over 10 to one",
    "start": "87920",
    "end": "93119"
  },
  {
    "text": "and you know i don't know where he gets that number from i think it's just he's just using it to illustrate a point",
    "start": "93119",
    "end": "98960"
  },
  {
    "text": "but at least i can accept with the with you know the general idea that there's a lot of reading going on you know you",
    "start": "98960",
    "end": "104880"
  },
  {
    "text": "struggle with understanding what existing code bases do in order to figure out you know what's",
    "start": "104880",
    "end": "110320"
  },
  {
    "text": "the next line of code that i have to write so if this is true",
    "start": "110320",
    "end": "115920"
  },
  {
    "text": "there's an opportunity for you know quite massive productivity improvement right there so",
    "start": "115920",
    "end": "122880"
  },
  {
    "text": "we can try to illustrate this by you know just lining you know a couple of boxes off so here's you know 10 orange",
    "start": "122880",
    "end": "128160"
  },
  {
    "text": "boxes and one green box the orange boxes represent the all the reading you have",
    "start": "128160",
    "end": "133840"
  },
  {
    "text": "to do of existing code and then the green box represents the writing of new code so that's a ten to one ratio",
    "start": "133840",
    "end": "140959"
  },
  {
    "text": "now often when people talk about you know development productivity you'll have you know software wind vendors who",
    "start": "140959",
    "end": "147360"
  },
  {
    "text": "will um who will tell you that if you use their new tools their new development environments whatever that",
    "start": "147360",
    "end": "152400"
  },
  {
    "text": "is you will improve productivity or you know language designers will tell you that if you use a new language that will",
    "start": "152400",
    "end": "158400"
  },
  {
    "text": "improve your productivity your frameworks will improve your productivity and most of those productivity gains are",
    "start": "158400",
    "end": "165120"
  },
  {
    "text": "framed in the context of enabling you to write code faster",
    "start": "165120",
    "end": "170879"
  },
  {
    "text": "now just hypothetic hypothetically if you imagine that you had a tool that could magically slice the amount of time",
    "start": "170879",
    "end": "177599"
  },
  {
    "text": "you have to write new code in half that is not realistic but just let's imagine that you know a that would look like",
    "start": "177599",
    "end": "184239"
  },
  {
    "text": "this so this would be you know a reduction in time it takes to write code about by 50",
    "start": "184239",
    "end": "190480"
  },
  {
    "text": "so 50 sounds like quite a bit of an improvement in productivity but really",
    "start": "190480",
    "end": "195680"
  },
  {
    "text": "it's just you know for 4.5 percent so and you know don't get me wrong i i'll",
    "start": "195680",
    "end": "202400"
  },
  {
    "text": "take all the productivity gains that i can can get wherever i can so if there's some you know vendor who you know",
    "start": "202400",
    "end": "209360"
  },
  {
    "text": "presents to me a better development environment that you know enables me to move a little bit faster than i could before i'll take it",
    "start": "209360",
    "end": "216080"
  },
  {
    "text": "but i just you know i think we should be under no illusion that that's not really where we kind of harvest the big",
    "start": "216080",
    "end": "222239"
  },
  {
    "text": "improvements in productivity on the other hand if we can just slice off you know one of those boxes in in",
    "start": "222239",
    "end": "228720"
  },
  {
    "text": "terms of you know being able to read code that's that's a much bigger improvement",
    "start": "228720",
    "end": "234080"
  },
  {
    "text": "in productivity so it really um it would really be",
    "start": "234080",
    "end": "239760"
  },
  {
    "text": "favorable if we start you know thinking about writing code that also reads easily and take you know be very",
    "start": "239760",
    "end": "247200"
  },
  {
    "text": "explicit about that because that's where improvements develop you know productivity improvements are actually to be found",
    "start": "247200",
    "end": "255040"
  },
  {
    "text": "um so so how do we do that so the the problem is you know every i think everyone can agree that we should write",
    "start": "255040",
    "end": "260880"
  },
  {
    "text": "you know readable code it's just that often if if you leave it at that you you",
    "start": "260880",
    "end": "266000"
  },
  {
    "text": "basically have what sounds like a subjective discussion it sounds like a matter of opinion you know some people",
    "start": "266000",
    "end": "272000"
  },
  {
    "text": "will say i find this code readable and then someone else will say i don't find this readable at all i think it sucks",
    "start": "272000",
    "end": "278160"
  },
  {
    "text": "and then the first person will say but it's very readable i wrote it and then the next person will say yeah that's why it's not readable so you can't have",
    "start": "278160",
    "end": "284800"
  },
  {
    "text": "those sorts of discussions right it's it's opinion based it's subjective that doesn't work",
    "start": "284800",
    "end": "290400"
  },
  {
    "text": "so instead we need to figure out you know can we somehow make it a little bit more actionable a little bit more concrete",
    "start": "290400",
    "end": "296880"
  },
  {
    "text": "can we make it a little bit more objective i'm not going to you know promise you that it'll be 100 objective",
    "start": "296880",
    "end": "302639"
  },
  {
    "text": "it will not i'm just trying to pull in that direction so in order to write readable code we",
    "start": "302639",
    "end": "309919"
  },
  {
    "text": "should probably start to you know just try to understand what actually happens in the brain when",
    "start": "309919",
    "end": "315360"
  },
  {
    "text": "we're trying to read code and you know i'm not a neuroscientist or anything and no one really knows anyway but we can",
    "start": "315360",
    "end": "321840"
  },
  {
    "text": "have some you know large picture explanations or you know descriptions of you know what happens when we read code",
    "start": "321840",
    "end": "329199"
  },
  {
    "text": "so i'm going to show you some code and i'm going to talk quite a bit up about this code and",
    "start": "329199",
    "end": "335520"
  },
  {
    "text": "what what's important here is how we approach reading code so even though i'm going to spend quite some time you know",
    "start": "335520",
    "end": "341440"
  },
  {
    "text": "talking about this little code snippet here it's not because i want you to understand the algorithm",
    "start": "341440",
    "end": "347440"
  },
  {
    "text": "i want you i want to talk about you know what happens when we read it so that's the important part so i would",
    "start": "347440",
    "end": "353280"
  },
  {
    "text": "claim that this is readable code not because i wrote it and not because",
    "start": "353280",
    "end": "358319"
  },
  {
    "text": "it's nicely formatted maybe you think it is maybe you disagree but because of other reasons but let's",
    "start": "358319",
    "end": "364160"
  },
  {
    "text": "let's start to you know think about you know what what happens if we read code so um",
    "start": "364160",
    "end": "369919"
  },
  {
    "text": "so first of all i think we you know most of us start from the top and go go down so you say okay this is a method called",
    "start": "369919",
    "end": "375680"
  },
  {
    "text": "allocate uh it takes some reservations as input i don't really know what you know reservation is but",
    "start": "375680",
    "end": "382639"
  },
  {
    "text": "maybe i can figure that out later it returns iron mobile of table i don't really know what table is either but i can probably figure that out if",
    "start": "382639",
    "end": "389199"
  },
  {
    "text": "that turns out to be important so all the um all the code that you see in this talk is taken from my book code that",
    "start": "389199",
    "end": "395039"
  },
  {
    "text": "fits in your head and it's my patented you know online restaurant reservation system example",
    "start": "395039",
    "end": "400800"
  },
  {
    "text": "that i always use um it's not patented it's just something i said um",
    "start": "400800",
    "end": "406720"
  },
  {
    "text": "so um so after you figure that out you just move on and you say okay so here's an object we we take some tables we turn",
    "start": "406720",
    "end": "413440"
  },
  {
    "text": "it into a list a list of something in in dot net so this is c sharp code a list of something is a is a collection of",
    "start": "413440",
    "end": "420720"
  },
  {
    "text": "things that can change you can add more things to it you can remove things from it you can sort it and you know do",
    "start": "420720",
    "end": "426160"
  },
  {
    "text": "various different things to clear it out all together um so it might change state",
    "start": "426160",
    "end": "431599"
  },
  {
    "text": "and if we're trying to understand what's going on that's probably a good idea to just keep in mind you know when we read the rest of the code because maybe the",
    "start": "431599",
    "end": "438560"
  },
  {
    "text": "state of this allocation will have some impact on how the code executes turns out not to be the case here but you know",
    "start": "438560",
    "end": "444319"
  },
  {
    "text": "it might you don't know until you actually read through the code so there's one thing to sort of keep",
    "start": "444319",
    "end": "449599"
  },
  {
    "text": "track of in your head so basically what's happening here is you're running a little emulator you're running a",
    "start": "449599",
    "end": "455120"
  },
  {
    "text": "little c-sharp interpreter that interprets the code and you're not on the computer but in your brain and you're sort of trying to figure out okay",
    "start": "455120",
    "end": "461360"
  },
  {
    "text": "what would happen if various different things so for example you might say in the next line uh with the for each thing",
    "start": "461360",
    "end": "466960"
  },
  {
    "text": "you might say well what would happen if reservations is empty in that case you would just drop all the way through and",
    "start": "466960",
    "end": "472479"
  },
  {
    "text": "return the allocation but you're still keeping track of you know um you know what's the state of allocation you know",
    "start": "472479",
    "end": "478400"
  },
  {
    "text": "what's the state of that collection now on the other hand you would you might also imagine in your brain when",
    "start": "478400",
    "end": "483599"
  },
  {
    "text": "you're reading the code okay so what's going to happen if the if that connection is not empty if if we have",
    "start": "483599",
    "end": "488879"
  },
  {
    "text": "some reservations in in which case the code sort of takes a different pathway through the through the",
    "start": "488879",
    "end": "494319"
  },
  {
    "text": "and the code there um and then you know there's a this thing where we try to find a table in that",
    "start": "494319",
    "end": "500960"
  },
  {
    "text": "allocation and again there's a branch there's a decision to be made so",
    "start": "500960",
    "end": "506080"
  },
  {
    "text": "that that little thing if table is curly brackets that's a c sharp sort of a little pun expression",
    "start": "506080",
    "end": "513200"
  },
  {
    "text": "that basically means if table is something as opposed to null so when we're trying to find the table",
    "start": "513200",
    "end": "519680"
  },
  {
    "text": "it might be null and if it's null if it's not something um again nothing more is going to happen so on the other hand",
    "start": "519680",
    "end": "526480"
  },
  {
    "text": "if we find a table that fits uh the desired quantity we um we now go and and",
    "start": "526480",
    "end": "532320"
  },
  {
    "text": "modify that allocation collection we remove the table but then we add it back just you know with the reservations you",
    "start": "532320",
    "end": "539120"
  },
  {
    "text": "know associated to it so we reserve the table so that um to that particular reservation",
    "start": "539120",
    "end": "545360"
  },
  {
    "text": "yeah so um so this is not hard to follow and",
    "start": "545360",
    "end": "550480"
  },
  {
    "text": "and you'd say well okay so even though we have some state mutation going on in that you know one object that we sort of",
    "start": "550480",
    "end": "555839"
  },
  {
    "text": "kept track of in our head um we we now understand that even though it changes",
    "start": "555839",
    "end": "561360"
  },
  {
    "text": "throughout you know these loop at least the number of tables stay the same because we always you know first remove",
    "start": "561360",
    "end": "566880"
  },
  {
    "text": "and then add something back in so it's the same number all the time",
    "start": "566880",
    "end": "572240"
  },
  {
    "text": "so there's quite a there's at least two types of quantification going on here or you know attempts at you know making",
    "start": "573920",
    "end": "580240"
  },
  {
    "text": "things a little bit more concrete we'll i've counted the number of pathways through the system this is called cyclomatic complexity and you can say",
    "start": "580240",
    "end": "587519"
  },
  {
    "text": "well it's it's a way of thinking about you know the various different pathways to the system but you can also think",
    "start": "587519",
    "end": "592800"
  },
  {
    "text": "about it as this as it's basically three parallel universes where you know the code might take one or three uh pathways",
    "start": "592800",
    "end": "599839"
  },
  {
    "text": "through and you sort of have to fit those three options those three parallel you know universes in your brain at the",
    "start": "599839",
    "end": "606320"
  },
  {
    "text": "same time in order to understand what's actually happening here um and then you",
    "start": "606320",
    "end": "611760"
  },
  {
    "text": "you you need to keep track of at least one thing because allocation might change state and you know in this case",
    "start": "611760",
    "end": "617680"
  },
  {
    "text": "it turns out that it doesn't impact you know the execution it doesn't make any any impact on decisions but you know you",
    "start": "617680",
    "end": "624000"
  },
  {
    "text": "didn't know before you actually read through the code so i would say this code fits in your head because there's not too much going",
    "start": "624000",
    "end": "630560"
  },
  {
    "text": "on there's sort of three pathways and there's you know basically one mutable variable that you need to keep track of",
    "start": "630560",
    "end": "635839"
  },
  {
    "text": "and that's not too much now so the next question is you know what is too much what's the threshold if i say one is",
    "start": "635839",
    "end": "642880"
  },
  {
    "text": "fine if i say three is fine you know when when does it become not fine you",
    "start": "642880",
    "end": "648000"
  },
  {
    "text": "know is uh is 10 still readable if we had 20 things going on would that be",
    "start": "648000",
    "end": "653279"
  },
  {
    "text": "readable and i would say the threshold is around seven and this goes back to a results from",
    "start": "653279",
    "end": "660079"
  },
  {
    "text": "experimental psychology there's a paper by george a miller from 1956 called the magical number seven plus minus two",
    "start": "660079",
    "end": "666720"
  },
  {
    "text": "you've probably heard about it and it's one of those few results from experiments in psychology that actually",
    "start": "666720",
    "end": "671760"
  },
  {
    "text": "seems to be fairly robust so so miller did a lot of experiments with the with the with subjects where he asked people",
    "start": "671760",
    "end": "677760"
  },
  {
    "text": "to remember you know all sorts of things you know numbers and things like that and he found out that most people could keep",
    "start": "677760",
    "end": "684399"
  },
  {
    "text": "track of about seven things and then if if he asked them to keep track of much more than that they started to forget",
    "start": "684399",
    "end": "689839"
  },
  {
    "text": "some of the things that um that were not as as present in their memory",
    "start": "689839",
    "end": "696480"
  },
  {
    "text": "so so in general you know miller asked people to remember all sorts of numbers but you also ask them to remember other",
    "start": "696880",
    "end": "703120"
  },
  {
    "text": "things so for example you know names of colors or or things like that and he",
    "start": "703120",
    "end": "708399"
  },
  {
    "text": "just called that information those information he called them chunks the chunks of information",
    "start": "708399",
    "end": "714000"
  },
  {
    "text": "now i'm just gonna switch over here and start a little um animation while i'm still talking i'm",
    "start": "714000",
    "end": "719920"
  },
  {
    "text": "just going to keep talking then so the problem is with the software development is that you know if you write a",
    "start": "719920",
    "end": "726160"
  },
  {
    "text": "completely brand new code base and you start with hello world there might actually just be that one thing going on",
    "start": "726160",
    "end": "731839"
  },
  {
    "text": "but you know you know as you add more features and more things that the software can do to your",
    "start": "731839",
    "end": "737360"
  },
  {
    "text": "code base there's going to be more and more things that you need to keep track of so",
    "start": "737360",
    "end": "742880"
  },
  {
    "text": "so in a realistic code base there's there's more than seven things going on that's probably seven thousand things",
    "start": "742880",
    "end": "748079"
  },
  {
    "text": "going on seven million things going on in a realistic code base uh and that doesn't fit in your short-term memory",
    "start": "748079",
    "end": "755839"
  },
  {
    "text": "um so so we need to figure out you know how do we deal with that sort of problem so so the reason why i started this",
    "start": "755839",
    "end": "762560"
  },
  {
    "text": "little animation is as you can tell it uh it's it's just keeps on adding chunks",
    "start": "762560",
    "end": "767920"
  },
  {
    "text": "um the chunks appear randomly every second or so and they appear you know on",
    "start": "767920",
    "end": "772959"
  },
  {
    "text": "the outside of the screen so either to the left or the right or the top of the bottom and you will also notice that",
    "start": "772959",
    "end": "778240"
  },
  {
    "text": "these chunks sort of try to arrange themselves so that they try to keep as much distance to each other as",
    "start": "778240",
    "end": "784320"
  },
  {
    "text": "possible but we just keep adding more just like we we would you know if we start in a new code base we would keep",
    "start": "784320",
    "end": "789920"
  },
  {
    "text": "adding more and more decision points more and more things that you know in order to understand what the code does",
    "start": "789920",
    "end": "796480"
  },
  {
    "text": "we would you know we would have to keep that track of that as well so",
    "start": "796480",
    "end": "801839"
  },
  {
    "text": "we don't structure the code in the way where we don't we don't just start with a main method and then just you know",
    "start": "801839",
    "end": "806880"
  },
  {
    "text": "write a main method that just runs forever we structure code in various different ways by dividing it into",
    "start": "806880",
    "end": "812079"
  },
  {
    "text": "objects that communicate with each other you know routine you know functions that call each other and so on um",
    "start": "812079",
    "end": "819279"
  },
  {
    "text": "but one of the things we need to figure out is you know what's a good way of structuring code so that it you know",
    "start": "819279",
    "end": "824320"
  },
  {
    "text": "remains readable so that it fits in our short-term memory even though there's you know it's not",
    "start": "824320",
    "end": "830480"
  },
  {
    "text": "only seven things but there's maybe seven thousand things and you can see yeah you know",
    "start": "830480",
    "end": "835519"
  },
  {
    "text": "i'm not going to reach 7000 things out of 7 million things here i'm not that's not really what i'm waiting for but you",
    "start": "835519",
    "end": "840800"
  },
  {
    "text": "know you just keep on adding and more and more stuff so we need to figure out you know how to structure code so that",
    "start": "840800",
    "end": "847600"
  },
  {
    "text": "we respect that cognitive constraint that that our memories have",
    "start": "847600",
    "end": "854639"
  },
  {
    "text": "uh i remember you know once i was um i was",
    "start": "854959",
    "end": "860000"
  },
  {
    "text": "talking to a person yeah i was engaged with a client that had a legacy code base and i got the chance to talk to",
    "start": "860000",
    "end": "866800"
  },
  {
    "text": "some of the developers on that legacy code base and and i asked one of the the newest member of the team i asked",
    "start": "866800",
    "end": "873360"
  },
  {
    "text": "him uh so how much time did it take you before you felt that you were able to",
    "start": "873360",
    "end": "878800"
  },
  {
    "text": "work in this code base on your own on you know independently of of your colleagues and he said it took me three",
    "start": "878800",
    "end": "884240"
  },
  {
    "text": "months before i actually felt confident to work on this code base on my own",
    "start": "884240",
    "end": "889360"
  },
  {
    "text": "so when you have you know legacy code basis like that there's a lot of stuff going on",
    "start": "889360",
    "end": "894800"
  },
  {
    "text": "and the strategy you'll take when you try to learn a code base like that it that does",
    "start": "894800",
    "end": "900800"
  },
  {
    "text": "not employ short-term memory so so this developer who took three months in order to be you know to be able to work with",
    "start": "900800",
    "end": "907279"
  },
  {
    "text": "that code base he probably painstakingly started to commit",
    "start": "907279",
    "end": "912399"
  },
  {
    "text": "the structure of this code base to his long-term memory which is a completely different game but the problem with you",
    "start": "912399",
    "end": "918079"
  },
  {
    "text": "know relying on your long-term memory instead of your short-term memory is that first of all it's it takes a long",
    "start": "918079",
    "end": "924160"
  },
  {
    "text": "time so that's why we spend so much time always reading code because we have to engage our long-term memory and it's",
    "start": "924160",
    "end": "929920"
  },
  {
    "text": "much slower and also you have the problem with long-term memory that you know once you've committed something to long-term memory it's hard to get rid of",
    "start": "929920",
    "end": "936560"
  },
  {
    "text": "again and that means if you've you know committed the structure of the code base to long-term memory and then you go",
    "start": "936560",
    "end": "941680"
  },
  {
    "text": "change it um then the what you've learned about the structure of the large gate code base",
    "start": "941680",
    "end": "947440"
  },
  {
    "text": "no longer really applies and then you sort of have to unlearn it again which is also difficult now short-term memory",
    "start": "947440",
    "end": "953839"
  },
  {
    "text": "on the other hand is much more efficient in this way because if you if you learn something and you keep track of something in your short-term memory you",
    "start": "953839",
    "end": "960480"
  },
  {
    "text": "work with that and once you're done with that you basically just forget about it and the next time you look at something",
    "start": "960480",
    "end": "965920"
  },
  {
    "text": "you just basically load it into short-term memory again look at it and forget about it again now as you probably noticed you know the",
    "start": "965920",
    "end": "972800"
  },
  {
    "text": "the um these blobs these chunks that just keep on adding here they sort of try to they they sort of start to form",
    "start": "972800",
    "end": "979199"
  },
  {
    "text": "such a honeycomb pattern a hexagonal grid so if we wanted to pick out just",
    "start": "979199",
    "end": "984320"
  },
  {
    "text": "seven of those um we would have a shape that looks pretty much like this one",
    "start": "984320",
    "end": "991199"
  },
  {
    "text": "so i call this a hex flower i think it looks a little bit like a stylized flower in the sense you have",
    "start": "991199",
    "end": "996800"
  },
  {
    "text": "you know six petals and in the center of the flower but what i'm going to use this for is",
    "start": "996800",
    "end": "1002079"
  },
  {
    "text": "it's just a symbol of you know our short-term memory capacity because we have seven cells",
    "start": "1002079",
    "end": "1008959"
  },
  {
    "text": "there so you can imagine that those are registers where we can you know we can each register can hold one chunk of",
    "start": "1008959",
    "end": "1014639"
  },
  {
    "text": "information and we can hold about seven of those again um i know that it's seven plus minus two uh",
    "start": "1014639",
    "end": "1021759"
  },
  {
    "text": "and this diagram doesn't allow nine um but this is not you know again this is not a hard thing it's not science it's",
    "start": "1021759",
    "end": "1027678"
  },
  {
    "text": "more like you know and a way of illustrating a point and it's pretty",
    "start": "1027679",
    "end": "1033918"
  },
  {
    "text": "um we we also need to realize that you know if we're looking at code there's a lot",
    "start": "1033919",
    "end": "1039760"
  },
  {
    "text": "of abstraction going on so inside of each of those cells there's probably going to be more stuff",
    "start": "1039760",
    "end": "1045520"
  },
  {
    "text": "going on so if we structure the code in such a way that there's at most seven things going",
    "start": "1045520",
    "end": "1051679"
  },
  {
    "text": "on we can structure the code so that it fits in our short-term memory but again we we we should probably realize that you know",
    "start": "1051679",
    "end": "1059120"
  },
  {
    "text": "if we're thinking about layers of abstraction you know each of those cells will again contain some more code that",
    "start": "1059120",
    "end": "1065840"
  },
  {
    "text": "does something else so you can keep on zooming into one of the cells and maybe you know finally you'll find a piece of",
    "start": "1065840",
    "end": "1071280"
  },
  {
    "text": "code like this one so this is um i chose this create method this this is sitting on a repository class that",
    "start": "1071280",
    "end": "1077919"
  },
  {
    "text": "communicates with a relational database and actually saves you know reservations into the database and i chose this one",
    "start": "1077919",
    "end": "1083679"
  },
  {
    "text": "because this is about as much as you can zoom in in terms of layers of abstraction there's really",
    "start": "1083679",
    "end": "1089679"
  },
  {
    "text": "nothing there's no more layers of abstraction hidden behind this code not in terms of user code anyway because",
    "start": "1089679",
    "end": "1095760"
  },
  {
    "text": "there's still framework code there's sql connection sql command and things like that but there's not really a lot of of",
    "start": "1095760",
    "end": "1101039"
  },
  {
    "text": "you know my own code so this is sort of like as granular as it gets in terms of you know levels of detail so we could",
    "start": "1101039",
    "end": "1108320"
  },
  {
    "text": "ask ourselves again is this code readable and instead of being you know opinion-based what we wanted to do is to",
    "start": "1108320",
    "end": "1114559"
  },
  {
    "text": "say let's try to quantify it not because we want to turn it into science but just",
    "start": "1114559",
    "end": "1119840"
  },
  {
    "text": "you know be able to have a you know a a discussion that is a little bit less",
    "start": "1119840",
    "end": "1124960"
  },
  {
    "text": "opinionated and a little bit more about you know some facts that we can actually bring to bed and you know discuss things",
    "start": "1124960",
    "end": "1130400"
  },
  {
    "text": "about so we could ask ourselves for example what's the cyclomatic complexity here how many different pathways do we have",
    "start": "1130400",
    "end": "1136480"
  },
  {
    "text": "and there's only two because you know either you immediately um you know exit throwing an argument null exception or",
    "start": "1136480",
    "end": "1142240"
  },
  {
    "text": "you run through the rest of the code so um cyclomatic complexity of two that's",
    "start": "1142240",
    "end": "1147520"
  },
  {
    "text": "that's okay if we think about cyclomatic complexity as representing sort of parallel parallel dimensions of of the",
    "start": "1147520",
    "end": "1154000"
  },
  {
    "text": "code you know two is not you know that's not a lot if we can keep track of seven",
    "start": "1154000",
    "end": "1159360"
  },
  {
    "text": "um we could also ask ourselves something else if you remember one other thing i talked about is",
    "start": "1159360",
    "end": "1164640"
  },
  {
    "text": "i talked about you know when we read code we sort of run a little emulator of the you know of the language inside our",
    "start": "1164640",
    "end": "1171200"
  },
  {
    "text": "head and we try to keep track of state so what we can do is we can try to count the objects that are involved in this",
    "start": "1171200",
    "end": "1177919"
  },
  {
    "text": "method because you know in a in an unsophisticated naive way of",
    "start": "1177919",
    "end": "1183440"
  },
  {
    "text": "counting this everything um is a priori something that may change",
    "start": "1183440",
    "end": "1188640"
  },
  {
    "text": "state and then we can become a little bit more sophisticated later on so so let's try to just you know count objects to see how much how many things how many",
    "start": "1188640",
    "end": "1195840"
  },
  {
    "text": "chunks are involved in in a little code snippet like this um so there's the restaurant id that's",
    "start": "1195840",
    "end": "1201440"
  },
  {
    "text": "one object one one parameter there's reservation that's two we have a thing",
    "start": "1201440",
    "end": "1207120"
  },
  {
    "text": "called connection string and it's you know in this code snippet it's not too it's not you can't tell exactly where",
    "start": "1207120",
    "end": "1212480"
  },
  {
    "text": "that comes from but that's a read only property it's a string now",
    "start": "1212480",
    "end": "1217760"
  },
  {
    "text": "if if some of you are not sharp developers a property is just a glorified class field",
    "start": "1217760",
    "end": "1223520"
  },
  {
    "text": "so just think of this as a read-only class field that's basically what it is and it's a string so this just contains",
    "start": "1223520",
    "end": "1230159"
  },
  {
    "text": "the information about how do we connect to the database and we use that to create a con object a connection object",
    "start": "1230159",
    "end": "1235760"
  },
  {
    "text": "i'm just counting things here there's also something called create reservation sql this is another string this is not",
    "start": "1235760",
    "end": "1241440"
  },
  {
    "text": "even a read-only property this is a constant string it's just the the actual sql you know the t sequel you know",
    "start": "1241440",
    "end": "1248159"
  },
  {
    "text": "language that that's going to be applied to this to the server when we run this command um so",
    "start": "1248159",
    "end": "1254480"
  },
  {
    "text": "another string and we use that to create a command object and then that's actually it there's no more you know objects",
    "start": "1254480",
    "end": "1260880"
  },
  {
    "text": "involved the rest is just you know manipulating those objects so there are six things and again you",
    "start": "1260880",
    "end": "1266080"
  },
  {
    "text": "know if if our memory capacity is seven that's just about it we we're good",
    "start": "1266080",
    "end": "1273440"
  },
  {
    "text": "um so again this is a way you can discuss you know for example if you're discussing with colleagues you know",
    "start": "1273440",
    "end": "1279039"
  },
  {
    "text": "is this is this method getting too complicated should we you know split it up into two helper methods or things",
    "start": "1279039",
    "end": "1284240"
  },
  {
    "text": "like that and you say well what's the criteria and when do we start splitting things up when do we start refactoring",
    "start": "1284240",
    "end": "1290080"
  },
  {
    "text": "and i would say you start refactoring when when when some of those quantification mechanisms begins to",
    "start": "1290080",
    "end": "1295679"
  },
  {
    "text": "indicate that the code is becoming too complicated and seven is quite a low threshold but",
    "start": "1295679",
    "end": "1301520"
  },
  {
    "text": "it actually enables you to keep the code fairly fresh and clean if you if you go with you know that sort of threshold",
    "start": "1301520",
    "end": "1310000"
  },
  {
    "text": "so um if we want to be a little more sophisticated you might then argue and you might say well okay so that's all",
    "start": "1310000",
    "end": "1315440"
  },
  {
    "text": "fine but you know if you take you know for example the restaurant id the one label one that's an int",
    "start": "1315440",
    "end": "1320799"
  },
  {
    "text": "and you don't need to keep track of you know an int in if you're trying to remember or keep you know running this",
    "start": "1320799",
    "end": "1327120"
  },
  {
    "text": "little emulator in your brain you don't you don't have to keep track of you know what restaurant id might you know change",
    "start": "1327120",
    "end": "1332559"
  },
  {
    "text": "into because it's an immutable value it's not going to change so immutable values are really nice for that particular reason so they don't",
    "start": "1332559",
    "end": "1339200"
  },
  {
    "text": "really tax your memories that much because it can't change so this the same thing goes for strings",
    "start": "1339200",
    "end": "1345280"
  },
  {
    "text": "so connection string and create reservation sequel those labels three and five those are strings they're also immutable.net which means they can't",
    "start": "1345280",
    "end": "1351919"
  },
  {
    "text": "really change either uh so you don't really have to worry too much about you know might this one object change state",
    "start": "1351919",
    "end": "1358240"
  },
  {
    "text": "while you know the code executes it will not it is immutable so that that's actually like three out",
    "start": "1358240",
    "end": "1364559"
  },
  {
    "text": "of six things that are not really gonna tax your memory so you say well okay that actually turns",
    "start": "1364559",
    "end": "1370799"
  },
  {
    "text": "out that immutability is a really nice thing in terms of readability because that means we don't really need",
    "start": "1370799",
    "end": "1376880"
  },
  {
    "text": "to worry about them changing state we should do more of that and i did so it turns out if you go and",
    "start": "1376880",
    "end": "1383360"
  },
  {
    "text": "look at this code base and look at you know reservation the one label two this is a custom domain class that i wrote",
    "start": "1383360",
    "end": "1389440"
  },
  {
    "text": "but i wrote it so that it's a value object it's an immutable uh data structure so also it's not gonna change",
    "start": "1389440",
    "end": "1395600"
  },
  {
    "text": "states so really the only two things that might change state in this code is just the connection and the command just",
    "start": "1395600",
    "end": "1400799"
  },
  {
    "text": "two things and you can see that actually happens you know just uh below you know after the um we created the",
    "start": "1400799",
    "end": "1407200"
  },
  {
    "text": "command we start adding you know binding parameters to it so it actually mutates six times but it's easy to follow",
    "start": "1407200",
    "end": "1413520"
  },
  {
    "text": "because it's sort of doing the same thing over over and over again and then in the last the in the pronunciable line",
    "start": "1413520",
    "end": "1419039"
  },
  {
    "text": "there we open the connection so the connection changes state as well but it's it's easy enough to follow",
    "start": "1419039",
    "end": "1424880"
  },
  {
    "text": "because even if you want to be unsophisticated there's only six things going on and in reality there's only really two things you need to keep track",
    "start": "1424880",
    "end": "1430960"
  },
  {
    "text": "of so if the memory limit is seven then we're all",
    "start": "1430960",
    "end": "1436000"
  },
  {
    "text": "good so we can enumerate the um the objects in this way or we can you know try to assign them you know each to one",
    "start": "1436000",
    "end": "1442080"
  },
  {
    "text": "of those cells that we have in our short-term memory and we say okay so we have room for seven and this is only six",
    "start": "1442080",
    "end": "1447600"
  },
  {
    "text": "that fits in our head so again you can think of this little figure this little hex flower as just a",
    "start": "1447600",
    "end": "1454320"
  },
  {
    "text": "symbol for things that fit in your head so i started by showing you the lowest",
    "start": "1454320",
    "end": "1461440"
  },
  {
    "text": "level of detail i showed you this create method where there's not a lot of you know extra you know abstraction hiding",
    "start": "1461440",
    "end": "1468240"
  },
  {
    "text": "behind that create method it just talks to the the you know relational database sdk",
    "start": "1468240",
    "end": "1473520"
  },
  {
    "text": "but then you you might probably say well but there's there's going to be code that calls that create method that we",
    "start": "1473520",
    "end": "1478880"
  },
  {
    "text": "just looked at and that code is probably going to call some other methods as well that have you",
    "start": "1478880",
    "end": "1484320"
  },
  {
    "text": "know some some moving parts inside of it so doesn't that mean that you know those",
    "start": "1484320",
    "end": "1489840"
  },
  {
    "text": "that complexity that is inside the create method and the complexity that's inside some of these other methods doesn't it mean that those things are",
    "start": "1489840",
    "end": "1496080"
  },
  {
    "text": "going to compound so you know it's fine enough you know if you're at the lowest level of detail um but what if you are",
    "start": "1496080",
    "end": "1502880"
  },
  {
    "text": "at a higher level of detail then then how do you deal with that and the thing is you know again our",
    "start": "1502880",
    "end": "1508000"
  },
  {
    "text": "memory constraint you know the way the cognitive constraints that we have in our brain is not going to change it's seven",
    "start": "1508000",
    "end": "1513600"
  },
  {
    "text": "so we have to sort of work within that boundary and figure figure out ways to do that so even if we if we zoom out and",
    "start": "1513600",
    "end": "1520720"
  },
  {
    "text": "say okay so now i'm looking at things from a higher you know level of abstraction we still need to respect",
    "start": "1520720",
    "end": "1527760"
  },
  {
    "text": "that we have this cognitive constraint the brain is not going to change anytime soon regardless of what you know",
    "start": "1527760",
    "end": "1534799"
  },
  {
    "text": "kurzweil is believing i don't think that's going to happen",
    "start": "1534799",
    "end": "1540000"
  },
  {
    "text": "so we should be able to zoom out and zoom out and zoom out and we should we should be able to zoom out all the way to for example the entry point of the",
    "start": "1541200",
    "end": "1547279"
  },
  {
    "text": "application and even if we look at that it should fit in our brains if we you know we should understand we should be",
    "start": "1547279",
    "end": "1552880"
  },
  {
    "text": "able to go to be able to understand what's going on at a high level of abstraction uh you",
    "start": "1552880",
    "end": "1558480"
  },
  {
    "text": "know in our short term memory so if you've ever seen asp.net code this is basically just generated by wizard i",
    "start": "1558480",
    "end": "1564480"
  },
  {
    "text": "didn't write this code but still you you know you might want to count you know is there does this actually fit in your",
    "start": "1564480",
    "end": "1570640"
  },
  {
    "text": "head and it turns out it's actually pretty simple um all the all the interesting stuff happens in the startup method we can look at that at the moment",
    "start": "1570640",
    "end": "1577440"
  },
  {
    "text": "so there's really only three things going on there's only three objects involved so that's will within capacity so that's",
    "start": "1577440",
    "end": "1583600"
  },
  {
    "text": "that's that's fine the point here being that if you want to look at you know what happens in the",
    "start": "1583600",
    "end": "1589279"
  },
  {
    "text": "startup class though um at all levels of distractions we should respect the cognitive constraints of our",
    "start": "1589279",
    "end": "1595520"
  },
  {
    "text": "brain so when i look at the start of class it should be structured in such a way that there's at most seven things going on and that also means",
    "start": "1595520",
    "end": "1602559"
  },
  {
    "text": "startup should be independent of arcs and web builder you know when i go and look at startup i shouldn't have to also",
    "start": "1602559",
    "end": "1608480"
  },
  {
    "text": "remember that there's there are things like arcs and web builder so we can start by looking at just the public api",
    "start": "1608480",
    "end": "1614799"
  },
  {
    "text": "of the startup class and we can say okay so by convention there's these two configure methods um there's a",
    "start": "1614799",
    "end": "1621039"
  },
  {
    "text": "constructor that takes an eye configuration value that sort of like those things go together so again if we",
    "start": "1621039",
    "end": "1626799"
  },
  {
    "text": "if we want to enumerate them in that way that's good you know again at that level of abstraction it's understandable",
    "start": "1626799",
    "end": "1633279"
  },
  {
    "text": "um and then if we want to look at configure services we can go and and start to examine that and again if you",
    "start": "1633279",
    "end": "1639279"
  },
  {
    "text": "want to do a little bit of a quantification and say well is this readable you know meaning does this fit",
    "start": "1639279",
    "end": "1645039"
  },
  {
    "text": "in your head we can start to again quantify it and say well what for example what what's",
    "start": "1645039",
    "end": "1650080"
  },
  {
    "text": "the cyclomatic complexity here and there's no branching there's no looping there's just one straight line through",
    "start": "1650080",
    "end": "1655440"
  },
  {
    "text": "the code so cyclomatic complexity is one i know you can't see all the code it goes a little bit beyond here i'm gonna scroll",
    "start": "1655440",
    "end": "1662720"
  },
  {
    "text": "in a moment but i promise there's no surprises there so cyclomatic complexity of one it",
    "start": "1662720",
    "end": "1668480"
  },
  {
    "text": "doesn't get any better than that what if we start counting the um the objects again just like we did the last time",
    "start": "1668480",
    "end": "1674559"
  },
  {
    "text": "um so i'm not going to you know do that you know quite as detailed and analysis as i did",
    "start": "1674559",
    "end": "1679760"
  },
  {
    "text": "the last time but you notice there are six things involved so again we're good",
    "start": "1679760",
    "end": "1685840"
  },
  {
    "text": "it fits in our in our short-term memory this is still a very high level of",
    "start": "1685840",
    "end": "1691360"
  },
  {
    "text": "abstraction so you're getting a little bit more detail about how the software is structured so again the point here is",
    "start": "1691360",
    "end": "1697440"
  },
  {
    "text": "not i'm not trying to teach you how i wrote the code i'm trying to teach you how to structure code so that it becomes",
    "start": "1697440",
    "end": "1703120"
  },
  {
    "text": "discoverable and it's you know it's readable um so if you're in if you're trying to sort of figure figure out you",
    "start": "1703120",
    "end": "1709440"
  },
  {
    "text": "know how do things work in this particular code base for example let's say you're interested in knowing you know how what are the security",
    "start": "1709440",
    "end": "1715679"
  },
  {
    "text": "mechanisms do i need to log on into this system in order to you know to to use it you probably say well maybe i can find",
    "start": "1715679",
    "end": "1722320"
  },
  {
    "text": "some information there and configure authorization and and then if you go there your expectation should be that again you",
    "start": "1722320",
    "end": "1728640"
  },
  {
    "text": "know that code is structured so that there's at most seven things going on and all the stuff that you're looking at",
    "start": "1728640",
    "end": "1734000"
  },
  {
    "text": "right now should now you know go out of scope basically you shouldn't have to you shouldn't have to know about any of",
    "start": "1734000",
    "end": "1739279"
  },
  {
    "text": "this stuff that we're looking at at the moment and if you want to know about you know how does persistence work uh you",
    "start": "1739279",
    "end": "1744480"
  },
  {
    "text": "might say well we could also go and look at configure repository that sounds like a place where i could get a little bit",
    "start": "1744480",
    "end": "1749600"
  },
  {
    "text": "more information about that and then again if you go to and look at that you know what happens inside of configure",
    "start": "1749600",
    "end": "1754799"
  },
  {
    "text": "authorization for example should become irrelevant um",
    "start": "1754799",
    "end": "1760000"
  },
  {
    "text": "so here's another way we can just this is a little bit more of an ad hoc quantification but the point is that you",
    "start": "1760000",
    "end": "1765360"
  },
  {
    "text": "know things you should structure code so that you know you always have this you know this appropriate level of this",
    "start": "1765360",
    "end": "1772159"
  },
  {
    "text": "appropriate amount of information uh at the level of abstraction that you're looking",
    "start": "1772159",
    "end": "1778320"
  },
  {
    "text": "so so one thing you might wonder now is i sort of hinted at this before",
    "start": "1778320",
    "end": "1783520"
  },
  {
    "text": "uh there's this remaining problem of saying okay so but if we have",
    "start": "1783520",
    "end": "1788640"
  },
  {
    "text": "at the lower level of abstraction if we have something like the create method where there's you know six things you",
    "start": "1788640",
    "end": "1793919"
  },
  {
    "text": "know six objects being activated and cyclomatic complexity of two that's not too bad but then if we compose those you",
    "start": "1793919",
    "end": "1800640"
  },
  {
    "text": "know methods with other things that also have you know moving parts",
    "start": "1800640",
    "end": "1805760"
  },
  {
    "text": "what prevents those things from compounding so that instead of which you know we're only having six things going on we have you know 18 or 25 or 100",
    "start": "1805760",
    "end": "1813520"
  },
  {
    "text": "things going on um we we really need to be able to you know let those things that you know at one",
    "start": "1813520",
    "end": "1819919"
  },
  {
    "text": "level of abstraction have something going on you know when we look at it from the higher level of abstraction they should just you know present as one",
    "start": "1819919",
    "end": "1826799"
  },
  {
    "text": "thing we should be able to think of them as a chunk of information not several chunks of information but just one thing",
    "start": "1826799",
    "end": "1834320"
  },
  {
    "text": "so the question is how do you do that and and the high level answer to that is good api design um",
    "start": "1834320",
    "end": "1842080"
  },
  {
    "text": "and there are lots of you know they're thick big thick books about you know how do you do good api design and all of",
    "start": "1842080",
    "end": "1847279"
  },
  {
    "text": "them have you know most of them have pretty good recommendations about that but i want to do something a little bit more concrete",
    "start": "1847279",
    "end": "1853679"
  },
  {
    "text": "here so i'm going to look at one particular method and i will claim and i will now make the",
    "start": "1853679",
    "end": "1860880"
  },
  {
    "text": "argument that this not only fits in your brain we're going to look at the allocate method",
    "start": "1860880",
    "end": "1867360"
  },
  {
    "text": "i'll make the argument that not only will does this fit in your brain sort of already been there but there was oh i",
    "start": "1867360",
    "end": "1873039"
  },
  {
    "text": "will also you know make the argument that when we look at it from the outside this presents as one chunk of",
    "start": "1873039",
    "end": "1879519"
  },
  {
    "text": "information one chunk of information and only one chunk even though there's actually more stuff going on so we did establish that we have a cyclomatic",
    "start": "1879519",
    "end": "1886000"
  },
  {
    "text": "complexity of three and um we also did establish that we have some stuff going on actually",
    "start": "1886000",
    "end": "1891760"
  },
  {
    "text": "actually if you want to count all the all the things that are involved there's actually six um six objects but there's",
    "start": "1891760",
    "end": "1898640"
  },
  {
    "text": "only one of them that has mutant that that has the potential to to mutate but if we want to be unsophisticated we",
    "start": "1898640",
    "end": "1904399"
  },
  {
    "text": "could say there's six things going on and at least also a cyclomatic complexity of three so we can't really",
    "start": "1904399",
    "end": "1910240"
  },
  {
    "text": "afford any of this complexity to escape this abstraction scope that we're looking at so at this level of detail",
    "start": "1910240",
    "end": "1916480"
  },
  {
    "text": "it's fine we can deal with it but if we're looking at the allocate method from the outside we can't allow you know",
    "start": "1916480",
    "end": "1922159"
  },
  {
    "text": "stuff like this this these implementation details to escape because if we have to keep track of all of those",
    "start": "1922159",
    "end": "1927440"
  },
  {
    "text": "six things plus we know whatever happens in other method calls it's not going to fit in our head it's not going to fit in",
    "start": "1927440",
    "end": "1934159"
  },
  {
    "text": "our short-term memory so we we need a way to figure out that this collapses into being just one chunk of information",
    "start": "1934159",
    "end": "1940880"
  },
  {
    "text": "one abstraction and i will make the argument that that's the case here why is that it's because",
    "start": "1940880",
    "end": "1947840"
  },
  {
    "text": "i've very deliberately written this method so that it has some properties that are very desirable so first of all",
    "start": "1947840",
    "end": "1954799"
  },
  {
    "text": "it has no side effects some of you will already know where i'm going with this let's just go back and look at that it",
    "start": "1954799",
    "end": "1961200"
  },
  {
    "text": "has no side effects and what's a side effect the side effect is something that changes the observable state of the universe",
    "start": "1961200",
    "end": "1967279"
  },
  {
    "text": "so if you send an email that's a side effect if you add a road to the database that's a side effect if you repaint the",
    "start": "1967279",
    "end": "1973279"
  },
  {
    "text": "screen on your computer that's a side effect basically you can't do anything interesting with a computer without",
    "start": "1973279",
    "end": "1978799"
  },
  {
    "text": "producing side effects so it's not that we don't like side effects but we just want to be very deliberate about where",
    "start": "1978799",
    "end": "1984240"
  },
  {
    "text": "we put them and we want to avoid them most of the places but when this one doesn't send email it doesn't um it",
    "start": "1984240",
    "end": "1991279"
  },
  {
    "text": "doesn't you know add rows to the database it doesn't it doesn't write to the console it doesn't write to disk it",
    "start": "1991279",
    "end": "1996559"
  },
  {
    "text": "there isn't there are no side effects here so it's a side effect free method so that's one property and that's a nice",
    "start": "1996559",
    "end": "2003200"
  },
  {
    "text": "property all all by itself now when i say property here i mean quality trade you know uh characteristic of of the",
    "start": "2003200",
    "end": "2010320"
  },
  {
    "text": "code now another property that this method has is that it's deterministic you know",
    "start": "2010320",
    "end": "2015600"
  },
  {
    "text": "for the same inputs it's always going to return the same output there's no",
    "start": "2015600",
    "end": "2020880"
  },
  {
    "text": "randomness going on here it's there's no random object there's no access to the system clock we're not asking about your",
    "start": "2020880",
    "end": "2026960"
  },
  {
    "text": "date time now or anything's like like that we're not you know doing anything uh that might introduce",
    "start": "2026960",
    "end": "2032559"
  },
  {
    "text": "some sort of non-determinism we're not you know reading from the console we're not querying uh you know um",
    "start": "2032559",
    "end": "2038720"
  },
  {
    "text": "third-party web services or anything like that we're not even querying a database we're just making calculations",
    "start": "2038720",
    "end": "2044080"
  },
  {
    "text": "we're this is an algorithm so it's side effect free and it has",
    "start": "2044080",
    "end": "2049280"
  },
  {
    "text": "it is deterministic and we have a name for that that's a pure function",
    "start": "2049280",
    "end": "2054398"
  },
  {
    "text": "and the interesting thing about pure functions is that they are what we call referentially transparent so that's a",
    "start": "2054399",
    "end": "2060878"
  },
  {
    "text": "big word but what does that mean so referentially transparent that means",
    "start": "2060879",
    "end": "2065919"
  },
  {
    "text": "that a function call is equal to its result so think about how you do arithmetic you",
    "start": "2065919",
    "end": "2072240"
  },
  {
    "text": "probably learned to memorize the multiplication table when you went to school when you were kids",
    "start": "2072240",
    "end": "2078000"
  },
  {
    "text": "so if if someone asks you you know what is 4 times 5 you just say well that's 20",
    "start": "2078000",
    "end": "2084240"
  },
  {
    "text": "it is 20 right i'm really really bad at this and but what you don't do is you you you",
    "start": "2084240",
    "end": "2091679"
  },
  {
    "text": "don't actually perform the calculation because how do you calculate 4 times 5 well you take 5 and you say 5",
    "start": "2091679",
    "end": "2098880"
  },
  {
    "text": "plus 5 plus 5 plus 5 and you can add them together that's actually the calculation but that's not what you do",
    "start": "2098880",
    "end": "2104160"
  },
  {
    "text": "you just memorized the result and and you can do that because you know multiplication is also a pure",
    "start": "2104160",
    "end": "2111440"
  },
  {
    "text": "function and it means you don't have to perform the calculation if you know what the result is that's just as good so you",
    "start": "2111440",
    "end": "2117520"
  },
  {
    "text": "don't have to run the function if you already know the result so trans referential transparency means that the",
    "start": "2117520",
    "end": "2122880"
  },
  {
    "text": "function call and the result that produces are equivalent you know conceptually and also cognitively we can",
    "start": "2122880",
    "end": "2130000"
  },
  {
    "text": "think of them as being the same thing so this means if you have something like allocate here what's the result well",
    "start": "2130000",
    "end": "2137280"
  },
  {
    "text": "it's an iron mobile of table then you know it's a collection of tables and and you can think of that as just",
    "start": "2137280",
    "end": "2142800"
  },
  {
    "text": "being one chunk of information so if you want to look at the allocate method from the next",
    "start": "2142800",
    "end": "2148000"
  },
  {
    "text": "level of abstraction up it just collapses into being a value",
    "start": "2148000",
    "end": "2153040"
  },
  {
    "text": "it's a collection of tables we don't care that it's actually a calculation with you know with some",
    "start": "2153040",
    "end": "2158640"
  },
  {
    "text": "execution steps it's just a value and because of referential transparency we know that this is true",
    "start": "2158640",
    "end": "2166240"
  },
  {
    "text": "so functions are awesome do more of those",
    "start": "2166240",
    "end": "2172720"
  },
  {
    "text": "um it doesn't mean that you that you can completely avoid you know having side effects and non-deterministic code and",
    "start": "2172720",
    "end": "2179280"
  },
  {
    "text": "all sorts of things like that um but the more you can sort of put you know the things that are not pure functions in",
    "start": "2179280",
    "end": "2185839"
  },
  {
    "text": "very specific places and be very deliberate about how you structure that code uh then for the rest of the um the",
    "start": "2185839",
    "end": "2192240"
  },
  {
    "text": "code if you can keep that as pure functions you know that all of that is gonna you know collapse well into just the result value",
    "start": "2192240",
    "end": "2199839"
  },
  {
    "text": "so they're going to be you know they abstract much better in terms of code that fits in your head",
    "start": "2199839",
    "end": "2206079"
  },
  {
    "text": "right so again i want to reiterate that you know at all levels of abstraction we",
    "start": "2206560",
    "end": "2211599"
  },
  {
    "text": "need to respect the constraints that that our brains actually have so we should be able to zoom in",
    "start": "2211599",
    "end": "2217680"
  },
  {
    "text": "and again at that new level of detail that should be at most seven things going on we should be able to zoom out",
    "start": "2217680",
    "end": "2223040"
  },
  {
    "text": "and you know at that level of detail and even at the entry point there should be at most seven things going on",
    "start": "2223040",
    "end": "2230720"
  },
  {
    "text": "all right um let's zoom in again",
    "start": "2230720",
    "end": "2236000"
  },
  {
    "text": "because i like this animation all right so so so again",
    "start": "2236000",
    "end": "2241520"
  },
  {
    "text": "here's another way to to um to illustrate the same point so i know i'm saying the same thing but you know the",
    "start": "2241520",
    "end": "2247440"
  },
  {
    "text": "illustration is going to be slightly different here so at any given level of abstraction we know that we have to",
    "start": "2247440",
    "end": "2253520"
  },
  {
    "text": "respect our cognitive constraint that can be at most seven things going on we also understand that you know behind",
    "start": "2253520",
    "end": "2259920"
  },
  {
    "text": "each of those cells there might be more complexity hiding it's just being abstracted away and one way to abstract",
    "start": "2259920",
    "end": "2265920"
  },
  {
    "text": "that away is by using pure functions but there are other you know principles of api design that also enable you to",
    "start": "2265920",
    "end": "2271440"
  },
  {
    "text": "abstract things away so that that that they look like one thing uh the composite design pattern for",
    "start": "2271440",
    "end": "2276880"
  },
  {
    "text": "example might do that for you as well um so another way to diagram that to",
    "start": "2276880",
    "end": "2283440"
  },
  {
    "text": "illustrate that is to say well you know at one level of abstraction we have seven things going on but we also",
    "start": "2283440",
    "end": "2288800"
  },
  {
    "text": "understand that at the next level of abstraction there might be up to seven things going on in each of those sevens",
    "start": "2288800",
    "end": "2295680"
  },
  {
    "text": "in each of those seven cells so you know at the next level down that might be up to 49 things going on not that that fits",
    "start": "2295680",
    "end": "2302320"
  },
  {
    "text": "in our health head but we understand that that's the case but then we also understand that in each of those 49 cells there might be up to",
    "start": "2302320",
    "end": "2309359"
  },
  {
    "text": "seven things going on and so forth and so forth so that's a fractal",
    "start": "2309359",
    "end": "2315119"
  },
  {
    "text": "and uh if you if now if you came and you thought fractal architecture and you were expecting something with mental",
    "start": "2315119",
    "end": "2320880"
  },
  {
    "text": "broad sets and so on you might be a little bit disappointed say that's not really a fact so um and and if you don't think so then let",
    "start": "2320880",
    "end": "2327680"
  },
  {
    "text": "me give you something else this is called a snowflake and it sort of follows the same principle where we",
    "start": "2327680",
    "end": "2333280"
  },
  {
    "text": "start with a very simple uh you know geometric uh structure and then we",
    "start": "2333280",
    "end": "2338320"
  },
  {
    "text": "keep on subdividing each of those straight lines into something that looks like that and you can keep on zooming in",
    "start": "2338320",
    "end": "2344480"
  },
  {
    "text": "on on the edge of the snowflake and and you know if you if you render as you",
    "start": "2344480",
    "end": "2349920"
  },
  {
    "text": "as you zoom in you can keep on seeing the same you know structure",
    "start": "2349920",
    "end": "2355200"
  },
  {
    "text": "repeating itself over and over again infinitely deep and the same thing is true here you know",
    "start": "2355200",
    "end": "2360800"
  },
  {
    "text": "you can keep on assuming so i stopped the rendering at four levels at four layers because if i add a fifth layer",
    "start": "2360800",
    "end": "2367280"
  },
  {
    "text": "basically just because once one big green blob you know it you can't really see the laziness of it anymore so so",
    "start": "2367280",
    "end": "2373440"
  },
  {
    "text": "this was just for uh you know aesthetic reasons that i stopped rendering uh there but um",
    "start": "2373440",
    "end": "2379839"
  },
  {
    "text": "but but you could you know contin conceivably you could keep on zooming into these uh you know hexagons",
    "start": "2379839",
    "end": "2387040"
  },
  {
    "text": "indefinitely and you would be able to always subdivide them into seven more uh hexagons so that's a fractal so that's",
    "start": "2387040",
    "end": "2393119"
  },
  {
    "text": "why i call it fractal architecture and also just because it sounds cool so the point being uh you know",
    "start": "2393119",
    "end": "2400800"
  },
  {
    "text": "we need to respect the constraints that our brains have you know in the short term memory we we can",
    "start": "2400800",
    "end": "2407920"
  },
  {
    "text": "only keep track of seven things you know long-term memory is a different thing but long-term memory relying too much of",
    "start": "2407920",
    "end": "2414000"
  },
  {
    "text": "relying exclusively on long-term memory in terms of working with code bases i believe that that's where you know it",
    "start": "2414000",
    "end": "2420400"
  },
  {
    "text": "leads us to the point where we spend we waste too much time reading existing code because it's really difficult to",
    "start": "2420400",
    "end": "2425760"
  },
  {
    "text": "understand so i've been trying to write code that has you know that is composed of",
    "start": "2425760",
    "end": "2432240"
  },
  {
    "text": "lots of very small functions and i've done this for years and i find that it's a it you know it's not a magic thing but",
    "start": "2432240",
    "end": "2439200"
  },
  {
    "text": "it it really gives you it makes a great difference in terms of how readable and how understandable the code turns out to",
    "start": "2439200",
    "end": "2445839"
  },
  {
    "text": "be so understanding this cognitive constraints allows us to write code that fits in our head so which is also the",
    "start": "2445839",
    "end": "2452400"
  },
  {
    "text": "title of my new book you know code that fits in your head and you can get it wherever good books are sold um",
    "start": "2452400",
    "end": "2458480"
  },
  {
    "text": "so that's basically what i what i had in terms of a presentation but i know i also have some time left still so i and",
    "start": "2458480",
    "end": "2464560"
  },
  {
    "text": "i did that this deliberately because i'm happy to take questions and do some answers or answer those",
    "start": "2464560",
    "end": "2470640"
  },
  {
    "text": "questions so what i also did is i actually brought a copy of the book code that fits in your head it's right",
    "start": "2470640",
    "end": "2477359"
  },
  {
    "text": "here i also bought a copy of my previous book dependency injection principles patterns",
    "start": "2477359",
    "end": "2483119"
  },
  {
    "text": "and practices no principles practice essa and patterns i can't remember the the order of it that stephen dersen and",
    "start": "2483119",
    "end": "2489280"
  },
  {
    "text": "i wrote a couple of years ago and i also brought an old t-shirt and all to fix the t-shirt if anyone is interested in",
    "start": "2489280",
    "end": "2495760"
  },
  {
    "text": "that and i plan on giving them away to people who ask good questions so basically i'm just saying well the first",
    "start": "2495760",
    "end": "2501119"
  },
  {
    "text": "person who asked a question gets one of those things and so on and if you're asking mark what's your favorite color",
    "start": "2501119",
    "end": "2506560"
  },
  {
    "text": "that counts as a question but you don't earn a book from you ask a good question right um so any",
    "start": "2506560",
    "end": "2512079"
  },
  {
    "text": "questions yes",
    "start": "2512079",
    "end": "2516599"
  },
  {
    "text": "right so the question is if you couldn't hear it in the back if you're writing in c sharp or basically any other",
    "start": "2526960",
    "end": "2532560"
  },
  {
    "text": "mainstream language how do you signal to all the other programmers around out there that you know this is actually a",
    "start": "2532560",
    "end": "2538480"
  },
  {
    "text": "pure function um you should you know you should you know understand that this is a pure function and the short answer is",
    "start": "2538480",
    "end": "2545119"
  },
  {
    "text": "um there's no technical way of doing that in shop or in java or on any other",
    "start": "2545119",
    "end": "2551920"
  },
  {
    "text": "mainstream language so you have to rely on some sort of out-of-band communication so either put a comment on",
    "start": "2551920",
    "end": "2557920"
  },
  {
    "text": "it or just talk to people and say this is pure or or whatever else if you're interested",
    "start": "2557920",
    "end": "2564640"
  },
  {
    "text": "i actually wrote a um i did write a blog post about that so let's let's find that i think i can find my blog here um so",
    "start": "2564640",
    "end": "2573760"
  },
  {
    "text": "what did i call that though oh bloody hell i can't remember maybe i",
    "start": "2574400",
    "end": "2580240"
  },
  {
    "text": "can search myself okay so uh i'm not going to spend too much time on this let's see i don't know",
    "start": "2580240",
    "end": "2585359"
  },
  {
    "text": "uh okay i can't remember i you know i'll i'll um i'll put it on are you are you looking at the slack channel for the um",
    "start": "2585359",
    "end": "2592560"
  },
  {
    "text": "for this session here if if you are i'll i'll find it and i'll post it on the slack channel does that work for you",
    "start": "2592560",
    "end": "2597760"
  },
  {
    "text": "because i can't remember the title right now okay sorry about that um but um but so but the slightly longer",
    "start": "2597760",
    "end": "2604880"
  },
  {
    "text": "answer to that is still that um let's see let's start this up again",
    "start": "2604880",
    "end": "2610240"
  },
  {
    "text": "the um the way that these languages are designed they um you sort of need to at least the experience we have from",
    "start": "2610240",
    "end": "2616079"
  },
  {
    "text": "haskell haskell is one of those languages that actually just does distinguish between pure and impure and",
    "start": "2616079",
    "end": "2621359"
  },
  {
    "text": "it's built into the language in a very specific way and it's something that is very hard to retro fit into other",
    "start": "2621359",
    "end": "2627520"
  },
  {
    "text": "languages you sort of need to design it in from the start so there have been attempts to use",
    "start": "2627520",
    "end": "2633520"
  },
  {
    "text": "attributes you know where you can put a little pure on top of it but you don't get any sort of compiler",
    "start": "2633520",
    "end": "2638800"
  },
  {
    "text": "checks on it so it's really you're really on the honor system anyway but i think it's a good question which one of",
    "start": "2638800",
    "end": "2644560"
  },
  {
    "text": "those things would you like two books and a t-shirt and the t-shirt is a little",
    "start": "2644560",
    "end": "2650720"
  },
  {
    "text": "which one which one right okay so congratulations for that",
    "start": "2650720",
    "end": "2656480"
  },
  {
    "text": "you yeah it's not a draw but you know i i think my publisher likes me to give",
    "start": "2656480",
    "end": "2663040"
  },
  {
    "text": "these things away because it makes it more desirable so now you didn't get it you have to buy it",
    "start": "2663040",
    "end": "2668400"
  },
  {
    "text": "yes",
    "start": "2668400",
    "end": "2670640"
  },
  {
    "text": "[Music] each sir they shouldn't know of each other",
    "start": "2673660",
    "end": "2680700"
  },
  {
    "text": "[Music]",
    "start": "2680700",
    "end": "2683790"
  },
  {
    "text": "right okay so if i if i understand you correctly you're saying well trunks shouldn't know of each other um so um",
    "start": "2690960",
    "end": "2698319"
  },
  {
    "text": "so how do i keep things separate but you know the there's probably still going to be dependencies but you know between",
    "start": "2698319",
    "end": "2703520"
  },
  {
    "text": "things you know you can't write everything so that they're sort of standalone sometimes you need to leverage you know other things",
    "start": "2703520",
    "end": "2710240"
  },
  {
    "text": "um and i think it's it's uh if i may be so bold i think it's a little bit of a misrepresentation of what i said because",
    "start": "2710240",
    "end": "2716560"
  },
  {
    "text": "that's not quite what i had in mind i'm just saying whenever you look at a piece of code there should be",
    "start": "2716560",
    "end": "2722720"
  },
  {
    "text": "few enough things going on at in that piece of code that you can understand you know that it fits in your short-term",
    "start": "2722720",
    "end": "2728319"
  },
  {
    "text": "memory but you know if the three of those things are somehow connected to each other that's that's the thing you'll be",
    "start": "2728319",
    "end": "2734800"
  },
  {
    "text": "able to understand if there's you know not a lot of other things going on but then if you mean",
    "start": "2734800",
    "end": "2741440"
  },
  {
    "text": "maybe you mean by your question is saying well okay so if i have one thing but that actually cause it has a lot of",
    "start": "2741440",
    "end": "2746880"
  },
  {
    "text": "dependencies that calls into other things is that what you had in mind but then again you know this is why i",
    "start": "2746880",
    "end": "2752640"
  },
  {
    "text": "think you know often uh pure functions save you because again you know even you can have you can have",
    "start": "2752640",
    "end": "2758560"
  },
  {
    "text": "a pure function that cause other pure functions that cause other pure functions and maybe if you try to",
    "start": "2758560",
    "end": "2763760"
  },
  {
    "text": "uh you know if you try to summarize all the complexity that's going on in on inside",
    "start": "2763760",
    "end": "2769119"
  },
  {
    "text": "of that you know you know top pure function you might have cyclomatic complexity that is you know several hundreds of things but",
    "start": "2769119",
    "end": "2776160"
  },
  {
    "text": "still because it's referentially transparent it just collapses into its results so you can think of it as equivalent to the output that it",
    "start": "2776160",
    "end": "2782640"
  },
  {
    "text": "produces so you don't really have to worry about um [Music] you know how it arrived at that",
    "start": "2782640",
    "end": "2787760"
  },
  {
    "text": "conclusion and which dependencies it had it doesn't really matter at a higher level of abstraction",
    "start": "2787760",
    "end": "2793200"
  },
  {
    "text": "does that answer your question okay would you like a book or a t-shirt",
    "start": "2793200",
    "end": "2798960"
  },
  {
    "text": "not at that one no you will take the t-shirt okay all right so um so the t-shirt has never",
    "start": "2799119",
    "end": "2805040"
  },
  {
    "text": "been used okay i'm i'm i'm selling it really well but you probably want to wash it because",
    "start": "2805040",
    "end": "2811040"
  },
  {
    "text": "it it's been lying around i found it in my carpet you know recently and it's been lying around for a long time so it",
    "start": "2811040",
    "end": "2816480"
  },
  {
    "text": "looks a little it looks a little iffy but just wash it i never i never wore it okay",
    "start": "2816480",
    "end": "2822800"
  },
  {
    "text": "all right um good so um do we have more yes sir",
    "start": "2822800",
    "end": "2829720"
  },
  {
    "text": "is",
    "start": "2834160",
    "end": "2837160"
  },
  {
    "text": "so you're saying do we follow the single responsibility principle here or",
    "start": "2855359",
    "end": "2861640"
  },
  {
    "text": "[Music]",
    "start": "2861860",
    "end": "2869539"
  },
  {
    "text": "i'm not sure i understand the question here",
    "start": "2873920",
    "end": "2878160"
  },
  {
    "text": "yes i'm sorry i i you kind of lost me there i'm sorry maybe you know if you",
    "start": "2882000",
    "end": "2887040"
  },
  {
    "text": "find another way of putting you tweet me or write me an email or something like that i'll be happy to to to help you out if it just",
    "start": "2887040",
    "end": "2894559"
  },
  {
    "text": "can i apply that rules to the to classes as well um yeah i think you can you know that i",
    "start": "2898640",
    "end": "2904240"
  },
  {
    "text": "tried to do a couple of illustrations with that where we looked at you know we start by looking at the startup class for example and saying you know at that",
    "start": "2904240",
    "end": "2911520"
  },
  {
    "text": "level of abstraction just looking at the public api of a class does that look like it's it's sort of a coherent thing",
    "start": "2911520",
    "end": "2918559"
  },
  {
    "text": "i tend to not that much you know look at that you know i'm more interested in looking at methods of",
    "start": "2918559",
    "end": "2925000"
  },
  {
    "text": "functions um because sometimes i think uh you know i",
    "start": "2925000",
    "end": "2931200"
  },
  {
    "text": "have i have a couple of examples in the book where i have a class that actually turns out to have like seven or eight members um but each of those members are",
    "start": "2931200",
    "end": "2938160"
  },
  {
    "text": "fairly self-contained so you can sort of you can almost imagine that you can slice them up and and you know",
    "start": "2938160",
    "end": "2943359"
  },
  {
    "text": "understand each what each of them does without understanding any of the other ones um",
    "start": "2943359",
    "end": "2948640"
  },
  {
    "text": "it's mostly analysis mechanism analysis method i that i use to to look at you",
    "start": "2948640",
    "end": "2954000"
  },
  {
    "text": "know the actual code in terms of implementation i have you know in the book uh and in the workshop i also hold",
    "start": "2954000",
    "end": "2960800"
  },
  {
    "text": "you know that i give based on the book i have a lot of other design principles uh where i talk about you know what's a",
    "start": "2960800",
    "end": "2966720"
  },
  {
    "text": "good design principles in terms of api design and you know what how do you design uh interfaces and classes and so",
    "start": "2966720",
    "end": "2972559"
  },
  {
    "text": "on and they go hand in hand pretty well but it's not quite this way of looking at it",
    "start": "2972559",
    "end": "2978480"
  },
  {
    "text": "it's sort of complementary to that but if you would like the book should you would like one all right thank you",
    "start": "2978480",
    "end": "2984480"
  },
  {
    "text": "okay so i am i'm out of giveaways um but that doesn't mean that i'm not you know i'm absolutely happy to take more",
    "start": "2984480",
    "end": "2990559"
  },
  {
    "text": "questions uh i'm also mindful of your time um but we we actually do have 10 more",
    "start": "2990559",
    "end": "2996160"
  },
  {
    "text": "minutes so if you want to have questions then feel free to ask if you want to get ahead and out of the room before",
    "start": "2996160",
    "end": "3002640"
  },
  {
    "text": "everyone else i can completely understand that as well so any more questions",
    "start": "3002640",
    "end": "3009520"
  },
  {
    "text": "yes sir",
    "start": "3010720",
    "end": "3013838"
  },
  {
    "text": "right yeah okay so the question is i talked a little bit about haskell and how it distinctly distinguishes between",
    "start": "3023839",
    "end": "3029599"
  },
  {
    "text": "pure and impure code so what's my personal opinion opinion on why is haskell not more popular that's that's",
    "start": "3029599",
    "end": "3035920"
  },
  {
    "text": "your question right um no i'm just making sure that i verify phrase you will because i think people",
    "start": "3035920",
    "end": "3042079"
  },
  {
    "text": "in the back probably couldn't hear you and because i have the microphone you don't it's not not your fault at all um",
    "start": "3042079",
    "end": "3049599"
  },
  {
    "text": "haskell is a wonderful language but it's also really difficult to learn",
    "start": "3049599",
    "end": "3054800"
  },
  {
    "text": "and i think you could probably do things to make it easier to learn but the way that haskell is often being taught uh it",
    "start": "3054800",
    "end": "3061440"
  },
  {
    "text": "sort of um puts a lot of people off and it's also you know if you the way",
    "start": "3061440",
    "end": "3066880"
  },
  {
    "text": "that that you often teach haskell it's probably a little bit difficult to understand if you're you",
    "start": "3066880",
    "end": "3073200"
  },
  {
    "text": "know beginner programmer it's a little bit hard to understand why do we need to jump through all these",
    "start": "3073200",
    "end": "3078720"
  },
  {
    "text": "strange you know language constructs in order to achieve simple things you know um",
    "start": "3078720",
    "end": "3084079"
  },
  {
    "text": "just if you want to do simple i o right to the console right to disk and so on there's actually a lot of machinery here",
    "start": "3084079",
    "end": "3089920"
  },
  {
    "text": "that you have to understand in haskell in order to do simple things things that you know in other languages will just be",
    "start": "3089920",
    "end": "3095599"
  },
  {
    "text": "you know console.writeline um so if you um and you're often you know beginners are often impatient they just want to",
    "start": "3095599",
    "end": "3101599"
  },
  {
    "text": "learn and get things to working and haskell sort of you know very deliberately prevents you from having",
    "start": "3101599",
    "end": "3107440"
  },
  {
    "text": "things that that works basically um so so i think that's that's that's one",
    "start": "3107440",
    "end": "3112720"
  },
  {
    "text": "reason uh i i actually wish that it would it would be much more useful um or much more used",
    "start": "3112720",
    "end": "3119359"
  },
  {
    "text": "in in the industry but it's not and i don't think it will will be but it's a wonderful thinking tool",
    "start": "3119359",
    "end": "3125200"
  },
  {
    "text": "um i i basically um i've worked so much with haskell now that i tend to think in",
    "start": "3125200",
    "end": "3131200"
  },
  {
    "text": "haskell when i when i problem solve and then i when i've sort of thought things through and maybe a little done a",
    "start": "3131200",
    "end": "3137200"
  },
  {
    "text": "little prototype and haskell then i would go and re-implement the things in if chavo and xi shot instead",
    "start": "3137200",
    "end": "3142319"
  },
  {
    "text": "so i definitely if you're interested in functional programming i would you know recommend that everyone sooner or later",
    "start": "3142319",
    "end": "3147599"
  },
  {
    "text": "learns haskell because it's it really it really gives you an insight into one functional programming is that no other",
    "start": "3147599",
    "end": "3153520"
  },
  {
    "text": "language will give you um so for that reason i think it's really important but um",
    "start": "3153520",
    "end": "3159280"
  },
  {
    "text": "only if you're interested because it would it will require significant investment of your time and i think also",
    "start": "3159280",
    "end": "3164640"
  },
  {
    "text": "that's why it's not more popular so i hope that's the best answer i can give you uh and i i don't want to tire",
    "start": "3164640",
    "end": "3170559"
  },
  {
    "text": "anyone else with rambling on so we can always talk about that you know if you if you want to talk about this more than you know",
    "start": "3170559",
    "end": "3175839"
  },
  {
    "text": "find me in the break and we i'm happy to discuss this more anyone else",
    "start": "3175839",
    "end": "3181839"
  },
  {
    "text": "i'm quite blinded by these things and it's a it looks like there's no more questions which means that you get out",
    "start": "3182160",
    "end": "3188000"
  },
  {
    "text": "of here six minutes before time isn't that wonderful so thanks for coming and i hope you have",
    "start": "3188000",
    "end": "3193839"
  },
  {
    "text": "a great conference",
    "start": "3193839",
    "end": "3197160"
  },
  {
    "text": "[Applause]",
    "start": "3200920",
    "end": "3205030"
  },
  {
    "text": "you",
    "start": "3211040",
    "end": "3213119"
  }
]