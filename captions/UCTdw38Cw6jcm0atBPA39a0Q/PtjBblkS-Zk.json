[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "okay good afternoon everyone hope you all have a good lunch I'm doing this",
    "start": "2510",
    "end": "9960"
  },
  {
    "text": "without the room microphone is that okay only for the recording thank you so does",
    "start": "9960",
    "end": "24960"
  },
  {
    "text": "this thing work so you probably have not",
    "start": "24960",
    "end": "32668"
  },
  {
    "start": "30000",
    "end": "76000"
  },
  {
    "text": "seen me before even though you go to these Technology conventions maybe from time to time that's because this is the",
    "start": "32669",
    "end": "40260"
  },
  {
    "text": "first time I'm doing a talk ever so bit nervous you guys nervous no oh",
    "start": "40260",
    "end": "47730"
  },
  {
    "text": "we'll be fine so Who am I well first of",
    "start": "47730",
    "end": "57180"
  },
  {
    "text": "all I'm a happily married father of two children children and that's why I'm",
    "start": "57180",
    "end": "63809"
  },
  {
    "text": "here but secondly well I'm also the proud owner of a 1968 Ford 3000 tractor",
    "start": "63809",
    "end": "71520"
  },
  {
    "text": "with the optional flow-flow front loader but thirdly I'm an employee at Barco",
    "start": "71520",
    "end": "79020"
  },
  {
    "start": "76000",
    "end": "149000"
  },
  {
    "text": "where I'm a Software Architect C++ developer barca was founded in 1934 in",
    "start": "79020",
    "end": "86189"
  },
  {
    "text": "Belgium started off making radios but",
    "start": "86189",
    "end": "92460"
  },
  {
    "text": "now Burke who makes a whole variety of imaging devices in 2012 Barco acquired",
    "start": "92460",
    "end": "100650"
  },
  {
    "text": "the Norwegian company projection design and where I was working at the time and",
    "start": "100650",
    "end": "110100"
  },
  {
    "text": "now projection design became the the Norway office of Barco and we're",
    "start": "110100",
    "end": "116880"
  },
  {
    "text": "currently 150 employees ish we're Rd is",
    "start": "116880",
    "end": "122899"
  },
  {
    "text": "40 people and software department is 8",
    "start": "122899",
    "end": "128780"
  },
  {
    "text": "mainly support us developers so I'm here to tell you",
    "start": "128780",
    "end": "133860"
  },
  {
    "text": "a little bit about our technology how we how we use technology in our embedded",
    "start": "133860",
    "end": "139140"
  },
  {
    "text": "platform and how just to give you an insight to a real life real life",
    "start": "139140",
    "end": "146150"
  },
  {
    "text": "embedded platform so we make projectors",
    "start": "146150",
    "end": "152150"
  },
  {
    "start": "149000",
    "end": "370000"
  },
  {
    "text": "that's a projector as well but we do not make projectors for for this regular",
    "start": "152150",
    "end": "157530"
  },
  {
    "text": "type of meeting room setup we make predictors for speciality markets that's",
    "start": "157530",
    "end": "165860"
  },
  {
    "text": "well that's for cinemas for instance we",
    "start": "165860",
    "end": "172110"
  },
  {
    "text": "have approximately 50% of the market share of cinema in the world we make",
    "start": "172110",
    "end": "177540"
  },
  {
    "text": "projectors for for the events market which is basically large-scale concerts",
    "start": "177540",
    "end": "186440"
  },
  {
    "text": "for visitor attractions dark rides and but most importantly for the for the",
    "start": "186440",
    "end": "193470"
  },
  {
    "text": "Norwegian R&D department is the simulation market where we have been focusing most so our products typically",
    "start": "193470",
    "end": "202560"
  },
  {
    "text": "go into into simulator products like this here's a car simulator used by a",
    "start": "202560",
    "end": "209790"
  },
  {
    "text": "car manufacturer to test out their product and also obviously it can be",
    "start": "209790",
    "end": "217049"
  },
  {
    "text": "used by racecar drivers to learn the course before they actually go and drive there our products go into flight",
    "start": "217049",
    "end": "225959"
  },
  {
    "text": "simulators both military and commercial flight simulators commercial airline",
    "start": "225959",
    "end": "233489"
  },
  {
    "text": "pilots have really high demand on training in simulator each each year to",
    "start": "233489",
    "end": "238620"
  },
  {
    "text": "to to train for emergency situations and so on from the outside the such a",
    "start": "238620",
    "end": "244590"
  },
  {
    "text": "simulator looks like this it's mounted on a hydraulic base so that the whole thing can move so that basically makes",
    "start": "244590",
    "end": "253760"
  },
  {
    "text": "the the physical stress on the projector very high so that it can it can withstand all the shaking of the",
    "start": "253760",
    "end": "260579"
  },
  {
    "text": "airplane when they're flying we're we're not making the simulator itself we're making the projector",
    "start": "260579",
    "end": "267010"
  },
  {
    "text": "but that makes our our users are that",
    "start": "267010",
    "end": "273490"
  },
  {
    "text": "the end user don't really see the protector they see the simulator but our users that are working towards our",
    "start": "273490",
    "end": "280150"
  },
  {
    "text": "predictors are the integrators making these these simulators so it's very",
    "start": "280150",
    "end": "285550"
  },
  {
    "text": "important for for us to remember that that the customer is really an",
    "start": "285550",
    "end": "290590"
  },
  {
    "text": "integrator and making sure that his life is easy another installation helicopter",
    "start": "290590",
    "end": "299830"
  },
  {
    "text": "simulator with a wider field of view that you have in a helicopter you need up to 13 or 14 differs in total to cover",
    "start": "299830",
    "end": "308380"
  },
  {
    "text": "the entire field of view in down the floor and and everywhere and since we're",
    "start": "308380",
    "end": "315580"
  },
  {
    "text": "now projecting on a spherical surface the the image also needs to be geometry corrected for that so it needs to be",
    "start": "315580",
    "end": "321780"
  },
  {
    "text": "warped to align with the spherical geometry of the screen and they also blended so that",
    "start": "321780",
    "end": "328390"
  },
  {
    "text": "it creates one truly seamless image for their for the entire field of view last",
    "start": "328390",
    "end": "334420"
  },
  {
    "text": "simulator showing you as its ship bridge here you can see the projectors sitting",
    "start": "334420",
    "end": "340900"
  },
  {
    "text": "down here on the left this is not a motion platform and obviously it's seen",
    "start": "340900",
    "end": "350140"
  },
  {
    "text": "from the outside it has a 360 degree view for the for the ones inside the",
    "start": "350140",
    "end": "355290"
  },
  {
    "text": "simulator where it looks something like this where the captain and and the crane operator can can sit and and do training",
    "start": "355290",
    "end": "364750"
  },
  {
    "text": "in different different scenarios okay so",
    "start": "364750",
    "end": "371830"
  },
  {
    "start": "370000",
    "end": "764000"
  },
  {
    "text": "that's what we make what's inside these projectors we created a common firmware",
    "start": "371830",
    "end": "381510"
  },
  {
    "text": "sorry embedded platform basically electronics and an FPGA and software",
    "start": "381510",
    "end": "386620"
  },
  {
    "text": "platform so that we could use that across all our products not only in the",
    "start": "386620",
    "end": "391960"
  },
  {
    "text": "simulation market but also in the other markets they have slightly different requirements but mostly it's the same",
    "start": "391960",
    "end": "400330"
  },
  {
    "text": "so and this platform is developed both in Norway and in Belgium together all",
    "start": "400330",
    "end": "407530"
  },
  {
    "text": "together we're a park approximately 15 software developers plus other",
    "start": "407530",
    "end": "412990"
  },
  {
    "text": "disciplines as well but the architecture is based on the on the software design",
    "start": "412990",
    "end": "420520"
  },
  {
    "text": "we recreated in Norway before we were acquired Ashley so we call this platform",
    "start": "420520",
    "end": "427810"
  },
  {
    "text": "park of pulse it's mainly written in C++ and we have a very fundamental design",
    "start": "427810",
    "end": "437110"
  },
  {
    "text": "rule in this platform and that is to keep stuff simple at least for the user",
    "start": "437110",
    "end": "443139"
  },
  {
    "text": "and by user I don't necessarily mean the end user or the integrator even though",
    "start": "443139",
    "end": "449229"
  },
  {
    "text": "it's important to make it easy for them as well but also user at every level of the abstraction in the platform so that",
    "start": "449229",
    "end": "455680"
  },
  {
    "text": "if you create an API at some level the user of that API should have a simple",
    "start": "455680",
    "end": "462479"
  },
  {
    "text": "simple time on working with that API so that it's easy to get it right easy to",
    "start": "462479",
    "end": "468550"
  },
  {
    "text": "room we're going to remember to release your resources and so on from a find I",
    "start": "468550",
    "end": "480219"
  },
  {
    "text": "want to give you an overview of all the",
    "start": "480219",
    "end": "485409"
  },
  {
    "text": "platform as such it looks like this so this is not only a software the software",
    "start": "485409",
    "end": "491169"
  },
  {
    "text": "part sits in the CPU obviously but this",
    "start": "491169",
    "end": "497229"
  },
  {
    "text": "is the somewhat simplified view of how of the other stuff that's inside the",
    "start": "497229",
    "end": "503139"
  },
  {
    "text": "projector so at the heart of it all it's there's some big FPGA which decodes the",
    "start": "503139",
    "end": "511589"
  },
  {
    "text": "different input formats that we get in the hdmi displayport and and the others SDI mej what what not that we get in it",
    "start": "511589",
    "end": "520510"
  },
  {
    "text": "receive them free process and then do all the scaling geometry corrective",
    "start": "520510",
    "end": "527680"
  },
  {
    "text": "scaling before it sends it out to the DMD the DMD",
    "start": "527680",
    "end": "534899"
  },
  {
    "text": "it's a very interesting device it's the actual imaging device inside the projector it consists of approximately 4",
    "start": "534899",
    "end": "542799"
  },
  {
    "text": "million mirrors and it's 2 centimeters across so and each of this mirror can be toggle",
    "start": "542799",
    "end": "551230"
  },
  {
    "text": "in and on and an off position more than 10,000 times a second and when we",
    "start": "551230",
    "end": "559139"
  },
  {
    "text": "illuminate the DMD with laser light",
    "start": "559139",
    "end": "564839"
  },
  {
    "text": "first blue and then showing the blue",
    "start": "564839",
    "end": "570189"
  },
  {
    "text": "contents of the DMD and project that that light out through the lens you get the blue image on the screen and then",
    "start": "570189",
    "end": "577209"
  },
  {
    "text": "green and then red and in fast succession you will get what seems to",
    "start": "577209",
    "end": "583179"
  },
  {
    "text": "the human eye as a stable image if you would film this with a high-speed camera you would see the blinking all all over",
    "start": "583179",
    "end": "589660"
  },
  {
    "text": "the place but to the human eye it's a it's a still image and also the the the",
    "start": "589660",
    "end": "600279"
  },
  {
    "text": "lasers in these predictors are typically only blue lasers and then the lasers are",
    "start": "600279",
    "end": "606549"
  },
  {
    "text": "projected onto our illuminates phosphor material which then converts the blue",
    "start": "606549",
    "end": "614019"
  },
  {
    "text": "laser into yellow from which we can split red and green so it's a that's a",
    "start": "614019",
    "end": "619389"
  },
  {
    "text": "whole topic by itself not necessarily a C++ topic that's a very interesting technology topic so gotta leave that for",
    "start": "619389",
    "end": "626319"
  },
  {
    "text": "now the CPU has first of all our CPU is",
    "start": "626319",
    "end": "636910"
  },
  {
    "text": "a quad-core 1.2 gigahertz arm 7",
    "start": "636910",
    "end": "643299"
  },
  {
    "text": "processor and that seems like a lot and it is it's far more than we really",
    "start": "643299",
    "end": "651730"
  },
  {
    "text": "really need but processors these days are very cheap so compared to the expense of all the other stuff we've",
    "start": "651730",
    "end": "658569"
  },
  {
    "text": "kind of decided that we we put a processor in there that is",
    "start": "658569",
    "end": "664559"
  },
  {
    "text": "makes us able to use all these different",
    "start": "665989",
    "end": "671249"
  },
  {
    "text": "modern technologies that I'll get to so",
    "start": "671249",
    "end": "676259"
  },
  {
    "text": "that we're not squeezed on CPU cycles and memory and such there's a gig of memory in there amongst others the CPU",
    "start": "676259",
    "end": "685379"
  },
  {
    "text": "has sold over external interfaces like the ethernet the keypad IR remote",
    "start": "685379",
    "end": "691289"
  },
  {
    "text": "control LCD --usb in addition to that it has all these different internal interfaces which",
    "start": "691289",
    "end": "699779"
  },
  {
    "text": "embedded people recognize size square CES bi USB GPIO and others communicating",
    "start": "699779",
    "end": "705569"
  },
  {
    "text": "with all the different peripheral devices that are in the projector in addition to that there's a PCI Express",
    "start": "705569",
    "end": "712470"
  },
  {
    "text": "link between the CPU and the and the FPGA so that we can communicate with it",
    "start": "712470",
    "end": "720449"
  },
  {
    "text": "basically important thing about this architecture is that there's no real",
    "start": "720449",
    "end": "726089"
  },
  {
    "text": "time requirement on the CPU the image comes into the FPGA is processed by the",
    "start": "726089",
    "end": "731699"
  },
  {
    "text": "FPGA and displayed out through the FPGA so to be able to display an image at 128",
    "start": "731699",
    "end": "738509"
  },
  {
    "text": "or similar the CPU does not need to be involved it's involved it's heavily",
    "start": "738509",
    "end": "744629"
  },
  {
    "text": "involved by in setting everything up detecting what's there and making sure that scaling is correct and and doing",
    "start": "744629",
    "end": "751649"
  },
  {
    "text": "the whole thing but when when the image is up and running the real-time is covered by by the FPGA that's also a key",
    "start": "751649",
    "end": "758669"
  },
  {
    "text": "factor to to some of our design choices obviously so talking about the software",
    "start": "758669",
    "end": "767819"
  },
  {
    "start": "764000",
    "end": "884000"
  },
  {
    "text": "stack which is in the cpu we based this on a Linux most of you are probably",
    "start": "767819",
    "end": "777149"
  },
  {
    "text": "familiar with Linux but working with Linux and in an embedded system is",
    "start": "777149",
    "end": "782159"
  },
  {
    "text": "really rewarding there's so much there's",
    "start": "782159",
    "end": "787470"
  },
  {
    "text": "so much capabilities of the all the whole ecosystem so",
    "start": "787470",
    "end": "795890"
  },
  {
    "text": "so I just had to say to the to the people that have not been working in the Linux ecosystem that's you're missing",
    "start": "795890",
    "end": "802459"
  },
  {
    "text": "out it's great then we have our unified",
    "start": "802459",
    "end": "808790"
  },
  {
    "text": "Hardware access layer this is something that Linux provides or could have",
    "start": "808790",
    "end": "816769"
  },
  {
    "text": "provided so Linux has a way of a very",
    "start": "816769",
    "end": "822860"
  },
  {
    "text": "documented way of creating device drivers and how to how to load them and run them and so on we went another way",
    "start": "822860",
    "end": "830089"
  },
  {
    "text": "we put our what is traditionally called a device driver in our driver in",
    "start": "830089",
    "end": "835100"
  },
  {
    "text": "embedded system in a user phase in in user space for some different reasons",
    "start": "835100",
    "end": "842600"
  },
  {
    "text": "first of all we didn't have that real time requirement so if we're a complex switched for ten milliseconds or",
    "start": "842600",
    "end": "850339"
  },
  {
    "text": "whatever that's fine it's much much easier to debug user",
    "start": "850339",
    "end": "855470"
  },
  {
    "text": "space than kernel space it enables us to use C++ which is very important so that",
    "start": "855470",
    "end": "862010"
  },
  {
    "text": "we can have type safety we can have our a III we can have symbolic names for all",
    "start": "862010",
    "end": "870529"
  },
  {
    "text": "the register axes and so on so it's very easy for the layers above to to be able",
    "start": "870529",
    "end": "875779"
  },
  {
    "text": "to interface with the hardware with in a logical way makes it easy to use again",
    "start": "875779",
    "end": "884470"
  },
  {
    "start": "884000",
    "end": "1064000"
  },
  {
    "text": "above the that hardware access level layer we have set of services and these",
    "start": "884829",
    "end": "893209"
  },
  {
    "text": "services provide functionality so like functionality that the end user care about if you want to set the brightness",
    "start": "893209",
    "end": "900980"
  },
  {
    "text": "or if you want to adjust the laser power if you want to do something with a",
    "start": "900980",
    "end": "906709"
  },
  {
    "text": "geometry correction or set your IP address all those are high-level functions that the user cares about and",
    "start": "906709",
    "end": "914029"
  },
  {
    "text": "I need to communicate with these services to accomplish that also some of these services need to talk together to",
    "start": "914029",
    "end": "920300"
  },
  {
    "text": "accomplish a bigger bigger task these",
    "start": "920300",
    "end": "926089"
  },
  {
    "text": "reside in different processes in Linux so by default they cannot talk to each",
    "start": "926089",
    "end": "931360"
  },
  {
    "text": "other and also the user cannot talk to them so we decided to use Debus which is",
    "start": "931360",
    "end": "940769"
  },
  {
    "text": "open-source widely used in the process communication bus it's widely used at",
    "start": "940769",
    "end": "946839"
  },
  {
    "text": "least on desktop Linux to to to send messages to on the desktop but we've",
    "start": "946839",
    "end": "954220"
  },
  {
    "text": "found it very suitable for this as well so now that services can talk to each",
    "start": "954220",
    "end": "960160"
  },
  {
    "text": "other still the user cannot access anything",
    "start": "960160",
    "end": "966209"
  },
  {
    "text": "which is where we decided to create something which we call the facade it",
    "start": "966209",
    "end": "972999"
  },
  {
    "text": "implements the facade design pattern who would expect and that exposes a unified",
    "start": "972999",
    "end": "980649"
  },
  {
    "text": "API towards the user so that's yeah he",
    "start": "980649",
    "end": "986379"
  },
  {
    "text": "doesn't need to know whether he is talking to service a or service B we can split that up however logically we think",
    "start": "986379",
    "end": "993579"
  },
  {
    "text": "it makes sense on the on the application layer but the user still sees a unified API the API is exposed through through",
    "start": "993579",
    "end": "1003170"
  },
  {
    "text": "UNIX domain socket locally on the projector a UNIX domain socket is just",
    "start": "1003170",
    "end": "1009389"
  },
  {
    "text": "like a TCP socket except that it's only existing on the inside the projector",
    "start": "1009389",
    "end": "1014790"
  },
  {
    "text": "it's not network connected in any way and the protocol that we expose there is",
    "start": "1014790",
    "end": "1021300"
  },
  {
    "text": "a JSON RPC protocol and the reason for valve for choosing in JSON RPC for that",
    "start": "1021300",
    "end": "1027298"
  },
  {
    "text": "protocol is that it's very widely adopted in languages around the world",
    "start": "1027299",
    "end": "1033860"
  },
  {
    "text": "Jason mattis so for those integrators that need to talk to our products it's",
    "start": "1033860",
    "end": "1040709"
  },
  {
    "text": "very easy for them to get a little library that has Jason support and to be able to create packets to send us in",
    "start": "1040709",
    "end": "1048240"
  },
  {
    "text": "comparison with typical previously previous embedded protocols which were",
    "start": "1048240",
    "end": "1055799"
  },
  {
    "text": "binary and you have to calculate your checksum and escape your start bytes so I'm",
    "start": "1055799",
    "end": "1062850"
  },
  {
    "text": "so that's why we did the Jason or PC secondly second reason for for doing",
    "start": "1062850",
    "end": "1070679"
  },
  {
    "start": "1064000",
    "end": "1184000"
  },
  {
    "text": "Jason or PC is that we use it also",
    "start": "1070679",
    "end": "1076679"
  },
  {
    "text": "internally for our own osde that that's",
    "start": "1076679",
    "end": "1081780"
  },
  {
    "text": "the on screen display the menu system basically and the LCD that sits on the",
    "start": "1081780",
    "end": "1088020"
  },
  {
    "text": "side of the projector we use HTML we use CSS JavaScript angular off-the-shelf",
    "start": "1088020",
    "end": "1097850"
  },
  {
    "text": "modern web technologies and WebKit also",
    "start": "1097850",
    "end": "1106650"
  },
  {
    "text": "then on in the projector to render everything and to for that web server",
    "start": "1106650",
    "end": "1114120"
  },
  {
    "text": "than to communicate Jason that's basically the native language of",
    "start": "1114120",
    "end": "1119809"
  },
  {
    "text": "although although that stack and nodejs with which is the web server so it makes",
    "start": "1119809",
    "end": "1125970"
  },
  {
    "text": "it very easy for us to utilize all the different components that we can get and",
    "start": "1125970",
    "end": "1131159"
  },
  {
    "text": "it also makes us able to produce very complete product without spending that",
    "start": "1131159",
    "end": "1138900"
  },
  {
    "text": "much time on creating the components the artists a the IANA said this morning",
    "start": "1138900",
    "end": "1145140"
  },
  {
    "text": "that he hates bloated code this design",
    "start": "1145140",
    "end": "1151049"
  },
  {
    "text": "is a bit bloated but it's and that has",
    "start": "1151049",
    "end": "1157559"
  },
  {
    "text": "its downsides obviously but it's from from the point of view that you have that quad-core CPU we because we do it",
    "start": "1157559",
    "end": "1168480"
  },
  {
    "text": "this way we're able to to utilize our resources better but that's our human",
    "start": "1168480",
    "end": "1173730"
  },
  {
    "text": "resource is better so that we can we can create better products faster",
    "start": "1173730",
    "end": "1181010"
  },
  {
    "start": "1184000",
    "end": "1244000"
  },
  {
    "text": "lastly there's a set of protocol converters that convert this protocol to",
    "start": "1184870",
    "end": "1196000"
  },
  {
    "text": "the outside world the very basic ones TCP in New York is only a transport",
    "start": "1196000",
    "end": "1202360"
  },
  {
    "text": "layer because this is from the facade served as a UNIX domain socket again so",
    "start": "1202360",
    "end": "1207400"
  },
  {
    "text": "the so adding TCP or UART it's very",
    "start": "1207400",
    "end": "1212650"
  },
  {
    "text": "simple protocol converters but also being able to receive remote control IR",
    "start": "1212650",
    "end": "1219580"
  },
  {
    "text": "remote control the keypad and some other error control interfaces we have as well it's implemented as just protocol",
    "start": "1219580",
    "end": "1225309"
  },
  {
    "text": "converters or everything and in the end end up in this using the same API which",
    "start": "1225309",
    "end": "1231160"
  },
  {
    "text": "makes testing a whole lot easier as well when everything comes in the same way",
    "start": "1231160",
    "end": "1237330"
  },
  {
    "text": "okay so let me talk a little bit more",
    "start": "1240270",
    "end": "1246610"
  },
  {
    "start": "1244000",
    "end": "1439000"
  },
  {
    "text": "about that IPC bus and how the services attach to",
    "start": "1246610",
    "end": "1253450"
  },
  {
    "text": "those because that's can be quite tricky",
    "start": "1253450",
    "end": "1258540"
  },
  {
    "text": "so what we do we start off with an interface description this is a it's not",
    "start": "1258540",
    "end": "1270730"
  },
  {
    "text": "code RS sorry it's not the C++ code but it's a machine readable format that describes",
    "start": "1270730",
    "end": "1276670"
  },
  {
    "text": "the interface and then we run this flew through code generation and we generate",
    "start": "1276670",
    "end": "1283500"
  },
  {
    "text": "these three files first of all we create",
    "start": "1283500",
    "end": "1290290"
  },
  {
    "text": "an actual C++ interface which more or less directly corresponds to the to the to the interface description but it also",
    "start": "1290290",
    "end": "1298630"
  },
  {
    "text": "then then defines the types that are used within that interface description and so",
    "start": "1298630",
    "end": "1304390"
  },
  {
    "text": "on so everything is very nicely as a strongly typed then it also creates a",
    "start": "1304390",
    "end": "1311679"
  },
  {
    "text": "skeleton implementation a skeleton in IPC talk for those who don't know as",
    "start": "1311679",
    "end": "1318690"
  },
  {
    "text": "it's a class that or is it's a module a class that sits between your",
    "start": "1318690",
    "end": "1325630"
  },
  {
    "text": "implementation and the bus that helps expose your service on the bus so it",
    "start": "1325630",
    "end": "1331690"
  },
  {
    "text": "takes care of when someone tries to call you a method call from the bus it will",
    "start": "1331690",
    "end": "1338409"
  },
  {
    "text": "deserialize all the all the parameters it will make the actual actual function",
    "start": "1338409",
    "end": "1344020"
  },
  {
    "text": "call it will take the return value and maybe the exception that was thrown and the serialized vowels and put it back on",
    "start": "1344020",
    "end": "1351159"
  },
  {
    "text": "the bus so that the actual implementation doesn't need to care about the bus work at all on the other",
    "start": "1351159",
    "end": "1361960"
  },
  {
    "text": "hand we also create the stub which is and placeholder object you use in a",
    "start": "1361960",
    "end": "1367240"
  },
  {
    "text": "remote process to be able to communicate with this service so it inherits the",
    "start": "1367240",
    "end": "1374409"
  },
  {
    "text": "same interface as the actual service but it's not the actual implementation it will take your method call and it will",
    "start": "1374409",
    "end": "1381490"
  },
  {
    "text": "serialize your arguments pass them over the bus so that the skeleton will receive sitting back and forth so that",
    "start": "1381490",
    "end": "1388870"
  },
  {
    "text": "the client code doesn't need to know that it's talking to the bus it knows that it's talking to something that's",
    "start": "1388870",
    "end": "1394840"
  },
  {
    "text": "implements the service interface and everyone's happy taking that taking that part of doing",
    "start": "1394840",
    "end": "1405100"
  },
  {
    "text": "all the IPC work out of the day-to-day work of the developer so that he doesn't need to create the thousands of lines of",
    "start": "1405100",
    "end": "1412330"
  },
  {
    "text": "boiler boiler boiler code for every service that is made is a tremendous",
    "start": "1412330",
    "end": "1418330"
  },
  {
    "text": "help and it makes everything easier it makes it easier to to do it right instead of making some sort of shortcuts",
    "start": "1418330",
    "end": "1424539"
  },
  {
    "text": "because you didn't have this I didn't list the actual implementation here but",
    "start": "1424539",
    "end": "1429820"
  },
  {
    "text": "it's that's something you need to implement manually you need to inherit the interface and implement your service",
    "start": "1429820",
    "end": "1440010"
  },
  {
    "start": "1439000",
    "end": "1474000"
  },
  {
    "text": "the interface description could look something like this there's an interface it's called cow it",
    "start": "1442600",
    "end": "1451600"
  },
  {
    "text": "has an enumeration it has a method which returns that type that was defined above",
    "start": "1451600",
    "end": "1460019"
  },
  {
    "text": "it has a property weight its type for",
    "start": "1460019",
    "end": "1465029"
  },
  {
    "text": "this talk was int because it was short to fit on the slide the property axis is",
    "start": "1465029",
    "end": "1472240"
  },
  {
    "text": "read-only and it also has a single move simple and clean.the generated interface",
    "start": "1472240",
    "end": "1480899"
  },
  {
    "start": "1474000",
    "end": "1619000"
  },
  {
    "text": "will look like this there's an enum",
    "start": "1480899",
    "end": "1487779"
  },
  {
    "text": "class milk type with the enumerators there's pure virtual functions for the",
    "start": "1487779",
    "end": "1496500"
  },
  {
    "text": "for the method milk there's a getter",
    "start": "1496500",
    "end": "1502750"
  },
  {
    "text": "function for the read-only property there's no setter function since it's",
    "start": "1502750",
    "end": "1508330"
  },
  {
    "text": "read-only and there's a function to get the single move a couple of things to",
    "start": "1508330",
    "end": "1518220"
  },
  {
    "text": "note here is that well observable is something up it it's observable pattern",
    "start": "1518220",
    "end": "1525309"
  },
  {
    "text": "it's our implementation so that you can",
    "start": "1525309",
    "end": "1530580"
  },
  {
    "text": "actually observe properties and make sure you're told whenever they change",
    "start": "1530580",
    "end": "1535830"
  },
  {
    "text": "that whole pattern is also implemented in the skeleton and an stub so that if a",
    "start": "1535830",
    "end": "1542769"
  },
  {
    "text": "property change in the service that property change will propagate through the bus to all the clients that",
    "start": "1542769",
    "end": "1548379"
  },
  {
    "text": "listening including out through the facade so that external clients are notified as well if",
    "start": "1548379",
    "end": "1553870"
  },
  {
    "text": "they subscribe to it you see here also",
    "start": "1553870",
    "end": "1561340"
  },
  {
    "text": "that this signal do not have a type but only the or this does not have",
    "start": "1561340",
    "end": "1567370"
  },
  {
    "text": "parameters but it could have had parameters if it emitted a string for instance or or a more complex type of a",
    "start": "1567370",
    "end": "1574450"
  },
  {
    "text": "some sort of structs for instance we also",
    "start": "1574450",
    "end": "1580630"
  },
  {
    "text": "automatically generate stream operators so that it's very easy for or so that is",
    "start": "1580630",
    "end": "1590080"
  },
  {
    "text": "possible first of all to for the for the skeletons and the stubs to serialize and deserialize correctly although all the",
    "start": "1590080",
    "end": "1597250"
  },
  {
    "text": "custom values it makes it very easy also to to store user settings to config",
    "start": "1597250",
    "end": "1603429"
  },
  {
    "text": "files in the readable way when you always have these separators available and logging and debugging also becomes",
    "start": "1603429",
    "end": "1608950"
  },
  {
    "text": "easier so we kind of made it just a habit to have to have those kind of operators available so that it's very",
    "start": "1608950",
    "end": "1614440"
  },
  {
    "text": "easy to to serialize teaster device okay",
    "start": "1614440",
    "end": "1623409"
  },
  {
    "text": "so now we have this let me give you a small code example well there's one",
    "start": "1623409",
    "end": "1631330"
  },
  {
    "text": "thing one more thing I need to say about the stub the stub also in addition to to",
    "start": "1631330",
    "end": "1639990"
  },
  {
    "text": "to being this proxy object that you have locally to communicate with a remote service it also implements asynchronous",
    "start": "1639990",
    "end": "1650100"
  },
  {
    "text": "function calls for for calling those functions so when you implement it your",
    "start": "1650100",
    "end": "1656890"
  },
  {
    "text": "service you don't need to to think about asynchronous in chrono city if you don't",
    "start": "1656890",
    "end": "1665980"
  },
  {
    "text": "want to but if every most caller want to call you a synchronously let's stub provide that that level as",
    "start": "1665980",
    "end": "1675820"
  },
  {
    "text": "well okay so this is an an example of",
    "start": "1675820",
    "end": "1685950"
  },
  {
    "start": "1679000",
    "end": "1784000"
  },
  {
    "text": "well it's this event should say a single scene or example where we have some we",
    "start": "1685950",
    "end": "1695080"
  },
  {
    "text": "have a cow stub which talks to the cow some other way and we ask for the MU",
    "start": "1695080",
    "end": "1703929"
  },
  {
    "text": "single and we subscribe to that and the SUBSCRIBE will take",
    "start": "1703929",
    "end": "1708940"
  },
  {
    "text": "collar ball which takes the parameter type that that's that that Seema limits",
    "start": "1708940",
    "end": "1714350"
  },
  {
    "text": "so in this case the it emits a void so so we don't accept any parameters here",
    "start": "1714350",
    "end": "1720520"
  },
  {
    "text": "but there's two problems with this code",
    "start": "1720520",
    "end": "1725740"
  },
  {
    "text": "and it won't care to guess no so first",
    "start": "1725740",
    "end": "1732890"
  },
  {
    "text": "of all there's a dangling pointer here because we made the stubs non copyable",
    "start": "1732890",
    "end": "1743020"
  },
  {
    "text": "because they really really allocate resources on the bus and so on you you",
    "start": "1743020",
    "end": "1749060"
  },
  {
    "text": "don't want to copy them and have double and don't know exactly the lifespan of",
    "start": "1749060",
    "end": "1755060"
  },
  {
    "text": "those so we made them non culpable so that I instantiate a step by by the",
    "start": "1755060",
    "end": "1763490"
  },
  {
    "text": "unique pointer problem areas that I'm passing the row pointer to this and when",
    "start": "1763490",
    "end": "1769490"
  },
  {
    "text": "the stub goes out of scope here the pointer is still alive and when the",
    "start": "1769490",
    "end": "1775760"
  },
  {
    "text": "callback arrives weird stuff happens the other problem with this is that it",
    "start": "1775760",
    "end": "1786260"
  },
  {
    "text": "doesn't compile and that's that's because the prototype of the SUBSCRIBE",
    "start": "1786260",
    "end": "1791600"
  },
  {
    "text": "function well it's cleaned up big its",
    "start": "1791600",
    "end": "1796790"
  },
  {
    "text": "templated because of the single I can have arbitrary parameters but for a void",
    "start": "1796790",
    "end": "1803360"
  },
  {
    "text": "example it looks like this so you",
    "start": "1803360",
    "end": "1809630"
  },
  {
    "text": "subscribe you give it a STD function void and it returns a subscription scope",
    "start": "1809630",
    "end": "1818030"
  },
  {
    "text": "and also we set it to warn it and used and warnings are errors so this does not",
    "start": "1818030",
    "end": "1823880"
  },
  {
    "text": "compile the subscription scope in this case it's an RA I I object that holds",
    "start": "1823880",
    "end": "1831350"
  },
  {
    "text": "the scope of the subscription so if I change the implementation wasn't",
    "start": "1831350",
    "end": "1838310"
  },
  {
    "text": "immediately visible maybe but if I change the implementation hold the return value up subscribe so",
    "start": "1838310",
    "end": "1844910"
  },
  {
    "text": "that scope is now kept now that line compiles and this one is no longer",
    "start": "1844910",
    "end": "1852590"
  },
  {
    "text": "dangling because when the scope goes out of scope it will or a scope will have a",
    "start": "1852590",
    "end": "1860720"
  },
  {
    "text": "shorter lifespan than the cow so as long as you're sure that you keep keep your",
    "start": "1860720",
    "end": "1871060"
  },
  {
    "text": "object in the right scope this will not fail and that's quite that's quite handy and it makes it very easy again for the",
    "start": "1871060",
    "end": "1877850"
  },
  {
    "text": "user to use it which is the reoccurring theme next I want to show you something",
    "start": "1877850",
    "end": "1894710"
  },
  {
    "text": "which we call the event loop it's an application local work schedule err so",
    "start": "1894710",
    "end": "1902660"
  },
  {
    "text": "in every every one of these processes we have an event loop which schedules work to be done simple to use a single",
    "start": "1902660",
    "end": "1910760"
  },
  {
    "text": "threaded it takes it basically takes a",
    "start": "1910760",
    "end": "1916670"
  },
  {
    "text": "set of color balls void Coble's and and",
    "start": "1916670",
    "end": "1922220"
  },
  {
    "text": "runs them on a single thread which strive to be single thread so that we don't have all these 1% race condition",
    "start": "1922220",
    "end": "1929870"
  },
  {
    "text": "errors and whenever the networking",
    "start": "1929870",
    "end": "1936920"
  },
  {
    "text": "extensions of c++ gets accepted we're probably going to rewrite that to use",
    "start": "1936920",
    "end": "1942320"
  },
  {
    "text": "the i/o service or I don't know if it's gonna be renamed for C++ 20 but at least",
    "start": "1942320",
    "end": "1949670"
  },
  {
    "text": "using the the networking extensions can can help for this as well so this is",
    "start": "1949670",
    "end": "1955190"
  },
  {
    "start": "1954000",
    "end": "1984000"
  },
  {
    "text": "being used like this you have an event looped got it from somewhere and you can",
    "start": "1955190",
    "end": "1963440"
  },
  {
    "text": "include any callable you can be it a free function a static member a member function or lambda like here and that",
    "start": "1963440",
    "end": "1973400"
  },
  {
    "text": "event loop will sit in the background or it will be the the main loop running and",
    "start": "1973400",
    "end": "1978730"
  },
  {
    "text": "run these when they hit the top of the queue there's an additional parameter",
    "start": "1978730",
    "end": "1988790"
  },
  {
    "text": "you can you can tell it to postpone the",
    "start": "1988790",
    "end": "1994310"
  },
  {
    "text": "execution for some chronal duration so in this case I tell it okay ten seconds",
    "start": "1994310",
    "end": "2000670"
  },
  {
    "text": "from now run this that also makes it",
    "start": "2000670",
    "end": "2008380"
  },
  {
    "text": "very easy to do stuff that should happen like in three and three seconds for",
    "start": "2008380",
    "end": "2014140"
  },
  {
    "text": "instance without needing to sleep lock or to do multi-threading or some other",
    "start": "2014140",
    "end": "2020580"
  },
  {
    "text": "technique that you do to to make stuff happen in the future well if it's so",
    "start": "2020580",
    "end": "2026200"
  },
  {
    "text": "much as ten seconds you would probably need to do something but if it was 500 milliseconds you would maybe do asleep",
    "start": "2026200",
    "end": "2032170"
  },
  {
    "text": "and just wastes time in the CPU so being having the infrastructure in place to be",
    "start": "2032170",
    "end": "2039220"
  },
  {
    "text": "able to do this this kind of stuff also enables us to to much more easily write",
    "start": "2039220",
    "end": "2045520"
  },
  {
    "text": "good code it can also be cancelled in",
    "start": "2045520",
    "end": "2050940"
  },
  {
    "start": "2049000",
    "end": "2089000"
  },
  {
    "text": "the same way as talked about scope before I can in queue something as a",
    "start": "2050940",
    "end": "2058590"
  },
  {
    "text": "cancelable I will get a scope back and if I let that scope go out of scope",
    "start": "2058590",
    "end": "2065909"
  },
  {
    "text": "before the callable is executed it won't be executed so in this case unless this",
    "start": "2065910",
    "end": "2073679"
  },
  {
    "text": "always find out to do something else for a really long time the this scholar ball",
    "start": "2073680",
    "end": "2078940"
  },
  {
    "text": "won't be called",
    "start": "2078940",
    "end": "2082440"
  },
  {
    "start": "2089000",
    "end": "2249000"
  },
  {
    "text": "okay and then I want to show you something that ties it a bit together",
    "start": "2089129",
    "end": "2097440"
  },
  {
    "text": "remember I said that the car the stub also had a synchronous method calls",
    "start": "2098369",
    "end": "2106569"
  },
  {
    "text": "available so I create a cow for",
    "start": "2106569",
    "end": "2111880"
  },
  {
    "text": "simplicity I didn't I I'm assuming that the cow this tub is now copyable which",
    "start": "2111880",
    "end": "2117520"
  },
  {
    "text": "is not but for simplicity of reading so I have this stub and I am queue that",
    "start": "2117520",
    "end": "2127470"
  },
  {
    "text": "okay I want to run the function milk I do not know how long that takes",
    "start": "2127470",
    "end": "2133410"
  },
  {
    "text": "so so what I call the async method this",
    "start": "2133410",
    "end": "2142450"
  },
  {
    "text": "will return immediately and let the event loop do other stuff when the when",
    "start": "2142450",
    "end": "2151119"
  },
  {
    "text": "the asynchronous call returns from the from the remote service it will in the",
    "start": "2151119",
    "end": "2157119"
  },
  {
    "text": "background the the stub will pick that up and it will call the corresponding",
    "start": "2157119",
    "end": "2162190"
  },
  {
    "text": "callback internally and make sure that the deferred object returned by that",
    "start": "2162190",
    "end": "2167500"
  },
  {
    "text": "async function is filled and that then function is called the then this",
    "start": "2167500",
    "end": "2175150"
  },
  {
    "text": "callback will be executed getting the milk type which was returned from the",
    "start": "2175150",
    "end": "2182589"
  },
  {
    "text": "milk and we can process on that this",
    "start": "2182589",
    "end": "2192460"
  },
  {
    "text": "implements what is very common in in the in the JavaScript world with a with the",
    "start": "2192460",
    "end": "2197920"
  },
  {
    "text": "deferred promise pattern so it's basically this that pattern implemented in C++ and it's having those having",
    "start": "2197920",
    "end": "2206740"
  },
  {
    "text": "modern C++ being able to implement",
    "start": "2206740",
    "end": "2212380"
  },
  {
    "text": "patterns like this makes it very easy to make a single threaded application which is multi",
    "start": "2212380",
    "end": "2218750"
  },
  {
    "text": "not multi-threaded doing more stuff at the same time without needing to do all",
    "start": "2218750",
    "end": "2224150"
  },
  {
    "text": "the tedious work of a synchronous programming you can just do it like this",
    "start": "2224150",
    "end": "2230990"
  },
  {
    "text": "and you will get get the desired result",
    "start": "2230990",
    "end": "2236740"
  },
  {
    "text": "that's basically what I had from very",
    "start": "2238720",
    "end": "2253010"
  },
  {
    "start": "2249000",
    "end": "2294000"
  },
  {
    "text": "simply also if you're looking at the facade API from the outside just wanted",
    "start": "2253010",
    "end": "2259310"
  },
  {
    "text": "to show you this semi-related this is what a JSON RPC request will look at it",
    "start": "2259310",
    "end": "2266960"
  },
  {
    "text": "does not need to deliver to be as several lines it could be in one line it",
    "start": "2266960",
    "end": "2273260"
  },
  {
    "text": "also a synchronous in nature so that your your ID that you pass in will be",
    "start": "2273260",
    "end": "2278720"
  },
  {
    "text": "returned on your answer so you can get your your responses out of order and",
    "start": "2278720",
    "end": "2286000"
  },
  {
    "text": "it's very easy for for Jason clients to to to utilize okay thank you",
    "start": "2286000",
    "end": "2297250"
  },
  {
    "text": "questions yes",
    "start": "2297250",
    "end": "2303400"
  },
  {
    "start": "2309000",
    "end": "2369000"
  },
  {
    "text": "this one this means that you capture by",
    "start": "2310390",
    "end": "2317420"
  },
  {
    "text": "value and since I didn't did not specify which four variables to capture it will",
    "start": "2317420",
    "end": "2322820"
  },
  {
    "text": "capture the ones I've used inside so since in this case I'm using cow inside",
    "start": "2322820",
    "end": "2329350"
  },
  {
    "text": "it does if I didn't if I remove that it wouldn't compile with it because it did",
    "start": "2329350",
    "end": "2335090"
  },
  {
    "text": "not do not know what cow is but now with the equals sign it will capture anything",
    "start": "2335090",
    "end": "2340580"
  },
  {
    "text": "in the outer scope by value so it will make a copy into the inner scope you",
    "start": "2340580",
    "end": "2352940"
  },
  {
    "text": "could also use a ampersand there to have it captured by reference instead or you",
    "start": "2352940",
    "end": "2358490"
  },
  {
    "text": "could name your explicitly which variable so you would like to capture",
    "start": "2358490",
    "end": "2366850"
  },
  {
    "start": "2369000",
    "end": "2561000"
  },
  {
    "text": "yes do we use a destroy in linen for",
    "start": "2369460",
    "end": "2378710"
  },
  {
    "text": "Linux well we use build routes to create",
    "start": "2378710",
    "end": "2386450"
  },
  {
    "text": "our our our Linux main reason for that",
    "start": "2386450",
    "end": "2391580"
  },
  {
    "text": "is that the main maintainer of build route is a Barco guy in belgium so we",
    "start": "2391580",
    "end": "2397400"
  },
  {
    "text": "were so we didn't want to we didn't even try to fight for that we kind of just",
    "start": "2397400",
    "end": "2404690"
  },
  {
    "text": "went with bill truth because that were was what our Belgium colleagues were were using yes",
    "start": "2404690",
    "end": "2415210"
  },
  {
    "text": "okay so question is whether as we could",
    "start": "2436750",
    "end": "2448100"
  },
  {
    "text": "have used a more high-level language for this and whether this has been since",
    "start": "2448100",
    "end": "2454760"
  },
  {
    "text": "specially since there was no real time requirement and well first of all we had",
    "start": "2454760",
    "end": "2462770"
  },
  {
    "text": "a legacy code base that we brought with us that we were running on bare metal",
    "start": "2462770",
    "end": "2469060"
  },
  {
    "text": "that was implemented in C++ so we had some legacy reasons for for using C++",
    "start": "2469060",
    "end": "2475730"
  },
  {
    "text": "also the knowledge base of other people or C++ so that's another reason I'm",
    "start": "2475730",
    "end": "2483350"
  },
  {
    "text": "showing you the really high level stuff here for how the applications work and",
    "start": "2483350",
    "end": "2488380"
  },
  {
    "text": "that could have been written in anything we talked about maybe having maybe",
    "start": "2488380",
    "end": "2497180"
  },
  {
    "text": "running the really high level application functionality in JavaScript since we have that layer already and",
    "start": "2497180",
    "end": "2506960"
  },
  {
    "text": "that's a possibility and it'll work but we had but but there's a lot of low",
    "start": "2506960",
    "end": "2514700"
  },
  {
    "text": "level stuff here as well which is if not a real time critical it's time critical",
    "start": "2514700",
    "end": "2521240"
  },
  {
    "text": "like computing the geometry correction matrix for the entire thing that's quite",
    "start": "2521240",
    "end": "2526630"
  },
  {
    "text": "data intensive CPU intensive so there are quite some aspects that really need",
    "start": "2526630",
    "end": "2532580"
  },
  {
    "text": "compute power whereas the high level application functionality like milking",
    "start": "2532580",
    "end": "2538700"
  },
  {
    "text": "cows it could be done in could be done in and anything",
    "start": "2538700",
    "end": "2545170"
  },
  {
    "text": "okay all the questions okay thank you",
    "start": "2549470",
    "end": "2556200"
  },
  {
    "text": "[Applause]",
    "start": "2556200",
    "end": "2563540"
  }
]