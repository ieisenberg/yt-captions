[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "hello everybody thank you for coming to my talk I know there's a there are many",
    "start": "4890",
    "end": "10440"
  },
  {
    "text": "other choices so I appreciate you coming my name is alicia witt and today I want",
    "start": "10440",
    "end": "16560"
  },
  {
    "text": "to talk I want to talk to you about what I talk when I talk about cross-platform development no I don't know who if",
    "start": "16560",
    "end": "23010"
  },
  {
    "text": "anyone any of you recognize this but I stole this from Haruki Murakami's book",
    "start": "23010",
    "end": "29430"
  },
  {
    "text": "what I talk about when I talk about running which is a book about running and he actually stole it from Raymond",
    "start": "29430",
    "end": "36090"
  },
  {
    "text": "Carver from another book so I decided I'm going to continue that tradition now",
    "start": "36090",
    "end": "41430"
  },
  {
    "text": "a little bit about me I'm a software architect I've been working in writing computer vision and machine learning",
    "start": "41430",
    "end": "48270"
  },
  {
    "start": "42000",
    "end": "103000"
  },
  {
    "text": "software for about 20 years I've worked for multiple companies at the moment I'm",
    "start": "48270",
    "end": "54690"
  },
  {
    "text": "working as a consultant with small companies and large companies and I also",
    "start": "54690",
    "end": "60720"
  },
  {
    "text": "started the the core C++ users group in Israel and I this talk is based on a",
    "start": "60720",
    "end": "68159"
  },
  {
    "text": "blog post I wrote on my blog you you're welcome to go and check it out over there and I usually tweeted any",
    "start": "68159",
    "end": "75090"
  },
  {
    "text": "interesting things I'm going to talk about now as a consultant doing a lot of",
    "start": "75090",
    "end": "81360"
  },
  {
    "text": "very deep and core technology and algorithms for as I said computer vision",
    "start": "81360",
    "end": "88530"
  },
  {
    "text": "machine learning many of my clients need to target multiple systems and in that",
    "start": "88530",
    "end": "96570"
  },
  {
    "text": "capacity I often come across the need to work across multiple platforms and",
    "start": "96570",
    "end": "104119"
  },
  {
    "start": "103000",
    "end": "379000"
  },
  {
    "text": "before we talk about how we do it and how we structure our code let's think about what cross-platform actually means",
    "start": "104119",
    "end": "110909"
  },
  {
    "text": "and if I try to go from the lowest lowest level up to the higher levels",
    "start": "110909",
    "end": "116880"
  },
  {
    "text": "then cross possible platforms that we might need to target our applications to",
    "start": "116880",
    "end": "122579"
  },
  {
    "text": "include anything from custom-designed Hardware through embedded systems and",
    "start": "122579",
    "end": "129420"
  },
  {
    "text": "even today embedded systems mean it's a very wide variety of processors for from",
    "start": "129420",
    "end": "135030"
  },
  {
    "text": "your washing machines all your way all the way to basically Mumbai smart of course we have mobile devices of",
    "start": "135030",
    "end": "141030"
  },
  {
    "text": "various different different hardware's and different softwares different operating systems and third platforms",
    "start": "141030",
    "end": "147420"
  },
  {
    "text": "and ecosystems on the desktop we have Windows machines we have Linux machines we have Mac OS machines and many other",
    "start": "147420",
    "end": "153480"
  },
  {
    "text": "different types of operating system that our system might need to target but also",
    "start": "153480",
    "end": "159950"
  },
  {
    "text": "there are many there are newer more modern platforms which didn't even exist",
    "start": "159950",
    "end": "165900"
  },
  {
    "text": "up until about 10 or 15 years ago and I used I did some browser plugins these",
    "start": "165900",
    "end": "171690"
  },
  {
    "text": "are no longer a technology that actually in used in many places but still",
    "start": "171690",
    "end": "177660"
  },
  {
    "text": "javascript is the de-facto language language running in South browsers and web assembly is is now taking that place",
    "start": "177660",
    "end": "185640"
  },
  {
    "text": "and I'm we're actually going to see a little bit about that at the end of the talk and of course some more platforms",
    "start": "185640",
    "end": "190950"
  },
  {
    "text": "that we need to target are Cloud Servers these are not desktops this is not a single machine this is a huge racks",
    "start": "190950",
    "end": "197400"
  },
  {
    "text": "running somewhere that we might mean to target and each one of these platforms has its own different types of",
    "start": "197400",
    "end": "204210"
  },
  {
    "text": "constraints and different types of operating conditions but even if we go but we can go beyond that we can talk",
    "start": "204210",
    "end": "211380"
  },
  {
    "text": "about software running in your cars some of you know there's a more modern cars",
    "start": "211380",
    "end": "218490"
  },
  {
    "text": "actually have their own operating system and there are their own constraints IOT",
    "start": "218490",
    "end": "224340"
  },
  {
    "text": "the Internet of Things we have these tiny tiny connected devices that need to",
    "start": "224340",
    "end": "229530"
  },
  {
    "text": "interact with the world they sample the world they sense the world their interact with the world they affect the world and robots if maybe some of you",
    "start": "229530",
    "end": "238770"
  },
  {
    "text": "have heard about Ross the robot operating system again allows us to abstract away a lot of the particulars",
    "start": "238770",
    "end": "245430"
  },
  {
    "text": "of particular robot but again we might need to target these systems and we might need to write software that runs",
    "start": "245430",
    "end": "252690"
  },
  {
    "text": "on different robots interacting with different ecosystems and of course we",
    "start": "252690",
    "end": "258120"
  },
  {
    "text": "mean we might need to target CPUs or GPUs or other type of heterogeneous computing devices so all of these are",
    "start": "258120",
    "end": "264390"
  },
  {
    "text": "different platforms each with potentially very different requirements",
    "start": "264390",
    "end": "269729"
  },
  {
    "text": "very different constraints very different ecosystems and this raises the question",
    "start": "269729",
    "end": "277530"
  },
  {
    "text": "how do you manage your sister your your development stack how you manage your",
    "start": "277530",
    "end": "283050"
  },
  {
    "text": "codebase how do you manage how you maintain your system while targeting multiple platforms and I will be the",
    "start": "283050",
    "end": "290070"
  },
  {
    "text": "first to say it's extremely rare that you actually need to target all of these systems but I have in fact had to target",
    "start": "290070",
    "end": "298220"
  },
  {
    "text": "many subsets of these in different projects so and what I want to talk",
    "start": "298220",
    "end": "304020"
  },
  {
    "text": "about today is really the the lessons that I've learned from trying to to",
    "start": "304020",
    "end": "310740"
  },
  {
    "text": "manage this type of architecture now I will say that my talk most of the",
    "start": "310740",
    "end": "316470"
  },
  {
    "text": "examples although not of all of the code I will show is going to be in searcy plus plus but I think the lessons here",
    "start": "316470",
    "end": "323820"
  },
  {
    "text": "are much more general and can be applied to many other languages so if your C++",
    "start": "323820",
    "end": "329520"
  },
  {
    "text": "is not your cup of tea I think you still find some of these things interesting",
    "start": "329520",
    "end": "335090"
  },
  {
    "text": "but I will say that I think that since C++ are probably the only viable",
    "start": "335090",
    "end": "340800"
  },
  {
    "text": "languages for true cross-platform development and and by the end of this talk if you you're resisting the urge to",
    "start": "340800",
    "end": "347100"
  },
  {
    "text": "raise your hand and argue just to hold it inside and let's talk at the end when",
    "start": "347100",
    "end": "352260"
  },
  {
    "text": "I finish okay now I'm not going to talk about when I say cross-platform I don't mean things",
    "start": "352260",
    "end": "359070"
  },
  {
    "text": "like frameworks that abstract away some of the underlying platform specific code",
    "start": "359070",
    "end": "365850"
  },
  {
    "text": "and I don't mean things like the JVM because everything I'm going to say actually applies to the people who",
    "start": "365850",
    "end": "372360"
  },
  {
    "text": "implement these frameworks and it applies to the people implement some of these deviants so bear with me now when",
    "start": "372360",
    "end": "383370"
  },
  {
    "text": "we come to we go to many popular websites to read about our platforms it",
    "start": "383370",
    "end": "390360"
  },
  {
    "text": "could be I don't know how many people are still frequently a go-to code project but the MSDN database is the Qt",
    "start": "390360",
    "end": "397890"
  },
  {
    "text": "you can go to the tool to see some Android examples iOS examples some and some other similar websites",
    "start": "397890",
    "end": "405060"
  },
  {
    "text": "a lot of the code samples are there mostly to show how to use some SDK and",
    "start": "405060",
    "end": "410850"
  },
  {
    "text": "they frequently mix a lot of things which we as developers or as architects",
    "start": "410850",
    "end": "416190"
  },
  {
    "text": "or as people are trying to write proper software that's going to be maintainable for multiple years it's not very helpful",
    "start": "416190",
    "end": "424020"
  },
  {
    "text": "beside the particular line of SDK that you want to use because the code is",
    "start": "424020",
    "end": "429380"
  },
  {
    "text": "usually spaghetti code mixing a lot of different aspects of whatever your",
    "start": "429380",
    "end": "434580"
  },
  {
    "text": "actual system is trying to do it's generally not portable it's very difficult to unit test and a bug prone",
    "start": "434580",
    "end": "441180"
  },
  {
    "text": "is an and one more aspect which is not generally considered when you're talking about software development but it is",
    "start": "441180",
    "end": "448910"
  },
  {
    "text": "extremely important is the mixing of skills and iOS app developer does not",
    "start": "448910",
    "end": "455070"
  },
  {
    "text": "have the same skill set as an algorithm developer an Android developer doesn't",
    "start": "455070",
    "end": "460139"
  },
  {
    "text": "have the same skills that there's a web developer and when we have an organization even if you're a team",
    "start": "460139",
    "end": "465930"
  },
  {
    "text": "leader inside a larger organization you want to leverage the people that you",
    "start": "465930",
    "end": "472440"
  },
  {
    "text": "work with to the maximum and maximize their ability to affect your product and I'm going to show how how this works and",
    "start": "472440",
    "end": "478919"
  },
  {
    "text": "now we can go even beyond that when we're trying to write some kind of dynamic library maybe dll's or so files",
    "start": "478919",
    "end": "486270"
  },
  {
    "text": "or any kind of executable that has module boundaries when we try to pass",
    "start": "486270",
    "end": "493530"
  },
  {
    "text": "beyond these boundaries we can have we have whole issues related to error handling because exception throw for DLL",
    "start": "493530",
    "end": "500180"
  },
  {
    "text": "generally leads to a termination of the program we have to think about those kinds of things and how we handle these",
    "start": "500180",
    "end": "506910"
  },
  {
    "text": "things in such a way that we can make our software more correct and more",
    "start": "506910",
    "end": "512010"
  },
  {
    "text": "robust now III Winsley call my my the",
    "start": "512010",
    "end": "520589"
  },
  {
    "start": "514000",
    "end": "554000"
  },
  {
    "text": "method that I came up with I call the salami method because it's all about slicing your requirements so thin that",
    "start": "520589",
    "end": "527760"
  },
  {
    "text": "everything is very transparent because I'm going to show you many many aspects of what I'm of the method and the idea",
    "start": "527760",
    "end": "536640"
  },
  {
    "text": "is to expose everything in such a way that understand the concept and you can everything builds easier it's possible",
    "start": "536640",
    "end": "543840"
  },
  {
    "text": "to test test everything separately and independently it's easier to debug it",
    "start": "543840",
    "end": "549030"
  },
  {
    "text": "easier to debug easier to manage and of course easier to maintain right so this",
    "start": "549030",
    "end": "555990"
  },
  {
    "text": "side this side is going to go with us throughout the talk it's going to be in the corner anything we can always",
    "start": "555990",
    "end": "561990"
  },
  {
    "text": "reference it and this is really the gist of the talk so if you don't remember everything but you can just print out",
    "start": "561990",
    "end": "568350"
  },
  {
    "text": "this slide and put it on your cubicle wall and this will this can be more or",
    "start": "568350",
    "end": "573390"
  },
  {
    "text": "less summarizes everything I'm going to say the system has multiple layers and I",
    "start": "573390",
    "end": "582900"
  },
  {
    "text": "will go over each one of these layers and explain some of the aspects and why I made these separations and I'll go",
    "start": "582900",
    "end": "589020"
  },
  {
    "text": "I'll explain some of them the terms that I'm using here but the important thing to remember is that most of the system",
    "start": "589020",
    "end": "597780"
  },
  {
    "text": "you're right do not actually implement all of these layers as separate classes",
    "start": "597780",
    "end": "604530"
  },
  {
    "text": "or separate actual code implementations however all of these aspects still",
    "start": "604530",
    "end": "611760"
  },
  {
    "text": "remain in your code they never go away so even if you decide to make some of your layers thicker as it were these",
    "start": "611760",
    "end": "620280"
  },
  {
    "text": "aspects still remain and they're still there behind the code either implicitly or explicitly so as we always have to",
    "start": "620280",
    "end": "627000"
  },
  {
    "text": "keep this in mind and I'm going to talk about how we unit test each one or tests in general each one of these layers and",
    "start": "627000",
    "end": "633260"
  },
  {
    "text": "why it's structured in such a way right so the main benefits of slicing",
    "start": "633260",
    "end": "642810"
  },
  {
    "start": "638000",
    "end": "752000"
  },
  {
    "text": "architecture in this way are essentially that we want to try and avoid",
    "start": "642810",
    "end": "648000"
  },
  {
    "text": "duplication we want to avoid re-implementing things I've worked with teams where they had an iOS developer a",
    "start": "648000",
    "end": "655110"
  },
  {
    "text": "whole team of iris developers and a whole team of Android developers and they're basically implementing exactly",
    "start": "655110",
    "end": "660780"
  },
  {
    "text": "the same thing I will say that things like front-end and UI and UI generally",
    "start": "660780",
    "end": "670500"
  },
  {
    "text": "work better if they are implemented the bet independently for each platform and that's something that we can't avoid",
    "start": "670500",
    "end": "676820"
  },
  {
    "text": "but I think everything behind the that superficial layer that the user actually",
    "start": "676820",
    "end": "682590"
  },
  {
    "text": "sees that runs on whatever platform should be abstracted into some kind of",
    "start": "682590",
    "end": "688920"
  },
  {
    "text": "common a common interface and once we have this ability to extract we can test",
    "start": "688920",
    "end": "695250"
  },
  {
    "text": "it separately and we can have transparency and as I said consistency because once the business logic is",
    "start": "695250",
    "end": "702240"
  },
  {
    "text": "separated away our apps we won't have different bugs on different platforms",
    "start": "702240",
    "end": "708720"
  },
  {
    "text": "related to things like business logic and of course if Microsoft does finally",
    "start": "708720",
    "end": "715290"
  },
  {
    "text": "manage to get millions of people to buy it's a Windows Phone operating system then we're essentially ready just get",
    "start": "715290",
    "end": "722850"
  },
  {
    "text": "some Windows Phone developer to add the final touches and suddenly you're in the Windows app store right because we're",
    "start": "722850",
    "end": "729360"
  },
  {
    "text": "new platform ready because most of the work has already been done and as I said developer skills we have different",
    "start": "729360",
    "end": "735450"
  },
  {
    "text": "people with different skills that we hired for different types of roles and we don't want them mix having to debug",
    "start": "735450",
    "end": "742890"
  },
  {
    "text": "somebody else's code where they were they don't specialize and of course making refractor in factoring easy so",
    "start": "742890",
    "end": "750330"
  },
  {
    "text": "let's start I'm sure you're all anxious to see where we're going where I'm going with this and at the our bottom layer at",
    "start": "750330",
    "end": "758940"
  },
  {
    "start": "752000",
    "end": "871000"
  },
  {
    "text": "the core of our of our system is that what it's the cross-platform C++ core",
    "start": "758940",
    "end": "765060"
  },
  {
    "text": "right so actually I will say this as an aside I'm not going to do as I said I'm",
    "start": "765060",
    "end": "771210"
  },
  {
    "text": "not going to talk about front and related UI stuff because that's usually",
    "start": "771210",
    "end": "777240"
  },
  {
    "text": "very platform specific what I'm talking about is when we have to build some kind of system which has some logic or some",
    "start": "777240",
    "end": "783420"
  },
  {
    "text": "algorithms or maybe a computer phase or all kinds of thing of those sort and in",
    "start": "783420",
    "end": "788940"
  },
  {
    "text": "the oven there C++ is your go-to language when you want to target multiple platforms and at the heart sits",
    "start": "788940",
    "end": "796260"
  },
  {
    "text": "the cross-platform C++ core this is where the business logic resides this is where we can put proprietary code our IP",
    "start": "796260",
    "end": "804660"
  },
  {
    "text": "you know if we want a pattern some of these concepts and this is where",
    "start": "804660",
    "end": "810360"
  },
  {
    "text": "we use idiomatic C++ for example or whatever language you using all the",
    "start": "810360",
    "end": "817769"
  },
  {
    "text": "design patterns and proper hierarchies of classes and the focus when you're writing this beautiful system is of",
    "start": "817769",
    "end": "825209"
  },
  {
    "text": "course on solid maintainable well-designed architecture something that you can your team can maintain throughout the years and upgrade and",
    "start": "825209",
    "end": "832559"
  },
  {
    "text": "refactor and work on it regardless of where the actual code is going to be run",
    "start": "832559",
    "end": "837889"
  },
  {
    "text": "generally this is you would have some kind of cross-platform build system maybe write it as a static library and",
    "start": "837889",
    "end": "846470"
  },
  {
    "text": "unit test the testing that you would do at this point is generally unit testing",
    "start": "846470",
    "end": "852360"
  },
  {
    "text": "and functional testing which goes to check things like the business logic you want to make sure that you're up to spec",
    "start": "852360",
    "end": "858629"
  },
  {
    "text": "the specification that your client gave you the specification that you're the development team committed so the second",
    "start": "858629",
    "end": "875370"
  },
  {
    "start": "871000",
    "end": "1089000"
  },
  {
    "text": "layer that we that we often that I actually soften encountered an and I I",
    "start": "875370",
    "end": "881399"
  },
  {
    "text": "do point out here and we can see at the top right corner that we just rose one level up I call it the cross-platform",
    "start": "881399",
    "end": "888839"
  },
  {
    "text": "public C++ interface or zappy for short this is the public C++ core API now this",
    "start": "888839",
    "end": "895769"
  },
  {
    "text": "is a slightly subtle distinction from what we had before but in this case the",
    "start": "895769",
    "end": "902850"
  },
  {
    "text": "focus of what we want to expose to whoever is going to use the service is",
    "start": "902850",
    "end": "908360"
  },
  {
    "text": "the focus of the design or the architecture of this API this is where we're starting to think in API design",
    "start": "908360",
    "end": "914519"
  },
  {
    "text": "and not necessarily class diagrams or proper design patterns which starting to",
    "start": "914519",
    "end": "919620"
  },
  {
    "text": "think about our service users and this is this is the point where we do that and by separating it from the underlying",
    "start": "919620",
    "end": "927300"
  },
  {
    "text": "layer we can keep this separation clear and whenever we have any we don't need",
    "start": "927300",
    "end": "932759"
  },
  {
    "text": "to make a lot of compromises on either side another important thing to think",
    "start": "932759",
    "end": "939360"
  },
  {
    "text": "about at this layer is things related to initialization and shut down one of your system",
    "start": "939360",
    "end": "944879"
  },
  {
    "text": "things like lifetime management how do we handle sessions how do we handle",
    "start": "944879",
    "end": "950339"
  },
  {
    "text": "serialization reading configuration files all these things that might not be",
    "start": "950339",
    "end": "955559"
  },
  {
    "text": "relevant in one particular platform let's say a server that boots once a",
    "start": "955559",
    "end": "961049"
  },
  {
    "text": "year or once every several months but are extremely important when you have to",
    "start": "961049",
    "end": "966540"
  },
  {
    "text": "run on a cell phone or in the browser so this is the point where you must think",
    "start": "966540",
    "end": "973230"
  },
  {
    "text": "about these things another thing that you can do at this point is to hide",
    "start": "973230",
    "end": "978269"
  },
  {
    "text": "proprietary code let's say we're a different team or this this might be",
    "start": "978269",
    "end": "983790"
  },
  {
    "text": "something that your client is receiving so they're only getting binaries and so a bunch of interface file in sip result",
    "start": "983790",
    "end": "991019"
  },
  {
    "text": "would be header files and we might not expose the you that we're using some internal proprietary libraries see",
    "start": "991019",
    "end": "999959"
  },
  {
    "text": "process 20 is going to have modules and this is in many aspects this is where this is a classic poster child for",
    "start": "999959",
    "end": "1007189"
  },
  {
    "text": "module the type of things that would go in module which are exporter exported interfaces for a class and at this point",
    "start": "1007189",
    "end": "1014240"
  },
  {
    "text": "the type of testing that we do is mock mocking and unit testing of the API",
    "start": "1014240",
    "end": "1020090"
  },
  {
    "text": "itself so we don't actually need to test the business logic we don't need to check to run unit tests at this point",
    "start": "1020090",
    "end": "1026120"
  },
  {
    "text": "because we already did that at a previous layer and we know that works so",
    "start": "1026120",
    "end": "1031819"
  },
  {
    "text": "at this point we only need to test the new API and one example that I did have a client some time ago they didn't want",
    "start": "1031820",
    "end": "1039079"
  },
  {
    "text": "to have boost inside their iOS app so we this is the place where we could replace",
    "start": "1039080",
    "end": "1044360"
  },
  {
    "text": "some of the boost classes with some other interfaces that are important that",
    "start": "1044360",
    "end": "1050470"
  },
  {
    "text": "are alternatives and I generally if I if my C++ file is called core CPP I",
    "start": "1050470",
    "end": "1057500"
  },
  {
    "text": "generally would call this core API CPP and as I said before for many small",
    "start": "1057500",
    "end": "1063080"
  },
  {
    "text": "projects this is might not actually be a",
    "start": "1063080",
    "end": "1068680"
  },
  {
    "text": "layer that's explicitly separate from the layer underneath it so it might be",
    "start": "1068680",
    "end": "1074780"
  },
  {
    "text": "part of the same API that we the core library that underneath however these",
    "start": "1074780",
    "end": "1080000"
  },
  {
    "text": "aspects still remain they just might happen to be exactly the same design as",
    "start": "1080000",
    "end": "1085040"
  },
  {
    "text": "we had before right so since we're",
    "start": "1085040",
    "end": "1094850"
  },
  {
    "start": "1089000",
    "end": "1143000"
  },
  {
    "text": "talking about layers this is the point where the where no business logic must",
    "start": "1094850",
    "end": "1101750"
  },
  {
    "text": "go beyond because at this point we're going to start shedding our",
    "start": "1101750",
    "end": "1106850"
  },
  {
    "text": "cross-platform ability and starting to",
    "start": "1106850",
    "end": "1112540"
  },
  {
    "text": "somehow adjust to whatever platforms we are targeting and that means that we're",
    "start": "1112540",
    "end": "1117980"
  },
  {
    "text": "getting a bifurcation we're starting to spread out and if any business logic leaks out then it means we're going to",
    "start": "1117980",
    "end": "1125630"
  },
  {
    "text": "have to have multiple implementations which means different bugs different versions of the same logic implement",
    "start": "1125630",
    "end": "1132980"
  },
  {
    "text": "both implemented multiple times and may be generating different bugs right so",
    "start": "1132980",
    "end": "1138440"
  },
  {
    "text": "know business logic beyond this point and the our third layer is what I call",
    "start": "1138440",
    "end": "1148250"
  },
  {
    "start": "1143000",
    "end": "1370000"
  },
  {
    "text": "the cross-platform public C interface or the X cap if you will because I think we",
    "start": "1148250",
    "end": "1155330"
  },
  {
    "text": "mentioned this yesterday at the at the user group the true lingua franca you",
    "start": "1155330",
    "end": "1160490"
  },
  {
    "text": "know the two language common language of computing is C there is no hardware",
    "start": "1160490",
    "end": "1167990"
  },
  {
    "text": "platform at least these days that you can find that doesn't implement the C compiler every vendor knows that if it",
    "start": "1167990",
    "end": "1176030"
  },
  {
    "text": "brings out a new chip it must come with the C compiler and generally it doesn't come with anything else beside the C",
    "start": "1176030",
    "end": "1182450"
  },
  {
    "text": "compiler so C is the common the lowest common denominator of all programming",
    "start": "1182450",
    "end": "1189230"
  },
  {
    "text": "languages and that's why we're going to we have to understand and in order to",
    "start": "1189230",
    "end": "1195650"
  },
  {
    "text": "allow us to interact with basically any computing platform on the planet we",
    "start": "1195650",
    "end": "1201160"
  },
  {
    "text": "often need to create a C interface and however we're not gonna I'm not going to",
    "start": "1201160",
    "end": "1208490"
  },
  {
    "text": "tell you and and preach to you to start writing in C because I think that's counterproductive and at the end",
    "start": "1208490",
    "end": "1214040"
  },
  {
    "text": "remember we're working in layers so we already did the business logic and we already defined the way our service is",
    "start": "1214040",
    "end": "1219800"
  },
  {
    "text": "going to be used so all we really need to do is create some kind of sin C wrapper around our cross platform API",
    "start": "1219800",
    "end": "1228820"
  },
  {
    "text": "which exposes the same API and at this point because of C's simple a BIA BIA is",
    "start": "1228820",
    "end": "1235100"
  },
  {
    "text": "the application binary interface it's what allows us to link between different binaries all we need to do when we",
    "start": "1235100",
    "end": "1243530"
  },
  {
    "text": "writing functions we define externally and create basically C linking library",
    "start": "1243530",
    "end": "1250550"
  },
  {
    "text": "functions we can do things like portable conversions where if we we had used some",
    "start": "1250550",
    "end": "1256700"
  },
  {
    "text": "many sick C++ classes for example we might consider using some wicker types",
    "start": "1256700",
    "end": "1264530"
  },
  {
    "text": "at this point and confer going back to some kind of to some C primitives and at",
    "start": "1264530",
    "end": "1271370"
  },
  {
    "text": "this point we also need to think about lifetime management from a C point of view so we might use some kind of global",
    "start": "1271370",
    "end": "1278570"
  },
  {
    "text": "variables like singer or Singleton's to inside our opaque binary but we can also",
    "start": "1278570",
    "end": "1284600"
  },
  {
    "text": "use opaque handles and and many other techniques used in say for decades and this is the point where we actually need",
    "start": "1284600",
    "end": "1291470"
  },
  {
    "text": "to think about these things there are some technical issues like see doesn't support overloaded functions with the",
    "start": "1291470",
    "end": "1298130"
  },
  {
    "text": "same name so we might need to rename the or generate multiple differently named files sorry differently names functions for",
    "start": "1298130",
    "end": "1305000"
  },
  {
    "text": "the same C++ function and again at this point we can do some maybe mocking and",
    "start": "1305000",
    "end": "1311450"
  },
  {
    "text": "unit testing this C API itself but we don't actually need to test everything underneath so everything is nicely separated I generally just I call the",
    "start": "1311450",
    "end": "1319370"
  },
  {
    "text": "file that would call it course C IP I actually I called CPP it could be that Co of course and at the point where",
    "start": "1319370",
    "end": "1327529"
  },
  {
    "text": "we're actually implementing these functions like I have this tip here from",
    "start": "1327529",
    "end": "1333649"
  },
  {
    "text": "the c wrapper is that we don't want to leave the safety of strong types there",
    "start": "1333649",
    "end": "1341510"
  },
  {
    "text": "are some burns giving a multiple talks about strong types and c++ this is one of its big Forte's and although we're",
    "start": "1341510",
    "end": "1348409"
  },
  {
    "text": "exposing a CIP i with some very low-level types or you could say weak",
    "start": "1348409",
    "end": "1354649"
  },
  {
    "text": "types inside our implementation nothing as far as long as we made experience e we can still use higher level and",
    "start": "1354649",
    "end": "1362299"
  },
  {
    "text": "stronger types things like STD span as to the string view and other similar types and i'll show you an example of",
    "start": "1362299",
    "end": "1368750"
  },
  {
    "text": "what i mean so let's say we have the four functions from our for c functions",
    "start": "1368750",
    "end": "1378769"
  },
  {
    "start": "1370000",
    "end": "1456000"
  },
  {
    "text": "that are basically going to wrap some kind of C++ API which we'll see in a second it's wrapped inside an extern C",
    "start": "1378769",
    "end": "1386570"
  },
  {
    "text": "that means that the linker is going to generate a simple C API for these guys we have two functions in it from file",
    "start": "1386570",
    "end": "1392690"
  },
  {
    "text": "name and in it from count and in the city they're both called init but again I said C doesn't have you can't overload",
    "start": "1392690",
    "end": "1399169"
  },
  {
    "text": "in the same name so I separated them into two different rename functions we have a function called the process",
    "start": "1399169",
    "end": "1405440"
  },
  {
    "text": "buffer and some other the last one is very straightforward and one nice thing",
    "start": "1405440",
    "end": "1414410"
  },
  {
    "text": "if maybe the keen observer noticed is that I'm actually using STD string in",
    "start": "1414410",
    "end": "1420290"
  },
  {
    "text": "the first function which isn't which is a C++ class it's not really a a C",
    "start": "1420290",
    "end": "1425690"
  },
  {
    "text": "function so I like to think of see when we do extern C it means like air quotes it's not exactly so it doesn't have to",
    "start": "1425690",
    "end": "1432860"
  },
  {
    "text": "be exactly same because because not all the systems that you might need to target require specifically AC API but",
    "start": "1432860",
    "end": "1440360"
  },
  {
    "text": "it's a very it's very convenient to work with standalone functions instead of a",
    "start": "1440360",
    "end": "1445940"
  },
  {
    "text": "full-blown object-oriented class or object and and I'll see I'll show an",
    "start": "1445940",
    "end": "1452270"
  },
  {
    "text": "example regarding this in just a second so one implementation that I might have",
    "start": "1452270",
    "end": "1460340"
  },
  {
    "start": "1456000",
    "end": "1663000"
  },
  {
    "text": "for for this for these four functions in this case I'm just using a global food",
    "start": "1460340",
    "end": "1467120"
  },
  {
    "text": "session it's it's going to reside in the let's say this is some kind of DLL so this is a it's a global object we don't",
    "start": "1467120",
    "end": "1473270"
  },
  {
    "text": "expect to have more than one and but as I said in more in other situations you",
    "start": "1473270",
    "end": "1480770"
  },
  {
    "text": "might want to use opaque pointers and other mechanisms or maybe unique pointer or some kind of optional if we don't",
    "start": "1480770",
    "end": "1487220"
  },
  {
    "text": "have a default initialization and as you can see the two init functions are",
    "start": "1487220",
    "end": "1492410"
  },
  {
    "text": "actually calling the same two different methods called init on the session object and one of the and if we look at",
    "start": "1492410",
    "end": "1501620"
  },
  {
    "text": "process buffer this is what I meant before the implementation although that",
    "start": "1501620",
    "end": "1507320"
  },
  {
    "text": "the API of the function is uses the low-level use the pointer and a size the",
    "start": "1507320",
    "end": "1512420"
  },
  {
    "text": "moment actually come to use it I'm going to immediately lift the type in to a much safer STD span in this example so",
    "start": "1512420",
    "end": "1521050"
  },
  {
    "text": "nothing prevents us to a from trying to lift our types for safety and to",
    "start": "1521050",
    "end": "1526730"
  },
  {
    "text": "stronger types the moment we can oh by the way please ask questions as I'm going through",
    "start": "1526730",
    "end": "1532010"
  },
  {
    "text": "because I feel more comfortable knowing more people understand",
    "start": "1532010",
    "end": "1538570"
  },
  {
    "text": "specifically regarding the first function I put that STD string there",
    "start": "1545320",
    "end": "1551330"
  },
  {
    "text": "intentionally because I was more in that context um I wanted to show an example of not really cool requiring an actual C",
    "start": "1551330",
    "end": "1558740"
  },
  {
    "text": "code but if you really must you to see for example like linking to some other kind of binding to some third party of",
    "start": "1558740",
    "end": "1566360"
  },
  {
    "text": "to another language then you might you would actually need the car store well",
    "start": "1566360",
    "end": "1576770"
  },
  {
    "text": "like I can companies the code will compile in C++ code so remember it was called underscore C underscore appear",
    "start": "1576770",
    "end": "1583820"
  },
  {
    "text": "dot CPP so say I can compile this this will work fine in a CSS compiler with",
    "start": "1583820",
    "end": "1590120"
  },
  {
    "text": "the externally linking protocol but I'd yeah question yeah",
    "start": "1590120",
    "end": "1600190"
  },
  {
    "text": "so you have to speak out loud the",
    "start": "1600830",
    "end": "1610470"
  },
  {
    "text": "question was what the benefit of sealing can differ only good news in sleeplessness well the benefit of C",
    "start": "1610470",
    "end": "1616260"
  },
  {
    "text": "linkage is only for the is mainly for the cases where you need C language so I'm just saying I'm talking about",
    "start": "1616260",
    "end": "1622350"
  },
  {
    "text": "aspects of a particular layer so this is not necessarily something that you would need in every system you really have to",
    "start": "1622350",
    "end": "1628980"
  },
  {
    "text": "decide whichever platforms you're targeting so some systems you might see",
    "start": "1628980",
    "end": "1635550"
  },
  {
    "text": "linkage is required and in that case of course you won't use this to this thing",
    "start": "1635550",
    "end": "1641270"
  },
  {
    "text": "now in this case for example you want to create a dll for Windows then DLL",
    "start": "1642140",
    "end": "1647280"
  },
  {
    "text": "doesn't you it's a C interface if I'm not going to talk about comm so it's basically a say interface but you can do",
    "start": "1647280",
    "end": "1654420"
  },
  {
    "text": "some of the conversions you'll see in a moment you know what hold that thought because I'm going to talk about it and",
    "start": "1654420",
    "end": "1659640"
  },
  {
    "text": "this is really the second thing that I want to get to right so we're halfway",
    "start": "1659640",
    "end": "1666480"
  },
  {
    "start": "1663000",
    "end": "2021000"
  },
  {
    "text": "through and I want to summarize because emphasize a few of the things what we've",
    "start": "1666480",
    "end": "1672810"
  },
  {
    "text": "seen so on our bottom layer we have our cross-platform C++ core the code we all love and enjoy writing and playing",
    "start": "1672810",
    "end": "1680490"
  },
  {
    "text": "around with and as you can see the second layer doesn't actually extend all",
    "start": "1680490",
    "end": "1686070"
  },
  {
    "text": "the way to the end because sometimes your C API might interact directly with",
    "start": "1686070",
    "end": "1692340"
  },
  {
    "text": "your code with your C++ code for example",
    "start": "1692340",
    "end": "1696770"
  },
  {
    "text": "as I said sometimes you don't actually implement two separate bottom layers",
    "start": "1697520",
    "end": "1702930"
  },
  {
    "text": "they might be the same because the interfaces and the kind of service you're providing just happens to provide",
    "start": "1702930",
    "end": "1708300"
  },
  {
    "text": "the same kind of interface on the other",
    "start": "1708300",
    "end": "1713460"
  },
  {
    "text": "hand when we look at the at the third letter third layer we see that it it",
    "start": "1713460",
    "end": "1718890"
  },
  {
    "text": "also doesn't extend all the way to that and you might think okay why is that and the reason is because not all cross",
    "start": "1718890",
    "end": "1727920"
  },
  {
    "text": "blood not all target systems need capi for example just",
    "start": "1727920",
    "end": "1734200"
  },
  {
    "text": "tweek I I needed to bind some C++ code to create Python bindings and there's",
    "start": "1734200",
    "end": "1741430"
  },
  {
    "text": "some there are some nice libraries like boost Python or PI bind 11 which allows",
    "start": "1741430",
    "end": "1746620"
  },
  {
    "text": "me to and I'll talk about it in just a moment but allow they allowed me to interact directly with the C++ code",
    "start": "1746620",
    "end": "1752370"
  },
  {
    "text": "another example is C++ code generally compiles fine under objective-c",
    "start": "1752370",
    "end": "1758410"
  },
  {
    "text": "in iOS so often there is no need for this extra layer of exposing a C API and",
    "start": "1758410",
    "end": "1766500"
  },
  {
    "text": "that's why the thirdly the third layer doesn't extend all the way to do it",
    "start": "1766500",
    "end": "1771580"
  },
  {
    "text": "because we do feel that we can expose some of these things to our target host",
    "start": "1771580",
    "end": "1778110"
  },
  {
    "text": "but if you're targeting both iOS and Android for example then your iOS might",
    "start": "1778110",
    "end": "1783970"
  },
  {
    "text": "interact directly with the C++ code but the Android Java and we're going to see some an example of that in a moment does",
    "start": "1783970",
    "end": "1790270"
  },
  {
    "text": "actually have to go through multiple layers until we can actually expose functionality so at this point where",
    "start": "1790270",
    "end": "1803320"
  },
  {
    "text": "we're reaching a second boundary and this is the cross-platform boundary up until now we were talking about",
    "start": "1803320",
    "end": "1808840"
  },
  {
    "text": "cross-platform code at the beginning it was C++ code which could build on any",
    "start": "1808840",
    "end": "1814030"
  },
  {
    "text": "system and then we went to a public API where we could maybe deliver some binaries but the API was still",
    "start": "1814030",
    "end": "1821830"
  },
  {
    "text": "cross-platform and then we went to C which we already saw is basically the",
    "start": "1821830",
    "end": "1827530"
  },
  {
    "text": "cross-platform language but now having crossed the business logic boundary we",
    "start": "1827530",
    "end": "1832840"
  },
  {
    "text": "reach the cross-platform boundary and at this point there is no more",
    "start": "1832840",
    "end": "1839080"
  },
  {
    "text": "cross-platform and we have to start thinking about platform specific code and this is where we reach the boundary",
    "start": "1839080",
    "end": "1846790"
  },
  {
    "text": "interface layer this is where we're starting to are the skills and the type",
    "start": "1846790",
    "end": "1854590"
  },
  {
    "text": "of development we're doing in the effort and the time we spend with our project starts bifurcating into multiple",
    "start": "1854590",
    "end": "1861840"
  },
  {
    "text": "multiple platforms multiple domains maybe multiple code bases and we have",
    "start": "1861840",
    "end": "1866980"
  },
  {
    "text": "different people working this is the lair and this is exactly to",
    "start": "1866980",
    "end": "1874549"
  },
  {
    "text": "answer your question this is where we're thinking about things like conversions",
    "start": "1874549",
    "end": "1880010"
  },
  {
    "text": "of data because not all platforms support the same type of of data for",
    "start": "1880010",
    "end": "1886250"
  },
  {
    "text": "example JavaScript only knows doubles from from correct regarding numbers but",
    "start": "1886250",
    "end": "1892100"
  },
  {
    "text": "maybe our CSS code uses 8-bit integers we have to think about conversions and",
    "start": "1892100",
    "end": "1897320"
  },
  {
    "text": "types at this point we have to think about other constraints of the system we have to think about how we different",
    "start": "1897320",
    "end": "1904789"
  },
  {
    "text": "conventions for working with the code and we'll see some example in the milk in a moment and this layer regardless of",
    "start": "1904789",
    "end": "1912289"
  },
  {
    "text": "everything I just said is also an excellent place to put platform specifically login because let's say on",
    "start": "1912289",
    "end": "1918590"
  },
  {
    "text": "Android you have special logging facilities and on server writing in the",
    "start": "1918590",
    "end": "1923659"
  },
  {
    "text": "cloud they are completely different and we couldn't actually use them or set",
    "start": "1923659",
    "end": "1929299"
  },
  {
    "text": "them up configure them before because we had everything was cross-platform this",
    "start": "1929299",
    "end": "1934460"
  },
  {
    "text": "is the place where we can hook in maybe through some kind of abstracted",
    "start": "1934460",
    "end": "1939559"
  },
  {
    "text": "interface there's platform specific logging to generate the particular",
    "start": "1939559",
    "end": "1944990"
  },
  {
    "text": "logging statements on each of the platforms this is also where we see the",
    "start": "1944990",
    "end": "1951200"
  },
  {
    "text": "module boundaries so if you remember the first function I had before to can STD",
    "start": "1951200",
    "end": "1956720"
  },
  {
    "text": "string and I said that's not really an issue because when I'm going to write a DLL this is where actually I'm going to",
    "start": "1956720",
    "end": "1963110"
  },
  {
    "text": "do the this DLL Windows DLL related Cottenham else I'll show I think that",
    "start": "1963110",
    "end": "1968120"
  },
  {
    "text": "the next slide shows an example a big question mark is how you test this layer",
    "start": "1968120",
    "end": "1974980"
  },
  {
    "text": "I think I have an open stack overflow question from maybe five or six years",
    "start": "1974980",
    "end": "1980990"
  },
  {
    "text": "ago how I actually how can I actually test J&I code on my with a unit testing",
    "start": "1980990",
    "end": "1987860"
  },
  {
    "text": "framework that doesn't need to run on the phone and nobody I've never received a satisfactory answer so if you know how",
    "start": "1987860",
    "end": "1994520"
  },
  {
    "text": "to test this layer to to be sufficiently convinced that it does what it does then",
    "start": "1994520",
    "end": "2000700"
  },
  {
    "text": "do let I'll be happy to hear about it I generally the naming convention I use",
    "start": "2000700",
    "end": "2006430"
  },
  {
    "text": "for my files are as just like this layer there platform-specific so I might have",
    "start": "2006430",
    "end": "2011580"
  },
  {
    "text": "something called core capi DLL or course the API J&I or anything else maybe a",
    "start": "2011580",
    "end": "2017890"
  },
  {
    "text": "c-sharp or anything else and let's see continue the example that we've seen",
    "start": "2017890",
    "end": "2024340"
  },
  {
    "text": "before in this case in this example we're going to target we're going to create a DLL a",
    "start": "2024340",
    "end": "2029740"
  },
  {
    "text": "Windows DLL for example so Windows del Hell has particular DLL hell it has its",
    "start": "2029740",
    "end": "2038140"
  },
  {
    "text": "own conventions the way you introduce interfaces the prototypes of the functions so this is where we use the",
    "start": "2038140",
    "end": "2045430"
  },
  {
    "text": "DLL export macro which gets substituted",
    "start": "2045430",
    "end": "2051550"
  },
  {
    "text": "for some kind of built in like underscore underscore DLL import or export the names of the functions since",
    "start": "2051550",
    "end": "2059590"
  },
  {
    "text": "we don't want to pollute to the names when we start we have to prefix them with an extra food session for example",
    "start": "2059590",
    "end": "2066370"
  },
  {
    "text": "to give them longer names and note the first time the exactly what we were talking about before here I'm taking the",
    "start": "2066370",
    "end": "2073240"
  },
  {
    "text": "LPC STR which is a Windows DLL function",
    "start": "2073240",
    "end": "2078399"
  },
  {
    "text": "pointer to a character string so this is what this is where we still really",
    "start": "2078400",
    "end": "2084760"
  },
  {
    "text": "platform-specific code targeted at this particular platform that we're talking",
    "start": "2084760",
    "end": "2090010"
  },
  {
    "text": "about and it's okay at this layer it's fine because and the guy or the",
    "start": "2090010",
    "end": "2096850"
  },
  {
    "text": "developer who is going to write this their windows developers they know what",
    "start": "2096850",
    "end": "2102130"
  },
  {
    "text": "they're doing this is where they they can make sure everything works as expected and the implementation would",
    "start": "2102130",
    "end": "2110380"
  },
  {
    "text": "actually be again it's extremely thin there is very little real code going on",
    "start": "2110380",
    "end": "2116590"
  },
  {
    "text": "here if we look at that it appears like a very massive chunk of code and on the",
    "start": "2116590",
    "end": "2123580"
  },
  {
    "text": "screen but in fact it's very very there's very little non repetitive code",
    "start": "2123580",
    "end": "2129700"
  },
  {
    "text": "so the first function if we look at it it just calls the our C function the",
    "start": "2129700",
    "end": "2134830"
  },
  {
    "text": "globe a function called init from file name with the LP CST or a file name a",
    "start": "2134830",
    "end": "2140369"
  },
  {
    "text": "variable and windows automatically converts that to as to this well to car",
    "start": "2140369",
    "end": "2145630"
  },
  {
    "text": "star which is the D string can accept so there's automatic conversion to us the D",
    "start": "2145630",
    "end": "2151359"
  },
  {
    "text": "string the rest happened there basically kind of trampoline functions we were not",
    "start": "2151359",
    "end": "2158470"
  },
  {
    "text": "doing much here but we are exposing a particular interface which is targeted",
    "start": "2158470",
    "end": "2163660"
  },
  {
    "text": "at dll's and one more thing that's extremely",
    "start": "2163660",
    "end": "2169150"
  },
  {
    "text": "important for me to emphasize here is that remember this is the boundary",
    "start": "2169150",
    "end": "2174460"
  },
  {
    "text": "interface layer what does boundary mean it means it's a module boundary we're going to cross into some unknown domain",
    "start": "2174460",
    "end": "2181810"
  },
  {
    "text": "where this dll is going to run and as I mentioned the beginning if an exception is thrown somewhere inside my code all",
    "start": "2181810",
    "end": "2189369"
  },
  {
    "text": "hell breaks loose probably the the DLL questions the application crosses the computer crashes by the spaceship",
    "start": "2189369",
    "end": "2195670"
  },
  {
    "text": "crashes so this is the point where we try at the most to make sure that",
    "start": "2195670",
    "end": "2200920"
  },
  {
    "text": "nothing happens and that's why I use I'm using the function block function try block here and you can see I'm basically",
    "start": "2200920",
    "end": "2209140"
  },
  {
    "text": "catching any exceptions so even if the code does say yeah we're exception safe or we're going to catch everything",
    "start": "2209140",
    "end": "2216640"
  },
  {
    "text": "inside I'm just gonna put this here just in case because if we catch some work let's say I can return false and that",
    "start": "2216640",
    "end": "2223780"
  },
  {
    "text": "means the function didn't work alright so this is a point where we can add the next to a layer of protection because we",
    "start": "2223780",
    "end": "2230829"
  },
  {
    "text": "understand that this is module boundary",
    "start": "2230829",
    "end": "2234510"
  },
  {
    "text": "right so now we're going to do exactly the same thing for the same interface",
    "start": "2236819",
    "end": "2243490"
  },
  {
    "start": "2237000",
    "end": "2441000"
  },
  {
    "text": "but for Android and because we remember this is boundary and this is platform",
    "start": "2243490",
    "end": "2248619"
  },
  {
    "text": "specific code we have just passed the cross-platform boundary so in this example and again if you've never seen",
    "start": "2248619",
    "end": "2254800"
  },
  {
    "text": "Android code it might it might appear a bit daunting but most of it is boilerplate boilerplate code oh and by",
    "start": "2254800",
    "end": "2262210"
  },
  {
    "text": "the way I never said this is going to be fun or elegant all I'm trying to",
    "start": "2262210",
    "end": "2268069"
  },
  {
    "text": "you guys do and help myself do when I I set this up is make it more manageable",
    "start": "2268069",
    "end": "2273469"
  },
  {
    "text": "and more transparent so j'ni code might appear very ugly and",
    "start": "2273469",
    "end": "2281390"
  },
  {
    "text": "very verbose but what you're gonna do you know you have to target your your platform so in this case J and I really",
    "start": "2281390",
    "end": "2289819"
  },
  {
    "text": "is just kind of a dll for for targeting Android so at this point we can include",
    "start": "2289819",
    "end": "2295009"
  },
  {
    "text": "all the Android related files like a gen I dot H Android slash logged at H and all our functions have to start with",
    "start": "2295009",
    "end": "2303049"
  },
  {
    "text": "this Jane I export prefix macro and then we have to use the Android related types",
    "start": "2303049",
    "end": "2309079"
  },
  {
    "text": "called J boolean for example or J string now if you've ever done android or gina",
    "start": "2309079",
    "end": "2317269"
  },
  {
    "text": "in general you have to pass every function needs to for the first two two",
    "start": "2317269",
    "end": "2323059"
  },
  {
    "text": "arguments are the the JVM environment and some kind of thing called the J",
    "start": "2323059",
    "end": "2328579"
  },
  {
    "text": "objects this but this is a keyword so do use these and again what we're going to",
    "start": "2328579",
    "end": "2336829"
  },
  {
    "text": "do is call the C interface so that's the interface that we implement it really",
    "start": "2336829",
    "end": "2342289"
  },
  {
    "text": "makes it very very easy to implement all of these functions in a very very thin",
    "start": "2342289",
    "end": "2347299"
  },
  {
    "text": "way one of the things that kind of complicate life is that in Java in Java",
    "start": "2347299",
    "end": "2353930"
  },
  {
    "text": "or in j9 code you nice because we're in the C++ side we are we still have to",
    "start": "2353930",
    "end": "2361009"
  },
  {
    "text": "manually manage some of these some of the resources so in this example I'm",
    "start": "2361009",
    "end": "2368749"
  },
  {
    "text": "using a library small library there's some utilities that I wrote just mostly",
    "start": "2368749",
    "end": "2374719"
  },
  {
    "text": "to to make the code more concise so for example to get the file name string that",
    "start": "2374719",
    "end": "2379999"
  },
  {
    "text": "J string type really what it doesn't release it goes to the JVM and fetches",
    "start": "2379999",
    "end": "2385219"
  },
  {
    "text": "some kind of character array which we actually need to manage and deallocate manually because we're not part of the",
    "start": "2385219",
    "end": "2391430"
  },
  {
    "text": "virtual machine so I have this Genna utils get string which handles all of that for me and similarly I have some",
    "start": "2391430",
    "end": "2397759"
  },
  {
    "text": "kind of exception handler object which I can call in case an exception in so and that actually one of the things the",
    "start": "2397759",
    "end": "2406490"
  },
  {
    "text": "ways I did implemented this way I actually generate an exception on the JVM itself and translate the C++",
    "start": "2406490",
    "end": "2413540"
  },
  {
    "text": "exception into the JV into a java JVM exception that's going to pop up on the",
    "start": "2413540",
    "end": "2419119"
  },
  {
    "text": "client side so this is an excellent place to do those kinds of nasty platform-specific things without",
    "start": "2419119",
    "end": "2424910"
  },
  {
    "text": "polluting think about adding all of this platform-specific mess into where we",
    "start": "2424910",
    "end": "2432500"
  },
  {
    "text": "also have our program logic so this is what we're trying to prevent now at this",
    "start": "2432500",
    "end": "2445940"
  },
  {
    "start": "2441000",
    "end": "2578000"
  },
  {
    "text": "point as we said we were at the wall we were at the boundary we're not in Kansas",
    "start": "2445940",
    "end": "2451940"
  },
  {
    "text": "anymore okay so now we get to the native import layer this is literally running on the target",
    "start": "2451940",
    "end": "2460190"
  },
  {
    "text": "platform so now there's no more see there's no more C++ there is no more",
    "start": "2460190",
    "end": "2466329"
  },
  {
    "text": "platform specific C++ or C api's now we're running literally in another world",
    "start": "2466329",
    "end": "2472520"
  },
  {
    "text": "this might be on the device it could be a different hardware a different operating system and very often it's a",
    "start": "2472520",
    "end": "2479329"
  },
  {
    "text": "completely different language so at this",
    "start": "2479329",
    "end": "2484490"
  },
  {
    "text": "point we're not we can't use our C++ foo anymore we have to think about the",
    "start": "2484490",
    "end": "2490339"
  },
  {
    "text": "native language of that particular platform and to think what I ironically",
    "start": "2490339",
    "end": "2496190"
  },
  {
    "text": "called the native native interface because the word native is very often",
    "start": "2496190",
    "end": "2502069"
  },
  {
    "text": "used in two completely opposite meanings because if you think of the browser then",
    "start": "2502069",
    "end": "2507980"
  },
  {
    "text": "javascript is the native browser language and if we think of an eye or iOS then maybe objective-c or Swift or",
    "start": "2507980",
    "end": "2513410"
  },
  {
    "text": "the native languages and Java is the native Android language but each of these languages when they try to call a",
    "start": "2513410",
    "end": "2518930"
  },
  {
    "text": "dll function they call it this is our native interface so at this area we're",
    "start": "2518930",
    "end": "2524420"
  },
  {
    "text": "going to use the native native interface which means the interface on that particular platform that allows us to interact with our C++ exported functions",
    "start": "2524420",
    "end": "2535220"
  },
  {
    "text": "and at this point our functions since they were essentially c-like functions",
    "start": "2535220",
    "end": "2543290"
  },
  {
    "text": "we're going to have to interact with and because these Fung interfaces are",
    "start": "2543290",
    "end": "2550069"
  },
  {
    "text": "generally low level this is what we we must use at this point and the kind of testing we do here is the target",
    "start": "2550069",
    "end": "2555829"
  },
  {
    "text": "integration testing so we just want to make sure everything works as we expect after the integration and of course the",
    "start": "2555829",
    "end": "2563660"
  },
  {
    "text": "filename extensions as you can see there and we're not using CSS anymore so it might be a javascript file it might be a",
    "start": "2563660",
    "end": "2569750"
  },
  {
    "text": "c-sharp or Java or or anything wherever we're trying to target now let's see yes",
    "start": "2569750",
    "end": "2580069"
  },
  {
    "text": "this is a very simple example of using the native interface in Java and most of",
    "start": "2580069",
    "end": "2590000"
  },
  {
    "text": "it is basically repeating the same names with the proper convention of the native",
    "start": "2590000",
    "end": "2596030"
  },
  {
    "text": "interface for Java so we use it's a system load library and we give the name",
    "start": "2596030",
    "end": "2601130"
  },
  {
    "text": "maybe over the DLL public static native boolean and the names of the functions",
    "start": "2601130",
    "end": "2606770"
  },
  {
    "text": "if you notice that they don't have the prefix of foo session because because J",
    "start": "2606770",
    "end": "2615560"
  },
  {
    "text": "and I that's just how it works and and the classes these are what we",
    "start": "2615560",
    "end": "2623839"
  },
  {
    "text": "got passed down into the C into this interface of course the code for c-sharp",
    "start": "2623839",
    "end": "2630950"
  },
  {
    "text": "would be almost identical to this one and again this is Java code we're not in",
    "start": "2630950",
    "end": "2638060"
  },
  {
    "text": "C++ land anymore",
    "start": "2638060",
    "end": "2641260"
  },
  {
    "text": "yeah the question is the food need to make multiple libraries for example it's really two bit with 64-bit and the",
    "start": "2650619",
    "end": "2656690"
  },
  {
    "text": "answer is yes but that's a platform specific decision we had to make it a previous layer when we actually",
    "start": "2656690",
    "end": "2661819"
  },
  {
    "text": "generated those whatever tool chain you're using to generate for example J and I this is the kind of shared object",
    "start": "2661819",
    "end": "2669349"
  },
  {
    "text": "that your your Java code is going to have to know how to load and the last",
    "start": "2669349",
    "end": "2679279"
  },
  {
    "start": "2676000",
    "end": "2721000"
  },
  {
    "text": "layer that we need to think about when we writing our application is what I",
    "start": "2679279",
    "end": "2686569"
  },
  {
    "text": "call the interface wrappers and in our diagram we'll see that in a moment it's a rather small part of the of the of our",
    "start": "2686569",
    "end": "2694069"
  },
  {
    "text": "hierarchy but I find it extremely important because it gives the",
    "start": "2694069",
    "end": "2701690"
  },
  {
    "text": "developers who are working within these particular platforms something that feels right for them right it gives them",
    "start": "2701690",
    "end": "2709369"
  },
  {
    "text": "the same type of abstractions that they're used to within their so-called",
    "start": "2709369",
    "end": "2714469"
  },
  {
    "text": "native ecosystem and let's see an example so this is just I'm not not me",
    "start": "2714469",
    "end": "2720979"
  },
  {
    "text": "waving my hands and this is a slightly different example from for my Android or",
    "start": "2720979",
    "end": "2727969"
  },
  {
    "start": "2721000",
    "end": "2834000"
  },
  {
    "text": "Java so say I have this DLL that are out it's called native face detector and",
    "start": "2727969",
    "end": "2734410"
  },
  {
    "text": "amusing then the native interfaces of system load library to load these this",
    "start": "2734410",
    "end": "2740150"
  },
  {
    "text": "DLL and it has some kind of one function called gets face center point and this",
    "start": "2740150",
    "end": "2747950"
  },
  {
    "text": "is remember this is just a binary interface into a DLL that's using a C",
    "start": "2747950",
    "end": "2753799"
  },
  {
    "text": "API so there's that we can't use any classes here and as you can see it's",
    "start": "2753799",
    "end": "2760039"
  },
  {
    "text": "returning an array of floats maybe these are the coordinates of the center of the",
    "start": "2760039",
    "end": "2766819"
  },
  {
    "text": "face of the pics twitch pixel inside the image contains the face or maybe it but",
    "start": "2766819",
    "end": "2773690"
  },
  {
    "text": "this isn't isn't a natural it's not now it's unnatural for us for Java developer",
    "start": "2773690",
    "end": "2779150"
  },
  {
    "text": "to think about arrays of numbers instead of coordinates instead of pixels so what we want to do",
    "start": "2779150",
    "end": "2784910"
  },
  {
    "text": "is to take this interface which we had from the previous layer and lift it higher but this time into concepts that",
    "start": "2784910",
    "end": "2792410"
  },
  {
    "text": "are familiar to the platform developer so I would write another function get",
    "start": "2792410",
    "end": "2798109"
  },
  {
    "text": "faced center point and this time it's capitalized like Java function and the",
    "start": "2798109",
    "end": "2803539"
  },
  {
    "text": "return type is actually point F which comes from the Android graphics package",
    "start": "2803539",
    "end": "2810609"
  },
  {
    "text": "and at this point we are I expect our user to use this function maybe I should",
    "start": "2810609",
    "end": "2817939"
  },
  {
    "text": "have made the native one private I don't know but now we completed this meta",
    "start": "2817939",
    "end": "2824660"
  },
  {
    "text": "morphosis of our code so we started from something extremely low level and we reach to",
    "start": "2824660",
    "end": "2830599"
  },
  {
    "text": "something that is again very high level",
    "start": "2830599",
    "end": "2837589"
  },
  {
    "text": "and uses the same terminology the same concept the same type of the way of",
    "start": "2837589",
    "end": "2845179"
  },
  {
    "text": "thinking of the particular system we targeting now this might actually appear",
    "start": "2845179",
    "end": "2850339"
  },
  {
    "text": "somewhat contrived the example I just shown but in fact most of the system API",
    "start": "2850339",
    "end": "2856999"
  },
  {
    "text": "is that you're using within Android for example within java or implemented it",
    "start": "2856999",
    "end": "2862459"
  },
  {
    "text": "this way there are highly highly strongly typed wrappers around system",
    "start": "2862459",
    "end": "2870289"
  },
  {
    "text": "calls that go down to the C code the Linux running inside your phone so this is not just some kind of nice to have",
    "start": "2870289",
    "end": "2878839"
  },
  {
    "text": "abstraction this is actually how Android is implemented so I think it's really important and we did this transition",
    "start": "2878839",
    "end": "2887059"
  },
  {
    "text": "going from in this diagram is going from left to right and of course the right",
    "start": "2887059",
    "end": "2892279"
  },
  {
    "text": "the rightmost layer I show here is the application itself which which I'm not",
    "start": "2892279",
    "end": "2897829"
  },
  {
    "text": "necessarily the one is going to write it this is arc my client or the team that using the our technology and as we went",
    "start": "2897829",
    "end": "2905900"
  },
  {
    "text": "from left to right from the core business logic all the way to the app we",
    "start": "2905900",
    "end": "2911299"
  },
  {
    "text": "started we had to basically in most cases we have to reduce our",
    "start": "2911299",
    "end": "2916430"
  },
  {
    "text": "abstraction level we have to go to a weaker type system because we need to",
    "start": "2916430",
    "end": "2921890"
  },
  {
    "text": "thread through this the interface but this isn't a compromise that we have to",
    "start": "2921890",
    "end": "2927589"
  },
  {
    "text": "live with and I've seen many libraries that do that indeed I say okay we have",
    "start": "2927589",
    "end": "2932660"
  },
  {
    "text": "to be cross-platform so everything is going to be the lowest level denominator denominator that and and they stick with",
    "start": "2932660",
    "end": "2942109"
  },
  {
    "text": "the some kind of very difficult to use low levels the interface and and hard to use correctly but what I'm trying to say",
    "start": "2942109",
    "end": "2949280"
  },
  {
    "text": "is that we don't need to stay there we can continue going and then we deliver to other teams",
    "start": "2949280",
    "end": "2954290"
  },
  {
    "text": "something that gives them abstractions that they can work with and they can",
    "start": "2954290",
    "end": "2960200"
  },
  {
    "text": "live with and sometimes they're not even even aware of what went on behind the scenes and then as I said this isn't",
    "start": "2960200",
    "end": "2967040"
  },
  {
    "text": "necessarily going to be fun this is necessarily going to be easy but it's generally easier than whatever you're",
    "start": "2967040",
    "end": "2973790"
  },
  {
    "text": "doing today unless you're it's generally more maintainable to this because if we have",
    "start": "2973790",
    "end": "2978980"
  },
  {
    "text": "a bug somewhere it's very it's often much easier to find it and so I didn't",
    "start": "2978980",
    "end": "2984140"
  },
  {
    "text": "identify where it comes from who is the right person to actually try and fix this and where and well and another",
    "start": "2984140",
    "end": "2991700"
  },
  {
    "text": "benefit is that it helps us know what other systems this bug might manifest itself in that we we haven't caught so",
    "start": "2991700",
    "end": "3000579"
  },
  {
    "text": "the lower down your bug is the more systems it might affect but conversely the lower down once you fix the bug it",
    "start": "3000579",
    "end": "3007660"
  },
  {
    "text": "automatically gets corrected on all your target systems now I want to show you a",
    "start": "3007660",
    "end": "3015940"
  },
  {
    "start": "3012000",
    "end": "3082000"
  },
  {
    "text": "small example just to make to prove to you that I'm not I'm not just waving my",
    "start": "3015940",
    "end": "3023920"
  },
  {
    "text": "arms and this is based on another blog",
    "start": "3023920",
    "end": "3028930"
  },
  {
    "text": "post that I did and how many of you are",
    "start": "3028930",
    "end": "3034809"
  },
  {
    "text": "familiar with this silly party parrot yeah raise your arms yeah okay some of",
    "start": "3034809",
    "end": "3040960"
  },
  {
    "text": "you that's very common animated gif on on slack and and only see it around",
    "start": "3040960",
    "end": "3047260"
  },
  {
    "text": "and I said okay this is a really cute animation let's see if we can do some",
    "start": "3047260",
    "end": "3054300"
  },
  {
    "text": "some actual a program that generates this from the original video because",
    "start": "3054300",
    "end": "3059380"
  },
  {
    "text": "this animated gif was is really somebody hand traced an actual video of a real",
    "start": "3059380",
    "end": "3064900"
  },
  {
    "text": "parrot in New Zealand and made this animated gif so I said okay I'll find",
    "start": "3064900",
    "end": "3069970"
  },
  {
    "text": "the original video and I'll try to create as I said I'm a computer vision guy so I decided to take the original",
    "start": "3069970",
    "end": "3076960"
  },
  {
    "text": "video and try to generate a similar effect on the actual video itself so I",
    "start": "3076960",
    "end": "3084040"
  },
  {
    "text": "wrote a simple function called rotate hue I'm not going to go into color",
    "start": "3084040",
    "end": "3089230"
  },
  {
    "text": "spaces but essentially I'm going to take each frame of the video converted from RGB say which is the regular and the",
    "start": "3089230",
    "end": "3096160"
  },
  {
    "text": "normal display in color space converted into something called HSV and the hue",
    "start": "3096160",
    "end": "3102430"
  },
  {
    "text": "channel of this color space really controls the overall color the the hue",
    "start": "3102430",
    "end": "3108100"
  },
  {
    "text": "of our frame and I'm just gonna change that U and then convert it back to RGB for display which is essentially what",
    "start": "3108100",
    "end": "3114970"
  },
  {
    "text": "the animation does right so I wrote this function using open CV it's an open",
    "start": "3114970",
    "end": "3120400"
  },
  {
    "text": "source computer vision library it's pure completely C++ very cross-platform and",
    "start": "3120400",
    "end": "3125800"
  },
  {
    "text": "my function called rotate heal takes a three-channel image the CV matter Ibiza it means a 3",
    "start": "3125800",
    "end": "3133510"
  },
  {
    "text": "channel 8 8 24 bit image 8 bits per channel in the order is generally BGR",
    "start": "3133510",
    "end": "3140170"
  },
  {
    "text": "for historical reasons and it fills out another the resulting frame after some",
    "start": "3140170",
    "end": "3145960"
  },
  {
    "text": "kind of hero tation and the last argument is going is asking how many steps of the rotation I want to do",
    "start": "3145960",
    "end": "3152859"
  },
  {
    "text": "because I can control the speed that the colors are going to change and you'll see why in a minute and then I have some kind of key role",
    "start": "3152859",
    "end": "3160060"
  },
  {
    "text": "function just to make sure that I really saw my memory now the example I'm",
    "start": "3160060",
    "end": "3165820"
  },
  {
    "text": "actually going to show you though most of my example before had Windows or Android or or Java I'm going to do it in",
    "start": "3165820",
    "end": "3174130"
  },
  {
    "text": "JavaScript I'm going to show one sec ahead my little program running in my windows I said ok now let's see it",
    "start": "3174130",
    "end": "3180160"
  },
  {
    "text": "running in the browser because usually when you think about computer vision real-time image analysis",
    "start": "3180160",
    "end": "3187360"
  },
  {
    "text": "or real-time image made a video manipulation you're not browser is not the first thing we're thinking about and",
    "start": "3187360",
    "end": "3195270"
  },
  {
    "text": "since I already know how to write this kind of program I said okay why don't I try I've heard about this nifty thing",
    "start": "3195270",
    "end": "3201760"
  },
  {
    "text": "it's called them scripting and I had I managed to set it up and I decided to go",
    "start": "3201760",
    "end": "3208150"
  },
  {
    "text": "for it and try to do the same thing so the function we saw before this is",
    "start": "3208150",
    "end": "3213910"
  },
  {
    "text": "already my C++ API is that this is an example project I don't need to separate between my two first two layers or my",
    "start": "3213910",
    "end": "3219790"
  },
  {
    "text": "first three layers really so this is my it's a capi in the sense that they're standalone functions and the",
    "start": "3219790",
    "end": "3226870"
  },
  {
    "text": "implementation I don't I'm not going to show it here because it's not really relevant and now we're crossing into the",
    "start": "3226870",
    "end": "3234640"
  },
  {
    "start": "3231000",
    "end": "3397000"
  },
  {
    "text": "boundary interface here remember Bill's boundary interface layer which is cross-platform specific so here we're",
    "start": "3234640",
    "end": "3240910"
  },
  {
    "text": "going to write a JavaScript a JavaScript",
    "start": "3240910",
    "end": "3246310"
  },
  {
    "text": "ready C function that's going to pass through and scripting and be compiled",
    "start": "3246310",
    "end": "3252070"
  },
  {
    "text": "into JavaScript now again there's no I",
    "start": "3252070",
    "end": "3257500"
  },
  {
    "text": "don't want to go into all of the to actually explain all of this code you can read about it later I can talk about",
    "start": "3257500",
    "end": "3263560"
  },
  {
    "text": "but I think there's some really important things to look to see here which kind of emphasizes the things I'm",
    "start": "3263560",
    "end": "3269980"
  },
  {
    "text": "going to talk about so this is the BI the boundary interface layer is where I can actually include the scripting dot H",
    "start": "3269980",
    "end": "3275740"
  },
  {
    "text": "because this is platform-specific code it's the first time we our platform specifically the interface needs that",
    "start": "3275740",
    "end": "3281830"
  },
  {
    "text": "prefix of M script and keepalive and you'll note that I'm scripting again is",
    "start": "3281830",
    "end": "3289120"
  },
  {
    "text": "kind of a C interface so we need to pass the width and height of the of the frame the video frame that we're getting from",
    "start": "3289120",
    "end": "3295150"
  },
  {
    "text": "JavaScript and JavaScript doesn't know anything about three-channel images we're in a browser",
    "start": "3295150",
    "end": "3302910"
  },
  {
    "text": "when you have a video video element in the Dom tree the friends are always",
    "start": "3302910",
    "end": "3310150"
  },
  {
    "text": "there for channel it's called rgba because you have an alpha Channel so in fact this is when I mentioned",
    "start": "3310150",
    "end": "3317269"
  },
  {
    "text": "conversions and types this is exactly the type of thing at this platform I can",
    "start": "3317269",
    "end": "3322309"
  },
  {
    "text": "the fact that I implemented mice interface with the three channel image this I need to do some conversion so my",
    "start": "3322309",
    "end": "3328099"
  },
  {
    "text": "function takes a four channel a pointer to some character to some data and sizes",
    "start": "3328099",
    "end": "3333920"
  },
  {
    "text": "and then I am using some OpenCV functions to to do the conversions you can see the CVT color it converts from",
    "start": "3333920",
    "end": "3341479"
  },
  {
    "text": "RGB a to BGR I call my rotate so the only line doing any actual work is the",
    "start": "3341479",
    "end": "3347299"
  },
  {
    "text": "one surrounded by the orange square the rest is just data conversions that are derived from knowing about my platform",
    "start": "3347299",
    "end": "3354529"
  },
  {
    "text": "so if you're not targeting and scripting does the details are not important but whatever platform you are targeting you",
    "start": "3354529",
    "end": "3360799"
  },
  {
    "text": "must know these things and you have to go to the documentation to find out how to do and the rest is just a clever way",
    "start": "3360799",
    "end": "3368569"
  },
  {
    "text": "to switch around to switch around the channels to generate the outputs right",
    "start": "3368569",
    "end": "3375319"
  },
  {
    "text": "so we have a single function that's going to go into Emscripten and we're going to use them script and toolchain",
    "start": "3375319",
    "end": "3380869"
  },
  {
    "text": "to build what to build a JavaScript binary or it's an ASM j/s this code is",
    "start": "3380869",
    "end": "3388549"
  },
  {
    "text": "on github somebody actually sent me a pull request and now there is a version that compiles the web assembly which is",
    "start": "3388549",
    "end": "3394219"
  },
  {
    "text": "even lower level than asm.js now",
    "start": "3394219",
    "end": "3399729"
  },
  {
    "start": "3397000",
    "end": "3510000"
  },
  {
    "text": "remember the BI L really was the last frontier it's the place where we're done",
    "start": "3399729",
    "end": "3405650"
  },
  {
    "text": "with C now we have to bring out our JavaScript foo ok this is where we have",
    "start": "3405650",
    "end": "3412940"
  },
  {
    "text": "to we take the output of them script N and we need to integrate it into our host up now what's the host up in our",
    "start": "3412940",
    "end": "3420319"
  },
  {
    "text": "inner javascript in in our in a browser anyone the host up is just an HTML page",
    "start": "3420319",
    "end": "3427910"
  },
  {
    "text": "right I mean it's just the web page so",
    "start": "3427910",
    "end": "3432880"
  },
  {
    "text": "most of this code is related to the way data gets transferred between JavaScript",
    "start": "3433150",
    "end": "3439910"
  },
  {
    "text": "and an HTML and Dom elements and I'm scripting because I'm scripting uses a",
    "start": "3439910",
    "end": "3445910"
  },
  {
    "text": "different memory layout it's the kind of details that I really ruin my slide but I decided to put it",
    "start": "3445910",
    "end": "3453200"
  },
  {
    "text": "all here just for completeness so whoever wants to check out the slides later basically I'm implementing some",
    "start": "3453200",
    "end": "3459440"
  },
  {
    "text": "kind of reference counting here and managing memory making sure I don't leak",
    "start": "3459440",
    "end": "3465920"
  },
  {
    "text": "anything but it's not really interesting the only line where something happens is module rotate colors right so I passed",
    "start": "3465920",
    "end": "3476059"
  },
  {
    "text": "the width I passed the height I passed the two pointers to the where the pixels",
    "start": "3476059",
    "end": "3481160"
  },
  {
    "text": "reside inside the Dom element in in JavaScript again these are JavaScript typed arrays so we're in JavaScript land",
    "start": "3481160",
    "end": "3488930"
  },
  {
    "text": "there's no C here this is all JavaScript and the last step at the last argument which is really the most interesting one",
    "start": "3488930",
    "end": "3495229"
  },
  {
    "text": "and you'll see why in a minute it's called FP color change speed this",
    "start": "3495229",
    "end": "3500630"
  },
  {
    "text": "is just an HTML element it's a number an integer that gets will get will be",
    "start": "3500630",
    "end": "3506630"
  },
  {
    "text": "controlled using a an HTML element and all that's left is writing the actual",
    "start": "3506630",
    "end": "3513170"
  },
  {
    "start": "3510000",
    "end": "3562000"
  },
  {
    "text": "house stuff this is our HTML this is the all of the HTML files so we can see that",
    "start": "3513170",
    "end": "3519229"
  },
  {
    "text": "there is a video tag and we we have we load the video we display the video this",
    "start": "3519229",
    "end": "3526099"
  },
  {
    "text": "is a regular HTML thing I didn't do anything here and we also create on the last line last three lines I'm creating",
    "start": "3526099",
    "end": "3533089"
  },
  {
    "text": "a slider we're using plain HTML and this slider is going to change the value of",
    "start": "3533089",
    "end": "3539869"
  },
  {
    "text": "that variable called FP so this is what I'm going to show you is how I'm going to change the speed of the route the",
    "start": "3539869",
    "end": "3547430"
  },
  {
    "text": "color rotation live inside the browser so you don't think i'm tish and cheating you or showing your video right so this",
    "start": "3547430",
    "end": "3553999"
  },
  {
    "text": "really shows that this is real video processing running in real time inside the browser and right so this is what it",
    "start": "3553999",
    "end": "3563479"
  },
  {
    "text": "looks like let me just grab the browser screen",
    "start": "3563479",
    "end": "3570339"
  },
  {
    "text": "right so what do we see here on the Left we have the original video file this is",
    "start": "3579850",
    "end": "3586520"
  },
  {
    "text": "just a regular mp4 file hosted on the same in the same folder as the page and",
    "start": "3586520",
    "end": "3592570"
  },
  {
    "text": "the frames are shown by the browser I'm not actually managing these frames and on the right we're saying the video the",
    "start": "3592570",
    "end": "3600370"
  },
  {
    "text": "opencv processed video where I'm rotating the huge channel after the",
    "start": "3600370",
    "end": "3606710"
  },
  {
    "text": "appropriate color conversion and the slider is right underneath and as you",
    "start": "3606710",
    "end": "3613160"
  },
  {
    "text": "might expect if I'm going to slide it a little bit to the left suddenly there's",
    "start": "3613160",
    "end": "3619850"
  },
  {
    "text": "no the speed is zero and you can see that it's stuck on this kind of blue green blue purple tint and if I slide it",
    "start": "3619850",
    "end": "3629540"
  },
  {
    "text": "a little bit to the right you can see that we're getting our party parrot effect right live in the browser which",
    "start": "3629540",
    "end": "3636590"
  },
  {
    "text": "is this is C++ code I'm not a JavaScript developer and I think that's extremely",
    "start": "3636590",
    "end": "3643130"
  },
  {
    "text": "cool and I think that's it thank you",
    "start": "3643130",
    "end": "3651170"
  },
  {
    "text": "I say I'm out of time but I'll be happy",
    "start": "3651170",
    "end": "3656840"
  },
  {
    "text": "to take questions if I don't see any so",
    "start": "3656840",
    "end": "3665060"
  },
  {
    "text": "thank you very much oh yeah",
    "start": "3665060",
    "end": "3668530"
  },
  {
    "text": "yes that's the Emscripten compiles the inscription is a fork of LLVM which",
    "start": "3675180",
    "end": "3682779"
  },
  {
    "text": "compiles somebody correct me if I'm phrasing this incorrectly but basically it compiles anything clang and jlv and",
    "start": "3682779",
    "end": "3691449"
  },
  {
    "text": "can compile into something that's called a s MJS which is like a subset of",
    "start": "3691449",
    "end": "3696880"
  },
  {
    "text": "JavaScript which is highly optimized by browsers and it I think the general",
    "start": "3696880",
    "end": "3704199"
  },
  {
    "text": "numbers are it runs about half the speed of the native C++ code as I said today",
    "start": "3704199",
    "end": "3710920"
  },
  {
    "text": "there is a shift towards web assembly which is even more optimized it's not actual text JavaScript text file it's",
    "start": "3710920",
    "end": "3717819"
  },
  {
    "text": "already kind of a binary form of the same thing which is even more highly optimized so but yes the original code",
    "start": "3717819",
    "end": "3724839"
  },
  {
    "text": "was basically compiled into a text ASCII with JavaScript representation which",
    "start": "3724839",
    "end": "3730839"
  },
  {
    "text": "runs by the browser yes okay thank you",
    "start": "3730839",
    "end": "3737589"
  },
  {
    "text": "very much",
    "start": "3737589",
    "end": "3739890"
  }
]