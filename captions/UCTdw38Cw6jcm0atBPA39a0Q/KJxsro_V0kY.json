[
  {
    "text": "I presume you can all hear me now want to so it's really great I actually can't see a single thing in here so I'm",
    "start": "359",
    "end": "6600"
  },
  {
    "text": "talking to an empty room right now but I can hear you all which is great so if you get angry with me any point in the top just throw something",
    "start": "6600",
    "end": "12599"
  },
  {
    "text": "because big Target um so this is a talk about intentional",
    "start": "12599",
    "end": "18119"
  },
  {
    "text": "code and intentionality and minimalism and really this is",
    "start": "18119",
    "end": "24060"
  },
  {
    "text": "um a response to that sentiment that you kind of feel when you look at software",
    "start": "24060",
    "end": "29400"
  },
  {
    "text": "that you maintain and think that everything just kind of sucks like everything kind of sucks so what",
    "start": "29400",
    "end": "34920"
  },
  {
    "text": "we're going to do here we're not really going to look at too much code but we're going to feel things so if you don't like feeling things you're gonna have",
    "start": "34920",
    "end": "41160"
  },
  {
    "text": "bad time so we've all been there right we've opened up a piece of software we've",
    "start": "41160",
    "end": "46680"
  },
  {
    "text": "tried to edit a thing and we've been like what is this what is this thing I'm looking at where's all the stuff I don't",
    "start": "46680",
    "end": "53039"
  },
  {
    "text": "understand this why would anyone do this thing like this I think it's like the normal reaction most people have to",
    "start": "53039",
    "end": "59219"
  },
  {
    "text": "foreign code bases and you know I want to talk to you about why I think we feel that way so all about feeling",
    "start": "59219",
    "end": "67680"
  },
  {
    "text": "um so my name's David and I spend way too much time thinking about software design it's basically my toxic trait",
    "start": "67680",
    "end": "75659"
  },
  {
    "text": "um I'm the head of architecture for a company called New Day in London yes we're hiring whatever",
    "start": "75659",
    "end": "81900"
  },
  {
    "text": "um they love it when I do that uh I spent about a decade as an independent consultant but I'm really here to talk",
    "start": "81900",
    "end": "87960"
  },
  {
    "text": "about why design is important and why every single thing matters you know I'm a programmer at heart and",
    "start": "87960",
    "end": "94799"
  },
  {
    "text": "you're going to pry my keyboard for my cold dead hands regardless of the job title that you stick on top of it so",
    "start": "94799",
    "end": "100140"
  },
  {
    "text": "that said you know there's not going to be an awful lot of code in this talk because what I really want us to think about is design and design is a very",
    "start": "100140",
    "end": "105840"
  },
  {
    "text": "very distinct thing so I did a small bit of a I don't know a",
    "start": "105840",
    "end": "111420"
  },
  {
    "text": "viral tweet anyone else have a hit tweet um that seemed to resonate pretty well with people and I was trying to fix up",
    "start": "111420",
    "end": "117360"
  },
  {
    "text": "this objectively awful awful code base and I opened it and my heckles were",
    "start": "117360",
    "end": "122640"
  },
  {
    "text": "completely raised by this god-awful organizational pattern this this horrible thing so I did what I always do",
    "start": "122640",
    "end": "128520"
  },
  {
    "text": "when I get mad and I started rage tweeting into the void and I distinctly remember thinking like this is a damning",
    "start": "128520",
    "end": "134520"
  },
  {
    "text": "indictment on the state of modern application design and and Twitter obviously agreed with me",
    "start": "134520",
    "end": "141000"
  },
  {
    "text": "great thank you mostly um but the thing that really jumped out at me from this particularly shitty code",
    "start": "141000",
    "end": "146819"
  },
  {
    "text": "base was how thoughtless all this stuff is how completely thoughtless it was you know organization by architectural",
    "start": "146819",
    "end": "154140"
  },
  {
    "text": "feature is way up there on the list of shitty things you can do to your software that has no real meaning",
    "start": "154140",
    "end": "159599"
  },
  {
    "text": "precisely because there's no answer to the question why is this like this and",
    "start": "159599",
    "end": "164700"
  },
  {
    "text": "that's the thing that's just kind of screaming in my head why is it like this so hopefully throughout the session we're going to cover ways that you can",
    "start": "164700",
    "end": "170580"
  },
  {
    "text": "answer that particular question of why in the software that you build",
    "start": "170580",
    "end": "175680"
  },
  {
    "text": "and you know as the joke goes organizing your code by architectural concept is about as meaningful as taking your",
    "start": "175680",
    "end": "181140"
  },
  {
    "text": "classic car collection and organizing organizing it by Wheels windshields uh",
    "start": "181140",
    "end": "186480"
  },
  {
    "text": "windscreen wipers and Chassis it ceases to be about anything it's not about cars",
    "start": "186480",
    "end": "191519"
  },
  {
    "text": "anymore it's just parts and a lot of the software that we see today looks like parts to me",
    "start": "191519",
    "end": "198360"
  },
  {
    "text": "now so much of this talk about design and the form of code always ends up",
    "start": "198360",
    "end": "203819"
  },
  {
    "text": "being dragged back to work now in the 1990s that was mostly about design patterns okay so this isn't a talk about design",
    "start": "203819",
    "end": "210720"
  },
  {
    "text": "patterns very explicitly but what I do want to do is pay them a little bit of lip service and due respect before we",
    "start": "210720",
    "end": "216780"
  },
  {
    "text": "get going because it might perhaps be easy to misinterpret what I'm about to say as a tirade against design patterns",
    "start": "216780",
    "end": "223799"
  },
  {
    "text": "and you know or like a rallying cry against standards but it really isn't that design patterns if we if we don't",
    "start": "223799",
    "end": "229860"
  },
  {
    "text": "know they originated in the in the works of Christopher Alexander who was like an actual real-life building architect like",
    "start": "229860",
    "end": "236700"
  },
  {
    "text": "a real one that the job title was invented for um who's he wrote this work with this",
    "start": "236700",
    "end": "241739"
  },
  {
    "text": "beautiful title which is um notes on the synthesis of form um and it was consumed by a bunch of",
    "start": "241739",
    "end": "248159"
  },
  {
    "text": "computer science researchers throughout the 70s and 80s and in the end that resulted in the kind of you know the",
    "start": "248159",
    "end": "253379"
  },
  {
    "text": "works by Kent Beck and Ward Cunningham in the late 80s around pattern languages",
    "start": "253379",
    "end": "259139"
  },
  {
    "text": "now you know the gang of four book here which is the one that most people have heard of you know this came out in 1994",
    "start": "259139",
    "end": "264540"
  },
  {
    "text": "which is probably about as old as the average attendee at this this conference at this point in time you know it was",
    "start": "264540",
    "end": "270000"
  },
  {
    "text": "probably really the foundational text around design patterns and what it did was it attempted to lay out a series of",
    "start": "270000",
    "end": "276060"
  },
  {
    "text": "structural creational and behavioral patterns observed in common software of",
    "start": "276060",
    "end": "281280"
  },
  {
    "text": "the era of the year and at the time so there was a bunch of noteworthy stuff around design patterns that followed you",
    "start": "281280",
    "end": "287280"
  },
  {
    "text": "know people like Kent Beck wrote Small Talk best practices and patterns which again ages it because Small Talk was",
    "start": "287280",
    "end": "293040"
  },
  {
    "text": "still relevant Martin Fowler wrote The Fairly famous patterns of Enterprise architecture But ultimately the",
    "start": "293040",
    "end": "299280"
  },
  {
    "text": "intention of all of those books was both good and it targeted one specific thing",
    "start": "299280",
    "end": "304979"
  },
  {
    "text": "to provide concrete guidance and descriptions of common solutions to common problems describing things that",
    "start": "304979",
    "end": "312479"
  },
  {
    "text": "we saw all the time you know and that's what design patterns really were they're giving names to model answers to common",
    "start": "312479",
    "end": "318720"
  },
  {
    "text": "questions and when you really give Concepts names you you Empower them and you can talk",
    "start": "318720",
    "end": "325139"
  },
  {
    "text": "about them and you can discuss them and I have nothing but respect for the people that put the foundational effort into giving things names that we see in",
    "start": "325139",
    "end": "331680"
  },
  {
    "text": "our industry especially when it was very very young but this talk isn't about that",
    "start": "331680",
    "end": "337080"
  },
  {
    "text": "um patterns try to make categories of problems that look the same this is a talk about everything that",
    "start": "337080",
    "end": "342840"
  },
  {
    "text": "isn't the same in your software now I suppose I just kind of lament that",
    "start": "342840",
    "end": "348780"
  },
  {
    "text": "most talk of design and software kind of devolved into this talk of design patterns because of the least",
    "start": "348780",
    "end": "354240"
  },
  {
    "text": "interesting part if design patterns are about all the parts of the systems that you build that are familiar to you",
    "start": "354240",
    "end": "361080"
  },
  {
    "text": "um then you know we we have to accept that you know as we push programming languages to innovate",
    "start": "361080",
    "end": "366720"
  },
  {
    "text": "so we have we should be making these design patterns obsolete over time and you know we see this in programming languages all the time it kind of feels",
    "start": "366720",
    "end": "373620"
  },
  {
    "text": "like we forgot to have a conversation about everything that wasn't predictable or common um and because that's where design real",
    "start": "373620",
    "end": "380220"
  },
  {
    "text": "design actually starts where and where talks of patterns end and you're just left with trying to work",
    "start": "380220",
    "end": "385440"
  },
  {
    "text": "out how to find form for the rest of your software now on the other end of the spectrum we",
    "start": "385440",
    "end": "392759"
  },
  {
    "text": "have large-scale architectural conversations okay so we we have conversations about things like enter",
    "start": "392759",
    "end": "398280"
  },
  {
    "text": "architecture hexagonal architectures and stuff like 12 Factor apps you know which",
    "start": "398280",
    "end": "403500"
  },
  {
    "text": "all try and offer prescriptive rules or characteristics around the form of an application",
    "start": "403500",
    "end": "408539"
  },
  {
    "text": "but I think software design has more axes than just functional patterns and large-scale architecture and I think the",
    "start": "408539",
    "end": "415020"
  },
  {
    "text": "most interesting aspects of design the ones that really affect the way most programmers interact with the system",
    "start": "415020",
    "end": "420419"
  },
  {
    "text": "exist in the gap between those two things so",
    "start": "420419",
    "end": "426900"
  },
  {
    "text": "funny story you wouldn't think here but back in the depths of time I was an art student which is why we feel things in",
    "start": "426900",
    "end": "432479"
  },
  {
    "text": "here um as in like I literally studied studied studied literature and design and Fine",
    "start": "432479",
    "end": "440280"
  },
  {
    "text": "Art and painting in the 90s in high school uh you know I specialized in",
    "start": "440280",
    "end": "445380"
  },
  {
    "text": "literature and politics and I'm currently a programmer I just always wanted to be a programmer right",
    "start": "445380",
    "end": "451319"
  },
  {
    "text": "so for the first half of my career I really struggled to reconcile this aesthetic sensibility of design and",
    "start": "451319",
    "end": "459180"
  },
  {
    "text": "computer programming you know and I started programming in the mid 90s where the works I previously mentioned were",
    "start": "459180",
    "end": "465720"
  },
  {
    "text": "about design patterns where kind of the de facto works on software quality and now you know I did a computer",
    "start": "465720",
    "end": "471720"
  },
  {
    "text": "science degree which I didn't particularly enjoy but that's here they're here in or there but during the first year of my comps I agree I",
    "start": "471720",
    "end": "479099"
  },
  {
    "text": "happened across like many people do the the work that Donald news put together around the art of computer programming",
    "start": "479099",
    "end": "484199"
  },
  {
    "text": "and he'd written a book called literate programming way back in 1984 which was",
    "start": "484199",
    "end": "489599"
  },
  {
    "text": "literally the year I was born so so much for new ideas right literate programming",
    "start": "489599",
    "end": "494880"
  },
  {
    "text": "now Donald news had tried to get Traction in the space with the idea that software should be written combining",
    "start": "494880",
    "end": "501360"
  },
  {
    "text": "what he called a documentation language and a programming language to produce comprehensible and maintainable code",
    "start": "501360",
    "end": "507780"
  },
  {
    "text": "now this is consistent with the rest of Donald Newton's output really this is the guy that wrote text after all you",
    "start": "507780",
    "end": "514440"
  },
  {
    "text": "know he took a decade out of writing a book to write a tool to write a book in so it does not surprise me that that he",
    "start": "514440",
    "end": "520919"
  },
  {
    "text": "was really into this stuff um and if you think about it the languages that were popular in the 70s when news",
    "start": "520919",
    "end": "527100"
  },
  {
    "text": "was formulating this idea of literate programming we're far lower level than the programming languages that we have",
    "start": "527100",
    "end": "532740"
  },
  {
    "text": "today modern programming languages are kind of an order of magnitude more pliable and",
    "start": "532740",
    "end": "538980"
  },
  {
    "text": "expressive and frankly more a regular in form than they were in the 1960s and",
    "start": "538980",
    "end": "544500"
  },
  {
    "text": "1970s so news was right honestly and programming languages over time trended",
    "start": "544500",
    "end": "550140"
  },
  {
    "text": "towards being more literate and looking more like written language now",
    "start": "550140",
    "end": "555899"
  },
  {
    "text": "the core of the idea that really really stuck with me for years and years and years software really is the same as",
    "start": "555899",
    "end": "561660"
  },
  {
    "text": "literature in by basically every every measure and we're going to dig into this a",
    "start": "561660",
    "end": "567240"
  },
  {
    "text": "little because it was a little bit of a revelation for like baby programmer David and you know and it changed the",
    "start": "567240",
    "end": "572940"
  },
  {
    "text": "way that I started writing code and it's changed the way that I started reading code um you know our software only becomes",
    "start": "572940",
    "end": "579240"
  },
  {
    "text": "good literature if we design with that in mind",
    "start": "579240",
    "end": "584660"
  },
  {
    "text": "so over the years I've come back to this precise definition of what I believe",
    "start": "584880",
    "end": "590519"
  },
  {
    "text": "software really is it's a constrained form of communication between programmer and programmer that",
    "start": "590519",
    "end": "597899"
  },
  {
    "text": "describes Concepts and problems that also happens to be executable by machine now",
    "start": "597899",
    "end": "603899"
  },
  {
    "text": "the more you think about it the more that starts making sense you know you spend a much larger portion",
    "start": "603899",
    "end": "609300"
  },
  {
    "text": "of your time reading code than you do writing it this is a commonly accepted truth your code exists in a context it has",
    "start": "609300",
    "end": "616920"
  },
  {
    "text": "subtext it has authorial intent sometimes the implementation contradicts the intent of the author",
    "start": "616920",
    "end": "623940"
  },
  {
    "text": "your code has flow it has Rhythm it has form just like any other writing and",
    "start": "623940",
    "end": "630120"
  },
  {
    "text": "most importantly your code has reason it has intent",
    "start": "630120",
    "end": "635600"
  },
  {
    "text": "so this slide now goes in like every talk I ever write it's funny like be mad at me and burn your copies of clean code",
    "start": "636060",
    "end": "643320"
  },
  {
    "text": "it's aged really poorly it means we'd have to deal with that guy it's a",
    "start": "643320",
    "end": "648420"
  },
  {
    "text": "dogmatic book that's cast a long Shadow over the industry and discussions of quality and design it's a bunch of silly",
    "start": "648420",
    "end": "656399"
  },
  {
    "text": "rules um there is fundamentally quite a thoughtlessness in a book that thinks it",
    "start": "656399",
    "end": "662760"
  },
  {
    "text": "can describe a singular way an approach to design software um thoughtless Dogma followed blindly",
    "start": "662760",
    "end": "669360"
  },
  {
    "text": "get rid of it burning pyre so again heresy I hear everybody cry",
    "start": "669360",
    "end": "675779"
  },
  {
    "text": "absolutely heresy you can't say that about writing clean code I love writing clean code there was a point in my",
    "start": "675779",
    "end": "681120"
  },
  {
    "text": "career too where I thought that the rules around basic hygiene were enough and that you know over the last five or",
    "start": "681120",
    "end": "687240"
  },
  {
    "text": "so years what I've actually come to value is this idea of intentionality in my code above any sense of syntactic",
    "start": "687240",
    "end": "693120"
  },
  {
    "text": "cleanliness and you know I hear people say what does that even mean um but what it really means to me is",
    "start": "693120",
    "end": "699240"
  },
  {
    "text": "that every single Character Matters every single thing that you write in your code and I want you to approach the",
    "start": "699240",
    "end": "705240"
  },
  {
    "text": "work as if every single character is important the white space matters the rhythm of your code the naming the",
    "start": "705240",
    "end": "712320"
  },
  {
    "text": "stanzas the form the function are all there to tell the next person that comes to read your body of work something",
    "start": "712320",
    "end": "718800"
  },
  {
    "text": "important code written with thoughtlessness sorry",
    "start": "718800",
    "end": "724140"
  },
  {
    "text": "with with thoughtfulness and with intentionality are what really matter because if you're working with a code",
    "start": "724140",
    "end": "730560"
  },
  {
    "text": "base that people have taken the care to write well you can feel it and I want to talk to you about how we're going to",
    "start": "730560",
    "end": "736440"
  },
  {
    "text": "feel it a little bit here with some examples so thinking of your software as",
    "start": "736440",
    "end": "741959"
  },
  {
    "text": "literature lets you kind of value different ways of communicating in code we can communicate on the macro scale",
    "start": "741959",
    "end": "748200"
  },
  {
    "text": "with organizational patterns and application architectures you know let's take for example a standard MVC app now",
    "start": "748200",
    "end": "755220"
  },
  {
    "text": "MVC is an organizational pattern it takes how you split up your code bases and in all of its common implementations",
    "start": "755220",
    "end": "761519"
  },
  {
    "text": "it tells you how to organize your application I've often talked about I have this kind of love hate relationship with MVC as an",
    "start": "761519",
    "end": "768360"
  },
  {
    "text": "organizational pattern because what it tends to do is obscure the actual function of the application that's buried inside of it when you open an MVC",
    "start": "768360",
    "end": "775680"
  },
  {
    "text": "code base what you see is how the code is connected together not what the",
    "start": "775680",
    "end": "781139"
  },
  {
    "text": "function of the application is always you can possibly presume it's a website but what it does is completely opaque to",
    "start": "781139",
    "end": "787620"
  },
  {
    "text": "you from the outside you know so it's a good example of an organizational pattern that tells you how something works while obscuring",
    "start": "787620",
    "end": "794220"
  },
  {
    "text": "intent right that's a choice you can make it's a trade-off you know I actually find the micro scale",
    "start": "794220",
    "end": "800459"
  },
  {
    "text": "more interesting where the way that you form your code from function to function from module to module telegraph's intent",
    "start": "800459",
    "end": "809339"
  },
  {
    "text": "now we use form and flow to increase cohesion of our code base generally like these are almost classic design skills",
    "start": "809339",
    "end": "817920"
  },
  {
    "text": "Now by way of example of what I mean when I say use form and flow and cohesion on a micro scale I want to",
    "start": "817920",
    "end": "825060"
  },
  {
    "text": "share two screenshots a little bit side by side so I also recently tweeted these",
    "start": "825060",
    "end": "830160"
  },
  {
    "text": "screenshots and they're from the same application that was organized like a piece of crap at the start so this is a frankly pretty ugly benign",
    "start": "830160",
    "end": "838860"
  },
  {
    "text": "function that does some HTTP stuff there's nothing interesting about it and",
    "start": "838860",
    "end": "844260"
  },
  {
    "text": "it's really difficult to read because there's no use of formal flow in these lines of code it forces your brain to",
    "start": "844260",
    "end": "850800"
  },
  {
    "text": "comprehend each line in total isolation there is so much space here that you're reading in the staccato fashion and",
    "start": "850800",
    "end": "857160"
  },
  {
    "text": "having to build up a mental model in your head so when we're writing we use paragraphs",
    "start": "857160",
    "end": "864000"
  },
  {
    "text": "and text to guide the reader to group related Concepts before moving on to something else this is kind of",
    "start": "864000",
    "end": "869519"
  },
  {
    "text": "writing 101. code is exactly the same so lines mean something and if you use",
    "start": "869519",
    "end": "876060"
  },
  {
    "text": "them everywhere or nowhere you're removing an entire category of expression from your code base",
    "start": "876060",
    "end": "881760"
  },
  {
    "text": "now this is like a really incredibly small scale example that does a great Injustice to the effect of code with",
    "start": "881760",
    "end": "887579"
  },
  {
    "text": "good form but code with form is like poetry with rhythm it directs a reader it telegraphs how",
    "start": "887579",
    "end": "894360"
  },
  {
    "text": "you're meant to read the statements it shows you um what is related by the way you organize the statements",
    "start": "894360",
    "end": "900899"
  },
  {
    "text": "it's aesthetic sensibility reflects how the flow control in the software is designed to be interpreted",
    "start": "900899",
    "end": "908339"
  },
  {
    "text": "and all we did was delete a few lines and group a few things together right and actually there's a huge Improvement",
    "start": "908339",
    "end": "915480"
  },
  {
    "text": "there on a very very small scale the flowing form of your code is something that you use to communicate your intent",
    "start": "915480",
    "end": "920880"
  },
  {
    "text": "something that is often lost in the moress of kind of linters and auto",
    "start": "920880",
    "end": "926459"
  },
  {
    "text": "formatters and regular form is intent form is important and it's",
    "start": "926459",
    "end": "931500"
  },
  {
    "text": "design now the more I started thinking about software through this lens of literature",
    "start": "931500",
    "end": "938399"
  },
  {
    "text": "through this lens of intent the more it became apparent to me that what I was really reacting to was the the inherent",
    "start": "938399",
    "end": "945180"
  },
  {
    "text": "complexity of a lot of modern software right and and what I was doing is I was craving clear communication of",
    "start": "945180",
    "end": "952560"
  },
  {
    "text": "well-written prose I was craving this kind of meaningful thoughtful intentful code",
    "start": "952560",
    "end": "958260"
  },
  {
    "text": "and really what it was doing is it was representing this grender design problem and I've been this is this is good I've",
    "start": "958260",
    "end": "964079"
  },
  {
    "text": "been working on a sentence recently for the past couple of years yeah a sentence great ridiculous to be working on a",
    "start": "964079",
    "end": "970199"
  },
  {
    "text": "sentence um but I think this describes this kind of intersection between complexity in in",
    "start": "970199",
    "end": "976980"
  },
  {
    "text": "modern software and it's exactly this the complexity of your application should it be at most as complex as the",
    "start": "976980",
    "end": "984120"
  },
  {
    "text": "problem space it inhabits and no greater this is my Golden Rule of design and how",
    "start": "984120",
    "end": "990480"
  },
  {
    "text": "to tell when you are over or undesigning some under designing something making sure software is the right size is an",
    "start": "990480",
    "end": "997380"
  },
  {
    "text": "aspect of form brevity is an aspect of writing so macro and Micro Design are the tools",
    "start": "997380",
    "end": "1003860"
  },
  {
    "text": "we use to meet this goal now so many systems are just kind of straight up fail this test right they",
    "start": "1003860",
    "end": "1010759"
  },
  {
    "text": "lose themselves under infrastructure and build systems and deployment and modules and reuse and like all of these Grand",
    "start": "1010759",
    "end": "1017720"
  },
  {
    "text": "ideas about the eventual destination of a code base without really focusing on what the correct form to express the",
    "start": "1017720",
    "end": "1024678"
  },
  {
    "text": "problem they have right now is and this is the same sentiment you find when you look at you know rules like",
    "start": "1024679",
    "end": "1030140"
  },
  {
    "text": "yagni you ain't gonna need it right it's a rallying cry against over design it buries systems it makes working with",
    "start": "1030140",
    "end": "1037760"
  },
  {
    "text": "those kinds of code bases like swimming through treacle and it's like we forgot how to build small things while Swept Away by",
    "start": "1037760",
    "end": "1044780"
  },
  {
    "text": "fantasizing about building like the next Mega scale metaverse AI monstrosity and",
    "start": "1044780",
    "end": "1050960"
  },
  {
    "text": "like I really I think what makes software beautiful is is what makes it really shine is when",
    "start": "1050960",
    "end": "1056539"
  },
  {
    "text": "you build these beautiful small pieces of code that solve really discrete problems right that's that's why I got",
    "start": "1056539",
    "end": "1063020"
  },
  {
    "text": "into this it's like Puzzles it's fun now the interesting thing about thinking",
    "start": "1063020",
    "end": "1068840"
  },
  {
    "text": "about software design and even using the word design in this context is often a",
    "start": "1068840",
    "end": "1074059"
  },
  {
    "text": "little bit contentious because design is a word that exists elsewhere in the world you know it means a lot of things it's",
    "start": "1074059",
    "end": "1079160"
  },
  {
    "text": "easy to mistake so design exists to solve a problem to communicate intent using Form and",
    "start": "1079160",
    "end": "1084799"
  },
  {
    "text": "Function that's the purpose of design but design is also temporal in nature",
    "start": "1084799",
    "end": "1090679"
  },
  {
    "text": "and with many designs only really making sense within their context and even if",
    "start": "1090679",
    "end": "1095960"
  },
  {
    "text": "you know great design can be described as Timeless now even when you look at the outside of of software great design",
    "start": "1095960",
    "end": "1103400"
  },
  {
    "text": "is is deeply contextual so we've got some examples here of what you could argue are pretty great designs like",
    "start": "1103400",
    "end": "1108620"
  },
  {
    "text": "iconic designs now these are very very explicitly period",
    "start": "1108620",
    "end": "1114740"
  },
  {
    "text": "designs that actually a nonsense now because we remove them from their context and they don't really make any",
    "start": "1114740",
    "end": "1120020"
  },
  {
    "text": "sense to kids born today right and you know a lot of our Legacy",
    "start": "1120020",
    "end": "1125299"
  },
  {
    "text": "expressions of design and software fail in a similar manner actually and we have a lot of despite being a young",
    "start": "1125299",
    "end": "1132260"
  },
  {
    "text": "industry we've got a lot of design that just doesn't really make sense in the context that we operate today",
    "start": "1132260",
    "end": "1139600"
  },
  {
    "text": "now there's also another really interesting observation here when we take these two iconic designs as an",
    "start": "1139760",
    "end": "1145460"
  },
  {
    "text": "example that they weren't actually the last of their lines like most people think they were they've evolved and",
    "start": "1145460",
    "end": "1150860"
  },
  {
    "text": "changed over time now that's because design is iterative right you know phones didn't cease walkmans",
    "start": "1150860",
    "end": "1158299"
  },
  {
    "text": "didn't vanish they were iterated out to touch phones and mobile phones and to discmans and iPods",
    "start": "1158299",
    "end": "1164960"
  },
  {
    "text": "now there's an irony of here of course if anyone's noticed it which is these two designs actually converged right",
    "start": "1164960",
    "end": "1171500"
  },
  {
    "text": "actually what happened is they were both solving the problem of transmitting audio not playing music or making phone",
    "start": "1171500",
    "end": "1177020"
  },
  {
    "text": "calls and it just took the context to shift and times to change them to both get there",
    "start": "1177020",
    "end": "1182059"
  },
  {
    "text": "now I think that that that's like an inherent evolutionary process that exists in great design",
    "start": "1182059",
    "end": "1188240"
  },
  {
    "text": "and it's kind of exactly the same reason that a discipline like tdd getting casted as a design discipline is a good",
    "start": "1188240",
    "end": "1194000"
  },
  {
    "text": "thing right because what you're really doing is you're you're going through that same iterative design process very very",
    "start": "1194000",
    "end": "1200480"
  },
  {
    "text": "quickly you know I'm sure you'll probably seeing the rising Trend in kind of people criticizing tdd despite",
    "start": "1200480",
    "end": "1207020"
  },
  {
    "text": "clearly never having actually done it right really really obviously never having done it um because many of the folks who have",
    "start": "1207020",
    "end": "1213919"
  },
  {
    "text": "been criticizing tdd without doing the practice have clearly never got that benefit of iterative design and they",
    "start": "1213919",
    "end": "1220820"
  },
  {
    "text": "clearly just write a test and stop and write a test and stop and write a test and stop and and they're kind of they're",
    "start": "1220820",
    "end": "1226100"
  },
  {
    "text": "cutting themselves off to a whole sphere of influence by doing that",
    "start": "1226100",
    "end": "1232059"
  },
  {
    "text": "I think this also highlights one of the other really magic qualities of design as a discipline which is that it's just",
    "start": "1232100",
    "end": "1238520"
  },
  {
    "text": "as much about form as it is about function you know these are entire categories of problems unless you you know clearly uh",
    "start": "1238520",
    "end": "1245660"
  },
  {
    "text": "you're clearly smarter person than I am you can't really see until you see them in person like a discipline like tdd",
    "start": "1245660",
    "end": "1252020"
  },
  {
    "text": "shows you by example the constraints that your system operates under because you build the thing and you look at the",
    "start": "1252020",
    "end": "1257419"
  },
  {
    "text": "thing and you change the thing and I don't know about you all but I can't conceive of problems that don't exist",
    "start": "1257419",
    "end": "1262460"
  },
  {
    "text": "yet until I've got there right I think you know giving ourselves good processes is better than thinking we can just",
    "start": "1262460",
    "end": "1267740"
  },
  {
    "text": "think so hard about a problem that we can solve it um so I appreciate the common Trope is",
    "start": "1267740",
    "end": "1274400"
  },
  {
    "text": "that many programmers just don't feel like they are visual people so when I say programming is a design people are",
    "start": "1274400",
    "end": "1279440"
  },
  {
    "text": "like oh well you know I'm not really very Arty art is a completely different thing Art and Design are two separate",
    "start": "1279440",
    "end": "1284660"
  },
  {
    "text": "disciplines you know I I don't think it's categorically impossible to do great design without workflows like tdd",
    "start": "1284660",
    "end": "1291500"
  },
  {
    "text": "but I you know I know you make it harder for yourself if you try right simple as that so looking at this as like a",
    "start": "1291500",
    "end": "1297500"
  },
  {
    "text": "framing device and looking at software design as design it's probably worth us thinking about",
    "start": "1297500",
    "end": "1302840"
  },
  {
    "text": "the context that modern software exists in and how that might challenge some of our more classical works on what good",
    "start": "1302840",
    "end": "1308780"
  },
  {
    "text": "looks like so it's worth us reevaluating some of the organizational patterns that we have for example",
    "start": "1308780",
    "end": "1314480"
  },
  {
    "text": "for modern software in a world where we're not building desktop software anymore and you know I know some people",
    "start": "1314480",
    "end": "1319640"
  },
  {
    "text": "are building desktop software but most of you aren't where programming languages have made categories of design",
    "start": "1319640",
    "end": "1324919"
  },
  {
    "text": "patterns obsolete now I'll tell you what the 10th Generation clean architecture folks",
    "start": "1324919",
    "end": "1331460"
  },
  {
    "text": "absolutely hate me for talking about most of the things you think of as best",
    "start": "1331460",
    "end": "1336559"
  },
  {
    "text": "practice are probably just overblown structural design patterns that's it and and they look as",
    "start": "1336559",
    "end": "1342559"
  },
  {
    "text": "ridiculous as the comedy organized by architectural concept patterns that we opened up with you know there's often a",
    "start": "1342559",
    "end": "1348860"
  },
  {
    "text": "truism when I when I work with with people that report to me where they think there's this one great design that",
    "start": "1348860",
    "end": "1354740"
  },
  {
    "text": "we're working towards and there's this beautiful piece of irony that there are",
    "start": "1354740",
    "end": "1359780"
  },
  {
    "text": "no good designs there are just constraints and the only way I can tell if your design is wrong is if you think",
    "start": "1359780",
    "end": "1366200"
  },
  {
    "text": "it's the only good design because if you think you've got the only good design I can tell you you're wrong right and the irony has really not lost",
    "start": "1366200",
    "end": "1372919"
  },
  {
    "text": "on me so I see a lot of system designs these days that have been fragmented into kind of micro Services who am I kidding it's",
    "start": "1372919",
    "end": "1380179"
  },
  {
    "text": "like 80 distributed monoliths but let's not worry about that but then the individual moving parts of",
    "start": "1380179",
    "end": "1386780"
  },
  {
    "text": "these systems have been absolutely decimated by best practice right absolutely destroyed",
    "start": "1386780",
    "end": "1392419"
  },
  {
    "text": "you know the overall picture looks fine from 50 000 feet but as soon as you get into the detail everything just feels",
    "start": "1392419",
    "end": "1398780"
  },
  {
    "text": "wrong like the application design patterns overwhelm the scope of these",
    "start": "1398780",
    "end": "1404059"
  },
  {
    "text": "individual tiny moving components and I want to show you an example based on an application that I was working my way",
    "start": "1404059",
    "end": "1410299"
  },
  {
    "text": "through with a team recently to see this really writ large on a system now you don't actually have to worry",
    "start": "1410299",
    "end": "1416000"
  },
  {
    "text": "about what it says I know you can't read it but it's a class diagram I generated from A system that was following this",
    "start": "1416000",
    "end": "1421580"
  },
  {
    "text": "kind of prescriptive clean architectural design but all I see here are just telltale",
    "start": "1421580",
    "end": "1427280"
  },
  {
    "text": "signs of thoughtlessness now this system which was in the process of",
    "start": "1427280",
    "end": "1432380"
  },
  {
    "text": "being recomposed back into a single logical application was divided into a huge number of",
    "start": "1432380",
    "end": "1437659"
  },
  {
    "text": "modules all of which were further subdivided by architectural feature each part of the application was its own",
    "start": "1437659",
    "end": "1444799"
  },
  {
    "text": "Mini web application depending on the subsequent modules project which would contain the logic all coupled together",
    "start": "1444799",
    "end": "1451520"
  },
  {
    "text": "with a shared common Library underneath and the total cognitive load of",
    "start": "1451520",
    "end": "1457220"
  },
  {
    "text": "understanding the scope of change in any one of these things was just huge absolutely huge you could not tell if",
    "start": "1457220",
    "end": "1463760"
  },
  {
    "text": "you're in the left hand side of the system if you really needed to worry about the right hand of the system at all",
    "start": "1463760",
    "end": "1469640"
  },
  {
    "text": "um and you know some would describe this as really well intentioned you know we've subdivided all our concerns down well all I see here is an explosion in",
    "start": "1469640",
    "end": "1476539"
  },
  {
    "text": "complexity it's a simple problem with too many moving parts and you know what we've really done is",
    "start": "1476539",
    "end": "1482299"
  },
  {
    "text": "we've taken the surface area of the software and we've spread it out and the funniest thing is all the stuff was",
    "start": "1482299",
    "end": "1488780"
  },
  {
    "text": "maintained by a single team of three people right and I just looked at them and they were drowning under the complexity of",
    "start": "1488780",
    "end": "1495020"
  },
  {
    "text": "build pipelines for all these individual pieces they built now",
    "start": "1495020",
    "end": "1501880"
  },
  {
    "text": "for all of this macro design and project structure and organization that was forced upon the project",
    "start": "1502039",
    "end": "1507679"
  },
  {
    "text": "the actual state of the design of the code itself was awful it was this this junk and again you don't really have to",
    "start": "1507679",
    "end": "1514100"
  },
  {
    "text": "to pay close attention like it was shockingly low quality the state of the",
    "start": "1514100",
    "end": "1519260"
  },
  {
    "text": "actual code so this is a diff between where we started and after we finished kind of cleaning it up and took away all",
    "start": "1519260",
    "end": "1525620"
  },
  {
    "text": "the the boring repetitive cross-cutting infrastructure that was in everything like it all of this effort was focused",
    "start": "1525620",
    "end": "1532460"
  },
  {
    "text": "on organization and none of it on the actual work right and I thought that was just a tragedy it was rot",
    "start": "1532460",
    "end": "1539120"
  },
  {
    "text": "so this was a classic case of people focusing on macro design in this case you must always have this set of",
    "start": "1539120",
    "end": "1545179"
  },
  {
    "text": "projects for every single thing we build and totally neglecting actual application design",
    "start": "1545179",
    "end": "1550820"
  },
  {
    "text": "and I see this all the time I'm sure you've all got systems like this right with like 38 projects all compiled down",
    "start": "1550820",
    "end": "1556880"
  },
  {
    "text": "to a single logical web application that's deployed in like a function app right it's just one thing",
    "start": "1556880",
    "end": "1564039"
  },
  {
    "text": "so how do we spot this and fix it what was the tell how did we know that this was a problem well",
    "start": "1564559",
    "end": "1570620"
  },
  {
    "text": "we first did like a a first round trim of all the complexity so we collapsed all the modules up into each other and",
    "start": "1570620",
    "end": "1577039"
  },
  {
    "text": "rolled them into each corresponding web application a pro tip you might think you need assemblies and dlls and",
    "start": "1577039",
    "end": "1582799"
  },
  {
    "text": "packages for things you just use directories directories are great as old as time would recommend",
    "start": "1582799",
    "end": "1588860"
  },
  {
    "text": "um so rather than this web application depending on modules to do work they at least now were responsible for their own",
    "start": "1588860",
    "end": "1594559"
  },
  {
    "text": "capabilities we preferred cohesion and co-location so bringing things that work",
    "start": "1594559",
    "end": "1599960"
  },
  {
    "text": "together together over slavishly trying to split and distribute knowledge around the application",
    "start": "1599960",
    "end": "1605659"
  },
  {
    "text": "and then finally once we had rationalized the code base into a series of applications and you know their",
    "start": "1605659",
    "end": "1612380"
  },
  {
    "text": "behavior was then compiled and collapsed together co-located and deployed together now we we realized that the correct",
    "start": "1612380",
    "end": "1619039"
  },
  {
    "text": "course of action was just to take all those applications and smush them into one and at the end of it we ended up with a",
    "start": "1619039",
    "end": "1624559"
  },
  {
    "text": "single logical program with about 30 30 apis in the thing and that was it and you might think oh God 30 apis what a",
    "start": "1624559",
    "end": "1631580"
  },
  {
    "text": "monolith they all did the same kind of stuff right the same category of behaviors so it made sense because it was easier for",
    "start": "1631580",
    "end": "1638600"
  },
  {
    "text": "a team of three people to Wrangle with a code base with a smaller surface area the design had more meaning and was done",
    "start": "1638600",
    "end": "1645740"
  },
  {
    "text": "for a purpose rather than just following a rule now",
    "start": "1645740",
    "end": "1652100"
  },
  {
    "text": "after this was all completed we ended up refactoring 64 modules and 19 build",
    "start": "1652100",
    "end": "1657440"
  },
  {
    "text": "pipelines times three environments in into three",
    "start": "1657440",
    "end": "1663500"
  },
  {
    "text": "three things um and then we could fix it because then people could refactor and all their tools work better and everything kind of",
    "start": "1663500",
    "end": "1670460"
  },
  {
    "text": "hung together and this is what adhering to structural design patterns over actually thoughtfully considering your",
    "start": "1670460",
    "end": "1677120"
  },
  {
    "text": "code gets you right this is your clean architecture writ large on a real system",
    "start": "1677120",
    "end": "1682220"
  },
  {
    "text": "and the explosion of infrastructure that comes at a cost with it like please build smaller things",
    "start": "1682220",
    "end": "1688760"
  },
  {
    "text": "smaller things fewer moving Parts always are better",
    "start": "1688760",
    "end": "1693460"
  },
  {
    "text": "now there are obviously some known good designs right there are certain problem spaces where there are structural",
    "start": "1694159",
    "end": "1701240"
  },
  {
    "text": "patterns that represent systems that we we build all the time so the most glaringly obvious examples are things",
    "start": "1701240",
    "end": "1707120"
  },
  {
    "text": "like you know RPC style systems like HTTP apis often map quite commonly onto",
    "start": "1707120",
    "end": "1713360"
  },
  {
    "text": "command and query patterns right very very obvious organizational patterns but",
    "start": "1713360",
    "end": "1718400"
  },
  {
    "text": "in those systems where there are known good answers your applications form and flow matters",
    "start": "1718400",
    "end": "1724340"
  },
  {
    "text": "even more because what happens is everything starts to look the same and repetitive",
    "start": "1724340",
    "end": "1729440"
  },
  {
    "text": "I suppose what I'm reaching for here and and it's not it's not just what you say but it's how you say it right if we if",
    "start": "1729440",
    "end": "1735980"
  },
  {
    "text": "we take this back to literature um and it matters because when your macro",
    "start": "1735980",
    "end": "1741740"
  },
  {
    "text": "design is comfortable then the risk of code blindness and skim reading increases and when you're trying to",
    "start": "1741740",
    "end": "1748159"
  },
  {
    "text": "maintain a code base you will just start focusing out and zoning out and skimming past stuff",
    "start": "1748159",
    "end": "1754840"
  },
  {
    "text": "so in fact one of these kind of core problems with known good reference designs is that it's easy to learn a",
    "start": "1754940",
    "end": "1761000"
  },
  {
    "text": "design pattern or two and kind of decide that everything in software needs to look the same right really really easy I",
    "start": "1761000",
    "end": "1766880"
  },
  {
    "text": "don't know how many other people have been here but like this is my entire career that I've had to spend learning this lesson like at various points maybe",
    "start": "1766880",
    "end": "1773600"
  },
  {
    "text": "you recognize some of these situations I learned about MVC and I thought everything had to be a controller I did",
    "start": "1773600",
    "end": "1780140"
  },
  {
    "text": "that that was me um when I first learned about aspect oriented programming all I could see was",
    "start": "1780140",
    "end": "1785179"
  },
  {
    "text": "chains of interceptors um when I was told that controllers were only ever about HTTP I thought",
    "start": "1785179",
    "end": "1791480"
  },
  {
    "text": "everything was an application service I when microservice design first got",
    "start": "1791480",
    "end": "1796820"
  },
  {
    "text": "popular I thought everything had to be completely decomposed these are all mistakes I made by learning one thing",
    "start": "1796820",
    "end": "1802340"
  },
  {
    "text": "and trying to apply it to every single context I made them all right I made them all",
    "start": "1802340",
    "end": "1807440"
  },
  {
    "text": "and it takes some time to learn that uniformity is the opposite of expressiveness completely the opposite",
    "start": "1807440",
    "end": "1813440"
  },
  {
    "text": "it's important that when different parts of your software do something different their form reflects their function and",
    "start": "1813440",
    "end": "1819679"
  },
  {
    "text": "they don't look the same we don't want them to look the same as everything else the the visual variation",
    "start": "1819679",
    "end": "1825559"
  },
  {
    "text": "leads the eye it encourages reading instead of skimming and it removes these large blocks of",
    "start": "1825559",
    "end": "1832100"
  },
  {
    "text": "identical pattern text that you see in code everywhere so this is really secretly about a war",
    "start": "1832100",
    "end": "1840020"
  },
  {
    "text": "on complexity right and a war on finding a language and describing something you know we need to stop doing things",
    "start": "1840020",
    "end": "1846080"
  },
  {
    "text": "just because and we need to stop cargo culting design decisions but if you",
    "start": "1846080",
    "end": "1851360"
  },
  {
    "text": "don't understand why you're doing something you should always stop doing it it sounds really simple it's the the you know the chesterton's fence example",
    "start": "1851360",
    "end": "1858320"
  },
  {
    "text": "right which is I always like to talk to my teams about this if someone comes up to me and says hey David there's a fence",
    "start": "1858320",
    "end": "1864679"
  },
  {
    "text": "in the middle of the road I want to knock it down the answer should always be no right the answer is unless you can explain to me why the fence was put up",
    "start": "1864679",
    "end": "1871940"
  },
  {
    "text": "there in the first place and what the original author was trying to achieve you shouldn't remove it only when you",
    "start": "1871940",
    "end": "1876980"
  },
  {
    "text": "understand it you can remove something right so not understanding decisions is just as bad as that",
    "start": "1876980",
    "end": "1883399"
  },
  {
    "text": "so unfortunately because so much of software is context sensitive there are many times we're blindly applying design",
    "start": "1883399",
    "end": "1890419"
  },
  {
    "text": "patterns makes software more difficult to reason with and what that does is it increases the",
    "start": "1890419",
    "end": "1895460"
  },
  {
    "text": "cognitive load of understanding what a program does and this idea of cognitive load is kind of a good quality metric to",
    "start": "1895460",
    "end": "1901820"
  },
  {
    "text": "think about you know our job when designing software is fundamentally this war with complexity",
    "start": "1901820",
    "end": "1908360"
  },
  {
    "text": "so when I talk to people about complexity I'm often a little bit shocked about the things that people do",
    "start": "1908360",
    "end": "1914779"
  },
  {
    "text": "not recognize as complex in software so there's this really great book called",
    "start": "1914779",
    "end": "1919940"
  },
  {
    "text": "a philosophy of software design and I always hate being on camera when I say this guy's name in case I mispronounce",
    "start": "1919940",
    "end": "1925700"
  },
  {
    "text": "it John K USTA health I believe and I think it really gets the heart of",
    "start": "1925700",
    "end": "1931880"
  },
  {
    "text": "why complexity is a problem I'd really recommend the book by the way and the second chapter is all about complexity",
    "start": "1931880",
    "end": "1938179"
  },
  {
    "text": "and design it's the central theme and the theme is that complexity is never",
    "start": "1938179",
    "end": "1943220"
  },
  {
    "text": "caused by a single catastrophic error it's the tiny paper cuts of complexity that accumulate over time",
    "start": "1943220",
    "end": "1950299"
  },
  {
    "text": "so it's from the collection of dependencies it's from obscurities and idiosyncrasies that are at work",
    "start": "1950299",
    "end": "1957020"
  },
  {
    "text": "us to help describes complexity as the thing that leads to change amplification",
    "start": "1957020",
    "end": "1962299"
  },
  {
    "text": "High cognitive load and unknown unknowns and that leads to an explosion of of",
    "start": "1962299",
    "end": "1968480"
  },
  {
    "text": "work and effort and the number of modifications it takes to build each additional feature so building on that",
    "start": "1968480",
    "end": "1975440"
  },
  {
    "text": "definition I think intentional and thoughtful design is this kind of Salve for the creeping wave of complexity that",
    "start": "1975440",
    "end": "1982820"
  },
  {
    "text": "surrounds software everywhere there's this distressing realization",
    "start": "1982820",
    "end": "1988220"
  },
  {
    "text": "okay when you reach these lines of thinking you know design patterns are precisely so popular because it gives people a way",
    "start": "1988220",
    "end": "1996440"
  },
  {
    "text": "to reach towards a thing that they feel is good right there's always an answer",
    "start": "1996440",
    "end": "2002140"
  },
  {
    "text": "they've reached a definite conclusion that like the the comfort and design patterns is I've done the right thing",
    "start": "2002140",
    "end": "2008380"
  },
  {
    "text": "this is what I learned this is the right answer I can feel good about myself but once you've seen enough code bases",
    "start": "2008380",
    "end": "2015220"
  },
  {
    "text": "in enough languages you kind of realize that most of the arbitrary stylistic qualities of code that people often",
    "start": "2015220",
    "end": "2021760"
  },
  {
    "text": "focus on tabs versus spaces brace style are basically irrelevant like totally",
    "start": "2021760",
    "end": "2027519"
  },
  {
    "text": "totally totally irrelevant and instead there are a couple of like non-negotiable qualities that you look",
    "start": "2027519",
    "end": "2032980"
  },
  {
    "text": "for in a code base that are far less regimented than like your average JavaScript style guide right so you know",
    "start": "2032980",
    "end": "2039700"
  },
  {
    "text": "good code is code that's easy for someone with minimal domain context to read you know it's code that your",
    "start": "2039700",
    "end": "2045460"
  },
  {
    "text": "average developer can understand that is good code good code is code that focuses on developer experience debugability and",
    "start": "2045460",
    "end": "2052839"
  },
  {
    "text": "usability code that you cannot debug meaningfully is not good code fundamentally and code where the intent",
    "start": "2052839",
    "end": "2060220"
  },
  {
    "text": "takes up more of the visual space than the language syntax so code where you can see what it does",
    "start": "2060220",
    "end": "2066760"
  },
  {
    "text": "at a glance when you try and sight read it overseeing how it does it and the flow control of the language is good",
    "start": "2066760",
    "end": "2073179"
  },
  {
    "text": "code code that buries what it does under a programming language is ugly and",
    "start": "2073179",
    "end": "2078580"
  },
  {
    "text": "intractable regardless of language or style or intent all programmers basically",
    "start": "2078580",
    "end": "2085240"
  },
  {
    "text": "interact with code bases in the same way they glance at it to understand what it did what it does and then they read",
    "start": "2085240",
    "end": "2090460"
  },
  {
    "text": "intently to understand how it does it so it's always this kind of two-phase what is this how what is this how",
    "start": "2090460",
    "end": "2097240"
  },
  {
    "text": "good code regardless of style regardless of language regardless of framework makes that core Behavior really really",
    "start": "2097240",
    "end": "2103240"
  },
  {
    "text": "easy and you know at this meta level all code is constructed from a series of",
    "start": "2103240",
    "end": "2111220"
  },
  {
    "text": "abstractions and encapsulations that's kind of what we have so what we have to do is care about the costs that these abstractions bring",
    "start": "2111220",
    "end": "2117760"
  },
  {
    "text": "the programming languages runtimes and Frameworks which write higher level code go through an enormous amount of",
    "start": "2117760",
    "end": "2123940"
  },
  {
    "text": "compilation translation interpretation to execute right we know this we know that we're building on these stacks of",
    "start": "2123940",
    "end": "2129400"
  },
  {
    "text": "software all the way down now programming languages themselves are common abstractions over operating",
    "start": "2129400",
    "end": "2134560"
  },
  {
    "text": "system apis for example which are abstractions over assembly languages to",
    "start": "2134560",
    "end": "2139599"
  },
  {
    "text": "micro architectures which are abstractions over physical Hardware so there's always there's always a",
    "start": "2139599",
    "end": "2144760"
  },
  {
    "text": "bigger abstraction underneath you always remember that um this trend kind of continues upwards",
    "start": "2144760",
    "end": "2150460"
  },
  {
    "text": "though to the functions that you write and the types that you define and the classes and files that you create that",
    "start": "2150460",
    "end": "2156160"
  },
  {
    "text": "make your application that make up your application are all examples of both abstraction and encapsulation in action",
    "start": "2156160",
    "end": "2162160"
  },
  {
    "text": "these two things that you have now for the most part we're kind of blissfully unaware of this huge amount of",
    "start": "2162160",
    "end": "2168220"
  },
  {
    "text": "complexity that that exists under our programming environments and that's because the value that the abstractions",
    "start": "2168220",
    "end": "2174220"
  },
  {
    "text": "underneath us bring vastly outweigh the complexity of comprehending them right great great abstractions vastly outweigh",
    "start": "2174220",
    "end": "2182380"
  },
  {
    "text": "their complexity that's kind of the good bit and now you now have to worry about all the stuff that happens when you call file open is my favorite example all",
    "start": "2182380",
    "end": "2189760"
  },
  {
    "text": "right file open is like a horrendously complex deep abstraction over operating",
    "start": "2189760",
    "end": "2195280"
  },
  {
    "text": "system apis and physical disks and ssds and God knows what right file systems",
    "start": "2195280",
    "end": "2201579"
  },
  {
    "text": "but what file open does and file system apis is they reduce the cognitive load on the developer always they completely",
    "start": "2201579",
    "end": "2208839"
  },
  {
    "text": "encapsulate complexity now if you implement your own software sadly it's not always the truth that the",
    "start": "2208839",
    "end": "2215920"
  },
  {
    "text": "abstractions that you introduce reduce the complexity on the reader right I only wish everything was as good as a",
    "start": "2215920",
    "end": "2221800"
  },
  {
    "text": "file system abstraction so it's important that we understand how abstractions both increase and decrease",
    "start": "2221800",
    "end": "2228400"
  },
  {
    "text": "complexity now I'm going to borrow a little bit more of the terminology from osterhout's",
    "start": "2228400",
    "end": "2234760"
  },
  {
    "text": "book when we think about this example of file open now if you think about a module and a piece of software this could be a",
    "start": "2234760",
    "end": "2241119"
  },
  {
    "text": "package or a class or a binary its interface represents the complexity that",
    "start": "2241119",
    "end": "2246160"
  },
  {
    "text": "that module imposes on the rest of the application the rest of the system the smaller and simpler the interface",
    "start": "2246160",
    "end": "2252460"
  },
  {
    "text": "that it exposes the less complexity it forces onto the code that consumes it",
    "start": "2252460",
    "end": "2258280"
  },
  {
    "text": "by that description you can think of the best modules as deep modules which offer",
    "start": "2258280",
    "end": "2264400"
  },
  {
    "text": "a large benefit to the application for the simplest possible interface and the narrowest possible definitions right",
    "start": "2264400",
    "end": "2271240"
  },
  {
    "text": "simple as that the inverse is also then true an interface with lots of functions and",
    "start": "2271240",
    "end": "2277420"
  },
  {
    "text": "lots of parameters and a relatively meager set of benefits forces the consuming application to knowingly",
    "start": "2277420",
    "end": "2283839"
  },
  {
    "text": "choose which parts of it you're going to use right so what you're actually doing is exploding the the space of",
    "start": "2283839",
    "end": "2289420"
  },
  {
    "text": "possibilities by importing that module so you're significantly increasing the cognitive load of an application by",
    "start": "2289420",
    "end": "2295960"
  },
  {
    "text": "broad shallow interfaces so I think when we're designing it's important to keep that thing in mind",
    "start": "2295960",
    "end": "2302079"
  },
  {
    "text": "that you know if you have lots of Broad and shallow interfaces you're actively making the design of your software worse",
    "start": "2302079",
    "end": "2308619"
  },
  {
    "text": "always now as much a factor of avoiding the wrong abstractions is also you know how",
    "start": "2308619",
    "end": "2316180"
  },
  {
    "text": "you find the right ones and you know it may seem like painfully obvious advice but abstractions and you know generally",
    "start": "2316180",
    "end": "2322599"
  },
  {
    "text": "any other module or of code that you find should contain a problem space in its entirety right and like the number",
    "start": "2322599",
    "end": "2329680"
  },
  {
    "text": "of code bases that I see in most businesses that just do not comprehend that these are the things that we're doing when we're designing types like",
    "start": "2329680",
    "end": "2336579"
  },
  {
    "text": "we're trying to contain knowledge is is quite quite significant I'd say most",
    "start": "2336579",
    "end": "2341619"
  },
  {
    "text": "systems right dangerous now so this thing's abstractions that are things like pass-through methods you",
    "start": "2341619",
    "end": "2348099"
  },
  {
    "text": "know as soon as you design a class with a pass-through method you're adding no value and introducing an abstraction instantly increase the cognitive load of",
    "start": "2348099",
    "end": "2355359"
  },
  {
    "text": "a a system right data types and abstractions that operate on the same",
    "start": "2355359",
    "end": "2361900"
  },
  {
    "text": "data types that they expose almost by definition and not abstracting anything you're exposed to the same core types",
    "start": "2361900",
    "end": "2369400"
  },
  {
    "text": "and and data structures that you're exposing from the top then actually I mean what are you doing it's really just",
    "start": "2369400",
    "end": "2375400"
  },
  {
    "text": "a function that's not an abstraction right so you you fail if you you don't describe problem spaces coherently",
    "start": "2375400",
    "end": "2382839"
  },
  {
    "text": "you know uh our software has riddled with this kind of thoughtless abstraction and poor encapsulation and",
    "start": "2382839",
    "end": "2388300"
  },
  {
    "text": "every time a design decision like that is made it decreases the reasons that a module exists at all or that piece of",
    "start": "2388300",
    "end": "2395200"
  },
  {
    "text": "the software exists at all anything that adds a large amount of boilerplate code for a low amount of utility is by",
    "start": "2395200",
    "end": "2401619"
  },
  {
    "text": "definition thoughtless design",
    "start": "2401619",
    "end": "2405000"
  },
  {
    "text": "now you get to a certain point where you realize that all talk about design often",
    "start": "2410980",
    "end": "2416560"
  },
  {
    "text": "kind of dissolves into this kind of discussion of dogma and absolutism because there's an absolute truth there",
    "start": "2416560",
    "end": "2422680"
  },
  {
    "text": "and you know I kind of hinted at it before any design when stretched to its logical absolute extreme becomes",
    "start": "2422680",
    "end": "2429339"
  },
  {
    "text": "nonsense like any design at all designing software with intent software",
    "start": "2429339",
    "end": "2435460"
  },
  {
    "text": "that survives is an exercise in compromise and trade-offs it's why everyone with any experience in",
    "start": "2435460",
    "end": "2441339"
  },
  {
    "text": "designing software has that's been used by real people will pretty much just say it depends whenever you ask them",
    "start": "2441339",
    "end": "2447700"
  },
  {
    "text": "anything this is the kind of it depends as a service talk um you know every design challenge is",
    "start": "2447700",
    "end": "2455079"
  },
  {
    "text": "and it depends answer until the layers of detail appeal back and the correct constraints are discovered and you know",
    "start": "2455079",
    "end": "2461079"
  },
  {
    "text": "most most good design comes from starting off in a very very open room and applying constraints until the",
    "start": "2461079",
    "end": "2467380"
  },
  {
    "text": "design emerges you know a lot of the talk about poor trade-offs I see in software",
    "start": "2467380",
    "end": "2473500"
  },
  {
    "text": "involves people actively not understanding the sources of complexity in the system and the weird design in their software",
    "start": "2473500",
    "end": "2479619"
  },
  {
    "text": "doing things like taking additional dependencies like packages and services for single simple use cases without",
    "start": "2479619",
    "end": "2486940"
  },
  {
    "text": "realizing that the cognitive load of adding those extra dependencies and the associated management of them and the",
    "start": "2486940",
    "end": "2493359"
  },
  {
    "text": "kind of API explosion they introduce is sometimes more expensive than just doing a thing themselves",
    "start": "2493359",
    "end": "2499240"
  },
  {
    "text": "you know there's a lot to be said about the lower risk of maintaining 30 lines of your own code",
    "start": "2499240",
    "end": "2505359"
  },
  {
    "text": "than adopting something you might otherwise get for free but then have to control versioning and all this kind of",
    "start": "2505359",
    "end": "2511300"
  },
  {
    "text": "extra stuff that you don't understand that is owned by somebody else right so there's this healthy tension between",
    "start": "2511300",
    "end": "2516640"
  },
  {
    "text": "doing your own thing and reusing stuff just because it's easy",
    "start": "2516640",
    "end": "2522660"
  },
  {
    "text": "it's interesting because like that sentiment is a really uneasy bed fellow with the the concept that every",
    "start": "2523540",
    "end": "2529240"
  },
  {
    "text": "line of code that you write is a burden right and and this is a complete truism that you write a line of code you're",
    "start": "2529240",
    "end": "2535180"
  },
  {
    "text": "maintaining it you own it this is It's cost like the best amount of code you can probably get away with writing is no",
    "start": "2535180",
    "end": "2540579"
  },
  {
    "text": "code at all and everything else is expensive but at the same time you know this is",
    "start": "2540579",
    "end": "2546520"
  },
  {
    "text": "true for every line of code that you adopt you adopt a line of code you may as well be owning it it's like a puppy honestly",
    "start": "2546520",
    "end": "2553480"
  },
  {
    "text": "um you know something more constrained with a smaller surface area pushes less complexity into your applications",
    "start": "2553480",
    "end": "2559480"
  },
  {
    "text": "now that's really the thing really the the available potential surface area of the code you have is where complexity",
    "start": "2559480",
    "end": "2564640"
  },
  {
    "text": "flows from right as a practical example I recently wrote 200 lines of a program",
    "start": "2564640",
    "end": "2570540"
  },
  {
    "text": "instead of using some static site generation framework because I Googled stuff for three hours",
    "start": "2570540",
    "end": "2577720"
  },
  {
    "text": "and found all the experimental bits and I just you know I can glue together some markdown files it's fine it was easier",
    "start": "2577720",
    "end": "2585160"
  },
  {
    "text": "for me to write a 300 line program than understand the documentation of something that was in constant state of",
    "start": "2585160",
    "end": "2590800"
  },
  {
    "text": "flux so I think that that kind of thing is is real and it's a real tension in all of our software",
    "start": "2590800",
    "end": "2597339"
  },
  {
    "text": "now all your designs should be expressions of these kinds of trade-offs and compromises and gentle balance",
    "start": "2597339",
    "end": "2603160"
  },
  {
    "text": "rather than a single idea layout or concept dragged into its natural",
    "start": "2603160",
    "end": "2608500"
  },
  {
    "text": "position absurdity like use open source for things we get for free because it's cheaper",
    "start": "2608500",
    "end": "2614260"
  },
  {
    "text": "not always use MVC for everything that talks to the internet other than apis",
    "start": "2614260",
    "end": "2619660"
  },
  {
    "text": "right everything is constraints you've always got to understand why",
    "start": "2619660",
    "end": "2626140"
  },
  {
    "text": "now in fact once you start considering things as this kind of sense of a continual trade-off what you realize is",
    "start": "2626140",
    "end": "2633339"
  },
  {
    "text": "instead of rules around system design what you really do is you end up with kind of tests and properties now I don't",
    "start": "2633339",
    "end": "2639400"
  },
  {
    "text": "mean coded tests but tests with which to evaluate the qualities of a design that help you choose the kind of system that",
    "start": "2639400",
    "end": "2645819"
  },
  {
    "text": "you're going to build I want to take you through a few tests that I use to evaluate a good design",
    "start": "2645819",
    "end": "2651280"
  },
  {
    "text": "so that hopefully you can look at your choices from a different perspective or come up with your own kind of tests",
    "start": "2651280",
    "end": "2658200"
  },
  {
    "text": "could this be done with less moving parts and this is kind of a I suppose",
    "start": "2658599",
    "end": "2663640"
  },
  {
    "text": "controversial in the world of poorly implemented microservices but I tend to find if you can do more with less moving",
    "start": "2663640",
    "end": "2669579"
  },
  {
    "text": "things the combined complexity that you impose on your system is reduced you know additional moving Parts",
    "start": "2669579",
    "end": "2676240"
  },
  {
    "text": "repositories packages dependencies functions microservices should only be added when the total cost of maintaining",
    "start": "2676240",
    "end": "2682839"
  },
  {
    "text": "them and all of their Associated build pipelines and tests and zests and desk",
    "start": "2682839",
    "end": "2688300"
  },
  {
    "text": "scanning and whatever else you have to do is lower than a localized solution to the problem",
    "start": "2688300",
    "end": "2693640"
  },
  {
    "text": "right and that stuff is very very big most of the time there are many places in our ecosystems where ballooning",
    "start": "2693640",
    "end": "2699640"
  },
  {
    "text": "complexity makes working with our systems more complex than it should be we should never just extract out parts",
    "start": "2699640",
    "end": "2706359"
  },
  {
    "text": "of our application because it looks nice right not a good enough reason",
    "start": "2706359",
    "end": "2712318"
  },
  {
    "text": "breakup systems into individual components only when they need to ship scale deploy or fit More Humans around",
    "start": "2712480",
    "end": "2719740"
  },
  {
    "text": "them independently is this operable in a production",
    "start": "2719740",
    "end": "2726460"
  },
  {
    "text": "environment similarly software systems are hard to observe deploy manage and automate slow",
    "start": "2726460",
    "end": "2732280"
  },
  {
    "text": "the pace of change right we should always prefer software that can be trivially managed in production that reduces our operational",
    "start": "2732280",
    "end": "2739119"
  },
  {
    "text": "burden where possible software that's built with maintenance and observability in is fundamentally better than software",
    "start": "2739119",
    "end": "2745000"
  },
  {
    "text": "that isn't software where the design is difficult to configure or deploy well",
    "start": "2745000",
    "end": "2750220"
  },
  {
    "text": "that's cumbersome it's bad design and is this easy to change",
    "start": "2750220",
    "end": "2756880"
  },
  {
    "text": "now this is the the single truism of software in in the 2020s I can guarantee",
    "start": "2756880",
    "end": "2762520"
  },
  {
    "text": "you'll be changing your software so the bit the best quality of your software software you can change easily simple as",
    "start": "2762520",
    "end": "2768160"
  },
  {
    "text": "that um because we should avoid over design and focus on Simplicity first especially",
    "start": "2768160",
    "end": "2773980"
  },
  {
    "text": "we require designs to be easier to modify than the premature optimization of extensible designs that never get",
    "start": "2773980",
    "end": "2781060"
  },
  {
    "text": "extended you know it's the the old adage of you know if you're Building Systems incrementally you want to build a",
    "start": "2781060",
    "end": "2788140"
  },
  {
    "text": "skateboard than a bike than a car not a chassis that doesn't go anywhere then",
    "start": "2788140",
    "end": "2794020"
  },
  {
    "text": "put a seat on it and eventually put four wheels on it right software that you can change is always better",
    "start": "2794020",
    "end": "2800818"
  },
  {
    "text": "so I guess what I'm really talking about again and at the end of the day is just putting",
    "start": "2800980",
    "end": "2806619"
  },
  {
    "text": "the design back in software and putting this thoughtfulness around form back into software",
    "start": "2806619",
    "end": "2812079"
  },
  {
    "text": "um I just want you to write your software with care and with purpose I like to joke you should write your",
    "start": "2812079",
    "end": "2818560"
  },
  {
    "text": "software like you're writing it for someone you're totally in love with right like totally besotted with because",
    "start": "2818560",
    "end": "2823660"
  },
  {
    "text": "we feel things um I want you to think about your the design of your software I want you to think about the reader I want you to",
    "start": "2823660",
    "end": "2830020"
  },
  {
    "text": "think about what the form and flow of your applications tell them because you're always telling them something",
    "start": "2830020",
    "end": "2835960"
  },
  {
    "text": "I want you to use all of those forms of expression available to you in your code bases to communicate meaning and intent",
    "start": "2835960",
    "end": "2843220"
  },
  {
    "text": "and I want you to remember that different problem spaces and different solutions require different aesthetic",
    "start": "2843220",
    "end": "2849160"
  },
  {
    "text": "viewpoints and we should embrace that like that's great that's that's wonderful lest we damn ourselves to",
    "start": "2849160",
    "end": "2855280"
  },
  {
    "text": "literally everything either being a jumble of components and HTTP calls or an MVC app because those are the the two",
    "start": "2855280",
    "end": "2862359"
  },
  {
    "text": "designs right that's basically it uh it doesn't have to be that way and",
    "start": "2862359",
    "end": "2868000"
  },
  {
    "text": "when you use form and design to Telegraph intent the work becomes better because your care shows like I can",
    "start": "2868000",
    "end": "2875079"
  },
  {
    "text": "really tell when people have taken the time now I was on a podcast a couple of years ago and at the end of like this",
    "start": "2875079",
    "end": "2880359"
  },
  {
    "text": "hour and a half they hit me with that classic question of like oh what advice would you give to yourself 20 years ago",
    "start": "2880359",
    "end": "2885460"
  },
  {
    "text": "at the start of your career and I know the answer now completely",
    "start": "2885460",
    "end": "2891160"
  },
  {
    "text": "take more time  the deadlines take more time",
    "start": "2891160",
    "end": "2896619"
  },
  {
    "text": "all of the best design work all the best implementation I do now I'll tell you what I do I finish writing",
    "start": "2896619",
    "end": "2902380"
  },
  {
    "text": "whatever code I'm writing I put some music on I pour a drink can I just read it and I read it again and again and",
    "start": "2902380",
    "end": "2909579"
  },
  {
    "text": "again and I scrutinize every single line and I just think why did I do it that way why did I make those choices because",
    "start": "2909579",
    "end": "2916359"
  },
  {
    "text": "if I can't justify it to myself in the nice quiet late night where I'm sitting",
    "start": "2916359",
    "end": "2921520"
  },
  {
    "text": "there reading my own work I have no expectation that anybody else will understand the software afterwards right",
    "start": "2921520",
    "end": "2927099"
  },
  {
    "text": "take more time 20 more time you know the software that's right when you deliver it will be better than when",
    "start": "2927099",
    "end": "2933280"
  },
  {
    "text": "it's broken right it's just it's and it's kind of Zen and kind of chill put a",
    "start": "2933280",
    "end": "2938619"
  },
  {
    "text": "good album on um I want to leave you with a few reading recommendations of work that",
    "start": "2938619",
    "end": "2945520"
  },
  {
    "text": "I've ripped off liberally in the production of this talk um I don't really think there are many",
    "start": "2945520",
    "end": "2951339"
  },
  {
    "text": "books on this topic honestly I don't think we talk about design very much but um a philosophy of software design by",
    "start": "2951339",
    "end": "2957460"
  },
  {
    "text": "John us to help is is brilliant honestly read it it's so good um your code is a crime scene by Adam",
    "start": "2957460",
    "end": "2964180"
  },
  {
    "text": "chawn Hill there's a there's a sequel book as well I forget its name um was very very instrumental in the way",
    "start": "2964180",
    "end": "2970660"
  },
  {
    "text": "I was thinking about looking at kind of the body of work and the signals that it produces and Mark Seaman just put out a",
    "start": "2970660",
    "end": "2977079"
  },
  {
    "text": "really good book called code that fits in your head um all three of these books offer far more",
    "start": "2977079",
    "end": "2982180"
  },
  {
    "text": "exhaustive examples and I can ever fit in a conference session and you know we should support our community and support",
    "start": "2982180",
    "end": "2988119"
  },
  {
    "text": "our authors and I figure if I'm going to tell you a burn all your copies of clean code you should replace them with",
    "start": "2988119",
    "end": "2993220"
  },
  {
    "text": "something better right all those books are better way better",
    "start": "2993220",
    "end": "2998818"
  },
  {
    "text": "thank you very much",
    "start": "2999220",
    "end": "3002000"
  },
  {
    "text": "[Applause] foreign I'm going to say any questions but I",
    "start": "3004400",
    "end": "3011400"
  },
  {
    "text": "still can't see a single person so I'm going to have to basically walk over here now oh my God that's a room full of",
    "start": "3011400",
    "end": "3017280"
  },
  {
    "text": "people that's vaguely terrifying hi hi um I can't see any hand so I presume",
    "start": "3017280",
    "end": "3023280"
  },
  {
    "text": "you're all uh damned into stunned silence oh please",
    "start": "3023280",
    "end": "3028160"
  },
  {
    "text": "[Music] for the spaghetti Club yeah",
    "start": "3033460",
    "end": "3039020"
  },
  {
    "text": "that's a really great a really great comment so the the comment was not defending clean code but it was published many years ago at a time when",
    "start": "3039960",
    "end": "3046980"
  },
  {
    "text": "developers were struggling fighting spaghetti code um do we think that maybe it's an artifact of its time that has served its",
    "start": "3046980",
    "end": "3053940"
  },
  {
    "text": "purpose and that's fundamentally a good thing I think there are some valuable lessons in clean code but let me",
    "start": "3053940",
    "end": "3060059"
  },
  {
    "text": "summarize them in two sentences name your variables well",
    "start": "3060059",
    "end": "3065640"
  },
  {
    "text": "one sentence name your functions well two sentences um you know what like I found that book",
    "start": "3065640",
    "end": "3072960"
  },
  {
    "text": "interesting when I first read it when I was a baby Dev and I think it did offer",
    "start": "3072960",
    "end": "3078540"
  },
  {
    "text": "me some value um I think everything from about the third chapter onwards is garbage though",
    "start": "3078540",
    "end": "3084540"
  },
  {
    "text": "it's a bunch of like asinine old Java junk and the second half was wrong at the time let alone wrong now",
    "start": "3084540",
    "end": "3091740"
  },
  {
    "text": "um read the first three chapters by all means um interestingly though I think that my biggest criticism of of clean",
    "start": "3091740",
    "end": "3097500"
  },
  {
    "text": "code is actually drives um it doesn't understand the fact that decomposing",
    "start": "3097500",
    "end": "3102599"
  },
  {
    "text": "functions into lots of tiny functions increases the cognitive load on the author rather than reduces it right so",
    "start": "3102599",
    "end": "3109559"
  },
  {
    "text": "all of the examples are like oh I've took these two lines and given them a name but as soon as you do that at the call",
    "start": "3109559",
    "end": "3115500"
  },
  {
    "text": "site you don't know what sins are hidden under those functions so actually the cognitive load increases and I think a",
    "start": "3115500",
    "end": "3120839"
  },
  {
    "text": "lot of like the structural design advice and clean code is bad to harmful",
    "start": "3120839",
    "end": "3126359"
  },
  {
    "text": "um I wouldn't say catastrophic but like I wouldn't recommend it um and again I think it's because",
    "start": "3126359",
    "end": "3131880"
  },
  {
    "text": "everything requires its context but I do think you know it's worth it is worth saying you know articulating that thing",
    "start": "3131880",
    "end": "3137339"
  },
  {
    "text": "I think at the time clean code was written there weren't any other books talking about these specific things and",
    "start": "3137339",
    "end": "3143520"
  },
  {
    "text": "I think that's the place that it serves in like the The Continuous continuity in the Canon of software books",
    "start": "3143520",
    "end": "3150740"
  },
  {
    "text": "no just staring at me it's cool thank you so much for coming I really really do hope you enjoyed this",
    "start": "3152760",
    "end": "3158099"
  },
  {
    "text": "um the green one's the good one because then they invite me back [Applause]",
    "start": "3158099",
    "end": "3164760"
  },
  {
    "text": "love you all see something good",
    "start": "3164760",
    "end": "3168559"
  }
]