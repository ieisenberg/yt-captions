[
  {
    "text": "cool morning everyone hopefully that'll",
    "start": "10170",
    "end": "17539"
  },
  {
    "text": "settle down who here is using react not",
    "start": "17539",
    "end": "26090"
  },
  {
    "text": "many that's good what I want to talk to",
    "start": "26090",
    "end": "31189"
  },
  {
    "text": "you today about is let you know what's coming in the new version of react so",
    "start": "31189",
    "end": "36260"
  },
  {
    "text": "there's this thing that's been talked about in the react community for probably over a year may be coming up to",
    "start": "36260",
    "end": "43670"
  },
  {
    "text": "a year and a half two years called react fiver it's been a long time in the making and there's a heap of excitement",
    "start": "43670",
    "end": "50840"
  },
  {
    "text": "about around the react community by the end of this session you'll know what it",
    "start": "50840",
    "end": "56000"
  },
  {
    "text": "is and hopefully you're a bit excited about what fibre is and how reactors",
    "start": "56000",
    "end": "62540"
  },
  {
    "text": "actually reappropriation Xand the reasons it looks the way it does so my",
    "start": "62540",
    "end": "74240"
  },
  {
    "text": "name is Jake I work over in Perth at seven West media specifically I work",
    "start": "74240",
    "end": "80569"
  },
  {
    "text": "under WI news so I helped build the West calm day you get annoying oh well",
    "start": "80569",
    "end": "88240"
  },
  {
    "text": "suggestions I'll see if we can settle it",
    "start": "88240",
    "end": "95569"
  },
  {
    "text": "down over the next few minutes so I helped build the West calm day you which",
    "start": "95569",
    "end": "101959"
  },
  {
    "text": "is a news website we started this project just about a year ago and WI",
    "start": "101959",
    "end": "107420"
  },
  {
    "text": "news actually didn't have any of their own tech all of their tech was",
    "start": "107420",
    "end": "112759"
  },
  {
    "text": "previously out sourced so we started a team and we decided to use react to",
    "start": "112759",
    "end": "119359"
  },
  {
    "text": "build the news platform it's been a very interesting year with built a new site",
    "start": "119359",
    "end": "126200"
  },
  {
    "text": "from scratch integrated with the print CMS and we use react with server-side rendering so really new technologies so",
    "start": "126200",
    "end": "136040"
  },
  {
    "text": "I got involved with react kind of a couple of years ago in London doing financial trading systems previously I",
    "start": "136040",
    "end": "143600"
  },
  {
    "text": "was doing WPF and MVC and a mixture of other things and react was being one of",
    "start": "143600",
    "end": "149540"
  },
  {
    "text": "the first technologies for quite a while that just got me really excited and year I'm still loving it so one of them this",
    "start": "149540",
    "end": "159050"
  },
  {
    "text": "court describes quite well they one of the rationale behind react so Dykstra",
    "start": "159050",
    "end": "167900"
  },
  {
    "text": "says our intellectual powers are rather geared towards master static relations",
    "start": "167900",
    "end": "173110"
  },
  {
    "text": "rather than our ability to process things evolving in time so what does",
    "start": "173110",
    "end": "180080"
  },
  {
    "text": "that actually mean well if we just simplify it back down the reason we like",
    "start": "180080",
    "end": "187040"
  },
  {
    "text": "server side and request response traditional MVC apps is it's like ordering a beer you just ask for a beer",
    "start": "187040",
    "end": "194030"
  },
  {
    "text": "and then you get it and then you ask for another one and you get it it's stateless you don't have to worry about",
    "start": "194030",
    "end": "200360"
  },
  {
    "text": "things changing over time single page applications tend to be more like this",
    "start": "200360",
    "end": "206450"
  },
  {
    "text": "where as things change over time you get all this state that builds up in your",
    "start": "206450",
    "end": "212030"
  },
  {
    "text": "DOM and and it sort of evolves over time and it becomes really hard to rationalize so at Facebook they're",
    "start": "212030",
    "end": "220819"
  },
  {
    "text": "really struggling with this react as a framework built and supported by Facebook and it was a homegrown solution",
    "start": "220819",
    "end": "229340"
  },
  {
    "text": "to this problem they just found that their apps were getting when website was just getting really really complicated",
    "start": "229340",
    "end": "235609"
  },
  {
    "text": "especially on admin side of things so",
    "start": "235609",
    "end": "241190"
  },
  {
    "text": "they wanted to just try and change the paradigm that they were using to build web applications it actually took",
    "start": "241190",
    "end": "249049"
  },
  {
    "text": "inspiration from a couple of different things but one of them is the way games actually work so games have a game loop",
    "start": "249049",
    "end": "259849"
  },
  {
    "text": "what they do is they process input update the state of the game and then they rerender it's too expensive to try",
    "start": "259849",
    "end": "266870"
  },
  {
    "text": "and figure out how to change the what's rendered on the screen so they just re",
    "start": "266870",
    "end": "271880"
  },
  {
    "text": "render at 60 frames a second react actually takes that it's like how can we",
    "start": "271880",
    "end": "277760"
  },
  {
    "text": "apply the same model to our single page applications where I've got my application state and I just want to",
    "start": "277760",
    "end": "283849"
  },
  {
    "text": "re-render it we already had that with handlebars",
    "start": "283849",
    "end": "290720"
  },
  {
    "text": "right who's used handlebars before cool old-school templating javascript library",
    "start": "290720",
    "end": "296930"
  },
  {
    "text": "uses string interpolation essentially and you pass it some state and you get a Dom out the other side awesome rendered",
    "start": "296930",
    "end": "304220"
  },
  {
    "text": "text so they started off by reinventing",
    "start": "304220",
    "end": "309380"
  },
  {
    "text": "the wheel essentially but there are a few reasons why handlebars doesn't work",
    "start": "309380",
    "end": "314870"
  },
  {
    "text": "for any sort of reasonable application every time you re-evaluate that template you destroy the whole dom and then",
    "start": "314870",
    "end": "322100"
  },
  {
    "text": "recreate it so you lose any sort of focus or scroll position all of that sort of stuff it's also the dom is",
    "start": "322100",
    "end": "329240"
  },
  {
    "text": "really expensive to interact with templates also are not standard syntax",
    "start": "329240",
    "end": "335630"
  },
  {
    "text": "so each time you go to a different templating library they have a different way of doing string interpolation or",
    "start": "335630",
    "end": "341500"
  },
  {
    "text": "binding to things different way of doing loops and conditionals and every time",
    "start": "341500",
    "end": "346790"
  },
  {
    "text": "you want to have some sort of extra logic in your templates you have to invent a new way of solving that problem",
    "start": "346790",
    "end": "354010"
  },
  {
    "text": "so for a number of reasons we don't want to go down templates ainÂ´t libraries",
    "start": "354010",
    "end": "360500"
  },
  {
    "text": "like angular and knockout j/s took this a step further where he created your model and you've got your template and",
    "start": "360500",
    "end": "366590"
  },
  {
    "text": "then you bind between the two so when your model changes you can update bits in the Dom kind of gives you the best of",
    "start": "366590",
    "end": "372860"
  },
  {
    "text": "both worlds still quite hard to reason about what's happening in your",
    "start": "372860",
    "end": "377990"
  },
  {
    "text": "application so when they're rebuilding react they came up with a few design",
    "start": "377990",
    "end": "383000"
  },
  {
    "text": "principles that they wanted to anchor react on the first one is composition we",
    "start": "383000",
    "end": "390470"
  },
  {
    "text": "all know sort of the the recommendations around we prefer composition over",
    "start": "390470",
    "end": "396230"
  },
  {
    "text": "inheritance that's a good way to scat build a app that's easy just sort of scale and reason about so composition",
    "start": "396230",
    "end": "402650"
  },
  {
    "text": "and react had to be first-class we wanted to be able to just build using components bring them together easily be",
    "start": "402650",
    "end": "409040"
  },
  {
    "text": "able to refactor and and just build our application up from all of these little",
    "start": "409040",
    "end": "415550"
  },
  {
    "text": "parts they wanted a common abstraction as well",
    "start": "415550",
    "end": "420949"
  },
  {
    "text": "so they didn't want to include everything in the library because then",
    "start": "420949",
    "end": "426830"
  },
  {
    "text": "you you don't let the community figure out the best ways what what are the best patterns to do and let things evolve",
    "start": "426830",
    "end": "433460"
  },
  {
    "text": "over time but they also didn't want to include nothing in react because when",
    "start": "433460",
    "end": "439129"
  },
  {
    "text": "you've got a library and you everyone's building applications if we have three ways of doing state management the",
    "start": "439129",
    "end": "446300"
  },
  {
    "text": "lowest common denominator for react is what comes in so all of these different",
    "start": "446300",
    "end": "451639"
  },
  {
    "text": "libraries if they say you've got different ways of passing information",
    "start": "451639",
    "end": "457039"
  },
  {
    "text": "through different components if react didn't specify how to do that",
    "start": "457039",
    "end": "463060"
  },
  {
    "text": "you just would have a lot divergence in the community and that sort of stuff so they wanted to include a minimal amount",
    "start": "463060",
    "end": "469849"
  },
  {
    "text": "of features in there but enough that it was powerful and gave you a really good base to extend that they also wanted to",
    "start": "469849",
    "end": "480139"
  },
  {
    "text": "get make sure we had escape hatches so rather than being a all-encompassing framework that has all of these solves",
    "start": "480139",
    "end": "486590"
  },
  {
    "text": "all of these problems as soon as you hit a limitation of react how can you get out and do it the way you've always done",
    "start": "486590",
    "end": "493610"
  },
  {
    "text": "it so make sure there's these easy escape hatches so we don't run into these are limitations Facebook currently",
    "start": "493610",
    "end": "503840"
  },
  {
    "text": "have over 20,000 react components so every time they make changes to the",
    "start": "503840",
    "end": "509930"
  },
  {
    "text": "library that's gonna hurt them so stability was in terms of API was super",
    "start": "509930",
    "end": "517010"
  },
  {
    "text": "important they needed to be able to let react evolve over time and get better but not constantly be spending all of",
    "start": "517010",
    "end": "524029"
  },
  {
    "text": "their time refactoring all these components so make sure it's stable but",
    "start": "524029",
    "end": "530270"
  },
  {
    "text": "the library can also evolve interoperability make sure it can work",
    "start": "530270",
    "end": "540019"
  },
  {
    "text": "with the existing community we don't want to create a separate ecosystem that",
    "start": "540019",
    "end": "545149"
  },
  {
    "text": "can't interrupt with the rest of the web scheduling this one is one of the most",
    "start": "545149",
    "end": "552910"
  },
  {
    "text": "important things when it comes to fiber the API for react once they want the",
    "start": "552910",
    "end": "560330"
  },
  {
    "text": "library to be able to make good decisions on when things should happen so you'll noticed in data binding sort",
    "start": "560330",
    "end": "569660"
  },
  {
    "text": "of paradigms if you're getting a lot of updates you have to you then your",
    "start": "569660",
    "end": "576140"
  },
  {
    "text": "application slows down and it's up to you to stop all of these updates happening so you don't kill the",
    "start": "576140",
    "end": "582529"
  },
  {
    "text": "performance of your application reacts API has been designed to invert that you",
    "start": "582529",
    "end": "588680"
  },
  {
    "text": "should be able to tell react what you want to do and not have to try and throttle things yourself",
    "start": "588680",
    "end": "595570"
  },
  {
    "text": "so shadowing was first class the library should be shelling when work happens",
    "start": "595570",
    "end": "601370"
  },
  {
    "text": "because it can make better decisions hopefully the new can so over time the",
    "start": "601370",
    "end": "606950"
  },
  {
    "text": "rip from the library can improve and get better and your application just gets better with it there's a lot of",
    "start": "606950",
    "end": "615980"
  },
  {
    "text": "developers at Facebook right so developer experience was super important we don't want cryptic error messages we",
    "start": "615980",
    "end": "622550"
  },
  {
    "text": "want to be able to debug it easily we want to be able to like point people in",
    "start": "622550",
    "end": "628130"
  },
  {
    "text": "the right direction so we've actually got our developers being productive and not wasting time on silly issues so",
    "start": "628130",
    "end": "634640"
  },
  {
    "text": "really nice you'll notice when you start using react when something goes wrong or even if it's not going wrong but you're",
    "start": "634640",
    "end": "641029"
  },
  {
    "text": "using the wrong pattern it'll be telling you hey you should be doing this click",
    "start": "641029",
    "end": "646190"
  },
  {
    "text": "on this link to know why that sort of thing so it's constantly informing developers on how to do things better",
    "start": "646190",
    "end": "652339"
  },
  {
    "text": "and finding detecting when you're doing bad things and encouraging you to fix",
    "start": "652339",
    "end": "658640"
  },
  {
    "text": "them and then debugging so when",
    "start": "658640",
    "end": "664130"
  },
  {
    "text": "something goes wrong with react because it's all component orientated with really explicit data flows super easy to",
    "start": "664130",
    "end": "671930"
  },
  {
    "text": "sort of see which at which point a component poisoned the tree so to speak",
    "start": "671930",
    "end": "677959"
  },
  {
    "text": "so you can go in and see are this component here has changed the data that's being passed",
    "start": "677959",
    "end": "683180"
  },
  {
    "text": "down so with all that said how does",
    "start": "683180",
    "end": "688430"
  },
  {
    "text": "react actually work we have a react",
    "start": "688430",
    "end": "694130"
  },
  {
    "text": "component here I've lost syntax hider highlighting for some reason that's frustrating I'm not",
    "start": "694130",
    "end": "708650"
  },
  {
    "text": "sure how to fix this let's go there we go can people read that not really",
    "start": "708650",
    "end": "716350"
  },
  {
    "text": "let us interestingly enough my slides are built-in react as well",
    "start": "724200",
    "end": "731100"
  },
  {
    "text": "how's that everyone read that excellent so at the top we have an agenda react",
    "start": "755860",
    "end": "764930"
  },
  {
    "text": "component who's seen a react component before call a lot of people excellent so",
    "start": "764930",
    "end": "772480"
  },
  {
    "text": "this is known as a stateful component and we extend we use es6 syntax and",
    "start": "772480",
    "end": "777770"
  },
  {
    "text": "extend react component the only requirement for a react component is it",
    "start": "777770",
    "end": "784550"
  },
  {
    "text": "has a render function and this tells react what this component actually wants",
    "start": "784550",
    "end": "789830"
  },
  {
    "text": "to display on the screen because it's all JavaScript we just returned a",
    "start": "789830",
    "end": "796570"
  },
  {
    "text": "representation of what we want rendered so if my current states loading I want",
    "start": "796570",
    "end": "802760"
  },
  {
    "text": "to return a div that says loading we can",
    "start": "802760",
    "end": "809120"
  },
  {
    "text": "also compose our different application components together so if I was building",
    "start": "809120",
    "end": "814520"
  },
  {
    "text": "the NDC schedule builder we can have a schedule component consuming normal HTML",
    "start": "814520",
    "end": "823910"
  },
  {
    "text": "Dom elements and like custom components exactly the same makes it really really",
    "start": "823910",
    "end": "830570"
  },
  {
    "text": "easy to extend over time we can then pass what are called props to are these",
    "start": "830570",
    "end": "836839"
  },
  {
    "text": "custom components so I'm passing down a list of talks that I've saved that I'm interested in all of the talks at NDC",
    "start": "836839",
    "end": "845720"
  },
  {
    "text": "and you can also pass functions as props so this add to schedule is just a",
    "start": "845720",
    "end": "852589"
  },
  {
    "text": "callback so when the scheduled component wants to add something to the schedule",
    "start": "852589",
    "end": "857930"
  },
  {
    "text": "it just calls this prop it then sets state so when you extend react component",
    "start": "857930",
    "end": "866330"
  },
  {
    "text": "that component is allowed to have state the way we set state is using a function",
    "start": "866330",
    "end": "872750"
  },
  {
    "text": "called set state when we talked about the design prints are all around scheduling this is a really keep design",
    "start": "872750",
    "end": "879410"
  },
  {
    "text": "decision so I can call set state as many times as I want and it's up to react",
    "start": "879410",
    "end": "885380"
  },
  {
    "text": "when it actually takes that state calls render so you can change the",
    "start": "885380",
    "end": "892829"
  },
  {
    "text": "different you can hook in and say okay react I'd like you to just render using",
    "start": "892829",
    "end": "898170"
  },
  {
    "text": "set animation frame and just render re render my app at 60 frames a second much",
    "start": "898170",
    "end": "903449"
  },
  {
    "text": "like a game it's probably not going to give you a great performance doing that but it's an option so using set state",
    "start": "903449",
    "end": "911519"
  },
  {
    "text": "that can happen and all at least different components and react can then batch all of those together and do a",
    "start": "911519",
    "end": "917309"
  },
  {
    "text": "single render pass it's up to react how it actually performs that because that's",
    "start": "917309",
    "end": "923819"
  },
  {
    "text": "asynchronous and it gives you no guarantees this is one of the things that a lot has allowed react to",
    "start": "923819",
    "end": "930540"
  },
  {
    "text": "re-implement it score without breaking the public API so I call add schedule it",
    "start": "930540",
    "end": "939899"
  },
  {
    "text": "calls set state at some point probably within a very very short time react will",
    "start": "939899",
    "end": "946110"
  },
  {
    "text": "call render which then allows me to go from a loading state and just render out",
    "start": "946110",
    "end": "951540"
  },
  {
    "text": "what's happening so very declarative you have your state and when you render it's",
    "start": "951540",
    "end": "958139"
  },
  {
    "text": "pretty much a pure function state goes through a render process I am my rendered application much the same as",
    "start": "958139",
    "end": "965459"
  },
  {
    "text": "handlebars this is called a stateless",
    "start": "965459",
    "end": "972720"
  },
  {
    "text": "component so it's just a JavaScript variable that is a function so everyone",
    "start": "972720",
    "end": "979889"
  },
  {
    "text": "using es6 typescript cool so for those",
    "start": "979889",
    "end": "985350"
  },
  {
    "text": "that haven't seen this this is a fat arrow syntax this is just a JavaScript",
    "start": "985350",
    "end": "990929"
  },
  {
    "text": "function it's called a pure component or a stateless component because it just",
    "start": "990929",
    "end": "996449"
  },
  {
    "text": "takes props and then produces some markup quite simple",
    "start": "996449",
    "end": "1002230"
  },
  {
    "text": "finally we have lifecycle components so lifecycle methods so here I can hook",
    "start": "1003519",
    "end": "1009529"
  },
  {
    "text": "into component will mount this happens when my react component is going to be",
    "start": "1009529",
    "end": "1014899"
  },
  {
    "text": "mounted into the Dom but it hasn't yet there's other ones like component did",
    "start": "1014899",
    "end": "1019999"
  },
  {
    "text": "mount that after my components been mounted into the Dom it lets me know we",
    "start": "1019999",
    "end": "1025159"
  },
  {
    "text": "can also have component will unmount so the really explicit lifecycle methods in",
    "start": "1025159",
    "end": "1030199"
  },
  {
    "text": "react to make it really easy reason about when things are coming in I can subscribe to changes when it's going to",
    "start": "1030199",
    "end": "1036740"
  },
  {
    "text": "be destroyed I can unsubscribe that sort of thing so in there I'm executing an",
    "start": "1036740",
    "end": "1042709"
  },
  {
    "text": "async method and then continuation so I'm fetching the agenda then once I've",
    "start": "1042709",
    "end": "1048950"
  },
  {
    "text": "got it I'm setting some state once again which will cause the rerender and that's",
    "start": "1048950",
    "end": "1058399"
  },
  {
    "text": "react in a nutshell Oh anyway so let's",
    "start": "1058399",
    "end": "1063590"
  },
  {
    "text": "get back to the original question what's fiber so react has two things it has the",
    "start": "1063590",
    "end": "1072590"
  },
  {
    "text": "renderer on one side and then it has the reconciler on the other so when we",
    "start": "1072590",
    "end": "1079309"
  },
  {
    "text": "return some JSX which is the XML kind of",
    "start": "1079309",
    "end": "1084409"
  },
  {
    "text": "thing within our render function it creates what's called a virtual Dom now",
    "start": "1084409",
    "end": "1091010"
  },
  {
    "text": "this is just an in-memory representation of what you want rendered so I have a",
    "start": "1091010",
    "end": "1098059"
  },
  {
    "text": "div that creates a div element when react gets given that element it will",
    "start": "1098059",
    "end": "1104179"
  },
  {
    "text": "actually create a div in the real Dom the thing that turns that object",
    "start": "1104179",
    "end": "1110809"
  },
  {
    "text": "structure from just a JavaScript object that says I want two div with some text",
    "start": "1110809",
    "end": "1116090"
  },
  {
    "text": "in it to actually putting it in the Dom that's the role of the renderer we have a Dom renderer we also have like a Dom",
    "start": "1116090",
    "end": "1124279"
  },
  {
    "text": "to string or two string renderer which you can use on the server so rather than",
    "start": "1124279",
    "end": "1130730"
  },
  {
    "text": "going document or create element and actually building up a Dom it can just render it to a",
    "start": "1130730",
    "end": "1136100"
  },
  {
    "text": "String much like in an NBC app or something like that but that doesn't",
    "start": "1136100",
    "end": "1143419"
  },
  {
    "text": "help us make changes over time we're constantly re-rendering our app and what",
    "start": "1143419",
    "end": "1148549"
  },
  {
    "text": "the virtual daams responsibility is is when you create a new virtual Dom react",
    "start": "1148549",
    "end": "1154789"
  },
  {
    "text": "will actually differt with what the previous virtual Dom was it'll then identify any changes that have happened",
    "start": "1154789",
    "end": "1161030"
  },
  {
    "text": "between the previous render and the new renderer it'll then create a patch which",
    "start": "1161030",
    "end": "1166190"
  },
  {
    "text": "it'll apply to the real DOM and that's one of the breakthroughs of react",
    "start": "1166190",
    "end": "1173230"
  },
  {
    "text": "so what fiber is firstly is in react 15",
    "start": "1173230",
    "end": "1179450"
  },
  {
    "text": "and below these two things were just part of react they are tightly coupled things like react native had to dive",
    "start": "1179450",
    "end": "1186740"
  },
  {
    "text": "into the internals then override a bunch of internal stuff so it would actually work react 16 and fibre separates these",
    "start": "1186740",
    "end": "1195590"
  },
  {
    "text": "two so now there's a an official documented renderer API which makes it really really easy to extend react so it",
    "start": "1195590",
    "end": "1202549"
  },
  {
    "text": "can be rendered to other things there's actually a huge amount of renderers now",
    "start": "1202549",
    "end": "1208520"
  },
  {
    "text": "and it's since react 16 has got released or the beta there's been a heap being",
    "start": "1208520",
    "end": "1213740"
  },
  {
    "text": "created so react native that allows us to use the same components right in",
    "start": "1213740",
    "end": "1218900"
  },
  {
    "text": "JavaScript except it projects it renders out to a native component so that could",
    "start": "1218900",
    "end": "1225320"
  },
  {
    "text": "be Android iOS Windows 10 app store",
    "start": "1225320",
    "end": "1230409"
  },
  {
    "text": "you've got all of these like opportunities there we've got react VR which allows us to",
    "start": "1230409",
    "end": "1237530"
  },
  {
    "text": "use the same react components and actually render to a VR environment",
    "start": "1237530",
    "end": "1243010"
  },
  {
    "text": "react canvas allows you to actually draw things with react react PDF you can",
    "start": "1243010",
    "end": "1251659"
  },
  {
    "text": "render your components into a PDF document there's also react word for those sort",
    "start": "1251659",
    "end": "1256909"
  },
  {
    "text": "of things a novel one that I saw a couple of days ago is react FS which is",
    "start": "1256909",
    "end": "1262789"
  },
  {
    "text": "allows you to render to a file system so say you wanted to create a templating library or I am",
    "start": "1262789",
    "end": "1269150"
  },
  {
    "text": "like something like yeoman that actually bootstrap to a project you can create a",
    "start": "1269150",
    "end": "1275330"
  },
  {
    "text": "a representation of the files that you want using JSX",
    "start": "1275330",
    "end": "1281450"
  },
  {
    "text": "and then say rendered file system and it'll actually create all of these files and directory structures on disk but the",
    "start": "1281450",
    "end": "1290270"
  },
  {
    "text": "most novel one that I'm looking at at the moment is we have a few designers and they love sketch and there's always",
    "start": "1290270",
    "end": "1297890"
  },
  {
    "text": "this problem of we've got a component library with all of these react components and they've got this library",
    "start": "1297890",
    "end": "1304400"
  },
  {
    "text": "of all of these sketch components and when we're building we have to like measure and see what the margins are in",
    "start": "1304400",
    "end": "1310940"
  },
  {
    "text": "sketch the people nice people at air B&B have been suffering from this and they",
    "start": "1310940",
    "end": "1316790"
  },
  {
    "text": "thought well we could use react to make this better so their component library",
    "start": "1316790",
    "end": "1322490"
  },
  {
    "text": "can render to a sketch document so as they make changes to all of their",
    "start": "1322490",
    "end": "1328550"
  },
  {
    "text": "components that they're using to build the site they're actually rendering these out to sketch components and",
    "start": "1328550",
    "end": "1334550"
  },
  {
    "text": "sketch documents which is a rapid prototyping design tool which means",
    "start": "1334550",
    "end": "1340700"
  },
  {
    "text": "things are always in sync pretty novel concept and it allows you to render to",
    "start": "1340700",
    "end": "1345830"
  },
  {
    "text": "the web or to sketch or PDFs and it's the same components pretty powerful",
    "start": "1345830",
    "end": "1350929"
  },
  {
    "text": "concept so fiber was separating those two and it's now super easy for you to",
    "start": "1350929",
    "end": "1356210"
  },
  {
    "text": "actually write your own renderers the",
    "start": "1356210",
    "end": "1361370"
  },
  {
    "text": "other thing that that fiber is trying to solve is javascript in the browser and",
    "start": "1361370",
    "end": "1368059"
  },
  {
    "text": "the node has a single event loop we can't get away from that the world would",
    "start": "1368059",
    "end": "1373610"
  },
  {
    "text": "break if we tried to make JavaScript multi-threaded so this is going to be a limitation of the environment going",
    "start": "1373610",
    "end": "1379640"
  },
  {
    "text": "forward this causes quite a few problems over time the current rendering model",
    "start": "1379640",
    "end": "1390800"
  },
  {
    "text": "inside react they call the stack renderer and what happens is it starts",
    "start": "1390800",
    "end": "1398540"
  },
  {
    "text": "at the top and recursively goes down through all of these components and renders them what this is is a",
    "start": "1398540",
    "end": "1407179"
  },
  {
    "text": "triangle that has a whole lot of smaller triangles in it and then smaller triangles again and then finally has a",
    "start": "1407179",
    "end": "1414320"
  },
  {
    "text": "bunch of circles in it with a number so there's two types of animations going on",
    "start": "1414320",
    "end": "1420799"
  },
  {
    "text": "here there's one that is making the whole thing smaller and larger and the other",
    "start": "1420799",
    "end": "1426650"
  },
  {
    "text": "one is every so that's happening sort of every 16 milliseconds or so too",
    "start": "1426650",
    "end": "1432559"
  },
  {
    "text": "you want to have a nice smooth animation but we've also every second we're incrementing the number that's in all of",
    "start": "1432559",
    "end": "1439159"
  },
  {
    "text": "these little components reactors not",
    "start": "1439159",
    "end": "1444380"
  },
  {
    "text": "great at handling this because you're changing everything and react can't optimize it so it's trying to re-render",
    "start": "1444380",
    "end": "1451870"
  },
  {
    "text": "that entire complex Dom tree and do a virtual Dom diff six every 16",
    "start": "1451870",
    "end": "1458390"
  },
  {
    "text": "milliseconds and it just can't keep up so you're ending up with really long JavaScript frames which blocks the UI",
    "start": "1458390",
    "end": "1464840"
  },
  {
    "text": "thread and you end up with jank so when you start seeing your application getting really complicated with react",
    "start": "1464840",
    "end": "1471169"
  },
  {
    "text": "this can be a side effect that you're scrolling and you're janking because it's taking too long to do this render",
    "start": "1471169",
    "end": "1479350"
  },
  {
    "text": "the question was as this reacts implementation of tree shaking so tree",
    "start": "1482169",
    "end": "1488510"
  },
  {
    "text": "shaking in JavaScript land and web pack is where I require a whole bunch of",
    "start": "1488510",
    "end": "1494510"
  },
  {
    "text": "different modules and but there's more code in all of these modules that my",
    "start": "1494510",
    "end": "1500779"
  },
  {
    "text": "application won't necessarily be using what tree shaking allows like web pack",
    "start": "1500779",
    "end": "1506960"
  },
  {
    "text": "to do for instance is go through and statically analyze and see what hasn't",
    "start": "1506960",
    "end": "1512690"
  },
  {
    "text": "been imported from your application and safely remove it so it's similar to uglify which removes dead code except",
    "start": "1512690",
    "end": "1520520"
  },
  {
    "text": "uses the new JavaScript module syntax which is the import and export to be",
    "start": "1520520",
    "end": "1525919"
  },
  {
    "text": "able to do it in a safe statically analyzable way so fiber is more about",
    "start": "1525919",
    "end": "1531980"
  },
  {
    "text": "the actual reconciliation process I've got my old V virtual Dom I've got",
    "start": "1531980",
    "end": "1538860"
  },
  {
    "text": "the new virtual Dom I need to be able to make changes to the actual Dom how do I",
    "start": "1538860",
    "end": "1544500"
  },
  {
    "text": "do that current implementation is top-down synchronous it just recursively",
    "start": "1544500",
    "end": "1549919"
  },
  {
    "text": "bubbles down until it gets to the end and then it applies the patch fibre is a",
    "start": "1549919",
    "end": "1557940"
  },
  {
    "text": "complete implementation of react it's pretty amazing I've been working on",
    "start": "1557940",
    "end": "1563250"
  },
  {
    "text": "it for ages and they're just releasing react sixteen and it's a drop-in",
    "start": "1563250",
    "end": "1568799"
  },
  {
    "text": "replacement they have upgraded it to all of their twenty thousand odd components",
    "start": "1568799",
    "end": "1574110"
  },
  {
    "text": "is running on this and has been for a little while but what fiber allows them",
    "start": "1574110",
    "end": "1579809"
  },
  {
    "text": "to do is actually each of these components becomes a fiber or a unit of",
    "start": "1579809",
    "end": "1586049"
  },
  {
    "text": "work which allows them to start doing these render passes and once they've",
    "start": "1586049",
    "end": "1592500"
  },
  {
    "text": "used their elapsed time give control back to the JavaScript event loop and",
    "start": "1592500",
    "end": "1597510"
  },
  {
    "text": "then ask to be scheduled again they'll then do a bit more and then go back they",
    "start": "1597510",
    "end": "1604649"
  },
  {
    "text": "also want to be able to cancel work so when I'm doing this inside and outside",
    "start": "1604649",
    "end": "1610700"
  },
  {
    "text": "animation and these little guys are updating in there I want to make sure",
    "start": "1610700",
    "end": "1617760"
  },
  {
    "text": "that I'm actually dropping animation frames so I'm keeping up rather than",
    "start": "1617760",
    "end": "1623640"
  },
  {
    "text": "trying to to try and do everything so this is known as a conflation like you",
    "start": "1623640",
    "end": "1629700"
  },
  {
    "text": "you're probably using it in your own applications whenever you've got a like search box where you start typing and",
    "start": "1629700",
    "end": "1635760"
  },
  {
    "text": "you're doing d bouncing or throttling that's a form of conflating the the",
    "start": "1635760",
    "end": "1641970"
  },
  {
    "text": "inputs so you don't ruin the applicant like your application experience because",
    "start": "1641970",
    "end": "1647669"
  },
  {
    "text": "reacts design principles getting back to the scheduling one you're just telling react that you have some state changes",
    "start": "1647669",
    "end": "1655549"
  },
  {
    "text": "fiber allows hopefully in the future it's not enabled yet but fiber will",
    "start": "1655549",
    "end": "1661320"
  },
  {
    "text": "allow react to make smart decisions about when which updates are scheduled",
    "start": "1661320",
    "end": "1666539"
  },
  {
    "text": "when so just by applying five with these new options you see the",
    "start": "1666539",
    "end": "1674490"
  },
  {
    "text": "previous one you got all over this jank turn fiber asynchronous rendering on much much smoother the way it does that",
    "start": "1674490",
    "end": "1684480"
  },
  {
    "text": "is each fiber can actually be assigned priorities so remember we said we were trying to render every 16 milliseconds",
    "start": "1684480",
    "end": "1690950"
  },
  {
    "text": "well we want that to be given a really high priority but updating all of these",
    "start": "1690950",
    "end": "1696240"
  },
  {
    "text": "numbers across all of these that's only happening once a second it probably doesn't matter if it's 50 milliseconds",
    "start": "1696240",
    "end": "1703260"
  },
  {
    "text": "later so fibers can be assigned priority so",
    "start": "1703260",
    "end": "1708360"
  },
  {
    "text": "synchronous which means it's done inline synchronously you can also say it's a",
    "start": "1708360",
    "end": "1714659"
  },
  {
    "text": "task which is will mean it happens before the next tick it's an animation",
    "start": "1714659",
    "end": "1723149"
  },
  {
    "text": "this fiber should be completed before the next animation frame in terms of",
    "start": "1723149",
    "end": "1730860"
  },
  {
    "text": "JavaScript that's the difference between like set timeout I'll set immediate and then requestanimationframe you can then",
    "start": "1730860",
    "end": "1737700"
  },
  {
    "text": "give it a high priority low priority or off-screen so react knows that it's in a",
    "start": "1737700",
    "end": "1746429"
  },
  {
    "text": "like react Dom knows that it's in a browser a browser has a viewport what happens if fiber could automatically",
    "start": "1746429",
    "end": "1753059"
  },
  {
    "text": "assign a higher priority to components that are within the viewport rather than stuff that's out of the viewport that's",
    "start": "1753059",
    "end": "1760169"
  },
  {
    "text": "a possibility with fiber and that's why the community is so excited we at the",
    "start": "1760169",
    "end": "1766049"
  },
  {
    "text": "moment react 16 has come out it's still using synchronous priorities for",
    "start": "1766049",
    "end": "1771270"
  },
  {
    "text": "everything they don't want to break the world they want everyone running on the new version of fiber to make sure that",
    "start": "1771270",
    "end": "1777059"
  },
  {
    "text": "it's compatible and all of these react applications around the world can work without having to change anything",
    "start": "1777059",
    "end": "1784460"
  },
  {
    "text": "hopefully over the next year we'll start seeing them turning on asynchronous",
    "start": "1784460",
    "end": "1790320"
  },
  {
    "text": "rendering and a lot of these other prioritization and people experimenting",
    "start": "1790320",
    "end": "1795570"
  },
  {
    "text": "with what the possibilities are",
    "start": "1795570",
    "end": "1798980"
  },
  {
    "text": "this is really frustrating since I've rebooted all my ass colorings are gone",
    "start": "1800899",
    "end": "1808610"
  },
  {
    "text": "we support fragments in fiber what fragments are is inside my render I can",
    "start": "1808610",
    "end": "1816860"
  },
  {
    "text": "now actually return an array with div key of 1 and div key of 2 one of the",
    "start": "1816860",
    "end": "1829789"
  },
  {
    "text": "current limitations that strives my designers nuts is that you have to return a single element which means you",
    "start": "1829789",
    "end": "1838399"
  },
  {
    "text": "constantly this component I want to return two things I have to wrap it and div so one of the side effects of",
    "start": "1838399",
    "end": "1844880"
  },
  {
    "text": "current react applications is you normally have a heap more divs than you actually require react 16 supports",
    "start": "1844880",
    "end": "1851840"
  },
  {
    "text": "fragments which is returning an array instead a lot of people are pretty happy about that the next one is error",
    "start": "1851840",
    "end": "1859399"
  },
  {
    "text": "boundaries and what error boundaries are is now I can say component will catch",
    "start": "1859399",
    "end": "1868090"
  },
  {
    "text": "and when it's got doing its render pass",
    "start": "1868899",
    "end": "1874730"
  },
  {
    "text": "this component essentially becomes a try-catch for all of the components",
    "start": "1874730",
    "end": "1880309"
  },
  {
    "text": "under it so if for instance they wait you get down and there's some malformed data and",
    "start": "1880309",
    "end": "1886730"
  },
  {
    "text": "a components render function throws it'll continue bubbling up until a component does this which then I can go",
    "start": "1886730",
    "end": "1894889"
  },
  {
    "text": "this set state had error of true inside",
    "start": "1894889",
    "end": "1903500"
  },
  {
    "text": "the render function I can go this dot state if this dot state dot add error I",
    "start": "1903500",
    "end": "1912220"
  },
  {
    "text": "can then render something that just goes oops",
    "start": "1912220",
    "end": "1918190"
  },
  {
    "text": "this allows you to gracefully handle errors I know it's not not to just",
    "start": "1918190",
    "end": "1926210"
  },
  {
    "text": "continue bashing angular but um when I was using angular and anger this was one",
    "start": "1926210",
    "end": "1931730"
  },
  {
    "text": "of the things that were super frustrating you'd have a error somewhere and you just get a white screen and it would take you forever to",
    "start": "1931730",
    "end": "1938850"
  },
  {
    "text": "try and figure out what's actually gone wrong fiber because it knows we're in",
    "start": "1938850",
    "end": "1944670"
  },
  {
    "text": "the render tree all of these units of work is it can almost give you a stack",
    "start": "1944670",
    "end": "1949710"
  },
  {
    "text": "trace between what components caused what errors and that goes back to that",
    "start": "1949710",
    "end": "1954900"
  },
  {
    "text": "developer experience there's a site that",
    "start": "1954900",
    "end": "1962100"
  },
  {
    "text": "I've been going to for I think it got created in September last year which is",
    "start": "1962100",
    "end": "1968910"
  },
  {
    "text": "is fiber ready yet this is a bit fuzzy so you can't read it but is fiber ready",
    "start": "1968910",
    "end": "1975930"
  },
  {
    "text": "yet calm finally it's been saying no and they've been graphing the pass rate of a",
    "start": "1975930",
    "end": "1984090"
  },
  {
    "text": "unit tests within react so slowly they got it quite close to completion and",
    "start": "1984090",
    "end": "1990420"
  },
  {
    "text": "then not quite obviously they discovered some design problems made some changes",
    "start": "1990420",
    "end": "1996360"
  },
  {
    "text": "which broke a heap of tests and this has been going from red yellow with warnings",
    "start": "1996360",
    "end": "2002530"
  },
  {
    "text": "slowly over to green finally I think about a week or two ago they they got",
    "start": "2002530",
    "end": "2008930"
  },
  {
    "text": "that whole all of the unit tests passing using the fiber reconciliation engine",
    "start": "2008930",
    "end": "2014090"
  },
  {
    "text": "then they released the beta so this doesn't have the new scheduling engine",
    "start": "2014090",
    "end": "2020540"
  },
  {
    "text": "turned on it is still using the old synchronous flow but so most",
    "start": "2020540",
    "end": "2027680"
  },
  {
    "text": "applications should see a small performance improvement but probably not",
    "start": "2027680",
    "end": "2032720"
  },
  {
    "text": "a lot once the world is using actually using the fiber reconciliation engine",
    "start": "2032720",
    "end": "2039050"
  },
  {
    "text": "and react 16 hopefully they'll start releasing the asynchronous rendering",
    "start": "2039050",
    "end": "2045100"
  },
  {
    "text": "behind feature flags",
    "start": "2045100",
    "end": "2048850"
  },
  {
    "text": "so I wanted to leave a fair bit of time at the end the workshop that I did on",
    "start": "2051080",
    "end": "2057030"
  },
  {
    "text": "Monday and Tuesday there was a heap of questions relating to the react ecosystem and how it fits in and and",
    "start": "2057030",
    "end": "2063450"
  },
  {
    "text": "where to go so I'm going to open it up to the floor for questions",
    "start": "2063450",
    "end": "2069060"
  },
  {
    "text": "that's react fiber I hope it excites you it's it's the potential for the",
    "start": "2069060",
    "end": "2076770"
  },
  {
    "text": "JavaScript community to do some really cool stuff with this is amazing so thank",
    "start": "2076770",
    "end": "2082560"
  },
  {
    "text": "you any questions the question is can",
    "start": "2082560",
    "end": "2095070"
  },
  {
    "text": "you use typescript with react fiber so all of our projects are written with",
    "start": "2095070",
    "end": "2100590"
  },
  {
    "text": "typescript react has a concept called",
    "start": "2100590",
    "end": "2106020"
  },
  {
    "text": "prop types so you can actually say prop types equals and give it an object and",
    "start": "2106020",
    "end": "2112050"
  },
  {
    "text": "then define that my prop is a react prop",
    "start": "2112050",
    "end": "2118110"
  },
  {
    "text": "type of object for instance that's the",
    "start": "2118110",
    "end": "2124170"
  },
  {
    "text": "way you do type validation with react if",
    "start": "2124170",
    "end": "2129330"
  },
  {
    "text": "you want to use it with typescript you can actually specify it becomes a",
    "start": "2129330",
    "end": "2135240"
  },
  {
    "text": "generic component and I can just say props and state and then I can define an",
    "start": "2135240",
    "end": "2143970"
  },
  {
    "text": "interface which is props and I can say my prop of type whatever so react works",
    "start": "2143970",
    "end": "2155310"
  },
  {
    "text": "very well with typescript and fiber actually did not they made no breaking",
    "start": "2155310",
    "end": "2162210"
  },
  {
    "text": "API changes over a complete rewrite of react so your existing Taipings will",
    "start": "2162210",
    "end": "2167940"
  },
  {
    "text": "work fine with fiber there will eventually be hints for prioritization",
    "start": "2167940",
    "end": "2173640"
  },
  {
    "text": "and that sort of stuff but that's not out yet so the type definitions will be create updated when that happens you had",
    "start": "2173640",
    "end": "2180450"
  },
  {
    "text": "a question",
    "start": "2180450",
    "end": "2182660"
  },
  {
    "text": "yes the question I'll sum down to something a bit smaller which is",
    "start": "2219369",
    "end": "2224660"
  },
  {
    "text": "essentially if you're trying to pick frameworks what would you consider essentially because all of these",
    "start": "2224660",
    "end": "2232490"
  },
  {
    "text": "frameworks are learning from each other yeah I think it's it comes down to what",
    "start": "2232490",
    "end": "2240950"
  },
  {
    "text": "you like what you want out of your library Frank angular as a framework has",
    "start": "2240950",
    "end": "2247730"
  },
  {
    "text": "a lot more it has patterns around how to do data fetching all of the testing",
    "start": "2247730",
    "end": "2253250"
  },
  {
    "text": "patterns are defined react has not done that they wanted to create that lowest",
    "start": "2253250",
    "end": "2259250"
  },
  {
    "text": "common abstraction and then let the community kind of define the patterns so",
    "start": "2259250",
    "end": "2265700"
  },
  {
    "text": "that's where you're seeing react change like the ecosystem is going through a lot of change but that's outside of the",
    "start": "2265700",
    "end": "2271970"
  },
  {
    "text": "library itself the other nice thing is libraries like pre-act which are a yeah",
    "start": "2271970",
    "end": "2280490"
  },
  {
    "text": "they're there it's a small small version of react essentially it's an open source project that's that's API mostly API",
    "start": "2280490",
    "end": "2288650"
  },
  {
    "text": "compatible with react except it's a 3k module instead of sort of 40 or 50 which",
    "start": "2288650",
    "end": "2296030"
  },
  {
    "text": "I think reactors with libraries like that if you've got like a complex grid",
    "start": "2296030",
    "end": "2304010"
  },
  {
    "text": "that can like that will benefit from the virtual Dom approach you can actually",
    "start": "2304010",
    "end": "2309770"
  },
  {
    "text": "mix and match so you can create an angular component which houses a react component and that's the way that the migration",
    "start": "2309770",
    "end": "2316609"
  },
  {
    "text": "path between angular 1 & 2 works is that you start creating angular 2 components",
    "start": "2316609",
    "end": "2322970"
  },
  {
    "text": "inside angular 1 components and slowly take over I think the most important",
    "start": "2322970",
    "end": "2329989"
  },
  {
    "text": "thing is is sort of understand your best practices and and learn the fundamentals",
    "start": "2329989",
    "end": "2337369"
  },
  {
    "text": "one of the reasons I love reactors it's all in on JavaScript so you have to",
    "start": "2337369",
    "end": "2344210"
  },
  {
    "text": "understand JavaScript what warts-and-all",
    "start": "2344210",
    "end": "2348068"
  },
  {
    "text": "yes I like now ember has picked up virtual Dom there's a heap of virtual",
    "start": "2349960",
    "end": "2355069"
  },
  {
    "text": "Dom libraries like view and and whatnot it's it's sort of spreading a fair amount any other questions",
    "start": "2355069",
    "end": "2363970"
  },
  {
    "text": "yep so the question is around server-side rendering there's a concept",
    "start": "2378500",
    "end": "2385400"
  },
  {
    "text": "called universal rendering which is allows you to have your same JavaScript",
    "start": "2385400",
    "end": "2390830"
  },
  {
    "text": "application run on the server as on the client so if you go to the West combo",
    "start": "2390830",
    "end": "2396080"
  },
  {
    "text": "you and you turn JavaScript off you'll get a render of that page and you can",
    "start": "2396080",
    "end": "2401780"
  },
  {
    "text": "click around and the site is functional that's because we actually render the entire react app on the server as a",
    "start": "2401780",
    "end": "2408650"
  },
  {
    "text": "string ship it off to the client the client JavaScript bundles then",
    "start": "2408650",
    "end": "2415130"
  },
  {
    "text": "initialize and our single page application starts the react",
    "start": "2415130",
    "end": "2420170"
  },
  {
    "text": "Reconciliation engine will notice that there is already a Dom there where it's",
    "start": "2420170",
    "end": "2426020"
  },
  {
    "text": "going to mount so it hydrates that into a virtual Dom it the rent does a",
    "start": "2426020",
    "end": "2431109"
  },
  {
    "text": "client-side re render reconciles those and then applies any updates to the real",
    "start": "2431109",
    "end": "2437990"
  },
  {
    "text": "Dom you're now then running in a you know a single page application mode where it has hooked into the event",
    "start": "2437990",
    "end": "2444619"
  },
  {
    "text": "handlers the second part of the question was do you think that's worth it in",
    "start": "2444619",
    "end": "2450109"
  },
  {
    "text": "terms of complexity there's a lot of moving parts it relies on web pack to tell you what",
    "start": "2450109",
    "end": "2455599"
  },
  {
    "text": "your assets are and a whole lot of extra work you have to on the server you have",
    "start": "2455599",
    "end": "2462589"
  },
  {
    "text": "to know once you're finished loading data so you do an initial render which is all in a loading State load some data",
    "start": "2462589",
    "end": "2468890"
  },
  {
    "text": "do another render pass which has all of their data transfer that across to the",
    "start": "2468890",
    "end": "2474020"
  },
  {
    "text": "client and then start up your application for us it's critical because",
    "start": "2474020",
    "end": "2480349"
  },
  {
    "text": "it makes it removes a lot of the downsides of a single page application in terms of the user gets a white screen",
    "start": "2480349",
    "end": "2487930"
  },
  {
    "text": "until the JavaScript app has started and done that initial render we also need",
    "start": "2487930",
    "end": "2494420"
  },
  {
    "text": "really good SEO so all of the bots can crawl it and also if you post post a",
    "start": "2494420",
    "end": "2500570"
  },
  {
    "text": "link in Twitter or whatever and it needs to get that little embedded card that requires the server to return all of",
    "start": "2500570",
    "end": "2507800"
  },
  {
    "text": "that information so if your site is content-driven site then without a doubt",
    "start": "2507800",
    "end": "2515020"
  },
  {
    "text": "it is worth it if you're building a single page application like a line of",
    "start": "2515020",
    "end": "2520270"
  },
  {
    "text": "business application or something that just has a login form before you can get",
    "start": "2520270",
    "end": "2526600"
  },
  {
    "text": "into it I wouldn't worry the complexity is probably not worth it anything else",
    "start": "2526600",
    "end": "2535620"
  },
  {
    "text": "yeah so the the question was angular has",
    "start": "2564569",
    "end": "2571329"
  },
  {
    "text": "zones which is a similar sort of concept would Facebook consider pulling the",
    "start": "2571329",
    "end": "2580299"
  },
  {
    "text": "fiber prioritization engine sort of out so it was consumable in other libraries honestly I don't know my background is",
    "start": "2580299",
    "end": "2589359"
  },
  {
    "text": "I'm working and using this stuff day to day I have a fair interest in it because",
    "start": "2589359",
    "end": "2596259"
  },
  {
    "text": "we're buying into the technologies and our team really believes in reactants",
    "start": "2596259",
    "end": "2601779"
  },
  {
    "text": "sort of the paradigms that it brings so in short I don't know if you do want to",
    "start": "2601779",
    "end": "2608410"
  },
  {
    "text": "learn more there is a talk by by Lynn Clark if you search that what is react",
    "start": "2608410",
    "end": "2615759"
  },
  {
    "text": "fiber she's a developer at Firefox and focusing on sort of performance in their",
    "start": "2615759",
    "end": "2623079"
  },
  {
    "text": "gecko engine and whatnot but she also has a Twitter account which is code cartoons so she turns all of these",
    "start": "2623079",
    "end": "2629410"
  },
  {
    "text": "concepts into little code like animations and cartoons if you want to",
    "start": "2629410",
    "end": "2637420"
  },
  {
    "text": "dive deeper she goes into reacts reconciliation process at a lot deeper",
    "start": "2637420",
    "end": "2644140"
  },
  {
    "text": "level than I did today and it's really really interesting and she does a really good job of explaining things using",
    "start": "2644140",
    "end": "2651190"
  },
  {
    "text": "cartoons and and making it really easy to digest and understand",
    "start": "2651190",
    "end": "2656849"
  },
  {
    "text": "Lynn Clark",
    "start": "2656849",
    "end": "2660480"
  },
  {
    "text": "any other questions yep yeah so yeah so",
    "start": "2667170",
    "end": "2678430"
  },
  {
    "text": "the reason it the question is why is this test not TSX is because I wasn't",
    "start": "2678430",
    "end": "2685960"
  },
  {
    "text": "supposed to be showing you code here this was a module with a string inside it which gets pulled into my slides so",
    "start": "2685960",
    "end": "2693040"
  },
  {
    "text": "I'm using a library called spectacle which allows me to specify it's a react",
    "start": "2693040",
    "end": "2704020"
  },
  {
    "text": "library that allows me to build my slide decks using react just because build everything in react",
    "start": "2704020",
    "end": "2709960"
  },
  {
    "text": "right anyone else interesting question",
    "start": "2709960",
    "end": "2729190"
  },
  {
    "text": "so the question was when do you think all of these frameworks will become",
    "start": "2729190",
    "end": "2734830"
  },
  {
    "text": "obsolete due to emerging technologies like web components I would say in the",
    "start": "2734830",
    "end": "2744160"
  },
  {
    "text": "case of react they go hand in hand and a",
    "start": "2744160",
    "end": "2749619"
  },
  {
    "text": "very complimentary so web components are an idea that you should be able to build",
    "start": "2749619",
    "end": "2756460"
  },
  {
    "text": "your own custom HTML elements so say you've got a HTML input that comes",
    "start": "2756460",
    "end": "2763900"
  },
  {
    "text": "shipped in the browser it's not just it's actually a bunch of smaller",
    "start": "2763900",
    "end": "2771180"
  },
  {
    "text": "primitives that has JavaScript styles and other HTML elements below it to make",
    "start": "2771180",
    "end": "2779680"
  },
  {
    "text": "up that component right so web components have kind of existed in the browser for years what that allows you",
    "start": "2779680",
    "end": "2787990"
  },
  {
    "text": "to do is create it uses a technology that we shipped a while ago called the shadow Dom that essentially says hey",
    "start": "2787990",
    "end": "2795609"
  },
  {
    "text": "browser make all of the markup and j/s and styles within this component invisible",
    "start": "2795609",
    "end": "2802990"
  },
  {
    "text": "so it just looks like a custom HTML element and all of that stuff goes away so you can actually consume web",
    "start": "2802990",
    "end": "2810760"
  },
  {
    "text": "components inside your react components and they solve a different problem react",
    "start": "2810760",
    "end": "2817060"
  },
  {
    "text": "is all about the mental model of how you treat state in your application and how",
    "start": "2817060",
    "end": "2822370"
  },
  {
    "text": "you compose your application together web components are about creating reusable functionality that comes sort",
    "start": "2822370",
    "end": "2829330"
  },
  {
    "text": "of extend give you better primitives to build your applications on so they kind of have two sides of the thing and they",
    "start": "2829330",
    "end": "2836620"
  },
  {
    "text": "work quite well together cool thanks everyone I will be around",
    "start": "2836620",
    "end": "2844210"
  },
  {
    "text": "for the rest of the conference probably hanging out in the github booth or the track J s booth come find me and also if",
    "start": "2844210",
    "end": "2856000"
  },
  {
    "text": "you don't know about pub Kampf it's on Friday it is a great event that I'll be",
    "start": "2856000",
    "end": "2861910"
  },
  {
    "text": "speaking at if you come find me and ask a good question I have a and are",
    "start": "2861910",
    "end": "2867040"
  },
  {
    "text": "interested to go I have a free ticket so",
    "start": "2867040",
    "end": "2872170"
  },
  {
    "text": "come find me and if you're interested in you can go so these are all fun talks",
    "start": "2872170",
    "end": "2877390"
  },
  {
    "text": "that aren't recorded it's at a pub there's free beer it's a great event I highly recommend attending so that's",
    "start": "2877390",
    "end": "2884020"
  },
  {
    "text": "Friday evening thanks [Applause]",
    "start": "2884020",
    "end": "2893329"
  }
]