[
  {
    "text": "okay mm-hmm excuse me hello good morning did everybody get a good night's sleep",
    "start": "7040",
    "end": "13820"
  },
  {
    "text": "excellent my name is Mark Rendell and I've come a very long way to try and",
    "start": "13820",
    "end": "21000"
  },
  {
    "text": "convince you of some things this is a",
    "start": "21000",
    "end": "26040"
  },
  {
    "text": "very kind of high-level talk and it covers a lot of stuff really quite",
    "start": "26040",
    "end": "31860"
  },
  {
    "text": "quickly I'm gonna talk fairly fast and hopefully this is going to kickstart your brains for the rest of the day so",
    "start": "31860",
    "end": "37260"
  },
  {
    "text": "yay if you come to my talk tomorrow morning by the way that's just stupid",
    "start": "37260",
    "end": "43470"
  },
  {
    "text": "it's just me being like silly and stuff so come to it because it's gonna be fun but don't come to it because you want to",
    "start": "43470",
    "end": "50250"
  },
  {
    "text": "learn anything that's there you go disclaimer now I can say what I like in that one right so but today cloud native",
    "start": "50250",
    "end": "56399"
  },
  {
    "text": "net you can follow me on twitter at Mark",
    "start": "56399",
    "end": "61410"
  },
  {
    "text": "Rendell you can go to my company website which is Rendell labs calm because I thought if Mitchell Hashimoto can create",
    "start": "61410",
    "end": "69600"
  },
  {
    "text": "a company with his name in it then so can i and yeah right cloud native net",
    "start": "69600",
    "end": "78530"
  },
  {
    "text": "this talk is online now at web site",
    "start": "78530",
    "end": "83579"
  },
  {
    "text": "called de hub dot app and if you go there there's a search box and you can",
    "start": "83579",
    "end": "88619"
  },
  {
    "text": "type in cloud bash native - net and press enter and you will be able to",
    "start": "88619",
    "end": "94229"
  },
  {
    "text": "follow along and you'll see the slides appearing on your device as we go along and if you log in with with your Twitter",
    "start": "94229",
    "end": "101369"
  },
  {
    "text": "account or your Microsoft account you can ask questions and they'll come up on this extra little screen I've got here",
    "start": "101369",
    "end": "106409"
  },
  {
    "text": "and I'll be able to answer them and so you don't have to stick your hand up hands up who doesn't like putting their hands up yeah so yeah you can ask me",
    "start": "106409",
    "end": "114779"
  },
  {
    "text": "questions and then I'll answer them and the really good thing from the organizers point of view is it forces me",
    "start": "114779",
    "end": "121049"
  },
  {
    "text": "to repeat the question because otherwise I just go no and everyone else is going well so yes it I think it's working",
    "start": "121049",
    "end": "129840"
  },
  {
    "text": "it was all working yesterday we tested it yesterday I had to do some horrible things in asp net core security to get",
    "start": "129840",
    "end": "136080"
  },
  {
    "text": "it working let's not talk about that turn in the docks as well so that was good so",
    "start": "136080",
    "end": "141880"
  },
  {
    "text": "yeah and this application deck up is all",
    "start": "141880",
    "end": "147310"
  },
  {
    "text": "open source it's on github get up slash deck hub app and so",
    "start": "147310",
    "end": "152710"
  },
  {
    "text": "everything I'm talking about you can go and download the code and muck about with it you can spin up your own instance if you want to contribute and",
    "start": "152710",
    "end": "159490"
  },
  {
    "text": "send me pull requests that'd be super awesome anyone who can do CSS and come",
    "start": "159490",
    "end": "164500"
  },
  {
    "text": "up with something better than a blue background that would be really cool so yeah feel free to log in and do that the",
    "start": "164500",
    "end": "172600"
  },
  {
    "text": "privacy page isn't there yet but I promise I won't sell your data to",
    "start": "172600",
    "end": "177640"
  },
  {
    "text": "Facebook so what is cloud native cloud",
    "start": "177640",
    "end": "182800"
  },
  {
    "text": "native there's a cloud native computing foundation which as far as I can tell is Google and they have a definition of",
    "start": "182800",
    "end": "191020"
  },
  {
    "text": "cloud native and it doesn't mean building applications that only run on Azure ok this is running on Azure but",
    "start": "191020",
    "end": "199510"
  },
  {
    "text": "it's running in a kubernetes cluster on Azure and I could just as easily spin up a Koopa Nettie's cluster on google",
    "start": "199510",
    "end": "206250"
  },
  {
    "text": "kubernetes engine or amazon kubernetes service or my own kubernetes cluster if",
    "start": "206250",
    "end": "213370"
  },
  {
    "text": "I enjoyed the pain of spinning up my own kubernetes cluster so cloud native refers to being able to run in a the",
    "start": "213370",
    "end": "221500"
  },
  {
    "text": "modern cloud world the the cloud world of platforms and services so cloud",
    "start": "221500",
    "end": "228370"
  },
  {
    "text": "native according to the cloud native computing foundation has four pillars",
    "start": "228370",
    "end": "234180"
  },
  {
    "text": "cloud native applications are composed of micro services those micro services",
    "start": "234180",
    "end": "239650"
  },
  {
    "text": "are running in containers they are consuming platform services for things",
    "start": "239650",
    "end": "245650"
  },
  {
    "text": "like data bases and caching and those kind of persistence concerns usually and",
    "start": "245650",
    "end": "253150"
  },
  {
    "text": "it's all about DevOps and continuous integration continuous deployment monitoring and that sort of stuff so",
    "start": "253150",
    "end": "260829"
  },
  {
    "text": "we're going to go through these one pillar at a time and you're gonna get my opinion on all of them because there",
    "start": "260829",
    "end": "266950"
  },
  {
    "text": "doesn't seem to be any consensus and my opinion is as good as anybody else's it's",
    "start": "266950",
    "end": "271990"
  },
  {
    "text": "give me 30 years to get at that point so don't try and take it away from me",
    "start": "271990",
    "end": "279270"
  },
  {
    "text": "Thanks so why would you want to build a cloud native application what is better",
    "start": "279270",
    "end": "285250"
  },
  {
    "text": "about building cloud native applications in 2018 than building other kinds of",
    "start": "285250",
    "end": "290380"
  },
  {
    "text": "applications we're at a sweet spot now particularly with things like kubernetes",
    "start": "290380",
    "end": "295750"
  },
  {
    "text": "and Prometheus and so forth we've got some mature tools the tooling for building this stuff is there and it's",
    "start": "295750",
    "end": "303790"
  },
  {
    "text": "well documented and it's usable and in a lot of cases it's just a flick of a switch on the cloud platform of your",
    "start": "303790",
    "end": "311200"
  },
  {
    "text": "choice so the tools and the ecosystem are actually at the start of maturity",
    "start": "311200",
    "end": "317770"
  },
  {
    "text": "let's put it that way they're not mature but they're not brand new and flaky",
    "start": "317770",
    "end": "323440"
  },
  {
    "text": "either bits of them are flaky but the important bits are there and they",
    "start": "323440",
    "end": "328630"
  },
  {
    "text": "generally work most importantly if you go this isn't working and what's gone wrong",
    "start": "328630",
    "end": "333880"
  },
  {
    "text": "you can usually go and do a Google query with the error message and you will actually find out how to fix it which is",
    "start": "333880",
    "end": "340000"
  },
  {
    "text": "always a good thing we have scalability so if you build an application using these cloud native",
    "start": "340000",
    "end": "346060"
  },
  {
    "text": "principles it's a very very easy to scale that application you can scale it up onto bigger hardware you can scale it",
    "start": "346060",
    "end": "352510"
  },
  {
    "text": "out onto more hardware and so you have this this flexibility of scale and a",
    "start": "352510",
    "end": "360370"
  },
  {
    "text": "kind of flip side of that is you can reduce the costs of running something because if you can scale very accurately",
    "start": "360370",
    "end": "367480"
  },
  {
    "text": "and scale each part of your application independently you can really minimize the amount of resource that you need to",
    "start": "367480",
    "end": "374680"
  },
  {
    "text": "run the application if you have a monolithic application and one bit of it is having to serve a million requests a",
    "start": "374680",
    "end": "381730"
  },
  {
    "text": "second but the rest of it is really just static you have to scale up that entire application and so everything that you",
    "start": "381730",
    "end": "388480"
  },
  {
    "text": "run it on has got to be able to run the whole thing if you break that down into little bits then just the bit that leads",
    "start": "388480",
    "end": "394600"
  },
  {
    "text": "to serve a million requests a second can be scaled up and out and the rest of it can sit there and run on tiny little",
    "start": "394600",
    "end": "400690"
  },
  {
    "text": "micro instances in AWS or whatever okay",
    "start": "400690",
    "end": "405759"
  },
  {
    "text": "so pillow one micro-services because it is it is illegal to do a talk in 2018",
    "start": "405759",
    "end": "412249"
  },
  {
    "text": "that is not about micro-services and and that's great because no one knows what",
    "start": "412249",
    "end": "417919"
  },
  {
    "text": "micro services are and so you can just stand up here I'm talking about micro services with hololens and people can't",
    "start": "417919",
    "end": "426020"
  },
  {
    "text": "argue with you they just have yes yes you are so things we can't agree on about micro",
    "start": "426020",
    "end": "432169"
  },
  {
    "text": "services how small should they be which with a name like that is is really quite",
    "start": "432169",
    "end": "437300"
  },
  {
    "text": "important you get I have actually sat in meetings where people have with a",
    "start": "437300",
    "end": "443900"
  },
  {
    "text": "straight face talked about well it's really more of a nano service and kind",
    "start": "443900",
    "end": "449539"
  },
  {
    "text": "of like you don't know how small micro is do you but yes so we're not really",
    "start": "449539",
    "end": "455930"
  },
  {
    "text": "clear on how small they should be we just know they shouldn't be big that's that's that's the one thing we're all clear on as to how small it can go where",
    "start": "455930",
    "end": "463520"
  },
  {
    "text": "does it become too small and where are the boundaries how do I decide whether",
    "start": "463520",
    "end": "468680"
  },
  {
    "text": "this is to micro services or one slightly larger but still micro service where should I put the breaks in to keep",
    "start": "468680",
    "end": "477050"
  },
  {
    "text": "this micro service application am I doing this right and I think the answer",
    "start": "477050",
    "end": "482389"
  },
  {
    "text": "to that is almost certainly no because if I tell you yes then you'll just get up and go and see a different talk so I",
    "start": "482389",
    "end": "491080"
  },
  {
    "text": "have my rules of thumb for a what constitutes a micro service and how you",
    "start": "491080",
    "end": "498499"
  },
  {
    "text": "go about building one fundamentally it should be self-contained okay it shouldn't need any other services it",
    "start": "498499",
    "end": "506149"
  },
  {
    "text": "shouldn't need data from other services in order to do its job it might like to",
    "start": "506149",
    "end": "512810"
  },
  {
    "text": "have data from other services but it should be able to carry on running and doing its job without another service",
    "start": "512810",
    "end": "519440"
  },
  {
    "text": "being there if you have a micro service and every time somebody hits that it hits another micro service and if that",
    "start": "519440",
    "end": "526760"
  },
  {
    "text": "micro service is down then this micro service is down those aren't to micro services that's just one service that",
    "start": "526760",
    "end": "532579"
  },
  {
    "text": "you've broken into two bits for no good reason okay so micro services as far as possible should be cell",
    "start": "532579",
    "end": "538130"
  },
  {
    "text": "contained it's okay to say can I get some more data from here and if I can",
    "start": "538130",
    "end": "544040"
  },
  {
    "text": "then yes we'll we'll decorate some data or or will augment the data from there but it should be able to carry on",
    "start": "544040",
    "end": "550640"
  },
  {
    "text": "running ideally in splendid isolation and if it goes down it shouldn't take everything",
    "start": "550640",
    "end": "556370"
  },
  {
    "text": "else down with it big part of that is that it should have its own data store and this what that means depends on the",
    "start": "556370",
    "end": "564980"
  },
  {
    "text": "budget of your organization really because ideally what it means is it",
    "start": "564980",
    "end": "570860"
  },
  {
    "text": "should have its own data base running in its own rack server entirely to itself",
    "start": "570860",
    "end": "576440"
  },
  {
    "text": "but obviously if you've got a thousand micro services you don't necessarily want to be going out and getting a",
    "start": "576440",
    "end": "582410"
  },
  {
    "text": "thousand separate sequel server instances to run databases for all of them so there's there's wiggle room in",
    "start": "582410",
    "end": "588320"
  },
  {
    "text": "there but the nice thing about this is if you build a micro service",
    "start": "588320",
    "end": "593930"
  },
  {
    "text": "architecture if you build these independent components and yeah you",
    "start": "593930",
    "end": "599150"
  },
  {
    "text": "might have all your databases running on the same server if you then decide that",
    "start": "599150",
    "end": "604160"
  },
  {
    "text": "one of them is critical and the rest of them are just nice to have then you can take the critical one and put that",
    "start": "604160",
    "end": "610820"
  },
  {
    "text": "services database on its own server with its own disaster recovery and everything else and the rest of them can can share",
    "start": "610820",
    "end": "617690"
  },
  {
    "text": "stuff okay so you're giving yourself flexibility and one of the key points of doing this because this is it's more",
    "start": "617690",
    "end": "624800"
  },
  {
    "text": "complicated than building a monolith but the trade-off is that it makes some things much simpler",
    "start": "624800",
    "end": "630620"
  },
  {
    "text": "okay so self-contained their own data store and ideally if they're not there",
    "start": "630620",
    "end": "637790"
  },
  {
    "text": "your application should carry on running and providing as much business value as",
    "start": "637790",
    "end": "643040"
  },
  {
    "text": "it can without necessarily providing 100% of the business value okay so I'm",
    "start": "643040",
    "end": "649370"
  },
  {
    "text": "gonna go through the services that are making deck hub app work here just to",
    "start": "649370",
    "end": "657050"
  },
  {
    "text": "give you an example okay so this is all written let me just check my slides nope",
    "start": "657050",
    "end": "666100"
  },
  {
    "text": "right can everyone see the Explorer bit at the side here in yeah my god you've got much",
    "start": "667240",
    "end": "674710"
  },
  {
    "text": "better eyesight than me okay so Dec hub has a website the",
    "start": "674710",
    "end": "680700"
  },
  {
    "text": "incidentally the thing that I'm running to actually generate the slides on this machine is an asp net core 2.1",
    "start": "680700",
    "end": "688960"
  },
  {
    "text": "application which is compiled with core RT which takes il code and compiles it",
    "start": "688960",
    "end": "699220"
  },
  {
    "text": "to Static native code for the platform that you're running on so this is an asp",
    "start": "699220",
    "end": "705700"
  },
  {
    "text": "net core 2.1 application entirely contained in 127 megabyte deck XE file",
    "start": "705700",
    "end": "711850"
  },
  {
    "text": "which is static it doesn't have any external dependencies you could take that and put it on any windows box",
    "start": "711850",
    "end": "717970"
  },
  {
    "text": "without any dotnet installed at all and it would just work it's a it's it's",
    "start": "717970",
    "end": "723460"
  },
  {
    "text": "like--go it's fantastic and I did that by adding one file and one entry to CS",
    "start": "723460",
    "end": "729460"
  },
  {
    "text": "proj that's also in the github thing if you want to have a look at that that's pretty awesome but no so this the",
    "start": "729460",
    "end": "736480"
  },
  {
    "text": "application breaks down into we have we",
    "start": "736480",
    "end": "742360"
  },
  {
    "text": "have live so live is the main website that's where the CSS and the JavaScript and the HTML are served from that's the",
    "start": "742360",
    "end": "748930"
  },
  {
    "text": "page that you saw when you went to deck up tap and that's the page where you typed in cloud native net ok",
    "start": "748930",
    "end": "755380"
  },
  {
    "text": "so that's not really a micro service that's just a website when you typed in",
    "start": "755380",
    "end": "760840"
  },
  {
    "text": "cloud native net if you did I don't think anybody has yet cuz I'm not seeing any questions or I'm just explaining",
    "start": "760840",
    "end": "766450"
  },
  {
    "text": "everything really well very hard to tell from where I'm standing when you type that in and press Enter it sent that off",
    "start": "766450",
    "end": "773260"
  },
  {
    "text": "as a query to a slash shows URL on the same website that is actually a separate",
    "start": "773260",
    "end": "780310"
  },
  {
    "text": "micro service an entire separate website with MVC controllers and views and",
    "start": "780310",
    "end": "786850"
  },
  {
    "text": "everything else and that is running independently of the first thing so that",
    "start": "786850",
    "end": "792250"
  },
  {
    "text": "shows micro service is there as well and that's what showed you the list thing",
    "start": "792250",
    "end": "798640"
  },
  {
    "text": "there and then if you're on the page for this show when you're seeing the slides go along as move them along then that's coming from",
    "start": "798640",
    "end": "804610"
  },
  {
    "text": "that micro service as well if you ask a question you do that through a form",
    "start": "804610",
    "end": "809800"
  },
  {
    "text": "that's generated by the show's service but that question will then actually go to the question service and the question",
    "start": "809800",
    "end": "817000"
  },
  {
    "text": "service will persist it into the database and it will add that question to a service bus and then service bus",
    "start": "817000",
    "end": "823570"
  },
  {
    "text": "will bounce it round and it will go through a signal our hub and it will appear on everybody else's device and it",
    "start": "823570",
    "end": "830350"
  },
  {
    "text": "will appear on my screen here that signal our hub is running in this",
    "start": "830350",
    "end": "835660"
  },
  {
    "text": "real-time service here so that is just a signal our hub it contains signal are on",
    "start": "835660",
    "end": "841480"
  },
  {
    "text": "the server side and it contains the bits of JavaScript that are necessary to make that work in your browser ok we also",
    "start": "841480",
    "end": "848920"
  },
  {
    "text": "have notes if you're logged in you can write notes alongside each slide and then if I actually get my act together",
    "start": "848920",
    "end": "856180"
  },
  {
    "text": "and build the bit where you can log back in and see the shows that you've seen you'll be able to go back and review your notes haven't done that yet been",
    "start": "856180",
    "end": "863200"
  },
  {
    "text": "too busy keeping myself up to date with the new versions of.net core every time they release one but if you do create",
    "start": "863200",
    "end": "869080"
  },
  {
    "text": "notes then that will go through the note service all right and that is separate",
    "start": "869080",
    "end": "874270"
  },
  {
    "text": "as well the view that I've got on my screen here is the presenter view and",
    "start": "874270",
    "end": "880630"
  },
  {
    "text": "that is a separate service and so that could go down and I wouldn't be able to",
    "start": "880630",
    "end": "886030"
  },
  {
    "text": "see the presenter view but you guys could still ask questions and I could probably figure out a way of answering",
    "start": "886030",
    "end": "891550"
  },
  {
    "text": "them by just having the show's page open on my machine as well and we have a",
    "start": "891550",
    "end": "897070"
  },
  {
    "text": "slides service here and all that does is when my client application here when it",
    "start": "897070",
    "end": "903670"
  },
  {
    "text": "shows a page it grabs it as a PNG and it uploads it to the slide service and the",
    "start": "903670",
    "end": "908860"
  },
  {
    "text": "slide service see realises it into blob storage right now the slide service",
    "start": "908860",
    "end": "914740"
  },
  {
    "text": "actually I'll dig into this and we'll have a look because this is as simple did anyone come to Glenn's talk about",
    "start": "914740",
    "end": "922380"
  },
  {
    "text": "api's and micro services last night so you saw very very simple very very small",
    "start": "922380",
    "end": "927640"
  },
  {
    "text": "just a values controller my personal opinion is the value controller is a bit",
    "start": "927640",
    "end": "932740"
  },
  {
    "text": "of a bit of overkill I just have a single piece of middleware that's it",
    "start": "932740",
    "end": "938620"
  },
  {
    "text": "for this service and literally all it does is say if the request method is get",
    "start": "938620",
    "end": "944920"
  },
  {
    "text": "then do something otherwise if it's put then upload the slide otherwise if it's",
    "start": "944920",
    "end": "950380"
  },
  {
    "text": "head just return a thing saying how big the slide is okay that's it I didn't don't really need a controller",
    "start": "950380",
    "end": "957280"
  },
  {
    "text": "in here and it meant I could leave out the whole asp net core MVC razor library",
    "start": "957280",
    "end": "962380"
  },
  {
    "text": "from that so that keeps that nice and small as well so those are my micro services that make up this application",
    "start": "962380",
    "end": "969910"
  },
  {
    "text": "did I miss any out identity so it's using ASP net core identity it's using",
    "start": "969910",
    "end": "975190"
  },
  {
    "text": "the built-in thing to link to Microsoft account and Twitter normally you would",
    "start": "975190",
    "end": "981520"
  },
  {
    "text": "just put that into the central website part of the application but I didn't",
    "start": "981520",
    "end": "987670"
  },
  {
    "text": "want to do that I yanked the identity out of the core application and I put it",
    "start": "987670",
    "end": "992860"
  },
  {
    "text": "into its own micro service so that now runs independently as well and so the website will keep running even though",
    "start": "992860",
    "end": "999040"
  },
  {
    "text": "you might not be able to log into it because something has gone wrong with the identity service and that can be scaled independently as well the",
    "start": "999040",
    "end": "1005400"
  },
  {
    "text": "identity service has its own database the questions and knope's service have",
    "start": "1005400",
    "end": "1011400"
  },
  {
    "text": "their own databases they are all running on the same Postgres equal server in Azure but I could split them out if I",
    "start": "1011400",
    "end": "1018870"
  },
  {
    "text": "wanted to I could rewrite the identity service to use table storage or cosmos DB or something else entirely without",
    "start": "1018870",
    "end": "1026730"
  },
  {
    "text": "having to change anything with the other two services if the question service",
    "start": "1026730",
    "end": "1032010"
  },
  {
    "text": "suddenly went nuts I could scale that up without having to worry about scaling anything else up so these things are all",
    "start": "1032010",
    "end": "1039890"
  },
  {
    "text": "separate and if the note service goes down or the question service goes down",
    "start": "1039890",
    "end": "1045750"
  },
  {
    "text": "the page will still render but when it tries to download the little bit of JavaScript from the note service and the",
    "start": "1045750",
    "end": "1052470"
  },
  {
    "text": "little bit of JavaScript from the question service it won't be able to find them and so the notes panel won't",
    "start": "1052470",
    "end": "1059730"
  },
  {
    "text": "appear or the questions panel won't appear but the site will carry on running and it will carry on working so",
    "start": "1059730",
    "end": "1065700"
  },
  {
    "text": "everything is isolated from everything else and everything is independent what I'm planning on doing is coming up",
    "start": "1065700",
    "end": "1073490"
  },
  {
    "text": "with an internal registry inside the server cluster probably in Redis where",
    "start": "1073490",
    "end": "1080800"
  },
  {
    "text": "services can come up and go hello I'm here and when you render this view I",
    "start": "1080800",
    "end": "1086960"
  },
  {
    "text": "would like to be included in that view so here's the JavaScript that I would like you to include in that view and so",
    "start": "1086960",
    "end": "1092960"
  },
  {
    "text": "then I can deploy a whole new service and have it automatically integrate itself into everything that's already",
    "start": "1092960",
    "end": "1099410"
  },
  {
    "text": "there without me actually having to change anything else do you guys have Amazon in Australia I sorry I don't know",
    "start": "1099410",
    "end": "1108860"
  },
  {
    "text": "what you have Woolworths and so I saw a Woolworths which used to be in the UK",
    "start": "1108860",
    "end": "1113990"
  },
  {
    "text": "but it went bust and so when I send it was Amazon that made Woolworths go bust so when I saw Woolworths so I thought",
    "start": "1113990",
    "end": "1119750"
  },
  {
    "text": "maybe they don't have Amazon see thinking but no when you go to an Amazon",
    "start": "1119750",
    "end": "1126980"
  },
  {
    "text": "product page you see all sorts of things reviews other people who looked at this",
    "start": "1126980",
    "end": "1132290"
  },
  {
    "text": "also like this other thing there are no reviews from the Australian Amazon would you like to see some reviews and see",
    "start": "1132290",
    "end": "1138230"
  },
  {
    "text": "what Americans thought of it no why would I want that but you know it's there when people have an idea for",
    "start": "1138230",
    "end": "1145940"
  },
  {
    "text": "something that might be cool on the Amazon product page they write it and they register it in this kind of internal registry and these things just",
    "start": "1145940",
    "end": "1152870"
  },
  {
    "text": "appear on the page which is why they all load asynchronously because they're actually being pulled in people can add",
    "start": "1152870",
    "end": "1159050"
  },
  {
    "text": "stuff into that product page without actually having to go to the product page code and make any changes rights",
    "start": "1159050",
    "end": "1164480"
  },
  {
    "text": "why things come out in different orders sometimes so I'm trying to achieve that as well so we have a kind of thing that",
    "start": "1164480",
    "end": "1172430"
  },
  {
    "text": "puts itself together auto magically so",
    "start": "1172430",
    "end": "1178310"
  },
  {
    "text": "this is all running on asp net core 2.1 some bits of it are running on asp net",
    "start": "1178310",
    "end": "1184820"
  },
  {
    "text": "core 2.1 preview bits because i got them working and i haven't needed to do",
    "start": "1184820",
    "end": "1191480"
  },
  {
    "text": "anything to them since and so they're still stuck on those they've been up since january the identity bit is",
    "start": "1191480",
    "end": "1198410"
  },
  {
    "text": "running on asp net core two point one point four because it working yesterday and so I had to fix it",
    "start": "1198410",
    "end": "1205599"
  },
  {
    "text": "and do horrible things to it to make it work so everything's running on",
    "start": "1205599",
    "end": "1211279"
  },
  {
    "text": "different bits of asp net core 2.1 this is another great thing about",
    "start": "1211279",
    "end": "1218059"
  },
  {
    "text": "micro-services tech moves fast so I work my day job I work on a big monolithic",
    "start": "1218059",
    "end": "1224959"
  },
  {
    "text": "WPF application 120 something projects in this solution 20000 unit tests and at",
    "start": "1224959",
    "end": "1232969"
  },
  {
    "text": "the start of this year we migrated it to dotnet 4.6.1 yay Enterprise and in order to do that",
    "start": "1232969",
    "end": "1241519"
  },
  {
    "text": "we had to test every single last grid box and data field and button and",
    "start": "1241519",
    "end": "1249109"
  },
  {
    "text": "back-end service and everything to make sure that it was okay to upgrade it to",
    "start": "1249109",
    "end": "1254299"
  },
  {
    "text": "dotnet 4 6 1 and we had to make sure that all our upstream libraries worked with dotnet 4 6 1 it was an absolute",
    "start": "1254299",
    "end": "1260570"
  },
  {
    "text": "pain in the backside okay if we'd broken it not sure how you break a WPF",
    "start": "1260570",
    "end": "1265579"
  },
  {
    "text": "application down into micro WPF applications pretty sure it's possible but if you could do that then you could",
    "start": "1265579",
    "end": "1272959"
  },
  {
    "text": "upgrade it one bit at a time and just go write this bits running on 4 6 1 now and everything else is still running on 4 5",
    "start": "1272959",
    "end": "1278779"
  },
  {
    "text": "2 so I can do this some of the stuff that's in asp net core to point to",
    "start": "1278779",
    "end": "1284450"
  },
  {
    "text": "preview looks pretty cool but i don't necessarily want to trust signal are 2.2 preview or 1.1 preview or whatever it is",
    "start": "1284450",
    "end": "1291709"
  },
  {
    "text": "just yet I want to kind of hold off so I can update the bits of this that would",
    "start": "1291709",
    "end": "1296929"
  },
  {
    "text": "benefit from 2.2 and if they work that's fine and I'll deploy them I don't have",
    "start": "1296929",
    "end": "1301999"
  },
  {
    "text": "to worry about upgrading everything and maybe breaking one bit of one service ok",
    "start": "1301999",
    "end": "1307609"
  },
  {
    "text": "but at the moment it's all pretty much asp net core 2.1 it's using Postgres",
    "start": "1307609",
    "end": "1312950"
  },
  {
    "text": "equal for all its data storage but the questions and answers thing I'm thinking",
    "start": "1312950",
    "end": "1318739"
  },
  {
    "text": "of moving across to cosmos DB because that makes perfect sense for each slide there's a document in cosmos DB which",
    "start": "1318739",
    "end": "1326479"
  },
  {
    "text": "has got an array of questions and the questions have got an array of answers that's the document database seems silly",
    "start": "1326479",
    "end": "1331700"
  },
  {
    "text": "to do that with Postgres equal database and yes I know post Chris does Jason",
    "start": "1331700",
    "end": "1336920"
  },
  {
    "text": "I have a redis server that's running on the cluster it happens to be on the",
    "start": "1336920",
    "end": "1342740"
  },
  {
    "text": "cluster at the moment I could move that out and use Azure Redis if I had $800 a",
    "start": "1342740",
    "end": "1347960"
  },
  {
    "text": "month to spend on my caching but Redis is being used for caching and also for",
    "start": "1347960",
    "end": "1354370"
  },
  {
    "text": "shared keys so data protection keys are being shared via Redis and it's also",
    "start": "1354370",
    "end": "1360230"
  },
  {
    "text": "doing some pub/sub stuff and I'm also using Azure storage and as you a service",
    "start": "1360230",
    "end": "1365480"
  },
  {
    "text": "bus to send messages around and to store the slides if I wanted to pick this UPS",
    "start": "1365480",
    "end": "1371630"
  },
  {
    "text": "on my slide service is hard-coded to use Azure storage if I want to make this",
    "start": "1371630",
    "end": "1377510"
  },
  {
    "text": "application work in AWS then AWS has Redis AWS has Postgres equal AWS doesn't",
    "start": "1377510",
    "end": "1385700"
  },
  {
    "text": "have Azure storage I could just rewrite the slide service and create a new",
    "start": "1385700",
    "end": "1390860"
  },
  {
    "text": "version a new alternative version of the slide service that talks to s3 storage",
    "start": "1390860",
    "end": "1395870"
  },
  {
    "text": "and dumps the slides in there and so at that point we've got kind of micro services as dependency injection I just",
    "start": "1395870",
    "end": "1403610"
  },
  {
    "text": "changed my helmet or whatever it is and I bring it up in AWS with the s3 thing",
    "start": "1403610",
    "end": "1409310"
  },
  {
    "text": "and in Google Cloud with however Google cloud stores blobs I don't know okay so",
    "start": "1409310",
    "end": "1418160"
  },
  {
    "text": "communication between these none of these micro services are talking",
    "start": "1418160",
    "end": "1423230"
  },
  {
    "text": "directly to any of the other micro services sometimes that is a good pattern sometimes that is what you want",
    "start": "1423230",
    "end": "1429110"
  },
  {
    "text": "to do and you can use HTTP or you can use G RPC and have micro services",
    "start": "1429110",
    "end": "1435110"
  },
  {
    "text": "communicate directly with each other use either some form of DNS or console xcd",
    "start": "1435110",
    "end": "1441410"
  },
  {
    "text": "zookeeper so that when a micro service comes online it says hey I'm here I do this and this is my IP address and my",
    "start": "1441410",
    "end": "1448430"
  },
  {
    "text": "port number and then the other micro services use that to find it I've built this so that everything kind of comes",
    "start": "1448430",
    "end": "1454400"
  },
  {
    "text": "together through the browser interface which works perfectly for me because I've got a browser interface but if",
    "start": "1454400",
    "end": "1460070"
  },
  {
    "text": "you've got a mobile application or a desktop application that might not be appropriate for you so you might want to",
    "start": "1460070",
    "end": "1468059"
  },
  {
    "text": "look at having a manager service that talks to all an API management service that talks to the micro services behind",
    "start": "1468059",
    "end": "1475200"
  },
  {
    "text": "it the key thing to aim for here though is the communication between micro",
    "start": "1475200",
    "end": "1482279"
  },
  {
    "text": "services as far as possible should be asynchronous so if a micro service is going to tell another Micra so I say",
    "start": "1482279",
    "end": "1490349"
  },
  {
    "text": "micro service a lot in this talk I've only just realized that this is like the eighth time this year I've given this talk I'm just gonna say service if a",
    "start": "1490349",
    "end": "1499229"
  },
  {
    "text": "service wants to tell another service that something has happened it should do that by putting a message on a bus a lot",
    "start": "1499229",
    "end": "1506429"
  },
  {
    "text": "of people would argue that if a message if a service wants to ask for information from another service it",
    "start": "1506429",
    "end": "1512700"
  },
  {
    "text": "should do that by putting a request reply message on a bus and waiting for a",
    "start": "1512700",
    "end": "1518399"
  },
  {
    "text": "reply and not really care about where that reply comes from you see setups",
    "start": "1518399",
    "end": "1524549"
  },
  {
    "text": "where you get one request actually results in three replies and then the",
    "start": "1524549",
    "end": "1530369"
  },
  {
    "text": "consuming service mushes those replies together and then sends them on to wherever it's going - what I've got here",
    "start": "1530369",
    "end": "1537779"
  },
  {
    "text": "is someone asks a question and the question service puts that on to pub/sub",
    "start": "1537779",
    "end": "1544200"
  },
  {
    "text": "things so that everything else in the system can see that a question has just been asked when a slide is uploaded it",
    "start": "1544200",
    "end": "1550409"
  },
  {
    "text": "tells the real-time hub that the slide has been uploaded and is now available",
    "start": "1550409",
    "end": "1556679"
  },
  {
    "text": "so the real-time hub can tell everybody's device that that slide is now available and it's okay to move on",
    "start": "1556679",
    "end": "1561960"
  },
  {
    "text": "automatically on the people who are watching and so on and so forth so it's",
    "start": "1561960",
    "end": "1567450"
  },
  {
    "text": "as much as possible communicating over buses and queues might be RabbitMQ 0 mq",
    "start": "1567450",
    "end": "1573089"
  },
  {
    "text": "service bus ask us whatever it is ok but asynchronous and no failure if something",
    "start": "1573089",
    "end": "1581580"
  },
  {
    "text": "doesn't happen you might want to sit there and spin for a bit and you might want to say okay you might want to say",
    "start": "1581580",
    "end": "1588989"
  },
  {
    "text": "do this asynchronously by posting something on here with an identifier and then pulling something else with an",
    "start": "1588989",
    "end": "1595379"
  },
  {
    "text": "identifier until it comes back or 5 seconds have passed whichever happens first so yeah",
    "start": "1595379",
    "end": "1601980"
  },
  {
    "text": "asynchronous undirected I'm gonna put a message on a pubsub bus I don't know who's gonna consume it I don't know what",
    "start": "1601980",
    "end": "1608490"
  },
  {
    "text": "they're going to do with it if every single thing that happens in the system goes onto a bus then it's very easy to",
    "start": "1608490",
    "end": "1614639"
  },
  {
    "text": "add new behavior to a system without having to change the code that's posting that message it doesn't have to know",
    "start": "1614639",
    "end": "1620940"
  },
  {
    "text": "that there's a new thing it needs to tell it just goes this has happened so that's kind of getting into event",
    "start": "1620940",
    "end": "1626279"
  },
  {
    "text": "sourcing but I don't know what if insourcing is and I don't care",
    "start": "1626279",
    "end": "1631649"
  },
  {
    "text": "don't tell Greg so yes so I'm using queues with service bus and I'm using",
    "start": "1631649",
    "end": "1639870"
  },
  {
    "text": "pub/sub through Redis queues have the advantage where you can say at most once",
    "start": "1639870",
    "end": "1646679"
  },
  {
    "text": "delivery or at least one exactly once delivery and you can create a queue in",
    "start": "1646679",
    "end": "1652230"
  },
  {
    "text": "service bus and then you can create groups of readers off that queue and one",
    "start": "1652230",
    "end": "1657480"
  },
  {
    "text": "actor from each group will get that message read off that queue pub/sub is",
    "start": "1657480",
    "end": "1663299"
  },
  {
    "text": "just everything needs to know that this has happened there are two instances of the service bus running so when a slide",
    "start": "1663299",
    "end": "1668940"
  },
  {
    "text": "becomes available both of them need to know that that slide is now available so that's just pub/sub so you use different",
    "start": "1668940",
    "end": "1675090"
  },
  {
    "text": "queues for different purposes if everything can act on something then that's pub/sub if you are gonna update a",
    "start": "1675090",
    "end": "1682529"
  },
  {
    "text": "running total somewhere you don't want two things to update that running total because it will go wrong okay so this is",
    "start": "1682529",
    "end": "1690990"
  },
  {
    "text": "what I'm using obviously there are lots of other technologies out there and at the end of the day it is perfectly fine",
    "start": "1690990",
    "end": "1697289"
  },
  {
    "text": "to say yo HTTP me this information because I want to stick it into this",
    "start": "1697289",
    "end": "1703830"
  },
  {
    "text": "result that I'm sending out but put a timeout on it wrap it in poly retries or",
    "start": "1703830",
    "end": "1710309"
  },
  {
    "text": "circuit breakers or whatever it might be so that if the thing it's asking goes away it fails and it fails reasonably",
    "start": "1710309",
    "end": "1717240"
  },
  {
    "text": "quickly so that everything else keeps going at the same speed so these are the",
    "start": "1717240",
    "end": "1722669"
  },
  {
    "text": "parts here we did that already this is the deployment so at the top there you",
    "start": "1722669",
    "end": "1728700"
  },
  {
    "text": "got your browser that's the thing that you're in watching my slides go by going my goodness",
    "start": "1728700",
    "end": "1733919"
  },
  {
    "text": "look marvelous presentation tall this is I made this slide by doing it in",
    "start": "1733919",
    "end": "1740040"
  },
  {
    "text": "PowerPoint and then presenting it and doing a screen grab and then dumping the",
    "start": "1740040",
    "end": "1745380"
  },
  {
    "text": "PNG into my presentation it's not cheating shut up your browser is talking",
    "start": "1745380",
    "end": "1752220"
  },
  {
    "text": "to a Nazir load balancer the is your load balancer is sitting in front of a kubernetes cluster and it's using an",
    "start": "1752220",
    "end": "1759150"
  },
  {
    "text": "engine X ingress controller and depending on what the first part of the URL is it will route that request to",
    "start": "1759150",
    "end": "1766800"
  },
  {
    "text": "different micro-services within this setup okay and I'm about to show you how",
    "start": "1766800",
    "end": "1771840"
  },
  {
    "text": "that works so obviously it's running in docker in",
    "start": "1771840",
    "end": "1776910"
  },
  {
    "text": "kubernetes because everything that's anything is running in docker and kubernetes now except docker and",
    "start": "1776910",
    "end": "1782730"
  },
  {
    "text": "kubernetes actually I think even docker runs in docker now but anyway so yes it",
    "start": "1782730",
    "end": "1790050"
  },
  {
    "text": "used to be that there were competing scheduling an orchestration platforms",
    "start": "1790050",
    "end": "1796800"
  },
  {
    "text": "there was Apache missus and missus fear there was docker swarm there was the new",
    "start": "1796800",
    "end": "1804090"
  },
  {
    "text": "docker swarm that wasn't the old docker swarm and was completely different worked in different ways but was still",
    "start": "1804090",
    "end": "1809520"
  },
  {
    "text": "called exactly the same thing which wasn't confusing at all and there was kubernetes and there was a lot of debate",
    "start": "1809520",
    "end": "1815640"
  },
  {
    "text": "and there were lots of little ones as well and there was a lot of debate about which one you should use and which one was better for each purposes and then",
    "start": "1815640",
    "end": "1822510"
  },
  {
    "text": "this year last year maybe kubernetes just won so now you have docker it was",
    "start": "1822510",
    "end": "1830040"
  },
  {
    "text": "called docker for Windows or docker for Mac it's just in the middle of a name change to docker desktop but that's what",
    "start": "1830040",
    "end": "1836580"
  },
  {
    "text": "you use on your machine unless you're running Linux in which case it's just docker and Microsoft provide docker",
    "start": "1836580",
    "end": "1844170"
  },
  {
    "text": "images for all the dotnet flavors on different Linux bases there are armed 64",
    "start": "1844170",
    "end": "1852330"
  },
  {
    "text": "and armed 32 variants there are windows docker images blessum but you can get",
    "start": "1852330",
    "end": "1859470"
  },
  {
    "text": "all of those from under hub dot-com / you / Microsoft and so makes it very",
    "start": "1859470",
    "end": "1865230"
  },
  {
    "text": "easy for you to build your asp net core application into a docker image push it",
    "start": "1865230",
    "end": "1871080"
  },
  {
    "text": "to a registry and do fun things with it so let's have a look at how we do that a",
    "start": "1871080",
    "end": "1876690"
  },
  {
    "text": "couple of things we've got docker files to start off with so I will show you the docker file for one of these let's do it",
    "start": "1876690",
    "end": "1884220"
  },
  {
    "text": "for live so we have a docker file here",
    "start": "1884220",
    "end": "1890360"
  },
  {
    "text": "and so you can see here this is still running off to one three release",
    "start": "1890419",
    "end": "1897840"
  },
  {
    "text": "candidate one because I haven't needed to upgrade it yet and with the docker file all you do is",
    "start": "1897840",
    "end": "1904590"
  },
  {
    "text": "you say use this base image that from means use this as a base image so this is Microsoft's image that has got the",
    "start": "1904590",
    "end": "1911190"
  },
  {
    "text": "dotnet Core two one free SDK installed on the Ubuntu Bionic base image okay so",
    "start": "1911190",
    "end": "1920279"
  },
  {
    "text": "we get that and we create and change into a slash code directory and then we",
    "start": "1920279",
    "end": "1926250"
  },
  {
    "text": "copy the entire contents of the current directory which is the solution level into our working image as docker is",
    "start": "1926250",
    "end": "1934230"
  },
  {
    "text": "building this it creates container after container and each container changes the",
    "start": "1934230",
    "end": "1940770"
  },
  {
    "text": "underlying image and then that is what the next container loads as its base image and so we go through a series of",
    "start": "1940770",
    "end": "1946740"
  },
  {
    "text": "steps and build up this container layer by layer build up the image layer by layer so then we copy everything into",
    "start": "1946740",
    "end": "1953820"
  },
  {
    "text": "there we changed the working directory into the main cs project directory and then we just run dotnet publish send the",
    "start": "1953820",
    "end": "1961620"
  },
  {
    "text": "output to a slash output directory configuration release because we want this to run fast if possible and then we",
    "start": "1961620",
    "end": "1968159"
  },
  {
    "text": "have another from if you use docker in the past but you haven't used it recently that might seem confusing this",
    "start": "1968159",
    "end": "1974490"
  },
  {
    "text": "is called a multi-stage build people would go through hoops to make their",
    "start": "1974490",
    "end": "1981240"
  },
  {
    "text": "docker builds as lean as possible to make the resulting image as lean as possible when we started out with this",
    "start": "1981240",
    "end": "1986850"
  },
  {
    "text": "stuff you would just use the SDK image you'd put your source code into it you'd",
    "start": "1986850",
    "end": "1991950"
  },
  {
    "text": "build it and then that would be what you released you would send a docker image out there into the wild with your source",
    "start": "1991950",
    "end": "1997950"
  },
  {
    "text": "code on it yay maybe not a plan so people came out to do multistage builds where they would",
    "start": "1997950",
    "end": "2003919"
  },
  {
    "text": "create one dockerfile that would do the build and then leave",
    "start": "2003919",
    "end": "2009169"
  },
  {
    "text": "an image dangling at the end of it and then they would create another docker file that manually mounted that image",
    "start": "2009169",
    "end": "2015110"
  },
  {
    "text": "and copied the assets off it into a new image and docker saw everybody doing",
    "start": "2015110",
    "end": "2021080"
  },
  {
    "text": "this and went fine we'll just built that into the docker file syntax in the first place so this second line down here",
    "start": "2021080",
    "end": "2026870"
  },
  {
    "text": "where it says from no shift V there we",
    "start": "2026870",
    "end": "2034519"
  },
  {
    "text": "go so the top one we're going from the SDK image the second one we're just going from the asp net core runtime",
    "start": "2034519",
    "end": "2041299"
  },
  {
    "text": "image that's got the asp net core NuGet packages pre-installed on it and so we",
    "start": "2041299",
    "end": "2048020"
  },
  {
    "text": "just pull that one down and then we copy the output directory from the previous image onto this new image which has just",
    "start": "2048020",
    "end": "2055730"
  },
  {
    "text": "got our release dll's inside it and then we set the work directory and we set the entry point so that when this container",
    "start": "2055730",
    "end": "2062540"
  },
  {
    "text": "starts up it will run dotnet deck our live DLL okay so this means the the",
    "start": "2062540",
    "end": "2069740"
  },
  {
    "text": "image that we're actually distributing is much smaller the SDK image is about",
    "start": "2069740",
    "end": "2075408"
  },
  {
    "text": "two gigabytes the runtime image is only about 70 or 80 megabytes and then you",
    "start": "2075409",
    "end": "2080780"
  },
  {
    "text": "put your code on top of it add another ten so you're under a hundred megabytes for each of these images the really",
    "start": "2080780",
    "end": "2086810"
  },
  {
    "text": "important thing with docker is that base image that runtime asp net core Bionic",
    "start": "2086810",
    "end": "2092480"
  },
  {
    "text": "base image if you've got 15 micro services running on a single docker host",
    "start": "2092480",
    "end": "2100880"
  },
  {
    "text": "that are all based off that one image it will only download that base image once",
    "start": "2100880",
    "end": "2105950"
  },
  {
    "text": "and then it will layer all of your application images on top of that same",
    "start": "2105950",
    "end": "2110990"
  },
  {
    "text": "image and it can do that because docker images are immutable so once it's become",
    "start": "2110990",
    "end": "2116450"
  },
  {
    "text": "an image you can't change it anymore so we can reuse that same base image over and over again so if you have one thing",
    "start": "2116450",
    "end": "2123380"
  },
  {
    "text": "running then that's your 90 megabyte image if you have 10 things running you've got that base 80 and then a",
    "start": "2123380",
    "end": "2130190"
  },
  {
    "text": "hundred on top of that so you only got 180 so it's nice and small and it's possible to make it smaller",
    "start": "2130190",
    "end": "2135800"
  },
  {
    "text": "if you want to see how to make these things as small as possible Scott Hanselman has been blogging on how small",
    "start": "2135800",
    "end": "2141170"
  },
  {
    "text": "you can make these he's got it down to about 35 megabytes for a complete application which is pretty cool so so",
    "start": "2141170",
    "end": "2149480"
  },
  {
    "text": "that's a docker file and then when I'm working on this locally obviously I want",
    "start": "2149480",
    "end": "2155930"
  },
  {
    "text": "to have all these applications all up and running at the same time and then I maybe want to attach to some of them",
    "start": "2155930",
    "end": "2161930"
  },
  {
    "text": "with the debugger and set breakpoints and see why my note service isn't working or something like that and so I",
    "start": "2161930",
    "end": "2167480"
  },
  {
    "text": "want to be able to bring up all 9 of these services plus a Redis bus a Postgres equal just so I can test things",
    "start": "2167480",
    "end": "2174830"
  },
  {
    "text": "locally which I could just sit there and do docker run that would be annoying I could put docker run commands into a",
    "start": "2174830",
    "end": "2181550"
  },
  {
    "text": "ps1 file or a CMD file but then if somebody wants to contribute and they're running on Mac or Linux that's not going",
    "start": "2181550",
    "end": "2187400"
  },
  {
    "text": "to work for them and so we have docker compose which lets you say I need all",
    "start": "2187400",
    "end": "2193190"
  },
  {
    "text": "these things to come up all at the same time and I want them to be able to see each other and I want to link between",
    "start": "2193190",
    "end": "2198230"
  },
  {
    "text": "them and everything so there's a docker compose file at the top of this here and",
    "start": "2198230",
    "end": "2209080"
  },
  {
    "text": "you can see we've got quite a lot of Yamal in here most of its copied and",
    "start": "2209080",
    "end": "2215240"
  },
  {
    "text": "pasted some of its copied and pasted and then not edited which causes very weird",
    "start": "2215240",
    "end": "2220460"
  },
  {
    "text": "behavior when you accidentally spin up the note service but tell everything it's the question service and then",
    "start": "2220460",
    "end": "2226970"
  },
  {
    "text": "wonder why you're getting 404s but this brings up each of my images it",
    "start": "2226970",
    "end": "2234350"
  },
  {
    "text": "will build the image so the here's the presenter image here and this says we're",
    "start": "2234350",
    "end": "2239630"
  },
  {
    "text": "going to use this image deck hub slash presenter 1.0 l42 if you can't find that",
    "start": "2239630",
    "end": "2245180"
  },
  {
    "text": "image then build the docker file that's inside this directory okay we set",
    "start": "2245180",
    "end": "2251420"
  },
  {
    "text": "environment variables we are using an internal network so that these things",
    "start": "2251420",
    "end": "2257930"
  },
  {
    "text": "can see each other using Dockers DNS service and we also bring up our",
    "start": "2257930",
    "end": "2264310"
  },
  {
    "text": "Postgres equal and Redis and influx DB and chronograph",
    "start": "2264310",
    "end": "2269329"
  },
  {
    "text": "for all sorts of interesting things in here once this is done and I've got this right I can just do docker compose up",
    "start": "2269329",
    "end": "2276469"
  },
  {
    "text": "and that's it my entire application comes up composed of one instance of",
    "start": "2276469",
    "end": "2282739"
  },
  {
    "text": "each micro service and then I can get on with figuring out why it's not working properly I use this image here traffic",
    "start": "2282739",
    "end": "2290839"
  },
  {
    "text": "traffic is a reverse proxy and it's it's not the best reverse proxy in raw",
    "start": "2290839",
    "end": "2297109"
  },
  {
    "text": "performance terms it's not as good as engine X or H a proxy but it is very good at knowing about docker and so you",
    "start": "2297109",
    "end": "2305390"
  },
  {
    "text": "can say to traffic you're running inside docker and here is how to interrogate that docker and then it will just watch",
    "start": "2305390",
    "end": "2312289"
  },
  {
    "text": "the docker daemon and every time a service is brought up it will say have you got some labels for me and if you",
    "start": "2312289",
    "end": "2318769"
  },
  {
    "text": "have then I'm going to route traffic to you and so I have a domain called micro",
    "start": "2318769",
    "end": "2325099"
  },
  {
    "text": "stuff dot IO which is set up with DNS",
    "start": "2325099",
    "end": "2331219"
  },
  {
    "text": "records which redirect any requests to Microsoft IO or a subdomain thereof to 1",
    "start": "2331219",
    "end": "2337789"
  },
  {
    "text": "to 7.1 so I can go to HTTP colon slash slash my Christos slash questions and",
    "start": "2337789",
    "end": "2346609"
  },
  {
    "text": "that would bring up the questions thing running in here so I can use that as my my local development URL and so can you",
    "start": "2346609",
    "end": "2354680"
  },
  {
    "text": "because it's there and I can't get rid of it because it's booked for the next ten years and it's always going to point",
    "start": "2354680",
    "end": "2360559"
  },
  {
    "text": "at one to seven zero zero one so yeah go for it use that so traffic picks up",
    "start": "2360559",
    "end": "2366259"
  },
  {
    "text": "things off micro stuff to i/o as you can see here and then it looks at the labels",
    "start": "2366259",
    "end": "2372319"
  },
  {
    "text": "on the other things that are in here and so this says traffic front end rule so",
    "start": "2372319",
    "end": "2378410"
  },
  {
    "text": "this is the notes microservice the host is microsoft io that's fine path prefix notes and so anything that",
    "start": "2378410",
    "end": "2386059"
  },
  {
    "text": "has the path prefix notes will get routed by traffic to this service here okay so I get my micro service cluster",
    "start": "2386059",
    "end": "2393140"
  },
  {
    "text": "running up for local development that's fine that's local stuff previously I",
    "start": "2393140",
    "end": "2401690"
  },
  {
    "text": "could have used that dock pose file with docker swarm and it would have done something fairly similar in",
    "start": "2401690",
    "end": "2408529"
  },
  {
    "text": "practice that never quite worked out so in production I want to run on kubernetes and there are multiple reasons for that",
    "start": "2408529",
    "end": "2415400"
  },
  {
    "text": "but primarily it's the most adopted it's the most mature technology out there",
    "start": "2415400",
    "end": "2421069"
  },
  {
    "text": "it's the one that's got the ecosystem and the tools built up around it but more importantly than that it's the one",
    "start": "2421069",
    "end": "2427729"
  },
  {
    "text": "that is provided as a first party service by the three major cloud platform so as you as AAS Google has gke",
    "start": "2427729",
    "end": "2435440"
  },
  {
    "text": "and Amazon will eventually get eks out of its beta phase and start supporting it properly and the best thing about all",
    "start": "2435440",
    "end": "2442819"
  },
  {
    "text": "three of those is you don't pay for your control playing notes so a kubernetes cluster consists of the control plane",
    "start": "2442819",
    "end": "2449809"
  },
  {
    "text": "which if you want resilience is three separate nodes all talking to each other",
    "start": "2449809",
    "end": "2456619"
  },
  {
    "text": "over at CD and working together to manage the worker nodes which is where",
    "start": "2456619",
    "end": "2462559"
  },
  {
    "text": "your application itself is actually running so if you wanted a resilient",
    "start": "2462559",
    "end": "2467599"
  },
  {
    "text": "system that could survive one of the master nodes going out you can't have to because if you only have two nodes at CD",
    "start": "2467599",
    "end": "2474019"
  },
  {
    "text": "doesn't know what to do because it needs a raft consensus and you can't do rough consensus with even numbers so you have",
    "start": "2474019",
    "end": "2480559"
  },
  {
    "text": "to run three master nodes and then you have to run worker nodes as well and you want three to five worker knows so",
    "start": "2480559",
    "end": "2485839"
  },
  {
    "text": "suddenly you've got like eight nodes running and this has got really expensive aks gke and e KS all run the",
    "start": "2485839",
    "end": "2492229"
  },
  {
    "text": "master control plane for you so you're only paying for your worker nodes which is a massive saving so this is actually",
    "start": "2492229",
    "end": "2499279"
  },
  {
    "text": "running on three burstable VMs in Azure which have just got my worker processes",
    "start": "2499279",
    "end": "2505219"
  },
  {
    "text": "running and Microsoft are paying for my control plane which is very nice of them and makes up for them taking my as your",
    "start": "2505219",
    "end": "2510499"
  },
  {
    "text": "MVP away which was what used to pay for everything running in is here it is",
    "start": "2510499",
    "end": "2516469"
  },
  {
    "text": "possible to spin up your own kubernetes cluster don't don't just don't it's",
    "start": "2516469",
    "end": "2522170"
  },
  {
    "text": "horrible just just spinning up at CD frankly is is beyond what I would",
    "start": "2522170",
    "end": "2528349"
  },
  {
    "text": "suggest most people put themselves through so yes you can if you have an",
    "start": "2528349",
    "end": "2533749"
  },
  {
    "text": "ops team that's their job now if you have to run stuff on Prem then go to your ops team and say we need",
    "start": "2533749",
    "end": "2539690"
  },
  {
    "text": "kubernetes just do it and then once they've got that done then your job's easy and if anything goes wrong with it",
    "start": "2539690",
    "end": "2545570"
  },
  {
    "text": "it's not your problem DevOps so kubernetes works on the basis",
    "start": "2545570",
    "end": "2552410"
  },
  {
    "text": "of clusters and nodes I have a single cluster that cluster has three nodes in it and then I create workloads that run",
    "start": "2552410",
    "end": "2559460"
  },
  {
    "text": "on those nodes and workloads are things that I need to happen and at the",
    "start": "2559460",
    "end": "2566119"
  },
  {
    "text": "simplest level this is I need you to run a container but kubernetes has lots of different kinds of workloads and you can",
    "start": "2566119",
    "end": "2572930"
  },
  {
    "text": "add your own workload into kubernetes so you can say right so I'm running engine X but you can also say I'm running",
    "start": "2572930",
    "end": "2578810"
  },
  {
    "text": "engine X as an ingress controller and an ingress controller is another kind of workload that does something very",
    "start": "2578810",
    "end": "2584420"
  },
  {
    "text": "specific and gets access to different parts of the system and so forth and you can say certain workloads have certain",
    "start": "2584420",
    "end": "2590990"
  },
  {
    "text": "permissions within the cluster and they can bring up other nodes in the cluster or they can bring up other pods in the cluster okay and then we have pods so",
    "start": "2590990",
    "end": "2598640"
  },
  {
    "text": "docker talks about containers a container is essentially a single process you can run multiple processes",
    "start": "2598640",
    "end": "2604280"
  },
  {
    "text": "in in a single container but don't because it's wrong okay unless it's just launching a process quickly to do",
    "start": "2604280",
    "end": "2610730"
  },
  {
    "text": "something which then dies again that's okay but really a container is an isolation wrapper around a single",
    "start": "2610730",
    "end": "2617300"
  },
  {
    "text": "process kubernetes works on the basis of pods and a pod is at least one container",
    "start": "2617300",
    "end": "2623630"
  },
  {
    "text": "but it can be more and this is quite often used for what's called sidecar containers so you have your primary",
    "start": "2623630",
    "end": "2630470"
  },
  {
    "text": "application container and then you might have a log stash sidecar attached inside",
    "start": "2630470",
    "end": "2636230"
  },
  {
    "text": "that pod everything inside a pod can talk to everything else inside that pod over localhost",
    "start": "2636230",
    "end": "2642230"
  },
  {
    "text": "nothing outside that pod can see anything inside that pod unless it explicitly says so okay this is",
    "start": "2642230",
    "end": "2649010"
  },
  {
    "text": "important because we're about to look at some kubernetes files and it's important to understand how those work so to use",
    "start": "2649010",
    "end": "2656660"
  },
  {
    "text": "kubernetes you need a kubernetes cluster somewhere if you have docker desktop for",
    "start": "2656660",
    "end": "2663109"
  },
  {
    "text": "Windows or Mac you can go into the UI for that and there is a kubernetes tab",
    "start": "2663109",
    "end": "2669230"
  },
  {
    "text": "in the why and you can just turn it on yay you now have a kubernetes cluster that's much easier than it was at the start of",
    "start": "2669230",
    "end": "2675289"
  },
  {
    "text": "this year when you had to run mini Cube which involved doing terrible things with hyper-v if I remember rightly",
    "start": "2675289",
    "end": "2681520"
  },
  {
    "text": "you also need cube CTL which is a single self-contained executable written in go",
    "start": "2681520",
    "end": "2687650"
  },
  {
    "text": "and you can install that using chocolaty or you can just go and grab it from the kubernetes website and download it",
    "start": "2687650",
    "end": "2694700"
  },
  {
    "text": "cube CTL is a command-line tool that you use to talk to your kubernetes cluster",
    "start": "2694700",
    "end": "2701920"
  },
  {
    "text": "you also need lots and lots and lots of yam all there is a just an insane amount",
    "start": "2701920",
    "end": "2707660"
  },
  {
    "text": "of yeah Mille in this world of cloud native and DevOps and everything else everything runs on yeah Mille which is",
    "start": "2707660",
    "end": "2713000"
  },
  {
    "text": "the worst serialization format in the world except for all the others",
    "start": "2713000",
    "end": "2721420"
  },
  {
    "text": "apologies to Winston Churchill but there is a lot of yeah Mille and we also have",
    "start": "2721630",
    "end": "2727549"
  },
  {
    "text": "the ingress controller which in kubernetes terms is doing the same job as traffic was doing in my docker",
    "start": "2727549",
    "end": "2733369"
  },
  {
    "text": "compose file except kubernetes supports different technologies can provide this",
    "start": "2733369",
    "end": "2738380"
  },
  {
    "text": "ingress behavior the one that most people use is the nginx ingress controller so we're going to look at the",
    "start": "2738380",
    "end": "2745940"
  },
  {
    "text": "kubernetes file for one of these services so let's look at questions so",
    "start": "2745940",
    "end": "2753020"
  },
  {
    "text": "in here I have I put a cube directory into each of my service directories so",
    "start": "2753020",
    "end": "2758029"
  },
  {
    "text": "the yeah mall for running it in kubernetes gets checked into source control along with everything else ok so",
    "start": "2758029",
    "end": "2766119"
  },
  {
    "text": "here is my deploy ml file and I have got",
    "start": "2766119",
    "end": "2771940"
  },
  {
    "text": "so each entry in a yeah Mel file for kubernetes will have an API version",
    "start": "2771940",
    "end": "2778789"
  },
  {
    "text": "which tells cube CTL which API you want to be talking to with this data it will",
    "start": "2778789",
    "end": "2784130"
  },
  {
    "text": "have a kind which is like type so this is a deployment we have metadata about",
    "start": "2784130",
    "end": "2790099"
  },
  {
    "text": "it so the name of this deployment is questions it's in a namespace called Dec hub kubernetes supports namespaces if",
    "start": "2790099",
    "end": "2797720"
  },
  {
    "text": "that namespace doesn't exist then this won't go up you create a namespace using another one",
    "start": "2797720",
    "end": "2803030"
  },
  {
    "text": "these yeah Mel files where kind is set to namespace and then metadata name is Dec hub okay",
    "start": "2803030",
    "end": "2808820"
  },
  {
    "text": "this means that you can have a single massive kubernetes cluster and you can",
    "start": "2808820",
    "end": "2813830"
  },
  {
    "text": "run things for multiple teams in separate namespaces and they can't see each other at all so you've got like",
    "start": "2813830",
    "end": "2820310"
  },
  {
    "text": "it's almost like the private internal protected stuff inside c-sharp or",
    "start": "2820310",
    "end": "2825350"
  },
  {
    "text": "something like that so this is running in a deck hub namespace and then I have my spec and this is essentially the",
    "start": "2825350",
    "end": "2832190"
  },
  {
    "text": "container part so I want two instances of this running at all times this is a desired state configuration",
    "start": "2832190",
    "end": "2838130"
  },
  {
    "text": "thing if you don't know what desired state configuration means it means you set up some data that says this is what",
    "start": "2838130",
    "end": "2845210"
  },
  {
    "text": "this should look like and then it is the responsibility of the system to achieve that state and maintain it okay so I'm",
    "start": "2845210",
    "end": "2851990"
  },
  {
    "text": "saying there should be two replicas once I've told kubernetes this it will just keep itself busy making sure there are",
    "start": "2851990",
    "end": "2858320"
  },
  {
    "text": "always two replicas something goes down brings up another one I have a template",
    "start": "2858320",
    "end": "2863390"
  },
  {
    "text": "for it I'm putting some labels in here and I'm gonna set the app label to",
    "start": "2863390",
    "end": "2869630"
  },
  {
    "text": "questions and then I have my pod spec here and my containers I want one from",
    "start": "2869630",
    "end": "2876230"
  },
  {
    "text": "this image this now has to be pulled from an online docker repository I use",
    "start": "2876230",
    "end": "2881720"
  },
  {
    "text": "the docker hub these are all public images on the docker hub so it doesn't cost me anything but you can use as your",
    "start": "2881720",
    "end": "2888290"
  },
  {
    "text": "docker repository or you know an on-premise one the docker repository runs in docker so it's quite",
    "start": "2888290",
    "end": "2893690"
  },
  {
    "text": "easy to get going and then I have various environment variables so I have my run time path base this is the thing",
    "start": "2893690",
    "end": "2901790"
  },
  {
    "text": "that internally in asp net core 2.1 says every request you get is going to be",
    "start": "2901790",
    "end": "2907340"
  },
  {
    "text": "prefixed with questions so we can all that bit okay you'll see the code for that if you go and dig through the code",
    "start": "2907340",
    "end": "2913070"
  },
  {
    "text": "for the services where's my Redis host it's just running on Redis because it's another node in the cluster I've got my",
    "start": "2913070",
    "end": "2920270"
  },
  {
    "text": "app metrics in flux DB server which we'll look at in a bit and then I've got my connection strings and this is",
    "start": "2920270",
    "end": "2928330"
  },
  {
    "text": "another neat feature of kubernetes so we're always worried about where are we going to put our connection strings",
    "start": "2928330",
    "end": "2934160"
  },
  {
    "text": "because we don't want those to leak if you've been doing asp net classic that's just weird for any length of time",
    "start": "2934160",
    "end": "2943340"
  },
  {
    "text": "you'll know that the place you put your connection strings is in the connection string section of web.config you stick",
    "start": "2943340",
    "end": "2950090"
  },
  {
    "text": "them in their unencrypted what could possibly go wrong well going google web config and see how",
    "start": "2950090",
    "end": "2956810"
  },
  {
    "text": "many you can find with people's database connection strings in them now we want to put them somewhere no one else can",
    "start": "2956810",
    "end": "2962060"
  },
  {
    "text": "see them and so we stick them into secret's kubernetes support secrets as a",
    "start": "2962060",
    "end": "2967130"
  },
  {
    "text": "first-class thing and secrets are namespaced so only things in the deck up namespace can see things in the deck hub",
    "start": "2967130",
    "end": "2974690"
  },
  {
    "text": "secrets namespace so I've created a secret called questions DB and that's",
    "start": "2974690",
    "end": "2980060"
  },
  {
    "text": "got a value in it called connection string and that's encrypted by kubernetes and I stick it into an environment variable in here which means",
    "start": "2980060",
    "end": "2986750"
  },
  {
    "text": "it's never persisted unencrypted anywhere it's just gone into memory in this machine okay I'm also going to",
    "start": "2986750",
    "end": "2994340"
  },
  {
    "text": "expose port 80 which is what asp net core is going to be running on in here then I have a - - - which is a section",
    "start": "2994340",
    "end": "3001660"
  },
  {
    "text": "break in a ml file and then I have another component in there this is a",
    "start": "3001660",
    "end": "3007300"
  },
  {
    "text": "service so this is saying within this kubernetes cluster I am available I am a",
    "start": "3007300",
    "end": "3013570"
  },
  {
    "text": "service I do a thing and this is where I do it and so the kindest service the",
    "start": "3013570",
    "end": "3019810"
  },
  {
    "text": "name is questions namespaces Dec of you can find this service on port 80 from any other machine you can find it using",
    "start": "3019810",
    "end": "3026320"
  },
  {
    "text": "the questions name so you can just do HTTP colon slash slash questions and",
    "start": "3026320",
    "end": "3031720"
  },
  {
    "text": "you'll hit it and we have session affinity client IP which means that it's",
    "start": "3031720",
    "end": "3039280"
  },
  {
    "text": "sticky sessions basically so the load balancer will see this and then say right so once a client has hit this",
    "start": "3039280",
    "end": "3046450"
  },
  {
    "text": "particular instance once I should try and route all subsequent ones to that client and it will do its best to do",
    "start": "3046450",
    "end": "3052270"
  },
  {
    "text": "that that's very important for signal R which now requires sticky sessions or some serious gymnastics if you want to",
    "start": "3052270",
    "end": "3060010"
  },
  {
    "text": "have people bouncing around and then we have our ingress which is where we've got an engine X ingress controller setup",
    "start": "3060010",
    "end": "3066100"
  },
  {
    "text": "there's a helmet art for that helm deploy engine X once that's up and running then we",
    "start": "3066100",
    "end": "3072619"
  },
  {
    "text": "create an ingress component and that says hey nginx I want you to point to",
    "start": "3072619",
    "end": "3077869"
  },
  {
    "text": "this and we've got the host Decker app the path is questions root any requests",
    "start": "3077869",
    "end": "3083690"
  },
  {
    "text": "that start with questions to this service on this port okay so that's",
    "start": "3083690",
    "end": "3088789"
  },
  {
    "text": "getting it running in kubernetes now quick tip who's using asp net core at",
    "start": "3088789",
    "end": "3097789"
  },
  {
    "text": "all or just asp net with traditional entity framework so entity framework",
    "start": "3097789",
    "end": "3103190"
  },
  {
    "text": "uses EF core users people who don't like putting up their hands good with",
    "start": "3103190",
    "end": "3108740"
  },
  {
    "text": "traditional entity framework you would start up your application most asp net applications mostly they're running on",
    "start": "3108740",
    "end": "3115249"
  },
  {
    "text": "prem and they start up and you say ensure database and it goes off and it",
    "start": "3115249",
    "end": "3120259"
  },
  {
    "text": "makes sure that the database migration has been run and then your application carries on starting which is fine in AF",
    "start": "3120259",
    "end": "3125839"
  },
  {
    "text": "core if you say ensure database it will go off and make sure that migrations have been run doesn't create the history",
    "start": "3125839",
    "end": "3131569"
  },
  {
    "text": "table so when you try and run the next migration to upgrade it it'll just go and I don't have to do that because I",
    "start": "3131569",
    "end": "3137269"
  },
  {
    "text": "haven't got any records of what's been done so far so what you have to do is do",
    "start": "3137269",
    "end": "3142749"
  },
  {
    "text": "update database and then catch the error that says this database has already been",
    "start": "3142749",
    "end": "3148220"
  },
  {
    "text": "migrated what do you think you're doing so that's fine we can do that at startup as well except in a real sort of",
    "start": "3148220",
    "end": "3155599"
  },
  {
    "text": "business enterprise II type environment my replicas wouldn't be to my replicas",
    "start": "3155599",
    "end": "3161299"
  },
  {
    "text": "would be five or seven or nine depending on how big this was and you'd be amazed",
    "start": "3161299",
    "end": "3166430"
  },
  {
    "text": "how symmetrically these things come up so I've got five services and they all",
    "start": "3166430",
    "end": "3172460"
  },
  {
    "text": "come online at the same time and they all hit that line in my startup code that says update database and they all",
    "start": "3172460",
    "end": "3178549"
  },
  {
    "text": "go and look at the database and the migrations table and they all say oh look the migrations haven't been run and",
    "start": "3178549",
    "end": "3184609"
  },
  {
    "text": "they all start trying to update the database at the same time and everything catches fire and you're fired and you",
    "start": "3184609",
    "end": "3190549"
  },
  {
    "text": "have to go to London and work in a bar that's not good so I came up with pattern and I shared it with Julie",
    "start": "3190549",
    "end": "3198440"
  },
  {
    "text": "Lerman and she thought it was quite a good idea so I'm gonna stick with that where",
    "start": "3198440",
    "end": "3203540"
  },
  {
    "text": "I have my EF cor context and model classes go into a net standard library",
    "start": "3203540",
    "end": "3209810"
  },
  {
    "text": "which is just a data library and then I have a console application just called migrate which literally just does one",
    "start": "3209810",
    "end": "3217040"
  },
  {
    "text": "thing and it does it so often and I use this so many times I put a new get",
    "start": "3217040",
    "end": "3222200"
  },
  {
    "text": "package up called migrate Rendell Lab store entity framework called up my great helper and you pull that down you",
    "start": "3222200",
    "end": "3228470"
  },
  {
    "text": "put a design time context Factory into your application and you say await new",
    "start": "3228470",
    "end": "3234470"
  },
  {
    "text": "migration helper tri migrate and so I can spin up 15,000 instances of my",
    "start": "3234470",
    "end": "3242150"
  },
  {
    "text": "actual web application my micro service and I can spin up one instance of my great service and then I know that it's",
    "start": "3242150",
    "end": "3249410"
  },
  {
    "text": "only gonna run once and then it will go away and not bother anybody ever again",
    "start": "3249410",
    "end": "3254560"
  },
  {
    "text": "and if I go into my cube thing here this is another kind of kubernetes workload",
    "start": "3254560",
    "end": "3261350"
  },
  {
    "text": "this is a job and a job says start this container wait till it stops and then don't run it ever again don't use up my",
    "start": "3261350",
    "end": "3268880"
  },
  {
    "text": "valuable resources and so this runs from migrated console application I have a",
    "start": "3268880",
    "end": "3274490"
  },
  {
    "text": "docker file dot migrate to build the image and push it up and then I just have my secret connection string which",
    "start": "3274490",
    "end": "3280640"
  },
  {
    "text": "goes in there and so that loads up migrates the database so I run this and",
    "start": "3280640",
    "end": "3286640"
  },
  {
    "text": "then I run my deploy immediately afterwards and everything comes up and I",
    "start": "3286640",
    "end": "3291920"
  },
  {
    "text": "keep my database sane and I keep my migrations in line and everything else okay so the next pillar is monitoring",
    "start": "3291920",
    "end": "3301160"
  },
  {
    "text": "and metrics so you've got thousands of things running by this point and it's",
    "start": "3301160",
    "end": "3307430"
  },
  {
    "text": "very difficult to keep track of that and you've got lots of data points",
    "start": "3307430",
    "end": "3313370"
  },
  {
    "text": "potentially coming out of there how fast is it running how many requests is it serving is the CPU overheating what the",
    "start": "3313370",
    "end": "3320840"
  },
  {
    "text": "hell is actually going on anywhere in this stack which is now being maintained by fifteen separate teams none of whom",
    "start": "3320840",
    "end": "3327110"
  },
  {
    "text": "ever talk to each other even when we buy them pizza we don't know why that we think it's something to do with",
    "start": "3327110",
    "end": "3332630"
  },
  {
    "text": "developers but yeah what's going on so it's very important once you get into this world",
    "start": "3332630",
    "end": "3338390"
  },
  {
    "text": "to start putting code in for monitoring and logging and everything else so useful tools for that",
    "start": "3338390",
    "end": "3344299"
  },
  {
    "text": "Prometheus is extremely good for monitoring your kubernetes cluster kubernetes will just dump data out to",
    "start": "3344299",
    "end": "3349880"
  },
  {
    "text": "Prometheus for you in flux data in flux DB is very good for when you're pushing",
    "start": "3349880",
    "end": "3355549"
  },
  {
    "text": "metrics out when you're saying this has happened there are 15 of these this is this has gone wrong whatever it might be",
    "start": "3355549",
    "end": "3361930"
  },
  {
    "text": "though both of those are the metrics data so basically numbers just numbers",
    "start": "3361930",
    "end": "3367549"
  },
  {
    "text": "that you can then chart and make pretty dashboards and everything else elasticsearch is great for logging there",
    "start": "3367549",
    "end": "3373039"
  },
  {
    "text": "are also things like built into the",
    "start": "3373039",
    "end": "3378230"
  },
  {
    "text": "cloud platforms cloud watch and application insights and analytics and so forth there's also something that I",
    "start": "3378230",
    "end": "3384890"
  },
  {
    "text": "really like called container ship which I will show you quickly the reason I",
    "start": "3384890",
    "end": "3391369"
  },
  {
    "text": "like this is that it's free for developers but with container ship you",
    "start": "3391369",
    "end": "3397069"
  },
  {
    "text": "can just go in and you can add a cluster to your container ship login and so in",
    "start": "3397069",
    "end": "3403549"
  },
  {
    "text": "here I can see all my services running I can see that I've got some still running",
    "start": "3403549",
    "end": "3408859"
  },
  {
    "text": "from when it was called slidable which is interesting but I can go in and I can",
    "start": "3408859",
    "end": "3414319"
  },
  {
    "text": "look at my identity service and I can drill down into here and it's pulling",
    "start": "3414319",
    "end": "3419480"
  },
  {
    "text": "the Prometheus data and it's just creating this chart for me here so where I can see memory usage and CPU usage and",
    "start": "3419480",
    "end": "3424849"
  },
  {
    "text": "lots of other things and then I can drill down and I can see what's happening in a pod here and I can drill",
    "start": "3424849",
    "end": "3430279"
  },
  {
    "text": "down to the container in the pod and I can actually see the logs that are coming out of there because it's just",
    "start": "3430279",
    "end": "3436880"
  },
  {
    "text": "logging to console and that's getting picked up by kubernetes and piped through to container ship here so that's",
    "start": "3436880",
    "end": "3443270"
  },
  {
    "text": "pretty cool I also have metrics and the metrics are",
    "start": "3443270",
    "end": "3448700"
  },
  {
    "text": "going out to an influx DB database and I'm charting that with graph on ax which",
    "start": "3448700",
    "end": "3454760"
  },
  {
    "text": "is the standard sort of dashboarding tool and this is really nice this has got lots of information I can see my",
    "start": "3454760",
    "end": "3460970"
  },
  {
    "text": "throughput not very many requests a second I can see my error rate I see my",
    "start": "3460970",
    "end": "3466130"
  },
  {
    "text": "apdex score which is how well is this running from",
    "start": "3466130",
    "end": "3471410"
  },
  {
    "text": "the users point of view that combines lots of statistics and gives you a score out of one eye",
    "start": "3471410",
    "end": "3477770"
  },
  {
    "text": "Cirrus panse times and error rates and lots of other things and I can see how many milliseconds it's taking for each",
    "start": "3477770",
    "end": "3485030"
  },
  {
    "text": "of the different end points in the application and everything else that is done using a library called app metrics",
    "start": "3485030",
    "end": "3493100"
  },
  {
    "text": "for dotnet which is based on the Java library of the same name",
    "start": "3493100",
    "end": "3498800"
  },
  {
    "text": "no staffers version is just called metrics I think but at metrics is really",
    "start": "3498800",
    "end": "3504860"
  },
  {
    "text": "really nice and it's incredibly easy to drop into your application if I go into",
    "start": "3504860",
    "end": "3510860"
  },
  {
    "text": "here and go into questions and program",
    "start": "3510860",
    "end": "3516620"
  },
  {
    "text": "CS so there we go that's one part of it in my web host builder I say web host great default",
    "start": "3516620",
    "end": "3523460"
  },
  {
    "text": "builder use standard metrics you start up that's it I've turned on metrics in this application now and then in my",
    "start": "3523460",
    "end": "3530120"
  },
  {
    "text": "startup code here I just have to go into",
    "start": "3530120",
    "end": "3535160"
  },
  {
    "text": "Mike and I got services add MVC as normal set compatibility version add",
    "start": "3535160",
    "end": "3541070"
  },
  {
    "text": "metrics to MVC that's going to register a bunch of global filters and so on to actually track requests as they go",
    "start": "3541070",
    "end": "3547280"
  },
  {
    "text": "through the system and then in my yeah no that's it no he took that bit out you",
    "start": "3547280",
    "end": "3553460"
  },
  {
    "text": "don't have to do that anymore the really nice thing with that metrics right this lovely Grif on a dashboard",
    "start": "3553460",
    "end": "3558590"
  },
  {
    "text": "that I've got here he created that the guy who does this is al Hardy who I believe lives down this way and he",
    "start": "3558590",
    "end": "3566030"
  },
  {
    "text": "created this dashboard to represent the metrics that the library produces just out of the box and you can import this",
    "start": "3566030",
    "end": "3573110"
  },
  {
    "text": "dashboard by going to import dashboard and typing in a number it's a four digit number that you get off graph on elapsed",
    "start": "3573110",
    "end": "3579370"
  },
  {
    "text": "so you can have this and then you can like go this is what I'm doing working from home this week boss I'm gonna add",
    "start": "3579370",
    "end": "3585290"
  },
  {
    "text": "metrics to all our applications and create this dashboard and you just do it on Monday morning take the rest of the week go surfing or do whatever you do",
    "start": "3585290",
    "end": "3592940"
  },
  {
    "text": "with your time so platform services think you don't want to be running these inside your",
    "start": "3592940",
    "end": "3599000"
  },
  {
    "text": "cluster because things that run in kubernetes class as a generally ephemeral so don't don't",
    "start": "3599000",
    "end": "3604039"
  },
  {
    "text": "run anything important in there for the most part so databases sequel server post grzesiek or whatever you want to",
    "start": "3604039",
    "end": "3610309"
  },
  {
    "text": "consume those as a platform service you want the Ops guys to set those up and you can just have them on demand blob",
    "start": "3610309",
    "end": "3617029"
  },
  {
    "text": "storage messaging if you want persistent cache if you actually need a durable resilient cache",
    "start": "3617029",
    "end": "3623089"
  },
  {
    "text": "so my Redis that's running inside the cluster if that goes away everything carries on working it's just a bit",
    "start": "3623089",
    "end": "3628250"
  },
  {
    "text": "slower if you need a proper resilient persistent cache then use something like as you're ready or AWS Redis casual or",
    "start": "3628250",
    "end": "3636410"
  },
  {
    "text": "whatever on top of that and then for DevOps so you all know what DevOps is",
    "start": "3636410",
    "end": "3643670"
  },
  {
    "text": "continuous integration continuous deployment it's a guy sitting on a toilet eating tacos and I couldn't find",
    "start": "3643670",
    "end": "3650599"
  },
  {
    "text": "an image for that sorry because you know you want that at ten o'clock in the morning but yes so if you if your entire",
    "start": "3650599",
    "end": "3657710"
  },
  {
    "text": "build and everything can be done inside that docker file then you can just use docker hub I've started using Azure",
    "start": "3657710",
    "end": "3663859"
  },
  {
    "text": "pipelines which just popped up started using it yesterday and it's really really good really really easy you hook",
    "start": "3663859",
    "end": "3670609"
  },
  {
    "text": "it up to a github repository you write a bit more yeah Mille and then you've got things going through to your docker",
    "start": "3670609",
    "end": "3675880"
  },
  {
    "text": "registry and it's pushing into there you can also get lab if you use get lab on-premise or the cloud version that's",
    "start": "3675880",
    "end": "3683059"
  },
  {
    "text": "got an integrated pipelines process that's really nice as well and obviously you can run self-hosted teamcity jenkins",
    "start": "3683059",
    "end": "3689569"
  },
  {
    "text": "and everything else the key point is when you check in some code it should be pulled out somewhere it should be built",
    "start": "3689569",
    "end": "3695690"
  },
  {
    "text": "some automated tests should be run against it if it passes those tests and if you're feeling particularly DevOps",
    "start": "3695690",
    "end": "3701390"
  },
  {
    "text": "see then that release should be tagged it should be upgraded and it should go on to the next process where it gets",
    "start": "3701390",
    "end": "3707150"
  },
  {
    "text": "automatically deployed into production that's DevOps it's whole other talk I'm sure there are plenty people here who",
    "start": "3707150",
    "end": "3713000"
  },
  {
    "text": "are ready to talk to you about it that's it from me if you want to download this code and play with it and see how this",
    "start": "3713000",
    "end": "3719539"
  },
  {
    "text": "actually works on the inside go to github.com slash deck hub app if you've got any questions or if you want to see",
    "start": "3719539",
    "end": "3725089"
  },
  {
    "text": "the karate thing which is pretty cool I'm around the conference for the next couple of days come find me come talk I like talking to people I",
    "start": "3725089",
    "end": "3732259"
  },
  {
    "text": "hope you have a great day I hope you enjoy this and I will see you again sometime thank you",
    "start": "3732259",
    "end": "3739420"
  }
]