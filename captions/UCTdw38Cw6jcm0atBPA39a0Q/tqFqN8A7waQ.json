[
  {
    "start": "0",
    "end": "138000"
  },
  {
    "text": "hello welcome I've called this torque modern web application bugs it turns out",
    "start": "5569",
    "end": "13770"
  },
  {
    "text": "that a lot of the stuff that we find to be modern is actually quite old so um we'll get back to that but some of the",
    "start": "13770",
    "end": "20520"
  },
  {
    "text": "stuff is modern in the sense that it's retro it's come back I'm either really",
    "start": "20520",
    "end": "27900"
  },
  {
    "text": "stupid or quite brave because I'm gonna do a lot of live demos or at least some live demos and those things can fail and",
    "start": "27900",
    "end": "35100"
  },
  {
    "text": "I don't have any video back up because it's demo or die so my apologies if some",
    "start": "35100",
    "end": "40320"
  },
  {
    "text": "of them don't work I'm Alan I work at a company called Blanc in Oslo in Norway",
    "start": "40320",
    "end": "46010"
  },
  {
    "text": "I'm spent most of the days as a developer but I also do security testing and I've also started doing bug bounty",
    "start": "46010",
    "end": "53220"
  },
  {
    "text": "hunting and this is kind of the place where I started to run into all these kinds of newer types of bugs that we can",
    "start": "53220",
    "end": "59340"
  },
  {
    "text": "find I also build open-source security tools and I'm head of the OS Norway chapter",
    "start": "59340",
    "end": "64680"
  },
  {
    "text": "and Oslo and you have my Twitter handle there as well so we had a new revision",
    "start": "64680",
    "end": "71159"
  },
  {
    "text": "of the OS top ten come out last year and in this we had a couple of new entries",
    "start": "71159",
    "end": "76200"
  },
  {
    "text": "we have a 4 which is XML external entities and a 8 which was insecure",
    "start": "76200",
    "end": "81479"
  },
  {
    "text": "deserialization and for many of us who's been following the industry for some time we were kind of waiting for this to",
    "start": "81479",
    "end": "87539"
  },
  {
    "text": "come because these have these are things that people have been exploiting a lot lately if we go into the bug bounty",
    "start": "87539",
    "end": "94709"
  },
  {
    "text": "space and read the reports from the companies this is from this is from bugcrowd",
    "start": "94709",
    "end": "100889"
  },
  {
    "text": "we see that it's kind of the old things all over again",
    "start": "100889",
    "end": "106590"
  },
  {
    "text": "it's like cross-site scripting is actually two places it's down at the bottom as reflected and at the top as",
    "start": "106590",
    "end": "111659"
  },
  {
    "text": "stored and we have things like the classic stuff really if we go to a",
    "start": "111659",
    "end": "117479"
  },
  {
    "text": "hacker 1 which is another bug bounty platform the font is a little bit small but it says cross-site scripting at the",
    "start": "117479",
    "end": "122609"
  },
  {
    "text": "top and there are some sequins action and there's some stuff in here but if",
    "start": "122609",
    "end": "127919"
  },
  {
    "text": "we're going to look at the newer stuff we might have to move outside of these classic things but the first thing I'm",
    "start": "127919",
    "end": "133980"
  },
  {
    "text": "going to talk about is actually one of the things that is on the OS top-10 the new version and it has to do with XML because XML is",
    "start": "133980",
    "end": "142180"
  },
  {
    "start": "138000",
    "end": "437000"
  },
  {
    "text": "fun so here's my first live demo I have at the top here I have a URI and I have",
    "start": "142180",
    "end": "149230"
  },
  {
    "text": "some XML that I want to send to the server and I can click this send button and it will send the XML to the server",
    "start": "149230",
    "end": "156819"
  },
  {
    "text": "and print response in the in the lower window so xxe this is actually a bug",
    "start": "156819",
    "end": "163959"
  },
  {
    "text": "that spin around since I think 2002 but",
    "start": "163959",
    "end": "169000"
  },
  {
    "text": "it's it's come back a lot lately because people write new types of XML parsers and they are vulnerable to this all over",
    "start": "169000",
    "end": "174640"
  },
  {
    "text": "again so the idea here is we can we can declare a doctype at the top here and",
    "start": "174640",
    "end": "180370"
  },
  {
    "text": "this doctype we can define a system entity and a system entity basically",
    "start": "180370",
    "end": "185380"
  },
  {
    "text": "means go read this stuff from the system and then put this in the content entity and then when we using this entity down",
    "start": "185380",
    "end": "192010"
  },
  {
    "text": "here we're actually going to get the output from that file which is handy and",
    "start": "192010",
    "end": "198430"
  },
  {
    "text": "we can also do things like replace this with a dot which would mean list the",
    "start": "198430",
    "end": "203590"
  },
  {
    "text": "files in the current folder oh there's something called passwords txt and that sounds useful let's look at that summer",
    "start": "203590",
    "end": "217140"
  },
  {
    "text": "2018 that's a good password I'm sure no one else has that but we can do more because",
    "start": "217140",
    "end": "224459"
  },
  {
    "text": "we could use something called XSLT like we could transform an XML into an HTML",
    "start": "224459",
    "end": "229889"
  },
  {
    "text": "so in this case we can send in instead of sending in an XML we're sending in way out for to transform our current XML",
    "start": "229889",
    "end": "237220"
  },
  {
    "text": "into an HTML so it would come like a table with some stuff in it's really",
    "start": "237220",
    "end": "242739"
  },
  {
    "text": "boring stuff but of course XSLT can have stuff in it as well so we can start",
    "start": "242739",
    "end": "247870"
  },
  {
    "text": "querying system properties like this so instead of showing the XML that was",
    "start": "247870",
    "end": "253389"
  },
  {
    "text": "boring we're now grabbing stuff out of the system so we can see which version of XSLT which provider etc down here but",
    "start": "253389",
    "end": "260859"
  },
  {
    "text": "again not that super useful what if we could read files just like with the with",
    "start": "260859",
    "end": "267159"
  },
  {
    "text": "the xxe stuff well we can there's a function called document and XSLT which can bring",
    "start": "267159",
    "end": "272860"
  },
  {
    "text": "in another XML document into the rendering so in this case I'm grabbing",
    "start": "272860",
    "end": "278770"
  },
  {
    "text": "the pom.xml and for those of you who are who are not Java developers palm is like a package config or package Jason it's",
    "start": "278770",
    "end": "286780"
  },
  {
    "text": "it declares which kind of which kind of dependencies this system has so that could be useful but we can do more we",
    "start": "286780",
    "end": "296139"
  },
  {
    "text": "can have xx C in the XSLT instead of in the XML because XSLT is also an XML and",
    "start": "296139",
    "end": "302590"
  },
  {
    "text": "that works just as fine as the other one and also we saw that we had XSLT version",
    "start": "302590",
    "end": "308560"
  },
  {
    "text": "2 it has a new nice function called unpark text which means we can bring in",
    "start": "308560",
    "end": "313870"
  },
  {
    "text": "fights that aren't valid XML as well like this stealing the file once again",
    "start": "313870",
    "end": "319090"
  },
  {
    "text": "or we can actually start querying around the network instead of providing a file",
    "start": "319090",
    "end": "325060"
  },
  {
    "text": "name we could provide a URI and in this case we find that there's some elasticsearch server on this network and",
    "start": "325060",
    "end": "330430"
  },
  {
    "text": "this might be something we couldn't access from the outside because it was it wasn't accessible directly on his IP",
    "start": "330430",
    "end": "336820"
  },
  {
    "text": "it was kind of behind the current server that we were looking at so this is kind",
    "start": "336820",
    "end": "342430"
  },
  {
    "text": "of scary luckily for dotnet developers Microsoft patched all their up our sirs back in",
    "start": "342430",
    "end": "349900"
  },
  {
    "text": "for dotnet for 5 - I think it was so you'd actually have to enable this for",
    "start": "349900",
    "end": "355780"
  },
  {
    "text": "it to be vulnerable but it's really important that you know this sometimes",
    "start": "355780",
    "end": "361810"
  },
  {
    "text": "we don't get the result back immediately so we can do something called blind xxe and in this case we're going to where",
    "start": "361810",
    "end": "368200"
  },
  {
    "text": "you can actually bring in we can bring in an external DTD from a from our own",
    "start": "368200",
    "end": "374560"
  },
  {
    "text": "hacker server and this looks like this and what we're going to do here is we're gonna steal the contents of the file put",
    "start": "374560",
    "end": "381100"
  },
  {
    "text": "it in the data 3 entity here and then we're gonna put that at the end of the array a URL down here and we're gonna",
    "start": "381100",
    "end": "387550"
  },
  {
    "text": "when the when this is parsed it's actually gonna grab the contents of this file and send it off as a part of trying",
    "start": "387550",
    "end": "394240"
  },
  {
    "text": "to reach this URI so again we could steal stuff without even getting the response back immediately as we saw in",
    "start": "394240",
    "end": "400720"
  },
  {
    "text": "the previous examples this is a report on actor one where",
    "start": "400720",
    "end": "407140"
  },
  {
    "text": "someone found a neck sexy these are really useful you should go read this",
    "start": "407140",
    "end": "412660"
  },
  {
    "text": "stuff because you can learn a lot from reading these things there's one interesting thing with this one and it's",
    "start": "412660",
    "end": "418390"
  },
  {
    "text": "if we look at the severity here they say it's medium but if you look at the payout that was given to it to this Josh",
    "start": "418390",
    "end": "424930"
  },
  {
    "text": "Brody it was ten thousand dollars from Twitter for finding this so maybe the",
    "start": "424930",
    "end": "431080"
  },
  {
    "text": "medium and the bounty is kind of out of tune I don't know so that was X exceed the next one is",
    "start": "431080",
    "end": "438400"
  },
  {
    "start": "437000",
    "end": "676000"
  },
  {
    "text": "also on the or top ten and it's called insecure D serialization and this is",
    "start": "438400",
    "end": "444850"
  },
  {
    "text": "something that's been researched a lot the last years talks on blackhat and building of frameworks for doing this",
    "start": "444850",
    "end": "451390"
  },
  {
    "text": "and all kinds of stuff so so what is this thing well serialization is something we use for a lot of the a lot",
    "start": "451390",
    "end": "458860"
  },
  {
    "text": "of things like we use it for for REST API is we use it for web services we use",
    "start": "458860",
    "end": "464050"
  },
  {
    "text": "it for all kinds of things where we have to transfer some internal object on the server into some format that we can ship",
    "start": "464050",
    "end": "469750"
  },
  {
    "text": "across the wire or send down to a database so it doesn't have to be it doesn't have to be a rest or web service",
    "start": "469750",
    "end": "475240"
  },
  {
    "text": "API it could also be things like a shared cache it could be a file system it could be all kinds of places where",
    "start": "475240",
    "end": "480520"
  },
  {
    "text": "we're sending things back and forth so and and if this goes wrong we could",
    "start": "480520",
    "end": "485580"
  },
  {
    "text": "deserialize something into a dangerous object and this could allow us to do things like denial service we can",
    "start": "485580",
    "end": "491590"
  },
  {
    "text": "manipulate the state on the server we could compromise the server or we could even get remote code execution so I'm",
    "start": "491590",
    "end": "497800"
  },
  {
    "text": "gonna give you a very simple example first so at the top here we have the person object which is a completely",
    "start": "497800",
    "end": "505780"
  },
  {
    "text": "benign object it doesn't do anything special it takes a it has a constructor it takes a name and it assigns that to a",
    "start": "505780",
    "end": "511810"
  },
  {
    "text": "property nothing special about it and then at the lower part of the screen we",
    "start": "511810",
    "end": "517990"
  },
  {
    "text": "have a gadget which is what we call these dangerous elements that we can use in in these realization attacks and in",
    "start": "517990",
    "end": "524800"
  },
  {
    "text": "this case it's a util class it's not meant to be a part of the API and but if we invoke the constructor of this with a",
    "start": "524800",
    "end": "531550"
  },
  {
    "text": "string that points to a file it would actually start this file as a process and normally this is hard to achieve",
    "start": "531550",
    "end": "539890"
  },
  {
    "text": "because we can't really target that special file but for some reason it's",
    "start": "539890",
    "end": "545530"
  },
  {
    "text": "possible in some of these frameworks to enable specifying the type so if we look",
    "start": "545530",
    "end": "551590"
  },
  {
    "text": "down here we see in this Jason you can specify the type that this is supposed to be deserialized to and same thing for",
    "start": "551590",
    "end": "558070"
  },
  {
    "text": "the XML down here and if we could do this we could actually just send in either this JSON or this XML and it",
    "start": "558070",
    "end": "565120"
  },
  {
    "text": "would actually start a new process but this is a bit oversimplified because usually we don't have things like this",
    "start": "565120",
    "end": "572170"
  },
  {
    "text": "lying around so we have to change stuff and this is one example for a dotnet",
    "start": "572170",
    "end": "577210"
  },
  {
    "text": "this realization gadget which is using something called object data provider in the presentation framework and then it's",
    "start": "577210",
    "end": "584410"
  },
  {
    "text": "doing some stuff to bring in a say process and then an ArrayList of arguments which is in this case is the",
    "start": "584410",
    "end": "590830"
  },
  {
    "text": "calculator and then it invokes the method called star on this but let's",
    "start": "590830",
    "end": "597520"
  },
  {
    "text": "let's do the demos on this as well so I have here I have a this is a Java",
    "start": "597520",
    "end": "603100"
  },
  {
    "text": "derealization attack where we it's the same API that we looked at earlier but",
    "start": "603100",
    "end": "608530"
  },
  {
    "text": "in this case in this this time we're going to create a proxy for the contact",
    "start": "608530",
    "end": "613870"
  },
  {
    "text": "object so this is under going to detail on how this works but if we if we try to",
    "start": "613870",
    "end": "619570"
  },
  {
    "text": "do something like this it's going to create a process builder and it's going to run ping with some stuff here but of",
    "start": "619570",
    "end": "626470"
  },
  {
    "text": "course we can't see what's going on and it's it appears that it failed down here so but let's do something more",
    "start": "626470",
    "end": "632710"
  },
  {
    "text": "interesting we're gonna create a small little listener on our hacker servers",
    "start": "632710",
    "end": "639370"
  },
  {
    "text": "and we're gonna listen on a porch and then we're gonna try here to create a remote shell back to this server that",
    "start": "639370",
    "end": "646000"
  },
  {
    "text": "we're listening on here oh now I'm in on this server and I'm logged in as root",
    "start": "646000",
    "end": "652920"
  },
  {
    "text": "quite dangerous I would say so these",
    "start": "652920",
    "end": "659380"
  },
  {
    "text": "these things are super scary this is an example from Starbucks in India once",
    "start": "659380",
    "end": "664630"
  },
  {
    "text": "again from hacker one someone found a code injection here in something called a bus MQ",
    "start": "664630",
    "end": "670120"
  },
  {
    "text": "and this these things happen a lot and and really go read these reports are great the next thing we're gonna look at",
    "start": "670120",
    "end": "678339"
  },
  {
    "start": "676000",
    "end": "981000"
  },
  {
    "text": "is something called server site request forgery you might have heard of client-side request forgery CSRF which",
    "start": "678339",
    "end": "684220"
  },
  {
    "text": "used to be on the OS top-10 but was recently removed and server side requests are kind of similar except they",
    "start": "684220",
    "end": "690279"
  },
  {
    "text": "happen on the server so we can trick the server into doing something it shouldn't do so we could have something we could",
    "start": "690279",
    "end": "697390"
  },
  {
    "text": "have a setup like this we have a browser which talks to a reverse proxy or some",
    "start": "697390",
    "end": "703360"
  },
  {
    "text": "other type of server-side application which again talks to another server so this could be like a micro service or",
    "start": "703360",
    "end": "708790"
  },
  {
    "text": "something like this and sometimes we're able to influence how this second call",
    "start": "708790",
    "end": "714310"
  },
  {
    "text": "is made so I'll give you an example here we have a request coming in from the",
    "start": "714310",
    "end": "720640"
  },
  {
    "text": "browser and it goes to example the toric slash images slash 200 by 200 slash product or JPEG and in the server",
    "start": "720640",
    "end": "727330"
  },
  {
    "text": "application we're going to replace the first part of the URI before we actually make the lookup to the backing system so",
    "start": "727330",
    "end": "732730"
  },
  {
    "text": "we're gonna take the original URI just drop something of it and then we replace it with images dot example.org and go",
    "start": "732730",
    "end": "739060"
  },
  {
    "text": "grab the file and and stream it back to the end-user so we we strike out the first part and then this is the NGI that",
    "start": "739060",
    "end": "747040"
  },
  {
    "text": "we actually look up but there's quite a few problems with this first of all what",
    "start": "747040",
    "end": "752770"
  },
  {
    "text": "happens if we did this like images dot evil com well it's gonna remove the first part",
    "start": "752770",
    "end": "757839"
  },
  {
    "text": "and and it's gonna look up images dot example.org dot evil.com which is our",
    "start": "757839",
    "end": "763209"
  },
  {
    "text": "server so that's useful maybe they use some kind of authentication tokens that we can steal also we could do something",
    "start": "763209",
    "end": "769900"
  },
  {
    "text": "like this and in this case it would be images of the example at work and then dummy so this would be a basic",
    "start": "769900",
    "end": "776650"
  },
  {
    "text": "authentication where images taught example torgus the username and dummy is the password and then we try to fetch",
    "start": "776650",
    "end": "782140"
  },
  {
    "text": "stuff from an internal server it could also be something like this maybe we",
    "start": "782140",
    "end": "787330"
  },
  {
    "text": "have some functionality in this application where it's supposed to be able to import some data from an external source and we could start",
    "start": "787330",
    "end": "793270"
  },
  {
    "text": "poking around the internal network instead and grab some stuff from a MongoDB or something like this or we",
    "start": "793270",
    "end": "798610"
  },
  {
    "text": "could even do something similar to the ecstasy stuff we could start grabbing files which is going to be you useful but one of the things that",
    "start": "798610",
    "end": "806009"
  },
  {
    "text": "this is very often useful for is grabbing stuff from cloud services so on",
    "start": "806009",
    "end": "811949"
  },
  {
    "text": "ec2 and other types of clouds providers they have a special IP it's 169.254",
    "start": "811949",
    "end": "819110"
  },
  {
    "text": "169.254 this is the metadata host and it can provide things like security",
    "start": "819110",
    "end": "824490"
  },
  {
    "text": "credentials so basically keys to login to the server we could also use this of",
    "start": "824490",
    "end": "829589"
  },
  {
    "text": "course to grab stuff off of databases or other services but recently it's been",
    "start": "829589",
    "end": "835050"
  },
  {
    "text": "used a lot for these cloud services so what we're thinking now is okay so this",
    "start": "835050",
    "end": "840749"
  },
  {
    "text": "IP is dangerous let's block it it turns",
    "start": "840749",
    "end": "845970"
  },
  {
    "text": "out that that can be quite hard so a guy called Nicaragua who's a French guy",
    "start": "845970",
    "end": "852240"
  },
  {
    "text": "doing a lot of esos RF research he found that a lot of IP address parsers they",
    "start": "852240",
    "end": "857699"
  },
  {
    "text": "are very permissive so we have our regular IP and then we have our regular IP with overflow so it's just gonna",
    "start": "857699",
    "end": "864749"
  },
  {
    "text": "truncate it it's gonna do mod 256 and so these are basically the same eyepiece this is an America P this is a numeric",
    "start": "864749",
    "end": "872519"
  },
  {
    "text": "IP with overflow this is a hex IP this is a hex IP without dots this is a hex",
    "start": "872519",
    "end": "878699"
  },
  {
    "text": "IP without dots but with overflow this is an octal IP this is an octal IP with",
    "start": "878699",
    "end": "884670"
  },
  {
    "text": "overflow ah okay so this IP stuff is kind of hard so we were not gonna allow",
    "start": "884670",
    "end": "890910"
  },
  {
    "text": "eyepiece we're gonna just allow host names instead okay what I could of course set up my DNS to point to the",
    "start": "890910",
    "end": "896369"
  },
  {
    "text": "same IP or to local host if I wanted to there are actually services that do that already so you could just do the IP dot",
    "start": "896369",
    "end": "903600"
  },
  {
    "text": "sip io and it will resolve to 127 0 0 1 we could base 36 encode that IP so it's",
    "start": "903600",
    "end": "911790"
  },
  {
    "text": "not that visible or we could even do like a hope fake host name at the front there's also www banknote dot and this",
    "start": "911790",
    "end": "919529"
  },
  {
    "text": "base 36 thing and then sip to dial which again resolves 227 series or 1 also 0 0",
    "start": "919529",
    "end": "929670"
  },
  {
    "text": "0 0 that's usually like all the interfaces of our system so we might be able to reach stuff there as well and it",
    "start": "929670",
    "end": "935699"
  },
  {
    "text": "turns out that one 27 is also like you don't have to do service everyone that's what we normally",
    "start": "935699",
    "end": "940769"
  },
  {
    "text": "do but you could do 127 4 times and that would work as well and then ipv6 comes",
    "start": "940769",
    "end": "946980"
  },
  {
    "text": "along and we get all these other kinds of weird stuff that pops in and this is",
    "start": "946980",
    "end": "953279"
  },
  {
    "text": "once again an example from hacker 1 someone found one of these and if we look closely here we can see all the way",
    "start": "953279",
    "end": "961769"
  },
  {
    "text": "down here a very familiar IP 169 to 5-4 169.254",
    "start": "961769",
    "end": "967139"
  },
  {
    "text": "so the same IP so as I said this is one of the things that people have been using as a syrette for they can go grab",
    "start": "967139",
    "end": "973679"
  },
  {
    "text": "these these access keys and then look they can basically SSH into the server with these access keys the next one",
    "start": "973679",
    "end": "982439"
  },
  {
    "start": "981000",
    "end": "1313000"
  },
  {
    "text": "we're going to look at is something called template injection this is it's",
    "start": "982439",
    "end": "987779"
  },
  {
    "text": "kind of a part of the OS 1210 because you could probably put it into a one injection but it's also quite new and",
    "start": "987779",
    "end": "994709"
  },
  {
    "text": "it's also related to the way that we use different types of frameworks so our template could look something like this",
    "start": "994709",
    "end": "1000920"
  },
  {
    "text": "so we have these curly braces they they tell us that in this place we're gonna insert some data and what a lot of these",
    "start": "1000920",
    "end": "1007490"
  },
  {
    "text": "frameworks will actually do is something like this so they'll pull out the strings and then they'll do an eval of",
    "start": "1007490",
    "end": "1012980"
  },
  {
    "text": "the stuff that's in between and to run it basically and that as long as we are the provider of that template that's",
    "start": "1012980",
    "end": "1019429"
  },
  {
    "text": "fine I mean we added the stuff in there and we are the developers of this system so that's fine so if we had a template",
    "start": "1019429",
    "end": "1026899"
  },
  {
    "text": "that looked something like this and we had a title variable that contained hello the end result would be h1 hello",
    "start": "1026899",
    "end": "1034089"
  },
  {
    "text": "the problem occurs when we try to combine templates so we have one template and we want to have like a",
    "start": "1034089",
    "end": "1040909"
  },
  {
    "text": "module system so we want to bring one template into another template and we do it the wrong way so in this case we",
    "start": "1040909",
    "end": "1047750"
  },
  {
    "text": "render the first template and then we insert the rendered result into the second template so if they both contain",
    "start": "1047750",
    "end": "1055580"
  },
  {
    "text": "normal strings there's no problem it's hello and it's world and things render properly but if the first bar the first",
    "start": "1055580",
    "end": "1064760"
  },
  {
    "text": "rendering contains a template that template is going to run as part of the evaluation of this",
    "start": "1064760",
    "end": "1070920"
  },
  {
    "text": "second template so in this case title is 2x2 and with the curly braces and so",
    "start": "1070920",
    "end": "1076200"
  },
  {
    "text": "it's gonna be rendered into a new template which we insert into an existing template and then we double",
    "start": "1076200",
    "end": "1081810"
  },
  {
    "text": "evaluate the first part which is the dangerous thing so no no fun without a",
    "start": "1081810",
    "end": "1087450"
  },
  {
    "text": "demo right so here I have an application and if I click here it just and I",
    "start": "1087450",
    "end": "1093540"
  },
  {
    "text": "specified my name up here in just as hello Allen and we have my name down here as well so in this case it renders",
    "start": "1093540",
    "end": "1100560"
  },
  {
    "text": "the HTML on the top and it shows the source of the HTML at the bottom so we",
    "start": "1100560",
    "end": "1106710"
  },
  {
    "text": "could do 2 times 3 it says hello 6 because it double",
    "start": "1106710",
    "end": "1112380"
  },
  {
    "text": "evaluates this so we see that this comes back from the server as a 6 but of",
    "start": "1112380",
    "end": "1118410"
  },
  {
    "text": "course math we could do that in calculator so let's do something more fun let's try to figure out what's",
    "start": "1118410",
    "end": "1123630"
  },
  {
    "text": "running here so self ok some error thing",
    "start": "1123630",
    "end": "1128820"
  },
  {
    "text": "going on but it also reveals something here this is a twig template and twig",
    "start": "1128820",
    "end": "1134070"
  },
  {
    "text": "had some some bugs in it so let's bring up our hacker server and first we're",
    "start": "1134070",
    "end": "1143430"
  },
  {
    "text": "gonna just test that we can run code and in this case we ran the ID command which",
    "start": "1143430",
    "end": "1148560"
  },
  {
    "text": "gave us the the which user this",
    "start": "1148560",
    "end": "1154440"
  },
  {
    "text": "application is running s but we could do something like this instead so now if",
    "start": "1154440",
    "end": "1159570"
  },
  {
    "text": "you saw I now have shell on this server I'm logged in as www data down here so",
    "start": "1159570",
    "end": "1166200"
  },
  {
    "text": "I'm I've hacked into the server as well just with a simple Europe so ok sorry",
    "start": "1166200",
    "end": "1179280"
  },
  {
    "text": "I'm just going to do like this there we go but this was server-side",
    "start": "1179280",
    "end": "1186570"
  },
  {
    "text": "right we saw that a two times two or three times three came back as six but",
    "start": "1186570",
    "end": "1192150"
  },
  {
    "text": "we can have template injection client-side as well so this case we have one templating framework running on the",
    "start": "1192150",
    "end": "1197820"
  },
  {
    "text": "on the server and we also have angular so if we look down here we see it came",
    "start": "1197820",
    "end": "1204240"
  },
  {
    "text": "back as two times three but up here as rendered is said six because angular",
    "start": "1204240",
    "end": "1209789"
  },
  {
    "text": "went in and so okay there's something going on here there's an NG app and there's a template so I'm gonna run this",
    "start": "1209789",
    "end": "1215190"
  },
  {
    "text": "template this is something that can happen if you have if you're mixing a server-side templating framework and a",
    "start": "1215190",
    "end": "1222150"
  },
  {
    "text": "client-side templating framework or of course once again math is no fun so we could do like alert one right no because",
    "start": "1222150",
    "end": "1229919"
  },
  {
    "text": "this is angular and the earlier versions of angular they had a sandbox and the sandbox tells us that you are not",
    "start": "1229919",
    "end": "1235049"
  },
  {
    "text": "allowed to execute functions like that but and of course this angular version",
    "start": "1235049",
    "end": "1240120"
  },
  {
    "text": "also had a bypass of the sandbox which was you create a string and you get the",
    "start": "1240120",
    "end": "1245700"
  },
  {
    "text": "constructor of the string which is the string constructor and then you get this constructor of the string constructor which is the function constructor and",
    "start": "1245700",
    "end": "1251880"
  },
  {
    "text": "then you create a new function containing alert one and then you invoke that function and then we get the alert",
    "start": "1251880",
    "end": "1259049"
  },
  {
    "text": "so we have cross-site scripting and the funny thing here is you can see that on n runs two times as well and you can see",
    "start": "1259049",
    "end": "1264780"
  },
  {
    "text": "that it was encoded down here but it worked anyway because that's just the way it works so we have to take care of",
    "start": "1264780",
    "end": "1272220"
  },
  {
    "text": "these things like we're using templates and we're mixing things up we have to take care of this we get some new control characters in the mix when we're",
    "start": "1272220",
    "end": "1278190"
  },
  {
    "text": "doing these double types of templating so if we're gonna stop template",
    "start": "1278190",
    "end": "1284429"
  },
  {
    "text": "injection we need to make sure we don't double evaluate these templates and mixing server-side and client-side",
    "start": "1284429",
    "end": "1290640"
  },
  {
    "text": "templating is also a really bad idea and this was actually in the documentation",
    "start": "1290640",
    "end": "1297809"
  },
  {
    "text": "for angular for a long time but at the end they decided just to drop the entire sandbox because people were doing people",
    "start": "1297809",
    "end": "1305100"
  },
  {
    "text": "find bypasses for these sound boxes all the time don't mix server-side and",
    "start": "1305100",
    "end": "1311220"
  },
  {
    "text": "client-side templating the next thing we're going to look at is insecure course so of course for",
    "start": "1311220",
    "end": "1319539"
  },
  {
    "start": "1313000",
    "end": "1513000"
  },
  {
    "text": "cross-origin resource sharing is a way for our system to tell a website running",
    "start": "1319539",
    "end": "1325240"
  },
  {
    "text": "on a different domain than ours that it's allowed to read data from us that's basically it so we can use this header",
    "start": "1325240",
    "end": "1331299"
  },
  {
    "text": "called access control allow origin but sometimes people have a hard time understanding what it does so I got some",
    "start": "1331299",
    "end": "1339460"
  },
  {
    "text": "help from Google Translate to translate from HTTP to English so access control",
    "start": "1339460",
    "end": "1345279"
  },
  {
    "text": "allow origin example.com and access control allow credential true so if the user is logged in and visits example.com",
    "start": "1345279",
    "end": "1352000"
  },
  {
    "text": "please allow that site to access to user data okay that's probably what we want but then we see developers doing this",
    "start": "1352000",
    "end": "1358389"
  },
  {
    "text": "access control allow Origin access control allow credentials true and",
    "start": "1358389",
    "end": "1363419"
  },
  {
    "text": "translated it means if the user is logged in please allow any site on the entire internet to access to users data and given that they",
    "start": "1363419",
    "end": "1370480"
  },
  {
    "text": "can trick the user into visiting their site luckily for us the browser's get really angry if we try to do this say ok",
    "start": "1370480",
    "end": "1377230"
  },
  {
    "text": "this is an insecure policy you shouldn't do that but our friends the funny",
    "start": "1377230",
    "end": "1383289"
  },
  {
    "text": "developers day sometimes figure out ways around these policies because they maybe they misunderstand what these things do",
    "start": "1383289",
    "end": "1389860"
  },
  {
    "text": "and some frame I've been I was writing",
    "start": "1389860",
    "end": "1395049"
  },
  {
    "text": "some code the other day and and one of the frameworks I used to have the bug I'm not going to show you as a feature",
    "start": "1395049",
    "end": "1400710"
  },
  {
    "text": "so the mistake number one is the echo so we grabbed the original header that",
    "start": "1400710",
    "end": "1406539"
  },
  {
    "text": "comes in from the client and we just echo it back as access control our region so now we have access control",
    "start": "1406539",
    "end": "1412149"
  },
  {
    "text": "allow origin star it's just not explicit anymore so just gonna echo whatever so",
    "start": "1412149",
    "end": "1417159"
  },
  {
    "text": "is any site on the Internet can now steal the data at once again we just circumvented the policy mistake number",
    "start": "1417159",
    "end": "1424120"
  },
  {
    "text": "two insufficient validation so ok we grab the origin header and we check does it",
    "start": "1424120",
    "end": "1431110"
  },
  {
    "text": "end with example com okay we're gonna allow it which means we also allow not example.com because there's also ends",
    "start": "1431110",
    "end": "1437710"
  },
  {
    "text": "with example.com next one null all right",
    "start": "1437710",
    "end": "1444250"
  },
  {
    "text": "what does this mean access control allow or rich no access control allow credentials true",
    "start": "1444250",
    "end": "1451320"
  },
  {
    "text": "let's ask Google Translate so if the user is logged in please allow any site",
    "start": "1451320",
    "end": "1456520"
  },
  {
    "text": "the user visits to access the users data as long as the sites knows how to use an",
    "start": "1456520",
    "end": "1461980"
  },
  {
    "text": "iframe with the sandbox attribute like this because if we create an iframe with",
    "start": "1461980",
    "end": "1468400"
  },
  {
    "text": "the sandbox attribute and we use like this data thing here we're going to get a null origin and so that would actually",
    "start": "1468400",
    "end": "1476440"
  },
  {
    "text": "be sent what is origin No as you can see at the bottom area so that's also a completely unsafe",
    "start": "1476440",
    "end": "1482430"
  },
  {
    "text": "configuration so a guy called James kettle who works for port Swiger and",
    "start": "1482430",
    "end": "1488290"
  },
  {
    "text": "imports wiggers to create off the very famous hacking tool or pen testing tool",
    "start": "1488290",
    "end": "1493780"
  },
  {
    "text": "called Bert's wit he did a lot of research into this and this is one of the things that he find he found so",
    "start": "1493780",
    "end": "1499480"
  },
  {
    "text": "coarse msconfig you know figuration on szymek TOCOM and it would allow things like not samito com",
    "start": "1499480",
    "end": "1506500"
  },
  {
    "text": "so I did the exact same thing that I just showed so that's interesting",
    "start": "1506500",
    "end": "1513210"
  },
  {
    "start": "1513000",
    "end": "1751000"
  },
  {
    "text": "next thing subdomain take over for those of you who were at Karen Jack Jacobson's",
    "start": "1513210",
    "end": "1520360"
  },
  {
    "text": "talked earlier today the boring boring security talk as it was called he actually mentioned this but under the",
    "start": "1520360",
    "end": "1526480"
  },
  {
    "text": "name DNS squatting so a Swedish company called detective fire they have one of",
    "start": "1526480",
    "end": "1532900"
  },
  {
    "text": "the most famous bug bounty hunters around in France who sin and he wrote a",
    "start": "1532900",
    "end": "1538330"
  },
  {
    "text": "long blog post about this a while back and this what this does it exploit forgotten DNS aliases so a lot of the",
    "start": "1538330",
    "end": "1546280"
  },
  {
    "text": "cloud services that we can use they have the B's thing where you can you can specify your own name as a part of your",
    "start": "1546280",
    "end": "1552550"
  },
  {
    "text": "ID at posts it points to their servers and that allows you to kind of specify a",
    "start": "1552550",
    "end": "1557890"
  },
  {
    "text": "part of the name that's yours and it for other types of services in infrastructure as a service services we",
    "start": "1557890",
    "end": "1563980"
  },
  {
    "text": "also can sometimes specify our name or we get some kind of an ID up front and",
    "start": "1563980",
    "end": "1569290"
  },
  {
    "text": "detective I they discovered that there are over hundred services that allow these kinds of things",
    "start": "1569290",
    "end": "1574690"
  },
  {
    "text": "and so but let's let's do an example so we are a company and we create an applet",
    "start": "1574690",
    "end": "1581170"
  },
  {
    "text": "that's running on Heroku I think actually Heroku is changing this now but let's let's consider that it works as it",
    "start": "1581170",
    "end": "1588730"
  },
  {
    "text": "used to right now so we create an application at nbc.com and but we want",
    "start": "1588730",
    "end": "1595750"
  },
  {
    "text": "this to have a proper or proper domain name not like your oh crap we wanted to be our domain name so we we",
    "start": "1595750",
    "end": "1602380"
  },
  {
    "text": "go we want NDC dot example the point the comment to point to this so we go into the DNS and we set a cname like an alias",
    "start": "1602380",
    "end": "1609760"
  },
  {
    "text": "so we said it in this example come you're gonna go and look up this somewhere else so we do not look up for this and we ask",
    "start": "1609760",
    "end": "1617710"
  },
  {
    "text": "the name server we're gonna get back well you have to go ask this other thing so as we can demonstrate this with",
    "start": "1617710",
    "end": "1628000"
  },
  {
    "text": "Harrison and boxes instead so we're gonna look up and you see the attackable of network for instance and we're gonna",
    "start": "1628000",
    "end": "1633430"
  },
  {
    "text": "ask DNS of hackable of network where can I find this we're gonna get back",
    "start": "1633430",
    "end": "1638710"
  },
  {
    "text": "go see Heroku dana's for this so we go to Heroku Deena's we ask it where we",
    "start": "1638710",
    "end": "1644050"
  },
  {
    "text": "want the IP of this thing and we get an IP back and now we can go and visit to",
    "start": "1644050",
    "end": "1649090"
  },
  {
    "text": "the actual site that we wanted to so that works perfectly and we're happy and",
    "start": "1649090",
    "end": "1654430"
  },
  {
    "text": "we've been using this application for a while but then at some point we don't need it so we we remove it we we go into",
    "start": "1654430",
    "end": "1662770"
  },
  {
    "text": "the Roku GUI and we just delete it now we don't need it anymore then we forget about this DNS entry and then our friend",
    "start": "1662770",
    "end": "1671920"
  },
  {
    "text": "the hacker comes along and creates a heroic graph with the same name that we used to have and the attacker now",
    "start": "1671920",
    "end": "1679510"
  },
  {
    "text": "controls our subdomain ah that's not nice fishing with a proper domain name",
    "start": "1679510",
    "end": "1686410"
  },
  {
    "text": "that's probably pretty effective you could use this to also steal or inject",
    "start": "1686410",
    "end": "1691510"
  },
  {
    "text": "domain wide cookies you could add all kinds of of stuff that",
    "start": "1691510",
    "end": "1696940"
  },
  {
    "text": "would make the company look bad or you could even create HTTPS certificates for that domain or for that subdomain so",
    "start": "1696940",
    "end": "1705130"
  },
  {
    "text": "here we have an example of this this is a guy called Matthias Carlson also a Swede who found one of these at Shopify",
    "start": "1705130",
    "end": "1712320"
  },
  {
    "text": "and here's another funny example this is the certificate",
    "start": "1712320",
    "end": "1720520"
  },
  {
    "text": "transparency Lord and what's interesting here is if you see the name of the certificate",
    "start": "1720520",
    "end": "1726510"
  },
  {
    "text": "Simon Gursky has hacked prod to do bird calm yes he was able to grab one of",
    "start": "1726510",
    "end": "1733390"
  },
  {
    "text": "their subdomain and get a certificate for it and because the CAS are they have",
    "start": "1733390",
    "end": "1739030"
  },
  {
    "text": "to publish all the certificates that they they create so this is stays in",
    "start": "1739030",
    "end": "1744130"
  },
  {
    "text": "this large like this and yeah so they're probably not too happy about that the",
    "start": "1744130",
    "end": "1752320"
  },
  {
    "start": "1751000",
    "end": "2136000"
  },
  {
    "text": "last thing that we're going to talk about is something called web cache poisoning now web cache poisoning is something",
    "start": "1752320",
    "end": "1760390"
  },
  {
    "text": "that again it's it's james kettle of ports where did some amazing research on this what he was trying to do was to",
    "start": "1760390",
    "end": "1768880"
  },
  {
    "text": "exploit unexploited bugs sometimes there",
    "start": "1768880",
    "end": "1775330"
  },
  {
    "text": "are bugs in web apps where we can trigger some stuff that's going to happen but we can only trigger it for",
    "start": "1775330",
    "end": "1781900"
  },
  {
    "text": "ourselves one of those things is for instance self XSS or self cross-site",
    "start": "1781900",
    "end": "1787870"
  },
  {
    "text": "scripting so I can send in a request from my browser and I can get cross a scripting but I can't send it to anybody",
    "start": "1787870",
    "end": "1794350"
  },
  {
    "text": "else because you would have to set like this weird header or something and you",
    "start": "1794350",
    "end": "1799960"
  },
  {
    "text": "can't trick another browser in it for another user to do that and you have to",
    "start": "1799960",
    "end": "1805270"
  },
  {
    "text": "control their system but what if we could do something with the cache so the",
    "start": "1805270",
    "end": "1814450"
  },
  {
    "text": "gist of this is we have a server where our application is running we have the cash sitting up front the first client",
    "start": "1814450",
    "end": "1823059"
  },
  {
    "text": "comes in asks for some content there's nothing in the cache for it so at the cache the cache server will go to",
    "start": "1823059",
    "end": "1829690"
  },
  {
    "text": "our server we'll grab the content store it in the cache and then return it so",
    "start": "1829690",
    "end": "1836110"
  },
  {
    "text": "now the next client comes along ask for some content and gets a hit because the",
    "start": "1836110",
    "end": "1841870"
  },
  {
    "text": "content was already the area the the second client asks for the same content as the first user so there was a hit and",
    "start": "1841870",
    "end": "1847929"
  },
  {
    "text": "so there's no need to go the backhand server anymore we have a cache hit nice then the attacker comes",
    "start": "1847929",
    "end": "1854590"
  },
  {
    "text": "along the attackers does something malicious and there's no no hit on the",
    "start": "1854590",
    "end": "1860530"
  },
  {
    "text": "cache in this case so the request goes to the backend the back-end gets this malicious data from the attacker does",
    "start": "1860530",
    "end": "1865900"
  },
  {
    "text": "something stupid with it and then the the this thing is stored in the cache",
    "start": "1865900",
    "end": "1871410"
  },
  {
    "text": "and returned to the attacker but now when the next client comes along there's",
    "start": "1871410",
    "end": "1878140"
  },
  {
    "text": "a hit and it's the attacker stuff so the our unfortunate client that comes along",
    "start": "1878140",
    "end": "1884980"
  },
  {
    "text": "later is going to get the poisoned data so the attacker is able to poison the",
    "start": "1884980",
    "end": "1890410"
  },
  {
    "text": "cache put some bad stuff in there and that's not very nice so let's see how",
    "start": "1890410",
    "end": "1897130"
  },
  {
    "text": "this works so what I'm showing you here is we have the headers I'm going to send at the top here so I'm going to send it",
    "start": "1897130",
    "end": "1902890"
  },
  {
    "text": "to the URI you see at the top and these are the header so I'm going to send so",
    "start": "1902890",
    "end": "1908200"
  },
  {
    "text": "send this on and the important thing to look at here is this thing here so it",
    "start": "1908200",
    "end": "1913540"
  },
  {
    "text": "says I'm gonna load a script from web dot hackable dot network okay",
    "start": "1913540",
    "end": "1919620"
  },
  {
    "text": "nothing bad going on but then the attacker comes along and the attacker",
    "start": "1919620",
    "end": "1924820"
  },
  {
    "text": "sets another header because the attackers figured out that this application if it gets this header it's",
    "start": "1924820",
    "end": "1930640"
  },
  {
    "text": "gonna use it the wrong way and X forwarded host is something we often use in in reverse proxy to tell it what this",
    "start": "1930640",
    "end": "1937150"
  },
  {
    "text": "was the original host that came in and you should treat it as such so the",
    "start": "1937150",
    "end": "1943000"
  },
  {
    "text": "attacker can now do this send in this and in this case we see that it says",
    "start": "1943000",
    "end": "1948309"
  },
  {
    "text": "attacker come here instead because this was used the wrong way the URI is a bit",
    "start": "1948309",
    "end": "1955330"
  },
  {
    "text": "different though there is something at the end here so our our our friend over here we'll still see web detectable",
    "start": "1955330",
    "end": "1962110"
  },
  {
    "text": "network so what we can do we have to poison the exact same URL or at least we",
    "start": "1962110",
    "end": "1967870"
  },
  {
    "text": "have to figure out which parts of the permian parameters are a part of the cache key in this case we if we try to",
    "start": "1967870",
    "end": "1973960"
  },
  {
    "text": "poison it without anything or we can I can actually show you this first we can poison it with this like like this it's",
    "start": "1973960",
    "end": "1982210"
  },
  {
    "text": "a tracker let's call me and I tried to change it to let's see not attacker.com and I tried to send it",
    "start": "1982210",
    "end": "1988029"
  },
  {
    "text": "now I'm just hitting the cache so it still says attacker calm it doesn't change to not the attacker but if I",
    "start": "1988029",
    "end": "1994059"
  },
  {
    "text": "change this URL parameter because that's the part of the cache key it's going to change down here but I want to put",
    "start": "1994059",
    "end": "2000240"
  },
  {
    "text": "poison into root so now I'm going to try this and we now have not attacker on the",
    "start": "2000240",
    "end": "2008580"
  },
  {
    "text": "root so our friend the friendly client comes up comes back and it now says not",
    "start": "2008580",
    "end": "2014820"
  },
  {
    "text": "attacker.com without this user sending this header but this is boring now I",
    "start": "2014820",
    "end": "2022740"
  },
  {
    "text": "want to hack you guys so please bring out your phone or your laptop and try to go to this URI there's nothing dangerous",
    "start": "2022740",
    "end": "2029549"
  },
  {
    "text": "there no worries I promise what do you see on this URI",
    "start": "2029549",
    "end": "2037799"
  },
  {
    "text": "when you open",
    "start": "2037799",
    "end": "2040908"
  },
  {
    "text": "so it's dub-dub-dub hackable dot network",
    "start": "2045680",
    "end": "2050830"
  },
  {
    "text": "you see the NDC conference logo right so",
    "start": "2055510",
    "end": "2060610"
  },
  {
    "text": "it should look something out sorry ruin it so it should look something like this",
    "start": "2060610",
    "end": "2065710"
  },
  {
    "text": "right that's what you see it's not going to try to poison this page and this",
    "start": "2065710",
    "end": "2072280"
  },
  {
    "text": "might take a bit of time because there's a cache this thing is pretty friendly",
    "start": "2072280",
    "end": "2080080"
  },
  {
    "text": "forests down here it says how long it keeps the cache so it's a cache control public max-age 60 seconds that's helpful",
    "start": "2080080",
    "end": "2087610"
  },
  {
    "text": "when we want to poison caches so now my slide set is hammering this server",
    "start": "2087610",
    "end": "2094419"
  },
  {
    "text": "trying to poison the cache and hopefully at some point after about a minute it's",
    "start": "2094419",
    "end": "2101020"
  },
  {
    "text": "gonna say success instead I will see success now try refreshing the page in",
    "start": "2101020",
    "end": "2108190"
  },
  {
    "text": "your phone what do you see yeah too bad",
    "start": "2108190",
    "end": "2118210"
  },
  {
    "text": "I spoiled it already but you should now see this person instead so I just",
    "start": "2118210",
    "end": "2126340"
  },
  {
    "text": "poisoned it I didn't do anything on the server I wasn't logged into the server anything I just poisoned the cache with this",
    "start": "2126340",
    "end": "2133260"
  },
  {
    "start": "2136000",
    "end": "2186000"
  },
  {
    "text": "so there are some tricky headers in the bold hair these are some of the headers that James kettle found X host or",
    "start": "2137660",
    "end": "2144650"
  },
  {
    "text": "explore the host they basically do the same thing they tell it which which probably was the host but some systems",
    "start": "2144650",
    "end": "2151579"
  },
  {
    "text": "also support things like X original URL or x3 right URL where you can actually",
    "start": "2151579",
    "end": "2158299"
  },
  {
    "text": "trick the cache into cashing things as a different URL so you can send in on one",
    "start": "2158299",
    "end": "2164690"
  },
  {
    "text": "URL and make it cached as another URL which is kind of strange and of course",
    "start": "2164690",
    "end": "2170299"
  },
  {
    "text": "very useful as an attacker so what James kettle did was he scanned like the entire internet and found a lot",
    "start": "2170299",
    "end": "2177349"
  },
  {
    "text": "of these things and a lot of the big services were vulnerable to this but",
    "start": "2177349",
    "end": "2182660"
  },
  {
    "text": "hopefully most of them have now fixed this stuff",
    "start": "2182660",
    "end": "2187150"
  },
  {
    "start": "2186000",
    "end": "2246000"
  },
  {
    "text": "what can complicate this attack is we have to know which URL parameters are used in the cache keys and this can be",
    "start": "2188359",
    "end": "2197359"
  },
  {
    "text": "kind of difficult to do by hand because there can be a lot of URL parameters and we don't know which ones of the ones are",
    "start": "2197359",
    "end": "2203180"
  },
  {
    "text": "important sometimes user agent is used so you could poison the cache for a",
    "start": "2203180",
    "end": "2209720"
  },
  {
    "text": "given you a given type of a browser so you could cache it you could poison it",
    "start": "2209720",
    "end": "2214940"
  },
  {
    "text": "only for Firefox or only for a chrome or only for IE maybe if it was like an old IE version you could poison it for only",
    "start": "2214940",
    "end": "2221510"
  },
  {
    "text": "that version and then you could instead of changing a picture you could run an exploit which could be useful so you",
    "start": "2221510",
    "end": "2228079"
  },
  {
    "text": "could target specific groups a james kettle created a plugin for burps with",
    "start": "2228079",
    "end": "2234079"
  },
  {
    "text": "called parent minor which actually does this for you it tries to figure out which headers and parameters are",
    "start": "2234079",
    "end": "2240980"
  },
  {
    "text": "actually part of the cache key so that can be quite useful to test with so how",
    "start": "2240980",
    "end": "2247609"
  },
  {
    "start": "2246000",
    "end": "2286000"
  },
  {
    "text": "do we stop web cache poisoning can be a bit difficult we we should at least not",
    "start": "2247609",
    "end": "2253760"
  },
  {
    "text": "allow these headers to come in from the outside because if we go back to this drawing here there's no reason why this",
    "start": "2253760",
    "end": "2262220"
  },
  {
    "text": "X forwarded host header should be allowed from the outside through the cache and into the server itself it",
    "start": "2262220",
    "end": "2268520"
  },
  {
    "text": "should be stopped here this nor if we're using this header it's probably need to be used between the cash and the back-end servers we",
    "start": "2268520",
    "end": "2275300"
  },
  {
    "text": "don't need the attacker sitting on the outside to be allowed to specify so we should probably block those or replace",
    "start": "2275300",
    "end": "2281870"
  },
  {
    "text": "what's coming from the outside with something that we control we could also",
    "start": "2281870",
    "end": "2290000"
  },
  {
    "text": "add the headers to the cache key so instead of someone being able to poison",
    "start": "2290000",
    "end": "2296540"
  },
  {
    "text": "it for everyone they can only poison it for someone with the same host header which basically would mean you're the",
    "start": "2296540",
    "end": "2302360"
  },
  {
    "text": "attacker is stuck back at the problem where it's an exploitable because you can't send this thing we could also use",
    "start": "2302360",
    "end": "2308990"
  },
  {
    "text": "the Barry header to specify our sometimes you can you can have the backend service specify which which",
    "start": "2308990",
    "end": "2315440"
  },
  {
    "text": "headers and things are supposed to be a part of the cache key but other times you have to specify it in the cache",
    "start": "2315440",
    "end": "2320990"
  },
  {
    "text": "itself of course you should sanitize and",
    "start": "2320990",
    "end": "2326210"
  },
  {
    "text": "encode all inputs so what we could do in this case instead of just replacing the host name we could probably also do a",
    "start": "2326210",
    "end": "2332060"
  },
  {
    "text": "cross-site scripting attack because we could of course this was a cross-site scripting attack to begin with because",
    "start": "2332060",
    "end": "2337670"
  },
  {
    "text": "what we did here is basically replace where it was loading this thing from but we could try something like this as well",
    "start": "2337670",
    "end": "2343940"
  },
  {
    "text": "just to see what happens just change this because loaded it now oh I changed",
    "start": "2343940",
    "end": "2353780"
  },
  {
    "text": "the wrong thing sorry this one I'm just gonna change just a 5 so now I",
    "start": "2353780",
    "end": "2363480"
  },
  {
    "text": "I kind of accepted this thing so it was like yeah just a string inside somewhere",
    "start": "2363480",
    "end": "2368610"
  },
  {
    "text": "I could now break out of it and and I could do cross side scripting this way so this is normally how this self fixes",
    "start": "2368610",
    "end": "2373830"
  },
  {
    "text": "our stuff would work and we could audit",
    "start": "2373830",
    "end": "2380610"
  },
  {
    "start": "2376000",
    "end": "2544000"
  },
  {
    "text": "our pages with burps wit and this para minor extension but of course burps wit is a tool that is it it costs money it's",
    "start": "2380610",
    "end": "2389820"
  },
  {
    "text": "not a free tool there is a free edition but you can also purchase it but it's quite cheap and it's really really good",
    "start": "2389820",
    "end": "2395190"
  },
  {
    "text": "so I highly recommend that you try it if you haven't there are some resources if you want to",
    "start": "2395190",
    "end": "2401850"
  },
  {
    "text": "read more I'm gonna let this stay there for a short while the top one is disclosed h1 this is a Twitter account",
    "start": "2401850",
    "end": "2408590"
  },
  {
    "text": "which publishes all the reports from hacker 1 which are made public so it's",
    "start": "2408590",
    "end": "2413970"
  },
  {
    "text": "really nice to just follow that one and whenever someone one of the programs on hacker 1 they publish a report with some",
    "start": "2413970",
    "end": "2419850"
  },
  {
    "text": "details in it they're gonna tweet it you could also go to hacker 1 to D 2 under",
    "start": "2419850",
    "end": "2425850"
  },
  {
    "text": "activity and you could find it there this the next two links are some tools",
    "start": "2425850",
    "end": "2431010"
  },
  {
    "text": "called why so serial these are the serialization tools so you have Y so serial and why so serial and these allow",
    "start": "2431010",
    "end": "2438930"
  },
  {
    "text": "you to do these DC realization attacks on different systems we have some things",
    "start": "2438930",
    "end": "2446370"
  },
  {
    "text": "that I find useful like the XSLT for practical attacks and the server-side templating section once again by James",
    "start": "2446370",
    "end": "2452640"
  },
  {
    "text": "kettle which I used for creating the template injection thing you have the",
    "start": "2452640",
    "end": "2458190"
  },
  {
    "text": "blog post from from detective I hostile subdomain take over using Heroku github",
    "start": "2458190",
    "end": "2463890"
  },
  {
    "text": "and etc this nikola Gregoire has this",
    "start": "2463890",
    "end": "2469260"
  },
  {
    "text": "paper which actually slides I think from from a presentation he did only on SSR F",
    "start": "2469260",
    "end": "2475080"
  },
  {
    "text": "you should actually look up the video because he has some really great examples in there of how he's used as a ref to hack things then there's",
    "start": "2475080",
    "end": "2482820"
  },
  {
    "text": "exploiting course miss configuration for bitcoins and bounties by James kettle that I did at the apps you last year and",
    "start": "2482820",
    "end": "2489660"
  },
  {
    "text": "then there's a blog post and a paper and a presentation from James kettle on",
    "start": "2489660",
    "end": "2495390"
  },
  {
    "text": "practical web cache poisoning that you can find on the porch sugar block and",
    "start": "2495390",
    "end": "2501420"
  },
  {
    "text": "that's it the demo app actually that I used to run xxe and this realization is",
    "start": "2501420",
    "end": "2508480"
  },
  {
    "text": "on github so you can find it you can run it as a docker container and in the readme file you can find all the things",
    "start": "2508480",
    "end": "2514960"
  },
  {
    "text": "that I sent to it so you can try it out yourself if you want to any questions",
    "start": "2514960",
    "end": "2522960"
  },
  {
    "text": "no questions a rest day or are you all scared and want to go home alright then",
    "start": "2531410",
    "end": "2542630"
  },
  {
    "text": "I'm just gonna stop thank you",
    "start": "2542630",
    "end": "2546308"
  }
]