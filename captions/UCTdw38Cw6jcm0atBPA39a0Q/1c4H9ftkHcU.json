[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "okay good afternoon everyone I'm really pleased to see so many of you",
    "start": "3770",
    "end": "9179"
  },
  {
    "text": "here okay so let's get started can you",
    "start": "9179",
    "end": "14910"
  },
  {
    "text": "hear me oh dear because this is not a microphone yeah okay my name is unfairly and I work",
    "start": "14910",
    "end": "28019"
  },
  {
    "text": "for the missile division that comes by defense in the air space here at Kongsberg and in today's talk I will",
    "start": "28019",
    "end": "34079"
  },
  {
    "text": "give first an introduction to some of the product where we use C++ I will talk",
    "start": "34079",
    "end": "39270"
  },
  {
    "text": "about the our C professors coding standard and how we hand yes I will do",
    "start": "39270",
    "end": "46200"
  },
  {
    "text": "that okay and okay I will talk about our C prepares coding standards and how we",
    "start": "46200",
    "end": "51960"
  },
  {
    "text": "handle different service standards I will give you an insight into some of the challenges of developing software",
    "start": "51960",
    "end": "58770"
  },
  {
    "text": "for decades and what practices we use and I will talk about the tools of the",
    "start": "58770",
    "end": "64680"
  },
  {
    "text": "use for this okay this is a naval strike",
    "start": "64680",
    "end": "70530"
  },
  {
    "start": "67000",
    "end": "67000"
  },
  {
    "text": "missile which normally named just NSM it's an anti-ship missile it can be",
    "start": "70530",
    "end": "77100"
  },
  {
    "text": "launched from both ships and from different kinds of trucks it has a solid",
    "start": "77100",
    "end": "82500"
  },
  {
    "text": "fuel booster that accelerates it out of the container and until it reach its",
    "start": "82500",
    "end": "90150"
  },
  {
    "text": "cruising speed at that time the booster is jettisoned and the small jet engine",
    "start": "90150",
    "end": "97770"
  },
  {
    "text": "takes over and until it reaches a target",
    "start": "97770",
    "end": "104149"
  },
  {
    "text": "the other product we have is a joint strike missile the jsm it's a",
    "start": "104149",
    "end": "109860"
  },
  {
    "start": "106000",
    "end": "106000"
  },
  {
    "text": "continuation of the NSM but this air launched from the f-35 aircraft since",
    "start": "109860",
    "end": "116850"
  },
  {
    "text": "its air launched it has a speed already closed as crews expedient need a booster",
    "start": "116850",
    "end": "123479"
  },
  {
    "text": "just a small jet engine for propulsion",
    "start": "123479",
    "end": "127700"
  },
  {
    "text": "some of the details of their Joint Strike missile is that it's about four meter long and weighs about 400 kilos at",
    "start": "129700",
    "end": "138650"
  },
  {
    "text": "the front we have an IR seeker and we",
    "start": "138650",
    "end": "143960"
  },
  {
    "text": "have some wings we have this is an air intake for the engine at the rear we",
    "start": "143960",
    "end": "150230"
  },
  {
    "text": "have some actuators so ailerons that are controlled by actuators the wings are",
    "start": "150230",
    "end": "158630"
  },
  {
    "text": "folded during storage and the unfolded very very close very very shortly after",
    "start": "158630",
    "end": "164420"
  },
  {
    "text": "launch at the rear and we also you can't see it but the computers are somewhere",
    "start": "164420",
    "end": "171860"
  },
  {
    "text": "here the range of the thing is about",
    "start": "171860",
    "end": "179870"
  },
  {
    "text": "well it could be more than 555 kilometers that's 300 nautical miles and",
    "start": "179870",
    "end": "185290"
  },
  {
    "text": "it depends on the launch altitude and the speed is as I said in the title it's",
    "start": "185290",
    "end": "191930"
  },
  {
    "text": "high subsonic in a missile project like",
    "start": "191930",
    "end": "199250"
  },
  {
    "start": "197000",
    "end": "197000"
  },
  {
    "text": "this there are lots of technologies to be integrated we have inertial navigation we have GPS navigation there",
    "start": "199250",
    "end": "206810"
  },
  {
    "text": "they are aided by terrain profile matching we have imaging homing flight",
    "start": "206810",
    "end": "212870"
  },
  {
    "text": "control flight route planning for the computer we're using a multi-core thing",
    "start": "212870",
    "end": "220510"
  },
  {
    "text": "and we also have thermal control because inside the weapons Bay or the 35 it's",
    "start": "220510",
    "end": "228860"
  },
  {
    "text": "really warm so the electronics needs liquid cooling and to get rid of the",
    "start": "228860",
    "end": "236390"
  },
  {
    "text": "heat we actually use the missiles jet fuel as a heat sink",
    "start": "236390",
    "end": "241810"
  },
  {
    "text": "the product is very software intensive and has been estimated that more than",
    "start": "245130",
    "end": "250140"
  },
  {
    "text": "60% of the system requirements effects software the computers that we use are",
    "start": "250140",
    "end": "261450"
  },
  {
    "start": "257000",
    "end": "257000"
  },
  {
    "text": "custom-made for our purpose because I need a special shape and size in",
    "start": "261450",
    "end": "267180"
  },
  {
    "text": "addition there are some interim environmental requirements such as operation at very low temperature and",
    "start": "267180",
    "end": "272520"
  },
  {
    "text": "very high temperature for the NSM computer which is kind of old now we use",
    "start": "272520",
    "end": "279630"
  },
  {
    "text": "50 in PowerPC computers at CPUs and they",
    "start": "279630",
    "end": "285240"
  },
  {
    "text": "have in total less than 2 gigabyte of RAM and for that we use the pieces",
    "start": "285240",
    "end": "291720"
  },
  {
    "text": "operating system and we use a D AB compiler which supports sequel plus 98",
    "start": "291720",
    "end": "298070"
  },
  {
    "text": "the jsm uses to each of the PowerPC",
    "start": "298070",
    "end": "303270"
  },
  {
    "text": "kohaku p4 280 that is an 8 core CPU so",
    "start": "303270",
    "end": "308670"
  },
  {
    "text": "that gives us a total of 16 cores and we use the integrity 11 operating systems",
    "start": "308670",
    "end": "315510"
  },
  {
    "text": "from Greenhills on that together with the green hills multi compiler which currently supports c++ 14",
    "start": "315510",
    "end": "324830"
  },
  {
    "text": "we started using super plus in 1995 because at that time we started",
    "start": "327920",
    "end": "335010"
  },
  {
    "text": "development over the NSM we had a lot of experience with see in the penguin",
    "start": "335010",
    "end": "341040"
  },
  {
    "text": "missile the one up in the left corner but we knew not NSM would be larger and",
    "start": "341040",
    "end": "348000"
  },
  {
    "text": "more complex than anything they had done before so we didn't think that C was",
    "start": "348000",
    "end": "353520"
  },
  {
    "text": "high level enough and we had no experience with ADA in our division and",
    "start": "353520",
    "end": "359060"
  },
  {
    "text": "there was a lot of internal lobbying for C++ so we decided to go for C+ in 95",
    "start": "359060",
    "end": "368810"
  },
  {
    "start": "371000",
    "end": "371000"
  },
  {
    "text": "okay what you see here is a glacier and it moves slowly and that is something",
    "start": "372620",
    "end": "379710"
  },
  {
    "text": "like military development of military products it takes a long long time so",
    "start": "379710",
    "end": "385260"
  },
  {
    "text": "the NSF's of the development start in 95 it still actually maintained we adding",
    "start": "385260",
    "end": "391140"
  },
  {
    "text": "features based on customer requests and we think it's going to be maintained for",
    "start": "391140",
    "end": "397170"
  },
  {
    "text": "at least 20 more years the JSF development started in 2010 and we have",
    "start": "397170",
    "end": "406020"
  },
  {
    "text": "developed and worked on this for eight years still haven't finished development but when development have finished we",
    "start": "406020",
    "end": "413190"
  },
  {
    "text": "think it's going to be maintained for 30 years so a really long lifetime of",
    "start": "413190",
    "end": "419370"
  },
  {
    "text": "everything we do",
    "start": "419370",
    "end": "422090"
  },
  {
    "start": "424000",
    "end": "424000"
  },
  {
    "text": "our organization follows model-based systems engineering principle so our",
    "start": "425250",
    "end": "432060"
  },
  {
    "text": "systems engineers they model make models over everything in sysml and we get the",
    "start": "432060",
    "end": "438330"
  },
  {
    "text": "four views into the models we have the requirements view functional logical and",
    "start": "438330",
    "end": "444750"
  },
  {
    "text": "behavior and from this the software",
    "start": "444750",
    "end": "450060"
  },
  {
    "text": "engineers make models in UML the way we",
    "start": "450060",
    "end": "459810"
  },
  {
    "start": "457000",
    "end": "457000"
  },
  {
    "text": "go from UML to executable code is shown in this figure for instance we at the top we have the",
    "start": "459810",
    "end": "467040"
  },
  {
    "text": "UML interfaces they we generate IDL files from them idealist Cobra ideal and",
    "start": "467040",
    "end": "475640"
  },
  {
    "text": "from them again we generate C provides interfaces including client stubs and",
    "start": "475640",
    "end": "481620"
  },
  {
    "text": "server skeletons similarly from the UML logical and physical architecture we",
    "start": "481620",
    "end": "488190"
  },
  {
    "text": "generate XML files that are core back component model compliant and from them",
    "start": "488190",
    "end": "494100"
  },
  {
    "text": "we generate C purpose component configuration files and from the UML",
    "start": "494100",
    "end": "500940"
  },
  {
    "text": "component design with general tp+ state machine skeletons and the thing here is",
    "start": "500940",
    "end": "507450"
  },
  {
    "text": "that the information flows from left to right so when we find a problem in the",
    "start": "507450",
    "end": "513510"
  },
  {
    "text": "executable that could be traced back to the UML interface we go back and update",
    "start": "513510",
    "end": "519510"
  },
  {
    "text": "the UML interface and then generate new idea which n generates new Tsukiji",
    "start": "519510",
    "end": "525720"
  },
  {
    "text": "purpose that's the way so the good thing about that is that the model doesn't",
    "start": "525720",
    "end": "531630"
  },
  {
    "text": "grow stale over time if you just update the source code the model will just grow stale but we are kind of forcing",
    "start": "531630",
    "end": "538530"
  },
  {
    "text": "ourselves to go from left to right left to right of course there's a feedback",
    "start": "538530",
    "end": "544800"
  },
  {
    "text": "when we found find a problem but it's a manual feedback there's no automatic",
    "start": "544800",
    "end": "551220"
  },
  {
    "text": "round-trip engineering anything like that it should also be said that",
    "start": "551220",
    "end": "558370"
  },
  {
    "text": "we don't really design the components very much here so if you find a problem",
    "start": "558370",
    "end": "565580"
  },
  {
    "text": "in the hand code the cheapest functional code down there we don't really have to",
    "start": "565580",
    "end": "571820"
  },
  {
    "text": "update this for our it's application",
    "start": "571820",
    "end": "581810"
  },
  {
    "start": "578000",
    "end": "578000"
  },
  {
    "text": "that provides functionality and has premiere value and that's where most development effort takes place you never",
    "start": "581810",
    "end": "589790"
  },
  {
    "text": "try to make it really easy to develop the application code you also have as a",
    "start": "589790",
    "end": "595910"
  },
  {
    "text": "goal that all application code should be 100% portable between platforms whether",
    "start": "595910",
    "end": "601610"
  },
  {
    "text": "it's running on a Linux workstation for testing or whether it's on the real missile computer so all communication",
    "start": "601610",
    "end": "611950"
  },
  {
    "text": "synchronization and thread 7 issues are taken care of by middleware within the",
    "start": "611950",
    "end": "617600"
  },
  {
    "text": "runtime library I have a small figure here showing kind of layers we have the",
    "start": "617600",
    "end": "622850"
  },
  {
    "text": "operating system bottom some abstraction layers then we have this runtime library degree interesting which application",
    "start": "622850",
    "end": "630050"
  },
  {
    "text": "called relies on because of that the",
    "start": "630050",
    "end": "636440"
  },
  {
    "text": "application can the application task can assume that it runs in a simple single",
    "start": "636440",
    "end": "642050"
  },
  {
    "text": "threaded environment always and the application task is not allowed to use",
    "start": "642050",
    "end": "648500"
  },
  {
    "text": "any OS mechanism such as a mutex or semaphore anything like that and it's",
    "start": "648500",
    "end": "655850"
  },
  {
    "text": "always going to be run to completion but it's it's not allowed to do any blocking",
    "start": "655850",
    "end": "661280"
  },
  {
    "text": "calls it has to wait for something it has to start the timer and wait for the",
    "start": "661280",
    "end": "666560"
  },
  {
    "text": "timer to timeout okay in order to get",
    "start": "666560",
    "end": "673640"
  },
  {
    "text": "some platform in dependency we have these abstraction layers so we have both",
    "start": "673640",
    "end": "679640"
  },
  {
    "text": "an operating system abstraction layer that take care of threads times clocks",
    "start": "679640",
    "end": "687100"
  },
  {
    "text": "network things and we also have the hardware abstraction layer which kind of abstract",
    "start": "687100",
    "end": "694240"
  },
  {
    "text": "evaded hardware peculiarities we fall of",
    "start": "694240",
    "end": "703089"
  },
  {
    "start": "701000",
    "end": "701000"
  },
  {
    "text": "an incremental and iterative development process so we go through this cycle of planning to maintenance lots many times",
    "start": "703089",
    "end": "711180"
  },
  {
    "text": "so now I'm going to talk about some of the tools we use for implementation and testing our products are built from",
    "start": "711180",
    "end": "721899"
  },
  {
    "start": "719000",
    "end": "719000"
  },
  {
    "text": "reusable software components and for the so JSF write software with I think it's",
    "start": "721899",
    "end": "728800"
  },
  {
    "text": "built from something like 200 components but when we take you into account",
    "start": "728800",
    "end": "734490"
  },
  {
    "text": "simulators and test stations we probably have 300 components and we use okay we",
    "start": "734490",
    "end": "744010"
  },
  {
    "text": "version every component independently from other components so therefore we use multi repository approach to the our",
    "start": "744010",
    "end": "752260"
  },
  {
    "text": "source code management and you also have this thing that the software components",
    "start": "752260",
    "end": "758740"
  },
  {
    "text": "are provided at source code only we do not build pre-compiled libraries and we",
    "start": "758740",
    "end": "764110"
  },
  {
    "text": "do not put them since we don't build them into some any kind of artifice of the fact store the only exception to",
    "start": "764110",
    "end": "771640"
  },
  {
    "text": "that are some large third-party components such as cute that we use for",
    "start": "771640",
    "end": "777870"
  },
  {
    "text": "simulators and test stations we put them as precompiled binary because just takes",
    "start": "777870",
    "end": "783550"
  },
  {
    "text": "too long to build them on demand",
    "start": "783550",
    "end": "787410"
  },
  {
    "text": "works for workspace management we like to think do you think simple so all",
    "start": "790829",
    "end": "797110"
  },
  {
    "start": "791000",
    "end": "791000"
  },
  {
    "text": "development is done in activities and tasks an activity has a dedicated",
    "start": "797110",
    "end": "802839"
  },
  {
    "text": "workspace and all changes are done on a dedicated branch in the version control",
    "start": "802839",
    "end": "808389"
  },
  {
    "text": "system and an active does a lifespan from a few hours to a few months when we",
    "start": "808389",
    "end": "817269"
  },
  {
    "text": "are starting a new activity we created together with its workspace by means of a tool which we call shaman change",
    "start": "817269",
    "end": "824410"
  },
  {
    "text": "management tool we then have so it's",
    "start": "824410",
    "end": "829660"
  },
  {
    "text": "kind of as simple as this you just shaman make activity - be the ID and",
    "start": "829660",
    "end": "835149"
  },
  {
    "text": "some suitable comment and that's then you have your workspace and that one has",
    "start": "835149",
    "end": "844360"
  },
  {
    "text": "all the components and all the components are of the correct version so",
    "start": "844360",
    "end": "850689"
  },
  {
    "text": "shaman can have a lot of metadata telling what versions are supposed to be in this to build our software from",
    "start": "850689",
    "end": "861160"
  },
  {
    "start": "858000",
    "end": "858000"
  },
  {
    "text": "source code we use a build system that we have developed ourselves we call it hi make its cross-platform and Linux",
    "start": "861160",
    "end": "869110"
  },
  {
    "text": "Windows and it supports native bills as well as cross compiles to integrity and",
    "start": "869110",
    "end": "875470"
  },
  {
    "text": "pieces for instance it generates make files from simple build files written in",
    "start": "875470",
    "end": "882009"
  },
  {
    "text": "a declarative language the pet dependencies between components of form",
    "start": "882009",
    "end": "889809"
  },
  {
    "text": "directed acyclic graph and this gives many positive effects one of them is",
    "start": "889809",
    "end": "895869"
  },
  {
    "text": "that hi Mac will detect if there are any cyclic dependencies between components",
    "start": "895869",
    "end": "901860"
  },
  {
    "text": "so I just given a few examples here how to build if you want to make a native",
    "start": "901860",
    "end": "908439"
  },
  {
    "text": "build for a Red Hat 75-65 64-bit",
    "start": "908439",
    "end": "913809"
  },
  {
    "text": "computer you just do that hi max manage e and minus P if you want to build the",
    "start": "913809",
    "end": "919929"
  },
  {
    "text": "exact same product for the Missal computer learning integrity 11 you use the second",
    "start": "919929",
    "end": "927190"
  },
  {
    "text": "line hi mike is involved in a lot of our",
    "start": "927190",
    "end": "936670"
  },
  {
    "text": "tool integration and and thanks to its directed acyclic graph there's a lot of",
    "start": "936670",
    "end": "943900"
  },
  {
    "text": "things we can do it with it we generate all the doxygen documentation out of it we generate jason completion databases",
    "start": "943900",
    "end": "951790"
  },
  {
    "text": "used by client ID and we generate project files for other static source",
    "start": "951790",
    "end": "957640"
  },
  {
    "text": "code analysis tools and a lot more and",
    "start": "957640",
    "end": "962700"
  },
  {
    "text": "this is shows the one example of a build",
    "start": "962700",
    "end": "968860"
  },
  {
    "start": "963000",
    "end": "963000"
  },
  {
    "text": "description file this is an easy one it specifies at the top that this component",
    "start": "968860",
    "end": "976600"
  },
  {
    "text": "has one IDL three five IDL interface description language version 3 and then",
    "start": "976600",
    "end": "984970"
  },
  {
    "text": "it's states that this component depends on another component so behind this HMK",
    "start": "984970",
    "end": "997840"
  },
  {
    "text": "IDL 3 sources there's a rule that knows how to generate all the make file",
    "start": "997840",
    "end": "1004080"
  },
  {
    "text": "statements so that the following transformation happens so we start from",
    "start": "1004080",
    "end": "1011160"
  },
  {
    "text": "the left with a computer IDL it's run by the IDL compiler which generates five",
    "start": "1011160",
    "end": "1017610"
  },
  {
    "text": "files and we can see one of them at the top is actually an XML file but we use",
    "start": "1017610",
    "end": "1025230"
  },
  {
    "text": "the ACL to suffix and that one is run by the ACL compiler it generates two files",
    "start": "1025230",
    "end": "1033990"
  },
  {
    "text": "and then we can see that C++ file and that C++ file are compiled by the C++",
    "start": "1033990",
    "end": "1042420"
  },
  {
    "text": "compiler they are put into a library by means of the archiver so for the user he",
    "start": "1042420",
    "end": "1050610"
  },
  {
    "text": "just makes one statement and all of that happens by magic",
    "start": "1050610",
    "end": "1056120"
  },
  {
    "text": "we don't specify anything by absolute paths or reality puffs everything is",
    "start": "1059660",
    "end": "1065090"
  },
  {
    "text": "specified by means of identifiers so when is a setup a dependency there I",
    "start": "1065090",
    "end": "1071730"
  },
  {
    "text": "just made use of to identify errs hi",
    "start": "1071730",
    "end": "1078540"
  },
  {
    "text": "mekka also takes care of transitive dependencies so if component a depends on component B which again depends on C",
    "start": "1078540",
    "end": "1086090"
  },
  {
    "text": "the header files from C are made available to a life was kind of easy",
    "start": "1086090",
    "end": "1097350"
  },
  {
    "start": "1094000",
    "end": "1094000"
  },
  {
    "text": "when we only had CP plus 98 but when we start when but starting with C purpose",
    "start": "1097350",
    "end": "1105330"
  },
  {
    "text": "11 the pace has quickened up and we get new C proposed standards every three",
    "start": "1105330",
    "end": "1110340"
  },
  {
    "text": "years and we think it's good because we",
    "start": "1110340",
    "end": "1115350"
  },
  {
    "text": "have to we have this opportunity of writing simpler better and more safe code but we just have to adapt our",
    "start": "1115350",
    "end": "1123540"
  },
  {
    "text": "practices a bit we used C purpose 98 for mmm",
    "start": "1123540",
    "end": "1128990"
  },
  {
    "text": "was it 13 years 14 years so we kind of got really good used to that so we now",
    "start": "1128990",
    "end": "1136920"
  },
  {
    "text": "we still want to be controlled to be in control but it have to be more agile to",
    "start": "1136920",
    "end": "1143820"
  },
  {
    "text": "be able to take advantage of the new language and library improvements so we",
    "start": "1143820",
    "end": "1153090"
  },
  {
    "start": "1151000",
    "end": "1151000"
  },
  {
    "text": "have a C purpose coding standard it is inspired by the Joint Strike Fighter",
    "start": "1153090",
    "end": "1159050"
  },
  {
    "text": "coding standard and the LM tell rules and recommendations but I think our",
    "start": "1159050",
    "end": "1165780"
  },
  {
    "text": "standard is more permissive than most other standards for mission mission critical software so we allow almost",
    "start": "1165780",
    "end": "1174300"
  },
  {
    "text": "everything C proper supports like multiple inheritance or TTI templates",
    "start": "1174300",
    "end": "1180000"
  },
  {
    "text": "the standard library we allow exceptions but only for exceptional situations",
    "start": "1180000",
    "end": "1188450"
  },
  {
    "text": "we do not allow dynamic memory allocation from the heap except for",
    "start": "1188490",
    "end": "1195330"
  },
  {
    "text": "during the installation or startup phase then of course we can use a heap since",
    "start": "1195330",
    "end": "1205920"
  },
  {
    "text": "we can't be since we are not allowed to use the heap of the installation we have",
    "start": "1205920",
    "end": "1212480"
  },
  {
    "start": "1206000",
    "end": "1206000"
  },
  {
    "text": "made quite a few container classes that",
    "start": "1212480",
    "end": "1217950"
  },
  {
    "text": "are not dynamic in size and can be created on the stack so we have things",
    "start": "1217950",
    "end": "1223470"
  },
  {
    "text": "like a bounded string and bounded vector class and then fixed size array we have",
    "start": "1223470",
    "end": "1235590"
  },
  {
    "text": "also dedicated pools for message buffers of communication so and then we have",
    "start": "1235590",
    "end": "1242070"
  },
  {
    "text": "open overloaded than you and delete operators so that when we allocate the buffer they go to that dedicated pool we",
    "start": "1242070",
    "end": "1257340"
  },
  {
    "start": "1255000",
    "end": "1255000"
  },
  {
    "text": "have to take into account several compilers and they are not in step the",
    "start": "1257340",
    "end": "1262680"
  },
  {
    "text": "feature wise for instance the green else multi compiler didn't support this plus",
    "start": "1262680",
    "end": "1268260"
  },
  {
    "text": "plus 14 until early 2018 and that was about three years later than GCC had",
    "start": "1268260",
    "end": "1274740"
  },
  {
    "text": "full support so if we wait for all compilers to support a certain standard",
    "start": "1274740",
    "end": "1281220"
  },
  {
    "text": "before we allow it there will be a lost opportunity cost so our applied probiotic approach is",
    "start": "1281220",
    "end": "1291060"
  },
  {
    "text": "that we allow different code to use different superclass standards so our",
    "start": "1291060",
    "end": "1296310"
  },
  {
    "text": "simulator software that only runs on Linux using GCC was the first to use",
    "start": "1296310",
    "end": "1302580"
  },
  {
    "text": "simple verse 11 it was the first to use C purchase 14 and they are now on 0 17",
    "start": "1302580",
    "end": "1310580"
  },
  {
    "text": "but sometimes a feature not supported by all compilers sneaks into the codebase",
    "start": "1310580",
    "end": "1317870"
  },
  {
    "text": "but so far we don't consider it will be a big problem because we integrate often",
    "start": "1317960",
    "end": "1324529"
  },
  {
    "text": "and early and we use Jenkins to build our software and all kind of combinations of compilers and she",
    "start": "1324529",
    "end": "1332899"
  },
  {
    "text": "prefers standard so it's kind of cool it's caught really early and here I just",
    "start": "1332899",
    "end": "1339169"
  },
  {
    "text": "shown you some examples how we use hi make to build the same code with",
    "start": "1339169",
    "end": "1347690"
  },
  {
    "text": "different compilers and different standards so we have some native builds",
    "start": "1347690",
    "end": "1353659"
  },
  {
    "text": "here and specify GCC seven to zero and then clang and different standards and",
    "start": "1353659",
    "end": "1360379"
  },
  {
    "text": "the bottom how we use it for the mr. computer when it comes to code",
    "start": "1360379",
    "end": "1372499"
  },
  {
    "start": "1370000",
    "end": "1370000"
  },
  {
    "text": "optimization we have this principle we only do it when necessary so we have put",
    "start": "1372499",
    "end": "1381200"
  },
  {
    "text": "some effort into optimizing our communication middleware and we are done some micro benchmarking measuring the",
    "start": "1381200",
    "end": "1388279"
  },
  {
    "text": "cost of making a remote remote procedure call from A to B and on the target",
    "start": "1388279",
    "end": "1394549"
  },
  {
    "text": "computer we are using the green super trace probe to investigate possible bottlenecks and I'm not going to show",
    "start": "1394549",
    "end": "1402590"
  },
  {
    "text": "you some of that okay the green is super tears probe it's a trace tool that is",
    "start": "1402590",
    "end": "1411259"
  },
  {
    "start": "1403000",
    "end": "1403000"
  },
  {
    "text": "connected to the PowerPC p48 is a rogue report you can do real-time Hardware",
    "start": "1411259",
    "end": "1417590"
  },
  {
    "text": "trace of all instructions from one CPU core at the time and you can collect up to four gigabyte or trace data you might",
    "start": "1417590",
    "end": "1426019"
  },
  {
    "text": "think that four gigabyte is a lot but depending on what the core is doing that",
    "start": "1426019",
    "end": "1431299"
  },
  {
    "text": "could be just a few milliseconds to visualize that trace data the greens",
    "start": "1431299",
    "end": "1438830"
  },
  {
    "text": "they provide a tool that is called the path analyzer we have used the path",
    "start": "1438830",
    "end": "1445669"
  },
  {
    "text": "analyzer and that tracing tool to optimize",
    "start": "1445669",
    "end": "1451419"
  },
  {
    "text": "collection cloth container cross that we found out it initialized itself twice",
    "start": "1451419",
    "end": "1459070"
  },
  {
    "text": "and we also use it to optimize an algorithm where a large data structures",
    "start": "1459070",
    "end": "1466280"
  },
  {
    "text": "were copied instead of moved and we've that actually gave a 50 times speed-up",
    "start": "1466280",
    "end": "1471440"
  },
  {
    "text": "of that algorithm so so that's meant we could do things in a few seconds instead",
    "start": "1471440",
    "end": "1477890"
  },
  {
    "text": "of minutes this is what a trace in the",
    "start": "1477890",
    "end": "1485690"
  },
  {
    "start": "1482000",
    "end": "1482000"
  },
  {
    "text": "path analysis looks like at the bottom you see this kind of blue line here that",
    "start": "1485690",
    "end": "1493039"
  },
  {
    "text": "shows we're doing remote procedure calls again and again and again and again and",
    "start": "1493039",
    "end": "1498070"
  },
  {
    "text": "from all that is about three milliseconds that's a whole trace the",
    "start": "1498070",
    "end": "1505130"
  },
  {
    "text": "detailed view above shows about 27 microseconds of that and it shows where",
    "start": "1505130",
    "end": "1514750"
  },
  {
    "text": "by me you see the background color there's some green that is a client tasks doing",
    "start": "1514750",
    "end": "1522380"
  },
  {
    "text": "something then we have the pink that is the server class doing the server thread",
    "start": "1522380",
    "end": "1528409"
  },
  {
    "text": "doing something and then we have some white background that is and we are in running in kernel what you see up here",
    "start": "1528409",
    "end": "1540409"
  },
  {
    "text": "are the different functions making calls so you have kind of it's a function a",
    "start": "1540409",
    "end": "1547280"
  },
  {
    "text": "doing a invocation - B - C - D - E - f -",
    "start": "1547280",
    "end": "1552620"
  },
  {
    "text": "G and so on and all the way down and I think this one shows about called depth about 25",
    "start": "1552620",
    "end": "1561700"
  },
  {
    "text": "yes no not the stack usage we have other",
    "start": "1563830",
    "end": "1576260"
  },
  {
    "text": "tools to look at the stack usage this is just then the depth yes yes actually",
    "start": "1576260",
    "end": "1595429"
  },
  {
    "text": "well no okay we have two CPUs each doing",
    "start": "1595429",
    "end": "1602299"
  },
  {
    "text": "each having eight course we have allocated those eight course sometimes",
    "start": "1602299",
    "end": "1608510"
  },
  {
    "text": "we have an SMP all eight cores or is one SNP or the other one we have actually",
    "start": "1608510",
    "end": "1615260"
  },
  {
    "text": "one am 3a and piece we're having one core each and then we have one at a",
    "start": "1615260",
    "end": "1621110"
  },
  {
    "text": "five-course and then when we do remote procedure calls it's between these kernel computers inside the same CPU so",
    "start": "1621110",
    "end": "1631549"
  },
  {
    "text": "and we have when I say remote procedure calls it's a Koba call and it's go",
    "start": "1631549",
    "end": "1637790"
  },
  {
    "text": "through not TCP or UDP we have a kind of custom-made transport mechanism did that",
    "start": "1637790",
    "end": "1645500"
  },
  {
    "text": "answer your question good ok ok here I have zoomed into just",
    "start": "1645500",
    "end": "1655549"
  },
  {
    "start": "1653000",
    "end": "1653000"
  },
  {
    "text": "one RPC and we can see that the client",
    "start": "1655549",
    "end": "1662600"
  },
  {
    "text": "is doing a call doing something then the server the pink side runs and then it's",
    "start": "1662600",
    "end": "1669080"
  },
  {
    "text": "back to the client and when I was doing this I was not looking for anything in particular I was",
    "start": "1669080",
    "end": "1675760"
  },
  {
    "text": "just doing an exercise well to learn the tool and I got curious about that part",
    "start": "1675760",
    "end": "1683340"
  },
  {
    "text": "of the trace and that is it's hard to",
    "start": "1683340",
    "end": "1688480"
  },
  {
    "text": "read here but that is a default constructor of a fixed size array key class and I think you can see it's doing",
    "start": "1688480",
    "end": "1697720"
  },
  {
    "text": "something here and then it's doing something there now I'm going to and",
    "start": "1697720",
    "end": "1705190"
  },
  {
    "text": "this is a declaration that Clause as you see it's very simple it's very similar",
    "start": "1705190",
    "end": "1711820"
  },
  {
    "text": "to what is probably study right now it's an array of some element type so when we",
    "start": "1711820",
    "end": "1721240"
  },
  {
    "start": "1720000",
    "end": "1720000"
  },
  {
    "text": "swim into this this is just a constructor it's about six microseconds",
    "start": "1721240",
    "end": "1728800"
  },
  {
    "text": "of execution time and oops thought ahead",
    "start": "1728800",
    "end": "1736900"
  },
  {
    "text": "that was wrong month there we go okay",
    "start": "1736900",
    "end": "1743920"
  },
  {
    "text": "this part here it's where we are default constructing each element in the array",
    "start": "1743920",
    "end": "1753060"
  },
  {
    "text": "but what was the second part that one",
    "start": "1753570",
    "end": "1760170"
  },
  {
    "text": "okay then we go and look at the implementation of that constructor the",
    "start": "1760170",
    "end": "1768520"
  },
  {
    "text": "first part we saw was obviously the default construction that happens there",
    "start": "1768520",
    "end": "1774090"
  },
  {
    "text": "and then when you look at the code we can see how we have an explicit loop",
    "start": "1774090",
    "end": "1779410"
  },
  {
    "text": "again to iterate over every element and",
    "start": "1779410",
    "end": "1785670"
  },
  {
    "text": "construct it again and that shouldn't be necessary so we rewrote it like this",
    "start": "1785670",
    "end": "1798179"
  },
  {
    "text": "where we you added that one delete the loop and the extra",
    "start": "1798330",
    "end": "1806480"
  },
  {
    "text": "execution was gone our software is",
    "start": "1806480",
    "end": "1814519"
  },
  {
    "start": "1812000",
    "end": "1812000"
  },
  {
    "text": "tested and tested at the bottom level we have the unit test where we currently",
    "start": "1814519",
    "end": "1821059"
  },
  {
    "text": "use Google tests in Google Mach I'm not going to say anything about that they're",
    "start": "1821059",
    "end": "1826100"
  },
  {
    "text": "built at least to talks about that during this conference in the missile",
    "start": "1826100",
    "end": "1832519"
  },
  {
    "text": "integration lab we run our applications on the real missile computer using real",
    "start": "1832519",
    "end": "1839299"
  },
  {
    "text": "hardware components we have test arenas that simulated actuators sensors and all",
    "start": "1839299",
    "end": "1844580"
  },
  {
    "text": "the environment and of course the software runs in real time and this is",
    "start": "1844580",
    "end": "1850489"
  },
  {
    "text": "the closest real fright as we can get in the lab we also have a missile simulator",
    "start": "1850489",
    "end": "1856309"
  },
  {
    "text": "that runs on Linux workstation with in simulator time now I'm going to show you",
    "start": "1856309",
    "end": "1864889"
  },
  {
    "start": "1864000",
    "end": "1864000"
  },
  {
    "text": "a video of one of the test flights its",
    "start": "1864889",
    "end": "1870609"
  },
  {
    "text": "Royal Norwegian Navy frigate that fires a missile you should see that the",
    "start": "1870609",
    "end": "1877789"
  },
  {
    "text": "booster accelerates the missile out of the cannister and how the wings unfold it it has an inert warhead so there's no",
    "start": "1877789",
    "end": "1886580"
  },
  {
    "text": "explosion when hits the target ship and some of the video is really",
    "start": "1886580",
    "end": "1893230"
  },
  {
    "text": "disappointing and some of the video is",
    "start": "1894220",
    "end": "1900289"
  },
  {
    "text": "filmed from a jet fighter flying case that means it try to follow it so",
    "start": "1900289",
    "end": "1908950"
  },
  {
    "text": "now we should see the wings unfolding there",
    "start": "1916260",
    "end": "1922580"
  },
  {
    "text": "I was no explosion I was just deeply",
    "start": "1933299",
    "end": "1938658"
  },
  {
    "start": "1942000",
    "end": "1942000"
  },
  {
    "text": "okay compiler policy the compilers and",
    "start": "1942320",
    "end": "1949139"
  },
  {
    "text": "their configuration are tightly controlled by the build system and the version control system so we like to",
    "start": "1949139",
    "end": "1955440"
  },
  {
    "text": "know exactly what we're using and for this reason we never use a compiler that comes with a Linux distro for the Linux",
    "start": "1955440",
    "end": "1965129"
  },
  {
    "text": "for the bill that builds the current support three versions of GCC for Linux we also support clang and we support the",
    "start": "1965129",
    "end": "1973830"
  },
  {
    "text": "compilers for our embedded targets we",
    "start": "1973830",
    "end": "1980759"
  },
  {
    "start": "1980000",
    "end": "1980000"
  },
  {
    "text": "started using GCC in 2004 when 3.3 wasn't a current at that time we",
    "start": "1980759",
    "end": "1987509"
  },
  {
    "text": "believed it was a good thing to keep the development environment environment stable so we didn't upgrade the compiler",
    "start": "1987509",
    "end": "1995190"
  },
  {
    "text": "until 2011 when 450 was current and that",
    "start": "1995190",
    "end": "2000499"
  },
  {
    "text": "was not easy the the gnu compiler gave us many of our",
    "start": "2000499",
    "end": "2005840"
  },
  {
    "text": "didn't give us problems but ETJ if injected a lot of code that the compiler",
    "start": "2005840",
    "end": "2010970"
  },
  {
    "text": "the old compiler thought was ok and we decided then we don't want this",
    "start": "2010970",
    "end": "2016429"
  },
  {
    "text": "experience to happen again so for the last six years we have installed one",
    "start": "2016429",
    "end": "2022730"
  },
  {
    "text": "unity new GCC compiler every year we normally do it in January because that's",
    "start": "2022730",
    "end": "2029239"
  },
  {
    "text": "is when GCC has released the point 3 version that gives us a nice cadence we",
    "start": "2029239",
    "end": "2037340"
  },
  {
    "text": "start a new year with a new compiler and since then we give the developers one",
    "start": "2037340",
    "end": "2045230"
  },
  {
    "text": "year to adapt to the new compiler so we have normally three TCG versions",
    "start": "2045230",
    "end": "2053329"
  },
  {
    "text": "rolling we have the previous default we have the default and the next default",
    "start": "2053329",
    "end": "2059858"
  },
  {
    "text": "the multi compiler that comes from Greenlees has updated them about once or",
    "start": "2059859",
    "end": "2066169"
  },
  {
    "text": "twice a year independent of GCC for each new compiler",
    "start": "2066169",
    "end": "2074740"
  },
  {
    "start": "2071000",
    "end": "2071000"
  },
  {
    "text": "version we enabled a few more warnings that is an a pragmatic approach if we",
    "start": "2074740",
    "end": "2082020"
  },
  {
    "text": "want to have a strict compiler but if we increase the strictness too much the",
    "start": "2082020",
    "end": "2089589"
  },
  {
    "text": "developers will either give in or the protein miners will say that there are no money to fix the issues so we just",
    "start": "2089589",
    "end": "2099220"
  },
  {
    "text": "make it a little bit strict every time every year the build system provides",
    "start": "2099220",
    "end": "2105780"
  },
  {
    "text": "three predefined warning levels and the default level where the code should",
    "start": "2105780",
    "end": "2112359"
  },
  {
    "text": "always be warning free you have the strict well it should be warning free at",
    "start": "2112359",
    "end": "2118089"
  },
  {
    "text": "the end of the year and we have the pedantic which I don't think anyone uses",
    "start": "2118089",
    "end": "2125520"
  },
  {
    "text": "and we think this is a way to continuously adapt and improve the code",
    "start": "2126089",
    "end": "2132040"
  },
  {
    "text": "when it's supposed to live for decades we don't be happy if you don't if we",
    "start": "2132040",
    "end": "2138490"
  },
  {
    "text": "don't dare to follow the world outside we will very soon have code that is old",
    "start": "2138490",
    "end": "2144550"
  },
  {
    "text": "again",
    "start": "2144550",
    "end": "2146940"
  },
  {
    "text": "we have found out that our current warning levels are stricter than what",
    "start": "2151529",
    "end": "2157209"
  },
  {
    "text": "most third-party components are built with prisons Const correctness is an",
    "start": "2157209",
    "end": "2164859"
  },
  {
    "text": "issue the milkey compiler from Green Hills issues warnings if a variable",
    "start": "2164859",
    "end": "2172839"
  },
  {
    "text": "could be constable isn't so we in the",
    "start": "2172839",
    "end": "2177880"
  },
  {
    "text": "beginning we got thousands of warnings from third-party components from boost cute and Google tests so we have now",
    "start": "2177880",
    "end": "2185829"
  },
  {
    "text": "configured the build system suppressor that kind of things for GCC and clang we",
    "start": "2185829",
    "end": "2191799"
  },
  {
    "text": "use that - I system directive when specifying the include file search path",
    "start": "2191799",
    "end": "2198239"
  },
  {
    "text": "for the other compilers we have implemented filters inside the build",
    "start": "2198239",
    "end": "2204999"
  },
  {
    "text": "system that suppresses warnings based on regular expressions the whole point of",
    "start": "2204999",
    "end": "2211899"
  },
  {
    "text": "this is that the warnings should never be visible in the console or the IDE",
    "start": "2211899",
    "end": "2218639"
  },
  {
    "text": "there should be even though the third-party common component has issues",
    "start": "2218639",
    "end": "2224759"
  },
  {
    "text": "the user should never see them because our goal is sear warnings at the at the",
    "start": "2224759",
    "end": "2230439"
  },
  {
    "text": "bill line we also use static code",
    "start": "2230439",
    "end": "2239559"
  },
  {
    "text": "analysis tools we have QA c++ from programming research that's a commercial",
    "start": "2239559",
    "end": "2246729"
  },
  {
    "text": "product it has thousands of rules that can be enabled and disabled individually",
    "start": "2246729",
    "end": "2253599"
  },
  {
    "text": "and recently we have also start using client ID from the LLVM project we",
    "start": "2253599",
    "end": "2265959"
  },
  {
    "text": "originally introduced client ID as a tool to assist in modernization of our",
    "start": "2265959",
    "end": "2273369"
  },
  {
    "text": "code base because client ID comes with 24 modernization checks I just",
    "start": "2273369",
    "end": "2283290"
  },
  {
    "text": "I'm not going to tell you anything about client ID but they have these kind of",
    "start": "2283290",
    "end": "2290250"
  },
  {
    "text": "checks I have a name and when I just filter them on modernized there are 24",
    "start": "2290250",
    "end": "2298670"
  },
  {
    "text": "then you can run the command line that looks like this the dot or dot is one",
    "start": "2298670",
    "end": "2305010"
  },
  {
    "text": "more source files and then it will automatically fix or modernize your",
    "start": "2305010",
    "end": "2311990"
  },
  {
    "text": "files and if you want to improve the",
    "start": "2311990",
    "end": "2317460"
  },
  {
    "text": "code in other ways there are 268 other chicks some of them are not really",
    "start": "2317460",
    "end": "2325170"
  },
  {
    "text": "relevant to us because they are according to the Google coding standard",
    "start": "2325170",
    "end": "2331580"
  },
  {
    "text": "but we have found that for instance that readability checks they're really good",
    "start": "2331580",
    "end": "2337940"
  },
  {
    "text": "[Music] clanked either requires a Jason compilation database to work and our",
    "start": "2337940",
    "end": "2345210"
  },
  {
    "text": "bill seems high make generates that one for us so this is an example where how",
    "start": "2345210",
    "end": "2355080"
  },
  {
    "text": "do I have run client ID with the modernize use using check and I hope you",
    "start": "2355080",
    "end": "2363450"
  },
  {
    "text": "can see that what's happened here in this header file is that the type tips have been replaced by the using keyword",
    "start": "2363450",
    "end": "2371690"
  },
  {
    "text": "which is a modern way of doing here",
    "start": "2371690",
    "end": "2379170"
  },
  {
    "text": "I have shown I have run the code with the readability container size empty and",
    "start": "2379170",
    "end": "2385850"
  },
  {
    "text": "redundant string ceasing checks and you",
    "start": "2385850",
    "end": "2390960"
  },
  {
    "text": "should be able to see that the original code had if command dot size equal to",
    "start": "2390960",
    "end": "2397980"
  },
  {
    "text": "zero which has been replaced by commands empty and there are some redundant calls",
    "start": "2397980",
    "end": "2405480"
  },
  {
    "text": "to see string which are just gone",
    "start": "2405480",
    "end": "2410750"
  },
  {
    "start": "2415000",
    "end": "2415000"
  },
  {
    "text": "we also use a number of runtime analysis tools we use valgrind",
    "start": "2415560",
    "end": "2422020"
  },
  {
    "text": "we use address sanitizer that is part of GCC and define behavior sanitizer and we",
    "start": "2422020",
    "end": "2429700"
  },
  {
    "text": "can activate them through simple switches to the build system for the",
    "start": "2429700",
    "end": "2435280"
  },
  {
    "text": "target computers running integrity we have various resource analyzers to",
    "start": "2435280",
    "end": "2442900"
  },
  {
    "text": "monitor memory usage heat usage thread stack watermark and CPU usage we also",
    "start": "2442900",
    "end": "2451600"
  },
  {
    "text": "use tools for test coverage like squish cocoa and some profiler tools finally",
    "start": "2451600",
    "end": "2464980"
  },
  {
    "start": "2463000",
    "end": "2463000"
  },
  {
    "text": "I'm just going to show you how what we do about C++ source code beautification",
    "start": "2464980",
    "end": "2472540"
  },
  {
    "text": "and we think that having uniform formatting of source code improves code",
    "start": "2472540",
    "end": "2478480"
  },
  {
    "text": "understanding having a tool doing it removes some of the subjective I like it",
    "start": "2478480",
    "end": "2484660"
  },
  {
    "text": "this way discussions and I like it that way so what we done is we have using two",
    "start": "2484660",
    "end": "2491350"
  },
  {
    "text": "tools calling called and crucify and a style so they work together to format",
    "start": "2491350",
    "end": "2498610"
  },
  {
    "text": "the source code to our standard I think crucified us 95 percent of the job and a",
    "start": "2498610",
    "end": "2506710"
  },
  {
    "text": "style fixes some of the remaining issues it should be said that and Crucified is",
    "start": "2506710",
    "end": "2514510"
  },
  {
    "text": "a bit challenging to configure because it's got more than 600 options but it",
    "start": "2514510",
    "end": "2520180"
  },
  {
    "text": "also means that whatever your coding standard our coding style is you can actually adapt the tool we have",
    "start": "2520180",
    "end": "2529210"
  },
  {
    "text": "integrated tool into the our code editors and I des you can also run them from the command line to format whole",
    "start": "2529210",
    "end": "2535990"
  },
  {
    "text": "directory structures at at one time we have looked into clang format but so far",
    "start": "2535990",
    "end": "2543220"
  },
  {
    "text": "I think that the uncursed define a style compilation do a better job than clang",
    "start": "2543220",
    "end": "2550300"
  },
  {
    "text": "format but I also think the clang format has more potential in the long run this",
    "start": "2550300",
    "end": "2559900"
  },
  {
    "start": "2559000",
    "end": "2559000"
  },
  {
    "text": "is an example of what the tool has done I would say the code on the left is a",
    "start": "2559900",
    "end": "2568060"
  },
  {
    "text": "mess the indentation is crazy the the",
    "start": "2568060",
    "end": "2573100"
  },
  {
    "text": "placement of the braces is crazy but on the right you can see it has",
    "start": "2573100",
    "end": "2581140"
  },
  {
    "text": "formatted all the bracing according to the almond style that we use you can see",
    "start": "2581140",
    "end": "2587050"
  },
  {
    "text": "that member variables are aligned let's see if I can see them here ok this one",
    "start": "2587050",
    "end": "2596240"
  },
  {
    "text": "like this its alliance on the equal operator equal sign also aligned and",
    "start": "2596240",
    "end": "2604740"
  },
  {
    "text": "delete and default on the standard functions so having a tool doing all",
    "start": "2604740",
    "end": "2614700"
  },
  {
    "text": "this means that it can actually be quite nice code normally it's too much manual",
    "start": "2614700",
    "end": "2621570"
  },
  {
    "text": "work to do this kind of alignment but when the tool does it there's no cost",
    "start": "2621570",
    "end": "2628200"
  },
  {
    "text": "and I think the code is more readable like that okay thank you are there any",
    "start": "2628200",
    "end": "2648660"
  },
  {
    "start": "2637000",
    "end": "2637000"
  },
  {
    "text": "questions yes Mike no I think we I love",
    "start": "2648660",
    "end": "2662670"
  },
  {
    "text": "all of us yet yes and we are allowed to",
    "start": "2662670",
    "end": "2671490"
  },
  {
    "text": "use if before doing installation we can do do it yes",
    "start": "2671490",
    "end": "2683440"
  },
  {
    "text": "ah good questions that should probably",
    "start": "2683440",
    "end": "2692349"
  },
  {
    "text": "repeat the question how do we catch that we don't you dynamic memory allocation afterwards actually we don't have any",
    "start": "2692349",
    "end": "2700359"
  },
  {
    "text": "tools for that so I think it's code",
    "start": "2700359",
    "end": "2706089"
  },
  {
    "text": "review I was supposed to catch them yes",
    "start": "2706089",
    "end": "2723039"
  },
  {
    "text": "but it's our own real-time object request broker it's not a commercial",
    "start": "2723039",
    "end": "2730180"
  },
  {
    "text": "product it's a very very special made for our purposes real-time yeah okay",
    "start": "2730180",
    "end": "2748680"
  },
  {
    "text": "okay I think no okay okay no okay okay I",
    "start": "2748680",
    "end": "2755829"
  },
  {
    "text": "can probably say something about that okay the the depends on the mission but",
    "start": "2755829",
    "end": "2762430"
  },
  {
    "text": "I think the missile is you can configure it to do add what you call turn around",
    "start": "2762430",
    "end": "2769260"
  },
  {
    "text": "hmm little retarget okay it flies it",
    "start": "2769260",
    "end": "2774400"
  },
  {
    "text": "finds out I missed the target so I make a turn go back and I'm I don't know if",
    "start": "2774400",
    "end": "2784359"
  },
  {
    "text": "that can be repeated but I think it eventually it will just find out I have",
    "start": "2784359",
    "end": "2791200"
  },
  {
    "text": "to do something safe and that is to dive into the water",
    "start": "2791200",
    "end": "2795599"
  },
  {
    "text": "yes",
    "start": "2799100",
    "end": "2802100"
  },
  {
    "text": "the test oh yes okay",
    "start": "2807680",
    "end": "2814620"
  },
  {
    "text": "the our hardware in the loop tests they are kind of halfway automatic there is",
    "start": "2814620",
    "end": "2824520"
  },
  {
    "text": "always a person there serving the experiment or the test because something",
    "start": "2824520",
    "end": "2831990"
  },
  {
    "text": "could go really wrong like smoke coming out at the devices and things like that",
    "start": "2831990",
    "end": "2837960"
  },
  {
    "text": "but it's they are scripted yeah are we",
    "start": "2837960",
    "end": "2848940"
  },
  {
    "text": "have we have simulators outside and they",
    "start": "2848940",
    "end": "2854010"
  },
  {
    "text": "are tunnel what about this okay we have",
    "start": "2854010",
    "end": "2865830"
  },
  {
    "text": "the we make a mission and then the",
    "start": "2865830",
    "end": "2871080"
  },
  {
    "text": "simulators follow that mission to simulate whether we going",
    "start": "2871080",
    "end": "2876720"
  },
  {
    "text": "making simulating GPS positions whatever and that just goes into the system I",
    "start": "2876720",
    "end": "2887780"
  },
  {
    "text": "must say that the real-time or the whole when the loop simulation part is not my",
    "start": "2887780",
    "end": "2893690"
  },
  {
    "text": "expertise I'm sorry about that",
    "start": "2893690",
    "end": "2897800"
  },
  {
    "text": "yes near I think our goal is we have to",
    "start": "2898820",
    "end": "2912420"
  },
  {
    "text": "keep up with the sensor inputs but if we",
    "start": "2912420",
    "end": "2918480"
  },
  {
    "text": "are ten microseconds late doesn't really matter the the aim is to keep the miss",
    "start": "2918480",
    "end": "2925080"
  },
  {
    "text": "on stable and follow its pre-programmed route but it's not really really quickly",
    "start": "2925080",
    "end": "2933210"
  },
  {
    "text": "or a few microseconds late yes yes yes okay",
    "start": "2933210",
    "end": "2955520"
  },
  {
    "text": "there are okay we do do not have to follow anything like artists a deal 178",
    "start": "2955520",
    "end": "2962070"
  },
  {
    "text": "B which are used for civilian avionics but you always have to go through a",
    "start": "2962070",
    "end": "2968190"
  },
  {
    "text": "safety board with the customer and",
    "start": "2968190",
    "end": "2974540"
  },
  {
    "text": "particularly I think the US have really tough safety board and where we have to",
    "start": "2974540",
    "end": "2980070"
  },
  {
    "text": "prove somehow I'm not involved that process that our software is a safe yes",
    "start": "2980070",
    "end": "2992570"
  },
  {
    "text": "[Applause]",
    "start": "2992880",
    "end": "3000049"
  }
]