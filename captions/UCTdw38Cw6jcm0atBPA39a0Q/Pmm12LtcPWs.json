[
  {
    "text": "hi all thank you for being here today I hope you enjoyed all the morning sessions and had some good talks already",
    "start": "680",
    "end": "6279"
  },
  {
    "text": "so this talk is going to be about gr qu and I think after this you will all get some lunch so I hope I'll won't take too",
    "start": "6279",
    "end": "12400"
  },
  {
    "text": "much of your time so what is this about gra qu is a kind of new technology that was invented",
    "start": "12400",
    "end": "18560"
  },
  {
    "text": "by Facebook and this talk will show how you can use it and what are the difference between a rest API basically",
    "start": "18560",
    "end": "25279"
  },
  {
    "text": "like you once set XML to like give documents to each other and now we're using Jason for most apis so this talk",
    "start": "25279",
    "end": "32160"
  },
  {
    "text": "will show how graph relates to rest apis and what are the benefits if you would use",
    "start": "32160",
    "end": "37879"
  },
  {
    "text": "graph so a meme I really like about this one is uh it's probably a meem a meme you've all seen before like different",
    "start": "37879",
    "end": "44079"
  },
  {
    "text": "context uh basically says like a developer you see new packages every day new Frameworks especially when you're",
    "start": "44079",
    "end": "50520"
  },
  {
    "text": "working on front end back end a bit less but still um gra girl is a really new and interesting technology and for most",
    "start": "50520",
    "end": "57359"
  },
  {
    "text": "of the people that are working with rest apis already um have seen problems that we are going",
    "start": "57359",
    "end": "62760"
  },
  {
    "text": "to discuss today and after which you can see how graph solves these for you so a little bit about myself uh my name is",
    "start": "62760",
    "end": "70000"
  },
  {
    "text": "Roy uh I tweet under the handle at get heck team so if you want to get more information after this session or want",
    "start": "70000",
    "end": "76680"
  },
  {
    "text": "to let other people know you're here and watching this uh please go to Twitter I tweet a lot about JavaScript mostly but",
    "start": "76680",
    "end": "82479"
  },
  {
    "text": "also about reactjs re native and of course guq uh I started uh working with",
    "start": "82479",
    "end": "89240"
  },
  {
    "text": "JavaScript for like like 10 years ago and I taught myself how to work with it so I didn't R to Computer Science",
    "start": "89240",
    "end": "94759"
  },
  {
    "text": "Education but learning this really made me understand how JavaScript works and it also shows that JavaScript is open to",
    "start": "94759",
    "end": "100640"
  },
  {
    "text": "everyone so that's why I have to hashtag JavaScript everywhere because you can use it everywhere and it is relatable",
    "start": "100640",
    "end": "106880"
  },
  {
    "text": "for everyone so what's this for like I said before it's mostly for people that",
    "start": "106880",
    "end": "112280"
  },
  {
    "text": "either work with rest apis or design rest apis or maybe somebody that's a product manager and is looking to get a",
    "start": "112280",
    "end": "118920"
  },
  {
    "text": "new project startup uh so gr gr takes a special place it can be used both by backend developers or by",
    "start": "118920",
    "end": "125640"
  },
  {
    "text": "front end developers and you can see a sort of a layer between your uh your true backend or your database or other",
    "start": "125640",
    "end": "131640"
  },
  {
    "text": "rest apis you might be accessing and your front end so what is wrong with rest let's",
    "start": "131640",
    "end": "138160"
  },
  {
    "text": "first get started with this so nothing is really wrong with rest I really like uh to work with rest apis I've used them",
    "start": "138160",
    "end": "145319"
  },
  {
    "text": "a lot but they can uh they can be improved and some of these improvements people today and I might ask some people",
    "start": "145319",
    "end": "151800"
  },
  {
    "text": "afterwards if you see other disadvantages of using rest so let's look about what a rest API really is so",
    "start": "151800",
    "end": "159319"
  },
  {
    "text": "rest has M multiple endpoints that return fixed data structures so usually if like a collection that's use is like",
    "start": "159319",
    "end": "165560"
  },
  {
    "text": "a user or product or other information and your rest API will turn that collection in the exact shape uh how it",
    "start": "165560",
    "end": "172959"
  },
  {
    "text": "is described in your collection or database or your other uh data source and it has multiple endpoints so each",
    "start": "172959",
    "end": "179239"
  },
  {
    "text": "collection will have a own endpoint and if you want to combine collections you usually uh need to have multiple",
    "start": "179239",
    "end": "184360"
  },
  {
    "text": "endpoints for that so we're going to try and uh create a situation by looking at",
    "start": "184360",
    "end": "189720"
  },
  {
    "text": "an example you are so I've created a little wireframe for you and it's a it's a product page so it shows a title and a",
    "start": "189720",
    "end": "196159"
  },
  {
    "text": "thumbnail H rating and multiple offers so this is actually a Marketplace UI I",
    "start": "196159",
    "end": "201799"
  },
  {
    "text": "am uh a co-founder of a marketpl startup so I use this example as it example I",
    "start": "201799",
    "end": "206920"
  },
  {
    "text": "see every day so we have this title and our thumbnail uh that come from our own API call so we have the API call",
    "start": "206920",
    "end": "213720"
  },
  {
    "text": "product/ ID and we're going to get like the basic information and usually it's a lot more than those uh three variables",
    "start": "213720",
    "end": "220400"
  },
  {
    "text": "it's like an entire list with all the uh variables you have for this uh particular",
    "start": "220400",
    "end": "225560"
  },
  {
    "text": "product and next to that you would have like a different endpoint for the reviews as well so you don't only want",
    "start": "225560",
    "end": "231159"
  },
  {
    "text": "to show the product information but also the review information which requires you to make an an extra request and then",
    "start": "231159",
    "end": "237519"
  },
  {
    "text": "finally to show like all the offers you have for this product you need to make a third request to show those actual offers so we have three endpoints here",
    "start": "237519",
    "end": "244840"
  },
  {
    "text": "that we need to access in order to have our uh our customer see this product",
    "start": "244840",
    "end": "251360"
  },
  {
    "text": "page so you might say why not create one endpoint to have all this information in one place so you only need to make one",
    "start": "252560",
    "end": "259280"
  },
  {
    "text": "uh call to the to the server and what you get returned is the entire information you would need for this",
    "start": "259280",
    "end": "265160"
  },
  {
    "text": "particular UI so we can do that and now we have our uh so this is a third example for an a",
    "start": "265160",
    "end": "272400"
  },
  {
    "text": "rest API and this API call is through products as well you specify an ID and what you get back is all the information",
    "start": "272400",
    "end": "278600"
  },
  {
    "text": "so the three endpoints we just saw are now combined into one uh endpoint so we have a title information we have a",
    "start": "278600",
    "end": "285080"
  },
  {
    "text": "review information and we also have the information for all our offers and if you could imagine it can be a really uh",
    "start": "285080",
    "end": "292440"
  },
  {
    "text": "big request if you could like a lot of offers for example if you're Amazon and you have like a 100 offers for a certain",
    "start": "292440",
    "end": "298960"
  },
  {
    "text": "product then this will uh require a lot from your server to access all this data all the",
    "start": "298960",
    "end": "304600"
  },
  {
    "text": "time so we've used something we call a nested layout design so our API is has a",
    "start": "304600",
    "end": "310240"
  },
  {
    "text": "nested design so we don't return one collection we return uh we return multiple collections in one",
    "start": "310240",
    "end": "317520"
  },
  {
    "text": "layout so another problem you get with this is like Under and Over fetching as you can see we know of all this",
    "start": "317520",
    "end": "323000"
  },
  {
    "text": "information and we have used the nested layout design and this endpoint is particularly designed to serve this UI",
    "start": "323000",
    "end": "330319"
  },
  {
    "text": "and now maybe your frontend developers are asking to change their application they maybe want to not show all the",
    "start": "330319",
    "end": "335840"
  },
  {
    "text": "offers so what would happen then we're going to delete the offers from this UI and you're going to get stuck with a lot",
    "start": "335840",
    "end": "342160"
  },
  {
    "text": "of information that you're uh accessing all the time so every time somebody makes a request to your endpoint they",
    "start": "342160",
    "end": "347919"
  },
  {
    "text": "will not only get the product information they will also get the information about the offers something that you aren't showing uh this",
    "start": "347919",
    "end": "353800"
  },
  {
    "text": "particular moment to your user so something we could do is like",
    "start": "353800",
    "end": "359360"
  },
  {
    "text": "spef specify the parameters you want in your endpoint so you're sending a request to maybe the product endpoint",
    "start": "359360",
    "end": "364919"
  },
  {
    "text": "and you're saying hey I only want to receive the product information and I also want to receive the information",
    "start": "364919",
    "end": "370639"
  },
  {
    "text": "about the reviews so you're adding parameters to your endpoint to make sure the the data that's returned is modeled",
    "start": "370639",
    "end": "377800"
  },
  {
    "text": "to the UI that your front end developers want to show and this can also be a problem but",
    "start": "377800",
    "end": "383240"
  },
  {
    "text": "hey maybe we want to change it we only want to show the latest or latest offer so we have another parameter that latest",
    "start": "383240",
    "end": "389680"
  },
  {
    "text": "offer through we don't only uh request the product information and reviews but we also request our latest offer so you",
    "start": "389680",
    "end": "396360"
  },
  {
    "text": "have to remodel your API so it will return the latest offer if you specify the parameter so your friend developers",
    "start": "396360",
    "end": "402240"
  },
  {
    "text": "can show it and as you can see we only show one offer and maybe they want to put in some buttom to show more offers",
    "start": "402240",
    "end": "408520"
  },
  {
    "text": "but that's something we can look at later so maybe we want to show all the",
    "start": "408520",
    "end": "414080"
  },
  {
    "text": "offers again so if we go back to the previous example um we're now showing the latest offer on as we specified as a",
    "start": "414080",
    "end": "420599"
  },
  {
    "text": "parameter but of course we can also specify uh to have all the offers again",
    "start": "420599",
    "end": "426080"
  },
  {
    "text": "so now we not only specify that we want the latest offer but we also specify we want to get all the offers again so as",
    "start": "426080",
    "end": "432599"
  },
  {
    "text": "you can see the request is getting bigger and our UI has changed so we really modeled this endpoint to fit our",
    "start": "432599",
    "end": "439039"
  },
  {
    "text": "UI as you can see our from the developers now also want to show all the rest of the offers but they are hidden",
    "start": "439039",
    "end": "444759"
  },
  {
    "text": "between a show more button uh but as if you use like a nested layout design they have to request have to make a request",
    "start": "444759",
    "end": "451479"
  },
  {
    "text": "for all the offers at once or maybe they have to do something else and like request the offers again in another uh",
    "start": "451479",
    "end": "458840"
  },
  {
    "text": "in another API call so it's not really the true solution to the problem you're facing here as you still need to make",
    "start": "458840",
    "end": "465000"
  },
  {
    "text": "either a really big request to the server that is all the information or multiple requests to get like uh smaller",
    "start": "465000",
    "end": "471120"
  },
  {
    "text": "bits of the information for your product and as you might imagine uh ref",
    "start": "471120",
    "end": "477479"
  },
  {
    "text": "location is looks really different now so we have to use two uis we started with version one on the left and it",
    "start": "477479",
    "end": "483000"
  },
  {
    "text": "shows the product information and all the offers and we have version two it shows only the latest offer and it could",
    "start": "483000",
    "end": "488599"
  },
  {
    "text": "show all the offers if a user speci uh decided to click on the show more button",
    "start": "488599",
    "end": "493680"
  },
  {
    "text": "and if you might imagine we now have different endpoints for API so maybe your front developers didn't alter the",
    "start": "493680",
    "end": "499960"
  },
  {
    "text": "application uh to serve multiple uh endpoints or maybe they did or maybe one",
    "start": "499960",
    "end": "506199"
  },
  {
    "text": "UI is released to the App Store and you have to wait for it and in order to um to use the new endpoints so it's a lot",
    "start": "506199",
    "end": "513279"
  },
  {
    "text": "of stuff you need as a backa developer you need to maintain so you got these different endpoints and this different",
    "start": "513279",
    "end": "518800"
  },
  {
    "text": "structures uh and in different parameters so you need to have versioning on your API and maybe some",
    "start": "518800",
    "end": "524279"
  },
  {
    "text": "people don't but at least uh you have to maintain multiple versions of the API with different endpoints different parameters and also different data",
    "start": "524279",
    "end": "531000"
  },
  {
    "text": "structures you might have restructured your data uh to look different to really fit the UI and this is something that is",
    "start": "531000",
    "end": "538160"
  },
  {
    "text": "uh yeah that also need needs documenting so some people might uh know like this this is an API open API schema it",
    "start": "538160",
    "end": "545760"
  },
  {
    "text": "configures how you can document your API and unless you use some package to uh",
    "start": "545760",
    "end": "551040"
  },
  {
    "text": "automatically fetch your collections and translate it to this file structure you have to write this documentation every",
    "start": "551040",
    "end": "558480"
  },
  {
    "text": "time so every single time you change an endpoint or add parameters to it or change your data structures you also",
    "start": "558480",
    "end": "564040"
  },
  {
    "text": "need to change the uh configuration of your documentation and as you probably all know here sometimes forget it or",
    "start": "564040",
    "end": "570240"
  },
  {
    "text": "you're really in a hurry or there are different releases uh then can get really hard to keep this documenting up",
    "start": "570240",
    "end": "576279"
  },
  {
    "text": "to date yes you need to specify all the parameters again and this is something",
    "start": "576279",
    "end": "583600"
  },
  {
    "text": "rqu can solve so if you're going to look at some of the problems we saw it's the it's the multiple endpoints so you have multiple end points for every collection",
    "start": "583600",
    "end": "590720"
  },
  {
    "text": "uh another problem we faced was over fetching so we either use a n design for API and we're going to call all this",
    "start": "590720",
    "end": "596560"
  },
  {
    "text": "information at once that's something we call over fetching uh also have something called under",
    "start": "596560",
    "end": "601600"
  },
  {
    "text": "fetching the N plus1 problem is basically um you need to make another",
    "start": "601600",
    "end": "606720"
  },
  {
    "text": "request as your API doesn't provide enough information that's something we saw in the very beginning as we have the",
    "start": "606720",
    "end": "611800"
  },
  {
    "text": "multiple end points uh but also if you use the nested layout design you can also get into the situation as sometimes",
    "start": "611800",
    "end": "618440"
  },
  {
    "text": "your nested layer design doesn't have all the information you needed once and of course versioning and documenting and",
    "start": "618440",
    "end": "625440"
  },
  {
    "text": "these are all problems graph qu can solve and it ALS starts with a single endpoint that returns flexible data",
    "start": "625440",
    "end": "631880"
  },
  {
    "text": "structures so different than rest we don't have multiple endpoints that return fixed data structures we're going",
    "start": "631880",
    "end": "637920"
  },
  {
    "text": "to have just one endpoint that has flexible data structures we can configure",
    "start": "637920",
    "end": "643399"
  },
  {
    "text": "ourselves so if we're going to look at how graph Quil does this uh usually when you make an API request you have uh",
    "start": "643399",
    "end": "650519"
  },
  {
    "text": "multiple uh Solutions you can either do a get request or post or put gra well we",
    "start": "650519",
    "end": "655920"
  },
  {
    "text": "only have a post request so everything you do needs to have a body with",
    "start": "655920",
    "end": "661959"
  },
  {
    "text": "information and if you want to do something we call in graph a query uh you would do a get request in rest but",
    "start": "661959",
    "end": "668480"
  },
  {
    "text": "in graphql you will do a post request and in the body you're going to send all the variables you want to receive back",
    "start": "668480",
    "end": "674680"
  },
  {
    "text": "so we have this post request and otherwise if we want to do a mutation so we want to alter our data collection uh",
    "start": "674680",
    "end": "680279"
  },
  {
    "text": "then we will also do a post request but this time in the body we will send the parameters you want to change or want to delete so as you can see post put patch",
    "start": "680279",
    "end": "687839"
  },
  {
    "text": "and delete um would all be considered a mutation and are also going to oppos request so it can be it can feel a bit",
    "start": "687839",
    "end": "695320"
  },
  {
    "text": "weird if you're um if you're really familiar with rest and you know okay when I do a delete request I assume data",
    "start": "695320",
    "end": "701360"
  },
  {
    "text": "will get deleted with gra Quil you will only have to post request and you really specifies yourself what's going to",
    "start": "701360",
    "end": "707000"
  },
  {
    "text": "happen so it might feel a bit strange at first and now graph Cod does this on the",
    "start": "707000",
    "end": "714120"
  },
  {
    "text": "left you will see a graph qu data scheme uh so in this scheme I you will provide",
    "start": "714120",
    "end": "719519"
  },
  {
    "text": "your collections as you can see typee product is a collection of all the information we want this type to have so",
    "start": "719519",
    "end": "726880"
  },
  {
    "text": "as you can see we have our title our ID and our thumbnail and we also specify the relations we have with uh with our",
    "start": "726880",
    "end": "732480"
  },
  {
    "text": "reviews or with our offers and these collections will have their own uh type in the schema and to also specify which",
    "start": "732480",
    "end": "739240"
  },
  {
    "text": "parameters or variables they can return as you can see for review and offer we",
    "start": "739240",
    "end": "744279"
  },
  {
    "text": "both have U we both have parameters and variables connected to it and as you can",
    "start": "744279",
    "end": "749760"
  },
  {
    "text": "see we spe we also specify in what uh in what format they're delivered as you can see some are strings or integers uh",
    "start": "749760",
    "end": "757480"
  },
  {
    "text": "other those are float and if you look at the relational you can see we refer to the type um in the schema so as you can",
    "start": "757480",
    "end": "765160"
  },
  {
    "text": "see reviews and we'll return something in the format of their own type review that will all have uh their types",
    "start": "765160",
    "end": "771800"
  },
  {
    "text": "described as well as you can see robot turn uh product ID account and average that are either integer or a float and",
    "start": "771800",
    "end": "778560"
  },
  {
    "text": "you can also so even make it Nest even more so maybe you're you want to include all the reviews or all uh the",
    "start": "778560",
    "end": "785720"
  },
  {
    "text": "information you would have related to review maybe the use information as well you can all specify it in the scheme",
    "start": "785720",
    "end": "792240"
  },
  {
    "text": "and yeah so you describe the data structure and what we do in the bottom is we specify which information you can",
    "start": "792240",
    "end": "799000"
  },
  {
    "text": "retrieve at once so you're going to set uh a type for your uh for your queries",
    "start": "799000",
    "end": "804959"
  },
  {
    "text": "and people can in this solution people could only uh fetch an endpoint to this gra API and they can get back a",
    "start": "804959",
    "end": "812560"
  },
  {
    "text": "product if you define an ID and it will have the the format as we described for the data structure for product so if we",
    "start": "812560",
    "end": "819440"
  },
  {
    "text": "look at the query example you can see we run this query we're going to give an ID so it's going to match the ID you have",
    "start": "819440",
    "end": "825880"
  },
  {
    "text": "in your product schema and it's going to return all the information you specify in here and as you can see we have the",
    "start": "825880",
    "end": "831920"
  },
  {
    "text": "uh relational types described so we have reviews and our offers and we can also",
    "start": "831920",
    "end": "837920"
  },
  {
    "text": "uh specify which variables you want to return for these relations as you can see we can set Dynamic parameters and in",
    "start": "837920",
    "end": "844839"
  },
  {
    "text": "this case we only set the ID but you could also set uh multiple stuff if you want to select products that fit other",
    "start": "844839",
    "end": "851000"
  },
  {
    "text": "criteria as well and something that's returned has",
    "start": "851000",
    "end": "856199"
  },
  {
    "text": "the exact same data structure as the stuff you specified so if you look at this request before you can see we ask",
    "start": "856199",
    "end": "862079"
  },
  {
    "text": "for we have a query we ask for a product the title thumbnail reviews and if you look at the return uh that's Json by the",
    "start": "862079",
    "end": "868920"
  },
  {
    "text": "way you can see that's the same data structure so we're going to get back our product we're going to get the title",
    "start": "868920",
    "end": "874320"
  },
  {
    "text": "thumbnail and the relations we just described so with reviews and offers and",
    "start": "874320",
    "end": "879440"
  },
  {
    "text": "as you can see offers returns an array as we also specifi offers can be",
    "start": "879440",
    "end": "886000"
  },
  {
    "text": "multiple yeah so it's really a predictable return result you don't only have to single endpoint uh in which you",
    "start": "886000",
    "end": "891040"
  },
  {
    "text": "determine which information you want to receive back you would also uh Define how you will get it back so the",
    "start": "891040",
    "end": "896839"
  },
  {
    "text": "structure is really related to your query which makes makes it really easy as a front end developer to know which",
    "start": "896839",
    "end": "902000"
  },
  {
    "text": "information you will get back you don't longer lead the documentation to see how and what kind of data structure will I",
    "start": "902000",
    "end": "908000"
  },
  {
    "text": "receive my information and we can do the same for mutation as you can see we have our type",
    "start": "908000",
    "end": "913639"
  },
  {
    "text": "offer so if you want to add an offer to a product uh then this type offer will have its own data uh schema as you can",
    "start": "913639",
    "end": "920480"
  },
  {
    "text": "see we have a product ID which will link it to the product we have a reseller which is the name of the company that",
    "start": "920480",
    "end": "926120"
  },
  {
    "text": "sells it and we have a price and also Define the mutation so the only mutation",
    "start": "926120",
    "end": "931360"
  },
  {
    "text": "people uh developers could do in this situation is mutate by adding an offer if you specify a product ID reseller or",
    "start": "931360",
    "end": "938360"
  },
  {
    "text": "a string and as you might see the exclamation mark behind integer will mean uh people need to put in an integer",
    "start": "938360",
    "end": "945759"
  },
  {
    "text": "otherwise your query would fill I will show a demo a bit later and you can see you won't get any result back if you don't specify the exclamation if you",
    "start": "945759",
    "end": "953040"
  },
  {
    "text": "don't specify the product ID so what we will do here is we' described the data structure again so we're going to add",
    "start": "953040",
    "end": "958560"
  },
  {
    "text": "offer we're going to add the offer to our uh data structure for offer so all the information put has to has to",
    "start": "958560",
    "end": "965880"
  },
  {
    "text": "match and then we would also need to specify which information we want to receive back so we're adding an offer",
    "start": "965880",
    "end": "972120"
  },
  {
    "text": "and we're not just adding the offer to our database or going to do adding to other data source we will also get some",
    "start": "972120",
    "end": "978399"
  },
  {
    "text": "information back and you can specify um that after it and you can also Al uh you",
    "start": "978399",
    "end": "983759"
  },
  {
    "text": "can only specify the information that is described in your schema for offer",
    "start": "983759",
    "end": "989240"
  },
  {
    "text": "and this will also return like a predictable result so what you will get back um will look the same so you will",
    "start": "989240",
    "end": "995399"
  },
  {
    "text": "get back the offer with the information you just described and also if you want",
    "start": "995399",
    "end": "1000600"
  },
  {
    "text": "uh if you look at the problem for over fetching again this is when we would have Ned layout design we're going to get all the offers and the reviews um in",
    "start": "1000600",
    "end": "1009279"
  },
  {
    "text": "one datab in one uh API request that's something we can solve with grph qu as you can see we can determine how our",
    "start": "1009279",
    "end": "1015279"
  },
  {
    "text": "data looks like so in this case we want to exclude the offers and what we would",
    "start": "1015279",
    "end": "1021959"
  },
  {
    "text": "get back doesn't is data collection without the offers so this is something you can see in a demo for yourself um",
    "start": "1021959",
    "end": "1029640"
  },
  {
    "text": "but it's really like I said before you define which data you want to receive and you will get it back in the exact same",
    "start": "1029640",
    "end": "1035280"
  },
  {
    "text": "format and the same goes for if you want to use pagination so something that's come out of the box with graph qu is uh",
    "start": "1035280",
    "end": "1042360"
  },
  {
    "text": "saying you want to receive the first offer maybe you want to receive the offer after an ID something that's really useful if you have like a scroll",
    "start": "1042360",
    "end": "1048960"
  },
  {
    "text": "more uh option in your API as you can see it would still uh get",
    "start": "1048960",
    "end": "1056440"
  },
  {
    "text": "back to date and the format you describe your uh yourself so there are really no surprises as a font and developer uh",
    "start": "1056440",
    "end": "1062280"
  },
  {
    "text": "when you're implementing this and versioning is also something we discussed before and it's really easy",
    "start": "1062280",
    "end": "1068400"
  },
  {
    "text": "with graph CO as you can see we have our schema for offer and we aled it a bit uh we renamed our reseller uh variable to",
    "start": "1068400",
    "end": "1076640"
  },
  {
    "text": "to be called reseller name and and afterward we just put a little deprecated Mark so graph will know it is",
    "start": "1076640",
    "end": "1083159"
  },
  {
    "text": "deprecated and when people are using the graph qu documentation playground which was show in a bit uh then they won't see",
    "start": "1083159",
    "end": "1089960"
  },
  {
    "text": "um the variable name reseller anymore so they can still query it but they won't see it so when they're adopting a newer",
    "start": "1089960",
    "end": "1095880"
  },
  {
    "text": "version of your API they won't be using the old the old variables again as you can see it's deprecated and we can still",
    "start": "1095880",
    "end": "1102960"
  },
  {
    "text": "query it uh but if we look at the result we will get back both if we want to have both the reseller name and the reseller",
    "start": "1102960",
    "end": "1110200"
  },
  {
    "text": "then we can both access them but your user just won't see a resell is available anymore once you deprecate",
    "start": "1110200",
    "end": "1118240"
  },
  {
    "text": "it and this is something you can see in the graph qu playground so this is something that comes out of the box with",
    "start": "1118640",
    "end": "1123960"
  },
  {
    "text": "graph qu um I used Apollo server for this example so it looks a bit different than uh graphic well you might know from",
    "start": "1123960",
    "end": "1131400"
  },
  {
    "text": "Facebook uh but it still works the same so you can see uh your entire schema here as you can see on the right side",
    "start": "1131400",
    "end": "1138080"
  },
  {
    "text": "you can Loop through uh the schemas and you can see which uh variables you can",
    "start": "1138080",
    "end": "1143919"
  },
  {
    "text": "you can access and you can see the relations you can click through though and it makes it really easy to see which",
    "start": "1143919",
    "end": "1149840"
  },
  {
    "text": "is available in API and which information isn't and this is all self-documenting so you don't uh need to",
    "start": "1149840",
    "end": "1156720"
  },
  {
    "text": "specify what you want to uh what you want to be available here to a user but",
    "start": "1156720",
    "end": "1161760"
  },
  {
    "text": "everything that's defined in your schema is available to the user to see and loop through and use in this",
    "start": "1161760",
    "end": "1167720"
  },
  {
    "text": "playground so let me see if I can yes so this is the example of the uh of the",
    "start": "1167720",
    "end": "1173159"
  },
  {
    "text": "playground as you can see I have let me this a bit",
    "start": "1173159",
    "end": "1178840"
  },
  {
    "text": "bigger yes uh as you can see on the right side we have our we have our schema H you can just click through it",
    "start": "1178840",
    "end": "1185000"
  },
  {
    "text": "so we specified uh a data schema for product and this will be a collection of",
    "start": "1185000",
    "end": "1190240"
  },
  {
    "text": "other products and you can see the variables you can query and you can also see the relations so we have a relation",
    "start": "1190240",
    "end": "1196480"
  },
  {
    "text": "with the offers for example you you can look through it and you can see all the information described here and if you",
    "start": "1196480",
    "end": "1202559"
  },
  {
    "text": "want to do a request uh then it's really easy you can see you can do the request right here we can leave out stuff we can",
    "start": "1202559",
    "end": "1209200"
  },
  {
    "text": "put it back in so if you want to leave out the reviews from your request you can do it like this and you can see the",
    "start": "1209200",
    "end": "1214559"
  },
  {
    "text": "reviews are missing also we can specify we only want",
    "start": "1214559",
    "end": "1219679"
  },
  {
    "text": "to return the price and it's something is really easy as well I just put them back",
    "start": "1219679",
    "end": "1225919"
  },
  {
    "text": "in and they're there again so your front and the developer can play around to this playground or maybe of other users",
    "start": "1225919",
    "end": "1232240"
  },
  {
    "text": "of your API uh that want to use it to display your information on their website or in the product then you can",
    "start": "1232240",
    "end": "1238360"
  },
  {
    "text": "use this playground to see which data structures they can get and also if you would look at the variables this is",
    "start": "1238360",
    "end": "1244880"
  },
  {
    "text": "something you can do so we describe the variables uh we want to include in our uh request and this request for product",
    "start": "1244880",
    "end": "1251720"
  },
  {
    "text": "it uses the same data schema as we did as we saw with uh the request for products but now we Define an ID and and",
    "start": "1251720",
    "end": "1259360"
  },
  {
    "text": "if you look right here uh down you can see this is our request body so all the information you specify here can be",
    "start": "1259360",
    "end": "1266039"
  },
  {
    "text": "accessed in your query to display the data that's uh that you want to have and also",
    "start": "1266039",
    "end": "1272240"
  },
  {
    "text": "you can set HTTP headers so if you've got uh information that is uh that needs",
    "start": "1272240",
    "end": "1277760"
  },
  {
    "text": "to have a certain authorization level that you can specify in uh yeah sort all",
    "start": "1277760",
    "end": "1283320"
  },
  {
    "text": "sort of um tokens you can have and you can fetch those on your server something I will show you as well so if we go back",
    "start": "1283320",
    "end": "1290279"
  },
  {
    "text": "to the slides yes so how can you implement this like I said before there's a special place uh",
    "start": "1290279",
    "end": "1297919"
  },
  {
    "text": "between the back end and the front end and you can also use it as a layer between those two and now I'm going to",
    "start": "1297919",
    "end": "1303600"
  },
  {
    "text": "look mostly at the back end implementation um yes so as you can see we can use",
    "start": "1303600",
    "end": "1310720"
  },
  {
    "text": "either use gra qu to access a database which is the most simple structure so instead of um you can still have your",
    "start": "1310720",
    "end": "1317400"
  },
  {
    "text": "controllers for your API but this time they won't relate to an endpoint but they will relate to graphql and graphql",
    "start": "1317400",
    "end": "1323279"
  },
  {
    "text": "will handle this on their own way and not only can you uh create graphical",
    "start": "1323279",
    "end": "1328520"
  },
  {
    "text": "access to databases you can also use it on existing services so maybe you have",
    "start": "1328520",
    "end": "1333919"
  },
  {
    "text": "like a legacy API or you already have like document based stuff you want to uh",
    "start": "1333919",
    "end": "1340320"
  },
  {
    "text": "resolve with gra qu you can do this really easy I can also access third third party apis so if you look before",
    "start": "1340320",
    "end": "1346039"
  },
  {
    "text": "at the HTTP headers uh if you have like an authorization token from Facebook or any other social media you can just send",
    "start": "1346039",
    "end": "1352919"
  },
  {
    "text": "those to graphql and graphql can look um in the Facebook a API for certain",
    "start": "1352919",
    "end": "1358159"
  },
  {
    "text": "information or maybe you want to register a user uh to social media then that's something that can be done as",
    "start": "1358159",
    "end": "1364919"
  },
  {
    "text": "well and if you want to construct a graph qu server it usually will look like this this example for JavaScript uh",
    "start": "1364919",
    "end": "1371840"
  },
  {
    "text": "but if we see later if got packages for any other uh programming syntax you will use so something we describe is the the",
    "start": "1371840",
    "end": "1379159"
  },
  {
    "text": "type depths and the type definations are our schemas so here we will describe the data structure of our",
    "start": "1379159",
    "end": "1386080"
  },
  {
    "text": "collections uh the real magic happens in the resolvers so the resolvers are your connection uh between your uh data",
    "start": "1386080",
    "end": "1392679"
  },
  {
    "text": "source and between your go Quil queries so you really need to uh Define the",
    "start": "1392679",
    "end": "1398520"
  },
  {
    "text": "relations between the data and your database or your external API with your schemas and once you've got those",
    "start": "1398520",
    "end": "1404799"
  },
  {
    "text": "information set up graph can query it and like authorization headers we can uh",
    "start": "1404799",
    "end": "1411000"
  },
  {
    "text": "put them in a context and we can also put connections to a database or to any other API through the context as well so",
    "start": "1411000",
    "end": "1418279"
  },
  {
    "text": "it's basically three things the result the type definition which is your schema or maybe your database model as other",
    "start": "1418279",
    "end": "1424080"
  },
  {
    "text": "people uh might know it from uh the rest apis and the resolvers are sort of your controllers and you make the relation",
    "start": "1424080",
    "end": "1430960"
  },
  {
    "text": "between the data and the queries and in your context you can set additional information like authorization",
    "start": "1430960",
    "end": "1438679"
  },
  {
    "text": "so this is a bit more uh this is a bit more advanced example and next to context we also included data sources",
    "start": "1438679",
    "end": "1446080"
  },
  {
    "text": "and data sources will be put on the context variable but it helps you setting up and collecting data so you",
    "start": "1446080",
    "end": "1452840"
  },
  {
    "text": "can make the connections with your um with your data source and in context you can put the",
    "start": "1452840",
    "end": "1459240"
  },
  {
    "text": "request heritors you might need to use for those data source and yeah here's a bit more",
    "start": "1459240",
    "end": "1465279"
  },
  {
    "text": "example of a resolver so we have a schema and and you can see we have resol for query and resol for product uh as",
    "start": "1465279",
    "end": "1472360"
  },
  {
    "text": "you might see the query for product um takes in an underscore underscore usually is the first parameter and it",
    "start": "1472360",
    "end": "1478919"
  },
  {
    "text": "stands for parent uh it's not really relatable for this one as product doesn't have a parent it's the it is the",
    "start": "1478919",
    "end": "1484760"
  },
  {
    "text": "parent actually for the other data collections as you can see we can also take arguments arguments would be like the ID we set in the query or maybe",
    "start": "1484760",
    "end": "1492480"
  },
  {
    "text": "anything we want to alter to this um to this particular product and you can see we will use the data structure data",
    "start": "1492480",
    "end": "1498640"
  },
  {
    "text": "sources so we will use the data source uh to get information about this product and we have sort of a controller that",
    "start": "1498640",
    "end": "1504320"
  },
  {
    "text": "will get this product and something that's really important to understand is that the format in which you will uh get",
    "start": "1504320",
    "end": "1510880"
  },
  {
    "text": "the product from the data source needs to be exactly the same as your schema so it needs to be",
    "start": "1510880",
    "end": "1516559"
  },
  {
    "text": "adjacent um for example that contains in the ex same order not in ex same order",
    "start": "1516559",
    "end": "1522559"
  },
  {
    "text": "but gra will know if you have a data schema for a product and it will return like a really big Json file with uh",
    "start": "1522559",
    "end": "1530000"
  },
  {
    "text": "maybe not just the four the two the three variables we described but maybe it's like 100 gra will still take those",
    "start": "1530000",
    "end": "1537159"
  },
  {
    "text": "out of the Json file if they have the same name so our queries our query resolver will need to match the uh",
    "start": "1537159",
    "end": "1543520"
  },
  {
    "text": "design we've made for product and if you would look at the example we have here for uh for product and we can see",
    "start": "1543520",
    "end": "1551240"
  },
  {
    "text": "product will return the data in the same structure as our schema and we can send that data to",
    "start": "1551240",
    "end": "1557279"
  },
  {
    "text": "the uh the reviews uh resolver and a review resolver will use the parent in",
    "start": "1557279",
    "end": "1563200"
  },
  {
    "text": "example the parent ID um to either fet it from your database or another API and",
    "start": "1563200",
    "end": "1568919"
  },
  {
    "text": "it will link reviews to the particular product and as a front end developer is",
    "start": "1568919",
    "end": "1575720"
  },
  {
    "text": "really easy to use graphql uh like I said before you can just uh query it uh",
    "start": "1575720",
    "end": "1581279"
  },
  {
    "text": "with a post request so we have this post request and this post request uh will be",
    "start": "1581279",
    "end": "1587240"
  },
  {
    "text": "sent to uh to graph qu endpoint that is here marked this SLP graphql and with",
    "start": "1587240",
    "end": "1593200"
  },
  {
    "text": "post request you can do the query and either get information or you can do the mutation uh which either post putot",
    "start": "1593200",
    "end": "1599960"
  },
  {
    "text": "patch or delete but all structured in one post request and what else gra has to offer",
    "start": "1599960",
    "end": "1607080"
  },
  {
    "text": "it's not just a query language for your apis or data sources it is much more",
    "start": "1607080",
    "end": "1612440"
  },
  {
    "text": "like mod tooling uh the playground you saw before is from Apollo and Apollo has",
    "start": "1612440",
    "end": "1617960"
  },
  {
    "text": "created a lot of products um to use graph qu either in the front end or the back end we also have a very rich",
    "start": "1617960",
    "end": "1624919"
  },
  {
    "text": "development community so graph gr is still growing each day and especially front developers really love it it still",
    "start": "1624919",
    "end": "1630960"
  },
  {
    "text": "needs a bit more adaptation from um like programming lenses like uh python is is",
    "start": "1630960",
    "end": "1637720"
  },
  {
    "text": "less popular but still it can be used with this and it's platform agnostic so it really relates to different",
    "start": "1637720",
    "end": "1643679"
  },
  {
    "text": "programming languag you're not limited to using JavaScript or uh yeah especially JavaScript is really big with",
    "start": "1643679",
    "end": "1649960"
  },
  {
    "text": "it but it doesn't necessarily need to be JavaScript and Industry adoption there are a lot of big companies already using",
    "start": "1649960",
    "end": "1656000"
  },
  {
    "text": "graph qu in a modern day tools uh like most developers will use GitHub and GitHub is someone that has adopted graph",
    "start": "1656000",
    "end": "1662600"
  },
  {
    "text": "qu already so if we look at the developer Community uh like this is the mpm package for for graphql it's sort of",
    "start": "1662600",
    "end": "1669760"
  },
  {
    "text": "the the graphql source and as you can see it has uh over a million weekly",
    "start": "1669760",
    "end": "1675159"
  },
  {
    "text": "downloads so there are a lot of products already using it and of course every time you run mpm install it will count",
    "start": "1675159",
    "end": "1681159"
  },
  {
    "text": "as a download but still it's uh it's indication that is really really popular right now and a lot of people are using",
    "start": "1681159",
    "end": "1687360"
  },
  {
    "text": "graph Quil applications and if you also look at the number of dependents so there are almost 3,000 packages that",
    "start": "1687360",
    "end": "1693559"
  },
  {
    "text": "depend on graph qu so you can imagine there are a lot of uh modern tooling that is already used in graphql is",
    "start": "1693559",
    "end": "1699559"
  },
  {
    "text": "related to this single graph qu mpm package and like I said before it's",
    "start": "1699559",
    "end": "1705640"
  },
  {
    "text": "platform agnostic if you would Google if you would search for graph quell on GitHub uh you will find that there over",
    "start": "1705640",
    "end": "1712200"
  },
  {
    "text": "20,000 products that have to take JavaScript also have to take graph quell and you can see for typescript is really",
    "start": "1712200",
    "end": "1718720"
  },
  {
    "text": "popular as well and then you can see declining but still uh there are other packages that are other G the proporties",
    "start": "1718720",
    "end": "1725679"
  },
  {
    "text": "uh that are using in graph qu and for example uh yeah we have Apollo here and Apollo is the biggest for JavaScript you",
    "start": "1725679",
    "end": "1732320"
  },
  {
    "text": "got like ruffine and you can use it for python uh but you can also use it for rust I believe and sria is for Scala and",
    "start": "1732320",
    "end": "1740440"
  },
  {
    "text": "Ruby is his own package relay is something created by Facebook and you have Prisma which is mostly used on",
    "start": "1740440",
    "end": "1747039"
  },
  {
    "text": "databases so you can connect Prisma as a layer in your database uh the same way same way like we saw before uh to set up",
    "start": "1747039",
    "end": "1754080"
  },
  {
    "text": "a graph Quil server and also we have the industry",
    "start": "1754080",
    "end": "1759200"
  },
  {
    "text": "adoption as you can see GitHub is a very popular uh product probably everybody",
    "start": "1759200",
    "end": "1764760"
  },
  {
    "text": "uses here and they adopted graph qu they had like multiple uh reasons to do this",
    "start": "1764760",
    "end": "1771360"
  },
  {
    "text": "and the biggest reason was actually the multiple end points and the fixed data structures from rest that was really",
    "start": "1771360",
    "end": "1776600"
  },
  {
    "text": "annoying their uh their developers and also was a really big load on the servers and Netflix recently adopted as",
    "start": "1776600",
    "end": "1783120"
  },
  {
    "text": "well there's a really good medium article by the guys from Netflix that created this uh particular",
    "start": "1783120",
    "end": "1789559"
  },
  {
    "text": "implementation and other companies like Yelp and shli fire also using",
    "start": "1789559",
    "end": "1795480"
  },
  {
    "text": "grq uh yeah to summarize we can look at the uh rest has multiple endpoints that return fixed data structures so this is",
    "start": "1795480",
    "end": "1802720"
  },
  {
    "text": "something that GitHub saw is a big problem and Facebook also saw has a problem and that's why they either",
    "start": "1802720",
    "end": "1807760"
  },
  {
    "text": "created gra Quil or started adopting it and that's one of the main reasons I started using uh gra Quil as well",
    "start": "1807760",
    "end": "1814360"
  },
  {
    "text": "because it's really hard to maintain all the data structures and you've got multiple versions multiple users of your",
    "start": "1814360",
    "end": "1819640"
  },
  {
    "text": "application and all those applications uh will uh configure over time and rest",
    "start": "1819640",
    "end": "1825240"
  },
  {
    "text": "endpoints are usually structured to match those uis so all the decisions you will make to match a particular UI uh",
    "start": "1825240",
    "end": "1831799"
  },
  {
    "text": "would mean that all the people using your API are getting this uh exact configuration and with gr qu you will",
    "start": "1831799",
    "end": "1838760"
  },
  {
    "text": "get a bit more flexibility because you have the single end point and it Dr will turn uh flexible data structure so your",
    "start": "1838760",
    "end": "1844720"
  },
  {
    "text": "user can describe how your data will look like and in which format they will get it returned and also they can",
    "start": "1844720",
    "end": "1850799"
  },
  {
    "text": "exclude or include any variable that they want and uh something that's really",
    "start": "1850799",
    "end": "1856720"
  },
  {
    "text": "important like we saw before you can Implement either on your existing database or your existing API your",
    "start": "1856720",
    "end": "1862399"
  },
  {
    "text": "existing controllers maybe and also on third party services so you're not uh you can use single you can use gra or",
    "start": "1862399",
    "end": "1869760"
  },
  {
    "text": "single point of through and query most application but you can still have your rest application uh and your rest",
    "start": "1869760",
    "end": "1876159"
  },
  {
    "text": "endpoints next to it so you're not limited to using graph Quil if you would decide to adopt this uh technology it",
    "start": "1876159",
    "end": "1881840"
  },
  {
    "text": "will still the flexibility to edit to your existing data models and and yeah so like like I said",
    "start": "1881840",
    "end": "1889559"
  },
  {
    "text": "before um XML is still being used and Json is like a in my opinion a better",
    "start": "1889559",
    "end": "1896159"
  },
  {
    "text": "alternative and it's getting big uh is much more popular right now than using XML and I will believe graph qu will",
    "start": "1896159",
    "end": "1902600"
  },
  {
    "text": "become uh something like Jason um but then for rest apis so you no longer have",
    "start": "1902600",
    "end": "1909080"
  },
  {
    "text": "to deal with rest apis as from developer you can just go to a gral endpoint and get all the data you would",
    "start": "1909080",
    "end": "1915440"
  },
  {
    "text": "like and if you want to learn more about GR you can either go to Twitter and tweet me or you can go to the website of",
    "start": "1915440",
    "end": "1922919"
  },
  {
    "text": "the of graphql or something that's really nice and has a lot of tutorials is uh how to gra.com and they have",
    "start": "1922919",
    "end": "1930200"
  },
  {
    "text": "tutorials to get you started with almost every programming language uh both from a back end side and but also for the",
    "start": "1930200",
    "end": "1936960"
  },
  {
    "text": "front end so thank you much for thank you very much for your attention if you have any questions or want to see more a bit more",
    "start": "1936960",
    "end": "1944519"
  },
  {
    "text": "from the playground please let me know [Applause]",
    "start": "1944519",
    "end": "1958800"
  }
]