[
  {
    "text": "good morning everybody great to see a full room to listen to me talk about oat I'm going",
    "start": "140",
    "end": "6720"
  },
  {
    "text": "to talk about the insecurity of all art in front that's so um title doesn't really hide anything it's pretty blunt",
    "start": "6720",
    "end": "13980"
  },
  {
    "text": "um that's also going to be the tldr version award in front lens is insecure I'm going to explain why exactly I'm",
    "start": "13980",
    "end": "19980"
  },
  {
    "text": "going to show you why exactly and I'll hint at some solutions that we can actually apply to make a lot more secure",
    "start": "19980",
    "end": "25859"
  },
  {
    "text": "and how you should be doing a lot in any kind of sensitive application when you're dealing with web-based front ends",
    "start": "25859",
    "end": "31320"
  },
  {
    "text": "all right that's essentially the story for today I'm going to start with oh out and by going back at when the spec was",
    "start": "31320",
    "end": "37320"
  },
  {
    "text": "created the spec was introduced or 2.0 and back then that was about 11 12-ish",
    "start": "37320",
    "end": "42719"
  },
  {
    "text": "years ago so that's a long time ago especially if you look at application development web development back then we",
    "start": "42719",
    "end": "48120"
  },
  {
    "text": "were building a server-side web applications and that's basically the main use case for oad back then was like",
    "start": "48120",
    "end": "53340"
  },
  {
    "text": "yeah we have a server-side application that would like to access another server in the name of the user and you had a",
    "start": "53340",
    "end": "58800"
  },
  {
    "text": "whole flow to go through these steps I'm kind of guessing if you're here that you are familiar with Olaf I'm not going to",
    "start": "58800",
    "end": "64260"
  },
  {
    "text": "walk you through any of the oauth flows today so that might be a big relief for some of you like oh not again all the",
    "start": "64260",
    "end": "69780"
  },
  {
    "text": "different steps with the authorization code we're not going to really talk about that but the original spec also had some other use cases there were four",
    "start": "69780",
    "end": "75960"
  },
  {
    "text": "flows back then of which only one really survived maybe one and a half something like that but we have some support for",
    "start": "75960",
    "end": "82560"
  },
  {
    "text": "mobile applications front-end applications but they're not really first class citizens right there are",
    "start": "82560",
    "end": "87720"
  },
  {
    "text": "some like yeah yeah you can do something for web apps nobody cares because nobody's doing JavaScript based applications or not really a bit a lot",
    "start": "87720",
    "end": "94380"
  },
  {
    "text": "back then but of course things change over time and it turns out that mobile apps became a big thing and a lot of",
    "start": "94380",
    "end": "100200"
  },
  {
    "text": "work was done on mobile a lot of problems arise like oh crap we probably have to deal with that and this and that and eventually you got a spec dedicated",
    "start": "100200",
    "end": "107280"
  },
  {
    "text": "to Native apps which in for a main part is mobile apps and they added a couple of security guidelines and additional",
    "start": "107280",
    "end": "113640"
  },
  {
    "text": "features and so on and then things started evolving and all of a sudden people were doing all these web contents",
    "start": "113640",
    "end": "118979"
  },
  {
    "text": "angular apps react apps and they run as a standalone app in Nebraska and of course Standalone apps in the browsers",
    "start": "118979",
    "end": "124979"
  },
  {
    "text": "they can do some useful things and one of these things should be a wide receiver that's not very useful in the",
    "start": "124979",
    "end": "130500"
  },
  {
    "text": "front-end app but oh out because then you can get access tokens to access apis so front-end web apps become first-class",
    "start": "130500",
    "end": "136680"
  },
  {
    "text": "citizens as well and we see that today because there are specs like there's an",
    "start": "136680",
    "end": "142379"
  },
  {
    "text": "oauth for browser-based apps it's a draft but it's considered to be a fairly mature draft with some security guidelines and so on to deal with",
    "start": "142379",
    "end": "148920"
  },
  {
    "text": "front-end applications that's essentially Where We Are and that's what I'm going to talk about here today I'm going to talk about web",
    "start": "148920",
    "end": "154560"
  },
  {
    "text": "front lens how they work and what the challenges are when dealing with web front ends if you want to see it by the",
    "start": "154560",
    "end": "160980"
  },
  {
    "text": "way people in the back there's some free seats up front Prime seats uh on the floor it's the best best place in",
    "start": "160980",
    "end": "167760"
  },
  {
    "text": "the house especially because the people in the back have trouble seeing the bottom of the slide so uh all right so",
    "start": "167760",
    "end": "173160"
  },
  {
    "text": "when we talk about front ends we talk about JavaScript that's essentially how things are built in the browser you may",
    "start": "173160",
    "end": "179099"
  },
  {
    "text": "be using some other language that eventually transpiles into JavaScript anyway and there's a couple of Alternatives but the bulk here is",
    "start": "179099",
    "end": "185280"
  },
  {
    "text": "Javascript code and we talk about JavaScript there's this famous picture of JavaScript the definitive guide and",
    "start": "185280",
    "end": "191819"
  },
  {
    "text": "then JavaScript the good parts and in front then you have something similar when we talk about JavaScript you have",
    "start": "191819",
    "end": "196920"
  },
  {
    "text": "to almost say in the same red malicious JavaScript that's the way things are and we have to account for evil JavaScript",
    "start": "196920",
    "end": "203400"
  },
  {
    "text": "ending up in an application can happen in various ways you can install a malicious dependency from npm it's",
    "start": "203400",
    "end": "209099"
  },
  {
    "text": "basically like a bingo at this time 50 chance of getting the right one or the wrong one",
    "start": "209099",
    "end": "214260"
  },
  {
    "text": "if you include remote code files or like yeah let's load some file from a third-party service provider they might",
    "start": "214260",
    "end": "219659"
  },
  {
    "text": "get attacked and you get malicious code in your application or we have cross-site scripting where the attacker",
    "start": "219659",
    "end": "225000"
  },
  {
    "text": "provides data to the application there's a mistake there and that data becomes executable code",
    "start": "225000",
    "end": "230220"
  },
  {
    "text": "three very common attack factors that we have to talk about",
    "start": "230220",
    "end": "235440"
  },
  {
    "text": "these attack factors are really common here's a graph from hacker one bug",
    "start": "235440",
    "end": "240540"
  },
  {
    "text": "Bounty platform major boundary platform they had a top 10 of vulnerabilities a couple years ago and number one the",
    "start": "240540",
    "end": "246000"
  },
  {
    "text": "yellow par 23 is acting cross-at scripting I'm not exactly sure because they call it xxs instead of xss which is",
    "start": "246000",
    "end": "253500"
  },
  {
    "text": "like abbreviation problems but in essence Crosshair scripting is a main threat nobody's arguing with that",
    "start": "253500",
    "end": "260760"
  },
  {
    "text": "there's no there's a general consensus that says like yeah Crosshair scripting remains a big threat it has been for 20",
    "start": "260760",
    "end": "266699"
  },
  {
    "text": "something years and it's still a threat today it's gotten better in front-end apps better in angular particular but",
    "start": "266699",
    "end": "272759"
  },
  {
    "text": "also in react and View and all of these things but it's still there and it's still a problem and we all know that and even the the",
    "start": "272759",
    "end": "279540"
  },
  {
    "text": "oauth spec knows about this because if you look at this browser-based app spec you'll find plenty of mentions about",
    "start": "279540",
    "end": "285240"
  },
  {
    "text": "crosstipting and statements like yeah cross-site scripting is a big risk and we have to be careful and so on as well",
    "start": "285240",
    "end": "292020"
  },
  {
    "text": "so that's essentially where we are nobody's arguing with that all right good",
    "start": "292020",
    "end": "297419"
  },
  {
    "text": "what does that mean well that's the takeaway here malicious JavaScript remains a big threat even though I wish it wasn't um with all the",
    "start": "297419",
    "end": "304620"
  },
  {
    "text": "measures we have it's still there it's still something we have to account for and everybody generally agrees on that it's part of the OS top 10 as well",
    "start": "304620",
    "end": "310979"
  },
  {
    "text": "number three uh injection part of that is cross-site scripting so the question is what does that mean for your oauth",
    "start": "310979",
    "end": "317040"
  },
  {
    "text": "tokens that's the question I'm going to try to answer in this talk if you want a sneak",
    "start": "317040",
    "end": "322800"
  },
  {
    "text": "preview it's not good I may have even let the f word slip out",
    "start": "322800",
    "end": "328020"
  },
  {
    "text": "yesterday when I answered somebody's question in Dominic's talk uh so yeah it's it's not going to be very good and",
    "start": "328020",
    "end": "333240"
  },
  {
    "text": "that's the rest of this stock so first a quick word about me I'm Philip Drake I'm from Belgium and I did a PhD in web",
    "start": "333240",
    "end": "340380"
  },
  {
    "text": "security so I'm kind of a security expert and I've been doing security for a very long time what I do um day-to-day is I run a",
    "start": "340380",
    "end": "346860"
  },
  {
    "text": "company called pragmatic web security so I help developers understand Security in workshops I did a conference Workshop",
    "start": "346860",
    "end": "352560"
  },
  {
    "text": "here two days on Monday and Tuesday where we talked about cross-et scripting among other things I do online courses",
    "start": "352560",
    "end": "357720"
  },
  {
    "text": "and I do highly specialized Consulting as well I'm a at zero Ambassador and a",
    "start": "357720",
    "end": "363240"
  },
  {
    "text": "Google developer expert so I don't work for these companies it's just they have like a right they recognize if you do a",
    "start": "363240",
    "end": "368400"
  },
  {
    "text": "lot for the community like docs and articles and stuff like that and that's why they like to send me free swag every",
    "start": "368400",
    "end": "373740"
  },
  {
    "text": "now and then which I appreciate very much and then I mention them in my talks so that makes them very happy but at",
    "start": "373740",
    "end": "379979"
  },
  {
    "text": "xeros here if you want to learn more about what they do they have a boot so I go talk to Sam and his colleagues if you",
    "start": "379979",
    "end": "385020"
  },
  {
    "text": "want and then finally I also run a course in Belgium it's a non-profit course called SEC updev which is about secure",
    "start": "385020",
    "end": "391139"
  },
  {
    "text": "application development we bring in experts in their field bring them to live in Belgium where they teach about application security for a full week so",
    "start": "391139",
    "end": "398280"
  },
  {
    "text": "that's absolutely awesome first of all it's in Belgium so that's pretty cool we have awesome an awesome environment",
    "start": "398280",
    "end": "403740"
  },
  {
    "text": "great lunches and a lot of interesting talks and my friends Steiner here up front he is going to come to Second Dev",
    "start": "403740",
    "end": "409740"
  },
  {
    "text": "this year so he's the official delegate now for Norway so if you want to come to secular death he's going to handle he's going to book a plane and no I'm just",
    "start": "409740",
    "end": "416280"
  },
  {
    "text": "kidding but maybe we can Charter a plane from Norway that would be awesome man but seriously",
    "start": "416280",
    "end": "422100"
  },
  {
    "text": "I'll look it up it's pretty awesome but that's enough about me let's talk about a lot let's talk about browser-based",
    "start": "422100",
    "end": "429240"
  },
  {
    "text": "apps if you read this statement in the spec I chose this quote for a reason on the previous slide it's because it talks",
    "start": "429240",
    "end": "434699"
  },
  {
    "text": "about a danger with Crosshair scripting token exfiltration sounds super fancy in essence it comes",
    "start": "434699",
    "end": "440520"
  },
  {
    "text": "down to the attacker injects malicious code in the application and they're able to steal tokens what tokens access tokens and refresh",
    "start": "440520",
    "end": "448620"
  },
  {
    "text": "tokens that's the threat that we want to talk about so how would an attack like that work let me show you what that",
    "start": "448620",
    "end": "453840"
  },
  {
    "text": "means in practice here we have our victim application that's my training app called restograde",
    "start": "453840",
    "end": "459960"
  },
  {
    "text": "it's a restaurant review app very simple very straightforward it handles reviews from people all over the world awesome",
    "start": "459960",
    "end": "466259"
  },
  {
    "text": "and the app is just running as it is it runs some oauth stuff interacts with the authorization server that's where you",
    "start": "466259",
    "end": "472380"
  },
  {
    "text": "use the authorization code flow with Pixie and all of the steps which I'm not going to talk about here today",
    "start": "472380",
    "end": "478199"
  },
  {
    "text": "good the app typically stores tokens somewhere local storage session storage",
    "start": "478199",
    "end": "483840"
  },
  {
    "text": "index DB whatever the tokens are going to be somewhere and they have to be somewhere because the app needs them to",
    "start": "483840",
    "end": "489660"
  },
  {
    "text": "attach them on outgoing requests to the API so the tokens are somewhere in the app that is a common scenario",
    "start": "489660",
    "end": "496259"
  },
  {
    "text": "the question is what happens when the attacker shows up that's a piece of malicious code so at some point something happens in the app malicious",
    "start": "496259",
    "end": "502620"
  },
  {
    "text": "code ends up in there and the attacker now executes code inside the application that's how cross-site scripting works or",
    "start": "502620",
    "end": "508379"
  },
  {
    "text": "malicious dependencies or Savannah so on that code executes in the application so what is the attacker gonna do",
    "start": "508379",
    "end": "513779"
  },
  {
    "text": "the attacker reads that storage very easy the attacker can just read the storage get all the data out of storage",
    "start": "513779",
    "end": "519599"
  },
  {
    "text": "and send it off to a server controlled by the attacker just a simple request a get request a post request whatever",
    "start": "519599",
    "end": "525600"
  },
  {
    "text": "Anything Goes and the data from that storage now goes to the server detector",
    "start": "525600",
    "end": "530640"
  },
  {
    "text": "they see the data coming in like oh those are tokens awesome and they can use the access token to contact an API",
    "start": "530640",
    "end": "536399"
  },
  {
    "text": "in the name of the user that is token exfiltration very very common attack scenario very",
    "start": "536399",
    "end": "542519"
  },
  {
    "text": "well-known scenario this is not something new this is not like oh my God we never thought of that of course not",
    "start": "542519",
    "end": "547740"
  },
  {
    "text": "everybody knows about this the spec knows about this and there's a whole bunch of countermeasures to try and prevent these",
    "start": "547740",
    "end": "554459"
  },
  {
    "text": "things from causing trouble one of the guidelines is you should keep your access tokens",
    "start": "554459",
    "end": "559560"
  },
  {
    "text": "short-lived because if the access token that's used in step 3 is only valid for 5 or 10 minutes then the damage the",
    "start": "559560",
    "end": "566640"
  },
  {
    "text": "window of abuse is limited to 5 to 10 minutes that's good especially because those",
    "start": "566640",
    "end": "572100"
  },
  {
    "text": "tokens are typically jots Json web tokens that are not revocable or there's no infrastructure to revoke them during",
    "start": "572100",
    "end": "577920"
  },
  {
    "text": "their lifetime all right the second guideline you'll find in the spec is like you have to use",
    "start": "577920",
    "end": "582959"
  },
  {
    "text": "refresh token rotation because the refresh tokens in front-end web apps are better refresh tokens",
    "start": "582959",
    "end": "590399"
  },
  {
    "text": "if you cut if you remember anything from Dominic stock from yesterday and Steiners it's that bear tokens are not",
    "start": "590399",
    "end": "596580"
  },
  {
    "text": "very secure meaning that if the attacker gets hold of a refresh token they can now use it with the authorization server",
    "start": "596580",
    "end": "602220"
  },
  {
    "text": "to get fresh tokens and that's why the specs is like yeah that's not good",
    "start": "602220",
    "end": "607260"
  },
  {
    "text": "you have to use refresh token rotation to counter that here's how refresh token rotation works",
    "start": "607260",
    "end": "613320"
  },
  {
    "text": "there's a timeline I'm gonna walk over here so I can see this part of the audience as well there's a timeline from",
    "start": "613320",
    "end": "618420"
  },
  {
    "text": "left to right and the app is going to request tokens from the authorization server using the authorization code flow and so on and they get access token 1",
    "start": "618420",
    "end": "625320"
  },
  {
    "text": "and refresh token 1. and access token 1 is valid for 10 minutes and then after I should probably go back",
    "start": "625320",
    "end": "630779"
  },
  {
    "text": "because there's a camera I forgot about that it always catches me access token 1 expires after 10 minutes and the app is",
    "start": "630779",
    "end": "637740"
  },
  {
    "text": "going to be like after nine minutes you know what I'm gonna get a new one and it's going to use refresh token 1 to get access token 2 and it also gets refresh",
    "start": "637740",
    "end": "644760"
  },
  {
    "text": "token too for the next time you need one and after nine minutes access token 2 expires so the app uses rt2 to get token",
    "start": "644760",
    "end": "652320"
  },
  {
    "text": "set 3 and then token 3 is about to expire access token 3 it uses refresh token 3 to get token set 4 and so on and",
    "start": "652320",
    "end": "658620"
  },
  {
    "text": "so on until some kind of absolute lifetime is his reached and then the authorization services like no done",
    "start": "658620",
    "end": "665700"
  },
  {
    "text": "refresh token rotation by itself this doesn't really add much",
    "start": "665700",
    "end": "670860"
  },
  {
    "text": "except a bit of complexity but there's a second part to this story and the second part is that if the authorization server",
    "start": "670860",
    "end": "677760"
  },
  {
    "text": "sees a refresh token twice it assumes that something fishy is going",
    "start": "677760",
    "end": "682920"
  },
  {
    "text": "on because the legitimate app is not going to decide halfway through like you know what I liked refresh token 2 from",
    "start": "682920",
    "end": "688920"
  },
  {
    "text": "like 10 minutes ago I'm gonna use that one instead of the new one the legitimate app is not gonna do that well",
    "start": "688920",
    "end": "694320"
  },
  {
    "text": "maybe if you write some crappy JavaScript code it might do that but that's not supposed to happen so what is the idea here the idea is that you have",
    "start": "694320",
    "end": "700800"
  },
  {
    "text": "did yet if the attacker comes in and steals refresh token 2 at some time",
    "start": "700800",
    "end": "705959"
  },
  {
    "text": "and they use it they will get access token 3 and refresh token 3. that's not good they now have access to an API in",
    "start": "705959",
    "end": "712740"
  },
  {
    "text": "the name of the user along with the refresh token but the app is unaware that this happened so after a while the",
    "start": "712740",
    "end": "718680"
  },
  {
    "text": "app is like hey I'm going to use refresh token 2 as well and the authorization service like you're gonna do what now no",
    "start": "718680",
    "end": "724980"
  },
  {
    "text": "I've already seen that one that's not good I'm going to assume somebody else used",
    "start": "724980",
    "end": "730019"
  },
  {
    "text": "that in your place that's not good so it's going to revoke not if your new tokens is going to revoke existing",
    "start": "730019",
    "end": "735120"
  },
  {
    "text": "tokens so rt3 becomes invalid so in the future the attacker no longer has access to that token chain all of the tokens",
    "start": "735120",
    "end": "742800"
  },
  {
    "text": "are invalidated basically that's good right that's a good security measure because",
    "start": "742800",
    "end": "747839"
  },
  {
    "text": "now even if a token is stolen we can prevent it from being abused in",
    "start": "747839",
    "end": "753060"
  },
  {
    "text": "the long term awesome when I first heard about this it seems like oh yeah that that kind of makes",
    "start": "753060",
    "end": "758519"
  },
  {
    "text": "sense and you start thinking about this and if you think about this for a while it's",
    "start": "758519",
    "end": "763680"
  },
  {
    "text": "like wait what it highly depends on the fact that this",
    "start": "763680",
    "end": "770519"
  },
  {
    "text": "token rt2 is observed twice but what if it's only seen once",
    "start": "770519",
    "end": "777480"
  },
  {
    "text": "then nothing happens and if nothing happens and the attacker",
    "start": "777480",
    "end": "782519"
  },
  {
    "text": "has that token they can use it until the absolute lifetime is reached let's say you log in now lifetime is eight hours I",
    "start": "782519",
    "end": "789180"
  },
  {
    "text": "steal it in 30 minutes and that means I would have access for 7 hours and 30 minutes well it depends on what the",
    "start": "789180",
    "end": "795000"
  },
  {
    "text": "application is whether how bad that's going to be but that's not supposed to happen so how would an attacker do that well very simple",
    "start": "795000",
    "end": "801480"
  },
  {
    "text": "here's the scenario the attacker does the same thing steals the token sends them off to their server and keeps track",
    "start": "801480",
    "end": "807000"
  },
  {
    "text": "of them and then they just wait they wait and maybe they repeat step one",
    "start": "807000",
    "end": "812399"
  },
  {
    "text": "and two if there's new tokens refresh token two and three and four and they wait until the application goes offline",
    "start": "812399",
    "end": "817920"
  },
  {
    "text": "damn it stupid camera we wait until the application goes offline because guess what if it goes offline it",
    "start": "817920",
    "end": "823380"
  },
  {
    "text": "means you close the tab close to your browser disconnect it from the network are on a plane whatever and the attack",
    "start": "823380",
    "end": "828420"
  },
  {
    "text": "is like ah you're not going to use your latest refresh token awesome I am thank you and the attacker resumes that refresh",
    "start": "828420",
    "end": "835019"
  },
  {
    "text": "token chain and has access for the remaining lifetime of that chain that is a",
    "start": "835019",
    "end": "840899"
  },
  {
    "text": "fairly trivial way to bypass refresh token rotation and that's essentially a takeaway here",
    "start": "840899",
    "end": "847680"
  },
  {
    "text": "is that token exfiltration attacks like focusing on the attacker exfiltrating the token and things like",
    "start": "847680",
    "end": "854220"
  },
  {
    "text": "that they severely underrepresent the capabilities of malicious JavaScript because an attacker can do so much more",
    "start": "854220",
    "end": "860339"
  },
  {
    "text": "and that's essentially a very important message the attacker can do anything a legitimate front-end application can do",
    "start": "860339",
    "end": "866220"
  },
  {
    "text": "and they can write sophisticated JavaScript code not the 12 year old script KD version of Steel tokens and",
    "start": "866220",
    "end": "871620"
  },
  {
    "text": "abuse them they can be a bit smarter about that that's essentially what I'm trying to see here I'm going to try to show you",
    "start": "871620",
    "end": "877500"
  },
  {
    "text": "that in a demo I'm not a big fan of doing live Demos in golf rocks for obvious reasons so I'm going to screw it",
    "start": "877500",
    "end": "883139"
  },
  {
    "text": "up uh probably but uh let's take the tourney together then shall we",
    "start": "883139",
    "end": "889040"
  },
  {
    "text": "I'm gonna try to show this I've been talking about this for a while and it's very hard to really grasp what this",
    "start": "889079",
    "end": "894180"
  },
  {
    "text": "means in practice I'm going to try to demonstrate to see um what this means all right what do we have setup wise we",
    "start": "894180",
    "end": "900540"
  },
  {
    "text": "have an application here okay disclaimer I am not a good designer",
    "start": "900540",
    "end": "907199"
  },
  {
    "text": "so please give me some got me some slack on the application so we have app.restigrade like I said it looks like",
    "start": "907199",
    "end": "913860"
  },
  {
    "text": "crap we have app.resquery.com and this is a simple app it has a search feature we'll",
    "start": "913860",
    "end": "920880"
  },
  {
    "text": "come back to that later but in essence it's an application where we can log in as a user using a lot so I'm using r0",
    "start": "920880",
    "end": "928800"
  },
  {
    "text": "here to log into restograde very simple my password is like test something something and here we go",
    "start": "928800",
    "end": "934680"
  },
  {
    "text": "so we log into the application it now knows who I am that's open ID connect identity token and it has a bunch of",
    "start": "934680",
    "end": "940440"
  },
  {
    "text": "tokens and you will see here at the bottom in a few seconds that it's using a refresh token to obtain the next",
    "start": "940440",
    "end": "946560"
  },
  {
    "text": "refresh token so it's basically running a refresh token flow and using refresh token rotation so you'll see this token",
    "start": "946560",
    "end": "952320"
  },
  {
    "text": "change over time that's essentially what's going on very simple very straightforward",
    "start": "952320",
    "end": "957899"
  },
  {
    "text": "all right onto the attack as the attacker I have written",
    "start": "957899",
    "end": "963720"
  },
  {
    "text": "my server side code is not prettier either but sure whatever I've written a malicious server the malicious server is",
    "start": "963720",
    "end": "969300"
  },
  {
    "text": "basically that server running it's going to accept tokens and abuse tokens when it wants to and it's very simple it",
    "start": "969300",
    "end": "975420"
  },
  {
    "text": "basically has a data endpoint to accept incoming data including the refresh token and then it will abuse that later",
    "start": "975420",
    "end": "981240"
  },
  {
    "text": "on I'm also going to launch an attack file from here we have attack.gs here's the full",
    "start": "981240",
    "end": "987540"
  },
  {
    "text": "payload to steal tokens from the application it's not even minimized so we can actually read it but basically we",
    "start": "987540",
    "end": "993240"
  },
  {
    "text": "send a fetch request a post request and we include the data from session storage in that request and that's how we steal",
    "start": "993240",
    "end": "999660"
  },
  {
    "text": "that all right how do we exploit that well let me copy paste that from my street sheet here's",
    "start": "999660",
    "end": "1006259"
  },
  {
    "text": "that's the search feature this is a croset scripting vulnerability so what happens here is we load the app with the",
    "start": "1006259",
    "end": "1012620"
  },
  {
    "text": "search term I send you a link to the restaurant review app with search for like Indian food in Oslo and you'll end",
    "start": "1012620",
    "end": "1018560"
  },
  {
    "text": "up on the search page and you can see that we populate your search results for test that value test is the value from",
    "start": "1018560",
    "end": "1024438"
  },
  {
    "text": "the URL inserted into the application this is called reflected xss very typical attack scenario seriously if you",
    "start": "1024439",
    "end": "1031819"
  },
  {
    "text": "find search features on websites you can probably have used them to cross that scripting very very common vulnerability",
    "start": "1031819",
    "end": "1037220"
  },
  {
    "text": "as well so how do we exploit that well here's the actual this doesn't do anything I mean it shows test that's not dangerous",
    "start": "1037220",
    "end": "1043760"
  },
  {
    "text": "but here's the attack we search for test and we also add an SVG image that we",
    "start": "1043760",
    "end": "1050419"
  },
  {
    "text": "don't really display but when the SVG loads we want to insert the script tag into the page and load that attack.js",
    "start": "1050419",
    "end": "1055760"
  },
  {
    "text": "file that's essentially a common way to attack an application so let's do that",
    "start": "1055760",
    "end": "1061760"
  },
  {
    "text": "let me clear this one let's insert this into the page",
    "start": "1061760",
    "end": "1067360"
  },
  {
    "text": "all right now you can see here our malicious server is running here it's basically receiving that refresh token",
    "start": "1067460",
    "end": "1073940"
  },
  {
    "text": "um and it also has a heartbeat so it detects that the application is alive because every couple of seconds we're like here's the token here's the token",
    "start": "1073940",
    "end": "1080600"
  },
  {
    "text": "and this the application is still alive message is basically uh the the check on the server side like every second or",
    "start": "1080600",
    "end": "1086960"
  },
  {
    "text": "something it checks like you see application still there yes or no so what this now means is if we",
    "start": "1086960",
    "end": "1092600"
  },
  {
    "text": "the application is still using refresh Docker rotation no reuse everything works as expected until we leave the",
    "start": "1092600",
    "end": "1097760"
  },
  {
    "text": "application we're gonna do something else like look at my website for example and",
    "start": "1097760",
    "end": "1103039"
  },
  {
    "text": "here you'll see in a second there's a timer out of like 10 seconds something like that that like oh the application",
    "start": "1103039",
    "end": "1109160"
  },
  {
    "text": "didn't respond anymore interesting and you can see here bam there we go getting ready to view tokens and it's now",
    "start": "1109160",
    "end": "1115100"
  },
  {
    "text": "refreshing tokens kind of aggressively but uh just to show you that it has taken over that refresh token change",
    "start": "1115100",
    "end": "1120740"
  },
  {
    "text": "from the application so the attacker now has access in your name and you can do whatever they want for the foreseeable",
    "start": "1120740",
    "end": "1126559"
  },
  {
    "text": "future all right let me kill this before adzir gets angry",
    "start": "1126559",
    "end": "1132860"
  },
  {
    "text": "at me all right that was sidestepping refresh token rotation",
    "start": "1132860",
    "end": "1140059"
  },
  {
    "text": "very simple very straightforward seriously a real attacker can probably make this a bit cleaner and sophisticated more sophisticated but it",
    "start": "1140059",
    "end": "1147020"
  },
  {
    "text": "kind of gets the point across I think yes sir",
    "start": "1147020",
    "end": "1154059"
  },
  {
    "text": "in this scenario of course the attacker and the locked and user with the same person so to make it a realistic thing",
    "start": "1155179",
    "end": "1161780"
  },
  {
    "text": "an attacker would get a locked user too okay yes so in in this scenario I'm of course",
    "start": "1161780",
    "end": "1169760"
  },
  {
    "text": "both a user and the attacker because otherwise the demo would get really complicated but um in in reality you",
    "start": "1169760",
    "end": "1176960"
  },
  {
    "text": "would be the user absolutely and I would just send you a link like we have a slack Channel I just send in like the",
    "start": "1176960",
    "end": "1182419"
  },
  {
    "text": "general slack channel for the conference like hey man check out these awesome reviews and you're like click and then",
    "start": "1182419",
    "end": "1188000"
  },
  {
    "text": "behind the scenes my code loads your tokens get sent to me and I'm like I'm now whoever you are and I can send",
    "start": "1188000",
    "end": "1193760"
  },
  {
    "text": "requests to the API of restaurant I can start adding reviews and says like oh my God this restaurant is really bad and",
    "start": "1193760",
    "end": "1200000"
  },
  {
    "text": "promote the restaurant of one of my friends and so on and so on like I know not really harmful but imagine that the",
    "start": "1200000",
    "end": "1206000"
  },
  {
    "text": "restaurant review app is a healthcare app or a financial app then gets real uh real fast but yeah that's",
    "start": "1206000",
    "end": "1212240"
  },
  {
    "text": "essentially what I'm trying to show thank you for asking for clarification",
    "start": "1212240",
    "end": "1217600"
  },
  {
    "text": "oh yeah absolutely I just used reflected Crosshair scripting because it's very visible and is stored exercise attack",
    "start": "1220780",
    "end": "1226820"
  },
  {
    "text": "the data would end up in the database like one of the reviews with some SVG stuff that gets rendered and the attack",
    "start": "1226820",
    "end": "1232460"
  },
  {
    "text": "the the attack factor is the same I could also compromise a third-party scripter including probably one of your",
    "start": "1232460",
    "end": "1237799"
  },
  {
    "text": "marketing guys added Google tag manager with some crap and if I compromise one of those scripts it gets included and I",
    "start": "1237799",
    "end": "1243380"
  },
  {
    "text": "can do the same any piece of JavaScript that I control that executes in the victim application gives me that control",
    "start": "1243380",
    "end": "1249500"
  },
  {
    "text": "that power that's essentially what it is and the main takeaway here is that refresh token rotation is not a security",
    "start": "1249500",
    "end": "1256340"
  },
  {
    "text": "measure it gets sold as one in the spec but it's really not because if you look at the real power of",
    "start": "1256340",
    "end": "1263179"
  },
  {
    "text": "JavaScript it can't stop these attacks a somewhat sophisticated attack and we'll be able to bypass the security measure",
    "start": "1263179",
    "end": "1269840"
  },
  {
    "text": "anyway and it doesn't really buy you anything except for a false sense of security",
    "start": "1269840",
    "end": "1276279"
  },
  {
    "text": "create more problems for the legitimate application than for the attacker yes this guy implements identity servers",
    "start": "1282380",
    "end": "1289760"
  },
  {
    "text": "right because you get stories like yeah but what just to give you an example what if",
    "start": "1289760",
    "end": "1295280"
  },
  {
    "text": "the response to getting a new refresh token gets lost like crappy Network poof and the application never received it so",
    "start": "1295280",
    "end": "1301640"
  },
  {
    "text": "next time it's going to use the old token but the authorization service like no no so we have Solutions like here but",
    "start": "1301640",
    "end": "1306740"
  },
  {
    "text": "what if we allow like a tiny window of reuse because might happen and like",
    "start": "1306740",
    "end": "1312380"
  },
  {
    "text": "seriously there's a lot of corner cases that pop up where this gets a bit messy to deal with",
    "start": "1312380",
    "end": "1317900"
  },
  {
    "text": "um but we can talk about that later so full power of JavaScript",
    "start": "1317900",
    "end": "1324679"
  },
  {
    "text": "gives the attackers a lot of capabilities and that also means that is token",
    "start": "1324679",
    "end": "1329900"
  },
  {
    "text": "exfiltration it seems super important but honestly it really really isn't but",
    "start": "1329900",
    "end": "1335480"
  },
  {
    "text": "if you look at the spec the browser-based app spec if you look for token exfiltration",
    "start": "1335480",
    "end": "1341720"
  },
  {
    "text": "they hammer on it nine times in the spec like oh my God built connect filtration we have the focus on token exfiltration",
    "start": "1341720",
    "end": "1347419"
  },
  {
    "text": "because of reasons like the exfol trading tokens and being able to abuse those refresh tokens people have the",
    "start": "1347419",
    "end": "1353960"
  },
  {
    "text": "idea but what if we can stop that token from leaving in the first place because if you can't get the token then",
    "start": "1353960",
    "end": "1359659"
  },
  {
    "text": "you can't abuse it we gotcha and there's a lot of work being done I'm trying to prevent this and it doesn't work",
    "start": "1359659",
    "end": "1366980"
  },
  {
    "text": "well it might work there's actually effective patterns to hide the refresh token that's good you can keep it in a",
    "start": "1366980",
    "end": "1372740"
  },
  {
    "text": "web worker the adziro SDK is doing that by default which is good it's a good pattern but it doesn't help it doesn't",
    "start": "1372740",
    "end": "1378080"
  },
  {
    "text": "secure your application because guess what as an attacker I don't need the application's tokens",
    "start": "1378080",
    "end": "1384320"
  },
  {
    "text": "as an attacker I can do other things I'm going to inject my code and then the application can do whatever it wants",
    "start": "1384320",
    "end": "1390320"
  },
  {
    "text": "with their tokens I'm going to get fresh tokens for myself new tokens and with those new tokens I can do whatever I",
    "start": "1390320",
    "end": "1395720"
  },
  {
    "text": "want let me walk you through the scenario and I have a demo coming up as well so same premise the application",
    "start": "1395720",
    "end": "1401720"
  },
  {
    "text": "running on the user's browser has some malicious code that is being executed a malicious code",
    "start": "1401720",
    "end": "1407480"
  },
  {
    "text": "doesn't care about existing tokens it's like whatever the app has tokens it has been it has an",
    "start": "1407480",
    "end": "1413780"
  },
  {
    "text": "authenticated user the user has logged in with an authorization server there is an active session so you know what this code is going to do it's going to be",
    "start": "1413780",
    "end": "1419539"
  },
  {
    "text": "like okay I'm assuming there's an active session I'm going to run a silent authentication flow in an iframe a very well supported",
    "start": "1419539",
    "end": "1426500"
  },
  {
    "text": "a lot feature silent flow meaning it's going to set up a listener for messages coming from iframes it's going to load a",
    "start": "1426500",
    "end": "1432980"
  },
  {
    "text": "hidden iframe in the page and in that iframe it's going to run an authorization flow asking the authorization server for an",
    "start": "1432980",
    "end": "1438740"
  },
  {
    "text": "authorization code which will get tokens and it's going to set prompt To None meaning like don't prompt the user don't",
    "start": "1438740",
    "end": "1444320"
  },
  {
    "text": "request user interaction just give me a code if a user exists and that request goes out and the browser is like hey hey",
    "start": "1444320",
    "end": "1450860"
  },
  {
    "text": "you're asking the authorization server for something I have a cookie there a session that's how single sign-on works",
    "start": "1450860",
    "end": "1456500"
  },
  {
    "text": "that's how silent renew works that's how an application can bootstrap state with an authenticated user without requiring",
    "start": "1456500",
    "end": "1462799"
  },
  {
    "text": "a login if there's an active session and when the attacker does that the browser attaches the cookie the",
    "start": "1462799",
    "end": "1468200"
  },
  {
    "text": "authorization service like I know who you are you flip from five minutes ago awesome here you go and the authorization code comes back my",
    "start": "1468200",
    "end": "1475340"
  },
  {
    "text": "Handler from Step One receives that authorization code I ship it off to the server controlled by me and I exchange",
    "start": "1475340",
    "end": "1481159"
  },
  {
    "text": "that code for tokens and now I have a completely independent set of tokens",
    "start": "1481159",
    "end": "1486500"
  },
  {
    "text": "unrelated to the applications tokens the application has access token 1 and refresh token one",
    "start": "1486500",
    "end": "1493220"
  },
  {
    "text": "I now have access token a and refresh token a completely unrelated",
    "start": "1493220",
    "end": "1498559"
  },
  {
    "text": "and that's a bit of a problem this new set of tokens is fully independent it will never run into",
    "start": "1498559",
    "end": "1504799"
  },
  {
    "text": "problems like refresh token rotation and so on and that is as bad as it gets for front-end applications",
    "start": "1504799",
    "end": "1511039"
  },
  {
    "text": "let me try and show you how that works",
    "start": "1511039",
    "end": "1515320"
  },
  {
    "text": "all right let me",
    "start": "1518120",
    "end": "1522399"
  },
  {
    "text": "run this malicious server there we go the app is the same same app",
    "start": "1526279",
    "end": "1533360"
  },
  {
    "text": "same vulnerability so let me show you what we're gonna do we are not gonna do this one",
    "start": "1533360",
    "end": "1539720"
  },
  {
    "text": "but we're gonna run this the attack file is a bit more complicated because now we",
    "start": "1539720",
    "end": "1545179"
  },
  {
    "text": "have to run an oauth flow so we're going to basically let me walk you through it we're going to set up that listener at",
    "start": "1545179",
    "end": "1550640"
  },
  {
    "text": "the end here so we're gonna listen for incoming messages containing at the authorization code that's a frame to the",
    "start": "1550640",
    "end": "1556400"
  },
  {
    "text": "parent message we're going to register an iframe here we're going to hide it of course in the",
    "start": "1556400",
    "end": "1561620"
  },
  {
    "text": "live stream we're going to use the URL to bootstrap a flow and that's the flow that takes us to the authorization",
    "start": "1561620",
    "end": "1567200"
  },
  {
    "text": "server includes the client ID and so on and so on which I of course got by exploring the restaurant application in",
    "start": "1567200",
    "end": "1573320"
  },
  {
    "text": "the first place and when we get the authorization code we send it to the server of the attacker and off we go",
    "start": "1573320",
    "end": "1578960"
  },
  {
    "text": "all right the server of the attacker that's this one will obtain the authorization code here",
    "start": "1578960",
    "end": "1584659"
  },
  {
    "text": "no let's use it obtain it here so we just accept a request right here then we",
    "start": "1584659",
    "end": "1590539"
  },
  {
    "text": "use it which means we're going to exchange it with the authorization server for tokens we'll get an access",
    "start": "1590539",
    "end": "1596360"
  },
  {
    "text": "token and a refresh token because as far as the authorization server is concerned we're a legitimate front-end app it",
    "start": "1596360",
    "end": "1601760"
  },
  {
    "text": "doesn't know any better and we can exchange use those tokens later on and that's essentially what",
    "start": "1601760",
    "end": "1607100"
  },
  {
    "text": "will happen all right the attack the payload is the same we have the same app same way of loading",
    "start": "1607100",
    "end": "1615080"
  },
  {
    "text": "that attack file as well so let me show you how that works",
    "start": "1615080",
    "end": "1622000"
  },
  {
    "text": "I'm gonna show the network tab here so you can actually see that hidden flow",
    "start": "1623179",
    "end": "1629419"
  },
  {
    "text": "in the iframe happening in practice so the app is loading it's running let me",
    "start": "1629419",
    "end": "1635000"
  },
  {
    "text": "click login so it gets fresh tokens all is good and if in a couple of seconds you'll see a new authorization request",
    "start": "1635000",
    "end": "1641179"
  },
  {
    "text": "pass by always exciting",
    "start": "1641179",
    "end": "1646700"
  },
  {
    "text": "where is it okay it's not coming apparently well",
    "start": "1646700",
    "end": "1655039"
  },
  {
    "text": "seems like I screwed up the demo let me try again",
    "start": "1655039",
    "end": "1660980"
  },
  {
    "text": "yeah my payload was gone so that's why so the payload is loaded now and there's an interval there's there it is that's",
    "start": "1660980",
    "end": "1666260"
  },
  {
    "text": "the height and iframe flow to run an art rice flow the response will send an authorization code to the application",
    "start": "1666260",
    "end": "1671960"
  },
  {
    "text": "which ships it off to the server of the attacker that's a data request right here and here you can see that the",
    "start": "1671960",
    "end": "1677360"
  },
  {
    "text": "attacker has received the authorization code on top let me scroll here so we can see that receive the authorization code",
    "start": "1677360",
    "end": "1683360"
  },
  {
    "text": "we're exchanging the code for tokens that was the code here's an access token which I abbreviated because it's a very",
    "start": "1683360",
    "end": "1689240"
  },
  {
    "text": "long jot and here's the refresh token and now we can just keep renewing that",
    "start": "1689240",
    "end": "1694400"
  },
  {
    "text": "and the conclusion here is that in your application as a front-end developer you can be the best developer in the world",
    "start": "1694400",
    "end": "1700100"
  },
  {
    "text": "on high tokens somewhere nobody can ever get to them for malicious JavaScript and it doesn't",
    "start": "1700100",
    "end": "1705440"
  },
  {
    "text": "matter because malicious JavaScript can just ask for new tokens and everybody's like yeah sure here you go",
    "start": "1705440",
    "end": "1711320"
  },
  {
    "text": "and that's essentially What's Happening Here all right",
    "start": "1711320",
    "end": "1717039"
  },
  {
    "text": "and to link it back to Steiners and Dominic talk from yesterday they talked about proof of possession in",
    "start": "1724460",
    "end": "1730760"
  },
  {
    "text": "case you weren't there proof of possession meaning that these tokens are linked to a secret that the client holds guess what in this it would happen in",
    "start": "1730760",
    "end": "1737659"
  },
  {
    "text": "step five when you exchange the code for tokens and the attacker can easily include their own d-pop Secrets uh well",
    "start": "1737659",
    "end": "1743360"
  },
  {
    "text": "use their deep up secret with a public key to link the tokens to uh or the yeah",
    "start": "1743360",
    "end": "1748400"
  },
  {
    "text": "the new tokens to their secret so this is not going to stop any of it that's why we talked about this yesterday briefly we mentioned like this is not",
    "start": "1748400",
    "end": "1754640"
  },
  {
    "text": "going to solve your X's consequences this is why because an attacker can just provide a depop secret and proof as well",
    "start": "1754640",
    "end": "1762140"
  },
  {
    "text": "this is basically not good that's the summary here this is not good",
    "start": "1762140",
    "end": "1768200"
  },
  {
    "text": "as in the conclusion is you cannot secure browser only a lot flows because",
    "start": "1768200",
    "end": "1773480"
  },
  {
    "text": "this attack Factor there's no way to plug it because it all relies on the fact that if we send the",
    "start": "1773480",
    "end": "1779720"
  },
  {
    "text": "authorization code back to the clients we send it to a specific origin you have to approve that redirect URI and we",
    "start": "1779720",
    "end": "1785659"
  },
  {
    "text": "assume that that's a trusted location it's not going to end up on a malicious application and that's true but if the attacker",
    "start": "1785659",
    "end": "1792080"
  },
  {
    "text": "controls that legitimate origin of the application the attacker has full access to these things and the security comes crumbling down like a",
    "start": "1792080",
    "end": "1798919"
  },
  {
    "text": "heart of cards basically like a bunch of dominoes it stops working and this",
    "start": "1798919",
    "end": "1805640"
  },
  {
    "text": "conclusion is really really inconvenient",
    "start": "1805640",
    "end": "1810340"
  },
  {
    "text": "seriously because for a couple of reasons because first of all a lot of people want to build",
    "start": "1810919",
    "end": "1816559"
  },
  {
    "text": "front-end-only apps that access apis and this is like oh crap that's not good second of all we have this whole spec",
    "start": "1816559",
    "end": "1823039"
  },
  {
    "text": "trying to fix this and a message is like ah you can't so that's not good",
    "start": "1823039",
    "end": "1828500"
  },
  {
    "text": "and then we we've as a community have been telling people for a long time like yeah this is how you do front-end or out",
    "start": "1828500",
    "end": "1834140"
  },
  {
    "text": "apps and I was like ah no we're just kidding you can't and and that's really really inconvenient",
    "start": "1834140",
    "end": "1839679"
  },
  {
    "text": "and as a consequence to this I've been talking about this for a while by the way for about one and a half two years",
    "start": "1839679",
    "end": "1846320"
  },
  {
    "text": "and the off the the reaction I often get is like yeah but what if",
    "start": "1846320",
    "end": "1852020"
  },
  {
    "text": "and people come up with all kinds of solutions and one of the solutions you actually find in the spec the edit this",
    "start": "1852020",
    "end": "1857480"
  },
  {
    "text": "in December and I'm risking coming off as like old man yelling at Cloud here",
    "start": "1857480",
    "end": "1862520"
  },
  {
    "text": "but I really have to do this part somebody said like yeah but we can use a service",
    "start": "1862520",
    "end": "1868640"
  },
  {
    "text": "worker and service workers are give you the ability to intercept HTTP requests coming from a client and modify them in",
    "start": "1868640",
    "end": "1875840"
  },
  {
    "text": "the browser and what they said is like we can register a service worker that will handle all the oauth stuff and if",
    "start": "1875840",
    "end": "1881899"
  },
  {
    "text": "the application tries to run an O outflow directly with the authorization server we can stop it we can block it",
    "start": "1881899",
    "end": "1888140"
  },
  {
    "text": "it's like sure if you can do that that sounds like a",
    "start": "1888140",
    "end": "1894020"
  },
  {
    "text": "good idea because you're like adding a component that handles all out but remember you're still dealing with",
    "start": "1894020",
    "end": "1899240"
  },
  {
    "text": "JavaScript in the browser how do you register a service worker from JavaScript how do you unregister a service worker",
    "start": "1899240",
    "end": "1906140"
  },
  {
    "text": "hmm from JavaScript that doesn't sound good",
    "start": "1906140",
    "end": "1912440"
  },
  {
    "text": "and that's I told the people that came up with this proposal like yeah but you can unregister that and they looked into that",
    "start": "1912440",
    "end": "1918620"
  },
  {
    "text": "of course they didn't say like oh yeah you're right we'll drop it we'll drop it all no deal it's like yeah but",
    "start": "1918620",
    "end": "1924440"
  },
  {
    "text": "if you unregister this this is literally from the spec if you unregister it it only gets unregistered the next time you",
    "start": "1924440",
    "end": "1931039"
  },
  {
    "text": "load the application because you have to really it's not gonna remove it from a running app it's just gonna mark it as",
    "start": "1931039",
    "end": "1936380"
  },
  {
    "text": "this is going to be deleted but if you're still running you can still use it until you stop running and then if",
    "start": "1936380",
    "end": "1941779"
  },
  {
    "text": "you reload the app you're supposed to re-register the service worker anyway so it it's plugged",
    "start": "1941779",
    "end": "1947299"
  },
  {
    "text": "but it really isn't because the browser this is again this story of blinders I'm like oh we focus on this thing and we",
    "start": "1947299",
    "end": "1954020"
  },
  {
    "text": "ignore everything else that the attacker can do because there's a way to bypass this mechanism you can unregister it and",
    "start": "1954020",
    "end": "1959840"
  },
  {
    "text": "then create a new browsing context like an iframe and then run like a silent flow in an",
    "start": "1959840",
    "end": "1965960"
  },
  {
    "text": "iframe and it's a new context without service worker and will go straight through just like that and I can show you that",
    "start": "1965960",
    "end": "1973279"
  },
  {
    "text": "just to make make clear that this not for you but for other people who might see this later that this is not gonna",
    "start": "1973279",
    "end": "1979159"
  },
  {
    "text": "work now I have to be very honest here I absolutely hate service workers if",
    "start": "1979159",
    "end": "1985039"
  },
  {
    "text": "you've ever worked with them it's a freaking nightmare to keep them up to date all of that stuff so I don't really",
    "start": "1985039",
    "end": "1990140"
  },
  {
    "text": "like them so I didn't spend too much time on this demo so I didn't build a full OLED scenario with a full working",
    "start": "1990140",
    "end": "1995600"
  },
  {
    "text": "service worker I just built a simple proof of concept and in the proof of concept I have a fake API endpoint",
    "start": "1995600",
    "end": "2001720"
  },
  {
    "text": "pretending to be an authorization server I'm going to show you that when we register that service worker we can no longer reach it",
    "start": "2001720",
    "end": "2007360"
  },
  {
    "text": "and I'm going to show you how we can reach it afterwards all right seriously if you thought the previous demo looked like crap this is not going",
    "start": "2007360",
    "end": "2013659"
  },
  {
    "text": "to get better um",
    "start": "2013659",
    "end": "2018120"
  },
  {
    "text": "there we go",
    "start": "2020200",
    "end": "2022980"
  },
  {
    "text": "here's our service worker application um there's no payload being injected yet",
    "start": "2027760",
    "end": "2033039"
  },
  {
    "text": "so nothing really happens but if you would look at the application Tab and",
    "start": "2033039",
    "end": "2038440"
  },
  {
    "text": "the service worker you can see we have one registered for restaurant.com so this is the service worker registered",
    "start": "2038440",
    "end": "2044080"
  },
  {
    "text": "here what's going to happen is in the back end we have our server",
    "start": "2044080",
    "end": "2049599"
  },
  {
    "text": "right here nope we have our server right here we have an",
    "start": "2049599",
    "end": "2056200"
  },
  {
    "text": "API endpoint slash API slash test kind of a good indicator it's a big demo and",
    "start": "2056200",
    "end": "2061599"
  },
  {
    "text": "this is the real authorization server like if we see this message we're calling the real authorization server however in our service worker we we have",
    "start": "2061599",
    "end": "2069940"
  },
  {
    "text": "it here in our service worker we are replacing that response with this is a service worker not the real one you",
    "start": "2069940",
    "end": "2076240"
  },
  {
    "text": "can't touch it haha and that's essentially it so this is the code to intercept requests we intercept fetch",
    "start": "2076240",
    "end": "2081878"
  },
  {
    "text": "calls that's at the API call for Network stuff we check if it's a call to slash API something something not the best way",
    "start": "2081879",
    "end": "2087878"
  },
  {
    "text": "to do that but whatever and we respond with that fake response all right what does that mean this means if we go",
    "start": "2087879",
    "end": "2094000"
  },
  {
    "text": "to the browser and we look at the network tab here let me clear this and we call the API",
    "start": "2094000",
    "end": "2102220"
  },
  {
    "text": "you can see it's a call to slash API slash test and here in the console you can see this is the service",
    "start": "2102220",
    "end": "2108160"
  },
  {
    "text": "worker showing you that you cannot reach the authorization server that's the whole idea we register that thing and we",
    "start": "2108160",
    "end": "2113440"
  },
  {
    "text": "block calls where we want to block them like you can't send this request we're not allowing you to do so",
    "start": "2113440",
    "end": "2119619"
  },
  {
    "text": "all right onto the attack",
    "start": "2119619",
    "end": "2125700"
  },
  {
    "text": "let me grab it from here here's the attack what do we do in the",
    "start": "2125920",
    "end": "2132820"
  },
  {
    "text": "attack view let me show you the attack file it's hosted from the same server but I'm going to use a malicious domain so it's coming from the malicious server",
    "start": "2132820",
    "end": "2138760"
  },
  {
    "text": "on top you can see that we're going to unregister the service worker right here we're going to get active registrations",
    "start": "2138760",
    "end": "2145119"
  },
  {
    "text": "and then unregister all of them and they will disappear all right how does that work here we go we",
    "start": "2145119",
    "end": "2152140"
  },
  {
    "text": "add it right here",
    "start": "2152140",
    "end": "2155338"
  },
  {
    "text": "payload is injected we used an image tag this time because I don't know why the SVG didn't work for some reason but the",
    "start": "2157420",
    "end": "2163240"
  },
  {
    "text": "image the browser is trying to load a non-existing image handles an error Handler instead which is our code and we",
    "start": "2163240",
    "end": "2168820"
  },
  {
    "text": "have unregistered service worker we can see that here if we go to service workers",
    "start": "2168820",
    "end": "2174940"
  },
  {
    "text": "you can see that this one is deleted it's marked for deletion it's not gone yet because this application uses that",
    "start": "2174940",
    "end": "2180940"
  },
  {
    "text": "service worker and you can see that by calling the API again let me show you here call the API we still get that",
    "start": "2180940",
    "end": "2186820"
  },
  {
    "text": "service worker response it's not yanked out of a running application it's just like yeah next time you reload we're",
    "start": "2186820",
    "end": "2192700"
  },
  {
    "text": "going to delete this and give you the raw but then we would re-register that service worker anyway so this seems like",
    "start": "2192700",
    "end": "2197800"
  },
  {
    "text": "a good defense all right let's update our attack let's call that API endpoint which is",
    "start": "2197800",
    "end": "2205180"
  },
  {
    "text": "the authorized endpoint of an authorization server in an iframe and see what happens so we first unregister and then we called it an iframe",
    "start": "2205180",
    "end": "2211839"
  },
  {
    "text": "and we run this again so let me clear this",
    "start": "2211839",
    "end": "2216780"
  },
  {
    "text": "there we go the service worker is registered is deleted by now we load that iframe",
    "start": "2218020",
    "end": "2224920"
  },
  {
    "text": "with the authorized endpoint where we would run that silent flow and we get the actual API response not the one from",
    "start": "2224920",
    "end": "2230140"
  },
  {
    "text": "the service worker and this is how you can bypass these things this is not how this is to illustrate this one still",
    "start": "2230140",
    "end": "2235660"
  },
  {
    "text": "works by the way the service worker is still there for that context but the iframe is a new browsing context the",
    "start": "2235660",
    "end": "2241420"
  },
  {
    "text": "deleted service worker doesn't get registered there and this doesn't solve it and that's essentially what I'm",
    "start": "2241420",
    "end": "2246460"
  },
  {
    "text": "trying to say here yelling at the cloud",
    "start": "2246460",
    "end": "2253440"
  },
  {
    "text": "and it brings us to this takeaway the same one as three slides ago you",
    "start": "2259000",
    "end": "2265000"
  },
  {
    "text": "cannot secure browser only flows because if you come up with a mechanism that you can use from within the application",
    "start": "2265000",
    "end": "2271200"
  },
  {
    "text": "there's very likely a way you can also unuse or unregister that from within the application and everything you think",
    "start": "2271200",
    "end": "2277540"
  },
  {
    "text": "about there's virtually always going to be a way to bypass that so no matter how sophisticated you make",
    "start": "2277540",
    "end": "2284980"
  },
  {
    "text": "this because this is going to be a nightmare to build and maintain by the way I can tell you that but no matter how sophisticated you make this is not a",
    "start": "2284980",
    "end": "2291400"
  },
  {
    "text": "bad towards security it's always going to be the same problem over and over again",
    "start": "2291400",
    "end": "2298079"
  },
  {
    "text": "and that's a very depressing takeaway I know but if I'm not done yet",
    "start": "2298180",
    "end": "2303820"
  },
  {
    "text": "I have a couple more minutes left so what do you do then how can we fix this",
    "start": "2303820",
    "end": "2309280"
  },
  {
    "text": "and that's really inconvenient part comes in there is a perfect solution for this it's just not as pretty as we would",
    "start": "2309280",
    "end": "2314800"
  },
  {
    "text": "wish it to be because this is what we had before we had our front-end app using the authorization server directly",
    "start": "2314800",
    "end": "2321520"
  },
  {
    "text": "and contacting apis with access tokens that's the bad part because if this one here gets compromised the attacker can",
    "start": "2321520",
    "end": "2329440"
  },
  {
    "text": "do this as well because there's no client Authentication and solution is using a BFF",
    "start": "2329440",
    "end": "2335980"
  },
  {
    "text": "because if you add a BFF into the mix a BFF is a back end for front end it's a back-end component your backend",
    "start": "2335980",
    "end": "2342640"
  },
  {
    "text": "component can handle oauth stuff your front that now becomes the green box that's your that's your front-end",
    "start": "2342640",
    "end": "2348160"
  },
  {
    "text": "application it's a front-end app just like before with an added back-end component a very small one a very",
    "start": "2348160",
    "end": "2354160"
  },
  {
    "text": "insignificant well not insignificant very non-complicated components but this",
    "start": "2354160",
    "end": "2359440"
  },
  {
    "text": "solves the problem why because now in step one we have client Authentication",
    "start": "2359440",
    "end": "2364599"
  },
  {
    "text": "there's no more running flows from the browser because when you exchange the authorization code for tokens the authorization server is going to be like",
    "start": "2364599",
    "end": "2370359"
  },
  {
    "text": "hey man where's your secret or where's your key based authentication or prove that you are the legitimate client and",
    "start": "2370359",
    "end": "2375820"
  },
  {
    "text": "the attacker can't do that and if you want to use a refresh token refresh tokens first of all are not",
    "start": "2375820",
    "end": "2381220"
  },
  {
    "text": "accessible in the browser anymore there's no tokens here and refresh tokens used here require client authentication no more bear",
    "start": "2381220",
    "end": "2387700"
  },
  {
    "text": "refresh tokens awesome this pattern is really really awesome",
    "start": "2387700",
    "end": "2392920"
  },
  {
    "text": "it looks super ugly because like oh my God now I have a backend for my front end but it's just it can be a very",
    "start": "2392920",
    "end": "2399339"
  },
  {
    "text": "simple stateless thing it does two things well actually I have a slide on that in the next slide I'm going to",
    "start": "2399339",
    "end": "2405040"
  },
  {
    "text": "highlight the changes to your architecture to make this work step number one you can remove all the oad stuff from",
    "start": "2405040",
    "end": "2411700"
  },
  {
    "text": "the front end really no more flows in the front end you can delete your SDK your library",
    "start": "2411700",
    "end": "2416800"
  },
  {
    "text": "you're using or God forbid your custom code to run an oad flow delete all of it",
    "start": "2416800",
    "end": "2422140"
  },
  {
    "text": "awesome this is gonna run with yes delete your service workers absolutely this",
    "start": "2422140",
    "end": "2428859"
  },
  {
    "text": "relies now on cookies you have a call from the front end to that BFF and the browser just attaches a",
    "start": "2428859",
    "end": "2435280"
  },
  {
    "text": "simple cookie to it that's it no more code for dealing with that in the front end awesome",
    "start": "2435280",
    "end": "2441520"
  },
  {
    "text": "your API that's the most important Point your API doesn't change",
    "start": "2441520",
    "end": "2447700"
  },
  {
    "text": "because your API was built for accepting access tokens and guess what it gets access tokens just like that zero",
    "start": "2447700",
    "end": "2454480"
  },
  {
    "text": "literally zero changes to your API awesome your authorization server doesn't really change yes you have to",
    "start": "2454480",
    "end": "2461200"
  },
  {
    "text": "change a client from being a public client to a confidential client meaning it has a secret or a way to authenticate",
    "start": "2461200",
    "end": "2466900"
  },
  {
    "text": "that's the only change it's a matter of configuration everybody supports that this is not a New Concept very simple",
    "start": "2466900",
    "end": "2472540"
  },
  {
    "text": "very straightforward very easy to handle and then a BFF sounds like this holy",
    "start": "2472540",
    "end": "2477640"
  },
  {
    "text": "crap now we have to build a back end but it's not a back end it's a glorified proxy",
    "start": "2477640",
    "end": "2484060"
  },
  {
    "text": "it does two things it gets a request on the incoming endpoints an API call the Frontline calls slash BFF reviews to get",
    "start": "2484060",
    "end": "2491619"
  },
  {
    "text": "a list of reviews and there's a cookie there and the BFF takes that cookie opens it up takes the tokens out",
    "start": "2491619",
    "end": "2497440"
  },
  {
    "text": "checks if the access token is still valid if it's valid slaps it on the request and sends it to the API it's a",
    "start": "2497440",
    "end": "2502540"
  },
  {
    "text": "proxy and the API will send a response back and the BFF returns a response to the front of it and if the access token here",
    "start": "2502540",
    "end": "2508720"
  },
  {
    "text": "is no longer valid the BFF will use a refresh token first get a new access token use that access token here and",
    "start": "2508720",
    "end": "2514180"
  },
  {
    "text": "that's it the BFF does not contain business logic you don't have to implement rules there",
    "start": "2514180",
    "end": "2520000"
  },
  {
    "text": "you can even implement this as a generic BFF that you just give a config file",
    "start": "2520000",
    "end": "2525400"
  },
  {
    "text": "like here some incoming endpoints they map to these outgoing endpoints here's your authorization server and that's it",
    "start": "2525400",
    "end": "2530920"
  },
  {
    "text": "if you're a good developer if you're a smart developer better than I can develop stuff and hopefully design as",
    "start": "2530920",
    "end": "2536380"
  },
  {
    "text": "well and then you can easily build something like that that works out of the box with a config file",
    "start": "2536380",
    "end": "2542740"
  },
  {
    "text": "yeah just a second I'm gonna finish the story and then I have plenty of time for questions so this is really",
    "start": "2542740",
    "end": "2549700"
  },
  {
    "text": "fairly simple it can run as a stateless service you don't have to spin up like a tomcat in the back end to make the",
    "start": "2549700",
    "end": "2554980"
  },
  {
    "text": "supported BFF you can if you want to like some people really hate their jobs so they might want to use it don't get",
    "start": "2554980",
    "end": "2560500"
  },
  {
    "text": "server for that but you can do this as as a stateless Azure function or AWS",
    "start": "2560500",
    "end": "2566140"
  },
  {
    "text": "Lambda function or whatever that would be perfectly possible as well might cost you a bit in computing power but that's",
    "start": "2566140",
    "end": "2571599"
  },
  {
    "text": "that's all there is what about this guy",
    "start": "2571599",
    "end": "2577720"
  },
  {
    "text": "we haven't really fixed our crosshatch scripting problem now have we no we haven't cross that scripting is",
    "start": "2577720",
    "end": "2583480"
  },
  {
    "text": "still there and the attacker can still inject malicious code in the browser but now they can't get tokens because",
    "start": "2583480",
    "end": "2588700"
  },
  {
    "text": "there's no tokens here and they can't run a flow with the authorization server because there's no tokens there",
    "start": "2588700",
    "end": "2594339"
  },
  {
    "text": "that's good the attacker still has access to the front-end application they can still change the page which have always been",
    "start": "2594339",
    "end": "2601599"
  },
  {
    "text": "possible or able to do and it can still send requests through the back end the BFF we know that attack a session",
    "start": "2601599",
    "end": "2608200"
  },
  {
    "text": "writing this is not something new this is something from the 90s that we had an old traditional web",
    "start": "2608200",
    "end": "2614140"
  },
  {
    "text": "applications and that we still have today that's by the way why you should fix your cross scripting as well don't just leave it there and focus on the",
    "start": "2614140",
    "end": "2620920"
  },
  {
    "text": "oauth stuff but now we can reduce the attack surface from the full API or apis that the token had",
    "start": "2620920",
    "end": "2628540"
  },
  {
    "text": "access to to only the endpoints that the BFF exposes if this front that needs three endpoints and the BFF should only",
    "start": "2628540",
    "end": "2634300"
  },
  {
    "text": "expose three endpoints not then and the attacker can only access these three not the other seven",
    "start": "2634300",
    "end": "2640540"
  },
  {
    "text": "that's a win additionally and this is very optional by the way but now you have also a single point of control and",
    "start": "2640540",
    "end": "2647680"
  },
  {
    "text": "you could Implement things in your BFF like rate limiting or anomaly detection or something like that you could decide",
    "start": "2647680",
    "end": "2653260"
  },
  {
    "text": "like hey why is this client sending 10 000 requests per minute that makes no sense I'm gonna kick him out like no",
    "start": "2653260",
    "end": "2658540"
  },
  {
    "text": "you're no longer allowed to contact me go get new tokens and we'll talk about it then that could also be a possibility",
    "start": "2658540",
    "end": "2664420"
  },
  {
    "text": "but again that's not mandatory and that is essentially how a BFF increases security and yes there's a",
    "start": "2664420",
    "end": "2672160"
  },
  {
    "text": "cost to it this doesn't come for free like always but in this case for sensitive applications the cost the the benefits",
    "start": "2672160",
    "end": "2678940"
  },
  {
    "text": "far outweigh the costs I'm not talking about using BFFs for your grandmother's recipe application I",
    "start": "2678940",
    "end": "2685780"
  },
  {
    "text": "mean if you build that stuff over the weekend you can that's a good exercise but it's probably not worth it to do it",
    "start": "2685780",
    "end": "2691240"
  },
  {
    "text": "there because honestly nobody cares but if you're building Healthcare apps financial apps apps dealing with",
    "start": "2691240",
    "end": "2696880"
  },
  {
    "text": "personal information this should be absolutely mandatory and if you're building Healthcare apps",
    "start": "2696880",
    "end": "2703000"
  },
  {
    "text": "in Norway it is mandatory because he enforces that you're not allowed to register a",
    "start": "2703000",
    "end": "2708099"
  },
  {
    "text": "front-end only client for using their system that's one way of doing that and",
    "start": "2708099",
    "end": "2713800"
  },
  {
    "text": "by the way whenever I talk about BFS people come to me after I talk like yeah I work in healthcare or in finance and",
    "start": "2713800",
    "end": "2719260"
  },
  {
    "text": "we've been using BFFs all along I mean we don't care about the extra load that it puts on our servers yeah of course we do that so it's it's not an uncommon",
    "start": "2719260",
    "end": "2725980"
  },
  {
    "text": "pattern and it uses it works quite well all right let me wrap this up here and then we'll answer some questions",
    "start": "2725980",
    "end": "2733660"
  },
  {
    "text": "I have to add a disclaimer to be completely Fair that spec on browser-based apps does",
    "start": "2733660",
    "end": "2739420"
  },
  {
    "text": "mention a BFF as well mostly because otherwise people like me and Dominic keep asking them about it and",
    "start": "2739420",
    "end": "2745900"
  },
  {
    "text": "complaining about like yeah but BFFs are the solution so they're like yeah let's add a BFF there's no details by the way",
    "start": "2745900",
    "end": "2751599"
  },
  {
    "text": "there's like yeah yeah you can add a BFF but crosstalk scripting is still a problem that's basically the summary of what's in the spec if you don't believe",
    "start": "2751599",
    "end": "2757480"
  },
  {
    "text": "me go check it out by the way the section before BFF is like yeah maybe you don't use a lot at all because it's",
    "start": "2757480",
    "end": "2762760"
  },
  {
    "text": "kind of insecure that's literally the section before that it adds more stuff to your attack surface that you maybe",
    "start": "2762760",
    "end": "2768160"
  },
  {
    "text": "don't need at all so I'm going to leave it in the middle how useful this section is but I wanted to mention that it's",
    "start": "2768160",
    "end": "2773200"
  },
  {
    "text": "there key takeaways three",
    "start": "2773200",
    "end": "2778300"
  },
  {
    "text": "you cannot secure browser only Flows In All Out yes it's inconvenient but it's the truth",
    "start": "2778300",
    "end": "2784540"
  },
  {
    "text": "I've Illustrated why this is not possible and I'm sure you can think of another pattern and I'm sure somebody",
    "start": "2784540",
    "end": "2790420"
  },
  {
    "text": "pretty smart will think of a way to bypass that you simply cannot do it because all the security hinges on",
    "start": "2790420",
    "end": "2796000"
  },
  {
    "text": "controlling that redirect URI and if the attacker does that everything else goes out the window BFFs solve the problem",
    "start": "2796000",
    "end": "2803800"
  },
  {
    "text": "more or less they reduce the consequences of a successful Crosshair scripting attack they reduce the attack from getting tokens and long-term access",
    "start": "2803800",
    "end": "2810579"
  },
  {
    "text": "to an online session riding attack that's as As Good As It Gets we can't do",
    "start": "2810579",
    "end": "2815680"
  },
  {
    "text": "better with the presence of cross unscripting that's just a reality and that's why take away 3 is there follow secure coding guidelines so you",
    "start": "2815680",
    "end": "2823660"
  },
  {
    "text": "can try and prevent that trusted scripting in the first place because if you can do that the rest of the story becomes a bit less",
    "start": "2823660",
    "end": "2830380"
  },
  {
    "text": "relevant you should still do it as a defense in depth and secure architecture but fixing crosshatch scripting is",
    "start": "2830380",
    "end": "2836560"
  },
  {
    "text": "priority number one here and in that light if you want to know how follow one of my security workshops or",
    "start": "2836560",
    "end": "2841900"
  },
  {
    "text": "alternatively I have a whole bunch of articles on my website about cross-site scripting in angular and react and how",
    "start": "2841900",
    "end": "2848079"
  },
  {
    "text": "you can use trusted types and CSP and all of that stuff so check it out if you just go to my website you'll",
    "start": "2848079",
    "end": "2853240"
  },
  {
    "text": "easily find it or the link is here at the bottom if you want to learn more I have some online courses you can check out as well",
    "start": "2853240",
    "end": "2859540"
  },
  {
    "text": "if you like listening to me if you don't like I don't recommend these because I'm going to be talking for a long time in",
    "start": "2859540",
    "end": "2865599"
  },
  {
    "text": "these courses if you want to know more I have a mailing list on my website that's the best way I have a couple of things",
    "start": "2865599",
    "end": "2870640"
  },
  {
    "text": "in the pipeline for this year so subscribe to stay up to date no spam just security content and with that I",
    "start": "2870640",
    "end": "2877000"
  },
  {
    "text": "want to thank you and if you have any questions I'll happily answer them right now",
    "start": "2877000",
    "end": "2882420"
  },
  {
    "text": "all right you had a question in the back is that still there no I was about to cross that scripting",
    "start": "2890380",
    "end": "2897819"
  },
  {
    "text": "in BFFs no okay well glad I answered it anyway I have no idea what I said with that sure",
    "start": "2897819",
    "end": "2903040"
  },
  {
    "text": "yes but it still needs to keep uh if you",
    "start": "2903040",
    "end": "2908980"
  },
  {
    "text": "want to get access tokens by okay that's a state yes in this case you can push tokens to",
    "start": "2908980",
    "end": "2916420"
  },
  {
    "text": "the client in cookies so cookies can be made inaccessible from JavaScript so you can hide them from malicious JavaScript",
    "start": "2916420",
    "end": "2923200"
  },
  {
    "text": "they're still there on requests but not on the client-side context you can store your access token and refresh token in a",
    "start": "2923200",
    "end": "2929980"
  },
  {
    "text": "cookie preferably you encrypt that cookie for additional security but it's not even mandatory and that way your BFF",
    "start": "2929980",
    "end": "2935800"
  },
  {
    "text": "doesn't have to keep any state because every incoming call will carry those cookies you can grab the tokens from there",
    "start": "2935800",
    "end": "2941260"
  },
  {
    "text": "see if they if the access token is valid if not use the refresh token and then send a request to the API",
    "start": "2941260",
    "end": "2947560"
  },
  {
    "text": "yes you'll have you'll have a bit of cookie size well not issues but",
    "start": "2947560",
    "end": "2953980"
  },
  {
    "text": "um there is two tokens in the cookie and some metadata probably but that the",
    "start": "2953980",
    "end": "2959380"
  },
  {
    "text": "bulky token is going to be the access token and guess what you already included on the in the authorization header anyway so now it's not in the",
    "start": "2959380",
    "end": "2965560"
  },
  {
    "text": "authorization header but in the cookie so to be honest it's not going to add much to your request sizes",
    "start": "2965560",
    "end": "2972339"
  },
  {
    "text": "other questions",
    "start": "2972339",
    "end": "2975119"
  },
  {
    "text": "all right no there's a question so the spec mentions the BFF pattern also mentioned",
    "start": "2980319",
    "end": "2987220"
  },
  {
    "text": "is another pattern which is called something called the mediator pattern yeah there's like a token mediation",
    "start": "2987220",
    "end": "2992680"
  },
  {
    "text": "pattern that's like a half-assed BFF it's well it's not a joke it's the",
    "start": "2992680",
    "end": "2998800"
  },
  {
    "text": "reality it's like a it solves half of the problem as in it's no it it's actually not that bad it's",
    "start": "2998800",
    "end": "3005400"
  },
  {
    "text": "it's basically a token mediation pattern is a BFF that runs the OLED flow on the back end it keeps a refresh token on the",
    "start": "3005400",
    "end": "3011460"
  },
  {
    "text": "back end but allows the front end to use the access token to call apis directly um",
    "start": "3011460",
    "end": "3017579"
  },
  {
    "text": "it's mainly there for people that have very very um response heavy apis because every",
    "start": "3017579",
    "end": "3024240"
  },
  {
    "text": "request otherwise tunnels through the BFF so now you can make direct calls so you don't have that proxy component in the middle",
    "start": "3024240",
    "end": "3030359"
  },
  {
    "text": "um security properties are not that bad but usually for security sensitive apps you want to go to the full BFF anyway",
    "start": "3030359",
    "end": "3036839"
  },
  {
    "text": "but yeah it's it's there it's a it's a it's a valid pattern um might be a good in between if you need it it does solve",
    "start": "3036839",
    "end": "3043619"
  },
  {
    "text": "the getting fresh tokens part so that's good yes if you have a csrf policy would it",
    "start": "3043619",
    "end": "3050700"
  },
  {
    "text": "be able to protect against the attack you show them would that be remote",
    "start": "3050700",
    "end": "3056299"
  },
  {
    "text": "um it's if you have a cross-sight request for degree policy um it would not have any impact on this attack",
    "start": "3056400",
    "end": "3061859"
  },
  {
    "text": "because the attack is not against your apis where you would have to see surf policy in place it's basically running a",
    "start": "3061859",
    "end": "3068099"
  },
  {
    "text": "flow with the authorization server so that's something you have no control over and csrf detect protections",
    "start": "3068099",
    "end": "3073920"
  },
  {
    "text": "wouldn't work here anyway because c-surf is about cross-site request forgery it's",
    "start": "3073920",
    "end": "3079740"
  },
  {
    "text": "if I want to send a request from my evil domain maliciousfood.com to the back end of restorate.com that's a cross-site",
    "start": "3079740",
    "end": "3085619"
  },
  {
    "text": "request but here the attacker is already in restaurant.com so they can send requests as if they were the application",
    "start": "3085619",
    "end": "3091800"
  },
  {
    "text": "sees of protections matter for your BFF so if you want to go back",
    "start": "3091800",
    "end": "3097740"
  },
  {
    "text": "back here by the way I oh I forgot that I'm Dominic is looking at me very angrily he's doing a talk right after me",
    "start": "3097740",
    "end": "3105059"
  },
  {
    "text": "and he's going to dive into the details of BFFs that's why I haven't talked about details and I totally forgot to",
    "start": "3105059",
    "end": "3110099"
  },
  {
    "text": "mention that so ah yeah he's going to be very angry at me but that's a different story but sea surf protections would",
    "start": "3110099",
    "end": "3115380"
  },
  {
    "text": "matter here so that the malicious frontland would not be able to send requests to the BFF and get them handled but um most cases a very well most cases",
    "start": "3115380",
    "end": "3123720"
  },
  {
    "text": "you run these things in the same origin the same domain and then you just don't accept crosshat requests problem solved",
    "start": "3123720",
    "end": "3130020"
  },
  {
    "text": "and otherwise a solid course policy will solve that as well but Dominic will talk about that in the next session which is",
    "start": "3130020",
    "end": "3135960"
  },
  {
    "text": "is it here same room one I think oh in the bigger room right awesome I will not",
    "start": "3135960",
    "end": "3142619"
  },
  {
    "text": "be offended by that yes",
    "start": "3142619",
    "end": "3148940"
  },
  {
    "text": "say a few words about how a typical user login flow fits into the beer I will",
    "start": "3151680",
    "end": "3157859"
  },
  {
    "text": "cover that yes he will cover that let me try to take a stab at it and it",
    "start": "3157859",
    "end": "3163140"
  },
  {
    "text": "wouldn't change much um you still click a button in your Frontline like I want to log in and the front then just asks the BFF please",
    "start": "3163140",
    "end": "3170280"
  },
  {
    "text": "start a an or flow and the BFF will generate all the parameters like pixie and so on and so on and then just send",
    "start": "3170280",
    "end": "3175380"
  },
  {
    "text": "the redirect and response so uh that's in a nutshell how it should work um just very much like you would have a",
    "start": "3175380",
    "end": "3181079"
  },
  {
    "text": "login flow for a back-end web application same story basically but he's going to cover that so more",
    "start": "3181079",
    "end": "3186480"
  },
  {
    "text": "details uh in a minute well in 10 minutes sure",
    "start": "3186480",
    "end": "3194059"
  },
  {
    "text": "information if you still want to keep secure what's your commands",
    "start": "3196880",
    "end": "3202319"
  },
  {
    "text": "yeah so what what about applications that are not super sensitive but still need to be secured obviously and what do",
    "start": "3202319",
    "end": "3207839"
  },
  {
    "text": "you do um it depends on your threat model depends on what kind of data do you handle for",
    "start": "3207839",
    "end": "3214079"
  },
  {
    "text": "example if you have an app that doesn't load like third-party contents like Twitter timelines and stuff like that",
    "start": "3214079",
    "end": "3219240"
  },
  {
    "text": "and you don't really handle user data you just do some business operations so there's no real untrusted data then your",
    "start": "3219240",
    "end": "3226920"
  },
  {
    "text": "trap model may be like yeah this is acceptable for us it's it depends on whether you want to accept the risk",
    "start": "3226920",
    "end": "3233220"
  },
  {
    "text": "and be aware of that at least document like hey we know about this BFF thing we decide not to use it because of these",
    "start": "3233220",
    "end": "3238980"
  },
  {
    "text": "reasons and then if one of these reasons is wrong in the future you at least know like oh yeah whoops we missed that",
    "start": "3238980",
    "end": "3244319"
  },
  {
    "text": "um but yeah you could you could do that and the moment you're like oh this is risky that's when the the trade-off",
    "start": "3244319",
    "end": "3249900"
  },
  {
    "text": "becomes viable right then this one like oh this is too risky so yes okay let's invest time and money into building that",
    "start": "3249900",
    "end": "3256260"
  },
  {
    "text": "BFF and using that um so yeah I can't really answer that for you it depends on what you're doing",
    "start": "3256260",
    "end": "3261380"
  },
  {
    "text": "I'm using a lot straight up in the front end it's not the end of the world it's",
    "start": "3261380",
    "end": "3266760"
  },
  {
    "text": "just not something that you really want to do in critical applications business sensitive",
    "start": "3266760",
    "end": "3272339"
  },
  {
    "text": "applications yes",
    "start": "3272339",
    "end": "3276440"
  },
  {
    "text": "yeah I'm gonna shoot myself sorry uh so yeah",
    "start": "3283339",
    "end": "3290660"
  },
  {
    "text": "in the browser outside of JavaScript that's a good question",
    "start": "3292500",
    "end": "3297599"
  },
  {
    "text": "um",
    "start": "3297599",
    "end": "3299720"
  },
  {
    "text": "that's a really good question I think it can yes I think if we would",
    "start": "3309720",
    "end": "3314880"
  },
  {
    "text": "I would have to think this true not just like in a minute in a conference talk but you have to think",
    "start": "3314880",
    "end": "3321300"
  },
  {
    "text": "it's true but of the top of my head I would say if you can fully abstract away the or details like we do now in a BFF",
    "start": "3321300",
    "end": "3328200"
  },
  {
    "text": "you in theory could move that in a browser component which also fully encapsulates tokens by the way so if",
    "start": "3328200",
    "end": "3334380"
  },
  {
    "text": "that's possible then yeah this this can probably work Dominic has something to say about that I should mention a Google",
    "start": "3334380",
    "end": "3340380"
  },
  {
    "text": "Google is looking at that yes they they are looking at implementing native authentication apis and things like that",
    "start": "3340380",
    "end": "3348359"
  },
  {
    "text": "into the browser which means every time you're doing an overall or an openly connect flow it will go via Google",
    "start": "3348359",
    "end": "3353940"
  },
  {
    "text": "servers happy with that yeah so",
    "start": "3353940",
    "end": "3360660"
  },
  {
    "text": "yeah it's hard yeah but my first instinct would be to say that it seems like you",
    "start": "3360660",
    "end": "3366300"
  },
  {
    "text": "could take that BFF and put that part in the browser itself um but then the the fun part becomes",
    "start": "3366300",
    "end": "3372480"
  },
  {
    "text": "like getting it actually interoperable because oledc is fairly extended usually",
    "start": "3372480",
    "end": "3377700"
  },
  {
    "text": "standards compliant but a lot has like r0 has their own custom things and everybody else wants to add values here",
    "start": "3377700",
    "end": "3382980"
  },
  {
    "text": "and this there and it gets a bit tricky but in theory it should be possible um I just don't think we'll ever see",
    "start": "3382980",
    "end": "3389220"
  },
  {
    "text": "that happen but sure security manager that is a security",
    "start": "3389220",
    "end": "3395520"
  },
  {
    "text": "tools well now you have a doctor sent him so",
    "start": "3395520",
    "end": "3401520"
  },
  {
    "text": "uh watch this one well it's going to be online later I'm going to be in the picture like half of the time so that",
    "start": "3401520",
    "end": "3407819"
  },
  {
    "text": "should be good um and you can tell them like just watch this and then we'll talk about that yeah sure",
    "start": "3407819",
    "end": "3413099"
  },
  {
    "text": "anybody else all right in that case the class is",
    "start": "3413099",
    "end": "3419640"
  },
  {
    "text": "dismissed so enjoy the rest of the conference if you",
    "start": "3419640",
    "end": "3424339"
  },
  {
    "text": "if you want to talk more just grab me during one of the breaks here I'll be here until the afternoon somewhere",
    "start": "3429020",
    "end": "3435720"
  },
  {
    "text": "thank you",
    "start": "3435720",
    "end": "3438319"
  }
]