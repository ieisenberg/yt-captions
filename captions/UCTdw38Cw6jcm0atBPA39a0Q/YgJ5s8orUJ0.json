[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "all right I'm Vaughn and I was asked to",
    "start": "30",
    "end": "6450"
  },
  {
    "text": "give this talk about reactive domain-driven design so thank you for",
    "start": "6450",
    "end": "11670"
  },
  {
    "text": "attending there's a an English expression I actually don't know if it's",
    "start": "11670",
    "end": "19170"
  },
  {
    "text": "English in general or US English but when when someone says that this wax is",
    "start": "19170",
    "end": "28230"
  },
  {
    "text": "something it means that it it makes it look better it makes it shine just kind",
    "start": "28230",
    "end": "33960"
  },
  {
    "text": "of like when you wax a car so the topic here is reactive ddd when concurrent wax",
    "start": "33960",
    "end": "40440"
  },
  {
    "text": "is fluent I think we've had you know the ability to do concurrent programming for",
    "start": "40440",
    "end": "47460"
  },
  {
    "text": "a long time in fact I've been doing async and current programming for better",
    "start": "47460",
    "end": "54809"
  },
  {
    "text": "part of 30 years and I'll explain some of that in a few minutes I think what",
    "start": "54809",
    "end": "60090"
  },
  {
    "text": "we've lacked a lot in our industry is",
    "start": "60090",
    "end": "65239"
  },
  {
    "text": "the drive to be fluent in our software",
    "start": "65240",
    "end": "70530"
  },
  {
    "text": "designs where our software designs really Express the way the business",
    "start": "70530",
    "end": "76710"
  },
  {
    "text": "thinks so I think that it seems to me like a lot of times the the terminology",
    "start": "76710",
    "end": "85950"
  },
  {
    "text": "that we use and our software is very technical and I'll show you some cases",
    "start": "85950",
    "end": "91470"
  },
  {
    "text": "of that today and we're if we were to soften the technology a bit and think",
    "start": "91470",
    "end": "98759"
  },
  {
    "text": "more about the business we'd probably get a lot more sort of business",
    "start": "98759",
    "end": "104880"
  },
  {
    "text": "sponsorship and agreement and cooperation and collaboration so let's",
    "start": "104880",
    "end": "109950"
  },
  {
    "text": "get into this topic first of all besides my work around domain driven design and",
    "start": "109950",
    "end": "118670"
  },
  {
    "start": "112000",
    "end": "112000"
  },
  {
    "text": "my my books on DDD and my books on reactive and actor/model I am the chief",
    "start": "118670",
    "end": "126930"
  },
  {
    "text": "architect of a new platform called Vlingo and this is maybe as you could",
    "start": "126930",
    "end": "133500"
  },
  {
    "text": "imagine the initial V for my name and lingo for language so this is a platform",
    "start": "133500",
    "end": "141810"
  },
  {
    "text": "meant to be used with domain-driven design and the contemporary ways that",
    "start": "141810",
    "end": "149010"
  },
  {
    "text": "domain-driven design is expressed today and it is being developed both in in Java and for the.net platform so it's",
    "start": "149010",
    "end": "156900"
  },
  {
    "text": "available on fling go i/o and and it's all open source so I want to discuss",
    "start": "156900",
    "end": "164730"
  },
  {
    "text": "where I think we are right now and when I when I travel around and teach and",
    "start": "164730",
    "end": "171300"
  },
  {
    "text": "consult and speak at conferences and so forth I see this recurring set of",
    "start": "171300",
    "end": "178739"
  },
  {
    "text": "problems in our industry so I don't think that I'm going to tell you anything new but this is sort of the",
    "start": "178739",
    "end": "185790"
  },
  {
    "text": "foundation that I am speaking from today",
    "start": "185790",
    "end": "190910"
  },
  {
    "text": "probably one of the biggest problems that we face is this big ball of mud and",
    "start": "190910",
    "end": "200900"
  },
  {
    "text": "I think the the name is fairly self-explanatory but this is where you",
    "start": "200900",
    "end": "208860"
  },
  {
    "text": "probably have software that has been written with a very overloaded set of",
    "start": "208860",
    "end": "220320"
  },
  {
    "text": "features or functionality within one deployment so you might think of this as",
    "start": "220320",
    "end": "226230"
  },
  {
    "text": "a single model that tries to express",
    "start": "226230",
    "end": "232760"
  },
  {
    "text": "concepts in probably half a dozen to 10",
    "start": "232760",
    "end": "238470"
  },
  {
    "text": "maybe a dozen different actual models which means that none of the models get",
    "start": "238470",
    "end": "243810"
  },
  {
    "text": "proper attention they tend to be very tightly coupled highly dependent on one",
    "start": "243810",
    "end": "250680"
  },
  {
    "text": "another and it's just simply problematic you know this this probably looks familiar",
    "start": "250680",
    "end": "258390"
  },
  {
    "text": "and that some objects in the system are are quite large and out of control they",
    "start": "258390",
    "end": "264690"
  },
  {
    "text": "know too much too many lines of code too responsibilities others are subservient",
    "start": "264690",
    "end": "271470"
  },
  {
    "text": "to that and also are are tightly coupled",
    "start": "271470",
    "end": "277620"
  },
  {
    "text": "to it so if you try to make a change in one portion of this big ball of mud it",
    "start": "277620",
    "end": "283290"
  },
  {
    "text": "it tends to ripple into other areas of the big ball of mud and since these are",
    "start": "283290",
    "end": "290370"
  },
  {
    "text": "well tested because it's very difficult to test them the sort of you know",
    "start": "290370",
    "end": "298130"
  },
  {
    "text": "ricochet that occurs from or domino effect that recurs occurs from these",
    "start": "298130",
    "end": "304520"
  },
  {
    "text": "changes in one part affect other parts and sometimes they're unseen until",
    "start": "304520",
    "end": "310350"
  },
  {
    "text": "they're well into production and clients are using them to their failure so this",
    "start": "310350",
    "end": "319200"
  },
  {
    "text": "is a major problem and pretty much everybody who wants me to engage with",
    "start": "319200",
    "end": "325830"
  },
  {
    "text": "them these days is looking for a way out of this they're there to the point where they",
    "start": "325830",
    "end": "331560"
  },
  {
    "text": "can only make 1 or 2 releases per year instead of even once a month or once",
    "start": "331560",
    "end": "339470"
  },
  {
    "text": "every other month let alone every day or several times a day so you can imagine",
    "start": "339470",
    "end": "345660"
  },
  {
    "text": "what this means for companies who used to and have made their fortunes with",
    "start": "345660",
    "end": "353430"
  },
  {
    "text": "technology and and software and yet now they're facing peril in their fortune",
    "start": "353430",
    "end": "364020"
  },
  {
    "text": "companies because software has become a great liability due to problems like",
    "start": "364020",
    "end": "369810"
  },
  {
    "text": "this also we're quite inefficient in our use of modern hardware modern hardware",
    "start": "369810",
    "end": "378960"
  },
  {
    "start": "371000",
    "end": "371000"
  },
  {
    "text": "architecture is does not require blocking code like it used to",
    "start": "378960",
    "end": "386330"
  },
  {
    "text": "or or essentially not support well",
    "start": "386330",
    "end": "391520"
  },
  {
    "text": "non-blocking code today cores are are quite prevalent probably the machine",
    "start": "391520",
    "end": "398250"
  },
  {
    "text": "that you have today can run six to eight threads at",
    "start": "398250",
    "end": "405209"
  },
  {
    "text": "least maybe ten or twelve simultaneously and this is just a developer developer",
    "start": "405209",
    "end": "410909"
  },
  {
    "text": "machine often servers that we deploy on can run simultaneously even up to",
    "start": "410909",
    "end": "418349"
  },
  {
    "text": "hundreds of threads simultaneously so the blocking that that we are used to",
    "start": "418349",
    "end": "425339"
  },
  {
    "text": "because this is what we've been taught since we were in school or in our first",
    "start": "425339",
    "end": "431610"
  },
  {
    "text": "jobs that you know blocking is our friend don't don't fear the the blocking code",
    "start": "431610",
    "end": "438269"
  },
  {
    "text": "instead go with it and nothing will go wrong but this is very inefficient and",
    "start": "438269",
    "end": "444089"
  },
  {
    "text": "it's quite costly when basically an expensive server is sitting around a",
    "start": "444089",
    "end": "449639"
  },
  {
    "text": "large percentage of time waiting for i/o to complete or some other dependency",
    "start": "449639",
    "end": "456089"
  },
  {
    "text": "that causes it to block and blocking is experienced in several different areas",
    "start": "456089",
    "end": "463229"
  },
  {
    "text": "it's usually experienced at the HTTP request/response level at the database",
    "start": "463229",
    "end": "468809"
  },
  {
    "text": "and then even just in our implementation code of our application whether it's a",
    "start": "468809",
    "end": "474959"
  },
  {
    "text": "domain model or application services service layer whatever it happens to be these tend to be blocking and I would",
    "start": "474959",
    "end": "482999"
  },
  {
    "text": "say that although for example C sharp and dotnet are now you know now support",
    "start": "482999",
    "end": "490229"
  },
  {
    "text": "the concept of of an async kind of",
    "start": "490229",
    "end": "495259"
  },
  {
    "text": "operation you know how heavily are those being used and and do you have really",
    "start": "495259",
    "end": "504419"
  },
  {
    "text": "effective control over how the threads are being used another problem and what",
    "start": "504419",
    "end": "511319"
  },
  {
    "start": "508000",
    "end": "508000"
  },
  {
    "text": "often leads to big ball of mud is this anemic domain model and when I say that",
    "start": "511319",
    "end": "516539"
  },
  {
    "text": "I mean something like this okay this is Java code but I think the this class or",
    "start": "516539",
    "end": "525240"
  },
  {
    "start": "517000",
    "end": "517000"
  },
  {
    "text": "a portion of this class is well understandable if you don't use Java on",
    "start": "525240",
    "end": "530699"
  },
  {
    "text": "a regular basis it's or as you would use in.net attributes",
    "start": "530699",
    "end": "537680"
  },
  {
    "text": "right and so this is a class that is an entity and the fields or attributes on",
    "start": "537680",
    "end": "545089"
  },
  {
    "text": "it are basically considered either a primary key ID or they're considered a",
    "start": "545089",
    "end": "551720"
  },
  {
    "text": "column and what I have to say is you can you can call this a domain model if you",
    "start": "551720",
    "end": "557450"
  },
  {
    "text": "want but this is not a domain model this is a data model and we're simply bringing the data model up into a",
    "start": "557450",
    "end": "564320"
  },
  {
    "text": "general-purpose programming language and and you know faking ourselves out and to into you know we we feel like now we're",
    "start": "564320",
    "end": "572870"
  },
  {
    "text": "using object-oriented programming but we're not we're really just manipulating",
    "start": "572870",
    "end": "577970"
  },
  {
    "text": "data and I think ultimately most of our architectures are quite elaborate",
    "start": "577970",
    "end": "584890"
  },
  {
    "text": "database table editors so you know is this really something that we should be",
    "start": "584890",
    "end": "591680"
  },
  {
    "text": "spending so much time and money on or should we kind of let these levels of",
    "start": "591680",
    "end": "598790"
  },
  {
    "text": "problems go to to simpler solutions and really try to solve hard problems where",
    "start": "598790",
    "end": "604040"
  },
  {
    "text": "hard problems exist one of the major",
    "start": "604040",
    "end": "610070"
  },
  {
    "start": "607000",
    "end": "607000"
  },
  {
    "text": "problems today with all source code that I generally run into you know very large",
    "start": "610070",
    "end": "616970"
  },
  {
    "text": "percentage of it is this inarticulate model problem so this is just an example",
    "start": "616970",
    "end": "625370"
  },
  {
    "text": "of some code you you can find on the web like a few search for Microsoft or liens",
    "start": "625370",
    "end": "631970"
  },
  {
    "text": "or you know some other glimpse of a technology that that is that does",
    "start": "631970",
    "end": "639709"
  },
  {
    "text": "support concurrency what you find is that the the platform itself leaks into",
    "start": "639709",
    "end": "647660"
  },
  {
    "text": "the model or into the software quite heavily so for example you know we have",
    "start": "647660",
    "end": "655399"
  },
  {
    "text": "this concept of an eye game grain but grain is an idea that comes from the",
    "start": "655399",
    "end": "662630"
  },
  {
    "text": "orleans framework and it's virtual actors it's not a",
    "start": "662630",
    "end": "668780"
  },
  {
    "text": "concept of the business I can guarantee you that game is a game as a game it has",
    "start": "668780",
    "end": "674390"
  },
  {
    "text": "nothing to do with the grain the grain has to do with technology so when we when we're shown to design software by",
    "start": "674390",
    "end": "683390"
  },
  {
    "text": "leaking the framework in I think that you know is just really bad for business",
    "start": "683390",
    "end": "691010"
  },
  {
    "text": "centric development why why do our business people have to think in terms",
    "start": "691010",
    "end": "696230"
  },
  {
    "text": "of grains it's really should be to them an implementation detail so another one",
    "start": "696230",
    "end": "704030"
  },
  {
    "text": "of these is the the second example a task you know a task has nothing to do",
    "start": "704030",
    "end": "710900"
  },
  {
    "text": "with an asynchronous operation if you look up the definition of tasks in English what a task is is really it's a",
    "start": "710900",
    "end": "719960"
  },
  {
    "text": "series of steps that are required to carry out you know something to",
    "start": "719960",
    "end": "725000"
  },
  {
    "text": "completion from beginning to completion and generally speaking a task in this case is just an asynchronous a way to",
    "start": "725000",
    "end": "732710"
  },
  {
    "text": "complete an asynchronous operation and we're not only leaking the not dotnet",
    "start": "732710",
    "end": "741320"
  },
  {
    "text": "framework in which has very little if any meaning other than its you know it's",
    "start": "741320",
    "end": "748370"
  },
  {
    "text": "sort of a it's sort of a glyph to us so tasks doesn't mean tasks it just means",
    "start": "748370",
    "end": "755690"
  },
  {
    "text": "something like at some future point you'll see an outcome to your request",
    "start": "755690",
    "end": "762200"
  },
  {
    "text": "and it probably means you want to await for it so so to us as programmers we just understand that as you know we just",
    "start": "762200",
    "end": "769130"
  },
  {
    "text": "sort of visually filter it and we know that it has no meaning to the business and so you know it's just sort of an",
    "start": "769130",
    "end": "775940"
  },
  {
    "text": "artifice that we've been has been foisted on us by authors of Technology",
    "start": "775940",
    "end": "783950"
  },
  {
    "text": "frameworks and then you know of course we have the async keyword and of course",
    "start": "783950",
    "end": "789800"
  },
  {
    "text": "if we're going to use the async keyword we should follow the naming conventions of Microsoft's async",
    "start": "789800",
    "end": "797420"
  },
  {
    "text": "advice and that is named our methods with the word async in them of course",
    "start": "797420",
    "end": "803090"
  },
  {
    "text": "this means nothing to the business it adds no value to them it's just noise",
    "start": "803090",
    "end": "808390"
  },
  {
    "text": "and even the fact that we're saying create and get I mean these aren't",
    "start": "808390",
    "end": "813590"
  },
  {
    "text": "really useful words in the in the API or the domain model whatever this this",
    "start": "813590",
    "end": "821120"
  },
  {
    "text": "language represents get is you know sort of a really a useful word or useless",
    "start": "821120",
    "end": "828710"
  },
  {
    "text": "word and create is just very crud like I mean is there is there not some other way to describe how we are going to",
    "start": "828710",
    "end": "837740"
  },
  {
    "text": "start a game other than create and you know so I just think that that these problems that we see are just driven by",
    "start": "837740",
    "end": "846680"
  },
  {
    "text": "our addiction to technology and it just gives software developers like us a very",
    "start": "846680",
    "end": "853280"
  },
  {
    "text": "bad reputation with the business because we are not really concerned with the",
    "start": "853280",
    "end": "858650"
  },
  {
    "text": "business we are just addicted to and pleasing our own you know sort of technical technically driven minds and",
    "start": "858650",
    "end": "866720"
  },
  {
    "text": "our addiction to that so I think that we need to kind of stop and and take stock",
    "start": "866720",
    "end": "872480"
  },
  {
    "text": "of where we are in this and really gives good consideration to where we're headed",
    "start": "872480",
    "end": "877640"
  },
  {
    "text": "or where we should be headed so where",
    "start": "877640",
    "end": "882770"
  },
  {
    "text": "are we going well a lot of people want to use domain driven design today since",
    "start": "882770",
    "end": "891320"
  },
  {
    "text": "my red book was released ddd has gotten",
    "start": "891320",
    "end": "897020"
  },
  {
    "text": "a lot more popular and there are several making efforts to to get people to",
    "start": "897020",
    "end": "904250"
  },
  {
    "text": "embrace domain driven design for the good that it does but it's also kind of turned into a buzzword as well and you",
    "start": "904250",
    "end": "912650"
  },
  {
    "text": "know everybody wants to use bounded context and talk about the aggregate pattern and and so forth but you know we",
    "start": "912650",
    "end": "920960"
  },
  {
    "text": "rarely see those same people trying to drive out a good ubiquitous language so",
    "start": "920960",
    "end": "927100"
  },
  {
    "text": "the bounded context is about a boundary around a ubiquitous language ubiquitous",
    "start": "927100",
    "end": "933590"
  },
  {
    "text": "language represents the or is a name for a language that a team develops to",
    "start": "933590",
    "end": "939650"
  },
  {
    "text": "express business concepts as well-defined lis language terms that the",
    "start": "939650",
    "end": "947060"
  },
  {
    "text": "business uses in this specific context and the context tends to be small and so",
    "start": "947060",
    "end": "952160"
  },
  {
    "text": "these bound that contexts lend themselves quite well to implementing",
    "start": "952160",
    "end": "957200"
  },
  {
    "text": "micro services if you know you you consider perhaps a more liberal view of",
    "start": "957200",
    "end": "964730"
  },
  {
    "text": "what a micro service is than this tiny single entity type so I think that",
    "start": "964730",
    "end": "971930"
  },
  {
    "text": "bounded context is quite useful and I think it's a place where a lot more",
    "start": "971930",
    "end": "977690"
  },
  {
    "text": "software should should be applying designs I also think that reactive is",
    "start": "977690",
    "end": "986180"
  },
  {
    "start": "983000",
    "end": "983000"
  },
  {
    "text": "quite important again modern hardware architectures are are really based on",
    "start": "986180",
    "end": "996400"
  },
  {
    "text": "the you know supporting software so that it can operate simultaneously with other",
    "start": "996400",
    "end": "1002820"
  },
  {
    "text": "operations even in the same application so it's not just multi processing as in",
    "start": "1002820",
    "end": "1009430"
  },
  {
    "text": "multiple processes running but it's multi-threaded in that a single a single",
    "start": "1009430",
    "end": "1016570"
  },
  {
    "text": "process or a single application or service can have many things happening at one time and it's also non blocking",
    "start": "1016570",
    "end": "1025060"
  },
  {
    "text": "so when you consider that there could be millions of these asynchronous",
    "start": "1025060",
    "end": "1032860"
  },
  {
    "text": "operations running we don't want any one of those operations to block because you",
    "start": "1032860",
    "end": "1040180"
  },
  {
    "text": "know someone's waiting for a web request to complete or the database or some sort",
    "start": "1040180",
    "end": "1048160"
  },
  {
    "text": "of heavy calculation instead we should be able to utilize threads while we're",
    "start": "1048160",
    "end": "1053470"
  },
  {
    "text": "waiting on those operations to occur and and not block on anything or greatly",
    "start": "1053470",
    "end": "1059020"
  },
  {
    "text": "reduce the amount of blocking that we do so this represents the actor model where",
    "start": "1059020",
    "end": "1064190"
  },
  {
    "text": "the sender and receiver are actors and the sender is sending messages or a",
    "start": "1064190",
    "end": "1071870"
  },
  {
    "text": "message to the receiver and the message is sent asynchronously it's the sender never blocks it doesn't block on waiting",
    "start": "1071870",
    "end": "1081080"
  },
  {
    "text": "for the receiver to either receive the message or process it instead the sender continues on its way after the message",
    "start": "1081080",
    "end": "1088970"
  },
  {
    "text": "is in queued for the receiver to process at a later time and the receiver will eventually process",
    "start": "1088970",
    "end": "1095300"
  },
  {
    "text": "this and I mean eventually not in terms of minutes but in terms of you know",
    "start": "1095300",
    "end": "1100580"
  },
  {
    "text": "nanoseconds or microseconds so overall the actor model is designed to help you",
    "start": "1100580",
    "end": "1108650"
  },
  {
    "text": "process information much more rapidly spread out right so your time factor is",
    "start": "1108650",
    "end": "1117140"
  },
  {
    "text": "spread out basically horizontally so you're doing more at once instead of",
    "start": "1117140",
    "end": "1122360"
  },
  {
    "text": "doing a few things faster then you could you know in parallel event-driven I",
    "start": "1122360",
    "end": "1131590"
  },
  {
    "start": "1129000",
    "end": "1129000"
  },
  {
    "text": "think that event-driven is quite important and you've probably heard a lot about event sourcing and of course",
    "start": "1131590",
    "end": "1141380"
  },
  {
    "text": "you know event sourcing it is an important pattern when you need it but you don't have to be vent sourced to be",
    "start": "1141380",
    "end": "1148700"
  },
  {
    "text": "event-driven and so there are ways to sort of gradually introduce event-driven",
    "start": "1148700",
    "end": "1154600"
  },
  {
    "text": "architectures into your platform and event-driven is naturally an",
    "start": "1154600",
    "end": "1160160"
  },
  {
    "text": "asynchronous and reactive model or architecture okay so I'm gonna date",
    "start": "1160160",
    "end": "1169040"
  },
  {
    "text": "myself here at least a little bit back in the year 1986 I was I was contacted",
    "start": "1169040",
    "end": "1177320"
  },
  {
    "text": "by Microsoft and you know I had a I don't even remember exactly maybe four",
    "start": "1177320",
    "end": "1185330"
  },
  {
    "text": "years of programming experience at the time but I knew a lot about the UNIX kernel and",
    "start": "1185330",
    "end": "1193000"
  },
  {
    "text": "the eunuchs what we call back then IPC inter-process communications and",
    "start": "1193550",
    "end": "1200450"
  },
  {
    "text": "Microsoft and IBM were coming out with this new operating system called os/2 and so I was asked to help write a book",
    "start": "1200450",
    "end": "1209580"
  },
  {
    "text": "about this and the book was named the advance C programmers guide to os/2 and",
    "start": "1209580",
    "end": "1215180"
  },
  {
    "text": "I got to use a very early alpha build of of os/2 which at the time was codenamed",
    "start": "1215180",
    "end": "1221030"
  },
  {
    "text": "DOS to 86-dos and what I did with the",
    "start": "1221030",
    "end": "1227640"
  },
  {
    "text": "API as as an example for our book was I implemented basically a Windows or",
    "start": "1227640",
    "end": "1233690"
  },
  {
    "text": "presentation manager knockoff that worked in character mode but was completely asynchronous multi-process",
    "start": "1233690",
    "end": "1239490"
  },
  {
    "text": "sees and everything sort of like attached to a desktop and you know everything worked a synchronously and I",
    "start": "1239490",
    "end": "1246570"
  },
  {
    "text": "never thought that I would ever be able to scare Bill Gates but I did because he was like no no we shut this down because",
    "start": "1246570",
    "end": "1254130"
  },
  {
    "text": "we want you know everyone to be using presentation manager which then actually",
    "start": "1254130",
    "end": "1260190"
  },
  {
    "text": "when Microsoft and IBM broke up you know that this was now going to be Windows",
    "start": "1260190",
    "end": "1265980"
  },
  {
    "text": "Windows three windows three one for Microsoft but in other words you know go",
    "start": "1265980",
    "end": "1271470"
  },
  {
    "text": "back 33 years or so and this is what I",
    "start": "1271470",
    "end": "1276540"
  },
  {
    "text": "was doing back then so you know this this whole idea of asynchronous is not",
    "start": "1276540",
    "end": "1281670"
  },
  {
    "text": "new to me and you know it's always been very interesting but there's really",
    "start": "1281670",
    "end": "1287100"
  },
  {
    "text": "nothing to be afraid of with this it is a little bit different way of thinking but what you are really doing is mostly",
    "start": "1287100",
    "end": "1293580"
  },
  {
    "text": "just processing messages and if you've ever done windows programming at all or",
    "start": "1293580",
    "end": "1298770"
  },
  {
    "text": "any sort of you know GUI work where there's an event loop that's essentially",
    "start": "1298770",
    "end": "1305340"
  },
  {
    "text": "message processing so a window on in Windows is basically an actor you know",
    "start": "1305340",
    "end": "1312780"
  },
  {
    "text": "you can think of it as an actor so it's really not a complex thing to understand",
    "start": "1312780",
    "end": "1318470"
  },
  {
    "text": "all right so let's say that we want to go reactive and that we do want to use",
    "start": "1318470",
    "end": "1325600"
  },
  {
    "text": "fluency what what does that mean for our current platform investment our language investment do we have to switch",
    "start": "1325600",
    "end": "1333009"
  },
  {
    "text": "languages do we have to make other compromises maybe even lacking",
    "start": "1333009",
    "end": "1339249"
  },
  {
    "text": "testability because we want to use a new technology or new kind of programming",
    "start": "1339249",
    "end": "1346470"
  },
  {
    "text": "model well I think that a tool that that",
    "start": "1346470",
    "end": "1352989"
  },
  {
    "text": "supports reactive and for that matter reactive ddd should have specific",
    "start": "1352989",
    "end": "1358899"
  },
  {
    "text": "qualities about it that don't make you compromise around these things so one",
    "start": "1358899",
    "end": "1364090"
  },
  {
    "start": "1362000",
    "end": "1362000"
  },
  {
    "text": "question is what is fluent and where should fluency you know play a major",
    "start": "1364090",
    "end": "1372159"
  },
  {
    "text": "role in the software that you write so here's one example of a concept called",
    "start": "1372159",
    "end": "1379779"
  },
  {
    "start": "1374000",
    "end": "1374000"
  },
  {
    "text": "completes and you know this actually is an accurate description of what can",
    "start": "1379779",
    "end": "1387309"
  },
  {
    "text": "happen with a method where you invoke a method that actually performs a an",
    "start": "1387309",
    "end": "1394059"
  },
  {
    "text": "asynchronous message send and the type that you get back is something that will",
    "start": "1394059",
    "end": "1400409"
  },
  {
    "text": "complete at some point in in the future and it has a certain type so you could",
    "start": "1400409",
    "end": "1406779"
  },
  {
    "text": "you could think of this as sort of equivalent to tasks or Java future and",
    "start": "1406779",
    "end": "1413409"
  },
  {
    "text": "other languages that that support the idea of future but you know that this",
    "start": "1413409",
    "end": "1420639"
  },
  {
    "text": "gives you the opportunity to not only complete at some point in the future but",
    "start": "1420639",
    "end": "1426609"
  },
  {
    "text": "you don't have to pardon me you don't",
    "start": "1426609",
    "end": "1431830"
  },
  {
    "text": "have to express your solution in terms of awaiting instead you just naturally say for example component dot do",
    "start": "1431830",
    "end": "1442330"
  },
  {
    "text": "something or or give me something and when that does complete at some future",
    "start": "1442330",
    "end": "1449289"
  },
  {
    "text": "time we just say something like and then and that pipes the asynchronous outcome",
    "start": "1449289",
    "end": "1455830"
  },
  {
    "text": "of of the actor result asynchronous result",
    "start": "1455830",
    "end": "1461429"
  },
  {
    "text": "into a function that that is available inside the and then and if we want to do",
    "start": "1461429",
    "end": "1470309"
  },
  {
    "text": "something further asynchronous we can pipe that to and then to which which is used to dispatch a nested completes to",
    "start": "1470309",
    "end": "1480199"
  },
  {
    "text": "yet another asynchronous operation within an actor and for example finally",
    "start": "1480199",
    "end": "1486179"
  },
  {
    "text": "you want to and then consume maybe where you don't want where you sort of want to complete the pipeline and just sort of",
    "start": "1486179",
    "end": "1493709"
  },
  {
    "text": "fall out of the of the threat of operation that you're using there and then on the other side when when you are",
    "start": "1493709",
    "end": "1500999"
  },
  {
    "text": "providing the completion from an asynchronous operation you simply have this fluent and expressive method that you use or",
    "start": "1500999",
    "end": "1510629"
  },
  {
    "text": "protocol that is wit called with and you simply say completes with and outcomes",
    "start": "1510629",
    "end": "1517679"
  },
  {
    "text": "so it reads fluently it sounds you know just like what you would expect if",
    "start": "1517679",
    "end": "1522719"
  },
  {
    "text": "you're speaking English and some people",
    "start": "1522719",
    "end": "1529049"
  },
  {
    "start": "1527000",
    "end": "1527000"
  },
  {
    "text": "might say yeah but you're not using a noun well it is the year 2019 and I'll",
    "start": "1529049",
    "end": "1537629"
  },
  {
    "text": "say that I have two comments about that you know there are lots of companies now that are nouns right if you're strict",
    "start": "1537629",
    "end": "1545249"
  },
  {
    "text": "about it but it's a de facto noun because it is the name of a thing and but to me what's really important is the",
    "start": "1545249",
    "end": "1553169"
  },
  {
    "text": "expression of fluency so when I can when I can program and say completes with and",
    "start": "1553169",
    "end": "1558379"
  },
  {
    "text": "and have that expression very fluent in",
    "start": "1558379",
    "end": "1563489"
  },
  {
    "text": "my model then you know that sort of overrides my my strong need to to use a",
    "start": "1563489",
    "end": "1571109"
  },
  {
    "text": "strict noun in that case because an au might just not sound quite as good ok so",
    "start": "1571109",
    "end": "1578399"
  },
  {
    "start": "1577000",
    "end": "1577000"
  },
  {
    "text": "then our actors have protocols these are interfaces and the protocol",
    "start": "1578399",
    "end": "1586159"
  },
  {
    "text": "may be like this for proposal we going to submit a proposal for a client",
    "start": "1586159",
    "end": "1591550"
  },
  {
    "text": "with expectations we may deny pricing and have a money of a suggested price",
    "start": "1591550",
    "end": "1597850"
  },
  {
    "text": "where we verify pricing and so this is part of our protocol and you would",
    "start": "1597850",
    "end": "1602860"
  },
  {
    "text": "expect for this protocol to be fluently implemented and used by a client so for",
    "start": "1602860",
    "end": "1609460"
  },
  {
    "start": "1605000",
    "end": "1605000"
  },
  {
    "text": "example in our client we would say proposal submit for client expectations right it just reads exactly like our",
    "start": "1609460",
    "end": "1617980"
  },
  {
    "text": "team and our business experts would speak about submitting a proposal",
    "start": "1617980",
    "end": "1623730"
  },
  {
    "text": "proposals submit for client expectations now note that this is not only fluent",
    "start": "1623730",
    "end": "1629170"
  },
  {
    "text": "but entirely asynchronous so when you see this it appears to be a method invocation and it is except behind this",
    "start": "1629170",
    "end": "1636670"
  },
  {
    "text": "method invocation the the invocation itself is reified into a message and the",
    "start": "1636670",
    "end": "1642040"
  },
  {
    "text": "message is sent asynchronously to the target actor that would be the actor behind the proposal and it's delivered",
    "start": "1642040",
    "end": "1649870"
  },
  {
    "text": "in an asynchronous fashion and you know at some point in the future this will complete also the API is fluent and that",
    "start": "1649870",
    "end": "1659200"
  },
  {
    "start": "1656000",
    "end": "1656000"
  },
  {
    "text": "if we're say that we're coming in through a rest endpoint which is also actor based and completely asynchronous",
    "start": "1659200",
    "end": "1665530"
  },
  {
    "text": "and we've now received a rest request -",
    "start": "1665530",
    "end": "1671220"
  },
  {
    "text": "for example verify pricing on a proposal and we tell the stage that we would like",
    "start": "1671220",
    "end": "1677530"
  },
  {
    "text": "the actor identified by the proposal ID and it's the the protocol that we want",
    "start": "1677530",
    "end": "1683410"
  },
  {
    "text": "as is a proposal and then - we're going to dispatch a verify pricing request to",
    "start": "1683410",
    "end": "1691180"
  },
  {
    "text": "that proposal that was found and just in case there was no proposal found we're going to answer a response of not found",
    "start": "1691180",
    "end": "1698790"
  },
  {
    "text": "otherwise we're going to serialize the proposal that was found and the result",
    "start": "1698790",
    "end": "1707020"
  },
  {
    "text": "of that and we're going to then take that serialized object and respond with",
    "start": "1707020",
    "end": "1712780"
  },
  {
    "text": "an okay that this actually succeeded so we're fluent not only in the model which",
    "start": "1712780",
    "end": "1719200"
  },
  {
    "text": "we can design fluently anyway but the API is fluent and it it's very readable and and makes sense",
    "start": "1719200",
    "end": "1725980"
  },
  {
    "text": "inside of course you would expect a proposal entity to you know it",
    "start": "1725980",
    "end": "1733520"
  },
  {
    "start": "1726000",
    "end": "1726000"
  },
  {
    "text": "implements the protocol proposal and it is event sourced in this case it doesn't",
    "start": "1733520",
    "end": "1739880"
  },
  {
    "text": "have to be there there should be other ways to use event-driven and and support",
    "start": "1739880",
    "end": "1745790"
  },
  {
    "text": "entities but this proposal is an event sourced entity and when it receives a",
    "start": "1745790",
    "end": "1752960"
  },
  {
    "text": "submit for ultimately it's going to apply a new proposal submitted event",
    "start": "1752960",
    "end": "1758890"
  },
  {
    "text": "with some parameters and that will be saved to an event journal and you know",
    "start": "1758890",
    "end": "1765170"
  },
  {
    "text": "further drive the event-driven nature of this of this bounded context okay so the",
    "start": "1765170",
    "end": "1773270"
  },
  {
    "start": "1772000",
    "end": "1772000"
  },
  {
    "text": "question is is this reactive yes it is it's reactive because like I said the",
    "start": "1773270",
    "end": "1778880"
  },
  {
    "text": "message is being is reified from the method invocation and sent asynchronously to the target actor that",
    "start": "1778880",
    "end": "1786050"
  },
  {
    "text": "is identified behind the proposal object and is it typesafe yes so all the types",
    "start": "1786050",
    "end": "1795890"
  },
  {
    "start": "1790000",
    "end": "1790000"
  },
  {
    "text": "are statically typed this is showing the java language but would work the same",
    "start": "1795890",
    "end": "1801170"
  },
  {
    "text": "way only initial upper case and the methods the method names so proposals",
    "start": "1801170",
    "end": "1807559"
  },
  {
    "text": "submit for client from a client ID expectations of a summary description",
    "start": "1807559",
    "end": "1812690"
  },
  {
    "text": "keywords and so forth right so this is all typesafe and so you're not you're",
    "start": "1812690",
    "end": "1819140"
  },
  {
    "text": "not paying a penalty such as you know if you're you've probably heard of maybe",
    "start": "1819140",
    "end": "1824179"
  },
  {
    "text": "akka dotnet which is designed in a very you know sort of dynamic typing fashion",
    "start": "1824179",
    "end": "1831950"
  },
  {
    "text": "but you can get strong typing if you implement it that way okay what about",
    "start": "1831950",
    "end": "1841100"
  },
  {
    "start": "1834000",
    "end": "1834000"
  },
  {
    "text": "the fact though that whenever you're using actors it's your environment is",
    "start": "1841100",
    "end": "1847190"
  },
  {
    "text": "non-deterministic right non-deterministic what that means is I send out a message to some actor and the",
    "start": "1847190",
    "end": "1855440"
  },
  {
    "text": "actor model actually you know which can kind of sound freaky to people at first it's and at most once",
    "start": "1855440",
    "end": "1863140"
  },
  {
    "text": "delivery contract between the sending actor and the receiving actor and so",
    "start": "1863140",
    "end": "1868809"
  },
  {
    "text": "you're like oh no come on you must be joking you mean I won't ever even know if the actor received my message well I",
    "start": "1868809",
    "end": "1875830"
  },
  {
    "text": "have to say that it is very very very very very very very very typically",
    "start": "1875830",
    "end": "1882400"
  },
  {
    "text": "received without any problem but if you're concerned that this message may",
    "start": "1882400",
    "end": "1889539"
  },
  {
    "text": "not be received then you simply you know protect yourself by a timeout or",
    "start": "1889539",
    "end": "1895570"
  },
  {
    "text": "something and then or even retry and I'll explain in a moment more about how",
    "start": "1895570",
    "end": "1901570"
  },
  {
    "text": "to deal with the uncertainty of this kind of environment than non-determinism but still you do have to think about it",
    "start": "1901570",
    "end": "1909370"
  },
  {
    "text": "and plan about it and when you know so this is uncertainty kind of at the at",
    "start": "1909370",
    "end": "1914950"
  },
  {
    "text": "the lower level at the object level and think of an actor like an object it's",
    "start": "1914950",
    "end": "1919960"
  },
  {
    "text": "just really a an object that receives stimulus asynchronously but you also",
    "start": "1919960",
    "end": "1927820"
  },
  {
    "text": "have an uncertainty at the big picture where you're working across bounded contexts because events are flying",
    "start": "1927820",
    "end": "1934210"
  },
  {
    "text": "around everywhere pretty much all the time and so how do you deal with that uncertainty so look at some you know",
    "start": "1934210",
    "end": "1944110"
  },
  {
    "start": "1940000",
    "end": "1940000"
  },
  {
    "text": "maybe this afternoon or this evening and an article by a man named Pat Helland",
    "start": "1944110",
    "end": "1949780"
  },
  {
    "text": "Pat Helen used to work at at Amazon and",
    "start": "1949780",
    "end": "1954840"
  },
  {
    "text": "this was back in the early days of Amazon and he was asked to you know make",
    "start": "1954840",
    "end": "1960039"
  },
  {
    "text": "Amazon this hugely scalable very reliable environment to of computing for",
    "start": "1960039",
    "end": "1967299"
  },
  {
    "text": "ordering you know buying stuff online and Pat Holland had previously been an",
    "start": "1967299",
    "end": "1972760"
  },
  {
    "text": "expert and no doubt still is an expert in X a or global transactions and Pat",
    "start": "1972760",
    "end": "1979000"
  },
  {
    "text": "Holland you know came in to Amazon thinking that he was going to use global transactions to make Amazon click and",
    "start": "1979000",
    "end": "1988030"
  },
  {
    "text": "what he found out is that global transactions don't scale and hopefully you already know that because",
    "start": "1988030",
    "end": "1994780"
  },
  {
    "text": "there there should be plenty of empirical data now that says that global",
    "start": "1994780",
    "end": "2000330"
  },
  {
    "text": "transactions don't scale so what Pat Helen said is well we'll have to use",
    "start": "2000330",
    "end": "2005760"
  },
  {
    "text": "eventual consistency to make this scale so if you're writing trying to solve",
    "start": "2005760",
    "end": "2011190"
  },
  {
    "text": "problems at scale what Pat Helen says is if you want to solve these problems",
    "start": "2011190",
    "end": "2018540"
  },
  {
    "text": "without global transactions you're going to have to solve the problems with",
    "start": "2018540",
    "end": "2023670"
  },
  {
    "text": "business logic in the business logic so you would expect then with domain-driven",
    "start": "2023670",
    "end": "2029850"
  },
  {
    "text": "design that our our business logic is pushed down into our domain mouch so you",
    "start": "2029850",
    "end": "2035070"
  },
  {
    "text": "would probably expect to see that implemented there and in fact we can so",
    "start": "2035070",
    "end": "2040080"
  },
  {
    "text": "here's here's something to think about a proposal goes through several stages of",
    "start": "2040080",
    "end": "2045630"
  },
  {
    "text": "its life cycle and it does so very quickly when when a client proposes",
    "start": "2045630",
    "end": "2054388"
  },
  {
    "text": "something they are proposing according to some tasks that need to be done a",
    "start": "2054389",
    "end": "2060290"
  },
  {
    "text": "price and a schedule at a minimum these are the three things that the the client",
    "start": "2060290",
    "end": "2066090"
  },
  {
    "text": "has in mind they could be wrong about everything they could be wrong about the",
    "start": "2066090",
    "end": "2071580"
  },
  {
    "text": "task that they're asking to be to performed they could be wrong about the",
    "start": "2071580",
    "end": "2077070"
  },
  {
    "text": "price that they're willing to ask if the task is completed and they could be",
    "start": "2077070",
    "end": "2086040"
  },
  {
    "text": "wrong about the schedule if they have the other two things correct and that maybe no one is available to work on",
    "start": "2086040",
    "end": "2092340"
  },
  {
    "text": "this task at the time that they expect to have it completed so what we need to",
    "start": "2092340",
    "end": "2097350"
  },
  {
    "text": "do is go outside of our matching context which we're in right now with the proposal because we're trying to match",
    "start": "2097350",
    "end": "2103460"
  },
  {
    "text": "two individuals together based on a proposal and and we're going to have to",
    "start": "2103460",
    "end": "2110160"
  },
  {
    "text": "see this completed by other bounded context okay so how do we do that when",
    "start": "2110160",
    "end": "2115680"
  },
  {
    "text": "we're undetermined istic you know we we can't determine okay when will the",
    "start": "2115680",
    "end": "2120930"
  },
  {
    "text": "pricing be verified or rejected when will the calendar schedule be",
    "start": "2120930",
    "end": "2126060"
  },
  {
    "text": "verified or rejected when will we know if there's even anyone who can perform this task for us well and if we do find",
    "start": "2126060",
    "end": "2135400"
  },
  {
    "text": "out any of these things when will it happen will they happen in the order that we're hoping for or not so there's",
    "start": "2135400",
    "end": "2141640"
  },
  {
    "text": "just all kinds of indeterminate in deterministic outcomes in this and so",
    "start": "2141640",
    "end": "2148930"
  },
  {
    "text": "you might you know it just might sort of fry your brain but think about this if we just simply model this at the heart",
    "start": "2148930",
    "end": "2154750"
  },
  {
    "text": "of our software and the domain model as a progress it becomes much simpler so",
    "start": "2154750",
    "end": "2162370"
  },
  {
    "text": "for example we're going to model a progress that has several step",
    "start": "2162370",
    "end": "2169440"
  },
  {
    "text": "verifications that that occur so you can either verify pricing or reject pricing",
    "start": "2169440",
    "end": "2176400"
  },
  {
    "text": "and you can either verify a scheduling or you can reject the scheduling or deny",
    "start": "2176400",
    "end": "2182890"
  },
  {
    "text": "the scheduling you can either find someone to work on the task or you can't",
    "start": "2182890",
    "end": "2189820"
  },
  {
    "text": "and so at any given point we can just simply ask as things transition through",
    "start": "2189820",
    "end": "2196840"
  },
  {
    "text": "this actor through the proposal actor what does the progress say that we where",
    "start": "2196840",
    "end": "2202240"
  },
  {
    "text": "we are right now we actually do not have to care at what in what order these",
    "start": "2202240",
    "end": "2207430"
  },
  {
    "text": "things are carried out instead we simply decide we're just going to know when",
    "start": "2207430",
    "end": "2213190"
  },
  {
    "text": "they are carried out and once we have received a point where we can take a further step beyond this step we'll",
    "start": "2213190",
    "end": "2221890"
  },
  {
    "text": "simply ask the progress are we at a point where we're considered far enough along that we can take our next step if",
    "start": "2221890",
    "end": "2228190"
  },
  {
    "text": "yes we do otherwise we just go dormant again until something else happens in the future so this is actually you know",
    "start": "2228190",
    "end": "2236770"
  },
  {
    "text": "a very simple way to model the uncertainty that's way easier than",
    "start": "2236770",
    "end": "2242880"
  },
  {
    "text": "trying to implement message D duplicators and message resequencing out",
    "start": "2242880",
    "end": "2249250"
  },
  {
    "text": "at the boundary of your bounded context right and unfortunately that's the advice that a lot of people will give",
    "start": "2249250",
    "end": "2255700"
  },
  {
    "text": "you but instead just model it right here because this is where you need to know and you you can easily accept that",
    "start": "2255700",
    "end": "2262400"
  },
  {
    "text": "networks happen we're working in the network we work on the cloud these days everything is really indeterminate and",
    "start": "2262400",
    "end": "2268760"
  },
  {
    "text": "so just accept it embrace it and deal with it through a simple domain model",
    "start": "2268760",
    "end": "2274750"
  },
  {
    "text": "okay so everybody's going micro-services right and if if everybody's going",
    "start": "2274750",
    "end": "2280010"
  },
  {
    "text": "microservices that means we want to go micro-services so this is a big deal I",
    "start": "2280010",
    "end": "2286850"
  },
  {
    "text": "think an important question is what's the size of your micro service you know",
    "start": "2286850",
    "end": "2292880"
  },
  {
    "text": "is it a is it a biggish micro service a medium or a just write really small",
    "start": "2292880",
    "end": "2298280"
  },
  {
    "text": "micro service so you know you'll get a lot of answers to this but here's the",
    "start": "2298280",
    "end": "2303290"
  },
  {
    "start": "2302000",
    "end": "2302000"
  },
  {
    "text": "important thing right you need to understand that this is what the business wants so this is what comes",
    "start": "2303290",
    "end": "2308810"
  },
  {
    "text": "first for us to keep our jobs and have fun with technology we really need to",
    "start": "2308810",
    "end": "2314180"
  },
  {
    "text": "cooperate with the business but it you also recognize this as your job right so if the business wants this what we want",
    "start": "2314180",
    "end": "2320690"
  },
  {
    "text": "to do is convince them that they really want this alright so these are the micro",
    "start": "2320690",
    "end": "2326060"
  },
  {
    "text": "service dollars the nice neat well-arranged dollars so let's look at",
    "start": "2326060",
    "end": "2333800"
  },
  {
    "text": "some definitions then what is legacy legacy is something that makes money if",
    "start": "2333800",
    "end": "2339320"
  },
  {
    "text": "it wasn't making money it wouldn't be legacy it would be unplugged right okay",
    "start": "2339320",
    "end": "2348520"
  },
  {
    "text": "legacy monolith you know the word monolith has gotten this really bad rap",
    "start": "2348760",
    "end": "2353800"
  },
  {
    "start": "2349000",
    "end": "2349000"
  },
  {
    "text": "recently because I think people when they say monolith what they really mean is big ball of mud because you can do a",
    "start": "2353800",
    "end": "2360380"
  },
  {
    "text": "lot worse than a monolith this is a well modularized model if it's a monolith that has nice loose coupling between",
    "start": "2360380",
    "end": "2368300"
  },
  {
    "text": "modules and and there's there's even something more special about this monolith that I'll point out soon so I",
    "start": "2368300",
    "end": "2375320"
  },
  {
    "start": "2374000",
    "end": "2374000"
  },
  {
    "text": "think what we're really talking about usually when we say monolith is the big ball of mud and yes there is a lot of",
    "start": "2375320",
    "end": "2383360"
  },
  {
    "text": "legacy a lot a lot of legacy that's a big ball of mud",
    "start": "2383360",
    "end": "2388520"
  },
  {
    "text": "but the question is what is a micro service what size is a micro service have you seen these definitions a micro",
    "start": "2388520",
    "end": "2395180"
  },
  {
    "text": "service is a hundred lines of code right now a micro service is 400 lines of code",
    "start": "2395180",
    "end": "2402170"
  },
  {
    "text": "anyone for a thousand lines of code would that be a better micro service so what happens if you do you know WC my SL",
    "start": "2402170",
    "end": "2409910"
  },
  {
    "text": "on a on your micro service source code and it's like four hundred and thirty",
    "start": "2409910",
    "end": "2416120"
  },
  {
    "text": "lines of code is that a bad micro service you know I mean depending on the",
    "start": "2416120",
    "end": "2422480"
  },
  {
    "text": "threshold that you set as an acceptable micro service well let me put it this",
    "start": "2422480",
    "end": "2428060"
  },
  {
    "text": "way right if you're developing 100 line micro services and that's sort of your",
    "start": "2428060",
    "end": "2434240"
  },
  {
    "text": "target for a good micro service be ready for something like this right we start",
    "start": "2434240",
    "end": "2439910"
  },
  {
    "text": "out and maybe we have 30 to 40 micro services and actually micro services at",
    "start": "2439910",
    "end": "2445670"
  },
  {
    "text": "this size I generally sixy success when they are limited to that number right we we",
    "start": "2445670",
    "end": "2453230"
  },
  {
    "text": "aren't creating huge numbers of them and anybody who gives you advice otherwise",
    "start": "2453230",
    "end": "2458840"
  },
  {
    "text": "well checking you know on that so you may you know don't these micro services",
    "start": "2458840",
    "end": "2464600"
  },
  {
    "text": "look like little big balls of mud so are they just little balls of mud is that",
    "start": "2464600",
    "end": "2470000"
  },
  {
    "text": "unfair well think about this for a moment you know after we have 30 to 40",
    "start": "2470000",
    "end": "2476810"
  },
  {
    "start": "2472000",
    "end": "2472000"
  },
  {
    "text": "micro services running we might even start to ask ourselves what if this",
    "start": "2476810",
    "end": "2481910"
  },
  {
    "text": "micro service over here our micro service number 23 isn't even useful anymore could we unplug it can we did",
    "start": "2481910",
    "end": "2489560"
  },
  {
    "text": "you know undeploy it and and and throw it away or you know archive it whatever and just not use it right now or would",
    "start": "2489560",
    "end": "2497570"
  },
  {
    "text": "that maybe cause catastrophic failure among the other 29 to 39 micro services",
    "start": "2497570",
    "end": "2503560"
  },
  {
    "text": "hmm oh I know what we'll do we just will",
    "start": "2503560",
    "end": "2509300"
  },
  {
    "text": "never unplug a micro service they only cost $400 a month so let's just keep",
    "start": "2509300",
    "end": "2515330"
  },
  {
    "text": "building micro services and deploy them and we don't have to worry about dependencies anywhere because hey what",
    "start": "2515330",
    "end": "2521460"
  },
  {
    "text": "$400 a month right and so that's why I drew these as little balls of mud",
    "start": "2521460",
    "end": "2528270"
  },
  {
    "text": "because really this is going to become a distributed big ball of mud where you",
    "start": "2528270",
    "end": "2534420"
  },
  {
    "text": "know we're putting all communication across all of these micro-services on",
    "start": "2534420",
    "end": "2539820"
  },
  {
    "text": "one or more topics in kafka and they're all sort of interdependent and coupled",
    "start": "2539820",
    "end": "2545250"
  },
  {
    "text": "through the through you know the the message bus or the message log and we",
    "start": "2545250",
    "end": "2552570"
  },
  {
    "text": "can really end up with a big mess and then think about all the infrastructure that's involved the actual computing",
    "start": "2552570",
    "end": "2557580"
  },
  {
    "text": "power to run these now I just want to say right like how big is a large system who here hat is working on a system",
    "start": "2557580",
    "end": "2564960"
  },
  {
    "start": "2558000",
    "end": "2558000"
  },
  {
    "text": "that's at least a million lines of code yeah more than that any with with more",
    "start": "2564960",
    "end": "2572480"
  },
  {
    "text": "to maybe 2 million I've worked on 2 million lines of code systems but those",
    "start": "2572480",
    "end": "2577890"
  },
  {
    "text": "weren't even really that complex I mean only I can only imagine that that you know some of these systems have got to",
    "start": "2577890",
    "end": "2584430"
  },
  {
    "text": "be at least 5 million lines of code or more you know so so think about that for",
    "start": "2584430",
    "end": "2589950"
  },
  {
    "text": "a minute now what we're gonna do is divide that let's just take 2 million and say let's divide those 2 million",
    "start": "2589950",
    "end": "2596040"
  },
  {
    "text": "lines of code up into 100 line of code microservices and that is about 20,000",
    "start": "2596040",
    "end": "2603420"
  },
  {
    "text": "microservices okay now just think about trying to administer those trying to",
    "start": "2603420",
    "end": "2608640"
  },
  {
    "text": "reason about them and then think about $400 a month for each right that's only",
    "start": "2608640",
    "end": "2614250"
  },
  {
    "text": "400 a month that's only 8 million dollars a month or 96 million dollars a",
    "start": "2614250",
    "end": "2619410"
  },
  {
    "text": "year to keep those running and then if you jump up to 5 years you know I mean you can do the math and I kind of think",
    "start": "2619410",
    "end": "2626280"
  },
  {
    "text": "that 240 million dollars to run 50,000 microservices is gonna get somebody",
    "start": "2626280",
    "end": "2632160"
  },
  {
    "text": "fired right so what about bounded",
    "start": "2632160",
    "end": "2637470"
  },
  {
    "start": "2634000",
    "end": "2634000"
  },
  {
    "text": "context what if we just didn't look at what if we just try to be reasonable about the size of software that we",
    "start": "2637470",
    "end": "2644730"
  },
  {
    "text": "deploy and really only deploy little tiny bits of software where it's useful",
    "start": "2644730",
    "end": "2649890"
  },
  {
    "text": "to do that and for everything else that doesn't have to be deployed that way justkeep bigger parts of it together but",
    "start": "2649890",
    "end": "2656370"
  },
  {
    "text": "let's not make it gigantic like a big ball of mud because that's problematic too so maybe you know it can be sort of",
    "start": "2656370",
    "end": "2662760"
  },
  {
    "text": "like the three bears and and you know the the just right porridge right so we're gonna make this just right",
    "start": "2662760",
    "end": "2669840"
  },
  {
    "text": "so consider bounded context as a first good stop for that now a function as a service I had a conversation recently",
    "start": "2669840",
    "end": "2676820"
  },
  {
    "text": "where someone was talking about you know I've got this calculation that cuts",
    "start": "2676820",
    "end": "2682500"
  },
  {
    "text": "across three different bounded contexts it's actually the exact same code where should I put that calculation should it",
    "start": "2682500",
    "end": "2689850"
  },
  {
    "text": "be in this bounded context should it be in that bounded or maybe I should put it in a bounded context of its own right I",
    "start": "2689850",
    "end": "2696630"
  },
  {
    "text": "said actually you know what function has a service would be a good place for that because it's just one function of as a",
    "start": "2696630",
    "end": "2703200"
  },
  {
    "text": "service and it's one single calculation and you can scale this as much as you want so have these three bounded",
    "start": "2703200",
    "end": "2711600"
  },
  {
    "text": "contexts depend on a single function as a service but why do we have to take",
    "start": "2711600",
    "end": "2717690"
  },
  {
    "text": "every single function that we write or method that we write and an entire large system and make it a function and deploy",
    "start": "2717690",
    "end": "2725880"
  },
  {
    "text": "it as a function all alone I just don't see the point in that unless it's",
    "start": "2725880",
    "end": "2731970"
  },
  {
    "text": "actually needed if the software calls for it so we have to pay more attention",
    "start": "2731970",
    "end": "2737790"
  },
  {
    "text": "to the strategic drivers than to the technical drivers or unfortunately",
    "start": "2737790",
    "end": "2744060"
  },
  {
    "text": "they're really not even technical drivers they're really technical desires that we have as technologists to try new",
    "start": "2744060",
    "end": "2750540"
  },
  {
    "text": "stuff and you know of course if things start going wrong we just leave the company and then it's someone else's",
    "start": "2750540",
    "end": "2756060"
  },
  {
    "text": "problem so try to think in terms of strategic progress in the software use a",
    "start": "2756060",
    "end": "2764220"
  },
  {
    "start": "2759000",
    "end": "2759000"
  },
  {
    "text": "tell to the object even if you're not using reactive tel objects what you want",
    "start": "2764220",
    "end": "2769440"
  },
  {
    "text": "them to do don't ask objects for data make a decision and then set data back on them",
    "start": "2769440",
    "end": "2775050"
  },
  {
    "text": "we're in such a bad habit of pulling data up multiple layers doing something",
    "start": "2775050",
    "end": "2780180"
  },
  {
    "text": "with it and pushing it all the way back down into the database but certain data",
    "start": "2780180",
    "end": "2785340"
  },
  {
    "text": "should just really be kept in one place and we simply ask the objects",
    "start": "2785340",
    "end": "2790440"
  },
  {
    "text": "to do things with it and that means that we can test it right we can we can write simple two line methods or four line",
    "start": "2790440",
    "end": "2798090"
  },
  {
    "start": "2792000",
    "end": "2792000"
  },
  {
    "text": "methods that that exercise you know actually execute the business logic that we want and then we then we can test it",
    "start": "2798090",
    "end": "2806160"
  },
  {
    "text": "try to try to test that anemic domain model with twenty five different attributes on it how many different ways",
    "start": "2806160",
    "end": "2812160"
  },
  {
    "text": "could a client set that data incorrectly there's hundreds of different ways",
    "start": "2812160",
    "end": "2817190"
  },
  {
    "text": "permutations that it could be set and correctly and remember that loosely coupled monolith that I showed you",
    "start": "2817190",
    "end": "2823560"
  },
  {
    "text": "before what if each one of those modules were bounded context you see you could",
    "start": "2823560",
    "end": "2829740"
  },
  {
    "text": "do a lot worse with the monolith such as creating a big ball of mud but if you have this loose coupling between bounded",
    "start": "2829740",
    "end": "2836520"
  },
  {
    "text": "contexts that are simply modules within a monolith you can do a lot better and",
    "start": "2836520",
    "end": "2841740"
  },
  {
    "text": "you know what this leads to this enables you to do things like this okay we want",
    "start": "2841740",
    "end": "2847890"
  },
  {
    "start": "2845000",
    "end": "2845000"
  },
  {
    "text": "to go to micro-services that's bounded context that's a pretty easy thing to achieve right when you're at that when",
    "start": "2847890",
    "end": "2854790"
  },
  {
    "text": "when you're starting from this position if you're not starting from this position and you're starting here going",
    "start": "2854790",
    "end": "2861660"
  },
  {
    "text": "from there to there is really hard you know I have companies get in touch with",
    "start": "2861660",
    "end": "2866880"
  },
  {
    "text": "me and they just want out of this they become paralyzed to the complexity of",
    "start": "2866880",
    "end": "2874110"
  },
  {
    "text": "the software that they've created over twenty or thirty years and sometimes even far less than that they've created",
    "start": "2874110",
    "end": "2880380"
  },
  {
    "text": "a real problem for themselves and they just want out and they're like Vaughn help us get out of this you know how",
    "start": "2880380",
    "end": "2885960"
  },
  {
    "text": "could we say get out of this and maybe a few months you know how long did it take",
    "start": "2885960",
    "end": "2892170"
  },
  {
    "text": "you to get there and you think that it's gonna take you a couple months to get out of it so you know what you really",
    "start": "2892170",
    "end": "2898260"
  },
  {
    "text": "have to do I'm gonna skip this but what you really have to do that was COBOL by",
    "start": "2898260",
    "end": "2904200"
  },
  {
    "start": "2900000",
    "end": "2900000"
  },
  {
    "text": "the way you should get out of COBOL if you're using COBOL just remember that most COBOL programmers now have great",
    "start": "2904200",
    "end": "2910830"
  },
  {
    "text": "grandchildren so get out of COBOL but if",
    "start": "2910830",
    "end": "2916770"
  },
  {
    "text": "you have something implemented in c-sharp or Java or whatever it has tends to be you know and you need to",
    "start": "2916770",
    "end": "2923970"
  },
  {
    "text": "break up the big ball of mud you really should take this in stepwise refinement you need to get to a well modularized",
    "start": "2923970",
    "end": "2930750"
  },
  {
    "text": "monolith before you can try to create micro-services and i have to say this is",
    "start": "2930750",
    "end": "2938520"
  },
  {
    "text": "hard this is hard but the alternative is even harder so what you need to do is focus on a change driven approach to",
    "start": "2938520",
    "end": "2945359"
  },
  {
    "text": "this where it's changed driven because the business needs changes in some kind",
    "start": "2945359",
    "end": "2950819"
  },
  {
    "text": "of behavior here features whatever here and you need to take stepwise",
    "start": "2950819",
    "end": "2956099"
  },
  {
    "text": "refinements that drive out real value for the business add tests to it and so",
    "start": "2956099",
    "end": "2961859"
  },
  {
    "text": "you have three different driver goals there to reach and eventually you can",
    "start": "2961859",
    "end": "2966900"
  },
  {
    "text": "finally chip away at this and hopefully end up with something more like this instead of a big ball of mud and then",
    "start": "2966900",
    "end": "2973470"
  },
  {
    "text": "going to micro-services is more doable",
    "start": "2973470",
    "end": "2979400"
  },
  {
    "text": "okay so let's talk about event-driven for a while you know we have this big",
    "start": "2979400",
    "end": "2988260"
  },
  {
    "start": "2983000",
    "end": "2983000"
  },
  {
    "text": "ball of mud and we want to start picking off features from it and and we want to",
    "start": "2988260",
    "end": "2995279"
  },
  {
    "text": "start you know moving them to a micro service so this is bypassing the step that I just showed you where it's a",
    "start": "2995279",
    "end": "3000619"
  },
  {
    "text": "stepwise refinement toward a well-organized a well modular eyes monolith and instead what we're doing is",
    "start": "3000619",
    "end": "3009589"
  },
  {
    "text": "we're gonna implement some triggers in the legacy database and every time that some row of data is updated we're gonna",
    "start": "3009589",
    "end": "3016819"
  },
  {
    "text": "we're gonna you know our trigger is going to tell us that and what we're going to do is produce a domain event",
    "start": "3016819",
    "end": "3022309"
  },
  {
    "text": "from that and we're going to tell other micro services that this thing happened",
    "start": "3022309",
    "end": "3027740"
  },
  {
    "text": "this is hard work because a lot of times the legacy database is a mess and a lot",
    "start": "3027740",
    "end": "3033829"
  },
  {
    "text": "of times you know just trying to deal with the legacy database itself as in",
    "start": "3033829",
    "end": "3040369"
  },
  {
    "text": "maybe you're using db2 and not even a more modern relational database you know",
    "start": "3040369",
    "end": "3046130"
  },
  {
    "text": "these things can become very challenging and so there are some tools like the bzm like Oracle GoldenGate",
    "start": "3046130",
    "end": "3053180"
  },
  {
    "text": "where you can you can listen to changes through the transaction log on the",
    "start": "3053180",
    "end": "3059029"
  },
  {
    "text": "database and you can use the transaction log instead of triggers to recognize that changes have been made now I just",
    "start": "3059029",
    "end": "3066200"
  },
  {
    "text": "want to point something out when you when you start making you know new",
    "start": "3066200",
    "end": "3072950"
  },
  {
    "text": "micro-services by by sort of strangling features out of the big ball of mud and",
    "start": "3072950",
    "end": "3079369"
  },
  {
    "text": "you start pointing users here the problem with this is or the challenge with it is that most of the users are",
    "start": "3079369",
    "end": "3087289"
  },
  {
    "text": "still going to use the big ball of mud through the user interface so you not",
    "start": "3087289",
    "end": "3092630"
  },
  {
    "text": "only need to push events toward the new micro services the new micro services",
    "start": "3092630",
    "end": "3097970"
  },
  {
    "text": "when they are changed through a user some sort of integration they also need to push events back to the big ball of",
    "start": "3097970",
    "end": "3105079"
  },
  {
    "text": "mud so that we can harmonize those those two sets of data because users are still",
    "start": "3105079",
    "end": "3111920"
  },
  {
    "text": "using the big ball of mud and we can't really get rid of that until we fully strangle it so there are various",
    "start": "3111920",
    "end": "3119900"
  },
  {
    "start": "3117000",
    "end": "3117000"
  },
  {
    "text": "restructuring techniques that you can go through maybe in you know like for example in this case we're using the the",
    "start": "3119900",
    "end": "3128230"
  },
  {
    "text": "transaction log listener to affect a query model it's interesting that I've",
    "start": "3128230",
    "end": "3136119"
  },
  {
    "text": "over the years while companies will tend to leave their big ball of mud in place",
    "start": "3136119",
    "end": "3141890"
  },
  {
    "text": "they will also replace their UI four or five times over a period of 10 years and",
    "start": "3141890",
    "end": "3147859"
  },
  {
    "text": "they use completely different technologies for for this and so it could be that while the big ball of mud",
    "start": "3147859",
    "end": "3154730"
  },
  {
    "text": "is still a real thing perhaps you can use this transaction log listener to",
    "start": "3154730",
    "end": "3162890"
  },
  {
    "text": "push out a query model and so you can use CQRS by continuing to use the",
    "start": "3162890",
    "end": "3168049"
  },
  {
    "text": "entities that exist in the big ball of mud for write-only in other words for command for a command model and use the",
    "start": "3168049",
    "end": "3175460"
  },
  {
    "text": "the transaction log listener to create a query model and that way you take the",
    "start": "3175460",
    "end": "3180920"
  },
  {
    "text": "hit on this kind of architecture mostly in the UI",
    "start": "3180920",
    "end": "3186230"
  },
  {
    "text": "instead of taking a lot of risk by tearing this monolith apart and then once you understand that pretty well",
    "start": "3186230",
    "end": "3192800"
  },
  {
    "text": "maybe you can start to affect better changes because now you have all that entanglement of of not only command",
    "start": "3192800",
    "end": "3200750"
  },
  {
    "text": "operations but query operations on the same model now maybe you can you know sort of tease those apart and create",
    "start": "3200750",
    "end": "3207910"
  },
  {
    "text": "more modular ism that way so you know ultimately we want to get sort of to",
    "start": "3207910",
    "end": "3213920"
  },
  {
    "text": "this point and we want our reactive rework to have an effect where we you",
    "start": "3213920",
    "end": "3220550"
  },
  {
    "start": "3215000",
    "end": "3215000"
  },
  {
    "text": "know simply have a number of bounded context with very few entity types not",
    "start": "3220550",
    "end": "3225680"
  },
  {
    "text": "one entity type but also not hundreds of entity types and and so you know we're going actually for that what is really a",
    "start": "3225680",
    "end": "3232790"
  },
  {
    "text": "just right micro service through a bounded context by by keeping things",
    "start": "3232790",
    "end": "3238580"
  },
  {
    "text": "together that are cohesively meant to be together and separating things linguistically so",
    "start": "3238580",
    "end": "3246430"
  },
  {
    "start": "3245000",
    "end": "3245000"
  },
  {
    "text": "you know these kinds of architectures are are possible not only through",
    "start": "3246430",
    "end": "3251780"
  },
  {
    "text": "reactive but reactive can be a very good place to go in the future and you know",
    "start": "3251780",
    "end": "3259880"
  },
  {
    "text": "this this represents a design that that I have in in you know the Ville Ingo platform which I can provide more",
    "start": "3259880",
    "end": "3266630"
  },
  {
    "text": "information on later but I just kind of wanted to wrap up leave some time for questions which I think we have about",
    "start": "3266630",
    "end": "3274250"
  },
  {
    "start": "3267000",
    "end": "3267000"
  },
  {
    "text": "five minutes and I just wanted to say I brought some swag with me which I normally do when I give talks and people",
    "start": "3274250",
    "end": "3280280"
  },
  {
    "text": "are like yeah right you know because I would like to have a free book so if you",
    "start": "3280280",
    "end": "3285590"
  },
  {
    "text": "ask a question I've got a couple books here and you can take your pick and then I've got some t-shirts too and so",
    "start": "3285590",
    "end": "3293500"
  },
  {
    "text": "anybody want to ask a question and get a book it doesn't even have to be about",
    "start": "3293500",
    "end": "3299150"
  },
  {
    "text": "software you know like you know like what are you gonna drink tonight Vaughn",
    "start": "3299150",
    "end": "3305300"
  },
  {
    "text": "you know something like that so I've got my red book implementing domain driven design and domain driven design distill",
    "start": "3305300",
    "end": "3312109"
  },
  {
    "text": "yep go for it",
    "start": "3312109",
    "end": "3315549"
  },
  {
    "text": "yeah yeah so I am talking from an oo perspective and there and if you're",
    "start": "3327450",
    "end": "3333430"
  },
  {
    "text": "doing functional programming it it's it's what I said isn't as applicable but",
    "start": "3333430",
    "end": "3339940"
  },
  {
    "text": "you still would like for the functions to be fluent right and you still want",
    "start": "3339940",
    "end": "3345280"
  },
  {
    "text": "the functions to be sort of cohesive around causing you know they're not just setting data they are actually",
    "start": "3345280",
    "end": "3351579"
  },
  {
    "text": "performing real business operations they",
    "start": "3351579",
    "end": "3360760"
  },
  {
    "text": "have what oh the Akkad net yeah yep yep yeah yeah",
    "start": "3360760",
    "end": "3375250"
  },
  {
    "text": "yeah so so we will be supporting functional programming and Vlingo right",
    "start": "3375250",
    "end": "3380710"
  },
  {
    "text": "now it's it's purely actors but actually the actors will work in a functional way",
    "start": "3380710",
    "end": "3387000"
  },
  {
    "text": "yeah well it's really not an anemic model it's really a functional record so it's it's just a different perspective",
    "start": "3399230",
    "end": "3404690"
  },
  {
    "text": "right so yeah but I mean functional there you know it's a real thing right",
    "start": "3404690",
    "end": "3411680"
  },
  {
    "text": "and and so we're going to support it but I'm not I'm not I wasn't addressing most of the audience based on function I'll",
    "start": "3411680",
    "end": "3418040"
  },
  {
    "text": "do that in the future so but I but again",
    "start": "3418040",
    "end": "3426920"
  },
  {
    "text": "I don't I don't consider a functional model to be anemic it's not it's a",
    "start": "3426920",
    "end": "3432650"
  },
  {
    "text": "different thing it's just the correct way to do functional programming whereas anemic domain model is talking",
    "start": "3432650",
    "end": "3439070"
  },
  {
    "text": "about the wrong way to create a programs right okay which book would you like the",
    "start": "3439070",
    "end": "3446839"
  },
  {
    "text": "little one or the big one yeah of course man that's like a $70 book now so but go",
    "start": "3446839",
    "end": "3454730"
  },
  {
    "text": "to Amazon I think you can get okay who wants this book oh good question",
    "start": "3454730",
    "end": "3460510"
  },
  {
    "text": "about fluency I don't think it has to I mean I've been doing OOW programming",
    "start": "3468940",
    "end": "3474050"
  },
  {
    "text": "since I'm not even gonna say it's so been so long but you know I a long time",
    "start": "3474050",
    "end": "3480200"
  },
  {
    "text": "yeah since like the mid-1980s and we used programming to be fluent we we used",
    "start": "3480200",
    "end": "3488810"
  },
  {
    "text": "oh oh because we knew that procedural programming was problematic in a lot of",
    "start": "3488810",
    "end": "3494930"
  },
  {
    "text": "different ways and we saw sort of this you know bright light of hope with oo",
    "start": "3494930",
    "end": "3500240"
  },
  {
    "text": "and we used it but what's really happened is the examples on the Internet",
    "start": "3500240",
    "end": "3506090"
  },
  {
    "text": "all around oh oh including the stuff that I showed you from dotnet framework",
    "start": "3506090",
    "end": "3511430"
  },
  {
    "text": "and and or leans they're just really horrible examples and they're teaching people how to do procedural programming",
    "start": "3511430",
    "end": "3518660"
  },
  {
    "text": "and they're teaching people how to name things really badly and and it's all",
    "start": "3518660",
    "end": "3524030"
  },
  {
    "text": "about technology instead of about the business and you know no I don't think",
    "start": "3524030",
    "end": "3529670"
  },
  {
    "text": "that oh and boilerplate no it had I mean small talk I I was programming in small",
    "start": "3529670",
    "end": "3534950"
  },
  {
    "text": "talk a long time ago using these very techniques and there was hardly any",
    "start": "3534950",
    "end": "3540410"
  },
  {
    "text": "boilerplate we did you know and and I can create Java without a lot of boilerplate so no I don't think the",
    "start": "3540410",
    "end": "3547490"
  },
  {
    "text": "language itself is a problem but would you like this book yeah okay all right",
    "start": "3547490",
    "end": "3555440"
  },
  {
    "text": "should I just start throwing t-shirts into the audience like they do it football games and stuff or okay so yeah",
    "start": "3555440",
    "end": "3563720"
  },
  {
    "text": "I think we're kind of out of time who would like a large of lingo t-shirt there you go and I've got a large I DDD",
    "start": "3563720",
    "end": "3571910"
  },
  {
    "text": "workshop t-shirt there you go yeah and let me see here a medium this here's a",
    "start": "3571910",
    "end": "3580190"
  },
  {
    "text": "medium who's a who's a medium",
    "start": "3580190",
    "end": "3583780"
  },
  {
    "text": "here's an excel not that you have to admit to being excel but maybe you just",
    "start": "3585519",
    "end": "3591559"
  },
  {
    "text": "like a really loose t-shirt and another Excel for Vlingo yeah not bad and then",
    "start": "3591559",
    "end": "3601519"
  },
  {
    "text": "I've got another medium there you go okay and I have a few pins and stickers",
    "start": "3601519",
    "end": "3606980"
  },
  {
    "text": "here after but thanks for attending I'd like to meet you if you want to come up [Applause]",
    "start": "3606980",
    "end": "3621459"
  }
]