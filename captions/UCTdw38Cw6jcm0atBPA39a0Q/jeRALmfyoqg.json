[
  {
    "start": "0",
    "end": "246000"
  },
  {
    "text": "hi welcome okay so the background of",
    "start": "4690",
    "end": "15610"
  },
  {
    "text": "this talk is which might be interesting to you because we are in Norway is um because I worked for the last three or",
    "start": "15610",
    "end": "23019"
  },
  {
    "text": "four years with the Norwegian government especially the healthcare sector because",
    "start": "23019",
    "end": "28449"
  },
  {
    "text": "they were basically redoing their infrastructure from you know more traditional style of security to an",
    "start": "28449",
    "end": "33580"
  },
  {
    "text": "OAuth and OpenID connect based system so you know part of that ongoing project",
    "start": "33580",
    "end": "41050"
  },
  {
    "text": "which is a huge bonus you can imagine is you know raising security awareness by for all the people that work or you know",
    "start": "41050",
    "end": "48879"
  },
  {
    "text": "that touch these systems so one deliverable if you like was to create a",
    "start": "48879",
    "end": "54520"
  },
  {
    "text": "training course that you know talks about OpenID connect and all security best practices and this is think of it",
    "start": "54520",
    "end": "60100"
  },
  {
    "text": "as like the 60 minute version of that so in some way this talk is sponsored by Norway okay oh yeah I have to warn you",
    "start": "60100",
    "end": "70630"
  },
  {
    "text": "though yeah when you start looking into these things you have to deal with documents that look like this okay so",
    "start": "70630",
    "end": "77140"
  },
  {
    "text": "that's a Korea font you know do you know the fun stops here right it's all serious now luckily they have a PDF",
    "start": "77140",
    "end": "83590"
  },
  {
    "text": "document for you a PDF version right so if that's too harsh for your eyes you",
    "start": "83590",
    "end": "89319"
  },
  {
    "text": "can try this one oh no you can't yeah yeah the other thing you have probably",
    "start": "89319",
    "end": "96280"
  },
  {
    "text": "you know have to get used to is things like this ASCII art okay so I really",
    "start": "96280",
    "end": "105220"
  },
  {
    "text": "hope someone has a tool for that they don't have to you know like space space space you know and you know the reason",
    "start": "105220",
    "end": "115209"
  },
  {
    "text": "why these documents look like this is basically goes all the way back because it's the ietf right I mean they they",
    "start": "115209",
    "end": "120550"
  },
  {
    "text": "made the internet right so it had to work on the very first browser that was ever in existence do you remember what",
    "start": "120550",
    "end": "127179"
  },
  {
    "text": "it was the protocol links looks like",
    "start": "127179",
    "end": "133150"
  },
  {
    "text": "this right so when I [Music]",
    "start": "133150",
    "end": "138590"
  },
  {
    "text": "what's the key combination here ctrl-g no anyways if you would open up that",
    "start": "138590",
    "end": "152489"
  },
  {
    "text": "same URL it would look exactly like what you just seen in Chrome okay and that's 30 years of backwards",
    "start": "152489",
    "end": "158940"
  },
  {
    "text": "compatibility and they even had dock mode right by then so you know okay good",
    "start": "158940",
    "end": "166760"
  },
  {
    "text": "my name is Dominick and you know I'm I'm working in that space for a very long",
    "start": "166760",
    "end": "173250"
  },
  {
    "text": "time I am the author of one of the the oh bloody connect certified open ID and",
    "start": "173250",
    "end": "179129"
  },
  {
    "text": "oh of implementation called identity server for yeah so I'm pretty much you know half the luxury and some people are",
    "start": "179129",
    "end": "185010"
  },
  {
    "text": "not clear what luxury means in this case of working full time with these things",
    "start": "185010",
    "end": "190290"
  },
  {
    "text": "okay I uploaded the slide deck to here",
    "start": "190290",
    "end": "195720"
  },
  {
    "text": "to speak attack.com slashed his privilege so if you want to have that slide that you can just download it right now if you want or you know after",
    "start": "195720",
    "end": "201450"
  },
  {
    "text": "the talk the rough plan is this give you a little bit of overview of what",
    "start": "201450",
    "end": "207060"
  },
  {
    "text": "security guidance is out there today you know help you with categorizing what",
    "start": "207060",
    "end": "212280"
  },
  {
    "text": "multiplies to you what does not apply to you where does it fit in into the big picture so to speak and then we had and",
    "start": "212280",
    "end": "218310"
  },
  {
    "text": "then I picked out a couple of interesting use cases here are some more common some maybe uncommon ones here",
    "start": "218310",
    "end": "223500"
  },
  {
    "text": "they are by far not all of the use cases that are described in this document so you you know that the call to action",
    "start": "223500",
    "end": "229919"
  },
  {
    "text": "would be afterwards start downloading these things they're tiny they're just text files no berries yeah and after",
    "start": "229919",
    "end": "237930"
  },
  {
    "text": "that I want to talk a bit a little bit about what's happening with or wolf in the future because there is some interesting thing going on right now",
    "start": "237930",
    "end": "243599"
  },
  {
    "text": "which will impact all of us okay this give me some context first okay so",
    "start": "243599",
    "end": "249269"
  },
  {
    "start": "246000",
    "end": "246000"
  },
  {
    "text": "the very first web-based protocol you know you would say it was sam'l to pee",
    "start": "249269",
    "end": "254849"
  },
  {
    "text": "yeah it was it basically invented the pattern that we all use today which is goes to some external provider get a",
    "start": "254849",
    "end": "261419"
  },
  {
    "text": "postback with some stuff okay and that's basically how do you all work openly Connect OFWs Federation similar and so",
    "start": "261419",
    "end": "267990"
  },
  {
    "text": "on so they basically invented this pattern if you like yeah sam'l sam'l was an authentication",
    "start": "267990",
    "end": "274320"
  },
  {
    "text": "protocol it didn't solve the API access problem because what guess what there were no API in 2005 right so Olaf was",
    "start": "274320",
    "end": "282270"
  },
  {
    "text": "invented to in addition solve the token-based API access problem but again",
    "start": "282270",
    "end": "287760"
  },
  {
    "text": "a wolf 1.0 is pretty old it used some old technology was hard to use actually",
    "start": "287760",
    "end": "293220"
  },
  {
    "text": "lots of crypto involved so in 2012 they came up with o of 2.0 and they made a",
    "start": "293220",
    "end": "299310"
  },
  {
    "text": "simplified version of OAuth not everybody was happy with that to be honest because the crypto was gone to",
    "start": "299310",
    "end": "304740"
  },
  {
    "text": "make it easier but security you could say was lower than in or of 1.0 if",
    "start": "304740",
    "end": "311520"
  },
  {
    "text": "you've you know Google for whatever what they do the original spec offer of the OAuth spec he left because it was so",
    "start": "311520",
    "end": "317040"
  },
  {
    "text": "angry with the IETF that they watered down his little protocol that he created in the first place and I think he had",
    "start": "317040",
    "end": "323520"
  },
  {
    "text": "good good points here umm one of the results of him being so angry is he",
    "start": "323520",
    "end": "330000"
  },
  {
    "text": "demanded you must publish a threat model with that right so you know certain things",
    "start": "330000",
    "end": "338310"
  },
  {
    "text": "you can do in awe of are insecure and the spec doesn't give you any guidance if you should do it like this or like",
    "start": "338310",
    "end": "343470"
  },
  {
    "text": "that or what's the right way of doing it right so they created this threat model",
    "start": "343470",
    "end": "349140"
  },
  {
    "text": "and security considerations document but imagine this was written at the same time respect was written so all that's",
    "start": "349140",
    "end": "355710"
  },
  {
    "text": "in there is what they knew by the time right and again since it Olaf wasn't it",
    "start": "355710",
    "end": "361740"
  },
  {
    "text": "not really applied to practical scenarios by the time they also couldn't",
    "start": "361740",
    "end": "367710"
  },
  {
    "text": "give you like really actionable guidance they could just point out that's a potential problem that's a potential problem and that's a potential problem",
    "start": "367710",
    "end": "373260"
  },
  {
    "text": "yeah but not saying telling you how to fix it exactly okay so you know that",
    "start": "373260",
    "end": "379110"
  },
  {
    "text": "that thing was out there for a while and then new specs got created yeah and just that's just a fraction of the specs",
    "start": "379110",
    "end": "386210"
  },
  {
    "text": "actually someone counted all the pages of these specs recently and he said it's doubled the size of war and peace which",
    "start": "386210",
    "end": "394020"
  },
  {
    "text": "i think is a pretty big book right so you decide what's more exciting to read but the point was this and many people",
    "start": "394020",
    "end": "401610"
  },
  {
    "text": "said like okay the phret model is old the phret model doesn't give us any guide can be produced new documents on top",
    "start": "401610",
    "end": "408420"
  },
  {
    "text": "that actually gives a developer real guidance in what to do okay and not just",
    "start": "408420",
    "end": "414389"
  },
  {
    "text": "what to potentially do ma'am and that's what they call the security or that the",
    "start": "414389",
    "end": "419790"
  },
  {
    "text": "best current practices PC piece yeah there is a reason why the word current",
    "start": "419790",
    "end": "424830"
  },
  {
    "text": "is in there right because the older they get the less current they are so they try to capture what happens at this",
    "start": "424830",
    "end": "430980"
  },
  {
    "text": "point in time and give it you know give you concrete guidance on how to implement things the first of them was",
    "start": "430980",
    "end": "437280"
  },
  {
    "text": "for native applications there are mobile apps ma'am because there was a big thing people started using OAuth for dead how",
    "start": "437280",
    "end": "444210"
  },
  {
    "text": "do you do it right as we speak there are two other very important PC piece being",
    "start": "444210",
    "end": "451950"
  },
  {
    "text": "worked on one is called the O of to o security topics PCP which you can think",
    "start": "451950",
    "end": "458490"
  },
  {
    "text": "of is an update to the threat model okay so what have we learned in the last eight years so to speak how OAuth was",
    "start": "458490",
    "end": "466229"
  },
  {
    "text": "applied and what from our point of view are now the current mitigation techniques what are the attacks and so",
    "start": "466229",
    "end": "471840"
  },
  {
    "text": "on and a very very important other one is the OAuth for Prowse abased",
    "start": "471840",
    "end": "477570"
  },
  {
    "text": "apps PCP right because as we all know browsers are the hardest thing to secure",
    "start": "477570",
    "end": "483919"
  },
  {
    "text": "you need a lot of guidance there okay so basically the talk is about the red",
    "start": "483919",
    "end": "490200"
  },
  {
    "text": "things here ma'am so if you want to put that into perspective the threat model was the mother of all PC piece if you",
    "start": "490200",
    "end": "496380"
  },
  {
    "text": "like then this one is a very general one which talks about OAuth in general and",
    "start": "496380",
    "end": "501390"
  },
  {
    "text": "then on top you see the two which which talk about very specific application scenarios and just recently two new ones",
    "start": "501390",
    "end": "507539"
  },
  {
    "text": "popped up which are not essential for our discussion but they belong to that",
    "start": "507539",
    "end": "513300"
  },
  {
    "text": "bigger picture one is how to use JSON web tokens securely in OAuth and then how to use JSON web token specifically",
    "start": "513300",
    "end": "520080"
  },
  {
    "text": "for access tokens because both never specified at open format yeah cool so",
    "start": "520080",
    "end": "526490"
  },
  {
    "text": "that's how a typical warf based system looks like or OpenID Connect based system looks like we have front ends we",
    "start": "526490",
    "end": "532530"
  },
  {
    "text": "have back ends we have seconds for back ends right we have users we have clients we have authentication we have Apix",
    "start": "532530",
    "end": "539700"
  },
  {
    "text": "and typically a thing called the security token service is what coordinates all these things like a",
    "start": "539700",
    "end": "544980"
  },
  {
    "text": "traffic cop if you like that hands out the tokens makes the access checks and and much more okay to simplify that what",
    "start": "544980",
    "end": "555150"
  },
  {
    "text": "oh of really how oh of really works is like this you have something called a",
    "start": "555150",
    "end": "560520"
  },
  {
    "start": "556000",
    "end": "556000"
  },
  {
    "text": "resource owner which is in my world a user which it's a better word for it you have a client which is an application",
    "start": "560520",
    "end": "566610"
  },
  {
    "text": "you have a resource server which is an API typically and you have this thing called the authorization server yeah and",
    "start": "566610",
    "end": "572360"
  },
  {
    "text": "regardless how you use o of it will always work like this you first go to the authorization server you get a token",
    "start": "572360",
    "end": "578460"
  },
  {
    "text": "and then you use that token to access the resource there are a couple of flavors but in essence that's how it",
    "start": "578460",
    "end": "584310"
  },
  {
    "text": "works now the very first thing to think about is when you're building such a",
    "start": "584310",
    "end": "589380"
  },
  {
    "text": "system who are my attackers right so if you want to secure the system you need to understand who is it who is attacking",
    "start": "589380",
    "end": "595560"
  },
  {
    "text": "them so and by the way I use the cheesiest symbol for an attacker that I",
    "start": "595560",
    "end": "601650"
  },
  {
    "start": "596000",
    "end": "596000"
  },
  {
    "text": "could find on the Internet yeah forgive me I guess but the very",
    "start": "601650",
    "end": "610380"
  },
  {
    "text": "first type of attack you have to think about is what if my infrastructure is compromised ok so somebody can read or",
    "start": "610380",
    "end": "617550"
  },
  {
    "text": "modify traffic or maybe can even you know tamper with my DNS infrastructure",
    "start": "617550",
    "end": "624330"
  },
  {
    "text": "yeah so one thing to think about is okay why can't why can they read and modify traffic because are you using TLS TLS it",
    "start": "624330",
    "end": "631980"
  },
  {
    "text": "is mandatory for a wharf ok um so you should never ever do anything I mean",
    "start": "631980",
    "end": "637530"
  },
  {
    "text": "anything yeah without TLS yeah but if your infrastructure is still compromised",
    "start": "637530",
    "end": "644820"
  },
  {
    "text": "and they can still read and modify traffic even over TLS you have a huge problem that we can solve as",
    "start": "644820",
    "end": "651810"
  },
  {
    "text": "implementers that's a whole nother world of you know problems so we have to rely",
    "start": "651810",
    "end": "659520"
  },
  {
    "text": "on that being intact ok um the next type",
    "start": "659520",
    "end": "665160"
  },
  {
    "text": "of attack would be the compromise of an endpoint itself yeah what what if the client is compromised what if the",
    "start": "665160",
    "end": "670710"
  },
  {
    "text": "authorization server is compromised what if the resource service promisor again from an OAuth implementer",
    "start": "670710",
    "end": "676330"
  },
  {
    "text": "point of view or from a protocol point of view there's not lot not a lot you can do about this you have to find out",
    "start": "676330",
    "end": "682060"
  },
  {
    "text": "why are these things compromised now you know you can't trust them this will be an insecure system let's",
    "start": "682060",
    "end": "690760"
  },
  {
    "text": "move on to something else which I think in my mind is the battleground of the future yeah they",
    "start": "690760",
    "end": "697300"
  },
  {
    "text": "don't have to moderate they don't have to compromise anything they add stuff to your system for example a rogue",
    "start": "697300",
    "end": "703020"
  },
  {
    "text": "authorization server or a rogue client or a rogue resource server and maybe",
    "start": "703020",
    "end": "708520"
  },
  {
    "text": "they even managed to register their rogue resource server with the legitimate authorization server or they",
    "start": "708520",
    "end": "713920"
  },
  {
    "text": "trick the legitimate client into using the rogue authorization server and you can imagine any permutation of that",
    "start": "713920",
    "end": "719920"
  },
  {
    "text": "being very problematic okay that's what we see today for very targeted attacks",
    "start": "719920",
    "end": "726190"
  },
  {
    "text": "here where someone specifically targets a certain application or company right",
    "start": "726190",
    "end": "731710"
  },
  {
    "text": "where maybe the implementation is really good but this might give you a lot of",
    "start": "731710",
    "end": "737080"
  },
  {
    "text": "avenue for confusion and unforeseen vulnerabilities in your system okay I'm",
    "start": "737080",
    "end": "744010"
  },
  {
    "text": "going to show you an example of that later sadly to be honest the 90% types",
    "start": "744010",
    "end": "749980"
  },
  {
    "text": "of warf attacks we see our implementation flaws right somebody has written an O of Server somebody has",
    "start": "749980",
    "end": "756370"
  },
  {
    "text": "written an OAuth client they didn't follow the best practices and stuff goes",
    "start": "756370",
    "end": "762940"
  },
  {
    "text": "wrong so for example the idea is that an attacker can read but not modify the",
    "start": "762940",
    "end": "768700"
  },
  {
    "text": "contents of the authorization request and the response okay this doesn't that does not necessarily need network access",
    "start": "768700",
    "end": "775360"
  },
  {
    "text": "this might only mean right maybe your application has a bug and you have an open redirector in there maybe somebody",
    "start": "775360",
    "end": "781720"
  },
  {
    "text": "can redirect the intercept intercept you with a redirection on a mobile device maybe you are leaking Network packages",
    "start": "781720",
    "end": "789190"
  },
  {
    "text": "like in log files or in proxies or in the browser history you know all of these things here these are by far the",
    "start": "789190",
    "end": "795940"
  },
  {
    "text": "mod of the most common attacks we see and the good news is they can all be fixed by writing the right code okay",
    "start": "795940",
    "end": "804180"
  },
  {
    "text": "good so the elephant in the room that's what",
    "start": "804180",
    "end": "810130"
  },
  {
    "text": "the whole oh of security discussion cut cut you know started again after being",
    "start": "810130",
    "end": "816880"
  },
  {
    "text": "torment for a while was this guy Osmond garage dead well respected colleague of",
    "start": "816880",
    "end": "822370"
  },
  {
    "text": "mine who wrote his blog post you should not use the oh of implicit grunt and you",
    "start": "822370",
    "end": "827410"
  },
  {
    "text": "might know that right the over fambissig grant was by the time D recommendation for implementing browser-based",
    "start": "827410",
    "end": "832510"
  },
  {
    "text": "applications here so he wrote this blog post and he used these words here this",
    "start": "832510",
    "end": "839770"
  },
  {
    "text": "might for example result in an attack attacker accessing your health records or initiating a payment from your bank",
    "start": "839770",
    "end": "845290"
  },
  {
    "text": "account and you could only imagine what happened the next day I got emails from",
    "start": "845290",
    "end": "851590"
  },
  {
    "text": "customers all over the place saying hey have you read this there's a new vulnerability you know of and I said no",
    "start": "851590",
    "end": "858700"
  },
  {
    "text": "that's not true it's not a new vulnerability it's a known weakness of this specific flow that you can mitigate",
    "start": "858700",
    "end": "866050"
  },
  {
    "text": "if you're writing the right code the problem is many companies don't write",
    "start": "866050",
    "end": "871510"
  },
  {
    "text": "the right code and it's and you know like the real problem with implicit flow is it's error-prone ok so just to recap",
    "start": "871510",
    "end": "879940"
  },
  {
    "text": "that what's what's the implicit flow the inviscid flow was invented to give JavaScript based applications an easy",
    "start": "879940",
    "end": "886840"
  },
  {
    "start": "880000",
    "end": "880000"
  },
  {
    "text": "way to request tokens from an authorization server given that cross-origin Ajax calls it not exist by",
    "start": "886840",
    "end": "895090"
  },
  {
    "text": "the time okay 2012 there was no cross air cross origin Ajax calls so they had",
    "start": "895090",
    "end": "900820"
  },
  {
    "text": "to find something that is purely working on URLs right so you asked this guy for a token you get back their token on the",
    "start": "900820",
    "end": "907570"
  },
  {
    "start": "906000",
    "end": "906000"
  },
  {
    "text": "URL okay and that is error-prone because as I said this URL ends I've been locked",
    "start": "907570",
    "end": "913990"
  },
  {
    "text": "files this URL ends up in the browser history and browser behavior has changed as how a hash fragment has been treated",
    "start": "913990",
    "end": "920680"
  },
  {
    "text": "for example and imagine referrer headers and you know it is troublesome ok it's",
    "start": "920680",
    "end": "926230"
  },
  {
    "text": "not that a new vulnerability has been discovered this was always the case from day one and to be honest the threat",
    "start": "926230",
    "end": "933130"
  },
  {
    "text": "model pointed this out explicitly but I guess no one read the phret model yeah",
    "start": "933130",
    "end": "939480"
  },
  {
    "text": "so long story short now today we have",
    "start": "939480",
    "end": "945089"
  },
  {
    "text": "course right the cross-origin resource sharing which allows us to do cross-origin HX course",
    "start": "945089",
    "end": "951430"
  },
  {
    "text": "which means we can use a different flow that you know uses HX which does not have to use URLs so implicit flow will",
    "start": "951430",
    "end": "960279"
  },
  {
    "text": "be deprecated okay no more implicit flow it's not needed anymore right it's it's",
    "start": "960279",
    "end": "966519"
  },
  {
    "text": "been cleared out of a need but it's not needed anymore and as I said it's not inherently insecure it's just error",
    "start": "966519",
    "end": "973240"
  },
  {
    "text": "prone to implement so we want to get rid of this okay that's action item number",
    "start": "973240",
    "end": "978459"
  },
  {
    "text": "one um while we are at deprecating stuff no more password current ok the past but",
    "start": "978459",
    "end": "985660"
  },
  {
    "start": "982000",
    "end": "982000"
  },
  {
    "text": "current was this very very old flow in a wharf where you collect the credentials of the user in the front end and then",
    "start": "985660",
    "end": "991060"
  },
  {
    "text": "send them to a token service and you get back a token this is bad practice all over okay you are encouraging users to",
    "start": "991060",
    "end": "999880"
  },
  {
    "text": "type in passwords in different places research has shown the more often a user types in the password they're more prone",
    "start": "999880",
    "end": "1006329"
  },
  {
    "text": "they are too phishing attacks for example and you know this is not compatible with any of the of the modern",
    "start": "1006329",
    "end": "1012540"
  },
  {
    "text": "authentication techniques like Fido to of a Federation and so on it's still",
    "start": "1012540",
    "end": "1017640"
  },
  {
    "text": "widely in use mostly for legacy or for other reasons that to be the only",
    "start": "1017640",
    "end": "1023279"
  },
  {
    "text": "product owners know again this is going to be deprecated that's action item",
    "start": "1023279",
    "end": "1029188"
  },
  {
    "text": "number two don't use it so which is quite nice that's good you know we",
    "start": "1029189",
    "end": "1035220"
  },
  {
    "text": "improve by reduction so to speak yeah when you know I'm doing is oh of",
    "start": "1035220",
    "end": "1040740"
  },
  {
    "text": "training for a long time and that was kind of like that netted the decision matrix at the end of a training right if",
    "start": "1040740",
    "end": "1046230"
  },
  {
    "text": "you're doing this use this flow if you're doing this use this or that or that if you're doing this use this or this or that yeah",
    "start": "1046230",
    "end": "1052559"
  },
  {
    "text": "now I have crossed out the deprecated ones and it turns out as I'll show you",
    "start": "1052559",
    "end": "1057720"
  },
  {
    "text": "in a second when you basically you know apply apply common sense here all we",
    "start": "1057720",
    "end": "1065520"
  },
  {
    "text": "need is two flows",
    "start": "1065520",
    "end": "1068900"
  },
  {
    "start": "1069000",
    "end": "1069000"
  },
  {
    "text": "right because all we have are two fundamental types of applications one",
    "start": "1070910",
    "end": "1076220"
  },
  {
    "text": "our machine to machine there is the OAuth client good ends will flow for that and the other type is interactive",
    "start": "1076220",
    "end": "1082460"
  },
  {
    "text": "applications where a human being is using it and for all the other cases we now use the good-old actually the mother",
    "start": "1082460",
    "end": "1089540"
  },
  {
    "text": "of all flows in our wolf called the authorization code flow the mother of all flows has a problem that's what",
    "start": "1089540",
    "end": "1095390"
  },
  {
    "text": "that's what we're going to fix with the thing called pixie I'm going to show you in a second what that is but ultimately speaking you only you",
    "start": "1095390",
    "end": "1103190"
  },
  {
    "text": "only need to choose between one of the two your developers only need to learn these two right and your architect only",
    "start": "1103190",
    "end": "1109370"
  },
  {
    "text": "need to understand these two that's it and that's much better than a year ago good so let's start with machine to",
    "start": "1109370",
    "end": "1115760"
  },
  {
    "start": "1114000",
    "end": "1114000"
  },
  {
    "text": "machine communication as I said the way this works is the client goes to the authorization server of indicator of the",
    "start": "1115760",
    "end": "1121580"
  },
  {
    "text": "authorization server asks for an access token for certain resources gets back an access token if if he's allowed to do",
    "start": "1121580",
    "end": "1128270"
  },
  {
    "text": "that uses the access token that's it okay so what what is there to harden",
    "start": "1128270",
    "end": "1135770"
  },
  {
    "text": "good question the first thing I guess that still is around a lot is how do the",
    "start": "1135770",
    "end": "1141620"
  },
  {
    "start": "1137000",
    "end": "1137000"
  },
  {
    "text": "clients authenticate with the server obviously the easiest way it seems at least our shared secrets right so you",
    "start": "1141620",
    "end": "1147800"
  },
  {
    "text": "have a secret here you have a secret there if someone can prove that secret is known then you know he's offended",
    "start": "1147800",
    "end": "1154520"
  },
  {
    "text": "shared secrets are not really secrets because they are shared um so don't try",
    "start": "1154520",
    "end": "1160160"
  },
  {
    "text": "to avoid them okay I mean they are the easiest thing today but in practice when you implement this configuration",
    "start": "1160160",
    "end": "1166040"
  },
  {
    "text": "management is really hard right where do you store them where do you store them not in clear-text how do you store them that they don't",
    "start": "1166040",
    "end": "1172340"
  },
  {
    "text": "leak to your to your version control system or you know other things it's um you know if you use them yeah use high",
    "start": "1172340",
    "end": "1182300"
  },
  {
    "text": "entropy secrets like weeds or random numbers or something like this don't even try to you know it's a password but",
    "start": "1182300",
    "end": "1188420"
  },
  {
    "text": "it's a password for machines they don't need to be memorable okay they can be really long and really hard yeah if you",
    "start": "1188420",
    "end": "1196760"
  },
  {
    "text": "are storing them store them on reversibly right if somebody compromises the database of the authorization server",
    "start": "1196760",
    "end": "1202880"
  },
  {
    "text": "they shouldn't be presented with a menu of Secrets yeah what they should see is it's hashes of Secrets",
    "start": "1202880",
    "end": "1208730"
  },
  {
    "text": "now since the secrets have high entropy so you don't need to apply any key bite",
    "start": "1208730",
    "end": "1214010"
  },
  {
    "text": "stretching for example you know it's a good hashtag ooh it that's good if you",
    "start": "1214010",
    "end": "1219200"
  },
  {
    "text": "can move away from shared secrets use a symmetric keys the nice thing about a symmetric keys is a the server does not",
    "start": "1219200",
    "end": "1225679"
  },
  {
    "text": "need to store any secret at all because all they store is the public key right and nothing else they never go over the",
    "start": "1225679",
    "end": "1232070"
  },
  {
    "text": "wire so you can't intercept them on the network because you're all you're sending is a signature that it has been",
    "start": "1232070",
    "end": "1239809"
  },
  {
    "text": "done with the secret and not a secret itself okay and it has the nice side",
    "start": "1239809",
    "end": "1247040"
  },
  {
    "text": "effect that it gives us more features which is called sender constraining and the most important one of the most",
    "start": "1247040",
    "end": "1253190"
  },
  {
    "text": "common ways to do a symmetric keys these days is either signing basically creating a chase on their token signing",
    "start": "1253190",
    "end": "1258410"
  },
  {
    "text": "it with the secret and using that as a client secret or you're using the transport like mutual TLS for example so",
    "start": "1258410",
    "end": "1264800"
  },
  {
    "text": "that the transport layer protocol will take care of these things okay the nice thing about TLS is that it",
    "start": "1264800",
    "end": "1271370"
  },
  {
    "start": "1269000",
    "end": "1269000"
  },
  {
    "text": "gives us what we call sender constraint tokens or proof of possession tokens",
    "start": "1271370",
    "end": "1277070"
  },
  {
    "text": "meaning if the client asked for a token over a mutual TLS connection once the",
    "start": "1277070",
    "end": "1282950"
  },
  {
    "text": "TLS certain certificate valid ated we can basically put the hash of that certificate into the access token itself",
    "start": "1282950",
    "end": "1290600"
  },
  {
    "text": "why are the CNS claimed it stands for confirmation and then the client used the same client certificate to talk to",
    "start": "1290600",
    "end": "1297620"
  },
  {
    "text": "the api's the API receives the access token it gets the the thumbprint of the",
    "start": "1297620",
    "end": "1305120"
  },
  {
    "text": "client certificate can compare that thumbprint with the thumbprint in the access token and then you know this was",
    "start": "1305120",
    "end": "1310190"
  },
  {
    "text": "really the client that asked for the token in the first place if an attacker steals their token they can't use it",
    "start": "1310190",
    "end": "1316730"
  },
  {
    "text": "because they don't have the private key okay that is I think for 20/20 we should",
    "start": "1316730",
    "end": "1323540"
  },
  {
    "text": "make sure that we are using this technique because it's it's easy to use and it's so much more secure okay",
    "start": "1323540",
    "end": "1330350"
  },
  {
    "text": "speaking of chasing up tokens as I said chasing up tokens have never been specified for Olaf yeah it was just a",
    "start": "1330350",
    "end": "1337100"
  },
  {
    "text": "thing that happened because they were around they are easy to use they are widely deployed there",
    "start": "1337100",
    "end": "1342320"
  },
  {
    "text": "are so many client libraries that can deal with them so people fought like hey Jason Depp tokens yeah let's use them",
    "start": "1342320",
    "end": "1348200"
  },
  {
    "text": "for everything yeah they seem to be a nice way to protect a chase and object and they are um so X chasing Depp tokens",
    "start": "1348200",
    "end": "1358100"
  },
  {
    "text": "I used today for identity tokens and OPA D Kinect for access tokens in a wharf a lot for lockout tokens for single sign",
    "start": "1358100",
    "end": "1365659"
  },
  {
    "text": "out security events is another aspect that users chase in depth tokens does",
    "start": "1365659",
    "end": "1371240"
  },
  {
    "text": "the funny thing is once you start using them all over they become a bit complicated because you can't really",
    "start": "1371240",
    "end": "1376700"
  },
  {
    "text": "distinguish between them anymore they all look the same right they have a header and they have a payload and they have a signature okay so give you one",
    "start": "1376700",
    "end": "1383029"
  },
  {
    "text": "example here's the spec of the lookout token validation yeah so they say like",
    "start": "1383029",
    "end": "1388190"
  },
  {
    "text": "you know yeah validate a signature that's fine validate that it contains a sub claim and so and so on that's fine",
    "start": "1388190",
    "end": "1393950"
  },
  {
    "text": "and then it says something like this verify the token does not contain a nonce",
    "start": "1393950",
    "end": "1398960"
  },
  {
    "text": "and why is that well because if it would contain a nonce it could be actually an",
    "start": "1398960",
    "end": "1404600"
  },
  {
    "text": "identity token that someone tries to smuggle into your system saying hey here's a log out token okay because you",
    "start": "1404600",
    "end": "1412009"
  },
  {
    "text": "know it's hard to distinguish between them so a really very small thing that",
    "start": "1412009",
    "end": "1417470"
  },
  {
    "text": "you should start using is called typed chasing their tokens and the idea is",
    "start": "1417470",
    "end": "1422929"
  },
  {
    "text": "that here you see that that that type header that always said short but now",
    "start": "1422929",
    "end": "1428480"
  },
  {
    "text": "what you should do is you should introduce the basically encode the purpose of the chase in depth token into",
    "start": "1428480",
    "end": "1434450"
  },
  {
    "text": "the chase in depth token itself so currently the the o of spec for JSON web",
    "start": "1434450",
    "end": "1439820"
  },
  {
    "text": "token says use the value 80 plus JWT okay that tells the system this is a",
    "start": "1439820",
    "end": "1446210"
  },
  {
    "text": "JSON web token but it is also an access token because it has this well-known string in the type header okay and what",
    "start": "1446210",
    "end": "1454580"
  },
  {
    "text": "you should do is if you come up with your own chasing web tokens in invent a name for them right so that someone",
    "start": "1454580",
    "end": "1460700"
  },
  {
    "text": "can't confuse one type with the other I'm working on this thing called identity server we start doing that now",
    "start": "1460700",
    "end": "1468109"
  },
  {
    "text": "since I think six months all of our access tokens look like this okay just to make sure that when you are",
    "start": "1468109",
    "end": "1474830"
  },
  {
    "text": "validating them you can make sure it's actually an access token it's not a logout token it's not a security and",
    "start": "1474830",
    "end": "1479929"
  },
  {
    "text": "it's not an ID token or whatever other things you come up with okay so that's all something you should do good let's",
    "start": "1479929",
    "end": "1489409"
  },
  {
    "start": "1487000",
    "end": "1487000"
  },
  {
    "text": "switch gears to interactive applications and they are browser-based right the browser is very powerful right it can",
    "start": "1489409",
    "end": "1497659"
  },
  {
    "text": "show UI it you know it can follow redirects and so on but the browser is also the most problematic part of the",
    "start": "1497659",
    "end": "1504080"
  },
  {
    "text": "system because where it can show UI it can follow redirects right maybe to the wrong place yeah so be careful with that",
    "start": "1504080",
    "end": "1510649"
  },
  {
    "text": "but how does that flow work well it's super simple right you have two channels one it's called the front channel one is",
    "start": "1510649",
    "end": "1516320"
  },
  {
    "text": "called the back channel you first do the authorized request you get presented with some UI on the server the server",
    "start": "1516320",
    "end": "1521960"
  },
  {
    "text": "replies with a so-called authorization code and then the authorization code gets on a back channel communication",
    "start": "1521960",
    "end": "1527870"
  },
  {
    "text": "redeemed and turned into access tokens right to redeem that access token the",
    "start": "1527870",
    "end": "1533720"
  },
  {
    "text": "client has to authenticate with the authorization server and that makes the authorization code quite nice right",
    "start": "1533720",
    "end": "1539809"
  },
  {
    "text": "because if an attacker sits in your browser or on your network because you know you're at the airport and the Wi-Fi",
    "start": "1539809",
    "end": "1546289"
  },
  {
    "text": "called free Wi-Fi was very attractive to you yeah who knows who who runs that Network right if they would steal that",
    "start": "1546289",
    "end": "1553820"
  },
  {
    "text": "authorization code from you they cannot redeem it without knowing the secret okay only the client knows the secret",
    "start": "1553820",
    "end": "1562070"
  },
  {
    "text": "and that's the only party that can turn this code into um a token okay job done",
    "start": "1562070",
    "end": "1570470"
  },
  {
    "text": "right we're good yeah that is where most",
    "start": "1570470",
    "end": "1575929"
  },
  {
    "text": "things go wrong okay and I'm just picking out this one because it's the most popular because you know on this",
    "start": "1575929",
    "end": "1584029"
  },
  {
    "text": "leg here when the server response back to the client application that is a very",
    "start": "1584029",
    "end": "1589490"
  },
  {
    "text": "sensitive operation right because that's where you where you deliver the data and that's called the redirect URI and the",
    "start": "1589490",
    "end": "1595580"
  },
  {
    "text": "spec says the redirect URI must be pre registered with the client and there must be an exact string matching between",
    "start": "1595580",
    "end": "1603320"
  },
  {
    "start": "1596000",
    "end": "1596000"
  },
  {
    "text": "the redirect URI that was pre registered and the one that's being used at runtime that's what",
    "start": "1603320",
    "end": "1608330"
  },
  {
    "text": "the spec says but that's not what people do apparently yeah so for example this",
    "start": "1608330",
    "end": "1614360"
  },
  {
    "text": "year I've seen this in the wild yeah let's allow it on our side but any sub-domain okay so that actually",
    "start": "1614360",
    "end": "1624050"
  },
  {
    "text": "happened to Electronic Arts last year there wasn't a tech called sub domain takeover so basically that the short",
    "start": "1624050",
    "end": "1630230"
  },
  {
    "text": "story is somebody created a website on Asha it was called something-something Asha websites dotnet and they",
    "start": "1630230",
    "end": "1635600"
  },
  {
    "text": "implemented the EEA billing system on this at some point they were ready so they put a DNS entry into the EA dot-com",
    "start": "1635600",
    "end": "1641990"
  },
  {
    "text": "domain billing dot EA dot-com points now to ECHA websites fine right at some point they moved the",
    "start": "1641990",
    "end": "1648440"
  },
  {
    "text": "billing system to another domain no no one needed it as a website anymore they shut it down but no one took away",
    "start": "1648440",
    "end": "1655010"
  },
  {
    "text": "the DNS entry so now all an attacker needs to do is scan your DNS say hey you",
    "start": "1655010",
    "end": "1660170"
  },
  {
    "text": "have this thing pointing to Asia but on Azure there's nothing so let's just register the HR website again with the",
    "start": "1660170",
    "end": "1666980"
  },
  {
    "text": "same name and now suddenly you can run code under the EA domain right billing",
    "start": "1666980",
    "end": "1673910"
  },
  {
    "text": "dot EA tour comments now my server because your DNS root routes me there okay so yeah very dangerous um this one",
    "start": "1673910",
    "end": "1685100"
  },
  {
    "text": "here I have seen in the wild as well mysite.com slash star any URL will do on",
    "start": "1685100",
    "end": "1690559"
  },
  {
    "text": "that site what they all have in common is you are you are extending the attack",
    "start": "1690559",
    "end": "1697070"
  },
  {
    "text": "surface of the redirect there's a callback URL if you like yeah on that callback URL sensitive stuff is being",
    "start": "1697070",
    "end": "1703490"
  },
  {
    "text": "executed you want to tie that down to a single place where your code is running nothing else would run there no and no",
    "start": "1703490",
    "end": "1711080"
  },
  {
    "text": "Google Analytics I've seen that too no ad banners I've seen that too only the",
    "start": "1711080",
    "end": "1717770"
  },
  {
    "text": "code dealing with the callback should run on that specific URL and nothing else if you do a star there true you can",
    "start": "1717770",
    "end": "1725000"
  },
  {
    "text": "choose whatever you want right that is exactly what happened to Facebook by the way yeah so Facebook allowed",
    "start": "1725000",
    "end": "1731350"
  },
  {
    "text": "facebook.com slash star is the callback URL so someone was pretty clever and he",
    "start": "1731350",
    "end": "1736610"
  },
  {
    "text": "found out well let's handcraft a URL that says you know",
    "start": "1736610",
    "end": "1742070"
  },
  {
    "text": "facebook.com slash my Facebook page and send out these links right people clicked on the links they came to",
    "start": "1742070",
    "end": "1748340"
  },
  {
    "text": "Facebook they locked on to Facebook they ended up they ended up ultimately on his Facebook page okay that's annoying but it's that",
    "start": "1748340",
    "end": "1755360"
  },
  {
    "text": "dangerous yes it is because what he did on his Facebook page he posted a picture",
    "start": "1755360",
    "end": "1761210"
  },
  {
    "start": "1759000",
    "end": "1759000"
  },
  {
    "text": "that came from a server that he controls okay so now what is the browser doing he",
    "start": "1761210",
    "end": "1767990"
  },
  {
    "text": "loads the page he loads that evil calm image PNG what does the browser put on",
    "start": "1767990",
    "end": "1774049"
  },
  {
    "text": "the referer header the code right that's",
    "start": "1774049",
    "end": "1781070"
  },
  {
    "text": "how he basically leaked the Facebook authorization code to his log files now",
    "start": "1781070",
    "end": "1788990"
  },
  {
    "text": "so now you might think yeah but what's the problem I need a client secret for that right that's what I just said yeah maybe not",
    "start": "1788990",
    "end": "1797080"
  },
  {
    "text": "there's another interesting attack called authorization code injection the idea is you steal an authorization",
    "start": "1797080",
    "end": "1804049"
  },
  {
    "start": "1798000",
    "end": "1798000"
  },
  {
    "text": "code somehow okay why are one of the attacks open redirect a leakage whatever I have stolen your authorization code",
    "start": "1804049",
    "end": "1811309"
  },
  {
    "text": "okay so now I just go to the legitimate application start your authentication process and then I handcraft a URL to",
    "start": "1811309",
    "end": "1819679"
  },
  {
    "text": "the callback endpoint that has the stolen code right so now what will the",
    "start": "1819679",
    "end": "1826279"
  },
  {
    "text": "client application do they will take the code and happily turn it into access tokens because they have the secret and",
    "start": "1826279",
    "end": "1832370"
  },
  {
    "text": "I am now locked in as my victim to the application right so even if code",
    "start": "1832370",
    "end": "1840230"
  },
  {
    "text": "requires a secret at least for confidential clients there is still an attack vector here if you can if you can",
    "start": "1840230",
    "end": "1846860"
  },
  {
    "text": "steal a code somehow if it got leaked somehow okay so before code is the most",
    "start": "1846860",
    "end": "1852799"
  },
  {
    "text": "secure mechanism we turns out it's not well but we can make it secure with something on top which is called proof",
    "start": "1852799",
    "end": "1859759"
  },
  {
    "start": "1858000",
    "end": "1858000"
  },
  {
    "text": "key for code exchange or pixie as the cool kids say yeah pixie is a very",
    "start": "1859759",
    "end": "1865129"
  },
  {
    "text": "simple extension to the authorization flow and the idea is this before the client makes the redirect to the token",
    "start": "1865129",
    "end": "1871909"
  },
  {
    "text": "servers he comes up with a random number okay just some random number and then he",
    "start": "1871909",
    "end": "1877080"
  },
  {
    "text": "hashes that random number and the random number is called a code verifier and hash of the random number is called a",
    "start": "1877080",
    "end": "1884280"
  },
  {
    "text": "code challenge okay so now when we do the authorized request we in addition send the hashed version of our secret to",
    "start": "1884280",
    "end": "1892170"
  },
  {
    "text": "the server right we we don't want to send that a clear text version of it because you know the browser is",
    "start": "1892170",
    "end": "1897240"
  },
  {
    "text": "considered insecure so now the server stores dead code challenge and comes",
    "start": "1897240",
    "end": "1903420"
  },
  {
    "text": "back with the code right and now on the back-channel communication the client sends the clear text version of that",
    "start": "1903420",
    "end": "1910380"
  },
  {
    "text": "secret code verifier so now the server has to clear text version he has the hashed version so he can hash the clear",
    "start": "1910380",
    "end": "1916290"
  },
  {
    "text": "text version and if they match you can prove that you are the Clyde the same client on the front channel as you are",
    "start": "1916290",
    "end": "1921690"
  },
  {
    "text": "on the back channel okay now if that if somebody somebody comes with a stolen",
    "start": "1921690",
    "end": "1927240"
  },
  {
    "text": "code this stolen code was requested using a different code verifier than the",
    "start": "1927240",
    "end": "1934440"
  },
  {
    "text": "one that you can use because you don't know the secret of the client yeah it's just in memory so this wall will not",
    "start": "1934440",
    "end": "1940560"
  },
  {
    "text": "work anymore okay so long story short I said earlier use authorization code flow",
    "start": "1940560",
    "end": "1947700"
  },
  {
    "text": "for all of your applications but only if you use pixie on top of it okay",
    "start": "1947700",
    "end": "1954480"
  },
  {
    "text": "so code plus pixie is the requirement and yeah if you're doing a speed on that",
    "start": "1954480",
    "end": "1961890"
  },
  {
    "text": "core for example starting with version 3.0 they always do pixie right it took a bit of convincing them why why this is",
    "start": "1961890",
    "end": "1969810"
  },
  {
    "text": "useful but we managed that starting with free free 0 they always send the code challenge and in the code verifier",
    "start": "1969810",
    "end": "1976500"
  },
  {
    "text": "and then when you have a token service like identity server you can basically go to every client say require a pixie",
    "start": "1976500",
    "end": "1981540"
  },
  {
    "text": "require a pixie require a pixie and then you shut down this problem ok cool let's",
    "start": "1981540",
    "end": "1988040"
  },
  {
    "text": "move on we have so much content as a summary ok these are the most actionable",
    "start": "1988040",
    "end": "1996060"
  },
  {
    "start": "1989000",
    "end": "1989000"
  },
  {
    "text": "things always do exact matching of it erects yeah don't do open redirect us",
    "start": "1996060",
    "end": "2001190"
  },
  {
    "text": "sounds easier than it is but you know do it [Music] back pages should contain no third party",
    "start": "2001190",
    "end": "2007820"
  },
  {
    "text": "code only your code you see as P for lockdown don't do inline Java you know inline JavaScript always use pixie we",
    "start": "2007820",
    "end": "2016190"
  },
  {
    "text": "can skip the skate part that is also in interesting but not as interesting",
    "start": "2016190",
    "end": "2021260"
  },
  {
    "text": "because pixie saves you from death also that's a really nice easy one to do to shut down refer ahead us yeah you can",
    "start": "2021260",
    "end": "2027320"
  },
  {
    "text": "you can have a refer a policy in your browser to tell about the tone sent refer I had us and you close that",
    "start": "2027320",
    "end": "2032420"
  },
  {
    "text": "potential problem as well yeah good ha let's show you some more",
    "start": "2032420",
    "end": "2041300"
  },
  {
    "start": "2039000",
    "end": "2039000"
  },
  {
    "text": "advanced things ma'am which might make your head hurt it it did dip with mine",
    "start": "2041300",
    "end": "2047510"
  },
  {
    "text": "the first time I saw it yeah it's called a mix up attack and the mix of attack is a more advanced scenario the idea is",
    "start": "2047510",
    "end": "2053929"
  },
  {
    "text": "that you're having a client that trusts more than one authorization server right think of a federation Gateway scenario",
    "start": "2053930",
    "end": "2060260"
  },
  {
    "text": "where you have you know Google login and facebook login and decent isn't that so yes you're already in that scenario",
    "start": "2060260",
    "end": "2065510"
  },
  {
    "text": "because your Federation gateway is a client to more than one external authentication system right so now I",
    "start": "2065510",
    "end": "2073669"
  },
  {
    "text": "told you that the sophisticated attacks are the things where I can substitute stuff and confuse the client application",
    "start": "2073670",
    "end": "2080030"
  },
  {
    "text": "somehow and that's one of them yeah it's called the mix-up attack and it goes like this the variant one by the way",
    "start": "2080030",
    "end": "2087649"
  },
  {
    "text": "makes the assumption that the attacker can somehow modify the traffic between the browser and the authorized you know",
    "start": "2087650",
    "end": "2094879"
  },
  {
    "text": "like the authorization request so to speak ma'am but yeah we have to stss",
    "start": "2094880",
    "end": "2101060"
  },
  {
    "text": "yeah one is called the honest STS which is the good one and one is called the attacker STS which is the bad one so",
    "start": "2101060",
    "end": "2106300"
  },
  {
    "text": "imagine that the user clicks the honors STS in the UI I want to login with this guy or you know I get a token so he he",
    "start": "2106300",
    "end": "2114260"
  },
  {
    "text": "chooses that one the attacker can on-the-fly change their two to the attack is TS okay so now the client",
    "start": "2114260",
    "end": "2121760"
  },
  {
    "text": "things he wants to talk to the attacker STS he stores the fact that this was the",
    "start": "2121760",
    "end": "2127220"
  },
  {
    "text": "selected STS he sends him free or two back to go to the attacker STS and the attacker",
    "start": "2127220",
    "end": "2132320"
  },
  {
    "text": "swaps it back out to the honest test yes okay so now the browser goes to the",
    "start": "2132320",
    "end": "2139100"
  },
  {
    "text": "honest yes the user authenticates you know does his thing the authorized agent of a",
    "start": "2139100",
    "end": "2145400"
  },
  {
    "text": "sense to coat back the code travels up to the client who is the client thinking",
    "start": "2145400",
    "end": "2154039"
  },
  {
    "text": "is the right sts to exchange the code with the token the attacker is now",
    "start": "2154039",
    "end": "2162650"
  },
  {
    "text": "suddenly the attacker SDS has the authorization code and the client ID and the client secret right and all he has",
    "start": "2162650",
    "end": "2170930"
  },
  {
    "text": "to do now is just do a back-channel call and redeem that with the honest sts to",
    "start": "2170930",
    "end": "2177859"
  },
  {
    "text": "make sense now you might say hard there",
    "start": "2177859",
    "end": "2183319"
  },
  {
    "text": "were a lot of assumptions here right and there are okay but it is not made up this has happened okay",
    "start": "2183319",
    "end": "2190730"
  },
  {
    "text": "there are assumptions here one is you trust more than one STS you know someone",
    "start": "2190730",
    "end": "2196369"
  },
  {
    "text": "was able to smuggle in an attacker STS into your system the idea attacker has access to the network somehow okay that",
    "start": "2196369",
    "end": "2204019"
  },
  {
    "text": "might be far-fetched for some of you there's a different variation which does",
    "start": "2204019",
    "end": "2210739"
  },
  {
    "text": "not require network access okay it works a little bit different like this so the",
    "start": "2210739",
    "end": "2216109"
  },
  {
    "text": "idea is this the user selects the attacker STS for some reason yeah maybe you know maybe you have some sort of",
    "start": "2216109",
    "end": "2222440"
  },
  {
    "text": "self-service registration of your customer STS or somebody posted in an STS that is that looks very similar to",
    "start": "2222440",
    "end": "2228710"
  },
  {
    "text": "the one you really want to do right you choose the wrong one that that's what happens yeah you choose the wrong STS",
    "start": "2228710",
    "end": "2235930"
  },
  {
    "text": "then the client sends the the user agent to the attacker STS yeah now what the",
    "start": "2235930",
    "end": "2242720"
  },
  {
    "text": "attack is the S is doing immediately is he turns around and forwards that call to the realist yes the honest STS you're",
    "start": "2242720",
    "end": "2249680"
  },
  {
    "text": "so you're seeing the right login page everything he changes on the way he changes the client ID he changes the",
    "start": "2249680",
    "end": "2255170"
  },
  {
    "text": "redirect URI and so on and so forth okay so now the honest STS thinks he just got a request from the client so he will",
    "start": "2255170",
    "end": "2262160"
  },
  {
    "text": "send the code back to the client where will the the client sent the co to",
    "start": "2262160",
    "end": "2267499"
  },
  {
    "text": "now to the attacker is this okay so yeah",
    "start": "2267499",
    "end": "2276460"
  },
  {
    "text": "that's a bit more advanced and I think it requires a very specialized attack for that but as I said this is not made",
    "start": "2276460",
    "end": "2283430"
  },
  {
    "text": "up ma'am so how can we protect against this my",
    "start": "2283430",
    "end": "2289850"
  },
  {
    "text": "best answer I have is used a good client-side framework okay if you have written your own or openly connect",
    "start": "2289850",
    "end": "2297440"
  },
  {
    "text": "client library you know make sure you do this though use authorization server",
    "start": "2297440",
    "end": "2302600"
  },
  {
    "text": "specific redirect you arise they shouldn't share them right like one endpoint that handles all the callbacks that's a bad idea",
    "start": "2302600",
    "end": "2309700"
  },
  {
    "text": "store for each request the intended Stas and then on the way back compare the",
    "start": "2309700",
    "end": "2315860"
  },
  {
    "text": "intended a s with the redirect URI that belongs to the actual authorization",
    "start": "2315860",
    "end": "2320930"
  },
  {
    "text": "server okay the good news is if you do if you're doing a spinet core they got",
    "start": "2320930",
    "end": "2326390"
  },
  {
    "start": "2326000",
    "end": "2326000"
  },
  {
    "text": "you covered okay and to be honest this this countermeasure was done by Microsoft before the attack got published so it's",
    "start": "2326390",
    "end": "2333020"
  },
  {
    "text": "a bit like secure by accident I think but it works so you know in in in a",
    "start": "2333020",
    "end": "2338870"
  },
  {
    "text": "spirit core every external provider must Rama must have a unique name and must",
    "start": "2338870",
    "end": "2344510"
  },
  {
    "text": "use a unique callback URL okay so when you initiate the challenge to the",
    "start": "2344510",
    "end": "2350510"
  },
  {
    "text": "external system what they can do is they come up with a random number they call",
    "start": "2350510",
    "end": "2357320"
  },
  {
    "text": "that the correlation ID and they encrypt and sign that random number and send it on the state parameter to the",
    "start": "2357320",
    "end": "2364010"
  },
  {
    "text": "authorization server okay in the spec it",
    "start": "2364010",
    "end": "2369200"
  },
  {
    "text": "says that state parameter must be echoed back unchanged to the client at the same",
    "start": "2369200",
    "end": "2374360"
  },
  {
    "text": "time what they do is they drop a cookie that is called correlation thought authorizations of a name dot correlation",
    "start": "2374360",
    "end": "2381560"
  },
  {
    "text": "I did a random thing they just made up okay so now when the response comes back",
    "start": "2381560",
    "end": "2386690"
  },
  {
    "text": "from the authorization server it's an AS specific callback URL right",
    "start": "2386690",
    "end": "2393560"
  },
  {
    "text": "and then they look at the state parameter they unprotect that with their you know key and so they decrypted and",
    "start": "2393560",
    "end": "2400850"
  },
  {
    "text": "valid validated signature so no no one has changed it and then they get relation ID out of that and they make",
    "start": "2400850",
    "end": "2406910"
  },
  {
    "text": "sure that a cookie exists with this name correlation of relations of a name dot correlation ID and only if that exists",
    "start": "2406910",
    "end": "2413300"
  },
  {
    "text": "you know that really the request and the response they belong together okay as I said if you're doing HP core",
    "start": "2413300",
    "end": "2421610"
  },
  {
    "text": "that's built in you don't need to worry if you if you use something else you",
    "start": "2421610",
    "end": "2426830"
  },
  {
    "text": "need to check how how they are doing it if you're all wrote something yourself you should double check I guess yeah",
    "start": "2426830",
    "end": "2433720"
  },
  {
    "text": "okay whoo good so let's turn our",
    "start": "2433720",
    "end": "2440990"
  },
  {
    "start": "2435000",
    "end": "2435000"
  },
  {
    "text": "attention to a couple of different things public clients okay so far we we talked about what they call confidential",
    "start": "2440990",
    "end": "2448010"
  },
  {
    "text": "clients in OAuth which has a nice security property they have client secrets because they are they're deployed to you know a trusted server or",
    "start": "2448010",
    "end": "2455840"
  },
  {
    "text": "something like this yeah with public clients this assumption is not true public lines are things running",
    "start": "2455840",
    "end": "2461390"
  },
  {
    "text": "in a browser like JavaScript or a mobile app or a desktop app they don't have secrets",
    "start": "2461390",
    "end": "2466430"
  },
  {
    "text": "because what's the point where would you deploy that secret to right certainly not in the source code am so different",
    "start": "2466430",
    "end": "2473240"
  },
  {
    "text": "rules apply here so in the Indy confidential world we are used to having basically a one-to-one mapping between",
    "start": "2473240",
    "end": "2479630"
  },
  {
    "text": "client and client ID right NBC one and NBC two and my front end and my back end",
    "start": "2479630",
    "end": "2484850"
  },
  {
    "text": "and and so on with public lines that's not true right because you're creating a",
    "start": "2484850",
    "end": "2489859"
  },
  {
    "text": "you know a mobile app my my cool client you'd you deploy to the App Store five million people download it five million",
    "start": "2489859",
    "end": "2496040"
  },
  {
    "text": "people will use the same client ID right that's just the way it is ma'am so in",
    "start": "2496040",
    "end": "2501920"
  },
  {
    "text": "other words you can't authenticate the client with public clients it's just not possible so let's have a look first at",
    "start": "2501920",
    "end": "2509960"
  },
  {
    "start": "2509000",
    "end": "2509000"
  },
  {
    "text": "native clients for the very first anti-pattern that gets pointed out by the native clients PCP is don't use",
    "start": "2509960",
    "end": "2516920"
  },
  {
    "text": "native login dialogues right again I said it earlier if you educate your",
    "start": "2516920",
    "end": "2525320"
  },
  {
    "text": "users to lot to type in the password in many different places they are probably more prone to phishing attacks so don't",
    "start": "2525320",
    "end": "2530420"
  },
  {
    "text": "do that this is using the deprecated password flow in a wharf so that's",
    "start": "2530420",
    "end": "2535520"
  },
  {
    "text": "another reason why you shouldn't do that yeah but yeah there's really no point in",
    "start": "2535520",
    "end": "2540539"
  },
  {
    "text": "doing this as I said it's also not compatible with things like two-factor authentication and Fido and answer ones",
    "start": "2540539",
    "end": "2546809"
  },
  {
    "text": "the fourth yeah you wouldn't believe how many discussions I had in my life with product owners that insists on having a",
    "start": "2546809",
    "end": "2553079"
  },
  {
    "text": "native login dialog because well it's a native app right we want to be in control of every pixel on the screen the",
    "start": "2553079",
    "end": "2561809"
  },
  {
    "text": "other thing really that I don't like is is that you are at the mercy of the quality of the developer right you know",
    "start": "2561809",
    "end": "2567660"
  },
  {
    "text": "they should not store your personal because they don't need it anymore well hopeful hopefully they don't they",
    "start": "2567660",
    "end": "2573180"
  },
  {
    "text": "should store these tokens securely hopefully they do right if you have time",
    "start": "2573180",
    "end": "2579089"
  },
  {
    "text": "make an experiment do a backup of your iPhone for example right and the iPhone backup has two parts the application",
    "start": "2579089",
    "end": "2585420"
  },
  {
    "text": "data and the keychain application data is application data it's unprotected and the keychain has all of your secrets now",
    "start": "2585420",
    "end": "2592499"
  },
  {
    "text": "take take a new phone and just restore back the application data you should be locked out everywhere try that if you",
    "start": "2592499",
    "end": "2602460"
  },
  {
    "text": "are not locked out everywhere some developer stores your secrets in the application data pocket where it's",
    "start": "2602460",
    "end": "2608130"
  },
  {
    "text": "completely unsecured yeah it's easy to do so yes the easy answer is if you want",
    "start": "2608130",
    "end": "2615390"
  },
  {
    "start": "2613000",
    "end": "2613000"
  },
  {
    "text": "to do authentication in a native client use code flow with pixie and open a browser done okay you can reuse your",
    "start": "2615390",
    "end": "2623039"
  },
  {
    "text": "existing login page with all of your security features logging auditing fraud detection blah blah blah what have you",
    "start": "2623039",
    "end": "2628950"
  },
  {
    "text": "okay there's no point in in creating another login page just because it must be pixelated right open the browser go",
    "start": "2628950",
    "end": "2638489"
  },
  {
    "text": "to your login page use code flow with pixie and you know there are different",
    "start": "2638489",
    "end": "2645299"
  },
  {
    "start": "2643000",
    "end": "2643000"
  },
  {
    "text": "types of browsers the preferred one is the system browser okay so don't open",
    "start": "2645299",
    "end": "2650999"
  },
  {
    "text": "the web view for example like you know like opening a little browser without all of the browser things around use the",
    "start": "2650999",
    "end": "2657210"
  },
  {
    "text": "system browser you can inspect the URL you can inspect the certificate if you want to you can use password managers",
    "start": "2657210",
    "end": "2662759"
  },
  {
    "text": "and most importantly you can share the cookie container with your system device which might mean you already get single",
    "start": "2662759",
    "end": "2669450"
  },
  {
    "text": "sign-on because you are already logged on to this touken service in the browser right",
    "start": "2669450",
    "end": "2674849"
  },
  {
    "text": "basically what you're doing is you're opening a tab of the system browser inside your application and it behaves",
    "start": "2674849",
    "end": "2680460"
  },
  {
    "text": "exactly like this single sign-on less password typing better user experience less",
    "start": "2680460",
    "end": "2686940"
  },
  {
    "text": "phishing okay you need to find a way how to get",
    "start": "2686940",
    "end": "2693329"
  },
  {
    "text": "the data back from the browser to your app again there are a couple of options here the most secure one is what they",
    "start": "2693329",
    "end": "2699690"
  },
  {
    "text": "call claimed HTTP URI HTTP URI I should say and the idea is this right and you",
    "start": "2699690",
    "end": "2705329"
  },
  {
    "text": "can register so you've probably seen that right when when you when you click on a link to Google Maps and you have",
    "start": "2705329",
    "end": "2711780"
  },
  {
    "text": "Google that the Google Maps app installed on your phone and they don't open the browser they open the app right",
    "start": "2711780",
    "end": "2717900"
  },
  {
    "text": "or Amazon for example so the way this works is that on that URL that you're clicking there's a little XML file which",
    "start": "2717900",
    "end": "2724559"
  },
  {
    "text": "is signed by an apple developer certificate that says hey if this app is installed on the phone don't open the",
    "start": "2724559",
    "end": "2730349"
  },
  {
    "text": "browser open the app right and that's how you can get back data to locally installed apps from the web pack and",
    "start": "2730349",
    "end": "2737640"
  },
  {
    "text": "that's the best way to do it there are other options here the spec has more detail but my money is on the last one",
    "start": "2737640",
    "end": "2744650"
  },
  {
    "text": "cool now let's all get a little",
    "start": "2744650",
    "end": "2750230"
  },
  {
    "text": "pessimistic let's look what's pass um",
    "start": "2750230",
    "end": "2755970"
  },
  {
    "text": "you know I did the workshop the last two days you asked them how many of you do spas almost everybody have raises his",
    "start": "2755970",
    "end": "2762750"
  },
  {
    "text": "hand right I mean that's what people do but it's also the most problematic type of client to secure because it's not the",
    "start": "2762750",
    "end": "2769470"
  },
  {
    "text": "spa it's not oh oh of it's not the token it's the browser that's the problem right so there are a couple of attacks",
    "start": "2769470",
    "end": "2776490"
  },
  {
    "text": "that only exists in browser based applications and they are because they live in a shared execution environment",
    "start": "2776490",
    "end": "2782309"
  },
  {
    "text": "right you have multiple tabs open multiple applications multiple trust worthiness of applications and you know",
    "start": "2782309",
    "end": "2788520"
  },
  {
    "text": "they all start with cross cross-site request forgery cross-site scripting because one application is attacking",
    "start": "2788520",
    "end": "2794309"
  },
  {
    "text": "another right so you know there were two fundamental ways to do API",
    "start": "2794309",
    "end": "2800490"
  },
  {
    "text": "authentication in sparse the old style was with cookies cookies has the cross-site request",
    "start": "2800490",
    "end": "2805860"
  },
  {
    "text": "watery problem the new style was access tokens and you're basically swapping out cross-site request forgery with",
    "start": "2805860",
    "end": "2811740"
  },
  {
    "text": "cross-site scripting so you choose your poison right interestingly interestingly",
    "start": "2811740",
    "end": "2820100"
  },
  {
    "text": "the the only o of spec I ever read that says maybe you don't need to use OAuth",
    "start": "2820100",
    "end": "2825720"
  },
  {
    "text": "is the a wolf browser-based application spec right they say you know o of of",
    "start": "2825720",
    "end": "2831240"
  },
  {
    "text": "maced was made for cross-site scenarios for third party scenarios but you need to talk to third party things or to you",
    "start": "2831240",
    "end": "2837540"
  },
  {
    "text": "know maybe your application doesn't need that feature maybe your application runs on a site right and here's your front",
    "start": "2837540",
    "end": "2844710"
  },
  {
    "text": "end and here's your back end what's the point of using tokens for that use cookies right you might have an",
    "start": "2844710",
    "end": "2852030"
  },
  {
    "text": "authentication system that's totally fine you might have to call external api's but if the if 90% of your",
    "start": "2852030",
    "end": "2858210"
  },
  {
    "text": "architecture looks like this then to be honest to me tokens look like overkill",
    "start": "2858210",
    "end": "2863370"
  },
  {
    "text": "asking for them managing them keeping them alive deleting them storing them",
    "start": "2863370",
    "end": "2868890"
  },
  {
    "text": "and so on yeah but cookies just on their own won't cut it right because cross-site request",
    "start": "2868890",
    "end": "2874620"
  },
  {
    "text": "forgery so we need some sort of anti fitori protection here and the good news",
    "start": "2874620",
    "end": "2879720"
  },
  {
    "text": "is for all the people that knew that it's a problem but never changed their applications the browser vendors will",
    "start": "2879720",
    "end": "2884940"
  },
  {
    "text": "gonna fix you up now okay I'm there's this new thing called same site cookies where they by default isolate cookies on",
    "start": "2884940",
    "end": "2892020"
  },
  {
    "start": "2885000",
    "end": "2885000"
  },
  {
    "text": "the site okay a site is not an origin an origin is you know protocol plus DNS",
    "start": "2892020",
    "end": "2897690"
  },
  {
    "text": "name plus port aside is basically everything that's under a top-level DNS registrar name your like API dot",
    "start": "2897690",
    "end": "2904650"
  },
  {
    "text": "mysite.com an app but my Cybercom they are the same site cookies will travel but it won't travel beyond that okay the",
    "start": "2904650",
    "end": "2915420"
  },
  {
    "text": "old way of doing that was NT for tree tokens that required extra work extra you know code to write all of the modern",
    "start": "2915420",
    "end": "2923520"
  },
  {
    "text": "browsers are switching to the same site model and actually in two weeks time on the 4th of February chromate he will end",
    "start": "2923520",
    "end": "2930750"
  },
  {
    "text": "the free here doesn't mean anything good well it does but it's also bad the free",
    "start": "2930750",
    "end": "2936510"
  },
  {
    "text": "means that chrome will change the behavior in crow matey and all of the cookies by",
    "start": "2936510",
    "end": "2941849"
  },
  {
    "text": "default will be same site okay before chrome 80 you had to opt in to the same",
    "start": "2941849",
    "end": "2948299"
  },
  {
    "text": "side protection but if you know Google because hey we are Google they just changed that behavior they changed the",
    "start": "2948299",
    "end": "2954210"
  },
  {
    "text": "spec because guess what the guy that writes the spec works for Google so they",
    "start": "2954210",
    "end": "2959970"
  },
  {
    "text": "will now treat every cookie by default with same site protection and you can",
    "start": "2959970",
    "end": "2965130"
  },
  {
    "text": "only imagine how many applications will break on the 5th of February yeah they're even more nasty thing is that",
    "start": "2965130",
    "end": "2972420"
  },
  {
    "text": "only chrome is doing it like this the others don't yet okay so yeah the next",
    "start": "2972420",
    "end": "2978630"
  },
  {
    "text": "you know if you are building web applications the next nine months will be a mess but it's for the greater good",
    "start": "2978630",
    "end": "2986099"
  },
  {
    "text": "I think okay so ultimately the O of PCP",
    "start": "2986099",
    "end": "2992039"
  },
  {
    "text": "spec for web applications distinguishes",
    "start": "2992039",
    "end": "2997259"
  },
  {
    "text": "between these two scenarios you have an application with a back-end and you have an application without a back-end and I just wanted to show you that crate ASCII",
    "start": "2997259",
    "end": "3003559"
  },
  {
    "text": "art again I couldn't be bothered in turning that into PowerPoint things but",
    "start": "3003559",
    "end": "3009799"
  },
  {
    "text": "but basically what they say is if you have a back-end all of your you know protocol handling should be done on the",
    "start": "3009799",
    "end": "3016489"
  },
  {
    "text": "back end you only protect the front-end back-end connection with a same side cookie or a t-4 tree cookie and then all",
    "start": "3016489",
    "end": "3024410"
  },
  {
    "text": "of the token related things are happening on the server if you have tokens at all right maybe you don't need",
    "start": "3024410",
    "end": "3030380"
  },
  {
    "text": "them at all the only reason you had them is to talk to your own back-end and that might be overkill um the other scenario they call",
    "start": "3030380",
    "end": "3037430"
  },
  {
    "text": "JavaScript applications without a back-end so apparently and I never had",
    "start": "3037430",
    "end": "3043880"
  },
  {
    "text": "that use case but apparently there are applications which are completely deployed on CD ends with no back end",
    "start": "3043880",
    "end": "3048979"
  },
  {
    "text": "whatsoever basically you just download the JavaScript and they should they should work then you don't have the",
    "start": "3048979",
    "end": "3054049"
  },
  {
    "text": "luxury of a back-end which means you the only thing you can do really is do the",
    "start": "3054049",
    "end": "3059150"
  },
  {
    "text": "token stuff on the front end okay to be honest this distinction doesn't make too",
    "start": "3059150",
    "end": "3064339"
  },
  {
    "text": "much sense to me they should really call it do you wanna store tokens in the browser or not right because that's the",
    "start": "3064339",
    "end": "3070489"
  },
  {
    "text": "question you have to ask yourself do you want to store them in the browser then you use this approach do you want to store them on the server because you",
    "start": "3070489",
    "end": "3076280"
  },
  {
    "text": "think that's better then use this approach right they all have their pros and cons none of them will save you from",
    "start": "3076280",
    "end": "3083090"
  },
  {
    "text": "cross-site scripting by the way but that's a different story ma'am but the real question you have to ask yourself",
    "start": "3083090",
    "end": "3088220"
  },
  {
    "text": "is how do I store these tokens yeah and as you know whatever you use to store",
    "start": "3088220",
    "end": "3094040"
  },
  {
    "text": "your token it's not secure in JavaScript because it's available by JavaScript and if somebody injects JavaScript in your",
    "start": "3094040",
    "end": "3100700"
  },
  {
    "text": "app they can access your data right so yeah to CSP as good as you can I know",
    "start": "3100700",
    "end": "3108620"
  },
  {
    "text": "it's not straightforward but try it and not just say let's turn it on oh it breaks let's turn it off again next time",
    "start": "3108620",
    "end": "3115100"
  },
  {
    "text": "that's the wrong approach okay ah refresh tokens in browsers right",
    "start": "3115100",
    "end": "3120910"
  },
  {
    "start": "3118000",
    "end": "3118000"
  },
  {
    "text": "that's another really interesting topic now now that the browser world is switching to code flow with pixie",
    "start": "3120910",
    "end": "3126770"
  },
  {
    "text": "refresh tokens are allowed should we use them refresh tokens have nice properties",
    "start": "3126770",
    "end": "3133550"
  },
  {
    "text": "right they are they a long lift and they they can be used to get new access tokens which make them really nice for",
    "start": "3133550",
    "end": "3139460"
  },
  {
    "text": "attack us yeah so you know think think carefully if you want to store refresh",
    "start": "3139460",
    "end": "3145940"
  },
  {
    "text": "tokens in the browser yeah if you do there are a couple of things you can do like a refresh token rotation sliding",
    "start": "3145940",
    "end": "3152810"
  },
  {
    "text": "exploration replay detection and so on so forth to make them more secure I just",
    "start": "3152810",
    "end": "3158420"
  },
  {
    "text": "wrote a blog post about that actually on the way here at the airport or don't do Refresh tokens at all in the sense of",
    "start": "3158420",
    "end": "3164540"
  },
  {
    "text": "that you are actually binding your renewal semantics to the session that you have with the server and once the",
    "start": "3164540",
    "end": "3170270"
  },
  {
    "text": "user locks out the token cannot be renewed okay use short token lifetimes",
    "start": "3170270",
    "end": "3176600"
  },
  {
    "text": "as well that's not a really good advice here okay",
    "start": "3176600",
    "end": "3181750"
  },
  {
    "start": "3181000",
    "end": "3181000"
  },
  {
    "text": "what's next so it turns out if you follow all of that advice there was",
    "start": "3181750",
    "end": "3187340"
  },
  {
    "text": "still attack scenarios here okay so you know o of it's moving into spaces where",
    "start": "3187340",
    "end": "3192650"
  },
  {
    "text": "we didn't see that coming eight years ago like financial industry health care",
    "start": "3192650",
    "end": "3197750"
  },
  {
    "text": "and so on yeah and of course the more money is involved the more motivated attack us get to find loopholes in your",
    "start": "3197750",
    "end": "3205730"
  },
  {
    "text": "system right and that's a very very good academic paper that shows more attacks that I haven't",
    "start": "3205730",
    "end": "3213830"
  },
  {
    "text": "covered here that are not even in the or Wharf BC piece yeah for example there's an attack against pixie Wow",
    "start": "3213830",
    "end": "3221830"
  },
  {
    "text": "but that kind of like that the summary of all of this is we are pretty good",
    "start": "3221830",
    "end": "3228740"
  },
  {
    "text": "these days if you follow the advice there is one weak link and that is still",
    "start": "3228740",
    "end": "3234860"
  },
  {
    "text": "the browser okay as I said the browser is very powerful it can show you I it can follow redirects here but the prose",
    "start": "3234860",
    "end": "3241190"
  },
  {
    "text": "is also very vulnerable because hey it shows you I it follows redirects so if you look at all of the specs that are",
    "start": "3241190",
    "end": "3246890"
  },
  {
    "text": "currently in the pipeline they all try to fix one thing the initial authorization request right where you",
    "start": "3246890",
    "end": "3252590"
  },
  {
    "text": "send the parameters over the browser to the server because when somebody can tamper with them they can do things that",
    "start": "3252590",
    "end": "3259640"
  },
  {
    "text": "you might not expect can be done okay so he actually did the way we will go is be",
    "start": "3259640",
    "end": "3265880"
  },
  {
    "text": "get rid of the authorization request the way we know it today and the very and you guess what all of that together this",
    "start": "3265880",
    "end": "3273950"
  },
  {
    "text": "is being worked on now oh well free okay and the idea is to get",
    "start": "3273950",
    "end": "3279620"
  },
  {
    "text": "you to compile all the problems and turn it into a new base spec that has all of",
    "start": "3279620",
    "end": "3285620"
  },
  {
    "text": "these things covered but as you know the IETF it's not like the fastest organization in the world it will take",
    "start": "3285620",
    "end": "3291410"
  },
  {
    "text": "many years so people are actually working today on a thing called a Worf 2.1 right and oh of 2.1 is basically you",
    "start": "3291410",
    "end": "3298940"
  },
  {
    "text": "apply or if you apply the PCPs and what you get in the end that will be the new baseline okay no more implicit no more",
    "start": "3298940",
    "end": "3306050"
  },
  {
    "text": "password use pixie all the things I just told you okay that will be you know it's",
    "start": "3306050",
    "end": "3311360"
  },
  {
    "text": "not official yet but I think that that's what's going to happen yeah two of the really interesting ingredients in 2.1 is",
    "start": "3311360",
    "end": "3317740"
  },
  {
    "text": "one is called secured authorization requests right I just said this is the",
    "start": "3317740",
    "end": "3324410"
  },
  {
    "start": "3318000",
    "end": "3318000"
  },
  {
    "text": "weakest link we have identified it's in it's happening in the browser if somebody can tamper with them we can",
    "start": "3324410",
    "end": "3329630"
  },
  {
    "text": "play tricks on someone yeah so what if we could remove them altogether what if we could remove or replace all",
    "start": "3329630",
    "end": "3336110"
  },
  {
    "text": "of these parameters with this what's that",
    "start": "3336110",
    "end": "3341380"
  },
  {
    "text": "it's a JSON web token right that is you know contains basically all contains all",
    "start": "3341600",
    "end": "3347130"
  },
  {
    "text": "the parameters as if they would be on the query string but they are signed and",
    "start": "3347130",
    "end": "3352470"
  },
  {
    "text": "you can't change them okay and guess what they have a type yeah that is an",
    "start": "3352470",
    "end": "3362280"
  },
  {
    "text": "interesting idea but practically speaking the the UDC urls get very very",
    "start": "3362280",
    "end": "3369300"
  },
  {
    "text": "long depending on how much you put in this JSON web tokens yeah so one step",
    "start": "3369300",
    "end": "3375030"
  },
  {
    "text": "further is this it's called pushed authorization requests and the idea is instead of doing an initial",
    "start": "3375030",
    "end": "3381360"
  },
  {
    "start": "3377000",
    "end": "3377000"
  },
  {
    "text": "authorization request you first open a back-channel to the server then you push",
    "start": "3381360",
    "end": "3387090"
  },
  {
    "text": "all of your parameters on that back channel to the server no prowess is involved so far okay this",
    "start": "3387090",
    "end": "3393600"
  },
  {
    "text": "call is authenticated with the client ID and the client secret and you can make that as strong as you want okay",
    "start": "3393600",
    "end": "3400080"
  },
  {
    "text": "so we're pushing these things first on a back-channel what this will give us back is basically an identifier for the",
    "start": "3400080",
    "end": "3407730"
  },
  {
    "text": "pushed parameters okay and then you are opening the browser and all you put on",
    "start": "3407730",
    "end": "3414000"
  },
  {
    "text": "your offers request is the identifier okay so now on the server side we will",
    "start": "3414000",
    "end": "3422250"
  },
  {
    "text": "basically reach into our data store we will get we will resolve the identifier to the parameters that have been pushed",
    "start": "3422250",
    "end": "3428310"
  },
  {
    "text": "before by you know authenticated pushed and then we will do the authorized request okay and that's all being done",
    "start": "3428310",
    "end": "3436200"
  },
  {
    "text": "as I said to get rid of these unverifiable parameters on the front",
    "start": "3436200",
    "end": "3442020"
  },
  {
    "text": "Channel I think with that it's pretty cool III can't wait to implement them okay so",
    "start": "3442020",
    "end": "3449670"
  },
  {
    "text": "summary you might think now why would I bought up if at all it seems to be",
    "start": "3449670",
    "end": "3455250"
  },
  {
    "text": "completely insecure right I mean so many things are going this and that and I have to do this and if I forget this and",
    "start": "3455250",
    "end": "3460590"
  },
  {
    "text": "I'm this happening um I guess the answer is it's hard it's a hard problem to",
    "start": "3460590",
    "end": "3468720"
  },
  {
    "text": "solve right Oh of to Oh was the first iteration of that protocol we learned",
    "start": "3468720",
    "end": "3473780"
  },
  {
    "text": "and I'm not saying it's insecure I'm just saying you can do better right and",
    "start": "3473780",
    "end": "3478910"
  },
  {
    "text": "I'm also saying that still the most problems we see our implementation flaws and not protocol flaws yeah you know the",
    "start": "3478910",
    "end": "3487460"
  },
  {
    "text": "thing is this there are some things you can't mitigate as a developer there are some things that are easy to mitigate",
    "start": "3487460",
    "end": "3493730"
  },
  {
    "text": "right and some things will always stay hard regardless how hard and the protocols are if somebody does a",
    "start": "3493730",
    "end": "3499190"
  },
  {
    "text": "targeted attack against your system it will always be hard because they analyze your exact implementation and not just",
    "start": "3499190",
    "end": "3506110"
  },
  {
    "text": "the general thing right um still you",
    "start": "3506110",
    "end": "3511580"
  },
  {
    "text": "know people ask me should I use a wharf at all or should I do my own protocol and you know the answer is very easy",
    "start": "3511580",
    "end": "3519230"
  },
  {
    "text": "don't okay what what what a specification really is it's a",
    "start": "3519230",
    "end": "3526120"
  },
  {
    "text": "pre-vetted threat model many smart people have worked on creating the spec many smart people have tried to break",
    "start": "3526120",
    "end": "3533330"
  },
  {
    "text": "that spec and many smart people are still iterating on it and we're getting improvements if you write your own",
    "start": "3533330",
    "end": "3539270"
  },
  {
    "text": "protocol there's exactly only one smart person that wrote it worked on it there's also exactly only one smart",
    "start": "3539270",
    "end": "3545060"
  },
  {
    "text": "person to try to break it right so what's better right so yes I think Olaf",
    "start": "3545060",
    "end": "3551510"
  },
  {
    "text": "is here to stay and it will improve and it will get better but we are pretty",
    "start": "3551510",
    "end": "3556880"
  },
  {
    "text": "good thank you [Applause]",
    "start": "3556880",
    "end": "3568650"
  }
]