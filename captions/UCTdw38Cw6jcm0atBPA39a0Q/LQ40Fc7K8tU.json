[
  {
    "text": "you know the part where you get through the queue and you finally get to the front of the queue",
    "start": "0",
    "end": "6180"
  },
  {
    "text": "and and you get to ride next you know that feeling you know how exciting it is to be next",
    "start": "6180",
    "end": "13860"
  },
  {
    "text": "you know what's really cool we're next we get to do this Isn't that cool",
    "start": "13860",
    "end": "20340"
  },
  {
    "text": "here's the part where I tell you I am definitely gonna post my slides online and there aren't any so I'm not going to",
    "start": "20340",
    "end": "25980"
  },
  {
    "text": "post them online but we're going to take a tour of asp.net minimal apis we're going to",
    "start": "25980",
    "end": "31500"
  },
  {
    "text": "start with an asp.net 5 project upgrade it to.net 7 and see all this cool",
    "start": "31500",
    "end": "36719"
  },
  {
    "text": "c-sharp 10 and 11 features that we get to leverage in that process all live coding the code is online right now so",
    "start": "36719",
    "end": "44160"
  },
  {
    "text": "you can grab the code from this URL up on GitHub github.com Rob Rich slash",
    "start": "44160",
    "end": "50340"
  },
  {
    "text": "minimal apis asp.net all of the things that we're going to do today it's online right now achievement unlocked",
    "start": "50340",
    "end": "59960"
  },
  {
    "text": "so each of the steps that we'll do is a separate folder so you can pop open that folder and take a look at the things and",
    "start": "60059",
    "end": "67380"
  },
  {
    "text": "by the way uh I didn't push refresh here um I updated a few things yesterday this",
    "start": "67380",
    "end": "74100"
  },
  {
    "text": "will be really cool um if this URL is a little bit too far you can head to Rob rich.org Rob",
    "start": "74100",
    "end": "80880"
  },
  {
    "text": "rich.org click on presentations here at the top and here is minimal apis with",
    "start": "80880",
    "end": "86700"
  },
  {
    "text": "asp.net and a link straight to that code so Rob rich.org may be an easier way to",
    "start": "86700",
    "end": "92100"
  },
  {
    "text": "get there and at that point then you can grab the code while we're here on robich.org let's",
    "start": "92100",
    "end": "98520"
  },
  {
    "text": "click on about me and see some of the things that I've done recently I am a developer advocate for Shoreline and",
    "start": "98520",
    "end": "104880"
  },
  {
    "text": "both Docker and Microsoft have given me some awards as well easy give Camp is",
    "start": "104880",
    "end": "109920"
  },
  {
    "text": "really fun easy give Camp brings volunteer developers together with Charities to build free software we",
    "start": "109920",
    "end": "116280"
  },
  {
    "text": "start building software Friday after work Sunday afternoon we deliver completed software to the Charities sleep is optional caffeine provided",
    "start": "116280",
    "end": "124079"
  },
  {
    "text": "if you're in Phoenix come join us for the next AZ give camp or if you'd like a gift Camp here in London or wherever you",
    "start": "124079",
    "end": "129660"
  },
  {
    "text": "came from where you wherever you traveled from find me here at the event hit me up on email Twitter or Mastodon",
    "start": "129660",
    "end": "136080"
  },
  {
    "text": "and let's get a givecamp in your neighborhood too some of the other things that I've done I'm a friend of Redgate a pro",
    "start": "136080",
    "end": "142980"
  },
  {
    "text": "microservices in.net6 that was a lot of fun to write I got to work with my friend Sean and Matt on that I run a",
    "start": "142980",
    "end": "149879"
  },
  {
    "text": "user group in Utah and one in Arizona and one of the things I'm particularly",
    "start": "149879",
    "end": "155280"
  },
  {
    "text": "proud of I replied to a.net rocks podcast episode they read my comments on the air and",
    "start": "155280",
    "end": "160500"
  },
  {
    "text": "they sent me a mug so there's my claim to fame as my coveted.net rocksmug and if you'd like",
    "start": "160500",
    "end": "166800"
  },
  {
    "text": "a.net rocks Richard's talk this morning was amazing though",
    "start": "166800",
    "end": "172440"
  },
  {
    "text": "so let's start with some interesting things I've got a folder here it has exactly one file in it let's open this",
    "start": "172440",
    "end": "179400"
  },
  {
    "text": "up in vs code I could have scaffolded it out or typed out the Cs proj file but",
    "start": "179400",
    "end": "185519"
  },
  {
    "text": "basically it just says I'm a.net website in this case it's dot net seven it's a website and that's",
    "start": "185519",
    "end": "193440"
  },
  {
    "text": "pretty much all it says so let's create a new file",
    "start": "193440",
    "end": "199040"
  },
  {
    "text": "program.cs oh thank you vs code yes it creates this dot vs code folder that",
    "start": "199280",
    "end": "205140"
  },
  {
    "text": "gives us some interesting things for debugging we'll nicely ignore that and let's write a web server",
    "start": "205140",
    "end": "210840"
  },
  {
    "text": "VAR Builder equals web application dot create Builder",
    "start": "210840",
    "end": "218700"
  },
  {
    "text": "uh yeah I'll pass in the command line arguments that works VAR app equals Builder dot build",
    "start": "218700",
    "end": "228140"
  },
  {
    "text": "app dot run that will start up my web server what do I want my web server to",
    "start": "228420",
    "end": "233580"
  },
  {
    "text": "do app.map get i'll map the home page to",
    "start": "233580",
    "end": "238980"
  },
  {
    "text": "this function and GitHub copilot has seen me do this a little bit so let's",
    "start": "238980",
    "end": "244260"
  },
  {
    "text": "say new we'll give it a new object nope not a task message equals hello world",
    "start": "244260",
    "end": "252659"
  },
  {
    "text": "but um in case somebody wants to pass in a name I'll make that optional actually",
    "start": "252659",
    "end": "259880"
  },
  {
    "text": "and let's say hello world or let's say hello name let's make",
    "start": "259880",
    "end": "267540"
  },
  {
    "text": "that a string like this and I'll even give it an optional NDC London",
    "start": "267540",
    "end": "276240"
  },
  {
    "text": "and that will do that cool so now that we've got our web server built let's say",
    "start": "276240",
    "end": "284660"
  },
  {
    "text": "dot net run and we'll",
    "start": "284660",
    "end": "290280"
  },
  {
    "text": "um oh it looks like I haven't run.net 7.0 point the patch that came out",
    "start": "290280",
    "end": "295620"
  },
  {
    "text": "yesterday since the since yesterday Okay so we've got our web server running",
    "start": "295620",
    "end": "300840"
  },
  {
    "text": "excellent let's come here to localhost 5000. and we can see that our",
    "start": "300840",
    "end": "307680"
  },
  {
    "text": "web server is running this is cool now if we pop open the developer tools and",
    "start": "307680",
    "end": "313199"
  },
  {
    "text": "reload it we can see that this is giving us a 200 we've got the correct response headers",
    "start": "313199",
    "end": "319199"
  },
  {
    "text": "content type application Json let's type in slash name equals",
    "start": "319199",
    "end": "327419"
  },
  {
    "text": "who and we can see that it's doing URL parsing as well that's pretty cool",
    "start": "327479",
    "end": "334139"
  },
  {
    "text": "so we took in this piece it's pulling data out of our query string automatically binding it to our",
    "start": "334139",
    "end": "339479"
  },
  {
    "text": "parameters outputting correctly formatted Json and all of that in a server that is",
    "start": "339479",
    "end": "347520"
  },
  {
    "text": "four lines of code now that's pretty cool",
    "start": "347520",
    "end": "353539"
  },
  {
    "text": "um that's not the code that I wrote yesterday though how did we get here I",
    "start": "358020",
    "end": "363539"
  },
  {
    "text": "remember the movement where we started talking about visual Fred as we moved from a regular from VB to vb.net and",
    "start": "363539",
    "end": "372360"
  },
  {
    "text": "we're like but but this is too weird so let's take a step back and see how we",
    "start": "372360",
    "end": "378840"
  },
  {
    "text": "got here so if I'm in visual studio and I wanted",
    "start": "378840",
    "end": "384240"
  },
  {
    "text": "to scaffold out a project that kind of had that minimal API and got all the files set up I did a new web API project",
    "start": "384240",
    "end": "392160"
  },
  {
    "text": "and there's this checkbox right here that says use controllers I uncheck that now I'm using minimal apis or I can",
    "start": "392160",
    "end": "399479"
  },
  {
    "text": "check that and now I'm using controllers again and that'll just get me started but in this website I've got",
    "start": "399479",
    "end": "407240"
  },
  {
    "text": "Net 5 website so we're going to see that nice warning down here in the build saying but but but it's not supported",
    "start": "407240",
    "end": "415319"
  },
  {
    "text": "anymore yeah but we've got this.net 5 website and as the website starts up we can see we have",
    "start": "415319",
    "end": "422039"
  },
  {
    "text": "a home page we've got an about page we've got a API that'll show us weather",
    "start": "422039",
    "end": "427500"
  },
  {
    "text": "details we've got Swagger so that we can try it out let's click try it out and execute and",
    "start": "427500",
    "end": "434819"
  },
  {
    "text": "we can see that we've got some Json results now what's interesting about this website is that we're actually using all",
    "start": "434819",
    "end": "443280"
  },
  {
    "text": "three paradigms of Hosting content in.net so here's our website",
    "start": "443280",
    "end": "449880"
  },
  {
    "text": "and we have a home controller here's our home controller we have an",
    "start": "449880",
    "end": "455220"
  },
  {
    "text": "index view we can come into the views folder and there's our index View and",
    "start": "455220",
    "end": "460860"
  },
  {
    "text": "here it says our home page so typical.net 5 website",
    "start": "460860",
    "end": "466259"
  },
  {
    "text": "we rigged this up because here in startup.cs we start off by saying add",
    "start": "466259",
    "end": "471720"
  },
  {
    "text": "controllers with views and then down here at the bottom we say map controller route",
    "start": "471720",
    "end": "477360"
  },
  {
    "text": "and that's what fires up asp.net MVC to be able to detect those",
    "start": "477360",
    "end": "483479"
  },
  {
    "text": "controllers match them with the views and everything works out great what's interesting though is that's our",
    "start": "483479",
    "end": "489720"
  },
  {
    "text": "home page if we go to the about page the about page actually uses razor pages",
    "start": "489720",
    "end": "495720"
  },
  {
    "text": "so Razer pages is excellent for being able to map a particular URL to a page",
    "start": "495720",
    "end": "502440"
  },
  {
    "text": "we could think of this kind of like classic ASP we don't want to do those layers of indirection we just want to go",
    "start": "502440",
    "end": "507479"
  },
  {
    "text": "straight from a URL to a page so here's our about page and that's working with",
    "start": "507479",
    "end": "512820"
  },
  {
    "text": "razor Pages we can see the pages folder and the about cshtml we've got Razer Pages well how",
    "start": "512820",
    "end": "519419"
  },
  {
    "text": "did we rig up Razer pages here in the startup we can see that we",
    "start": "519419",
    "end": "524520"
  },
  {
    "text": "say dot add razor pages so that will go scan our Razer Pages folder our Pages",
    "start": "524520",
    "end": "529680"
  },
  {
    "text": "folder we also have map razor pages and now our Razer Pages light up",
    "start": "529680",
    "end": "536339"
  },
  {
    "text": "but we also have web API in this and that's powering this weather forecast",
    "start": "536339",
    "end": "541620"
  },
  {
    "text": "controller and our Swagger page well how did we rig that up well here's our weather forecast controller that by the",
    "start": "541620",
    "end": "547740"
  },
  {
    "text": "way is a controller because it's a controller here in our startup.cs we said map controllers with",
    "start": "547740",
    "end": "555180"
  },
  {
    "text": "routes which nicely mapped all of our web API controllers too that's excellent",
    "start": "555180",
    "end": "561120"
  },
  {
    "text": "and then we also added Swagger and we added the Swagger UI now we chose to add",
    "start": "561120",
    "end": "566880"
  },
  {
    "text": "the Swagger UI only in development so that if we publish it to production those API endpoints are not as",
    "start": "566880",
    "end": "574380"
  },
  {
    "text": "discoverable that is definitely not a security mechanism but we're kind of using it to kind of Aid security a",
    "start": "574380",
    "end": "579899"
  },
  {
    "text": "little bit it's discoverable in development it's not discoverable in production if we did want to change that if we did",
    "start": "579899",
    "end": "586920"
  },
  {
    "text": "want to make them discoverable we could put those out here and now Swagger is available in production as well",
    "start": "586920",
    "end": "594060"
  },
  {
    "text": "so we have all three paradigms we have MVC we have razor pages and we have web",
    "start": "594060",
    "end": "600899"
  },
  {
    "text": "API yeah in the new new um new project dialogue their check boxes",
    "start": "600899",
    "end": "607200"
  },
  {
    "text": "and we have to check one or the other but they're just adding these lines and so we've got all three of them",
    "start": "607200",
    "end": "613560"
  },
  {
    "text": "now I probably wouldn't use all three in one project I would probably pick the",
    "start": "613560",
    "end": "618899"
  },
  {
    "text": "one that makes the most sense but I wanted to show how we can upgrade a net five project to.net seven and if you're",
    "start": "618899",
    "end": "625380"
  },
  {
    "text": "using any of these three paradigms which are all of them then you're not going to be left out so let's upgrade from.net5",
    "start": "625380",
    "end": "632279"
  },
  {
    "text": "to.net seven now we could definitely come in here to the properties pop open the property grid and do all the things",
    "start": "632279",
    "end": "637860"
  },
  {
    "text": "but what we're going to do to upgrade from five to seven change the number from five to seven",
    "start": "637860",
    "end": "644700"
  },
  {
    "text": "that's all the drop down does welcome to.net seven we just upgraded",
    "start": "644700",
    "end": "650279"
  },
  {
    "text": "if that's all you do is upgrade from.net5 to.net seven by changing the number you will immediately see",
    "start": "650279",
    "end": "656579"
  },
  {
    "text": "performance benefits they've done a lot in reducing allocations using span of T it the framework is just faster",
    "start": "656579",
    "end": "665100"
  },
  {
    "text": "and so if you get nothing else come into your project upgrade it from 3.1 to 5 to",
    "start": "665100",
    "end": "670680"
  },
  {
    "text": "7 from 5 to 7 from six to seven and you will see performance benefits",
    "start": "670680",
    "end": "676920"
  },
  {
    "text": "okay let's take it a little bit further I'm going to come in here and I'm going to say manage can you get packages let's",
    "start": "676920",
    "end": "682200"
  },
  {
    "text": "see if there's some updates oh look here's an updated package let's update it yes",
    "start": "682200",
    "end": "688079"
  },
  {
    "text": "the scariest part of this demo conference Wi-Fi it looks like that",
    "start": "688079",
    "end": "693360"
  },
  {
    "text": "package updated correctly and we can now see the new number here",
    "start": "693360",
    "end": "698640"
  },
  {
    "text": "so we'll fire it up and now we have a Net 7 website we upgraded our net core",
    "start": "698640",
    "end": "705660"
  },
  {
    "text": "3.1 or 5 or 6 website just by flipping the number and updating nuget packages",
    "start": "705660",
    "end": "712920"
  },
  {
    "text": "and now we can see that the website is going to work exactly as it did before we've got an MVC page right here we've",
    "start": "712920",
    "end": "720660"
  },
  {
    "text": "got a Razer Pages page right here we've got a web API page right here together",
    "start": "720660",
    "end": "727440"
  },
  {
    "text": "with the Swagger details it all just works",
    "start": "727440",
    "end": "733440"
  },
  {
    "text": "cool any questions so far about upgrading from.net to net seven",
    "start": "733440",
    "end": "740180"
  },
  {
    "text": "excellent now if you're going to stop here that's totally fine but let's see if we can push it further",
    "start": "744060",
    "end": "750779"
  },
  {
    "text": "now one of the things that is really interesting here in let's pull up a home",
    "start": "750779",
    "end": "757200"
  },
  {
    "text": "controller we start out by indenting four spaces for our class we ended another four",
    "start": "757200",
    "end": "765000"
  },
  {
    "text": "spaces for our method we indent four spaces I'm at 12 spaces in and I haven't",
    "start": "765000",
    "end": "771300"
  },
  {
    "text": "even said anything yet okay we could change it from spaces to tabs we could change it to less spaces",
    "start": "771300",
    "end": "778440"
  },
  {
    "text": "we can definitely have that argument but by default I am 12 spaces in and I haven't said anything yet",
    "start": "778440",
    "end": "785220"
  },
  {
    "text": "let's see if we can optimize that a little bit now one of the things that we notice is that typically we have a namespace up at",
    "start": "785220",
    "end": "792000"
  },
  {
    "text": "the top and then we never change it again well if I have the entire file that sits",
    "start": "792000",
    "end": "800220"
  },
  {
    "text": "in a single namespace let's do the new syntax and make it apply to the entire",
    "start": "800220",
    "end": "806459"
  },
  {
    "text": "file now I just push semicolon there and vs code visual studio just automatically",
    "start": "806459",
    "end": "811579"
  },
  {
    "text": "unindented it that far yes I realize I'm about to change every line and every",
    "start": "811579",
    "end": "817139"
  },
  {
    "text": "file so git diff is now um completely wrong but we've now got a",
    "start": "817139",
    "end": "822720"
  },
  {
    "text": "file scope namespace now if I'm Auto generating code or if I have a file that has multiple namespaces",
    "start": "822720",
    "end": "829380"
  },
  {
    "text": "in it I can still do it the old way that's totally fine but if I like this new style I'm now indenting only eight",
    "start": "829380",
    "end": "836220"
  },
  {
    "text": "spaces to get into my code that's kind of cool so let's do that let's come around to",
    "start": "836220",
    "end": "842160"
  },
  {
    "text": "all of our other namespaces and we will indent them",
    "start": "842160",
    "end": "849120"
  },
  {
    "text": "using file scope namespaces there's one there there's one here",
    "start": "849120",
    "end": "855120"
  },
  {
    "text": "there's one here there's one here I never understood why",
    "start": "855120",
    "end": "861959"
  },
  {
    "text": "weather forecast wasn't in the models folder but okay",
    "start": "861959",
    "end": "867959"
  },
  {
    "text": "and now let's go find all of the namespace lines",
    "start": "867959",
    "end": "874800"
  },
  {
    "text": "make sure I got all of them yes excellent",
    "start": "874800",
    "end": "881639"
  },
  {
    "text": "and if we build this we can see that it builds successfully cool",
    "start": "881639",
    "end": "887639"
  },
  {
    "text": "now we could have definitely stopped with just changing the file num the version number but this is kind of cool",
    "start": "887639",
    "end": "893820"
  },
  {
    "text": "we've now taken some advantage of some interesting things next up",
    "start": "893820",
    "end": "901639"
  },
  {
    "text": "using statements have you ever fought over a pull request",
    "start": "902760",
    "end": "910500"
  },
  {
    "text": "where the answer was you've got an extra using statement you've got a using statement you didn't sort the using statements",
    "start": "910500",
    "end": "916560"
  },
  {
    "text": "I hate that no just just accept my code I know I",
    "start": "916560",
    "end": "921779"
  },
  {
    "text": "didn't visual studio just automatically generated I didn't even scroll up that high in the file anyway just just make",
    "start": "921779",
    "end": "928139"
  },
  {
    "text": "that go away we spend a lot of time fighting over",
    "start": "928139",
    "end": "933480"
  },
  {
    "text": "using statements and in fact Visual Studio is about to tell me that I can remove all of these and okay so maybe we",
    "start": "933480",
    "end": "941220"
  },
  {
    "text": "can have a build task that removes them but then does it commit and yeah that's",
    "start": "941220",
    "end": "946260"
  },
  {
    "text": "a whole thing so let's centralize all of our using",
    "start": "946260",
    "end": "951660"
  },
  {
    "text": "statements I'm going to add a new file let's call this one usings.js",
    "start": "951660",
    "end": "960060"
  },
  {
    "text": "are usings dot CS and this won't be a class file instead",
    "start": "960779",
    "end": "968339"
  },
  {
    "text": "this will be a global usings file Global using system",
    "start": "968339",
    "end": "976279"
  },
  {
    "text": "excellent anywhere in any code in this project that needs to say using system",
    "start": "976440",
    "end": "983519"
  },
  {
    "text": "no longer needs to do that because this applies to all of the files in my",
    "start": "983519",
    "end": "988920"
  },
  {
    "text": "project so here inside of",
    "start": "988920",
    "end": "994019"
  },
  {
    "text": "um weather forecast.cs where that's the only using it's now completely obsolete I can",
    "start": "994019",
    "end": "1000860"
  },
  {
    "text": "remove it and if we build we can see that it still builds successfully",
    "start": "1000860",
    "end": "1007279"
  },
  {
    "text": "cool I just moved all of those crazy using statements from all of the files",
    "start": "1007279",
    "end": "1012620"
  },
  {
    "text": "into one spot so now we can argue about just one thing let's remove and sort in",
    "start": "1012620",
    "end": "1018199"
  },
  {
    "text": "there so let's come through in all of the rest of the files and let's come grab all of our using statements and",
    "start": "1018199",
    "end": "1024980"
  },
  {
    "text": "we'll put them here in using.cs and so let's go grab those",
    "start": "1024980",
    "end": "1030380"
  },
  {
    "text": "let's go grab these and let's go grab",
    "start": "1030380",
    "end": "1037579"
  },
  {
    "text": "these and let's go grab",
    "start": "1037579",
    "end": "1045918"
  },
  {
    "text": "these",
    "start": "1045919",
    "end": "1048759"
  },
  {
    "text": "and let's go grab these",
    "start": "1052660",
    "end": "1058059"
  },
  {
    "text": "and I think there's one more right here",
    "start": "1061100",
    "end": "1067760"
  },
  {
    "text": "oh that one doesn't have one cool so all of these using statements I want to now turn into Global using statements so a",
    "start": "1067760",
    "end": "1074900"
  },
  {
    "text": "little bit of regex let's find the beginning of the line and let's add Global dot into it",
    "start": "1074900",
    "end": "1080240"
  },
  {
    "text": "magic of regex that is really cool let's now take out the double global",
    "start": "1080240",
    "end": "1085820"
  },
  {
    "text": "build let's go find all of the using in my",
    "start": "1085820",
    "end": "1091220"
  },
  {
    "text": "code make sure I got them all I did excellent",
    "start": "1091220",
    "end": "1096620"
  },
  {
    "text": "cool now I love here in Visual Studio we get the green squiggle saying up",
    "start": "1096620",
    "end": "1102320"
  },
  {
    "text": "I think you already did that one so let's remove all of those here's some and I could definitely use the shortcut",
    "start": "1102320",
    "end": "1108679"
  },
  {
    "text": "there but I'm gonna skip that one for now let's delete these and this one and",
    "start": "1108679",
    "end": "1116240"
  },
  {
    "text": "this one and these and this",
    "start": "1116240",
    "end": "1121880"
  },
  {
    "text": "and this cool I have now 16 using statements for",
    "start": "1121880",
    "end": "1128299"
  },
  {
    "text": "my entire project now if we have a library that has a conflicting definition maybe especially",
    "start": "1128299",
    "end": "1135020"
  },
  {
    "text": "in testing the thing that defines it we may want to specifically put that using",
    "start": "1135020",
    "end": "1140840"
  },
  {
    "text": "statement inside that file and we definitely can but we could also centralize all the",
    "start": "1140840",
    "end": "1146419"
  },
  {
    "text": "other ones let's create all of the system dot whatevers and all the microsoft.whatevers and all the our site",
    "start": "1146419",
    "end": "1152840"
  },
  {
    "text": "dot whatevers and put those here in this Global using file that applies to all",
    "start": "1152840",
    "end": "1157880"
  },
  {
    "text": "things in our project now there's nothing magic about this file name we could have put it inside of the top of",
    "start": "1157880",
    "end": "1163120"
  },
  {
    "text": "program.cs we could have put an in a file named Global we could put it wherever we wanted it's just a file",
    "start": "1163120",
    "end": "1172539"
  },
  {
    "text": "now that's kind of interesting but this is a website and there's probably some",
    "start": "1172880",
    "end": "1181539"
  },
  {
    "text": "namespaces that get pulled in automatically are some usings that most",
    "start": "1181539",
    "end": "1186919"
  },
  {
    "text": "projects might need to include now we can tell from this project that it is a",
    "start": "1186919",
    "end": "1192860"
  },
  {
    "text": "website so could we just you know say automatically import those things",
    "start": "1192860",
    "end": "1200539"
  },
  {
    "text": "let's come in here and let's say implicit usings",
    "start": "1200539",
    "end": "1205880"
  },
  {
    "text": "enable now if I created a new project in.net6 or net seven this would be in here",
    "start": "1205880",
    "end": "1211820"
  },
  {
    "text": "automatically but we upgraded a.net 5 project so it wasn't in here yet now this implicit usings let's build",
    "start": "1211820",
    "end": "1219200"
  },
  {
    "text": "this again and then let's go looking inside of our project I'm going to go",
    "start": "1219200",
    "end": "1224299"
  },
  {
    "text": "into this asp.net 5 folder because that's the one we updated inside the object folder",
    "start": "1224299",
    "end": "1230059"
  },
  {
    "text": "and let's go into.net7 and let's look for this file",
    "start": "1230059",
    "end": "1238179"
  },
  {
    "text": "site.globalusings.g.cs because we turned on implicit usings this file gets",
    "start": "1239260",
    "end": "1244280"
  },
  {
    "text": "generated for us automatically now the cool part about this file is these are all of the usings that just",
    "start": "1244280",
    "end": "1250640"
  },
  {
    "text": "Auto magically get pulled in so I'm going to set this at the top of",
    "start": "1250640",
    "end": "1256280"
  },
  {
    "text": "my code temporarily and that will help me find all of the",
    "start": "1256280",
    "end": "1261620"
  },
  {
    "text": "green squiggles of things that are already in there oh cool all of these ones",
    "start": "1261620",
    "end": "1268900"
  },
  {
    "text": "this one this one and now I can go delete all of these and",
    "start": "1268900",
    "end": "1275360"
  },
  {
    "text": "that'll be great now this is interesting Global using Global colon",
    "start": "1275360",
    "end": "1284059"
  },
  {
    "text": "this first one says that it's going to apply to everything in the project this one says that the namespace is a",
    "start": "1284059",
    "end": "1292220"
  },
  {
    "text": "global namespace what if I created a file where I said namespace site Dot",
    "start": "1292220",
    "end": "1299659"
  },
  {
    "text": "system okay first off shame on me for doing so but second off because I've created this",
    "start": "1299659",
    "end": "1305840"
  },
  {
    "text": "then a system no longer means what we thought it did and so as a tribute to",
    "start": "1305840",
    "end": "1312919"
  },
  {
    "text": "making sure that this is actually really the top of the namespace tree it says",
    "start": "1312919",
    "end": "1318200"
  },
  {
    "text": "Global colon colon so yeah we could go run around in our usings and do that too but I'll just",
    "start": "1318200",
    "end": "1324679"
  },
  {
    "text": "make the assumption that we're not being dumb about namespaces and just leave it cool",
    "start": "1324679",
    "end": "1331340"
  },
  {
    "text": "all of the usings in all of the files in this entire project are now right there",
    "start": "1331340",
    "end": "1338780"
  },
  {
    "text": "all six of them can we stop fighting about this in PRS",
    "start": "1338780",
    "end": "1344480"
  },
  {
    "text": "now please please yeah now we fight about exactly one file",
    "start": "1344480",
    "end": "1351080"
  },
  {
    "text": "should I delete this one line sure okay fight's over",
    "start": "1351080",
    "end": "1357980"
  },
  {
    "text": "we're done that's cool all of the usings from our project now are centralized in one place and we don't have to worry",
    "start": "1357980",
    "end": "1364460"
  },
  {
    "text": "about it in our code trimming the back out adding them back in if we want to grab a specific library that may only",
    "start": "1364460",
    "end": "1371179"
  },
  {
    "text": "apply to one file and we don't want this particular Import in all of the rest of",
    "start": "1371179",
    "end": "1376700"
  },
  {
    "text": "the files we can definitely put it at the top of that file and that totally makes sense but in the majority of the case we'll probably put them here inside",
    "start": "1376700",
    "end": "1383659"
  },
  {
    "text": "This Global usings file and if we start up our website we can see that it still works just fine",
    "start": "1383659",
    "end": "1390440"
  },
  {
    "text": "we've used file scope namespaces we've used Global usings we've used implicit",
    "start": "1390440",
    "end": "1396200"
  },
  {
    "text": "usings and MVC web API or razor pages and web API all still work great",
    "start": "1396200",
    "end": "1405020"
  },
  {
    "text": "any questions so far yep most Ides usually Auto add musings to",
    "start": "1405020",
    "end": "1413539"
  },
  {
    "text": "your file can you configure The Ides to add them to your Global good question so a lot of Ides are going to automatically",
    "start": "1413539",
    "end": "1419480"
  },
  {
    "text": "put our usings at the top of the file can we get it to put in in our Global file",
    "start": "1419480",
    "end": "1424520"
  },
  {
    "text": "I haven't found a way to do that there is no convention on what that file name is and so I totally get that you know it",
    "start": "1424520",
    "end": "1431659"
  },
  {
    "text": "could go look for the file but there is no the file it's",
    "start": "1431659",
    "end": "1437419"
  },
  {
    "text": "whatever we chose to name it and wherever we chose to put it and it might be in multiple files so visual studio is kind of like",
    "start": "1437419",
    "end": "1444500"
  },
  {
    "text": "I don't know so yeah it is unfortunate and we'll see that in a bit where it puts it at the",
    "start": "1444500",
    "end": "1450860"
  },
  {
    "text": "top and that may not be exactly where we want it yeah I'm not worried",
    "start": "1450860",
    "end": "1457779"
  },
  {
    "text": "but yeah we're gonna fight about that in a PR instead great question thanks any other",
    "start": "1457880",
    "end": "1464600"
  },
  {
    "text": "questions right here yep",
    "start": "1464600",
    "end": "1469840"
  },
  {
    "text": "can I use an alias with the usings yes I can the cool part is I can also use the other usings where I specifically grab",
    "start": "1470659",
    "end": "1477679"
  },
  {
    "text": "the static name and make all of the functions available without a class name that's available in global usings as",
    "start": "1477679",
    "end": "1484880"
  },
  {
    "text": "well that does sound terrifying where did",
    "start": "1484880",
    "end": "1492320"
  },
  {
    "text": "this function come from uh I don't know yeah Okay so we've got file scoped",
    "start": "1492320",
    "end": "1500059"
  },
  {
    "text": "usings let's take advantage of the new Builder",
    "start": "1500059",
    "end": "1507679"
  },
  {
    "text": "now right here here in program.cs we have kind of an interesting thing going",
    "start": "1507679",
    "end": "1513140"
  },
  {
    "text": "on now as uh developers we always look for public static void main that's kind",
    "start": "1513140",
    "end": "1518419"
  },
  {
    "text": "of the initiation of all the things and here in public static void main we create this host Builder we dot build",
    "start": "1518419",
    "end": "1524840"
  },
  {
    "text": "dot run what's this host Builder um I don't know I think that's Latin for",
    "start": "1524840",
    "end": "1532460"
  },
  {
    "text": "um bootstrap this startup file it feels like that entire file is",
    "start": "1532460",
    "end": "1537559"
  },
  {
    "text": "useless all it's saying is startup is over there here in startup we have nice sections",
    "start": "1537559",
    "end": "1542720"
  },
  {
    "text": "that we can understand better we've got this configure Services where it sets up the ioc container we've got configure",
    "start": "1542720",
    "end": "1549740"
  },
  {
    "text": "where it defines the pipeline here's where magic starts to happen let's take advantage of the new Builder",
    "start": "1549740",
    "end": "1555200"
  },
  {
    "text": "though and get rid of this whole create host Builder thing that thing is just Mayhem",
    "start": "1555200",
    "end": "1561100"
  },
  {
    "text": "bye-bye VAR Builder equals web application.createbuilder",
    "start": "1561100",
    "end": "1568640"
  },
  {
    "text": "now we can pass in our command line arguments that'll be helpful for if we",
    "start": "1569059",
    "end": "1574159"
  },
  {
    "text": "have any overrides on the command line it's still going to pick up our app config our app settings.config and it'll",
    "start": "1574159",
    "end": "1579620"
  },
  {
    "text": "still pick up environment variables but picking up command line arguments is interesting too now we'll",
    "start": "1579620",
    "end": "1585860"
  },
  {
    "text": "set up ioc container and then let's say VAR app equals",
    "start": "1585860",
    "end": "1593059"
  },
  {
    "text": "Builder dot build and then we'll set up our request",
    "start": "1593059",
    "end": "1600200"
  },
  {
    "text": "pipeline and then let's say app.run",
    "start": "1600200",
    "end": "1607460"
  },
  {
    "text": "cool as a developer looking for static void main to try and find out how my app",
    "start": "1607760",
    "end": "1613159"
  },
  {
    "text": "works that's a lot more understandable to me now we still need to do these steps so",
    "start": "1613159",
    "end": "1619100"
  },
  {
    "text": "set up ioc container well it's currently in startup.cs so let's say VAR startup",
    "start": "1619100",
    "end": "1624620"
  },
  {
    "text": "equals new startup and it takes in a configuration Builder dot configuration",
    "start": "1624620",
    "end": "1630799"
  },
  {
    "text": "excellent then let's set up the ROC container startup Dot",
    "start": "1630799",
    "end": "1638080"
  },
  {
    "text": "configure Services it takes in nothing",
    "start": "1638080",
    "end": "1644779"
  },
  {
    "text": "nope it takes in services so let's send in Builder dot services and we're set up",
    "start": "1644779",
    "end": "1650419"
  },
  {
    "text": "request pipelines startup dot configure it takes in an app and an environment",
    "start": "1650419",
    "end": "1659559"
  },
  {
    "text": "cool now if we like that separation between program and startup we can definitely",
    "start": "1659779",
    "end": "1667100"
  },
  {
    "text": "stop here because otherwise this method might get this class might get a little long but that's",
    "start": "1667100",
    "end": "1674240"
  },
  {
    "text": "kind of the basics of how we set up our web server but I want to take it a little bit farther I don't really like",
    "start": "1674240",
    "end": "1680240"
  },
  {
    "text": "this separation between program and startup so I'm going to go grab these configure Services details and I'm going",
    "start": "1680240",
    "end": "1687260"
  },
  {
    "text": "to set it right here inside of program let's put it right there now we don't have a Services we could",
    "start": "1687260",
    "end": "1694700"
  },
  {
    "text": "say VAR Services equals builder.services that definitely works",
    "start": "1694700",
    "end": "1700640"
  },
  {
    "text": "but I'm going to go the other direction and I'm just going to say builder.services all the things",
    "start": "1700640",
    "end": "1708740"
  },
  {
    "text": "and there's actually a simpler way to do Swagger gen I could just leave all of that off too if I wanted to get extra",
    "start": "1708740",
    "end": "1714700"
  },
  {
    "text": "spiffy but yeah I'll leave that in when I create a new asp.net 7 project it",
    "start": "1714700",
    "end": "1722059"
  },
  {
    "text": "will actually not have this piece which is kind of cool okay let's now go grab our request",
    "start": "1722059",
    "end": "1727520"
  },
  {
    "text": "pipeline so here's all of the pieces there let's remove that from there and",
    "start": "1727520",
    "end": "1733520"
  },
  {
    "text": "set it in here which by the way means that we yeah we",
    "start": "1733520",
    "end": "1740179"
  },
  {
    "text": "can get rid of the endpoints too thank you vs",
    "start": "1740179",
    "end": "1745360"
  },
  {
    "text": "let's say app.map controller and app.map racer pages",
    "start": "1745760",
    "end": "1752140"
  },
  {
    "text": "and now we can just get rid of this startup thing all together",
    "start": "1752140",
    "end": "1758120"
  },
  {
    "text": "goodbye startup delete",
    "start": "1758120",
    "end": "1763299"
  },
  {
    "text": "now there is one more spot here in program.cs where it needs NV okay app",
    "start": "1763460",
    "end": "1769460"
  },
  {
    "text": "dot environment cool and we can build our app and we can see",
    "start": "1769460",
    "end": "1776299"
  },
  {
    "text": "that everything starts up just fine cool now that's fun we've kind of extracted",
    "start": "1776299",
    "end": "1783080"
  },
  {
    "text": "away all of the Mayhem of what is public static void main doing and we can even",
    "start": "1783080",
    "end": "1788419"
  },
  {
    "text": "take this a step farther and the cool part is that this works here for program.cs the unfortunate part is it",
    "start": "1788419",
    "end": "1794840"
  },
  {
    "text": "only works here for program.cs it does not work for any other files in our solution but we can say",
    "start": "1794840",
    "end": "1801860"
  },
  {
    "text": "let's just remove that whole class and Method thing",
    "start": "1801860",
    "end": "1807320"
  },
  {
    "text": "and because it's program.cs we can assume that it is the public static void",
    "start": "1807320",
    "end": "1812779"
  },
  {
    "text": "main method and then here's just the contents of that method",
    "start": "1812779",
    "end": "1818840"
  },
  {
    "text": "where did args come from yeah we can argue about whether this is",
    "start": "1818840",
    "end": "1825200"
  },
  {
    "text": "better or worse but it's definitely possible and that's cool and this will build just fine",
    "start": "1825200",
    "end": "1831320"
  },
  {
    "text": "we now have taken advantage of that new Builder and we can kind of get more pieces in here to kind of Define all of",
    "start": "1831320",
    "end": "1838580"
  },
  {
    "text": "the specifics now if we're both razor pages and web API and MVC we've been",
    "start": "1838580",
    "end": "1845899"
  },
  {
    "text": "able to upgrade our project from.net5 to.net6 and take advantage of these new c-sharp 10 and 11 features",
    "start": "1845899",
    "end": "1853039"
  },
  {
    "text": "any questions so far yep",
    "start": "1853039",
    "end": "1858700"
  },
  {
    "text": "can we use async here in the program CS yes we can",
    "start": "1859940",
    "end": "1865100"
  },
  {
    "text": "um none of these methods are async but yes top level async and await works just fine here great question",
    "start": "1865100",
    "end": "1873580"
  },
  {
    "text": "so this is a minimal api's talk and we haven't done minimal API in yet",
    "start": "1880399",
    "end": "1885980"
  },
  {
    "text": "let's do that so",
    "start": "1885980",
    "end": "1891700"
  },
  {
    "text": "here is MVC here's Razer Pages let's do",
    "start": "1894620",
    "end": "1900020"
  },
  {
    "text": "this app dot map get now we can't do the home page because that's actually going",
    "start": "1900020",
    "end": "1905179"
  },
  {
    "text": "to our home controller so let's say API slash minimal and I'm going to Route it to this",
    "start": "1905179",
    "end": "1911480"
  },
  {
    "text": "function here new",
    "start": "1911480",
    "end": "1915260"
  },
  {
    "text": "message equals hello and let's say name let's grab name",
    "start": "1918760",
    "end": "1927520"
  },
  {
    "text": "String name and we will make it optional nullable reference types is awesome",
    "start": "1927520",
    "end": "1934159"
  },
  {
    "text": "we could specifically say this is from query string or from body but it's",
    "start": "1934159",
    "end": "1940700"
  },
  {
    "text": "implied so we'll just leave it that way hello name and we'll give it a default of world and let's give it an ID of I",
    "start": "1940700",
    "end": "1949700"
  },
  {
    "text": "don't know three and here is this minimal API",
    "start": "1949700",
    "end": "1955460"
  },
  {
    "text": "cool we mapped get to this function together with web API together with MVC",
    "start": "1955460",
    "end": "1961520"
  },
  {
    "text": "together with Razer Pages it's just another mechanism that we can use we now have a fourth Paradigm for building web",
    "start": "1961520",
    "end": "1968360"
  },
  {
    "text": "servers cool so we did map get could we do some",
    "start": "1968360",
    "end": "1973520"
  },
  {
    "text": "more stuff let's say app.map post now I want to play with",
    "start": "1973520",
    "end": "1978580"
  },
  {
    "text": "attribute routing here so I'm going to say this is one",
    "start": "1978580",
    "end": "1984940"
  },
  {
    "text": "two and that will give me two parameters and so I'll say string one and int 2.",
    "start": "1985100",
    "end": "1994240"
  },
  {
    "text": "and let's do some interesting things with that return a new",
    "start": "1994240",
    "end": "2000100"
  },
  {
    "text": "um message that is one and an ID of two",
    "start": "2000100",
    "end": "2009840"
  },
  {
    "text": "uh comma there you go cool so we get attribute routing in the same",
    "start": "2012159",
    "end": "2017500"
  },
  {
    "text": "way that we had attribute routing with controllers it just works it'll go pick out those parameters and set them into",
    "start": "2017500",
    "end": "2023919"
  },
  {
    "text": "place in our method to be able to pull in those details now I could give it some more validation",
    "start": "2023919",
    "end": "2030340"
  },
  {
    "text": "about you know make sure that it actually isn't in to make sure it's positive I could do other things in",
    "start": "2030340",
    "end": "2035980"
  },
  {
    "text": "there with attribute routing perhaps I make this one optional and this one optional you know I could definitely do",
    "start": "2035980",
    "end": "2042039"
  },
  {
    "text": "that too oh and it's saying hey can you like do that",
    "start": "2042039",
    "end": "2047679"
  },
  {
    "text": "cool so now I've got a post what about a put",
    "start": "2047679",
    "end": "2057099"
  },
  {
    "text": "app Dot map put and here I'll just do API slash",
    "start": "2057099",
    "end": "2064060"
  },
  {
    "text": "minimal but here I want to do a little bit more in My Method let's say I'd like",
    "start": "2064060",
    "end": "2069638"
  },
  {
    "text": "to um dues take in an object",
    "start": "2069639",
    "end": "2075820"
  },
  {
    "text": "uh I'll actually even say this uses a route",
    "start": "2075820",
    "end": "2080878"
  },
  {
    "text": "um and let's do some validation bull valid in this case it is true",
    "start": "2081099",
    "end": "2089560"
  },
  {
    "text": "let's take in another object and now if it wasn't valid",
    "start": "2089560",
    "end": "2097500"
  },
  {
    "text": "then we want to say return this Dot",
    "start": "2099220",
    "end": "2105460"
  },
  {
    "text": "bad request and then we'll save and then we'll",
    "start": "2105460",
    "end": "2113380"
  },
  {
    "text": "return this Dot okay",
    "start": "2113380",
    "end": "2118500"
  },
  {
    "text": "cool that works out great almost",
    "start": "2120220",
    "end": "2126040"
  },
  {
    "text": "in a controller we're really used to saying this dot or maybe we're just pulling it out of the controller and so",
    "start": "2126040",
    "end": "2132520"
  },
  {
    "text": "this refers to the controller well what does this refer to here",
    "start": "2132520",
    "end": "2140940"
  },
  {
    "text": "it refers to this method",
    "start": "2142420",
    "end": "2147700"
  },
  {
    "text": "now this Lambda doesn't have a bad request thing on it it doesn't have an okay thing on it so how do we do",
    "start": "2147700",
    "end": "2155200"
  },
  {
    "text": "these how do we return interesting status codes well we can do response",
    "start": "2155200",
    "end": "2163599"
  },
  {
    "text": "is it response results",
    "start": "2163900",
    "end": "2168660"
  },
  {
    "text": "dot whatever and so here in results we have this",
    "start": "2169320",
    "end": "2175680"
  },
  {
    "text": "object go to definition that can give us lots of different things so status 403",
    "start": "2175680",
    "end": "2183640"
  },
  {
    "text": "Forbidden here's a forbid async here's a sign in async here's a",
    "start": "2183640",
    "end": "2190980"
  },
  {
    "text": "Content async all of the ones that we had are here inside of results and they",
    "start": "2190980",
    "end": "2198640"
  },
  {
    "text": "return an i result interface so we could choose to implement this I",
    "start": "2198640",
    "end": "2205180"
  },
  {
    "text": "result interface and do our own things so one of the things I like to do is to",
    "start": "2205180",
    "end": "2210820"
  },
  {
    "text": "be able to send a status code and a Json result and so we have a status code result and",
    "start": "2210820",
    "end": "2216460"
  },
  {
    "text": "we have a Json body result but we don't have one that is both so I spin up a new thing I'll defend I'll descend from I",
    "start": "2216460",
    "end": "2223839"
  },
  {
    "text": "result and now I've defined my task that does interesting things so that's how we",
    "start": "2223839",
    "end": "2229780"
  },
  {
    "text": "do kind of larger methods here well let's clean this up a little bit I",
    "start": "2229780",
    "end": "2234820"
  },
  {
    "text": "want to create a new model I'll call this a minimal model",
    "start": "2234820",
    "end": "2242520"
  },
  {
    "text": "and um it will have public int ID",
    "start": "2244980",
    "end": "2251500"
  },
  {
    "text": "public string message and public minimal model optional of",
    "start": "2251500",
    "end": "2261880"
  },
  {
    "text": "data yeah I could definitely do a record and that would be interesting I'll make",
    "start": "2261880",
    "end": "2266920"
  },
  {
    "text": "message required so I need to Define it to a value and now we have our minimal",
    "start": "2266920",
    "end": "2272320"
  },
  {
    "text": "model so now that we've got our minimal model let's come back here to our",
    "start": "2272320",
    "end": "2278520"
  },
  {
    "text": "program.cs and now we can do some interesting things because I'm returning a minimal model",
    "start": "2278520",
    "end": "2284640"
  },
  {
    "text": "I can now take in a minimal model and",
    "start": "2284640",
    "end": "2290079"
  },
  {
    "text": "um now I need to play the Caps game because I was just returning",
    "start": "2290079",
    "end": "2295599"
  },
  {
    "text": "lowercase things but now we've got kind of more established pieces",
    "start": "2295599",
    "end": "2302500"
  },
  {
    "text": "cool all the things that we can do inside of",
    "start": "2302500",
    "end": "2307839"
  },
  {
    "text": "controllers we can now do inside of web API inside of minimal apis",
    "start": "2307839",
    "end": "2313540"
  },
  {
    "text": "any questions right here",
    "start": "2313540",
    "end": "2316680"
  },
  {
    "text": "great question so how do I prevent the baddies from getting in can I do authorization",
    "start": "2335339",
    "end": "2341079"
  },
  {
    "text": "now what I would love to be able to do is to say something like",
    "start": "2341079",
    "end": "2346599"
  },
  {
    "text": "ah authorized here because that would feel a lot like a controller",
    "start": "2346599",
    "end": "2353520"
  },
  {
    "text": "and that's not how it works so do I put it here",
    "start": "2353520",
    "end": "2359859"
  },
  {
    "text": "no that's not how it works either because you know here it's the map put method and that's not really so the way",
    "start": "2359859",
    "end": "2366460"
  },
  {
    "text": "we do it is we do it like this require authorization now now it",
    "start": "2366460",
    "end": "2373480"
  },
  {
    "text": "requires somebody to be logged in I could in the same way that I pass in other things into the authorized",
    "start": "2373480",
    "end": "2379780"
  },
  {
    "text": "attribute I can pass in details here about what role or claims you need or I can be able to even invoke a method to",
    "start": "2379780",
    "end": "2386380"
  },
  {
    "text": "be able to pull your user identity and do interesting things so in short yes you can validate authorization in the",
    "start": "2386380",
    "end": "2392560"
  },
  {
    "text": "same way you do with controllers great question",
    "start": "2392560",
    "end": "2397020"
  },
  {
    "text": "any other questions right here yep",
    "start": "2398260",
    "end": "2403260"
  },
  {
    "text": "how do I do dependency injection good point so I want to be able to take in my",
    "start": "2403420",
    "end": "2409240"
  },
  {
    "text": "data context in here now up here somewhere I'm going to say Builder dot Services dot add transient",
    "start": "2409240",
    "end": "2419040"
  },
  {
    "text": "and I'm going to give it some I think to thing",
    "start": "2419040",
    "end": "2425140"
  },
  {
    "text": "or perhaps I have my data context and now I want to here take in",
    "start": "2425140",
    "end": "2431079"
  },
  {
    "text": "and I thing and it'll just pull in just fine",
    "start": "2431079",
    "end": "2436720"
  },
  {
    "text": "I could attribute it very specifically in the same way that I could say here this is from query it's actually not",
    "start": "2436720",
    "end": "2443320"
  },
  {
    "text": "it's from the API I can say from body",
    "start": "2443320",
    "end": "2448960"
  },
  {
    "text": "or I can say from ioc from from services and so I'll put",
    "start": "2448960",
    "end": "2457960"
  },
  {
    "text": "this one as from services to make sure that you don't accidentally inject some",
    "start": "2457960",
    "end": "2464560"
  },
  {
    "text": "post-body content that happens to include something that kind of matches my interface and I end up taking yours",
    "start": "2464560",
    "end": "2470560"
  },
  {
    "text": "instead of the one that I configured previously but that's how we do dependency injection is we just",
    "start": "2470560",
    "end": "2475599"
  },
  {
    "text": "specify it as a parameter inside of our method that's cool",
    "start": "2475599",
    "end": "2481079"
  },
  {
    "text": "Okay so we've got this minimal API and how do we test it I'm going to save this project I'll pull",
    "start": "2483760",
    "end": "2491200"
  },
  {
    "text": "out my I thing so that I don't do bad things later and",
    "start": "2491200",
    "end": "2498359"
  },
  {
    "text": "let's open up the testing project now here inside of our solution we've",
    "start": "2498520",
    "end": "2505839"
  },
  {
    "text": "just been live coding all the stuff we started out with the.net 5 project we",
    "start": "2505839",
    "end": "2510940"
  },
  {
    "text": "upgraded it.net seven file scope namespaces Global usings implicit gloves we'll be using the new Builder minimal",
    "start": "2510940",
    "end": "2517480"
  },
  {
    "text": "apis we added a little bit more structure and now let's take a look at testing just to save us a little bit of",
    "start": "2517480",
    "end": "2523900"
  },
  {
    "text": "time I added a new project my test project in this case I'm using X unit",
    "start": "2523900",
    "end": "2530320"
  },
  {
    "text": "but we could definitely use nunit or Ms test or anything else as well now I want to write a unit test around",
    "start": "2530320",
    "end": "2537400"
  },
  {
    "text": "this weather forecast controller now this weather forecast controller returns some random data",
    "start": "2537400",
    "end": "2544240"
  },
  {
    "text": "and I could take a little bit more control over that by adding a layer of indirection maybe I need a random",
    "start": "2544240",
    "end": "2549820"
  },
  {
    "text": "repository that will give me things but uh let's just assume that",
    "start": "2549820",
    "end": "2555339"
  },
  {
    "text": "I just want to check that I have five results okay so here's my weather unit test I'm",
    "start": "2555339",
    "end": "2562839"
  },
  {
    "text": "going to do the arrange act assert pattern and so I'm just going to call the method",
    "start": "2562839",
    "end": "2569079"
  },
  {
    "text": "I'm going to call the get method on my controller I'm going to get an innumerable weather forecast I will",
    "start": "2569079",
    "end": "2575320"
  },
  {
    "text": "validate that it should not be null and then it has five items I could definitely check for more things but",
    "start": "2575320",
    "end": "2582240"
  },
  {
    "text": "that's enough now one of the libraries that I really like is fluent assertions and here's why",
    "start": "2582240",
    "end": "2590400"
  },
  {
    "text": "I had here int expected equals five and I said",
    "start": "2590800",
    "end": "2598619"
  },
  {
    "text": "assert Dot equal expected actual oh wait no actual comes",
    "start": "2598619",
    "end": "2607720"
  },
  {
    "text": "first um wait no expected comes first and my",
    "start": "2607720",
    "end": "2613060"
  },
  {
    "text": "code compiles either way I spent the longest time debugging the test and I'm like",
    "start": "2613060",
    "end": "2619300"
  },
  {
    "text": "it's supposed to be seven I get seven it passes wait no it says it should have been five",
    "start": "2619300",
    "end": "2626079"
  },
  {
    "text": "and it was because I had expected an actual flipped so one of the things that I really love about fluent assertions",
    "start": "2626079",
    "end": "2632560"
  },
  {
    "text": "expected dot should dot do the thing and here's my uh our actual dot should dot",
    "start": "2632560",
    "end": "2640480"
  },
  {
    "text": "do the thing and here's my expected that's cool so the majority of my assertions",
    "start": "2640480",
    "end": "2646720"
  },
  {
    "text": "actually say actual Dot",
    "start": "2646720",
    "end": "2651819"
  },
  {
    "text": "should dot equal expected and that's the majority of my things so here I could",
    "start": "2654099",
    "end": "2661359"
  },
  {
    "text": "say expected and here I could rename this to actual and now it's really clear",
    "start": "2661359",
    "end": "2668079"
  },
  {
    "text": "what is happening and um now I I can very specifically identify",
    "start": "2668079",
    "end": "2674319"
  },
  {
    "text": "this the other thing that I did part of fluent assertions um is this assertion scope now the cool",
    "start": "2674319",
    "end": "2681819"
  },
  {
    "text": "thing is with assertion scope it's going to run all of my tests and it will show me all the failures",
    "start": "2681819",
    "end": "2688720"
  },
  {
    "text": "have you ever done this where the build fails and it fails on the first assertion in your thing and so you go fix it and you",
    "start": "2688720",
    "end": "2695140"
  },
  {
    "text": "kick off the build and then it fails on the next one and then the next one the cool part about assertion scope is",
    "start": "2695140",
    "end": "2701740"
  },
  {
    "text": "it will run all of them give me all of the errors and now I can debug it in one go make all of them pass and then commit",
    "start": "2701740",
    "end": "2708700"
  },
  {
    "text": "it I avoid all of those repeats now there is one other interesting thing",
    "start": "2708700",
    "end": "2714280"
  },
  {
    "text": "here in this when I want a weather forecast controller it takes in a logger",
    "start": "2714280",
    "end": "2722160"
  },
  {
    "text": "I don't care what that logger is that's not part of my test my test is validating that I have five results not",
    "start": "2722380",
    "end": "2728140"
  },
  {
    "text": "that I log correctly so I don't care just just make it go away well since it's unused I could make it",
    "start": "2728140",
    "end": "2735160"
  },
  {
    "text": "go away like this and I'm going to choose not to do that instead back here in our unit test I'm",
    "start": "2735160",
    "end": "2741460"
  },
  {
    "text": "going to create a new mock this is from moq or Machu or Mock and I'm going to take a mock of that eye logger of thing",
    "start": "2741460",
    "end": "2748960"
  },
  {
    "text": "and it will give me this logger I can then create that new weather forecast controller passing in that",
    "start": "2748960",
    "end": "2756220"
  },
  {
    "text": "implementation of it and it's just going to return null or blank or the default for anything that I call and just make",
    "start": "2756220",
    "end": "2763119"
  },
  {
    "text": "sure that that object exists and now I have my weather forecast controller and I can call controller.get",
    "start": "2763119",
    "end": "2769420"
  },
  {
    "text": "or I can take it a step further and I can use automocker now the cool thing",
    "start": "2769420",
    "end": "2774460"
  },
  {
    "text": "about automocker is that it's going to go automatically do the thing it's dependency injection for tests",
    "start": "2774460",
    "end": "2782380"
  },
  {
    "text": "so I go create a new automocker I create an instance of this thing and it will go",
    "start": "2782380",
    "end": "2788260"
  },
  {
    "text": "fill in all of the details of all of the dependencies that I didn't need to specify or I can very specifically",
    "start": "2788260",
    "end": "2794560"
  },
  {
    "text": "create a mock and implement the things that I want and so that is actually",
    "start": "2794560",
    "end": "2799960"
  },
  {
    "text": "really beautiful so in this case I create an automocker and I say hey marker go create me that weather",
    "start": "2799960",
    "end": "2805240"
  },
  {
    "text": "forecast controller and for all those things that I don't care about I don't care just go figure it out",
    "start": "2805240",
    "end": "2812020"
  },
  {
    "text": "if ever you add a dependency to a controller and you have to run around to all your tests creating a new mock",
    "start": "2812020",
    "end": "2820060"
  },
  {
    "text": "automocker will do that for me I no longer need to change my tests that's just amazingly cool so we've got",
    "start": "2820060",
    "end": "2827440"
  },
  {
    "text": "this controller now we'll go call that method and then away it goes",
    "start": "2827440",
    "end": "2832960"
  },
  {
    "text": "now that's great for unit testing we've done this forever how would we do integration testing well here in",
    "start": "2832960",
    "end": "2838839"
  },
  {
    "text": "integration testing we need to well start up the web server oh wait we need to go find an available Port so let's go",
    "start": "2838839",
    "end": "2844359"
  },
  {
    "text": "find an available Port that one's not in use okay so let's go find a random Port let's start up our web server now we",
    "start": "2844359",
    "end": "2849880"
  },
  {
    "text": "need to get that port number into our client now we need to create a request there's all of this Mayhem kind of going",
    "start": "2849880",
    "end": "2856300"
  },
  {
    "text": "on to be able to do an integration test this is cool I can create an integration test where I",
    "start": "2856300",
    "end": "2865180"
  },
  {
    "text": "create this new fixture that just does interesting things now this won't",
    "start": "2865180",
    "end": "2871060"
  },
  {
    "text": "actually go out to do Network requests but it will",
    "start": "2871060",
    "end": "2876119"
  },
  {
    "text": "instantiate my server and do the full request pipeline it's all in memory it's not over the network but it will do all",
    "start": "2876119",
    "end": "2883180"
  },
  {
    "text": "of the things that my server needs to do now this is cool I have this web application Factory of the program class",
    "start": "2883180",
    "end": "2889780"
  },
  {
    "text": "my program.cs that we built here I can choose to override things so I need to",
    "start": "2889780",
    "end": "2895720"
  },
  {
    "text": "start by taking my thing out of the ioc container and then I can put in a fake one say my in-memory database",
    "start": "2895720",
    "end": "2903280"
  },
  {
    "text": "or let me swap the connection string off to a connection string that is a test",
    "start": "2903280",
    "end": "2908579"
  },
  {
    "text": "file database that I just Implement for this thing so I'll remove all the services I don't need I'll add the fake",
    "start": "2908579",
    "end": "2915400"
  },
  {
    "text": "services in that I do need and now here in my test I have an instance of my application",
    "start": "2915400",
    "end": "2921460"
  },
  {
    "text": "that is effectively running I now create an HTTP client from that",
    "start": "2921460",
    "end": "2928359"
  },
  {
    "text": "and now I have a client that works the way I use HTTP client anywhere else so",
    "start": "2928359",
    "end": "2933760"
  },
  {
    "text": "let's do a network request to API weather forecast we'll read the string as async yeah I could definitely do read",
    "start": "2933760",
    "end": "2940599"
  },
  {
    "text": "Json async but in this case I kind of wanted to do it the manual way let's deserialize that into a list of weather",
    "start": "2940599",
    "end": "2947380"
  },
  {
    "text": "forecasts it's optional because I might not have that body here and then I'll do",
    "start": "2947380",
    "end": "2953319"
  },
  {
    "text": "the assertion scope and I should have five weather forecasts there",
    "start": "2953319",
    "end": "2958359"
  },
  {
    "text": "cool now there is one more piece it's going to be a little bit mad at me it's going",
    "start": "2958359",
    "end": "2964240"
  },
  {
    "text": "to say um argument",
    "start": "2964240",
    "end": "2969880"
  },
  {
    "text": "null exception dot throw if null weather forecasts",
    "start": "2970980",
    "end": "2976900"
  },
  {
    "text": "name of weather forecast and the reason that it does that is that C sharp going",
    "start": "2976900",
    "end": "2982720"
  },
  {
    "text": "to check the nullable reference types is doesn't know that this should not be null is doing that too so yeah I have to",
    "start": "2982720",
    "end": "2990099"
  },
  {
    "text": "go add one more check this will this line will never get cut never get executed it will never throw here it",
    "start": "2990099",
    "end": "2997480"
  },
  {
    "text": "can't but now the c-sharp compiler that looks for nullable reference types will be happy to",
    "start": "2997480",
    "end": "3003119"
  },
  {
    "text": "okay so in the same way that we did this integration test we can do an integration test of our minimal API",
    "start": "3003119",
    "end": "3009480"
  },
  {
    "text": "so we'll pass in name of test and then we expect that body to be hello",
    "start": "3009480",
    "end": "3014700"
  },
  {
    "text": "test that's how it forms it now why is the ID3",
    "start": "3014700",
    "end": "3020099"
  },
  {
    "text": "because I hard-coded it that way ideally we would pass in something else but yep that's how we can test our",
    "start": "3020099",
    "end": "3027000"
  },
  {
    "text": "minimal API we'll just fire a request at it we'll get the response we'll deserialize it and we'll do the things",
    "start": "3027000",
    "end": "3034440"
  },
  {
    "text": "similar let's go test our post we'll go fire up a post body we'll send that off",
    "start": "3034440",
    "end": "3040859"
  },
  {
    "text": "to our minimal API and we'll grab the response there",
    "start": "3040859",
    "end": "3046200"
  },
  {
    "text": "so let's build it and of course our build is going to fail",
    "start": "3046200",
    "end": "3052640"
  },
  {
    "text": "why did the build fail the build failed because program is inaccessible",
    "start": "3056160",
    "end": "3064460"
  },
  {
    "text": "yes here in our program.cs we have an auto generate all the things and that's",
    "start": "3066420",
    "end": "3071760"
  },
  {
    "text": "great but by default it makes a private class",
    "start": "3071760",
    "end": "3077760"
  },
  {
    "text": "now we could definitely do internals visible to we could you know try and create a friend assembly and that gets",
    "start": "3077760",
    "end": "3083520"
  },
  {
    "text": "really weird or it actually creates a partial private class so let's define",
    "start": "3083520",
    "end": "3089460"
  },
  {
    "text": "the other half of the partial class",
    "start": "3089460",
    "end": "3093440"
  },
  {
    "text": "tada and now it builds that is such a hack",
    "start": "3099660",
    "end": "3106140"
  },
  {
    "text": "I hate this this is awful this this hack is just nasty so of course I'm going to",
    "start": "3106140",
    "end": "3111960"
  },
  {
    "text": "comment it public for testing and now it's a little bit less painful",
    "start": "3111960",
    "end": "3120599"
  },
  {
    "text": "um yes it's a hack I wish it created it public by default but it doesn't I understand why it doesn't but yeah if I",
    "start": "3120599",
    "end": "3128160"
  },
  {
    "text": "want to test it I need to make it public cool so now let's start to fire up all our tests I'll come here to the test",
    "start": "3128160",
    "end": "3135359"
  },
  {
    "text": "Explorer I happen to have it right here and it is Tiny",
    "start": "3135359",
    "end": "3140520"
  },
  {
    "text": "so let's take a look at our tests and let's run all of our tests one of the",
    "start": "3140520",
    "end": "3146579"
  },
  {
    "text": "things that I like while we're here in the test Explorer is that I can come in here and I can say",
    "start": "3146579",
    "end": "3153020"
  },
  {
    "text": "run tests on after every build now if my tests are pretty fast then that's great",
    "start": "3153020",
    "end": "3159660"
  },
  {
    "text": "I can just anytime I build it'll fire up my tests I can see if I'm succeeding or failing live unit testing is a thing and",
    "start": "3159660",
    "end": "3165900"
  },
  {
    "text": "this isn't it but this is really nice if my tests are fast that's cool now in this case my tests aren't but all",
    "start": "3165900",
    "end": "3172680"
  },
  {
    "text": "four of our tests are passing I didn't need to figure out ports I didn't need to start up a server I didn't need to",
    "start": "3172680",
    "end": "3179160"
  },
  {
    "text": "kill it at the end I just said hey go go fire up the thing HTTP client that I'm already familiar with my tests work",
    "start": "3179160",
    "end": "3185940"
  },
  {
    "text": "great any questions so far on testing yep",
    "start": "3185940",
    "end": "3193099"
  },
  {
    "text": "is there a particular benefit to using that over the exclamation operator good",
    "start": "3195200",
    "end": "3201059"
  },
  {
    "text": "question so here I said I would like to throw",
    "start": "3201059",
    "end": "3207119"
  },
  {
    "text": "um if null could I have instead used the null coalescing operator and just said",
    "start": "3207119",
    "end": "3214800"
  },
  {
    "text": "no really it isn't is there a benefit or drawback from that",
    "start": "3214800",
    "end": "3219839"
  },
  {
    "text": "I like to use the um null coalescing operator as the last",
    "start": "3219839",
    "end": "3225119"
  },
  {
    "text": "resort it's like this feels like I'm telling the compiler that it was wrong",
    "start": "3225119",
    "end": "3231599"
  },
  {
    "text": "in the most most cases I'm actually wrong and so I try to use",
    "start": "3231599",
    "end": "3237000"
  },
  {
    "text": "that as sparingly as possible is that more or less legible um",
    "start": "3237000",
    "end": "3242940"
  },
  {
    "text": "I tend to miss that I read the first couple of characters in",
    "start": "3242940",
    "end": "3248700"
  },
  {
    "text": "the variable name and I think uh and so I won't see this but I will see this and",
    "start": "3248700",
    "end": "3255960"
  },
  {
    "text": "so I would argue that this is more well self-documenting",
    "start": "3255960",
    "end": "3261540"
  },
  {
    "text": "I tend to code for legibility and so I prefer that is it better or worse it's a",
    "start": "3261540",
    "end": "3267780"
  },
  {
    "text": "preference thing and if your preference is the other way then that's great",
    "start": "3267780",
    "end": "3273558"
  },
  {
    "text": "what's the difference beyond what you could read is there a notable difference not that I know of",
    "start": "3275280",
    "end": "3282119"
  },
  {
    "text": "yeah great question any other questions right here yep",
    "start": "3282119",
    "end": "3287660"
  },
  {
    "text": "IED to skip or get family authentication to um so you can test your professors good",
    "start": "3293900",
    "end": "3301380"
  },
  {
    "text": "question so if I have to do authentication stuff can I skip the authentication for my tests now there's",
    "start": "3301380",
    "end": "3307319"
  },
  {
    "text": "kind of two sides to this the one side is yeah if I skip authentication for my tests am I really validating that the",
    "start": "3307319",
    "end": "3313619"
  },
  {
    "text": "entire site works and so maybe I need to first hit the login page and or the",
    "start": "3313619",
    "end": "3319980"
  },
  {
    "text": "login API and get my Json web token my jot and then pass that into the other test that could be one way to go or here",
    "start": "3319980",
    "end": "3327240"
  },
  {
    "text": "we're saying um what is the environment and right now the environment is development so I",
    "start": "3327240",
    "end": "3333660"
  },
  {
    "text": "could say in my authentication mechanism but in development don't authenticate now at that point we lose all of the",
    "start": "3333660",
    "end": "3340380"
  },
  {
    "text": "user context so maybe we're saying if the environment is test run and now in",
    "start": "3340380",
    "end": "3346559"
  },
  {
    "text": "test run my authentication is disabled and I could definitely do that instead",
    "start": "3346559",
    "end": "3352400"
  },
  {
    "text": "yeah that was awesome any other questions right here",
    "start": "3352619",
    "end": "3358280"
  },
  {
    "text": "Okay so we've got our tests and this is working out well I'm going to go back to our other app that doesn't have tests",
    "start": "3362220",
    "end": "3368780"
  },
  {
    "text": "and continue on there uh why yes let's save all of that",
    "start": "3368780",
    "end": "3375859"
  },
  {
    "text": "now we might have I don't know half a dozen models in our thing we probably",
    "start": "3376980",
    "end": "3382200"
  },
  {
    "text": "have four methods per model and uh of course I'm going to put all of my stuff",
    "start": "3382200",
    "end": "3387780"
  },
  {
    "text": "at the bottom and you're going to put all of your stuff at the bottom and so we're going to end up with these merge",
    "start": "3387780",
    "end": "3393119"
  },
  {
    "text": "conflicts where the merge starts to zipper our methods together and of course I don't want to deal with",
    "start": "3393119",
    "end": "3399420"
  },
  {
    "text": "that any more than you do so I'm going to take mine and you're going to take yours and and our code is gone",
    "start": "3399420",
    "end": "3404760"
  },
  {
    "text": "hmm can we like make this a little better",
    "start": "3404760",
    "end": "3410160"
  },
  {
    "text": "I'm going to take all of this out here and let's just",
    "start": "3410160",
    "end": "3416280"
  },
  {
    "text": "make up a convention I will create a new folder called apis I'll create a new",
    "start": "3416280",
    "end": "3423500"
  },
  {
    "text": "class I'll call this minimal dot CS",
    "start": "3423500",
    "end": "3429980"
  },
  {
    "text": "file scope namespaces are awesome",
    "start": "3429980",
    "end": "3434480"
  },
  {
    "text": "and let's say let's make a",
    "start": "3435720",
    "end": "3441599"
  },
  {
    "text": "get method public",
    "start": "3441599",
    "end": "3448920"
  },
  {
    "text": "minimal model get that",
    "start": "3449119",
    "end": "3455359"
  },
  {
    "text": "let's make a post method so let's go grab this and we'll say",
    "start": "3456480",
    "end": "3465059"
  },
  {
    "text": "public minimal model post",
    "start": "3465059",
    "end": "3470339"
  },
  {
    "text": "there is that we'll grab this and we'll make a put",
    "start": "3470339",
    "end": "3476819"
  },
  {
    "text": "method public eye result response",
    "start": "3476819",
    "end": "3485058"
  },
  {
    "text": "put and we'll do that we no longer need this oh it's not I response it's I results",
    "start": "3486300",
    "end": "3494960"
  },
  {
    "text": "oh hey we need to using oh no it's just mad",
    "start": "3495480",
    "end": "3501740"
  },
  {
    "text": "I result it is singular cool and then I don't know let's invent",
    "start": "3501740",
    "end": "3507960"
  },
  {
    "text": "this method public void in it let's take in an eye application or a web",
    "start": "3507960",
    "end": "3514800"
  },
  {
    "text": "application we'll call this app",
    "start": "3514800",
    "end": "3520559"
  },
  {
    "text": "and then let's map get to the get method",
    "start": "3520559",
    "end": "3529680"
  },
  {
    "text": "and let's map post to the post method and let's map put to the put method",
    "start": "3529680",
    "end": "3537920"
  },
  {
    "text": "and now let's come back over here into program.cs",
    "start": "3537920",
    "end": "3544040"
  },
  {
    "text": "and I will say VAR uh minimal equals new minimal",
    "start": "3544040",
    "end": "3553339"
  },
  {
    "text": "and minimal dot init and pass in app",
    "start": "3553859",
    "end": "3559500"
  },
  {
    "text": "or oh I need a using statement thank you but I would like this in my",
    "start": "3559500",
    "end": "3566579"
  },
  {
    "text": "Global usings please I wish it did that automatically but",
    "start": "3566579",
    "end": "3574319"
  },
  {
    "text": "back here now this um I don't really want to new this so I'm going to say app dot Services dot",
    "start": "3574319",
    "end": "3583920"
  },
  {
    "text": "get required service of type minimal and I'll just yank it for my",
    "start": "3583920",
    "end": "3589640"
  },
  {
    "text": "iocontainer.init app and I could make that an extension method and now it's one line so okay now we were fighting",
    "start": "3589640",
    "end": "3596940"
  },
  {
    "text": "over the merge conflict now my merge and your merge they're one line it'll",
    "start": "3596940",
    "end": "3602339"
  },
  {
    "text": "probably make them separate and I think that's okay",
    "start": "3602339",
    "end": "3606200"
  },
  {
    "text": "foreign",
    "start": "3608280",
    "end": "3610460"
  },
  {
    "text": "what does this look like",
    "start": "3615480",
    "end": "3618559"
  },
  {
    "text": "it looks like a controller why don't I just well I don't know",
    "start": "3623220",
    "end": "3631640"
  },
  {
    "text": "use a controller we've gotten to the illogical conclusion of minimal apis let's presume that we have half a dozen",
    "start": "3632160",
    "end": "3638819"
  },
  {
    "text": "models we have four methods each we're going to do all of this Mayhem we may as well just use web API this is not the",
    "start": "3638819",
    "end": "3644940"
  },
  {
    "text": "right tool for the job we have gone too far minimal apis is great for small problems",
    "start": "3644940",
    "end": "3651839"
  },
  {
    "text": "if we have Enterprise applications with lots of models and lots of methods web API is right there it's not deprecated",
    "start": "3651839",
    "end": "3658980"
  },
  {
    "text": "let's use that instead instead let's take a look at what The Right Use case for minimal apis would be",
    "start": "3658980",
    "end": "3666299"
  },
  {
    "text": "so I'm going to close this solution and let's open up this project right here",
    "start": "3666299",
    "end": "3672480"
  },
  {
    "text": "the right size now here in the right size project I",
    "start": "3672480",
    "end": "3678480"
  },
  {
    "text": "have this interesting Json file and my task is to put this online",
    "start": "3678480",
    "end": "3684119"
  },
  {
    "text": "that's it or accept a form post and send an email or accept a web hook and and alter the",
    "start": "3684119",
    "end": "3691619"
  },
  {
    "text": "data in some way I just need to do this one little thing I just need this online",
    "start": "3691619",
    "end": "3696839"
  },
  {
    "text": "this is the right size for a minimal API now the cool thing here is that in this",
    "start": "3696839",
    "end": "3703740"
  },
  {
    "text": "project I have exactly one c-sharp file it's this program.cs and that's all",
    "start": "3703740",
    "end": "3709500"
  },
  {
    "text": "I happen to have a few Json files kicking around they aren't necessary I could definitely delete them but that's",
    "start": "3709500",
    "end": "3716460"
  },
  {
    "text": "fine let's pop open program.cs now here in program.cs I create a",
    "start": "3716460",
    "end": "3722940"
  },
  {
    "text": "builder I add some stuff to my ioc container I'm going to go read that interesting config",
    "start": "3722940",
    "end": "3729359"
  },
  {
    "text": "file and I'm going to then deserialize it into the strongly typed object I",
    "start": "3729359",
    "end": "3734940"
  },
  {
    "text": "defined a record down here record class the interesting config and so now it's a",
    "start": "3734940",
    "end": "3740339"
  },
  {
    "text": "strongly typed deserialization I'll throw if it's null and then I'll add it to my ioc container now I chose to put",
    "start": "3740339",
    "end": "3748200"
  },
  {
    "text": "it in curly braces right here just so that I can't cheat and just grab the thing straight out of the other file I",
    "start": "3748200",
    "end": "3753480"
  },
  {
    "text": "want to definitely leverage my ioc container app.build and now if you call this",
    "start": "3753480",
    "end": "3760619"
  },
  {
    "text": "endpoint I'm going to go grab that interesting config and I'm going to return it so",
    "start": "3760619",
    "end": "3766140"
  },
  {
    "text": "let's fire up this website",
    "start": "3766140",
    "end": "3769400"
  },
  {
    "text": "now here's this website we've got Swagger on it that's awesome let's try it out and we get our interesting config",
    "start": "3772500",
    "end": "3780119"
  },
  {
    "text": "cool now as any good endpoint we also probably want to handle not found pages",
    "start": "3780119",
    "end": "3788400"
  },
  {
    "text": "so not a valid page here and here's our 404 page we probably",
    "start": "3788400",
    "end": "3795000"
  },
  {
    "text": "also want to do error handling so let's go to error and we get a 500 error we",
    "start": "3795000",
    "end": "3802140"
  },
  {
    "text": "also probably want to do some health checks so let's go to the health checks",
    "start": "3802140",
    "end": "3808260"
  },
  {
    "text": "all best practices with a service how did we do that well we wanted to rig our 404 page so we're going to go grab star",
    "start": "3808260",
    "end": "3816240"
  },
  {
    "text": "meaning anything else so go grab the rest of the URL and let's map it to this",
    "start": "3816240",
    "end": "3822240"
  },
  {
    "text": "not found page now originally I just had this as blank and so I got Chrome's",
    "start": "3822240",
    "end": "3827579"
  },
  {
    "text": "default page was saying hey there's nothing here and I wanted to say yeah let me share",
    "start": "3827579",
    "end": "3833640"
  },
  {
    "text": "with some content I thought it was my network connection so I returned not found I want to map the error page to result",
    "start": "3833640",
    "end": "3839760"
  },
  {
    "text": "stop problem now I chose to map the errors to the error page so any error that happens in",
    "start": "3839760",
    "end": "3845400"
  },
  {
    "text": "my application will naturally land on this page how did we do health checks well I say dot add health checks and I",
    "start": "3845400",
    "end": "3853740"
  },
  {
    "text": "map health checks to the health URL so now if kubernetes notices that my",
    "start": "3853740",
    "end": "3859859"
  },
  {
    "text": "container isn't returning this 200 on my health page it knows that my container",
    "start": "3859859",
    "end": "3865260"
  },
  {
    "text": "is probably unhealthy and it can automatically restart it that's perfect all of this in 46 lines of code",
    "start": "3865260",
    "end": "3872540"
  },
  {
    "text": "including that hack to make this app testable this is the right size for minimal apis",
    "start": "3872540",
    "end": "3879660"
  },
  {
    "text": "if we need to upgrade to have dozens of models then web API is right there and",
    "start": "3879660",
    "end": "3886319"
  },
  {
    "text": "we don't want to deprecate it it's still right there it's a great solution if we want to upgrade to having even less",
    "start": "3886319",
    "end": "3891900"
  },
  {
    "text": "details about it Azure functions or k-native functions are right there and we can leverage that",
    "start": "3891900",
    "end": "3897960"
  },
  {
    "text": "for those small problems where we want to take control over the hdb request and we want to just do something real fast",
    "start": "3897960",
    "end": "3904319"
  },
  {
    "text": "we can upgrade to minimal apis web API MVC razor pages and now minimal",
    "start": "3904319",
    "end": "3911819"
  },
  {
    "text": "apis we now have four paradigms for building websites inside of asp.net and as we can see in this app they will all",
    "start": "3911819",
    "end": "3918119"
  },
  {
    "text": "play nicely together use the correct one for the job and you can accomplish great things minimal apis",
    "start": "3918119",
    "end": "3924299"
  },
  {
    "text": "is right here and the code for all of this including that correct solution is up here on GitHub right now",
    "start": "3924299",
    "end": "3932160"
  },
  {
    "text": "thanks for coming",
    "start": "3932160",
    "end": "3934940"
  }
]