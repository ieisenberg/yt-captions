[
  {
    "text": "let's jump in thanks for joining us for local development techniques with kubernetes",
    "start": "8480",
    "end": "14000"
  },
  {
    "text": "here's the part where i tell you i am definitely going to post the slides on my site tonight but in this talk there are no slides it",
    "start": "14000",
    "end": "20160"
  },
  {
    "text": "will only be live demos we're going to look at a bunch of tools that will allow us to work with containers rather than",
    "start": "20160",
    "end": "26800"
  },
  {
    "text": "assuming it's the downstream concern that somebody else's problem we're going to look at tools that will",
    "start": "26800",
    "end": "32238"
  },
  {
    "text": "help us in our local inner loop all the tools that we'll look at is here",
    "start": "32239",
    "end": "37280"
  },
  {
    "text": "in this gist and yeah that url is really long so let's head over to robrich.org and click on",
    "start": "37280",
    "end": "44399"
  },
  {
    "text": "presentations and here's local development techniques with kubernetes here at ndc sydney you can click on this",
    "start": "44399",
    "end": "50800"
  },
  {
    "text": "link and that will get you straight to this gist really easily while we're here at robrich.org",
    "start": "50800",
    "end": "56960"
  },
  {
    "text": "let's click on about me and we'll learn some of the things that i've done recently i'm a cyril developer advocate if you're",
    "start": "56960",
    "end": "63199"
  },
  {
    "text": "struggling with your data mesh i would love to learn from you i'm a microsoft mvp a docker captain and a friend of red",
    "start": "63199",
    "end": "69600"
  },
  {
    "text": "gate ac gift camp is really fun easy gift camp brings volunteer developers together with charities to build free",
    "start": "69600",
    "end": "76000"
  },
  {
    "text": "software we start building software friday after work sunday afternoon we deliver the",
    "start": "76000",
    "end": "81280"
  },
  {
    "text": "completed software to the charities sleep is optional caffeine provided if you're in phoenix",
    "start": "81280",
    "end": "86560"
  },
  {
    "text": "come join us for the next a-z give camp or if you'd like a gift camp here in sydney or wherever you're connecting",
    "start": "86560",
    "end": "92400"
  },
  {
    "text": "from hit me up on email or twitter and let's get a gift camp in your neighborhood to you",
    "start": "92400",
    "end": "98479"
  },
  {
    "text": "some of the other things that i've done i do a lot of docker and kubernetes training consulting if you have that",
    "start": "98479",
    "end": "104000"
  },
  {
    "text": "need i'd love to help and one of the things i'm particularly proud of i replied to a dot-net rocks podcast episode they read my comment on",
    "start": "104000",
    "end": "111200"
  },
  {
    "text": "the air and they sent me a mug so there's my claim to fame my coveted.net rocksmug and if you'd like",
    "start": "111200",
    "end": "118079"
  },
  {
    "text": "it no i'm just kidding yeah richard campbell is awesome so let's dig in",
    "start": "118079",
    "end": "124079"
  },
  {
    "text": "now i have a bunch of things where we're gonna look at ways to start containers differently to be able to visualize",
    "start": "124079",
    "end": "130879"
  },
  {
    "text": "container contents visualize cluster contents and finally debug inside of",
    "start": "130879",
    "end": "136239"
  },
  {
    "text": "containers let's start in i'm going to cd into 1",
    "start": "136239",
    "end": "142560"
  },
  {
    "text": "and let's take a look at this inside of vs code i have this docker file here",
    "start": "142560",
    "end": "150080"
  },
  {
    "text": "and it references my server my node code right here and i'm getting ready to",
    "start": "150080",
    "end": "155280"
  },
  {
    "text": "build it okay so now i need to say docker build um i",
    "start": "155280",
    "end": "160319"
  },
  {
    "text": "need a dot for some reason let's tag it oh wait the t doesn't go there it goes over here hello",
    "start": "160319",
    "end": "167040"
  },
  {
    "text": "node v 0.1 once i've got that built now i need to run it docker run",
    "start": "167040",
    "end": "174000"
  },
  {
    "text": "hello node v 0.1 do i need the dot no i don't i do",
    "start": "174000",
    "end": "180080"
  },
  {
    "text": "need to dash p oh wait that doesn't go here it goes over here we're spending a lot of time",
    "start": "180080",
    "end": "187440"
  },
  {
    "text": "thinking through the process of building and running a container instead",
    "start": "187440",
    "end": "193519"
  },
  {
    "text": "let's pop open this docker compose file now this definitely is the simple one",
    "start": "193519",
    "end": "198560"
  },
  {
    "text": "just to kind of get a feel for what we're going to do this docker compose file allows us to capture all of the",
    "start": "198560",
    "end": "204879"
  },
  {
    "text": "build and run details here in one file here's hello node here's the dot here's",
    "start": "204879",
    "end": "211120"
  },
  {
    "text": "the ports that we want to map oh i completely forgot about setting that environment variable now when we're ready to go we can say",
    "start": "211120",
    "end": "218080"
  },
  {
    "text": "docker compose up and in this case because the container doesn't exist yet it's automatically",
    "start": "218080",
    "end": "225840"
  },
  {
    "text": "going to build that image straight away and then it will start the container",
    "start": "225840",
    "end": "233120"
  },
  {
    "text": "now i can just come up to localhost 3000 and so let's come to",
    "start": "233120",
    "end": "238840"
  },
  {
    "text": "localhost three not that one localhost 3000 and we can see the",
    "start": "238840",
    "end": "246080"
  },
  {
    "text": "website is running now if you're familiar with docker compose maybe this is old hat",
    "start": "246080",
    "end": "251760"
  },
  {
    "text": "let's hit ctrl c and let the website come back down",
    "start": "251760",
    "end": "256880"
  },
  {
    "text": "but let me show you one trick that is pretty interesting here network mode of bridge",
    "start": "256880",
    "end": "263120"
  },
  {
    "text": "now by default when we start a docker compose file it will start a separate network now that's great in ensuring",
    "start": "263120",
    "end": "268880"
  },
  {
    "text": "that the containers that we start here don't interact with the containers that we start in a different file but what if",
    "start": "268880",
    "end": "274720"
  },
  {
    "text": "we have a docker compose file for our back end and a docker compose file for our data stores and we're debugging the",
    "start": "274720",
    "end": "281440"
  },
  {
    "text": "front end well we want the back end and and the container the storage to be able to communicate together",
    "start": "281440",
    "end": "287840"
  },
  {
    "text": "so let's use network mode of bridge in all of the places and now it won't create a separate network and",
    "start": "287840",
    "end": "295280"
  },
  {
    "text": "the containers that we start in various docker files will be able to communicate with each other",
    "start": "295280",
    "end": "301520"
  },
  {
    "text": "that's perfect so now we do a doc docker",
    "start": "301520",
    "end": "306639"
  },
  {
    "text": "compose down and all of the details about running and starting are now so",
    "start": "306639",
    "end": "313120"
  },
  {
    "text": "solved in that docker compose file we don't need to remember that we can instead focus on accomplishing the business",
    "start": "313120",
    "end": "319680"
  },
  {
    "text": "logic for our users excellent docker desktop is a great uh",
    "start": "319680",
    "end": "326880"
  },
  {
    "text": "mechanism for being able to run both docker mode and kubernetes mode",
    "start": "326880",
    "end": "333280"
  },
  {
    "text": "we come in here to docker desktop we turn on kubernetes mode and we have a kubernetes environment",
    "start": "333280",
    "end": "339520"
  },
  {
    "text": "but what if we want to run differently let's talk about minicube minicube is an",
    "start": "339520",
    "end": "345520"
  },
  {
    "text": "alternate docker runtime that allows us to run containers just as we would and also gives us a kubernetes environment",
    "start": "345520",
    "end": "352240"
  },
  {
    "text": "as well so i come in here and i'll say mini cube start and i've already done that in this",
    "start": "352240",
    "end": "358560"
  },
  {
    "text": "case so we can see that we have this virtual machine running with mini cube",
    "start": "358560",
    "end": "363759"
  },
  {
    "text": "already set up now in this case i chose to run it on hyper-v but if you're on a mac you can",
    "start": "363759",
    "end": "368800"
  },
  {
    "text": "run it on hyperkit and you can also run it inside of wsl now you'll notice that i also have other",
    "start": "368800",
    "end": "375440"
  },
  {
    "text": "virtual machines for other kubernetes clusters that i wanted to run",
    "start": "375440",
    "end": "380639"
  },
  {
    "text": "if i wanted to run my link or d demo i'll run it in this one and my istio demo will run here now these clusters",
    "start": "380639",
    "end": "386960"
  },
  {
    "text": "won't collide because they're separate spots now one of the things that people often",
    "start": "386960",
    "end": "392880"
  },
  {
    "text": "ask me about is um when i'm doing docker training is well",
    "start": "392880",
    "end": "398560"
  },
  {
    "text": "where are my volumes stored and when you're running docker desktop all i can say is",
    "start": "398560",
    "end": "405039"
  },
  {
    "text": "they're in docker very specifically excludes us from that so that we don't mess it up",
    "start": "405440",
    "end": "411840"
  },
  {
    "text": "but with minicube it's the internals exposed batteries included version",
    "start": "411840",
    "end": "417759"
  },
  {
    "text": "so let's do this let's do mini cube ssh now i'm inside that virtual machine",
    "start": "417759",
    "end": "426000"
  },
  {
    "text": "and the cool part about being inside that virtual machine sudo su cd var",
    "start": "426000",
    "end": "433039"
  },
  {
    "text": "lib docker um ls minus l when people ask me where",
    "start": "433039",
    "end": "440720"
  },
  {
    "text": "are the docker volumes now they're in this folder and you can go now traverse it and go wander through it you can also",
    "start": "440720",
    "end": "447759"
  },
  {
    "text": "app get install content this is the battery's included internals exposed",
    "start": "447759",
    "end": "453599"
  },
  {
    "text": "version now some of the niceties that docker desktop gives us like automatically",
    "start": "453599",
    "end": "459039"
  },
  {
    "text": "proxying between localhost and the virtual machine associated with docker",
    "start": "459039",
    "end": "464800"
  },
  {
    "text": "those things don't apply so if i want to map volumes in i need to first create a",
    "start": "464800",
    "end": "470160"
  },
  {
    "text": "proxy between my local machine and a particular folder inside that virtual machine",
    "start": "470160",
    "end": "476000"
  },
  {
    "text": "and instead of connecting to localhost i will connect to this ip address or",
    "start": "476000",
    "end": "483199"
  },
  {
    "text": "i'll just use the hostname of minicube now that's great now that i've got that environment set",
    "start": "483199",
    "end": "489919"
  },
  {
    "text": "up let's do a mini cube docker env and i'll tell it my shell is",
    "start": "489919",
    "end": "495360"
  },
  {
    "text": "power shell there's an open bug that allows it to it automatically detects power shell and",
    "start": "495360",
    "end": "501599"
  },
  {
    "text": "command prompt and terminal on mac but there is a bug that",
    "start": "501599",
    "end": "506720"
  },
  {
    "text": "doesn't allow it to yet detect powershell core so once i've set these environment",
    "start": "506720",
    "end": "512000"
  },
  {
    "text": "variables now i'm able to run all of my standard docker commands like i did before docker image list and we can see",
    "start": "512000",
    "end": "520399"
  },
  {
    "text": "the content in a similar way i could open up a command prompt and i could say dot mini",
    "start": "520399",
    "end": "527519"
  },
  {
    "text": "cube docker env and it automatically creates",
    "start": "527519",
    "end": "532959"
  },
  {
    "text": "instead of powershell environment variables it will create",
    "start": "532959",
    "end": "538560"
  },
  {
    "text": "windows command prompt environment variables",
    "start": "538560",
    "end": "542640"
  },
  {
    "text": "or it will sit here blinking there we go so i set these environment",
    "start": "544000",
    "end": "549120"
  },
  {
    "text": "variables and now docker image list and i can get at the",
    "start": "549120",
    "end": "554959"
  },
  {
    "text": "content here as well now it is the batteries included internals exposed",
    "start": "554959",
    "end": "562000"
  },
  {
    "text": "version so if i say docker container list by default inside docker desktop we have",
    "start": "562000",
    "end": "568560"
  },
  {
    "text": "this check box that allows us to turn off the kubernetes containers",
    "start": "568560",
    "end": "574320"
  },
  {
    "text": "we can choose to turn it on to expose it but in minicube it is exposed automatically",
    "start": "574320",
    "end": "580399"
  },
  {
    "text": "so which containers did i launch well i noticed that all of the kubernetes control plane pods start with kds",
    "start": "580399",
    "end": "587600"
  },
  {
    "text": "underscore pods so i could say docker container list and i will pipe it to grep v",
    "start": "587600",
    "end": "593600"
  },
  {
    "text": "k8s now i only list the containers that i started and in this case i haven't",
    "start": "593600",
    "end": "600080"
  },
  {
    "text": "started any yet that's perfect so minicube is a great way to be able to",
    "start": "600080",
    "end": "606480"
  },
  {
    "text": "start containers differently now docker desktop definitely is the easy button and we get automatic network",
    "start": "606480",
    "end": "613440"
  },
  {
    "text": "proxying and all kinds of interesting things there but minicube allows us to do something a little bit different",
    "start": "613440",
    "end": "620240"
  },
  {
    "text": "minicube is great at running in nested virtualization scenarios for example where docker desktop just says hey",
    "start": "620240",
    "end": "627040"
  },
  {
    "text": "you're inside of a virtual machine i'm not going to help so if you're inside nested virtual",
    "start": "627040",
    "end": "632320"
  },
  {
    "text": "machines then you might consider running inside minicube once you've got it going you have an",
    "start": "632320",
    "end": "637760"
  },
  {
    "text": "identical docker and kubernetes environment just like you did with docker desktop",
    "start": "637760",
    "end": "643920"
  },
  {
    "text": "next up let's take a look at docker watch now i would really love to be able to",
    "start": "644240",
    "end": "650640"
  },
  {
    "text": "say docker watch and have it automatically rebuild my image any any time uh something happens well that",
    "start": "650640",
    "end": "658399"
  },
  {
    "text": "isn't a command but let's take a look at scaffold now scaffold is an open source project",
    "start": "658399",
    "end": "665360"
  },
  {
    "text": "that allows us to automatically rebuild our image optionally push it to a",
    "start": "665360",
    "end": "670399"
  },
  {
    "text": "container registry and start up our content inside of kubernetes anytime code changes",
    "start": "670399",
    "end": "676640"
  },
  {
    "text": "so we'll start with a scaffold init and that will get us this yaml file that",
    "start": "676640",
    "end": "681839"
  },
  {
    "text": "describes the details now here i have this",
    "start": "681839",
    "end": "687600"
  },
  {
    "text": "scaffold yaml file it has an image note that it doesn't have a version number because as",
    "start": "687600",
    "end": "694160"
  },
  {
    "text": "scaffold notices concern changes it will automatically rebuild that content so i don't want to specify",
    "start": "694160",
    "end": "701519"
  },
  {
    "text": "a version number here but then here is my kubernetes yaml file that will automatically start and it",
    "start": "701519",
    "end": "707680"
  },
  {
    "text": "just includes the normal content deployment service",
    "start": "707680",
    "end": "712720"
  },
  {
    "text": "and in this case i didn't need an ingress but here i do have a version number and scaffold will override that nicely",
    "start": "712720",
    "end": "720720"
  },
  {
    "text": "i have a docker file that does all the things so let's start up scaffold",
    "start": "720720",
    "end": "726320"
  },
  {
    "text": "scaffold dev and now it's watching my content",
    "start": "726320",
    "end": "731839"
  },
  {
    "text": "so um as it boots up",
    "start": "731839",
    "end": "738800"
  },
  {
    "text": "it will automatically notice that i've got some content it will go rebuild my",
    "start": "740320",
    "end": "745760"
  },
  {
    "text": "image that's perfect and it will start to push that into place now because it's running in kubernetes",
    "start": "745760",
    "end": "752079"
  },
  {
    "text": "cube ctl get all let's take a look at what port it chose there's that port so",
    "start": "752079",
    "end": "758320"
  },
  {
    "text": "we'll head off to we're running mini cube so instead of localhost we'll use minicube and we'll",
    "start": "758320",
    "end": "763680"
  },
  {
    "text": "go to that port number and now we see our website hello world",
    "start": "763680",
    "end": "769120"
  },
  {
    "text": "great so now let's come in here and let's change the content instead of hello",
    "start": "769120",
    "end": "774399"
  },
  {
    "text": "world let's say hello ndc sydney",
    "start": "774399",
    "end": "780480"
  },
  {
    "text": "i'm going to um i'm going to push save here",
    "start": "780480",
    "end": "786399"
  },
  {
    "text": "and we can see that it automatically starts rebuilding my image that's",
    "start": "786399",
    "end": "791440"
  },
  {
    "text": "perfect now optionally it can push it to a container registry and then it will",
    "start": "791440",
    "end": "798000"
  },
  {
    "text": "reapply my kubernetes yaml file with the new image in place i'm going to do a kubernetes get all",
    "start": "798000",
    "end": "805519"
  },
  {
    "text": "again and we can see this one terminating and this one's starting if i hurry i can",
    "start": "805519",
    "end": "812079"
  },
  {
    "text": "catch it in the act but let's push refresh and um let's give it a second since i'm screen",
    "start": "812079",
    "end": "819120"
  },
  {
    "text": "sharing and all the things then sometimes it takes a minute let's see if it will come back down",
    "start": "819120",
    "end": "825839"
  },
  {
    "text": "and then we'll refresh our web page and now we get the new content perfect",
    "start": "825839",
    "end": "832959"
  },
  {
    "text": "now i didn't need to do anything i just pushed save in my code editor and automatically the new content popped",
    "start": "832959",
    "end": "839040"
  },
  {
    "text": "into place now i did need to push refresh in my browser maybe if i had an auto refresh in my browser that might be",
    "start": "839040",
    "end": "845360"
  },
  {
    "text": "really interesting but scaffold is a really great way then to be able to automatically rebuild my",
    "start": "845360",
    "end": "852320"
  },
  {
    "text": "container anytime something happens now it's not uncommon where i'm like",
    "start": "852320",
    "end": "857760"
  },
  {
    "text": "yeah but but it's just not building correctly and that's where scaffold will be perfect",
    "start": "857760",
    "end": "864639"
  },
  {
    "text": "let's hit ctrl c and now scaffold is down",
    "start": "864639",
    "end": "870360"
  },
  {
    "text": "next up let's take a look at being able to visualize content inside of a",
    "start": "872240",
    "end": "877279"
  },
  {
    "text": "container now we've been working with the hello node cont image so let's say docker",
    "start": "877279",
    "end": "884720"
  },
  {
    "text": "history hello node and we can see all of the commands that",
    "start": "884720",
    "end": "891279"
  },
  {
    "text": "were used to build up this image all the way back from the node base",
    "start": "891279",
    "end": "896800"
  },
  {
    "text": "image that i started building on all the way through all the content that i built and we can take a look at the sizes of",
    "start": "896800",
    "end": "903279"
  },
  {
    "text": "the various layers but what content is in that layer did i build it correctly",
    "start": "903279",
    "end": "908399"
  },
  {
    "text": "am i in the right directory that's where docker history really can't help us but let's take a look at dive",
    "start": "908399",
    "end": "916959"
  },
  {
    "text": "now dive is a really elegant program that allows open source here up on github that allows us to be able to",
    "start": "916959",
    "end": "922959"
  },
  {
    "text": "visualize the contents of our cluster we can cruise up and down through the layers we can see the files that are",
    "start": "922959",
    "end": "929440"
  },
  {
    "text": "created in each layer so let's say dive hello node v0.1",
    "start": "929440",
    "end": "937680"
  },
  {
    "text": "and by default it will try and pull it from docker in this case it already exists so it can pull it up just fine",
    "start": "937680",
    "end": "943680"
  },
  {
    "text": "i'm going to push tab and then hit space bar to close some of these folders let's",
    "start": "943680",
    "end": "949040"
  },
  {
    "text": "close this folder and this folder and this folder okay tab back to my list of",
    "start": "949040",
    "end": "956240"
  },
  {
    "text": "layers and this is the original layer next in this layer the next layer will",
    "start": "956240",
    "end": "962000"
  },
  {
    "text": "add the home and node directories the next layer pulls in some yarn content",
    "start": "962000",
    "end": "967279"
  },
  {
    "text": "that's pretty cool the next layer adds some stuff i think it's down here yep the user directory",
    "start": "967279",
    "end": "975040"
  },
  {
    "text": "and let's come up to the top here and here's where my docker file began i",
    "start": "975040",
    "end": "982079"
  },
  {
    "text": "created this app directory one more layer down and we can see that we populated the app directory",
    "start": "982079",
    "end": "989360"
  },
  {
    "text": "now in this case we have our server.js as we expect but we also have a docker",
    "start": "989360",
    "end": "994480"
  },
  {
    "text": "compose and a dockerfile that's not really what i want it looks like i have a mistake in my code i'm",
    "start": "994480",
    "end": "1001759"
  },
  {
    "text": "going to come back here into my folder and i'm going to create a new file that is a",
    "start": "1001759",
    "end": "1007360"
  },
  {
    "text": "docker ignore file now in my docker ignore file i want to specify all of the content i want to",
    "start": "1007360",
    "end": "1013920"
  },
  {
    "text": "ignore libraries that i download so the node modules folder i want to ignore",
    "start": "1013920",
    "end": "1020000"
  },
  {
    "text": "built content so in a net project i would have bin and obj in this case i",
    "start": "1020000",
    "end": "1025760"
  },
  {
    "text": "don't have any built content that i want to ignore the dist folder is often in a node project",
    "start": "1025760",
    "end": "1031600"
  },
  {
    "text": "i also have user specific content that i might want to ignore star.user the vs folder maybe the dot vs",
    "start": "1031600",
    "end": "1039038"
  },
  {
    "text": "code folder the dot idea folder i also have log files and other content",
    "start": "1039039",
    "end": "1045600"
  },
  {
    "text": "so star.log but in this case i really wanted to ignore this docker file and docker",
    "start": "1045600",
    "end": "1051520"
  },
  {
    "text": "compose file so docker compose.yaml docker file i might also choose to",
    "start": "1051520",
    "end": "1058080"
  },
  {
    "text": "ignore the dot git folder once i've built up this dot docker ignore file then if i was still running",
    "start": "1058080",
    "end": "1065440"
  },
  {
    "text": "scaffold scaffold would automatically rebuild my image and now i wouldn't have that content in my container",
    "start": "1065440",
    "end": "1073280"
  },
  {
    "text": "dive is really elegant at being able to see the contents of the files in the container did i put them in the wrong",
    "start": "1073280",
    "end": "1079039"
  },
  {
    "text": "directory is that why my container isn't starting up correctly or did i include more content that i needed maybe my node",
    "start": "1079039",
    "end": "1086160"
  },
  {
    "text": "modules folder is really full or i have a step that copies in some libraries and",
    "start": "1086160",
    "end": "1091600"
  },
  {
    "text": "then changes them and so both layers are really big that's really powerful to be",
    "start": "1091600",
    "end": "1096720"
  },
  {
    "text": "able to visualize the contents of my container i'm going to hit ctrl c and i jump back",
    "start": "1096720",
    "end": "1102559"
  },
  {
    "text": "out of dive so dive was great to be able to visualize the contents of a container",
    "start": "1102559",
    "end": "1108880"
  },
  {
    "text": "next let's look at visualizing the contents of a cluster now we can look both at the docker mode of things and we",
    "start": "1108880",
    "end": "1116080"
  },
  {
    "text": "can also look at the kubernetes mode of things let's first look at docker mode",
    "start": "1116080",
    "end": "1121120"
  },
  {
    "text": "i'm going to start up let's take a look at lazydocker",
    "start": "1121120",
    "end": "1126400"
  },
  {
    "text": "now lazydocker is an open source github project that allows us to be able to visualize a docker",
    "start": "1126400",
    "end": "1133280"
  },
  {
    "text": "cluster now you can see them clicking around in this screen if you're using a mac or if",
    "start": "1133280",
    "end": "1139440"
  },
  {
    "text": "you're using windows terminal or powershell you can definitely click through",
    "start": "1139440",
    "end": "1144559"
  },
  {
    "text": "if you're using a windows command prompt you'll need to use the the key bindings to be able to navigate",
    "start": "1144559",
    "end": "1152320"
  },
  {
    "text": "so let's start up lazydocker lazydocker and",
    "start": "1152320",
    "end": "1157360"
  },
  {
    "text": "we'll be able to visualize the contents of this cluster so i'm going to click on the stats and",
    "start": "1157360",
    "end": "1164720"
  },
  {
    "text": "let's cruise through to a container that's running",
    "start": "1164720",
    "end": "1170240"
  },
  {
    "text": "i love these graphs of being able to visualize the content within the cluster",
    "start": "1171360",
    "end": "1177280"
  },
  {
    "text": "you know ascii art to be able to do this if all if you only have ssh access into your cluster then this can be a great",
    "start": "1177280",
    "end": "1184000"
  },
  {
    "text": "way to be able to see the content let's take a look at the images here's the image and the various tags associated",
    "start": "1184000",
    "end": "1190320"
  },
  {
    "text": "with it yep that's the one that scaffold built for us here's the one",
    "start": "1190320",
    "end": "1197120"
  },
  {
    "text": "that we built from docker compose and we can cruise through the other ones",
    "start": "1197120",
    "end": "1203840"
  },
  {
    "text": "here's our node base image that we started from that's pretty cool so",
    "start": "1203840",
    "end": "1209919"
  },
  {
    "text": "lazydocker is a great way to be able to visualize the docker side of things from a command prompt let's also visualize",
    "start": "1209919",
    "end": "1217120"
  },
  {
    "text": "the content using a ui next up let's take a look at portinger",
    "start": "1217120",
    "end": "1222320"
  },
  {
    "text": "now partainer allows us to be able to visualize the docker side of things partiner also has mechanisms for",
    "start": "1222320",
    "end": "1228640"
  },
  {
    "text": "visualizing the kubernetes side but it's not quite as strong so i went to",
    "start": "1228640",
    "end": "1234559"
  },
  {
    "text": "the um the docs inside of partainer and grab",
    "start": "1234559",
    "end": "1241039"
  },
  {
    "text": "this docker compose file docker compose up let's take a look at that docker compose",
    "start": "1241039",
    "end": "1247520"
  },
  {
    "text": "file here's that docker compose file for partainer and we're binding to port 9000",
    "start": "1247520",
    "end": "1254799"
  },
  {
    "text": "and so let's go to a mini cube 9000",
    "start": "1254799",
    "end": "1261280"
  },
  {
    "text": "and take a look at portainer now our first step is to log in we haven't set a password yet so",
    "start": "1261280",
    "end": "1267280"
  },
  {
    "text": "let's build ourselves a password and now we're running now we could definitely connect to a",
    "start": "1267280",
    "end": "1273520"
  },
  {
    "text": "cloud-based cluster perhaps on azure or aws or gcp",
    "start": "1273520",
    "end": "1280400"
  },
  {
    "text": "we could also put a an agent inside of our on-prem cluster we could connect to a remote docker",
    "start": "1280400",
    "end": "1286640"
  },
  {
    "text": "environment but in this case let's connect to the docker environment that we're currently running",
    "start": "1286640",
    "end": "1292080"
  },
  {
    "text": "now it does say that we need to map the docker socket into place now",
    "start": "1292080",
    "end": "1297760"
  },
  {
    "text": "pardon me we'll want to do that carefully because the docker socket allows us to make changes inside of our",
    "start": "1297840",
    "end": "1303280"
  },
  {
    "text": "cluster but here in that docker compose file we can see that we've already got that",
    "start": "1303280",
    "end": "1308480"
  },
  {
    "text": "docker socket mapped into place that's perfect we have a second volume that will save our password details so",
    "start": "1308480",
    "end": "1315520"
  },
  {
    "text": "if we log back in we'll know that we'll we're hitting the correct account so now that we've got that docker socket",
    "start": "1315520",
    "end": "1321760"
  },
  {
    "text": "mapped let's connect and let's dig into our local cluster",
    "start": "1321760",
    "end": "1327760"
  },
  {
    "text": "we can see the images that we've pulled and yep i've got a few um here's the",
    "start": "1327760",
    "end": "1332880"
  },
  {
    "text": "hello node version uh 0.1 that we created we can take a look at volumes i always",
    "start": "1332880",
    "end": "1339840"
  },
  {
    "text": "like wandering through here and noticing the things that i forgot to delete um",
    "start": "1339840",
    "end": "1345200"
  },
  {
    "text": "like this one um we can also take a look at running containers now we see the partainer",
    "start": "1345200",
    "end": "1352799"
  },
  {
    "text": "container that's running right now and we can also add a new container let's go look for hello oh i love that",
    "start": "1352799",
    "end": "1360880"
  },
  {
    "text": "intellisense let's go grab hello node v 0.1 we can choose to expose all the",
    "start": "1360880",
    "end": "1366400"
  },
  {
    "text": "ports or in this case i'm going to choose to grab a port specifically 3000 to port",
    "start": "1366400",
    "end": "1372720"
  },
  {
    "text": "3000 we can also set volumes and environment variables and other details",
    "start": "1372720",
    "end": "1378880"
  },
  {
    "text": "that we want in this container and then once we've got it ready to go let's",
    "start": "1378880",
    "end": "1384320"
  },
  {
    "text": "deploy the container and now we can see that container running inside of our cluster",
    "start": "1384320",
    "end": "1390240"
  },
  {
    "text": "there's the hello node image that it used and we've got this container name",
    "start": "1390240",
    "end": "1395520"
  },
  {
    "text": "now that's great digging into this container we can take a look at some of the details associated with it here's",
    "start": "1395520",
    "end": "1401440"
  },
  {
    "text": "the logs the console logs and it says it's running on port 3000 so if we come here to mini cube 3000 we can see that",
    "start": "1401440",
    "end": "1410320"
  },
  {
    "text": "container is running oh and apparently i'm not getting that text",
    "start": "1410320",
    "end": "1415360"
  },
  {
    "text": "that's interesting um we can also take a look at other details",
    "start": "1415360",
    "end": "1421679"
  },
  {
    "text": "inspect is great if ever you've done a docker inspect and you have just a wall",
    "start": "1421679",
    "end": "1427440"
  },
  {
    "text": "of config i kind of like being able to open and close these details one of the things i like to look at is the networks",
    "start": "1427440",
    "end": "1434960"
  },
  {
    "text": "in this case it's got an ip address of 172.17.0.4 that's kind of nice",
    "start": "1434960",
    "end": "1441360"
  },
  {
    "text": "and wandering through the ports it's nice to be able to scroll up and down and to be able to look at that content",
    "start": "1441360",
    "end": "1449278"
  },
  {
    "text": "now we were able to take a look at the configuration details we can also take a look at the console",
    "start": "1449520",
    "end": "1456240"
  },
  {
    "text": "now this is an alpine based image so instead of bash i'm going to switch to ash and i'm going to connect",
    "start": "1456240",
    "end": "1463039"
  },
  {
    "text": "if the only way that you can connect to your cluster is through a web browser you can still",
    "start": "1463039",
    "end": "1468559"
  },
  {
    "text": "get into your container now i'm running on windows but this is inside my container so dur isn't a thing but i can",
    "start": "1468559",
    "end": "1474960"
  },
  {
    "text": "do an ls minus la and we can see that content yep i haven't rebuilt that container since",
    "start": "1474960",
    "end": "1481440"
  },
  {
    "text": "we adjusted the docker ignore file and now i can say node",
    "start": "1481440",
    "end": "1486720"
  },
  {
    "text": "server.js and of course that port is already in use by the process that's doing that let's do ps minus ef and we",
    "start": "1486720",
    "end": "1493919"
  },
  {
    "text": "can see the original node process running inside of our container",
    "start": "1493919",
    "end": "1499039"
  },
  {
    "text": "now this could be really helpful if for example we want to say",
    "start": "1499039",
    "end": "1504720"
  },
  {
    "text": "did we start in the wrong folder did we copy the content into the wrong folder um is our configuration not quite right",
    "start": "1504720",
    "end": "1511919"
  },
  {
    "text": "we do want to avoid changing our container contents this is not the way to do last mile configuration",
    "start": "1511919",
    "end": "1518720"
  },
  {
    "text": "but we can take a look at our container and validate that our container is running as expected",
    "start": "1518720",
    "end": "1524880"
  },
  {
    "text": "once i'm done i'm going to exit out of here and i'm back to my web browser",
    "start": "1524880",
    "end": "1530080"
  },
  {
    "text": "now we started a container on a cluster and so you do want to secure your",
    "start": "1530080",
    "end": "1535360"
  },
  {
    "text": "partainer dashboard very carefully once we're done let's remove this",
    "start": "1535360",
    "end": "1541120"
  },
  {
    "text": "container we could automatically remove persistent volumes let's do that and now our um",
    "start": "1541120",
    "end": "1548400"
  },
  {
    "text": "and now we've stopped that curt container let's hit ctrl c",
    "start": "1548400",
    "end": "1553520"
  },
  {
    "text": "docker compose down and um we'll take down portainer",
    "start": "1553520",
    "end": "1560000"
  },
  {
    "text": "docker volume prune yep i had a few too many volumes kicking",
    "start": "1560000",
    "end": "1565840"
  },
  {
    "text": "around and partainer was great at being able to show that so we got to look at the docker side of",
    "start": "1565840",
    "end": "1572640"
  },
  {
    "text": "things now let's take a look at the kubernetes side of things now kubernetes is going to launch the containers but it",
    "start": "1572640",
    "end": "1579279"
  },
  {
    "text": "wraps them in this nice mechanism of pods so let's start out by looking at this",
    "start": "1579279",
    "end": "1585039"
  },
  {
    "text": "from the command line um let's look at uh",
    "start": "1585039",
    "end": "1591440"
  },
  {
    "text": "here's portainer let's look at k9s now k9s is our canines is an open source",
    "start": "1591440",
    "end": "1598799"
  },
  {
    "text": "project here that allows us to be able to visualize the kubernetes cluster now it does look a lot like",
    "start": "1598799",
    "end": "1605919"
  },
  {
    "text": "vi work a lot like vi so when we start canines then we'll use our familiar vise",
    "start": "1605919",
    "end": "1613600"
  },
  {
    "text": "syntax so i'm going to hit colon and i'll switch to namespaces",
    "start": "1613600",
    "end": "1618960"
  },
  {
    "text": "now in my namespaces i can cruise up and down let's dig into the ingress nginx one we can see two pods have finished",
    "start": "1618960",
    "end": "1627279"
  },
  {
    "text": "and one pot is running i'm going to dig into that we can see the one container there let's dig into that container we",
    "start": "1627279",
    "end": "1633840"
  },
  {
    "text": "can take a look at logs in this case the logs are pretty empty so i'll back back out",
    "start": "1633840",
    "end": "1641279"
  },
  {
    "text": "let's take a look at yep there's the empty logs and we can walk our way back",
    "start": "1641279",
    "end": "1647120"
  },
  {
    "text": "out i'm gonna hit colon again and exit",
    "start": "1647120",
    "end": "1652880"
  },
  {
    "text": "and nope that's not the command control c dumps us back out of canines",
    "start": "1652880",
    "end": "1658799"
  },
  {
    "text": "now that was a great way to be able to visualize the kubernetes side of things i like to switch back and forth between",
    "start": "1658799",
    "end": "1664960"
  },
  {
    "text": "lazy docker and canines depending on the type of visualization that i want to see",
    "start": "1664960",
    "end": "1670640"
  },
  {
    "text": "if you only have ssh accessed into your cluster then these can be excellent tools",
    "start": "1670640",
    "end": "1676880"
  },
  {
    "text": "next let's take a look at a ui way of doing this and i'm going to showcase schooner",
    "start": "1676880",
    "end": "1684559"
  },
  {
    "text": "now schooner is a free and open source project kubernetes does come with a dashboard but authentication is not part",
    "start": "1684559",
    "end": "1691600"
  },
  {
    "text": "of the kubernetes dashboard by default by comparison schooner has",
    "start": "1691600",
    "end": "1697120"
  },
  {
    "text": "authentication turned on by default so let's start the kubernetes dashboard",
    "start": "1697120",
    "end": "1704080"
  },
  {
    "text": "i'll say cube ctl apply schooner nope dash f schooner",
    "start": "1704080",
    "end": "1712080"
  },
  {
    "text": "and up starts the schooner dashboard cube ctl get all let's see what port we",
    "start": "1712080",
    "end": "1718320"
  },
  {
    "text": "got chosen yep 32 000 and let's head off to minicube colon",
    "start": "1718320",
    "end": "1725360"
  },
  {
    "text": "32 000 and take a look at our schooner dashboard",
    "start": "1725360",
    "end": "1730559"
  },
  {
    "text": "now by default we are asked to log in so let's go grab the authentication token",
    "start": "1730559",
    "end": "1736320"
  },
  {
    "text": "it's stored as a secret inside of our cluster and paste that here",
    "start": "1736320",
    "end": "1742880"
  },
  {
    "text": "now i love being able to visualize my kubernetes cluster this way let's take a look at the namespaces and the various",
    "start": "1743360",
    "end": "1749919"
  },
  {
    "text": "content in each namespace so here's the pod that's running and the two pods that have finished we can dig into a",
    "start": "1749919",
    "end": "1756480"
  },
  {
    "text": "particular pod and be able to explore its configuration i like to come in here and take a look",
    "start": "1756480",
    "end": "1763360"
  },
  {
    "text": "at storage and volumes because it's really easy for us to accidentally forget volumes and",
    "start": "1763360",
    "end": "1770640"
  },
  {
    "text": "maybe have them kick around for a long time another thing i love to look at here inside accounts i like to look at",
    "start": "1770640",
    "end": "1778080"
  },
  {
    "text": "secrets now we're in the default namespace let's switch to all namespaces and we can see",
    "start": "1778080",
    "end": "1785279"
  },
  {
    "text": "that there are a lot if you find a lot of secrets and you",
    "start": "1785279",
    "end": "1790640"
  },
  {
    "text": "find that they're really old it might be time to rotate some of those secrets",
    "start": "1790640",
    "end": "1795919"
  },
  {
    "text": "now i'm going to switch to just the default namespace and we'll take a look at the schooner token that we have right",
    "start": "1795919",
    "end": "1803200"
  },
  {
    "text": "here now this is the token that i used to authenticate if you have access to the cluster enough",
    "start": "1803200",
    "end": "1808960"
  },
  {
    "text": "to be able to see the secret then you have access enough to be able to visualize it with schooner",
    "start": "1808960",
    "end": "1814080"
  },
  {
    "text": "my cluster is running locally so i don't mind showing you this token but that's the token that i copied and pasted into",
    "start": "1814080",
    "end": "1819919"
  },
  {
    "text": "place to be able to log into schooner but i can also look at other secrets in",
    "start": "1819919",
    "end": "1825279"
  },
  {
    "text": "here as well and that's really helpful i uh once we've visualized our content",
    "start": "1825279",
    "end": "1831840"
  },
  {
    "text": "inside of schooner i'm going to come in here to my profile and i will choose to log out",
    "start": "1831840",
    "end": "1838640"
  },
  {
    "text": "now schooner makes me log in by default the built-in kubernetes dashboard does not it's",
    "start": "1838640",
    "end": "1845520"
  },
  {
    "text": "really easy to accidentally flip it from a cluster ip to a node port and",
    "start": "1845520",
    "end": "1851279"
  },
  {
    "text": "accidentally expose it externally much like a portainer we could do",
    "start": "1851279",
    "end": "1857840"
  },
  {
    "text": "some we could create content inside of our kubernetes cluster and so we really",
    "start": "1857840",
    "end": "1863360"
  },
  {
    "text": "want to secure these dashboards carefully let's take down schooner cube ctl delete",
    "start": "1863360",
    "end": "1871840"
  },
  {
    "text": "dash f schooner and now schooner is not running as well",
    "start": "1871840",
    "end": "1879840"
  },
  {
    "text": "next let's take a look at debugging inside of our cluster now i have this extra folder here called",
    "start": "1880320",
    "end": "1887039"
  },
  {
    "text": "debugging i'm going to open that in a separate vs code in a moment let's take a look at",
    "start": "1887039",
    "end": "1893039"
  },
  {
    "text": "how that'll work now when we're debugging inside a mini cube we are debugging inside of vs code vs",
    "start": "1893039",
    "end": "1900799"
  },
  {
    "text": "code will actually split in half now there's half of it that's running inside of our ui that allows us to do",
    "start": "1900799",
    "end": "1908080"
  },
  {
    "text": "theme extensions like our font choice and our color palette",
    "start": "1908080",
    "end": "1913200"
  },
  {
    "text": "the other half of vs code is running as a server and that's where our language extensions and our build and compile",
    "start": "1913200",
    "end": "1919600"
  },
  {
    "text": "mechanisms work now as port connects those together and we have a volume mount that allows us to",
    "start": "1919600",
    "end": "1926000"
  },
  {
    "text": "get the code into the container now that we've got vs code split in half",
    "start": "1926000",
    "end": "1931120"
  },
  {
    "text": "we can work on our code locally and be able to",
    "start": "1931120",
    "end": "1936159"
  },
  {
    "text": "get advantage of content that we may not have installed on our local machine",
    "start": "1936159",
    "end": "1941360"
  },
  {
    "text": "now the first step is to come in here to extensions and go look",
    "start": "1941360",
    "end": "1946559"
  },
  {
    "text": "for the remote extension now here's the remote containers extension",
    "start": "1946559",
    "end": "1952559"
  },
  {
    "text": "which very specifically powers containers but there's also a remote development extension that includes both",
    "start": "1952559",
    "end": "1959679"
  },
  {
    "text": "the remote containers extension and the remote wsl extension and a remote ssh",
    "start": "1959679",
    "end": "1964720"
  },
  {
    "text": "extension if you only have ssh access to your raspberry pi and you want to do some",
    "start": "1964720",
    "end": "1971200"
  },
  {
    "text": "debugging on that yeah you can keep sshing in and maybe using vi or copying",
    "start": "1971200",
    "end": "1976799"
  },
  {
    "text": "content to and fro but you can also create a vs code mechanism where you run",
    "start": "1976799",
    "end": "1982080"
  },
  {
    "text": "that server on the pi and you're able to debug that content from vs code locally",
    "start": "1982080",
    "end": "1988480"
  },
  {
    "text": "so i've got the remote development extension installed that gives me all three of these",
    "start": "1988480",
    "end": "1994000"
  },
  {
    "text": "extensions and with that installed i now have this green button down here on the bottom right",
    "start": "1994000",
    "end": "2000159"
  },
  {
    "text": "i'll click on this green button and up pops this menu of being able to do",
    "start": "2000159",
    "end": "2005200"
  },
  {
    "text": "really cool things here's the content inside wsl inside ssh but we'll focus on",
    "start": "2005200",
    "end": "2010799"
  },
  {
    "text": "the container content let's start by trying a development container sample now we're able to pick",
    "start": "2010799",
    "end": "2017519"
  },
  {
    "text": "various technologies and once we pick that it will automatically spin up a container with that content ready to go",
    "start": "2017519",
    "end": "2025279"
  },
  {
    "text": "i didn't need to install this content if i wanted to play with python or with",
    "start": "2025279",
    "end": "2030399"
  },
  {
    "text": "rust and i didn't want to install those compilers or maybe i want to go try some java stuff will my content work if i",
    "start": "2030399",
    "end": "2037919"
  },
  {
    "text": "upgrade to java 11 or java 13 i don't know let's run that in a",
    "start": "2037919",
    "end": "2042960"
  },
  {
    "text": "container where we don't have any conflicts when we get ready to install this in our",
    "start": "2042960",
    "end": "2048878"
  },
  {
    "text": "local content let's pop this open again and we can say add development container",
    "start": "2048879",
    "end": "2053919"
  },
  {
    "text": "configuration files this allows us to automatically scaffold content in our language of choice to be",
    "start": "2053919",
    "end": "2060878"
  },
  {
    "text": "able to put the content necessary for starting up our our system",
    "start": "2060879",
    "end": "2066240"
  },
  {
    "text": "now uh i've already got this content installed let's open it up inside of our",
    "start": "2066240",
    "end": "2074560"
  },
  {
    "text": "second vs code and we'll be able to start debugging this content",
    "start": "2074560",
    "end": "2080638"
  },
  {
    "text": "now i have a dot dev container folder and inside that i have a",
    "start": "2080639",
    "end": "2086280"
  },
  {
    "text": "devcontainer.json file and that's the content that we need for vs code to recognize that this is debuggable inside",
    "start": "2086280",
    "end": "2093760"
  },
  {
    "text": "of a container once it starts up in a second as it activates all of its",
    "start": "2093760",
    "end": "2099839"
  },
  {
    "text": "extensions it will pop up a dialog that says hey can i restart this inside of a container",
    "start": "2099839",
    "end": "2107280"
  },
  {
    "text": "um yes please reopen that inside of a container i also could have definitely come in",
    "start": "2107359",
    "end": "2112800"
  },
  {
    "text": "here and clicked the box and said yes i would like to reopen it a container but",
    "start": "2112800",
    "end": "2118320"
  },
  {
    "text": "it doing it automatically is actually really helpful i love watching these logs pop up",
    "start": "2118320",
    "end": "2124240"
  },
  {
    "text": "because it's really fun to see how it builds up the container maps the volume into place and automatically gets that",
    "start": "2124240",
    "end": "2131440"
  },
  {
    "text": "set up for us it will take just a second",
    "start": "2131440",
    "end": "2135520"
  },
  {
    "text": "grabbing the local content it looks like it gave it a name that's",
    "start": "2136880",
    "end": "2143599"
  },
  {
    "text": "great and it looks like we've got our container up almost running",
    "start": "2143599",
    "end": "2151280"
  },
  {
    "text": "mapping that volume into place starting the extensions",
    "start": "2152000",
    "end": "2159520"
  },
  {
    "text": "and now i'm running perfect now this is running inside of a",
    "start": "2159520",
    "end": "2165680"
  },
  {
    "text": "container i'm here on windows but if i create a new terminal",
    "start": "2165680",
    "end": "2171119"
  },
  {
    "text": "i've got oh not that one let's start a new terminal",
    "start": "2171119",
    "end": "2178640"
  },
  {
    "text": "you name minus a i can tell that this is really inside the container this is",
    "start": "2180079",
    "end": "2185119"
  },
  {
    "text": "linux if i come back to my command prompt and i say docker container list",
    "start": "2185119",
    "end": "2190800"
  },
  {
    "text": "and we'll use our trick to get rid of all of the kubernetes control plane",
    "start": "2190800",
    "end": "2196160"
  },
  {
    "text": "here is that container oh docker container list",
    "start": "2196160",
    "end": "2202240"
  },
  {
    "text": "helps if i spell container correctly here's that container that it just spun up",
    "start": "2203040",
    "end": "2209760"
  },
  {
    "text": "now that's excellent let's close this and we'll take a look at the dot dev",
    "start": "2211200",
    "end": "2216240"
  },
  {
    "text": "container dev container json file now our first step inside the dev container json file is either to specify",
    "start": "2216240",
    "end": "2222640"
  },
  {
    "text": "an image or a docker file now this docker file is not the docker file that we'll use to get into",
    "start": "2222640",
    "end": "2228400"
  },
  {
    "text": "production but rather the docker file that we used to be able to set up our debugging container",
    "start": "2228400",
    "end": "2234079"
  },
  {
    "text": "so i have that here inside the dev container folder as well now you'll notice that we're not doing",
    "start": "2234079",
    "end": "2239920"
  },
  {
    "text": "any copies we're not doing any volume mounts we're not starting anything with cmd this is just creating the",
    "start": "2239920",
    "end": "2246240"
  },
  {
    "text": "environment that vs code can use to be able to set up our environment now in this case i used node alpine and i",
    "start": "2246240",
    "end": "2252400"
  },
  {
    "text": "specified the workspace directory i also installed git and curl in case i wanted to do any source control",
    "start": "2252400",
    "end": "2259200"
  },
  {
    "text": "actions here inside the container now that we've got our",
    "start": "2259200",
    "end": "2265680"
  },
  {
    "text": "image or our docker file then we have a post create command now i wanted to npm install inside the container now i",
    "start": "2265680",
    "end": "2272320"
  },
  {
    "text": "didn't want the windows versions of any native modules i wanted the linux versions of it so after the container",
    "start": "2272320",
    "end": "2279040"
  },
  {
    "text": "starts up it will do an npm install to be able to get all my dependencies now i can specify various settings that",
    "start": "2279040",
    "end": "2285920"
  },
  {
    "text": "i want do i want to include various extensions installed inside the server side of this in this case i just chose",
    "start": "2285920",
    "end": "2293040"
  },
  {
    "text": "big font sizes we can also list the forwarded ports",
    "start": "2293040",
    "end": "2298640"
  },
  {
    "text": "vs code is really good at discovering when we launch ports but in this case i'm going to very specifically call out",
    "start": "2298640",
    "end": "2304000"
  },
  {
    "text": "that my port is 3000 and it will automatically proxy it back to my machine so it won't be mini cube 3000",
    "start": "2304000",
    "end": "2311200"
  },
  {
    "text": "but rather localhost 3000 that means if we're using this technique inside of azure or inside of aws then we won't be",
    "start": "2311200",
    "end": "2319520"
  },
  {
    "text": "hitting an aws url rather we'll be hitting localhost to be able to tunnel through",
    "start": "2319520",
    "end": "2326000"
  },
  {
    "text": "into our debugged container now i am running inside a mini cube so i do have",
    "start": "2326000",
    "end": "2331119"
  },
  {
    "text": "to specify the workspace mount and i have to specify that i'm mapping this folder from my pc into that vm and then",
    "start": "2331119",
    "end": "2339280"
  },
  {
    "text": "map it from that vm into the container",
    "start": "2339280",
    "end": "2344960"
  },
  {
    "text": "now that we've got that content in place let's start debugging our system i'm going to create a breakpoint here and a",
    "start": "2345119",
    "end": "2351680"
  },
  {
    "text": "breakpoint here and just like i would in any environment i've got my dot vs code",
    "start": "2351680",
    "end": "2357440"
  },
  {
    "text": "folder and so i can start debugging now the cool part about this we see that",
    "start": "2357440",
    "end": "2363200"
  },
  {
    "text": "we've got syntax highlighting we've got a normal type of run environment yep we hit our break point straight away oh",
    "start": "2363200",
    "end": "2369520"
  },
  {
    "text": "would you like to open it in a browser why yes i would notice that it's localhost 3000. we're",
    "start": "2369520",
    "end": "2376079"
  },
  {
    "text": "proxying from the vs code through that socket into the remote container",
    "start": "2376079",
    "end": "2383200"
  },
  {
    "text": "now we're still at our break point so we can i'm going to take off this break point",
    "start": "2383200",
    "end": "2388560"
  },
  {
    "text": "and push play and now we'll get to our first break point in our code let's take a look at",
    "start": "2388560",
    "end": "2394160"
  },
  {
    "text": "the request much like we would if we were debugging anywhere we can wander through the variables that we have set here is the",
    "start": "2394160",
    "end": "2401040"
  },
  {
    "text": "url and in this case it's a forward slash excellent now i can take a look at various",
    "start": "2401040",
    "end": "2406800"
  },
  {
    "text": "variables i can step into with f10 step over with f11 or no step into with f11",
    "start": "2406800",
    "end": "2413920"
  },
  {
    "text": "step over with f10 and do all the debugging that i need to i'll push play and the next request",
    "start": "2413920",
    "end": "2420640"
  },
  {
    "text": "we'll see will not be the slash but this one rather will be looking for the favicon.ico",
    "start": "2420640",
    "end": "2427280"
  },
  {
    "text": "so yep we're looking for faveikon.ico and i'm able to debug my website",
    "start": "2427280",
    "end": "2432880"
  },
  {
    "text": "in the ways that i need to i'll take off this breakpoint and just push play and we can see the content pull up inside of",
    "start": "2432880",
    "end": "2439920"
  },
  {
    "text": "our container now the cool part is it is just regular vs",
    "start": "2439920",
    "end": "2445599"
  },
  {
    "text": "code and so i can do regular intellisense and um",
    "start": "2445599",
    "end": "2452480"
  },
  {
    "text": "content here but we do have vs codes split in two pieces one is running on my local machine to be able to give me the",
    "start": "2452480",
    "end": "2460000"
  },
  {
    "text": "colorization font choices the other part is running inside the container that gives me that syntax highlighting and",
    "start": "2460000",
    "end": "2466079"
  },
  {
    "text": "debugging experience once i'm done here inside the container i'm going to come into this green spot",
    "start": "2466079",
    "end": "2473280"
  },
  {
    "text": "and i'm going to say close remote connection and it pushes vs code back into normal mode where it",
    "start": "2473280",
    "end": "2480160"
  },
  {
    "text": "joins those two pieces and i could open up a different project",
    "start": "2480160",
    "end": "2485280"
  },
  {
    "text": "now this has been really cool being able to visualize content inside of a",
    "start": "2485280",
    "end": "2490319"
  },
  {
    "text": "container visualize clusters in interesting ways to be able to visualize",
    "start": "2490319",
    "end": "2495760"
  },
  {
    "text": "to be able to debug inside of a container and also to be able to start containers easier",
    "start": "2495760",
    "end": "2501280"
  },
  {
    "text": "you can take a look at all of the tools that we've seen here on this gist and grab this just really easily from",
    "start": "2501280",
    "end": "2508680"
  },
  {
    "text": "robrich.org or i'll put a link here in chat",
    "start": "2508680",
    "end": "2514160"
  },
  {
    "text": "if you're watching this video later hit me up on twitter at rob underscore rich i'd love to learn about the tools that",
    "start": "2514160",
    "end": "2520000"
  },
  {
    "text": "you really enjoy and how i can incorporate them in this talk as well for those of you here live at the event",
    "start": "2520000",
    "end": "2526480"
  },
  {
    "text": "one of the questions i often get here is well does this work in my cluster what if i'm on aws or openshift",
    "start": "2526480",
    "end": "2534640"
  },
  {
    "text": "all the tools that we looked at today are very specific to docker and kubernetes and will work on any flavor",
    "start": "2534640",
    "end": "2540960"
  },
  {
    "text": "of docker and kubernetes you can use mini cube to debug locally or you can use canines to be able to visualize your",
    "start": "2540960",
    "end": "2548240"
  },
  {
    "text": "openshift cluster you can use a docker lazydocker to be able to visualize both",
    "start": "2548240",
    "end": "2554720"
  },
  {
    "text": "your local docker desktop environment or maybe a docker",
    "start": "2554720",
    "end": "2559920"
  },
  {
    "text": "swarm instance none of these tools are specific to or",
    "start": "2559920",
    "end": "2565119"
  },
  {
    "text": "barred from any particular cloud vendor one of the tools that i wish i had time",
    "start": "2565119",
    "end": "2570160"
  },
  {
    "text": "to explore is helm and i i actually originally included helm in this talk",
    "start": "2570160",
    "end": "2575520"
  },
  {
    "text": "but helm grew out of it and so i have now a completely separate talk that discusses",
    "start": "2575520",
    "end": "2581839"
  },
  {
    "text": "how wonderful helm is at templating content if you get tired of all the duplication inside of your kubernetes",
    "start": "2581839",
    "end": "2588400"
  },
  {
    "text": "yaml files then helm could be a great choice at removing that duplication well this has been a lot of fun getting to",
    "start": "2588400",
    "end": "2594319"
  },
  {
    "text": "show you local development techniques with kubernetes grab me on twitter at rob underscore rich if you find some",
    "start": "2594319",
    "end": "2600480"
  },
  {
    "text": "concerns maybe later today or if you're pondering on this tomorrow or next week",
    "start": "2600480",
    "end": "2606400"
  },
  {
    "text": "thanks for joining us today",
    "start": "2606400",
    "end": "2610279"
  }
]