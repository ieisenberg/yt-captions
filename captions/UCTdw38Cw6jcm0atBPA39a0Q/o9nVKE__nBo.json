[
  {
    "text": "hello I am here to talk to you today about decentralized Supply Chain",
    "start": "1879",
    "end": "6960"
  },
  {
    "text": "management and how to build software any software at all",
    "start": "6960",
    "end": "12300"
  },
  {
    "text": "with warpfort and the power of hashing warforge is a piece of software I'm",
    "start": "12300",
    "end": "18480"
  },
  {
    "text": "going to introduce today that is a build tool that you put other build Tools in in order to attempt to universalize",
    "start": "18480",
    "end": "24180"
  },
  {
    "text": "things it's going to worry about Supply chains the data that you bring into your build environments and secure those by the use",
    "start": "24180",
    "end": "31800"
  },
  {
    "text": "of hashing and hashtree data structures and it's going to be a project that I hope will work for everyone I want a",
    "start": "31800",
    "end": "39239"
  },
  {
    "text": "project for build tools which is collaborative and decentralized and designed to help share information so",
    "start": "39239",
    "end": "45180"
  },
  {
    "text": "that people can work together without being forced to work in lockstep with each other",
    "start": "45180",
    "end": "51140"
  },
  {
    "text": "hi I'm Eric I won't go too much into my history but the things that bring me here today to talk about building software is well",
    "start": "51360",
    "end": "58140"
  },
  {
    "text": "that I do a lot of that and I build a lot of different pieces of software for different organizations for different",
    "start": "58140",
    "end": "64198"
  },
  {
    "text": "projects in different languages and that experience is something that I",
    "start": "64199",
    "end": "70200"
  },
  {
    "text": "want to be good and as I work in many different projects I accumulate a lot of Maintenance work",
    "start": "70200",
    "end": "76140"
  },
  {
    "text": "to do as well so I'm really interested in having build processes and software that lasts",
    "start": "76140",
    "end": "81299"
  },
  {
    "text": "and I like to build software that other people can get into their hands and use easily which also requires the process",
    "start": "81299",
    "end": "87060"
  },
  {
    "text": "of delivery to be well paved and so in this talk I'm going to go into",
    "start": "87060",
    "end": "92759"
  },
  {
    "text": "that and some challenges that I find with it and I'm going to introduce a piece of software that I hope solve some problems around building other software",
    "start": "92759",
    "end": "99659"
  },
  {
    "text": "but first i'm going to spend a lot of time on the motivations and and some of the problems there",
    "start": "99659",
    "end": "105840"
  },
  {
    "text": "some of the problems in building software are also quite difficult because they're the kind of problems",
    "start": "105840",
    "end": "111479"
  },
  {
    "text": "where if you have a half solution it turns out to be no solution at all those are tricky ones",
    "start": "111479",
    "end": "117299"
  },
  {
    "text": "so in this talk I'm going to start with the Norms now and then further go into what we wish",
    "start": "117299",
    "end": "124140"
  },
  {
    "text": "things were like instead talk about a few inspirational projects that I think like have really good ideas",
    "start": "124140",
    "end": "129899"
  },
  {
    "text": "that I'd like to bring forward and then do some problem solving introduce warp Forge in this new tooling",
    "start": "129899",
    "end": "135540"
  },
  {
    "text": "that I'm excited to share as time allows there'll be some comparison to other projects and then",
    "start": "135540",
    "end": "141000"
  },
  {
    "text": "looking towards the future what more work could be done and how could people get involved so",
    "start": "141000",
    "end": "147540"
  },
  {
    "text": "the Norms today in building software building software is easy right",
    "start": "147540",
    "end": "153900"
  },
  {
    "text": "we're a whole facility full of a conference full of software developers and so clearly we know how to build",
    "start": "153900",
    "end": "159840"
  },
  {
    "text": "software and we just all have to know what all of the tools are every different tool for every different",
    "start": "159840",
    "end": "166500"
  },
  {
    "text": "language and every different project which is totally fine right it's easy to memorize all of these things and all of",
    "start": "166500",
    "end": "171540"
  },
  {
    "text": "their different features and they all work exactly the same way so it's really low cognitive overhead right",
    "start": "171540",
    "end": "177900"
  },
  {
    "text": "no no I'm being sarcastic this isn't true at all there's a ton of memorization to do there and all these",
    "start": "177900",
    "end": "183300"
  },
  {
    "text": "tools they have the same level of reliability right every package manager you've ever worked with has lock files",
    "start": "183300",
    "end": "189000"
  },
  {
    "text": "and they all totally work right they all pin exact versions and are highly trustworthy right everything is",
    "start": "189000",
    "end": "195659"
  },
  {
    "text": "versioned right no this is not true some package managers get lock files many don't",
    "start": "195659",
    "end": "204440"
  },
  {
    "text": "um and then when we have prerequisites for something that goes outside of our immediate project like something needs",
    "start": "204480",
    "end": "210420"
  },
  {
    "text": "to depend on GCC or other examples vary by language for example in Ruby the nokogiri gem is famous for being the",
    "start": "210420",
    "end": "217920"
  },
  {
    "text": "easiest thing to install ever right foreign no no none of this is true when we have",
    "start": "217920",
    "end": "225120"
  },
  {
    "text": "packages in our projects that depend on system level packages things like C",
    "start": "225120",
    "end": "230220"
  },
  {
    "text": "compilers are a frequent example um then these cease to be things we can automate I they become massive Global",
    "start": "230220",
    "end": "237180"
  },
  {
    "text": "variables and I think I can't even really tell jokes here everybody knows that when we get to this depth we're",
    "start": "237180",
    "end": "244319"
  },
  {
    "text": "kind of hosed like at that point you start writing instructions in the readme of your project instead of writing code",
    "start": "244319",
    "end": "250860"
  },
  {
    "text": "for your build process and you just sort of ask forgiveness for everyone who's ever going to come after you",
    "start": "250860",
    "end": "257160"
  },
  {
    "text": "it's a bummer it's not great but hey once we have software that is",
    "start": "257160",
    "end": "262860"
  },
  {
    "text": "built at least it's easy to know exactly what happened and describe that information so you know if we solved the",
    "start": "262860",
    "end": "269040"
  },
  {
    "text": "problem once we can solve it again right or like we can even hand an audit log to somebody about what happened right",
    "start": "269040",
    "end": "276240"
  },
  {
    "text": "no no that's not normal either is it knowing what you just built the instant after you finished building it is in",
    "start": "276240",
    "end": "282960"
  },
  {
    "text": "fact a mad house it is not normal for any of our build tools to help us have",
    "start": "282960",
    "end": "288780"
  },
  {
    "text": "information about what we just did like do your build tools give you hashes of",
    "start": "288780",
    "end": "294060"
  },
  {
    "text": "the things they just produced if they do can you look that up and map it back to some other information maybe",
    "start": "294060",
    "end": "300540"
  },
  {
    "text": "some hash IDs of the source code that went in okay maybe but probably not but how",
    "start": "300540",
    "end": "306060"
  },
  {
    "text": "about then can you map it back to all the other dependencies used or the compiler versions used if you want to",
    "start": "306060",
    "end": "311940"
  },
  {
    "text": "debug any of these things in retrospect and know what you've just finished doing can you have that information out of",
    "start": "311940",
    "end": "318479"
  },
  {
    "text": "your tool chain and can you hand that to somebody else to reproduce or to your future self next Thursday to reproduce",
    "start": "318479",
    "end": "326100"
  },
  {
    "text": "this is not normally provided by any of the tooling that we use this is kind of out of control",
    "start": "326100",
    "end": "333300"
  },
  {
    "text": "um just really disappointing it's unproductive there's tons of time wasted here and it's also outright insecure a",
    "start": "333300",
    "end": "341160"
  },
  {
    "text": "tax on software Supply chains have become outright common in the last couple years solarwinds was one of the big Headliners but there are many more",
    "start": "341160",
    "end": "348000"
  },
  {
    "text": "in history now we have to get more rigorous about this we have to start really versioning",
    "start": "348000",
    "end": "353460"
  },
  {
    "text": "everything and that just doesn't mean source code everyone knows now you have to have your source code and Version",
    "start": "353460",
    "end": "358500"
  },
  {
    "text": "Control right that's obvious that's not enough we need the whole systems we need the entire package management chain and",
    "start": "358500",
    "end": "365039"
  },
  {
    "text": "everything that goes into it to be secured these days that needs to become table Stakes",
    "start": "365039",
    "end": "371639"
  },
  {
    "text": "but where are we actually at nowhere near that right the best thing that we can do to maintain our build",
    "start": "371639",
    "end": "376979"
  },
  {
    "text": "systems and our projects are tons of Blood Sweat and Tears enormous amounts of manual work",
    "start": "376979",
    "end": "383280"
  },
  {
    "text": "maybe the best duct tape solution that everybody's got is we can bake and these",
    "start": "383280",
    "end": "388440"
  },
  {
    "text": "giant megalithic images using container systems this is becoming popular now",
    "start": "388440",
    "end": "393720"
  },
  {
    "text": "but then you get giant container images so partial solution or or really what happens a lot is we",
    "start": "393720",
    "end": "401400"
  },
  {
    "text": "ultimately give up right we just sort of accept that none of our work can really be shared or reproduced we start writing",
    "start": "401400",
    "end": "408360"
  },
  {
    "text": "rough instructions in the readme instead of scripts that actually do work and",
    "start": "408360",
    "end": "413580"
  },
  {
    "text": "save other people time this is this is pretty bummer",
    "start": "413580",
    "end": "419520"
  },
  {
    "text": "so okay but there was one possible solution alluded to there right containers solve some of these problems",
    "start": "419520",
    "end": "424919"
  },
  {
    "text": "around reproducibility right sorta sort of but not really",
    "start": "424919",
    "end": "431819"
  },
  {
    "text": "um we'll give credit where it's due containers tend to bring with it this idea that you're going to have a script to build stuff",
    "start": "431819",
    "end": "438180"
  },
  {
    "text": "and you're going to have some reasonable isolation which means the script will be truthful and do real work so that's",
    "start": "438180",
    "end": "444419"
  },
  {
    "text": "progress that's good but what we do with that nice clean",
    "start": "444419",
    "end": "451560"
  },
  {
    "text": "environment is really pretty silly the normal thing to do when you've got a container is to",
    "start": "451560",
    "end": "457319"
  },
  {
    "text": "start with this nice clean room and go invoke other package managers in it it's the functional equivalent of",
    "start": "457319",
    "end": "463380"
  },
  {
    "text": "taking a bucket and going outside the door of your nice clean room scooping up whatever mud you find in the streets and",
    "start": "463380",
    "end": "469560"
  },
  {
    "text": "pouring it out in your clean room this does not help us understand what we're doing at all",
    "start": "469560",
    "end": "476039"
  },
  {
    "text": "it helps us freeze that thing once you've done it once you can snapshot things with containers",
    "start": "476039",
    "end": "481440"
  },
  {
    "text": "maybe that's some kind of progress but think about all the things that it doesn't help you with",
    "start": "481440",
    "end": "486840"
  },
  {
    "text": "it doesn't help you reproduce that container at any point in the future if any of the package managers used inside of it",
    "start": "486840",
    "end": "493199"
  },
  {
    "text": "lacked any kind of lock file and they probably did you've made no progress at all they",
    "start": "493199",
    "end": "498360"
  },
  {
    "text": "don't help you update this container they don't help you maintain anything in it you've gathered all of your",
    "start": "498360",
    "end": "503879"
  },
  {
    "text": "maintenance burdens into one big image and you've frozen them there but now you just have that one big image and did",
    "start": "503879",
    "end": "509580"
  },
  {
    "text": "that help because now if you want any of the rest of your build system to be reproducible you just have to hang on to that image",
    "start": "509580",
    "end": "516180"
  },
  {
    "text": "until the end of time hooray and it's huge because it's the whole system right",
    "start": "516180",
    "end": "521760"
  },
  {
    "text": "so now you have this huge image plus now you get to start dealing with container Registries wonderful a new totally",
    "start": "521760",
    "end": "528120"
  },
  {
    "text": "online single point of failure fantastic just what I wanted right no not what I",
    "start": "528120",
    "end": "533519"
  },
  {
    "text": "wanted there's no progress at all if there weren't lock files inside the things you used in the container then then we",
    "start": "533519",
    "end": "540180"
  },
  {
    "text": "haven't Advanced our journey at all here right and with some of the most popular",
    "start": "540180",
    "end": "545459"
  },
  {
    "text": "container systems you have this idea of like a linear stack of layers in which you do one reproduce unreproducible",
    "start": "545459",
    "end": "550980"
  },
  {
    "text": "thing after another and somehow that's going to help and like it doesn't and now people just spend",
    "start": "550980",
    "end": "556800"
  },
  {
    "text": "massive amounts of time trying to make sure that cash and validation somehow yields productivity and I don't think I've ever seen somebody win at that",
    "start": "556800",
    "end": "563100"
  },
  {
    "text": "battle and in exchange these huge images they might have actually made things worse",
    "start": "563100",
    "end": "569399"
  },
  {
    "text": "you can explain these images at all once they're fully baked like you can try to build security scanners that trawl over",
    "start": "569399",
    "end": "575040"
  },
  {
    "text": "them retroactively but like this is a losing battle by the time you've begun they're not helping you Upstream fixes",
    "start": "575040",
    "end": "581339"
  },
  {
    "text": "into anything you've baked into this container right there's there's no road to doing that if anything you've made that Journey farther than when we began",
    "start": "581339",
    "end": "589200"
  },
  {
    "text": "and from their sheer size it makes these images hard to share if somebody else",
    "start": "589200",
    "end": "594420"
  },
  {
    "text": "has anything less than exactly the same dependencies as you now you both just have these multiple hundred megabyte",
    "start": "594420",
    "end": "599580"
  },
  {
    "text": "bundles and you can't share them like heck this is making it harder to work",
    "start": "599580",
    "end": "605220"
  },
  {
    "text": "together and then at the end of the day people just sign these images",
    "start": "605220",
    "end": "610440"
  },
  {
    "text": "and we have to ask ourselves what are we signing when we do that what does this",
    "start": "610440",
    "end": "616560"
  },
  {
    "text": "signature mean hooray I scraped a bunch of things together once but was any of the process that I used sensible was any",
    "start": "616560",
    "end": "622920"
  },
  {
    "text": "of it reproducible if I myself ran the same process again on Thursday instead of Tuesday will it work",
    "start": "622920",
    "end": "629339"
  },
  {
    "text": "I probably don't know so the norms and all these things are",
    "start": "629339",
    "end": "634560"
  },
  {
    "text": "that we're just kind of slamming stuff together and hoping it works our best current defenses against any",
    "start": "634560",
    "end": "641220"
  },
  {
    "text": "kind of supply chain issues and and our quest for basic stability our best weapons might be containers and CI",
    "start": "641220",
    "end": "647220"
  },
  {
    "text": "Pipelines but they're not actually fixing any of the underlying problems and by being so",
    "start": "647220",
    "end": "653279"
  },
  {
    "text": "monolithic they might actually be making it harder for people to collaborate on these problems",
    "start": "653279",
    "end": "659579"
  },
  {
    "text": "so in summary I want to learn from the best stuff that we can do here but",
    "start": "659579",
    "end": "666120"
  },
  {
    "text": "it's something to also look forward in some new directions because we haven't solved all the problems and",
    "start": "666120",
    "end": "671820"
  },
  {
    "text": "one thing that should be indicated to us I think is that solving these problems of package management and Supply chains",
    "start": "671820",
    "end": "677579"
  },
  {
    "text": "piecemeal is not going to work the best Leap Forward that we've taken",
    "start": "677579",
    "end": "682860"
  },
  {
    "text": "so far is with this container technology where we admitted the whole system nature of the problem and that is a huge",
    "start": "682860",
    "end": "688200"
  },
  {
    "text": "step forward we need to have better Solutions still but that was a key step",
    "start": "688200",
    "end": "695779"
  },
  {
    "text": "I think we need to acknowledge that to make the world better we need tools that are going to guide good behaviors",
    "start": "696360",
    "end": "703440"
  },
  {
    "text": "so right now our best option for that is I'm not sure we containers give us no",
    "start": "703440",
    "end": "709019"
  },
  {
    "text": "guidance for making better more Reliable Tools they're just a huge Band-Aid right it's it's not helping",
    "start": "709019",
    "end": "716600"
  },
  {
    "text": "and I think our current best defenses against non-determinism should indicate to us that snapshotting is necessary",
    "start": "716720",
    "end": "723779"
  },
  {
    "text": "almost certainly but it's not sufficient",
    "start": "723779",
    "end": "729500"
  },
  {
    "text": "so let's look at um try to make a Brighter Image in our minds of what things should be like if we had the",
    "start": "731459",
    "end": "737940"
  },
  {
    "text": "perfect tooling what would it be if I wanted to build anything and like be good at it what would be the attributes",
    "start": "737940",
    "end": "743820"
  },
  {
    "text": "of that tooling the fundamental thing that I want is a",
    "start": "743820",
    "end": "749399"
  },
  {
    "text": "tool that is intensely predictable if I have set up a build pipeline for",
    "start": "749399",
    "end": "755220"
  },
  {
    "text": "something once it should work forever barring like the end of the",
    "start": "755220",
    "end": "761579"
  },
  {
    "text": "human race and our ability to manufacture silicon like there's no reason we shouldn't be able to solve these problems we have lots of things",
    "start": "761579",
    "end": "767940"
  },
  {
    "text": "that are very endurance if you have a git repo you can reasonably trust that it's going to continue to exist",
    "start": "767940",
    "end": "773459"
  },
  {
    "text": "basically forever right you do need to mirror it there's a basic availability issue but you can be very confident that",
    "start": "773459",
    "end": "779820"
  },
  {
    "text": "you're doing so like if you've got the root hash of that git repo you can replay it on any storage everywhere",
    "start": "779820",
    "end": "785459"
  },
  {
    "text": "forever and like this can be a very solved problem to make this permanent right I won't build tools like that very",
    "start": "785459",
    "end": "791880"
  },
  {
    "text": "predictable and very easy to replicate I want to build a tool that brings that",
    "start": "791880",
    "end": "798839"
  },
  {
    "text": "stability to everything else it touches the tool needs to control the supply chain of other pieces of information",
    "start": "798839",
    "end": "804839"
  },
  {
    "text": "that are going into it if we want predictable results from the output of the process we need to have a",
    "start": "804839",
    "end": "810779"
  },
  {
    "text": "predictable control over the supply of the data that goes into the process",
    "start": "810779",
    "end": "816019"
  },
  {
    "text": "if we're going to have really good tooling for this sort of thing I want it to work for anything",
    "start": "817440",
    "end": "822540"
  },
  {
    "text": "now that makes the problem pretty mountainous but what that means in practice is I want a tool that brings",
    "start": "822540",
    "end": "827820"
  },
  {
    "text": "together other tools that already solve build problems in some domain some particular language for",
    "start": "827820",
    "end": "833639"
  },
  {
    "text": "example and I want to let those tools do what they do best but putting them in a sandbox where we can help them with the",
    "start": "833639",
    "end": "840180"
  },
  {
    "text": "supply chain problem towards that end I want a tool that can",
    "start": "840180",
    "end": "846959"
  },
  {
    "text": "assemble things freely so in any build process there are several inputs",
    "start": "846959",
    "end": "854459"
  },
  {
    "text": "I almost certainly have source code I almost certainly have compilers for example",
    "start": "854459",
    "end": "860160"
  },
  {
    "text": "and probably the list hasn't stopped there it's very likely that I also have some kind of shell scripts that are",
    "start": "860160",
    "end": "865860"
  },
  {
    "text": "gluing things together or other tertiary tools that are helping orchestrate the build process maybe have a make file",
    "start": "865860",
    "end": "870959"
  },
  {
    "text": "maybe I need the make dirt command somewhere inside that there are several other things in the",
    "start": "870959",
    "end": "876060"
  },
  {
    "text": "environment that are needed I want to be able to assemble those things",
    "start": "876060",
    "end": "881399"
  },
  {
    "text": "but also without baking them together in perpetuity needing something in the build process doesn't mean that I need",
    "start": "881399",
    "end": "887160"
  },
  {
    "text": "to ship it later and it doesn't mean that I should be like gluing them all together into this Mega image sort of thing that creates a",
    "start": "887160",
    "end": "894300"
  },
  {
    "text": "burden for me to carry on in the future I just want to plug those things together and have them mounted quickly together use them and be done",
    "start": "894300",
    "end": "902420"
  },
  {
    "text": "ideally I want my build tools to be local first and maybe that's kind of obvious but I think this just really has",
    "start": "903120",
    "end": "908519"
  },
  {
    "text": "to be said I want something productive because it starts on my machine with",
    "start": "908519",
    "end": "914100"
  },
  {
    "text": "resources that are right here in my hands sort of in the same way that git is very",
    "start": "914100",
    "end": "919500"
  },
  {
    "text": "immediately productive because you go get in it and there are zero network operations I think that's an essential quality and",
    "start": "919500",
    "end": "925680"
  },
  {
    "text": "good tooling but I also want a tool to help me manage",
    "start": "925680",
    "end": "932579"
  },
  {
    "text": "software builds that's fairly social because there's a lot of software in the world and I can't build all of it",
    "start": "932579",
    "end": "939240"
  },
  {
    "text": "personally I can't maintain the build instructions for every single thing in the world that's too much",
    "start": "939240",
    "end": "945480"
  },
  {
    "text": "so I need some tooling that helps me exchange and coordinate with work with others",
    "start": "945480",
    "end": "951300"
  },
  {
    "text": "this could be at the scale of some sort of Industry working group like maybe my team or another team down the hall or it",
    "start": "951300",
    "end": "957899"
  },
  {
    "text": "could be on a much bigger scale of like I am an open source project that needs to collaborate with an entire swarm of",
    "start": "957899",
    "end": "963540"
  },
  {
    "text": "people who is building like large Suites of software maybe even a whole Linux distribution for example",
    "start": "963540",
    "end": "969899"
  },
  {
    "text": "I want to be able to coordinate that and do it in the open so that means concretely mono repos are",
    "start": "969899",
    "end": "977160"
  },
  {
    "text": "not an acceptable prerequisite for a functioning build system and I don't want to end up in a situation where I'm",
    "start": "977160",
    "end": "982920"
  },
  {
    "text": "just hooking huge images over the wall",
    "start": "982920",
    "end": "986660"
  },
  {
    "text": "and I have one more bonus goal I want the system to come with a determinism detector which functionally means I want hashes",
    "start": "988019",
    "end": "994320"
  },
  {
    "text": "everywhere I want something that lets me rapidly see if the work I'm doing is stable deterministic and reproducible",
    "start": "994320",
    "end": "1000139"
  },
  {
    "text": "because if you can't measure it you have no idea how to improve something so let's start measuring",
    "start": "1000139",
    "end": "1007540"
  },
  {
    "text": "and then always the thing you need from any piece of tooling is for it to be easy enough to use that",
    "start": "1008240",
    "end": "1014899"
  },
  {
    "text": "it can become widely used so that it can be the path of least resistance and really gain adoption so that's just always the ER goal right",
    "start": "1014899",
    "end": "1023259"
  },
  {
    "text": "so that is a lot of things that are needed but it's possible so in order to get",
    "start": "1023480",
    "end": "1030798"
  },
  {
    "text": "some positive inspiration let's talk about some stuff that is good",
    "start": "1030799",
    "end": "1035380"
  },
  {
    "text": "there are two pieces of software in particular I want to call out and grab some good influences from",
    "start": "1036679",
    "end": "1042500"
  },
  {
    "text": "um one of them is get and one of his make what's inspirational about git",
    "start": "1042500",
    "end": "1049760"
  },
  {
    "text": "you're talking about build tools why what is this even doing on the screen git isn't a build tool",
    "start": "1049760",
    "end": "1055580"
  },
  {
    "text": "okay true git is not a build tool but it can still be very inspirational",
    "start": "1055580",
    "end": "1061700"
  },
  {
    "text": "because git is is this beautiful example of local first stuff and the huge productivity they're in I already kind",
    "start": "1061700",
    "end": "1068660"
  },
  {
    "text": "of pointed at this working in the local file system first is just so productive",
    "start": "1068660",
    "end": "1074960"
  },
  {
    "text": "it means you can get started without asking permission from some other group or service that might be online",
    "start": "1074960",
    "end": "1080799"
  },
  {
    "text": "centralized and maybe it's difficult to contact and coordinate with git is also a very clear pointer for why",
    "start": "1080799",
    "end": "1088160"
  },
  {
    "text": "a good system needs hashes in order to deliver these features and this productivity",
    "start": "1088160",
    "end": "1094700"
  },
  {
    "text": "having hashes deep in your system design means that you can always talk about",
    "start": "1094700",
    "end": "1099860"
  },
  {
    "text": "exact contents without necessarily having to invoke human readable names which means you",
    "start": "1099860",
    "end": "1106640"
  },
  {
    "text": "don't have to choose human readable names which means you don't have to argue with anyone about human readable names for your data either",
    "start": "1106640",
    "end": "1113900"
  },
  {
    "text": "this is a really good thing you can add names into any system with hashes on the bottom later and git is",
    "start": "1113900",
    "end": "1120559"
  },
  {
    "text": "also a perfect example of doing that very successfully you can use branches and tags to label things in",
    "start": "1120559",
    "end": "1127400"
  },
  {
    "text": "git and that doesn't take anything away but having the hashes on the bottom makes it all stronger because now if you",
    "start": "1127400",
    "end": "1132860"
  },
  {
    "text": "ever need to do conflict resolution right you can point at the two hashes of",
    "start": "1132860",
    "end": "1138860"
  },
  {
    "text": "different content that is conflicting and this lets you do resolution while still being precise you can have",
    "start": "1138860",
    "end": "1144320"
  },
  {
    "text": "arguments about the human readable names without losing track of what's fundamentally going on very valuable properties",
    "start": "1144320",
    "end": "1151580"
  },
  {
    "text": "so I want to copy this I want to be inspired by this as we do build tools lots of hashes will make things able to",
    "start": "1151580",
    "end": "1157520"
  },
  {
    "text": "work in a decentralized way be productive and be very concrete and stable",
    "start": "1157520",
    "end": "1163480"
  },
  {
    "text": "okay the other inspiration make make us",
    "start": "1163820",
    "end": "1169100"
  },
  {
    "text": "pretty ancient but it has really good ideas embedded in it one of them is that it works with",
    "start": "1169100",
    "end": "1174980"
  },
  {
    "text": "anything it lets you coordinate other tools and I think this is one of the key contributors to the longevity of make",
    "start": "1174980",
    "end": "1182660"
  },
  {
    "text": "it's never really gone out of style you see make files still in modern projects because it's good at doing a few things",
    "start": "1182660",
    "end": "1189620"
  },
  {
    "text": "and then coordinating other tools that do lots of other things so it always is sort of keeping up to date by not doing",
    "start": "1189620",
    "end": "1196280"
  },
  {
    "text": "too much it's also got a graph of targets it lets you build related graphs of tasks and",
    "start": "1196280",
    "end": "1202400"
  },
  {
    "text": "this is a good feature but it's not a perfect tool also it shows its age in some ways if we did it",
    "start": "1202400",
    "end": "1208280"
  },
  {
    "text": "again today probably you wouldn't write make with the same interesting domain specific",
    "start": "1208280",
    "end": "1214340"
  },
  {
    "text": "language with which is implemented right now tutorials for make are a bit bumpy for most modern readers",
    "start": "1214340",
    "end": "1222020"
  },
  {
    "text": "and make also did not make any attempt to solve external dependency management which",
    "start": "1222020",
    "end": "1227059"
  },
  {
    "text": "is a pretty solid choice at the time that it was first written but it's pretty obvious these days that",
    "start": "1227059",
    "end": "1232220"
  },
  {
    "text": "everybody's software depends on everybody else's everything or at least quite a few things and we do",
    "start": "1232220",
    "end": "1238700"
  },
  {
    "text": "need fetching tools like this is a problem that needs to be solved we need Supply Chain management so make",
    "start": "1238700",
    "end": "1245120"
  },
  {
    "text": "has some great Inspirations in that it binds other tools together in productive ways but um you know also doesn't solve",
    "start": "1245120",
    "end": "1251660"
  },
  {
    "text": "every problem so let's take these two good ideas these two key",
    "start": "1251660",
    "end": "1258140"
  },
  {
    "text": "influences of get and make and take the best parts of them combine that also with the idea of",
    "start": "1258140",
    "end": "1263240"
  },
  {
    "text": "container eye solution clean rooms and maybe let's put a nice programmable API around this something simple and",
    "start": "1263240",
    "end": "1270620"
  },
  {
    "text": "standard like maybe a Json API and then can we get build tools that are awesome",
    "start": "1270620",
    "end": "1276860"
  },
  {
    "text": "I think yeah let's do it let's make a bills and supply chain manager",
    "start": "1276860",
    "end": "1283820"
  },
  {
    "text": "let's make tools that make our lives easier by being predictable",
    "start": "1283820",
    "end": "1289659"
  },
  {
    "text": "so now I'm going to offer you a piece of tooling which has attempted to do that and I hope it's either immediately usable or inspirational",
    "start": "1290480",
    "end": "1297919"
  },
  {
    "text": "warp Forge is a build tool it is the kind of thing where you CD into your project directory and then say",
    "start": "1297919",
    "end": "1304039"
  },
  {
    "text": "warp Forge run it's going to look for some declarative files in that directory that do stuff",
    "start": "1304039",
    "end": "1310880"
  },
  {
    "text": "so for example the Json in there has no no funky dsls by the way just Json",
    "start": "1310880",
    "end": "1317840"
  },
  {
    "text": "has an action section and it can include shell scripts or any other kind of actions based on this sort of idea",
    "start": "1317840",
    "end": "1326260"
  },
  {
    "text": "these declarative files can contain multiple steps which can be related together",
    "start": "1327140",
    "end": "1332179"
  },
  {
    "text": "and because we are so interested in stability and predictable tooling warp",
    "start": "1332179",
    "end": "1337760"
  },
  {
    "text": "Forge enumerates its inputs by hash and by the way you can compose them you see this is just a plain Json map and you",
    "start": "1337760",
    "end": "1344240"
  },
  {
    "text": "have paths the things will be mounted at and then you have a Content hash",
    "start": "1344240",
    "end": "1349179"
  },
  {
    "text": "wait what perhaps you're saying that's awful that is not going to be easy to use",
    "start": "1349460",
    "end": "1354919"
  },
  {
    "text": "that's going to require you to copy and paste a bunch of totally illegible Schmutz and it just will not be good no",
    "start": "1354919",
    "end": "1360140"
  },
  {
    "text": "one will use this okay that's fair that's true so we've",
    "start": "1360140",
    "end": "1366200"
  },
  {
    "text": "set ourselves up a problem here by having hashes in the middle of this API having hashes in the middle of an API",
    "start": "1366200",
    "end": "1372260"
  },
  {
    "text": "creates serious ease of use challenges so we'll have to",
    "start": "1372260",
    "end": "1378440"
  },
  {
    "text": "jump over that Gap again I think the answer is be inspired by git",
    "start": "1378440",
    "end": "1383720"
  },
  {
    "text": "git did this right lots of hashes but add names on top so in warp Forge we're",
    "start": "1383720",
    "end": "1388940"
  },
  {
    "text": "going to try to copy that lots of hashes on the bottom and then additional layers that bring naming back on so you have",
    "start": "1388940",
    "end": "1395000"
  },
  {
    "text": "this sort of set of levels you can Traverse from precise to easy to use",
    "start": "1395000",
    "end": "1400880"
  },
  {
    "text": "so warp Forge will support name lookups as well this is the roughly the same",
    "start": "1400880",
    "end": "1405919"
  },
  {
    "text": "structure there's a map here that's got Mount paths in it and then it's got human readable names",
    "start": "1405919",
    "end": "1411919"
  },
  {
    "text": "now this is going to be really tricky but these human readable names we still want them to be reproducibly",
    "start": "1411919",
    "end": "1417200"
  },
  {
    "text": "resolvable work fairly decentralized work local first",
    "start": "1417200",
    "end": "1423020"
  },
  {
    "text": "how are we going to do that more inspiration from git",
    "start": "1423020",
    "end": "1428900"
  },
  {
    "text": "it's just always do what git did then do it more imagine that in the same way that git",
    "start": "1428900",
    "end": "1435080"
  },
  {
    "text": "Branch names refer to hashes that's that's fundamentally the same problem we need to solve Humanity will",
    "start": "1435080",
    "end": "1440720"
  },
  {
    "text": "name the hash but now let's take our mappings there from name to hash",
    "start": "1440720",
    "end": "1446480"
  },
  {
    "text": "and we'll put that in another Merkle tree itself so that you can easily version this and easily Fork it have a",
    "start": "1446480",
    "end": "1453200"
  },
  {
    "text": "local copy of it do whatever you want in roughly the same way that you would fork and copy and make git repos be local for productivity",
    "start": "1453200",
    "end": "1462340"
  },
  {
    "text": "also workforge will let you save whatever files you want so when you write one of these declarative scripts about stuff to do we are going to run it",
    "start": "1464120",
    "end": "1470840"
  },
  {
    "text": "in a containerized sort of an environment but we're going to let you say which file system paths you want out",
    "start": "1470840",
    "end": "1476780"
  },
  {
    "text": "this is probably pretty obvious but given the history of containers I feel like it's important to say you're not",
    "start": "1476780",
    "end": "1483500"
  },
  {
    "text": "going to be stuck with full system images you can say give me the outputs from slash and then you will get a full",
    "start": "1483500",
    "end": "1489679"
  },
  {
    "text": "system image but you don't have to you can be more precise",
    "start": "1489679",
    "end": "1494260"
  },
  {
    "text": "so we use a series of layers to separate these different levels of functionality",
    "start": "1494840",
    "end": "1500480"
  },
  {
    "text": "I'm going to go over those now from bottom to top at the very bottom of course file system snapshot hashes are",
    "start": "1500480",
    "end": "1507679"
  },
  {
    "text": "something that we need in order to even start the discussion in what for do we call those where IDs",
    "start": "1507679",
    "end": "1514179"
  },
  {
    "text": "then we have an API object called a formula which is a task declaration you put your shell scripts and whatnot in",
    "start": "1514400",
    "end": "1519980"
  },
  {
    "text": "here and you list all of your inputs and your desired outputs but a formula is only allowed to use hashes so this is a very precision and",
    "start": "1519980",
    "end": "1527840"
  },
  {
    "text": "stable oriented API concept the idea is if you have a formula it's something you can evaluate and expect a deterministic",
    "start": "1527840",
    "end": "1535100"
  },
  {
    "text": "result out of but as we've already said hashes alone",
    "start": "1535100",
    "end": "1540200"
  },
  {
    "text": "are not human friendly so in order to get work done we introduce another API",
    "start": "1540200",
    "end": "1545360"
  },
  {
    "text": "layer above this which is called the workflow and in these you're allowed to use relationships that are constructed",
    "start": "1545360",
    "end": "1552679"
  },
  {
    "text": "using human readable names for references foreign",
    "start": "1552679",
    "end": "1558820"
  },
  {
    "text": "using human readable names is is treacherous as we've already mentioned and so now",
    "start": "1558860",
    "end": "1564620"
  },
  {
    "text": "we'll introduce one more system called a catalog which is going to solve this problem we really want the human",
    "start": "1564620",
    "end": "1571580"
  },
  {
    "text": "readable names wherever they're used in the system to be reproducibly resolvable and we also want that to work offline",
    "start": "1571580",
    "end": "1577640"
  },
  {
    "text": "like without any Central Authority necessarily so",
    "start": "1577640",
    "end": "1583340"
  },
  {
    "text": "here we use essentially a decentralized database that is stored in a Merkle tree much like git itself this solves the",
    "start": "1583340",
    "end": "1590179"
  },
  {
    "text": "name lookup problem and now if you I'll show actual examples",
    "start": "1590179",
    "end": "1596659"
  },
  {
    "text": "of the like size and scale of Json on the next couple of slides by the way just going up the stack first",
    "start": "1596659",
    "end": "1602419"
  },
  {
    "text": "um you can write this workflow object as Json and it's okay if you're going to",
    "start": "1602419",
    "end": "1608539"
  },
  {
    "text": "write a couple of projects you're going to manage a few builds with this you can",
    "start": "1608539",
    "end": "1613760"
  },
  {
    "text": "write the Json by hand and you're going to have a fine time but if your angle tens of projects",
    "start": "1613760",
    "end": "1619100"
  },
  {
    "text": "you're going to start seeing some repeated elements if you're angle hundreds of projects you're going to start seeing some very repeated elements",
    "start": "1619100",
    "end": "1625820"
  },
  {
    "text": "and if you wanted to build an entire Linux distribution maybe you're now going to stare down 25 000 packages or",
    "start": "1625820",
    "end": "1631940"
  },
  {
    "text": "something as a normal number in that environment now you're going to see a lot of repetition and you're going to have some maintainability needs",
    "start": "1631940",
    "end": "1639140"
  },
  {
    "text": "so for this we have one more layer yet which is called build plugs and this is",
    "start": "1639140",
    "end": "1644659"
  },
  {
    "text": "where we introduce a whole programming language to let you solve the ReUse problem a build plug is something that",
    "start": "1644659",
    "end": "1651380"
  },
  {
    "text": "does any computation you desire in order to template a plan",
    "start": "1651380",
    "end": "1656840"
  },
  {
    "text": "and then emits this as Json and we will turn around and use it as a workflow",
    "start": "1656840",
    "end": "1663640"
  },
  {
    "text": "so we have all these different layers in order to solve different problems with different levels of power and",
    "start": "1664220",
    "end": "1669740"
  },
  {
    "text": "flexibility at the highest level you can do anything at all and use turn complete languages",
    "start": "1669740",
    "end": "1675260"
  },
  {
    "text": "to generate any kind of a plan that you want in the medium level we have reproducible solutions for name lookup",
    "start": "1675260",
    "end": "1682299"
  },
  {
    "text": "and build instructions that can have multiple steps and connect things but",
    "start": "1682299",
    "end": "1687500"
  },
  {
    "text": "are still purely declarative and you can you can walk across workflow Json with like no need to compute for example",
    "start": "1687500",
    "end": "1695179"
  },
  {
    "text": "and at the lower levels now we're substituted in names for hashes which is",
    "start": "1695179",
    "end": "1700760"
  },
  {
    "text": "a wonderful thing for debugging when you're holding on to a formula object you know exactly what you've got",
    "start": "1700760",
    "end": "1707179"
  },
  {
    "text": "and at the lower level yes of course we just needed file system snapshots",
    "start": "1707179",
    "end": "1712340"
  },
  {
    "text": "so you can write high level stuff and get tons of hashed audible checkpoints",
    "start": "1712340",
    "end": "1717620"
  },
  {
    "text": "out of a system with its basis",
    "start": "1717620",
    "end": "1721480"
  },
  {
    "text": "okay I have to at least briefly flash Json on the screen just to be credible here so this is what the lowest level",
    "start": "1722779",
    "end": "1729200"
  },
  {
    "text": "objects look like in warp Forge it's just Json you can see perhaps that there are",
    "start": "1729200",
    "end": "1734840"
  },
  {
    "text": "hashes in the inputs because this is the thing that is made for precision",
    "start": "1734840",
    "end": "1740000"
  },
  {
    "text": "and when you evaluate a formula in warp Forge you get this Json object down here which has more hashes in the outputs so",
    "start": "1740000",
    "end": "1748159"
  },
  {
    "text": "now already you could use this single step thing in order to Like Glue it together with a series of bash scripts",
    "start": "1748159",
    "end": "1753559"
  },
  {
    "text": "and JQ pipelines and stuff and you can make a whole build pipeline but we're not going to force people to do that that's what workflows are for",
    "start": "1753559",
    "end": "1761419"
  },
  {
    "text": "this mid-level thing that's a little more expressive and lets you connect things with human readable names",
    "start": "1761419",
    "end": "1767059"
  },
  {
    "text": "this text is certainly too small to see not the point you don't need to read it I just want to emphasize that this is",
    "start": "1767059",
    "end": "1772820"
  },
  {
    "text": "Json it has the nice flowing curvatures of Json and this is something that you",
    "start": "1772820",
    "end": "1777919"
  },
  {
    "text": "can produce mechanically read mechanically and so on it is also a real example of a",
    "start": "1777919",
    "end": "1783500"
  },
  {
    "text": "workflow this Json happens to be for compiling and packaging bash which is something we've done in warp Forge just",
    "start": "1783500",
    "end": "1789080"
  },
  {
    "text": "to prove that we can the one thing I will zoom in on there",
    "start": "1789080",
    "end": "1794179"
  },
  {
    "text": "is what it looks like to connect things um where you are importing stuff from",
    "start": "1794179",
    "end": "1800240"
  },
  {
    "text": "other workflows there's the syntax that refers to catalogs and has human readable names",
    "start": "1800240",
    "end": "1805940"
  },
  {
    "text": "this is the thing that will resolve against that Merkle tree database and workflows because they can have",
    "start": "1805940",
    "end": "1811880"
  },
  {
    "text": "multiple steps in the same workflow when you refer to another one there this uses a syntax of piping and then a step name",
    "start": "1811880",
    "end": "1818000"
  },
  {
    "text": "that is a sibling and then naming an output within this so this can produce whole graphs",
    "start": "1818000",
    "end": "1825340"
  },
  {
    "text": "and then if we want less than one million miles of Json so this is an",
    "start": "1826220",
    "end": "1831320"
  },
  {
    "text": "example of what one of our build plugs looks like with a batteries included system that we've made which is based on",
    "start": "1831320",
    "end": "1836539"
  },
  {
    "text": "the starlark syntax if you're not familiar with starlark this is actually something we're borrowing from the bazel",
    "start": "1836539",
    "end": "1842240"
  },
  {
    "text": "project it's a very good invention it's essentially a python syntax with a nice self-contained interpreter that's easy",
    "start": "1842240",
    "end": "1848000"
  },
  {
    "text": "to ship and has no system interactions so very nice tool",
    "start": "1848000",
    "end": "1853039"
  },
  {
    "text": "this happens to generate the workflow that was on the last slide so you can see it's a few fewer lines and it's",
    "start": "1853039",
    "end": "1860179"
  },
  {
    "text": "allowed to use libraries loaded from other files so this is an example of how",
    "start": "1860179",
    "end": "1865399"
  },
  {
    "text": "we expect reuse to work in this system if you have a large number of packages you need to Wrangle",
    "start": "1865399",
    "end": "1871360"
  },
  {
    "text": "now that catalog thing this is the name lookup database",
    "start": "1871820",
    "end": "1877159"
  },
  {
    "text": "catalogs are really just a series of files with more more Json objects in them everything here is API driven so",
    "start": "1877159",
    "end": "1885140"
  },
  {
    "text": "a catalog is what we call the total set of all information and releases that are tracked it is full of a bunch of modules",
    "start": "1885140",
    "end": "1892460"
  },
  {
    "text": "for different projects each module may have many releases and each release may have many items items are used for like",
    "start": "1892460",
    "end": "1898940"
  },
  {
    "text": "architectures and stuff so if you have one of these string tuples that names a module and release",
    "start": "1898940",
    "end": "1904340"
  },
  {
    "text": "an item you can look that up to get the hash of aware ID a Content snapshot ID",
    "start": "1904340",
    "end": "1911360"
  },
  {
    "text": "or some metadata attached to it this entire thing can fit itself in a",
    "start": "1911360",
    "end": "1916580"
  },
  {
    "text": "git repo if you want to have it versioned in this way that makes it very easy to vendor also you can put it in a",
    "start": "1916580",
    "end": "1922340"
  },
  {
    "text": "file Tree in any other git repo and it has its own built-in hashing scheme as well",
    "start": "1922340",
    "end": "1929419"
  },
  {
    "text": "catalogs are a Merkle tree as I have alluded to so The Logical structure looks sort of like this there's a big",
    "start": "1929419",
    "end": "1934760"
  },
  {
    "text": "old tree in there this should probably remind you of git at least a little bit if you've seen",
    "start": "1934760",
    "end": "1939940"
  },
  {
    "text": "diagrams of the internal layout of",
    "start": "1939940",
    "end": "1944259"
  },
  {
    "text": "catalogs actually point out two things by the way they're solving the naming problem for looking up content hashes",
    "start": "1945320",
    "end": "1950960"
  },
  {
    "text": "like the actual file system snapshot IDs but we also store some metadata in them",
    "start": "1950960",
    "end": "1956120"
  },
  {
    "text": "and that includes a copy of the workflow used to build whatever we've just",
    "start": "1956120",
    "end": "1961279"
  },
  {
    "text": "released and this is optional but it's default and it's a very useful attachment",
    "start": "1961279",
    "end": "1967039"
  },
  {
    "text": "this means anytime you look something up in a catalog you can turn around and go fetch that file set because you know",
    "start": "1967039",
    "end": "1972919"
  },
  {
    "text": "what its content ID is or if it's got the workflow used to",
    "start": "1972919",
    "end": "1977960"
  },
  {
    "text": "build it attached you can go do that instead you can trade bandwidth for CPU time you can replace",
    "start": "1977960",
    "end": "1984919"
  },
  {
    "text": "anything assuming it's deterministic",
    "start": "1984919",
    "end": "1989139"
  },
  {
    "text": "so now about that that collaboration angle that social angle for this tool I said earlier I want to work in public",
    "start": "1991159",
    "end": "1997399"
  },
  {
    "text": "I want to be able to collaborate with other people at various sizes of team at various scopes of of relationship",
    "start": "1997399",
    "end": "2004360"
  },
  {
    "text": "distance even so how are we going to do that and how is this tooling relevant to that",
    "start": "2004360",
    "end": "2011580"
  },
  {
    "text": "the catalogs are really key here now forgive my diagramming it is a little rough but",
    "start": "2012700",
    "end": "2020200"
  },
  {
    "text": "the key Concept in this system with the catalogs is that they are letting you do checkpoints around any workflow you can",
    "start": "2020200",
    "end": "2027399"
  },
  {
    "text": "describe one workflow that's doing some set of steps and it's using catalog references to look up all the inputs and",
    "start": "2027399",
    "end": "2033460"
  },
  {
    "text": "when you produce something on the end you're putting in another catalog reference as well as the workflow right",
    "start": "2033460",
    "end": "2039039"
  },
  {
    "text": "so if I want to build something at the end of the diagram here I can look up the workflow that does that",
    "start": "2039039",
    "end": "2045640"
  },
  {
    "text": "I can fetch oh I've got serious cursor lag here maybe I will not try to point out the diagram too much",
    "start": "2045640",
    "end": "2051820"
  },
  {
    "text": "um you can fetch other contents that go into that and you can build them",
    "start": "2051820",
    "end": "2057339"
  },
  {
    "text": "if you want you can also choose not to do that you can just drop off some parts of the",
    "start": "2057339",
    "end": "2063940"
  },
  {
    "text": "graph you can lift out some parts of the build graph and do just those by fetching the content snapshots that are",
    "start": "2063940",
    "end": "2070358"
  },
  {
    "text": "the inputs to that if you want to recurse into building other stuff leading up to it that's up",
    "start": "2070359",
    "end": "2075460"
  },
  {
    "text": "to you you can make this choice on the Fly because of the way we point out both",
    "start": "2075460",
    "end": "2080980"
  },
  {
    "text": "content IDs and rebuild instructions this means like the rebuilding is optional this is this is different than",
    "start": "2080980",
    "end": "2088240"
  },
  {
    "text": "most other tools I've inspected in this space so it's kind of a big deal",
    "start": "2088240",
    "end": "2093419"
  },
  {
    "text": "and now also I have to pause for a moment and backtrack to something that might be bothering you if you've been watching carefully this whole time",
    "start": "2094780",
    "end": "2100599"
  },
  {
    "text": "I had these examples of input file systems mounted at arbitrary paths like slash Foo slash bar whatever you want",
    "start": "2100599",
    "end": "2107800"
  },
  {
    "text": "and you might be thinking that's not right not how computers work you can't do that",
    "start": "2107800",
    "end": "2113260"
  },
  {
    "text": "on Linux programs have to be mounted at specific paths you're going to have like Library linking hell here right it's not",
    "start": "2113260",
    "end": "2120220"
  },
  {
    "text": "going to work um install paths prefix paths those have to be set at compile time what are you doing what are you saying this",
    "start": "2120220",
    "end": "2126400"
  },
  {
    "text": "composition is useless because nobody can ship software like that",
    "start": "2126400",
    "end": "2132900"
  },
  {
    "text": "well yeah we can this is a problem that we have found in",
    "start": "2133599",
    "end": "2140740"
  },
  {
    "text": "the process of developing warp Forge and I'm going to have to say that we've also fixed it",
    "start": "2140740",
    "end": "2146579"
  },
  {
    "text": "I have to tell you about my plan to destroy all Linux distributions no my",
    "start": "2146680",
    "end": "2152140"
  },
  {
    "text": "plan to bring about the year of Linux on the desktop well we'll see um but at the very least I have a plan",
    "start": "2152140",
    "end": "2158260"
  },
  {
    "text": "to make things easier to ship by making them less entangled and it's called zaps",
    "start": "2158260",
    "end": "2164880"
  },
  {
    "text": "this is kind of a side quest from the main track of the talk here about build systems but it is sort of an important",
    "start": "2164880",
    "end": "2170380"
  },
  {
    "text": "one because it lets us do this composability stuff zaps are a way to package Linux software",
    "start": "2170380",
    "end": "2176380"
  },
  {
    "text": "it's short for zero dependency applications zaps involve bundling all of the libraries into one file system perhaps",
    "start": "2176380",
    "end": "2184359"
  },
  {
    "text": "sharing them as one tarball but once you've done so a zap Works anywhere it works at any path it works without",
    "start": "2184359",
    "end": "2191079"
  },
  {
    "text": "install hooks it will work fine even on a read-only file system mount",
    "start": "2191079",
    "end": "2196720"
  },
  {
    "text": "so this means if you've packaged something as a zap you have solved building and shipping the thing you can give it to anyone on",
    "start": "2196720",
    "end": "2203260"
  },
  {
    "text": "any Linux distro they do not require containers to run they do not require roots to run they don't require mounts",
    "start": "2203260",
    "end": "2209560"
  },
  {
    "text": "to run absolutely nothing weird they are regular Linux elf dynamically linked",
    "start": "2209560",
    "end": "2214780"
  },
  {
    "text": "executables they even work on BSD crazy fact",
    "start": "2214780",
    "end": "2220540"
  },
  {
    "text": "and this gives us the ability to mount anything anywhere and be free the composable it's very cool",
    "start": "2220540",
    "end": "2226599"
  },
  {
    "text": "but I won't spend any more time on that in this talk because there just isn't that much time however if you're interested in this",
    "start": "2226599",
    "end": "2233380"
  },
  {
    "text": "particular topic of how to ship software to any Linux this website zaps.app and you'll find",
    "start": "2233380",
    "end": "2240820"
  },
  {
    "text": "some prior talks recorded in that website as well and a bunch of documentation about how to go about this",
    "start": "2240820",
    "end": "2247599"
  },
  {
    "text": "but for now trust me it's a thing it works",
    "start": "2247599",
    "end": "2252539"
  },
  {
    "text": "so let's look at some of the nearest comparable build system projects",
    "start": "2252700",
    "end": "2261300"
  },
  {
    "text": "people have tried to build software before I dare say so there are some projects that get",
    "start": "2262420",
    "end": "2267880"
  },
  {
    "text": "closed similar there are lots that aren't comparable at all right if you're a single language package manager you're",
    "start": "2267880",
    "end": "2273339"
  },
  {
    "text": "solving a much smaller scope of problem that I'm talking about here if you're a single Linux distro manager",
    "start": "2273339",
    "end": "2279940"
  },
  {
    "text": "you have grappled with a big problem but you've also decided that you're going to solve it for just your",
    "start": "2279940",
    "end": "2285700"
  },
  {
    "text": "community so it turns out a little different but there are some projects that have",
    "start": "2285700",
    "end": "2290800"
  },
  {
    "text": "been similarly ambitious to what I'm describing with warp Forge they've tried to solve building everything in every language and they've tried to solve it",
    "start": "2290800",
    "end": "2297520"
  },
  {
    "text": "in a a non-denominational way",
    "start": "2297520",
    "end": "2302640"
  },
  {
    "text": "the two that come to mind the most here are basil or Blaze from Google and Nyx",
    "start": "2302680",
    "end": "2309040"
  },
  {
    "text": "and its variant Geeks Wix gigs",
    "start": "2309040",
    "end": "2315040"
  },
  {
    "text": "um I love the Palm there honestly so and I put a slash between these because",
    "start": "2315460",
    "end": "2320980"
  },
  {
    "text": "Nicks and Geeks they use like much of the same internal tooling so they're very closely related I'm also just talk about NYX for",
    "start": "2320980",
    "end": "2327460"
  },
  {
    "text": "Simplicity so these are both tools that are trying to build everything like I said so they are",
    "start": "2327460",
    "end": "2332920"
  },
  {
    "text": "comparable the main difference",
    "start": "2332920",
    "end": "2337960"
  },
  {
    "text": "is the shape of the dependency graph so I'll go back to this diagram this is the",
    "start": "2337960",
    "end": "2344079"
  },
  {
    "text": "graph that I drew for warp Forge stuff we have our workflows and they depend on these checkpoints where the catalog is",
    "start": "2344079",
    "end": "2351280"
  },
  {
    "text": "used to look up specific content IDs and so we've got these detachable graphs here with the catalog as like a mediator",
    "start": "2351280",
    "end": "2358000"
  },
  {
    "text": "between subgraphs if I try to draw a similar diagram for",
    "start": "2358000",
    "end": "2363520"
  },
  {
    "text": "NYX or bazel I come out with something very different it's this is as topologically close as I",
    "start": "2363520",
    "end": "2370060"
  },
  {
    "text": "can drag these together you see that there are three things being built and like roughly five inputs so this is as",
    "start": "2370060",
    "end": "2376780"
  },
  {
    "text": "close as I can get um but what you get with NYX and bazel",
    "start": "2376780",
    "end": "2382060"
  },
  {
    "text": "is they have um build descriptions what we would call workflows in warp Forge NYX calls them",
    "start": "2382060",
    "end": "2388180"
  },
  {
    "text": "derivations everybody's got their words they've got a thing that does stuff",
    "start": "2388180",
    "end": "2394480"
  },
  {
    "text": "and a Nixon bazel the build instructions depend on other build instructions in warp Forge they depend on catalog",
    "start": "2394480",
    "end": "2400599"
  },
  {
    "text": "references and content IDs right in Nixon bazel it's just on other build instructions",
    "start": "2400599",
    "end": "2406060"
  },
  {
    "text": "so they don't have that that checkpoint in fact this causes users of Nyx and",
    "start": "2406060",
    "end": "2412119"
  },
  {
    "text": "bazel to be on this continuous Quest almost accidentally to bootstrap things to like always build",
    "start": "2412119",
    "end": "2418119"
  },
  {
    "text": "one thing deeper into the dependency tree which is not necessarily A Bad Thing",
    "start": "2418119",
    "end": "2423460"
  },
  {
    "text": "inherently but the fact that they're kind of stuck doing that by the nature of their tooling is maybe not ideal",
    "start": "2423460",
    "end": "2431020"
  },
  {
    "text": "and so ultimately at someone this has to stop right at some point you have files that were like there at the beginning of",
    "start": "2431020",
    "end": "2436540"
  },
  {
    "text": "time and you build up from there nnx that's called a fixed derivation where instead of having a build",
    "start": "2436540",
    "end": "2442060"
  },
  {
    "text": "instruction you have a fetch from the internet instruction but they can only have these in the very",
    "start": "2442060",
    "end": "2448660"
  },
  {
    "text": "farthest Leaf nodes of the tree which is kind of strange and they have no ability to put these in",
    "start": "2448660",
    "end": "2455920"
  },
  {
    "text": "the middle of the tree without rewriting it in fact there are",
    "start": "2455920",
    "end": "2461380"
  },
  {
    "text": "hashes used my favorite API structure a hash right it is used in Nyx",
    "start": "2461380",
    "end": "2468640"
  },
  {
    "text": "um in order to identify derivations their their build steps but the hash that identifies the",
    "start": "2468640",
    "end": "2474460"
  },
  {
    "text": "derivation covers all the other derivations all the other build instructions that it depends on",
    "start": "2474460",
    "end": "2480280"
  },
  {
    "text": "which means if you change anything that it depends on you've changed the ID of this thing and",
    "start": "2480280",
    "end": "2485380"
  },
  {
    "text": "so it means if you try to substitute a fixed derivation into the middle of a dependency graph where you previously",
    "start": "2485380",
    "end": "2490420"
  },
  {
    "text": "had build instructions you've changed the whole graph um it's really weird so they can't freely",
    "start": "2490420",
    "end": "2497440"
  },
  {
    "text": "at runtime choose to fetch or build now if you're really highly",
    "start": "2497440",
    "end": "2503560"
  },
  {
    "text": "knowledgeable about NYX you also know that I just told a fib you can there's a mechanism called substitutes in Nyx in",
    "start": "2503560",
    "end": "2509320"
  },
  {
    "text": "which you can fetch content instead of building it",
    "start": "2509320",
    "end": "2513539"
  },
  {
    "text": "except you don't know what you're fetching anymore the substitutes mechanism in NYX just sort of gives up on the predictability",
    "start": "2514960",
    "end": "2521140"
  },
  {
    "text": "of this you ask remote server to give you a substitute for this build step and the remote server promises that the",
    "start": "2521140",
    "end": "2527440"
  },
  {
    "text": "content that it gives you back is related to what you asked there is no verification pathway for",
    "start": "2527440",
    "end": "2533680"
  },
  {
    "text": "this oh dear so",
    "start": "2533680",
    "end": "2538720"
  },
  {
    "text": "this concept of a catalog in warp Forge really makes the whole system distinctive it lets you choose what you",
    "start": "2538720",
    "end": "2545140"
  },
  {
    "text": "want to do at these checkpoints do you want to take literally the content that has been recorded in the catalog or do",
    "start": "2545140",
    "end": "2551500"
  },
  {
    "text": "you want to recurse on the building it's a free choice this also has some other like more",
    "start": "2551500",
    "end": "2557020"
  },
  {
    "text": "interesting topological implications that don't come up too often but I have to talk about this because I think it's",
    "start": "2557020",
    "end": "2562540"
  },
  {
    "text": "cool warp Forge can describe things that build themselves you can have a hash as one of your",
    "start": "2562540",
    "end": "2568720"
  },
  {
    "text": "inputs that is produced by the same workflow that's consuming it",
    "start": "2568720",
    "end": "2575140"
  },
  {
    "text": "this is impossible to describe what these other systems where build instructions depend only on other build instructions because it's you can't",
    "start": "2575140",
    "end": "2581440"
  },
  {
    "text": "describe it it's just not there this doesn't come up too often but",
    "start": "2581440",
    "end": "2587440"
  },
  {
    "text": "it's interesting when it does because this is what you should hope your compiler bootstrap looks like right your GCC build ought to be able to produce",
    "start": "2587440",
    "end": "2594339"
  },
  {
    "text": "your GCC build again if not do you know what your compiler even contains",
    "start": "2594339",
    "end": "2600460"
  },
  {
    "text": "um this is sometimes called the trusting trust attack or the Thompson attack or or the defense against it I think if you",
    "start": "2600460",
    "end": "2605859"
  },
  {
    "text": "can draw Cycles like this in your build graph you've just defended against it it's a good thing",
    "start": "2605859",
    "end": "2612119"
  },
  {
    "text": "so there are some other differences some smaller finer grain ones between warp Forge and these other systems",
    "start": "2612819",
    "end": "2618520"
  },
  {
    "text": "the big one is the content address checkpoints right it's a huge thing",
    "start": "2618520",
    "end": "2623920"
  },
  {
    "text": "there are some smaller differences too so bazel for example has a lot of magic built-ins for the different languages",
    "start": "2623920",
    "end": "2630040"
  },
  {
    "text": "that it supports building stuff for warp Forge doesn't or Forge just gives you containers and shells and lets you",
    "start": "2630040",
    "end": "2635800"
  },
  {
    "text": "figure it out um I'm hoping that this less magical",
    "start": "2635800",
    "end": "2641800"
  },
  {
    "text": "approach will will help keep things simpler and I'm hoping that the content address checkpoints thing will help warp",
    "start": "2641800",
    "end": "2648280"
  },
  {
    "text": "Forge build much bigger ecosystems whereas bazel in practice if we observe where it's",
    "start": "2648280",
    "end": "2653440"
  },
  {
    "text": "been adopted it seems to be mostly mono repos I think that's a pretty uncontentious observation",
    "start": "2653440",
    "end": "2659560"
  },
  {
    "text": "and my guess is that this is because of the build instructions depend only on build instructions and the bootstrapping",
    "start": "2659560",
    "end": "2664780"
  },
  {
    "text": "quest that comes after I think the content address checkpoints might help us get away from that and share more work and hopefully be more adoptable",
    "start": "2664780",
    "end": "2673740"
  },
  {
    "text": "um warp Forge versus NYX similar very much that story about bazel also warp",
    "start": "2673780",
    "end": "2679180"
  },
  {
    "text": "Forge and nicks differ quite a bit in that I've showed you almost entirely Json for warp Forge",
    "start": "2679180",
    "end": "2684940"
  },
  {
    "text": "or there was that python-like syntax if you want it or that entire level of the system is",
    "start": "2684940",
    "end": "2689980"
  },
  {
    "text": "easily plugable right bring your own templating NYX is programmed using something called",
    "start": "2689980",
    "end": "2695800"
  },
  {
    "text": "the Nix language and I'm going to say absolutely nothing about this other than you can read lots of other people's opinions about the",
    "start": "2695800",
    "end": "2701319"
  },
  {
    "text": "next Language online I will let the Gap there speak for itself so what we're just aiming for",
    "start": "2701319",
    "end": "2708040"
  },
  {
    "text": "easy to use and again I hope these constant address checkpoints help us build more collaborative ecosystems with",
    "start": "2708040",
    "end": "2714940"
  },
  {
    "text": "lower coordination and we also have this zaps thing so",
    "start": "2714940",
    "end": "2722500"
  },
  {
    "text": "um Nyx builds a distribution called NYX OS in which they have a huge amount of",
    "start": "2722500",
    "end": "2728619"
  },
  {
    "text": "software it's a very impressive collection of work but it is a distro make no mistake so when you install NYX",
    "start": "2728619",
    "end": "2734920"
  },
  {
    "text": "you get a series of paths all starting with Slash Nicks on your system and then the whole distro goes in here",
    "start": "2734920",
    "end": "2741599"
  },
  {
    "text": "with warp Forge we introduce the zap concept where you package the entire application",
    "start": "2741640",
    "end": "2747819"
  },
  {
    "text": "in a way that works out of any path once you've unpacked it there",
    "start": "2747819",
    "end": "2753280"
  },
  {
    "text": "and so our goal with warp Forge and zap's packaging is to make stuff work anywhere we want",
    "start": "2753280",
    "end": "2760000"
  },
  {
    "text": "to be able to export our progress from warp Forge and not have it depend on warp Forge",
    "start": "2760000",
    "end": "2765819"
  },
  {
    "text": "I don't I don't need to be the dependency of everything at runtime forever right I don't want to be I just",
    "start": "2765819",
    "end": "2771280"
  },
  {
    "text": "want to produce stuff that works and give it to people as quickly and simply as possible so my hope is that with this low",
    "start": "2771280",
    "end": "2778839"
  },
  {
    "text": "dependency even zero dependency application packaging format we can build more than just another",
    "start": "2778839",
    "end": "2785020"
  },
  {
    "text": "distro we can build pieces that anyone can use and and just have an end to",
    "start": "2785020",
    "end": "2790599"
  },
  {
    "text": "distro distinctions but there are good things to see from",
    "start": "2790599",
    "end": "2796480"
  },
  {
    "text": "these projects bazel and Nyx and Geeks and these things they are good Inspirations because they",
    "start": "2796480",
    "end": "2803800"
  },
  {
    "text": "prove that it is possible to take an ambitious stance on this problem of build everything and to deliver on it like these are real",
    "start": "2803800",
    "end": "2809859"
  },
  {
    "text": "projects with like pretty sizable user bases it is possible",
    "start": "2809859",
    "end": "2814859"
  },
  {
    "text": "we can also observe however that offering a plain Json API is surprisingly to me going to be a novel",
    "start": "2815140",
    "end": "2821920"
  },
  {
    "text": "feature nobody's done this before if you want to interact with NYX you kind of have to use the next language if",
    "start": "2821920",
    "end": "2827800"
  },
  {
    "text": "you want to interact with bazel I said we borrowed that starlark language from basil but that's the only way you can",
    "start": "2827800",
    "end": "2833560"
  },
  {
    "text": "interact with bazel like that's the API they even generate other starlark files",
    "start": "2833560",
    "end": "2838720"
  },
  {
    "text": "it is an interesting way to go about things I like Json I know what Json parsers are",
    "start": "2838720",
    "end": "2844599"
  },
  {
    "text": "I've got a lot of Json emitters in my like Suite of libraries it's a thing I can work with",
    "start": "2844599",
    "end": "2851400"
  },
  {
    "text": "and we can ultimately also see that there's a real usability challenge in making it possible for people to",
    "start": "2852520",
    "end": "2858460"
  },
  {
    "text": "collaborate with these tools without dragging them together and and getting them stuck in lockstep a lot of these",
    "start": "2858460",
    "end": "2864760"
  },
  {
    "text": "build tools that have tried to solve the build everything problem end up getting stuck working really only",
    "start": "2864760",
    "end": "2870280"
  },
  {
    "text": "in monorepo environments and I'm not going to say mono repos are bad",
    "start": "2870280",
    "end": "2875440"
  },
  {
    "text": "but I don't want them to be the only viable option so we've tried to learn from all these",
    "start": "2875440",
    "end": "2880660"
  },
  {
    "text": "things in warp Forge and I hope that we offer real improvements",
    "start": "2880660",
    "end": "2885480"
  },
  {
    "text": "so what does the future contain tons warp Forge is an alpha level of",
    "start": "2887140",
    "end": "2892599"
  },
  {
    "text": "project we've shipped core tools that work and demonstrate the real promise here but they are very rough we have",
    "start": "2892599",
    "end": "2898060"
  },
  {
    "text": "shipped several dozen real packages everything from bash that I had on the screen earlier to vimini Max believe it",
    "start": "2898060",
    "end": "2904599"
  },
  {
    "text": "or not um so we're getting there on bootstrapping stuff but tons more to do we have a prototype of using these um",
    "start": "2904599",
    "end": "2912099"
  },
  {
    "text": "templating systems such as the starlark one it's very cool and we have some other features like a tool that takes",
    "start": "2912099",
    "end": "2919180"
  },
  {
    "text": "the catalog Merkle tree this giant named hash database and exports a nice shiny website from it that you can easily",
    "start": "2919180",
    "end": "2924880"
  },
  {
    "text": "navigate including clicking through the replay instructions on the fly so that's cool",
    "start": "2924880",
    "end": "2929980"
  },
  {
    "text": "but there are tons more things we're going to need in order to make the system releasing many many more packages certainly Bridges to existing systems to",
    "start": "2929980",
    "end": "2937900"
  },
  {
    "text": "make it easy to take whatever language an ecosystem you're working in now and access it in workforge we're going to",
    "start": "2937900",
    "end": "2944200"
  },
  {
    "text": "need a lot of this and I think a huge ecosystem of tools like automatic Rebuilders that verify",
    "start": "2944200",
    "end": "2950200"
  },
  {
    "text": "determinism automatic version bumpers for things like dependabot style things",
    "start": "2950200",
    "end": "2955960"
  },
  {
    "text": "are all very much going to be needed and our future work at this time",
    "start": "2955960",
    "end": "2960960"
  },
  {
    "text": "so if you've watched this and you're thinking okay I'm in how can I help um",
    "start": "2961119",
    "end": "2966339"
  },
  {
    "text": "I'm so glad you asked because it will take a village technology is great",
    "start": "2966339",
    "end": "2972160"
  },
  {
    "text": "but it's not enough I hope that this warp Forge cooling that I've talked about here is going to",
    "start": "2972160",
    "end": "2977200"
  },
  {
    "text": "provide a good foundation or indeed just plain inspiration if you want to do something like it",
    "start": "2977200",
    "end": "2983740"
  },
  {
    "text": "um but technology is not enough whatever we do here to improve the state of build tools has to meet people where",
    "start": "2983740",
    "end": "2989500"
  },
  {
    "text": "they're at it has to be easy to extend Whenever there is a gap between where they're at and where we want to be",
    "start": "2989500",
    "end": "2996220"
  },
  {
    "text": "um and building a lot of software truly requires building a community that pushes that process forward there is too",
    "start": "2996220",
    "end": "3002760"
  },
  {
    "text": "much to do for any one person or even any small group of people the world has tons of software and it needs tons of",
    "start": "3002760",
    "end": "3009060"
  },
  {
    "text": "people to build and maintain it even with high leverage tooling",
    "start": "3009060",
    "end": "3014099"
  },
  {
    "text": "so in the spirit of extensions I want to talk quickly about a couple of places",
    "start": "3014099",
    "end": "3019380"
  },
  {
    "text": "where we made warp Forge ready to extend in order to meet needs that we might not yet have anticipated",
    "start": "3019380",
    "end": "3026660"
  },
  {
    "text": "so I should have put a real hash in there imagine a hash on the end instead of a keyboard smash where we have input",
    "start": "3026880",
    "end": "3033780"
  },
  {
    "text": "file systems and snapshots and where IDs this is actually a plug-in system if you",
    "start": "3033780",
    "end": "3039839"
  },
  {
    "text": "saw the demos earlier they had tar colon some hash and you also saw get to colon",
    "start": "3039839",
    "end": "3044940"
  },
  {
    "text": "a git hash on the screen that's a whole set of plugins getintar are the ones that we use the most but if",
    "start": "3044940",
    "end": "3051119"
  },
  {
    "text": "you would like to support other systems we have a nice corner of the code base where you can introduce those things in",
    "start": "3051119",
    "end": "3056760"
  },
  {
    "text": "an easily extendable way where we have actions",
    "start": "3056760",
    "end": "3062520"
  },
  {
    "text": "um the one you'll see most commonly is called Script and it means we're going to run a container use a shell and then",
    "start": "3062520",
    "end": "3068220"
  },
  {
    "text": "pipe some instructions through to that but this is actually another plug-in point where the word script appeared in",
    "start": "3068220",
    "end": "3073980"
  },
  {
    "text": "those demos we can introduce other keywords here which could invoke other kinds of executors if you will maybe some of them",
    "start": "3073980",
    "end": "3080940"
  },
  {
    "text": "won't even be container based maybe it's time for a wasm plugin soon if somebody would like to contribute that I will",
    "start": "3080940",
    "end": "3086640"
  },
  {
    "text": "happily show you the path to that part of the code where you can do so we have this build plug stuff the",
    "start": "3086640",
    "end": "3092940"
  },
  {
    "text": "templating engines right now we have shipped an early prototype of this system based on",
    "start": "3092940",
    "end": "3099240"
  },
  {
    "text": "starlark as one of our build plugs that is batteries included because we want to have something available right out of",
    "start": "3099240",
    "end": "3104640"
  },
  {
    "text": "the box but we have not yet developed a huge set of libraries and conventions about how",
    "start": "3104640",
    "end": "3110460"
  },
  {
    "text": "to do various build instructions in it so there's tons of future work to go there and people with strong opinions",
    "start": "3110460",
    "end": "3116760"
  },
  {
    "text": "would be highly welcome to contribute to this or if you just hate python syntax you",
    "start": "3116760",
    "end": "3122280"
  },
  {
    "text": "don't like where the parentheses are you truly can build your own build plug system and bring it into the system",
    "start": "3122280",
    "end": "3128700"
  },
  {
    "text": "the way that warp Forge interacts with build plugs is probably one of the easiest places to extend right now it is",
    "start": "3128700",
    "end": "3134880"
  },
  {
    "text": "literally if you can give me a command to exec and it returns Json on standard",
    "start": "3134880",
    "end": "3141000"
  },
  {
    "text": "out that'll do we will evaluate that Json as a workflow very simple extension point",
    "start": "3141000",
    "end": "3148640"
  },
  {
    "text": "can you use Q uh it emits Json standard out so yes why",
    "start": "3148740",
    "end": "3154559"
  },
  {
    "text": "not great um there's another concept that I hand",
    "start": "3154559",
    "end": "3161579"
  },
  {
    "text": "wavingly called bifrosts as just a grouping term for bridging to other existing package ecosystems I think",
    "start": "3161579",
    "end": "3168300"
  },
  {
    "text": "there's a lot of future work to do here and I would love to hear from people about like how shall we indeed take npm",
    "start": "3168300",
    "end": "3174660"
  },
  {
    "text": "embrace it and make it easy to refer to npm contents via catalogs or like bring other systems",
    "start": "3174660",
    "end": "3182280"
  },
  {
    "text": "lock files into Auto translated into warp Forge workflows",
    "start": "3182280",
    "end": "3187760"
  },
  {
    "text": "and anyone who is willing to package anything at all if you are just joining us in building stuff with warp Forge you",
    "start": "3188099",
    "end": "3194520"
  },
  {
    "text": "are certainly helping so if you have time and the interest in",
    "start": "3194520",
    "end": "3201480"
  },
  {
    "text": "hacking on this these were some of the extension points um come hack and I will be really happy",
    "start": "3201480",
    "end": "3207300"
  },
  {
    "text": "to guide anyone into how to help if you would like to do so on the other hand if you're watching",
    "start": "3207300",
    "end": "3212700"
  },
  {
    "text": "this and you find that you have no time at all but you do have some sort of a budget I feel obliged to mention warp Forge is",
    "start": "3212700",
    "end": "3220020"
  },
  {
    "text": "a 501c3 um this is the magic number in the US for being a foundation",
    "start": "3220020",
    "end": "3225780"
  },
  {
    "text": "that is a non-profit entity so we will happily accept any charitable contributions and try to Route it to",
    "start": "3225780",
    "end": "3231420"
  },
  {
    "text": "other people who can contribute their time and skills and make sure the project goes forward",
    "start": "3231420",
    "end": "3237599"
  },
  {
    "text": "and to encourage either of those outcomes I would like to remind you if you build in warp Forge and you package with zaps you produce artifacts you can",
    "start": "3237599",
    "end": "3245579"
  },
  {
    "text": "immediately use anywhere else on your local system you can plug them into your other container pipelines it doesn't",
    "start": "3245579",
    "end": "3252420"
  },
  {
    "text": "matter they're deeply portable and not attached to the system in which we build them so I would hope that this makes",
    "start": "3252420",
    "end": "3259380"
  },
  {
    "text": "warp Forge a very high Value Place to invest because it goes anywhere else afterwards",
    "start": "3259380",
    "end": "3266240"
  },
  {
    "text": "if any of this stuff interests you here's a whole Suite of links that you will need to find out more and the",
    "start": "3266339",
    "end": "3272099"
  },
  {
    "text": "project website itself you can find links to the community chat in there if you like source code there it is",
    "start": "3272099",
    "end": "3278400"
  },
  {
    "text": "and if you would like to see the catalog website which contains several of the packages that we've already produced for",
    "start": "3278400",
    "end": "3285059"
  },
  {
    "text": "python bash vimini Max Etc catalog.warpses.org",
    "start": "3285059",
    "end": "3290700"
  },
  {
    "text": "or the other GitHub link right below that is the um huge remarkable tree of Json files which",
    "start": "3290700",
    "end": "3296280"
  },
  {
    "text": "is the raw content so that is the end of the talk that I have",
    "start": "3296280",
    "end": "3302760"
  },
  {
    "text": "um q a welcome or you can find me afterwards",
    "start": "3302760",
    "end": "3308420"
  }
]