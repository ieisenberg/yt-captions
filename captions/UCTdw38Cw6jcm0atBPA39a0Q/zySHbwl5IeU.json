[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "okay good morning everyone my name is",
    "start": "4819",
    "end": "9960"
  },
  {
    "text": "John Smith and I'm going to talk to you about entity framework core in the",
    "start": "9960",
    "end": "17279"
  },
  {
    "start": "15000",
    "end": "15000"
  },
  {
    "text": "middle of 2016 I got an email out the blue from Manning saying as a sieve you",
    "start": "17279",
    "end": "26550"
  },
  {
    "text": "blogged a lot about ef6 would you like to write the book on anything look cool out of you out the blue massive job I",
    "start": "26550",
    "end": "35399"
  },
  {
    "text": "really enjoyed it and I learned a lot and then afterwards I went back to",
    "start": "35399",
    "end": "43129"
  },
  {
    "text": "contracting and people tended to ask me to do very difficult things with entity",
    "start": "43129",
    "end": "50309"
  },
  {
    "text": "framework call because of the book so I've had the experience of doing it in",
    "start": "50309",
    "end": "56309"
  },
  {
    "text": "the wild so what I tried to put together is a whole load of different things that",
    "start": "56309",
    "end": "63270"
  },
  {
    "text": "don't I don't know what you know so I've just kind of put a whole load of things",
    "start": "63270",
    "end": "68460"
  },
  {
    "text": "that I think are useful and possibly not known by people and I'm hoping that",
    "start": "68460",
    "end": "76250"
  },
  {
    "text": "you're something that you're something you'll go I didn't know that that's useful right so I've got a whole",
    "start": "76250",
    "end": "82890"
  },
  {
    "text": "splatter of stuff can I ask how many people are are using EF corn now most",
    "start": "82890",
    "end": "90960"
  },
  {
    "text": "but not all okay so I'm gonna go deep",
    "start": "90960",
    "end": "96360"
  },
  {
    "text": "but it's about deep about how it works inside so if you haven't used the EF",
    "start": "96360",
    "end": "103110"
  },
  {
    "text": "call before you should get out some something out of its but some of the",
    "start": "103110",
    "end": "108600"
  },
  {
    "text": "might go over your head but it's really I'm just trying to tell you how it works inside and how you can use that so I'm",
    "start": "108600",
    "end": "117810"
  },
  {
    "text": "going to this is my one page exploit explaining everything about EF core well",
    "start": "117810",
    "end": "124259"
  },
  {
    "start": "118000",
    "end": "118000"
  },
  {
    "text": "not really the F core is an object relational mapper and it Maps classes",
    "start": "124259",
    "end": "131340"
  },
  {
    "text": "you can see these are they not very blue are they anyway that you can see the two classes at either side",
    "start": "131340",
    "end": "138209"
  },
  {
    "text": "and it maps those two tables or views in the database the database I'm going to",
    "start": "138209",
    "end": "146360"
  },
  {
    "text": "do a bit of demo on is really simple",
    "start": "146360",
    "end": "151610"
  },
  {
    "text": "you've got a set a book we've had a one-to-one to an author and just to make it interesting I've got four books but",
    "start": "151610",
    "end": "158850"
  },
  {
    "text": "the first two have the same author okay so if you haven't come across a TF core",
    "start": "158850",
    "end": "166230"
  },
  {
    "text": "before it works out if core works out what the database looks like by looking",
    "start": "166230",
    "end": "172890"
  },
  {
    "text": "at how you've built your class and there's certain standard default ways of",
    "start": "172890",
    "end": "182880"
  },
  {
    "text": "doing it by using names but yeah there's a load of configuration you can put in",
    "start": "182880",
    "end": "188160"
  },
  {
    "text": "if you want to start with a database there's a method to reverse-engineer",
    "start": "188160",
    "end": "193830"
  },
  {
    "text": "that and build the classes and all the configuration to fit okay so there you",
    "start": "193830",
    "end": "200760"
  },
  {
    "text": "are you can see most of the properties are mapped to the columns in the tables",
    "start": "200760",
    "end": "207239"
  },
  {
    "text": "there is one here that isn't that's called a navigational property and a lot",
    "start": "207239",
    "end": "214079"
  },
  {
    "text": "of the power of EF court lives in its navigational properties as we'll see in",
    "start": "214079",
    "end": "220170"
  },
  {
    "text": "a minute so what I'm gonna do I'm gonna take you into EF core and back out so we",
    "start": "220170",
    "end": "228780"
  },
  {
    "text": "starting at nine o'clock that's the code and we'll go round we're doing stages so",
    "start": "228780",
    "end": "234090"
  },
  {
    "text": "the first thing it does when you call to list on that with the context on the",
    "start": "234090",
    "end": "240930"
  },
  {
    "text": "beginning it says okay I I can understand this you've got a property in",
    "start": "240930",
    "end": "246569"
  },
  {
    "text": "your context called books with me which is mat mapped to the books table and you",
    "start": "246569",
    "end": "252450"
  },
  {
    "text": "want to include the author for that book right and to this says do it for all the",
    "start": "252450",
    "end": "258180"
  },
  {
    "text": "whole database which is four books translated obviously that's easy but",
    "start": "258180",
    "end": "266060"
  },
  {
    "text": "some are its then cashed and then it hands over to a database provider there",
    "start": "266060",
    "end": "273440"
  },
  {
    "text": "are a number of database providers sequel server sequel Lite post sequel or",
    "start": "273440",
    "end": "280760"
  },
  {
    "text": "post greasy cool my sequel are there there are others you can pay for and",
    "start": "280760",
    "end": "286790"
  },
  {
    "text": "some other that are for don't work with",
    "start": "286790",
    "end": "292850"
  },
  {
    "text": "three yet which is the recent release so",
    "start": "292850",
    "end": "298310"
  },
  {
    "text": "the database providers job is to format the sequel because this slight",
    "start": "298310",
    "end": "305479"
  },
  {
    "text": "differences between each database and handle all the interactions with the",
    "start": "305479",
    "end": "312560"
  },
  {
    "text": "database and so in this case it sends out the Select command that that your",
    "start": "312560",
    "end": "321580"
  },
  {
    "text": "query created and then it gets the data and it sends it back to EF core and it",
    "start": "321580",
    "end": "330410"
  },
  {
    "text": "goes through three things I hope you can see this at the back there are it creates the classes so it creates four",
    "start": "330410",
    "end": "337220"
  },
  {
    "text": "books and three authors okay then it",
    "start": "337220",
    "end": "342590"
  },
  {
    "text": "does this thing called relational fix up some magic here so what it says I know",
    "start": "342590",
    "end": "350240"
  },
  {
    "text": "I've loaded those I know all about their priorities and foreign keys I understand",
    "start": "350240",
    "end": "355820"
  },
  {
    "text": "that and it then looks for any relational navigational properties the",
    "start": "355820",
    "end": "364490"
  },
  {
    "text": "author one the author one I showed you in the book and it goes oh I better fill",
    "start": "364490",
    "end": "369919"
  },
  {
    "text": "that in so it then makes a reference from this book to its author and you",
    "start": "369919",
    "end": "376850"
  },
  {
    "text": "notice that the first two books go to the same author and then it does",
    "start": "376850",
    "end": "383960"
  },
  {
    "text": "something called tracking snapshots so it takes a copy of what's out there and",
    "start": "383960",
    "end": "389900"
  },
  {
    "text": "it keeps it it's kind of you can get to it but it's inside the context you know it's kind of hidden a bit and why is",
    "start": "389900",
    "end": "397039"
  },
  {
    "text": "that that so EF core is trying to be good about doing its updates so if",
    "start": "397039",
    "end": "404840"
  },
  {
    "text": "you say you picked the first book and",
    "start": "404840",
    "end": "410409"
  },
  {
    "text": "wanted to change its title all you will do is you you would take the first book",
    "start": "410409",
    "end": "416060"
  },
  {
    "text": "and you would sign a new title to the",
    "start": "416060",
    "end": "422029"
  },
  {
    "text": "title property and then you could call this mega method called Save Changes and",
    "start": "422029",
    "end": "430520"
  },
  {
    "text": "it f qor will then look at everything that it's tracking right and go ah",
    "start": "430520",
    "end": "439300"
  },
  {
    "text": "what's happened and in these in this case it will know that it's pulled those",
    "start": "439300",
    "end": "444349"
  },
  {
    "text": "in they're not new and you haven't deleted them so it goes ha better compare these one by one against all of",
    "start": "444349",
    "end": "452629"
  },
  {
    "text": "these tracking snapshots and it goes to book 1 and goes all the titles changed",
    "start": "452629",
    "end": "460719"
  },
  {
    "text": "go through all the ice nothing else so at the end it says oh the only thing I",
    "start": "460719",
    "end": "467150"
  },
  {
    "text": "need to do is do a one line update title",
    "start": "467150",
    "end": "472879"
  },
  {
    "text": "for but one right and that's what it happens now there's a couple of things",
    "start": "472879",
    "end": "481039"
  },
  {
    "text": "to say here one is if you're just reading this to display to your users",
    "start": "481039",
    "end": "486319"
  },
  {
    "text": "you don't need this and there's a command called as no tracking which",
    "start": "486319",
    "end": "492589"
  },
  {
    "text": "turns this off so it's a little bit quicker a little less memory being used",
    "start": "492589",
    "end": "501279"
  },
  {
    "text": "but I need to tell you something in before three if you had as no tracking",
    "start": "501279",
    "end": "508479"
  },
  {
    "text": "it would still do this for books three authors all the links in three they",
    "start": "508479",
    "end": "517339"
  },
  {
    "text": "fixed well they changed as has no track no tracking it had got some problems and",
    "start": "517339",
    "end": "525800"
  },
  {
    "text": "they needed to do it and they also wanted to speed it up and that the speed up is now it will return four books",
    "start": "525800",
    "end": "533760"
  },
  {
    "text": "and for authors two of them will have duplicate data in it all right so that's",
    "start": "533760",
    "end": "540690"
  },
  {
    "text": "not a problem when you're going at the front end but if you're in your business logic and you want you to read something",
    "start": "540690",
    "end": "546570"
  },
  {
    "text": "in and and kind of traverse all the relationships as no tracking rule could",
    "start": "546570",
    "end": "554550"
  },
  {
    "text": "change those relationships okay so just be aware of that okay with",
    "start": "554550",
    "end": "561810"
  },
  {
    "text": "that's a simple I use a very simple database to show you that let's go and",
    "start": "561810",
    "end": "568980"
  },
  {
    "text": "look at something a bit more complicated so in in my book I build a super simple",
    "start": "568980",
    "end": "578000"
  },
  {
    "start": "569000",
    "end": "569000"
  },
  {
    "text": "Amazon site right and there's a number",
    "start": "578000",
    "end": "583440"
  },
  {
    "text": "of reason I picked on this we we understand books and reviews and things like that so it's not an alien but also",
    "start": "583440",
    "end": "590730"
  },
  {
    "text": "I could have Warner of each of the sort of database type relationship so we know",
    "start": "590730",
    "end": "598320"
  },
  {
    "text": "a book can have multiple authors and authors can have write multiple books so",
    "start": "598320",
    "end": "604440"
  },
  {
    "text": "you have to have a many-to-many the review is you can not too many of those",
    "start": "604440",
    "end": "610740"
  },
  {
    "text": "that's a one-to-many and I had kind of had to work at having a one-to-one this",
    "start": "610740",
    "end": "616530"
  },
  {
    "text": "is the idea is the prakit the price is what's in there unless this is one of",
    "start": "616530",
    "end": "621630"
  },
  {
    "text": "those is there so yeah but anyways so that's the database but the the the user",
    "start": "621630",
    "end": "631320"
  },
  {
    "text": "of my site is not really interested in that they want to see a display and to",
    "start": "631320",
    "end": "637590"
  },
  {
    "text": "build that it's not trivial so the title is easy the author the the authors there",
    "start": "637590",
    "end": "644910"
  },
  {
    "text": "may be multiple authors and ask to go through the table and fill all that out but the ones that get interesting is",
    "start": "644910",
    "end": "650610"
  },
  {
    "text": "working out the average I called it votes not stars and one don't want to",
    "start": "650610",
    "end": "656000"
  },
  {
    "text": "Amazon coming after me by two customers and I'm going to show you now it's in",
    "start": "656000",
    "end": "663810"
  },
  {
    "text": "different ways you could build that what the performance of those are okay",
    "start": "663810",
    "end": "669380"
  },
  {
    "text": "so if you go to what's a loading related",
    "start": "669380",
    "end": "675870"
  },
  {
    "text": "data a tape page on the EF core doc site",
    "start": "675870",
    "end": "682320"
  },
  {
    "text": "it will list these three ways of loading",
    "start": "682320",
    "end": "688100"
  },
  {
    "text": "eager loading you've seen explicit loading is I loaded the book I forgot to",
    "start": "688100",
    "end": "693930"
  },
  {
    "text": "load the reviews so I'll load it now that sounds silly but you can imagine top level someone loads a book the",
    "start": "693930",
    "end": "702180"
  },
  {
    "text": "business logic needs that there's a way to get to it and then lazy loading is if",
    "start": "702180",
    "end": "710640"
  },
  {
    "text": "you put virtual and I think you've got library in the what happens is if you've",
    "start": "710640",
    "end": "716550"
  },
  {
    "text": "got a book and you don't read this nothing happens but if you read it it goes ah he needs that I'll pull that in",
    "start": "716550",
    "end": "725760"
  },
  {
    "text": "from the database okay now there is another way called select loading which",
    "start": "725760",
    "end": "732990"
  },
  {
    "text": "I use quite a lot and it allows you to",
    "start": "732990",
    "end": "738180"
  },
  {
    "text": "pick exactly what you want but it's still you can still access the",
    "start": "738180",
    "end": "744440"
  },
  {
    "text": "relationships that are there quite easily so you're not losing anything and",
    "start": "745970",
    "end": "752670"
  },
  {
    "text": "I let's the look at their timings so select loading winds slightly over eager",
    "start": "752670",
    "end": "760920"
  },
  {
    "start": "754000",
    "end": "754000"
  },
  {
    "text": "loading but I want you to see this right and it's all about trips to the database",
    "start": "760920",
    "end": "771200"
  },
  {
    "text": "let me yeah let me go back this is this is three one if I go back to before",
    "start": "773650",
    "end": "781180"
  },
  {
    "text": "three there were more commands in here there's a big change many of you will",
    "start": "781180",
    "end": "787810"
  },
  {
    "text": "know this that they've their massive change to the the way they handle turn",
    "start": "787810",
    "end": "795460"
  },
  {
    "text": "link into sequel and before three if you load in a book and then you loaded the",
    "start": "795460",
    "end": "802150"
  },
  {
    "text": "reviews they were done by separate sequel commands all right so this least",
    "start": "802150",
    "end": "809260"
  },
  {
    "text": "who would really like this - this thing is three in here and four in here so",
    "start": "809260",
    "end": "814420"
  },
  {
    "text": "there's four commands but it's all done in one database trip and these are about",
    "start": "814420",
    "end": "821530"
  },
  {
    "text": "20% faster than to one but so I can say",
    "start": "821530",
    "end": "830410"
  },
  {
    "text": "it's not about how many commands you don't and do it's how many trips to the",
    "start": "830410",
    "end": "835780"
  },
  {
    "text": "database you make is gonna hit you and I",
    "start": "835780",
    "end": "840870"
  },
  {
    "text": "call it every you know if this is a very chatty this is very chatty and it not",
    "start": "840870",
    "end": "846220"
  },
  {
    "text": "only will hit the performance here it will put more load on your database and",
    "start": "846220",
    "end": "851800"
  },
  {
    "text": "I'll talk about seeing that later so you",
    "start": "851800",
    "end": "857020"
  },
  {
    "text": "just gotta be aware of that and lazy",
    "start": "857020",
    "end": "862840"
  },
  {
    "text": "loading I get pulled in to look at performance and lazy loading is really",
    "start": "862840",
    "end": "869440"
  },
  {
    "text": "easy to use and the problem is it spreads lots of chatter across your",
    "start": "869440",
    "end": "878050"
  },
  {
    "text": "database sorry if but it's really easy to use and a lot especially say you've",
    "start": "878050",
    "end": "884380"
  },
  {
    "text": "got a repository and you're using this query to do in three or four places and",
    "start": "884380",
    "end": "891000"
  },
  {
    "text": "you now need to add reviews you don't really want to add it to what's there it",
    "start": "891000",
    "end": "897940"
  },
  {
    "text": "might break something else so you use lazy loading I understand that but",
    "start": "897940",
    "end": "902980"
  },
  {
    "text": "you're going to get or database trips so let me look at the",
    "start": "902980",
    "end": "912300"
  },
  {
    "text": "Select loading so this is the Select",
    "start": "912300",
    "end": "919950"
  },
  {
    "start": "915000",
    "end": "915000"
  },
  {
    "text": "loading to build that looks horrible and I'll break it down but it's not as bad",
    "start": "919950",
    "end": "930300"
  },
  {
    "text": "as you think because by the end of running this it's done everything right",
    "start": "930300",
    "end": "936560"
  },
  {
    "text": "what you would have to do with the other ones and I had to do for the test is you",
    "start": "936560",
    "end": "942720"
  },
  {
    "text": "had to pull in all the the reviews then you had to get count them then you have",
    "start": "942720",
    "end": "947790"
  },
  {
    "text": "to do the average then you had to check whether there was a promotion and all that sort of stuff it's all done in here",
    "start": "947790",
    "end": "955640"
  },
  {
    "text": "the benefits of this you will see in a",
    "start": "955760",
    "end": "961080"
  },
  {
    "text": "minute but I want to oh yeah so you noticed this I just want to focus on",
    "start": "961080",
    "end": "968550"
  },
  {
    "text": "this bit if I put in reviews reviews.com EF core goes I can do that in sequel",
    "start": "968550",
    "end": "975990"
  },
  {
    "text": "right so it never has to load the reviews this one getting the average",
    "start": "975990",
    "end": "983550"
  },
  {
    "text": "that that was really hard to work out I had to ask get the team on github you have to put a",
    "start": "983550",
    "end": "991860"
  },
  {
    "text": "double nullable double double there and why is that it turns out it's because",
    "start": "991860",
    "end": "998910"
  },
  {
    "text": "the average of most of the aggregate commands in the database like some",
    "start": "998910",
    "end": "1006740"
  },
  {
    "text": "average max min if there's no data they turn return now all right so you have to",
    "start": "1006740",
    "end": "1015050"
  },
  {
    "text": "make it you have to have a double because this is a this is a byte and and that won't average with it so but that's",
    "start": "1015050",
    "end": "1024319"
  },
  {
    "text": "why you need another book and before three if you got it wrong it would do it",
    "start": "1024320",
    "end": "1033260"
  },
  {
    "text": "but it would do it all in in them it would pull stuff in MA",
    "start": "1033260",
    "end": "1038540"
  },
  {
    "text": "to pull times into the software and do it there and it was terrible performance",
    "start": "1038540",
    "end": "1044540"
  },
  {
    "text": "right and I know about that it really aren't early on in the book and and I",
    "start": "1044540",
    "end": "1050900"
  },
  {
    "text": "just warned people about that but I think the team must have seen that",
    "start": "1050900",
    "end": "1057920"
  },
  {
    "text": "there's just terrible performance so in three if you do if you didn't put that",
    "start": "1057920",
    "end": "1062930"
  },
  {
    "text": "in you'd get I can't handle this all right it'll just kick it out so I think",
    "start": "1062930",
    "end": "1070340"
  },
  {
    "text": "that's better but I man I would imagine anybody that's converted from two to",
    "start": "1070340",
    "end": "1076370"
  },
  {
    "text": "three might have had a few queries that broke I don't know anybody hmm anyway my",
    "start": "1076370",
    "end": "1082340"
  },
  {
    "text": "client did that's why he hired me so anyway if you do this again that average",
    "start": "1082340",
    "end": "1091520"
  },
  {
    "text": "will be done in your database so I'm gonna say don't don't try and read that",
    "start": "1091520",
    "end": "1097640"
  },
  {
    "start": "1096000",
    "end": "1096000"
  },
  {
    "text": "I'm going to give you a bigger science but I just want to say that EF core that",
    "start": "1097640",
    "end": "1104690"
  },
  {
    "text": "this is taken from a information logging from Air Corps and if you're using",
    "start": "1104690",
    "end": "1113020"
  },
  {
    "text": "normal deficit system it will appear for you and it rot it produces really",
    "start": "1113020",
    "end": "1121130"
  },
  {
    "text": "readable sequel now I know you're using EF core because you don't want to go",
    "start": "1121130",
    "end": "1126620"
  },
  {
    "text": "anywhere see near sequel right but when it comes to performance sometimes it's",
    "start": "1126620",
    "end": "1132080"
  },
  {
    "text": "good to be able to look at that now I tried the same thing on EF six and it",
    "start": "1132080",
    "end": "1137960"
  },
  {
    "text": "was a hundred mmm-mmm-mmm 218 lines and it was completely impenetrable it was",
    "start": "1137960",
    "end": "1144230"
  },
  {
    "text": "you couldn't read it this you could pick up you'd have to replace that with a an",
    "start": "1144230",
    "end": "1149990"
  },
  {
    "text": "ID and run it somewhere and just see what's going on so I'm just saying it's",
    "start": "1149990",
    "end": "1157390"
  },
  {
    "text": "you most likely don't want to go near sequel but when you perform and starts kicking in this is what you can do I",
    "start": "1157960",
    "end": "1165020"
  },
  {
    "text": "just want to look at this this is the account and this is the",
    "start": "1165020",
    "end": "1172050"
  },
  {
    "text": "of doing the average in the database so I I didn't I didn't want to skew things",
    "start": "1172050",
    "end": "1182340"
  },
  {
    "text": "if I were put in a hundred I only had ten reviews to average and count if I'd",
    "start": "1182340",
    "end": "1190050"
  },
  {
    "text": "put him more the timings will be more apart but this is a very special thing",
    "start": "1190050",
    "end": "1195900"
  },
  {
    "text": "so I'm not trying to say that you know select is always going to be way better",
    "start": "1195900",
    "end": "1201930"
  },
  {
    "text": "anything than anything else this is a particular case but what what I would",
    "start": "1201930",
    "end": "1207450"
  },
  {
    "text": "say is in this book there's a description and normally that would be",
    "start": "1207450",
    "end": "1213210"
  },
  {
    "text": "very big and if you were using include or anything else it would load that and",
    "start": "1213210",
    "end": "1219510"
  },
  {
    "text": "you don't need it in a select load you can leave that out again in the test I",
    "start": "1219510",
    "end": "1225360"
  },
  {
    "text": "did the the description was like ten characters so it didn't really have make any difference the only problem is",
    "start": "1225360",
    "end": "1233370"
  },
  {
    "text": "select loading is that they're hard to write so I just want to point out a bit",
    "start": "1233370",
    "end": "1239400"
  },
  {
    "text": "most of you know about Auto mapper right it's a been around for years and it's a",
    "start": "1239400",
    "end": "1246840"
  },
  {
    "text": "object to object mapper so it'll map things from one class to another class",
    "start": "1246840",
    "end": "1254010"
  },
  {
    "text": "but it will also produce link so there's",
    "start": "1254010",
    "end": "1260400"
  },
  {
    "text": "a command project to which instead of copying things it will create the link",
    "start": "1260400",
    "end": "1266940"
  },
  {
    "text": "that will do the copy right and so for instance if this is my I got a dto view",
    "start": "1266940",
    "end": "1276060"
  },
  {
    "text": "model whatever it's just as the thing that I want to go to if you put author name and there's something called author",
    "start": "1276060",
    "end": "1284460"
  },
  {
    "text": "and something and it's got a property called name Auto mapper will",
    "start": "1284460",
    "end": "1291600"
  },
  {
    "text": "automatically work out that they same with poke post count for this",
    "start": "1291600",
    "end": "1297080"
  },
  {
    "text": "complicated thing you'd have to tell it directly what it to do but Auto mapper I",
    "start": "1297080",
    "end": "1302940"
  },
  {
    "text": "use a lot it's a really good library it's well supported I think the doc you made",
    "start": "1302940",
    "end": "1309710"
  },
  {
    "text": "documentation is quite hard work but anyway that that will help you if you",
    "start": "1309710",
    "end": "1317700"
  },
  {
    "text": "want to use select queries okay so we've",
    "start": "1317700",
    "end": "1323010"
  },
  {
    "text": "read Reds things from the database so now we're going to talk about pushing things out to the database and in my",
    "start": "1323010",
    "end": "1331850"
  },
  {
    "text": "book I've got my one-to-one my one-to-many and my many-to-many relationships and I've decided I want to",
    "start": "1331850",
    "end": "1340670"
  },
  {
    "text": "create a new book with an existing order or author okay so this is one way of",
    "start": "1340670",
    "end": "1347640"
  },
  {
    "text": "doing it you create the book you save it you get the primary key and you fill in",
    "start": "1347640",
    "end": "1354570"
  },
  {
    "text": "the this this linking table has to have these foreign keys filled in okay so",
    "start": "1354570",
    "end": "1363270"
  },
  {
    "text": "that's one way to do it the problem I don't mind setting up relationships with by setting",
    "start": "1363270",
    "end": "1372840"
  },
  {
    "text": "foreign keys but I do have a problem with to save changes so the problem with",
    "start": "1372840",
    "end": "1379440"
  },
  {
    "text": "that is that you've got a book that is incomplete hasn't got an author right",
    "start": "1379440",
    "end": "1387320"
  },
  {
    "text": "you save it and then you something goes wrong here and this doesn't happen at",
    "start": "1387320",
    "end": "1394530"
  },
  {
    "text": "that point you've got a book which might break your system right so you want to",
    "start": "1394530",
    "end": "1400880"
  },
  {
    "text": "you don't want to do have to save cheney's like that so in my systems I",
    "start": "1400880",
    "end": "1408270"
  },
  {
    "text": "get everything ready and I call once I save change and just for people that",
    "start": "1408270",
    "end": "1416760"
  },
  {
    "text": "don't know save changes does all this kind of clever stuff but then anything",
    "start": "1416760",
    "end": "1422880"
  },
  {
    "text": "it saves it saves within transaction so either it all works or none of it works",
    "start": "1422880",
    "end": "1430370"
  },
  {
    "text": "right so if you can't do it that way how",
    "start": "1430370",
    "end": "1435480"
  },
  {
    "text": "can you do it well these occasional properties so here is another",
    "start": "1435480",
    "end": "1442320"
  },
  {
    "start": "1436000",
    "end": "1436000"
  },
  {
    "text": "version and you may not realize but here",
    "start": "1442320",
    "end": "1448470"
  },
  {
    "text": "we're doing something to the author link that's a navigational property when it when it goes and look this all that's",
    "start": "1448470",
    "end": "1455490"
  },
  {
    "text": "changed and it will say alright I'm always a new book author right that's",
    "start": "1455490",
    "end": "1461340"
  },
  {
    "text": "not in the database all wipe I better add that too and then in the book author I said I just set the author this is the",
    "start": "1461340",
    "end": "1471380"
  },
  {
    "text": "navigational property with the author that I've loaded and then I can call",
    "start": "1471380",
    "end": "1476850"
  },
  {
    "text": "Save Changes just once so let me let's",
    "start": "1476850",
    "end": "1482820"
  },
  {
    "text": "go through this because it's interesting what Pao TF court does that so the red",
    "start": "1482820",
    "end": "1488220"
  },
  {
    "text": "things are new the blue thing is they're already so I've run all my code but I",
    "start": "1488220",
    "end": "1495060"
  },
  {
    "text": "haven't called add all say chains so I the links in there you can see that",
    "start": "1495060",
    "end": "1501090"
  },
  {
    "text": "there's no primary key in here and there's no foreign keys in there when",
    "start": "1501090",
    "end": "1507420"
  },
  {
    "text": "you call add it does a couple of things I don't know what order but it fills in",
    "start": "1507420",
    "end": "1516840"
  },
  {
    "text": "any foreign keys and needed it it knows",
    "start": "1516840",
    "end": "1521880"
  },
  {
    "text": "from the links what you want and it fills in the foreign key so the this one",
    "start": "1521880",
    "end": "1527430"
  },
  {
    "text": "was easy it's at all I'm not linked to that o is it's already got key right",
    "start": "1527430",
    "end": "1533370"
  },
  {
    "text": "okay I'll fit it in when it comes to this one it goes on no I've got that yet",
    "start": "1533370",
    "end": "1538650"
  },
  {
    "text": "so it fills it with a both the book ID",
    "start": "1538650",
    "end": "1543980"
  },
  {
    "text": "primary key in the book and the foreign key in the book author with a the same",
    "start": "1543980",
    "end": "1549980"
  },
  {
    "text": "large negative number before I go on EF",
    "start": "1549980",
    "end": "1556350"
  },
  {
    "text": "call change call three change before three it did put it in the properties in",
    "start": "1556350",
    "end": "1564570"
  },
  {
    "text": "your classes now it puts it in the",
    "start": "1564570",
    "end": "1570340"
  },
  {
    "text": "snap tracking snapshot there's reason for that but anyway so the you wouldn't",
    "start": "1570340",
    "end": "1576700"
  },
  {
    "text": "see that after you'd done ad it would be hidden and then where you go Save",
    "start": "1576700",
    "end": "1583810"
  },
  {
    "text": "Changes it works out which order to write things out and sets it out I'm going to show",
    "start": "1583810",
    "end": "1589990"
  },
  {
    "text": "you the sequel for that in a minute and then what it does when it's done all",
    "start": "1589990",
    "end": "1595420"
  },
  {
    "text": "that it it will copy any changes that happened in the database back into your classes so that they are an exact",
    "start": "1595420",
    "end": "1603120"
  },
  {
    "text": "correct against the database and it and they go to the state of under unchanged",
    "start": "1603120",
    "end": "1612210"
  },
  {
    "text": "IC show you this equal so it puts the book out this command gets the primary",
    "start": "1612210",
    "end": "1619720"
  },
  {
    "start": "1614000",
    "end": "1614000"
  },
  {
    "text": "key and then uses it to create the book author that's a very simple example I",
    "start": "1619720",
    "end": "1627310"
  },
  {
    "text": "had a multinational client who had got two security systems the new one and an",
    "start": "1627310",
    "end": "1635140"
  },
  {
    "text": "existing one and they wanted to link them and we came up they didn't really",
    "start": "1635140",
    "end": "1640450"
  },
  {
    "text": "want to touch the existing security system so I built a an application I did",
    "start": "1640450",
    "end": "1649930"
  },
  {
    "text": "reverse engineered the main the the existing database so I could access it",
    "start": "1649930",
    "end": "1656220"
  },
  {
    "text": "right and the new system would send me events and I've had to build really",
    "start": "1656220",
    "end": "1662320"
  },
  {
    "text": "complex set of things pulling that from that database that delete in there",
    "start": "1662320",
    "end": "1668860"
  },
  {
    "text": "adding that and there were about 15 classes and I changed relationships I",
    "start": "1668860",
    "end": "1674040"
  },
  {
    "text": "changed I added things new classes to it",
    "start": "1674040",
    "end": "1680620"
  },
  {
    "text": "I removed classes from it I changed things and then even the the project",
    "start": "1680620",
    "end": "1690730"
  },
  {
    "text": "manager who is a quite techie said don't",
    "start": "1690730",
    "end": "1696190"
  },
  {
    "text": "you have to write them in the right order I said no you have call do that so I just tend all this mess back",
    "start": "1696190",
    "end": "1703670"
  },
  {
    "text": "to f qor and it works out everything and it does it in the right order put it in",
    "start": "1703670",
    "end": "1708710"
  },
  {
    "text": "the right place and it just works and that for me is is fantastic I'm going to",
    "start": "1708710",
    "end": "1715820"
  },
  {
    "text": "talk very briefly about domain driven design domain driven design talks about",
    "start": "1715820",
    "end": "1721310"
  },
  {
    "text": "when you're doing your business logic your your business logic should not really know anything about the database",
    "start": "1721310",
    "end": "1728150"
  },
  {
    "text": "and because of the way EF core works it can do that you can use all these",
    "start": "1728150",
    "end": "1735410"
  },
  {
    "text": "navigational links and never touch priorities foreign keys never look at",
    "start": "1735410",
    "end": "1740870"
  },
  {
    "text": "them and your data that your business logic can work as if it's just an",
    "start": "1740870",
    "end": "1748040"
  },
  {
    "text": "in-memory set of classes there's a few little things that you have to give it",
    "start": "1748040",
    "end": "1753080"
  },
  {
    "text": "to help hit I agree if you add something you you know that over it or delete",
    "start": "1753080",
    "end": "1758690"
  },
  {
    "text": "something there's some things you need to do but in general it makes your",
    "start": "1758690",
    "end": "1763700"
  },
  {
    "text": "business logic really easy to work on okay okay let's keep going so I just",
    "start": "1763700",
    "end": "1773690"
  },
  {
    "start": "1770000",
    "end": "1770000"
  },
  {
    "text": "wanted to come back to this because there's something going on that is I",
    "start": "1773690",
    "end": "1781840"
  },
  {
    "text": "think it's quite interesting so we know we've seen this right at the beginning",
    "start": "1781840",
    "end": "1788150"
  },
  {
    "text": "if you did that they're all linked up nicely but did you know if you loaded",
    "start": "1788150",
    "end": "1794630"
  },
  {
    "text": "the books and then loaded the authors they'd also end up linked so you have to",
    "start": "1794630",
    "end": "1803270"
  },
  {
    "text": "understand that that when you when you",
    "start": "1803270",
    "end": "1808700"
  },
  {
    "text": "load anything so this is it licit say this is the first thing and now it's tracking those books right then you the",
    "start": "1808700",
    "end": "1819320"
  },
  {
    "text": "next thing you load it will look at everything that is tracking and it will",
    "start": "1819320",
    "end": "1824600"
  },
  {
    "text": "say should I be linked to this and then it will fill in those links so it's",
    "start": "1824600",
    "end": "1829910"
  },
  {
    "text": "amazing you know you can pull this in and pull that in and it'll go all",
    "start": "1829910",
    "end": "1836440"
  },
  {
    "text": "it'll link it all up right now I was putting this talk together over",
    "start": "1836440",
    "end": "1843280"
  },
  {
    "text": "Christmas and I'm working for a client at the moment and we had just we know we",
    "start": "1843280",
    "end": "1851290"
  },
  {
    "text": "had a problem with showing a job I won't go into the details but and with it",
    "start": "1851290",
    "end": "1858070"
  },
  {
    "text": "they've got a big but not the biggest job and it took nine seconds to display",
    "start": "1858070",
    "end": "1864060"
  },
  {
    "text": "that's not going to be good right and it was it was all about hierarchical data I",
    "start": "1864060",
    "end": "1871780"
  },
  {
    "start": "1869000",
    "end": "1869000"
  },
  {
    "text": "seem to do a lot with hierarchical data and hierarchical data is really hard to",
    "start": "1871780",
    "end": "1878940"
  },
  {
    "text": "performance-tuned and I've got a method where I I pulled in the first three with",
    "start": "1878940",
    "end": "1885460"
  },
  {
    "text": "by going Parowan include chai or children then include children and then",
    "start": "1885460",
    "end": "1890740"
  },
  {
    "text": "I had to do down here I did explicit loads so it's very chatty and I thought",
    "start": "1890740",
    "end": "1898360"
  },
  {
    "text": "I'm done saying all this thing about the cleverness of the link of relational",
    "start": "1898360",
    "end": "1906430"
  },
  {
    "text": "fix-up can I get that to work for me and yes I can so if I I all these blue",
    "start": "1906430",
    "end": "1915010"
  },
  {
    "text": "things have a job ID if I load them just with one child all these relationships",
    "start": "1915010",
    "end": "1923650"
  },
  {
    "text": "are set up you know I just get them all in I have to find the parent by saying",
    "start": "1923650",
    "end": "1929920"
  },
  {
    "text": "you know it's not there's no its parent",
    "start": "1929920",
    "end": "1935890"
  },
  {
    "text": "ID is now yeah but it fills it all in so that radically changes my software we",
    "start": "1935890",
    "end": "1945190"
  },
  {
    "text": "did quite a lot of other things as well I'm not saying only this but by doing",
    "start": "1945190",
    "end": "1950560"
  },
  {
    "text": "that I really reduced loads of database access accesses to three really big",
    "start": "1950560",
    "end": "1957150"
  },
  {
    "text": "accesses that pull things in and a small one I couldn't avoid and the whole thing",
    "start": "1957150",
    "end": "1964360"
  },
  {
    "text": "went down from nine to under two seconds and the problem is not this",
    "start": "1964360",
    "end": "1971620"
  },
  {
    "text": "now it's that the problem always was with to put this information on the",
    "start": "1971620",
    "end": "1978600"
  },
  {
    "text": "display we needed this but there were about six other very big queries going",
    "start": "1978600",
    "end": "1986740"
  },
  {
    "text": "on as well all in parallel and the chattiness of that was you know there's",
    "start": "1986740",
    "end": "1993070"
  },
  {
    "text": "so much hitting that database it was slowing everything down so this",
    "start": "1993070",
    "end": "1998200"
  },
  {
    "text": "took a lot of the chattiness out and now the problem is still the other ones are",
    "start": "1998200",
    "end": "2004740"
  },
  {
    "text": "a bit chatty right and we can but we're in a good place now so we're happy so",
    "start": "2004740",
    "end": "2012270"
  },
  {
    "text": "yeah it's it's ticks tricks like this that can help you make your systems run",
    "start": "2012270",
    "end": "2022050"
  },
  {
    "text": "better right I'm gonna do domain-driven design in five minutes impossible I came",
    "start": "2022050",
    "end": "2030960"
  },
  {
    "start": "2025000",
    "end": "2025000"
  },
  {
    "text": "across a domain driven design in 2012",
    "start": "2030960",
    "end": "2036720"
  },
  {
    "text": "and I I've had a really interesting career I was a developer I was the",
    "start": "2036720",
    "end": "2043650"
  },
  {
    "text": "manager of developers and take the director and everything and I came back",
    "start": "2043650",
    "end": "2049169"
  },
  {
    "text": "to programming and this book just spoke to me because I'm used to talking to",
    "start": "2049169",
    "end": "2055760"
  },
  {
    "text": "customers and developers and writing code and I love it but I would say it's",
    "start": "2055760",
    "end": "2063840"
  },
  {
    "text": "taken me quite some time to get a feel for the right ways to do it so I",
    "start": "2063840",
    "end": "2071669"
  },
  {
    "text": "recommend it and do get into it but it's you know you're gonna pick where you",
    "start": "2071669",
    "end": "2077820"
  },
  {
    "text": "start I all I want to cover is that the",
    "start": "2077820",
    "end": "2084399"
  },
  {
    "text": "if you want to make your classes at your EF core classes a follow the standard",
    "start": "2084400",
    "end": "2093700"
  },
  {
    "text": "that DDD's talks about which is all the properties and all the collections",
    "start": "2093700",
    "end": "2099790"
  },
  {
    "text": "should be read only you should have a the public constructor should have you",
    "start": "2099790",
    "end": "2106930"
  },
  {
    "text": "know you it would only create a valid book you know it have title price Buddha",
    "start": "2106930",
    "end": "2114130"
  },
  {
    "text": "and authors so the idea is you can never create something in here that is invalid",
    "start": "2114130",
    "end": "2121150"
  },
  {
    "text": "it's and it's it's a job of this class to keep it valid and so in if you want",
    "start": "2121150",
    "end": "2128710"
  },
  {
    "text": "to change anything you have to go through veteran methods to change things",
    "start": "2128710",
    "end": "2133780"
  },
  {
    "text": "because then the class can always keep itself valid all I want to talk about is",
    "start": "2133780",
    "end": "2141580"
  },
  {
    "start": "2139000",
    "end": "2139000"
  },
  {
    "text": "how you could make a class lock down the class so that you could do DD so of",
    "start": "2141580",
    "end": "2148780"
  },
  {
    "text": "course you can set the the private setters there what should stop you know",
    "start": "2148780",
    "end": "2154870"
  },
  {
    "text": "anybody accessing any of those but when it came to the collections if you had a",
    "start": "2154870",
    "end": "2162580"
  },
  {
    "text": "collection you can still add or remove from it and the way around it is by using backing fields anybody who's using",
    "start": "2162580",
    "end": "2169600"
  },
  {
    "text": "backing fields either I'll use them a lot they're really good so what backing field says is and this is an EF call",
    "start": "2169600",
    "end": "2176520"
  },
  {
    "text": "thing you've got a field here private field and it will read and write to that",
    "start": "2176520",
    "end": "2184650"
  },
  {
    "text": "in EF core 3 that is the default setting",
    "start": "2184650",
    "end": "2191230"
  },
  {
    "text": "before before 3 it wasn't but now it is and that's the the best thing to do so",
    "start": "2191230",
    "end": "2197170"
  },
  {
    "text": "it reads and writes to that and then you give something to the if someone look",
    "start": "2197170",
    "end": "2202600"
  },
  {
    "text": "needs to get to the reviews you you give it something which it can't change this",
    "start": "2202600",
    "end": "2209440"
  },
  {
    "text": "is the recommended way by Arthur Vickers who's the top man EF Corps you put an",
    "start": "2209440",
    "end": "2215470"
  },
  {
    "text": "iron innumerable so you can't add and remove from that and you also take a copy of the review",
    "start": "2215470",
    "end": "2223130"
  },
  {
    "text": "is to send back so even if you cast it you can't get back to the data right and",
    "start": "2223130",
    "end": "2228730"
  },
  {
    "text": "then you have an ad review command and you can have a remove review and update",
    "start": "2228730",
    "end": "2235850"
  },
  {
    "text": "review and all sorts of things in there all I wanted or two to talk to you about is about how you would set up your class",
    "start": "2235850",
    "end": "2244250"
  },
  {
    "text": "to be DDD I that's all I can do in this time try okay I've just this is the kind",
    "start": "2244250",
    "end": "2255830"
  },
  {
    "text": "of things I've come across that you you might know about some of them but I",
    "start": "2255830",
    "end": "2262310"
  },
  {
    "text": "think they useful so there is a thing called global query filters which you",
    "start": "2262310",
    "end": "2268880"
  },
  {
    "start": "2264000",
    "end": "2264000"
  },
  {
    "text": "can use in a couple of ways I've built a big multi-tenant system for a company",
    "start": "2268880",
    "end": "2277550"
  },
  {
    "text": "and the quick I use query filters to separate off so a multi-tenant system is",
    "start": "2277550",
    "end": "2285890"
  },
  {
    "text": "like github or something like that so each company logs in and they have their",
    "start": "2285890",
    "end": "2293030"
  },
  {
    "text": "own slice of that data and you can use query filters to do that really really",
    "start": "2293030",
    "end": "2298670"
  },
  {
    "text": "well right and it and the idea is they can only access their data and they",
    "start": "2298670",
    "end": "2304490"
  },
  {
    "text": "can't see anything else and query filters are brilliant for that the other thing that all my users have done is",
    "start": "2304490",
    "end": "2313990"
  },
  {
    "text": "implemented soft delete this is like you you want to give a delete command to",
    "start": "2313990",
    "end": "2320870"
  },
  {
    "text": "your users but when they come back to say I deleted something it I want it back you want a way to get it back and",
    "start": "2320870",
    "end": "2327530"
  },
  {
    "text": "this is what soft delete using a query filter with something like this that",
    "start": "2327530",
    "end": "2334550"
  },
  {
    "text": "says if that is true it won't show the book so here's a little super simple",
    "start": "2334550",
    "end": "2343600"
  },
  {
    "text": "unit test load for books sets off delete true Save Changes count",
    "start": "2343600",
    "end": "2352150"
  },
  {
    "text": "is now three if I say ignore query filters it's full so that book has",
    "start": "2352150",
    "end": "2359410"
  },
  {
    "text": "disappeared and I can tell you because I'm worried about this and I checked it",
    "start": "2359410",
    "end": "2364749"
  },
  {
    "text": "all you can't get in a query you can't get it with a find you can't get with an",
    "start": "2364749",
    "end": "2370089"
  },
  {
    "text": "include I don't know anyway other than going to sequel you can make that appear",
    "start": "2370089",
    "end": "2376449"
  },
  {
    "text": "all or this command right to make it appear right so it's really good so it's",
    "start": "2376449",
    "end": "2384609"
  },
  {
    "text": "gone from the users right but then when they come as a I'll please to help me",
    "start": "2384609",
    "end": "2390670"
  },
  {
    "text": "you know Oh work for hours doing this set the Bing back it reappears it's",
    "start": "2390670",
    "end": "2397869"
  },
  {
    "text": "lovely and all my clients have done that the thing I want to talk about though",
    "start": "2397869",
    "end": "2404380"
  },
  {
    "text": "and we're having a philosophical discussion with my client if you if you",
    "start": "2404380",
    "end": "2412449"
  },
  {
    "text": "deleted this book for real the reviews would be deleted as well it's a cascade",
    "start": "2412449",
    "end": "2419589"
  },
  {
    "text": "delete because the reviews rely on that book and they would delete right if you",
    "start": "2419589",
    "end": "2425859"
  },
  {
    "text": "soft delete that the review still remain you haven't soft deleted the reviews so",
    "start": "2425859",
    "end": "2433420"
  },
  {
    "text": "you've got to be a little bit careful about how you access things off the book",
    "start": "2433420",
    "end": "2440140"
  },
  {
    "text": "there's a thing in domain room driven design about called root and aggregate",
    "start": "2440140",
    "end": "2447069"
  },
  {
    "text": "and what they say is this is a root and the the the reviews are is a nagger it",
    "start": "2447069",
    "end": "2456429"
  },
  {
    "text": "underneath and it says you should always go through the root two to access the",
    "start": "2456429",
    "end": "2462400"
  },
  {
    "text": "aggregate so if you always try to get the reviews by pulling the book in and",
    "start": "2462400",
    "end": "2468880"
  },
  {
    "text": "then getting the reviews off that you'll be fine because you will never get that",
    "start": "2468880",
    "end": "2473890"
  },
  {
    "text": "book yeah so just bear that in mind",
    "start": "2473890",
    "end": "2479020"
  },
  {
    "text": "okay let's keep going on value",
    "start": "2479020",
    "end": "2484300"
  },
  {
    "start": "2483000",
    "end": "2483000"
  },
  {
    "text": "converters so these came in in two one it's not a new thing in three but I really like these so if the problem I",
    "start": "2484300",
    "end": "2492130"
  },
  {
    "text": "had if I save a date time to the database and then I pull it back out",
    "start": "2492130",
    "end": "2499510"
  },
  {
    "text": "again it's lost its it's kind it if it was UTC it doesn't say it's UTC anymore",
    "start": "2499510",
    "end": "2505840"
  },
  {
    "text": "and that's a problem if I'm sending JSON to my front end because it hasn't got",
    "start": "2505840",
    "end": "2511240"
  },
  {
    "text": "the Zed in it and that that was a before this I had to I did it with back in",
    "start": "2511240",
    "end": "2516490"
  },
  {
    "text": "fields and stuff but now you could have this conversion",
    "start": "2516490",
    "end": "2521500"
  },
  {
    "text": "so this is what you can convert things when it goes out and when it comes back in so when it goes out I just sent it",
    "start": "2521500",
    "end": "2528040"
  },
  {
    "text": "out but when it comes back I add the UC T back and that is magic another thing",
    "start": "2528040",
    "end": "2536710"
  },
  {
    "text": "that the my current client does he's quite sequel centric in he understand",
    "start": "2536710",
    "end": "2542050"
  },
  {
    "text": "you know he does a lot of things down there so he stayed saves his enums and",
    "start": "2542050",
    "end": "2548890"
  },
  {
    "text": "strings because the normally saved as numbers and if you know working out it's",
    "start": "2548890",
    "end": "2556570"
  },
  {
    "text": "number seven it is you know blow up or something you know it's so and what this",
    "start": "2556570",
    "end": "2565930"
  },
  {
    "text": "does is it send it makes it a string in the database when it comes back that turns it back into a ena that's that's",
    "start": "2565930",
    "end": "2574870"
  },
  {
    "text": "really nice so what's the next one oh yes I'm always looking for ways to",
    "start": "2574870",
    "end": "2583330"
  },
  {
    "start": "2580000",
    "end": "2580000"
  },
  {
    "text": "automate things and my current client I got pulled in quite late he's got a",
    "start": "2583330",
    "end": "2589540"
  },
  {
    "text": "massive he's put all his configuration in his DB context and it's really long",
    "start": "2589540",
    "end": "2595570"
  },
  {
    "text": "and there is a way to automate some of your setting up and configuration so so",
    "start": "2595570",
    "end": "2605710"
  },
  {
    "text": "here we are this is the way to do it it model Biddle model builder model you",
    "start": "2605710",
    "end": "2612220"
  },
  {
    "text": "have to use that one not the one in dbcontext get enter he type that returns like a",
    "start": "2612220",
    "end": "2619420"
  },
  {
    "text": "bit of stuff about the that class with some stuff omit from EF cool then I can",
    "start": "2619420",
    "end": "2628910"
  },
  {
    "text": "get all the properties you can you can see where I'm going here don't you so if it's a date/time and it ends with",
    "start": "2628910",
    "end": "2635150"
  },
  {
    "text": "UTC make it usually UTC I have a lot of things saying you know created at UTC",
    "start": "2635150",
    "end": "2642970"
  },
  {
    "text": "updated at UTC I've got loads of them and this will just pick all of them up",
    "start": "2642970",
    "end": "2649330"
  },
  {
    "text": "there are a number of ways you can do that that's one of them unfortunately",
    "start": "2649330",
    "end": "2656330"
  },
  {
    "text": "for the soft early it's not so simple",
    "start": "2656330",
    "end": "2661820"
  },
  {
    "text": "you you can't there isn't it kind way",
    "start": "2661820",
    "end": "2667460"
  },
  {
    "text": "you can do it you have to create dynamically create a little config class",
    "start": "2667460",
    "end": "2673820"
  },
  {
    "text": "of the right type and this guy on stackoverflow filter all curries trying",
    "start": "2673820",
    "end": "2680900"
  },
  {
    "text": "to achieve soft delete have done it and he's got a little bit of code which you",
    "start": "2680900",
    "end": "2687080"
  },
  {
    "text": "can you can see I'm going to the same same going through them or if it's got a",
    "start": "2687080",
    "end": "2693320"
  },
  {
    "text": "nice soft delete type on it then set doesn't the query filters that is",
    "start": "2693320",
    "end": "2700150"
  },
  {
    "text": "quicker and more secure right you don't want to have a soft delete that hasn't",
    "start": "2700150",
    "end": "2706970"
  },
  {
    "text": "got been set properly so that is a good approach cosmos DB this is a bit of code",
    "start": "2706970",
    "end": "2719150"
  },
  {
    "text": "from a cosmos TV test I did in my book I",
    "start": "2719150",
    "end": "2727840"
  },
  {
    "start": "2725000",
    "end": "2725000"
  },
  {
    "text": "started with 50 books at the beginning in chapter 13 I went up to a hundred",
    "start": "2727840",
    "end": "2735410"
  },
  {
    "text": "thousand books and a half a million reviews and guess what the sequel was",
    "start": "2735410",
    "end": "2742400"
  },
  {
    "text": "slow if because it's doing a lot of work and I perform is doing that and then in",
    "start": "2742400",
    "end": "2748119"
  },
  {
    "text": "chapter 14 I built this this is a CQRS pattern I had a sequel database and I had a no",
    "start": "2748119",
    "end": "2755709"
  },
  {
    "text": "sequel bait database where you you worked out all the data put it on there",
    "start": "2755709",
    "end": "2763449"
  },
  {
    "text": "and it comes out kind of already pre-baked I I rebuilt this with cosmos",
    "start": "2763449",
    "end": "2771939"
  },
  {
    "text": "DB and it's lovely right and the idea is to you know I in",
    "start": "2771939",
    "end": "2780430"
  },
  {
    "text": "my book I'm in a half a million books with Raven DB and it was just it was",
    "start": "2780430",
    "end": "2788289"
  },
  {
    "text": "just yes fine you know it's like it's fine isn't it was really really really",
    "start": "2788289",
    "end": "2795130"
  },
  {
    "text": "fast and this I haven't totally timed it because I've got a whole love a whole",
    "start": "2795130",
    "end": "2801039"
  },
  {
    "text": "other set of stuff that I'm doing along with it but it's looking like it will be",
    "start": "2801039",
    "end": "2806670"
  },
  {
    "text": "just as quick so in doing that I spent a",
    "start": "2806670",
    "end": "2812619"
  },
  {
    "start": "2812000",
    "end": "2812000"
  },
  {
    "text": "lot of time looking at cosmos DB in EF call three and if you go to my site is a",
    "start": "2812619",
    "end": "2821609"
  },
  {
    "text": "if if you go to my site and then go to no sequel as you know one of the",
    "start": "2821609",
    "end": "2828219"
  },
  {
    "text": "categories you'll find this and I found all sorts of interesting things about",
    "start": "2828219",
    "end": "2834189"
  },
  {
    "text": "about cosmos DB and about EF cause setup",
    "start": "2834189",
    "end": "2839799"
  },
  {
    "text": "for instance counting the number of books is a very costly thing with cosmos",
    "start": "2839799",
    "end": "2844959"
  },
  {
    "text": "DV you don't want to do it right and there are some things that were broke",
    "start": "2844959",
    "end": "2850929"
  },
  {
    "text": "broken in in EF call and some",
    "start": "2850929",
    "end": "2857199"
  },
  {
    "text": "limitations that they haven't dealt with yet I think it's cosmos DB is fine but",
    "start": "2857199",
    "end": "2863920"
  },
  {
    "text": "one of the things you can't at the moment you can I can have a cosmos DB and I can put in the reviews inside that",
    "start": "2863920",
    "end": "2872859"
  },
  {
    "text": "but what I can't do is have a cosmos DB a cosmos book and a cosmos reviews and",
    "start": "2872859",
    "end": "2880550"
  },
  {
    "text": "have a relation between them and they and they say it's going to change but it",
    "start": "2880550",
    "end": "2886850"
  },
  {
    "text": "doesn't look like it's going to change in five so I don't know what's going on but so it cosmos TVs is there it's it's",
    "start": "2886850",
    "end": "2894140"
  },
  {
    "text": "good but there are some limitation like they haven't done all the aggregates so",
    "start": "2894140",
    "end": "2899330"
  },
  {
    "text": "you can't do the anchor it so it can't count you can't some things like that there's you know this thing's there so just be",
    "start": "2899330",
    "end": "2906050"
  },
  {
    "text": "be aware of that okay oh oh right yes",
    "start": "2906050",
    "end": "2915940"
  },
  {
    "start": "2913000",
    "end": "2913000"
  },
  {
    "text": "side I I do",
    "start": "2915940",
    "end": "2923840"
  },
  {
    "text": "unit test my code using real database and a lot of people say no let's do that",
    "start": "2923840",
    "end": "2929920"
  },
  {
    "text": "thought you should mock it out and all that sort of doesn't so that's fine but",
    "start": "2929920",
    "end": "2938950"
  },
  {
    "text": "when you went when you go from version two to version 3 of EF core my client",
    "start": "2938950",
    "end": "2948860"
  },
  {
    "text": "had a lot of things broken and they because he didn't unit test them I had",
    "start": "2948860",
    "end": "2954070"
  },
  {
    "text": "because I knew of this problem really early on it was all about client versus",
    "start": "2954070",
    "end": "2960260"
  },
  {
    "text": "server and all that sort of stuff I built a library and I checked I checked that so all my code worked went",
    "start": "2960260",
    "end": "2967850"
  },
  {
    "text": "to three fine but my client you know it was there were lots of places where it",
    "start": "2967850",
    "end": "2973820"
  },
  {
    "text": "couldn't translate it if he'd unit tested those code then he would have",
    "start": "2973820",
    "end": "2979730"
  },
  {
    "text": "found that so what I'm saying is people say oh you you don't need to test a of",
    "start": "2979730",
    "end": "2984770"
  },
  {
    "text": "core no you don't but you do need to test your use of EF core and I make lots",
    "start": "2984770",
    "end": "2990740"
  },
  {
    "text": "of mistakes right I love unit tests right and so I I test",
    "start": "2990740",
    "end": "2998360"
  },
  {
    "text": "it so how can you do it well so the first thing if you're loop using really",
    "start": "2998360",
    "end": "3005260"
  },
  {
    "text": "Stan the EF core you're not using any special",
    "start": "3005260",
    "end": "3010309"
  },
  {
    "text": "things in your database you're not using user-defined functions or computed",
    "start": "3010309",
    "end": "3015440"
  },
  {
    "text": "columns and things like that you can use a sequel in-memory database and it's",
    "start": "3015440",
    "end": "3022069"
  },
  {
    "text": "it's very quick and it's empty when you",
    "start": "3022069",
    "end": "3027109"
  },
  {
    "text": "get it and it's just for this test all right so it's really good so if you can",
    "start": "3027109",
    "end": "3033799"
  },
  {
    "text": "if if you're working that way if you're doing something new in the database that is more complicated you can't use this",
    "start": "3033799",
    "end": "3040789"
  },
  {
    "text": "because it just won't work but I use sequel Lite because it checks",
    "start": "3040789",
    "end": "3046670"
  },
  {
    "text": "all my references if I it'll tell me if I you know if I do something wrong with",
    "start": "3046670",
    "end": "3053569"
  },
  {
    "text": "some because it's it's taking checking the room the the integrity of the",
    "start": "3053569",
    "end": "3061160"
  },
  {
    "text": "database and so I have a library and",
    "start": "3061160",
    "end": "3067720"
  },
  {
    "text": "I've just that the code in the last Tet the the last slide was what I've got and",
    "start": "3067720",
    "end": "3078160"
  },
  {
    "text": "what the other thing that helps you is that EF core has this command context",
    "start": "3078160",
    "end": "3087349"
  },
  {
    "text": "database in ensure creating it's meant for unit tests and what it says nothing",
    "start": "3087349",
    "end": "3093619"
  },
  {
    "text": "about migration just says what are your class you've got looking like now what should the debate I'll make a database",
    "start": "3093619",
    "end": "3099259"
  },
  {
    "text": "exactly the right like that right so it's going to be exactly what you have",
    "start": "3099259",
    "end": "3104480"
  },
  {
    "text": "at the moment and then you could and it's empty so you can you know do stuff whatever right so that's really that's",
    "start": "3104480",
    "end": "3114529"
  },
  {
    "text": "really good and I recommend it if you don't it gets a bit more complicated so",
    "start": "3114529",
    "end": "3122589"
  },
  {
    "text": "you have to this is in my library I create a unique unique database name off",
    "start": "3122589",
    "end": "3132200"
  },
  {
    "text": "the class I give class so because let's not talk about",
    "start": "3132200",
    "end": "3138249"
  },
  {
    "text": "the my code let's talk about the problem if you're running unique unit tests I'm",
    "start": "3138249",
    "end": "3144249"
  },
  {
    "text": "using X unit which most people my ear of call use it it runs all your unit tests",
    "start": "3144249",
    "end": "3153069"
  },
  {
    "text": "in parallel or it can run all this you yeah so if if you you can't have one",
    "start": "3153069",
    "end": "3158529"
  },
  {
    "text": "database being used by all your unit test so this one made makes it unique to",
    "start": "3158529",
    "end": "3165190"
  },
  {
    "text": "the class you I've also got one for making it unique to a method but all I'm",
    "start": "3165190",
    "end": "3172239"
  },
  {
    "text": "doing is changing the name of the of the database and then you have the problem",
    "start": "3172239",
    "end": "3178119"
  },
  {
    "text": "that the database may have been used before so it's got data in it so you're",
    "start": "3178119",
    "end": "3184150"
  },
  {
    "text": "gonna got to deal with it I've got one way of doing it there are the definitive",
    "start": "3184150",
    "end": "3192759"
  },
  {
    "text": "way to do is delete the database and recreate it but it takes about 8 or 10",
    "start": "3192759",
    "end": "3198819"
  },
  {
    "text": "seconds and that slows down you know you're all your unit tests and I don't",
    "start": "3198819",
    "end": "3204759"
  },
  {
    "text": "like that so I try to work and do things to get round that okay and we're nearly",
    "start": "3204759",
    "end": "3213430"
  },
  {
    "text": "there are we doing here good I'm thinking of this is the end right way",
    "start": "3213430",
    "end": "3220960"
  },
  {
    "start": "3217000",
    "end": "3217000"
  },
  {
    "text": "I'm thinking of writing some articles around the things I've put in this in",
    "start": "3220960",
    "end": "3227859"
  },
  {
    "text": "this talk and I would like your advice on what you thought was good bad you",
    "start": "3227859",
    "end": "3236920"
  },
  {
    "text": "know what didn't understand whatever and I'll I'll try and then do it I'm I'm",
    "start": "3236920",
    "end": "3243099"
  },
  {
    "text": "working you know contractor so it won't come out like like that but you know I'd",
    "start": "3243099",
    "end": "3249700"
  },
  {
    "text": "like like to talk about that and I've got six minutes for any questions sir",
    "start": "3249700",
    "end": "3258930"
  },
  {
    "text": "um okay most people work mostly hmm it",
    "start": "3260810",
    "end": "3270900"
  },
  {
    "text": "depends for me I I use code first and I",
    "start": "3270900",
    "end": "3277860"
  },
  {
    "text": "have a a I've built something in my Tessa port which will matter with which",
    "start": "3277860",
    "end": "3285090"
  },
  {
    "text": "will compare the the classes that what",
    "start": "3285090",
    "end": "3290400"
  },
  {
    "text": "the what EF Corps thinks that the classes look like from the config and the database so it will tell me how they",
    "start": "3290400",
    "end": "3298200"
  },
  {
    "text": "differ and then I build scripts to update the database I don't use",
    "start": "3298200",
    "end": "3304710"
  },
  {
    "text": "migrations but I'm a bit you know nerdy and I I'm gonna do that night you know",
    "start": "3304710",
    "end": "3310470"
  },
  {
    "text": "so I don't use migrations my current client uses migrations",
    "start": "3310470",
    "end": "3317510"
  },
  {
    "text": "I'll talk to you after this because I've got a big two blogs on my do migrations",
    "start": "3333630",
    "end": "3341650"
  },
  {
    "text": "and all that sort of stuff anybody else oh no it's best with best for simplicity",
    "start": "3341650",
    "end": "3357460"
  },
  {
    "text": "yes so all my unit tests I try not to",
    "start": "3357460",
    "end": "3363850"
  },
  {
    "text": "use a sink because I don't mind in my unit tests and debugging acing is a",
    "start": "3363850",
    "end": "3370930"
  },
  {
    "text": "little bit more harder but of course I'll have method in there but in in the main stuff I I use acing a lot I don't",
    "start": "3370930",
    "end": "3379990"
  },
  {
    "text": "use it absolutely everywhere there are some places where a really small query",
    "start": "3379990",
    "end": "3388600"
  },
  {
    "text": "is quicker sink so if you're loading a",
    "start": "3388600",
    "end": "3396040"
  },
  {
    "text": "very small thing using the primary key then I might I might use sink right oh",
    "start": "3396040",
    "end": "3405670"
  },
  {
    "text": "and another techie thing I only learn this I thought find is the right way to",
    "start": "3405670",
    "end": "3413980"
  },
  {
    "text": "load an entity it's okay but single or",
    "start": "3413980",
    "end": "3422800"
  },
  {
    "text": "default off a primary key is twice as fast all right",
    "start": "3422800",
    "end": "3428040"
  },
  {
    "text": "so worth knowing that and it's because",
    "start": "3428040",
    "end": "3433300"
  },
  {
    "text": "the the find is looking in the local",
    "start": "3433300",
    "end": "3438520"
  },
  {
    "text": "dbcontext I think so it's a bit slower so",
    "start": "3438520",
    "end": "3444400"
  },
  {
    "text": "what like you wait for doing bulk updates or delete a lot yeah big list of",
    "start": "3444400",
    "end": "3451390"
  },
  {
    "text": "deletes or updates yeah I wouldn't say that EF core is great for big updates if",
    "start": "3451390",
    "end": "3460809"
  },
  {
    "text": "you've got just one thing with no relationships which I never have and",
    "start": "3460809",
    "end": "3467980"
  },
  {
    "text": "normally saving great chunks of things then there are libraries that will do",
    "start": "3467980",
    "end": "3476049"
  },
  {
    "text": "that much quicker right EF core is better than EF six it a bulk load",
    "start": "3476049",
    "end": "3484290"
  },
  {
    "text": "[Music] undelete I'm I haven't time delete - I",
    "start": "3484290",
    "end": "3491109"
  },
  {
    "text": "think deletes aren't too bad Oh have you found that or just generated or just the",
    "start": "3491109",
    "end": "3506440"
  },
  {
    "text": "primary keys yeah so you you can delete",
    "start": "3506440",
    "end": "3513460"
  },
  {
    "text": "things just by creating a the entity with just the primary key you should go",
    "start": "3513460",
    "end": "3521739"
  },
  {
    "text": "to get around anyway I think one more",
    "start": "3521739",
    "end": "3528759"
  },
  {
    "text": "minute sir",
    "start": "3528759",
    "end": "3531989"
  },
  {
    "text": "yeah and so in in my book so going to dapper right absolutely fine fine EF",
    "start": "3542310",
    "end": "3552040"
  },
  {
    "text": "core is good but it's not perfect so you",
    "start": "3552040",
    "end": "3557230"
  },
  {
    "text": "know you use the EF core because it's quick to build right and then when you",
    "start": "3557230",
    "end": "3564340"
  },
  {
    "text": "get a problem you you decide what you're going to do and and going to dapper",
    "start": "3564340",
    "end": "3570990"
  },
  {
    "text": "could be a very good decision what I would say I've found that for big at the",
    "start": "3570990",
    "end": "3579600"
  },
  {
    "text": "queries that do a lot dapper is not that faster unless you've",
    "start": "3579600",
    "end": "3585490"
  },
  {
    "text": "got some better sequel to put in there because that was really quick because it",
    "start": "3585490",
    "end": "3590650"
  },
  {
    "text": "it you know because it it's so small but when the all the time is tiny in the",
    "start": "3590650",
    "end": "3596170"
  },
  {
    "text": "database it doesn't make much different yeah anyway I think that's it thank you",
    "start": "3596170",
    "end": "3602140"
  },
  {
    "text": "very much [Applause]",
    "start": "3602140",
    "end": "3606799"
  }
]