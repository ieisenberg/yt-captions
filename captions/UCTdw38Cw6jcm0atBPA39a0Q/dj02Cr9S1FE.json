[
  {
    "text": "uh hello and welcome everyone my name is pontes and I work as a security re",
    "start": "6359",
    "end": "11960"
  },
  {
    "text": "Searcher and I like to hack things and uh my name is Tobias and I like to build",
    "start": "11960",
    "end": "17439"
  },
  {
    "text": "secure applications um we both work at Omega point gamberg and uh we do",
    "start": "17439",
    "end": "25080"
  },
  {
    "text": "penetration tests and Security reviews so together we have a lot of experience both building and attacking",
    "start": "25080",
    "end": "31800"
  },
  {
    "text": "implementations with the oo and open connect and today we will show a few",
    "start": "31800",
    "end": "37800"
  },
  {
    "text": "things that can go bad in O2 based implementations even if you've done your best to follow the best practices and",
    "start": "37800",
    "end": "45480"
  },
  {
    "text": "security recommendations and before we get any further I want to point out that if you're not currently following",
    "start": "45480",
    "end": "51160"
  },
  {
    "text": "security recommendations and best practices you might have a lot worse problems than the ones we'll talk about here so going forward we simply assume",
    "start": "51160",
    "end": "58519"
  },
  {
    "text": "that you've done your your homework work as developers and Architects and invested in a uh solid solution and have",
    "start": "58519",
    "end": "65239"
  },
  {
    "text": "a good understanding of high security o and open you connect yeah so um the",
    "start": "65239",
    "end": "70960"
  },
  {
    "text": "focus for this uh presentation um you need to ah sorry you",
    "start": "70960",
    "end": "76520"
  },
  {
    "text": "like that so these are the topics for today and the focus for this presentation will be on security",
    "start": "76520",
    "end": "82640"
  },
  {
    "text": "challenges H and how to address them in the context of the uh backend for frontend pattern for o the this is well",
    "start": "82640",
    "end": "90640"
  },
  {
    "text": "documented in uh o best current practices for browser based applications",
    "start": "90640",
    "end": "95920"
  },
  {
    "text": "uh which is a really good RFC document read if if you if you like um uh we'll",
    "start": "95920",
    "end": "102479"
  },
  {
    "text": "do demos the first one will be with dend ented server but there are of course um",
    "start": "102479",
    "end": "108880"
  },
  {
    "text": "many other good products that you can use uh that fit your business requirements and so on like uh what zero",
    "start": "108880",
    "end": "115719"
  },
  {
    "text": "security AER ad and so on and um another good well-known token service is key",
    "start": "115719",
    "end": "122320"
  },
  {
    "text": "clock which we will use for the the last demo and um here pontus during a pentest",
    "start": "122320",
    "end": "130160"
  },
  {
    "text": "in December found an issue um concerning Dynamic redirect U which we will show",
    "start": "130160",
    "end": "136120"
  },
  {
    "text": "later but uh we want to point out that this talk is not about specific products",
    "start": "136120",
    "end": "141319"
  },
  {
    "text": "or framework so it's about the general o design challenges that you need to",
    "start": "141319",
    "end": "147560"
  },
  {
    "text": "address valid for most implementation with the open connect and and a yeah so",
    "start": "147560",
    "end": "153879"
  },
  {
    "text": "are there anyone in the room running keycloak some hands good good uh so the",
    "start": "153879",
    "end": "160200"
  },
  {
    "text": "last demo will be a vulnerability in iny Cloak that has been patched so this is a",
    "start": "160200",
    "end": "165519"
  },
  {
    "text": "part of a coordinated responsible disclosure we've worked closely with keycloak and they are fine with us",
    "start": "165519",
    "end": "172239"
  },
  {
    "text": "disclosing it here today but it it is the first time that I'm speaking about it so uh this this is news",
    "start": "172239",
    "end": "180599"
  },
  {
    "text": "um yeah so uh so with this um uh sort of cliffhanger we will go back to the back",
    "start": "180599",
    "end": "188280"
  },
  {
    "text": "end for front and pattern and to set the context for the first demo we will sort of try to mentally travel back in time",
    "start": "188280",
    "end": "194840"
  },
  {
    "text": "to about uh yeah 2019 and we look what what can that be",
    "start": "194840",
    "end": "200120"
  },
  {
    "text": "like yeah so remember 2019 before the pandemic apparently it was the the best",
    "start": "200120",
    "end": "205440"
  },
  {
    "text": "year ever um unfortunately it was not the best year ever for oo to best",
    "start": "205440",
    "end": "211799"
  },
  {
    "text": "practices so who hasn't updated their oo and open reconnect design and",
    "start": "211799",
    "end": "216959"
  },
  {
    "text": "implementation implementations and since then right and uh so this is what a",
    "start": "216959",
    "end": "222319"
  },
  {
    "text": "typical uh 2019 implementation looks like and uh just to point out that the",
    "start": "222319",
    "end": "229280"
  },
  {
    "text": "things that we talk about it concerns both openly connect and and oo and in this presentation we mostly say best",
    "start": "229280",
    "end": "236079"
  },
  {
    "text": "current practices for for oo um and uh that the context here is that we have a",
    "start": "236079",
    "end": "242480"
  },
  {
    "text": "system with high security requirements like in healthcare and finance uh so we",
    "start": "242480",
    "end": "248239"
  },
  {
    "text": "need to keep a good level of security uh so so we have a a token service um up up",
    "start": "248239",
    "end": "253799"
  },
  {
    "text": "to the right there and uh then we have a set of apis and um in reality this could",
    "start": "253799",
    "end": "259000"
  },
  {
    "text": "of course be 10 or hundreds of API hosts and in this demo we will have two just",
    "start": "259000",
    "end": "265520"
  },
  {
    "text": "to represent that there is more than one and uh the access model for our system",
    "start": "265520",
    "end": "270880"
  },
  {
    "text": "here is that the logged in user uh should be able to get products and the users order uh orders not other users",
    "start": "270880",
    "end": "279000"
  },
  {
    "text": "orders so that's important to keep in mind and and the user should not be able to get all orders of course reaching the",
    "start": "279000",
    "end": "286600"
  },
  {
    "text": "get all orders endpoint that endpoint is meant for an internal system integration and the that's the order processor there",
    "start": "286600",
    "end": "294320"
  },
  {
    "text": "so so this um access model is good to keep in mind when we do the demos and uh",
    "start": "294320",
    "end": "300360"
  },
  {
    "text": "then we have the um single page application it's a standalone Spa so that means that everything happens in",
    "start": "300360",
    "end": "306360"
  },
  {
    "text": "the browser in in JavaScript um and uh according to the 2019 best current",
    "start": "306360",
    "end": "312360"
  },
  {
    "text": "practice we we do openly connect code in in in the browser there and um we also",
    "start": "312360",
    "end": "318680"
  },
  {
    "text": "use something called Silent renew that's uh you're likely to use that H in order",
    "start": "318680",
    "end": "325319"
  },
  {
    "text": "to uh refresh the shortlived access tokens during the user session and it's",
    "start": "325319",
    "end": "330960"
  },
  {
    "text": "Al also common that we store those uh tokens in local or session",
    "start": "330960",
    "end": "336600"
  },
  {
    "text": "storage uh so and the and then the the code flow uh which you might be familiar",
    "start": "336600",
    "end": "343479"
  },
  {
    "text": "familiar with is just represented with one arrow in this uh and that's the token request but in reality there are",
    "start": "343479",
    "end": "350360"
  },
  {
    "text": "of course a lot of arrows going back and forth uh so but the it's important there",
    "start": "350360",
    "end": "355400"
  },
  {
    "text": "to to just understand that the token request goes from the browser the front end to the Token",
    "start": "355400",
    "end": "361960"
  },
  {
    "text": "service so uh so the goal here for for the attacker is to try and misuse this",
    "start": "361960",
    "end": "369400"
  },
  {
    "text": "and and get more data than it should be able to so let's see on this let's see if you can steal tokens and misuse this",
    "start": "369400",
    "end": "376520"
  },
  {
    "text": "in some way yes so time for demo yeah let's switch over to the demo uh so I have my browser here and to",
    "start": "376520",
    "end": "384280"
  },
  {
    "text": "the right I have a burp suit which allows us to to inspect the network traffic as we go along so first load our",
    "start": "384280",
    "end": "390759"
  },
  {
    "text": "single page application here we go um and to do",
    "start": "390759",
    "end": "396759"
  },
  {
    "text": "anything I first need to to log in by hitting that button I'm redirected to the um uh IDP in this case doing the",
    "start": "396759",
    "end": "405080"
  },
  {
    "text": "identity server and as I log in um a lot of",
    "start": "405080",
    "end": "411199"
  },
  {
    "text": "things happen um so the first thing that that happens is that I am after entering",
    "start": "411199",
    "end": "418319"
  },
  {
    "text": "my credentials I'm redirect back to the single page application with an authorization",
    "start": "418319",
    "end": "424000"
  },
  {
    "text": "code and that code is then sent back to the IDP uh and exchange for an ID token",
    "start": "424000",
    "end": "432120"
  },
  {
    "text": "an access token and and a refresh token yeah so that's token request was um and",
    "start": "432120",
    "end": "438639"
  },
  {
    "text": "after that I can access the functionality of the application retrieve my orders I can do some some",
    "start": "438639",
    "end": "445319"
  },
  {
    "text": "product search um and if we look at those API calls we can see that the access token is attached as a barer",
    "start": "445319",
    "end": "451240"
  },
  {
    "text": "token in the authorization header so far so good um and um one way of stealing",
    "start": "451240",
    "end": "461160"
  },
  {
    "text": "tokens is if a good way to do that if is if the application is vulnerable to",
    "start": "461160",
    "end": "466560"
  },
  {
    "text": "crossy scripting which is still a very common vulnerability especially in a bit",
    "start": "466560",
    "end": "471840"
  },
  {
    "text": "older applications uh and good news for us is that this application is super vulnerable through the search field here",
    "start": "471840",
    "end": "478800"
  },
  {
    "text": "it accepts and renders any HTML so it's a fantastic Vector for",
    "start": "478800",
    "end": "484000"
  },
  {
    "text": "us and even though in this scenario the the access token is just stored in local",
    "start": "484000",
    "end": "489840"
  },
  {
    "text": "storage so we could just uh get it from there and send it to to an attacker server um and use it like that we'll",
    "start": "489840",
    "end": "497599"
  },
  {
    "text": "instead go for the um the silent renew flow and the way that works is um when",
    "start": "497599",
    "end": "504800"
  },
  {
    "text": "the token is about to expire the application creates a hi an hidden ey frame in which it loads the um a page on",
    "start": "504800",
    "end": "512200"
  },
  {
    "text": "the IDP U and then the the single sign on cook is automatically attached to that that request and it gets a new code",
    "start": "512200",
    "end": "519518"
  },
  {
    "text": "and it um exchanges that code for a new new access token and if you've been paying",
    "start": "519519",
    "end": "525800"
  },
  {
    "text": "attention to the um uh request log you've seen that it's moved while I've been talking and that's because we have",
    "start": "525800",
    "end": "531200"
  },
  {
    "text": "very shortlived access tokens in this case um so to demonstrate that I have",
    "start": "531200",
    "end": "538600"
  },
  {
    "text": "set up an um an attacker server that uh is set up to to to receive the",
    "start": "538600",
    "end": "544920"
  },
  {
    "text": "authorization code and then exchange that for a an access token it also hosts",
    "start": "544920",
    "end": "550519"
  },
  {
    "text": "some some JavaScript which I will through the xss um vulnerability uh load",
    "start": "550519",
    "end": "557600"
  },
  {
    "text": "in and execute and what it does is create uh a silent Revenue iframe uh to",
    "start": "557600",
    "end": "562760"
  },
  {
    "text": "steal the authorization code so I'll just copy the payload here and now pay",
    "start": "562760",
    "end": "569120"
  },
  {
    "text": "ATT to this middle little box here so we got a code and we exchanged",
    "start": "569120",
    "end": "578120"
  },
  {
    "text": "that for an access token so now the attacker has has an access token it can use that to impersonate the the victim",
    "start": "578120",
    "end": "584600"
  },
  {
    "text": "user and perform arbitrary API calls yeah so not good and we should note that",
    "start": "584600",
    "end": "590560"
  },
  {
    "text": "Pon didn't steal the actual token he steals the code and act as the client",
    "start": "590560",
    "end": "596000"
  },
  {
    "text": "just as it designed to do and silently renewing Tok so and um and also uh we",
    "start": "596000",
    "end": "603680"
  },
  {
    "text": "use the fact that we can run code in the same origin as the application with a valid sess cookie to the Token service U",
    "start": "603680",
    "end": "610640"
  },
  {
    "text": "and there is a public client so it has no client secret because JavaScript can't keep secret so we can't use that",
    "start": "610640",
    "end": "618160"
  },
  {
    "text": "and uh yeah so uh so that's why we shouldn't do this in the front end um",
    "start": "618160",
    "end": "623680"
  },
  {
    "text": "anymore and uh yeah we have come back to the slides and this is what we saw here",
    "start": "623680",
    "end": "629680"
  },
  {
    "text": "he had the attack server and um",
    "start": "629680",
    "end": "634959"
  },
  {
    "text": "uh we are yeah the wrong window the wrong window not on my machine no",
    "start": "634959",
    "end": "640839"
  },
  {
    "text": "strange I know but there yeah uh so if you think about the picture",
    "start": "640839",
    "end": "648079"
  },
  {
    "text": "just saw we we had the attacker server and we uh we had the cross scripting",
    "start": "648079",
    "end": "653120"
  },
  {
    "text": "vulnerability and now is it so that was what we showed in the demo and",
    "start": "653120",
    "end": "658680"
  },
  {
    "text": "unfortunately cross scripting has been around for many years and it's still common to find of course and especially",
    "start": "658680",
    "end": "663880"
  },
  {
    "text": "maybe in older spa and older Frameworks um from 2019 or so uh and so if the",
    "start": "663880",
    "end": "670000"
  },
  {
    "text": "attacker can run in your execution context within your origin the attacker can do anything your application can do",
    "start": "670000",
    "end": "676600"
  },
  {
    "text": "like renewing tokens um um maybe you could have some sort of Defense in-depth",
    "start": "676600",
    "end": "682279"
  },
  {
    "text": "techniques like a solid cross um CSP in place content security policy uh but",
    "start": "682279",
    "end": "688600"
  },
  {
    "text": "unfortunately is often not the case for for most applications because they are hard to to get right uh and so there are",
    "start": "688600",
    "end": "696320"
  },
  {
    "text": "many ways for Pon here to steal tokens using process scripting um and if you",
    "start": "696320",
    "end": "701639"
  },
  {
    "text": "want to look more into this we can really recommend Philip the Rick's presentation from n security last year",
    "start": "701639",
    "end": "707399"
  },
  {
    "text": "which was really good on this topic and yeah so what do we do to to fix this and",
    "start": "707399",
    "end": "714040"
  },
  {
    "text": "the answer is obvious we move forward and follow the best current practice of",
    "start": "714040",
    "end": "719880"
  },
  {
    "text": "today h and um and then we take a look at that how we will and we here we have",
    "start": "719880",
    "end": "727600"
  },
  {
    "text": "refactored uh the spa uh to follow the current best practice and this means",
    "start": "727600",
    "end": "733519"
  },
  {
    "text": "that we use a backend for front and pattern and uh the spa here is almost",
    "start": "733519",
    "end": "738680"
  },
  {
    "text": "exactly the same the big difference here is that we have moved all openly connect was stuff",
    "start": "738680",
    "end": "746399"
  },
  {
    "text": "that that happens in the back end now and uh so so this means that we now have a confidential o client and that we have",
    "start": "746399",
    "end": "754600"
  },
  {
    "text": "no tokens in the front end anymore um uh so instead we need to protect the",
    "start": "754600",
    "end": "761440"
  },
  {
    "text": "session to the back and for front and with a secure cookie session and uh that really is secure we have done that",
    "start": "761440",
    "end": "767160"
  },
  {
    "text": "properly with cross site request fouryear protection and and so on that Philip talked about before before lunch",
    "start": "767160",
    "end": "772959"
  },
  {
    "text": "so no issues uh there and uh also since we now have a confidential client with a",
    "start": "772959",
    "end": "781240"
  },
  {
    "text": "that can keep a secret then we can use more security features like strong",
    "start": "781240",
    "end": "787519"
  },
  {
    "text": "client authentication with u uh Mutual TLS or or doop and and then we can also",
    "start": "787519",
    "end": "793399"
  },
  {
    "text": "use send the constrained access tokens following the best current practi or the",
    "start": "793399",
    "end": "799199"
  },
  {
    "text": "best practice from open Rec connect security profile FY for financial grade",
    "start": "799199",
    "end": "805040"
  },
  {
    "text": "um it's called but that also applies to any system with high security requirements like within Healthcare and",
    "start": "805040",
    "end": "812720"
  },
  {
    "text": "so on that's also a good read so there are no tokens to steal and and",
    "start": "812720",
    "end": "821240"
  },
  {
    "text": "as you can see we also have added um a Gateway a firewall a properly configured",
    "start": "821240",
    "end": "828000"
  },
  {
    "text": "web application firewall that's uh so now the get all orders endpoint it's not",
    "start": "828000",
    "end": "833880"
  },
  {
    "text": "even exposed to the internet anymore and the only thing that's exposed to the internet actually is the back end for",
    "start": "833880",
    "end": "839920"
  },
  {
    "text": "front end so so now PS try and steal all orders if you can yes I dare you I",
    "start": "839920",
    "end": "847199"
  },
  {
    "text": "double dare you let's go back to the demo and burp let me just clear the",
    "start": "847199",
    "end": "854360"
  },
  {
    "text": "history here and log out and I'll load up the next Spa so again to to do anything we",
    "start": "854360",
    "end": "863160"
  },
  {
    "text": "first need to to sign in use dender again",
    "start": "863160",
    "end": "870480"
  },
  {
    "text": "um if we look at the network request now that we with this new setup we we still",
    "start": "870480",
    "end": "875800"
  },
  {
    "text": "have the Au request and the authorization code going through the",
    "start": "875800",
    "end": "881240"
  },
  {
    "text": "browser but we have no token request because that happens between the back end for front end and the the token",
    "start": "881240",
    "end": "888639"
  },
  {
    "text": "service and if I do any of the API calls",
    "start": "888639",
    "end": "893839"
  },
  {
    "text": "um we we see that there is in fact no no authorization header and no token in the",
    "start": "893839",
    "end": "899320"
  },
  {
    "text": "in the request what we do have instead is this session cookie from from the",
    "start": "899320",
    "end": "904360"
  },
  {
    "text": "back end for front end uh and that cookie is secure uh only transmitted",
    "start": "904360",
    "end": "910000"
  },
  {
    "text": "over https it's also marked with HTTP only which means that it can't be",
    "start": "910000",
    "end": "915240"
  },
  {
    "text": "accessed from from JavaScript so even though this application is still uh vulnerable to to cross-site scripting we",
    "start": "915240",
    "end": "922639"
  },
  {
    "text": "cannot access that cookie and steal it and exfiltrate it to uh to our attacker",
    "start": "922639",
    "end": "928079"
  },
  {
    "text": "server also notice the host prefix on the cookie there which also enables security features in the browser exactly",
    "start": "928079",
    "end": "935120"
  },
  {
    "text": "but I mean we still use silent renew to to U renew our session we can we can try",
    "start": "935120",
    "end": "940319"
  },
  {
    "text": "the same exploit as as before um we'll try",
    "start": "940319",
    "end": "947279"
  },
  {
    "text": "that paste it here and sure enough we're able to to steal a code however when we",
    "start": "947279",
    "end": "954959"
  },
  {
    "text": "try to exchange that for an access token we get an error and from from the token Service uh the error is PR nondescript",
    "start": "954959",
    "end": "962360"
  },
  {
    "text": "it says invalid client but if we look in the window above here which is the um",
    "start": "962360",
    "end": "967959"
  },
  {
    "text": "the logs from Identity server we see that it says uh client secret validation",
    "start": "967959",
    "end": "973600"
  },
  {
    "text": "failed um because the our attacker server does not have the client secret for this client because well it's it's",
    "start": "973600",
    "end": "980959"
  },
  {
    "text": "secret uh so we can't use that to to steal tokens anymore should however note",
    "start": "980959",
    "end": "987399"
  },
  {
    "text": "that since we have a cross scripting vulnerability uh it's we're still vulnerable to something called session",
    "start": "987399",
    "end": "992880"
  },
  {
    "text": "writing so the any JavaScript running on this site can still access the apis",
    "start": "992880",
    "end": "998920"
  },
  {
    "text": "using the the cookie we just can't exfiltrate that cookie that means that our window of attack is much short",
    "start": "998920",
    "end": "1006680"
  },
  {
    "text": "smaller as soon as the the victim user navigates to another page or closes the tab that that attack window closes but",
    "start": "1006680",
    "end": "1015079"
  },
  {
    "text": "it's still vulnerable and and you should fix your cross scripting vulnerabilities anyway yeah so so that's all good yeah it's",
    "start": "1015079",
    "end": "1022040"
  },
  {
    "text": "good with confidential clients there as you can see um and but we also have this",
    "start": "1022040",
    "end": "1027520"
  },
  {
    "text": "third uh endpoint the get all orders endpoint and as Pon just said we have",
    "start": "1027520",
    "end": "1033360"
  },
  {
    "text": "limits if the attacker is running code within our application we have limited to just to proxy request and misuse the",
    "start": "1033360",
    "end": "1041000"
  },
  {
    "text": "users session so and then the user it doesn't have access to the get all",
    "start": "1041000",
    "end": "1046038"
  },
  {
    "text": "orders end points so so that's sort of sort of fine uh so so let so now the the",
    "start": "1046039",
    "end": "1052120"
  },
  {
    "text": "goal for is to try and break out of the user session and uh so let's let's see",
    "start": "1052120",
    "end": "1058000"
  },
  {
    "text": "if you you can do that with all those defenses in place that we have yes so we have the the get my orders uh endpoint",
    "start": "1058000",
    "end": "1065960"
  },
  {
    "text": "here and when when performing penetration tests um um you shouldn't I",
    "start": "1065960",
    "end": "1071200"
  },
  {
    "text": "mean you you don't really trust the the documentation you test other things you might fuss some some endpoints if you",
    "start": "1071200",
    "end": "1076840"
  },
  {
    "text": "are aware that there is an endpoint that appar a separate Endo that should not be public that returns all orders you might",
    "start": "1076840",
    "end": "1084240"
  },
  {
    "text": "try something like adding slash all here and we get",
    "start": "1084240",
    "end": "1092520"
  },
  {
    "text": "all orders not good so so so even if we I",
    "start": "1092520",
    "end": "1098840"
  },
  {
    "text": "mean how do that happens we had invested like a month in security had refactoring adding firewalls and all that things and",
    "start": "1098840",
    "end": "1106039"
  },
  {
    "text": "and just by changing that route we we we can access the the get all orders",
    "start": "1106039",
    "end": "1111320"
  },
  {
    "text": "API it shouldn't be possible so so um so to analyze this we we have gone back",
    "start": "1111320",
    "end": "1117640"
  },
  {
    "text": "here to to the to the drawing board and uh uh so so the the problem here it",
    "start": "1117640",
    "end": "1123440"
  },
  {
    "text": "seems to be some expected issue concerning the routing right so so let's start by looking",
    "start": "1123440",
    "end": "1130400"
  },
  {
    "text": "there so so what's the this is sort of a default uh proxy configuration uh so so",
    "start": "1130400",
    "end": "1136720"
  },
  {
    "text": "what's what's the issue with this one yeah so Dominic Meer talked yesterday about uh stars and wild cards in another",
    "start": "1136720",
    "end": "1144520"
  },
  {
    "text": "topic but sort of applies here as well can you see the the stars in the the match path statements here what they do",
    "start": "1144520",
    "end": "1151640"
  },
  {
    "text": "is basically that any requests to theorder API endpoint get proxied to uh",
    "start": "1151640",
    "end": "1160320"
  },
  {
    "text": "the the backend order API regardless of whether it's uh what comes after the the",
    "start": "1160320",
    "end": "1167559"
  },
  {
    "text": "final slash there yeah so so so this is of course great for the sort of developer experience and",
    "start": "1167559",
    "end": "1174480"
  },
  {
    "text": "availability everything just works out of the box without doing any any configuration but it's really bad for",
    "start": "1174480",
    "end": "1181000"
  },
  {
    "text": "confidentiality and integrity it's it's in a larger system it's hard to keep track of exactly which end points you",
    "start": "1181000",
    "end": "1188200"
  },
  {
    "text": "can hit from this back and for front and which act as a proxy from from the",
    "start": "1188200",
    "end": "1193640"
  },
  {
    "text": "internet and um so let's look at the system uh over once",
    "start": "1193640",
    "end": "1199799"
  },
  {
    "text": "more and um so so if we if we look at the back end for front here it it's",
    "start": "1199799",
    "end": "1205640"
  },
  {
    "text": "yourist of course to to proxy requests and uh it's quite common for you can see",
    "start": "1205640",
    "end": "1212360"
  },
  {
    "text": "we have two hosts here and uh but it's quite common that you you mix within the",
    "start": "1212360",
    "end": "1217919"
  },
  {
    "text": "same host or the microservice you have endpoints meant for login users and you have end points meant for system",
    "start": "1217919",
    "end": "1224799"
  },
  {
    "text": "Integrations uh so even if um I think all proxies they require that you",
    "start": "1224799",
    "end": "1231240"
  },
  {
    "text": "specify an allow list for which hosts you can route to but but that may not",
    "start": "1231240",
    "end": "1236840"
  },
  {
    "text": "provide any protection because the back and for front on here it will need to access the order host because it it",
    "start": "1236840",
    "end": "1243440"
  },
  {
    "text": "needs to reach one endpoint there so so uh so that means that in a worst case",
    "start": "1243440",
    "end": "1248480"
  },
  {
    "text": "scenario the back end for frontend will be appr proxy to all internal apis",
    "start": "1248480",
    "end": "1254200"
  },
  {
    "text": "anyway and so but but I mean um they they are apis and they should be in 2019",
    "start": "1254200",
    "end": "1262159"
  },
  {
    "text": "they were exposed to the public internet so so so why is that so bad that we we we can end up in the get all orders end",
    "start": "1262159",
    "end": "1269240"
  },
  {
    "text": "points yeah so and that's because the back and for front and has two responsibilities a it's a reverse proxy",
    "start": "1269240",
    "end": "1277080"
  },
  {
    "text": "routes uh request but it also attaches uh the users's access token to the",
    "start": "1277080",
    "end": "1284200"
  },
  {
    "text": "requests yeah so uh so yeah but but then again I mean it is an access token",
    "start": "1284200",
    "end": "1290960"
  },
  {
    "text": "connected to the user session uh giving access for what the user should have",
    "start": "1290960",
    "end": "1296240"
  },
  {
    "text": "access too so so so why is that so bad that you get an access token with the",
    "start": "1296240",
    "end": "1301360"
  },
  {
    "text": "request to the wrong endpoint that shouldn't be a problem if your API does proper access control but the question",
    "start": "1301360",
    "end": "1308200"
  },
  {
    "text": "is does your average API do proper Access Control uh",
    "start": "1308200",
    "end": "1313840"
  },
  {
    "text": "no um at least in my experience um pretty much any system of given",
    "start": "1313840",
    "end": "1318880"
  },
  {
    "text": "complexity has some issues with Access Control authentication um and if we look at the",
    "start": "1318880",
    "end": "1325880"
  },
  {
    "text": "overas top 10 for API security we can see that four of the five top points all",
    "start": "1325880",
    "end": "1331360"
  },
  {
    "text": "relate to authentication or authorization um so it's a very common",
    "start": "1331360",
    "end": "1337360"
  },
  {
    "text": "problem and something that's quite hard to to get right in each and every place",
    "start": "1337360",
    "end": "1342480"
  },
  {
    "text": "yeah so so what makes it hard in in this case is that often the back end for front end it needs to get used data from",
    "start": "1342480",
    "end": "1351000"
  },
  {
    "text": "maybe most of those microservices so there will be a lot of Scopes and a lot of audiences in this token so it's it's",
    "start": "1351000",
    "end": "1358400"
  },
  {
    "text": "hard for the ones building the apis to to do proper access control with with",
    "start": "1358400",
    "end": "1363480"
  },
  {
    "text": "such a powerful token and um so we will go into more on",
    "start": "1363480",
    "end": "1370760"
  },
  {
    "text": "that later why that is hard to avoid and how we can address that but but besides API Access Control uh there are other",
    "start": "1370760",
    "end": "1377960"
  },
  {
    "text": "things to as well for us the successful attack that we show there there are actually Four issues that needs to be",
    "start": "1377960",
    "end": "1384000"
  },
  {
    "text": "present at the same time in order to to succeed and uh we take a look at that",
    "start": "1384000",
    "end": "1389799"
  },
  {
    "text": "yeah so F first off as an attack we need to to have a low privileged act session",
    "start": "1389799",
    "end": "1396120"
  },
  {
    "text": "to the to the system um that can be super easy for some systems because there's some systems allow you to just",
    "start": "1396120",
    "end": "1402640"
  },
  {
    "text": "register an account um but in other cases there are many good ways of",
    "start": "1402640",
    "end": "1407720"
  },
  {
    "text": "stealing credentials uh fishing is a big problem for many organizations and uh as the old saying",
    "start": "1407720",
    "end": "1413919"
  },
  {
    "text": "goes hackers don't break in they log in um many back and for front end um",
    "start": "1413919",
    "end": "1422120"
  },
  {
    "text": "clients that we see uh have um access to call Api uh all API hosts on on internal",
    "start": "1422120",
    "end": "1430559"
  },
  {
    "text": "networks uh it's very uncommon I believe for for people to to remember to do the",
    "start": "1430559",
    "end": "1437840"
  },
  {
    "text": "old boring Network segmentation and IP plans in the cloud uh we often see BFFs with uh C",
    "start": "1437840",
    "end": "1445120"
  },
  {
    "text": "this casual routing with with wild cards that just forwards any requests to the underlying API",
    "start": "1445120",
    "end": "1451559"
  },
  {
    "text": "hosts and finally uh authorization bugs uh we we we find those in practically",
    "start": "1451559",
    "end": "1458520"
  },
  {
    "text": "every system that we test yeah so so at first it might seem likely that uh all",
    "start": "1458520",
    "end": "1464360"
  },
  {
    "text": "those four uh things are present at the same time but if we look at them like this it's really not that unlikely and it's",
    "start": "1464360",
    "end": "1471159"
  },
  {
    "text": "definitely a risk worth considering so before we look at how we can lower the",
    "start": "1471159",
    "end": "1476960"
  },
  {
    "text": "risk of this kind of vul vulnerability we want to point point out once more",
    "start": "1476960",
    "end": "1482360"
  },
  {
    "text": "that if you do not follow the best current practices you could have worse issues to address than the things that",
    "start": "1482360",
    "end": "1488200"
  },
  {
    "text": "we we talk about so how should we address this uh",
    "start": "1488200",
    "end": "1494600"
  },
  {
    "text": "well as always um this sort of sound uh security principles will guide us in the",
    "start": "1494600",
    "end": "1501520"
  },
  {
    "text": "right way zero trust Le privilege and defense in depth we we should uh build",
    "start": "1501520",
    "end": "1507159"
  },
  {
    "text": "um strong Solutions with defenses in multiple layers and and uh we should not",
    "start": "1507159",
    "end": "1513960"
  },
  {
    "text": "trust that um the Gateway does access control for us the API needs to um be",
    "start": "1513960",
    "end": "1520880"
  },
  {
    "text": "able to do proper access control on its own um and but to talk about all this is",
    "start": "1520880",
    "end": "1527600"
  },
  {
    "text": "took of his own and we will just focus on on two things here for in this presentation that's uh to implement",
    "start": "1527600",
    "end": "1533480"
  },
  {
    "text": "proper API access control and uh the routing that the BFF should only route",
    "start": "1533480",
    "end": "1540120"
  },
  {
    "text": "valid requests and not to the system integration endpoint so let's uh let's",
    "start": "1540120",
    "end": "1547520"
  },
  {
    "text": "take a look at that and how we can can fix that yeah so the solution is quite",
    "start": "1547520",
    "end": "1552559"
  },
  {
    "text": "simple it's using strict um uh using a strict allow list where you specify the",
    "start": "1552559",
    "end": "1557919"
  },
  {
    "text": "exact method and path for each endpoint that you should be able to reach um that",
    "start": "1557919",
    "end": "1563880"
  },
  {
    "text": "gets super simple when you only have a system with two two end points um it",
    "start": "1563880",
    "end": "1569000"
  },
  {
    "text": "might be um um a little bit harder to when you have hundreds of of end points",
    "start": "1569000",
    "end": "1574440"
  },
  {
    "text": "are more complicated but using uh being glazing reverting to back to to wild",
    "start": "1574440",
    "end": "1580120"
  },
  {
    "text": "cards will sooner or later bite you by the ass um so so don't try to be clever",
    "start": "1580120",
    "end": "1586520"
  },
  {
    "text": "there it's really hard and yeah so so so with this change then we get the the uh overview like this",
    "start": "1586520",
    "end": "1595120"
  },
  {
    "text": "yeah uh so now um only the the exact uh methods and paths that we expect are",
    "start": "1595120",
    "end": "1600919"
  },
  {
    "text": "able to rout through the back and front and through the Gateway the get all orders Endo is actually no longer",
    "start": "1600919",
    "end": "1607919"
  },
  {
    "text": "accessible from uh the internet um so with this change in the",
    "start": "1607919",
    "end": "1613440"
  },
  {
    "text": "routing configuration we have successfully mitigated the vulnerability however there is still uh",
    "start": "1613440",
    "end": "1620840"
  },
  {
    "text": "the issue of improper Access Control we haven't solved that uh if we would have solved that uh it wouldn't matter as",
    "start": "1620840",
    "end": "1628320"
  },
  {
    "text": "much if the uh get all orders endpoint was was public um but it can be hard to to",
    "start": "1628320",
    "end": "1636520"
  },
  {
    "text": "address um the access control issues uh and next up we'll we'll look at the the",
    "start": "1636520",
    "end": "1642200"
  },
  {
    "text": "scope challenges the the back and for front and pattern might might introduce yep so",
    "start": "1642200",
    "end": "1649799"
  },
  {
    "text": "so but before we take a look at the scope challenges uh we take a look at the initial uh off request with the code",
    "start": "1649799",
    "end": "1657679"
  },
  {
    "text": "flow code flow that will always go through the browser even if we do the back end for frontend uh thing and",
    "start": "1657679",
    "end": "1664840"
  },
  {
    "text": "um uh this means that by Design the user or the attacker can change all of these",
    "start": "1664840",
    "end": "1671240"
  },
  {
    "text": "parameters that that we see here uh so uh so so all the Scopes that a client",
    "start": "1671240",
    "end": "1678200"
  },
  {
    "text": "has been configured to be able to use is the user or attacker able to add to to",
    "start": "1678200",
    "end": "1684720"
  },
  {
    "text": "uh this request um and why why can that be be be so bad well SC it's quite easy",
    "start": "1684720",
    "end": "1692279"
  },
  {
    "text": "to to misconfigure Scopes um to add them by mistake or just add all available",
    "start": "1692279",
    "end": "1698120"
  },
  {
    "text": "Scopes to make things work and you create a ticket remove all Scopes before going live and so on um it's also quite",
    "start": "1698120",
    "end": "1704519"
  },
  {
    "text": "easy to to reuse clients for multiple applications or or or um or",
    "start": "1704519",
    "end": "1710279"
  },
  {
    "text": "roles yeah so it's it's likely that an attacker can add um more Scopes to the",
    "start": "1710279",
    "end": "1716919"
  },
  {
    "text": "access token than the client actually needs U and um an example if if you",
    "start": "1716919",
    "end": "1725640"
  },
  {
    "text": "combine um a client which is used for a user to log in with a code flow with",
    "start": "1725640",
    "end": "1731720"
  },
  {
    "text": "client credentials re sort of use the same client for both scenarios then that means that the the user that logins will",
    "start": "1731720",
    "end": "1738360"
  },
  {
    "text": "have access to the same Scopes as the internal system integration and has and uh and then if you have apis that make",
    "start": "1738360",
    "end": "1747440"
  },
  {
    "text": "authorization decisions based on just a valid token and Scopes then you you will",
    "start": "1747440",
    "end": "1752480"
  },
  {
    "text": "might have a problem there but I mean yeah that's Scopes but we have a lot of other uh interesting",
    "start": "1752480",
    "end": "1759039"
  },
  {
    "text": "parameters to that we can modify as malicious users or or attackers and",
    "start": "1759039",
    "end": "1764360"
  },
  {
    "text": "let's have a look at a another demo y",
    "start": "1764360",
    "end": "1770000"
  },
  {
    "text": "um so I'll load up this example um in this demo this is not the vulnerability",
    "start": "1770000",
    "end": "1777080"
  },
  {
    "text": "demo even though we're using keycloak here uh um so here we have",
    "start": "1777080",
    "end": "1783360"
  },
  {
    "text": "um um now we're using the key clo IDP instead so we can log in um that's",
    "start": "1783360",
    "end": "1790360"
  },
  {
    "text": "fine uh so it works uh if we log out and log back again here we have the the",
    "start": "1790360",
    "end": "1796320"
  },
  {
    "text": "authorization request and here here we have all those parameters that we showed on the slide we have the the client ID",
    "start": "1796320",
    "end": "1802880"
  },
  {
    "text": "we have a redirect [Music] URI um we have the response type code",
    "start": "1802880",
    "end": "1810000"
  },
  {
    "text": "here that we want to use the the code flow so so we still have a back in for front end with no tokens in the front",
    "start": "1810000",
    "end": "1815880"
  },
  {
    "text": "end secure C all that but let's see if we can steal a token anyway yeah because",
    "start": "1815880",
    "end": "1821640"
  },
  {
    "text": "what happens if I change the response type to to token and log in well we got an error",
    "start": "1821640",
    "end": "1830559"
  },
  {
    "text": "um and that's because we didn't get an authorization code which the application expects but we did get a lot of things",
    "start": "1830559",
    "end": "1837399"
  },
  {
    "text": "here in the URL fragment we we got a state we got a session",
    "start": "1837399",
    "end": "1843120"
  },
  {
    "text": "State we got an issuer and it's really exciting now yeah",
    "start": "1843120",
    "end": "1850399"
  },
  {
    "text": "and we got an access token so in this case the the client was misconfigured to",
    "start": "1850399",
    "end": "1855960"
  },
  {
    "text": "to allow both the code flow and the implicit flow maybe because you in 2019",
    "start": "1855960",
    "end": "1862399"
  },
  {
    "text": "uh ran the implicit flow which you shouldn't be using anymore and you have refactored but you forgot to clean up",
    "start": "1862399",
    "end": "1867919"
  },
  {
    "text": "your client configuration so you still had the implicit flow enabled for this",
    "start": "1867919",
    "end": "1874000"
  },
  {
    "text": "client could be yeah but there are uh also more parameters for us to to change",
    "start": "1876320",
    "end": "1883600"
  },
  {
    "text": "and and modify uh like the redirect U so what could go wrong if we we try and change that yes so about redirect um",
    "start": "1883600",
    "end": "1892880"
  },
  {
    "text": "this is what the the O specification says about them um redirect uis must be",
    "start": "1892880",
    "end": "1898679"
  },
  {
    "text": "configured beforehand uh as part of the client configuration um and the token",
    "start": "1898679",
    "end": "1904559"
  },
  {
    "text": "service must verify that the supplied redirect URI in the authorization",
    "start": "1904559",
    "end": "1909720"
  },
  {
    "text": "request actually matches one of the configured U uh and when doing so you should use",
    "start": "1909720",
    "end": "1915760"
  },
  {
    "text": "something called Simple string comparison which is a fancy way of saying you should compare them character",
    "start": "1915760",
    "end": "1921000"
  },
  {
    "text": "by character and it also specifies that the redirect uh URI must be an absolute",
    "start": "1921000",
    "end": "1929799"
  },
  {
    "text": "URI so looking at keycloak uh it comes with a couple of",
    "start": "1929799",
    "end": "1937039"
  },
  {
    "text": "default uh openly connect clients for example the security admin console client which is used to access the admin",
    "start": "1937039",
    "end": "1944960"
  },
  {
    "text": "UI uh now I understand if it's a littleit small for you to see but the the redirect URI configuration that's",
    "start": "1944960",
    "end": "1951360"
  },
  {
    "text": "highlighted uh it says that the following URI is allowed SL",
    "start": "1951360",
    "end": "1956440"
  },
  {
    "text": "admaster console slst star so keycloak supports wild cards as part of the",
    "start": "1956440",
    "end": "1962639"
  },
  {
    "text": "redirect URI as an extra feature yes uh so this deviates from from the",
    "start": "1962639",
    "end": "1968240"
  },
  {
    "text": "specification and uh best practices so we know we're out on thin eyes here uh",
    "start": "1968240",
    "end": "1975799"
  },
  {
    "text": "but what can go wrong here we we do at least have a prefix that that must match and we have also have the the root URL",
    "start": "1975799",
    "end": "1983159"
  },
  {
    "text": "so if this is running on example.com the redirect URL must be htps",
    "start": "1983159",
    "end": "1989159"
  },
  {
    "text": "col um example.com admin console slash something so we",
    "start": "1989159",
    "end": "1995679"
  },
  {
    "text": "should end up in this at the same host anyway that's the idea exactly but it",
    "start": "1995679",
    "end": "2001799"
  },
  {
    "text": "turns out that using multiple tricks such as double URL encoding HTML entity",
    "start": "2001799",
    "end": "2008320"
  },
  {
    "text": "encoding um HTP basic or URL formatting as well as fiddling a bit with the",
    "start": "2008320",
    "end": "2014639"
  },
  {
    "text": "response mode parameter we're able to construct this fun redirect URI which",
    "start": "2014639",
    "end": "2021039"
  },
  {
    "text": "passes the redirect URI validation but instead of sending the",
    "start": "2021039",
    "end": "2026639"
  },
  {
    "text": "authorization code or access token to the keycloak instance it sends it to example.com",
    "start": "2026639",
    "end": "2034080"
  },
  {
    "text": "um so this is an open direct vulnerability in in keycloak that that",
    "start": "2034519",
    "end": "2040799"
  },
  {
    "text": "um we reported in December simply a bug with the star function it wasn't meant",
    "start": "2040799",
    "end": "2045960"
  },
  {
    "text": "to work this way exactly um and this affects all keycloak or clients using",
    "start": "2045960",
    "end": "2052118"
  },
  {
    "text": "redirect uis containing wild cards it's been patched uh in keycloak 2304 which",
    "start": "2052119",
    "end": "2059520"
  },
  {
    "text": "was released earlier this week um so this is quite quite new so",
    "start": "2059520",
    "end": "2064760"
  },
  {
    "text": "you should go home and update your keycloak instances if you haven't done it already um so we've worked closely",
    "start": "2064760",
    "end": "2071440"
  },
  {
    "text": "with keycloak throughout the reporting process um and they've acted really quickly developing and deploying uh or",
    "start": "2071440",
    "end": "2079440"
  },
  {
    "text": "releasing the patch and they have signed off on on us disclosing it here here today I won't go to through all of the",
    "start": "2079440",
    "end": "2087440"
  },
  {
    "text": "details how we ended up with this URL if you want the technical details you can go and read them on the um on on our",
    "start": "2087440",
    "end": "2095599"
  },
  {
    "text": "blog where where we have a link here uh but with that I think it's time for",
    "start": "2095599",
    "end": "2102079"
  },
  {
    "text": "us to uh do a demo of",
    "start": "2102079",
    "end": "2106640"
  },
  {
    "text": "it so let's see here here we have the the key",
    "start": "2107960",
    "end": "2113200"
  },
  {
    "text": "clo admin console and here we have the authorized URI",
    "start": "2113200",
    "end": "2119160"
  },
  {
    "text": "again uh but we don't want to use the the standard authorized URI we want to use my special authorized URI",
    "start": "2119160",
    "end": "2128359"
  },
  {
    "text": "uh in this scenario we will not send the the code to um to example.com we will",
    "start": "2128359",
    "end": "2134760"
  },
  {
    "text": "instead send it to BP collaborator so we can see it instead paste it here and so when I sign",
    "start": "2134760",
    "end": "2142480"
  },
  {
    "text": "in here I expect um to receive the uh the authorization code in in the",
    "start": "2142480",
    "end": "2148240"
  },
  {
    "text": "right",
    "start": "2148240",
    "end": "2150520"
  },
  {
    "text": "window do p got some requests",
    "start": "2153640",
    "end": "2159640"
  },
  {
    "text": "that was the get we have the post it gets sent as a JWT but if we decode now",
    "start": "2163280",
    "end": "2170440"
  },
  {
    "text": "we can find the code and I copy the code and this is a",
    "start": "2170440",
    "end": "2175920"
  },
  {
    "text": "public client so I can just create a token request paste the code send",
    "start": "2175920",
    "end": "2182800"
  },
  {
    "text": "it and get the access token yeah so so uh we should note that",
    "start": "2182800",
    "end": "2190319"
  },
  {
    "text": "this is a good example of The Importance of Being secured by Design and limit attack vectors uh and avoid extra",
    "start": "2190319",
    "end": "2198400"
  },
  {
    "text": "features uh perhaps and uh because it's hard for the development team U building",
    "start": "2198400",
    "end": "2204680"
  },
  {
    "text": "this wild card functionality to understand how it can be misused and identify identify a test case like this",
    "start": "2204680",
    "end": "2212800"
  },
  {
    "text": "like the one pontis discovered and this is the important",
    "start": "2212800",
    "end": "2218599"
  },
  {
    "text": "to understand both as developers of the a server but also for us using this",
    "start": "2218599",
    "end": "2224480"
  },
  {
    "text": "service and uh configuring it because um even if you can enable this Dynamic",
    "start": "2224480",
    "end": "2232400"
  },
  {
    "text": "redirect your you shouldn't because then you step away from the best current practices by act adding the starter so",
    "start": "2232400",
    "end": "2238920"
  },
  {
    "text": "so even if you don't have the possibility to patch then maybe you can remove the stars and that would also",
    "start": "2238920",
    "end": "2244280"
  },
  {
    "text": "sort of solve the problem for you uh and uh um so it's important to stay on the",
    "start": "2244280",
    "end": "2249440"
  },
  {
    "text": "safe side and stick to the best current practice and in open connect FY it would",
    "start": "2249440",
    "end": "2254599"
  },
  {
    "text": "look something like look like this and um and as you can see in the second line",
    "start": "2254599",
    "end": "2261480"
  },
  {
    "text": "here we let's mention the shall use pushed authorization requests and uh as",
    "start": "2261480",
    "end": "2267880"
  },
  {
    "text": "was Dominic berer talked about the par in depth yesterday and you can read more",
    "start": "2267880",
    "end": "2272960"
  },
  {
    "text": "about that online we won't explain more here but uh the AU request looks uh then",
    "start": "2272960",
    "end": "2279560"
  },
  {
    "text": "if we use par then it will look like this yeah uh and then we just have the",
    "start": "2279560",
    "end": "2284720"
  },
  {
    "text": "uh request request URI which references all the parameters in the original um Au",
    "start": "2284720",
    "end": "2291640"
  },
  {
    "text": "request uh so there's pretty much no parameters for for an attacker or malicious user to to",
    "start": "2291640",
    "end": "2298560"
  },
  {
    "text": "modify so uh back to scope issues and um uh we have um",
    "start": "2298560",
    "end": "2309319"
  },
  {
    "text": "to to sort of summarize that we we have the this sort of defenses and and and insights here and uh uh we should of",
    "start": "2309319",
    "end": "2317359"
  },
  {
    "text": "course assert Le privilege for for configuration for both for the client there and uh we shouldn't mix code and",
    "start": "2317359",
    "end": "2325000"
  },
  {
    "text": "client credentials for the same client um or support implicit anymore so so",
    "start": "2325000",
    "end": "2332480"
  },
  {
    "text": "keep that clean U and um do not base sensitive operations uh authorization",
    "start": "2332480",
    "end": "2340480"
  },
  {
    "text": "for those on just a valid token and and Scopes use something more like perhaps",
    "start": "2340480",
    "end": "2345760"
  },
  {
    "text": "client ID or authentication method and and so on and follow the best current",
    "start": "2345760",
    "end": "2351440"
  },
  {
    "text": "practice and uh don't uh use those wild cards configuration uh either in the",
    "start": "2351440",
    "end": "2358079"
  },
  {
    "text": "routing or in in the redirect your eyes um uh so um now to another scope issue",
    "start": "2358079",
    "end": "2365920"
  },
  {
    "text": "and uh why it's so easy to end up with kind of global access token in in this",
    "start": "2365920",
    "end": "2372720"
  },
  {
    "text": "back and for front and scenario we're having an architecture that looks uh like this uh we have the",
    "start": "2372720",
    "end": "2380240"
  },
  {
    "text": "back and front and then a set of apis and it could be a lot of apis there and um and then we so we get an access token",
    "start": "2380240",
    "end": "2388319"
  },
  {
    "text": "token a and that needs to be valid for all apis so we will have all Scopes and all audiences in that token and it could",
    "start": "2388319",
    "end": "2394640"
  },
  {
    "text": "also look like this and uh there is a sh and that could be of course many hop",
    "start": "2394640",
    "end": "2400480"
  },
  {
    "text": "hops there and and uh that is a challenge for o implementations to to",
    "start": "2400480",
    "end": "2406280"
  },
  {
    "text": "handle that but uh so that this can become quite large in an large",
    "start": "2406280",
    "end": "2411880"
  },
  {
    "text": "organization and uh it's not that uncommon that the token becomes so large it doesn't fit in the htb header anymore",
    "start": "2411880",
    "end": "2419040"
  },
  {
    "text": "and uh if you run into that and you solve that by increasing the header size",
    "start": "2419040",
    "end": "2424760"
  },
  {
    "text": "and you sort of know that you're on the wrong path in your in your scope design and maybe need to re rethink it um and",
    "start": "2424760",
    "end": "2431599"
  },
  {
    "text": "deal with it in a better way uh so what what can we do to sort of have least",
    "start": "2431599",
    "end": "2438240"
  },
  {
    "text": "privilege in our access token so we don't have this Global access access token uh a common pattern is to do like",
    "start": "2438240",
    "end": "2446240"
  },
  {
    "text": "this uh you get the token a there but that's only valid for API 1 and then API",
    "start": "2446240",
    "end": "2453680"
  },
  {
    "text": "1 will use client credentials and get a token for API 2 and then another token",
    "start": "2453680",
    "end": "2459640"
  },
  {
    "text": "for API 3 and uh then we have solved the sort of scope issue here because we we",
    "start": "2459640",
    "end": "2465760"
  },
  {
    "text": "have least privilege we have just the Scopes and audiences we need for each request there uh so so so that is good",
    "start": "2465760",
    "end": "2473160"
  },
  {
    "text": "but U we we we lose another thing here and that's if the traceability and",
    "start": "2473160",
    "end": "2480640"
  },
  {
    "text": "accountability because uh the user log in in the back and front and get a token and the the new tokens here they are not",
    "start": "2480640",
    "end": "2487880"
  },
  {
    "text": "really maybe attached to the user session anymore so if that's important for us then we need to do something",
    "start": "2487880",
    "end": "2494160"
  },
  {
    "text": "better and um that is a token exchange",
    "start": "2494160",
    "end": "2499200"
  },
  {
    "text": "and also known as on behalf of and uh uh so it it works almost the same it's uh",
    "start": "2499200",
    "end": "2506319"
  },
  {
    "text": "we get token a and then we exchange token a for token b or token C and if we",
    "start": "2506319",
    "end": "2512319"
  },
  {
    "text": "look at how the token will end up then we can see that the scoping is the same",
    "start": "2512319",
    "end": "2517560"
  },
  {
    "text": "uh but now we get this act claim in the token that can show this Shain of of U",
    "start": "2517560",
    "end": "2524920"
  },
  {
    "text": "of the the request chain so so we can verify that and and keep the the traceability and uh and prove that the",
    "start": "2524920",
    "end": "2533040"
  },
  {
    "text": "uh the user initiated this operation or or request uh so so uh so please",
    "start": "2533040",
    "end": "2539599"
  },
  {
    "text": "consider token exchange if if this is important for you and um yeah uh we",
    "start": "2539599",
    "end": "2546920"
  },
  {
    "text": "should also note that even if we do token exchange and things like this we",
    "start": "2546920",
    "end": "2552040"
  },
  {
    "text": "still have the session writing problem that that hasn't been solved so so that that's always there if your BFF is",
    "start": "2552040",
    "end": "2559760"
  },
  {
    "text": "vulnerable yeah yeah if your B yeah of course uh so with with that um we we",
    "start": "2559760",
    "end": "2567319"
  },
  {
    "text": "have shown how to to build uh secure O2 and open connect uh implementations",
    "start": "2567319",
    "end": "2572559"
  },
  {
    "text": "following the best current practices and how to avoid some of the common pitfalls and",
    "start": "2572559",
    "end": "2579040"
  },
  {
    "text": "misconfigurations uh We've also addressed the the routing and scope issues and now it's time for us to to",
    "start": "2579040",
    "end": "2586880"
  },
  {
    "text": "summarize so first of all uh please read the and follow the best current",
    "start": "2586880",
    "end": "2592920"
  },
  {
    "text": "practices uh for O2 and openly connect the the os2 one and FY Financial uh",
    "start": "2592920",
    "end": "2601240"
  },
  {
    "text": "grade um that's a good places to start to finding rfcs and so on yeah uh um and",
    "start": "2601240",
    "end": "2607520"
  },
  {
    "text": "both those do two documents are actually quite easy to read and digest and understand so it's uh uh they're much",
    "start": "2607520",
    "end": "2614960"
  },
  {
    "text": "easier to to uh to understand than the original core O2 specification also uh stop handling",
    "start": "2614960",
    "end": "2622720"
  },
  {
    "text": "access tokens in JavaScript front ends instead opt for using a back and for",
    "start": "2622720",
    "end": "2628079"
  },
  {
    "text": "front end with a strict allow list so to not um let your BFF be a vector for",
    "start": "2628079",
    "end": "2633400"
  },
  {
    "text": "authenticated service side request for during yeah and um as always uh make sure to do",
    "start": "2633400",
    "end": "2641599"
  },
  {
    "text": "proper Access Control in the apis uh do not trust gateways and other things will",
    "start": "2641599",
    "end": "2648440"
  },
  {
    "text": "do that for you uh so so so assert that you follow the principle of this",
    "start": "2648440",
    "end": "2654079"
  },
  {
    "text": "privilege uh but also use defense in depth yeah and uh as always uh don't be",
    "start": "2654079",
    "end": "2663079"
  },
  {
    "text": "vulnerable to cross scripting uh employ uh proper output and code and perhaps add District",
    "start": "2663079",
    "end": "2668760"
  },
  {
    "text": "CSP um then uh that's it for us uh if you want to know more about absc topics",
    "start": "2668760",
    "end": "2676319"
  },
  {
    "text": "um we have written a lot quite a couple of articles that are published on our security blog you can also find the the",
    "start": "2676319",
    "end": "2683520"
  },
  {
    "text": "write up for the key clock vulnerability on there uh there's also links to some",
    "start": "2683520",
    "end": "2688720"
  },
  {
    "text": "other Talks by by meeting tobs and some other colleagues thank you thank",
    "start": "2688720",
    "end": "2693990"
  },
  {
    "text": "[Applause] [Music] you",
    "start": "2693990",
    "end": "2699040"
  },
  {
    "text": "any",
    "start": "2700760",
    "end": "2703160"
  },
  {
    "text": "questions",
    "start": "2718680",
    "end": "2721680"
  },
  {
    "text": "yeah yeah so um the question was about the mobile clients and how they should",
    "start": "2725960",
    "end": "2732800"
  },
  {
    "text": "should handle the the the open connector or and uh there the the recommendation",
    "start": "2732800",
    "end": "2740880"
  },
  {
    "text": "is to do the code flow uh but to do it in in the um in the mo mobile app uh",
    "start": "2740880",
    "end": "2748599"
  },
  {
    "text": "this means that the the the mobile app will be a public client using Code pixie",
    "start": "2748599",
    "end": "2753800"
  },
  {
    "text": "the code pixie flow um but if um so so that's not good because we will",
    "start": "2753800",
    "end": "2761599"
  },
  {
    "text": "have tokens in on a device that we are that we don't control but the um mobile",
    "start": "2761599",
    "end": "2767720"
  },
  {
    "text": "device is um there our application is more",
    "start": "2767720",
    "end": "2774160"
  },
  {
    "text": "separated from from other because it's it doesn't run run in in the browser in",
    "start": "2774160",
    "end": "2779800"
  },
  {
    "text": "in the same way as as a standalone JavaScript Spa but yeah so it's it's not",
    "start": "2779800",
    "end": "2785520"
  },
  {
    "text": "um perfect but but it's uh yeah that's the way it is using the the",
    "start": "2785520",
    "end": "2791280"
  },
  {
    "text": "system browser for for the",
    "start": "2791280",
    "end": "2794920"
  },
  {
    "text": "log other questions",
    "start": "2797200",
    "end": "2801838"
  },
  {
    "text": "yeah",
    "start": "2802240",
    "end": "2805240"
  },
  {
    "text": "yeah yeah it was mostly to to symbolize that the",
    "start": "2813720",
    "end": "2819520"
  },
  {
    "text": "the BFF is of course publicly exposed to the internet while the underlying apis are not so it",
    "start": "2819520",
    "end": "2827240"
  },
  {
    "text": "was yeah yeah",
    "start": "2828640",
    "end": "2832359"
  },
  {
    "text": "yes so so we so so the question was about the we had in the system over we",
    "start": "2839160",
    "end": "2846440"
  },
  {
    "text": "you can show that perhaps we had the Gateway behind the back and front and there yeah and that was just to show",
    "start": "2846440",
    "end": "2852720"
  },
  {
    "text": "that uh you have a network segment where you aren't exposed to the internet the",
    "start": "2852720",
    "end": "2858280"
  },
  {
    "text": "back and front and is and but uh there could of course be more infrastructure",
    "start": "2858280",
    "end": "2863559"
  },
  {
    "text": "protection in in here that we haven't showed so the back and front and should have something in front of it providing",
    "start": "2863559",
    "end": "2870000"
  },
  {
    "text": "DS protection and and uh things like that uh so but that's uh but it's it's",
    "start": "2870000",
    "end": "2877240"
  },
  {
    "text": "also quite a common setup that you might have an application exposed to the",
    "start": "2877240",
    "end": "2882319"
  },
  {
    "text": "internet like that",
    "start": "2882319",
    "end": "2886240"
  },
  {
    "text": "but it would simply be a reverse uh",
    "start": "2900760",
    "end": "2905920"
  },
  {
    "text": "proxy yeah yeah and um",
    "start": "2905920",
    "end": "2910760"
  },
  {
    "text": "yeah yes you",
    "start": "2911880",
    "end": "2916440"
  },
  {
    "text": "recommend mped user",
    "start": "2921559",
    "end": "2926720"
  },
  {
    "text": "time ke can be only aingle",
    "start": "2926720",
    "end": "2932078"
  },
  {
    "text": "one um so so what's the question if if this back and for front and Pad is suitable for",
    "start": "2933599",
    "end": "2941240"
  },
  {
    "text": "multi-user system multi-tenant systems oh definitely this is this is",
    "start": "2941240",
    "end": "2948359"
  },
  {
    "text": "just plain old cookie sessions and and that's yeah that that is if if you",
    "start": "2948359",
    "end": "2955640"
  },
  {
    "text": "have a very large system which needs to scale uh and and you and you have sort",
    "start": "2955640",
    "end": "2962920"
  },
  {
    "text": "of the load test that shows that you can't use uh things like like you need",
    "start": "2962920",
    "end": "2968720"
  },
  {
    "text": "you will need a distributed session cashier and and uh and uh or have sticky",
    "start": "2968720",
    "end": "2973960"
  },
  {
    "text": "sessions for this to work when when you scale out uh so uh so so then maybe you",
    "start": "2973960",
    "end": "2979839"
  },
  {
    "text": "have to look into other features where you have the this the state client side",
    "start": "2979839",
    "end": "2985599"
  },
  {
    "text": "then but but it's it's a it's it's a so so that depends on the performance uh",
    "start": "2985599",
    "end": "2991160"
  },
  {
    "text": "but uh but I would say in in our experience uh both building and uh Rie",
    "start": "2991160",
    "end": "2996720"
  },
  {
    "text": "viewing systems uh back and front and uh in example in in in AER where you can",
    "start": "2996720",
    "end": "3004000"
  },
  {
    "text": "can scale out is is perfectly suited for for",
    "start": "3004000",
    "end": "3009079"
  },
  {
    "text": "most systems that we we have come across but it's so I don't know if that",
    "start": "3009680",
    "end": "3017240"
  },
  {
    "text": "was what are your concern newage application and the same",
    "start": "3017240",
    "end": "3024520"
  },
  {
    "text": "and want to multiple sessions at the time",
    "start": "3024520",
    "end": "3030040"
  },
  {
    "text": "but is aob thing no no no each each browser",
    "start": "3030040",
    "end": "3037400"
  },
  {
    "text": "instance or user will have its own cooking yeah yeah I know that multiple browser",
    "start": "3037400",
    "end": "3045400"
  },
  {
    "text": "different machines but inside so like say um I want to check multiple projects",
    "start": "3045400",
    "end": "3052000"
  },
  {
    "text": "multiple things using the same application like for instance reveal",
    "start": "3052000",
    "end": "3057240"
  },
  {
    "text": "some clues that Gmail can have multiple accounts right and you might be Lo into",
    "start": "3057240",
    "end": "3064920"
  },
  {
    "text": "several ones how would you address that",
    "start": "3064920",
    "end": "3070760"
  },
  {
    "text": "using so yeah yeah so so so that's that's really not an a worth",
    "start": "3071000",
    "end": "3077880"
  },
  {
    "text": "issue it's a session issue but but we can talk about sessions uh",
    "start": "3077880",
    "end": "3083599"
  },
  {
    "text": "so so so you're having an application where you want to be able to uh the same",
    "start": "3083599",
    "end": "3090640"
  },
  {
    "text": "user should be able to log in use the same browser and log in with different accounts at the same time is that your",
    "start": "3090640",
    "end": "3097000"
  },
  {
    "text": "issue yeah so yeah maybe we could we I could we could talk about it afterwards",
    "start": "3097000",
    "end": "3102640"
  },
  {
    "text": "I think it will be a long answer y",
    "start": "3102640",
    "end": "3109880"
  },
  {
    "text": "expi",
    "start": "3115520",
    "end": "3118520"
  },
  {
    "text": "sorry what what's the name of the um no I haven't haven't but we",
    "start": "3121079",
    "end": "3128799"
  },
  {
    "text": "sounds interest interesting we should look into that yeah thank",
    "start": "3128799",
    "end": "3133599"
  },
  {
    "text": "you so any more questions yes",
    "start": "3134839",
    "end": "3141200"
  },
  {
    "text": "you rem yes re quickly anding",
    "start": "3141200",
    "end": "3147160"
  },
  {
    "text": "no it's not so yes we did verify that the the key code patch was um was solid",
    "start": "3147160",
    "end": "3153520"
  },
  {
    "text": "um both by reviewing the the source code and testing um testing again and it it",
    "start": "3153520",
    "end": "3160319"
  },
  {
    "text": "looks good but good",
    "start": "3160319",
    "end": "3165480"
  },
  {
    "text": "question okay okay thank you very much questions thank [Applause]",
    "start": "3168079",
    "end": "3175440"
  },
  {
    "text": "you",
    "start": "3175440",
    "end": "3178440"
  }
]