[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "so good morning everyone uh hello and welcome you to this to this talk titled ordering the chaos",
    "start": "11040",
    "end": "18240"
  },
  {
    "text": "in which we'll discuss some things in microservices and in distributed world",
    "start": "18240",
    "end": "23359"
  },
  {
    "text": "my name is adam furmanek and i'll be your host for today and greetings from europe because i'm",
    "start": "23359",
    "end": "28880"
  },
  {
    "text": "actually in europe right now so it's some time around midnight here in my time zone so i guess you may be sleepy a bit",
    "start": "28880",
    "end": "35680"
  },
  {
    "text": "but i'm as well let's move on let's begin before we actually move on",
    "start": "35680",
    "end": "41760"
  },
  {
    "text": "to the topic of this presentation couple words about me um i have like 10 years of",
    "start": "41760",
    "end": "47520"
  },
  {
    "start": "42000",
    "end": "42000"
  },
  {
    "text": "professional software development experience working on multiple things including back end front and machine learning",
    "start": "47520",
    "end": "54480"
  },
  {
    "text": "mobile applications etc etc i'm also a blogger and public speaker so feel free to draw to take a look at my",
    "start": "54480",
    "end": "60879"
  },
  {
    "text": "blog at blog.tatumformanic.pl in where i described a lot of things mostly about the internals of",
    "start": "60879",
    "end": "67280"
  },
  {
    "text": "various platforms or some math thingies i'm also an author of the dot net",
    "start": "67280",
    "end": "72320"
  },
  {
    "text": "internals cookbook uh a book which you can buy at amazon and which explains or covers plenty of",
    "start": "72320",
    "end": "78720"
  },
  {
    "text": "internals of the dotnet platform feel free to drop me a line or on email twitter slack channel chat",
    "start": "78720",
    "end": "86320"
  },
  {
    "text": "here whatever works for you uh either during this talk or afterwards",
    "start": "86320",
    "end": "92159"
  },
  {
    "text": "uh yup so that would be it let's move on and let's see what is ahead of us for",
    "start": "92159",
    "end": "97840"
  },
  {
    "text": "today so what we are going to do is well well the the main point of this talk or the",
    "start": "97840",
    "end": "104159"
  },
  {
    "text": "the main goal we would like to achieve is we would like to see how to order the events in the distributed systems",
    "start": "104159",
    "end": "110799"
  },
  {
    "text": "uh so we can first clean the locks so they are more readable for us so we",
    "start": "110799",
    "end": "116240"
  },
  {
    "text": "have a nice trace of what's going on and also because we would like to probably get some consensus around",
    "start": "116240",
    "end": "122640"
  },
  {
    "text": "around all the nodes in the distributed system uh we are working on and the the first thing which comes to",
    "start": "122640",
    "end": "129440"
  },
  {
    "text": "mind when we think about ordering things is using timestamps so that's the thing we would like to use",
    "start": "129440",
    "end": "135360"
  },
  {
    "text": "uh however using time using wall clock in distributed systems is not generally something we should be",
    "start": "135360",
    "end": "141599"
  },
  {
    "text": "doing uh and we'll learn why uh so the agenda for this talk is first we'll see what the",
    "start": "141599",
    "end": "147680"
  },
  {
    "text": "time actually is what does it mean that we have some time or whether we use some well clock",
    "start": "147680",
    "end": "153440"
  },
  {
    "text": "and then we will see how the time is being used in the computer science or in the like software engineering in",
    "start": "153440",
    "end": "159040"
  },
  {
    "text": "general next we'll understand why we should be avoiding it why we should avoid using",
    "start": "159040",
    "end": "164319"
  },
  {
    "text": "clogging the computer science or in any applications we write and then we'll figure out how to fix",
    "start": "164319",
    "end": "169920"
  },
  {
    "text": "that how to use something instead of the world clock to to do what we really want to do",
    "start": "169920",
    "end": "176160"
  },
  {
    "text": "so we will see some actual implementations on code slides and etc and at the very end of this talk",
    "start": "176160",
    "end": "182720"
  },
  {
    "text": "we'll just go beyond time we'll figure out how to generalize the solution to do something more so we'll start with cleaning the",
    "start": "182720",
    "end": "189840"
  },
  {
    "text": "locks and ordering them so the logs are readable for us from in the system which we are using",
    "start": "189840",
    "end": "196159"
  },
  {
    "text": "but then we'll see how the solution which we come up with may be maybe later extended to support more and",
    "start": "196159",
    "end": "202239"
  },
  {
    "text": "more scenarios um so let's go let's begin so this time",
    "start": "202239",
    "end": "207840"
  },
  {
    "text": "uh this seemingly trivial question obviously is uh has a very sophisticated answer",
    "start": "207840",
    "end": "215200"
  },
  {
    "text": "but one thing we need to keep in mind is there is no one global time especially when we",
    "start": "215200",
    "end": "221280"
  },
  {
    "text": "are talking computers that's because every single machine every single node in our system",
    "start": "221280",
    "end": "227760"
  },
  {
    "text": "has the its own clock its own time its own way of measuring the the elapsed",
    "start": "227760",
    "end": "234560"
  },
  {
    "text": "time um there is also a physical thing which we just cannot avoid which is",
    "start": "234560",
    "end": "239680"
  },
  {
    "text": "that the there is a delay after we between reading the clock and actually",
    "start": "239680",
    "end": "244959"
  },
  {
    "text": "using the value so whenever we go to the clock like the physical piece of our computer and ask",
    "start": "244959",
    "end": "250239"
  },
  {
    "text": "it hey what's the time and there is some time which need to just pass by",
    "start": "250239",
    "end": "256479"
  },
  {
    "text": "until we can finally use this value it doesn't matter whether it's measured like nanoseconds or milliseconds uh",
    "start": "256479",
    "end": "263759"
  },
  {
    "text": "because for computers it's always too long for us humans it's simple when the time is like measured down to a",
    "start": "263759",
    "end": "270800"
  },
  {
    "text": "second or down to a minute that's perfectly fine for us we can probably deal with it however for computers when our cpus that",
    "start": "270800",
    "end": "278560"
  },
  {
    "text": "they run with like gigahertz uh frequency like every single nanosecond is super important so we just",
    "start": "278560",
    "end": "285759"
  },
  {
    "text": "cannot cope with the delay we have we cannot accept it we cannot afford it",
    "start": "285759",
    "end": "291360"
  },
  {
    "text": "um obviously there are more things which we need to take in mind for instance the clocks even assuming we could",
    "start": "291360",
    "end": "298240"
  },
  {
    "text": "synchronize them they will just drift apart like because of the special fury of relativity right",
    "start": "298240",
    "end": "305039"
  },
  {
    "text": "depending where the machine is whether it's like somewhere uh in united states or somewhere in",
    "start": "305039",
    "end": "310960"
  },
  {
    "text": "australia the clock will work differently than the the clock on the international space station",
    "start": "310960",
    "end": "317840"
  },
  {
    "text": "obviously uh all these things are physical so they break over time like we may synchronize the clocks but",
    "start": "317840",
    "end": "324479"
  },
  {
    "text": "after some time they will just drift apart so they will show different different measurements",
    "start": "324479",
    "end": "330639"
  },
  {
    "text": "and we just cannot deal with that obviously there are more and more sophisticated clogs we have atomic",
    "start": "330639",
    "end": "335759"
  },
  {
    "text": "clocks etc but we just cannot beat the physics here uh so what is time",
    "start": "335759",
    "end": "340800"
  },
  {
    "text": "well the answer to that is currently the time like one standard second is defined as some",
    "start": "340800",
    "end": "346479"
  },
  {
    "text": "period of transition between between cesium however for us what is",
    "start": "346479",
    "end": "351840"
  },
  {
    "text": "time for the purpose of this talk is we will just consider the time being like the wall clock",
    "start": "351840",
    "end": "357280"
  },
  {
    "text": "measurement so imagine there is a clock on your wall which shows you there is something like",
    "start": "357280",
    "end": "362360"
  },
  {
    "text": "904 probably or 906 currently in australia so this is the time for us uh and",
    "start": "362360",
    "end": "369600"
  },
  {
    "text": "whenever we talk about time uh obviously there are things like time",
    "start": "369600",
    "end": "374880"
  },
  {
    "text": "and time zone so we probably know there is a utc coordinated universal time which is",
    "start": "374880",
    "end": "381039"
  },
  {
    "text": "based on atomic clock and it's synchronized and broadcasted around the globe",
    "start": "381039",
    "end": "386400"
  },
  {
    "text": "uh we'll get later to that how this thing is broadcasted but it's worth keeping in mind that this thing is",
    "start": "386400",
    "end": "391600"
  },
  {
    "text": "broadcasted with some accuracy which can be measured in microseconds so for our cpus that's way too slow",
    "start": "391600",
    "end": "398960"
  },
  {
    "text": "so we start with time however what is the time zone we typically think about the time zone being a utc",
    "start": "398960",
    "end": "406240"
  },
  {
    "start": "400000",
    "end": "400000"
  },
  {
    "text": "offset so we think there is like utc plus 11 in australia or utc plus 2",
    "start": "406240",
    "end": "411759"
  },
  {
    "text": "in central europe and we think this is a time zone unfortunately it's not true because time",
    "start": "411759",
    "end": "418639"
  },
  {
    "text": "zone is not only the the offset from the utc plus zero or just the utc time but it's also",
    "start": "418639",
    "end": "426960"
  },
  {
    "text": "uh it also includes rules how the time changes it includes rules",
    "start": "426960",
    "end": "433360"
  },
  {
    "text": "for daylight saving time and it includes rules that this uh this time zones or these",
    "start": "433360",
    "end": "438800"
  },
  {
    "text": "offsets did change over time they did change over years for instance in 20th",
    "start": "438800",
    "end": "443919"
  },
  {
    "text": "century or in older centuries as well we typically also think that the time zone is utc",
    "start": "443919",
    "end": "449599"
  },
  {
    "text": "plus some integer uh like plus some number of hours full number of",
    "start": "449599",
    "end": "455599"
  },
  {
    "text": "hours unfortunately it's not the case the time zones which can be like 30 minutes or 45 minutes after a full time",
    "start": "455599",
    "end": "462800"
  },
  {
    "text": "and also obviously these uh that will they were mostly they are not uh not currently",
    "start": "462800",
    "end": "469440"
  },
  {
    "text": "but there were also some more sophisticated time zones for instance which were 24 minutes after a full after a full hour",
    "start": "469440",
    "end": "477440"
  },
  {
    "text": "when we are talking about dst dst is also tricky because typically we think that it",
    "start": "477440",
    "end": "482960"
  },
  {
    "text": "changes twice a year sometime in march sometimes in october and the time is moved like from 2 a.m at",
    "start": "482960",
    "end": "489919"
  },
  {
    "text": "night to 3 a.m and then moved back from three a.m to two a.m unfortunately",
    "start": "489919",
    "end": "495440"
  },
  {
    "text": "depending on the country it may be different for instance the time may be changed at midnight or five minutes after midnight etc so these",
    "start": "495440",
    "end": "503039"
  },
  {
    "text": "things are not consistent around the globe and we can also answer",
    "start": "503039",
    "end": "509120"
  },
  {
    "text": "uh or we can also pose a question here because we do have this dst and we would like to show a calendar to",
    "start": "509120",
    "end": "515919"
  },
  {
    "text": "our users uh how do we show an event which is happening like half a year from now",
    "start": "515919",
    "end": "522320"
  },
  {
    "text": "this is something which we typically don't think about but imagine that you are just booking a plane ticket which",
    "start": "522320",
    "end": "527519"
  },
  {
    "text": "will be sometime in march or april uh next year and",
    "start": "527519",
    "end": "532720"
  },
  {
    "text": "what's going on how will you show it on calendar when the dst rules change over time so we will be",
    "start": "532720",
    "end": "538800"
  },
  {
    "text": "like in winter time or in summer time and what should we should we put on the calendar we'll get to that",
    "start": "538800",
    "end": "544959"
  },
  {
    "text": "a little later however uh i also mentioned to you that that the time zones they do change uh or",
    "start": "544959",
    "end": "552160"
  },
  {
    "start": "548000",
    "end": "548000"
  },
  {
    "text": "sorry the offsets they do change so you may be in one particular place",
    "start": "552160",
    "end": "557600"
  },
  {
    "text": "on this planet and it doesn't mean that the offset will be constant across the years",
    "start": "557600",
    "end": "563200"
  },
  {
    "text": "for instance there is a very nice example of warsaw time zone where i come from that",
    "start": "563200",
    "end": "568720"
  },
  {
    "text": "like in in 20 19th century the offset was plus one hour and",
    "start": "568720",
    "end": "575519"
  },
  {
    "text": "24 minutes so you ask for your local time hey what was local time 720 in some year and you get 744 this is",
    "start": "575519",
    "end": "583760"
  },
  {
    "text": "definitely not something we would be expecting which only adds the complexity to the",
    "start": "583760",
    "end": "588800"
  },
  {
    "text": "whole idea just closing on this time zone and dst",
    "start": "588800",
    "end": "594240"
  },
  {
    "text": "changes couple of things that first there are plenty of different different offsets around the planet",
    "start": "594240",
    "end": "601200"
  },
  {
    "text": "plenty of different time zones and typically we think that well the bigger the country is the more time",
    "start": "601200",
    "end": "606959"
  },
  {
    "text": "zones it has and while it is true for instance for united states or australia there are multiple",
    "start": "606959",
    "end": "612640"
  },
  {
    "text": "time zones over there it's different for instance in china china runs on one single time zone",
    "start": "612640",
    "end": "617839"
  },
  {
    "text": "across the whole the whole country it's also interesting for instance in russia in russia there",
    "start": "617839",
    "end": "622959"
  },
  {
    "text": "are multiple time zones however once you enter the train station you are always running on one single",
    "start": "622959",
    "end": "629920"
  },
  {
    "text": "particular time zone because all the trains in russia they use just one time zone to make",
    "start": "629920",
    "end": "635200"
  },
  {
    "text": "make this a little simpler so time zones are tricky and dst daylight saving time is also",
    "start": "635200",
    "end": "641920"
  },
  {
    "start": "640000",
    "end": "640000"
  },
  {
    "text": "tricky because we typically think hey there is just dst time right it changes twice a",
    "start": "641920",
    "end": "647040"
  },
  {
    "text": "year however it depends on the country there are countries which do not have dst time there are countries which did have dst",
    "start": "647040",
    "end": "653600"
  },
  {
    "text": "now they don't have dst and it also differs even within one country for instance in",
    "start": "653600",
    "end": "658720"
  },
  {
    "text": "united states and most of the states they do have the dst time",
    "start": "658720",
    "end": "663760"
  },
  {
    "text": "unless you are in arizona arizona does not observe the dst time zone unless you are a navajo tribe",
    "start": "663760",
    "end": "671040"
  },
  {
    "text": "in arizona because they do observe the dst so it's not like the time zone here is not something",
    "start": "671040",
    "end": "678399"
  },
  {
    "text": "as an offset from the utc it also depends where you live but it also depends who you are because if you are in some",
    "start": "678399",
    "end": "684880"
  },
  {
    "text": "tribe you may observe the dst unless like differently than the rest of the state",
    "start": "684880",
    "end": "689920"
  },
  {
    "text": "so it is it is tricky and just closing this topic we typically think that utc and gmt there are the same thing",
    "start": "689920",
    "end": "698320"
  },
  {
    "text": "um it's not true not entirely true because utc is a time which is based on an atomic",
    "start": "698320",
    "end": "704000"
  },
  {
    "text": "clock and so it's supposed to be based on some physical clog which is related to the",
    "start": "704000",
    "end": "709360"
  },
  {
    "text": "cesium transitions etc etc however gmt is a time which is based on a rotation",
    "start": "709360",
    "end": "715920"
  },
  {
    "text": "of the earth and gmt is actually a time zone so utc is supposed to be synchronized",
    "start": "715920",
    "end": "722720"
  },
  {
    "text": "with gmt and it's supposed to be an approximation of gmt because it's because it's an",
    "start": "722720",
    "end": "729360"
  },
  {
    "text": "approximation it may be different uh so the the biggest difference",
    "start": "729360",
    "end": "734560"
  },
  {
    "text": "which is allowed is 0.9 seconds so utc and gmt they can they may differ up to",
    "start": "734560",
    "end": "739760"
  },
  {
    "text": "0.9 seconds and also because we need to synchronize them somehow utc synchronized using the lip seconds",
    "start": "739760",
    "end": "747200"
  },
  {
    "text": "you probably heard about that sometimes there is a lip second introduced lip second",
    "start": "747200",
    "end": "752320"
  },
  {
    "text": "which is additional second in given minute so minute does not have 60 seconds but 61 of them",
    "start": "752320",
    "end": "758959"
  },
  {
    "text": "however according to standard a lip second may also be removed so we may also have a minute which is 59",
    "start": "758959",
    "end": "766800"
  },
  {
    "text": "seconds not 60 seconds uh but this is this only makes it even more complicated and lip second can",
    "start": "766800",
    "end": "773920"
  },
  {
    "start": "772000",
    "end": "772000"
  },
  {
    "text": "is also super tricky because it can actually break our computers like this happened multiple times",
    "start": "773920",
    "end": "779519"
  },
  {
    "text": "one of the more known uh issue which which occurred because of",
    "start": "779519",
    "end": "785120"
  },
  {
    "text": "the leap second was something which happened in 2012 when plenty of linux systems and",
    "start": "785120",
    "end": "790720"
  },
  {
    "text": "especially my sequel databases they started consuming like 100 cpu they",
    "start": "790720",
    "end": "796240"
  },
  {
    "text": "spiked like crazy just because a lip second was introduced at that time leap second was mostly",
    "start": "796240",
    "end": "802480"
  },
  {
    "text": "added just like an additional second so we really had a minute which had 61 seconds and this",
    "start": "802480",
    "end": "809200"
  },
  {
    "text": "obviously this broke the task scheduler in the linux operating system so then it it",
    "start": "809200",
    "end": "815760"
  },
  {
    "text": "costs some more issues currently this bug is gone and we also instead of doing the",
    "start": "815760",
    "end": "821440"
  },
  {
    "text": "of adding the the actual one second to the minute what we do is we do the time smearing so",
    "start": "821440",
    "end": "828240"
  },
  {
    "text": "we just make these 60 seconds in a minute still being 60 seconds but they just last a little longer so",
    "start": "828240",
    "end": "835760"
  },
  {
    "text": "this we smear this additional second over a prolonged period of time to to avoid",
    "start": "835760",
    "end": "842000"
  },
  {
    "text": "issues like this uh but okay let's say we would like to use the time",
    "start": "842000",
    "end": "847279"
  },
  {
    "start": "843000",
    "end": "843000"
  },
  {
    "text": "in distributed systems so and we would like to use all these time zones and all these things we have",
    "start": "847279",
    "end": "852320"
  },
  {
    "text": "here the question is how do we know what the time zone is or how these dst",
    "start": "852320",
    "end": "858560"
  },
  {
    "text": "change uh around the globe um so the thing is there is a database",
    "start": "858560",
    "end": "863600"
  },
  {
    "text": "which is called tz database or time zone info or time zone database which is distributed by ayana which",
    "start": "863600",
    "end": "870560"
  },
  {
    "text": "includes all the things about the the time zones they are typically released multiple times a year and they",
    "start": "870560",
    "end": "876480"
  },
  {
    "text": "are identified by a year number and a letter and there is obviously an rfc which",
    "start": "876480",
    "end": "882480"
  },
  {
    "text": "explains how this database is distributed how it's updated etc etc so whenever you have for instance a linux",
    "start": "882480",
    "end": "888240"
  },
  {
    "text": "machine and you do something like sudo apt-get to to to install updates the tz data package",
    "start": "888240",
    "end": "895519"
  },
  {
    "text": "is just updated as a regular regular package in your operating system and this is how you update those dst",
    "start": "895519",
    "end": "902399"
  },
  {
    "text": "add usb information obviously because we have multiple operating systems it wouldn't be that simple to",
    "start": "902399",
    "end": "909120"
  },
  {
    "text": "just have one database there is another database which is called cldr common local data repository",
    "start": "909120",
    "end": "915199"
  },
  {
    "text": "uh which includes not only the time zone info but also the deluxe so whenever you have",
    "start": "915199",
    "end": "921839"
  },
  {
    "text": "nus or ngb or nau languages or locales they are stored in",
    "start": "921839",
    "end": "928399"
  },
  {
    "text": "this cldr uh database and microsoft and apple and couple other companies they do use",
    "start": "928399",
    "end": "935360"
  },
  {
    "text": "cldr over the tc info so again we do have multiple solutions and what's worse cldr and dz",
    "start": "935360",
    "end": "943360"
  },
  {
    "text": "info are not consistent meaning that they do are not released on the same schedule so it may be that one operating",
    "start": "943360",
    "end": "950399"
  },
  {
    "text": "system already includes the changes for time zone info other operating system does not which makes it",
    "start": "950399",
    "end": "956639"
  },
  {
    "text": "even more even more crazy um that would be it like the introduction about time so now comes",
    "start": "956639",
    "end": "963519"
  },
  {
    "text": "the question let's say we would like to use the time anyway we would like to just",
    "start": "963519",
    "end": "969279"
  },
  {
    "text": "use the timestamps to order events or to clean up logs or do whatever we would like to do",
    "start": "969279",
    "end": "974800"
  },
  {
    "text": "the question is how which what time should we use should we use local time or utc time and obviously whenever you",
    "start": "974800",
    "end": "981600"
  },
  {
    "text": "go to to stack overflow or just google these things everyone tells you hey",
    "start": "981600",
    "end": "986800"
  },
  {
    "text": "just use utc it solves all the issues unfortunately it's not true",
    "start": "986800",
    "end": "992959"
  },
  {
    "text": "because utc does not know about dst changes and doesn't know about",
    "start": "992959",
    "end": "998639"
  },
  {
    "text": "the time zones uh in general and currently this is actually something which is happening",
    "start": "998639",
    "end": "1004160"
  },
  {
    "text": "right now in european union european union wants to to drop the dst changes and each country",
    "start": "1004160",
    "end": "1009600"
  },
  {
    "text": "will be allowed to decide whether they want to stay on summer time want to stay on winter time",
    "start": "1009600",
    "end": "1015600"
  },
  {
    "text": "or whether they just want to use dsd still so let's see how this can break our",
    "start": "1015600",
    "end": "1022959"
  },
  {
    "text": "existing applications using this simple example let's say that we would like to organize",
    "start": "1022959",
    "end": "1028000"
  },
  {
    "text": "some even that on at 10 am on september in 2022 right so almost two years from",
    "start": "1028000",
    "end": "1035438"
  },
  {
    "text": "now in amsterdam currently the expected time zone as the",
    "start": "1035439",
    "end": "1040720"
  },
  {
    "text": "let's say time zone as the utc offset in amsterdam is supposed to be utc class 2. however",
    "start": "1040720",
    "end": "1047280"
  },
  {
    "text": "we don't know what's going to happen with amsterdam of or with the netherlands in general",
    "start": "1047280",
    "end": "1053760"
  },
  {
    "text": "like over years they may decide that they will stay on summer time or winter time so they may",
    "start": "1053760",
    "end": "1060320"
  },
  {
    "text": "be at utc plus one on the september 4th 2022 but we don't know that yet",
    "start": "1060320",
    "end": "1067360"
  },
  {
    "text": "so how should we store the time now to be sure that this does not break over",
    "start": "1067360",
    "end": "1073679"
  },
  {
    "text": "time so obviously let's store this as utc that's what stack overflow tells you",
    "start": "1073679",
    "end": "1079120"
  },
  {
    "text": "and this is what we typically do in our applications because we do have this date time a type in c-sharp language we do",
    "start": "1079120",
    "end": "1086320"
  },
  {
    "text": "have some gregorian calendar or other date types in sql java whatever languages so",
    "start": "1086320",
    "end": "1092320"
  },
  {
    "text": "we just store this time put it in database and we think we are good so let's see what's going to happen",
    "start": "1092320",
    "end": "1098240"
  },
  {
    "text": "uh so we take the event time and we would like to store it in utc right so the event time is 9 a.m we",
    "start": "1098240",
    "end": "1105280"
  },
  {
    "text": "recalculated to be in utc time zone so it will be 7 a.m after calculations and then what's",
    "start": "1105280",
    "end": "1111919"
  },
  {
    "text": "going to happen is amsterdam decides they will drop the dst changes so on september 4th 2022",
    "start": "1111919",
    "end": "1120080"
  },
  {
    "text": "they will be in utc plus one so what's going to happen like two years from now when we when we",
    "start": "1120080",
    "end": "1126320"
  },
  {
    "text": "see what the time is for the the event start we'll just extract the value from the",
    "start": "1126320",
    "end": "1131919"
  },
  {
    "text": "database and calculate us we'll add one hour because hey amsterdam is in utc plus one",
    "start": "1131919",
    "end": "1138240"
  },
  {
    "text": "so we'll get eight a.m so we actually missed the time we are one hour ahead",
    "start": "1138240",
    "end": "1145039"
  },
  {
    "text": "of the event so pros of the solution well it's easy to implement and cons it just doesn't work",
    "start": "1145039",
    "end": "1151120"
  },
  {
    "text": "and if you ever store time in your application you actually may hit issues like this",
    "start": "1151120",
    "end": "1156960"
  },
  {
    "text": "this is something i already mentioned imagine that you are booking a plane ticket two years from now and if you just store",
    "start": "1156960",
    "end": "1163840"
  },
  {
    "text": "the time in utc it may be that two years from now you may be either slightly unlucky that you arrive at the",
    "start": "1163840",
    "end": "1170880"
  },
  {
    "text": "airport an hour earlier than you should be or then you would like to be or you may be super unlucky because you",
    "start": "1170880",
    "end": "1176559"
  },
  {
    "text": "arrive one hour too late and you just miss the flight okay so how to do it better well we",
    "start": "1176559",
    "end": "1183280"
  },
  {
    "text": "could store the time as utc and keep updating it and this is what we probably",
    "start": "1183280",
    "end": "1188640"
  },
  {
    "text": "should do so we need to store the time as utc so it is going to be 7 am",
    "start": "1188640",
    "end": "1195360"
  },
  {
    "text": "but we also include tz or cldr databases updates to recalculate",
    "start": "1195360",
    "end": "1202080"
  },
  {
    "text": "the time so whenever we get a tz update and we see that amsterdam changed their time zone and",
    "start": "1202080",
    "end": "1208480"
  },
  {
    "text": "they will be in utc one in september 2022 we just go to database and update the",
    "start": "1208480",
    "end": "1215760"
  },
  {
    "text": "value which we stored there from 7 am to 8 am a pros well",
    "start": "1215760",
    "end": "1221120"
  },
  {
    "text": "this works and this is a huge advantage of this solution cons well we need to store the tz info",
    "start": "1221120",
    "end": "1227600"
  },
  {
    "text": "in the database we need to access historical data we need to be able to tell like logically what happened with this time",
    "start": "1227600",
    "end": "1234960"
  },
  {
    "text": "like whether the time zone changed from plus two to plus one or the opposite or the other way or maybe there were no",
    "start": "1234960",
    "end": "1240480"
  },
  {
    "text": "changes at all but if we want to be sure that we do not break things over years",
    "start": "1240480",
    "end": "1246000"
  },
  {
    "text": "this is what we actually should do but there are also other solutions and for instance one not necessarily",
    "start": "1246000",
    "end": "1253120"
  },
  {
    "text": "obvious solution is just to store the event that it starts at 9am",
    "start": "1253120",
    "end": "1259520"
  },
  {
    "text": "using some completely non-typed value like a string hey the event is",
    "start": "1259520",
    "end": "1267440"
  },
  {
    "text": "9 a.m because this is what our customers give us they come to us and tell us hey they",
    "start": "1267440",
    "end": "1273280"
  },
  {
    "text": "even starts at 9am and this is what we should store in the database uh obviously we would like to",
    "start": "1273280",
    "end": "1278640"
  },
  {
    "text": "use some well strongly typed date time or or whatever else but generally the grand truth for",
    "start": "1278640",
    "end": "1285440"
  },
  {
    "text": "us is that the event starts at 9 00 so this is yet another solution and it",
    "start": "1285440",
    "end": "1291919"
  },
  {
    "text": "works nice uh however the the problem with this or the the challenge would be that",
    "start": "1291919",
    "end": "1297520"
  },
  {
    "text": "we need to again keep some data which we are not necessarily used to because we would like to use this date",
    "start": "1297520",
    "end": "1303600"
  },
  {
    "text": "time type which is there so i'm not telling you that utc uh that we should drop utc and",
    "start": "1303600",
    "end": "1310320"
  },
  {
    "text": "go with local time or something like this utc probably is still our best bet however just keep in mind that keeping",
    "start": "1310320",
    "end": "1316880"
  },
  {
    "text": "only the time part in utc may not be enough we need to keep the utc",
    "start": "1316880",
    "end": "1322640"
  },
  {
    "text": "time with date and also with the time zone database info so we know how these things can change",
    "start": "1322640",
    "end": "1329520"
  },
  {
    "text": "over time and there's so many other problems with time uh you may heard about this very",
    "start": "1329520",
    "end": "1335600"
  },
  {
    "text": "popular article once upon a time uh like false could programmers believe",
    "start": "1335600",
    "end": "1341360"
  },
  {
    "text": "about time so all the things you can see here and the slide that all falls meaning that minute does",
    "start": "1341360",
    "end": "1348240"
  },
  {
    "text": "not has does not have 60 seconds that year does not have 365 days that february does not",
    "start": "1348240",
    "end": "1355039"
  },
  {
    "text": "have 28 days etc etc i encourage you to take a look at this link because it covers so many",
    "start": "1355039",
    "end": "1360960"
  },
  {
    "text": "interesting things we would never consider but let's just quickly work for a couple of them so",
    "start": "1360960",
    "end": "1366880"
  },
  {
    "text": "month begins and ends in the same year this is not necessarily true",
    "start": "1366880",
    "end": "1374480"
  },
  {
    "text": "because uh well we typically think that the new year is on january 1st right",
    "start": "1374480",
    "end": "1381600"
  },
  {
    "text": "but it wasn't the case in uh in uh like older centuries and most of the",
    "start": "1381600",
    "end": "1388640"
  },
  {
    "text": "site most of the countries they adopted the new year starting on january 1st like",
    "start": "1388640",
    "end": "1394799"
  },
  {
    "text": "something in 16th century however when it comes to adoption of gregorian calendar the calendar which we",
    "start": "1394799",
    "end": "1400480"
  },
  {
    "text": "typically use for instance russia was pretty late to do so so these things they do change hopefully",
    "start": "1400480",
    "end": "1406880"
  },
  {
    "text": "we don't need to deal with them currently but it's worth keeping in mind that it",
    "start": "1406880",
    "end": "1412480"
  },
  {
    "text": "was different a different in the past february has 28 days",
    "start": "1412480",
    "end": "1417840"
  },
  {
    "text": "we obviously know there is february the february may have 29 days when we have the the the",
    "start": "1417840",
    "end": "1423760"
  },
  {
    "text": "leap year which happens every four years uh as long as it's not every like 100",
    "start": "1423760",
    "end": "1429760"
  },
  {
    "text": "years as long as it is not every 400 years or something like this we know the rules",
    "start": "1429760",
    "end": "1435440"
  },
  {
    "text": "right and only in sweden in 1712 february had 30 days in the gregorian",
    "start": "1435440",
    "end": "1442159"
  },
  {
    "text": "calendar why was it so that's because instead when all the countries",
    "start": "1442159",
    "end": "1447200"
  },
  {
    "text": "in europe because they adopted gregorian calendar they skipped 11 days uh the sweden decided not to do",
    "start": "1447200",
    "end": "1455200"
  },
  {
    "text": "so what they did instead they thought well we'll be just skipping the leap",
    "start": "1455200",
    "end": "1460640"
  },
  {
    "text": "february 29th and but then work started so they forgot to do it or",
    "start": "1460640",
    "end": "1467360"
  },
  {
    "text": "they do it one a one once too many so then they had to you know roll back this basically by",
    "start": "1467360",
    "end": "1473919"
  },
  {
    "text": "introducing february 13th so this is what happens not to mention that there are so many other calendars for",
    "start": "1473919",
    "end": "1479840"
  },
  {
    "text": "instance there is some weird calendar symmetric 454 which gets 35 days in february but hopefully",
    "start": "1479840",
    "end": "1486000"
  },
  {
    "text": "we don't need to deal with them at least not today uh the last thing which is a minute last",
    "start": "1486000",
    "end": "1492080"
  },
  {
    "text": "60 seconds or something like this and definitely not an hour uh and this is again a bug in in our",
    "start": "1492080",
    "end": "1498799"
  },
  {
    "text": "application or in the computer uh because there was this bug in kvm on",
    "start": "1498799",
    "end": "1503840"
  },
  {
    "text": "centos so whenever you pause the virtual machine it was not updating its clock when you resumed it",
    "start": "1503840",
    "end": "1510080"
  },
  {
    "text": "so the clock was really going away showing that hey your minute could",
    "start": "1510080",
    "end": "1515840"
  },
  {
    "text": "physically last for hours and your clock wasn't aware of that so this makes using clock much",
    "start": "1515840",
    "end": "1523840"
  },
  {
    "text": "much harder in computer systems than we typically think it is but let's say that we would like",
    "start": "1523840",
    "end": "1530960"
  },
  {
    "text": "to use it because hey we all have the world clock we all have like in bottom right corners",
    "start": "1530960",
    "end": "1536240"
  },
  {
    "text": "in in top right corner we do have the clock right so how does it work if it's so hard to do it right and",
    "start": "1536240",
    "end": "1542880"
  },
  {
    "text": "basically the algorithm to synchronize clocks between machines is the simplest one we",
    "start": "1542880",
    "end": "1547919"
  },
  {
    "text": "could even ever imagine it's based on the super simple principle we just go to the",
    "start": "1547919",
    "end": "1554159"
  },
  {
    "text": "other system and we ask hey was the time and we wait for the answer we can communicate over internet we can",
    "start": "1554159",
    "end": "1560799"
  },
  {
    "text": "communicate over network we can communicate over wire or wireless but that's it we just go ask hey what's",
    "start": "1560799",
    "end": "1567440"
  },
  {
    "text": "the time give me your time and so then we obviously will have",
    "start": "1567440",
    "end": "1572480"
  },
  {
    "text": "some some reading which is not precise because it's delayed because of the network because it's delayed because of",
    "start": "1572480",
    "end": "1579440"
  },
  {
    "text": "the physical mechanism reading the time so we cannot rely on it",
    "start": "1579440",
    "end": "1584720"
  },
  {
    "text": "so what we do instead is we just repeat this question many times so when we ask this question",
    "start": "1584720",
    "end": "1590159"
  },
  {
    "text": "like hundred times we can more or less and we average the results we can more or less say",
    "start": "1590159",
    "end": "1595600"
  },
  {
    "text": "okay that should be the time so this is the simplest algorithm this is actually algorithm which is",
    "start": "1595600",
    "end": "1601919"
  },
  {
    "text": "being used and there is a protocol called ntp network time protocol which works on",
    "start": "1601919",
    "end": "1607760"
  },
  {
    "start": "1602000",
    "end": "1602000"
  },
  {
    "text": "this principle uh so whenever we do have these atomic clocks the whole world is like divided into",
    "start": "1607760",
    "end": "1616159"
  },
  {
    "text": "multiple stratas multiple layers depending how far a given machine",
    "start": "1616159",
    "end": "1621919"
  },
  {
    "text": "is from the atomic clock so stratum zero is the layer of atomic clocks and then",
    "start": "1621919",
    "end": "1628559"
  },
  {
    "text": "these clogs the the readings they are broadcasted to straight one to the next layer uh so they are",
    "start": "1628559",
    "end": "1635600"
  },
  {
    "text": "synchronized within a few microseconds and then we have another layer layer two which is",
    "start": "1635600",
    "end": "1641200"
  },
  {
    "text": "synchronized to layer one so you can see that the further you are from the atomic clock your reading will",
    "start": "1641200",
    "end": "1647279"
  },
  {
    "text": "be more imprecise however this is what we what we just do and also your operating system takes",
    "start": "1647279",
    "end": "1653919"
  },
  {
    "text": "care of that so for instance your windows or linux machine it knows where the ntp server is and it",
    "start": "1653919",
    "end": "1660000"
  },
  {
    "text": "periodically goes and asks for the for the time to synchronize your clock",
    "start": "1660000",
    "end": "1665440"
  },
  {
    "text": "ntp uses slightly more sophisticated algorithm because it essentially does the same",
    "start": "1665440",
    "end": "1670880"
  },
  {
    "text": "goes to some machine asks hey what's the time but it also tries to to approximate what",
    "start": "1670880",
    "end": "1676559"
  },
  {
    "text": "the network latency could be what the round trip delay is etc etc so then it gathers some data",
    "start": "1676559",
    "end": "1683039"
  },
  {
    "text": "and estimates the the actual time but generally this is based on the same principle",
    "start": "1683039",
    "end": "1688880"
  },
  {
    "start": "1688000",
    "end": "1688000"
  },
  {
    "text": "there are also couple other approaches which are based not necessarily on different principle",
    "start": "1688880",
    "end": "1695120"
  },
  {
    "text": "how we get the time but they try to broadcast this time more efficiently",
    "start": "1695120",
    "end": "1700480"
  },
  {
    "text": "so do it faster so with lower delay etc etc one interesting algorithm here is the",
    "start": "1700480",
    "end": "1706480"
  },
  {
    "text": "true time used by google and the google truetime database",
    "start": "1706480",
    "end": "1711760"
  },
  {
    "text": "guarantees that your clock will differ by up to 7 milliseconds from other nodes",
    "start": "1711760",
    "end": "1718399"
  },
  {
    "text": "so if you know what your upper bound for the delay is you can just use the timestamps because",
    "start": "1718399",
    "end": "1725120"
  },
  {
    "text": "if in worst case you just need to wait for seven milliseconds before for instance committing the transaction so",
    "start": "1725120",
    "end": "1731200"
  },
  {
    "text": "that's the idea to to do it uh however this is",
    "start": "1731200",
    "end": "1736240"
  },
  {
    "text": "in order to do it you need to have atomic clogs you need to have backup network connections etc etc so it's not",
    "start": "1736240",
    "end": "1742960"
  },
  {
    "text": "something we can easily use in in all our systems so what do we do well we need to avoid",
    "start": "1742960",
    "end": "1749840"
  },
  {
    "text": "clock but we need to build something different so we need to build our custom clock",
    "start": "1749840",
    "end": "1755120"
  },
  {
    "text": "something we can use with distributed system so we will be building a logical clock",
    "start": "1755120",
    "end": "1760399"
  },
  {
    "text": "which will be capable of answering whether event a happened before event b and we would",
    "start": "1760399",
    "end": "1767279"
  },
  {
    "text": "like to do it on multiple machines over the internet meaning one server is in sydney",
    "start": "1767279",
    "end": "1772640"
  },
  {
    "text": "australia the other server is in like new york united states yet another server is somewhere in tokyo japan right",
    "start": "1772640",
    "end": "1780159"
  },
  {
    "text": "and so this is our goal we would like to synchronize all these machines around the globe",
    "start": "1780159",
    "end": "1786799"
  },
  {
    "text": "we want it to be fast we don't want to wait for milliseconds we want to be it to be as fast as possible and",
    "start": "1786799",
    "end": "1793840"
  },
  {
    "text": "important restriction here we are interested only in one given particular flow workflow",
    "start": "1793840",
    "end": "1800720"
  },
  {
    "text": "transaction job execution you name it so we won't be comparing all the events in our system we are only",
    "start": "1800720",
    "end": "1807919"
  },
  {
    "text": "interested in for instance one scenario when the user comes he clicks like to buy a product",
    "start": "1807919",
    "end": "1816080"
  },
  {
    "text": "and all the transactions happening because we clicked in the cart i would like to purchase this thingy all these",
    "start": "1816080",
    "end": "1822480"
  },
  {
    "text": "things we want to synchronize all these things we want to order but we are not interested in comparing",
    "start": "1822480",
    "end": "1828240"
  },
  {
    "text": "two different users buying from two different cards at the same time so what can we do uh we can use a thing",
    "start": "1828240",
    "end": "1836240"
  },
  {
    "start": "1835000",
    "end": "1835000"
  },
  {
    "text": "which is called a lumpered timestamp or lamport happened before relationship so this",
    "start": "1836240",
    "end": "1842480"
  },
  {
    "text": "thing tells us whether event a influenced event b and this is also denoted using this",
    "start": "1842480",
    "end": "1849600"
  },
  {
    "text": "this nice arrow syntax so so we say that event a was happened before event b or event a",
    "start": "1849600",
    "end": "1857679"
  },
  {
    "text": "influenced event b and this provides us the partial ordering because once we know which",
    "start": "1857679",
    "end": "1863679"
  },
  {
    "text": "events influenced which which others we can easily",
    "start": "1863679",
    "end": "1868799"
  },
  {
    "text": "order them and we can say what was the the order of these events",
    "start": "1868799",
    "end": "1874559"
  },
  {
    "text": "in the system the algorithm is that we'll be synchronizing clocks and here is like a formal specification of algorithm but",
    "start": "1874559",
    "end": "1881919"
  },
  {
    "text": "instead of going through this let's see an example so what we are going to do is we are",
    "start": "1881919",
    "end": "1888960"
  },
  {
    "text": "let's say that we do have three machines like machine one two and three and for each of them each of",
    "start": "1888960",
    "end": "1894559"
  },
  {
    "text": "these machines they have a clock basically a logical clock so let's say that machine one has a",
    "start": "1894559",
    "end": "1900960"
  },
  {
    "text": "clock which goes like uh with six seconds every tick so this is second zero second six etc etc second machine",
    "start": "1900960",
    "end": "1908960"
  },
  {
    "text": "goes with resolution of eight seconds so 8 16 24 and the third machine goes with",
    "start": "1908960",
    "end": "1914320"
  },
  {
    "text": "resolution of 10 secs okay so what is going to happen now is the",
    "start": "1914320",
    "end": "1919760"
  },
  {
    "text": "idea is that once we are as long as we are on one single machine and we do not talk to",
    "start": "1919760",
    "end": "1927279"
  },
  {
    "text": "each other all the events they influence the next one in line so they influence the next line of code so this",
    "start": "1927279",
    "end": "1934399"
  },
  {
    "text": "event zero influences the event at time six this event here influences yet another event and so on",
    "start": "1934399",
    "end": "1941440"
  },
  {
    "text": "and so on right so basically we assume like we can say that we are just executing on",
    "start": "1941440",
    "end": "1946559"
  },
  {
    "text": "one single thread we ignore the cpu reordering we ignore the parallelism etc",
    "start": "1946559",
    "end": "1953200"
  },
  {
    "text": "but once we start talking between machines what happens is we say that one event",
    "start": "1953200",
    "end": "1960159"
  },
  {
    "text": "is influencing the other event because of the communication so the",
    "start": "1960159",
    "end": "1965440"
  },
  {
    "text": "arrow here like arrows a b c and d they represent the communication",
    "start": "1965440",
    "end": "1970559"
  },
  {
    "text": "between machines which for instance can be interpreted as let's say http call",
    "start": "1970559",
    "end": "1976320"
  },
  {
    "text": "right or rest request or whatever else just a network call between two nodes",
    "start": "1976320",
    "end": "1981840"
  },
  {
    "text": "so what happens if we just go with the ordinary like regular solution without using lan",
    "start": "1981840",
    "end": "1988159"
  },
  {
    "text": "port at all so we can see that there was a message sent at time 6 which was received at time 16",
    "start": "1988159",
    "end": "1995039"
  },
  {
    "text": "so far so good the same here something set at time 24 and then received at time 40 which is",
    "start": "1995039",
    "end": "2001840"
  },
  {
    "text": "okay the problem arises when we start going back so we send a message of",
    "start": "2001840",
    "end": "2007440"
  },
  {
    "text": "time 60 which is received at time 56 so it's received in the past",
    "start": "2007440",
    "end": "2013840"
  },
  {
    "text": "so if we are using a like regular timestamps this is the issue which will occur there will be message which was",
    "start": "2013840",
    "end": "2020080"
  },
  {
    "text": "sent after it was received however once we uh we start using lumper timestamps the",
    "start": "2020080",
    "end": "2025919"
  },
  {
    "text": "idea is pretty simple we take a maximum of two clocks and we send the clock with each message",
    "start": "2025919",
    "end": "2032320"
  },
  {
    "text": "so for these two messages a and b nothing changes we send the message at time 6 receive at time 16 we send the message",
    "start": "2032320",
    "end": "2039440"
  },
  {
    "text": "b at time 24 receive at time 40. however here what changes",
    "start": "2039440",
    "end": "2044640"
  },
  {
    "text": "is that when we send this message c we not only send the the content of the",
    "start": "2044640",
    "end": "2050158"
  },
  {
    "text": "message but we also send the clock with the message so here the machine",
    "start": "2050159",
    "end": "2055839"
  },
  {
    "text": "here realizes that it should be time 54 but then it compares its own clock with the one",
    "start": "2055839",
    "end": "2062878"
  },
  {
    "text": "received from the other machine so it compares 54 with 60 it takes the",
    "start": "2062879",
    "end": "2068240"
  },
  {
    "text": "maximum of these two values and increments them so we get 61 because we took a maximum of 54 and 60",
    "start": "2068240",
    "end": "2076878"
  },
  {
    "text": "and added one same and then you can see that we update our clock so the next",
    "start": "2076879",
    "end": "2083599"
  },
  {
    "text": "tick is not at like a 54 plus 8 so 62 but the next stick is at 61 plus 8.",
    "start": "2083599",
    "end": "2091679"
  },
  {
    "text": "the same goes for at another communication we send a message at 69 so we would be receiving it something",
    "start": "2091679",
    "end": "2098320"
  },
  {
    "text": "around probably 54 or something like this we take a maximum of these two clocks add one and we end",
    "start": "2098320",
    "end": "2104560"
  },
  {
    "text": "with 70. so that's the idea and why is it useful for us why is it",
    "start": "2104560",
    "end": "2110240"
  },
  {
    "text": "helpful at all it is helpful because once we know that event a influenced even",
    "start": "2110240",
    "end": "2118240"
  },
  {
    "text": "event b then we know that clock of event a is less than",
    "start": "2118240",
    "end": "2124320"
  },
  {
    "text": "clock of event b and it works only for the events",
    "start": "2124320",
    "end": "2129440"
  },
  {
    "text": "which influence each other where they are one is influenced by the other",
    "start": "2129440",
    "end": "2135040"
  },
  {
    "text": "so in single threaded scenario all the just as as i said like we can imagine",
    "start": "2135040",
    "end": "2141040"
  },
  {
    "text": "that one line of code influences the next line of code however for two separate machines the",
    "start": "2141040",
    "end": "2147839"
  },
  {
    "text": "events influence each other's only when they communicate so going back here we can say that this",
    "start": "2147839",
    "end": "2155040"
  },
  {
    "text": "event influenced this one and this event influenced this one we can also say that",
    "start": "2155040",
    "end": "2160079"
  },
  {
    "text": "all these events here influenced all these events here because these events here on the left",
    "start": "2160079",
    "end": "2166079"
  },
  {
    "text": "they were before the communication happened however we cannot tell anything about",
    "start": "2166079",
    "end": "2171680"
  },
  {
    "text": "events here and events here because this event here on the left they happened after the communication",
    "start": "2171680",
    "end": "2178640"
  },
  {
    "text": "here after this point here so we don't know whether these two whether these events actually happened",
    "start": "2178640",
    "end": "2184480"
  },
  {
    "text": "physically before this so we cannot tell anything about that because in order to even influence an",
    "start": "2184480",
    "end": "2191839"
  },
  {
    "text": "event on the other machine there needs to be a communication in between so that's the idea",
    "start": "2191839",
    "end": "2198560"
  },
  {
    "text": "uh and how do we implement it like in real life like in the source code um so it might",
    "start": "2198560",
    "end": "2205839"
  },
  {
    "text": "sound tricky but actually is not that sophisticated what we need to do is uh in order to clean up the locks",
    "start": "2205839",
    "end": "2213200"
  },
  {
    "start": "2207000",
    "end": "2207000"
  },
  {
    "text": "because this is the problem which we are solving right now what we want to generate is we would like to have this nice lump or",
    "start": "2213200",
    "end": "2219760"
  },
  {
    "text": "timestamps to order events and we would also like to have us some",
    "start": "2219760",
    "end": "2225200"
  },
  {
    "text": "logical id of the flow we are talking about what this id would be imagine that",
    "start": "2225200",
    "end": "2231599"
  },
  {
    "text": "we are talking about like buying uh purchasing something uh in the e-commerce platform so once",
    "start": "2231599",
    "end": "2238079"
  },
  {
    "text": "the user hits a button to buy something we generate an id which represents all",
    "start": "2238079",
    "end": "2243440"
  },
  {
    "text": "the things which need to happen to to to correlate all the events to fulfill",
    "start": "2243440",
    "end": "2249200"
  },
  {
    "text": "this one purchase so we can imagine this could be something like update the database calculate the price send the",
    "start": "2249200",
    "end": "2255359"
  },
  {
    "text": "confirmation email send the the message to to the delivery team that something needs to be actually",
    "start": "2255359",
    "end": "2261760"
  },
  {
    "text": "physically delivered to the user uh so this is what we call a correlation id and it's important for us",
    "start": "2261760",
    "end": "2268079"
  },
  {
    "text": "for this correlation id to be unique through the whole workflow and then how can we use it well",
    "start": "2268079",
    "end": "2275200"
  },
  {
    "text": "if something goes wrong and for instance the process failed when purchasing something we can show to",
    "start": "2275200",
    "end": "2281280"
  },
  {
    "text": "our user a message saying hey we screwed up something went wrong yatayada if you want to reach out to us please",
    "start": "2281280",
    "end": "2289520"
  },
  {
    "text": "give us this id and you show the user some string which they are supposed to just copy and include in the email",
    "start": "2289520",
    "end": "2295920"
  },
  {
    "text": "so then we can find all the messages all the logs in given workflow",
    "start": "2295920",
    "end": "2302160"
  },
  {
    "text": "just by using the correlation id and then we can order them sort them by using the logical time so the",
    "start": "2302160",
    "end": "2309200"
  },
  {
    "text": "correlation id is maintained across all the notes involved in fulfilling the request",
    "start": "2309200",
    "end": "2314640"
  },
  {
    "text": "it's never modified and it must be unique so typically it would be something like good nucleate",
    "start": "2314640",
    "end": "2320240"
  },
  {
    "text": "for logical time this is something which we will be modifying and this is something where we will implement the",
    "start": "2320240",
    "end": "2326880"
  },
  {
    "text": "lan port timestamp so we start with a interface like this i correlator",
    "start": "2326880",
    "end": "2332720"
  },
  {
    "text": "which supports or which provides these things like the correlation id the the logical time and also has this",
    "start": "2332720",
    "end": "2339680"
  },
  {
    "text": "method to update the time which we will be using to to update the time when we receive it",
    "start": "2339680",
    "end": "2346079"
  },
  {
    "text": "from some other interested party we may also include other things like for instance string activity which is like a human readable",
    "start": "2346079",
    "end": "2354079"
  },
  {
    "text": "or friendly knife user-friendly name of what's going on and then we start with a",
    "start": "2354079",
    "end": "2361359"
  },
  {
    "text": "base implementation of this correlator which is going to be reused across",
    "start": "2361359",
    "end": "2366720"
  },
  {
    "text": "all the nodes and it's important here that this implementation works logically or is equivalent no matter",
    "start": "2366720",
    "end": "2374079"
  },
  {
    "text": "what language what technology we use so the implementation is pretty",
    "start": "2374079",
    "end": "2379359"
  },
  {
    "text": "pretty obvious once we understand the lamp or timestamp so for logical time what we do is or",
    "start": "2379359",
    "end": "2386240"
  },
  {
    "text": "first we do have the the logical time field which is basically an integer right because our clock",
    "start": "2386240",
    "end": "2391760"
  },
  {
    "text": "is just an integer it could be long depending how how many ticks you expect and when we",
    "start": "2391760",
    "end": "2397280"
  },
  {
    "text": "want to get the time what we do is we just increment it obviously here i just use interlocked",
    "start": "2397280",
    "end": "2403520"
  },
  {
    "text": "increments for the sake of performance so we do not do not lock things here but it's just",
    "start": "2403520",
    "end": "2410079"
  },
  {
    "text": "the idea is that we increment this time and return it and for updating the time",
    "start": "2410079",
    "end": "2415920"
  },
  {
    "text": "what we do is we compare the the current time with the new time received from the other party so we",
    "start": "2415920",
    "end": "2422880"
  },
  {
    "text": "calculate the maximum of these two times and then we try to like use interlock to",
    "start": "2422880",
    "end": "2427920"
  },
  {
    "text": "store that in the field obviously we could just lock it if if we want to lock it but the idea is that we take these two",
    "start": "2427920",
    "end": "2434960"
  },
  {
    "text": "times and we store them in the field so this is the correlator which is a base class or the common",
    "start": "2434960",
    "end": "2442480"
  },
  {
    "text": "logic for all the correlators which we'll be using across throughout the system",
    "start": "2442480",
    "end": "2447599"
  },
  {
    "start": "2447000",
    "end": "2447000"
  },
  {
    "text": "and then we come to the logger interface which is basically used to log things here so you can see that",
    "start": "2447599",
    "end": "2453920"
  },
  {
    "text": "logger is has this i correlator instance and has some mess some method to lock the message and the",
    "start": "2453920",
    "end": "2460960"
  },
  {
    "text": "way we probably want to log the message includes plenty of things",
    "start": "2460960",
    "end": "2466319"
  },
  {
    "text": "which we would like to log along the message not only the message content but also other things so for instance",
    "start": "2466319",
    "end": "2473839"
  },
  {
    "text": "the ms the things that the components i typically log which are more or less useful in every",
    "start": "2473839",
    "end": "2480400"
  },
  {
    "text": "single system our timestamp like human readable time 920",
    "start": "2480400",
    "end": "2485520"
  },
  {
    "text": "in sydney time zone whatever application name because we have multiple applications like database",
    "start": "2485520",
    "end": "2491839"
  },
  {
    "text": "web server load or whatever else instance id this is an instance of the machine right",
    "start": "2491839",
    "end": "2497760"
  },
  {
    "text": "when we have a big fleet we have multiple machines this is the instance a current thread current process id",
    "start": "2497760",
    "end": "2504319"
  },
  {
    "text": "whatever if we do have a memory dump of a process it's useful to have a thread id so we",
    "start": "2504319",
    "end": "2510480"
  },
  {
    "text": "can later for instance check the stack traces if needed correlation id",
    "start": "2510480",
    "end": "2516160"
  },
  {
    "text": "crucial part so this is the identifier of the workflow we are currently working on",
    "start": "2516160",
    "end": "2521280"
  },
  {
    "text": "obviously level obviously some activity name if we have it and the logical time",
    "start": "2521280",
    "end": "2528000"
  },
  {
    "text": "so the lamp or timestamp i also include logger id because i typically have multiple loggers",
    "start": "2528000",
    "end": "2533760"
  },
  {
    "text": "obviously this is not like a extensive list of all the things you should be logging",
    "start": "2533760",
    "end": "2539200"
  },
  {
    "text": "depends on your use case you also need to keep in mind that the more you log the longer string you need to create so",
    "start": "2539200",
    "end": "2545839"
  },
  {
    "text": "the more memory you use etc etc so you need to balance it out right you want to lock as",
    "start": "2545839",
    "end": "2551520"
  },
  {
    "text": "much as possible so it's easy for you to figure out a from logs what was happening but at",
    "start": "2551520",
    "end": "2557760"
  },
  {
    "text": "the same time you don't want to like spend plenty of time on logging because logging",
    "start": "2557760",
    "end": "2562960"
  },
  {
    "text": "can kill the distributed system or the system with which is supposed to be to be fast so we",
    "start": "2562960",
    "end": "2570160"
  },
  {
    "text": "have this logger and how does it work now uh so imagine that our user comes and he hits or she",
    "start": "2570160",
    "end": "2576960"
  },
  {
    "start": "2572000",
    "end": "2572000"
  },
  {
    "text": "hits a button to purchase something so the first thing we hit or the network request hits",
    "start": "2576960",
    "end": "2582880"
  },
  {
    "text": "is probably like the load balancer so what we need to do in this load balancer we need to generate the",
    "start": "2582880",
    "end": "2589520"
  },
  {
    "text": "correlation id and start measuring the time so we do have some correlator again which basically",
    "start": "2589520",
    "end": "2596480"
  },
  {
    "text": "creates the the correlation id like go with new guide and we do have some",
    "start": "2596480",
    "end": "2601760"
  },
  {
    "text": "some correlation id method to get it and we do have some activity simple as that",
    "start": "2601760",
    "end": "2606880"
  },
  {
    "text": "this is what we do when entering the bounded context of given workflow what happens next is",
    "start": "2606880",
    "end": "2614400"
  },
  {
    "text": "imagine that the web server load balancer whatever wants to communicate with something else",
    "start": "2614400",
    "end": "2620720"
  },
  {
    "start": "2616000",
    "end": "2616000"
  },
  {
    "text": "like database or like some other note what we need to do is we need to pass",
    "start": "2620720",
    "end": "2626160"
  },
  {
    "text": "this uh that correlation id and the logical time and what we can for instance do is we",
    "start": "2626160",
    "end": "2632240"
  },
  {
    "text": "can implement a rest client which would be including these two things with headers",
    "start": "2632240",
    "end": "2638160"
  },
  {
    "text": "right so we add two additional headers to the network call like correlation id header and",
    "start": "2638160",
    "end": "2643520"
  },
  {
    "text": "correlation counter logical time time stamp whatever else and we just get these two things from",
    "start": "2643520",
    "end": "2648800"
  },
  {
    "text": "the correlator which we which we already saw the base implementation of correlator which increments the time",
    "start": "2648800",
    "end": "2655760"
  },
  {
    "text": "etc etc so this is what we do on the site which initiates",
    "start": "2655760",
    "end": "2662880"
  },
  {
    "text": "the communication now what we need to do is on the other side of the communication",
    "start": "2662880",
    "end": "2668160"
  },
  {
    "start": "2665000",
    "end": "2665000"
  },
  {
    "text": "we need to basically parse these headers and update our local correlation id and our local",
    "start": "2668160",
    "end": "2674800"
  },
  {
    "text": "time so what we do is for instance depending what net what framework you use",
    "start": "2674800",
    "end": "2679920"
  },
  {
    "text": "what uh like library for network calls etc what you do is for instance you can just get this",
    "start": "2679920",
    "end": "2685599"
  },
  {
    "text": "from http context or activity in your activity construct or",
    "start": "2685599",
    "end": "2690960"
  },
  {
    "text": "in your action filter in in whatever else right just at the entrance when you",
    "start": "2690960",
    "end": "2696560"
  },
  {
    "text": "enter the the start parsing or receiving the network call you need to extract these two these two",
    "start": "2696560",
    "end": "2702960"
  },
  {
    "text": "headers and and update both logical time here and also that the correlation id",
    "start": "2702960",
    "end": "2709839"
  },
  {
    "text": "then because you are processing things locally you just keep the logical time updated in",
    "start": "2709839",
    "end": "2715040"
  },
  {
    "text": "memory as always what happens next is we probably finished the network called",
    "start": "2715040",
    "end": "2720800"
  },
  {
    "start": "2717000",
    "end": "2717000"
  },
  {
    "text": "so we would like to return the response so we need to do is in the response",
    "start": "2720800",
    "end": "2726720"
  },
  {
    "text": "and we need to we need to basically send the same the same headers as a",
    "start": "2726720",
    "end": "2733680"
  },
  {
    "text": "response so what we do is again in your activity",
    "start": "2733680",
    "end": "2738720"
  },
  {
    "text": "framework action etc etc you can just add these two two headers",
    "start": "2738720",
    "end": "2745200"
  },
  {
    "text": "back you probably don't need to return the correlation id however it's probably not a big deal to add it",
    "start": "2745200",
    "end": "2751359"
  },
  {
    "text": "but you need to include the logical time so it can be updated on the other side there was a question at cha on the chat",
    "start": "2751359",
    "end": "2758319"
  },
  {
    "text": "the question is did you see jimmy bogart's talk yesterday on distributed tracing and dotnet cord built in support",
    "start": "2758319",
    "end": "2764880"
  },
  {
    "text": "for w3 standard trace context which uses cross platform standard headers",
    "start": "2764880",
    "end": "2771680"
  },
  {
    "text": "i haven't seen it and i'm actually surprised that finally there is a cross-platform",
    "start": "2771680",
    "end": "2777119"
  },
  {
    "text": "standard header for for things like this uh because when i was first giving this talk there were no things",
    "start": "2777119",
    "end": "2783760"
  },
  {
    "text": "like this and i was actually asking this question hey is there a framework which would be",
    "start": "2783760",
    "end": "2789440"
  },
  {
    "text": "doing this uniformly uh it's very good that finally this thing is standardized",
    "start": "2789440",
    "end": "2795040"
  },
  {
    "text": "because hopefully one day we won't need to implement this lamp or timestamp at all uh to to do this but yes uh typically",
    "start": "2795040",
    "end": "2802240"
  },
  {
    "text": "what uh what frameworks did or what people did you can always just create your own",
    "start": "2802240",
    "end": "2807440"
  },
  {
    "text": "header like x dash something which is basically an extension but hopefully it gets standardized one",
    "start": "2807440",
    "end": "2813280"
  },
  {
    "text": "day so it will be uniform across all the all the services moving on so what we",
    "start": "2813280",
    "end": "2819040"
  },
  {
    "text": "did is we returned the response so now what happens is on the sender on the initiator of the",
    "start": "2819040",
    "end": "2825839"
  },
  {
    "text": "communication we need to basically parse the response and update our logical clock so just the same way",
    "start": "2825839",
    "end": "2832480"
  },
  {
    "text": "like previously we had these headers when sending the request right now what we do is we parse the",
    "start": "2832480",
    "end": "2838079"
  },
  {
    "text": "response we extract the headers and we update the logical time so this is the the concept",
    "start": "2838079",
    "end": "2844319"
  },
  {
    "text": "which is seemingly very simple and in fact it is simple what is hard in implementing",
    "start": "2844319",
    "end": "2851520"
  },
  {
    "text": "this concept correctly is we need to make sure that we pass this lamp or timestamp and the",
    "start": "2851520",
    "end": "2857920"
  },
  {
    "text": "correlation id across all the nodes and we do it uniformly",
    "start": "2857920",
    "end": "2863839"
  },
  {
    "text": "it it means that we need to pass it via network calls via queue messages via",
    "start": "2863839",
    "end": "2870079"
  },
  {
    "text": "database transactions via any framework we have so just as someone mentioned on the chat",
    "start": "2870079",
    "end": "2876160"
  },
  {
    "text": "there is now http header for doing that it's http header that's cool but also we",
    "start": "2876160",
    "end": "2882079"
  },
  {
    "text": "have other things which are not necessarily network calls for instance when you post a message to your service",
    "start": "2882079",
    "end": "2887119"
  },
  {
    "text": "bus or to your queue you also need to include the logical time in the queue as well probably using like metadata for",
    "start": "2887119",
    "end": "2894240"
  },
  {
    "text": "the message whether you wire it through dependency injection or the middleware it's not",
    "start": "2894240",
    "end": "2899760"
  },
  {
    "text": "required but it's super useful to have it clear and and like a contained in one a one place and",
    "start": "2899760",
    "end": "2906079"
  },
  {
    "text": "whether you put your logger on top of existing login library or below that doesn't",
    "start": "2906079",
    "end": "2911920"
  },
  {
    "text": "matter necessarily what you basically need to do is you somehow need to pass these things to the login framework",
    "start": "2911920",
    "end": "2917520"
  },
  {
    "text": "so they are locked and what we do next well when we have all these things tied",
    "start": "2917520",
    "end": "2924000"
  },
  {
    "text": "together the ultimate big win which we have right now is when user comes to your service",
    "start": "2924000",
    "end": "2929760"
  },
  {
    "text": "or help desk and tells you hey something went wrong and they give you this correlation id",
    "start": "2929760",
    "end": "2935760"
  },
  {
    "text": "you can just get grip all the locks you have across all the machines you do have no matter whether they are in tokyo",
    "start": "2935760",
    "end": "2942720"
  },
  {
    "text": "in sydney in new york or london doesn't matter you get all the messages for given correlation id",
    "start": "2942720",
    "end": "2949200"
  },
  {
    "text": "and you can order them using the lampport timestamp and as long as you know which events",
    "start": "2949200",
    "end": "2954800"
  },
  {
    "text": "influenced which so you know how your application works more or less you can reason about what was happening",
    "start": "2954800",
    "end": "2962160"
  },
  {
    "text": "in which order in the application that's it that's it for the order for",
    "start": "2962160",
    "end": "2967760"
  },
  {
    "text": "cleaning logs and now we can focus a little more on the ordering the events in the in the system and for that we",
    "start": "2967760",
    "end": "2975040"
  },
  {
    "text": "will basically only touch the topic uh because it is pretty big research thingy and it's much",
    "start": "2975040",
    "end": "2980960"
  },
  {
    "text": "uh more complex than what we want to cover for today so this is more of giving you idea how",
    "start": "2980960",
    "end": "2986960"
  },
  {
    "text": "we can reuse this even more so we started with one clock",
    "start": "2986960",
    "end": "2992720"
  },
  {
    "start": "2988000",
    "end": "2988000"
  },
  {
    "text": "which was used in all the nodes we can also build something which is a vector clock which",
    "start": "2992720",
    "end": "2999680"
  },
  {
    "text": "would be basically a list of clocks for every single node we have in our system",
    "start": "2999680",
    "end": "3005440"
  },
  {
    "text": "so to show you an example how this differs previously when we did have a clock",
    "start": "3005440",
    "end": "3010640"
  },
  {
    "text": "and we did have communication all these nodes they had like one logical clock which was passed with the message",
    "start": "3010640",
    "end": "3017280"
  },
  {
    "text": "and then at this point when we were receiving the message we were comparing these two clocks and",
    "start": "3017280",
    "end": "3023440"
  },
  {
    "text": "calculating the maximum of that with vector clock what we do now is",
    "start": "3023440",
    "end": "3028960"
  },
  {
    "text": "we store all the received clocks and we keep them in memory so we remember that node b at",
    "start": "3028960",
    "end": "3035359"
  },
  {
    "text": "this point had some clock local clock b and also had some clock c",
    "start": "3035359",
    "end": "3040880"
  },
  {
    "text": "which was received from node c and once we built all these clocks you can see that ultimately like",
    "start": "3040880",
    "end": "3046480"
  },
  {
    "text": "every single node will have clocks for every other node what we can do next having this vector",
    "start": "3046480",
    "end": "3053359"
  },
  {
    "text": "clock instead of a lapper clock we can start comparing these vectors and",
    "start": "3053359",
    "end": "3059280"
  },
  {
    "text": "comparison here is basically just like we would be comparing the the values",
    "start": "3059280",
    "end": "3064319"
  },
  {
    "text": "uh using regular vector comparison so vector is less than the other vector",
    "start": "3064319",
    "end": "3071440"
  },
  {
    "text": "if they are equal on each component and there is next some component which is strictly less",
    "start": "3071440",
    "end": "3076800"
  },
  {
    "text": "than the big win here we have is that as with lampard clock",
    "start": "3076800",
    "end": "3082640"
  },
  {
    "text": "when a influences b event a influences b we know that vector clock of a is less",
    "start": "3082640",
    "end": "3089440"
  },
  {
    "text": "than vector clock of b but unlike with lamport we also know",
    "start": "3089440",
    "end": "3094960"
  },
  {
    "text": "that if vector clock of a is less than vector clock of b",
    "start": "3094960",
    "end": "3100000"
  },
  {
    "text": "then a happened before b this is something we did not have with lampard timestamps this is",
    "start": "3100000",
    "end": "3106319"
  },
  {
    "text": "something we do have with vector clocks there is yet another question or comment",
    "start": "3106319",
    "end": "3112800"
  },
  {
    "text": "in the chat does not specifically include time but you can add a trace state",
    "start": "3112800",
    "end": "3118000"
  },
  {
    "text": "header with custom key value pairs standard systems that don't understand must pass through",
    "start": "3118000",
    "end": "3123760"
  },
  {
    "text": "yep so so this is yet a about this this new headers which are now standardized in rfc that",
    "start": "3123760",
    "end": "3130400"
  },
  {
    "text": "if some system does not understand the timestamp that's passed through uh so it's not lost which is actually",
    "start": "3130400",
    "end": "3136400"
  },
  {
    "text": "pretty pretty useful so so yeah if this is a this becomes a",
    "start": "3136400",
    "end": "3141920"
  },
  {
    "text": "common thing across the distributed systems or across the framework it's going to probably can be used for",
    "start": "3141920",
    "end": "3147520"
  },
  {
    "text": "the things we are now talking about so it's cool it's finally standardized going back to vector clocks so the big",
    "start": "3147520",
    "end": "3154240"
  },
  {
    "text": "one the the advantage we have here is if we can compare clocks we also can",
    "start": "3154240",
    "end": "3159760"
  },
  {
    "text": "tell something about events which we didn't have with lumper timestamps and how can we",
    "start": "3159760",
    "end": "3165520"
  },
  {
    "text": "use it later so the thing is and there are obviously a couple more generalizations of this",
    "start": "3165520",
    "end": "3171359"
  },
  {
    "text": "clock so we'll skip that for now and how can we use it we can use it to solve a problem",
    "start": "3171359",
    "end": "3176559"
  },
  {
    "start": "3173000",
    "end": "3173000"
  },
  {
    "text": "which in the literature is called a byzantine generals problem when we do have a",
    "start": "3176559",
    "end": "3183520"
  },
  {
    "text": "distributed system the trick here is that nodes can fail so imagine that we do",
    "start": "3183520",
    "end": "3190240"
  },
  {
    "text": "have like an army and they want to make a decision where they didn't want to attack or retreat and there is a general which",
    "start": "3190240",
    "end": "3196880"
  },
  {
    "text": "makes a decision we attack general passes this decision to all the lieutenants however there is one malicious",
    "start": "3196880",
    "end": "3203440"
  },
  {
    "text": "lieutenant here which instead of passing the right decision so the decision which",
    "start": "3203440",
    "end": "3208559"
  },
  {
    "text": "general made he passes the the other decision to retreat here",
    "start": "3208559",
    "end": "3213599"
  },
  {
    "text": "so this thing happens in distributed systems often when machine crashes",
    "start": "3213599",
    "end": "3218960"
  },
  {
    "text": "and they crash a lot machines they do crash a lot so they may work incorrectly in some way",
    "start": "3218960",
    "end": "3226640"
  },
  {
    "text": "send invalid messages send messages out of order invalid according to rfc",
    "start": "3226640",
    "end": "3231920"
  },
  {
    "text": "whatever else what can we do about that when anything of this happens like the",
    "start": "3231920",
    "end": "3237839"
  },
  {
    "text": "protocol is violated message is repeated messages are broken etc we are talking that we would like to",
    "start": "3237839",
    "end": "3244240"
  },
  {
    "text": "have a system which is careful to tolerant so we would like to build a system which can survive",
    "start": "3244240",
    "end": "3250720"
  },
  {
    "text": "at most k failures so at most k notes if they crash we are still okay if",
    "start": "3250720",
    "end": "3256960"
  },
  {
    "text": "more components fail then we break so if we do not have byzantine failures",
    "start": "3256960",
    "end": "3262480"
  },
  {
    "text": "so if our nodes they do behave like decently then we need only k plus one components",
    "start": "3262480",
    "end": "3268400"
  },
  {
    "text": "to be careful to tolerant why because we can just ask every component and if at least one of them is working",
    "start": "3268400",
    "end": "3275839"
  },
  {
    "text": "properly we'll just get the answer however if they are byzantine failures meaning that the notes",
    "start": "3275839",
    "end": "3281440"
  },
  {
    "text": "may lie when it comes to answering the question we need at least two k plus one",
    "start": "3281440",
    "end": "3287280"
  },
  {
    "text": "components to be k fault tolerant because we need to get answers from all the components",
    "start": "3287280",
    "end": "3292799"
  },
  {
    "text": "and do the majority voting to find which answer is the most common and this will be the answer but this is",
    "start": "3292799",
    "end": "3299280"
  },
  {
    "text": "only for reading however if we would like to start writing something we need to basically",
    "start": "3299280",
    "end": "3305119"
  },
  {
    "start": "3302000",
    "end": "3302000"
  },
  {
    "text": "solve a consensus problem a problem which any in which any node can fail",
    "start": "3305119",
    "end": "3310880"
  },
  {
    "text": "and we would like to have a mechanism which terminates at some point so which finishes",
    "start": "3310880",
    "end": "3317520"
  },
  {
    "text": "which maintains the integrity so when we are writing a value this value which was proposed by at",
    "start": "3317520",
    "end": "3324480"
  },
  {
    "text": "least one of the notes is actually written and also all the notes they agree which value is written so this is the",
    "start": "3324480",
    "end": "3331280"
  },
  {
    "text": "consensus problem we are trying to solve and if we want to have k fault",
    "start": "3331280",
    "end": "3336880"
  },
  {
    "text": "a tolerant system we actually need to have three k plus plus one nodes to to do so",
    "start": "3336880",
    "end": "3344799"
  },
  {
    "text": "and this is a much bigger research because we can there are circumstances in which we",
    "start": "3344799",
    "end": "3351040"
  },
  {
    "text": "won't be able to achieve this or solve this consensus problem that depends on the",
    "start": "3351040",
    "end": "3356400"
  },
  {
    "text": "communication which we have whether it's synchronous asynchronous order damned ordered with bounded delay",
    "start": "3356400",
    "end": "3362400"
  },
  {
    "text": "or whatever else and there are mathematical proofs that we cannot solve the cons",
    "start": "3362400",
    "end": "3367520"
  },
  {
    "text": "consensus problem in some of these situations but let's say that we can solve this",
    "start": "3367520",
    "end": "3373280"
  },
  {
    "text": "conceptual problem how will tackle it now multiple algorithms one of them",
    "start": "3373280",
    "end": "3378559"
  },
  {
    "start": "3376000",
    "end": "3376000"
  },
  {
    "text": "is for instance the the raft algorithm which also looks seemingly very simple because well we do",
    "start": "3378559",
    "end": "3385599"
  },
  {
    "text": "have some leader node and other nodes are followers and if leader crashes the followers they",
    "start": "3385599",
    "end": "3392400"
  },
  {
    "text": "start the election protest so every follower says hey i want to be a leader and they somehow",
    "start": "3392400",
    "end": "3398160"
  },
  {
    "text": "come to an agreement how to do it however there is a mathematical challenge in this",
    "start": "3398160",
    "end": "3403359"
  },
  {
    "text": "because it's very hard to actually prove that this algorithm will work under all circumstances in all edge",
    "start": "3403359",
    "end": "3410400"
  },
  {
    "text": "cases and will never fail so that's why devising inventing these algorithms is",
    "start": "3410400",
    "end": "3416000"
  },
  {
    "text": "pretty tricky and we should probably not be doing by ourselves however once we do have",
    "start": "3416000",
    "end": "3421520"
  },
  {
    "text": "solution like this what we can do is we can implement couple operations",
    "start": "3421520",
    "end": "3426559"
  },
  {
    "text": "one of them being totaled ordered broadcast so this is an operation which basically",
    "start": "3426559",
    "end": "3433200"
  },
  {
    "text": "uh we can use it to have all the nodes in our system no matter whether it's",
    "start": "3433200",
    "end": "3439359"
  },
  {
    "text": "like system in one data center or whether it's globally around the globe all the nodes will agree on some value",
    "start": "3439359",
    "end": "3446960"
  },
  {
    "text": "for instance on the timestamp or on the order of messages which we would like to store",
    "start": "3446960",
    "end": "3454240"
  },
  {
    "text": "however this is tricky this is much harder to implement correctly this introduces",
    "start": "3454240",
    "end": "3460000"
  },
  {
    "text": "long delays it's so generally if you are interested in how things can break with this approach",
    "start": "3460000",
    "end": "3466640"
  },
  {
    "text": "i encourage you to take a look at the jepsen framework which is basically um a way to",
    "start": "3466640",
    "end": "3473599"
  },
  {
    "text": "validate mathematically that the system works properly as expected and meets all",
    "start": "3473599",
    "end": "3479920"
  },
  {
    "text": "the all the guarantees it's supposed to be providing like transaction consistency or visibility",
    "start": "3479920",
    "end": "3486880"
  },
  {
    "text": "or other things but once we do have it once we have it we can actually order",
    "start": "3486880",
    "end": "3492240"
  },
  {
    "text": "the events the way we would like to to do wrapping up",
    "start": "3492240",
    "end": "3497359"
  },
  {
    "text": "using wall clogging distributed systems is not a way to go you have seen that it's hard to",
    "start": "3497359",
    "end": "3502480"
  },
  {
    "text": "synchronize clocks clocks are tricky clocks are very hard to",
    "start": "3502480",
    "end": "3507920"
  },
  {
    "text": "it's hard to reason about clocks as well because this is not something we typically think about but once we run",
    "start": "3507920",
    "end": "3513359"
  },
  {
    "text": "globally we need to do it and it won't become any easier because hey we are running distributed systems",
    "start": "3513359",
    "end": "3519760"
  },
  {
    "text": "now and the world won't be simpler than it's now it actually will be more complex",
    "start": "3519760",
    "end": "3525520"
  },
  {
    "text": "however lumber timestamp is a nice solution uh for for the",
    "start": "3525520",
    "end": "3532160"
  },
  {
    "text": "uh for ordering the locks and having some sanity and if we want to have something more",
    "start": "3532160",
    "end": "3537920"
  },
  {
    "text": "then there are also other solutions which are more sophisticated more complex but they also start with this",
    "start": "3537920",
    "end": "3544160"
  },
  {
    "text": "lamp or timestamp a lamp or timestamp approach which we have seen",
    "start": "3544160",
    "end": "3549440"
  },
  {
    "text": "q a i don't see any more questions here and i don't see any more questions on",
    "start": "3549440",
    "end": "3554880"
  },
  {
    "text": "slack so that would be it feel free to drop me questions on slack so we can answer them later",
    "start": "3554880",
    "end": "3561119"
  },
  {
    "text": "couple more sources for you if you would like to read more about these things i encourage you to take a",
    "start": "3561119",
    "end": "3566720"
  },
  {
    "start": "3562000",
    "end": "3562000"
  },
  {
    "text": "look at these books especially the distributed systems principles and paradigms by tannenbaum",
    "start": "3566720",
    "end": "3572319"
  },
  {
    "text": "pretty nice one explaining most of the uh concepts of distributed systems and",
    "start": "3572319",
    "end": "3578160"
  },
  {
    "text": "if you are actually writing something there is uh or actually you want to build something which is",
    "start": "3578160",
    "end": "3583359"
  },
  {
    "text": "super uh super scalable i encourage you to read the designing",
    "start": "3583359",
    "end": "3588400"
  },
  {
    "text": "data intensive applications a pretty nice one there is a question in the chat i understood lampard's logical time to be",
    "start": "3588400",
    "end": "3595200"
  },
  {
    "text": "as simple as an incrementing integer yes the answer is yes this is basically incrementing an",
    "start": "3595200",
    "end": "3601680"
  },
  {
    "text": "integer which is simple what is hard is propagating this integer across",
    "start": "3601680",
    "end": "3606960"
  },
  {
    "text": "all the systems you have because uh because once you go with heterogeneous",
    "start": "3606960",
    "end": "3614400"
  },
  {
    "text": "environment and you have database queue service bus file storage whatever",
    "start": "3614400",
    "end": "3619440"
  },
  {
    "text": "else it's not as simple to propagate these timestamps uh correctly or this lamp or timestamps",
    "start": "3619440",
    "end": "3626799"
  },
  {
    "text": "it's very easy to lose them so there is there need to be some discipline how you implement these things but",
    "start": "3626799",
    "end": "3633599"
  },
  {
    "text": "generally yes it's just incrementing an integer",
    "start": "3633599",
    "end": "3639279"
  },
  {
    "text": "this is for books if you would like to read something on the internet a couple things here couple links i also",
    "start": "3639359",
    "end": "3646400"
  },
  {
    "text": "encourage you to take a look at my blog there you can find basically the source code for the things i presented for you",
    "start": "3646400",
    "end": "3652400"
  },
  {
    "text": "today and you can read a little more about what i told you and this is the qr",
    "start": "3652400",
    "end": "3658000"
  },
  {
    "text": "code pointing to the to the slide deck you can also google my blog blog adam from manic pl and you'll",
    "start": "3658000",
    "end": "3663520"
  },
  {
    "text": "find the talk over there with materials with everything else and having said all of that and that's",
    "start": "3663520",
    "end": "3669520"
  },
  {
    "text": "it for this morning so my name is adam furmanic thank you for attending this talk hope you enjoyed it",
    "start": "3669520",
    "end": "3674960"
  },
  {
    "text": "and have a great rest of your day and then dc conference thank you",
    "start": "3674960",
    "end": "3685839"
  },
  {
    "text": "you",
    "start": "3694319",
    "end": "3696400"
  }
]