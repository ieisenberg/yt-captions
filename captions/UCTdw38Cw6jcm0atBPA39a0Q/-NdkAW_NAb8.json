[
  {
    "text": "okay so I have a microphone whooped and you guys are seeing what I'm saying",
    "start": "240",
    "end": "5520"
  },
  {
    "text": "as well okay so hey everyone hope you're having a good day so far uh so welcome to this talk about actor-based",
    "start": "5520",
    "end": "11820"
  },
  {
    "text": "development with project Orleans so my name is Chris klug I work as a software developer slash architect slash",
    "start": "11820",
    "end": "19920"
  },
  {
    "text": "public speaker slash I'm a consultant right so I do what I get paid for I think that's the way it works and mostly",
    "start": "19920",
    "end": "26580"
  },
  {
    "text": "within the tech industry and uh a while back I had a client that",
    "start": "26580",
    "end": "32220"
  },
  {
    "text": "needed something a little bit different and I started looking at Orleans and Orleans if you look at it has a",
    "start": "32220",
    "end": "38040"
  },
  {
    "text": "definition Orleans is a cross-platform framework for building robust scalable distributed applications apps that span",
    "start": "38040",
    "end": "45120"
  },
  {
    "text": "more than a single process often Beyond Hardware boundaries using peer-to-peer communication",
    "start": "45120",
    "end": "51239"
  },
  {
    "text": "that is a lot of fancy words that says very little to be perfectly honest so I think we should go in and have a look at",
    "start": "51239",
    "end": "57600"
  },
  {
    "text": "what it actually does but before we get started the funny thing is that when I tell people that",
    "start": "57600",
    "end": "63480"
  },
  {
    "text": "I'm not so much anymore but about six months ago when I told anybody at the conference or any of the speakers that",
    "start": "63480",
    "end": "69900"
  },
  {
    "text": "when they come up and say so Chris what are you talking about I'm going to talk about project or lanes and they're all like what",
    "start": "69900",
    "end": "75240"
  },
  {
    "text": "is that still a thing does anybody care um and there's a reason for that",
    "start": "75240",
    "end": "81720"
  },
  {
    "text": "so project Orleans has been around for ages so producer Lanes was actually",
    "start": "81720",
    "end": "87000"
  },
  {
    "text": "designed and built and put into production in 2011. so it's been around for ages and it's been powering things",
    "start": "87000",
    "end": "94080"
  },
  {
    "text": "like Halo and Skype and a few other big things so it's being used by Microsoft",
    "start": "94080",
    "end": "100680"
  },
  {
    "text": "and externally by large projects that do need this hyperscale kind of thing and",
    "start": "100680",
    "end": "107220"
  },
  {
    "text": "it was open source in 2015. still if you start talking about projector Lanes some people have heard",
    "start": "107220",
    "end": "113700"
  },
  {
    "text": "about it and almost no one has ever played with it or tried it out and part of the reason for that is that",
    "start": "113700",
    "end": "120420"
  },
  {
    "text": "it is something that came out of Microsoft's research and was brought in to Halo as an internal thing and then",
    "start": "120420",
    "end": "126960"
  },
  {
    "text": "was open sourced and all the documentation that was there previously was very academic it was about",
    "start": "126960",
    "end": "133500"
  },
  {
    "text": "algorithms and things that was being done inside of orlanes and very little about how to get started and actually",
    "start": "133500",
    "end": "139980"
  },
  {
    "text": "using the product of the latest version version 7 so they",
    "start": "139980",
    "end": "145319"
  },
  {
    "text": "jump from version three to seven because versioning is hard apparently normally it's one two three four but inversioning",
    "start": "145319",
    "end": "151560"
  },
  {
    "text": "is one two three seven and they actually focused on making it usable",
    "start": "151560",
    "end": "157680"
  },
  {
    "text": "so that is what we're going to look at today but I guess the question first is what is the actor model and what is an actor",
    "start": "157680",
    "end": "165540"
  },
  {
    "text": "so basically an actor is a thing it's a piece of code that basically runs in",
    "start": "165540",
    "end": "172560"
  },
  {
    "text": "memory somewhere that can perform actions in half state and in the actor model everything can be",
    "start": "172560",
    "end": "180000"
  },
  {
    "text": "an actor so anything you can think of can be modeled as an actor as something that's available in on your server so it",
    "start": "180000",
    "end": "185819"
  },
  {
    "text": "could be your shopping cart a shopping cart could be an actor a user in the multiplayer game could be an actor an",
    "start": "185819",
    "end": "192840"
  },
  {
    "text": "actual game as part of a multiplayer game could be an actor um I used it to model some stuff in an",
    "start": "192840",
    "end": "199200"
  },
  {
    "text": "online auctioning system where each auction becomes its own actor because it just made sense to have it architected",
    "start": "199200",
    "end": "205319"
  },
  {
    "text": "like that so everything can be an actor however",
    "start": "205319",
    "end": "210920"
  },
  {
    "text": "Orleans isn't a pure actor model it is what they call a virtual actor model",
    "start": "210920",
    "end": "217800"
  },
  {
    "text": "so what's the difference between an actor model and a virtual actor model not a whole lot the main thing is",
    "start": "217800",
    "end": "226140"
  },
  {
    "text": "when you ask for an actor in the virtual actor model it gets created for you or",
    "start": "226140",
    "end": "231299"
  },
  {
    "text": "rehydrated or you get the thing that's in in memory depending on the situation so if you're asking for a new actor that",
    "start": "231299",
    "end": "237659"
  },
  {
    "text": "isn't available in memory or instantiated it instantiates it for you automatically if it's already in memory",
    "start": "237659",
    "end": "244440"
  },
  {
    "text": "it gives you a reference to that thing and if it's something that has been in memory but been garbage collected it",
    "start": "244440",
    "end": "250439"
  },
  {
    "text": "automatically just rehydrates it back up and gives you a reference to that you don't have to care about creating actors",
    "start": "250439",
    "end": "256199"
  },
  {
    "text": "and things like that it's just you ask for an actor and there it is that is apparently the big difference with a",
    "start": "256199",
    "end": "261239"
  },
  {
    "text": "virtual actor model an actor is defined like this and I kind",
    "start": "261239",
    "end": "266880"
  },
  {
    "text": "of like it so an actor is an address some behavior and potentially some",
    "start": "266880",
    "end": "272639"
  },
  {
    "text": "states and that's kind of simple and it's kind of so it's an addressable",
    "start": "272639",
    "end": "279780"
  },
  {
    "text": "stateful service that can be easily created and called okay",
    "start": "279780",
    "end": "285000"
  },
  {
    "text": "once again lots of fancy words doesn't say that much but I actually like to look at it as a",
    "start": "285000",
    "end": "290400"
  },
  {
    "text": "distributed Isa container with named Singleton instances I also love the fact that I can add a",
    "start": "290400",
    "end": "296280"
  },
  {
    "text": "Microsoft conference now say a distributed iuc container with Singleton instances when all of you understand it",
    "start": "296280",
    "end": "303060"
  },
  {
    "text": "most of you at least if I had done that at the.net conference 10 years ago people would have looked at me and got",
    "start": "303060",
    "end": "309000"
  },
  {
    "text": "are you seek container what's that what's a Singleton what the now we all get that because we have a are you see",
    "start": "309000",
    "end": "316500"
  },
  {
    "text": "in dependence injection built into a split core for example so if you think of an Isa container that",
    "start": "316500",
    "end": "322620"
  },
  {
    "text": "we have today it looks like this right you have your application it has an IEC container it runs on one host in your",
    "start": "322620",
    "end": "329639"
  },
  {
    "text": "web app and you can ask for services inside of that right and they can be registered as Singleton or transient or",
    "start": "329639",
    "end": "335039"
  },
  {
    "text": "scoped or whatever you want but basically if you go single turn you get the same instance every time and it's",
    "start": "335039",
    "end": "340500"
  },
  {
    "text": "available and it's an easy way for you to store State between different calls into your web server for example",
    "start": "340500",
    "end": "346919"
  },
  {
    "text": "the current implementation of the ISE container in aspenet is or in.net core is that you end up with this so when you",
    "start": "346919",
    "end": "352860"
  },
  {
    "text": "scale out in a farm you end up with multiple ioc containers right so you",
    "start": "352860",
    "end": "358199"
  },
  {
    "text": "have multiple instances because they're all part of each of the apps and when you scale out you get as many ioc",
    "start": "358199",
    "end": "363240"
  },
  {
    "text": "containers as you guess apps which causes some problems because how many of you have tried doing cash",
    "start": "363240",
    "end": "369300"
  },
  {
    "text": "invalidation in a server form and enjoyed it there's like one hand coming up and they",
    "start": "369300",
    "end": "375720"
  },
  {
    "text": "go nope did not enjoy caching is hard right cash invalidation and handling",
    "start": "375720",
    "end": "381240"
  },
  {
    "text": "things and state is complicated and this simplifies retrieving it but it doesn't",
    "start": "381240",
    "end": "386340"
  },
  {
    "text": "simplify the state management and the cache eviction but if you were able to do this",
    "start": "386340",
    "end": "391740"
  },
  {
    "text": "it would be a lot easier right so that is what Orleans does for you it basically gives you one ioc container",
    "start": "391740",
    "end": "398280"
  },
  {
    "text": "one container for all your services that is spread across all of your machines in your cluster you just ask for a service",
    "start": "398280",
    "end": "404580"
  },
  {
    "text": "and you don't have to care whether or not it's on host a or host B it just",
    "start": "404580",
    "end": "410100"
  },
  {
    "text": "magically works and you get an interface back and you can make calls to it whether or not it's on your server or on",
    "start": "410100",
    "end": "415139"
  },
  {
    "text": "another server that is completely transparent to you",
    "start": "415139",
    "end": "419720"
  },
  {
    "text": "oh yeah and it's single threaded by default it's because something like that that",
    "start": "420240",
    "end": "425699"
  },
  {
    "text": "would be spread out in a server form that was multi-threaded and all of that",
    "start": "425699",
    "end": "430919"
  },
  {
    "text": "is really really complicated and it's just I'm not smart enough to do multi-threaded Computing it's just way",
    "start": "430919",
    "end": "436620"
  },
  {
    "text": "above my pay grade this is single single threaded by default so you don't have to care about multi-threading and things like that",
    "start": "436620",
    "end": "442860"
  },
  {
    "text": "every call to your your actor is going to be in sequence sequential which makes",
    "start": "442860",
    "end": "449520"
  },
  {
    "text": "it a lot easier to work with you can get away from it though so you can go multi-threaded if you're",
    "start": "449520",
    "end": "455340"
  },
  {
    "text": "really really smart or think you are really really smart but before we go any further we have to",
    "start": "455340",
    "end": "460860"
  },
  {
    "text": "talk about Orleans lingo so Orleans for obvious reasons coming out of Microsoft no bashing Microsoft sorry about that",
    "start": "460860",
    "end": "466440"
  },
  {
    "text": "I'm a Microsoft MVP I'm not supposed to be bashing them but they obviously renamed everything because we had things like actor",
    "start": "466440",
    "end": "474300"
  },
  {
    "text": "um and we had things like nodes and clusters and things but in Orleans they decided to name a node a silo",
    "start": "474300",
    "end": "482099"
  },
  {
    "text": "and they decided to name an actor a grain and you see where this is going right",
    "start": "482099",
    "end": "487139"
  },
  {
    "text": "you have grains inside of silos inside of your server Farm",
    "start": "487139",
    "end": "492180"
  },
  {
    "text": "yes it is that bad it is really that bad but it you get",
    "start": "492180",
    "end": "497460"
  },
  {
    "text": "used to it it's called grains that's just the way it is and they also so it changes a bit also because you don't",
    "start": "497460",
    "end": "502919"
  },
  {
    "text": "have an address because you don't need a full address to reach your your actor because it's inside of Orleans so you",
    "start": "502919",
    "end": "509340"
  },
  {
    "text": "only need identity you don't need a full address so that that little thing I had before",
    "start": "509340",
    "end": "514380"
  },
  {
    "text": "changes a little bit with Orleans you get a grain equals identity behavior and",
    "start": "514380",
    "end": "520320"
  },
  {
    "text": "then potential States so all I need to know is that in this case I'm looking for a user",
    "start": "520320",
    "end": "527339"
  },
  {
    "text": "um grain or actor with the ID stereo call so the identity",
    "start": "527339",
    "end": "533580"
  },
  {
    "text": "becomes a combination of the type and the the name that you've given it in this case I'm using a string as an",
    "start": "533580",
    "end": "538860"
  },
  {
    "text": "identity but you can also do integers and grids and combinations of those then you have your behavior which is",
    "start": "538860",
    "end": "545040"
  },
  {
    "text": "basically your c-sharp class so it's a it's a standard C sharp Poco that inherits from grain and implements your",
    "start": "545040",
    "end": "552300"
  },
  {
    "text": "in your interface that you have defined for your actor and then potentially State well that is whatever you put into",
    "start": "552300",
    "end": "558120"
  },
  {
    "text": "memory so any form of variables that you have inside your class is your state",
    "start": "558120",
    "end": "564139"
  },
  {
    "text": "but as I mentioned you have that virtual actor thing so get versus create how do",
    "start": "565140",
    "end": "570360"
  },
  {
    "text": "I know if I need to create an accurate if I can just retrieve it and with Orleans you don't have to care so the",
    "start": "570360",
    "end": "576060"
  },
  {
    "text": "general idea is that when you call the grain Factory and say can you please give me a grain of type I user call zero",
    "start": "576060",
    "end": "583019"
  },
  {
    "text": "call it's going to ask one Silo somewhere in the cluster for that user or that grain",
    "start": "583019",
    "end": "589500"
  },
  {
    "text": "and that great Silo is then going to go away and talk to the other silos and figure out is there anybody in here that",
    "start": "589500",
    "end": "595380"
  },
  {
    "text": "actually has that grain in memory already if there isn't then it's going to go ahead and create that grain",
    "start": "595380",
    "end": "600899"
  },
  {
    "text": "somewhere in the cluster on one of the nodes sorry on one of the silos and then return a reference to to that",
    "start": "600899",
    "end": "607860"
  },
  {
    "text": "that grain and if I want to get that again and it's",
    "start": "607860",
    "end": "613320"
  },
  {
    "text": "already in memory then it's very simple because it just runs off gets the thing that's in memory gives me a proxy for that and I'm good to go",
    "start": "613320",
    "end": "620160"
  },
  {
    "text": "but the cool thing about this model here where it automatically just generates actors for you on the Fly is that if",
    "start": "620160",
    "end": "626640"
  },
  {
    "text": "this Silo goes down we have no changes to our code we don't need to they don't need to handle it any",
    "start": "626640",
    "end": "633420"
  },
  {
    "text": "any way specifically because it was in memory at one point if the node goes down the request just comes in again it",
    "start": "633420",
    "end": "640140"
  },
  {
    "text": "goes ahead and checks the silos that are left if none of them have an instance of it it creates an instance and returns",
    "start": "640140",
    "end": "645600"
  },
  {
    "text": "and reference to that instance or a proxy to it and we're good to go so it's very very easy to work with",
    "start": "645600",
    "end": "651959"
  },
  {
    "text": "so I thought we'd go ahead and write a little piece of code here just gonna see if I can log into this so I can see so",
    "start": "651959",
    "end": "657839"
  },
  {
    "text": "I'm going to jump out of this and we're going to pull up you're not saying that are you",
    "start": "657839",
    "end": "664380"
  },
  {
    "text": "that that's kind of sucked let's see if we can get this to be duplicate so you can see my screen",
    "start": "664380",
    "end": "671420"
  },
  {
    "text": "now you can see it so I have this project here I'm sorry if a little bit small the code is going to be bigger but",
    "start": "672540",
    "end": "678120"
  },
  {
    "text": "I have a silo project a grains project and a simulator project",
    "start": "678120",
    "end": "684839"
  },
  {
    "text": "so and if we look at the the projects here the grains project that's going to contain all of my grains or my actors it",
    "start": "684839",
    "end": "691920"
  },
  {
    "text": "only needs to reference the SDK so you just add a simple nuget reference",
    "start": "691920",
    "end": "697680"
  },
  {
    "text": "to Microsoft Orleans SDK and you're good to go I also have Microsoft Orleans runtime because I'm doing some",
    "start": "697680",
    "end": "703560"
  },
  {
    "text": "persistence demos so I need another nuget package as well but that's the only thing you need in your grain project",
    "start": "703560",
    "end": "710100"
  },
  {
    "text": "in the server side part of it which is the silo I add a reference to um",
    "start": "710100",
    "end": "716700"
  },
  {
    "text": "Microsoft Orleans server it's the only thing you need and now you're going to go but Chris you",
    "start": "716700",
    "end": "721800"
  },
  {
    "text": "have other nuget packages yes I do I have the Orleans dashboard because I'm going to show you that that's an extension and then I have some other",
    "start": "721800",
    "end": "728700"
  },
  {
    "text": "stuff around here that has to do with persistence that has to do with Orleans doesn't isn't necessarily something you",
    "start": "728700",
    "end": "734820"
  },
  {
    "text": "need and then I have a couple of Hosting things here to be able to host my silo but everything that is or lanes and",
    "start": "734820",
    "end": "741899"
  },
  {
    "text": "makes me build a silo is in that one nougat package and for the client which is in this case going to be my simulator",
    "start": "741899",
    "end": "748140"
  },
  {
    "text": "project it also has a reference to a Microsoft or Lanes package but it has",
    "start": "748140",
    "end": "753420"
  },
  {
    "text": "the Microsoft Orleans client that's it so it's very simple there's a client there's an SDK for the grains project a",
    "start": "753420",
    "end": "759660"
  },
  {
    "text": "server package for the server side or the Silo and if you want to have a client you have a Orleans client package",
    "start": "759660",
    "end": "765839"
  },
  {
    "text": "for that as well and then inside of here I'm going to go into my my grains project and I'm going",
    "start": "765839",
    "end": "772079"
  },
  {
    "text": "to go into the track location tracking grains and I'm going to first off start off by nope",
    "start": "772079",
    "end": "779040"
  },
  {
    "text": "introducing the interface that I need to create for my grain so I'm going to have an eye location tracking grain so the",
    "start": "779040",
    "end": "784860"
  },
  {
    "text": "demo here is based on the idea that I need to track something moving around it happens to be me running around in",
    "start": "784860",
    "end": "791339"
  },
  {
    "text": "Stockholm because I got the GPX GPS coordinates from my watch that was the easiest thing to simulate so it",
    "start": "791339",
    "end": "796620"
  },
  {
    "text": "simulates location tracking and to be able to track that I basically just need a method called update location that",
    "start": "796620",
    "end": "802440"
  },
  {
    "text": "keeps track of each user or each grain has state of where where it's located at the moment",
    "start": "802440",
    "end": "809459"
  },
  {
    "text": "then it also needs to extend I grain with string key so that interface basically just tells Orleans that",
    "start": "809459",
    "end": "816120"
  },
  {
    "text": "there's going to be this is going to be a grain it's going to have a string key and the funny thing",
    "start": "816120",
    "end": "821160"
  },
  {
    "text": "is if you go in and have a look at this it doesn't actually include anything there's nothing on that there's nothing",
    "start": "821160",
    "end": "826740"
  },
  {
    "text": "on this there's nothing on this I think",
    "start": "826740",
    "end": "831959"
  },
  {
    "text": "so it's totally empty interfaces and the reason for that is that when you build a",
    "start": "831959",
    "end": "837600"
  },
  {
    "text": "an Orleans project there's actually a source generators that generates a bunch of code that gets injected into your",
    "start": "837600",
    "end": "843779"
  },
  {
    "text": "your grains just because you are implementing that interface so it's kind of a marker interface for functionality",
    "start": "843779",
    "end": "850320"
  },
  {
    "text": "uh one thing to note is that it takes so first of all it's async it has to be async because we don't know if it's",
    "start": "850320",
    "end": "856560"
  },
  {
    "text": "going to be in memory or it's going to be a cross Network call but anything that needs to be passed in",
    "start": "856560",
    "end": "862200"
  },
  {
    "text": "in the form of an object anything that's a complex type has to be be marked with",
    "start": "862200",
    "end": "868139"
  },
  {
    "text": "generate serializer it is not the same attribute as serializable that we are",
    "start": "868139",
    "end": "873899"
  },
  {
    "text": "used to using in in.net this is a separate one and it requires you to put IDs on each one of your properties to",
    "start": "873899",
    "end": "880380"
  },
  {
    "text": "get them in the right order when they serialize and it has to do with using a very efficient serialization algorithm",
    "start": "880380",
    "end": "886920"
  },
  {
    "text": "so that's why you need to dial that manually now it actually implementation of my my",
    "start": "886920",
    "end": "892800"
  },
  {
    "text": "brain is this so it's pure C sharp nothing complicated I inherit from grain which",
    "start": "892800",
    "end": "899579"
  },
  {
    "text": "is just a helper class I Define the interface or implement the interface that I'm I want to implement",
    "start": "899579",
    "end": "905459"
  },
  {
    "text": "which is simply the update location and all I'm going to do in this grain is I'm going to do console right line I'm",
    "start": "905459",
    "end": "912300"
  },
  {
    "text": "not doing anything here so whenever a grain is created in the Constructor I do a creating location tracking grain",
    "start": "912300",
    "end": "919019"
  },
  {
    "text": "console log and then for each update locate location update I do another console right line telling it what grain",
    "start": "919019",
    "end": "925560"
  },
  {
    "text": "is getting updated when it was updated and the new latitude longitude very very basic grain",
    "start": "925560",
    "end": "933959"
  },
  {
    "text": "so now that I have a grain that I can work with I can go to my silo",
    "start": "933959",
    "end": "939120"
  },
  {
    "text": "so this is the bare minimum Silo that you can build it's a console application",
    "start": "939120",
    "end": "944220"
  },
  {
    "text": "it has a host in here because it's built on top of I host in.net core so all I",
    "start": "944220",
    "end": "950519"
  },
  {
    "text": "need is an host add or lanes and then start a sync and then wait for it to stop that's the bare minimum of a silo",
    "start": "950519",
    "end": "957180"
  },
  {
    "text": "host that I can but being that it's implemented as I host I could put it into my aspnet core application right",
    "start": "957180",
    "end": "963120"
  },
  {
    "text": "because asp.net core has a host as well or I could put it into anything that has a host I can add a links to it",
    "start": "963120",
    "end": "969839"
  },
  {
    "text": "so all I need is to go in here and I need to add our limbs now luckily adding or Lanes is ridiculously easy",
    "start": "969839",
    "end": "975720"
  },
  {
    "text": "use or Lanes that's it and then we have to pass in a callback which is going to be a context",
    "start": "975720",
    "end": "982800"
  },
  {
    "text": "and the silo like that and then we have to tell The Silo what",
    "start": "982800",
    "end": "989220"
  },
  {
    "text": "kind of networking we want or what setup we want we clustering for this I'm going to go ahead and say use development",
    "start": "989220",
    "end": "996240"
  },
  {
    "text": "clustering so development clustering is for actually that's not what I want this time sorry",
    "start": "996240",
    "end": "1003019"
  },
  {
    "text": "I don't want development just yet I want localhost clustering sorry so this is for development on your local machine it",
    "start": "1003019",
    "end": "1009920"
  },
  {
    "text": "sets up a one single node cluster for your localhost using",
    "start": "1009920",
    "end": "1016480"
  },
  {
    "text": "127001 as the the IP address and then I'm just going to go ahead and",
    "start": "1016480",
    "end": "1021980"
  },
  {
    "text": "say Silo dot use dashboard as well which is that X extra nuget package that I",
    "start": "1021980",
    "end": "1028160"
  },
  {
    "text": "pulled in that gives us a little dashboard that we can look at that's it Silo done",
    "start": "1028160",
    "end": "1034760"
  },
  {
    "text": "client-side client-side I've built a little project here that was not all what I wanted to press I want to open",
    "start": "1034760",
    "end": "1040040"
  },
  {
    "text": "this so I have once again is a little console app it creates a host it starts the host and",
    "start": "1040040",
    "end": "1046520"
  },
  {
    "text": "then basically it generates 10 simulators and the only thing that the simulators do is that they basically",
    "start": "1046520",
    "end": "1052100"
  },
  {
    "text": "once every second they give another GPS coordinate so we can see something moving around on the map later on but",
    "start": "1052100",
    "end": "1058160"
  },
  {
    "text": "that's updating the uh a grain basically so to add the client part for this",
    "start": "1058160",
    "end": "1064700"
  },
  {
    "text": "application to be able to communicate with my cluster once again we do use or Lanes but in this case we do use Orleans",
    "start": "1064700",
    "end": "1070460"
  },
  {
    "text": "client it has a callback that looks like that",
    "start": "1070460",
    "end": "1076340"
  },
  {
    "text": "and we just say client dot use localhost clustering like that and we're good to",
    "start": "1076340",
    "end": "1082700"
  },
  {
    "text": "go with the client nothing else that needs to be configured it just automatically works now I need to get a hold of my a way to",
    "start": "1082700",
    "end": "1090740"
  },
  {
    "text": "access my cluster and what we do is in here we say VAR Cloud cluster client equals and then we",
    "start": "1090740",
    "end": "1099020"
  },
  {
    "text": "say host dot Services dot get required class that's the one that we want",
    "start": "1099020",
    "end": "1104179"
  },
  {
    "text": "so we ask the host so when we call use Orleans client is going to add something called the icluster client to our ISE",
    "start": "1104179",
    "end": "1110720"
  },
  {
    "text": "container which allows us to talk to the cluster and then inside hire for each one of my",
    "start": "1110720",
    "end": "1116000"
  },
  {
    "text": "grains or sorry each one of my simulators I'm going to go ahead and pull out the grain so I'm going to say vargrain equals clusterclient dot",
    "start": "1116000",
    "end": "1124059"
  },
  {
    "text": "getgrain of type I location tracking grain like that and I'm going to give it",
    "start": "1124059",
    "end": "1131299"
  },
  {
    "text": "name so I'm just going to do name because the strings the name is going to",
    "start": "1131299",
    "end": "1136760"
  },
  {
    "text": "be simulator one two three and so on and then every time it needs to send a new update to the grain all I need to do in",
    "start": "1136760",
    "end": "1144020"
  },
  {
    "text": "here is say await grain dot update location once again you",
    "start": "1144020",
    "end": "1149900"
  },
  {
    "text": "can see in here once again but now you can see here that on my interface here I location tracking grain it just looks",
    "start": "1149900",
    "end": "1155960"
  },
  {
    "text": "like any other interface that you have it has a few little helper things that has to do with your lanes with getting client IDs and things or clients IDs",
    "start": "1155960",
    "end": "1163580"
  },
  {
    "text": "primary Keys sorry and such but I also got update location so I just use it like any other C sharp class",
    "start": "1163580",
    "end": "1169039"
  },
  {
    "text": "I need to show in point unfortunate point is in the wrong format so it has a two location extension method to make it",
    "start": "1169039",
    "end": "1175400"
  },
  {
    "text": "into a location class and that's it I have now created a grain that has my state I've created a silo to",
    "start": "1175400",
    "end": "1182780"
  },
  {
    "text": "host it and I created a client that can can call that that Silo so if we go ahead and start up a silo",
    "start": "1182780",
    "end": "1189980"
  },
  {
    "text": "and obviously using localhost clustering I can only use one Silo on my machine",
    "start": "1189980",
    "end": "1195620"
  },
  {
    "text": "because it uses 127001 and a predefined port and I can't move it around",
    "start": "1195620",
    "end": "1201919"
  },
  {
    "text": "but at least it works I'm just going to allow it to access stuff and then I can start my simulator",
    "start": "1201919",
    "end": "1210159"
  },
  {
    "text": "like that and if we pull up the so there's my simulator and you start simulating GPS positions and as you can",
    "start": "1210440",
    "end": "1217340"
  },
  {
    "text": "see here my Silo is getting updates so it's each one of those console right line gets output out here and if you",
    "start": "1217340",
    "end": "1223700"
  },
  {
    "text": "scroll up a little bit you can also see up here that it's creating all of the the grains for me based on simulator 8 2",
    "start": "1223700",
    "end": "1230179"
  },
  {
    "text": "6 5 and so on and it just runs and there's no code in here that I have to",
    "start": "1230179",
    "end": "1235520"
  },
  {
    "text": "take care of to manage the fact that it's a cross Network call or anything like that it just works I just call my",
    "start": "1235520",
    "end": "1242299"
  },
  {
    "text": "interface and everything seems to work so I'm going to try to stop that",
    "start": "1242299",
    "end": "1247760"
  },
  {
    "text": "gracefully ah no keep forgetting this sorry let's let's I",
    "start": "1247760",
    "end": "1253100"
  },
  {
    "text": "was supposed to show you one more thing and I keep closing that too early every time let's do debug",
    "start": "1253100",
    "end": "1259100"
  },
  {
    "text": "new instance start the simulator I wanted to show you this first so I added the dashboard",
    "start": "1259100",
    "end": "1266960"
  },
  {
    "text": "and the reason I added that is that it's really nice to be able to see this so just because I use the added use Orleans",
    "start": "1266960",
    "end": "1274580"
  },
  {
    "text": "dashboard I actually get a built-in dashboard so The Silo automatically gives me a dashboard that I can just",
    "start": "1274580",
    "end": "1280640"
  },
  {
    "text": "browse to and get information about my grain so I can go in here and I can see what grains are being created here there",
    "start": "1280640",
    "end": "1286580"
  },
  {
    "text": "are 10 activations on my location tracking grain I can see throughput and all of that stuff and that was just that",
    "start": "1286580",
    "end": "1292580"
  },
  {
    "text": "one line of use dashboard to be able to get to work that I kind of like that it gives us a",
    "start": "1292580",
    "end": "1298039"
  },
  {
    "text": "nice way of just quickly getting an overview of what's actually going on in there",
    "start": "1298039",
    "end": "1303220"
  },
  {
    "text": "so grain creation and setting up your first initial grain application or a Orleans application isn't really that",
    "start": "1304880",
    "end": "1311000"
  },
  {
    "text": "hard but there's more to it right there obviously something that has to do with silos and communication and clustering",
    "start": "1311000",
    "end": "1317600"
  },
  {
    "text": "and we all know that clustering things and building web servers in forms and stuff is complicated right",
    "start": "1317600",
    "end": "1324200"
  },
  {
    "text": "so Microsoft has tried to take that away as much as possible from Orleans so they only have two ports that your",
    "start": "1324200",
    "end": "1331159"
  },
  {
    "text": "stylus need to be able to communicate on so as long as you have your silos on the network where they can reach each other",
    "start": "1331159",
    "end": "1336620"
  },
  {
    "text": "and they can use two ports that you can Define on your own you're good to go that's all that you need to set it up",
    "start": "1336620",
    "end": "1342200"
  },
  {
    "text": "and by default you use thirty thousand to communicate with the silo from the",
    "start": "1342200",
    "end": "1347659"
  },
  {
    "text": "outside so with if you have a client and then it uses 11 11 to have a gossip",
    "start": "1347659",
    "end": "1353720"
  },
  {
    "text": "protocol between all the the silos inside of your cluster so it's fairly simple to set up",
    "start": "1353720",
    "end": "1359780"
  },
  {
    "text": "and as I showed you localhost clustering very very simple runs on your local machine setting it up",
    "start": "1359780",
    "end": "1365419"
  },
  {
    "text": "is this use localhost clustering for The Silo and use localhost clustering for the client that's it",
    "start": "1365419",
    "end": "1372919"
  },
  {
    "text": "if you want to go a bit further you can do development clustering this is by nature not for production it",
    "start": "1372919",
    "end": "1380659"
  },
  {
    "text": "is called development clustering do not go and use this for production because what you do is you basically say",
    "start": "1380659",
    "end": "1388340"
  },
  {
    "text": "I have a bunch of silos but one Silo is the master and if that Silo goes down",
    "start": "1388340",
    "end": "1393380"
  },
  {
    "text": "your entire cluster goes down pretty shitty version of a clustering situation right but that's the way that the",
    "start": "1393380",
    "end": "1399020"
  },
  {
    "text": "development clustering works so you basically set up all as many stylists as you want but you make one the master and",
    "start": "1399020",
    "end": "1405740"
  },
  {
    "text": "that's the one that keeps track of all the other silos and all you need to do is basically tell each one of the silos",
    "start": "1405740",
    "end": "1411200"
  },
  {
    "text": "which where can you reach the main or the master Silo that has all of The Silo",
    "start": "1411200",
    "end": "1417440"
  },
  {
    "text": "information and on the client you then tell it that hey I want to use static clustering and",
    "start": "1417440",
    "end": "1423500"
  },
  {
    "text": "here is the address where you can reach the the master node or one of the nodes in the cluster but preferably with the",
    "start": "1423500",
    "end": "1429500"
  },
  {
    "text": "masternode because that's always going to be up and you're good to go and then you can host as many silos as you want",
    "start": "1429500",
    "end": "1434600"
  },
  {
    "text": "on your local machine if you want to but a much better solution is using something called a clustering provider",
    "start": "1434600",
    "end": "1440900"
  },
  {
    "text": "and I really love this feature because all you do is just you go in and you",
    "start": "1440900",
    "end": "1446299"
  },
  {
    "text": "choose a provider and that can be in this case I'm using Azure so I'm using Azure storage clustering which is",
    "start": "1446299",
    "end": "1452120"
  },
  {
    "text": "basically telling each of my silos that hey you're part of a cluster and all of",
    "start": "1452120",
    "end": "1457280"
  },
  {
    "text": "the clustering information should be over here in table storage and then I'm good to go I don't have to do anything else if a cluster goes offline or a silo",
    "start": "1457280",
    "end": "1464900"
  },
  {
    "text": "goes offline the rest of the silos handles that if that new Silo comes online it communicates with all of the",
    "start": "1464900",
    "end": "1470480"
  },
  {
    "text": "others so you can add and remove silos as you want and they use table storage in this case to keep track of it and to",
    "start": "1470480",
    "end": "1476000"
  },
  {
    "text": "configure it all you need to do is give it a connection string to table storage and it does everything else on its own",
    "start": "1476000",
    "end": "1482299"
  },
  {
    "text": "and for the client it is the same thing as you can see there's no difference except for use or Lanes versus your use",
    "start": "1482299",
    "end": "1487340"
  },
  {
    "text": "Orleans client other than that it's exactly the same Community configuration",
    "start": "1487340",
    "end": "1493580"
  },
  {
    "text": "you can also do ado.net so if you want to back your uh your cluster by using",
    "start": "1494059",
    "end": "1499340"
  },
  {
    "text": "SQL for example you can just give it a connection string to a SQL database and it will store all of the clustering",
    "start": "1499340",
    "end": "1504559"
  },
  {
    "text": "information in the SQL and once again they look pretty much identical whether or not this is a silo",
    "start": "1504559",
    "end": "1510500"
  },
  {
    "text": "or a client and if we have a look at what that looks like I'm going to go ahead and I'm going",
    "start": "1510500",
    "end": "1515539"
  },
  {
    "text": "to do some Silo changes or clustering changes on my mesh application here so I'm going to go out I'm going to kill",
    "start": "1515539",
    "end": "1521900"
  },
  {
    "text": "that first of all so I'm going to start in The Silo which is here",
    "start": "1521900",
    "end": "1527539"
  },
  {
    "text": "so the first thing I'm going to do is I'm going to remove my these things here because I'm I'm done with that so what",
    "start": "1527539",
    "end": "1533960"
  },
  {
    "text": "I'm going to do is I'm going to say Silo dot use development clustering to start off",
    "start": "1533960",
    "end": "1539659"
  },
  {
    "text": "like that and that thing is going to ask me for an IP endpoint so I'm going to go a new IP",
    "start": "1539659",
    "end": "1545659"
  },
  {
    "text": "endpoint like that I'm going to give it IP address Dot loopback",
    "start": "1545659",
    "end": "1551779"
  },
  {
    "text": "and I'm going to give it Port 1 11 000. loopback 11 11.",
    "start": "1551779",
    "end": "1560840"
  },
  {
    "text": "so that is not configuring this Silo this is configuring where the master",
    "start": "1560840",
    "end": "1566840"
  },
  {
    "text": "Silo is located so for my own Silo for this local one I'm also going to go and say Hey I want",
    "start": "1566840",
    "end": "1573799"
  },
  {
    "text": "to configure the endpoints in here so I'm going to change the endpoints a bit and then I can go and say okay so",
    "start": "1573799",
    "end": "1579860"
  },
  {
    "text": "I'm going to have an IP address loop back for this thing normally you shouldn't have to input and",
    "start": "1579860",
    "end": "1586520"
  },
  {
    "text": "tell it specifically to use the loopback adapter but due to my machine having a Docker and desktop installed it actually",
    "start": "1586520",
    "end": "1593539"
  },
  {
    "text": "defaults not to 127001 it defaults to one seven two zero zero something that",
    "start": "1593539",
    "end": "1599360"
  },
  {
    "text": "has to do with Docker so I have to tell it what IP address to to use for this local local silo",
    "start": "1599360",
    "end": "1606860"
  },
  {
    "text": "hey I want you to communicate on Port 111 and Port 30 000.",
    "start": "1606860",
    "end": "1613340"
  },
  {
    "text": "now the estate person in the cloud in in the crowd now is going to look at this and",
    "start": "1613340",
    "end": "1618860"
  },
  {
    "text": "go but if you pull up more than one of these silos aren't they going to collide on Port 111 and put thirty thousand yes",
    "start": "1618860",
    "end": "1626960"
  },
  {
    "text": "they are so that's not going to work I have an ugly workaround for this this is not for any kind of production use it is",
    "start": "1626960",
    "end": "1633679"
  },
  {
    "text": "for demo purpose on my machine locally right now but I'm gonna write this",
    "start": "1633679",
    "end": "1639799"
  },
  {
    "text": "so I'm going to go process get process get as how many location dot tracking.silo processes are on my",
    "start": "1639799",
    "end": "1646340"
  },
  {
    "text": "machine at the moment for the first Silo that is going to be one for the rest of them it's going to",
    "start": "1646340",
    "end": "1652340"
  },
  {
    "text": "be two three four and so on and if the silo count is one then I'm going to set my port spread to zero otherwise I'm",
    "start": "1652340",
    "end": "1658940"
  },
  {
    "text": "going to do a random number between 0 and 1000 and then I'm just going to go ahead and add that down here",
    "start": "1658940",
    "end": "1665659"
  },
  {
    "text": "which basically means that each one of these uh the consecutive asylus that I pull up",
    "start": "1665659",
    "end": "1672620"
  },
  {
    "text": "are going to end up on individual IPM ports so they don't Collide on my local machine this is only because I'm running",
    "start": "1672620",
    "end": "1679539"
  },
  {
    "text": "multiple ones on my my local machine and then for uh for the uh",
    "start": "1679539",
    "end": "1687440"
  },
  {
    "text": "client sorry that was wrong one that's the one and for the client part of it I'm gonna have to go in and make a",
    "start": "1687440",
    "end": "1692840"
  },
  {
    "text": "little change here as well so I'm not going to go to localhost clustering I'm going to do client dot use the static",
    "start": "1692840",
    "end": "1698840"
  },
  {
    "text": "that's what I want to study clustering like that and what I need to go in here is the same thing I have to tell it",
    "start": "1698840",
    "end": "1705940"
  },
  {
    "text": "oh tell it's new IP endpoint like that and",
    "start": "1705940",
    "end": "1711620"
  },
  {
    "text": "it's going to be IP address Dot loopback and it's going to communicate on Port 30",
    "start": "1711620",
    "end": "1717559"
  },
  {
    "text": "000 with that Silo as such now that's all the change I need to actually change the whole clustering",
    "start": "1717559",
    "end": "1723440"
  },
  {
    "text": "model for my application so if I go and I add debug here so I go and create one silo",
    "start": "1723440",
    "end": "1728900"
  },
  {
    "text": "I'm gonna place this Silo up in the top left corner because it's the most important Silo remember to not delete",
    "start": "1728900",
    "end": "1734360"
  },
  {
    "text": "that then I'm going to go and create another silo so D sorry debug new instance",
    "start": "1734360",
    "end": "1743419"
  },
  {
    "text": "it's another Silo nope nope and I'm going to go ahead and start a",
    "start": "1743419",
    "end": "1749059"
  },
  {
    "text": "third Silo in here and then finally I'm going to go and create a simulator that starts sending",
    "start": "1749059",
    "end": "1755900"
  },
  {
    "text": "out messages and what you're gonna see hopefully is that",
    "start": "1755900",
    "end": "1762460"
  },
  {
    "text": "they are sort of hopefully somewhat evenly distributed across my silos like that",
    "start": "1766039",
    "end": "1771799"
  },
  {
    "text": "so you can see some information is ending up on the different silos and if I go ahead and kill one of these silos",
    "start": "1771799",
    "end": "1777140"
  },
  {
    "text": "not the master one any of the other ones that is going to slowly die that sounds bad but that's kind of what",
    "start": "1777140",
    "end": "1783200"
  },
  {
    "text": "I'm doing I'm slowly killing it and once that is dead you can see out here there's a bunch of stuff that says that",
    "start": "1783200",
    "end": "1789380"
  },
  {
    "text": "one of the silos went down it stopped working and I stopped the wrong window didn't I",
    "start": "1789380",
    "end": "1798020"
  },
  {
    "text": "damn it I there are two windows I can't stop there's a 50 shot the chance that I'm stopping the wrong one that was the",
    "start": "1798020",
    "end": "1804380"
  },
  {
    "text": "wrong one that was apparently the client so let's try this again uh",
    "start": "1804380",
    "end": "1811840"
  },
  {
    "text": "uh okay and now it breaks on top sorry if you close down the right Silo it will",
    "start": "1814220",
    "end": "1819860"
  },
  {
    "text": "reschedule that load on the other other silos as soon as the request comes in as I showed you in the PowerPoint",
    "start": "1819860",
    "end": "1825080"
  },
  {
    "text": "presentation before it's just a matter of remembering to close the right console on this machine",
    "start": "1825080",
    "end": "1830360"
  },
  {
    "text": "now a much easier and nicer way of doing this is to use storage clustering",
    "start": "1830360",
    "end": "1836179"
  },
  {
    "text": "so if we go to The Silo again and we remove the development clustering in",
    "start": "1836179",
    "end": "1841279"
  },
  {
    "text": "here and we go and we do that so basically I'm doing use Azure",
    "start": "1841279",
    "end": "1847340"
  },
  {
    "text": "storage clustering instead I go and configure table service client and all I do is I give it a connection string",
    "start": "1847340",
    "end": "1853340"
  },
  {
    "text": "which I've put into an environment variable on my machine and I use the same port spread configuration thing here",
    "start": "1853340",
    "end": "1859039"
  },
  {
    "text": "and then I go back to my my client and do the same thing I basically kill that and we do 0.5 like that and I do the",
    "start": "1859039",
    "end": "1866899"
  },
  {
    "text": "same thing use Azure storage clustering and I give it a a connection string if I now run my silos again",
    "start": "1866899",
    "end": "1874600"
  },
  {
    "text": "I don't have to care at all I don't have I can pull down silos in whatever order",
    "start": "1874880",
    "end": "1879919"
  },
  {
    "text": "I want and they will just keep on working and in table storage there will be a complete list of silos that are up",
    "start": "1879919",
    "end": "1886159"
  },
  {
    "text": "and running at the moment so if I start three of those and I start my",
    "start": "1886159",
    "end": "1891580"
  },
  {
    "text": "my simulator",
    "start": "1891700",
    "end": "1895539"
  },
  {
    "text": "that's my simulator that is not going to get killed let's put that on the side like that",
    "start": "1897200",
    "end": "1902480"
  },
  {
    "text": "and then I have three silos here somewhat evenly distributed let's take that one and kill that one",
    "start": "1902480",
    "end": "1909080"
  },
  {
    "text": "and that goes down",
    "start": "1909080",
    "end": "1912039"
  },
  {
    "text": "and the other ones take over so that load is now being distributed on that if I go in here and I go and start",
    "start": "1914179",
    "end": "1921080"
  },
  {
    "text": "another Silo in here that Silo is going to be really really boring and do nothing",
    "start": "1921080",
    "end": "1926659"
  },
  {
    "text": "because there's no load to put on it yet so it doesn't redistribute any load just because I pull up a new xyler because",
    "start": "1926659",
    "end": "1932240"
  },
  {
    "text": "everything is still instantiated on the old silos but if I go in I kill off that Silo hopefully some of that should end",
    "start": "1932240",
    "end": "1939500"
  },
  {
    "text": "up on this Silo instead maybe there is some of it ends up on this island so you",
    "start": "1939500",
    "end": "1946039"
  },
  {
    "text": "can just pull down silos and add silos and remove silos in whatever order we want and they just kind of make it work",
    "start": "1946039",
    "end": "1952700"
  },
  {
    "text": "and store everything in table storage",
    "start": "1952700",
    "end": "1956260"
  },
  {
    "text": "now there's a cameraman right in front of me and I always look like a complete  on those pictures I'm gonna have",
    "start": "1958039",
    "end": "1963620"
  },
  {
    "text": "like a weird thing like that so and that's when he took the picture yeah",
    "start": "1963620",
    "end": "1969080"
  },
  {
    "text": "um okay anyway Silo clustering fairly easy to work with",
    "start": "1969080",
    "end": "1975340"
  },
  {
    "text": "um observing grains is another really cool feature uh that I kind of like so what we got is something called an i",
    "start": "1975440",
    "end": "1982039"
  },
  {
    "text": "Observer and it allows a grain to push information out from the grain so that I",
    "start": "1982039",
    "end": "1988640"
  },
  {
    "text": "can observe it which allows me to basically monitor grains in my application in a nice way and after that",
    "start": "1988640",
    "end": "1994760"
  },
  {
    "text": "one slide I'm gonna go and go into the demo again it's useful slide probably skip that one so what I'm going to do",
    "start": "1994760",
    "end": "2000880"
  },
  {
    "text": "here is I have to slide this up here I wanna I wanna keep track of the",
    "start": "2000880",
    "end": "2008980"
  },
  {
    "text": "locations of my different grains so that I can show that off and I have a little application API up",
    "start": "2008980",
    "end": "2014799"
  },
  {
    "text": "here that were sorry a dashboard that I'm going to show you that's going to do that tracking but",
    "start": "2014799",
    "end": "2019960"
  },
  {
    "text": "what I'm going to do is I'm going to first off sorry I'm gonna remember to do this I'm going to revert back to low",
    "start": "2019960",
    "end": "2025659"
  },
  {
    "text": "close clustering because that's simple and nice very few things that can",
    "start": "2025659",
    "end": "2031240"
  },
  {
    "text": "go wrong with that I'm going to change that in my simulator as well",
    "start": "2031240",
    "end": "2036580"
  },
  {
    "text": "I'm gonna add that and remove that like that okay so",
    "start": "2036580",
    "end": "2044320"
  },
  {
    "text": "what I'm going to do is I I you You observe one grain at a time so I don't want to have to go and set up 50",
    "start": "2044320",
    "end": "2051040"
  },
  {
    "text": "different observables for each one of the grains that is running in my application instead I'm going to combine",
    "start": "2051040",
    "end": "2057460"
  },
  {
    "text": "the list of latest updates into its own grain so I'm going to go and add a new",
    "start": "2057460",
    "end": "2062740"
  },
  {
    "text": "class in here I'm going to call it dashboard grain",
    "start": "2062740",
    "end": "2068260"
  },
  {
    "text": "like that and then I'm going to implement that so it looks like this",
    "start": "2068260",
    "end": "2075280"
  },
  {
    "text": "so it's going to be an eye dashboard grain it's going to be a grain with a good key it's going to have a add",
    "start": "2075280",
    "end": "2080800"
  },
  {
    "text": "position update so each one of the the location tracking grains can go and say here is my latest grain and their latest",
    "start": "2080800",
    "end": "2086560"
  },
  {
    "text": "position so they're all going to feed into this one grain that keeps track of all the other grains where there are so I can get a list of the current",
    "start": "2086560",
    "end": "2092500"
  },
  {
    "text": "positions and then I'm going to have a what's called an eye dashboard Observer which is an eye grain Observer",
    "start": "2092500",
    "end": "2100060"
  },
  {
    "text": "and that's where I can go and say I want to subscribe to changes inside this grain and I do that by implementing I",
    "start": "2100060",
    "end": "2107500"
  },
  {
    "text": "dashboard Observer and I have on that interface I have an on position updated where I can get like a list of positions",
    "start": "2107500",
    "end": "2115000"
  },
  {
    "text": "that I can get out so whenever it the position list changes I can get updated with that",
    "start": "2115000",
    "end": "2121559"
  },
  {
    "text": "now nope actually I want to have that was the",
    "start": "2121660",
    "end": "2128980"
  },
  {
    "text": "wrong one no it was seven there it is so here's the implementation now a little tiny tweak here is that the interface is",
    "start": "2128980",
    "end": "2135700"
  },
  {
    "text": "called I dashboard grain I actually call my class location dashboard grain and the reason for that is that your grains",
    "start": "2135700",
    "end": "2142720"
  },
  {
    "text": "are not allowed the class implementation are not allowed to be the same name as any other class that is a grain in your",
    "start": "2142720",
    "end": "2148359"
  },
  {
    "text": "system and if I use the the dashboard for um Orleans that has a grain called",
    "start": "2148359",
    "end": "2155920"
  },
  {
    "text": "dashboard grain so if you end up having a class with the same name it's going to collide and say that there's already an",
    "start": "2155920",
    "end": "2162099"
  },
  {
    "text": "implementation of that because it doesn't take namespaces into account this can be modified but by default if",
    "start": "2162099",
    "end": "2168579"
  },
  {
    "text": "you have unique class names it makes a lot easier which is why I'm naming it location dashboard grain",
    "start": "2168579",
    "end": "2173680"
  },
  {
    "text": "it implements I dashboard grain it basically just has a list of current",
    "start": "2173680",
    "end": "2179260"
  },
  {
    "text": "positions and whenever it starts up I go and create a little log here then I create a",
    "start": "2179260",
    "end": "2185619"
  },
  {
    "text": "timer so register timer is a helper class from the grain class that I inherit from that allows us to have",
    "start": "2185619",
    "end": "2191859"
  },
  {
    "text": "timers coming back on the same thread that everything else is so we keep that single threaded Thing by using a timer",
    "start": "2191859",
    "end": "2198280"
  },
  {
    "text": "like this instead of setting up like a system dot threading.timer or wherever they're",
    "start": "2198280",
    "end": "2203500"
  },
  {
    "text": "located there's also something called a reminder reminders are a little bit different timers can run on a fairly rapid Cadence",
    "start": "2203500",
    "end": "2211359"
  },
  {
    "text": "and they're basically only as long as your grain is in memory but if you put up a reminder a reminder has must have a",
    "start": "2211359",
    "end": "2218140"
  },
  {
    "text": "slower Cadence but you can actually start up your grain when it needs run so it's persisted even if your grain gets",
    "start": "2218140",
    "end": "2223900"
  },
  {
    "text": "removed the reminder will basically pull your grain back into memory and execute the reminder if it isn't in memory",
    "start": "2223900",
    "end": "2229720"
  },
  {
    "text": "already but I'm going to go with a timer I'm going to call send updates and I'm going",
    "start": "2229720",
    "end": "2234820"
  },
  {
    "text": "to do that every second so once a second I'm going to send out updates to tell me where everything is",
    "start": "2234820",
    "end": "2239980"
  },
  {
    "text": "then for add position updated well it's a sharp it's not very",
    "start": "2239980",
    "end": "2245260"
  },
  {
    "text": "important or interesting it's basically current position contains client k then",
    "start": "2245260",
    "end": "2250359"
  },
  {
    "text": "add it otherwise add it like that subscribe well that's also kind of the",
    "start": "2250359",
    "end": "2256540"
  },
  {
    "text": "same thing it's just add it to the list of observers so I have an a hash set of I dashboard",
    "start": "2256540",
    "end": "2263440"
  },
  {
    "text": "Observer I just store it in there unsubscribe while not completely",
    "start": "2263440",
    "end": "2269619"
  },
  {
    "text": "surprising it removes it from that list of subscribers once again pure C sharp nothing complicated at all",
    "start": "2269619",
    "end": "2276280"
  },
  {
    "text": "and then for send updates we basically go ahead and we say that so I do console right lines sending",
    "start": "2276280",
    "end": "2283780"
  },
  {
    "text": "updates and then I do a little select thing to get the format of my positions",
    "start": "2283780",
    "end": "2289000"
  },
  {
    "text": "out to client ID and location and then I just go through each one of The Observers calling on positions",
    "start": "2289000",
    "end": "2294760"
  },
  {
    "text": "updated passing back that that positions object once again I don't have to care about it",
    "start": "2294760",
    "end": "2301000"
  },
  {
    "text": "going over the wire or anything like that it just magically works and also this by the way is not async",
    "start": "2301000",
    "end": "2307960"
  },
  {
    "text": "there is no it doesn't tell you or it doesn't have any proof that it will have",
    "start": "2307960",
    "end": "2313960"
  },
  {
    "text": "delivered the message the message is fire and forget and it might not arrive at the the end point that it's supposed",
    "start": "2313960",
    "end": "2319180"
  },
  {
    "text": "to be that's something to keep in mind but in some cases that is okay like in this case",
    "start": "2319180",
    "end": "2325060"
  },
  {
    "text": "and then I just return complete the task so and once again the the implementation is just Simple Pure C sharp the fact",
    "start": "2325060",
    "end": "2331359"
  },
  {
    "text": "that it's over the wire has no impact whatsoever on the code that I'm writing",
    "start": "2331359",
    "end": "2336640"
  },
  {
    "text": "and then I'm gonna go ahead to my go to my location tracking grain because this grain here is going to go ahead and tell",
    "start": "2336640",
    "end": "2343180"
  },
  {
    "text": "that other grain that hey I got an update so I keep the the central repository updated continuously so what",
    "start": "2343180",
    "end": "2350560"
  },
  {
    "text": "I'm going to do is inside my Constructor here I'm going to ask for an eye grain",
    "start": "2350560",
    "end": "2355900"
  },
  {
    "text": "Factory like that",
    "start": "2355900",
    "end": "2361420"
  },
  {
    "text": "let's store that so because migraines are registered in the ioc container together with our",
    "start": "2361420",
    "end": "2368079"
  },
  {
    "text": "lanes my grains are allowed to get injected any services that are registered in that ioc container",
    "start": "2368079",
    "end": "2373960"
  },
  {
    "text": "including the ones that are being added by Orleans themselves so I can go ahead and say hey can you please give me the",
    "start": "2373960",
    "end": "2380560"
  },
  {
    "text": "grain Factory that is used to access grains inside this silo so I'm just going to get that injected",
    "start": "2380560",
    "end": "2387460"
  },
  {
    "text": "and once I have that I can go down to my update location stuff here and we're going to replace this",
    "start": "2387460",
    "end": "2394920"
  },
  {
    "text": "with something that looks like this so I'm still nope",
    "start": "2395079",
    "end": "2401800"
  },
  {
    "text": "with something that looks like this so I still do a right line in here",
    "start": "2401800",
    "end": "2407680"
  },
  {
    "text": "to write out the thing but I'm also calling grain Factory get gray and here is a little tweak",
    "start": "2407680",
    "end": "2413320"
  },
  {
    "text": "if you pass in a grid dot empty it's always going to be the same which means",
    "start": "2413320",
    "end": "2418420"
  },
  {
    "text": "that I'm actually asking for a Singleton grain so I'm always going to get the same grain no matter of what grain I'm",
    "start": "2418420",
    "end": "2423820"
  },
  {
    "text": "I'm asked requesting it from grid.mt is going to be unique and it's going to be the same thing every time",
    "start": "2423820",
    "end": "2429460"
  },
  {
    "text": "and then I call add position updated to basically tell it that hey this grain",
    "start": "2429460",
    "end": "2434920"
  },
  {
    "text": "here has a new location and that gets stored in the the dashboard grain",
    "start": "2434920",
    "end": "2442839"
  },
  {
    "text": "so now that I have that in place we should be able to go and start listening to this and to do that please don't",
    "start": "2442839",
    "end": "2448780"
  },
  {
    "text": "laugh but I have built a WPF application you laughed I just I just said please",
    "start": "2448780",
    "end": "2455800"
  },
  {
    "text": "don't laugh WPF is fantastic but I also built it using like the latest and the greatest",
    "start": "2455800",
    "end": "2462160"
  },
  {
    "text": "so it built on.net core with winxy and things like that or use Net 7 Windows",
    "start": "2462160",
    "end": "2468339"
  },
  {
    "text": "and then I took a dependency on um a mapping service",
    "start": "2468339",
    "end": "2474640"
  },
  {
    "text": "I took a dependency on Bing Maps which isn't actually available though that course I get a yellow warnings",
    "start": "2474640",
    "end": "2481300"
  },
  {
    "text": "thing and it doesn't really work as it should but it doesn't matter it's a WPF application and it runs even though",
    "start": "2481300",
    "end": "2486460"
  },
  {
    "text": "there's a warning symbol so what I'm going to do in here inside my main window here",
    "start": "2486460",
    "end": "2491980"
  },
  {
    "text": "I do a few little things so I need an eye host so inside my main window what I",
    "start": "2491980",
    "end": "2497560"
  },
  {
    "text": "do in the on initialize is that I go and create a new host like that and I add an Orleans client to it so that I can use",
    "start": "2497560",
    "end": "2504099"
  },
  {
    "text": "Orleans and then I do some stuff here about onstart async and continue with blah",
    "start": "2504099",
    "end": "2511180"
  },
  {
    "text": "blah blah on closing uh the important part is that when it has started up and",
    "start": "2511180",
    "end": "2516700"
  },
  {
    "text": "the window is in view it calls on host started and when it is closing down it",
    "start": "2516700",
    "end": "2522700"
  },
  {
    "text": "calls on host stopping so this is where I need to do stuff and then there's a method here called update positions",
    "start": "2522700",
    "end": "2528700"
  },
  {
    "text": "which is responsible for moving the pins around on the actual map as such fairly",
    "start": "2528700",
    "end": "2534220"
  },
  {
    "text": "uninteresting for the demo as such but we want to go ahead and change",
    "start": "2534220",
    "end": "2541720"
  },
  {
    "text": "let's see I'm going to start out with this one",
    "start": "2541720",
    "end": "2545579"
  },
  {
    "text": "nope nope sorry that I need that first",
    "start": "2547119",
    "end": "2553359"
  },
  {
    "text": "it even says add backwards or first we need this let's start with this one so I'm creating a class here called",
    "start": "2553359",
    "end": "2559480"
  },
  {
    "text": "dashboard of server that implements I dashboard Observer and it basically is just a call through so whenever uh",
    "start": "2559480",
    "end": "2567579"
  },
  {
    "text": "on positions updated is being called it calls this callback function this action",
    "start": "2567579",
    "end": "2573099"
  },
  {
    "text": "which I'm gonna set up so that it does some stuff for me now I have my little implementation of",
    "start": "2573099",
    "end": "2579040"
  },
  {
    "text": "that now I can go ahead and I can go up here and we can say",
    "start": "2579040",
    "end": "2583560"
  },
  {
    "text": "no there is so now I'm going to add a couple of these",
    "start": "2584500",
    "end": "2590400"
  },
  {
    "text": "so what is happening in here well first of all I I asked my host for the icluster client service so I can talk to",
    "start": "2593680",
    "end": "2600400"
  },
  {
    "text": "my cluster then I ask my cluster client service to give me an act give me an a",
    "start": "2600400",
    "end": "2606700"
  },
  {
    "text": "proxy to the I dashboard grain with good empty then here is the funky part then I go",
    "start": "2606700",
    "end": "2613119"
  },
  {
    "text": "and create a new instance of dashboard Observer which is my implementation of I dashboard Observer",
    "start": "2613119",
    "end": "2619420"
  },
  {
    "text": "and then I send that to Cluster client",
    "start": "2619420",
    "end": "2625420"
  },
  {
    "text": "create object reference of I dashboard of the server and get back another thing",
    "start": "2625420",
    "end": "2630940"
  },
  {
    "text": "which by definition is also an i dashboard Observer I pass that version to the dashboard",
    "start": "2630940",
    "end": "2637780"
  },
  {
    "text": "grains subscribe method now I want to point out that this looks weird and it is weird but what is",
    "start": "2637780",
    "end": "2644619"
  },
  {
    "text": "happening is that we create an instance on something and then we ask the cluster client to create a proxied version of",
    "start": "2644619",
    "end": "2651160"
  },
  {
    "text": "that thing that can be passed off to the The Silo so that it can get requests coming back",
    "start": "2651160",
    "end": "2656800"
  },
  {
    "text": "now I started out by doing this code like this",
    "start": "2656800",
    "end": "2662880"
  },
  {
    "text": "and then I ran this code and it worked perfectly for about 15 seconds and then it stopped working completely",
    "start": "2663579",
    "end": "2669640"
  },
  {
    "text": "then I closed down my application I started it again it worked perfectly for about 12 seconds and then it stopped working and that was kind of repetitive",
    "start": "2669640",
    "end": "2676480"
  },
  {
    "text": "and as a developer I kind of realized that I'm probably doing something wrong so this Observer ref in here",
    "start": "2676480",
    "end": "2684280"
  },
  {
    "text": "is only has a weak reference to the actual implementation so if we remove",
    "start": "2684280",
    "end": "2689319"
  },
  {
    "text": "this or sorry the this that one sorry if we had that one if we let that go and we",
    "start": "2689319",
    "end": "2696700"
  },
  {
    "text": "don't keep that in memory that's going to get garbage collected and when that gets garbage collected this thing is going to lose its reference and it's",
    "start": "2696700",
    "end": "2702760"
  },
  {
    "text": "going to stop working so just if you're doing observables remember to keep references to your um your",
    "start": "2702760",
    "end": "2709180"
  },
  {
    "text": "implementations of your eye the grain Observers passed it in like that fairly simple as",
    "start": "2709180",
    "end": "2715240"
  },
  {
    "text": "such once you figure that out it took a while honestly it wasn't very well documented and then in on stopping",
    "start": "2715240",
    "end": "2722020"
  },
  {
    "text": "we just go ahead and we we unsubscribe our Observer ref so we don't",
    "start": "2722020",
    "end": "2727240"
  },
  {
    "text": "keep getting notifications when we're done and that's kind of kind of it so what's",
    "start": "2727240",
    "end": "2732280"
  },
  {
    "text": "going to happen now is that I'm going to start a silo gotta do nope not uh debug",
    "start": "2732280",
    "end": "2739180"
  },
  {
    "text": "do a debug on my silo that's going to start up a silo we've seen that before",
    "start": "2739180",
    "end": "2744880"
  },
  {
    "text": "we're going to go ahead and we're going to start my simulator we've seen that before as well and if we look at these two we should be",
    "start": "2744880",
    "end": "2751960"
  },
  {
    "text": "getting updates now right yep so this thing is getting updates so what is happening now is that you also see",
    "start": "2751960",
    "end": "2758200"
  },
  {
    "text": "sending updates coming out here so it's first of all all of the grains are are telling the dashboard grain that here",
    "start": "2758200",
    "end": "2763780"
  },
  {
    "text": "are my latest updates and then the dashboard grain every second is going to send all of the current updates out to",
    "start": "2763780",
    "end": "2770020"
  },
  {
    "text": "whoever wants to listen to it and the thing that is going to listen to it is this dashboard thing here",
    "start": "2770020",
    "end": "2778619"
  },
  {
    "text": "and if I start that up it's going to create that grain Observer",
    "start": "2779140",
    "end": "2784660"
  },
  {
    "text": "it's going to pass that along to my my back end and all of a sudden I can externally get updates on everything",
    "start": "2784660",
    "end": "2790480"
  },
  {
    "text": "that's going on in my cluster because I have that observability between the different grains as you can see the",
    "start": "2790480",
    "end": "2795700"
  },
  {
    "text": "little little pins moving around that is the up that's being moved around and I'm observing it from the outside of the",
    "start": "2795700",
    "end": "2801940"
  },
  {
    "text": "cluster which can be really nice and you can obviously observe not only from the outside listening to grains inside your",
    "start": "2801940",
    "end": "2808180"
  },
  {
    "text": "cluster grains inside of your cluster can listen to changes in grinds inside of the cluster as well so you can have",
    "start": "2808180",
    "end": "2813460"
  },
  {
    "text": "these dependency between your grains so that they can see what is happening internally",
    "start": "2813460",
    "end": "2818800"
  },
  {
    "text": "that is pretty sweet I like it somebody asked this I was running very fast because if you look at the scale",
    "start": "2818800",
    "end": "2824020"
  },
  {
    "text": "I'm moving ridiculously fast I'm not a fast runner but if you just tweak the speed that you send the updates it goes",
    "start": "2824020",
    "end": "2829420"
  },
  {
    "text": "a lot faster okay so observing grains is kind of a",
    "start": "2829420",
    "end": "2835180"
  },
  {
    "text": "neat feature as well can be used for a lot of cool stuff but one thing that that I got stuck with",
    "start": "2835180",
    "end": "2840880"
  },
  {
    "text": "that I really enjoyed was persistence so grains will automatically get the",
    "start": "2840880",
    "end": "2846460"
  },
  {
    "text": "garbage collected right because they're just part of.net so if they're not being called continuously the garbage collector is going to say hey you don't",
    "start": "2846460",
    "end": "2852819"
  },
  {
    "text": "need to be in memory anymore I'm going to throw you out which is what we want but we also want to be able to have",
    "start": "2852819",
    "end": "2857920"
  },
  {
    "text": "persistence we want to make sure that if the garbage collector throws out one of my actors and migraines I want to be",
    "start": "2857920",
    "end": "2864819"
  },
  {
    "text": "able to rehydrate that and have it back to the state that I had before right and there are ways to do that and",
    "start": "2864819",
    "end": "2871180"
  },
  {
    "text": "there's first of all there are built-in persistence stuff so basically you have these things here and they will persist",
    "start": "2871180",
    "end": "2877720"
  },
  {
    "text": "your state in some form of defined State like ado.net Azure storage uh in memory",
    "start": "2877720",
    "end": "2883660"
  },
  {
    "text": "which is kind of weird uh dynamodb and so on but what they do is they store your state in Json inside of some",
    "start": "2883660",
    "end": "2891280"
  },
  {
    "text": "storage which means that it's kind of you store stuff separately from your rest of your application because it's",
    "start": "2891280",
    "end": "2896980"
  },
  {
    "text": "just put in here because I want to be able to rehydrate it if you want to integrate with your own storage",
    "start": "2896980",
    "end": "2902380"
  },
  {
    "text": "mechanism that is actually quite nice there's something called eye grain storage that allows you to basically",
    "start": "2902380",
    "end": "2908200"
  },
  {
    "text": "pull data into your grains from an existing state storage so from existing",
    "start": "2908200",
    "end": "2913660"
  },
  {
    "text": "database and save it back down there as well which means that I built a demo for a client in about four hours to do an",
    "start": "2913660",
    "end": "2920380"
  },
  {
    "text": "auctioning system but I could leave all of their database stuff and everything could build the the auctioning stuff on",
    "start": "2920380",
    "end": "2926319"
  },
  {
    "text": "top of it but it would still read and persist the data in to their database in their format because I had implemented",
    "start": "2926319",
    "end": "2931960"
  },
  {
    "text": "one of these and all you need is basically Implement three methods read State clear clear State and write States",
    "start": "2931960",
    "end": "2938380"
  },
  {
    "text": "fairly simple but you also need to put a persistent State attribute on one of your",
    "start": "2938380",
    "end": "2944740"
  },
  {
    "text": "Constructor parameters and then you need to accept a parameter in your Constructor for your your grain that is",
    "start": "2944740",
    "end": "2951700"
  },
  {
    "text": "of type I persistent state of t so what does that look like well it looks like this",
    "start": "2951700",
    "end": "2957819"
  },
  {
    "text": "so in my grain it doesn't store the grain as a whole it stores State objects",
    "start": "2957819",
    "end": "2964540"
  },
  {
    "text": "those State objects in this case being passed in as I persistent state of my state",
    "start": "2964540",
    "end": "2969819"
  },
  {
    "text": "that is what's going to get get persisted and what I'm going to read from so when this grain here gets",
    "start": "2969819",
    "end": "2975819"
  },
  {
    "text": "activated the eye persistent state of my state is that state variable is going to",
    "start": "2975819",
    "end": "2981760"
  },
  {
    "text": "be pre-populated with the state that I want in there and then I can call on that I persistent state to persist",
    "start": "2981760",
    "end": "2987880"
  },
  {
    "text": "things as well so it doesn't persist the grain it persists objects inside the grain but the fact that it's an",
    "start": "2987880",
    "end": "2994900"
  },
  {
    "text": "attribute that your parameter to your Constructor means that you can actually get State injected from several different things so you could have this",
    "start": "2994900",
    "end": "3001260"
  },
  {
    "text": "part of my state comes from blob storage this part of my state comes from this database this thing here comes from some other place it's up to you to implement",
    "start": "3001260",
    "end": "3007560"
  },
  {
    "text": "it which means that you can have like a combination of state from different sources in the same grain",
    "start": "3007560",
    "end": "3014040"
  },
  {
    "text": "and it's actually not that hard to do weirdly enough because the API is so simple",
    "start": "3014040",
    "end": "3019859"
  },
  {
    "text": "so I'm going to go to my dashboard grain so what I want to build is basically I want to keep track",
    "start": "3019859",
    "end": "3025319"
  },
  {
    "text": "so if if my update the The Silo goes down and comes back up again I want or and my",
    "start": "3025319",
    "end": "3032099"
  },
  {
    "text": "simulators aren't working properly I want to have the last state to the last position known position for everything",
    "start": "3032099",
    "end": "3037800"
  },
  {
    "text": "to come back up when I start my dashboard so what I'm going to do is I'm going to go in here",
    "start": "3037800",
    "end": "3043619"
  },
  {
    "text": "and I'm going to add an inner class in this location draft down here let's just",
    "start": "3043619",
    "end": "3048720"
  },
  {
    "text": "there it is so I'm going to go ahead and I'm going to add a an inner class here called dashboard",
    "start": "3048720",
    "end": "3054000"
  },
  {
    "text": "States and it's going to be just a dictionary string location last known positions I'm",
    "start": "3054000",
    "end": "3059400"
  },
  {
    "text": "going to default it to a new new dictionary that's it and then",
    "start": "3059400",
    "end": "3064920"
  },
  {
    "text": "I'm going to add a new class in here that's gone out here uh new class uh the",
    "start": "3064920",
    "end": "3072480"
  },
  {
    "text": "class I'm gonna call it dashboard",
    "start": "3072480",
    "end": "3078500"
  },
  {
    "text": "State Storage think I spelled that properly",
    "start": "3078500",
    "end": "3083880"
  },
  {
    "text": "I'm going to implement that like this so it's going to be really stupid State Storage so it takes us path to store the",
    "start": "3083880",
    "end": "3091200"
  },
  {
    "text": "states and then clear State I don't care because I don't ever clear the state in this demo but I could have implemented",
    "start": "3091200",
    "end": "3096900"
  },
  {
    "text": "that read State and write State let's start with right because it makes more sense",
    "start": "3096900",
    "end": "3102540"
  },
  {
    "text": "all it really does it creates a last known positions.json file and puts it in the the path that I told it to and",
    "start": "3102540",
    "end": "3108839"
  },
  {
    "text": "serializes the uh the state into that and for read state",
    "start": "3108839",
    "end": "3114119"
  },
  {
    "text": "I read that Json file as you can see it can it basically says that hey you want to read some states what's the type of",
    "start": "3114119",
    "end": "3120720"
  },
  {
    "text": "state that you want to read and then so I can use the same implementation for different state objects as such if I if",
    "start": "3120720",
    "end": "3126960"
  },
  {
    "text": "I want to do that but for this it's very simple if you're looking for a location dashboard grain dot dashboard State then",
    "start": "3126960",
    "end": "3133020"
  },
  {
    "text": "read the information from the last known positions.json file",
    "start": "3133020",
    "end": "3138680"
  },
  {
    "text": "now I'm gonna go to the silo",
    "start": "3138900",
    "end": "3146780"
  },
  {
    "text": "here and inside here I'm going to go ahead and I'm going to add",
    "start": "3147780",
    "end": "3154020"
  },
  {
    "text": "this so I'm going to add a named Singleton service to my silos services",
    "start": "3154020",
    "end": "3160380"
  },
  {
    "text": "I'm going to have it's going to be an eye grain storage implementation it's going to be called dashboard State",
    "start": "3160380",
    "end": "3165540"
  },
  {
    "text": "storage and when it gets created when I instantiate it it's going to go ahead",
    "start": "3165540",
    "end": "3170579"
  },
  {
    "text": "and create a new dashboard State Storage pointing it to that location on my hard drive that's kind of it",
    "start": "3170579",
    "end": "3176280"
  },
  {
    "text": "and then once I got that registered I can go to my dashboard grain no my yeah",
    "start": "3176280",
    "end": "3181440"
  },
  {
    "text": "actually my life will grain there it is can go in here I'm gonna let's see if I'm gonna replace this I am",
    "start": "3181440",
    "end": "3188838"
  },
  {
    "text": "so in my Constructor here I'm now asking for a persistent state that is going to be the dashboard State Storage type that",
    "start": "3192660",
    "end": "3199079"
  },
  {
    "text": "I just registered and it's going to have an i persistent state of dashboard state",
    "start": "3199079",
    "end": "3204300"
  },
  {
    "text": "I can store that state like that and then we can go ahead and change this",
    "start": "3204300",
    "end": "3211200"
  },
  {
    "text": "implementation down here where it says current positions we're just going to return state DOT",
    "start": "3211200",
    "end": "3217500"
  },
  {
    "text": "state DOT last known positions like that instead so we're reading it from the",
    "start": "3217500",
    "end": "3222720"
  },
  {
    "text": "state instead of our in-memory version as such and then in my send updates",
    "start": "3222720",
    "end": "3231319"
  },
  {
    "text": "I'm going to go in here and we're gonna change that to a weight",
    "start": "3232380",
    "end": "3238200"
  },
  {
    "text": "state DOT saves sorry write States async like that and that's going to persist it",
    "start": "3238200",
    "end": "3244380"
  },
  {
    "text": "so every second is going to persist it down so that if you kill it it's gonna it's gonna work as it should",
    "start": "3244380",
    "end": "3249540"
  },
  {
    "text": "if I now go and create my silo debug create Silo I just need to get it",
    "start": "3249540",
    "end": "3255480"
  },
  {
    "text": "sort of initialized to start off so I'm going to start the silo I'm gonna run my",
    "start": "3255480",
    "end": "3260579"
  },
  {
    "text": "grains so I'm gonna run my simulator",
    "start": "3260579",
    "end": "3264619"
  },
  {
    "text": "now it's got some states so it should have stored the last known position so I'm going to stop that thing I'm going",
    "start": "3269280",
    "end": "3275160"
  },
  {
    "text": "to stop that thing so now that Json file should be available on my drive",
    "start": "3275160",
    "end": "3280980"
  },
  {
    "text": "so if we kill this thing off there it is we start The Silo again but",
    "start": "3280980",
    "end": "3286140"
  },
  {
    "text": "there are no simulators up and running if we start that it should Now read up",
    "start": "3286140",
    "end": "3291839"
  },
  {
    "text": "that state so if I pull up my dashboard and I run that it should be able to find",
    "start": "3291839",
    "end": "3297800"
  },
  {
    "text": "the last known positions for the all the simulators that was running when the application died and there they are",
    "start": "3297800",
    "end": "3304140"
  },
  {
    "text": "so we got basically a way to persist and restore State based on whatever state",
    "start": "3304140",
    "end": "3309300"
  },
  {
    "text": "store that we want this is a pretty stupid demo but it kind of shows off the idea that we can't have state and we can",
    "start": "3309300",
    "end": "3315180"
  },
  {
    "text": "store it in whatever way we want instead of just having some form of generic Json storage into blob storage for example",
    "start": "3315180",
    "end": "3323058"
  },
  {
    "text": "so I have some comments about it or like thoughts after having worked with it so first of all threading I did mention",
    "start": "3324420",
    "end": "3330599"
  },
  {
    "text": "that it's single threaded which makes a lot of things a lot easier like I said the auction system I worked on was",
    "start": "3330599",
    "end": "3337260"
  },
  {
    "text": "really nice because what they had initially when we you're running an auctions online auction system and you get loads of bids coming in at once the",
    "start": "3337260",
    "end": "3345059"
  },
  {
    "text": "whole idea of having to go and lock a row in the database and verify that the bid is higher than the previous bid and",
    "start": "3345059",
    "end": "3350940"
  },
  {
    "text": "while that is being locked everyone else has to wait and then if it is higher than the last bit then it's going to go",
    "start": "3350940",
    "end": "3356400"
  },
  {
    "text": "down and update it and add a new bid and so on and you have all these locking things going on it gets complicated with",
    "start": "3356400",
    "end": "3361920"
  },
  {
    "text": "Orleans it was like I said I implemented kind of what they had in four hours and",
    "start": "3361920",
    "end": "3366960"
  },
  {
    "text": "everything is single threaded so it means that bids come in in the order that they're sent basically and all you",
    "start": "3366960",
    "end": "3373079"
  },
  {
    "text": "have to do is check your in-memory list of your bids and verify whether or not it's higher or lower than the previous",
    "start": "3373079",
    "end": "3378660"
  },
  {
    "text": "bid and everything is in memory really really fast so it was really nice and offloaded the database a whole lot",
    "start": "3378660",
    "end": "3384839"
  },
  {
    "text": "however if you are smarter than me which some of you probably are you can go and",
    "start": "3384839",
    "end": "3390599"
  },
  {
    "text": "add attributes to your uh your grains to say that hey this should be a re-entrant",
    "start": "3390599",
    "end": "3396119"
  },
  {
    "text": "basically it should be multi-threaded or you can add always interleave or may interleave which basically allows other",
    "start": "3396119",
    "end": "3402300"
  },
  {
    "text": "grains to call back into yourself again if you have a chain of grain calls back and forth but you have to know what",
    "start": "3402300",
    "end": "3408540"
  },
  {
    "text": "you're doing when you're going multi-threaded I'm just going to say that don't use icluster clients so Chris has",
    "start": "3408540",
    "end": "3414839"
  },
  {
    "text": "now done a one hour talk and demoed how to use the icluster client to talk to your cluster and then at the last slide",
    "start": "3414839",
    "end": "3420720"
  },
  {
    "text": "I'm going to say don't use the icluster clients the reason for this is that the communication between an icluster client",
    "start": "3420720",
    "end": "3427619"
  },
  {
    "text": "and your cluster cannot be ensured to be secure because it uses a bunch of really cool networking stuff under the hood",
    "start": "3427619",
    "end": "3433800"
  },
  {
    "text": "which means that we don't want to have somebody from the outside talking to the cluster so if how do we do that in that",
    "start": "3433800",
    "end": "3440400"
  },
  {
    "text": "case well if we look at what I had going on I also have a little thing in here I",
    "start": "3440400",
    "end": "3446339"
  },
  {
    "text": "have an API and this is basically what you should be doing for this scenario instead is that",
    "start": "3446339",
    "end": "3452339"
  },
  {
    "text": "in your web API you add or Lanes to your your asplate core application and you",
    "start": "3452339",
    "end": "3457380"
  },
  {
    "text": "configure it just as you would in my my other Stylo solution but then you expose a control locations",
    "start": "3457380",
    "end": "3464220"
  },
  {
    "text": "controller and then you let the the simulator call the API instead so the",
    "start": "3464220",
    "end": "3470520"
  },
  {
    "text": "simulator shouldn't be talking to the cluster straight away the simulator should be talking to the API instead and",
    "start": "3470520",
    "end": "3477359"
  },
  {
    "text": "then the API can talk to the cluster in a secure way because as the silos are",
    "start": "3477359",
    "end": "3482880"
  },
  {
    "text": "registered in this application I can use the igrain factory which is local to me and it doesn't use any network coming",
    "start": "3482880",
    "end": "3489660"
  },
  {
    "text": "into the cluster from the outside so having your your cluster or an API in",
    "start": "3489660",
    "end": "3494880"
  },
  {
    "text": "front of your cluster and using the eye grain factories a much much better solution because it means that you can have security from the client to the API",
    "start": "3494880",
    "end": "3502559"
  },
  {
    "text": "using SSL and logins and things like that and then you can secure your cluster internally on your network and",
    "start": "3502559",
    "end": "3509400"
  },
  {
    "text": "make sure that all communication between the nodes are are safe in that way because they are going to be quite",
    "start": "3509400",
    "end": "3514500"
  },
  {
    "text": "chatty and they are not going to be securely chatting between them so don't use the cluster client unless",
    "start": "3514500",
    "end": "3520799"
  },
  {
    "text": "you have a weird scenario like my WPF application other than that I've got two minutes",
    "start": "3520799",
    "end": "3525839"
  },
  {
    "text": "left I want to thank you all for listening the code for what I demoed is available on that address so if you want",
    "start": "3525839",
    "end": "3533040"
  },
  {
    "text": "to have a look at it feel free to browse it feel feel free to ping me on on Twitter if you have any questions and I",
    "start": "3533040",
    "end": "3540000"
  },
  {
    "text": "will be around here and then during the day today at the conference if you have any questions so just grab me in that",
    "start": "3540000",
    "end": "3545460"
  },
  {
    "text": "case thank you so much [Applause]",
    "start": "3545460",
    "end": "3551579"
  }
]