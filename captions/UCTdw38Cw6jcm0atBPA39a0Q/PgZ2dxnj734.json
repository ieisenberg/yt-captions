[
  {
    "start": "0",
    "end": "116000"
  },
  {
    "text": "hello to everyone this is serverless reality and I'm Lyn",
    "start": "3840",
    "end": "10719"
  },
  {
    "text": "langit some of you might be familiar with my work I've been a technical speaker for many years I'm a former",
    "start": "11920",
    "end": "17720"
  },
  {
    "text": "Microsoft employee and I've been an independent Cloud architect for about s",
    "start": "17720",
    "end": "23400"
  },
  {
    "text": "years now I do most of my work in the United States I live in California I also speak and travel",
    "start": "23400",
    "end": "30840"
  },
  {
    "text": "internationally and create courses on cloud and Big Data topics for this work",
    "start": "30840",
    "end": "36640"
  },
  {
    "text": "I've been recognized by Microsoft with the MVP award Google with the Google",
    "start": "36640",
    "end": "42399"
  },
  {
    "text": "Cloud developer expert award and Amazon for the community hero award because I'm",
    "start": "42399",
    "end": "49920"
  },
  {
    "text": "independent this gives me a unique perspective that I'm going to share with you today I'm going to be very Frank and",
    "start": "49920",
    "end": "57239"
  },
  {
    "text": "honest and if there are people from mic roft Google or Amazon in the audience I don't mean to insult you my primary",
    "start": "57239",
    "end": "64760"
  },
  {
    "text": "audience is the working developer I am one of you I have deployed cous",
    "start": "64760",
    "end": "71080"
  },
  {
    "text": "Solutions I have had pain I've also had happiness and I want to share",
    "start": "71080",
    "end": "76719"
  },
  {
    "text": "both so in this talk I will talk about what my definition of serverless is",
    "start": "76920",
    "end": "82759"
  },
  {
    "text": "because it's very important to start with a common basis I'll show you examples of",
    "start": "82759",
    "end": "88520"
  },
  {
    "text": "serverless from the different vendors in case you're new to one or more",
    "start": "88520",
    "end": "93799"
  },
  {
    "text": "vendors I'll talk about patterns architecturally because I do work as a cloud architect that I'm seeing both",
    "start": "93799",
    "end": "100360"
  },
  {
    "text": "presently and on the near-term future and probably most importantly and hoping",
    "start": "100360",
    "end": "105960"
  },
  {
    "text": "you'll have the time and inclination to stay to the end in the end I will have very Frank talk about the lessons that I",
    "start": "105960",
    "end": "112200"
  },
  {
    "text": "have learned working in this space so to get us started going to take",
    "start": "112200",
    "end": "120079"
  },
  {
    "start": "116000",
    "end": "222000"
  },
  {
    "text": "a use case from the country of Australia in Australia there was a large",
    "start": "120079",
    "end": "127240"
  },
  {
    "text": "effort to put the national census online now whether or not this is",
    "start": "127240",
    "end": "133280"
  },
  {
    "text": "serverless comes into play later in the story the point is it was a very large",
    "start": "133280",
    "end": "139239"
  },
  {
    "text": "Countrywide Enterprise project and the government of Australia proudly launched",
    "start": "139239",
    "end": "144879"
  },
  {
    "text": "the Australian census on a Friday evening and this is what the Australian",
    "start": "144879",
    "end": "150400"
  },
  {
    "text": "citizens were greeted with so the question becomes clearly",
    "start": "150400",
    "end": "157879"
  },
  {
    "text": "didn't work how much did the government spend on this project what was the",
    "start": "157879",
    "end": "164080"
  },
  {
    "text": "architecture and what does this have to do with serverless the government spent over 9",
    "start": "164080",
    "end": "169800"
  },
  {
    "text": "million working with a vendor was IBM in this case over a more than a yearlong",
    "start": "169800",
    "end": "175519"
  },
  {
    "text": "period and had a complete and utter failure two students at a hackathon a month",
    "start": "175519",
    "end": "183360"
  },
  {
    "text": "later in Australia after having attended an Amazon community event built a",
    "start": "183360",
    "end": "189560"
  },
  {
    "text": "complete functional copy of the website in 3 days using a serverless pattern at",
    "start": "189560",
    "end": "196080"
  },
  {
    "text": "the cost of $500 and load tested it so that it could bear the load that",
    "start": "196080",
    "end": "202120"
  },
  {
    "text": "was experienced on that Friday this is a really dramatic case not every workload",
    "start": "202120",
    "end": "209560"
  },
  {
    "text": "is the right fit for serverless but for those that are there can be incredible",
    "start": "209560",
    "end": "215560"
  },
  {
    "text": "economies of time and money and that's why I think all of you are here",
    "start": "215560",
    "end": "222400"
  },
  {
    "start": "222000",
    "end": "250000"
  },
  {
    "text": "today so let's start with some definitions what is serverless there's a",
    "start": "222400",
    "end": "227879"
  },
  {
    "text": "whole bunch of terms out there is it functions as a service is it servers",
    "start": "227879",
    "end": "233319"
  },
  {
    "text": "serverless without servers is it microservices is it Amazon Lambda is it",
    "start": "233319",
    "end": "238560"
  },
  {
    "text": "functions as a service is it using actual VMS Nano VMS for",
    "start": "238560",
    "end": "244799"
  },
  {
    "text": "example from Amazon what is it well you're in my talk so you get my",
    "start": "244799",
    "end": "250319"
  },
  {
    "start": "250000",
    "end": "303000"
  },
  {
    "text": "definition my definition of the world of serverless started in November 2014 when",
    "start": "250319",
    "end": "255480"
  },
  {
    "text": "Amazon launched Lambda now I'm not so familiar with the Norwegian Cloud Market",
    "start": "255480",
    "end": "260639"
  },
  {
    "text": "I don't do professional work here but in the US Amazon is utterly dominant",
    "start": "260639",
    "end": "266199"
  },
  {
    "text": "currently in the cloud they have 16 times the business of all competitors",
    "start": "266199",
    "end": "271960"
  },
  {
    "text": "combined and at reinvent in November of 2014 when they launched Lambda they",
    "start": "271960",
    "end": "277600"
  },
  {
    "text": "again changed the game there was immediate and intense interest in the",
    "start": "277600",
    "end": "283759"
  },
  {
    "text": "economies of time and money that Lambda made available and in fact in the",
    "start": "283759",
    "end": "289160"
  },
  {
    "text": "professional work that I'm doing in the US I would estimate that 50% of the projects that I work on now have some",
    "start": "289160",
    "end": "295000"
  },
  {
    "text": "sort of a serverless component most usually on Amazon but increasingly with",
    "start": "295000",
    "end": "300479"
  },
  {
    "text": "some of the other Cloud vendors as I'll talk about when I get into this a bit more so in case you've not seen Lambda",
    "start": "300479",
    "end": "307199"
  },
  {
    "text": "before in case you're entirely new to it I'm going to show you what it looks",
    "start": "307199",
    "end": "312919"
  },
  {
    "start": "313000",
    "end": "496000"
  },
  {
    "text": "like now because we're at a large conference and I'm talking about the",
    "start": "313320",
    "end": "318759"
  },
  {
    "text": "cloud but we can never be dependent on the speed of the cloud what I've done is I've recorded this now I recorded this",
    "start": "318759",
    "end": "324520"
  },
  {
    "text": "in Norway so I did this in Bergen I've been in your beautiful country for",
    "start": "324520",
    "end": "330240"
  },
  {
    "text": "bit of time now I did some traveling in North fjords it's beautiful anyway so took a break when I was in beran this is",
    "start": "330240",
    "end": "336240"
  },
  {
    "text": "the Amazon console and uh you just bring up the Lambda",
    "start": "336240",
    "end": "342759"
  },
  {
    "text": "service and click the blue button like you do anywhere on Amazon to get a",
    "start": "342759",
    "end": "348000"
  },
  {
    "text": "sample and when you're first starting I suggest taking a look at the blueprints there are blueprints for node",
    "start": "348000",
    "end": "353960"
  },
  {
    "text": "and python although C Is Now supported significantly you can just click on a",
    "start": "353960",
    "end": "359080"
  },
  {
    "text": "blue blueprint you could associate your Lambda with a service in Amazon this is",
    "start": "359080",
    "end": "366000"
  },
  {
    "text": "one of the strengths of the Amazon offering but for this simple first example I'll just run some",
    "start": "366000",
    "end": "373440"
  },
  {
    "text": "code and now you give your function a",
    "start": "373440",
    "end": "377759"
  },
  {
    "text": "name and I just happen to select node because it was simple but again as I said you could use C or python or your",
    "start": "379560",
    "end": "386440"
  },
  {
    "text": "favorite language basically and you can see on line five we have an event that we're going to fire and now we need to",
    "start": "386440",
    "end": "393599"
  },
  {
    "text": "give it a security permission and we're going to go ahead",
    "start": "393599",
    "end": "400080"
  },
  {
    "text": "and create the",
    "start": "400080",
    "end": "402638"
  },
  {
    "text": "function and in the interface you then can see the function and you can test",
    "start": "407680",
    "end": "413080"
  },
  {
    "text": "the function you can configure an event",
    "start": "413080",
    "end": "418840"
  },
  {
    "text": "that's appropriate to the function capability in this casee we're just passing some values",
    "start": "418840",
    "end": "425720"
  },
  {
    "text": "in and once we click test the function will execute and we'll",
    "start": "433599",
    "end": "439080"
  },
  {
    "text": "see the results and we'll see that we had a successful execution and we see summary of The",
    "start": "439080",
    "end": "445960"
  },
  {
    "text": "Log now one of the things that's different of course in the serverless world is your build on executions and",
    "start": "445960",
    "end": "451479"
  },
  {
    "text": "resource consumption which does differ by vendors in the case of Amazon you set",
    "start": "451479",
    "end": "456960"
  },
  {
    "text": "the amount of memory 128 Megs being the basic",
    "start": "456960",
    "end": "462240"
  },
  {
    "text": "amount and there is of course monitoring via cloudwatch here's your logs and I",
    "start": "462280",
    "end": "469360"
  },
  {
    "text": "invoked it a few times there just to show what it looks like and a significant aspect of working",
    "start": "469360",
    "end": "477000"
  },
  {
    "text": "with functions is allocating the appropriate resources and there are my",
    "start": "477000",
    "end": "482120"
  },
  {
    "text": "invocations and my duration and I didn't have any",
    "start": "482319",
    "end": "487080"
  },
  {
    "text": "errors and that's really all there is to a basic function it's just executing",
    "start": "490400",
    "end": "496919"
  },
  {
    "start": "496000",
    "end": "524000"
  },
  {
    "text": "code so when I was driving around beautiful Norway with a colleague of mine who happens to do more work in the",
    "start": "497000",
    "end": "502240"
  },
  {
    "text": "Azure World his name is Anton delyn he and I came up with this definition of um",
    "start": "502240",
    "end": "509000"
  },
  {
    "text": "the ser less environment rather than saying serverless I we like to say that lambdas are",
    "start": "509000",
    "end": "515680"
  },
  {
    "text": "containerless so not only are the servers abstracted away from the developers but also the",
    "start": "515680",
    "end": "523560"
  },
  {
    "start": "524000",
    "end": "633000"
  },
  {
    "text": "containers so as an architect I always have to scribble on a napkin so here's my napkin drawing there are quite a few",
    "start": "525360",
    "end": "531800"
  },
  {
    "text": "talks in this conference about microservices and if you're coming new into this era of microservices and",
    "start": "531800",
    "end": "538360"
  },
  {
    "text": "serverless it might be a bit confusing and one of the challenges that I see when I'm designing architectures",
    "start": "538360",
    "end": "544519"
  },
  {
    "text": "is when to take a microservice approach and move it into serverless because they're two different things and this is",
    "start": "544519",
    "end": "550920"
  },
  {
    "text": "the way that I like to think about it on these two axes on the left side I have management and uh control so less uh up",
    "start": "550920",
    "end": "559800"
  },
  {
    "text": "uh more up here sorry so that you have more control of your physical server but less",
    "start": "559800",
    "end": "566760"
  },
  {
    "text": "management moving down to a virtual machine moving down to containers and Docker moving down to Lambda but of",
    "start": "566760",
    "end": "573600"
  },
  {
    "text": "course in terms of service costs the service costs are dramatically less people a often ask me sea level people",
    "start": "573600",
    "end": "580560"
  },
  {
    "text": "how much difference can it be and although there's always going to be a it depends as a rough guideline it's very",
    "start": "580560",
    "end": "587440"
  },
  {
    "text": "typical that a Lambda implementation will be one 100th the cost of running",
    "start": "587440",
    "end": "592880"
  },
  {
    "text": "servers now there's an interesting sort of additional pivot to this and I just overlaid this here and this is the thing",
    "start": "592880",
    "end": "599760"
  },
  {
    "text": "that I mentioned earlier but I'll continue to mention because this does come up as an alternative in the serverless",
    "start": "599760",
    "end": "605279"
  },
  {
    "text": "environment sometimes when you're in microservice architecture serverless is",
    "start": "605279",
    "end": "610360"
  },
  {
    "text": "not the best approach you want to have microservices but you want to have servers and in the Amazon environment",
    "start": "610360",
    "end": "617440"
  },
  {
    "text": "I've done quite a bit of work with Nano VMS as well which are $5 us a month so",
    "start": "617440",
    "end": "623680"
  },
  {
    "text": "you get the economies in cost but you still have a server so that's kind of one of the first things to think about",
    "start": "623680",
    "end": "630480"
  },
  {
    "text": "microservices versus serverless another aspect of serverless",
    "start": "630480",
    "end": "636720"
  },
  {
    "start": "633000",
    "end": "710000"
  },
  {
    "text": "is most people just think of serverless as compute and that's really too narrow",
    "start": "636720",
    "end": "642200"
  },
  {
    "text": "serverless in some ways was launched not in 2014 was launched in 2006 when Amazon",
    "start": "642200",
    "end": "648760"
  },
  {
    "text": "launched serverless file storage with S3 if",
    "start": "648760",
    "end": "653800"
  },
  {
    "text": "you're not aware S3 is the most widely used cloud service on the planet by far",
    "start": "653800",
    "end": "660200"
  },
  {
    "text": "and it's interesting to note that not only Lambda and S3 are indicative of the",
    "start": "660200",
    "end": "665920"
  },
  {
    "text": "serverless services that are being offered but really in a broader scale all of the cloud vendors and I just",
    "start": "665920",
    "end": "672600"
  },
  {
    "text": "happen to be most familiar with Amazon are creating the entirety of their offerings going forward in a serverless",
    "start": "672600",
    "end": "679279"
  },
  {
    "text": "basis so what does that mean you have file storage you have compute but then",
    "start": "679279",
    "end": "685079"
  },
  {
    "text": "serverless offerings that I've done quite a lot of work with over the past 12 months have been and servers serverless services around Internet of",
    "start": "685079",
    "end": "692279"
  },
  {
    "text": "Things So iot Brokers machine learning uh flowing data",
    "start": "692279",
    "end": "698279"
  },
  {
    "text": "Kinesis so this is a sort of General pattern in cloud services more and more",
    "start": "698279",
    "end": "705079"
  },
  {
    "text": "of the offerings are offered in a serverless manner not just compute so here's my definition",
    "start": "705079",
    "end": "712839"
  },
  {
    "start": "710000",
    "end": "782000"
  },
  {
    "text": "serverless to me is public cloud services for compute for data or file",
    "start": "712839",
    "end": "719320"
  },
  {
    "text": "files and other processing such as machine learning they are functions that",
    "start": "719320",
    "end": "725839"
  },
  {
    "text": "abstract away both containers and servers actually as an aside this will",
    "start": "725839",
    "end": "732880"
  },
  {
    "text": "be a bit controversial I'm personally not very much interested in Docker I'm not very much interested in Docker I'm",
    "start": "732880",
    "end": "738880"
  },
  {
    "text": "not interested in container orchestration I am getting the best economies of scale for my customers by",
    "start": "738880",
    "end": "745199"
  },
  {
    "text": "either selecting servers and or serverless I find Docker and containers",
    "start": "745199",
    "end": "751279"
  },
  {
    "text": "to be a bit of um a kind of a distraction a bit of noise and I know",
    "start": "751279",
    "end": "757560"
  },
  {
    "text": "I'll probably have people that really disagree with me but that's just been my personal experience so serverless Define",
    "start": "757560",
    "end": "763720"
  },
  {
    "text": "continued serverless is build on executions not server instance",
    "start": "763720",
    "end": "769120"
  },
  {
    "text": "sizes and services that are based on events and easily and nearly infinitely",
    "start": "769120",
    "end": "776800"
  },
  {
    "text": "scalable so that's my definition of",
    "start": "776800",
    "end": "781800"
  },
  {
    "start": "782000",
    "end": "906000"
  },
  {
    "text": "serverless from a high level the general types of use cases and patterns that I",
    "start": "783399",
    "end": "788480"
  },
  {
    "text": "find server list to be the best fit for are three the first one is a huge volume",
    "start": "788480",
    "end": "794440"
  },
  {
    "text": "of activities so running web requests Q messages",
    "start": "794440",
    "end": "800320"
  },
  {
    "text": "transactions also to isolate and scale tasks another common use case is dynamic",
    "start": "800320",
    "end": "807160"
  },
  {
    "text": "workloads like the Australian census that I showed you run something infrequently once a day a month a minute",
    "start": "807160",
    "end": "813959"
  },
  {
    "text": "whatever and avoid paying for servers to get those economies of scale alternatively I've also used",
    "start": "813959",
    "end": "820199"
  },
  {
    "text": "serverless for scheduled tasks or jobs again trying to get the scale economy by",
    "start": "820199",
    "end": "827279"
  },
  {
    "text": "using a a service that's only buil on execution not for an entire server so",
    "start": "827279",
    "end": "832360"
  },
  {
    "text": "run a certain piece of code on a schedule so in the Amazon ecosystem this",
    "start": "832360",
    "end": "838839"
  },
  {
    "text": "is the core the basis pattern that you see over and over and over and this pattern is really emerging to me as a",
    "start": "838839",
    "end": "846120"
  },
  {
    "text": "similar pattern in both Azure and in the Google Cloud so there's three types of",
    "start": "846120",
    "end": "851600"
  },
  {
    "text": "serverless services in this pattern the first type is around the bottom here these are the data services so you have",
    "start": "851600",
    "end": "858160"
  },
  {
    "text": "generally some sort of S3 buckets and then you have some sort of data",
    "start": "858160",
    "end": "863199"
  },
  {
    "text": "repositories that's most often shown as Dynamo DB which is a no SQL database then you have a layer compute which is n",
    "start": "863199",
    "end": "870880"
  },
  {
    "text": "number of Lambda functions and then if you need additional capability and the",
    "start": "870880",
    "end": "876560"
  },
  {
    "text": "most common scenario is you're going to expose this outside of the Amazon Cloud then you're going to use a aition a",
    "start": "876560",
    "end": "882600"
  },
  {
    "text": "different kind of serverless service like the API Gateway so this is a pattern that's a core that you build on",
    "start": "882600",
    "end": "889279"
  },
  {
    "text": "over and over and over and of course in for example Azure be Azure blobs and it would be you know uh I think it's Cosmos",
    "start": "889279",
    "end": "896480"
  },
  {
    "text": "DB it used to be document DB as well as Azure functions and then um the",
    "start": "896480",
    "end": "901680"
  },
  {
    "text": "interface uh pieces that would sit in front of it and similar in Google speaking of",
    "start": "901680",
    "end": "909440"
  },
  {
    "start": "906000",
    "end": "1108000"
  },
  {
    "text": "vendors I'm going to show you a bit of demo just so you can see what the function interfaces look like with two",
    "start": "910279",
    "end": "916160"
  },
  {
    "text": "different scenarios just really simple event driven listen on a bucket or uh a file bucket if you will um or a timer",
    "start": "916160",
    "end": "924000"
  },
  {
    "text": "for Lambda Google and azure",
    "start": "924000",
    "end": "929920"
  },
  {
    "text": "so here's a bucket and I'm going to create a function using a",
    "start": "943680",
    "end": "949639"
  },
  {
    "text": "template against",
    "start": "949720",
    "end": "953040"
  },
  {
    "text": "S3 and there the trigger is pre-populated I just need to set it to the correct region by the way I did a",
    "start": "955959",
    "end": "962800"
  },
  {
    "text": "speed test when I was in Norway and um I found the EU London region to be the",
    "start": "962800",
    "end": "968079"
  },
  {
    "text": "fastest and I can talk to you separately on how I do speed tests but I kind of something I do for fun when I",
    "start": "968079",
    "end": "974959"
  },
  {
    "text": "travel uh so this is setting it to this bucket I'm setting the event",
    "start": "974959",
    "end": "981600"
  },
  {
    "text": "type and I'm enabling the trigger so when an object file is placed into the",
    "start": "981600",
    "end": "987319"
  },
  {
    "text": "bucket then the Lambda code will",
    "start": "987319",
    "end": "990920"
  },
  {
    "text": "run again very simple code and you can see if I scroll down",
    "start": "993399",
    "end": "1000720"
  },
  {
    "text": "here that on line 10 I have an event handler for the context and then on line",
    "start": "1000720",
    "end": "1005959"
  },
  {
    "text": "20 I'm uh calling S3 instance with get object passing the",
    "start": "1005959",
    "end": "1011199"
  },
  {
    "text": "parameters now this case my uh IM has to have permission to read that bucket",
    "start": "1011199",
    "end": "1016800"
  },
  {
    "text": "using the best practice of the permission only for executing the function and the bucket not using you",
    "start": "1016800",
    "end": "1022519"
  },
  {
    "text": "know admin which you should not do",
    "start": "1022519",
    "end": "1027000"
  },
  {
    "text": "obviously now anything I'm showing in the console of course you could use a command line tool Andor use an SDK and",
    "start": "1035760",
    "end": "1042000"
  },
  {
    "text": "do this programmatically and that's what you do in production but it's just faster to show the console demo is a",
    "start": "1042000",
    "end": "1047120"
  },
  {
    "text": "little bit better than wall of command line so here I'm uploading a picture of beautiful Norway",
    "start": "1047120",
    "end": "1054520"
  },
  {
    "text": "extra credit if you know where that",
    "start": "1054520",
    "end": "1057880"
  },
  {
    "text": "is and then once this upload completes the Lambda will",
    "start": "1060559",
    "end": "1066919"
  },
  {
    "text": "fire and of course you have to put uh make the bucket in the same region as the Lambda for this to work so if you're",
    "start": "1070480",
    "end": "1076039"
  },
  {
    "text": "testing it out I recommend you guys use London and there's the trigger and it takes",
    "start": "1076039",
    "end": "1085120"
  },
  {
    "text": "because of the warm-up time it takes a more time than you'd expect initially",
    "start": "1085120",
    "end": "1090919"
  },
  {
    "text": "and there's the log and you look in the log and you can see that you've got a",
    "start": "1090919",
    "end": "1097000"
  },
  {
    "text": "JPEG now there's a reason I'm emphasizing the logs when we get to the how do you programmatically work with",
    "start": "1097000",
    "end": "1102240"
  },
  {
    "text": "this you can't of course SSH into a VM or Docker container or anything like",
    "start": "1102240",
    "end": "1107799"
  },
  {
    "text": "that so you will be using the logs quite a lot when you are um",
    "start": "1107799",
    "end": "1113159"
  },
  {
    "start": "1108000",
    "end": "1345000"
  },
  {
    "text": "developing you don't have to access them in the console you can do it programmatically so here's Google uh as",
    "start": "1113159",
    "end": "1119000"
  },
  {
    "text": "of today Google functions are in beta so although they're powerful I wouldn't",
    "start": "1119000",
    "end": "1125400"
  },
  {
    "text": "recommend using them in production till they go to GA so you're I'm creating a bucket",
    "start": "1125400",
    "end": "1131280"
  },
  {
    "text": "here Google's interesting in terms of its buckets it has uh four different",
    "start": "1131280",
    "end": "1136360"
  },
  {
    "text": "options multi-regional Regional nearline and cold line which correspond to Amazon but it's a unified API so I really like",
    "start": "1136360",
    "end": "1143400"
  },
  {
    "text": "working with their file um system um also in the Google",
    "start": "1143400",
    "end": "1148720"
  },
  {
    "text": "implementation you create a folder in a different bucket and that's where your zipped JavaScript code for your function",
    "start": "1148720",
    "end": "1155440"
  },
  {
    "text": "goes when you work in the console on Amazon you don't actually see that and I do like that in Google that you see",
    "start": "1155440",
    "end": "1161360"
  },
  {
    "text": "where your code is um another Concept in Google there I'm um turning on the API Google Google",
    "start": "1161360",
    "end": "1169039"
  },
  {
    "text": "has this concept of reducing the attack surface and also has a concept of a container for your cloud services you'll",
    "start": "1169039",
    "end": "1175880"
  },
  {
    "text": "see on the top says Oslo demo up here that's a project container which is a",
    "start": "1175880",
    "end": "1181039"
  },
  {
    "text": "really kind of a nice feature so I've turned on the API and now I'm creating a function in the",
    "start": "1181039",
    "end": "1186960"
  },
  {
    "text": "console again because it's um beta it's only available in us I'm sure it'll be",
    "start": "1186960",
    "end": "1192360"
  },
  {
    "text": "Europe the memory uh allocated goes higher for Google they have three scenarios Cloud Pub sub",
    "start": "1192360",
    "end": "1199159"
  },
  {
    "text": "cloud storage and HTTP trigger it's a web hook so there's your",
    "start": "1199159",
    "end": "1204840"
  },
  {
    "text": "cloud storage bucket so the UI is nice and familiar",
    "start": "1204840",
    "end": "1210440"
  },
  {
    "text": "very simple to compare their sample code's a little cleaner you can see on line",
    "start": "1210440",
    "end": "1217039"
  },
  {
    "text": "seven there have a process file which is um collecting the event",
    "start": "1217039",
    "end": "1223760"
  },
  {
    "text": "data and here I'm making a bucket because this is required in the Google implementation to store the JavaScript",
    "start": "1223760",
    "end": "1229799"
  },
  {
    "text": "code so even if you want to test to listen on a bucket you have to have two buckets different than",
    "start": "1229799",
    "end": "1235760"
  },
  {
    "text": "Amazon and once you do that",
    "start": "1237880",
    "end": "1243919"
  },
  {
    "text": "then make a folder and then uh it's executing the",
    "start": "1245320",
    "end": "1250400"
  },
  {
    "text": "process file function and then we're creating the",
    "start": "1250400",
    "end": "1256159"
  },
  {
    "text": "function similar UI in terms of the trigger the source and the testing can",
    "start": "1256600",
    "end": "1261880"
  },
  {
    "text": "configure test events similarly to",
    "start": "1261880",
    "end": "1265880"
  },
  {
    "text": "Amazon and then inside of here you just upload a file and then the event will",
    "start": "1266919",
    "end": "1272000"
  },
  {
    "text": "trigger so the familiarity is useful actually because um considering at least",
    "start": "1272000",
    "end": "1279840"
  },
  {
    "text": "in my world most people started with Amazon there's another picture of beautiful Norway",
    "start": "1279840",
    "end": "1285760"
  },
  {
    "text": "and you have the upload and then the event will fire which will",
    "start": "1285760",
    "end": "1291039"
  },
  {
    "text": "run the code so there's the staging code which is",
    "start": "1291039",
    "end": "1298320"
  },
  {
    "text": "zipped that's another implementation detail with functions you zip the JavaScript or whatever the code you're",
    "start": "1298320",
    "end": "1304720"
  },
  {
    "text": "using there I'm switching back to functions and I'll in the UI I'll see",
    "start": "1304720",
    "end": "1311520"
  },
  {
    "text": "that I have one execution you can see over to the right here that's the execution then I'm going over to the",
    "start": "1311520",
    "end": "1316840"
  },
  {
    "text": "logs the logging story is super important as I said because that's you know a key tool for you and Google's",
    "start": "1316840",
    "end": "1323279"
  },
  {
    "text": "done a really good job they purchased this company called stack driver and they have um very extensive logs even",
    "start": "1323279",
    "end": "1330200"
  },
  {
    "text": "though the product is beta which I think is great and really",
    "start": "1330200",
    "end": "1335399"
  },
  {
    "text": "useful so now once this is done those are the resources we'll go over to",
    "start": "1337480",
    "end": "1344679"
  },
  {
    "text": "Azure so Azure has a interesting interface that separate from the main console that I discovered and I really",
    "start": "1344679",
    "end": "1351360"
  },
  {
    "start": "1345000",
    "end": "1462000"
  },
  {
    "text": "liked so you can do an Azure function in the main console but um you know again",
    "start": "1351360",
    "end": "1356679"
  },
  {
    "text": "just to try things out this is really kind of nice so you go to this URL and I'll post this so you guys can",
    "start": "1356679",
    "end": "1363159"
  },
  {
    "text": "see it after and you can try out functions with no credit card or anything it's kind of cool so I just",
    "start": "1363159",
    "end": "1369960"
  },
  {
    "text": "recorded this off of this console rather than the main one because it was quicker so you can see we've got C has a",
    "start": "1369960",
    "end": "1377320"
  },
  {
    "text": "first class language here with examples JavaScript there's many more languages supported but these are the most common",
    "start": "1377320",
    "end": "1384240"
  },
  {
    "text": "scenarios you Au in some you know with GitHub or something and then this is your sort of",
    "start": "1384240",
    "end": "1391200"
  },
  {
    "text": "your test harness user interface you get an hour where you can just try things out it's really nice for just testing if",
    "start": "1391200",
    "end": "1397240"
  },
  {
    "text": "you're going across systems now something significantly different in the Azure world as you see on the right they",
    "start": "1397240",
    "end": "1402279"
  },
  {
    "text": "have a function. Json which I'll show you in a minute so this is just running it so this this use case is just running",
    "start": "1402279",
    "end": "1408799"
  },
  {
    "text": "a piece of code I didn't bother to listen on a bucket here it's just a timer basically assuming that most of this",
    "start": "1408799",
    "end": "1415679"
  },
  {
    "text": "audience knows CP not explaining the code very",
    "start": "1415679",
    "end": "1420799"
  },
  {
    "text": "much so uh what's interesting about the implementation here is this function file with bindings so Amazon has does a",
    "start": "1420880",
    "end": "1428240"
  },
  {
    "text": "really good job integrating with Amazon Services I really have to give it to Azure um in that they do a really good",
    "start": "1428240",
    "end": "1434200"
  },
  {
    "text": "job integrating with uh Azure services but they do I think the best job integrating with external Services as",
    "start": "1434200",
    "end": "1440600"
  },
  {
    "text": "well and so this is done through",
    "start": "1440600",
    "end": "1444600"
  },
  {
    "text": "bindings there's a key and then there's a monitoring",
    "start": "1445679",
    "end": "1452158"
  },
  {
    "text": "functionality so that's like a really really quick preview through um the three different interfaces just in case",
    "start": "1454400",
    "end": "1460799"
  },
  {
    "text": "you've never seen functions before so uh the state of serverless compute right now uh like I said in my",
    "start": "1460799",
    "end": "1467480"
  },
  {
    "start": "1462000",
    "end": "1602000"
  },
  {
    "text": "world Amazon utterly dominant I'm doing all my work on Amazon and production I am really interested though in what",
    "start": "1467480",
    "end": "1473440"
  },
  {
    "text": "Microsoft has done I was at serverless comp in Austin Texas a month ago and really got to kind of see what's going",
    "start": "1473440",
    "end": "1480840"
  },
  {
    "text": "on with Azure functions and then like I said my colleague that I did the road trip with he works more in the Azure",
    "start": "1480840",
    "end": "1486120"
  },
  {
    "text": "world and I'm really pretty impressed with the offering and I will be uh you",
    "start": "1486120",
    "end": "1491520"
  },
  {
    "text": "know doing more bake offs between the two because of the um breadth of what Microsoft's offering that being said",
    "start": "1491520",
    "end": "1498159"
  },
  {
    "text": "though um Amazon's not sleeping uh they have uh introduced what they call Lambda at the",
    "start": "1498159",
    "end": "1504240"
  },
  {
    "text": "edge for iot it's called green grass that actually came out last week so if you are um working with iot sensors that",
    "start": "1504240",
    "end": "1512159"
  },
  {
    "text": "kind of world I really encourage you to take a look at their new green grass implementation it allows Lambda to be",
    "start": "1512159",
    "end": "1518679"
  },
  {
    "text": "executed um at the edge at a CDN um or on devices it's really interesting",
    "start": "1518679",
    "end": "1524799"
  },
  {
    "text": "functionality um in the Azure world something that I think is really interesting is something called logic apps which is a higher level abstraction",
    "start": "1524799",
    "end": "1532080"
  },
  {
    "text": "that allows a um less code it's a gooey designer to do Integrations um I",
    "start": "1532080",
    "end": "1538480"
  },
  {
    "text": "encourage you to take a look at it I think there's talks on it here really excited about it another thing that is",
    "start": "1538480",
    "end": "1543799"
  },
  {
    "text": "interesting in the Azure world is there's two billing plans one is basically identical to Amazon which is",
    "start": "1543799",
    "end": "1550000"
  },
  {
    "text": "called consumption build on how many times it executes there's another plan",
    "start": "1550000",
    "end": "1555240"
  },
  {
    "text": "that acknowledges that customers will have this sort of mixed world where they'll have some servers let's say web",
    "start": "1555240",
    "end": "1561799"
  },
  {
    "text": "servers and they'll want to collocate functions and that's called an app service plan so again I haven't done as",
    "start": "1561799",
    "end": "1567840"
  },
  {
    "text": "much production work in the Azure world but when I was talking with my colleague he was talking about the use cases and I",
    "start": "1567840",
    "end": "1573320"
  },
  {
    "text": "could really see how that would be interesting to a lot of people so that's something to be aware of in the Azure world in the Google world I'm really",
    "start": "1573320",
    "end": "1581000"
  },
  {
    "text": "hoping that Google can bring their functions to GA as soon as possible because I think they're very performant I'm very excited about them but I'm just",
    "start": "1581000",
    "end": "1587399"
  },
  {
    "text": "not going to use beta Tech Technologies in production Google is interesting though not only for functions just pure compute",
    "start": "1587399",
    "end": "1594240"
  },
  {
    "text": "functions they have a whole bunch of other services that are delivered serverless and some of them have been",
    "start": "1594240",
    "end": "1600039"
  },
  {
    "text": "around for a while so I did a whole talk at serverless comp that you can see online",
    "start": "1600039",
    "end": "1606720"
  },
  {
    "start": "1602000",
    "end": "1805000"
  },
  {
    "text": "called serverless SQL and uh this uh service which is called Google big query",
    "start": "1606720",
    "end": "1613360"
  },
  {
    "text": "is something that I have been enamored of for many years and it's been around for many years it basically is the",
    "start": "1613360",
    "end": "1620480"
  },
  {
    "text": "ability to upload CSV files or some other types but text type files and to",
    "start": "1620480",
    "end": "1627440"
  },
  {
    "text": "do full an csql queries against them at a very very cheap price so I'm going to",
    "start": "1627440",
    "end": "1633279"
  },
  {
    "text": "do something really crazy because I just like big query so much so we'll see if this will work I'm going to try to run this query live so this is a really",
    "start": "1633279",
    "end": "1641600"
  },
  {
    "text": "complicated uh genomics query I've been doing some work in bioinformatics so DNA sequencing and stuff like that and and",
    "start": "1641600",
    "end": "1648840"
  },
  {
    "text": "um one of the things that's great about big query is they have a lot of reference data up already loaded for you",
    "start": "1648840",
    "end": "1654440"
  },
  {
    "text": "so in genomics when you're doing um matching you match against the Thousand genomes reference database so that's",
    "start": "1654440",
    "end": "1660919"
  },
  {
    "text": "already up there so you can really run some queries very cheaply because they don't charge you for the data that they're already hosting so this query is",
    "start": "1660919",
    "end": "1668919"
  },
  {
    "text": "really complex has some really complex SQL inside of it",
    "start": "1668919",
    "end": "1674360"
  },
  {
    "text": "um so you can take all the SQL you know and love and for those of you who know me I have actually written three books",
    "start": "1674360",
    "end": "1680080"
  },
  {
    "text": "on SQL Server I'm a very big fan of an SQL as a as a a language for processing",
    "start": "1680080",
    "end": "1685559"
  },
  {
    "text": "and so you know you can leverage the things you know right so if I go ahead",
    "start": "1685559",
    "end": "1690679"
  },
  {
    "text": "and I run this query and I hope I'm connected to the",
    "start": "1690679",
    "end": "1696360"
  },
  {
    "text": "internet yeah it's running okay good so um this query will process near over",
    "start": "1696360",
    "end": "1704159"
  },
  {
    "text": "four terabytes of data and when I ran it and beran it took",
    "start": "1704159",
    "end": "1709559"
  },
  {
    "text": "uh 30 seconds so we'll see how long it takes here and it costs five uh um",
    "start": "1709559",
    "end": "1715679"
  },
  {
    "text": "dollar a terabyte for the scan so in the US I have a lot of use cases where",
    "start": "1715679",
    "end": "1721399"
  },
  {
    "text": "people just want to I call it party on the data whether it's bioinformatics or whether it's um you know social media",
    "start": "1721399",
    "end": "1728720"
  },
  {
    "text": "you know that kind of stuff and I have a lot of customers that no matter which vendor they're working with they're",
    "start": "1728720",
    "end": "1735240"
  },
  {
    "text": "using big query and that's pretty good hey right I'm Norway this is running on a US data center on a conference Wi-Fi",
    "start": "1735240",
    "end": "1742200"
  },
  {
    "text": "and I processed nearly 5 terabytes of data in 36 seconds and I aggregated 84",
    "start": "1742200",
    "end": "1751279"
  },
  {
    "text": "million rows down to 2,500 rows I mean this service is very impressive and it's",
    "start": "1751279",
    "end": "1757960"
  },
  {
    "text": "serverless serverless SQL it's been around for many years just serverless it",
    "start": "1757960",
    "end": "1763159"
  },
  {
    "text": "was kind of serverless before serverless is time so it's interesting in that so",
    "start": "1763159",
    "end": "1768720"
  },
  {
    "text": "that's the results there that it's so impressive it's something that Amazon is",
    "start": "1768720",
    "end": "1775159"
  },
  {
    "text": "paid attention to at their annual conference reinvent in November last",
    "start": "1775159",
    "end": "1780200"
  },
  {
    "text": "year they introduced a service that is similar but not identical so SQL on text",
    "start": "1780200",
    "end": "1786159"
  },
  {
    "text": "files if you will it's called Aurora so very interesting to look at some of",
    "start": "1786159",
    "end": "1792760"
  },
  {
    "text": "these new services that are coming out that our serverless providing us with",
    "start": "1792760",
    "end": "1798080"
  },
  {
    "text": "functionality SQL in a serverless fashion and I'm finding lots of use for this in addition",
    "start": "1798080",
    "end": "1804919"
  },
  {
    "text": "to compute and some things we talked about so talking about the basic",
    "start": "1804919",
    "end": "1810000"
  },
  {
    "text": "services in the world of Amazon it's really interesting to see that the core",
    "start": "1810000",
    "end": "1815880"
  },
  {
    "text": "compute Services can be nearly free there are 1 million requests a",
    "start": "1815880",
    "end": "1821480"
  },
  {
    "text": "month that are free for Lambda and if you use those small Lambda the 128 Megs which isn't always going to work but if",
    "start": "1821480",
    "end": "1827200"
  },
  {
    "text": "you do it's basically free forever if you add up the it's it says X number of seconds free so if you take that into",
    "start": "1827200",
    "end": "1833080"
  },
  {
    "text": "seconds into minutes into hours into days it's basically free now if you use bigger lambdas more resource consumption",
    "start": "1833080",
    "end": "1840279"
  },
  {
    "text": "they're not going to be free okay and it's not always going to work this way but there are some relatively well-known",
    "start": "1840279",
    "end": "1846640"
  },
  {
    "text": "use cases there's a company called acloud Guru that runs a set of training",
    "start": "1846640",
    "end": "1852440"
  },
  {
    "text": "videos and they actually designed a serverless architecture and they kind of joke that they've never gotten Beyond",
    "start": "1852440",
    "end": "1858000"
  },
  {
    "text": "the free tier and they have 10 20,000 customers a month so it's interesting now on the other side just to be",
    "start": "1858000",
    "end": "1864399"
  },
  {
    "text": "complete I've also done Blended architectures that have Nano instances",
    "start": "1864399",
    "end": "1869760"
  },
  {
    "text": "as I mentioned earlier and then I'm starting to do architectures that also have spot pricing you know for bursty",
    "start": "1869760",
    "end": "1875639"
  },
  {
    "text": "workloads so you really have this sort of um different options around",
    "start": "1875639",
    "end": "1882518"
  },
  {
    "text": "compute the high level situation is that compute and file storage are becoming",
    "start": "1883320",
    "end": "1889039"
  },
  {
    "text": "commodities for Azure Amazon and Google that's good for all of us kind",
    "start": "1889039",
    "end": "1896799"
  },
  {
    "text": "of these companies are not you know they're they're in business to make money so why are they doing",
    "start": "1896799",
    "end": "1903399"
  },
  {
    "text": "this lock in this is the thing for us to really",
    "start": "1903399",
    "end": "1909080"
  },
  {
    "text": "consider this is the cost that I can talk about that none of the vendors are going to talk",
    "start": "1909080",
    "end": "1914200"
  },
  {
    "text": "about this is where the battle lines are being drawn if Amazon or Microsoft or Google can get",
    "start": "1914200",
    "end": "1923080"
  },
  {
    "text": "you to use their serverless services starting with core compute and files and",
    "start": "1923080",
    "end": "1930360"
  },
  {
    "text": "you put especially your data up in their Cloud the chances that you're going to move it Go lower and lower with more",
    "start": "1930360",
    "end": "1937600"
  },
  {
    "text": "data that you put so this can sometimes be a case for using a certain language or using a",
    "start": "1937600",
    "end": "1943960"
  },
  {
    "text": "certain architecture and I'll give you an example from The Real World I was lead architect an Enterprise iot project",
    "start": "1943960",
    "end": "1949559"
  },
  {
    "text": "two years ago or so and Mission critical the company makes industrial devices and",
    "start": "1949559",
    "end": "1955519"
  },
  {
    "text": "I think that there's a lot of use cases like that here in Norway and so they chose as a language node even though",
    "start": "1955519",
    "end": "1961760"
  },
  {
    "text": "they were a net shop because they did not want to be locked into a certain vendor and they felt that if they use",
    "start": "1961760",
    "end": "1967799"
  },
  {
    "text": "node they could then move around to different Cloud vendors depending on what was most advantageous they also",
    "start": "1967799",
    "end": "1974960"
  },
  {
    "text": "chose to use Nano instances in some cases rather than Lambda for that same reason because those were like VMS that",
    "start": "1974960",
    "end": "1981519"
  },
  {
    "text": "they could move around all right let's talk about",
    "start": "1981519",
    "end": "1987360"
  },
  {
    "text": "patterns so this is the core pattern and I kind of introduced this earlier but now this is an actual implementation",
    "start": "1987360",
    "end": "1994320"
  },
  {
    "text": "this is the sort of the canonical reference architecture in Amazon so for those of us like me who",
    "start": "1994320",
    "end": "2001559"
  },
  {
    "text": "come out of the relational database world this looks kind of familiar dare I say it almost looks sort of like stored",
    "start": "2001559",
    "end": "2008240"
  },
  {
    "text": "procedures right sort of kind of but I mean mapping what you know to the new",
    "start": "2008240",
    "end": "2016320"
  },
  {
    "text": "architecture I think can be helpful for those of you that have that background so you can see from a design pattern we",
    "start": "2016320",
    "end": "2023120"
  },
  {
    "text": "have here create read update and delete so access to a database we're",
    "start": "2023120",
    "end": "2028240"
  },
  {
    "text": "abstracting it away through these lambdas and most importantly we have one",
    "start": "2028240",
    "end": "2033320"
  },
  {
    "text": "Lambda per function one per verb very very important one of the most common things",
    "start": "2033320",
    "end": "2039360"
  },
  {
    "text": "I see done incorrectly in serverless architectures is lambdas that are too",
    "start": "2039360",
    "end": "2045360"
  },
  {
    "text": "bulky lambdas that are too bulky is a ante pattern so you can see here you have uh",
    "start": "2045360",
    "end": "2053000"
  },
  {
    "text": "static storage in S3 you have lambdas for Access you have API Gateway you have",
    "start": "2053000",
    "end": "2058839"
  },
  {
    "text": "Dynamo DB in this case you're just connecting out to Services as well as Alexa you see this pattern over and over",
    "start": "2058839",
    "end": "2063919"
  },
  {
    "text": "and over so is is this the pattern that",
    "start": "2063919",
    "end": "2068960"
  },
  {
    "start": "2064000",
    "end": "2202000"
  },
  {
    "text": "Netflix used Netflix is always at every Amazon conference they are the one that",
    "start": "2068960",
    "end": "2074960"
  },
  {
    "text": "changed it all they are the one that went serverless they are the one I don't know you guys know this but Amazon",
    "start": "2074960",
    "end": "2080158"
  },
  {
    "text": "actually sometimes will run onethird of the US internet traffic the entire us",
    "start": "2080159",
    "end": "2086520"
  },
  {
    "text": "internet traffic yes we're watching too much TV but that's a different discussion um so are they the one that",
    "start": "2086520",
    "end": "2091919"
  },
  {
    "text": "kind of put serverless over the top n they I",
    "start": "2091919",
    "end": "2099640"
  },
  {
    "text": "it's beer it's beer kind of kidding but kind of not kidding",
    "start": "2100079",
    "end": "2107359"
  },
  {
    "text": "so simple beer service is an implementation of the reference architecture that I just showed you with",
    "start": "2109359",
    "end": "2115720"
  },
  {
    "text": "one twist in the front rather than a website it literally is a",
    "start": "2115720",
    "end": "2122680"
  },
  {
    "text": "Kegerator so here is the GitHub repo and I have a homework for all of you who",
    "start": "2122680",
    "end": "2128079"
  },
  {
    "text": "want to actually build something serous make the world a better place you can go",
    "start": "2128079",
    "end": "2133320"
  },
  {
    "text": "here and you can get the information starting with the hardware so you can",
    "start": "2133320",
    "end": "2138520"
  },
  {
    "text": "set up the Kegerator and connect it to the Amazon cloud or Azure if you want to",
    "start": "2138520",
    "end": "2144160"
  },
  {
    "text": "it doesn't really matter but I just happen to have the the Amazon one here and you can then add I would this is a",
    "start": "2144160",
    "end": "2151680"
  },
  {
    "text": "goal for me I would like to see an Oslo entry here before I leave on",
    "start": "2151680",
    "end": "2158160"
  },
  {
    "text": "Friday and I will hack with you so if you want to if you want to build this with me I'll be here all week um this is",
    "start": "2158160",
    "end": "2164240"
  },
  {
    "text": "the dashboard that shows from the kegerators in the Seattle office the San Francisco office and in Sydney uh what",
    "start": "2164240",
    "end": "2172000"
  },
  {
    "text": "the beer flow is coming off the Kegerator and in addition to you know being sort of fun it actually is a",
    "start": "2172000",
    "end": "2178160"
  },
  {
    "text": "reference architecture that implements serverless like I said the difference is",
    "start": "2178160",
    "end": "2183359"
  },
  {
    "text": "it's using the iot services rather than straight lambdas but it's an interesting use case and",
    "start": "2183359",
    "end": "2189960"
  },
  {
    "text": "again I'm thinking you guys in Norway have a lot of iot interest because of the sensors and the oil and gas and all",
    "start": "2189960",
    "end": "2195800"
  },
  {
    "text": "that kind of stuff so fun to build so that's the",
    "start": "2195800",
    "end": "2202720"
  },
  {
    "start": "2202000",
    "end": "2298000"
  },
  {
    "text": "architecture so if you want to look at other architectures those guys from acloud Guru one of the guys Peter",
    "start": "2202720",
    "end": "2207760"
  },
  {
    "text": "sparski um published this book and uh although it's a serverless architectures on Amazon I think it's also good across",
    "start": "2207760",
    "end": "2215119"
  },
  {
    "text": "Azure and Google it's patterns so um he has some of the patterns that he's made public and I just want to um highlight a",
    "start": "2215119",
    "end": "2221599"
  },
  {
    "text": "couple of them here because I think I really recommend this book I mean highly so you should get it if you're going to",
    "start": "2221599",
    "end": "2227359"
  },
  {
    "text": "be building on this um in this in this situation so he starts with lambdas",
    "start": "2227359",
    "end": "2232800"
  },
  {
    "text": "themselves and uh this is a really common pattern and not just in in Lambda but implemented in Lambda that you have",
    "start": "2232800",
    "end": "2240359"
  },
  {
    "text": "a Lambda out in the front that's a command Lambda so one of the situations that you run into with Lambda is because",
    "start": "2240359",
    "end": "2246760"
  },
  {
    "text": "it is running in a Docker container it's just you don't control the container is you might need to have a Lambda that's",
    "start": "2246760",
    "end": "2253480"
  },
  {
    "text": "an invoker that sits and listens to see if the other lambdas are actually alive",
    "start": "2253480",
    "end": "2258960"
  },
  {
    "text": "or not and if not wakes them up so again this is sort of practical reality now",
    "start": "2258960",
    "end": "2264640"
  },
  {
    "text": "you can do it in front like this and it hits the API Gateway or comes in from the API Gateway the invoker sits there",
    "start": "2264640",
    "end": "2270119"
  },
  {
    "text": "and says are these lambdas awake no wake it up so a Lambda that wakes up a Lambda and then send some information to a",
    "start": "2270119",
    "end": "2276440"
  },
  {
    "text": "database or you can do it the other way you have data coming in going into some sort of queue and then you need to send",
    "start": "2276440",
    "end": "2282680"
  },
  {
    "text": "this data Downstream and you need these lambdas to be awake to minimize latency so this is one of many patterns that are",
    "start": "2282680",
    "end": "2292440"
  },
  {
    "text": "that I've implemented but just wanted to share just to give you an idea in terms of the chaining of",
    "start": "2292440",
    "end": "2298359"
  },
  {
    "start": "2298000",
    "end": "2414000"
  },
  {
    "text": "lambdas now taking it a little bit more broadly and",
    "start": "2298359",
    "end": "2303480"
  },
  {
    "text": "going Beyond compute lambdas I build big data Pipelines that's what I do professionally so Snapchat clones",
    "start": "2303480",
    "end": "2312599"
  },
  {
    "text": "Instagram clones YouTube remonetized bioinformatic stuff um so",
    "start": "2312599",
    "end": "2319119"
  },
  {
    "text": "big data lots of iot big data so what are some of the overall patterns that I",
    "start": "2319119",
    "end": "2324440"
  },
  {
    "text": "work with that are serverless or mostly serverless so this is an iot this is Amazon iot this is similar to the",
    "start": "2324440",
    "end": "2330760"
  },
  {
    "text": "pattern that I built for the Enterprise um group so uh Amazon has a very strong",
    "start": "2330760",
    "end": "2336640"
  },
  {
    "text": "story around integration um with um uh mqtt protocols for iot and these uh iot",
    "start": "2336640",
    "end": "2344680"
  },
  {
    "text": "rules are basically specialty lambdas that when data comes in from the device you set the thresholds and it's all",
    "start": "2344680",
    "end": "2351160"
  },
  {
    "text": "gooey based so it's very simple to implement and then notice the core of this architecture is the server list you",
    "start": "2351160",
    "end": "2358160"
  },
  {
    "text": "send the data that has been processed through to Dynamo and then you do subsequent processing on Lambda and then",
    "start": "2358160",
    "end": "2364760"
  },
  {
    "text": "you serve it up to the dashboard on the API Gateway so hopefully there's some familiarity here and notice no servers",
    "start": "2364760",
    "end": "2371839"
  },
  {
    "text": "whatsoever none zero reference architecture but again going back to",
    "start": "2371839",
    "end": "2377440"
  },
  {
    "text": "that slide about lockin vendors are going to show you these architectures it's in their own best",
    "start": "2377440",
    "end": "2383079"
  },
  {
    "text": "interest the real world sometimes can be more PL Blended for example in this scenario we had a special security",
    "start": "2383079",
    "end": "2389200"
  },
  {
    "text": "requirement and we used small ec2 instances as our custom security servers",
    "start": "2389200",
    "end": "2394839"
  },
  {
    "text": "because we wanted to have complete control over that so you see this pattern a lot this is a",
    "start": "2394839",
    "end": "2401119"
  },
  {
    "text": "data stream coming in through Kinesis pipe and then uh you have a cold path over here the red going into the bucket",
    "start": "2401119",
    "end": "2407560"
  },
  {
    "text": "and a hot path going to the Lambda going back to Dynamo and then you have some processing going in they call it a",
    "start": "2407560",
    "end": "2412839"
  },
  {
    "text": "Kinesis app so at the serverless uh conference",
    "start": "2412839",
    "end": "2418280"
  },
  {
    "start": "2414000",
    "end": "2526000"
  },
  {
    "text": "there was an architecture competition for serverless architectures and the US retailer Nordstrom one with basically a",
    "start": "2418280",
    "end": "2425800"
  },
  {
    "text": "more sophisticated implementation of this this and this is what it looks like it looks kind of intimidating but it's",
    "start": "2425800",
    "end": "2431760"
  },
  {
    "text": "really just that separation of concerns so you know you have you take a picture of some product and then you send it in",
    "start": "2431760",
    "end": "2438800"
  },
  {
    "text": "um with some lambdas to the API Gateway and then you partition based on functions I call it based on verbs if",
    "start": "2438800",
    "end": "2444440"
  },
  {
    "text": "you will and then you store you know cold path some information here or some reference data out of your bucket you do",
    "start": "2444440",
    "end": "2450839"
  },
  {
    "text": "your processing and then send your information through to Dynamo for State because of course lambdas are stateless",
    "start": "2450839",
    "end": "2456920"
  },
  {
    "text": "and then uh you know do subsequent Downstream processing with Lambda so um this is the",
    "start": "2456920",
    "end": "2465599"
  },
  {
    "text": "um sort of highlevel serverless architecture that can be used for",
    "start": "2465599",
    "end": "2470960"
  },
  {
    "text": "certain use cases just to be complete um Google has",
    "start": "2470960",
    "end": "2476880"
  },
  {
    "text": "um a set of services like I said it's interesting of of their services I think the actual core functions obviously",
    "start": "2476880",
    "end": "2482040"
  },
  {
    "text": "because our beta are least mature but uh they have many other sophisticated services like this is a similar one with",
    "start": "2482040",
    "end": "2488720"
  },
  {
    "text": "the hot and cold path like um pubsub which is like Kinesis which is very",
    "start": "2488720",
    "end": "2493760"
  },
  {
    "text": "mature so um I have built these um streaming batched I'm sorry these",
    "start": "2493760",
    "end": "2500240"
  },
  {
    "text": "streaming Big Data architectures very very successfully with Google using some of really powerful services like big",
    "start": "2500240",
    "end": "2508760"
  },
  {
    "text": "query and this is just a more complex version um again you've got the it's",
    "start": "2508760",
    "end": "2514160"
  },
  {
    "text": "probably too much to consume in great detail but you've got the the streaming path and you've got the batch path and",
    "start": "2514160",
    "end": "2520200"
  },
  {
    "text": "then they're serving up with services like big query and data lab which is jupyter",
    "start": "2520200",
    "end": "2526119"
  },
  {
    "start": "2526000",
    "end": "2678000"
  },
  {
    "text": "notebooks uh another use case that I'm doing quite a lot of work in and I would just share with you I again I don't know",
    "start": "2526119",
    "end": "2531880"
  },
  {
    "text": "the Norwegian Market because I don't work here other than speaking here but in the US there is a huge skills gap",
    "start": "2531880",
    "end": "2538359"
  },
  {
    "text": "between developers who can code in machine learning and what my customers need I am actually literally going to",
    "start": "2538359",
    "end": "2544599"
  },
  {
    "text": "universities and I'm getting I'm hiring University students while they're still in school because they've had machine",
    "start": "2544599",
    "end": "2551599"
  },
  {
    "text": "learning courses machine learning is coming fast really really fast all three",
    "start": "2551599",
    "end": "2558559"
  },
  {
    "text": "vendors have very compelling offerings and where I'm working on it is this use case up here which is bioinformatics I",
    "start": "2558559",
    "end": "2565079"
  },
  {
    "text": "actually have a different talk in this conference on Friday about some work that I've done but the idea is the scale",
    "start": "2565079",
    "end": "2571880"
  },
  {
    "text": "of data requires Predictive Analytics or machine learning because you can't just use you know simple agregation anymore",
    "start": "2571880",
    "end": "2579160"
  },
  {
    "text": "but anyway so in the world of the vendors they have machine learning as a service they have specialized apis like",
    "start": "2579160",
    "end": "2585720"
  },
  {
    "text": "an Amazon polylex and recognition uh Google Vision speech and video API and",
    "start": "2585720",
    "end": "2591440"
  },
  {
    "text": "then they are working on these open-source projects that have started out of Academia for the really",
    "start": "2591440",
    "end": "2598880"
  },
  {
    "text": "computationally intense problems the Deep neural Nets and um Amazon has put",
    "start": "2598880",
    "end": "2604000"
  },
  {
    "text": "their hat in the ring with mxnet and Google has tensor flow very interesting because uh these um computationally",
    "start": "2604000",
    "end": "2612359"
  },
  {
    "text": "intense workloads uh take advantage of gpus and uh all the V uh Amazon and",
    "start": "2612359",
    "end": "2618720"
  },
  {
    "text": "Google have gpus as a service I'm just not as familiar in the Azure space there's lots of azure people here so I'm",
    "start": "2618720",
    "end": "2624880"
  },
  {
    "text": "assuming they have um similar offerings because all this is everybody is really really trying to get um offerings out",
    "start": "2624880",
    "end": "2631960"
  },
  {
    "text": "there so I talk about this from two two reasons one customers want it",
    "start": "2631960",
    "end": "2638240"
  },
  {
    "text": "to educate yourself and I guess I'll just take my little one minute um",
    "start": "2638240",
    "end": "2643319"
  },
  {
    "text": "Sidetrack here um I don't care how old or how young you are uh if you are",
    "start": "2643319",
    "end": "2649200"
  },
  {
    "text": "interested in learning this stuff it is highly highly possible um I have been",
    "start": "2649200",
    "end": "2654559"
  },
  {
    "text": "working on learning um Advanced calculus I think there is a talk here on",
    "start": "2654559",
    "end": "2659760"
  },
  {
    "text": "implementing the Lambda calculus that I'll be sitting in um the amount of",
    "start": "2659760",
    "end": "2665000"
  },
  {
    "text": "learning that is necessary in our industry to be able to service our customer need is significant and those",
    "start": "2665000",
    "end": "2671079"
  },
  {
    "text": "of us who Embrace lifelong learning are going to be very successful in this area and those that don't aren't so speaking",
    "start": "2671079",
    "end": "2679480"
  },
  {
    "start": "2678000",
    "end": "2882000"
  },
  {
    "text": "of that lessons Okay so let's talk about some",
    "start": "2679480",
    "end": "2684599"
  },
  {
    "text": "real world problems I've implemented Lambda in production with several customers so um these are known problems",
    "start": "2684599",
    "end": "2691800"
  },
  {
    "text": "but again you came to my talk to get reality so maybe you haven't experienced this yet warm-up time time is a known",
    "start": "2691800",
    "end": "2697760"
  },
  {
    "text": "problem because of uh if you need always on lambdas uh that there's a there's the",
    "start": "2697760",
    "end": "2703520"
  },
  {
    "text": "initial warmup time because the docker container understanding how to properly store state is not really a problem it's",
    "start": "2703520",
    "end": "2709680"
  },
  {
    "text": "just an architectural Challenge and then there's mystery and freeze and thaw",
    "start": "2709680",
    "end": "2714960"
  },
  {
    "text": "errors the scary things so for warm-up time I showed you the pattern warming",
    "start": "2714960",
    "end": "2720000"
  },
  {
    "text": "trigger you can do cloudwatch events you can set it I just put five minutes you can put whatever time you want basically",
    "start": "2720000",
    "end": "2727119"
  },
  {
    "text": "uh for State I've shown you the pattern over and over to store the state externally either in S3 which of course you should encrypt for anything that has",
    "start": "2727119",
    "end": "2733440"
  },
  {
    "text": "a high security need or Dynamo DB this is a little bit more subtle for",
    "start": "2733440",
    "end": "2739680"
  },
  {
    "text": "mystery errors allocate more Lambda memory remember how I said you get what you pay for the 128 Meg uh lambdas are",
    "start": "2739680",
    "end": "2746720"
  },
  {
    "text": "pretty much free but you get what you pay for so sometimes you have to bump the memory up and if you're working with",
    "start": "2746720",
    "end": "2753200"
  },
  {
    "text": "node this is just my projects have been a node use the latest nodejs versions on on cloud because that's what they're optimizing",
    "start": "2753200",
    "end": "2760640"
  },
  {
    "text": "for and use shorter operations common sense but very very important in the",
    "start": "2762520",
    "end": "2768400"
  },
  {
    "text": "world of serverless so lambdas are more than coding so you're going to look at is",
    "start": "2768400",
    "end": "2775359"
  },
  {
    "text": "Lambda available in your programming language the previous guy who was talking was talking about C and the c community I was really happy to see",
    "start": "2775359",
    "end": "2781920"
  },
  {
    "text": "Amazon announce support in Lambda for C I love C haven't done any work in C",
    "start": "2781920",
    "end": "2787559"
  },
  {
    "text": "Unfortunately they haven't had any demand um and I'm really hoping that you know like he was making a call to the c",
    "start": "2787559",
    "end": "2793559"
  },
  {
    "text": "community to be more open and be more inclusive I love C it's a beautiful language I feel sad and I'll tell you",
    "start": "2793559",
    "end": "2800240"
  },
  {
    "text": "that in California I'm having very little demand for C it's all Python and node so you have concerns around",
    "start": "2800240",
    "end": "2807079"
  },
  {
    "text": "debugging unit testing integration testing or orchestration and deployment so debugging patterns Azure",
    "start": "2807079",
    "end": "2814319"
  },
  {
    "text": "comes out really strong here Microsoft's always had a great tooling story they have a local emulator the visual studio",
    "start": "2814319",
    "end": "2819800"
  },
  {
    "text": "tools are great um fantastic if you're a net developer very compelling the story",
    "start": "2819800",
    "end": "2826079"
  },
  {
    "text": "on the Amazon and gcp side is not as happy um I just what I did for testing",
    "start": "2826079",
    "end": "2833839"
  },
  {
    "text": "and debugging I use mocha chai and mocks so there's a lot of pain basically these are libraries for node uh you want to uh",
    "start": "2833839",
    "end": "2841920"
  },
  {
    "text": "code via testable pattern supports an adapter so it's on you to code properly and there are starting to be a utility",
    "start": "2841920",
    "end": "2848400"
  },
  {
    "text": "libraries such as Lambda tester and there's an alpha version on GitHub for",
    "start": "2848400",
    "end": "2853520"
  },
  {
    "text": "um gcp um so it's a painful kind of story in the world of security what I see",
    "start": "2853520",
    "end": "2860520"
  },
  {
    "text": "whenever there's a paradigm shift in technology is developers don't like caring about security and they tend to",
    "start": "2860520",
    "end": "2866119"
  },
  {
    "text": "Let It Drop and this is just this is nothing new it's just one slide for you know follow best security practices",
    "start": "2866119",
    "end": "2871800"
  },
  {
    "text": "credentials that are unique small attack surface test your external connections",
    "start": "2871800",
    "end": "2876839"
  },
  {
    "text": "minimal per permissions granular policies nothing new but just don't ignore these",
    "start": "2876839",
    "end": "2882800"
  },
  {
    "start": "2882000",
    "end": "2969000"
  },
  {
    "text": "things this is a picture of uh app uh um Azure logic apps uh again I I encourage",
    "start": "2882800",
    "end": "2891359"
  },
  {
    "text": "you if you're uh working in the Azure environment to take a look at this when I was traveling around with my my friend",
    "start": "2891359",
    "end": "2897240"
  },
  {
    "text": "Anton he said he was frustrated because whenever he was uh thinking of writing an Azure function he went and looked at",
    "start": "2897240",
    "end": "2903480"
  },
  {
    "text": "the logic app and the integration was already written for him so you know kudos to Microsoft for that that they",
    "start": "2903480",
    "end": "2909400"
  },
  {
    "text": "have so many of the common Integrations so uh this is an orchestration UI that",
    "start": "2909400",
    "end": "2916079"
  },
  {
    "text": "generates Json code and um it really showcases the ability to orchestrate",
    "start": "2916079",
    "end": "2922480"
  },
  {
    "text": "functions very powerfully on the Amazon side they have",
    "start": "2922480",
    "end": "2928359"
  },
  {
    "text": "uh step functions of course you can use cloudwatch alarms as triggers but step functions which is in beta and uh this",
    "start": "2928359",
    "end": "2934839"
  },
  {
    "text": "is more of a focus on uh flow rather than integration but I do have one",
    "start": "2934839",
    "end": "2940240"
  },
  {
    "text": "customer I'm working with so if you're interested in getting some real world information about this I will be",
    "start": "2940240",
    "end": "2946400"
  },
  {
    "text": "blogging and writing about uh the implementation of Step functions in it's a bioinformatics",
    "start": "2946400",
    "end": "2953000"
  },
  {
    "text": "workflow and uh Amazon's starting to publish reference architectures here so uh you again they're pushing all things",
    "start": "2953000",
    "end": "2959480"
  },
  {
    "text": "serverless and they're are publishing these architectures around orchestration which I'll be leveraging when I'm",
    "start": "2959480",
    "end": "2965520"
  },
  {
    "text": "working with my clients and I want wanted to make you aware they're already doing this in terms of deployment again Azure",
    "start": "2965520",
    "end": "2972359"
  },
  {
    "text": "has a great story kind of same thing they have nice uh integration with Visual Studio they have armm or Azure",
    "start": "2972359",
    "end": "2978760"
  },
  {
    "text": "resource manager Json templates and you can use Powershell to deploy always a strength with Microsoft on the Amazon",
    "start": "2978760",
    "end": "2985760"
  },
  {
    "text": "side um still got some work to do although um uh cloud formation which",
    "start": "2985760",
    "end": "2991400"
  },
  {
    "text": "uses yaml files similarly to the armm uh now has extended to support um functions",
    "start": "2991400",
    "end": "2999000"
  },
  {
    "text": "by Sam templates there are a bunch of third-party templates that I I've seen more often over previous time terraform",
    "start": "2999000",
    "end": "3005760"
  },
  {
    "text": "is commercial um serverless framework Claudia JS um so the Sam templates work",
    "start": "3005760",
    "end": "3011480"
  },
  {
    "text": "in the cloud formation designer and I actually have a little demo of how this works if you've never seen this um this",
    "start": "3011480",
    "end": "3018480"
  },
  {
    "text": "oops let me get out of here go out of here there we go there okay so if you're",
    "start": "3018480",
    "end": "3024880"
  },
  {
    "text": "are not familiar um I'm just going through the environment saying I have nothing there nothing there nothing",
    "start": "3024880",
    "end": "3030599"
  },
  {
    "text": "there so I'm going to deploy that um reference architecture so I'm going to",
    "start": "3030599",
    "end": "3036200"
  },
  {
    "text": "do this with a cloud formation stack um and I'm going to do it through the command",
    "start": "3036200",
    "end": "3041960"
  },
  {
    "text": "line so I have um I have a yaml file and you can see on",
    "start": "3041960",
    "end": "3050240"
  },
  {
    "text": "line six there this is the Sam extension so type AWS colon colon serverless colon colon function so so this is",
    "start": "3050240",
    "end": "3057960"
  },
  {
    "text": "configuration as code which is a extremely important practice in Cloud um even more so in serverless because you",
    "start": "3057960",
    "end": "3064319"
  },
  {
    "text": "got more objects to deal with and this is going to deploy all of those lambdas",
    "start": "3064319",
    "end": "3070000"
  },
  {
    "text": "those buckets and the Dynamo DB and the API Gateway and then this is the um the",
    "start": "3070000",
    "end": "3076760"
  },
  {
    "text": "the they put all the Lambda code kind of sloppily in one index.js just to make it quicker it",
    "start": "3076760",
    "end": "3083200"
  },
  {
    "text": "should be should correspond to each Lambda of course and this is as you can see like on line",
    "start": "3083200",
    "end": "3088760"
  },
  {
    "text": "33 events. put this is putting into on 44 Dynam put item so this is using the",
    "start": "3088760",
    "end": "3095799"
  },
  {
    "text": "um Lambda to connect to the Dynamo",
    "start": "3095799",
    "end": "3101119"
  },
  {
    "text": "DB so uh I'm running this from the AWS CLI the first thing that I'm doing is",
    "start": "3101119",
    "end": "3106839"
  },
  {
    "text": "I'm running on line one when I put this into my terminal AWS cloud formation and I'm taking that yaml file and I'm",
    "start": "3106839",
    "end": "3113839"
  },
  {
    "text": "specifying where to put it because it has to in order for cloud formation to execute it has to run from a",
    "start": "3113839",
    "end": "3119359"
  },
  {
    "text": "bucket so I'm just saying put that yaml file in this bucket which it",
    "start": "3119359",
    "end": "3126599"
  },
  {
    "text": "does and now it makes a new yaml",
    "start": "3126599",
    "end": "3132400"
  },
  {
    "text": "file that says where it is basically because one of the things cloud formation does for you is it versions",
    "start": "3132400",
    "end": "3139400"
  },
  {
    "text": "this the stacks or the Amo files so it's like a GitHub in a way or Source control",
    "start": "3139400",
    "end": "3144599"
  },
  {
    "text": "I guess if you will so now I'm going to deploy this and I have the capabilities flag because I have to create an I am or",
    "start": "3144599",
    "end": "3150440"
  },
  {
    "text": "a permission for this and this will deploy that entire",
    "start": "3150440",
    "end": "3155359"
  },
  {
    "text": "architecture so it will deploy definitely recorded this because it doesn't go as fast as in the video okay",
    "start": "3156760",
    "end": "3163119"
  },
  {
    "text": "and I this is from an Amazon sample so I can put the link in the presentation if you guys want to try it and I did this",
    "start": "3163119",
    "end": "3169920"
  },
  {
    "text": "from here so it works just fine you have to put it in USC though",
    "start": "3169920",
    "end": "3175040"
  },
  {
    "text": "unfortunately and there's um all the creates of all the",
    "start": "3175040",
    "end": "3180280"
  },
  {
    "text": "lambdas so everything's done it takes about five minutes and",
    "start": "3180559",
    "end": "3186680"
  },
  {
    "text": "then you get a nice log so you conversion all this stuff so if you",
    "start": "3186680",
    "end": "3192160"
  },
  {
    "text": "never seen Cloud solutions versioned that that alone is worth the price of admission to this talk it's extremely",
    "start": "3192160",
    "end": "3198440"
  },
  {
    "text": "important production don't click on the console only for demos so there's my uh",
    "start": "3198440",
    "end": "3204960"
  },
  {
    "text": "Sam template there's my lambdas so I have a get put and",
    "start": "3204960",
    "end": "3213279"
  },
  {
    "text": "delete familiar pattern hopefully by now it's Associated to the API",
    "start": "3219240",
    "end": "3225559"
  },
  {
    "text": "Gateway and there's my Dynamo",
    "start": "3227640",
    "end": "3231599"
  },
  {
    "text": "DB and I can put an item",
    "start": "3233480",
    "end": "3238200"
  },
  {
    "text": "and if you're not familiar with API Gateway um this uh puts a rest endpoint on your",
    "start": "3241920",
    "end": "3247520"
  },
  {
    "text": "Lambda and you can see that you have basically rest interface",
    "start": "3247520",
    "end": "3253839"
  },
  {
    "text": "here and you can put authorizers and all the things it's API management",
    "start": "3254799",
    "end": "3261920"
  },
  {
    "text": "so and there I'm just putting some items what I'm going to do in the interest of time here is I'm just going to move up",
    "start": "3263440",
    "end": "3268680"
  },
  {
    "text": "to there's the designer so that's what the the cloud formation designer looks like it's a",
    "start": "3268680",
    "end": "3275000"
  },
  {
    "text": "visual designer and uh then you can diff your your change set it's Json file and",
    "start": "3275000",
    "end": "3282000"
  },
  {
    "text": "then um you can also cleanly remove great this is great for testing too I mean obviously it's great for production",
    "start": "3282000",
    "end": "3287079"
  },
  {
    "text": "this is how you build your deployment",
    "start": "3287079",
    "end": "3290400"
  },
  {
    "text": "pipeline this pattern is actually like I said extreme so now I'm going to delete this and it'll remove all the resources",
    "start": "3293400",
    "end": "3298920"
  },
  {
    "text": "this is extremely important for serverless because you have more objects",
    "start": "3298920",
    "end": "3303960"
  },
  {
    "text": "to deal with you're not you know having three ec2 servers or something and then once you delete the stack all the",
    "start": "3303960",
    "end": "3310319"
  },
  {
    "text": "objects will be gone all",
    "start": "3310319",
    "end": "3314480"
  },
  {
    "start": "3314000",
    "end": "3600000"
  },
  {
    "text": "right so",
    "start": "3316240",
    "end": "3319480"
  },
  {
    "text": "monitoring so charity um is a very a famous speaker she's devops person lots",
    "start": "3323039",
    "end": "3328920"
  },
  {
    "text": "of experience and um she's basically expressing The Rage of the devops people which I don't have any other way to",
    "start": "3328920",
    "end": "3335200"
  },
  {
    "text": "State it um it's very challenging for people whose careers were made on",
    "start": "3335200",
    "end": "3340960"
  },
  {
    "text": "monitoring servers to be handed serverless architectures so the reality is they're",
    "start": "3340960",
    "end": "3347640"
  },
  {
    "text": "afraid and angry now how we had success with one of",
    "start": "3347640",
    "end": "3353160"
  },
  {
    "text": "the big projects I worked on is we used a technique called mob programming and we integrated the devops people they",
    "start": "3353160",
    "end": "3359319"
  },
  {
    "text": "also went for Amazon training so Woody zul is here he's the father of mob programming and uh you know I worked",
    "start": "3359319",
    "end": "3366079"
  },
  {
    "text": "with the mob for more than a year or you can talk to Woody but it isn't a very powerful technique when you have this",
    "start": "3366079",
    "end": "3371480"
  },
  {
    "text": "amount of change because the devops people are really really feeling",
    "start": "3371480",
    "end": "3377400"
  },
  {
    "text": "unsettled by serverless architectures and justifiably all right so let's get",
    "start": "3377400",
    "end": "3384359"
  },
  {
    "text": "real serus are so cheap coding is so easy configuration is a breeze",
    "start": "3384359",
    "end": "3389760"
  },
  {
    "text": "transparent error reporting serverless is great for developers monitoring is easy for devops deployment is simple",
    "start": "3389760",
    "end": "3395319"
  },
  {
    "text": "serverless is best for everything boy I sound like I still work at one of those big vendors don't I",
    "start": "3395319",
    "end": "3400880"
  },
  {
    "text": "nope costs are cheap yes coding can be",
    "start": "3400880",
    "end": "3406000"
  },
  {
    "text": "easy you have to think in a Services microservices kind of a style and",
    "start": "3406000",
    "end": "3411200"
  },
  {
    "text": "Implement that way configuration can can be manageable",
    "start": "3411200",
    "end": "3417280"
  },
  {
    "text": "depending on how you are comfortable with the tools whether it's cloud formation or whatever tools you use do",
    "start": "3417280",
    "end": "3423520"
  },
  {
    "text": "not click on the console do not click on the console do not click on the console really bad transparent error reporting",
    "start": "3423520",
    "end": "3430760"
  },
  {
    "text": "maybe you might have mystery errors sometimes you can solve them by just bumping up the resources sometimes you",
    "start": "3430760",
    "end": "3437680"
  },
  {
    "text": "just have to learn how to read the cloudwatch logs shus is great for developers maybe",
    "start": "3437680",
    "end": "3444680"
  },
  {
    "text": "developers mostly love it in but then when they realize they can't SSH into a container they don't love it",
    "start": "3444680",
    "end": "3450400"
  },
  {
    "text": "as much I actually had a team who told me it was impossible to implement an architecture that I drew so",
    "start": "3450400",
    "end": "3457480"
  },
  {
    "text": "unfortunately we fired the team and built the architecture monitoring is easy no there",
    "start": "3457480",
    "end": "3465359"
  },
  {
    "text": "are new tools they're powerful Amazon for example now supports monitoring of",
    "start": "3465359",
    "end": "3470440"
  },
  {
    "text": "Lambda with x-ray Google has stack driver but they're new and devops people",
    "start": "3470440",
    "end": "3477119"
  },
  {
    "text": "do not like change that's why they're devops people they maintain systems so do not underestimate the Need",
    "start": "3477119",
    "end": "3484599"
  },
  {
    "text": "For Education integration and training for devops people and serverless solutions deployment is simple nope you",
    "start": "3484599",
    "end": "3491319"
  },
  {
    "text": "need tools we wrote scripts at one client because they just refused to use cloud formation it was hell don't do",
    "start": "3491319",
    "end": "3498280"
  },
  {
    "text": "that use tools buy uh terraform or whatever it is use",
    "start": "3498280",
    "end": "3503839"
  },
  {
    "text": "tools serverless is best for everything no absolutely not it's best for the",
    "start": "3503839",
    "end": "3509480"
  },
  {
    "text": "types of workloads that I talked about initially variable workloads workloads",
    "start": "3509480",
    "end": "3516039"
  },
  {
    "text": "that have isolated portions workloads that are",
    "start": "3516039",
    "end": "3523440"
  },
  {
    "text": "spiky not for everything so what's the reality you can",
    "start": "3523440",
    "end": "3530359"
  },
  {
    "text": "always use servers and you might want to so I recommend when you're making your",
    "start": "3530359",
    "end": "3535480"
  },
  {
    "text": "architecture which what whatever Cloud you're working on you actually evaluate using server",
    "start": "3535480",
    "end": "3542640"
  },
  {
    "text": "based architectures and you take into consideration aspects such as control such as learning",
    "start": "3542640",
    "end": "3549720"
  },
  {
    "text": "curve such as estimated cost the full picture and you'll most often end up",
    "start": "3549720",
    "end": "3557000"
  },
  {
    "text": "with a blended solution pure serverless is for things like simple",
    "start": "3557000",
    "end": "3563480"
  },
  {
    "text": "beer not necessarily for the things we work on",
    "start": "3563480",
    "end": "3568680"
  },
  {
    "text": "yet the market status of course Amazon's a market leader building new features Azure IC copying Amazon but also adding",
    "start": "3568680",
    "end": "3577640"
  },
  {
    "text": "you know the tooling is great and then adding these Integrations I'm really very you know kudos to Microsoft I'm going to be showing customers Azure as",
    "start": "3577640",
    "end": "3584720"
  },
  {
    "text": "well uh who are interested in that ecosystem Google please get your functions out of beta I really like your",
    "start": "3584720",
    "end": "3590880"
  },
  {
    "text": "serverless services I'd like to see your functions and that is serverless reality",
    "start": "3590880",
    "end": "3597960"
  },
  {
    "text": "thank you",
    "start": "3597960",
    "end": "3601160"
  },
  {
    "text": "[Applause]",
    "start": "3603730",
    "end": "3606869"
  }
]