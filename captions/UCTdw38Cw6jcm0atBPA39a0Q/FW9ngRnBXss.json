[
  {
    "start": "0",
    "end": "411000"
  },
  {
    "text": "cool okay afternoon everyone okay NDC's been",
    "start": "9670",
    "end": "15540"
  },
  {
    "text": "treating you well today I'm gonna be chatting about what I find actually",
    "start": "15540",
    "end": "21900"
  },
  {
    "text": "quite an interesting space is the evolution of infrastructure as code it's",
    "start": "21900",
    "end": "27779"
  },
  {
    "text": "an area that's got heaps and heaps of focus recently and gained a lot of maturity but most of the different",
    "start": "27779",
    "end": "35460"
  },
  {
    "text": "options are relatively the same there hasn't been too much many large steps there's been a heap of",
    "start": "35460",
    "end": "41730"
  },
  {
    "text": "kind of supporting infrastructure way more modules less bugs kind of a lot of",
    "start": "41730",
    "end": "47640"
  },
  {
    "text": "maturity but nearly everything is defined in Yama and I'm not a massive",
    "start": "47640",
    "end": "53190"
  },
  {
    "text": "fan of em all there's a someone at the conference Jeffery Huntley who built",
    "start": "53190",
    "end": "58199"
  },
  {
    "text": "this site no yeah Malcolm and it's a collection of reasons that yellow is not",
    "start": "58199",
    "end": "64860"
  },
  {
    "text": "a good idea one of the little snippets is how big the spec is so 23,000 lines",
    "start": "64860",
    "end": "73409"
  },
  {
    "text": "bigger than XML Jason is pretty tiny but it's a bit of a monster like 24 ways",
    "start": "73409",
    "end": "81570"
  },
  {
    "text": "to define a boolean and then you talk to the ops people and they're like yeah but why would you use all of Yamhill and",
    "start": "81570",
    "end": "88500"
  },
  {
    "text": "then we kind of get this we've seen this one before a little bit of context about",
    "start": "88500",
    "end": "94050"
  },
  {
    "text": "me for those who have not met me I am Jake in 'van I'm based at seven West",
    "start": "94050",
    "end": "99240"
  },
  {
    "text": "meteor and Perth I'm the tech lead there and hit me up on Twitter if you've got",
    "start": "99240",
    "end": "106200"
  },
  {
    "text": "any questions and also as we're going if there's something that you'd like me to clarify just three hand up happy to take",
    "start": "106200",
    "end": "112320"
  },
  {
    "text": "questions as we go but bit of context about me I'm mainly a dev so I'm not a",
    "start": "112320",
    "end": "118800"
  },
  {
    "text": "production engineer I spend most of my time building software and I do work",
    "start": "118800",
    "end": "124980"
  },
  {
    "text": "with our production engineers and have to be an AWS and I understand our architecture and work on it",
    "start": "124980",
    "end": "130860"
  },
  {
    "text": "but that's not my primary role as what I'm one of my functions so the way I describe myself is I do some production",
    "start": "130860",
    "end": "138239"
  },
  {
    "text": "engineering but I'm not a production engineer so that gives you a little bit of context about me and I think it's",
    "start": "138239",
    "end": "143400"
  },
  {
    "text": "quite important about to frame up why I'm excited about the tool we're gonna",
    "start": "143400",
    "end": "148409"
  },
  {
    "text": "be talking today about is Pulu me but",
    "start": "148409",
    "end": "154650"
  },
  {
    "text": "first of all jump in to terraform so who's used terraform here cool so this",
    "start": "154650",
    "end": "161549"
  },
  {
    "text": "is terraform just doesn't fit with my mental model very well because say we want to deal with a list i want to",
    "start": "161549",
    "end": "167819"
  },
  {
    "text": "create a few users because it's a templating language we have to use kind",
    "start": "167819",
    "end": "173280"
  },
  {
    "text": "of array syntax and then for each item in that list it will kind of duplicate",
    "start": "173280",
    "end": "178739"
  },
  {
    "text": "and then execute that template at the end the engine would execute it it just",
    "start": "178739",
    "end": "185180"
  },
  {
    "text": "it's not the way I think and not the way I approach problems so whenever I jump",
    "start": "185180",
    "end": "190470"
  },
  {
    "text": "in to terraform it's normally every month or two I'm not constantly in there and it requires a huge amount of context",
    "start": "190470",
    "end": "197040"
  },
  {
    "text": "to me just to pick it up and kind of figure out okay that's the way loops or",
    "start": "197040",
    "end": "202140"
  },
  {
    "text": "conditionals or whatever hack it is to try and get some of these and control",
    "start": "202140",
    "end": "209190"
  },
  {
    "text": "flow structures working in a templating or a configuration language which is yeah Mille so then start asking what the",
    "start": "209190",
    "end": "218970"
  },
  {
    "text": "guys have plumie sort of we're like what if we could actually define our resources in code what would that look like there's a lot of things when we",
    "start": "218970",
    "end": "226379"
  },
  {
    "text": "start getting for free so we get package management so there's paluma allows you",
    "start": "226379",
    "end": "231690"
  },
  {
    "text": "to write all you infrastructure modules in a couple of languages I'm going to be focusing mainly today on typescript",
    "start": "231690",
    "end": "237209"
  },
  {
    "text": "because that's what I use but you can also write all of your infrastructure in Python or go plumies engine is separated",
    "start": "237209",
    "end": "245400"
  },
  {
    "text": "from kind of the front-end that you declare everything in and so it has a step run to your program and then sends",
    "start": "245400",
    "end": "252660"
  },
  {
    "text": "it off to the engine so all of these languages are decoupled from the engine and that's where the sort of",
    "start": "252660",
    "end": "258419"
  },
  {
    "text": "infrastructure as code sort of smarts are so we get package management the NPM",
    "start": "258419",
    "end": "263849"
  },
  {
    "text": "I can just compile my typescript and put it in a a NPM module push it up to by",
    "start": "263849",
    "end": "270750"
  },
  {
    "text": "the public or Nexus and now I can share my infrastructure modules just like I",
    "start": "270750",
    "end": "276240"
  },
  {
    "text": "could my normal code if I've got conflict config flags that do different things in",
    "start": "276240",
    "end": "282750"
  },
  {
    "text": "different environments so in production I want a whole bunch of alerting setup I don't want all of those alerts set up in",
    "start": "282750",
    "end": "289439"
  },
  {
    "text": "dev I can just have a config flag that says enable alerts and then that put",
    "start": "289439",
    "end": "294900"
  },
  {
    "text": "that in the if block and now all of my alerts are hidden behind that config",
    "start": "294900",
    "end": "300659"
  },
  {
    "text": "flag we can just use if statements and loops and that sort of normal programming constructs that we used to",
    "start": "300659",
    "end": "307729"
  },
  {
    "text": "we've also got testing there's an interesting article which allows you to you can write use Macha and just to test",
    "start": "307729",
    "end": "316770"
  },
  {
    "text": "your infrastructure using sort of JavaScript test tools so it opens up a whole bunch of problems that didn't say",
    "start": "316770",
    "end": "323370"
  },
  {
    "text": "the terraform world they've had to solve by expanding what you can do in the templating language or adding in little",
    "start": "323370",
    "end": "330270"
  },
  {
    "text": "functions to the CL iron and whatnot a whole bunch of this stuff if we coded our resources in code just we get for",
    "start": "330270",
    "end": "337770"
  },
  {
    "text": "free what does that actually look like though we're importing we use AWS it",
    "start": "337770",
    "end": "344879"
  },
  {
    "text": "work so all of whenever I'm talking about pay WS there are modules in plumie",
    "start": "344879",
    "end": "351060"
  },
  {
    "text": "for as your Google Cloud and then they also have another one which is just a",
    "start": "351060",
    "end": "356639"
  },
  {
    "text": "cloud abstraction so you can just program against the cloud and it will sort of create the same resources in",
    "start": "356639",
    "end": "363139"
  },
  {
    "text": "whichever cloud you have them to configure so we import our AWS module and then we just declare an array with",
    "start": "363139",
    "end": "370409"
  },
  {
    "text": "two users in it I then loop through the users and then I new up and I am role so",
    "start": "370409",
    "end": "378719"
  },
  {
    "text": "this is a really weird concept like whoa what's going on are you I thought you",
    "start": "378719",
    "end": "384120"
  },
  {
    "text": "were talking about infrastructure as code when I think about infrastructure is code it's normally declarative what I",
    "start": "384120",
    "end": "390960"
  },
  {
    "text": "think about us I declare my infrastructure and then some engine",
    "start": "390960",
    "end": "396210"
  },
  {
    "text": "makes sure that the desired state happens in production or in in the",
    "start": "396210",
    "end": "402060"
  },
  {
    "text": "actual cloud vendor this looks very imperative it doesn't quite fit my what",
    "start": "402060",
    "end": "409560"
  },
  {
    "text": "I'm used to but the end result is actually the same",
    "start": "409560",
    "end": "414690"
  },
  {
    "start": "411000",
    "end": "504000"
  },
  {
    "text": "so what paluma does is you have your development cycle you build your program when you new up a resource it kind of",
    "start": "414690",
    "end": "422400"
  },
  {
    "text": "registers that you want that resource so when your program executes it actually does nothing apart from tell plumie that",
    "start": "422400",
    "end": "429330"
  },
  {
    "text": "i want an iron roll so that's kind of the development cycle I then can go and",
    "start": "429330",
    "end": "435300"
  },
  {
    "text": "plan and this is much same as a terraform plan where it will show you",
    "start": "435300",
    "end": "440430"
  },
  {
    "text": "okay here are all the resources that you registered that you want I'm going to",
    "start": "440430",
    "end": "445650"
  },
  {
    "text": "dip that with production and these are all the changes that will happen in production if you say yes and then",
    "start": "445650",
    "end": "452250"
  },
  {
    "text": "finally you deploy it and I will go to make those changes so if we're using a kind of imperative writing a program and",
    "start": "452250",
    "end": "460010"
  },
  {
    "text": "newing up resources and then using those resources that we've created encode",
    "start": "460010",
    "end": "466550"
  },
  {
    "text": "becomes the desired State diving a little bit deeper the way we do that is",
    "start": "466550",
    "end": "472680"
  },
  {
    "text": "just run the command plumie up it'll then give you a preview of what's going",
    "start": "472680",
    "end": "478500"
  },
  {
    "text": "to happen so I've got to create the role Bob role Jake two resources are going to be created and then I can just say yes",
    "start": "478500",
    "end": "485220"
  },
  {
    "text": "so those familiar with terraform much much the same flow in fact blew me a lot",
    "start": "485220",
    "end": "491670"
  },
  {
    "text": "of paluma news modules just wrap terraform modules so a lot of the hard work that's gone into building terraform",
    "start": "491670",
    "end": "498420"
  },
  {
    "text": "and making these abstractions for the different cloud api's plumies leveraging that before we get into the code there's",
    "start": "498420",
    "end": "506250"
  },
  {
    "start": "504000",
    "end": "745000"
  },
  {
    "text": "a quite a few concepts that I kind of had to get my head around when starting to use it and",
    "start": "506250",
    "end": "513469"
  },
  {
    "text": "a bit more context about me I actually only got into a plumie a couple of",
    "start": "513470",
    "end": "519150"
  },
  {
    "text": "months ago I was at a conference in Kansas City talking with one of the devs there who works at bloomie and he was",
    "start": "519150",
    "end": "526080"
  },
  {
    "text": "showing me it got pretty excited and that's where I was like oh well I really",
    "start": "526080",
    "end": "532560"
  },
  {
    "text": "want to learn this so I submitted a talk to NBC and here we are so I've spent the",
    "start": "532560",
    "end": "538440"
  },
  {
    "text": "last month or two learning to make sure that I could explain it well",
    "start": "538440",
    "end": "544560"
  },
  {
    "text": "and these are the concepts that kind of hit me as the the things that weren't immediately obvious and once I they I",
    "start": "544560",
    "end": "551100"
  },
  {
    "text": "got a mental model around that everything became way easier the first thing to get head around is the way",
    "start": "551100",
    "end": "556980"
  },
  {
    "text": "plumie projects work so you can create multiple projects each project is",
    "start": "556980",
    "end": "563130"
  },
  {
    "text": "essentially a program it has in the typescript world it has an indexed es file and that is your plumie project you",
    "start": "563130",
    "end": "570780"
  },
  {
    "text": "define all the resources in that by newing them up but how do you actually",
    "start": "570780",
    "end": "576000"
  },
  {
    "text": "get that into an environment their concept called stacks so a stack is kind",
    "start": "576000",
    "end": "582450"
  },
  {
    "text": "of an environment but it doesn't have to map one to one so I could create a devstack a production stack and they can",
    "start": "582450",
    "end": "589350"
  },
  {
    "text": "also be named arbitrarily you then have another layer on top which is",
    "start": "589350",
    "end": "595100"
  },
  {
    "text": "organization and organization by default will just be you but you can configure it to be if you work at a company your",
    "start": "595100",
    "end": "602370"
  },
  {
    "text": "company and that sort of stuff so this is the kind of structure of stacks and projects and we'll dive into that a",
    "start": "602370",
    "end": "609270"
  },
  {
    "text": "little bit soon and then so when I create a bunch of resources in my",
    "start": "609270",
    "end": "615990"
  },
  {
    "text": "project I can then say plumie up for a particular stack in a project and then",
    "start": "615990",
    "end": "624000"
  },
  {
    "text": "it will go create those resources in wherever you've declared let's have a",
    "start": "624000",
    "end": "630420"
  },
  {
    "text": "quick look at projects and stacks",
    "start": "630420",
    "end": "635060"
  },
  {
    "text": "so first thing to do is we're just going to make make a directory which is demo",
    "start": "641190",
    "end": "648390"
  },
  {
    "text": "go into demo and then just go halloumi new can everyone see the terminal text",
    "start": "648390",
    "end": "658090"
  },
  {
    "text": "just big enough excellent so when you go pull them in you it'll give you a whole bunch of different",
    "start": "658090",
    "end": "664060"
  },
  {
    "text": "templates so you can see here there's ones for sure and in JavaScript Python",
    "start": "664060",
    "end": "669570"
  },
  {
    "text": "so I'm just going to say AWS typescript it'll ask you for a name program and",
    "start": "669570",
    "end": "676510"
  },
  {
    "text": "then it will ask you for a stack so by default it's just gonna say dev so",
    "start": "676510",
    "end": "682810"
  },
  {
    "text": "that's fine we're going to use ap self these two",
    "start": "682810",
    "end": "690190"
  },
  {
    "text": "which is Sydney and then it'll go off and install all the plumie modules for",
    "start": "690190",
    "end": "696610"
  },
  {
    "text": "you great so it's created a few things",
    "start": "696610",
    "end": "705010"
  },
  {
    "text": "you've got your index ts file so if we have a quick look at that this the",
    "start": "705010",
    "end": "711400"
  },
  {
    "text": "default template just creates an s3 bucket we can then go pull me stack",
    "start": "711400",
    "end": "720780"
  },
  {
    "text": "select and so you can see I have one stack",
    "start": "720780",
    "end": "728779"
  },
  {
    "text": "which is dev and then I could create a new stack which is prod and this is kind of how you manage your environments with",
    "start": "728779",
    "end": "735589"
  },
  {
    "text": "a project that's a quick rundown of projects and stacks so you'll end up",
    "start": "735589",
    "end": "742040"
  },
  {
    "text": "having quite a lot of stacks the plumie CLI is most of the time is",
    "start": "742040",
    "end": "750440"
  },
  {
    "start": "745000",
    "end": "931000"
  },
  {
    "text": "what you'll be interacting with but there's a bunch of stuff under the covers it has to be backed by some sort",
    "start": "750440",
    "end": "757190"
  },
  {
    "text": "of state because we're essentially infrastructure is code with desired state it needs to know what the current",
    "start": "757190",
    "end": "763160"
  },
  {
    "text": "state is in the cloud I've always wanted a little bit around okay why don't they",
    "start": "763160",
    "end": "769250"
  },
  {
    "text": "just query directly and why do you have an intermediary state store there's",
    "start": "769250",
    "end": "774709"
  },
  {
    "text": "actually a bunch of extra stuff that gets stored so and the API is don't",
    "start": "774709",
    "end": "779839"
  },
  {
    "text": "always allow you just attach random metadata to every type of resource and",
    "start": "779839",
    "end": "784910"
  },
  {
    "text": "some resources are also logical resources so they don't exist in the",
    "start": "784910",
    "end": "790370"
  },
  {
    "text": "cloud they kind of exist in your programming model that's the best I haven't seen anything that says",
    "start": "790370",
    "end": "797089"
  },
  {
    "text": "otherwise but that's my best guess on that if anyone else has theories let me know so your plumie state has to be",
    "start": "797089",
    "end": "804920"
  },
  {
    "text": "stored somewhere you can choose there's a number of them but the most common",
    "start": "804920",
    "end": "810949"
  },
  {
    "text": "three in s3 this is quite a common practice in in terraform but polluting",
    "start": "810949",
    "end": "817850"
  },
  {
    "text": "doesn't yet support locking in s3 like you can't use a dynamo table and support",
    "start": "817850",
    "end": "823730"
  },
  {
    "text": "locks so if you're using s3 be careful don't have people trying to run plumie up at the same time otherwise you'll",
    "start": "823730",
    "end": "830240"
  },
  {
    "text": "have a really bad time you have a plumie com so this is their managed service for",
    "start": "830240",
    "end": "837740"
  },
  {
    "text": "state management so it handles locking storing all your state and a whole bunch",
    "start": "837740",
    "end": "843199"
  },
  {
    "text": "of other things which I've dumped into a little bit later and you can also just use state on your local machine which",
    "start": "843199",
    "end": "849139"
  },
  {
    "text": "awesome for dev because it just drops it on your machine but if you lose your",
    "start": "849139",
    "end": "854569"
  },
  {
    "text": "state you're going to have a hard time there are implications for using plumies",
    "start": "854569",
    "end": "860960"
  },
  {
    "text": "managed service does cost I'll cover that in a minute so you get started log",
    "start": "860960",
    "end": "867500"
  },
  {
    "text": "in to one of these state stores you have to make a decision early and then all of",
    "start": "867500",
    "end": "873440"
  },
  {
    "text": "the state will be put in there there's some cool things with state as well bloom you've actually built tools that",
    "start": "873440",
    "end": "879770"
  },
  {
    "text": "allow you to import say terraform state into Polly me and they have a bunch of workaround interoperating with terraform",
    "start": "879770",
    "end": "887840"
  },
  {
    "text": "state so you can continue using terraform in your own projects and then if you want to create like one new",
    "start": "887840",
    "end": "895070"
  },
  {
    "text": "service off to the side using plumie it can actually query the state inside terraform and reference kind of your ir",
    "start": "895070",
    "end": "902600"
  },
  {
    "text": "ends and and get that infrastructure that was created by something else which is really cool so when you run plumie up",
    "start": "902600",
    "end": "910790"
  },
  {
    "text": "it will ask the state do i have some state for this project and stack as a",
    "start": "910790",
    "end": "917060"
  },
  {
    "text": "combination and then it'll say yes or no from there the engine can make it like",
    "start": "917060",
    "end": "923300"
  },
  {
    "text": "do all the dipping and figure out what needs to be created and then off it goes it creates all of the things I said I'll",
    "start": "923300",
    "end": "931760"
  },
  {
    "start": "931000",
    "end": "1059000"
  },
  {
    "text": "get back to plumie app blooming comm it's quite an interesting offering and",
    "start": "931760",
    "end": "937550"
  },
  {
    "text": "the way I kind of my mental model of it is it is a service the managing your",
    "start": "937550",
    "end": "943430"
  },
  {
    "text": "infrastructure so there's two sides are plumie there's the plumie sdk so this is",
    "start": "943430",
    "end": "949190"
  },
  {
    "text": "the engine this is all of the like SDKs around wrapping AWS and these various",
    "start": "949190",
    "end": "957020"
  },
  {
    "text": "services and then you have a plumie comm so you're open source your SDKs are all",
    "start": "957020",
    "end": "964970"
  },
  {
    "text": "open source they're going to be free forever and they are kind of the essence",
    "start": "964970",
    "end": "970370"
  },
  {
    "text": "of the info there the infrastructure as code there all the smarts and they make it all work it's free as long as you",
    "start": "970370",
    "end": "978850"
  },
  {
    "text": "don't use plumie comm in a team so there's free tiers it's free for",
    "start": "978850",
    "end": "984980"
  },
  {
    "text": "personal projects and if you want to use it for yourself it's fine but as soon as",
    "start": "984980",
    "end": "990500"
  },
  {
    "text": "you want to use it in a team you have to pay for it but it does come with some really really interesting features so audit history so",
    "start": "990500",
    "end": "1000070"
  },
  {
    "text": "you can see exactly what infrastructure changes have been made across during all your environments infrastructure",
    "start": "1000070",
    "end": "1005740"
  },
  {
    "text": "policies is really really cool so if you want to deprecate a version of node or make sure that all of your log rotation",
    "start": "1005740",
    "end": "1013240"
  },
  {
    "text": "settings have a certain like expiry time or any number of things you can actually",
    "start": "1013240",
    "end": "1021100"
  },
  {
    "text": "create these policies and then they'll be enforced across all of your plumie projects so you can deprecated usage of",
    "start": "1021100",
    "end": "1029079"
  },
  {
    "text": "something and then it will you verb to audit your entire infrastructure to see",
    "start": "1029079",
    "end": "1035170"
  },
  {
    "text": "what doesn't meet that policy and new infrastructure can't be created that",
    "start": "1035170",
    "end": "1040209"
  },
  {
    "text": "actually violates those policies so that's really handy the secrets management and also you can",
    "start": "1040209",
    "end": "1047260"
  },
  {
    "text": "see all of your projects and stacks in one spot gives you a nice dependency",
    "start": "1047260",
    "end": "1052810"
  },
  {
    "text": "graph and allows you to kind of work at your project level which is really handy",
    "start": "1052810",
    "end": "1059190"
  },
  {
    "start": "1059000",
    "end": "1496000"
  },
  {
    "text": "let's actually do some code because I've been talking for ages so we're going to build a static site generator this is",
    "start": "1059190",
    "end": "1070030"
  },
  {
    "text": "one of the things that's really interesting about plumie because we're using a laker programming language we",
    "start": "1070030",
    "end": "1076570"
  },
  {
    "text": "can start building abstractions and smarts into things and kind of use it a",
    "start": "1076570",
    "end": "1082390"
  },
  {
    "text": "lot of the things when we used to were like composing things together and we",
    "start": "1082390",
    "end": "1088030"
  },
  {
    "text": "can also infer a huge amount of stuff so here I want to create an s3 bucket that",
    "start": "1088030",
    "end": "1093580"
  },
  {
    "text": "also serves HTML files that's really easy to do I can create it just say I",
    "start": "1093580",
    "end": "1099190"
  },
  {
    "text": "want an s3 bucket these names can be anything they're not important they're kind of a logical name for each of these",
    "start": "1099190",
    "end": "1106060"
  },
  {
    "text": "resources and then I can say okay I want it to be a website my index document is",
    "start": "1106060",
    "end": "1111070"
  },
  {
    "text": "index dot HTML and I also just want to say if you plumie destroy it's okay to",
    "start": "1111070",
    "end": "1118000"
  },
  {
    "text": "destroy the bucket but where it gets really interesting is I can go bucket",
    "start": "1118000",
    "end": "1123940"
  },
  {
    "text": "dot on object Creek I'm going to which is a eventhandler",
    "start": "1123940",
    "end": "1129670"
  },
  {
    "text": "give it a name and then I'm going to give it a lambda function so in here",
    "start": "1129670",
    "end": "1136270"
  },
  {
    "text": "it's just an event handler written in JavaScript I can access the s3 event I",
    "start": "1136270",
    "end": "1142060"
  },
  {
    "text": "can require modules so I'm requiring a markdown parser I'm then using the aw",
    "start": "1142060",
    "end": "1150550"
  },
  {
    "text": "AWS SDK to connect to s3 then for every",
    "start": "1150550",
    "end": "1156070"
  },
  {
    "text": "record of that's being created in this event if it's a markdown file I'll go",
    "start": "1156070",
    "end": "1161830"
  },
  {
    "text": "grab the body of that markdown file I will transport like pause the markdown",
    "start": "1161830",
    "end": "1168460"
  },
  {
    "text": "into HTML and then I'll wrap it in an HTML body so I'm creating an HTML file",
    "start": "1168460",
    "end": "1174310"
  },
  {
    "text": "on the fly in an event handler and then I'm putting it back into s3 this is you",
    "start": "1174310",
    "end": "1182440"
  },
  {
    "text": "have to think about what it's trying to do here so what paluma will do is when i run plumie up it'll see that there's an",
    "start": "1182440",
    "end": "1187780"
  },
  {
    "text": "event handler it will extract that code make sure that any references to Pulu me",
    "start": "1187780",
    "end": "1194890"
  },
  {
    "text": "state so like the s3 bucket name becomes config it all then upload that zip file",
    "start": "1194890",
    "end": "1201310"
  },
  {
    "text": "create the lambda behind-the-scenes and so when the end of lambda executes it",
    "start": "1201310",
    "end": "1207340"
  },
  {
    "text": "will execute the code that we've written here it's kind of a mind-boggling thing",
    "start": "1207340",
    "end": "1212500"
  },
  {
    "text": "then now I've got my application code and my infrastructure code actually in",
    "start": "1212500",
    "end": "1217930"
  },
  {
    "text": "the same program you'd probably extract this out to",
    "start": "1217930",
    "end": "1223510"
  },
  {
    "text": "another module and just require it in here but yeah we can use normal",
    "start": "1223510",
    "end": "1230140"
  },
  {
    "text": "JavaScript modules and refactor things just as we'd want there's another thing I wanted to do was",
    "start": "1230140",
    "end": "1237340"
  },
  {
    "text": "be able to just have a CSS file and some random other files so I just go through",
    "start": "1237340",
    "end": "1244240"
  },
  {
    "text": "crawl the directories of the assets the files path and then recursively I will",
    "start": "1244240",
    "end": "1250720"
  },
  {
    "text": "put anything I find as an s3 bucket object",
    "start": "1250720",
    "end": "1256420"
  },
  {
    "text": "so we will create a stack",
    "start": "1256420",
    "end": "1261670"
  },
  {
    "text": "and we will plea me up",
    "start": "1267809",
    "end": "1273498"
  },
  {
    "text": "the stakes for long I forgot my step there we go so first thing you'll do is",
    "start": "1283650",
    "end": "1289350"
  },
  {
    "text": "tell you I'm missing config so I have to create tell it what region I want to set",
    "start": "1289350",
    "end": "1294720"
  },
  {
    "text": "that but this into so I'll plumie config set AWS region AP self east to and",
    "start": "1294720",
    "end": "1307230"
  },
  {
    "text": "you'll see as soon as I do that it will create me another yellow file can't get away from Yama irony it'll create me a",
    "start": "1307230",
    "end": "1316919"
  },
  {
    "text": "config file that this is where all of your application config will go so configures scopes so you can kind of",
    "start": "1316919",
    "end": "1323940"
  },
  {
    "text": "create namespaces on your config and the SDK kind of allows you to work with those namespaces pretty easily so that's",
    "start": "1323940",
    "end": "1333000"
  },
  {
    "text": "all there is to the config side of things so I'll plumie up again when we",
    "start": "1333000",
    "end": "1342960"
  },
  {
    "text": "run the larger demos we'll we won't wait so you can see it's actually creating a",
    "start": "1342960",
    "end": "1349289"
  },
  {
    "text": "fair amount of stuff here my s3 bucket and my lambda down here and",
    "start": "1349289",
    "end": "1356070"
  },
  {
    "text": "then it's also created the I am roles the policy attachment and the bucket",
    "start": "1356070",
    "end": "1361590"
  },
  {
    "text": "notifications to actually wire all this stuff together and it can infer that quite easily because I've just put the",
    "start": "1361590",
    "end": "1367830"
  },
  {
    "text": "event handler onto the bucket it knows that if the bucket raises an event it needs to execute the lambda and there's",
    "start": "1367830",
    "end": "1374490"
  },
  {
    "text": "a whole bunch of permissions and stuff that need to be set can do all that for you",
    "start": "1374490",
    "end": "1379940"
  },
  {
    "text": "the next really nice thing is once this will take a second second to to run but",
    "start": "1386590",
    "end": "1393800"
  },
  {
    "text": "if you want to make the bucket name and various different bits of output",
    "start": "1393800",
    "end": "1399490"
  },
  {
    "text": "available you can just export them using normal JavaScript exports so as soon as",
    "start": "1399490",
    "end": "1405500"
  },
  {
    "text": "it's you can see that's creating the bucket it's also uploaded my main dot",
    "start": "1405500",
    "end": "1410960"
  },
  {
    "text": "CSS into that bucket and what's really cool is in here it knows that I'm",
    "start": "1410960",
    "end": "1419480"
  },
  {
    "text": "creating the bucket object in this bucket so it'll take care of creating its own dependency graph and making sure",
    "start": "1419480",
    "end": "1425510"
  },
  {
    "text": "that things are created in the right order so you can see this is my public",
    "start": "1425510",
    "end": "1434630"
  },
  {
    "text": "URL for my bucket and if I go over to Firefox 404 makes sense it's on my AWS",
    "start": "1434630",
    "end": "1445070"
  },
  {
    "text": "console I'm gonna go to s 3 and you can see that my bucket was 275 one two",
    "start": "1445070",
    "end": "1452800"
  },
  {
    "text": "this one I just upload a file upload",
    "start": "1452800",
    "end": "1461660"
  },
  {
    "text": "index dot markdown MD it's there I was",
    "start": "1461660",
    "end": "1466880"
  },
  {
    "text": "wait a second refresh a couple of times and my HTML file appears whoa i refresh",
    "start": "1466880",
    "end": "1475850"
  },
  {
    "text": "again there is my markdown file that has been turned into so that's the knockdown",
    "start": "1475850",
    "end": "1483020"
  },
  {
    "text": "file that i just uploaded and this is the HTML file that got generated served",
    "start": "1483020",
    "end": "1490010"
  },
  {
    "text": "out of s3 it's quite a few moving parts there but i reckon that's kind of your your iconic plumie demo of all of these",
    "start": "1490010",
    "end": "1498470"
  },
  {
    "start": "1496000",
    "end": "1606000"
  },
  {
    "text": "the advantages I suppose of writing your infrastructure in a programming language",
    "start": "1498470",
    "end": "1504610"
  },
  {
    "text": "it's ok but so what actually happened so",
    "start": "1504610",
    "end": "1513590"
  },
  {
    "text": "we created an s3 bucket and a lambda we uploaded us",
    "start": "1513590",
    "end": "1518990"
  },
  {
    "text": "ESS file which has managed so if I make changes to that it'll update it it'll if",
    "start": "1518990",
    "end": "1524840"
  },
  {
    "text": "I delete that file it'll get removed from s3 so that files folder is now",
    "start": "1524840",
    "end": "1529850"
  },
  {
    "text": "managed by plumie everything I create in there will end up in that s3 bucket its",
    "start": "1529850",
    "end": "1535279"
  },
  {
    "text": "created as a subscription and it'll and all the permissions and everything to be",
    "start": "1535279",
    "end": "1540320"
  },
  {
    "text": "able to execute that lambda it also set up the permissions so the s3 or the",
    "start": "1540320",
    "end": "1545960"
  },
  {
    "text": "lambda can write files back into s3 and then whenever I upload and markdown file",
    "start": "1545960",
    "end": "1552440"
  },
  {
    "text": "it'll pretty much run that ish code if it's markdown file grab it change it",
    "start": "1552440",
    "end": "1558380"
  },
  {
    "text": "put it back pretty nifty and then I can export values for later referencing it's",
    "start": "1558380",
    "end": "1566870"
  },
  {
    "text": "okay but this is kind of a happy like demo where I I've been working in West",
    "start": "1566870",
    "end": "1573350"
  },
  {
    "text": "now for three years and we have a lot of infrastructure a lot of legacy and so I really wanted to try and figure out okay",
    "start": "1573350",
    "end": "1580130"
  },
  {
    "text": "completely do better for us than what we currently have so we are going to dive",
    "start": "1580130",
    "end": "1586130"
  },
  {
    "text": "in and actually go a little bit deeper so these are the three websites my team builds we build 7news comdata you the",
    "start": "1586130",
    "end": "1592880"
  },
  {
    "text": "west and perth now so we are they're quite large sites have a lot of traffic",
    "start": "1592880",
    "end": "1599679"
  },
  {
    "text": "but infrastructure hasn't really changed the way we host them for about three",
    "start": "1599679",
    "end": "1605029"
  },
  {
    "text": "years really want to change that us get repo structure is something on these",
    "start": "1605029",
    "end": "1610669"
  },
  {
    "start": "1606000",
    "end": "1666000"
  },
  {
    "text": "lines we have a bunch of application repositories and we have some infrastructure repositories they're",
    "start": "1610669",
    "end": "1616100"
  },
  {
    "text": "managed by what we sit next to and collaborate with our ops team all the time most of the dev team don't get",
    "start": "1616100",
    "end": "1623510"
  },
  {
    "text": "involved and don't actually write terraform and and touch anything in these infrastructure repositories so you",
    "start": "1623510",
    "end": "1629720"
  },
  {
    "text": "have one which has all the terraform and then because we're using ec2 it's managed by puppet and all of our",
    "start": "1629720",
    "end": "1636020"
  },
  {
    "text": "configuration kind of lives inside puppet it's quite a traditional model we then have it three main repos we have",
    "start": "1636020",
    "end": "1642590"
  },
  {
    "text": "the web repo and so that has the code base of a big shed component library and",
    "start": "1642590",
    "end": "1648649"
  },
  {
    "text": "then a code base for each of the websites and then we have API repo and then we have a Content",
    "start": "1648649",
    "end": "1655370"
  },
  {
    "text": "aggregator repo so that kind of looks at all of these different news feeds our CMS and broadcasts events that are",
    "start": "1655370",
    "end": "1663080"
  },
  {
    "text": "different api's then store in their database so I've got a couple of goals these are the things I want to do I want",
    "start": "1663080",
    "end": "1669740"
  },
  {
    "start": "1666000",
    "end": "1742000"
  },
  {
    "text": "the dev team maintaining the infrastructure I want to work with our ops team make sure that everything's",
    "start": "1669740",
    "end": "1675260"
  },
  {
    "text": "monitored well that it's architected the way that they they kind of input to that but I really want the dev team to be",
    "start": "1675260",
    "end": "1681950"
  },
  {
    "text": "able to evolve the architecture and also just make improvements and save costs in",
    "start": "1681950",
    "end": "1688820"
  },
  {
    "text": "the infrastructure I really wanted co-located with the code because at the",
    "start": "1688820",
    "end": "1693919"
  },
  {
    "text": "moment our infrastructure is kind of out of sight out of mind and that's why a lot of the dev tape done don't work on",
    "start": "1693919",
    "end": "1700100"
  },
  {
    "text": "it because it's not there it's not front of mine wanted to reduce costs but the",
    "start": "1700100",
    "end": "1705679"
  },
  {
    "text": "biggest thing that I really really want is I wanted to enable an architecture that we can get Bluegreen deployment",
    "start": "1705679",
    "end": "1711230"
  },
  {
    "text": "it's quite hard to do that with easy to because it's just quite heavy and slow",
    "start": "1711230",
    "end": "1716380"
  },
  {
    "text": "roughly what our websites deployment structure kind of looks like is we have",
    "start": "1716380",
    "end": "1721760"
  },
  {
    "text": "a stack for each website each website has its own database its own api's and",
    "start": "1721760",
    "end": "1727100"
  },
  {
    "text": "then we have one aggregator and some messages flowing through so this is kind of what we're working with and this is",
    "start": "1727100",
    "end": "1732890"
  },
  {
    "text": "what this is a pretty typical application architecture I'd imagine you've got a website you've got an API",
    "start": "1732890",
    "end": "1738950"
  },
  {
    "text": "it's backed by a database so let's",
    "start": "1738950",
    "end": "1744260"
  },
  {
    "text": "rethink this what what could we do instead of instead of all of those things being stored on like ec2",
    "start": "1744260",
    "end": "1750650"
  },
  {
    "text": "instances I want to use two technologies I want to use Fargate which is",
    "start": "1750650",
    "end": "1755870"
  },
  {
    "text": "essentially docker as a service you can write a docker file and then you build",
    "start": "1755870",
    "end": "1761059"
  },
  {
    "text": "the image you put it up in a doctor repository at AWS and then you can say",
    "start": "1761059",
    "end": "1768350"
  },
  {
    "text": "hey Fargate run this container and you don't have to worry about provisioning",
    "start": "1768350",
    "end": "1773480"
  },
  {
    "text": "the compute behind it you just get charged for how long it's running they also have ECS which do you",
    "start": "1773480",
    "end": "1780650"
  },
  {
    "text": "manage all the compute yourself but this is kind of the closest thing I think",
    "start": "1780650",
    "end": "1786020"
  },
  {
    "text": "ws has to app services in Azure so that's what I want I want to be able to",
    "start": "1786020",
    "end": "1791990"
  },
  {
    "text": "just create all of these containers and just say hey Fargate run them it also",
    "start": "1791990",
    "end": "1797060"
  },
  {
    "text": "opens up some really interesting capabilities for all of our front-end",
    "start": "1797060",
    "end": "1802070"
  },
  {
    "text": "code whenever we put up a pull request we build a docker image and deploy it",
    "start": "1802070",
    "end": "1808220"
  },
  {
    "text": "and post leaks so we can actually test the full running website for each of",
    "start": "1808220",
    "end": "1813380"
  },
  {
    "text": "those for every single pull request what we don't have is that for our back ends",
    "start": "1813380",
    "end": "1821210"
  },
  {
    "text": "and our kind of api's would be really really good so hopefully this architecture will allow us to solve that problem and then",
    "start": "1821210",
    "end": "1827840"
  },
  {
    "text": "I wanted to play around with Aurora which is there that kind of managed",
    "start": "1827840",
    "end": "1832900"
  },
  {
    "text": "compatibility compatible RDS with Postgres and my sequel but it can scale",
    "start": "1832900",
    "end": "1839300"
  },
  {
    "text": "out horizontally rather than vertically so your traditional RDS is like Postgres is my sequel they don't support",
    "start": "1839300",
    "end": "1847070"
  },
  {
    "text": "clustering and farming out work on all of these different instances without a fair bit of work they're just they're",
    "start": "1847070",
    "end": "1853700"
  },
  {
    "text": "not architected in that way rawrr is if we going back to sort of plumie concepts",
    "start": "1853700",
    "end": "1860240"
  },
  {
    "text": "this is the way I don't visit it over on the right I'd have a content platform",
    "start": "1860240",
    "end": "1865460"
  },
  {
    "text": "shared so that would be my shared infrastructure my Aurora cluster and my Fargate cluster I can then deploy",
    "start": "1865460",
    "end": "1872600"
  },
  {
    "text": "multiple instances of the web and content api's into that shared",
    "start": "1872600",
    "end": "1877730"
  },
  {
    "text": "infrastructure and then I would deploy one content aggregator there's also a",
    "start": "1877730",
    "end": "1883670"
  },
  {
    "text": "bunch of other things like load balancers queues permissions whole bunch",
    "start": "1883670",
    "end": "1889370"
  },
  {
    "text": "of extra stuff but we are going to focus on a subset of that and then in terms of",
    "start": "1889370",
    "end": "1897140"
  },
  {
    "text": "those of my projects my stacks would be something like this so I have a prod and devstack for the shared stuff but I",
    "start": "1897140",
    "end": "1903590"
  },
  {
    "text": "would have a stack for each masthead in each environment for the websites we're",
    "start": "1903590",
    "end": "1909890"
  },
  {
    "text": "going to pare it down a little bit will this do the content API is the database and the the shared infrastructure",
    "start": "1909890",
    "end": "1918750"
  },
  {
    "text": "so content platform shared what does that look like so we have in here my",
    "start": "1918750",
    "end": "1931260"
  },
  {
    "start": "1919000",
    "end": "2261000"
  },
  {
    "text": "shared infrastructure we're going to start diving in and so if anyone has any",
    "start": "1931260",
    "end": "1938220"
  },
  {
    "text": "questions I'm just going to be going through a lot of this code explaining quite a few concepts and then we'll do a",
    "start": "1938220",
    "end": "1943799"
  },
  {
    "text": "bit of a recap after so if there's something that doesn't make sense please just throw up your head we've seen this",
    "start": "1943799",
    "end": "1950820"
  },
  {
    "text": "before we can new up a resource what might be confusing initially is you've",
    "start": "1950820",
    "end": "1956970"
  },
  {
    "text": "got two namespaces you've got AWS an AWS X so bloomin has this concept of what",
    "start": "1956970",
    "end": "1963780"
  },
  {
    "text": "they call crosswalk and it's a kind of batteries included infrastructure as",
    "start": "1963780",
    "end": "1969929"
  },
  {
    "text": "code so here I can go AWS X ecs cluster",
    "start": "1969929",
    "end": "1976049"
  },
  {
    "text": "or I can your AWS dot c CS dot cluster",
    "start": "1976049",
    "end": "1981120"
  },
  {
    "text": "look it's typescript I can intellisense it's amazing so I can also do up a cluster out of the",
    "start": "1981120",
    "end": "1988559"
  },
  {
    "text": "normal SDK the difference is that when I new up the AWS X it has a bunch of",
    "start": "1988559",
    "end": "1995909"
  },
  {
    "text": "sensible defaults so it will create a V PC which is a like network private",
    "start": "1995909",
    "end": "2001730"
  },
  {
    "text": "network for all of our services it will create a V PC for my stack it will then",
    "start": "2001730",
    "end": "2007159"
  },
  {
    "text": "make sure it's all associated it will create a bunch of default subnets and security groups and stuff that when",
    "start": "2007159",
    "end": "2013669"
  },
  {
    "text": "you're first getting into AWS it's just this so much to learn and what are the best practices plumie cross what kind of",
    "start": "2013669",
    "end": "2019700"
  },
  {
    "text": "takes all of that away so you can just say I want a new cluster and it will do reasonably sensible things you can see",
    "start": "2019700",
    "end": "2027980"
  },
  {
    "text": "here I have I can ask for my security group so these are the security groups it's created I can also create a subnet",
    "start": "2027980",
    "end": "2035150"
  },
  {
    "text": "group which has all of the public subnets and this is important because",
    "start": "2035150",
    "end": "2041450"
  },
  {
    "text": "when I start my Fargate containers later I want them to be on the same network so",
    "start": "2041450",
    "end": "2047809"
  },
  {
    "text": "everything can talk to each other with the database can just new up and IDs cluster notice it's from AWS not AWS",
    "start": "2047809",
    "end": "2055868"
  },
  {
    "text": "X that up for everyone I can specify the",
    "start": "2055869",
    "end": "2061839"
  },
  {
    "text": "engine and a whole bunch of stuff obviously don't do that like I have but",
    "start": "2061839",
    "end": "2067540"
  },
  {
    "text": "it's enough it's not public so that doesn't really matter and there's a",
    "start": "2067540",
    "end": "2072819"
  },
  {
    "text": "whole bunch of other stuff you've got all of these things you can configure play around with it my cluster my Aurora",
    "start": "2072819",
    "end": "2081398"
  },
  {
    "text": "cluster needs to be backed by an instance so I can actually run my compute and then finally I can export",
    "start": "2081399",
    "end": "2089618"
  },
  {
    "text": "the Fargate cluster name the VP CID bunch of security group IDs and the",
    "start": "2089619",
    "end": "2095950"
  },
  {
    "text": "database provider ID so these are all kind of references to the infrastructure that's created you'll notice here that",
    "start": "2095950",
    "end": "2103990"
  },
  {
    "text": "there is plumie output this is um this is something that is a really really",
    "start": "2103990",
    "end": "2110319"
  },
  {
    "text": "important concept because you're dealing with futures like this at the time you're writing the program that variable",
    "start": "2110319",
    "end": "2117190"
  },
  {
    "text": "doesn't exist there is no idea until I've done my deployment and that infrastructure has been created so this",
    "start": "2117190",
    "end": "2124299"
  },
  {
    "text": "output type allows you to work with variables that have no value yet so if",
    "start": "2124299",
    "end": "2132760"
  },
  {
    "text": "we go ahead and do the normal plumie",
    "start": "2132760",
    "end": "2138329"
  },
  {
    "text": "stack select oops and then shared",
    "start": "2138329",
    "end": "2149790"
  },
  {
    "text": "I've got a full back one just in case things go horribly so create a demo",
    "start": "2152300",
    "end": "2158340"
  },
  {
    "text": "stack I will play me config set AWS region as AP Southeast to iMac same type",
    "start": "2158340",
    "end": "2169410"
  },
  {
    "text": "of every single time and then I will plumie up my shared infrastructure once",
    "start": "2169410",
    "end": "2180750"
  },
  {
    "text": "again its typescript if I make mistakes typos bloom you will actually compile this and give me type errors",
    "start": "2180750",
    "end": "2189410"
  },
  {
    "text": "it's just doing the plan I won't make you sit through the actual deploy so you",
    "start": "2193960",
    "end": "2200150"
  },
  {
    "text": "can see it's actually created a whole bunch of stuff so it's created ingress egress security groups and roles it's",
    "start": "2200150",
    "end": "2209390"
  },
  {
    "text": "created at fault B PC and it's created public subnet for it so I'm going to go",
    "start": "2209390",
    "end": "2215150"
  },
  {
    "text": "ahead and create this and we will jump back here for a moment so we talked",
    "start": "2215150",
    "end": "2223820"
  },
  {
    "text": "about pulling me crosswalk that's the AWS X namespace so you know up the cluster and it creates a bunch of like",
    "start": "2223820",
    "end": "2231800"
  },
  {
    "text": "ECS cluster V PC security groups that sort of thing so very very useful for I",
    "start": "2231800",
    "end": "2237320"
  },
  {
    "text": "just want sensible defaults I don't really care and then you can if you want",
    "start": "2237320",
    "end": "2242990"
  },
  {
    "text": "you can create your own V PC and say use this V PC and kind of override all of those defaults if you would like and",
    "start": "2242990",
    "end": "2249050"
  },
  {
    "text": "then you've got plumie AWS so they've got a number of cloud SDKs and this allows you to just new up resources so",
    "start": "2249050",
    "end": "2256460"
  },
  {
    "text": "lower level you can choose what level of abstraction you want to work with so the",
    "start": "2256460",
    "end": "2262250"
  },
  {
    "start": "2261000",
    "end": "2474000"
  },
  {
    "text": "next thing we're going to do is create the content API s and there's immediately a problem I've created some",
    "start": "2262250",
    "end": "2269390"
  },
  {
    "text": "shared infrastructure how do I use that in my other project it has a really cool",
    "start": "2269390",
    "end": "2276980"
  },
  {
    "text": "concept just called stack references so you can just new up a stack reference give it a path to the project and the",
    "start": "2276980",
    "end": "2284300"
  },
  {
    "text": "stack that you want to reference and then it will allow you to export access",
    "start": "2284300",
    "end": "2290420"
  },
  {
    "text": "any exported variables so that kind of solves our first problem we can access",
    "start": "2290420",
    "end": "2296300"
  },
  {
    "text": "and just get the IDS of any infrastructure that was created in another project and it will actually go",
    "start": "2296300",
    "end": "2302540"
  },
  {
    "text": "and query the plumie state that's why we need a shared state store that has the",
    "start": "2302540",
    "end": "2307609"
  },
  {
    "text": "all of the state for all projects and stacks the next one which is my favorite",
    "start": "2307609",
    "end": "2315470"
  },
  {
    "text": "one because it's a pain and it's really difficult to get right is database migrations and this is annoyingly not",
    "start": "2315470",
    "end": "2322310"
  },
  {
    "text": "talked about anywhere because I think it's quite hard most people and the way we're solving it",
    "start": "2322310",
    "end": "2329420"
  },
  {
    "text": "now is it's an out-of-band process so whenever we create a new environment we",
    "start": "2329420",
    "end": "2334430"
  },
  {
    "text": "go in create the database and then in our deployment step we have rules so we",
    "start": "2334430",
    "end": "2339980"
  },
  {
    "text": "can connect to like the build server can connect to our database and then our build server runs our database",
    "start": "2339980",
    "end": "2346340"
  },
  {
    "text": "migrations and then it does all the deployments I wanted to sort of spin the",
    "start": "2346340",
    "end": "2352430"
  },
  {
    "text": "tires on plumie a little bit and move our database migrations and also the creation of the database itself into",
    "start": "2352430",
    "end": "2359720"
  },
  {
    "text": "pluming that's been my my main task there's a couple of problems so I don't",
    "start": "2359720",
    "end": "2366110"
  },
  {
    "text": "want to connect I don't want to make my database public so that's what most of",
    "start": "2366110",
    "end": "2371930"
  },
  {
    "text": "the terraform modules they just connect to the database and then they can create it I don't want to do that I don't want",
    "start": "2371930",
    "end": "2377900"
  },
  {
    "text": "my machine to be connecting to the database and running it I want something else to run it and also I'd like it to be",
    "start": "2377900",
    "end": "2384770"
  },
  {
    "text": "cleaned up if I pass a flag to say yep it's all good to delete the database",
    "start": "2384770",
    "end": "2390320"
  },
  {
    "text": "after I want to be able to opt-in to allow it to clean the database up so this is super easy to manage the",
    "start": "2390320",
    "end": "2397430"
  },
  {
    "text": "database cluster but creating it a multi-tenant database with multiple in",
    "start": "2397430",
    "end": "2402800"
  },
  {
    "text": "it is really really annoying so my solution to this is Fargate tasks so I",
    "start": "2402800",
    "end": "2408080"
  },
  {
    "text": "can have services in Fargate where it starts up the container and they keep running but you can also just tell",
    "start": "2408080",
    "end": "2413750"
  },
  {
    "text": "Fargate to run a container it will run and then exit so it kind of allows me to",
    "start": "2413750",
    "end": "2419120"
  },
  {
    "text": "just execute arbitrary commands in the cloud which is kind of nifty it also",
    "start": "2419120",
    "end": "2426500"
  },
  {
    "text": "runs inside the network that is created inside AWS so I don't have to open up my",
    "start": "2426500",
    "end": "2433040"
  },
  {
    "text": "database to the public and I get kind of I am so I don't need to use username and",
    "start": "2433040",
    "end": "2438410"
  },
  {
    "text": "passwords I can use inbuilt authentication and a bunch of other stuff what would that actually look like",
    "start": "2438410",
    "end": "2445960"
  },
  {
    "text": "so my solution to this was I created a few tasks definitions inside they're",
    "start": "2445960",
    "end": "2451400"
  },
  {
    "text": "basically just docker containers or docker images that aren't running so I",
    "start": "2451400",
    "end": "2456560"
  },
  {
    "text": "can create tasks DB tasks definition a drop database tasks definition and a migrated",
    "start": "2456560",
    "end": "2462790"
  },
  {
    "text": "database task definition that's all good easy to do in plumie what about running",
    "start": "2462790",
    "end": "2470300"
  },
  {
    "text": "it this is the bit that is a pain in the ass so no way luckily being a",
    "start": "2470300",
    "end": "2477710"
  },
  {
    "start": "2474000",
    "end": "2534000"
  },
  {
    "text": "programming language there are some really cool things we can start doing bloomie solution to like get out of jail",
    "start": "2477710",
    "end": "2485420"
  },
  {
    "text": "free whatever the scape hatch kind of thing is something called a dynamic",
    "start": "2485420",
    "end": "2491510"
  },
  {
    "text": "resource so that allows me to wrap api's it allows you to implement your create",
    "start": "2491510",
    "end": "2497750"
  },
  {
    "text": "your update delete your diff and check functions so you essentially can program",
    "start": "2497750",
    "end": "2503630"
  },
  {
    "text": "a resource that just has arbitrary kind of crud based api's there's some cool",
    "start": "2503630",
    "end": "2511490"
  },
  {
    "text": "examples around like managing github labels if you run open source projects and you want them all to have the same",
    "start": "2511490",
    "end": "2517190"
  },
  {
    "text": "labels you could actually put manage your your github labels inside plumie",
    "start": "2517190",
    "end": "2522410"
  },
  {
    "text": "create a dynamic resource that creates and updates those labels inside github",
    "start": "2522410",
    "end": "2527470"
  },
  {
    "text": "also creating and deleting web hooks or just wrapping the AWS sdk which is what",
    "start": "2527470",
    "end": "2533599"
  },
  {
    "text": "we're going to do so pulling it all together we have Fargate when I create",
    "start": "2533599",
    "end": "2541700"
  },
  {
    "start": "2534000",
    "end": "2594000"
  },
  {
    "text": "my task definitions this is what we've kind of seen and then it runs the create DB task waits for it to exit it'll then",
    "start": "2541700",
    "end": "2550849"
  },
  {
    "text": "run the migrated DB task I'll show you how we can kind of define relationships in a sec and then and then once it's",
    "start": "2550849",
    "end": "2560720"
  },
  {
    "text": "complete we'll run the task we can then if we're doing plumie up it will just",
    "start": "2560720",
    "end": "2566930"
  },
  {
    "text": "run them again so create DB again so idempotent database exists won't do",
    "start": "2566930",
    "end": "2572150"
  },
  {
    "text": "anything once that's done it'll run their database migrations again and then destroy the opposite because we it knows",
    "start": "2572150",
    "end": "2580250"
  },
  {
    "text": "that the run task relies on the task definition it'll be cleaned up before or will",
    "start": "2580250",
    "end": "2586460"
  },
  {
    "text": "execute the task before we delete the task so it's kind of a whole bunch of",
    "start": "2586460",
    "end": "2591710"
  },
  {
    "text": "stuff so let's have a look at that cool before we do I'm just going to",
    "start": "2591710",
    "end": "2604160"
  },
  {
    "start": "2594000",
    "end": "2679000"
  },
  {
    "text": "show you what plumie comm gives us so I've jumped in it gives us a nice",
    "start": "2604160",
    "end": "2609890"
  },
  {
    "text": "deployment notification and all of the things that were created I can have a",
    "start": "2609890",
    "end": "2615170"
  },
  {
    "text": "look at all the resources that it's managing and I can jump straight out to that resource in AWS console and it also",
    "start": "2615170",
    "end": "2622550"
  },
  {
    "text": "gives us kind of a graph of all of the different things it's created so this is Polly McComb gives you kind of that",
    "start": "2622550",
    "end": "2628700"
  },
  {
    "text": "abstraction over the top and you can also see here are the outputs that it has given me what we're going to do is",
    "start": "2628700",
    "end": "2637910"
  },
  {
    "text": "and you can see this is the what we created earlier it went and successfully did it so I'm",
    "start": "2637910",
    "end": "2644840"
  },
  {
    "text": "gonna kick off app while we're talking",
    "start": "2644840",
    "end": "2653590"
  },
  {
    "text": "region my pace of East too and then",
    "start": "2667250",
    "end": "2675540"
  },
  {
    "text": "we'll play me up okay let's have a look at our app we'll get to this in a sec so",
    "start": "2675540",
    "end": "2685980"
  },
  {
    "start": "2679000",
    "end": "2838000"
  },
  {
    "text": "the first thing you'll notice is I can say lemme get stack and that will actually just return me whatever my",
    "start": "2685980",
    "end": "2691410"
  },
  {
    "text": "current stack so because I'm running my currently selected stack is demo the value of n will be demo this allows me",
    "start": "2691410",
    "end": "2700320"
  },
  {
    "text": "to access the config of my project if I was to have custom config I could let",
    "start": "2700320",
    "end": "2708150"
  },
  {
    "text": "that go because that takes a little while and then we can see the stack reference so I'm we talked about",
    "start": "2708150",
    "end": "2714840"
  },
  {
    "text": "organizations earlier and by default it is me so I am the organization you then",
    "start": "2714840",
    "end": "2721080"
  },
  {
    "text": "can just specify the project name so back over in the shared project we have the name of this project so I can",
    "start": "2721080",
    "end": "2728940"
  },
  {
    "text": "specify the project name and then I can go slash the stack name so here I want",
    "start": "2728940",
    "end": "2735270"
  },
  {
    "text": "to get the config value of shared stack name so this will allow me to okay my",
    "start": "2735270",
    "end": "2741900"
  },
  {
    "text": "shared is called dev but my app is called dev - perf now I want to be able",
    "start": "2741900",
    "end": "2748470"
  },
  {
    "text": "to specify that we've got the same stack name so we're just going to default to that right now for the demo we can then",
    "start": "2748470",
    "end": "2756480"
  },
  {
    "text": "say I require this output variable from my other stack so I'm getting the Fargate cluster name and the database",
    "start": "2756480",
    "end": "2763170"
  },
  {
    "text": "provider ID it also has static functions on all of",
    "start": "2763170",
    "end": "2768900"
  },
  {
    "text": "these AWS and and different cloud resources to get an existing resource so this is how you can get a full plumie",
    "start": "2768900",
    "end": "2775890"
  },
  {
    "text": "object with all the api's and functions and all that sort of stuff without having plumie access it there's also",
    "start": "2775890",
    "end": "2782700"
  },
  {
    "text": "really handy for if you want to reference existing infrastructure that's",
    "start": "2782700",
    "end": "2788130"
  },
  {
    "text": "not managed by plumbing you can just put the air ends in here and then off you go so I'm gonna create my cluster you'll",
    "start": "2788130",
    "end": "2796410"
  },
  {
    "text": "notice that I'm overriding the cluster which is the underlying resource crosswalk and then the normal one and",
    "start": "2796410",
    "end": "2805339"
  },
  {
    "text": "then I get to my content API database so this is a custom thing I've built it",
    "start": "2805339",
    "end": "2812430"
  },
  {
    "text": "requires me to pass in my Aurora instance the cluster specify a database name my database name is just going to",
    "start": "2812430",
    "end": "2819180"
  },
  {
    "text": "be the stack so we demo I need to specify the master password because it",
    "start": "2819180",
    "end": "2824520"
  },
  {
    "text": "won't come across and then I can specify an config an able drop and recreate this",
    "start": "2824520",
    "end": "2831630"
  },
  {
    "text": "kind of allows me to choose to be able to clean up the database have a quick look at that this is another new concept",
    "start": "2831630",
    "end": "2841160"
  },
  {
    "start": "2838000",
    "end": "3149000"
  },
  {
    "text": "component resource because we're in a programming language I want to just",
    "start": "2841160",
    "end": "2846270"
  },
  {
    "text": "compose a number of resources together and make a new logical resource that's",
    "start": "2846270",
    "end": "2852000"
  },
  {
    "text": "what component resources are so in your constructor I can new up other things so",
    "start": "2852000",
    "end": "2859410"
  },
  {
    "text": "far gate task definition for instance and then I can just say the parent of that is this object and now you get the",
    "start": "2859410",
    "end": "2868940"
  },
  {
    "text": "content API database as a resource with a whole bunch of sub resources under it",
    "start": "2868940",
    "end": "2875569"
  },
  {
    "text": "we were talking about the output variables earlier you'll notice here I'm",
    "start": "2875569",
    "end": "2881730"
  },
  {
    "text": "doing this weird Pulu me all and passing an array of things in you can't just",
    "start": "2881730",
    "end": "2888150"
  },
  {
    "text": "interpolate something that doesn't exist so I want to build a connection string here but at the point of like the first",
    "start": "2888150",
    "end": "2898529"
  },
  {
    "text": "time I run I don't have a database name to put in the connection string I don't have an end point so this paluma dot up",
    "start": "2898529",
    "end": "2905160"
  },
  {
    "text": "all and a plumie dot apply allows you to pass in output variables and then create",
    "start": "2905160",
    "end": "2911730"
  },
  {
    "text": "a new output variable when it's available so this allows me to take in",
    "start": "2911730",
    "end": "2916950"
  },
  {
    "text": "master username master password and the endpoint and then apply merge them",
    "start": "2916950",
    "end": "2922020"
  },
  {
    "text": "together create a connection string we've got nice inbuilt support for",
    "start": "2922020",
    "end": "2927690"
  },
  {
    "text": "containers so I can actually just say AWS ECS image from path and give it a",
    "start": "2927690",
    "end": "2933599"
  },
  {
    "text": "path and that will find the dockerfile build the dockerfile upload it into ECR and make that",
    "start": "2933599",
    "end": "2941930"
  },
  {
    "text": "container available for other parts of my services which is the Fargate task",
    "start": "2941930",
    "end": "2947420"
  },
  {
    "text": "definition which i can just specify the image that i want this task to run and then overriding the command so I'm gonna",
    "start": "2947420",
    "end": "2954140"
  },
  {
    "text": "call my little database migrator passing in a create database function drop",
    "start": "2954140",
    "end": "2962059"
  },
  {
    "text": "database is the same and now this is a this is how i've decided i'm going to",
    "start": "2962059",
    "end": "2969680"
  },
  {
    "text": "create the database I'm creating a new Fargate task and passing in a task",
    "start": "2969680",
    "end": "2975319"
  },
  {
    "text": "definition and a cluster to run it on but what's also really cool is I can specify depends on and you can just say",
    "start": "2975319",
    "end": "2983030"
  },
  {
    "text": "this resource depends on another one and now plumie will make sure it doesn't create this one before the other ones",
    "start": "2983030",
    "end": "2989180"
  },
  {
    "text": "created I can't run my database migrations until I have a database that's kind of problem so let's have a",
    "start": "2989180",
    "end": "2996680"
  },
  {
    "text": "look at this far gate task so this is this dynamic resource I was talking",
    "start": "2996680",
    "end": "3001750"
  },
  {
    "text": "about earlier it allows me to in the",
    "start": "3001750",
    "end": "3007180"
  },
  {
    "text": "constructor do a bunch of passing around the config but all of this is just",
    "start": "3007180",
    "end": "3012970"
  },
  {
    "text": "config what's really interesting is this resource provider so if I go into my",
    "start": "3012970",
    "end": "3018490"
  },
  {
    "text": "resource provider this is what actually allows me to implement my own resources",
    "start": "3018490",
    "end": "3024490"
  },
  {
    "text": "so what I've done is create function and I just call run Fargate task what run",
    "start": "3024490",
    "end": "3031480"
  },
  {
    "text": "Fargate task does is it uses the AWS SDK so I've stepped away from plumie I'm now",
    "start": "3031480",
    "end": "3038319"
  },
  {
    "text": "just using the raw node AWS SDK and I say run this task I then have a whole",
    "start": "3038319",
    "end": "3047349"
  },
  {
    "text": "bunch of error checking because you can run multiple tasks and whatnot but then I can say ECS wait for this task to",
    "start": "3047349",
    "end": "3055480"
  },
  {
    "text": "enter a stopped state and it'll sit there polling until that container exits",
    "start": "3055480",
    "end": "3060809"
  },
  {
    "text": "and then I can return the exit code and make decisions with that so now I can",
    "start": "3060809",
    "end": "3066309"
  },
  {
    "text": "just run arbitrary contain in the cloud which is kind of nifty I've",
    "start": "3066309",
    "end": "3071320"
  },
  {
    "text": "got update does exactly the same thing I expect them to be idempotent but I can also do a delete as well and the final",
    "start": "3071320",
    "end": "3080440"
  },
  {
    "text": "bit of the puzzle is it you can implement a diff function and this allows you to actually diff the old",
    "start": "3080440",
    "end": "3086170"
  },
  {
    "text": "state and the new state and tell the Lummi that there are changes or not so I",
    "start": "3086170",
    "end": "3091570"
  },
  {
    "text": "am saying yes there's changes and it will run this every time",
    "start": "3091570",
    "end": "3096630"
  },
  {
    "text": "that's my content API database and the the database migrations is exactly the",
    "start": "3097800",
    "end": "3105700"
  },
  {
    "text": "same the only difference is it also depends on the create database tasks so",
    "start": "3105700",
    "end": "3113170"
  },
  {
    "text": "this is all succeeded now and it's created a whole bunch of stuff but I",
    "start": "3113170",
    "end": "3122920"
  },
  {
    "text": "have an API endpoint that it's is my output variable grab that in a second",
    "start": "3122920",
    "end": "3130230"
  },
  {
    "text": "then finally I'll go back to my app and I want to create a elastic load balancer",
    "start": "3130230",
    "end": "3136420"
  },
  {
    "text": "with it that that's the publicly accessible endpoint which we've just",
    "start": "3136420",
    "end": "3142120"
  },
  {
    "text": "outputted and I also wanted to run a far gate service which is actually a container that continues running so if",
    "start": "3142120",
    "end": "3151420"
  },
  {
    "start": "3149000",
    "end": "3297000"
  },
  {
    "text": "we jump back to postman we've got a we",
    "start": "3151420",
    "end": "3157330"
  },
  {
    "text": "can throw in this API send it a post to",
    "start": "3157330",
    "end": "3164500"
  },
  {
    "text": "say I want to create this article article heading to and then I'll go",
    "start": "3164500",
    "end": "3172480"
  },
  {
    "text": "across today my API and I have it's returned to the second one but it's",
    "start": "3172480",
    "end": "3180970"
  },
  {
    "text": "created one so there's a whole bunch of things that that have happened there we",
    "start": "3180970",
    "end": "3188110"
  },
  {
    "text": "go into the plumie state or the plumie website",
    "start": "3188110",
    "end": "3194700"
  },
  {
    "text": "and look at the timeline it gives you a timeline of all the things it is doing",
    "start": "3197440",
    "end": "3202940"
  },
  {
    "text": "so if we look for it's creating all of these resources if we look for create dB",
    "start": "3202940",
    "end": "3214420"
  },
  {
    "text": "so this is the task definition it's graded the run migration all of the",
    "start": "3214420",
    "end": "3221120"
  },
  {
    "text": "things to be able to execute a log groups keep going and then you can see",
    "start": "3221120",
    "end": "3230830"
  },
  {
    "text": "my task before here yeah these are my",
    "start": "3230830",
    "end": "3240230"
  },
  {
    "text": "dynamic resources so the first one it creates the database tasks the second",
    "start": "3240230",
    "end": "3245360"
  },
  {
    "text": "one runs the migrations I jump over to the resources it will allow me to go",
    "start": "3245360",
    "end": "3253910"
  },
  {
    "text": "over here back to AWS go to ECS which is",
    "start": "3253910",
    "end": "3259070"
  },
  {
    "text": "the container service and going to my",
    "start": "3259070",
    "end": "3264170"
  },
  {
    "text": "Fargate cluster you can go to the tasks go to the stopped ones run cluster",
    "start": "3264170",
    "end": "3272800"
  },
  {
    "text": "you can see that my run migrations and create DB so far go in to create DV I",
    "start": "3275390",
    "end": "3280740"
  },
  {
    "text": "can see the logs and I said creating the DB so now my database is actually managed through my infrastructure as",
    "start": "3280740",
    "end": "3287340"
  },
  {
    "text": "code module which is really really cool that make sense to everyone cool so",
    "start": "3287340",
    "end": "3298590"
  },
  {
    "start": "3297000",
    "end": "3375000"
  },
  {
    "text": "we've seen a whole bunch of stuff we saw plumie crosswalk which is like an all batteries included opinionated and",
    "start": "3298590",
    "end": "3306180"
  },
  {
    "text": "out-of-the-box kind of good defaults we've seen stack references that allow",
    "start": "3306180",
    "end": "3311670"
  },
  {
    "text": "us to reference state and created resources across different projects",
    "start": "3311670",
    "end": "3317300"
  },
  {
    "text": "stacks projects we saw briefly the config system I didn't go into secrets",
    "start": "3317300",
    "end": "3324480"
  },
  {
    "text": "or any of that stuff there's a lot to a lot of services around that we saw",
    "start": "3324480",
    "end": "3329790"
  },
  {
    "text": "component resources that allow you to compose these lower-level services into higher-level",
    "start": "3329790",
    "end": "3336030"
  },
  {
    "text": "logical services and the nice thing is because we're in typescript you can just",
    "start": "3336030",
    "end": "3341790"
  },
  {
    "text": "write all of your services and then extract them into a class constructor and now you can refactor your",
    "start": "3341790",
    "end": "3347760"
  },
  {
    "text": "infrastructure really easily we can create dynamic resources that wrap api's",
    "start": "3347760",
    "end": "3353280"
  },
  {
    "text": "and you don't have to kind of build your own terraform module and then include it",
    "start": "3353280",
    "end": "3358920"
  },
  {
    "text": "and all of those sort of things you can do it inside your paluma application and we also touch briefly on inputs and",
    "start": "3358920",
    "end": "3364890"
  },
  {
    "text": "outputs because you haven't created a service yet it gives you kind of a future and you can transform that",
    "start": "3364890",
    "end": "3371070"
  },
  {
    "text": "feature into other futures to kind of compose these different values the code",
    "start": "3371070",
    "end": "3376830"
  },
  {
    "start": "3375000",
    "end": "3600000"
  },
  {
    "text": "is available on github there are a bunch of resources in plumies github I highly",
    "start": "3376830",
    "end": "3384750"
  },
  {
    "text": "recommend if you want to get started have a look at their programming model and on their intro it covers a lot of",
    "start": "3384750",
    "end": "3391350"
  },
  {
    "text": "these concepts the input the output and kind of a lot of the ideas behind it it's really important to understand that",
    "start": "3391350",
    "end": "3397800"
  },
  {
    "text": "and then I mentioned that you can unit test your infrastructure so there's a blog post written by Joe there so thanks",
    "start": "3397800",
    "end": "3405090"
  },
  {
    "text": "very much",
    "start": "3405090",
    "end": "3407450"
  },
  {
    "text": "probably have time for a question or two",
    "start": "3411060",
    "end": "3415349"
  },
  {
    "text": "yeah so the question was around like how does I think around",
    "start": "3444600",
    "end": "3449850"
  },
  {
    "text": "how does below me if someone makes changes to things gonna detect that and update its own state so the CLI has a",
    "start": "3449850",
    "end": "3457500"
  },
  {
    "text": "plumie refresh which all of those life you've got dynamic resource providers it's got a check function that actually",
    "start": "3457500",
    "end": "3464460"
  },
  {
    "text": "can sort of make sure that the real resource matches what the state has and",
    "start": "3464460",
    "end": "3470430"
  },
  {
    "text": "that's my understanding so as far as I understand the Polly me refresh command will allow you to update the state and",
    "start": "3470430",
    "end": "3478980"
  },
  {
    "text": "sort of make sure it reflects reality and then it will undo those changes",
    "start": "3478980",
    "end": "3485990"
  },
  {
    "text": "mmm-hmm the question was can you see that I actually don't know it's a good",
    "start": "3501660",
    "end": "3508710"
  },
  {
    "text": "question I can have a look and pick me on Twitter and I'll find out for you so",
    "start": "3508710",
    "end": "3519029"
  },
  {
    "text": "the question was is there a similar concept modules in Pulu me so you can",
    "start": "3519029",
    "end": "3524569"
  },
  {
    "text": "like your component resources that pull things together in logical resources you",
    "start": "3524569",
    "end": "3530099"
  },
  {
    "text": "could put that into an NPM module and publish it onto NPM or into Nexus and",
    "start": "3530099",
    "end": "3535559"
  },
  {
    "text": "then if so my plan for our internal stuff is all of our cues and topics are",
    "start": "3535559",
    "end": "3542279"
  },
  {
    "text": "set up exactly the same way we've got the same retry policies and that sort of stuff so week we call it snacks for SNS",
    "start": "3542279",
    "end": "3550589"
  },
  {
    "text": "and SQS so I'm planning to create a snacks module so I can just go new",
    "start": "3550589",
    "end": "3556349"
  },
  {
    "text": "snacks pass it some basic config and then that is published on our internal",
    "start": "3556349",
    "end": "3561660"
  },
  {
    "text": "nexus and all of our projects share that I'm not super familiar with Terra forms",
    "start": "3561660",
    "end": "3567450"
  },
  {
    "text": "modules so I can't create a direct comparison but that would be the way that I would approach sharing of",
    "start": "3567450",
    "end": "3575220"
  },
  {
    "text": "infrastructure",
    "start": "3575220",
    "end": "3577880"
  },
  {
    "text": "you",
    "start": "3590070",
    "end": "3592130"
  },
  {
    "text": "yep",
    "start": "3597890",
    "end": "3600519"
  },
  {
    "text": "yep yep so it's a really good question",
    "start": "3605310",
    "end": "3611170"
  },
  {
    "text": "around like well I've got a deployment tool that does orchestration of these different things already why would I",
    "start": "3611170",
    "end": "3616630"
  },
  {
    "text": "move all of that sort of stuff into a plumie module and the main reason for me",
    "start": "3616630",
    "end": "3622180"
  },
  {
    "text": "is if I am using octopus deploy to orchestrate that now my agents need to",
    "start": "3622180",
    "end": "3629140"
  },
  {
    "text": "be able to connect my database so the main reason I'm putting it into plumie is because I can run it inside my",
    "start": "3629140",
    "end": "3635740"
  },
  {
    "text": "private V pcs which are not exposed to the world and then they can access any internal and hidden infrastructure so",
    "start": "3635740",
    "end": "3644170"
  },
  {
    "text": "that's probably the the main driver for that because I went down the road of and",
    "start": "3644170",
    "end": "3649799"
  },
  {
    "text": "the way we do it currently is we connect to the database and we just have I we",
    "start": "3649799",
    "end": "3655240"
  },
  {
    "text": "can only run our database migrations if we're in the office because we've got VPNs and stuff all set up so I really",
    "start": "3655240",
    "end": "3662589"
  },
  {
    "text": "wanted to get away from that cool I like you",
    "start": "3662589",
    "end": "3669509"
  },
  {
    "text": "so the question is if you've got terraform already how reliable is the Interop I haven't used it so a lot of",
    "start": "3677000",
    "end": "3685250"
  },
  {
    "text": "our terraform is we don't reference terraform state within our terraform we",
    "start": "3685250",
    "end": "3690530"
  },
  {
    "text": "kind of provision some infrastructure and then we make the AR n a config value",
    "start": "3690530",
    "end": "3696500"
  },
  {
    "text": "so we don't reference it directly so because we do that I've just moved those",
    "start": "3696500",
    "end": "3702800"
  },
  {
    "text": "AR ends into plumie config and we're not querying our terraform state directly that said they're they're quite",
    "start": "3702800",
    "end": "3711110"
  },
  {
    "text": "motivated to make sure there is high Interop so a lot of the paluma modules",
    "start": "3711110",
    "end": "3716660"
  },
  {
    "text": "they all terraform modules have a they've generated plumie modules to be",
    "start": "3716660",
    "end": "3722810"
  },
  {
    "text": "able to use those terraform modules so terraform is quite heavily integrated hidden plumie already so I'd assume it",
    "start": "3722810",
    "end": "3730490"
  },
  {
    "text": "would work quite well thanks everyone [Applause]",
    "start": "3730490",
    "end": "3738030"
  }
]