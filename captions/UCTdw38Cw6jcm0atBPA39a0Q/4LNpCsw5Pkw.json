[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "hello everyone thank you for coming to my talk uh it's the second day and I",
    "start": "6480",
    "end": "11960"
  },
  {
    "text": "think it's the last one before lunch right so at least now you won't get sleepy",
    "start": "11960",
    "end": "19039"
  },
  {
    "text": "right my name is sigan I work for claer and today we're going to talk about sang boning in Linux with zero lines of",
    "start": "19039",
    "end": "27880"
  },
  {
    "text": "code so a little bit about myself I do Linux Cloud so mostly Linux kernel uh",
    "start": "27880",
    "end": "35000"
  },
  {
    "text": "I'm passionate about security cryptography and system performance and I enjoy lowlevel",
    "start": "35000",
    "end": "41120"
  },
  {
    "text": "programming so uh Linux kernel drivers bootloaders uh and other scary stuff",
    "start": "41120",
    "end": "47719"
  },
  {
    "text": "written and see um I'm not that popular on Twitter but",
    "start": "47719",
    "end": "53760"
  },
  {
    "text": "if you know me you might know me from this video uh I was the first one to compare",
    "start": "53760",
    "end": "60239"
  },
  {
    "text": "to Bentley if if you haven't seen it go and watch it",
    "start": "60239",
    "end": "65360"
  },
  {
    "text": "uh yep but the topic of today's sandboxing will be sa comp and um how",
    "start": "65360",
    "end": "72600"
  },
  {
    "start": "67000",
    "end": "330000"
  },
  {
    "text": "many of you have been here last year oh not much so like last year",
    "start": "72600",
    "end": "78240"
  },
  {
    "text": "second topic was quite popular we had a workshop and we had a talk a nice talk",
    "start": "78240",
    "end": "84799"
  },
  {
    "text": "but it was like fundamentals we will repeat some of the fundamentals here but we will go deep keeper and we'll",
    "start": "84799",
    "end": "91320"
  },
  {
    "text": "investigate what are the shortcomings of sa comp and uh I will propose a tool how",
    "start": "91320",
    "end": "98079"
  },
  {
    "text": "to overcome these shortcomings for Enterprise",
    "start": "98079",
    "end": "103920"
  },
  {
    "text": "use um before we dive into SEC comp we need to understand system calls and to",
    "start": "104640",
    "end": "110560"
  },
  {
    "text": "understand system calls we just want to review the basic uh software stack which",
    "start": "110560",
    "end": "115799"
  },
  {
    "text": "we use today right anyone runs bare metal here code",
    "start": "115799",
    "end": "122079"
  },
  {
    "text": "bare metal what does a bare metal mean to you",
    "start": "122079",
    "end": "127080"
  },
  {
    "text": "actually machine in irq huh heavy machine in Iraq machine in Iraq right",
    "start": "127080",
    "end": "132760"
  },
  {
    "text": "but you still have an operating system right because like 15 years ago I was involved in iot and we called bare metal",
    "start": "132760",
    "end": "139519"
  },
  {
    "text": "where you don't have an operating system H so you just run your cord bare metal where now it seems like call bare metal",
    "start": "139519",
    "end": "146879"
  },
  {
    "text": "if you do have an operating system but don't use virtualizations or Cloud but yeah but eventually like at the lower",
    "start": "146879",
    "end": "152920"
  },
  {
    "text": "level you always have some Hardware it can be real Hardware virtualized Hardware right then you usually run some",
    "start": "152920",
    "end": "160920"
  },
  {
    "text": "operating system on top you can most of us run Linux and some of us run inferior",
    "start": "160920",
    "end": "166920"
  },
  {
    "text": "operating system like Windows and Macos uh yeah and on top of the",
    "start": "166920",
    "end": "172680"
  },
  {
    "text": "operating system we have our applications actually our business logic which do the tasks we want right and",
    "start": "172680",
    "end": "179400"
  },
  {
    "text": "this is where where if you read different dogs you this is where the typical separation comes which we call",
    "start": "179400",
    "end": "186239"
  },
  {
    "text": "like the user space where our applications run and the kernel space where the kernel",
    "start": "186239",
    "end": "193120"
  },
  {
    "text": "runs yeah simple right so this brings us to system calls so what are actually",
    "start": "194040",
    "end": "200040"
  },
  {
    "text": "system calls so again we have our application our business logic and we",
    "start": "200040",
    "end": "205200"
  },
  {
    "text": "run on the Kernel and we and we establish that the applications don't talk to real Hardware",
    "start": "205200",
    "end": "210560"
  },
  {
    "text": "the applications usually talk to the kernel and the kernel provides a set of functions or like an",
    "start": "210560",
    "end": "216560"
  },
  {
    "text": "API right for the applications to communicate with it and the applications",
    "start": "216560",
    "end": "223599"
  },
  {
    "text": "Implement their logic by communicating to the kernel through these apis so system calls is just is a kernel",
    "start": "223599",
    "end": "230920"
  },
  {
    "text": "API it's it's it's a well defined API it's a well-defined interface between",
    "start": "230920",
    "end": "236879"
  },
  {
    "text": "the user space the application and the operating system kernel and it has some",
    "start": "236879",
    "end": "241920"
  },
  {
    "text": "number of benefits right so it provides you with Hardware independent obstruction so your code doesn't care if",
    "start": "241920",
    "end": "248680"
  },
  {
    "text": "it talks to a hard drive on SSD or even if it's a network storage you kind of",
    "start": "248680",
    "end": "254959"
  },
  {
    "text": "use the same set of functions and you can and the underlying Hardware may",
    "start": "254959",
    "end": "260400"
  },
  {
    "text": "actually change but you will still have it also the kernel provides you basic",
    "start": "260400",
    "end": "266759"
  },
  {
    "text": "operating system services like file.io network access and again here you don't",
    "start": "266759",
    "end": "272280"
  },
  {
    "text": "care if you're using Ethernet or Wi-Fi or token ring whatever uh some basic",
    "start": "272280",
    "end": "278880"
  },
  {
    "text": "functionality like time sound Etc also through these through this",
    "start": "278880",
    "end": "284320"
  },
  {
    "text": "well- defined interface the operating system enforces uh different Access Control",
    "start": "284320",
    "end": "289520"
  },
  {
    "text": "lists or rules and permissions so we can fine grain Define permissions that some",
    "start": "289520",
    "end": "295039"
  },
  {
    "text": "applications are allowed to do something and access hardware and some applications don't and there are",
    "start": "295039",
    "end": "300440"
  },
  {
    "text": "privileged operations less privileged operations blah blah blah and also because the kernel is this",
    "start": "300440",
    "end": "308400"
  },
  {
    "text": "middle thing between the application and the cardware it can",
    "start": "308400",
    "end": "313600"
  },
  {
    "text": "provide the resource management this is where the modern multitasking operating system shine where they allow you to run",
    "start": "313600",
    "end": "320800"
  },
  {
    "text": "many many many applications all at once right so so far clear about system",
    "start": "320800",
    "end": "328639"
  },
  {
    "text": "calls easy right so what is sack comp in Linux sa comp is just yet another system",
    "start": "328639",
    "end": "336160"
  },
  {
    "text": "call it's one of the small boxes where the application can call into the kernel",
    "start": "336160",
    "end": "341759"
  },
  {
    "text": "for some things but it's a little bit special in a way the system call allows",
    "start": "341759",
    "end": "347880"
  },
  {
    "text": "an application to notify the kernel which other system calls the application intends to use and sometimes more",
    "start": "347880",
    "end": "356000"
  },
  {
    "text": "importantly which application system call it will definitely not not use and when the kernel receives that",
    "start": "356000",
    "end": "364199"
  },
  {
    "text": "information the kernel now enforces this so-called system called policy on the",
    "start": "364199",
    "end": "370000"
  },
  {
    "text": "provided by the application and in a nutshell it's",
    "start": "370000",
    "end": "375240"
  },
  {
    "text": "basically a tool an application can use to confine or sandbox itself cell and",
    "start": "375240",
    "end": "381479"
  },
  {
    "text": "like I I I stress the world tool here because it's like s comp sandbox no no",
    "start": "381479",
    "end": "386720"
  },
  {
    "text": "if you go on M pages and people will trash you for that say like it's a tool to create sandboxes but not the sandbox",
    "start": "386720",
    "end": "393560"
  },
  {
    "text": "itself so in this way like uh what seum does it allies it's kind of like estab",
    "start": "393560",
    "end": "400759"
  },
  {
    "text": "the application and the konel establish a contract between",
    "start": "400759",
    "end": "406039"
  },
  {
    "text": "themselves and the application makes a promise to the kernel that it will use",
    "start": "406039",
    "end": "411160"
  },
  {
    "text": "one set of system calls but it will definitely not use the other system goal",
    "start": "411160",
    "end": "416879"
  },
  {
    "text": "and then later if application breaks this contra the kernel is free to penalize it right",
    "start": "416879",
    "end": "422479"
  },
  {
    "text": "for breaking the quter and it kind of seems counterintuitive right here that",
    "start": "422479",
    "end": "428720"
  },
  {
    "text": "why would application do that right so like if application does nothing kernel will enforce nothing and your",
    "start": "428720",
    "end": "435319"
  },
  {
    "text": "application will never be penalized why would the application go for trouble for risking to penal to be penalized just",
    "start": "435319",
    "end": "442160"
  },
  {
    "text": "for this purpose right but turns out like in normal business when the",
    "start": "442160",
    "end": "448759"
  },
  {
    "text": "application is working as it should it's okay you don't need that but it's kind",
    "start": "448759",
    "end": "453800"
  },
  {
    "text": "of a very effective technique for if your application is not behaving as intended so let's let's see a very",
    "start": "453800",
    "end": "461080"
  },
  {
    "text": "simplified example so imagine you decided to develop a clock application alarm Croc right and I don't know I keep",
    "start": "461080",
    "end": "469759"
  },
  {
    "text": "joking with people around here that like SQL is not a programming language python",
    "start": "469759",
    "end": "475800"
  },
  {
    "text": "is not you are crazy enough to implement it in C right for whatever reason just simple clock so what does the clock",
    "start": "475800",
    "end": "483520"
  },
  {
    "text": "typical clock application need from the kernel right so it will run on the Linux",
    "start": "483520",
    "end": "490039"
  },
  {
    "text": "and it will need something so the only thing really the application",
    "start": "490039",
    "end": "496120"
  },
  {
    "text": "clock application needs is to know the time right and this is where you",
    "start": "496120",
    "end": "503360"
  },
  {
    "text": "can uh sandbox this application you can establish this contract with the kernel saying hey I'm just a clock application",
    "start": "503360",
    "end": "511120"
  },
  {
    "text": "all I need is this one system call get time of day so I can show it to the user",
    "start": "511120",
    "end": "516959"
  },
  {
    "text": "right and Colonel says okay and yeah later your application kind of works and",
    "start": "516959",
    "end": "522560"
  },
  {
    "text": "it needs to know the time it makes a system call to the konel get time of day and the colonel yeah I mean this is what",
    "start": "522560",
    "end": "528760"
  },
  {
    "text": "we agreed before on here's your time okay but what if what if suddenly",
    "start": "528760",
    "end": "535160"
  },
  {
    "text": "because you wrote it in the scary C language uh your application was compromised right somebody got like a",
    "start": "535160",
    "end": "542279"
  },
  {
    "text": "code execution in your application and they steer the execution of application into another Direction so they you know",
    "start": "542279",
    "end": "549079"
  },
  {
    "text": "like Harvest your home directory your passwords and what do they want to do with that",
    "start": "549079",
    "end": "554440"
  },
  {
    "text": "like if somebody controls the application they harvested the information they wanted probably to send it to themselves right so they will",
    "start": "554440",
    "end": "560680"
  },
  {
    "text": "direct the application to send it over the network so they will direct the",
    "start": "560680",
    "end": "566120"
  },
  {
    "text": "application to call the sense system call but this is was not part of the contract so now the colonel",
    "start": "566120",
    "end": "574040"
  },
  {
    "text": "penalizes the application kills the application immediately and prevert uh prevents your data Le",
    "start": "574040",
    "end": "581480"
  },
  {
    "text": "right U so who was on the panel",
    "start": "581480",
    "end": "587519"
  },
  {
    "text": "yesterday right so uh in the panel yesterday we discussed where the",
    "start": "587519",
    "end": "593360"
  },
  {
    "text": "boundary lies between like application security and Cloud security and like the same problem is is within the kernel and",
    "start": "593360",
    "end": "600240"
  },
  {
    "text": "user space like is the kernel responsible for security of uh running",
    "start": "600240",
    "end": "605680"
  },
  {
    "text": "applications probably no because by default the kernel has no introspect what the application does but what set",
    "start": "605680",
    "end": "612760"
  },
  {
    "text": "comp allows an application to actually communicate it this intent to the kernel",
    "start": "612760",
    "end": "618040"
  },
  {
    "text": "so then the kernel has this context and it can act upon it so let's see how you can actually use",
    "start": "618040",
    "end": "625640"
  },
  {
    "start": "623000",
    "end": "1085000"
  },
  {
    "text": "a set comp",
    "start": "625640",
    "end": "631320"
  },
  {
    "text": "uh who is familiar with un name command in Unix everyone is right so yeah if you",
    "start": "631720",
    "end": "639040"
  },
  {
    "text": "run your name it will tell you your operating system and some auxiliary information when it was compiled like",
    "start": "639040",
    "end": "645399"
  },
  {
    "text": "what architecture we have Etc right but you name commment the underlying implementation",
    "start": "645399",
    "end": "653120"
  },
  {
    "text": "there is also a uname system call which uname command uses so let's actually try to rewrite write our own uname command",
    "start": "653120",
    "end": "660959"
  },
  {
    "text": "using the uname system call and this is complete application you can actually copy paste and run",
    "start": "660959",
    "end": "667600"
  },
  {
    "text": "it uh and the G is like one simple main function and the g here is uh we call",
    "start": "667600",
    "end": "674320"
  },
  {
    "text": "the uname system call according to the man page we obtain the information and",
    "start": "674320",
    "end": "679920"
  },
  {
    "text": "we print it out we print the operating system part of the information provided",
    "start": "679920",
    "end": "685079"
  },
  {
    "text": "to the user quite easy",
    "start": "685079",
    "end": "690160"
  },
  {
    "text": "so we can compile this application and test that it works as we intended so if",
    "start": "690160",
    "end": "695639"
  },
  {
    "text": "you run it you will see my operating system Linux now if you're going to follow this guide and you will see that",
    "start": "695639",
    "end": "702560"
  },
  {
    "text": "it prints not Linux stop following right now because SEC comp is a Linux specific",
    "start": "702560",
    "end": "708160"
  },
  {
    "text": "technology if if you don't get Linux then it won't work for you",
    "start": "708160",
    "end": "713720"
  },
  {
    "text": "right so now let's try to sandbox this application right uh we'll get the code",
    "start": "713720",
    "end": "721480"
  },
  {
    "text": "and uh before our main business logic which is UN name system call we will",
    "start": "721480",
    "end": "726920"
  },
  {
    "text": "insert a call to the function called sandbox and which implements our s",
    "start": "726920",
    "end": "733000"
  },
  {
    "text": "sandbox and we can implement this function it's quite",
    "start": "733000",
    "end": "738120"
  },
  {
    "text": "easy two slides but you don't have to understand",
    "start": "738120",
    "end": "743560"
  },
  {
    "text": "all of that the gist is the following you uh second comp uh the version of set",
    "start": "743560",
    "end": "750040"
  },
  {
    "text": "comp is called setc comp BPF so you kind of implement your policy in the BPF programming language so you can actually",
    "start": "750040",
    "end": "756360"
  },
  {
    "text": "write your program which implements your policy and this is very scary",
    "start": "756360",
    "end": "761720"
  },
  {
    "text": "stuff and for the purposes of this example we will not Implement a proper",
    "start": "761720",
    "end": "766959"
  },
  {
    "text": "policy we will Implement an incorrect policy to show that set comp actually works so uh from the boilerplate C the",
    "start": "766959",
    "end": "775440"
  },
  {
    "text": "main difference is the main important part is this so uh what we",
    "start": "775440",
    "end": "781959"
  },
  {
    "text": "tell in the policy uh that if the program tries to call uname",
    "start": "781959",
    "end": "789399"
  },
  {
    "text": "system call we'll actually prohibit it so we will deny the program executing an uname system call and also the default",
    "start": "789399",
    "end": "796959"
  },
  {
    "text": "action if we violate the Saum policy for the colonel to kill the process but we can also ask the colonel not to do that",
    "start": "796959",
    "end": "804199"
  },
  {
    "text": "and in this case we will ask the colonel instead just to return an error code",
    "start": "804199",
    "end": "810279"
  },
  {
    "text": "from the system call and we can even specify which error code we want we call it EET down network is down right so",
    "start": "810279",
    "end": "818839"
  },
  {
    "text": "yeah we Define our policy as a program there are some auxiliary bits which are not important for this context we just",
    "start": "818839",
    "end": "824440"
  },
  {
    "text": "copy paste it from theand page and then we're actually calling the Secom system call providing our program and from that",
    "start": "824440",
    "end": "832240"
  },
  {
    "text": "line the second policy is enforced by the Kent so now let's see how it works",
    "start": "832240",
    "end": "838160"
  },
  {
    "text": "we can we compile our modified program with our sandboxing function and we can",
    "start": "838160",
    "end": "844160"
  },
  {
    "text": "try to execute it and then we see something like this we see that your name system called fail and the error",
    "start": "844160",
    "end": "850600"
  },
  {
    "text": "code is network is down and we definitely know it's because of our set comp because your name system Cod is",
    "start": "850600",
    "end": "856399"
  },
  {
    "text": "just copying strings from the kernel to user space and you don't need Network for that right so you can in normal case",
    "start": "856399",
    "end": "862600"
  },
  {
    "text": "you can never receive an error code in a down from a uname system code but here it is and in in our case what we did is we",
    "start": "862600",
    "end": "871120"
  },
  {
    "text": "changed the execution of the application to its error path so we we we're executing there there are",
    "start": "871120",
    "end": "878000"
  },
  {
    "text": "limited number of cases you want to actually return a custom error code because if you're actually protecting",
    "start": "878000",
    "end": "884600"
  },
  {
    "text": "from a compromised application you want to kill it immediately not give a chance to recover right so you want to kill the",
    "start": "884600",
    "end": "890959"
  },
  {
    "text": "application but in some cases particularly you might find this useful and in this case we just for visibility",
    "start": "890959",
    "end": "897880"
  },
  {
    "text": "sake we just return an error to the",
    "start": "897880",
    "end": "904040"
  },
  {
    "text": "application but have you just seen writing secum by hand is hard right so",
    "start": "904120",
    "end": "909160"
  },
  {
    "text": "it's a lowlevel assembly like language it's hard to write to review to debug",
    "start": "909160",
    "end": "916040"
  },
  {
    "text": "and to update and like you've seen the listing for very simple policy which",
    "start": "916040",
    "end": "922040"
  },
  {
    "text": "prohibits one system called imagine how that policy would look like for a Enterprise service right",
    "start": "922040",
    "end": "929880"
  },
  {
    "text": "um and also you need to be aware of different lowlevel details you need to understand the system call numbers so",
    "start": "929880",
    "end": "936639"
  },
  {
    "text": "even though the system call name may be the same across architectures the",
    "start": "936639",
    "end": "941720"
  },
  {
    "text": "numbers inside the kernel are different for example your name system call number",
    "start": "941720",
    "end": "946839"
  },
  {
    "text": "on x86 is different from your name system call number in um arm 64 so for",
    "start": "946839",
    "end": "954319"
  },
  {
    "text": "example if you transfer your program from x86 to arm 64 your policy might not be enforced properly because the numbers",
    "start": "954319",
    "end": "960920"
  },
  {
    "text": "are different and if you read through the man page you also need to some set",
    "start": "960920",
    "end": "966360"
  },
  {
    "text": "some additional auxiliary bits like no new privileges etc etc",
    "start": "966360",
    "end": "972600"
  },
  {
    "text": "etc as anything hard inside the Linux kernel so like Linux kernel comes up",
    "start": "973120",
    "end": "978440"
  },
  {
    "text": "with this really hard interface for something like this or iing or something",
    "start": "978440",
    "end": "984440"
  },
  {
    "text": "there is also like a library on top which tries to simplify it and a a lip up comp you have a library called lip up",
    "start": "984440",
    "end": "991199"
  },
  {
    "text": "comp so actually to make it more simple we can rewrite our sandboxing function",
    "start": "991199",
    "end": "997160"
  },
  {
    "text": "using that library and you see that there is much less code now and it's much more manageable and",
    "start": "997160",
    "end": "1003680"
  },
  {
    "text": "readable uh and what we do here is the important parts we set the default",
    "start": "1003680",
    "end": "1009759"
  },
  {
    "text": "action so for example we what we say is that by default we allow all system",
    "start": "1009759",
    "end": "1015800"
  },
  {
    "text": "calls right and this is a important bit then we add a",
    "start": "1015800",
    "end": "1021680"
  },
  {
    "text": "rule saying if the system call name is you name uh in this time we will not",
    "start": "1021680",
    "end": "1027880"
  },
  {
    "text": "allow the application to continue we'll tell the colonel just immediately to kill the application yeah and then we Lo our",
    "start": "1027880",
    "end": "1035959"
  },
  {
    "text": "policy into the kernels with this wrapper and again from that line the system called policy is enforced right",
    "start": "1035959",
    "end": "1041640"
  },
  {
    "text": "and here we don't need to deal with system call numbers anymore we can reference it by name it's a little bit",
    "start": "1041640",
    "end": "1048199"
  },
  {
    "text": "easier to manage so let's see if it works H we can recompile our modified",
    "start": "1048199",
    "end": "1055440"
  },
  {
    "text": "application and because we're using a library now we have to not to forget to link to that library and we can execute",
    "start": "1055440",
    "end": "1063200"
  },
  {
    "text": "it and then uh if you're running on a bus shell you will see something like that but system call because when uh and",
    "start": "1063200",
    "end": "1070600"
  },
  {
    "text": "we see no output right because this time we're didn't allow the application to continue as soon as it tried to use the",
    "start": "1070600",
    "end": "1076400"
  },
  {
    "text": "uname system call the colel killed the application",
    "start": "1076400",
    "end": "1080840"
  },
  {
    "text": "um yeah this is well well and good so this brings us to know code setcom so in",
    "start": "1083720",
    "end": "1090679"
  },
  {
    "start": "1085000",
    "end": "1466000"
  },
  {
    "text": "all the previous examples we've seen that to sandbox an application with a saom system call you actually need to",
    "start": "1090679",
    "end": "1097720"
  },
  {
    "text": "modify the source code of the application need to but how can you do it without",
    "start": "1097720",
    "end": "1104200"
  },
  {
    "text": "modifying uh the application and why is it important right and we kind of",
    "start": "1104200",
    "end": "1110080"
  },
  {
    "text": "touched in on the panel yesterday so who is a software developer here oh yeah so",
    "start": "1110080",
    "end": "1117559"
  },
  {
    "text": "how many uh do like you software developers or security folks who talk to",
    "start": "1117559",
    "end": "1122960"
  },
  {
    "text": "software developers start a new project with mindset said yeah most likely I",
    "start": "1122960",
    "end": "1128760"
  },
  {
    "text": "will ride bugs and security vulnerability so the first thing should I do is to sandbox my application right",
    "start": "1128760",
    "end": "1136000"
  },
  {
    "text": "one oh okay I don't believe you",
    "start": "1136000",
    "end": "1140720"
  },
  {
    "text": "so the question is yeah right this is the last thing people want to do when",
    "start": "1141440",
    "end": "1147000"
  },
  {
    "text": "they write their code and like on top of that like not everyone writes in the C language and even understands the system",
    "start": "1147000",
    "end": "1153520"
  },
  {
    "text": "calls you you will usually use some I don't know like uh jvm and good luck",
    "start": "1153520",
    "end": "1159720"
  },
  {
    "text": "figuring out like which system calls its uses like when you write your code so the fundamental problem with",
    "start": "1159720",
    "end": "1167799"
  },
  {
    "text": "seccom that te comp can only apply the rules or policy to the current process so your process needs to apply it to the",
    "start": "1167799",
    "end": "1175159"
  },
  {
    "text": "self and it is expected that developers will send b their code themselves right",
    "start": "1175159",
    "end": "1181240"
  },
  {
    "text": "and there is no external interface in Linux to apply s PS ru2 on already",
    "start": "1181240",
    "end": "1186720"
  },
  {
    "text": "running process on the other hand we have like operators s admin security",
    "start": "1186720",
    "end": "1194159"
  },
  {
    "text": "people uh that have almost no control over seyon policy because they can't",
    "start": "1194159",
    "end": "1199240"
  },
  {
    "text": "modify the code and uh also like you know like we don't only run code that we",
    "start": "1199240",
    "end": "1206240"
  },
  {
    "text": "write we have like loads of open source project and sometimes even proprietary code and there is no way to and you know",
    "start": "1206240",
    "end": "1213280"
  },
  {
    "text": "like the vendor will tell you that code does this but you know like it might have like solar winds current or",
    "start": "1213280",
    "end": "1220720"
  },
  {
    "text": "something it may do something else so like there is no way to sandbox for party proprietary",
    "start": "1220720",
    "end": "1226960"
  },
  {
    "text": "application so this is Gap right so like from one side you",
    "start": "1226960",
    "end": "1232799"
  },
  {
    "text": "have software developers who can send box their code but are not kind of",
    "start": "1232799",
    "end": "1238280"
  },
  {
    "text": "incentivized to do so on the other hand we have all these other people security people operators the admins SES who want",
    "start": "1238280",
    "end": "1246240"
  },
  {
    "text": "to secure production but don't have the ability to do",
    "start": "1246240",
    "end": "1251840"
  },
  {
    "text": "so so part of it was tried to address by System d the all favorite in it system",
    "start": "1253520",
    "end": "1261679"
  },
  {
    "text": "so if you run your codes through systemd you you can run a uh you can write a",
    "start": "1261679",
    "end": "1268919"
  },
  {
    "text": "Service Unit file in this Service Unit file you can specify this directive called system called filter where you",
    "start": "1268919",
    "end": "1276840"
  },
  {
    "text": "can specify and allow list of system calls for your applications to",
    "start": "1276840",
    "end": "1283080"
  },
  {
    "text": "use right and it's surprisingly well documented so um it also provides a nice",
    "start": "1283320",
    "end": "1289840"
  },
  {
    "text": "rappers it can group system calls in like collections so if you need networking or file IO etc",
    "start": "1289840",
    "end": "1296840"
  },
  {
    "text": "etc so let's see how it works so let's again start with uh so we will dump all",
    "start": "1296840",
    "end": "1305320"
  },
  {
    "text": "our sand properly sandbox application and start with a non sandbox application",
    "start": "1305320",
    "end": "1310840"
  },
  {
    "text": "with no sandboxing functionality we can still verify it works uh we can write a",
    "start": "1310840",
    "end": "1317760"
  },
  {
    "text": "systemd unit file for it but also we can Sim simulate it with systemd run which will generate one on the fly so we can",
    "start": "1317760",
    "end": "1324600"
  },
  {
    "text": "run our code through system D and we can also verify it executes properly so we",
    "start": "1324600",
    "end": "1330039"
  },
  {
    "text": "see the expected output and also system D helpfully tells that it's finished",
    "start": "1330039",
    "end": "1335159"
  },
  {
    "text": "with a success error code all good right so now we can ask system D to actually",
    "start": "1335159",
    "end": "1341720"
  },
  {
    "text": "sandbox it so we specifies a system called filter directive and we specify",
    "start": "1341720",
    "end": "1348520"
  },
  {
    "text": "un name system call and the Tilda in front inverts the allow list so",
    "start": "1348520",
    "end": "1353679"
  },
  {
    "text": "basically by default it's an allow list but if we put Tilda it's kind of turns it into a deny list so we allow",
    "start": "1353679",
    "end": "1360880"
  },
  {
    "text": "everything except the uname system call and if we execute that we will see no",
    "start": "1360880",
    "end": "1366159"
  },
  {
    "text": "expected output we will see that and the systemd helpfully tell that the",
    "start": "1366159",
    "end": "1371360"
  },
  {
    "text": "application was killed with a signal so working as intended and here we didn't",
    "start": "1371360",
    "end": "1377120"
  },
  {
    "text": "have to modify any sort code of the application system D also provides",
    "start": "1377120",
    "end": "1382679"
  },
  {
    "text": "another directory called system system call error number where we",
    "start": "1382679",
    "end": "1388960"
  },
  {
    "text": "can simulate the first type of policy we generated so instead of killing the application we can through system",
    "start": "1388960",
    "end": "1395120"
  },
  {
    "text": "details the konel to return a custom error code and if we execute that we do see some output from the application but",
    "start": "1395120",
    "end": "1402039"
  },
  {
    "text": "we do see it go through an error pause so we see your name failed network is down and the a wasn't killed but the",
    "start": "1402039",
    "end": "1409679"
  },
  {
    "text": "exit status is one according to our source code all good it's nice",
    "start": "1409679",
    "end": "1417440"
  },
  {
    "text": "but it will be finished by that but like we still have some time so there is a small print",
    "start": "1417440",
    "end": "1426080"
  },
  {
    "text": "system D has a lot of small prints you have to figure out if you go into the documentation you would see that",
    "start": "1426080",
    "end": "1434000"
  },
  {
    "text": "regardless of what you specify in your allow or deny list some system calls are",
    "start": "1434000",
    "end": "1440080"
  },
  {
    "text": "always allowed and this is a list of system calls and what do you think it's the most",
    "start": "1440080",
    "end": "1446880"
  },
  {
    "text": "dangerous one here probably yes exact yeah exact V",
    "start": "1446880",
    "end": "1453320"
  },
  {
    "text": "exact V is is dangerous and uh and probably it's natural because system D",
    "start": "1453320",
    "end": "1459440"
  },
  {
    "text": "needs to execute our other process probably it needs exv right um but why",
    "start": "1459440",
    "end": "1465520"
  },
  {
    "text": "is exec V is dangerous so let's go back to our toy clock",
    "start": "1465520",
    "end": "1471080"
  },
  {
    "start": "1466000",
    "end": "1525000"
  },
  {
    "text": "application and yeah and we have our attacker which kind of compromised and",
    "start": "1471080",
    "end": "1477039"
  },
  {
    "text": "achieved like arbitrary code execution in the application what is the first thing the attacker would",
    "start": "1477039",
    "end": "1483840"
  },
  {
    "text": "do all workshops like who is contesting here what do you do in the first place",
    "start": "1484279",
    "end": "1490279"
  },
  {
    "text": "when you got code execution oh yeah you kind of yeah you you want to spawn a",
    "start": "1490279",
    "end": "1496960"
  },
  {
    "text": "shell because want to it's very hard to control the application through through a through a security vulnerability you",
    "start": "1496960",
    "end": "1504039"
  },
  {
    "text": "want to spawn a shell and do whatever you want right so you will usually execute a shell so this way execute vle",
    "start": "1504039",
    "end": "1512799"
  },
  {
    "text": "is quite dangerous if your application doesn't need it so it's the first thing",
    "start": "1512799",
    "end": "1518039"
  },
  {
    "text": "you want to block right but systemd doesn't allow you to do",
    "start": "1518039",
    "end": "1524000"
  },
  {
    "text": "though so to address this shortcoming we developed and sandboxing tool set in",
    "start": "1524000",
    "end": "1531360"
  },
  {
    "start": "1525000",
    "end": "1603000"
  },
  {
    "text": "Cloud for to kind of help with that so it's a toolkit to inject setcom rules or",
    "start": "1531360",
    "end": "1537640"
  },
  {
    "text": "policies into almost any process and it kind of follows the",
    "start": "1537640",
    "end": "1542720"
  },
  {
    "text": "systemd approach but takes it one step further and the toolkit contains two",
    "start": "1542720",
    "end": "1547880"
  },
  {
    "text": "parts so one part is a shared Library uh for dinamically Linked applications and",
    "start": "1547880",
    "end": "1554840"
  },
  {
    "text": "another the second part of the tool set is a special launcher for statically Linked",
    "start": "1554840",
    "end": "1560520"
  },
  {
    "text": "applications everyone here knows the difference between dynamically and statically Link applic statically linked",
    "start": "1560520",
    "end": "1566640"
  },
  {
    "text": "basically all the libraries are in one big executable and doesn't have any dependencies but dynamically link will",
    "start": "1566640",
    "end": "1573039"
  },
  {
    "text": "depend on system libraries right but the advantage of it it can block any system call including exact",
    "start": "1573039",
    "end": "1581000"
  },
  {
    "text": "V and uh uh similar to what systemd it's",
    "start": "1581000",
    "end": "1586480"
  },
  {
    "text": "a no code approach so it works on any binary written in any programming",
    "start": "1586480",
    "end": "1591559"
  },
  {
    "text": "language and even if proprietary binaries you don't have access source code and the best part it's kind of Open",
    "start": "1591559",
    "end": "1598039"
  },
  {
    "text": "Source and GitHub you can go in that at this point you might be",
    "start": "1598039",
    "end": "1603760"
  },
  {
    "start": "1603000",
    "end": "1741000"
  },
  {
    "text": "wondering like shell R what the you said no code like shouldn't like Library",
    "start": "1603760",
    "end": "1609120"
  },
  {
    "text": "require you to L and like code against it well uh generally yes but this short",
    "start": "1609120",
    "end": "1616919"
  },
  {
    "text": "Library special and I'm going to show you again let's go back to our example",
    "start": "1616919",
    "end": "1622360"
  },
  {
    "text": "of non-modified myos application so you can basically we still recompile it just",
    "start": "1622360",
    "end": "1629520"
  },
  {
    "text": "in case verifi it works at intend so to send sendbox it through our",
    "start": "1629520",
    "end": "1635799"
  },
  {
    "text": "toolkit you don't need to link it to the library but you need to somehow ensure that the library is loaded into the",
    "start": "1635799",
    "end": "1642320"
  },
  {
    "text": "process um process address space and they can usually do it with LD preload",
    "start": "1642320",
    "end": "1647720"
  },
  {
    "text": "so what you can do is you can actually preload our library from the toolkit and",
    "start": "1647720",
    "end": "1653960"
  },
  {
    "text": "through another special environment variable which that Library understands you can specify your",
    "start": "1653960",
    "end": "1660559"
  },
  {
    "text": "desired second policy in this case we can uh we provide a deny list and it",
    "start": "1660559",
    "end": "1667039"
  },
  {
    "text": "includes one system call called un name right and we execute the same code notice we didn't recompile it everything",
    "start": "1667039",
    "end": "1674440"
  },
  {
    "text": "it's like we operating on the binary itself uh we see some helpful output",
    "start": "1674440",
    "end": "1679640"
  },
  {
    "text": "that we actually added the uname system called to the process second filter and we see no output from the application",
    "start": "1679640",
    "end": "1686360"
  },
  {
    "text": "and the shell helpfully tells us it was the process was killed because it violated the second",
    "start": "1686360",
    "end": "1694120"
  },
  {
    "text": "policy um LD prelo is a little bit tricky uh so it usually works well in",
    "start": "1694120",
    "end": "1701559"
  },
  {
    "text": "most cases but for example there are specific cases like set uid applications",
    "start": "1701559",
    "end": "1706760"
  },
  {
    "text": "where for security reasons l d PR load is ignored and it's kind of a little bit of a fragile right so you might so for",
    "start": "1706760",
    "end": "1715559"
  },
  {
    "text": "example you want to you you can add LD preload to systemd unit file so the systemd will preload the library for you",
    "start": "1715559",
    "end": "1722559"
  },
  {
    "text": "but you can actually mistype the pass and it will be silently ignored and you",
    "start": "1722559",
    "end": "1727600"
  },
  {
    "text": "will be thinking you're with a seccom policy but you're not uh and again the set u ID binaries what if you want to",
    "start": "1727600",
    "end": "1734679"
  },
  {
    "text": "restrict ping or something like that uh so what you can do is",
    "start": "1734679",
    "end": "1739840"
  },
  {
    "text": "technically uh you can patch your binary directly so there is Handy tool called",
    "start": "1739840",
    "end": "1745399"
  },
  {
    "start": "1741000",
    "end": "1797000"
  },
  {
    "text": "patch Al and you can actually add a explicit dependency into the L file so",
    "start": "1745399",
    "end": "1753960"
  },
  {
    "text": "uh it will always be loaded right and but again we're patching the binary here",
    "start": "1753960",
    "end": "1759640"
  },
  {
    "text": "we're not touching the code we're not recompiling any code and after you uh you do that you can check that you now",
    "start": "1759640",
    "end": "1767159"
  },
  {
    "text": "our binary is actually from other system binaries it also depends on our sandboxing binary so",
    "start": "1767159",
    "end": "1775080"
  },
  {
    "text": "again no modification of the SCE code and then we can just rerun it with with",
    "start": "1775080",
    "end": "1781679"
  },
  {
    "text": "any without any LD prols and we can just specify the uh system call filter or",
    "start": "1781679",
    "end": "1788159"
  },
  {
    "text": "deny list in this case and it will work the same very well this is all well good for dynamic",
    "start": "1788159",
    "end": "1796000"
  },
  {
    "text": "libraries but dyam dally linked but what about static link applications right if",
    "start": "1796000",
    "end": "1802000"
  },
  {
    "start": "1797000",
    "end": "1869000"
  },
  {
    "text": "we recompile our application and Link it statically we can still verify it",
    "start": "1802000",
    "end": "1809480"
  },
  {
    "text": "works but if we try our Dynamic Library approach it won't",
    "start": "1809480",
    "end": "1815279"
  },
  {
    "text": "work right because it's a statically application uh there is no linking of",
    "start": "1815279",
    "end": "1820840"
  },
  {
    "text": "external libraries during the runtime of the process and uh our kind of policy is",
    "start": "1820840",
    "end": "1826960"
  },
  {
    "text": "ignored and for these specific cases we this this is why we have the second part",
    "start": "1826960",
    "end": "1833080"
  },
  {
    "text": "of our toolkit is a special launcher where instead of doing the LD prelo",
    "start": "1833080",
    "end": "1839000"
  },
  {
    "text": "Dance you kind of similarly to how you would do it with system D you rerun the application through our custom launcher",
    "start": "1839000",
    "end": "1845440"
  },
  {
    "text": "called sandbox ify and again but the interface is the same the same environment variables we can provide the",
    "start": "1845440",
    "end": "1852080"
  },
  {
    "text": "deny list through this environment variable and we can see that the second policy is now enforced for",
    "start": "1852080",
    "end": "1859000"
  },
  {
    "text": "and uh yeah so this is a launcher and we see that the second uh second policy is",
    "start": "1859000",
    "end": "1865679"
  },
  {
    "text": "enforce and the application is being killed so yeah uh Cloud for sandboxing",
    "start": "1865679",
    "end": "1872000"
  },
  {
    "start": "1869000",
    "end": "1961000"
  },
  {
    "text": "tool is quite easy configuration VI environment variable so you can easily integrate it with your init system for",
    "start": "1872000",
    "end": "1879519"
  },
  {
    "text": "Production Services so the recommended approach is of course uh setcom system P",
    "start": "1879519",
    "end": "1884960"
  },
  {
    "text": "allow which will provide you with uh allow list of and basically anything not",
    "start": "1884960",
    "end": "1890919"
  },
  {
    "text": "in the list will be not allowed by the second policy sometimes it's very hard",
    "start": "1890919",
    "end": "1895960"
  },
  {
    "text": "to do that so you just want to prohibit very dangerous system calls like exact V",
    "start": "1895960",
    "end": "1901320"
  },
  {
    "text": "or like memory mapping or something like that for if you so if you can't generate",
    "start": "1901320",
    "end": "1906360"
  },
  {
    "text": "a proper allow list maybe you should just generate a deny list and basically",
    "start": "1906360",
    "end": "1912120"
  },
  {
    "text": "just uh specify the dangerous system calls there is also third environment",
    "start": "1912120",
    "end": "1917600"
  },
  {
    "text": "for called second default action where you can actually ask the colonel not to",
    "start": "1917600",
    "end": "1924200"
  },
  {
    "text": "kill the application if it uh violates the policy uh but just log the the",
    "start": "1924200",
    "end": "1931600"
  },
  {
    "text": "violation so we actually don't support custom error codes yet but what we you",
    "start": "1931600",
    "end": "1936840"
  },
  {
    "text": "can do you can set it only one variable is supported he called log so if the",
    "start": "1936840",
    "end": "1942799"
  },
  {
    "text": "process is violating a ccom policy it will just log in the operating system",
    "start": "1942799",
    "end": "1947919"
  },
  {
    "text": "AIT system that the policy was violated and it's very convenient to discover what",
    "start": "1947919",
    "end": "1953639"
  },
  {
    "text": "actually system calls are being used by a proprietor application if you don't have any access to the source",
    "start": "1953639",
    "end": "1960760"
  },
  {
    "text": "code yeah and the toolkit as I mentioned contains two parts so it has a lip and",
    "start": "1960760",
    "end": "1966519"
  },
  {
    "start": "1961000",
    "end": "2017000"
  },
  {
    "text": "boox dynamic library for dynamically linked executables only and basically",
    "start": "1966519",
    "end": "1972159"
  },
  {
    "text": "you need to preload the library into the process address space you can use either LD preload but you can actually patch",
    "start": "1972159",
    "end": "1979519"
  },
  {
    "text": "the uh binary itself with a patch Al command and we have the sandboxy luncher",
    "start": "1979519",
    "end": "1986519"
  },
  {
    "text": "which is good Bally both for statically and dynamically linked",
    "start": "1986519",
    "end": "1992080"
  },
  {
    "text": "executables and uh but you need to launch the executable through the",
    "start": "1992080",
    "end": "1997840"
  },
  {
    "text": "luncher all good any questions you might have a question is",
    "start": "1997840",
    "end": "2004159"
  },
  {
    "text": "like why do the hell we need the dynamically link application we have the L which is good for both",
    "start": "2004159",
    "end": "2010080"
  },
  {
    "text": "right uh it's a good [Laughter]",
    "start": "2010080",
    "end": "2016880"
  },
  {
    "text": "question the reason is and I'm going to tell you because we still have time uh",
    "start": "2016880",
    "end": "2023360"
  },
  {
    "start": "2017000",
    "end": "2143000"
  },
  {
    "text": "I'm going to tell you and the reason is because it's allows you to enforce Pyon",
    "start": "2023360",
    "end": "2030720"
  },
  {
    "text": "policy at a slight later time and why is it important so here's a 10,000 ft view",
    "start": "2030720",
    "end": "2036639"
  },
  {
    "text": "of how any process starts uh on the operating system regardless of the",
    "start": "2036639",
    "end": "2041960"
  },
  {
    "text": "programming language so when you start an application you usually have two",
    "start": "2041960",
    "end": "2047960"
  },
  {
    "text": "phases you have the runtime in it and even stuff written in C have the C runtime go runtime python whatever and",
    "start": "2047960",
    "end": "2057158"
  },
  {
    "text": "then then your kind of main application logic EX in your business logic",
    "start": "2057159",
    "end": "2063320"
  },
  {
    "text": "right so if you use the sendbox ify launcher the second policy would be",
    "start": "2063320",
    "end": "2069679"
  },
  {
    "text": "enforced before the runtime in it stage but if you use the leap sandbox approach",
    "start": "2069679",
    "end": "2077520"
  },
  {
    "text": "the sacom policy would be enforced after the runtime and but what why is it important right",
    "start": "2077520",
    "end": "2084679"
  },
  {
    "text": "like what is runtime in it event essentially runtime if you take a look",
    "start": "2084679",
    "end": "2090599"
  },
  {
    "text": "at it it's a shitloads of system calls which are never used any anymore in the",
    "start": "2090599",
    "end": "2096520"
  },
  {
    "text": "main logic so like if you EST trace for example a starting C application you will see it will checks a lot of",
    "start": "2096520",
    "end": "2103680"
  },
  {
    "text": "files uh tries to Lad external libraries checks some like loc does some weird",
    "start": "2103680",
    "end": "2110440"
  },
  {
    "text": "stuff with memory like Maps memory marks 6 executable blah blah blah right and the difference is if you",
    "start": "2110440",
    "end": "2118119"
  },
  {
    "text": "inforce through the liap sandbox approach you will only need and you're doing it properly by providing a very",
    "start": "2118119",
    "end": "2125119"
  },
  {
    "text": "tight allow list you only need to include system calls from your main application Logics where if you do it",
    "start": "2125119",
    "end": "2131160"
  },
  {
    "text": "through the sandboxy file launcher you actually need to allow all the system calls both from your main logic and from",
    "start": "2131160",
    "end": "2138480"
  },
  {
    "text": "the runtime in need say otherwise the application won't start so let's actually see a example so",
    "start": "2138480",
    "end": "2146119"
  },
  {
    "start": "2143000",
    "end": "2228000"
  },
  {
    "text": "let's go back to our toi application and this time we will Implement a proper policy for it so what is the minimum",
    "start": "2146119",
    "end": "2153319"
  },
  {
    "text": "required allow list for this application to run and complete successful Y and if",
    "start": "2153319",
    "end": "2158880"
  },
  {
    "text": "you do some investigation and trial error you will see that you only need to",
    "start": "2158880",
    "end": "2164280"
  },
  {
    "text": "allow four system calls so exit group fsat you name and write that's it and",
    "start": "2164280",
    "end": "2170040"
  },
  {
    "text": "the application executes successfully with non no error codes instead and this",
    "start": "2170040",
    "end": "2175800"
  },
  {
    "text": "is a dynamically linked application instead if you just try without even recompiling to rerun this application",
    "start": "2175800",
    "end": "2183160"
  },
  {
    "text": "through the sandbox ify rer to successfully uh execute this application now we have to",
    "start": "2183160",
    "end": "2190040"
  },
  {
    "text": "allow list uh much more system calls and in fact it's like four versus 13 system",
    "start": "2190040",
    "end": "2196880"
  },
  {
    "text": "calls in the allow list and bigger allow list is bigger uh threat surface right so in a nutshell if you if you have a",
    "start": "2196880",
    "end": "2204720"
  },
  {
    "text": "dynamic leing complication if you prefer to use a lip sandbox approach you will end up having much tighter uh access um",
    "start": "2204720",
    "end": "2212880"
  },
  {
    "text": "allow list system called allow list which will probably really greatly redu use your attack surface because most of",
    "start": "2212880",
    "end": "2220040"
  },
  {
    "text": "the time all these non needed system call are the most dangerous ones in the runtime andage",
    "start": "2220040",
    "end": "2227000"
  },
  {
    "text": "stage well this is probably really it really it so these are some useful links",
    "start": "2227599",
    "end": "2235040"
  },
  {
    "start": "2228000",
    "end": "2290000"
  },
  {
    "text": "um the first is a link to the man page for the setcom system call uh the second",
    "start": "2235040",
    "end": "2241560"
  },
  {
    "text": "the second link is a link to the GitHub project for lipac comp if you're interested in the library",
    "start": "2241560",
    "end": "2248200"
  },
  {
    "text": "the third link is a link to uh system D documentations for the system called filter directive the fourth link is a",
    "start": "2248200",
    "end": "2255800"
  },
  {
    "text": "GitHub link to our sandbox toolkit uh please use it please",
    "start": "2255800",
    "end": "2261520"
  },
  {
    "text": "contribute to it improve it like provide reviews etc etc and",
    "start": "2261520",
    "end": "2268560"
  },
  {
    "text": "everything which I described today and even more is described in the cloud for blog post and there you can copy paste",
    "start": "2268560",
    "end": "2275560"
  },
  {
    "text": "all the examples try to run them yourself so uh yeah this is the blog",
    "start": "2275560",
    "end": "2281280"
  },
  {
    "text": "post yeah I guess uh that's it like opening for",
    "start": "2281280",
    "end": "2288359"
  },
  {
    "text": "questions",
    "start": "2289400",
    "end": "2292400"
  }
]