[
  {
    "text": "welcome everyone thank you for coming to my session on bicep I hope everyone",
    "start": "9660",
    "end": "14820"
  },
  {
    "text": "enjoyed lunch uh now I've been told I'm not allowed to walk out of these little bits of sticky tape here otherwise I go",
    "start": "14820",
    "end": "21480"
  },
  {
    "text": "out of camera it could be a favor to the the uh remote audience I don't know but I'm going to do my best not to do that",
    "start": "21480",
    "end": "28740"
  },
  {
    "text": "so can I get a show of hands who is already familiar with using arm templates",
    "start": "28740",
    "end": "35700"
  },
  {
    "text": "pretty much everybody could keep your hand up if you're have already used bicep to some degree",
    "start": "35700",
    "end": "43500"
  },
  {
    "text": "a few okay awesome so I'm templates as you're aware they're a very a fundamental uh deployment",
    "start": "43500",
    "end": "50039"
  },
  {
    "text": "mechanism for azure very very powerful we as uh myself as a consultant come",
    "start": "50039",
    "end": "57719"
  },
  {
    "text": "across arm templates a lot in our customers when they are deploying to to azure",
    "start": "57719",
    "end": "63480"
  },
  {
    "text": "and again they're very powerful but they do come with a bit of a cognitive load they can be very complex",
    "start": "63480",
    "end": "69140"
  },
  {
    "text": "the syntax is less than Stellar it works very very functional but it's not not as easy as",
    "start": "69140",
    "end": "76380"
  },
  {
    "text": "what you'd like it's not very modular that's for sure especially from a reusability perspective at the end of this talk uh my goal is",
    "start": "76380",
    "end": "83820"
  },
  {
    "text": "that you will never want to use or need to use Arm templates ever again my name is Paul glavich I'm a Telstra",
    "start": "83820",
    "end": "89820"
  },
  {
    "text": "purple consultant a principal consultant I've been with them for around six and a half years now my three main sort of",
    "start": "89820",
    "end": "96060"
  },
  {
    "text": "pillars of focus solution architecture mostly in the cloud Deb secops which is where this talk",
    "start": "96060",
    "end": "102479"
  },
  {
    "text": "firmly sits and augmented in virtual reality",
    "start": "102479",
    "end": "107579"
  },
  {
    "text": "um as I mentioned before as a consultancy in Telstra purple uh we we come across a lot of different customers",
    "start": "107579",
    "end": "114000"
  },
  {
    "text": "they're using anything from terraform templates palumi uh just standard API",
    "start": "114000",
    "end": "120060"
  },
  {
    "text": "calls but arm templates are by far the most popular um so it's",
    "start": "120060",
    "end": "126000"
  },
  {
    "text": "good to see that there is some well hopefully you're going to see at the end of this there is some improvements to",
    "start": "126000",
    "end": "131819"
  },
  {
    "text": "arm templates in fact significantly more improvements what we're going to do is cover this in",
    "start": "131819",
    "end": "137459"
  },
  {
    "text": "three parts the obligatory introduction so we're going to get everybody Level Playing Field around what actually is",
    "start": "137459",
    "end": "143099"
  },
  {
    "text": "bicep and why even bother with it part two is going to be sort of the meat of it we'll be going through some usage",
    "start": "143099",
    "end": "148319"
  },
  {
    "text": "implementation tips and tricks around it and then we're going to bring it all together at the end with some short but",
    "start": "148319",
    "end": "154680"
  },
  {
    "text": "hopefully very cool and Powerful demonstrations of things that it can do",
    "start": "154680",
    "end": "159720"
  },
  {
    "text": "what it isn't is a bicep tutorial I'm going to fly through a lot of stuff so you're not expected obviously to",
    "start": "159720",
    "end": "164940"
  },
  {
    "text": "remember it all I'm going to try and keep it as cohesive as possible and I'm going to cover again all the basics",
    "start": "164940",
    "end": "170879"
  },
  {
    "text": "right to some more advanced stuff but I am going to fly at speed because there's quite a bit of content there and then",
    "start": "170879",
    "end": "176040"
  },
  {
    "text": "we'll open up the questions at the end so firstly what is it uh it is an",
    "start": "176040",
    "end": "181080"
  },
  {
    "text": "abstraction over arm templates it's what's called a domain specific language and it works in addition it doesn't",
    "start": "181080",
    "end": "188040"
  },
  {
    "text": "replace arm templates it actually produces um templates so you go from a bicep file you compile that to an arm",
    "start": "188040",
    "end": "194400"
  },
  {
    "text": "template and that gets deployed to Azure conversely you can actually get back from arm templates to bicep as well and",
    "start": "194400",
    "end": "200519"
  },
  {
    "text": "we'll see that a bit later on it is significantly and I say that",
    "start": "200519",
    "end": "205739"
  },
  {
    "text": "categorically significantly simpler than arm templates and the tooling around it because they've been able to design it",
    "start": "205739",
    "end": "211980"
  },
  {
    "text": "specifically this way is exceptional and in my opinion way better than arm templates",
    "start": "211980",
    "end": "217500"
  },
  {
    "text": "so but the fundamental thing here is just a another language a simplified version if you will of arm templates",
    "start": "217500",
    "end": "225000"
  },
  {
    "text": "uh but why come up with it why bother with it well um in Microsoft speaking to their customers they do have some",
    "start": "225000",
    "end": "230940"
  },
  {
    "text": "especially with complex deployments uh arm templates can get pretty hard so they want to make it easier for",
    "start": "230940",
    "end": "236640"
  },
  {
    "text": "customers to deploy to azure uh and ultimately they want to help customers become successful in Azure",
    "start": "236640",
    "end": "243659"
  },
  {
    "text": "self arm templates are proving a little bit complex and causing some issues they",
    "start": "243659",
    "end": "248760"
  },
  {
    "text": "want to try and mitigate that where people want it to be uh they have interviewed many many",
    "start": "248760",
    "end": "255659"
  },
  {
    "text": "um uh I guess customers MVPs people who are deploying to Azure program what might be the best approach if you're",
    "start": "255659",
    "end": "261239"
  },
  {
    "text": "familiar with palumi that's a programmatic language but and deploying to Azure um bicep isn't programmatic it's very",
    "start": "261239",
    "end": "267660"
  },
  {
    "text": "declarative it is this domain specific language kind of akin to terraform but it's not programmatic and that's by",
    "start": "267660",
    "end": "273780"
  },
  {
    "text": "Design because they wanted to make it that way based on the feedback that they got one of the most important things",
    "start": "273780",
    "end": "279120"
  },
  {
    "text": "though there is a day what's called Day Zero resource provider support so when something new comes out in azure",
    "start": "279120",
    "end": "285840"
  },
  {
    "text": "bicep like arm templates support it from day one there is no delay I know with",
    "start": "285840",
    "end": "290880"
  },
  {
    "text": "terraform for example you might get a bit of delay in the provider support for new uh resources particularly in preview",
    "start": "290880",
    "end": "296280"
  },
  {
    "text": "it's not the case with bicep just like it is with arm and I'm going to reiterate that consistently",
    "start": "296280",
    "end": "302759"
  },
  {
    "text": "but if they want to make something less problematic than arm templates but just as a powerful why don't they invest in",
    "start": "302759",
    "end": "308580"
  },
  {
    "text": "something like terraform and palumi and the short answer is they still are both",
    "start": "308580",
    "end": "313919"
  },
  {
    "text": "terraform palumi they're really good options to deploy to Azure and Microsoft does support them Microsoft itself is",
    "start": "313919",
    "end": "320040"
  },
  {
    "text": "investing in certain products for terraform that allows you to reverse",
    "start": "320040",
    "end": "325860"
  },
  {
    "text": "engineered resources back into terraform templates so they're more than happy for you to use any one of those they don't actually",
    "start": "325860",
    "end": "331860"
  },
  {
    "text": "care as long as you stick stuff in Azure you're good to go in Microsoft size but why not just improve arm templates",
    "start": "331860",
    "end": "339240"
  },
  {
    "text": "um and yes they could sort of do it but it'd be pretty disruptive right armed in place again core mechanic",
    "start": "339240",
    "end": "344580"
  },
  {
    "text": "lots of customers using him and bicep is an attempt to improve arm templates and it's so seamless as I hope that we'll",
    "start": "344580",
    "end": "350580"
  },
  {
    "text": "show you today that it is an improvement over arm templates and a good alternative but",
    "start": "350580",
    "end": "356639"
  },
  {
    "text": "it's not a version one so why would you use it a lot of companies and Microsoft is no exception",
    "start": "356639",
    "end": "362220"
  },
  {
    "text": "don't have a great history at you know non-v1 products being super Rock Solid",
    "start": "362220",
    "end": "367380"
  },
  {
    "text": "I'd like to say that I think this is azure version 0.3 which is a I think it",
    "start": "367380",
    "end": "373080"
  },
  {
    "text": "was May last year they deemed it as production ready it's currently at version 0.11. I've been using it since",
    "start": "373080",
    "end": "379800"
  },
  {
    "text": "version 0.42 deployed to production with zero issue the only thing and again I'm",
    "start": "379800",
    "end": "385620"
  },
  {
    "text": "going to demonstrate this later on is you can go from arm to buy say bicep to arm and even if something's not explicitly supported in bicep you can",
    "start": "385620",
    "end": "392039"
  },
  {
    "text": "still use bicep to produce arm templates to deploy this is 100 parody with what",
    "start": "392039",
    "end": "397080"
  },
  {
    "text": "can be accomplished with arm templates is supported by Microsoft planes and I guess the the main point here is",
    "start": "397080",
    "end": "403639"
  },
  {
    "text": "certainly in my opinion in Microsoft's opinion and eventually at the end of this hopefully in your opinion it's",
    "start": "403639",
    "end": "408720"
  },
  {
    "text": "going to be safe to use for production even though it's not at version one",
    "start": "408720",
    "end": "413900"
  },
  {
    "text": "how do you get started with it uh download install it becomes just a tool on your command line it's pretty easy to",
    "start": "414120",
    "end": "419759"
  },
  {
    "text": "do you can install it just as a singular tool which is how you just do the standard download install there's some",
    "start": "419759",
    "end": "426360"
  },
  {
    "text": "Powershell modules you can optionally use as well and you can install it into the Azure CLI as well so there's a few",
    "start": "426360",
    "end": "433680"
  },
  {
    "text": "ways to go about doing it all of them are identical in usage the Powershell version is a set of",
    "start": "433680",
    "end": "439319"
  },
  {
    "text": "commandlets so if you're more familiar with power tool prefer that way you can certainly do it",
    "start": "439319",
    "end": "444740"
  },
  {
    "text": "my personal preference and how I will be demonstrating things here today is using the Azure CLI or the integration with",
    "start": "445319",
    "end": "452160"
  },
  {
    "text": "Azure CLI and the reason I I prefer that way and I'd recommend it is that a",
    "start": "452160",
    "end": "457380"
  },
  {
    "text": "agency allows pretty good tool B it allows really easy upgrades it doesn't install it into your path and do this",
    "start": "457380",
    "end": "463919"
  },
  {
    "text": "kind of thing if you're already installed Azure CLI just Azure bicep install or upgrade and it will just go",
    "start": "463919",
    "end": "469860"
  },
  {
    "text": "along and do it you don't have to elevate The Prompt or anything like that um vs code extension for bicep extremely",
    "start": "469860",
    "end": "477660"
  },
  {
    "text": "powerful we'll have a look at that a bit later on as again my preferred way of doing it they recently I think was last",
    "start": "477660",
    "end": "483599"
  },
  {
    "text": "month released an extension for visual studio which you can also use it's not quite as functional as a vs code",
    "start": "483599",
    "end": "488759"
  },
  {
    "text": "extension but it is there in my opinion the visual studio is a tad heavy if",
    "start": "488759",
    "end": "495419"
  },
  {
    "text": "you're just doing bicep templates but you can do it",
    "start": "495419",
    "end": "499699"
  },
  {
    "text": "what does a bicep template look like and we'll get in some actual code in a second you can see we've got the",
    "start": "500759",
    "end": "507000"
  },
  {
    "text": "resource name um we've got the symbolic name so he's saying resource of a symbolic name in",
    "start": "507000",
    "end": "513000"
  },
  {
    "text": "this case my symbolic name not very exciting the resource type its API version and then some properties there",
    "start": "513000",
    "end": "520260"
  },
  {
    "text": "and we'll get into a bit more detail but one of the things to call out here is if you have a look at that it looks sort of json-like but you'll notice there's no",
    "start": "520260",
    "end": "525660"
  },
  {
    "text": "commas at the end and it's not using double quotes it's single quotes one of the um the design philosophies is",
    "start": "525660",
    "end": "532440"
  },
  {
    "text": "they want to minimize as much as possible and so when bicep produces arm templates it sticks in all the double",
    "start": "532440",
    "end": "537839"
  },
  {
    "text": "quotes and the commas but in their opinion them being the design team for bicep you don't need to put in commas",
    "start": "537839",
    "end": "544140"
  },
  {
    "text": "bicep can infer it so let's just save you a keystroke we're you know we're ultimately lazy which I am",
    "start": "544140",
    "end": "551160"
  },
  {
    "text": "in terms of first bicep template in fact I'll just uh uh yeah we'll go from here you can see here um this is actually for",
    "start": "551160",
    "end": "557940"
  },
  {
    "text": "a storage account you can see here we're declaring a resource of my symbolic name it's a",
    "start": "557940",
    "end": "563040"
  },
  {
    "text": "Microsoft Storage storage account at the API version we've got name location kind",
    "start": "563040",
    "end": "568399"
  },
  {
    "text": "and the skew type there you can see also that we're embedding comments in there pretty easy as well so again nice little",
    "start": "568399",
    "end": "575519"
  },
  {
    "text": "uh thing with especially with comments you know with complex deployments they can be very handy so bicep fully",
    "start": "575519",
    "end": "581339"
  },
  {
    "text": "supports them how does it translate to um an arm",
    "start": "581339",
    "end": "586380"
  },
  {
    "text": "template let's go one step further here so I'm going to",
    "start": "586380",
    "end": "593339"
  },
  {
    "text": "purple under basic call up my visual studio so this is the template that you see here",
    "start": "593339",
    "end": "600000"
  },
  {
    "text": "and if what I'm going to do is I'm going to say easy bicep",
    "start": "600000",
    "end": "605700"
  },
  {
    "text": "build file I think it was main but I'll show you",
    "start": "605700",
    "end": "610800"
  },
  {
    "text": "how to get into the demo oh come on okay",
    "start": "610800",
    "end": "616019"
  },
  {
    "text": "easy bicep and again I'm using the Azure CLI integration here so if I go version",
    "start": "616019",
    "end": "623060"
  },
  {
    "text": "it'll tell me the the bicep CLI version if I need an upgrade it'll tell me that to do an upgrade but currently I'm at",
    "start": "623399",
    "end": "629880"
  },
  {
    "text": "the the top so I'm going to go AC bicep build file",
    "start": "629880",
    "end": "634980"
  },
  {
    "text": "Main and hit enter if I flick back to visual",
    "start": "634980",
    "end": "640500"
  },
  {
    "text": "studio code you'll see here that a main.json has been produced and this is the template that gets produced",
    "start": "640500",
    "end": "648300"
  },
  {
    "text": "and you can see a standard template with a bit of metadata just to say hey I'm from bicep and you can see the type the",
    "start": "648300",
    "end": "654000"
  },
  {
    "text": "API version has been split out name location kind and skew and the properties as well and you can see it's",
    "start": "654000",
    "end": "659940"
  },
  {
    "text": "using double quotes and stuck in some commas and all that looks like a standard arm took like",
    "start": "659940",
    "end": "665339"
  },
  {
    "text": "cool that's how it starts to split things apart but just to prove my point here I've got I've created a script it's",
    "start": "665339",
    "end": "673500"
  },
  {
    "text": "going to build out the bicep that bicep file like I just did it's going to do a bit of cleanup which is not the",
    "start": "673500",
    "end": "679980"
  },
  {
    "text": "important part it's going to rename that main template that we just produced and that's going",
    "start": "679980",
    "end": "686339"
  },
  {
    "text": "to produce again we'll come back here to main two and then it's going to say bicep decompile that um template for me",
    "start": "686339",
    "end": "693420"
  },
  {
    "text": "which is going to create a main two dot bicep and then we'll have a look at the",
    "start": "693420",
    "end": "698519"
  },
  {
    "text": "difference so just to be clear I'm going from this compiling to arm and then I'm",
    "start": "698519",
    "end": "704760"
  },
  {
    "text": "telling saying hey bicep decompile it decompile that arm template back to bicep file so if I execute that script",
    "start": "704760",
    "end": "712800"
  },
  {
    "text": "if I can type go back here and eventually you'll see",
    "start": "712800",
    "end": "717959"
  },
  {
    "text": "the main two Json get produced and Main two bicep there we go",
    "start": "717959",
    "end": "723060"
  },
  {
    "text": "so have a look at Main two Json it's that template that we saw before we have a look at Main two bicep it",
    "start": "723060",
    "end": "729779"
  },
  {
    "text": "looks pretty much identical as the original one except for comments",
    "start": "729779",
    "end": "734880"
  },
  {
    "text": "main point here gone from bicep to arm to bicep seamlessly it's pretty easy and in fact",
    "start": "734880",
    "end": "741060"
  },
  {
    "text": "that's kind of what happens under the covers but because of the integration and you can see some",
    "start": "741060",
    "end": "748260"
  },
  {
    "text": "warnings in I'll talk to those a bit later on because of the integration with um Azure CLI I can do deployment uh",
    "start": "748260",
    "end": "756360"
  },
  {
    "text": "group create file main bicep and it'll just go off and do it for me I don't",
    "start": "756360",
    "end": "762240"
  },
  {
    "text": "have to compile it to arm and then and then till Azure CLI or Powershell to to um to deploy it if that makes sense",
    "start": "762240",
    "end": "770660"
  },
  {
    "text": "okay so we just did a build um or a compile of a bicep template one",
    "start": "775139",
    "end": "781800"
  },
  {
    "text": "of the things that I like to do in my CI CD pipelines is that prior to deployment is do exactly that dual build of your",
    "start": "781800",
    "end": "788160"
  },
  {
    "text": "bicep file and it will create a bunch of well it will error out if it's invalid",
    "start": "788160",
    "end": "793260"
  },
  {
    "text": "and I think like you saw before wrong one when I was doing the build",
    "start": "793260",
    "end": "800120"
  },
  {
    "text": "up Azure build",
    "start": "800120",
    "end": "804720"
  },
  {
    "text": "mine it would have come up with some linting errors and you can optionally use those",
    "start": "805320",
    "end": "812160"
  },
  {
    "text": "as part of the output and even fail on those if you choose but it will again we'll produce an error if you do a build",
    "start": "812160",
    "end": "818339"
  },
  {
    "text": "and your bicep file isn't valid and you can stop it before you even gets to a deployment stage",
    "start": "818339",
    "end": "825319"
  },
  {
    "text": "okay under part two",
    "start": "827519",
    "end": "830839"
  },
  {
    "text": "I'll cover the basic data types and parameters just again so we're all on the same page here let's not go there let's go to whoop",
    "start": "834120",
    "end": "844019"
  },
  {
    "text": "so enough for part one onto part two",
    "start": "844019",
    "end": "849079"
  },
  {
    "text": "variables in bicep uh it's not too hard to understand here we've got a parameter called environment",
    "start": "849480",
    "end": "856500"
  },
  {
    "text": "it's of type string it has a default value of Dev and we've got some comments after it another parameter type int a",
    "start": "856500",
    "end": "863880"
  },
  {
    "text": "default value of one two three this parameter is an array you can see we've got the square brackets there and",
    "start": "863880",
    "end": "871380"
  },
  {
    "text": "the only requirement here is it needs to be on a separate line you don't need to put a comma in in fact it'll have an error it just needs to be on a separate",
    "start": "871380",
    "end": "878160"
  },
  {
    "text": "line single quotes remember um similarly here we've got now those were parameters into the template I'm",
    "start": "878160",
    "end": "885480"
  },
  {
    "text": "constructing a variable that is an array and we've got the square brackets there I could actually",
    "start": "885480",
    "end": "891240"
  },
  {
    "text": "do things like this one two three create an object in there as well let it all be valid",
    "start": "891240",
    "end": "898339"
  },
  {
    "text": "we're creating a variable my ball which is true integer I've got a string",
    "start": "899279",
    "end": "905279"
  },
  {
    "text": "and we're creating an object here and fairly standard stuff the syntax is",
    "start": "905279",
    "end": "910980"
  },
  {
    "text": "pretty easy to understand again similar to arm and I guess some programming languages but just a little bit",
    "start": "910980",
    "end": "917279"
  },
  {
    "text": "different and need to be aware a little bit different here we've got a parameter which is an object but we've",
    "start": "917279",
    "end": "924540"
  },
  {
    "text": "decorated it with this secure decorator and that creates a secure object translating over to to amp similarly",
    "start": "924540",
    "end": "932279"
  },
  {
    "text": "here if you want a secure string we just created calling it a string and decorating it with secure",
    "start": "932279",
    "end": "939180"
  },
  {
    "text": "now if I go and do what I did before uh back I'm having to type in today",
    "start": "939180",
    "end": "946199"
  },
  {
    "text": "oh two",
    "start": "946199",
    "end": "951680"
  },
  {
    "text": "okay if I go and build that",
    "start": "952019",
    "end": "957660"
  },
  {
    "text": "uh [Music] flip back to vs code oh come on",
    "start": "957660",
    "end": "966560"
  },
  {
    "text": "thank you yeah where did you go",
    "start": "968459",
    "end": "974120"
  },
  {
    "text": "oh sorry I didn't do the f",
    "start": "974459",
    "end": "978320"
  },
  {
    "text": "you see I've just compiled sorry the bicep file into um traditional arm you can see it's",
    "start": "983459",
    "end": "990600"
  },
  {
    "text": "compiled out the parameters with an environment type string with the default value of Dev",
    "start": "990600",
    "end": "996199"
  },
  {
    "text": "and done what you would expect with sensitive object it's made it a secure object sensitive string secure string",
    "start": "996199",
    "end": "1001880"
  },
  {
    "text": "and you've got the variables for my array and there's other variables that we declare nothing too groundbreaking there but the",
    "start": "1001880",
    "end": "1008300"
  },
  {
    "text": "point being here what you're seeing is the the start or I guess the design velocity of being quite",
    "start": "1008300",
    "end": "1013639"
  },
  {
    "text": "succinct in in declaring things at least from a bicep perspective you will notice also in the vs code",
    "start": "1013639",
    "end": "1021320"
  },
  {
    "text": "editor here I've got some squigglies under this because it's saying well none of these variables or parameters are ever used so it's giving me some",
    "start": "1021320",
    "end": "1027319"
  },
  {
    "text": "warnings as well",
    "start": "1027319",
    "end": "1030039"
  },
  {
    "text": "uh onto operators so look The Operators here so slowly",
    "start": "1032720",
    "end": "1040699"
  },
  {
    "text": "that's very basic stuff obviously with the data types we're going to slowly introduce some some complexity",
    "start": "1040699",
    "end": "1046280"
  },
  {
    "text": "uh so here I've got a parameter and I've got a variable which is of type object and two properties in there as well I'm",
    "start": "1046280",
    "end": "1052820"
  },
  {
    "text": "here I'm declaring a integer of type 200. this variable I'm saying take that",
    "start": "1052820",
    "end": "1059120"
  },
  {
    "text": "variable and times it by a thousand twenty four three times",
    "start": "1059120",
    "end": "1064240"
  },
  {
    "text": "um and and that's obviously again quite easy to understand but we'll have a look at the difference that is produced in an arm template but that's you know like I",
    "start": "1065299",
    "end": "1071720"
  },
  {
    "text": "said quite easy this coalescing operator here we're saying if some object property is",
    "start": "1071720",
    "end": "1077960"
  },
  {
    "text": "null then give it a value of one two three else just retain the prop one value in this case it is null so it's",
    "start": "1077960",
    "end": "1083299"
  },
  {
    "text": "going to be one two three this is prod variable saying well if environment is equal to PRD and we've",
    "start": "1083299",
    "end": "1090320"
  },
  {
    "text": "passed an environment up here then is prod is going to be true else is prod is going to be false",
    "start": "1090320",
    "end": "1095960"
  },
  {
    "text": "we can then go a bit further and use a ternary operator and so right well if his prod is true then VM series is going",
    "start": "1095960",
    "end": "1103460"
  },
  {
    "text": "to equal that else VM series is going to equal that and so in this case we might be saying",
    "start": "1103460",
    "end": "1109880"
  },
  {
    "text": "well if it's probable use a higher spec VM to the standard B series VM",
    "start": "1109880",
    "end": "1116120"
  },
  {
    "text": "and then we're doing some outputs here we're saying all right the output for the SQL capacity figure is an integer",
    "start": "1116120",
    "end": "1121280"
  },
  {
    "text": "and it's equal to that value which we calculated up here is production is of type Bool and SQL to",
    "start": "1121280",
    "end": "1127400"
  },
  {
    "text": "that variable value and etc for the rest of them I'll do the same again so I'm going to",
    "start": "1127400",
    "end": "1133820"
  },
  {
    "text": "compile I'll go the right directory first there's a bicep build",
    "start": "1133820",
    "end": "1140419"
  },
  {
    "text": "if whatever the file name was operators just to see how that comes out",
    "start": "1140419",
    "end": "1147799"
  },
  {
    "text": "because again quite easy to understand now and come on you can do it",
    "start": "1147799",
    "end": "1153260"
  },
  {
    "text": "oh I did it again oh no mistype fat fingers",
    "start": "1153260",
    "end": "1158919"
  },
  {
    "text": "all right we've got operators Jason so we've produced an arm template you",
    "start": "1161780",
    "end": "1167299"
  },
  {
    "text": "can see we've got those parameters and variables that we described before capaciting gigabyte is 200 fairly easy",
    "start": "1167299",
    "end": "1173360"
  },
  {
    "text": "the SQL capacity value where we times it by 1024 three times you can see that",
    "start": "1173360",
    "end": "1179299"
  },
  {
    "text": "that's again not super hard to understand but certainly not as clear as in the bicep version",
    "start": "1179299",
    "end": "1185660"
  },
  {
    "text": "and same for the rest of it the coalescing operator you can understand what it's doing does it look nice does",
    "start": "1185660",
    "end": "1190880"
  },
  {
    "text": "it hurt my eyes yes it's still not that it works but not nice same with the is pride if it equals PRD then that's true",
    "start": "1190880",
    "end": "1197900"
  },
  {
    "text": "else that it's false and then the ternary operator that you saw in bicep equates to this thing in arm templates",
    "start": "1197900",
    "end": "1205039"
  },
  {
    "text": "and your outputs there fairly verbose as armies want to be again main point we go",
    "start": "1205039",
    "end": "1210679"
  },
  {
    "text": "flick back to this one this looks and feels much neater um",
    "start": "1210679",
    "end": "1216080"
  },
  {
    "text": "template Messier",
    "start": "1216080",
    "end": "1219580"
  },
  {
    "text": "okay we're going to build on that again and for that",
    "start": "1223520",
    "end": "1228980"
  },
  {
    "text": "I will go to the right directory again",
    "start": "1228980",
    "end": "1232960"
  },
  {
    "text": "and go to vs code so let's have a look at Maine in this",
    "start": "1235520",
    "end": "1242179"
  },
  {
    "text": "instance whoops right track pads I hate them um so this is a more still a simple but",
    "start": "1242179",
    "end": "1249080"
  },
  {
    "text": "more typical bicep template we're defining a location parameter of type string",
    "start": "1249080",
    "end": "1254960"
  },
  {
    "text": "we're saying R but it's of type it's default values of type the location of",
    "start": "1254960",
    "end": "1260000"
  },
  {
    "text": "the resource Group if I hit control space c you can see there's a few other properties I can do with the",
    "start": "1260000",
    "end": "1265640"
  },
  {
    "text": "resource Group similar to the resource Group function in arm templates",
    "start": "1265640",
    "end": "1270799"
  },
  {
    "text": "um but a little more readable we have an environment parameter of type string but",
    "start": "1270799",
    "end": "1276260"
  },
  {
    "text": "we're saying the only allowed values are Dev uat and prod Min length of three max length of four with those decorators",
    "start": "1276260",
    "end": "1284860"
  },
  {
    "text": "now we're starting to use some custom functions here so we're creating a unique part we're using the unique string function we're seating it with",
    "start": "1285200",
    "end": "1291799"
  },
  {
    "text": "the resource Group ID all that's going to do is just create a resource sorry a unique string that is",
    "start": "1291799",
    "end": "1298520"
  },
  {
    "text": "unique within that Resource Group it gives you a 13 or 14 character string again you can do that in arm templates",
    "start": "1298520",
    "end": "1303740"
  },
  {
    "text": "but it's the syntax here is pretty easy what's a little bit more interesting is we're doing some string interpolation",
    "start": "1303740",
    "end": "1309679"
  },
  {
    "text": "here so we're going all right the storage account name starts with my STG we've done the dollar dollar sign open",
    "start": "1309679",
    "end": "1318080"
  },
  {
    "text": "um uh squiggly bracket environment and same for The Unique part",
    "start": "1318080",
    "end": "1324440"
  },
  {
    "text": "so if I start typing your neck part in there you can see I get that and so that's",
    "start": "1324440",
    "end": "1329659"
  },
  {
    "text": "we're doing some some nice string interpolation there which again in arm templates a bit messy and we'll do the",
    "start": "1329659",
    "end": "1335059"
  },
  {
    "text": "whole compilation bit now creating this uh storage Resource Group I'm using that variable at the",
    "start": "1335059",
    "end": "1342080"
  },
  {
    "text": "location which we passed in as a parameter and in this cases of type blob storage",
    "start": "1342080",
    "end": "1347960"
  },
  {
    "text": "one of the cool things you can do here is you'll get some intellisense for blob",
    "start": "1347960",
    "end": "1354020"
  },
  {
    "text": "storage or for the in this case the client there's a lot of intellisense for all the supported stuff within bicep for",
    "start": "1354020",
    "end": "1360200"
  },
  {
    "text": "stuff that's not supported you simply don't get intellisense but it won't actually stop you from doing it which is why",
    "start": "1360200",
    "end": "1366080"
  },
  {
    "text": "if things aren't explicitly supported in bicep and it's rare you can still do them in bicep and have support from",
    "start": "1366080",
    "end": "1372799"
  },
  {
    "text": "templates and we're doing an output variable here of type string setting it to the storage",
    "start": "1372799",
    "end": "1379640"
  },
  {
    "text": "account name now like this is the one that I've constructed up here as a variable I",
    "start": "1379640",
    "end": "1385340"
  },
  {
    "text": "could use this symbolic name down here and say dot",
    "start": "1385340",
    "end": "1390679"
  },
  {
    "text": "and I can go to name if I like oh there it is I'll come back",
    "start": "1390679",
    "end": "1397520"
  },
  {
    "text": "hang on there we go so I could use the name of it here and you can see a whole bunch of other",
    "start": "1397520",
    "end": "1402980"
  },
  {
    "text": "properties off the symbolic name that's why we need the symbolic name for later references if you want to reference tags",
    "start": "1402980",
    "end": "1408620"
  },
  {
    "text": "and the properties and things like that so that's just as valid",
    "start": "1408620",
    "end": "1414200"
  },
  {
    "text": "now what we're doing here is deploying a new resource in this case a storage account what if I want to do an existing",
    "start": "1414200",
    "end": "1419600"
  },
  {
    "text": "resource you know I'm template to use things like resource ID to get the ID and stuff like that",
    "start": "1419600",
    "end": "1425600"
  },
  {
    "text": "if I want to do an exist oh God trackpads are going to kill me um",
    "start": "1425600",
    "end": "1431120"
  },
  {
    "text": "this is a new resource but for an existing resource we use the same resource keyword symbolic name it's type",
    "start": "1431120",
    "end": "1438039"
  },
  {
    "text": "the only difference that we do is moving along if you use the existing keyword",
    "start": "1438039",
    "end": "1443600"
  },
  {
    "text": "here equals and then we just provide the name of it so I can reference an existing storage",
    "start": "1443600",
    "end": "1450320"
  },
  {
    "text": "account I can refer and that's in the same Resource Group we'll talk about Scopes a bit later on",
    "start": "1450320",
    "end": "1457100"
  },
  {
    "text": "we're deferring to defaulting to the same scope which is a one Resource Group but",
    "start": "1457100",
    "end": "1462799"
  },
  {
    "text": "if I want to reference an existing resource in another Resource Group",
    "start": "1462799",
    "end": "1468020"
  },
  {
    "text": "again we use the existing keyboard keyword and we give it the name of the storage account and this time the scope",
    "start": "1468020",
    "end": "1473480"
  },
  {
    "text": "of type Resource Group and the name of the resource Group similar thing for in another",
    "start": "1473480",
    "end": "1478820"
  },
  {
    "text": "subscription in another Resource Group we just use the existing keyword at the end there",
    "start": "1478820",
    "end": "1484820"
  },
  {
    "text": "and use its name in the resource Group and we give it give it an output",
    "start": "1484820",
    "end": "1490840"
  },
  {
    "text": "now I'll do a compile or build of that",
    "start": "1491480",
    "end": "1497020"
  },
  {
    "text": "um and that was existing I think",
    "start": "1497480",
    "end": "1503539"
  },
  {
    "text": "yep cooled into the plane you should get a new file there there it is",
    "start": "1503539",
    "end": "1509360"
  },
  {
    "text": "and so you can see um for parameter we've got the resource Group dot location",
    "start": "1509360",
    "end": "1515120"
  },
  {
    "text": "unique string function where we did the string interpolation we've got you know",
    "start": "1515120",
    "end": "1520820"
  },
  {
    "text": "this what I consider ugly kind of stuff but it works",
    "start": "1520820",
    "end": "1527320"
  },
  {
    "text": "um and uh all the rest of it in there so it's not too dissimilar but um it is",
    "start": "1527600",
    "end": "1533840"
  },
  {
    "text": "uh simpler I would say",
    "start": "1533840",
    "end": "1539659"
  },
  {
    "text": "and the reason it's actually lifted out is because we're not left out the existing types is because we're not actually using it anyway so it's done",
    "start": "1539659",
    "end": "1546919"
  },
  {
    "text": "some efficiency for us now the other one I wanted to call out just very quickly",
    "start": "1546919",
    "end": "1553400"
  },
  {
    "text": "um this depends on example and I'll I'll just go through this template very briefly we've got some parameters I've",
    "start": "1553400",
    "end": "1559400"
  },
  {
    "text": "got variables to determine a function name in app service name again using string interpolation",
    "start": "1559400",
    "end": "1565400"
  },
  {
    "text": "we've got a storage account name we have a storage account there and down here we're creating an app service",
    "start": "1565400",
    "end": "1573260"
  },
  {
    "text": "a function app and that function app is referencing the",
    "start": "1573260",
    "end": "1578779"
  },
  {
    "text": "app service ID and it's also referencing storage account name",
    "start": "1578779",
    "end": "1584380"
  },
  {
    "text": "and the environment suffixes and we're actually getting the storage",
    "start": "1584380",
    "end": "1590539"
  },
  {
    "text": "account Keys the very first key in its value I'll talk to that those functions",
    "start": "1590539",
    "end": "1595640"
  },
  {
    "text": "a bit more later on but suffice to say that this resource is referencing a bunch of other resources",
    "start": "1595640",
    "end": "1600860"
  },
  {
    "text": "up there so if we go and do the same thing we're going to compile that we'll build that",
    "start": "1600860",
    "end": "1608860"
  },
  {
    "text": "the pins and we should get the adjacent for that",
    "start": "1610279",
    "end": "1617419"
  },
  {
    "text": "we'll get the expected Json stuff or the arm template stuff but if we scroll on down here",
    "start": "1617419",
    "end": "1624440"
  },
  {
    "text": "you'll notice that there's a whole bunch of depends on that bicep has automatically put those dependencies in",
    "start": "1624440",
    "end": "1629840"
  },
  {
    "text": "for us we haven't had to do it it's inferred that based on how we've used it and said all right you're referencing",
    "start": "1629840",
    "end": "1635059"
  },
  {
    "text": "properties from another symbolic name I'm going to put the depends on in there for you",
    "start": "1635059",
    "end": "1640460"
  },
  {
    "text": "if and I could do this manually as well I could go down here",
    "start": "1640460",
    "end": "1646720"
  },
  {
    "text": "and say depends on and say app service",
    "start": "1646720",
    "end": "1655159"
  },
  {
    "text": "and it'll allow me to do that but it will give me a little squiggly and say well you kind of don't need to because I'm really clever and I can do it for",
    "start": "1655159",
    "end": "1661340"
  },
  {
    "text": "you okay moving on",
    "start": "1661340",
    "end": "1670000"
  },
  {
    "text": "you know we did that one you saw some of the functions in that bicep template there now that was only a few I certainly",
    "start": "1672740",
    "end": "1679340"
  },
  {
    "text": "don't have time to go through or bore you I guess to go through every single function would be a pretty dry talk but",
    "start": "1679340",
    "end": "1684740"
  },
  {
    "text": "this is the list of functions that are currently available in fact there's probably a few more um suffice to say that there is a hell",
    "start": "1684740",
    "end": "1691640"
  },
  {
    "text": "of a lot there some of them directly translate into their arm template counterparts some do not some do some arm template",
    "start": "1691640",
    "end": "1699679"
  },
  {
    "text": "magic and we'll see some of those a bit later on which kind of bend on to its will so to speak but there is quite quite a lot of functions there",
    "start": "1699679",
    "end": "1707559"
  },
  {
    "text": "this is where I think um bicep really shows its strength is in the use of modules",
    "start": "1707779",
    "end": "1714980"
  },
  {
    "text": "and what you've been seeing there is that bicep files is every bicep file is a module you can reuse those to your",
    "start": "1714980",
    "end": "1721340"
  },
  {
    "text": "heart's content and the way you use those is you've reference them with a module keyword you can see on the screen",
    "start": "1721340",
    "end": "1727100"
  },
  {
    "text": "here you've got the module keyword again the symbolic name the name of the file",
    "start": "1727100",
    "end": "1732140"
  },
  {
    "text": "and then you've got the name in this case of the the module or the deployment as it were",
    "start": "1732140",
    "end": "1738440"
  },
  {
    "text": "and then some parameters that are passed in to that that bicep file",
    "start": "1738440",
    "end": "1744020"
  },
  {
    "text": "and let's have a look at that in more detail",
    "start": "1744020",
    "end": "1747940"
  },
  {
    "text": "close down all of this stuff",
    "start": "1749360",
    "end": "1753278"
  },
  {
    "text": "no no thank you",
    "start": "1754820",
    "end": "1759220"
  },
  {
    "text": "so let's have a look here at the main file we've got some parameters all good",
    "start": "1763279",
    "end": "1769460"
  },
  {
    "text": "um passwords secure string username some allowed values for the environment",
    "start": "1769460",
    "end": "1776120"
  },
  {
    "text": "and we're referencing module calling it the app service and it's the app service bicep if we go into app service bicep",
    "start": "1776120",
    "end": "1783200"
  },
  {
    "text": "have a look at that it itself has a whole bunch of parameters similar to what you saw before we've got",
    "start": "1783200",
    "end": "1789200"
  },
  {
    "text": "an app service plan that's been created the app service itself and some output",
    "start": "1789200",
    "end": "1794600"
  },
  {
    "text": "values looking back at I'm sorry look going back up the top here you can see all those parameters there in the main",
    "start": "1794600",
    "end": "1801679"
  },
  {
    "text": "that's what we're specifying here for the ones that have default values it isn't necessary to specified although",
    "start": "1801679",
    "end": "1807740"
  },
  {
    "text": "you can so if I go here and says all right well you've got a parameter of uh skew or Linux FX version",
    "start": "1807740",
    "end": "1814760"
  },
  {
    "text": "I can provide a value there",
    "start": "1814760",
    "end": "1818140"
  },
  {
    "text": "it's going down I've got a storage account and I'm referencing the storage bicep file",
    "start": "1820340",
    "end": "1826279"
  },
  {
    "text": "and that's pretty simple looking again at Main a bit further on down",
    "start": "1826279",
    "end": "1832159"
  },
  {
    "text": "I'll talk to this in a second and you've seen it before I'm doing referencing a VM module and that VM bicep file is a",
    "start": "1832159",
    "end": "1840620"
  },
  {
    "text": "little bit larger because that's what VMS do I won't go into a lot of detail there but you can see a whole bunch of variables network interfaces nsgs v-net",
    "start": "1840620",
    "end": "1849140"
  },
  {
    "text": "subnets and eventually the the VM itself main point here though is I'm",
    "start": "1849140",
    "end": "1854480"
  },
  {
    "text": "referencing it as a module passing in any specific parameters that I want but",
    "start": "1854480",
    "end": "1859880"
  },
  {
    "text": "I'm being a little bit clever here and I've just introduced something a little bit more in addition to modules I'm saying all right let's try and make this",
    "start": "1859880",
    "end": "1866179"
  },
  {
    "text": "true or false if the environment passed in is p r o d and if we go back up here",
    "start": "1866179",
    "end": "1871480"
  },
  {
    "text": "they only allow values at Dev uat and pro-d ice this will be true if it is that",
    "start": "1871480",
    "end": "1878059"
  },
  {
    "text": "value and this is saying like you saw with the existing keyword if it's production then deploy this VM",
    "start": "1878059",
    "end": "1885380"
  },
  {
    "text": "if it's not production that won't get deployed so we're starting to look into some conditional deployments in addition",
    "start": "1885380",
    "end": "1892159"
  },
  {
    "text": "and again this is where I think bicep has its superpowers the use of modules here for those familiar with terraform",
    "start": "1892159",
    "end": "1897799"
  },
  {
    "text": "they already have the concept of modules a little bit different but I'm separating out my concerns app",
    "start": "1897799",
    "end": "1903500"
  },
  {
    "text": "service here storage here and VM here",
    "start": "1903500",
    "end": "1909919"
  },
  {
    "text": "in addition if you're going to look at the bottom here some of the outputs I'm referencing the modules",
    "start": "1909919",
    "end": "1915340"
  },
  {
    "text": "symbolic name looking at outputs in fact let's go outputs oop come back",
    "start": "1915340",
    "end": "1923260"
  },
  {
    "text": "I can reference its name or its outputs and you can see we've got app service name and app service plan name so it's",
    "start": "1926059",
    "end": "1931880"
  },
  {
    "text": "gone into that file it knows what the outputs are it's giving me intellisense based off that",
    "start": "1931880",
    "end": "1936919"
  },
  {
    "text": "that to me is is quite powerful because and let me at least try and give you the",
    "start": "1936919",
    "end": "1943220"
  },
  {
    "text": "boom moment um we want",
    "start": "1943220",
    "end": "1949960"
  },
  {
    "text": "easy bicep so let me show you what that looks like as an arm template because remember it's all seamlessly",
    "start": "1954080",
    "end": "1960200"
  },
  {
    "text": "interoperable with arm templates so I think it was Maine yep",
    "start": "1960200",
    "end": "1966140"
  },
  {
    "text": "let's go have a look we should get a main.json when we do so remember we've",
    "start": "1966140",
    "end": "1971419"
  },
  {
    "text": "gone from Main bicep which is relatively small we've got three referencing three",
    "start": "1971419",
    "end": "1977179"
  },
  {
    "text": "modules in there um to this main.json if we have a look at that you can probably see over the",
    "start": "1977179",
    "end": "1983179"
  },
  {
    "text": "right here let's just scroll down for a bit of quick reading and what it started is it's embedded",
    "start": "1983179",
    "end": "1989120"
  },
  {
    "text": "each of one of those files as a specific deployment object within the arm template so we've",
    "start": "1989120",
    "end": "1995779"
  },
  {
    "text": "got a deployment it's a type incremental it's the app service deployment you have a look here and here's the full arm",
    "start": "1995779",
    "end": "2001480"
  },
  {
    "text": "template embedded and we scroll on down a bit longer we've got another deployment this is the storage",
    "start": "2001480",
    "end": "2007779"
  },
  {
    "text": "deployment again incremental mode and we've got that full arm template in there",
    "start": "2007779",
    "end": "2014279"
  },
  {
    "text": "and we've just screwed over the the vm1 the final one with another deployment VM",
    "start": "2014279",
    "end": "2019299"
  },
  {
    "text": "deployment and again the full arm template you know it's not it's not pretty reading uh it's pretty ugly",
    "start": "2019299",
    "end": "2026140"
  },
  {
    "text": "actually and it's while it's powerful as an arm template concept um authoring these is is quite painful",
    "start": "2026140",
    "end": "2033279"
  },
  {
    "text": "bicep has allowed you to separate out your concerns here reduce the complexity",
    "start": "2033279",
    "end": "2038799"
  },
  {
    "text": "of your main template separate out into separate bicep files but still maintain full compatibility with arm which again",
    "start": "2038799",
    "end": "2045039"
  },
  {
    "text": "I believe it's just super power you're you're reducing the complexity therefore you're making it simpler to deploy",
    "start": "2045039",
    "end": "2050200"
  },
  {
    "text": "reducing errors making your deployments more successful in azure",
    "start": "2050200",
    "end": "2056399"
  },
  {
    "text": "which brings us now to a solution structure with arm templates it's not that easy you can do sort of um separate",
    "start": "2061720",
    "end": "2068980"
  },
  {
    "text": "files with arm templates it's not a nice experience you can use things like template specs to build it all together",
    "start": "2068980",
    "end": "2074339"
  },
  {
    "text": "but it's still there's still some friction involved because you've still got to deploy that you've got to maybe put in a resource Group even or a",
    "start": "2074339",
    "end": "2080980"
  },
  {
    "text": "publicly accessible URL for link templates which are is arm hell in my opinion",
    "start": "2080980",
    "end": "2086740"
  },
  {
    "text": "but with bicep you can just come up with simple um uh solution structures like this so you've got your main bicep file which",
    "start": "2086740",
    "end": "2092740"
  },
  {
    "text": "you'll see as a general pattern from the bicep thing you don't have to call it main bicep but you'll see that used most",
    "start": "2092740",
    "end": "2098380"
  },
  {
    "text": "often you can just have main bicep referencing the resource files in the same directory or you can separate it",
    "start": "2098380",
    "end": "2103839"
  },
  {
    "text": "out by directory it's it's really up to you again as you get more complex separating It Out by directory could be",
    "start": "2103839",
    "end": "2109180"
  },
  {
    "text": "quite beneficial because you're you're separating out into the areas where it makes sense and so if you're a team working on a big massive deployment this",
    "start": "2109180",
    "end": "2115599"
  },
  {
    "text": "could be very helpful uh we talked about the conditional deployment there",
    "start": "2115599",
    "end": "2122020"
  },
  {
    "text": "um we're going to look a bit more at conditions and again it should hopefully I should have kept that going there you",
    "start": "2122020",
    "end": "2127839"
  },
  {
    "text": "go so let's close this gym",
    "start": "2127839",
    "end": "2133560"
  },
  {
    "text": "so if the modules aspect wasn't enough at least it should have been a little bit this should hopefully push you over",
    "start": "2139599",
    "end": "2145420"
  },
  {
    "text": "the line a bit more so what we're going to do here is I'm going to deploy a SQL Server well I'm",
    "start": "2145420",
    "end": "2152440"
  },
  {
    "text": "not going to deploy it but because it'll take too long because SQL server and a SQL database",
    "start": "2152440",
    "end": "2158440"
  },
  {
    "text": "and what I've got up here in the database SKU is a variable",
    "start": "2158440",
    "end": "2164680"
  },
  {
    "text": "or an object actually a variable that contains an object that has a Dev object a uat object and a prod object in it",
    "start": "2164680",
    "end": "2170859"
  },
  {
    "text": "with all similar properties that are describing the database skew",
    "start": "2170859",
    "end": "2176200"
  },
  {
    "text": "going down a bit further I've got database skew properties the collation Max size bytes and Zone redundancy",
    "start": "2176200",
    "end": "2182560"
  },
  {
    "text": "settings again for Dev uat and prod so another three objects in another",
    "start": "2182560",
    "end": "2187780"
  },
  {
    "text": "variable down here for not the SQL server but for",
    "start": "2187780",
    "end": "2193359"
  },
  {
    "text": "the SQL database I've got the resource type you know the API version I'm doing",
    "start": "2193359",
    "end": "2198940"
  },
  {
    "text": "some interpolation for the name location but for the skew and properties I'm referencing the database skew",
    "start": "2198940",
    "end": "2206200"
  },
  {
    "text": "variable by its indexer and I'm passing in the environment parameter and that",
    "start": "2206200",
    "end": "2211540"
  },
  {
    "text": "environment parameter back up the top only has the same allowed values which are in our variables here",
    "start": "2211540",
    "end": "2219640"
  },
  {
    "text": "so I'm kind of extracting out the database skew and skew properties into an area that is in the same location at",
    "start": "2219640",
    "end": "2227200"
  },
  {
    "text": "least all in the same area it's easy to see the difference between Dev uat and prod I don't need separate templates or",
    "start": "2227200",
    "end": "2233140"
  },
  {
    "text": "anything like that and then I'm just referencing it down here I could optionally if I wanted to",
    "start": "2233140",
    "end": "2238780"
  },
  {
    "text": "explicitly do it just do whee and prod but because I'm passing it as a parameter I get to take",
    "start": "2238780",
    "end": "2245140"
  },
  {
    "text": "advantage of that way it's not bad we're making a little bit simple um I could do it a different way as well",
    "start": "2245140",
    "end": "2251680"
  },
  {
    "text": "for example down here I could say well the database skew if it's production you know has these properties else it has",
    "start": "2251680",
    "end": "2257740"
  },
  {
    "text": "these properties still a bit messy in my opinion we can do better than that",
    "start": "2257740",
    "end": "2262900"
  },
  {
    "text": "if I go to this file here what we're going to do so the same thing",
    "start": "2262900",
    "end": "2268240"
  },
  {
    "text": "again same parameters up here for environment and so forth what I'm doing for the skus and skew",
    "start": "2268240",
    "end": "2274300"
  },
  {
    "text": "properties though is I'm using a function called load Json content and I'm specifying this SKU settings",
    "start": "2274300",
    "end": "2280540"
  },
  {
    "text": "directory and in this case dbsq.json if we just have a quick look at that this",
    "start": "2280540",
    "end": "2286420"
  },
  {
    "text": "is your standard Json file it requires all the regular things that a Json file does you've got apostrophes",
    "start": "2286420",
    "end": "2291820"
  },
  {
    "text": "commas in there all that kind of stuff but you can see we've listed out all the the dev uat and prod skew Properties or",
    "start": "2291820",
    "end": "2299440"
  },
  {
    "text": "SKU settings and skew properties in this other file here as well so we've got another file",
    "start": "2299440",
    "end": "2305320"
  },
  {
    "text": "um just Json file with Dev uat and prod objects in it with the the subsequent properties that you saw before",
    "start": "2305320",
    "end": "2312760"
  },
  {
    "text": "now going back here though oh not that one they're on we're just loading those",
    "start": "2312760",
    "end": "2318280"
  },
  {
    "text": "in from a file so it's not part of this template making the template very very small and we're referencing it in",
    "start": "2318280",
    "end": "2325000"
  },
  {
    "text": "exactly the same way okay if I do",
    "start": "2325000",
    "end": "2330099"
  },
  {
    "text": "a DOT here you'll see wat and prod now if I go to um just so you know that I'm not lying",
    "start": "2330099",
    "end": "2336880"
  },
  {
    "text": "to you if I go here and I'll copy and say this guy",
    "start": "2336880",
    "end": "2342900"
  },
  {
    "text": "uh put a comma there so it's valid and we'll say mgc",
    "start": "2344619",
    "end": "2351940"
  },
  {
    "text": "save that away I'll go back to conditions two and I'll hit a DOT uh",
    "start": "2351940",
    "end": "2358180"
  },
  {
    "text": "it's NDC so you can see it's going off to and this is more the extension than bicep but I'll show you how this magic",
    "start": "2358180",
    "end": "2365079"
  },
  {
    "text": "happens in an arm template um bicep and extension in this case is going into the uh the file the Json file",
    "start": "2365079",
    "end": "2371980"
  },
  {
    "text": "for you and providing you some nice intellisense but more importantly you're able to again strip out more complexity",
    "start": "2371980",
    "end": "2378520"
  },
  {
    "text": "of your template into a separate file in this case I'm just group all the skus together so if I ever wanted to change",
    "start": "2378520",
    "end": "2384880"
  },
  {
    "text": "it I can just go into that without having to touch the main template at all I think that stuff is really powerful",
    "start": "2384880",
    "end": "2390820"
  },
  {
    "text": "but let's have a look at because that's not really native when it comes to arm",
    "start": "2390820",
    "end": "2395920"
  },
  {
    "text": "templates let's go have a look at how it actually does that so we're in damage seven",
    "start": "2395920",
    "end": "2403619"
  },
  {
    "text": "easy bicep build F conditions number two",
    "start": "2407200",
    "end": "2415420"
  },
  {
    "text": "let's go back into vs code and have a look at the magic happen so we've compiled that down let's have a",
    "start": "2415420",
    "end": "2420940"
  },
  {
    "text": "look in conditions to arm template got some parameters not exciting",
    "start": "2420940",
    "end": "2426460"
  },
  {
    "text": "but we do notice some variables here we've got this weirdly named variable that contains Dev uat and pride and a",
    "start": "2426460",
    "end": "2435220"
  },
  {
    "text": "bit later down or nndc of course um and we've got another wheelie name",
    "start": "2435220",
    "end": "2441160"
  },
  {
    "text": "variable Dev uat Pride um again those same Json files that you",
    "start": "2441160",
    "end": "2448900"
  },
  {
    "text": "saw before it's embedding them in the arm template as variables and then it can go and",
    "start": "2448900",
    "end": "2455500"
  },
  {
    "text": "reference them later as the SKU and properties you can see",
    "start": "2455500",
    "end": "2461740"
  },
  {
    "text": "it's doing stuff there in fact I missed a bit here so everyone's Circ where were you it was a very",
    "start": "2461740",
    "end": "2470740"
  },
  {
    "text": "got that one oh yeah sorry there it is so DB skus referencing that variable there dbsq properties referencing that",
    "start": "2470740",
    "end": "2478119"
  },
  {
    "text": "variable and then it references it down here so what um bicep is doing in this case",
    "start": "2478119",
    "end": "2484660"
  },
  {
    "text": "is taking arm in a bit of a headlock twisting it around and making it do its its evil bidding but ultimately making",
    "start": "2484660",
    "end": "2490599"
  },
  {
    "text": "it nice and easy for you from a bicep perspective because you've separated out into Json files separated into separate",
    "start": "2490599",
    "end": "2497020"
  },
  {
    "text": "resource modules and utilize modules to get it all done but still 100 compatible",
    "start": "2497020",
    "end": "2502119"
  },
  {
    "text": "with arm making it simple making it less complex much easier to maintain and",
    "start": "2502119",
    "end": "2507400"
  },
  {
    "text": "again I think that in addition to the modules is is by far and away a massive improvement over arm",
    "start": "2507400",
    "end": "2514980"
  },
  {
    "text": "okay we talked about that bit but uh yeah just a Ram at home um uh surprised cat gif well not quite a",
    "start": "2518440",
    "end": "2525339"
  },
  {
    "text": "gif image but like Jason that's one of the an example of one of the functions where",
    "start": "2525339",
    "end": "2530380"
  },
  {
    "text": "that's not native to um to arm but it does create some bicep does the magic behind the scenes to make arm uh work",
    "start": "2530380",
    "end": "2537460"
  },
  {
    "text": "the way that you think it should yeah we did that one all right just",
    "start": "2537460",
    "end": "2542680"
  },
  {
    "text": "quickly I think we're only doing for time yep just quickly on Loops I won't go into too much detail here because the",
    "start": "2542680",
    "end": "2548859"
  },
  {
    "text": "next part is um I think a little more valuable in terms of loops",
    "start": "2548859",
    "end": "2555579"
  },
  {
    "text": "uh if you cast your mind back to um conditional deployments or existing resources Loops are done kind of similar",
    "start": "2555579",
    "end": "2561780"
  },
  {
    "text": "so let's have a look at how they're done so again we'll create um",
    "start": "2561780",
    "end": "2566800"
  },
  {
    "text": "up here we've got a variable we've got a string and you say star array",
    "start": "2566800",
    "end": "2572500"
  },
  {
    "text": "open square bracket then we've got for I in range zero to three a little uh colon",
    "start": "2572500",
    "end": "2579040"
  },
  {
    "text": "and then some string interpolation here and closing the square bracket so the open square bracket close square bracket",
    "start": "2579040",
    "end": "2585819"
  },
  {
    "text": "is where you're going to declare a loop and we're using a range function in there uh fairly easy to understand",
    "start": "2585819",
    "end": "2591540"
  },
  {
    "text": "programmatic syntax obviously that will go from zero to three and you'll get at",
    "start": "2591540",
    "end": "2596619"
  },
  {
    "text": "the end of the day this output here so stuff zero stuff one stuff three",
    "start": "2596619",
    "end": "2602440"
  },
  {
    "text": "because that's where it's doing some string interpolation and add a bit of computation there as well",
    "start": "2602440",
    "end": "2607900"
  },
  {
    "text": "using that to create say multiple resources for example resource symbolic name the type in this case",
    "start": "2607900",
    "end": "2614619"
  },
  {
    "text": "we're going to create a few IP addresses equals now normally we'd see the existing keyword or the conditional",
    "start": "2614619",
    "end": "2620500"
  },
  {
    "text": "deployment we're sticking in the loop construct for index in range one to three",
    "start": "2620500",
    "end": "2626920"
  },
  {
    "text": "Open Bracket and then you've got your regular bicep syntax in there damn it",
    "start": "2626920",
    "end": "2633460"
  },
  {
    "text": "and the close of the square bracket there and so all that will get done",
    "start": "2633460",
    "end": "2639460"
  },
  {
    "text": "effectively three times okay that's the uh the simple version of the",
    "start": "2639460",
    "end": "2646540"
  },
  {
    "text": "syntax a little bit more you can do so if you wanted to um reference not just the index for example but the item",
    "start": "2646540",
    "end": "2653140"
  },
  {
    "text": "within an array we've got a web app list it's got two objects in there I'm creating I'm going to create a few",
    "start": "2653140",
    "end": "2659859"
  },
  {
    "text": "apps or two app services in this case so again the resource",
    "start": "2659859",
    "end": "2665099"
  },
  {
    "text": "symbolic name type open square bracket for item comma index",
    "start": "2665099",
    "end": "2671800"
  },
  {
    "text": "in web app list so it's going to give us each item as",
    "start": "2671800",
    "end": "2677500"
  },
  {
    "text": "well as the index so for the name in this case we reference item app name",
    "start": "2677500",
    "end": "2683020"
  },
  {
    "text": "which is this one and then",
    "start": "2683020",
    "end": "2689140"
  },
  {
    "text": "for the app component in tags we're referencing the item app tag so we're just iterating over an array it's got",
    "start": "2689140",
    "end": "2694660"
  },
  {
    "text": "two elements in it we're picking out the properties of that array so we can do this resource creation multiple times",
    "start": "2694660",
    "end": "2701619"
  },
  {
    "text": "and utilize the properties in that array we're also utilizing the index here just to do a bit of funky stuff and create a",
    "start": "2701619",
    "end": "2708160"
  },
  {
    "text": "component number which is just some made up construct on my part just to say that a you can reference the",
    "start": "2708160",
    "end": "2714579"
  },
  {
    "text": "index get the length of the array and compute on the index as part of that that looping construct",
    "start": "2714579",
    "end": "2722020"
  },
  {
    "text": "so again pretty pretty simple getting a little bit more complex but again certainly if you're used to arm Loops",
    "start": "2722020",
    "end": "2728319"
  },
  {
    "text": "um this is a much easier construct to understand",
    "start": "2728319",
    "end": "2732960"
  },
  {
    "text": "all right on to part three",
    "start": "2734800",
    "end": "2738119"
  },
  {
    "text": "let's this is a bit that that I like because I",
    "start": "2742000",
    "end": "2747099"
  },
  {
    "text": "am I too lazy to type I'm too lazy to do almost anything but let's say",
    "start": "2747099",
    "end": "2754260"
  },
  {
    "text": "go over to here too lazy to code go to main bicep all right so",
    "start": "2754300",
    "end": "2761740"
  },
  {
    "text": "um you've seen the templates uh are quite simple or are much simpler than the um counterparts but you still don't",
    "start": "2761740",
    "end": "2768460"
  },
  {
    "text": "really want to be doing a template from scratch specifically let's say a VM that's quite uh hairy let's go res Dash",
    "start": "2768460",
    "end": "2776440"
  },
  {
    "text": "them oh I want an Ubuntu Booyah there's all the properties that",
    "start": "2776440",
    "end": "2784780"
  },
  {
    "text": "you need to fill out for VM or if you want res Dash AKs cluster at",
    "start": "2784780",
    "end": "2792400"
  },
  {
    "text": "the very top there is even more stuff for you so that stuff's pretty pretty handy you",
    "start": "2792400",
    "end": "2798400"
  },
  {
    "text": "don't have to kind of go to the reference you just get res Dash BOOM and pick your your resource type and you've",
    "start": "2798400",
    "end": "2804099"
  },
  {
    "text": "got all the properties there ready to fill out and go that stuff's pretty awesome what you can also do",
    "start": "2804099",
    "end": "2809920"
  },
  {
    "text": "is I've already got an Azure subscription uh and in that Azure subscription I've created a storage",
    "start": "2809920",
    "end": "2815560"
  },
  {
    "text": "account and as you know with all um resources in Azure they have a resource",
    "start": "2815560",
    "end": "2822280"
  },
  {
    "text": "ID what I'm copying and pasting here is that resource ID which is easy enough to",
    "start": "2822280",
    "end": "2827440"
  },
  {
    "text": "get to the portal and in interest of time I won't go to the portal now because copying pasting a resource ID is largely boring but what I can do with",
    "start": "2827440",
    "end": "2835660"
  },
  {
    "text": "that so I've already got an existing resource I'll go Ctrl shift p and I'll call up",
    "start": "2835660",
    "end": "2841420"
  },
  {
    "text": "the command palette and say all right here bicep I want you to insert a resource into this file here which is my",
    "start": "2841420",
    "end": "2847359"
  },
  {
    "text": "two laser decode and incorrectly spelled main.bicep so I'll select that one I'll",
    "start": "2847359",
    "end": "2852460"
  },
  {
    "text": "paste in the resource ID hit enter and with any luck hey so that's gone into into Azure I",
    "start": "2852460",
    "end": "2859960"
  },
  {
    "text": "found the resource generated the bicep template for me stuck it into my file for me so it's a like a really easy way",
    "start": "2859960",
    "end": "2868119"
  },
  {
    "text": "if you want to play around in the portal first and get your resources right then find the resource ID whack it into your",
    "start": "2868119",
    "end": "2873760"
  },
  {
    "text": "bicep file delete the damn thing redeploy it it's all easy you don't have to go and generate an arm template in",
    "start": "2873760",
    "end": "2880180"
  },
  {
    "text": "the portal go to Resource Explorer or any other number of ways you can literally play around in the portal and",
    "start": "2880180",
    "end": "2886180"
  },
  {
    "text": "then create your template really really easily for it so I'm hoping all this is pushing you",
    "start": "2886180",
    "end": "2892000"
  },
  {
    "text": "over the edge towards bicep",
    "start": "2892000",
    "end": "2895440"
  },
  {
    "text": "uh oh yes uh note about Scopes I did mention I would uh talk about that the default scope in a bicep template",
    "start": "2897160",
    "end": "2903520"
  },
  {
    "text": "um is a resource Group as you'd expect it does support um all the other constructs such as",
    "start": "2903520",
    "end": "2909339"
  },
  {
    "text": "subscription and Management Group and tenant and so we'll go and have a quick look at that for those who may or may",
    "start": "2909339",
    "end": "2915579"
  },
  {
    "text": "not be aware you've kind of got your Management Group at the top level and then you have a subscription or",
    "start": "2915579",
    "end": "2921640"
  },
  {
    "text": "multiple subscriptions underneath then down to Resource groups um so if I just jump quickly into vs",
    "start": "2921640",
    "end": "2928119"
  },
  {
    "text": "code it's probably an easier way of doing it",
    "start": "2928119",
    "end": "2932880"
  },
  {
    "text": "uh in this case and with Target Scopes it has to be the first line of your bicep file if I and in this case we're",
    "start": "2933520",
    "end": "2940359"
  },
  {
    "text": "targeting subscriptions so not the default if I go here and say all right you'll",
    "start": "2940359",
    "end": "2946119"
  },
  {
    "text": "see it'll give you intellisense for what you can provide uh we'll put subscription back in",
    "start": "2946119",
    "end": "2952480"
  },
  {
    "text": "uh and I'm saying all right um I've got a resource here of some Resource Group I'm calling it group one",
    "start": "2952480",
    "end": "2960099"
  },
  {
    "text": "and the location is deployment location pretty easy I've got another Resource Group here in",
    "start": "2960099",
    "end": "2967960"
  },
  {
    "text": "a different uh the same location but it's called something different and using these using those two resource",
    "start": "2967960",
    "end": "2975700"
  },
  {
    "text": "groups I can deploy in this case I'm using modules so a storage account to",
    "start": "2975700",
    "end": "2981280"
  },
  {
    "text": "each of those resource groups so I'm not deploying and the point is I'm not deploying just to one Resource Group I'm",
    "start": "2981280",
    "end": "2986560"
  },
  {
    "text": "saying all right target the subscription create two resource groups and deploy one resource in this case a storage",
    "start": "2986560",
    "end": "2992319"
  },
  {
    "text": "account to each of those resource groups so the scope has increased to a subscription level not a resource Group",
    "start": "2992319",
    "end": "2998680"
  },
  {
    "text": "level and you can do the same with management groups as well it's as simple as that Target scope element up there",
    "start": "2998680",
    "end": "3006920"
  },
  {
    "text": "oh sorry and and obviously you need to do this scope um as part of this module I'm",
    "start": "3007619",
    "end": "3013020"
  },
  {
    "text": "determining the scope here saying it's a particular Resource Group in addition to that Target scope up here",
    "start": "3013020",
    "end": "3021020"
  },
  {
    "text": "all right did that one okay let's not look at that let's just go see it so in addition",
    "start": "3022740",
    "end": "3030720"
  },
  {
    "text": "with all those cool advantages you do have the option of visualization in",
    "start": "3030720",
    "end": "3036060"
  },
  {
    "text": "biceps so we've got um and I won't go into detail too much but we've got a bicep template here got some parameters",
    "start": "3036060",
    "end": "3042180"
  },
  {
    "text": "we've got a SQL Server um database",
    "start": "3042180",
    "end": "3047540"
  },
  {
    "text": "website what you can do I could right click over here and go to visualization",
    "start": "3047540",
    "end": "3053040"
  },
  {
    "text": "I'm just going to go to this little icon here click that and if you can see that okay now let's",
    "start": "3053040",
    "end": "3059339"
  },
  {
    "text": "drag it over you can see it has visualized it nicely",
    "start": "3059339",
    "end": "3064859"
  },
  {
    "text": "for us but what about if we want some more work with me here",
    "start": "3064859",
    "end": "3071099"
  },
  {
    "text": "so if I go down here and go res VM and I'll choose an Ubuntu you can see it",
    "start": "3071099",
    "end": "3078839"
  },
  {
    "text": "put it in over here let me zoom in a bit here's our Ubuntu VM we've got rolls",
    "start": "3078839",
    "end": "3084000"
  },
  {
    "text": "assigned if I'm scrolling around here and I go back to visual visualization double click on that it takes me to the",
    "start": "3084000",
    "end": "3090240"
  },
  {
    "text": "Ubuntu VM I just created let's create something else because it's just easy AKs cluster oh it works in there so",
    "start": "3090240",
    "end": "3097980"
  },
  {
    "text": "we've got some Dynamic visualization on top of that as well again it's giving you all these cool",
    "start": "3097980",
    "end": "3103859"
  },
  {
    "text": "ways to to simplify and visualize the construction of arm templates or just",
    "start": "3103859",
    "end": "3109680"
  },
  {
    "text": "deployments in general particularly the modules concept but all this particularly these vs code extensions which again",
    "start": "3109680",
    "end": "3116099"
  },
  {
    "text": "um slightly ahead or reasonably ahead of the visual studio extension give you a",
    "start": "3116099",
    "end": "3122040"
  },
  {
    "text": "really powerful tool set for azure deployments",
    "start": "3122040",
    "end": "3127040"
  },
  {
    "text": "just as a bit of an aside there is this thing called the bicep playground it's good for learning for the most part",
    "start": "3129720",
    "end": "3136640"
  },
  {
    "text": "you can go here and it's a just a general website grab a sample template let's go to",
    "start": "3136640",
    "end": "3144300"
  },
  {
    "text": "for key Vault main I guess and what it does is it gives you the bicep and the corresponding arm template",
    "start": "3144300",
    "end": "3152040"
  },
  {
    "text": "and you can go and edit stuff in here if I think you can do like VAR Villa",
    "start": "3152040",
    "end": "3159000"
  },
  {
    "text": "equals one oh not car but ah there you go and it goes and generates",
    "start": "3159000",
    "end": "3165300"
  },
  {
    "text": "stuff over here for you so if you wanted to go and play around with it and and see what the counterpart is in arm and",
    "start": "3165300",
    "end": "3171300"
  },
  {
    "text": "bicep and bicep to arm you can do it through this website as well and it's got a whole list of sample templates and",
    "start": "3171300",
    "end": "3177660"
  },
  {
    "text": "you'll notice they're all main dot bicep as well hence that sort of style guideline that I mentioned before",
    "start": "3177660",
    "end": "3184819"
  },
  {
    "text": "what's happening for bicep in the future if you go to that URL you'll be able to see what is ahead for bicep I took that",
    "start": "3186059",
    "end": "3193260"
  },
  {
    "text": "screenshot where is it version 0.7 which is only a few months ago again they're",
    "start": "3193260",
    "end": "3199140"
  },
  {
    "text": "up to version 0.11 at the moment they're looking at going version one around the end of this year maybe early in the new",
    "start": "3199140",
    "end": "3205800"
  },
  {
    "text": "year but they usually do a version uh every month but to see what's coming and even to suggest new things is you can go",
    "start": "3205800",
    "end": "3212400"
  },
  {
    "text": "and raise issues on this GitHub board and they're pretty prompt they're they're a good Bunch they're really",
    "start": "3212400",
    "end": "3217940"
  },
  {
    "text": "friendly quite responsive so if you've got some of your suggestion just want to see what's coming go have a look there",
    "start": "3217940",
    "end": "3226160"
  },
  {
    "text": "actually before I go into this but one I think one of the things that's coming next is uh with um you know you've",
    "start": "3226380",
    "end": "3232319"
  },
  {
    "text": "obviously got parameter files which are standard Json files it's the same for bicep as well for using parameters however they're looking at uh special a",
    "start": "3232319",
    "end": "3240359"
  },
  {
    "text": "bicep parameter file that will give you the intellisense and and and lots of uh",
    "start": "3240359",
    "end": "3245579"
  },
  {
    "text": "compliance enhancements in the parameter file as well so you'll be able to do something like using main.bicep and it",
    "start": "3245579",
    "end": "3252660"
  },
  {
    "text": "starts to give you intellisense because it knows what parameters are going to be needed for that file and give you a whole bunch of enhancements on top of",
    "start": "3252660",
    "end": "3258359"
  },
  {
    "text": "that they haven't built that yet they are building it but that's one of the things that you'll see coming in the future",
    "start": "3258359",
    "end": "3263819"
  },
  {
    "text": "so in summary I know I've only got a few minutes left bicep is simple as an arm templates and",
    "start": "3263819",
    "end": "3269760"
  },
  {
    "text": "again I would like the category categorically stated because I think it's pretty evident it is 100 I'm",
    "start": "3269760",
    "end": "3275760"
  },
  {
    "text": "compatible it's like a it's a win-win situation you can stick with arm templates if you want you can do bicep",
    "start": "3275760",
    "end": "3281460"
  },
  {
    "text": "and arm templates or only bicep leave your arms templates in place you can reverse it into the need of them to bicep if you're so inclined you can do",
    "start": "3281460",
    "end": "3288960"
  },
  {
    "text": "all of that there's no there's no loss it's not a lossy conversion the tooling as you've seen is pretty",
    "start": "3288960",
    "end": "3294300"
  },
  {
    "text": "fantastic in my opinion and it's only going to get better the composability and reusability is a",
    "start": "3294300",
    "end": "3300540"
  },
  {
    "text": "big one for me the maintain the ability of arm templates is again in my opinion less than Stiller bicep makes it",
    "start": "3300540",
    "end": "3306359"
  },
  {
    "text": "significantly easier and I honestly ever since using version 0.4 I have haven't gone back to arm templates where I get a",
    "start": "3306359",
    "end": "3313440"
  },
  {
    "text": "chance at customers as I convert them to bicep templates don't always have the time and the",
    "start": "3313440",
    "end": "3318720"
  },
  {
    "text": "luxury and you can stick with those arm templates forever and a day and you can use them interchangeably as well there's",
    "start": "3318720",
    "end": "3323760"
  },
  {
    "text": "certainly nothing Stopping You hence that 100 arm compatibility",
    "start": "3323760",
    "end": "3329000"
  },
  {
    "text": "so the challenge to you is if you're doing arm templates today decompile them",
    "start": "3329400",
    "end": "3335339"
  },
  {
    "text": "into bicep give it a shot um parameters a bit and again never look back if you've never used arm templates",
    "start": "3335339",
    "end": "3341880"
  },
  {
    "text": "before and I think most of you have just start with bicep and still have a look back",
    "start": "3341880",
    "end": "3347720"
  },
  {
    "text": "it's a bit of a theme so hopefully that's been um educational for you hopefully I've",
    "start": "3347760",
    "end": "3354300"
  },
  {
    "text": "convinced you to use bicep honestly I've never looked back and I think you'll do the same once you start using them there",
    "start": "3354300",
    "end": "3360359"
  },
  {
    "text": "is no downside to using it there is only upsides so thank you again for for turning up I appreciate your attention",
    "start": "3360359",
    "end": "3366059"
  },
  {
    "text": "and your time is there any questions yes",
    "start": "3366059",
    "end": "3372500"
  },
  {
    "text": "yeah so the question was is there a way of of reverse engineering an entire Resource Group into your bicep template",
    "start": "3385440",
    "end": "3391680"
  },
  {
    "text": "yeah look I I believe you can just specify the resource Group resource ID and that should do it using that IDE I",
    "start": "3391680",
    "end": "3399119"
  },
  {
    "text": "haven't actually tested that to be honest",
    "start": "3399119",
    "end": "3402500"
  },
  {
    "text": "yes yeah I I think if you do just specify the resource Group it'll do everything that's contained in it I",
    "start": "3404280",
    "end": "3409980"
  },
  {
    "text": "think probably worth testing that one though because I only actually found out about the uh um that little feature not so",
    "start": "3409980",
    "end": "3416760"
  },
  {
    "text": "long ago so I haven't fully put it to the test any other questions yes",
    "start": "3416760",
    "end": "3424160"
  },
  {
    "text": "uh reference remote modules in a git repo um yes you can there is the I'm not sure",
    "start": "3428579",
    "end": "3436800"
  },
  {
    "text": "familiar with things like template specs which is a way of referencing arm templates remotely in your in your Azure",
    "start": "3436800",
    "end": "3443339"
  },
  {
    "text": "portal there is a thing a concept also called a bicep registry as well and you can put your bicep files into Azure",
    "start": "3443339",
    "end": "3449760"
  },
  {
    "text": "apply our back rules to them and reference them that way as well so it's a longer answer to your question",
    "start": "3449760",
    "end": "3455220"
  },
  {
    "text": "um 300 answers yes longer answer is probably better off using Registries bicep Registries for that because you've",
    "start": "3455220",
    "end": "3461220"
  },
  {
    "text": "got a bit of security controls yeah any other questions",
    "start": "3461220",
    "end": "3468000"
  },
  {
    "text": "yes of course",
    "start": "3468000",
    "end": "3470839"
  },
  {
    "text": "if you put um yeah if you put kind and you're supposed to put blob storage or only for all our values and you put",
    "start": "3480059",
    "end": "3486059"
  },
  {
    "text": "something like Rumpelstiltskin yes yeah",
    "start": "3486059",
    "end": "3491119"
  },
  {
    "text": "um not sure I'd have to speak to the team on that one as to why they don't",
    "start": "3499500",
    "end": "3505260"
  },
  {
    "text": "um yeah I don't know I don't know how to answer that one raise it on the GitHub issues there",
    "start": "3505260",
    "end": "3510660"
  },
  {
    "text": "my pleasure any other questions before we wrap up awesome thank you very much for your",
    "start": "3510660",
    "end": "3516000"
  },
  {
    "text": "time go out and enjoy the rest of uh in DC thank you [Applause]",
    "start": "3516000",
    "end": "3523460"
  }
]