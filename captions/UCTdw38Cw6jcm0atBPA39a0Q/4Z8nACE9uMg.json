[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "hello everyone um thank you so let's get",
    "start": "8240",
    "end": "11120"
  },
  {
    "text": "started because i have a lot to cover in",
    "start": "11120",
    "end": "12719"
  },
  {
    "text": "10 minutes it's very hard to squeeze",
    "start": "12719",
    "end": "14880"
  },
  {
    "text": "this api stream api in 10 minutes but",
    "start": "14880",
    "end": "17119"
  },
  {
    "text": "i'll do my best to encourage you to",
    "start": "17119",
    "end": "20320"
  },
  {
    "text": "go after this talk and experiment a",
    "start": "20320",
    "end": "22160"
  },
  {
    "text": "little bit more about this",
    "start": "22160",
    "end": "24000"
  },
  {
    "text": "api",
    "start": "24000",
    "end": "25199"
  },
  {
    "text": "so",
    "start": "25199",
    "end": "26480"
  },
  {
    "text": "in fact the idea behind this tag was",
    "start": "26480",
    "end": "29119"
  },
  {
    "text": "because you know i've been working with",
    "start": "29119",
    "end": "31119"
  },
  {
    "text": "pwa and",
    "start": "31119",
    "end": "32640"
  },
  {
    "text": "at the brain of the pwa service workers",
    "start": "32640",
    "end": "36160"
  },
  {
    "text": "and most of the people are like using",
    "start": "36160",
    "end": "38640"
  },
  {
    "text": "service worker as a cash mechanism let's",
    "start": "38640",
    "end": "40800"
  },
  {
    "text": "say service workers stays between your",
    "start": "40800",
    "end": "43360"
  },
  {
    "text": "network requests as well as",
    "start": "43360",
    "end": "45920"
  },
  {
    "text": "your",
    "start": "45920",
    "end": "47039"
  },
  {
    "text": "application right so it's like a proxy",
    "start": "47039",
    "end": "49920"
  },
  {
    "text": "so we're using service worker for",
    "start": "49920",
    "end": "51920"
  },
  {
    "text": "caching mechanism a lot that is good",
    "start": "51920",
    "end": "54480"
  },
  {
    "text": "makes our application offline",
    "start": "54480",
    "end": "56399"
  },
  {
    "text": "performance improvement play good but it",
    "start": "56399",
    "end": "59280"
  },
  {
    "text": "does a lot more and the fact that",
    "start": "59280",
    "end": "60960"
  },
  {
    "text": "service worker runs in another thread so",
    "start": "60960",
    "end": "63760"
  },
  {
    "text": "it gives us a lot of more opportunity to",
    "start": "63760",
    "end": "65840"
  },
  {
    "text": "leverage service worker and one of those",
    "start": "65840",
    "end": "68560"
  },
  {
    "text": "those apis that you can use in service",
    "start": "68560",
    "end": "70560"
  },
  {
    "text": "worker is stream api",
    "start": "70560",
    "end": "73520"
  },
  {
    "start": "73000",
    "end": "82000"
  },
  {
    "text": "so i'm going to talk about the stream",
    "start": "73520",
    "end": "74880"
  },
  {
    "text": "api very quickly give you some examples",
    "start": "74880",
    "end": "77119"
  },
  {
    "text": "and samples that i've done",
    "start": "77119",
    "end": "79040"
  },
  {
    "text": "in real world application",
    "start": "79040",
    "end": "80799"
  },
  {
    "text": "and then you see how it will improve",
    "start": "80799",
    "end": "83920"
  },
  {
    "start": "82000",
    "end": "101000"
  },
  {
    "text": "the application very quickly about",
    "start": "83920",
    "end": "86159"
  },
  {
    "text": "myself my name is majid i'm a solution",
    "start": "86159",
    "end": "88960"
  },
  {
    "text": "architect in kellyanne orge",
    "start": "88960",
    "end": "91920"
  },
  {
    "text": "and i am also google developer expert",
    "start": "91920",
    "end": "94320"
  },
  {
    "text": "community leader in oslo so come talk to",
    "start": "94320",
    "end": "97280"
  },
  {
    "text": "me if you're talking about communities",
    "start": "97280",
    "end": "100000"
  },
  {
    "text": "so",
    "start": "100000",
    "end": "101600"
  },
  {
    "start": "101000",
    "end": "152000"
  },
  {
    "text": "let's get into stream apis very quickly",
    "start": "101600",
    "end": "105119"
  },
  {
    "text": "what i have to tell you is that the idea",
    "start": "105119",
    "end": "107759"
  },
  {
    "text": "behind the stream api is that to give",
    "start": "107759",
    "end": "110640"
  },
  {
    "text": "you an opportunity to",
    "start": "110640",
    "end": "113360"
  },
  {
    "text": "use smaller chunk of data process it and",
    "start": "113360",
    "end": "116560"
  },
  {
    "text": "output it to another source right which",
    "start": "116560",
    "end": "119680"
  },
  {
    "text": "probably is your website in this case by",
    "start": "119680",
    "end": "122719"
  },
  {
    "text": "a javascript api",
    "start": "122719",
    "end": "125680"
  },
  {
    "text": "so you can leverage this api to do a lot",
    "start": "125680",
    "end": "128399"
  },
  {
    "text": "of things for example",
    "start": "128399",
    "end": "130399"
  },
  {
    "text": "you when we have like video effect or",
    "start": "130399",
    "end": "133440"
  },
  {
    "text": "when you want to add some kind of image",
    "start": "133440",
    "end": "135280"
  },
  {
    "text": "effect or",
    "start": "135280",
    "end": "136720"
  },
  {
    "text": "or perhaps one of the good example is it",
    "start": "136720",
    "end": "139120"
  },
  {
    "text": "will reduce the first",
    "start": "139120",
    "end": "141280"
  },
  {
    "text": "contentful paint time so i'll show you",
    "start": "141280",
    "end": "145120"
  },
  {
    "text": "how you can leverage this api with",
    "start": "145120",
    "end": "147520"
  },
  {
    "text": "service worker and app shell and at the",
    "start": "147520",
    "end": "149920"
  },
  {
    "text": "end of this talk",
    "start": "149920",
    "end": "151760"
  },
  {
    "text": "so",
    "start": "151760",
    "end": "153760"
  },
  {
    "start": "152000",
    "end": "242000"
  },
  {
    "text": "let's",
    "start": "153760",
    "end": "154560"
  },
  {
    "text": "be on the same page before i move",
    "start": "154560",
    "end": "156560"
  },
  {
    "text": "forward and give you some examples the",
    "start": "156560",
    "end": "158400"
  },
  {
    "text": "core concepts behind the stream are a",
    "start": "158400",
    "end": "161440"
  },
  {
    "text": "few facts",
    "start": "161440",
    "end": "162879"
  },
  {
    "text": "one of them is that you know you are",
    "start": "162879",
    "end": "165920"
  },
  {
    "text": "a chunk that i'm talking about is a",
    "start": "165920",
    "end": "169280"
  },
  {
    "text": "single",
    "start": "169280",
    "end": "170400"
  },
  {
    "text": "piece of",
    "start": "170400",
    "end": "171840"
  },
  {
    "text": "your data so you are splitting your data",
    "start": "171840",
    "end": "174720"
  },
  {
    "text": "to a smaller piece that can be streamed",
    "start": "174720",
    "end": "177360"
  },
  {
    "text": "and you have readable streams and",
    "start": "177360",
    "end": "179599"
  },
  {
    "text": "writable streams where the real readable",
    "start": "179599",
    "end": "182720"
  },
  {
    "text": "streams are an instance of class of",
    "start": "182720",
    "end": "185040"
  },
  {
    "text": "readable streams you can read from that",
    "start": "185040",
    "end": "187120"
  },
  {
    "text": "and the writeable is where you can",
    "start": "187120",
    "end": "188720"
  },
  {
    "text": "actually write into with javascript api",
    "start": "188720",
    "end": "192159"
  },
  {
    "text": "you have transfers a stream which is",
    "start": "192159",
    "end": "194879"
  },
  {
    "text": "providing the readable and writeable in",
    "start": "194879",
    "end": "197599"
  },
  {
    "text": "one",
    "start": "197599",
    "end": "198400"
  },
  {
    "text": "class transfer",
    "start": "198400",
    "end": "200400"
  },
  {
    "text": "stream",
    "start": "200400",
    "end": "201360"
  },
  {
    "text": "and well",
    "start": "201360",
    "end": "202879"
  },
  {
    "text": "when you have this stream you can also",
    "start": "202879",
    "end": "205360"
  },
  {
    "text": "pipe them into different things for",
    "start": "205360",
    "end": "207440"
  },
  {
    "text": "example by using pipe 2 or pipe through",
    "start": "207440",
    "end": "211200"
  },
  {
    "text": "which allows you to",
    "start": "211200",
    "end": "213680"
  },
  {
    "text": "transform with multiple you know",
    "start": "213680",
    "end": "216319"
  },
  {
    "text": "mutations",
    "start": "216319",
    "end": "218400"
  },
  {
    "text": "uh you also have push and pull resources",
    "start": "218400",
    "end": "221840"
  },
  {
    "text": "well idea that if i want to give you an",
    "start": "221840",
    "end": "224319"
  },
  {
    "text": "example of like uh push sources are like",
    "start": "224319",
    "end": "227599"
  },
  {
    "text": "for example web sockets right so these",
    "start": "227599",
    "end": "229920"
  },
  {
    "text": "are the push sources they just send you",
    "start": "229920",
    "end": "231840"
  },
  {
    "text": "data and the pool day sources are those",
    "start": "231840",
    "end": "234959"
  },
  {
    "text": "sources that you are explicitly asked",
    "start": "234959",
    "end": "237439"
  },
  {
    "text": "for for example using",
    "start": "237439",
    "end": "239680"
  },
  {
    "text": "fetch",
    "start": "239680",
    "end": "240400"
  },
  {
    "text": "in javascript",
    "start": "240400",
    "end": "243040"
  },
  {
    "start": "242000",
    "end": "343000"
  },
  {
    "text": "here is one example",
    "start": "243040",
    "end": "246239"
  },
  {
    "text": "so what i'm going to do here is that i'm",
    "start": "246480",
    "end": "249280"
  },
  {
    "text": "going to make this",
    "start": "249280",
    "end": "251120"
  },
  {
    "text": "turtle a colorful title to a grayish",
    "start": "251120",
    "end": "254239"
  },
  {
    "text": "skill theater right",
    "start": "254239",
    "end": "255920"
  },
  {
    "text": "in the browser",
    "start": "255920",
    "end": "257359"
  },
  {
    "text": "so that is actually the example here is",
    "start": "257359",
    "end": "259440"
  },
  {
    "text": "running right now in the browser you can",
    "start": "259440",
    "end": "261919"
  },
  {
    "text": "later check out this uh slice and you",
    "start": "261919",
    "end": "264240"
  },
  {
    "text": "see the source code over there",
    "start": "264240",
    "end": "266320"
  },
  {
    "text": "so",
    "start": "266320",
    "end": "267120"
  },
  {
    "text": "imagine that we're gonna have like a",
    "start": "267120",
    "end": "268639"
  },
  {
    "text": "grayscare",
    "start": "268639",
    "end": "270080"
  },
  {
    "text": "grayscale png transformer already",
    "start": "270080",
    "end": "272800"
  },
  {
    "text": "written in javascript right so how now",
    "start": "272800",
    "end": "276080"
  },
  {
    "text": "this works",
    "start": "276080",
    "end": "278080"
  },
  {
    "text": "when you fetch your turtle so",
    "start": "278080",
    "end": "280880"
  },
  {
    "text": "here's a important fact you need to use",
    "start": "280880",
    "end": "283280"
  },
  {
    "text": "fetch if you want to use",
    "start": "283280",
    "end": "285199"
  },
  {
    "text": "a stream right",
    "start": "285199",
    "end": "286960"
  },
  {
    "text": "so when you fetch your image or your",
    "start": "286960",
    "end": "289759"
  },
  {
    "text": "resource in this case this turtle",
    "start": "289759",
    "end": "292400"
  },
  {
    "text": "what you will do is that you will get a",
    "start": "292400",
    "end": "294639"
  },
  {
    "text": "response which has a body and that body",
    "start": "294639",
    "end": "297280"
  },
  {
    "text": "is a readable stream",
    "start": "297280",
    "end": "299520"
  },
  {
    "text": "so",
    "start": "299520",
    "end": "300880"
  },
  {
    "text": "in that body then you can use pipe",
    "start": "300880",
    "end": "303840"
  },
  {
    "text": "through",
    "start": "303840",
    "end": "304639"
  },
  {
    "text": "and",
    "start": "304639",
    "end": "305440"
  },
  {
    "text": "use your trans uh formation",
    "start": "305440",
    "end": "308240"
  },
  {
    "text": "or transform a stream to use those",
    "start": "308240",
    "end": "310960"
  },
  {
    "text": "transformation that you want to do for",
    "start": "310960",
    "end": "312560"
  },
  {
    "text": "example here you want to do a grayish",
    "start": "312560",
    "end": "315280"
  },
  {
    "text": "scale png transformer right",
    "start": "315280",
    "end": "317840"
  },
  {
    "text": "and then",
    "start": "317840",
    "end": "319120"
  },
  {
    "text": "you create a new respond",
    "start": "319120",
    "end": "322479"
  },
  {
    "text": "while in this case because this is an",
    "start": "322479",
    "end": "324320"
  },
  {
    "text": "image i'm going to show it right away",
    "start": "324320",
    "end": "325840"
  },
  {
    "text": "again to the browser i'm going to create",
    "start": "325840",
    "end": "328560"
  },
  {
    "text": "a blob a url and then i'll set my image",
    "start": "328560",
    "end": "332639"
  },
  {
    "text": "and then i see that right away i get",
    "start": "332639",
    "end": "335280"
  },
  {
    "text": "this image like as a grayscale",
    "start": "335280",
    "end": "339680"
  },
  {
    "text": "png",
    "start": "339680",
    "end": "342240"
  },
  {
    "text": "let me give you another example",
    "start": "343919",
    "end": "346800"
  },
  {
    "text": "in service worker in this case right now",
    "start": "346800",
    "end": "351120"
  },
  {
    "text": "so",
    "start": "351680",
    "end": "353039"
  },
  {
    "text": "you in service worker you're gonna",
    "start": "353039",
    "end": "354639"
  },
  {
    "text": "listen to your fetch request right",
    "start": "354639",
    "end": "357840"
  },
  {
    "text": "so in this case",
    "start": "357840",
    "end": "360000"
  },
  {
    "text": "what i'm gonna do here",
    "start": "360000",
    "end": "363120"
  },
  {
    "text": "you can create a readable stream here so",
    "start": "363600",
    "end": "366880"
  },
  {
    "text": "instead of getting a one",
    "start": "366880",
    "end": "368800"
  },
  {
    "text": "one big like data back to your",
    "start": "368800",
    "end": "372400"
  },
  {
    "text": "client you can actually create a",
    "start": "372400",
    "end": "374400"
  },
  {
    "text": "readable stream and send the data chunk",
    "start": "374400",
    "end": "377360"
  },
  {
    "text": "by chunk",
    "start": "377360",
    "end": "378720"
  },
  {
    "text": "so here is how what you can do here so",
    "start": "378720",
    "end": "380960"
  },
  {
    "text": "for example here is where you can use",
    "start": "380960",
    "end": "383520"
  },
  {
    "text": "the readable and writeable stream from",
    "start": "383520",
    "end": "385919"
  },
  {
    "text": "transformer stream class",
    "start": "385919",
    "end": "388319"
  },
  {
    "text": "then you pipe it to the readable",
    "start": "388319",
    "end": "390880"
  },
  {
    "text": "the responder of the body can be piped",
    "start": "390880",
    "end": "393039"
  },
  {
    "text": "to the writable and then you respond",
    "start": "393039",
    "end": "395039"
  },
  {
    "text": "that to your browser then you are",
    "start": "395039",
    "end": "397039"
  },
  {
    "text": "creating a stream right now i'll show",
    "start": "397039",
    "end": "399520"
  },
  {
    "text": "you how it will work in the quickly in",
    "start": "399520",
    "end": "402240"
  },
  {
    "start": "402000",
    "end": "467000"
  },
  {
    "text": "the browser let me give you a better",
    "start": "402240",
    "end": "404960"
  },
  {
    "text": "example on top of",
    "start": "404960",
    "end": "406840"
  },
  {
    "text": "this for example let's say",
    "start": "406840",
    "end": "410000"
  },
  {
    "text": "you have a big",
    "start": "410000",
    "end": "411840"
  },
  {
    "text": "json file",
    "start": "411840",
    "end": "413840"
  },
  {
    "text": "like maybe i don't know 10 megabytes of",
    "start": "413840",
    "end": "416160"
  },
  {
    "text": "json",
    "start": "416160",
    "end": "417280"
  },
  {
    "text": "you want to parse it right now",
    "start": "417280",
    "end": "419759"
  },
  {
    "text": "that's very heavy to parse right what we",
    "start": "419759",
    "end": "422720"
  },
  {
    "text": "can do here in this case",
    "start": "422720",
    "end": "424880"
  },
  {
    "text": "that is in main thread but you can do it",
    "start": "424880",
    "end": "426720"
  },
  {
    "text": "right in the",
    "start": "426720",
    "end": "428560"
  },
  {
    "text": "service worker as well",
    "start": "428560",
    "end": "430960"
  },
  {
    "text": "i fetch my",
    "start": "430960",
    "end": "433120"
  },
  {
    "text": "the json file",
    "start": "433120",
    "end": "435440"
  },
  {
    "text": "and",
    "start": "435440",
    "end": "437440"
  },
  {
    "text": "here is where i'm actually passing",
    "start": "437440",
    "end": "440000"
  },
  {
    "text": "my body again the readable stream",
    "start": "440000",
    "end": "442639"
  },
  {
    "text": "to a json transformer it's just similar",
    "start": "442639",
    "end": "445680"
  },
  {
    "text": "to what i've done with the grayscale",
    "start": "445680",
    "end": "447440"
  },
  {
    "text": "image but here in this case i'm using a",
    "start": "447440",
    "end": "450720"
  },
  {
    "text": "json transformer right so i'm creating a",
    "start": "450720",
    "end": "453680"
  },
  {
    "text": "stream i'm going to iterate over that",
    "start": "453680",
    "end": "457520"
  },
  {
    "text": "until this parsing is done",
    "start": "457520",
    "end": "460560"
  },
  {
    "text": "so i'm sending these chunks to my",
    "start": "460560",
    "end": "463039"
  },
  {
    "text": "browser join pi chunk let's see in",
    "start": "463039",
    "end": "465759"
  },
  {
    "text": "action how it works",
    "start": "465759",
    "end": "468720"
  },
  {
    "start": "467000",
    "end": "512000"
  },
  {
    "text": "so i deliberately chose a slow",
    "start": "471599",
    "end": "473440"
  },
  {
    "text": "connection to show you how expensive it",
    "start": "473440",
    "end": "476240"
  },
  {
    "text": "can be but look at the",
    "start": "476240",
    "end": "480319"
  },
  {
    "text": "network requests in this case",
    "start": "480319",
    "end": "483759"
  },
  {
    "text": "and the the chunk of data that i'm",
    "start": "483759",
    "end": "486240"
  },
  {
    "text": "passing to my application",
    "start": "486240",
    "end": "490599"
  },
  {
    "text": "good",
    "start": "498160",
    "end": "499840"
  },
  {
    "text": "so here is now you created a stream",
    "start": "499840",
    "end": "502319"
  },
  {
    "text": "it's way faster for your client because",
    "start": "502319",
    "end": "504720"
  },
  {
    "text": "they need they don't need to wait until",
    "start": "504720",
    "end": "506800"
  },
  {
    "text": "this is done",
    "start": "506800",
    "end": "508400"
  },
  {
    "text": "well you can send time by chunk when",
    "start": "508400",
    "end": "510720"
  },
  {
    "text": "everything is ready right",
    "start": "510720",
    "end": "513120"
  },
  {
    "start": "512000",
    "end": "540000"
  },
  {
    "text": "all right",
    "start": "513120",
    "end": "514159"
  },
  {
    "text": "but",
    "start": "514159",
    "end": "515279"
  },
  {
    "text": "how you can make this to work for your",
    "start": "515279",
    "end": "517919"
  },
  {
    "text": "application",
    "start": "517919",
    "end": "520000"
  },
  {
    "text": "as loading the html part",
    "start": "520000",
    "end": "523680"
  },
  {
    "text": "one idea in the pwa is creating an",
    "start": "523680",
    "end": "526800"
  },
  {
    "text": "option right the idea behind it is to",
    "start": "526800",
    "end": "529200"
  },
  {
    "text": "create such a",
    "start": "529200",
    "end": "531200"
  },
  {
    "text": "shell that part of it is static like",
    "start": "531200",
    "end": "534560"
  },
  {
    "text": "header footer and part of it",
    "start": "534560",
    "end": "537760"
  },
  {
    "text": "and what that can be cached as well",
    "start": "537760",
    "end": "540480"
  },
  {
    "text": "and the main part of it the dynamic data",
    "start": "540480",
    "end": "542800"
  },
  {
    "text": "is loading",
    "start": "542800",
    "end": "544080"
  },
  {
    "text": "when we are requesting",
    "start": "544080",
    "end": "546959"
  },
  {
    "text": "this is the idea but when you do that",
    "start": "546959",
    "end": "550080"
  },
  {
    "text": "in each page",
    "start": "550080",
    "end": "552160"
  },
  {
    "text": "you're requesting footer and",
    "start": "552160",
    "end": "554320"
  },
  {
    "text": "header as well",
    "start": "554320",
    "end": "555760"
  },
  {
    "text": "right",
    "start": "555760",
    "end": "557040"
  },
  {
    "text": "so",
    "start": "557040",
    "end": "558800"
  },
  {
    "text": "if you look at the time and lengths of",
    "start": "558800",
    "end": "561360"
  },
  {
    "text": "getting this data",
    "start": "561360",
    "end": "563920"
  },
  {
    "text": "these footer header and the dynamic data",
    "start": "563920",
    "end": "567440"
  },
  {
    "text": "all comes together where if we cache",
    "start": "567440",
    "end": "570160"
  },
  {
    "text": "them",
    "start": "570160",
    "end": "570959"
  },
  {
    "text": "and send like as in a stream you can",
    "start": "570959",
    "end": "573360"
  },
  {
    "text": "actually load header and footer",
    "start": "573360",
    "end": "576480"
  },
  {
    "text": "from the cache",
    "start": "576480",
    "end": "578080"
  },
  {
    "text": "and",
    "start": "578080",
    "end": "579200"
  },
  {
    "text": "then you can load the data or send the",
    "start": "579200",
    "end": "581600"
  },
  {
    "text": "data",
    "start": "581600",
    "end": "582560"
  },
  {
    "text": "the dynamic data to the browser when",
    "start": "582560",
    "end": "584560"
  },
  {
    "text": "it's",
    "start": "584560",
    "end": "585279"
  },
  {
    "text": "coming necessary as a readable stream",
    "start": "585279",
    "end": "589200"
  },
  {
    "text": "in this case right now because writing",
    "start": "589200",
    "end": "592560"
  },
  {
    "text": "this logic",
    "start": "592560",
    "end": "593920"
  },
  {
    "text": "in a single javascript format it will be",
    "start": "593920",
    "end": "596880"
  },
  {
    "text": "a little bit cumbersome so i'm going to",
    "start": "596880",
    "end": "598959"
  },
  {
    "text": "use a library to facilitate that for me",
    "start": "598959",
    "end": "601519"
  },
  {
    "text": "for the library that i'm going to use is",
    "start": "601519",
    "end": "603519"
  },
  {
    "text": "workbox",
    "start": "603519",
    "end": "604800"
  },
  {
    "text": "so where you can write your service",
    "start": "604800",
    "end": "606560"
  },
  {
    "text": "worker easily",
    "start": "606560",
    "end": "609440"
  },
  {
    "start": "608000",
    "end": "628000"
  },
  {
    "text": "so workbox allows me to precache my",
    "start": "609440",
    "end": "613360"
  },
  {
    "text": "content i will have two routes here",
    "start": "613360",
    "end": "617839"
  },
  {
    "text": "a shell header and a shell footer",
    "start": "617839",
    "end": "621120"
  },
  {
    "text": "i don't need to block my customer",
    "start": "621120",
    "end": "622720"
  },
  {
    "text": "because of some resources in this case i",
    "start": "622720",
    "end": "624880"
  },
  {
    "text": "will cache them when i install the",
    "start": "624880",
    "end": "627200"
  },
  {
    "text": "service worker",
    "start": "627200",
    "end": "629040"
  },
  {
    "start": "628000",
    "end": "696000"
  },
  {
    "text": "once that is in place then i'm going to",
    "start": "629040",
    "end": "631360"
  },
  {
    "text": "use two strategies for the rest of the",
    "start": "631360",
    "end": "634800"
  },
  {
    "text": "content",
    "start": "634800",
    "end": "636399"
  },
  {
    "text": "one is the continuous strategy where in",
    "start": "636399",
    "end": "638800"
  },
  {
    "text": "this case i'm going to use a sale with",
    "start": "638800",
    "end": "641760"
  },
  {
    "text": "revalidate",
    "start": "641760",
    "end": "643760"
  },
  {
    "text": "and then the cash strategy comes from",
    "start": "643760",
    "end": "646160"
  },
  {
    "text": "the cache",
    "start": "646160",
    "end": "647920"
  },
  {
    "text": "so this is in service worker right now",
    "start": "647920",
    "end": "651200"
  },
  {
    "text": "so i'm going to register my html path",
    "start": "651200",
    "end": "653680"
  },
  {
    "text": "and say when there is html request in my",
    "start": "653680",
    "end": "656880"
  },
  {
    "text": "path or navigation then",
    "start": "656880",
    "end": "659440"
  },
  {
    "text": "i will use the stream api",
    "start": "659440",
    "end": "662160"
  },
  {
    "text": "but via the workbox abstraction right",
    "start": "662160",
    "end": "666000"
  },
  {
    "text": "and the strategy will be",
    "start": "666000",
    "end": "668720"
  },
  {
    "text": "please",
    "start": "668720",
    "end": "670880"
  },
  {
    "text": "send me",
    "start": "670880",
    "end": "672240"
  },
  {
    "text": "the shell header and the footer from the",
    "start": "672240",
    "end": "675200"
  },
  {
    "text": "cache",
    "start": "675200",
    "end": "676880"
  },
  {
    "text": "and",
    "start": "676880",
    "end": "678240"
  },
  {
    "text": "make my content always coming from",
    "start": "678240",
    "end": "681440"
  },
  {
    "text": "network",
    "start": "681440",
    "end": "682800"
  },
  {
    "text": "so in this case when i'm requesting a",
    "start": "682800",
    "end": "685040"
  },
  {
    "text": "page",
    "start": "685040",
    "end": "686399"
  },
  {
    "text": "those two parts are coming from cache",
    "start": "686399",
    "end": "688399"
  },
  {
    "text": "right away",
    "start": "688399",
    "end": "689680"
  },
  {
    "text": "and the second part is coming when it's",
    "start": "689680",
    "end": "692079"
  },
  {
    "text": "available",
    "start": "692079",
    "end": "694639"
  },
  {
    "start": "696000",
    "end": "754000"
  },
  {
    "text": "all right",
    "start": "697360",
    "end": "699680"
  },
  {
    "text": "what i want you to take away this is",
    "start": "700959",
    "end": "703360"
  },
  {
    "text": "very quick to go very deep into the",
    "start": "703360",
    "end": "705680"
  },
  {
    "text": "stream api in 10 minutes but i give you",
    "start": "705680",
    "end": "708800"
  },
  {
    "text": "some idea how you can create a powerful",
    "start": "708800",
    "end": "711760"
  },
  {
    "text": "stream",
    "start": "711760",
    "end": "713040"
  },
  {
    "text": "of network data to your client",
    "start": "713040",
    "end": "715600"
  },
  {
    "text": "application",
    "start": "715600",
    "end": "716880"
  },
  {
    "text": "that will",
    "start": "716880",
    "end": "718079"
  },
  {
    "text": "hugely impact the first",
    "start": "718079",
    "end": "721040"
  },
  {
    "text": "contentful paint time",
    "start": "721040",
    "end": "723680"
  },
  {
    "text": "and you will also",
    "start": "723680",
    "end": "726160"
  },
  {
    "text": "know right now that with service worker",
    "start": "726160",
    "end": "728720"
  },
  {
    "text": "you can do a lot more than just caching",
    "start": "728720",
    "end": "733279"
  },
  {
    "text": "and the fact that service worker runs in",
    "start": "733279",
    "end": "735279"
  },
  {
    "text": "another thread",
    "start": "735279",
    "end": "736639"
  },
  {
    "text": "it it helps you to like for example the",
    "start": "736639",
    "end": "739279"
  },
  {
    "text": "json transformation that is running in",
    "start": "739279",
    "end": "741680"
  },
  {
    "text": "another thread without blocking anything",
    "start": "741680",
    "end": "743839"
  },
  {
    "text": "in ui thread",
    "start": "743839",
    "end": "745440"
  },
  {
    "text": "so that helps you to improve your",
    "start": "745440",
    "end": "749680"
  },
  {
    "text": "ux in your application",
    "start": "750720",
    "end": "754000"
  },
  {
    "start": "754000",
    "end": "777000"
  },
  {
    "text": "all right",
    "start": "754000",
    "end": "754959"
  },
  {
    "text": "that was it from me very quick",
    "start": "754959",
    "end": "757600"
  },
  {
    "text": "and thank you very much if you have",
    "start": "757600",
    "end": "758880"
  },
  {
    "text": "questions then after actually this is",
    "start": "758880",
    "end": "760720"
  },
  {
    "text": "slides or these talks",
    "start": "760720",
    "end": "763120"
  },
  {
    "text": "i can answer your questions i'll leave",
    "start": "763120",
    "end": "765360"
  },
  {
    "text": "this stage for the second speakers",
    "start": "765360",
    "end": "766959"
  },
  {
    "text": "because i think i am a little bit over",
    "start": "766959",
    "end": "768560"
  },
  {
    "text": "time",
    "start": "768560",
    "end": "771560"
  },
  {
    "text": "you",
    "start": "777040",
    "end": "779120"
  }
]