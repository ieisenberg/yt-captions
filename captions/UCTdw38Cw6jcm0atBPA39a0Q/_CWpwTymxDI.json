[
  {
    "text": "hi how are you all doing I'm gonna just",
    "start": "8310",
    "end": "13780"
  },
  {
    "text": "take a sip of this water if you don't mind my throat's a bit dry it's actually",
    "start": "13780",
    "end": "21430"
  },
  {
    "text": "vodka don't just kidding is that on film so um anyway hi how are you doing today",
    "start": "21430",
    "end": "27509"
  },
  {
    "text": "who likes docker oh yeah some people do some people don't well so the impetus",
    "start": "27509",
    "end": "33969"
  },
  {
    "text": "for this talk is to fit what normally use a three day workshop or lots of different experiences in an hour which",
    "start": "33969",
    "end": "40840"
  },
  {
    "text": "should be fun so the whole so many docker platforms so little time thing the so little time thing is maybe not",
    "start": "40840",
    "end": "46660"
  },
  {
    "text": "enough time for everybody to know all platforms but also maybe only a little time to talk so I might have to go a",
    "start": "46660",
    "end": "52720"
  },
  {
    "text": "little bit fast I have a lot of things I'd like to share with you maybe I should introduce myself I don't know if",
    "start": "52720",
    "end": "58720"
  },
  {
    "text": "I've met everybody but Michelle Drew Bustamante I'm a founder of science and we have an architecture consulting",
    "start": "58720",
    "end": "64689"
  },
  {
    "text": "company that has of late I built a micro services practice with a lot of great",
    "start": "64689",
    "end": "70570"
  },
  {
    "text": "people in the ecosystem and so we've had the good luck of I guess getting some you know real experiences on Amazon on",
    "start": "70570",
    "end": "77860"
  },
  {
    "text": "Azure with DCOs with without ec2 container services with docker",
    "start": "77860",
    "end": "84130"
  },
  {
    "text": "datacenter even which is an interesting option or at least will be probably at",
    "start": "84130",
    "end": "90069"
  },
  {
    "text": "some point so I'm going to talk just a little bit about those experiences but also talk a little bit about just the",
    "start": "90069",
    "end": "96130"
  },
  {
    "text": "things that we think about and at the at the same time show a few demos just sort of bring you through the story if that",
    "start": "96130",
    "end": "101709"
  },
  {
    "text": "makes sense so I'm gonna start with just sort of the flow of you know we could be",
    "start": "101709",
    "end": "109119"
  },
  {
    "text": "developers in a room and have a startup and just build images and run containers",
    "start": "109119",
    "end": "114429"
  },
  {
    "text": "and put it on a box and have no load bouncing and that would be my simple docker experience but how many people do",
    "start": "114429",
    "end": "120880"
  },
  {
    "text": "that actually and are not afraid to admit that right because it's fast and it's effective and the containers",
    "start": "120880",
    "end": "127569"
  },
  {
    "text": "restart really fast so if you want to replace one and if high availability is not necessarily mission-critical for",
    "start": "127569",
    "end": "133959"
  },
  {
    "text": "that particular applet maybe suggest your blog or website and you just don't really need to pay for all that",
    "start": "133959",
    "end": "139900"
  },
  {
    "text": "infrastructure it works right so there's some people that actually go that route and just automate that with ansible and",
    "start": "139900",
    "end": "145690"
  },
  {
    "text": "so on so that's one story and then there's of course the come other end which is the one that we normally deal with when we think about",
    "start": "145690",
    "end": "151590"
  },
  {
    "text": "people trying to move to micro-services right so I want to take you through that flow talk about docker networking",
    "start": "151590",
    "end": "157800"
  },
  {
    "text": "composition scheduling constraints orchestration features and as we do that show some demos in the different",
    "start": "157800",
    "end": "164460"
  },
  {
    "text": "platforms and talk a little bit about how we make decisions so it all starts with this right people get excited that",
    "start": "164460",
    "end": "170670"
  },
  {
    "text": "they can build once and have it run on this machine and ship the same image somewhere else and have it actually run",
    "start": "170670",
    "end": "175950"
  },
  {
    "text": "there and actually work which is great and that's sort of the promise in general of docker right as we know it so",
    "start": "175950",
    "end": "182330"
  },
  {
    "text": "to start off I'm just going to go ahead and jump into a command line here let's",
    "start": "182330",
    "end": "189330"
  },
  {
    "text": "get into a good spot let's see which one I'm in okay perfect so I'm going to just",
    "start": "189330",
    "end": "197370"
  },
  {
    "text": "tunnel into my build agent over here and we're gonna go into my directory and",
    "start": "197370",
    "end": "205790"
  },
  {
    "text": "what I have on here is two applications I have an API service and I have a web",
    "start": "205790",
    "end": "211200"
  },
  {
    "text": "application a client so the application client will obviously call the service and so we need to bring those two",
    "start": "211200",
    "end": "216989"
  },
  {
    "text": "together right what I'm gonna do first is just kind of bring this up here so",
    "start": "216989",
    "end": "223440"
  },
  {
    "text": "you can see and I'm going to jump into content - API and we'll take a look at the",
    "start": "223440",
    "end": "231120"
  },
  {
    "text": "docker file so this is just a simple node application right it's going to",
    "start": "231120",
    "end": "237090"
  },
  {
    "text": "copy the directory over there's no compile step so I don't have to do any sort of build of the application itself",
    "start": "237090",
    "end": "244230"
  },
  {
    "text": "and we'll copy the files over will expose poor at 3001 and then start at",
    "start": "244230",
    "end": "250920"
  },
  {
    "text": "the entry point so that's it nothing fancy going on there what I'm going to",
    "start": "250920",
    "end": "256590"
  },
  {
    "text": "do first is do a docker images so I do have a couple of images on here actually",
    "start": "256590",
    "end": "261919"
  },
  {
    "text": "so I'm going to go ahead and just do a",
    "start": "261919",
    "end": "268340"
  },
  {
    "text": "there we go oops okay sorry got another thing to do here",
    "start": "275700",
    "end": "282100"
  },
  {
    "text": "I thought I cleaned that so just just second I'll show you my fancy remove all",
    "start": "282100",
    "end": "287380"
  },
  {
    "text": "thing okay cuz that's pretty fancy let's do this then and we'll try and get",
    "start": "287380",
    "end": "295990"
  },
  {
    "text": "through that image perfect and we'll do another one for web perfect and good to go okay so docker images and it looks like",
    "start": "295990",
    "end": "308830"
  },
  {
    "text": "we're just about good okay so I'm gonna ignore the other two they don't matter so I have argon already downloaded",
    "start": "308830",
    "end": "314260"
  },
  {
    "text": "already and so now I'm going to go ahead and do a build so we'll do a build of the API so I'm going to build the",
    "start": "314260",
    "end": "322180"
  },
  {
    "text": "content API I'm using a prefix dust blonde that's my docker hub account so the idea would be eventually going to",
    "start": "322180",
    "end": "327730"
  },
  {
    "text": "push that to a image registry right so on my machine as a developer this is something I work with some of my",
    "start": "327730",
    "end": "334090"
  },
  {
    "text": "companies around in terms of getting started we need a environment on our local we need to be able to run and test",
    "start": "334090",
    "end": "339730"
  },
  {
    "text": "things just as regular api's and then we need to flip the bit and be able to run it as a container hopefully with",
    "start": "339730",
    "end": "345310"
  },
  {
    "text": "environment variables just allowing us to witch between the two right so it's one of the sort of new procedures that",
    "start": "345310",
    "end": "350650"
  },
  {
    "text": "happen if you're in Visual Studio you would do it one way if you're using sublime you would do another but it's a",
    "start": "350650",
    "end": "355900"
  },
  {
    "text": "thing to think about right so when I go ahead and build this I should be able to",
    "start": "355900",
    "end": "362130"
  },
  {
    "text": "oops something else went wrong here oh I'm not in the right directory excuse me",
    "start": "362160",
    "end": "368470"
  },
  {
    "text": "for that content API I think I moved out",
    "start": "368470",
    "end": "373930"
  },
  {
    "text": "and we'll try that again yeah built",
    "start": "373930",
    "end": "378330"
  },
  {
    "text": "okay oops April's I'm completely yeah I",
    "start": "381050",
    "end": "390199"
  },
  {
    "text": "messed up my command line and I hit something didn't I I missed the dot hello I think something's happening",
    "start": "390199",
    "end": "397699"
  },
  {
    "text": "while I'm typing that's mischievous so anyway that's gonna go ahead and build and that was only you know five minutes",
    "start": "397699",
    "end": "403729"
  },
  {
    "text": "really it shouldn't have taken that long at all it would have been like one minute if everything went well so um okay so I have an image now right docker",
    "start": "403729",
    "end": "410509"
  },
  {
    "text": "images docker images yeah my typing is like a little latency here I'm gonna go",
    "start": "410509",
    "end": "416900"
  },
  {
    "text": "slower that's the problem so content API is now there on the top right so das",
    "start": "416900",
    "end": "423470"
  },
  {
    "text": "blonde content API not sure if you're actually seeing the full word there what's up with that yeah better okay so",
    "start": "423470",
    "end": "432139"
  },
  {
    "text": "I have this running if I do the docker PS we're gonna see that there shouldn't",
    "start": "432139",
    "end": "438259"
  },
  {
    "text": "be any containers running right now so what I'm gonna do is also run that API so we'll go ahead and do a run I'm gonna",
    "start": "438259",
    "end": "446419"
  },
  {
    "text": "just do a quick run command and a couple things I want to point out here one is",
    "start": "446419",
    "end": "451900"
  },
  {
    "text": "when I run locally I could just run the API by itself but I also want to connect the web app to the API and I also would",
    "start": "451900",
    "end": "458029"
  },
  {
    "text": "like to do that with something simpler than a hard-coded API URL with port so",
    "start": "458029",
    "end": "463159"
  },
  {
    "text": "what I'm going to do is use DNS and so I'm going to create a network so I have this network called fat medical that is",
    "start": "463159",
    "end": "469159"
  },
  {
    "text": "already created and so I'm attaching that when I run it I'm going to show you how to do that with a composed so the",
    "start": "469159",
    "end": "474319"
  },
  {
    "text": "point of this is really just to show that one of the things I might consider is how I want to connect containers and",
    "start": "474319",
    "end": "479380"
  },
  {
    "text": "package those because when I go to a real orchestration engine I'm obviously going to have a way to stitch those up",
    "start": "479380",
    "end": "484580"
  },
  {
    "text": "to a load balancer I'm going to have a way to have requests to the load balancer find the right container and",
    "start": "484580",
    "end": "490099"
  },
  {
    "text": "actually have multiple instances of that container with different ports randomly stitched and distributed across the",
    "start": "490099",
    "end": "495979"
  },
  {
    "text": "nodes right so I want to still have that same configuration or potential behavior when I'm running locally so that I can",
    "start": "495979",
    "end": "501590"
  },
  {
    "text": "have that you know consistent environment variable progression through my development through my tests through",
    "start": "501590",
    "end": "506990"
  },
  {
    "text": "my orchestration engine if that makes sense so I'll go ahead and run this and all that does is you know basically give",
    "start": "506990",
    "end": "514370"
  },
  {
    "text": "me a running API so if I do a docker PS we'll see that it's running if I do a",
    "start": "514370",
    "end": "521539"
  },
  {
    "text": "curl on the endpoint I should be able to do a localhost 3001 speakers is the",
    "start": "521539",
    "end": "530480"
  },
  {
    "text": "endpoint and that should give me a bunch of stuff which it did right so we know it's working great so I'm going to go",
    "start": "530480",
    "end": "536990"
  },
  {
    "text": "back and do a Content web and the same thing goes here but this time I want to",
    "start": "536990",
    "end": "542750"
  },
  {
    "text": "do a docker file and just show that I have an environment variable there right so right now the environment variable is",
    "start": "542750",
    "end": "548930"
  },
  {
    "text": "actually pointing at localhost 3001 which would mean that when I run this I should be able to hit the outside port",
    "start": "548930",
    "end": "554300"
  },
  {
    "text": "the web container should be able to find you know the the the web container",
    "start": "554300",
    "end": "561500"
  },
  {
    "text": "should be able to find the API container but there's a there's a catch right if I'm coming in from outside there needs",
    "start": "561500",
    "end": "567890"
  },
  {
    "text": "to be some form of DNS and that's where the network would come in so if I'm actually hitting at localhost without a proper DNS then that's actually not",
    "start": "567890",
    "end": "574130"
  },
  {
    "text": "going to work so I just want to illustrate that first so that you knew that there are some of our variables in",
    "start": "574130",
    "end": "579140"
  },
  {
    "text": "there and also that the app is actually respecting that internally it's actually calling the API based on the environment",
    "start": "579140",
    "end": "584330"
  },
  {
    "text": "variable so I'm gonna go ahead and exit and let's go to our build",
    "start": "584330",
    "end": "593270"
  },
  {
    "text": "and we'll build the web this time and",
    "start": "593270",
    "end": "598900"
  },
  {
    "text": "yeah oops forward one here I'll just get that and",
    "start": "598900",
    "end": "606940"
  },
  {
    "text": "yeah that just did the wrong thing",
    "start": "606940",
    "end": "611050"
  },
  {
    "text": "we'll let it finish cuz well I have no choice probably there's that okay so",
    "start": "614300",
    "end": "623130"
  },
  {
    "text": "let's see finish one of these days okay let's see what I actually did colleges",
    "start": "623130",
    "end": "629370"
  },
  {
    "text": "run that API one again which is wrong because that will replace the API with the web content so we're gonna give that",
    "start": "629370",
    "end": "636120"
  },
  {
    "text": "another shot it's fun watching the command-line run by though isn't it cool",
    "start": "636120",
    "end": "643070"
  },
  {
    "text": "content API is probably a mess right now so I'm just going to go ahead and fix",
    "start": "643070",
    "end": "648840"
  },
  {
    "text": "that up yeah build content API and we'll",
    "start": "648840",
    "end": "654780"
  },
  {
    "text": "let that run and I will now have another image okay docker PS I still me with one",
    "start": "654780",
    "end": "663690"
  },
  {
    "text": "container running docker images I should have the new image and I do so I have",
    "start": "663690",
    "end": "669420"
  },
  {
    "text": "the content web image and now we can go ahead and try to run that so let's go ahead and do a run only this time I'm",
    "start": "669420",
    "end": "675360"
  },
  {
    "text": "going to do it with web so you'll notice that on the command line I'm passing a content API URL so I'm overriding the",
    "start": "675360",
    "end": "682620"
  },
  {
    "text": "API URL with the DNS name of API which",
    "start": "682620",
    "end": "688290"
  },
  {
    "text": "is the name of the actual API when it's running so basically under that medical",
    "start": "688290",
    "end": "695550"
  },
  {
    "text": "when I registered the API I'm using the DNS name API and I should be able to then hit that when I'm coming in from",
    "start": "695550",
    "end": "701850"
  },
  {
    "text": "outside because there will be a network to it on this single Linux box in the cloud",
    "start": "701850",
    "end": "707220"
  },
  {
    "text": "okay so this is equivalent to passing",
    "start": "707220",
    "end": "712650"
  },
  {
    "text": "parameters that would be like a service description right or a task definition and so this is a very beginning of the",
    "start": "712650",
    "end": "718950"
  },
  {
    "text": "things we think about when we're running containers when we go to an orchestration engine we need a way to",
    "start": "718950",
    "end": "724380"
  },
  {
    "text": "supply those environment variables network definitions dependencies may be",
    "start": "724380",
    "end": "730140"
  },
  {
    "text": "between different containers in a single definition which would be potentially done with a compose file which I'll get",
    "start": "730140",
    "end": "736680"
  },
  {
    "text": "to or potentially be done with other capabilities that are provided by the platform so for example when I upload a",
    "start": "736680",
    "end": "743850"
  },
  {
    "text": "container to Google container engine it gives me a way to use a compose file or a Yama file but",
    "start": "743850",
    "end": "751270"
  },
  {
    "text": "when I go to Amazon continue services I have two or three ec2 container services then I have to provide a different",
    "start": "751270",
    "end": "757810"
  },
  {
    "text": "format right it's a task definition so I convert the gamal to a task definition when I go to DCOs I'm using a JSON file",
    "start": "757810",
    "end": "765940"
  },
  {
    "text": "is a completely different format but they all sort of contain the same thing and the beginning of that is how do you",
    "start": "765940",
    "end": "771790"
  },
  {
    "text": "want to run the container so the point that I'm just bringing up here is right now I'm just passing a couple things on the command line which happened to be to",
    "start": "771790",
    "end": "778510"
  },
  {
    "text": "the run command like I need to know the network I need to know maybe some environment variables and those are the",
    "start": "778510",
    "end": "784210"
  },
  {
    "text": "things that would switch when I go between environments right and so eventually I would do that a different way right now this is pretty crude it's",
    "start": "784210",
    "end": "790870"
  },
  {
    "text": "just docker you know native right so when I run this it will have that override and if I do a docker PS then I",
    "start": "790870",
    "end": "800050"
  },
  {
    "text": "have the two containers running and if I do a curl against it then I should be",
    "start": "800050",
    "end": "805870"
  },
  {
    "text": "able to hit a local host oops keep doing that and 3,000 for the web",
    "start": "805870",
    "end": "815580"
  },
  {
    "text": "and it should just return you know that the page is off right now I'm not going",
    "start": "815580",
    "end": "821710"
  },
  {
    "text": "to see success from the web page to the API unless I actually go ahead and run it and hit something that's going to",
    "start": "821710",
    "end": "827950"
  },
  {
    "text": "call the API right so I'm gonna head over to here and this is the website and",
    "start": "827950",
    "end": "838740"
  },
  {
    "text": "so if I go to the main part of the website if I just kind of launch the first page let's do this then I'm not",
    "start": "838740",
    "end": "848080"
  },
  {
    "text": "going to see anything interesting but when I click on the speakers or on the sessions that's when it's actually calling the API which it turns all that",
    "start": "848080",
    "end": "855190"
  },
  {
    "text": "JSON you saw the first time so we know that then that's working and had I gone through the step of showing you without",
    "start": "855190",
    "end": "860770"
  },
  {
    "text": "the network or miss configuring the environment variable then we wouldn't see that work makes sense okay all right",
    "start": "860770",
    "end": "866610"
  },
  {
    "text": "but that is a quick start now the point",
    "start": "866610",
    "end": "872620"
  },
  {
    "text": "of that was just to sort of talk a little bit about task definitions talk a little bit about the fact that it actually applies even with docker native",
    "start": "872620",
    "end": "878950"
  },
  {
    "text": "run and that you know there are many ways to do that or achieve that same goal when",
    "start": "878950",
    "end": "884420"
  },
  {
    "text": "we get to the container platforms docker compose then is you know the sort of",
    "start": "884420",
    "end": "890450"
  },
  {
    "text": "docker native mechanism or descriptor for creating service definitions which",
    "start": "890450",
    "end": "896150"
  },
  {
    "text": "would be a Yama file and so in here I can follow the definition language to",
    "start": "896150",
    "end": "902030"
  },
  {
    "text": "put things like you know how many may be multiple container images may be link them together or make them dependent on",
    "start": "902030",
    "end": "908540"
  },
  {
    "text": "each other there used to be a way to do direct linking but that's sort of obsolete because we really want to use DNS I can specify the network it will",
    "start": "908540",
    "end": "915890"
  },
  {
    "text": "create the network if it's not there and then attach or join that container to",
    "start": "915890",
    "end": "921080"
  },
  {
    "text": "the network it will allow me to specify volumes of environment variables and",
    "start": "921080",
    "end": "926600"
  },
  {
    "text": "other configuration values that I might want to have access to okay so that definition file then becomes a thing",
    "start": "926600",
    "end": "932780"
  },
  {
    "text": "that theoretically if all platforms were created equal they would all share the same language they just don't so it's a",
    "start": "932780",
    "end": "938600"
  },
  {
    "text": "bit of a modification but we can take a look at how I would run that from the same machine if I just wanted to so",
    "start": "938600",
    "end": "946250"
  },
  {
    "text": "let's go ahead and do a quick removal of",
    "start": "946250",
    "end": "951500"
  },
  {
    "text": "all those containers so docker images or docker PS should show me nothing running right and then what I can do instead is",
    "start": "951500",
    "end": "958310"
  },
  {
    "text": "go back a level and do a docker compose",
    "start": "958310",
    "end": "964900"
  },
  {
    "text": "oops sorry I forgot the dash",
    "start": "964900",
    "end": "969130"
  },
  {
    "text": "and then that should address starting both of those and then I should be able",
    "start": "972120",
    "end": "977190"
  },
  {
    "text": "to then you know see them running so let's go ahead and do that right so now",
    "start": "977190",
    "end": "984180"
  },
  {
    "text": "I have at three thousand one and at three thousand those API and web application running but it was done with",
    "start": "984180",
    "end": "991140"
  },
  {
    "text": "the single command so it sort of grouped them together right so it's a single definition for actually multiple containers doesn't have to be multiple",
    "start": "991140",
    "end": "997170"
  },
  {
    "text": "containers could be one with environment variables and so on right so this would be a way for",
    "start": "997170",
    "end": "1002180"
  },
  {
    "text": "application grouping for example if you want them to be a single sort of deployment artifact and not all of the",
    "start": "1002180",
    "end": "1007790"
  },
  {
    "text": "orchestration engines let you do that the same way so each of them might have their own thoughts around how do you",
    "start": "1007790",
    "end": "1013160"
  },
  {
    "text": "combine so when we think about composing and we think about application grouping",
    "start": "1013160",
    "end": "1018410"
  },
  {
    "text": "with kubernetes you have pods which allow you to have multiple containers treated as a single unit in terms of",
    "start": "1018410",
    "end": "1025610"
  },
  {
    "text": "deployment upgrades and so on when we think about DCOs they have application concept which I",
    "start": "1025610",
    "end": "1033110"
  },
  {
    "text": "think they just renamed to services because there's been an update so now I have to remember when we go in there and",
    "start": "1033110",
    "end": "1038420"
  },
  {
    "text": "then in AWS it's a little bit less obvious right you have to upload a task definition and it's it's not exactly",
    "start": "1038420",
    "end": "1045829"
  },
  {
    "text": "done in the same way in terms of grouping so we will see AWS when I go in there too okay so again compose grouping",
    "start": "1045829",
    "end": "1054590"
  },
  {
    "text": "network environment variables having it all run at once it looks like I can still you know curl the URL and that",
    "start": "1054590",
    "end": "1065530"
  },
  {
    "text": "should work and I should be able to hit",
    "start": "1065530",
    "end": "1072110"
  },
  {
    "text": "that and that should work and I should be able to still hit the site and that should work okay so far so good",
    "start": "1072110",
    "end": "1080240"
  },
  {
    "text": "that's good so you know because you just never know with these connections and things okay so we've done a bit of a",
    "start": "1080240",
    "end": "1089030"
  },
  {
    "text": "compose we've done a couple of quick tour items let's move on for our quick hour so the other thing we need to think",
    "start": "1089030",
    "end": "1095929"
  },
  {
    "text": "about is where do I push the images right um I'm going to be a developer developing locally like I just did I can",
    "start": "1095929",
    "end": "1101810"
  },
  {
    "text": "fully function that way I can have a build agent I'm using cloud I don't have to actually even work",
    "start": "1101810",
    "end": "1107509"
  },
  {
    "text": "off my local but I could you know I could use docker for Windows and work locally the same way I'm working off a",
    "start": "1107509",
    "end": "1113149"
  },
  {
    "text": "Mac here but this actually does happen to be a little out ok when we look at",
    "start": "1113149",
    "end": "1119899"
  },
  {
    "text": "actually deploying to another orchestration engine or to deploy to an environment in the cloud I'm not likely",
    "start": "1119899",
    "end": "1125330"
  },
  {
    "text": "to be tunneling in like I'm showing now and manually doing that deployment right so I need to be able to pull the images",
    "start": "1125330",
    "end": "1130999"
  },
  {
    "text": "from somewhere first of all and then probably that's on purpose because of my",
    "start": "1130999",
    "end": "1136309"
  },
  {
    "text": "AWS demo but I'll turn it off for a sec I might get an alert later so we remind me to turn it back on so",
    "start": "1136309",
    "end": "1144980"
  },
  {
    "text": "right so I need a place that I can put the images so that they can be distributed so that the you know",
    "start": "1144980",
    "end": "1150529"
  },
  {
    "text": "orchestration aja cluster can actually pull the images down and run the containers right as part of a scheduling",
    "start": "1150529",
    "end": "1156110"
  },
  {
    "text": "act so we have to pick a container registry for that so in the demos I'm",
    "start": "1156110",
    "end": "1162049"
  },
  {
    "text": "using docker hub right so docker hub you can do free open public containers and",
    "start": "1162049",
    "end": "1167779"
  },
  {
    "text": "have your own account likely for a company that's not going to suffice you can have a paid account and docker hub",
    "start": "1167779",
    "end": "1174019"
  },
  {
    "text": "to do the same but likely if you're choosing a platform like AWS then you're going to use the you know",
    "start": "1174019",
    "end": "1181519"
  },
  {
    "text": "the Amazon container registry here right so you're gonna use that instead easy to",
    "start": "1181519",
    "end": "1187039"
  },
  {
    "text": "container registry if you're working in in Google container engine then you're",
    "start": "1187039",
    "end": "1192830"
  },
  {
    "text": "going to be using its internalized registry which it provides for you as part of it if you're using Azure",
    "start": "1192830",
    "end": "1199669"
  },
  {
    "text": "container service then you're now able only of late to use the Azure container registry so up until then I was kind of",
    "start": "1199669",
    "end": "1206990"
  },
  {
    "text": "stuck in Azure right like what do I use for demonstrations I could use you know the docker hub but otherwise I'd have to",
    "start": "1206990",
    "end": "1214129"
  },
  {
    "text": "have a paid account or go through the heavy burden of implementing my own registry and hosting that cluster and",
    "start": "1214129",
    "end": "1220429"
  },
  {
    "text": "managing that cluster which is yet one more thing to manage out of all the things I'm now taking on when I take on",
    "start": "1220429",
    "end": "1225440"
  },
  {
    "text": "a micro services architecture and containers make sense so we probably want something built in we want to try",
    "start": "1225440",
    "end": "1231980"
  },
  {
    "text": "not to have to deploy it I've actually worked with teams and we've managed to finally get one up and running",
    "start": "1231980",
    "end": "1238000"
  },
  {
    "text": "but it's just not really trivial honestly it's better to have a hosted option if you can something baked then",
    "start": "1238000",
    "end": "1246250"
  },
  {
    "text": "there's the new docker data center implementation which is a docker native but paid enterprise product that's just",
    "start": "1246250",
    "end": "1253750"
  },
  {
    "text": "on top of docker and docker swarm and so on and that comes also with a DTR or a",
    "start": "1253750",
    "end": "1259270"
  },
  {
    "text": "docker trusted registry so they try to take the pain away for you by giving you a product you can pay for that makes it",
    "start": "1259270",
    "end": "1265090"
  },
  {
    "text": "easier to set that up on your own VM so you're still managing it it's still your cluster so it's not a hosted service but",
    "start": "1265090",
    "end": "1272980"
  },
  {
    "text": "it's at least something accessible to you maybe a little easier than manually trying to deploy it makes sense ok so we",
    "start": "1272980",
    "end": "1280330"
  },
  {
    "text": "need to care about registries we're doing that because ultimately we want it probably at least to the CI part of CI",
    "start": "1280330",
    "end": "1286690"
  },
  {
    "text": "CD not everybody wants to automate all the way through to deployment because of the you know the risks associated you",
    "start": "1286690",
    "end": "1293740"
  },
  {
    "text": "have to be very ready for that you have to be ready to respond to rollback you have to be doing drills around those",
    "start": "1293740",
    "end": "1299290"
  },
  {
    "text": "things so that you're able to manage all these hundreds of containers that are floating around they probably don't",
    "start": "1299290",
    "end": "1305470"
  },
  {
    "text": "float that was just too badly chosen word so the idea would be at least I",
    "start": "1305470",
    "end": "1311530"
  },
  {
    "text": "want to be able to check in and have it automate building the image at least and this is an interesting topic too because",
    "start": "1311530",
    "end": "1317320"
  },
  {
    "text": "what I need to care about in this whole world of containers and orchestration and deployment is the process for not",
    "start": "1317320",
    "end": "1324790"
  },
  {
    "text": "only just building an image and having it deployed into the image registry but how do I tag these things how do I",
    "start": "1324790",
    "end": "1331480"
  },
  {
    "text": "promote these things through environments how do I get it from dev to test to QA to production a lot of folks",
    "start": "1331480",
    "end": "1339790"
  },
  {
    "text": "maybe just rebuild right from your source today when you're not doing container work so you're probably just",
    "start": "1339790",
    "end": "1346690"
  },
  {
    "text": "you know expecting that a particular label on the source if I build it once and build it twice and build it three",
    "start": "1346690",
    "end": "1352270"
  },
  {
    "text": "times it'll just be the same right except for environment variables and that should be the case but maybe",
    "start": "1352270",
    "end": "1359710"
  },
  {
    "text": "there's just a slightly more reliable aspect to this process which would be you literally built it once you",
    "start": "1359710",
    "end": "1366730"
  },
  {
    "text": "literally don't touch it again and same image literally went from test to",
    "start": "1366730",
    "end": "1371919"
  },
  {
    "text": "test - sorry from dev to test to staging and to prod with the only change being those environment variables that come",
    "start": "1371919",
    "end": "1378220"
  },
  {
    "text": "out of your service description and so on make sense so that's the idea is we",
    "start": "1378220",
    "end": "1383919"
  },
  {
    "text": "want to get to a point where we're not we have no problem with automating the build of the image let that happen all",
    "start": "1383919",
    "end": "1389350"
  },
  {
    "text": "the time when developers are checking in but we need a labeling process for after the fact the default labeling will be latest the",
    "start": "1389350",
    "end": "1397330"
  },
  {
    "text": "you know thing we need to think about our repository tags if I'm pushing it to Asher Amazon DT our Google container",
    "start": "1397330",
    "end": "1405580"
  },
  {
    "text": "engine docker hub actually docker hub doesn't require anything but that you put your account in the name which is",
    "start": "1405580",
    "end": "1411850"
  },
  {
    "text": "why I chose dose blind slash something but the others require some very long",
    "start": "1411850",
    "end": "1417070"
  },
  {
    "text": "interesting tags to get at that registry and then you always have to security around that with Azure ad sorry as your",
    "start": "1417070",
    "end": "1424929"
  },
  {
    "text": "registry we have Azure ad and it's actually surprisingly because I'm not always a fan of of the the process of",
    "start": "1424929",
    "end": "1431889"
  },
  {
    "text": "setting things up in Azure with a ad but it actually works very very easily in this case it's streamlined really nice",
    "start": "1431889",
    "end": "1438279"
  },
  {
    "text": "so I can set it up so that developers can each have their own account and do their own push of images to that Azure",
    "start": "1438279",
    "end": "1445419"
  },
  {
    "text": "registry that raises another question though right should developers ever be doing that maybe to a dev area for",
    "start": "1445419",
    "end": "1453190"
  },
  {
    "text": "testing right between each other but when it comes to the CI process really",
    "start": "1453190",
    "end": "1458619"
  },
  {
    "text": "legitimately the stuff you check in should just be automatically built right there should be zero reason that you",
    "start": "1458619",
    "end": "1464200"
  },
  {
    "text": "have to do anything but check in and an image appears over on the other side which you can now pull by saying get",
    "start": "1464200",
    "end": "1470769"
  },
  {
    "text": "latest which is the default and so that's a pattern that you start to establish again I'm giving you you know",
    "start": "1470769",
    "end": "1476529"
  },
  {
    "text": "some discussion around this because it's a thing on that list of things that we have to think about now where we're",
    "start": "1476529",
    "end": "1481840"
  },
  {
    "text": "moving into the orchestration flow and it does take a bit of strategy but not too much right so we got repository tags",
    "start": "1481840",
    "end": "1488980"
  },
  {
    "text": "we're going to have version info maybe which service it is some sort of labeling and at some point we might",
    "start": "1488980",
    "end": "1494830"
  },
  {
    "text": "include the the branch label or something so if we move over to master",
    "start": "1494830",
    "end": "1500400"
  },
  {
    "text": "and do a merge of updates that are going to go to production and you have a process for that within your git",
    "start": "1500400",
    "end": "1507030"
  },
  {
    "text": "repository then maybe Jenkins can pull that and intelligently apply the right tanks so we've done that before with",
    "start": "1507030",
    "end": "1513330"
  },
  {
    "text": "Jenkins and had it set up you know the right tagging mechanism based on some you know branches for example in the",
    "start": "1513330",
    "end": "1520650"
  },
  {
    "text": "repository the other process would be you know to have another entity do the",
    "start": "1520650",
    "end": "1527730"
  },
  {
    "text": "REIT agging for example run deck would be another example that we've used in the past on our team to apply images",
    "start": "1527730",
    "end": "1535890"
  },
  {
    "text": "with tags as they go through and traverse the environments and so run decks responsible for the actual",
    "start": "1535890",
    "end": "1541500"
  },
  {
    "text": "orchestration and delivering of the scheduling instruction in that case for",
    "start": "1541500",
    "end": "1546660"
  },
  {
    "text": "example with Amazon you need that because you don't really have a full Orchestrator in Amazon okay so getting",
    "start": "1546660",
    "end": "1553980"
  },
  {
    "text": "things into the registry is not too hard getting things out of the registry again",
    "start": "1553980",
    "end": "1559080"
  },
  {
    "text": "not too hard if you know what tag you're pulling securing the registry would be obviously a process that should happen",
    "start": "1559080",
    "end": "1565110"
  },
  {
    "text": "within your ecosystem probably beyond this discussion but you know what I've",
    "start": "1565110",
    "end": "1570840"
  },
  {
    "text": "done already in here if you if I take a look at the images right I've got this",
    "start": "1570840",
    "end": "1576840"
  },
  {
    "text": "content web and content API and if I do something like let's see let's do a tag",
    "start": "1576840",
    "end": "1584400"
  },
  {
    "text": "and what I'm gonna do is rename that to",
    "start": "1584400",
    "end": "1590790"
  },
  {
    "text": "my daus blonde repo just for",
    "start": "1590790",
    "end": "1597540"
  },
  {
    "text": "illustration and content API latest is going to be renamed to let's say v2",
    "start": "1597540",
    "end": "1604170"
  },
  {
    "text": "because I've done an update now right so",
    "start": "1604170",
    "end": "1608990"
  },
  {
    "text": "oops I know I spelt it wrong thank you I'm typing at my normal speed but",
    "start": "1612150",
    "end": "1618880"
  },
  {
    "text": "apparently that's too fast for this connection I'm really that fast yeah something to be impressed by I'm sure",
    "start": "1618880",
    "end": "1626170"
  },
  {
    "text": "everybody is really okay so what I'm gonna do is just quickly go over here to",
    "start": "1626170",
    "end": "1633040"
  },
  {
    "text": "the browser I'm gonna make you dizzy for a sec and find it and we've got our repo",
    "start": "1633040",
    "end": "1640660"
  },
  {
    "text": "over here let's see so dass blonde I've got this content API",
    "start": "1640660",
    "end": "1648250"
  },
  {
    "text": "and it's already got a latest tag so I just actually cleaned that up and",
    "start": "1648250",
    "end": "1654580"
  },
  {
    "text": "recreated it and what I'll do is do a docker push oops sorry",
    "start": "1654580",
    "end": "1666450"
  },
  {
    "text": "read my mind why don't you content API and so that will do is you know push any",
    "start": "1666450",
    "end": "1673690"
  },
  {
    "text": "updates to the image layer and also retag sorry apply the tag also in in the",
    "start": "1673690",
    "end": "1681370"
  },
  {
    "text": "get in the sorry docker hub I wanted to say get repo so we'll come up here and",
    "start": "1681370",
    "end": "1688990"
  },
  {
    "text": "refresh and I should have a v2 if I'm",
    "start": "1688990",
    "end": "1695020"
  },
  {
    "text": "not mistaken well then that wouldn't",
    "start": "1695020",
    "end": "1700270"
  },
  {
    "text": "work with it no pair programming I'll",
    "start": "1700270",
    "end": "1707710"
  },
  {
    "text": "catch you later okay so did I do it or",
    "start": "1707710",
    "end": "1712930"
  },
  {
    "text": "not oh I pushed the wrong one and haha okay well that's I meant to do that because I",
    "start": "1712930",
    "end": "1719200"
  },
  {
    "text": "want to show you how easy this to get mixed up because it you just really never know honestly it's important that",
    "start": "1719200",
    "end": "1724900"
  },
  {
    "text": "we think about these things upfront okay alright so let's see docker images web",
    "start": "1724900",
    "end": "1733990"
  },
  {
    "text": "is v2 indeed so we want to do a darker bush",
    "start": "1733990",
    "end": "1739860"
  },
  {
    "text": "just blonde okay try that again Redux it",
    "start": "1740070",
    "end": "1749010"
  },
  {
    "text": "might even show in progress over here sometimes well one of these moments",
    "start": "1749010",
    "end": "1760200"
  },
  {
    "text": "it'll come through in the meantime the other thing I could show you is that you can create repositories that have automated builds so if you're just",
    "start": "1760200",
    "end": "1766200"
  },
  {
    "text": "testing and wanting to try that out then this would be an easy thing to do just connect it to your git repo and have",
    "start": "1766200",
    "end": "1772320"
  },
  {
    "text": "your check-in find the dockerfile build the image and push it here you can",
    "start": "1772320",
    "end": "1778100"
  },
  {
    "text": "actually VSO with Visual Studio online now has a really nice set up for that",
    "start": "1778100",
    "end": "1784740"
  },
  {
    "text": "too so we just finished setting that up another project it was kind of new",
    "start": "1784740",
    "end": "1790020"
  },
  {
    "text": "feature going against that your registry and setting up the security with aad and it's working very nicely with VSO so",
    "start": "1790020",
    "end": "1795870"
  },
  {
    "text": "that's another if you're doing dot net development with asp net core most likely if you're doing docker containers",
    "start": "1795870",
    "end": "1801090"
  },
  {
    "text": "today then that would be the thing so that's a really nice set up and you can do the full CI CD even have it push to",
    "start": "1801090",
    "end": "1807810"
  },
  {
    "text": "your you know orchestration environment and have it scheduled so that would be an interesting way to look at it too if",
    "start": "1807810",
    "end": "1814170"
  },
  {
    "text": "if you're ready for that in your production environment what you might do is for some environments automate that",
    "start": "1814170",
    "end": "1820500"
  },
  {
    "text": "and for some environments like say for production maybe you want more control till you're sure about the whole CI CD",
    "start": "1820500",
    "end": "1825780"
  },
  {
    "text": "process all the way through okay so I was trying to get back to my profile",
    "start": "1825780",
    "end": "1832140"
  },
  {
    "text": "here and I'm just not there let's try that okay good",
    "start": "1832140",
    "end": "1837900"
  },
  {
    "text": "so I wanted to get to just blonde the registry here we go and wet the fridge",
    "start": "1837900",
    "end": "1845700"
  },
  {
    "text": "and it should have finished there we go so okay so just a quick look at that",
    "start": "1845700",
    "end": "1852030"
  },
  {
    "text": "let's keep going",
    "start": "1852030",
    "end": "1855020"
  },
  {
    "text": "okay so at that point what I've done I've built images I've run them locally",
    "start": "1858830",
    "end": "1865169"
  },
  {
    "text": "I've got environment variables to flip between I can run and play with my docker images locally and I can push",
    "start": "1865169",
    "end": "1872039"
  },
  {
    "text": "them to a repo and I can even go up to another server and pull them down and if I'm just a startup I've maybe I've you",
    "start": "1872039",
    "end": "1879149"
  },
  {
    "text": "know finished what I really need to get to a certain point right because I can stop and start and replace those",
    "start": "1879149",
    "end": "1884759"
  },
  {
    "text": "containers without high availability and it'll just be really super fast because it's fast right so I know some startups",
    "start": "1884759",
    "end": "1891210"
  },
  {
    "text": "that do simple things like that or even just simple projects that you have on the side that aren't mission-critical",
    "start": "1891210",
    "end": "1896330"
  },
  {
    "text": "it's always really bad to say not mission-critical because everyone thinks everything they do is mission-critical",
    "start": "1896330",
    "end": "1901559"
  },
  {
    "text": "so you know there's layers of mission-critical let's call it but the",
    "start": "1901559",
    "end": "1906809"
  },
  {
    "text": "fun begins now when we start thinking about all the other stuff we have to do right so what do I do in terms of you",
    "start": "1906809",
    "end": "1914100"
  },
  {
    "text": "know deploying to a cluster right and having multiple instances of that service running for high availability",
    "start": "1914100",
    "end": "1921409"
  },
  {
    "text": "distributing it across nodes having it scale when it needs to scale having it",
    "start": "1921409",
    "end": "1927330"
  },
  {
    "text": "automatically stitch up to load balancer so that it can be discovered what kind",
    "start": "1927330",
    "end": "1932700"
  },
  {
    "text": "of discoverability are we going to be working with right because there are layers of that too",
    "start": "1932700",
    "end": "1938220"
  },
  {
    "text": "so first thing we usually look at is the platform choices right are you with an",
    "start": "1938220",
    "end": "1943259"
  },
  {
    "text": "affinity to Amazon already or Azure already or Google already although I don't run into Google container engine",
    "start": "1943259",
    "end": "1950309"
  },
  {
    "text": "very much I know kubernetes definitely has a lot of good winds behind it sails but that it seems",
    "start": "1950309",
    "end": "1957720"
  },
  {
    "text": "like most large enterprise aren't looking at Google for their deployments in my worlds that's my world that's not",
    "start": "1957720",
    "end": "1963690"
  },
  {
    "text": "everybody's world so definitely Amazon or if you've got an affinity there then you've already kind",
    "start": "1963690",
    "end": "1969450"
  },
  {
    "text": "of chosen what kind of platform am I going to think about right with Amazon",
    "start": "1969450",
    "end": "1975149"
  },
  {
    "text": "you're going to use the ec2 container service with Google you're going to use Google container engine and it's",
    "start": "1975149",
    "end": "1981029"
  },
  {
    "text": "kubernetes you know basically and then some and it handles all of these things",
    "start": "1981029",
    "end": "1986759"
  },
  {
    "text": "for you it's built in and then Azure container service is actually kind of different right what it does is it it provisions",
    "start": "1986759",
    "end": "1994039"
  },
  {
    "text": "with a template your I as environment for the orchestration cluster of your",
    "start": "1994039",
    "end": "2001250"
  },
  {
    "text": "choice so you choose if you want to use docker native swarm if you want to use DCOs which is the mesosphere stack with",
    "start": "2001250",
    "end": "2010070"
  },
  {
    "text": "marathon and missiles or if you want to use kubernetes now which is a new thing",
    "start": "2010070",
    "end": "2016159"
  },
  {
    "text": "they just released right support for so I just spun up a cluster with that but I haven't played with it yet in in Azure",
    "start": "2016159",
    "end": "2021559"
  },
  {
    "text": "specifically but it's there it's available and then there's one sort of",
    "start": "2021559",
    "end": "2026690"
  },
  {
    "text": "last choice I have on the list here again there's others right like this is just the mainstream that I run into so",
    "start": "2026690",
    "end": "2032960"
  },
  {
    "text": "you know there's core OS there's rancher there's there's all kinds of hosts that try to sort of you know abstract you",
    "start": "2032960",
    "end": "2038809"
  },
  {
    "text": "away from needing to manage your container clusters but internal enterprises tend to go with the big",
    "start": "2038809",
    "end": "2044030"
  },
  {
    "text": "names so this is what I see more more often okay now docker data center is an",
    "start": "2044030",
    "end": "2049970"
  },
  {
    "text": "offer by docker so that is their paid Enterprise",
    "start": "2049970",
    "end": "2055750"
  },
  {
    "text": "you know orchestration stack which is really based on the docker swarm and",
    "start": "2056980",
    "end": "2062060"
  },
  {
    "text": "then the jaakor trusted registry and it has this thing called the universal control plane underneath that is you",
    "start": "2062060",
    "end": "2067700"
  },
  {
    "text": "know the orchestration engine and so what docker data center really is is two",
    "start": "2067700",
    "end": "2074570"
  },
  {
    "text": "kinds of offers one is a hosted offer and then the other is you deploy it on your iOS which I have done actually and",
    "start": "2074570",
    "end": "2081740"
  },
  {
    "text": "again it doesn't really have a lot of feature so more than anything I run into",
    "start": "2081740",
    "end": "2087169"
  },
  {
    "text": "DCOs with Azure DCOs with Amazon and then kubernetes really",
    "start": "2087169",
    "end": "2095210"
  },
  {
    "text": "just new with Azure right so that would be a good comparison with DCOs I think in terms of like capabilities but if I'm",
    "start": "2095210",
    "end": "2102560"
  },
  {
    "text": "in Amazon I'm probably going to go with ECS because that is you know built in that's a bit more done for me I still I",
    "start": "2102560",
    "end": "2110570"
  },
  {
    "text": "as under the hood I'm still managing VMs I still have to provision VMs for my",
    "start": "2110570",
    "end": "2115880"
  },
  {
    "text": "container cluster but it handles the clustering part for me right so that gives me some services around that that",
    "start": "2115880",
    "end": "2121580"
  },
  {
    "text": "feel native to Amazon and that were if you're an Amazon make sense so we need to care about the management",
    "start": "2121580",
    "end": "2127580"
  },
  {
    "text": "cluster the agent nodes we need to care about discovery of nodes discovery of services that are hosted across the",
    "start": "2127580",
    "end": "2134000"
  },
  {
    "text": "nodes we need to care about the docker registry which I've already talked about right in terms of which one is where I",
    "start": "2134000",
    "end": "2140210"
  },
  {
    "text": "have a couple of charts at the end that will give you a cheat sheet so I'm just kind of talking through it right now the",
    "start": "2140210",
    "end": "2146570"
  },
  {
    "text": "core features we care about again discovery load balancing routing auto scaling self-healing",
    "start": "2146570",
    "end": "2152570"
  },
  {
    "text": "right we want to know when something if you tear down one of your containers",
    "start": "2152570",
    "end": "2157700"
  },
  {
    "text": "something's wrong with it it's not responding that it will be replaced right and new one spun up so things like",
    "start": "2157700",
    "end": "2162890"
  },
  {
    "text": "that and so that's where we get into the fun part we can talk just briefly then first about scheduling so scheduling and",
    "start": "2162890",
    "end": "2170540"
  },
  {
    "text": "orchestration refers to the deployment right of your services and running them on the cluster so running them on the",
    "start": "2170540",
    "end": "2176630"
  },
  {
    "text": "agent nodes that are available and so typically there will be a master node",
    "start": "2176630",
    "end": "2182660"
  },
  {
    "text": "cluster that keeps track of all the other available nodes and their health and all of the containers that are",
    "start": "2182660",
    "end": "2189650"
  },
  {
    "text": "running and their health hopefully if the orchestration engine supports that so of health endpoints are available",
    "start": "2189650",
    "end": "2196280"
  },
  {
    "text": "then it will track that for you so when you for example on swarm go against the",
    "start": "2196280",
    "end": "2201650"
  },
  {
    "text": "master node you know the the leader and you don't know which one is the leader",
    "start": "2201650",
    "end": "2206869"
  },
  {
    "text": "you're just going against the load balancer right against the cluster and you issue a docker run with commands",
    "start": "2206869",
    "end": "2213350"
  },
  {
    "text": "against the cluster then it will issue to the available nodes for the number of",
    "start": "2213350",
    "end": "2218510"
  },
  {
    "text": "instances that need to deploy the container instructions to go get the image and run the container and with the",
    "start": "2218510",
    "end": "2224990"
  },
  {
    "text": "right parameters and environment variables right so all that's done at the master node level basically so",
    "start": "2224990",
    "end": "2231470"
  },
  {
    "text": "that's the idea is that you ultimately want to send an instruction to the master to say can you please run this",
    "start": "2231470",
    "end": "2237350"
  },
  {
    "text": "container with these parameters I need a minimum to healthy maximum grow to ten",
    "start": "2237350",
    "end": "2244060"
  },
  {
    "text": "you know these are my environment variables if there's any networking or",
    "start": "2244060",
    "end": "2249230"
  },
  {
    "text": "dependencies on other containers any restrictions like how much memory you need and that's the thing that is kind",
    "start": "2249230",
    "end": "2254869"
  },
  {
    "text": "of interesting to get used to is the constraints concept so let's take a look at that so I have another VM here",
    "start": "2254869",
    "end": "2264750"
  },
  {
    "text": "let me find my mouse okay and okay so",
    "start": "2264750",
    "end": "2276600"
  },
  {
    "text": "I'm gonna get out of there okay so I'm",
    "start": "2276600",
    "end": "2289650"
  },
  {
    "text": "going to connect to a swarm cluster that I have in Asscher right now I deployed",
    "start": "2289650",
    "end": "2294930"
  },
  {
    "text": "that with Azure container service so it's just thinking right now I'm getting",
    "start": "2294930",
    "end": "2301890"
  },
  {
    "text": "mean hopefully okay let's go okay so",
    "start": "2301890",
    "end": "2308580"
  },
  {
    "text": "what I'm gonna do is let's say issue a command for just information let's say so what I've done is I'm if you look at",
    "start": "2308580",
    "end": "2316290"
  },
  {
    "text": "the bottom there I'm hitting this because I'm not coming in from outside which would have meant I'd have to come",
    "start": "2316290",
    "end": "2321750"
  },
  {
    "text": "in from outside with security enabled and so on so instead of opening ports and enabling that I'm actually tunneled",
    "start": "2321750",
    "end": "2327690"
  },
  {
    "text": "in to right now one of the masters and so I'm issuing the commands as if I'm",
    "start": "2327690",
    "end": "2333360"
  },
  {
    "text": "coming in from outside but I'm not and the idea would be I'd have to hit a specific port I'd have to issue the",
    "start": "2333360",
    "end": "2339630"
  },
  {
    "text": "instruction and this is what tells it to distribute that request so that it's",
    "start": "2339630",
    "end": "2344640"
  },
  {
    "text": "going to issue the command against the master and apply it to the available",
    "start": "2344640",
    "end": "2351210"
  },
  {
    "text": "agent notes so for example if I say I want to have info it will tell me the number of nodes I have available and",
    "start": "2351210",
    "end": "2357210"
  },
  {
    "text": "healthy so it's kind of giving me some insight into any containers that are deployed how much CPU I'm memory I have",
    "start": "2357210",
    "end": "2363540"
  },
  {
    "text": "available and so on right and I have three nodes so you can see I have different agents right so each of these",
    "start": "2363540",
    "end": "2370070"
  },
  {
    "text": "agents start with you know different value here 7 9 and then 0 0 0 0 0 1 0 0",
    "start": "2370070",
    "end": "2378480"
  },
  {
    "text": "2 so those are the ending yeah so I don't have anything running right now so if I do the same docker PS command that",
    "start": "2378480",
    "end": "2385110"
  },
  {
    "text": "I would normally do it'll tell me I don't have anything running across cluster right now if I say I want to see",
    "start": "2385110",
    "end": "2391419"
  },
  {
    "text": "what images I have I might have one image that I already have down here right and so I have a HelloWorld docker",
    "start": "2391419",
    "end": "2399219"
  },
  {
    "text": "just a simple image right so what I'm going to do is run the container right and we'll run this and let's see so I'm",
    "start": "2399219",
    "end": "2409359"
  },
  {
    "text": "going to do this and ask for a random port so the - P just says go ahead and assign a dynamic port the idea would be",
    "start": "2409359",
    "end": "2415539"
  },
  {
    "text": "ideally that there would be a load balancer that it would stitch automatically the dynamic port that the",
    "start": "2415539",
    "end": "2422169"
  },
  {
    "text": "container runs on right that's not going to happen here by default right now I would need to do something more",
    "start": "2422169",
    "end": "2427539"
  },
  {
    "text": "interesting with swarm but most of the other orchestration engines that's built-in like they have an internal load",
    "start": "2427539",
    "end": "2433539"
  },
  {
    "text": "balancer I'm going to show that in a minute - so I'm gonna run this now and just show what happens after the",
    "start": "2433539",
    "end": "2439119"
  },
  {
    "text": "containers run so if I do another look at docker PS it will show me that it's",
    "start": "2439119",
    "end": "2448419"
  },
  {
    "text": "got a dynamic port of 32 771 right so that's that's the end point it's mapping",
    "start": "2448419",
    "end": "2453879"
  },
  {
    "text": "from the internal port 8080 of this particular container and it gave a",
    "start": "2453879",
    "end": "2461409"
  },
  {
    "text": "dynamic name I don't really care about that in this particular demo so what I was going to do next is show you what",
    "start": "2461409",
    "end": "2467319"
  },
  {
    "text": "happens if I run info and we kind of scroll up a bit I should be able to see",
    "start": "2467319",
    "end": "2474869"
  },
  {
    "text": "that one of the containers is now running on one of these nodes right so",
    "start": "2474869",
    "end": "2480069"
  },
  {
    "text": "there you go alright ok so if I run this",
    "start": "2480069",
    "end": "2487659"
  },
  {
    "text": "a couple of times and actually let's just do that let me just get out and run the same one it'll let me keep running",
    "start": "2487659",
    "end": "2497679"
  },
  {
    "text": "them because the ports dynamic but if I were to ask for a specific port what",
    "start": "2497679",
    "end": "2502689"
  },
  {
    "text": "would happen",
    "start": "2502689",
    "end": "2505169"
  },
  {
    "text": "I think 80 80 or something like that it",
    "start": "2513880",
    "end": "2520030"
  },
  {
    "text": "worked I've worked again it worked three times and now it can't write so that means it",
    "start": "2520030",
    "end": "2527290"
  },
  {
    "text": "distributed one to each node and it used up the port but that's a resource that can't be shared so now it can't",
    "start": "2527290",
    "end": "2533110"
  },
  {
    "text": "distribute another right so that's a resource constraint if you will but I can have other types of resource",
    "start": "2533110",
    "end": "2538570"
  },
  {
    "text": "constraints so let's go ahead and do another info pass and what we should be able to see here is I've got you know",
    "start": "2538570",
    "end": "2545590"
  },
  {
    "text": "three containers here with not very much used on the CPU or memory right because",
    "start": "2545590",
    "end": "2552160"
  },
  {
    "text": "I haven't actually reserved any I haven't said my container needs X to run most of the other environments actually",
    "start": "2552160",
    "end": "2558760"
  },
  {
    "text": "require you to specify something for your container because the whole concept is that you should get to know through",
    "start": "2558760",
    "end": "2564310"
  },
  {
    "text": "drills ahead of time and load tests like what kind of a capacity does the",
    "start": "2564310",
    "end": "2571210"
  },
  {
    "text": "container need to operate in a healthy manner and the idea would also be that if something doesn't work right if it",
    "start": "2571210",
    "end": "2578050"
  },
  {
    "text": "sort of exceeds memory that that container can can fail or go down but",
    "start": "2578050",
    "end": "2583600"
  },
  {
    "text": "you know another one should come up in this place because you have these minimum said I need to healthy always",
    "start": "2583600",
    "end": "2588640"
  },
  {
    "text": "running so the orchestration engine should know enough to say ok I'm going to spin up another one that's the idea so right now I'm just distributing",
    "start": "2588640",
    "end": "2596530"
  },
  {
    "text": "freely but I ran into a resource constraint for the ports let's try another thing and what I'm going to do",
    "start": "2596530",
    "end": "2602110"
  },
  {
    "text": "is delete everything on this in terms of the running containers and so that means",
    "start": "2602110",
    "end": "2610000"
  },
  {
    "text": "I should be able to see docker PS",
    "start": "2610000",
    "end": "2617410"
  },
  {
    "text": "nothing running and what I'm going to do is do a run but this time I'm going to",
    "start": "2617410",
    "end": "2624490"
  },
  {
    "text": "require two gigs so you can see that I'm asking for two gig over here and so it",
    "start": "2624490",
    "end": "2631510"
  },
  {
    "text": "will try to run one and there's only three gig per box right and it will try",
    "start": "2631510",
    "end": "2637720"
  },
  {
    "text": "to run another and it will try to run another and then at some point no",
    "start": "2637720",
    "end": "2643270"
  },
  {
    "text": "resources again right so that's again part of the the whole idea is that I should be able to you",
    "start": "2643270",
    "end": "2650589"
  },
  {
    "text": "know constrain resources and dynamically assign you know to each not dynamically",
    "start": "2650589",
    "end": "2658900"
  },
  {
    "text": "but specify for each container what is the resources I require so that the scheduler can do its job which is find the right node to put it on there's",
    "start": "2658900",
    "end": "2665530"
  },
  {
    "text": "other kinds of constraints like proximity constraints and things like that but hopefully that just gives an",
    "start": "2665530",
    "end": "2671079"
  },
  {
    "text": "idea of one of the considerations right of the container orchestration engine that we need to care about so you know",
    "start": "2671079",
    "end": "2677890"
  },
  {
    "text": "this is just a screenshot of what we showed before which is the containers how many are there and how much is used",
    "start": "2677890",
    "end": "2683410"
  },
  {
    "text": "in terms of CPUs in memory there are other constraints we've talked about just briefly and then here showing that",
    "start": "2683410",
    "end": "2690970"
  },
  {
    "text": "I've already reached my you know my constraint right I've filled with two",
    "start": "2690970",
    "end": "2697210"
  },
  {
    "text": "gig or three Greg three gig is used over the 3.5 so I can't issue another command for a three gig right so okay and so I",
    "start": "2697210",
    "end": "2706720"
  },
  {
    "text": "would get an error like that I already talked about the fact that this whole",
    "start": "2706720",
    "end": "2712690"
  },
  {
    "text": "process of then scheduling which I just showed up from a high level just with swarm which is you know simplistic and",
    "start": "2712690",
    "end": "2718030"
  },
  {
    "text": "command-line right I'm obviously not really going to do my scheduling that way I'm gonna have some automation",
    "start": "2718030",
    "end": "2723670"
  },
  {
    "text": "around it I'm gonna have automation around deploying a container and I'm gonna have tasks definition or a service",
    "start": "2723670",
    "end": "2729339"
  },
  {
    "text": "definition or an application definition all the same right that describes what",
    "start": "2729339",
    "end": "2734770"
  },
  {
    "text": "are the requirements of this container of this service what memory requirements what affinity to other containers so",
    "start": "2734770",
    "end": "2741400"
  },
  {
    "text": "then the scheduler can do its job so what I just showed you was the lightweight version of that that is masked a little bit when you go into a",
    "start": "2741400",
    "end": "2747190"
  },
  {
    "text": "platform so the challenges we face are things like load balancing Service",
    "start": "2747190",
    "end": "2752500"
  },
  {
    "text": "registration discovery and server density when we think about I want to get as many containers running as are",
    "start": "2752500",
    "end": "2759940"
  },
  {
    "text": "needed to serve requests and if we start to you know exceed load on those",
    "start": "2759940",
    "end": "2765609"
  },
  {
    "text": "container instances then I want to be able to scale them out so I need to be able to set up some sort of alerts or",
    "start": "2765609",
    "end": "2771220"
  },
  {
    "text": "alarms around that that would be one example that the orchestration engine can provide for me is auto scale right",
    "start": "2771220",
    "end": "2777250"
  },
  {
    "text": "of the container then the next step is when I start to run out of some resources on the actual",
    "start": "2777250",
    "end": "2783280"
  },
  {
    "text": "node or VM I want to auto scale you know the actual nodes in Amazon in Azure and",
    "start": "2783280",
    "end": "2790690"
  },
  {
    "text": "so on and so we get varied results with that depending on the platform we're using right so Amazon's got some ways to",
    "start": "2790690",
    "end": "2797470"
  },
  {
    "text": "do it asher has you know Auto scale capabilities but it's not quite tied in",
    "start": "2797470",
    "end": "2803740"
  },
  {
    "text": "to DCOs yet so that's all still coming together but the point is these are our things we're thinking about right so",
    "start": "2803740",
    "end": "2809559"
  },
  {
    "text": "that's another topic and so what I could do is just to take a look at ICI at ec2",
    "start": "2809559",
    "end": "2816130"
  },
  {
    "text": "container services for a second one deployment you know that I might have is something around having as your load",
    "start": "2816130",
    "end": "2823030"
  },
  {
    "text": "balancer so when we think about discovery you know one aspect to discovery is having services deploy and",
    "start": "2823030",
    "end": "2830290"
  },
  {
    "text": "stitch themselves up to whatever the load balancer is that is going to know how to route to that service right so I",
    "start": "2830290",
    "end": "2837640"
  },
  {
    "text": "could either have an e lb attached to each service or I can have a lb which is",
    "start": "2837640",
    "end": "2842890"
  },
  {
    "text": "now more intelligent which will allow me to have dynamic port assignments which will allow me to you know just spin up",
    "start": "2842890",
    "end": "2849220"
  },
  {
    "text": "additional services on an individual node instead of one per node so in the past we were stuck with one service per",
    "start": "2849220",
    "end": "2855910"
  },
  {
    "text": "node because of port restrictions because you couldn't get the dynamic aspect and again alb shipped last",
    "start": "2855910",
    "end": "2861670"
  },
  {
    "text": "September or something so that was when we could start playing with that and now we could build a better starting point",
    "start": "2861670",
    "end": "2868809"
  },
  {
    "text": "around discovery so the you know one of the parts again around every is just let me distribute more instances with",
    "start": "2868809",
    "end": "2875710"
  },
  {
    "text": "dynamic ports and have the load balancer somehow know about them this is not",
    "start": "2875710",
    "end": "2881020"
  },
  {
    "text": "dynamic discovery though right there's client side and server side dynamic discovery as well for example the client",
    "start": "2881020",
    "end": "2886750"
  },
  {
    "text": "could call in and ask a console for example or zookeeper or SCD for",
    "start": "2886750",
    "end": "2894069"
  },
  {
    "text": "information about where services are deployed in order to find the URL that it should call so there's overhead to",
    "start": "2894069",
    "end": "2900160"
  },
  {
    "text": "that it's chatty right there's another request in the mix in order to find out which service should I call but you're",
    "start": "2900160",
    "end": "2906369"
  },
  {
    "text": "pushing it to the client in that case I don't prefer that model but there are probably isolated cases where that",
    "start": "2906369",
    "end": "2912790"
  },
  {
    "text": "useful on the other hand what you could do is set up you know a cluster state",
    "start": "2912790",
    "end": "2918550"
  },
  {
    "text": "with consul or something and have that be what is communicated with say you",
    "start": "2918550",
    "end": "2924850"
  },
  {
    "text": "know from either an engine X tier or from even something you call from al B",
    "start": "2924850",
    "end": "2932050"
  },
  {
    "text": "that goes and finds out which service should I forward this to but you have to set something up that can go and request",
    "start": "2932050",
    "end": "2938020"
  },
  {
    "text": "where should I send the call if you want full dynamic discovery so there's overhead to that it's another cluster to",
    "start": "2938020",
    "end": "2944380"
  },
  {
    "text": "manage it's oftentimes not the first thing on the list for people if they can find another way to achieve something",
    "start": "2944380",
    "end": "2950770"
  },
  {
    "text": "acceptable and what's acceptable is typically starting with this with Al B",
    "start": "2950770",
    "end": "2956430"
  },
  {
    "text": "so it's just a big undertaking to go down the road of console for example for",
    "start": "2956430",
    "end": "2961570"
  },
  {
    "text": "that for dynamic discovery so when we think about requests coming in through",
    "start": "2961570",
    "end": "2967540"
  },
  {
    "text": "the public load balancer those might go for example to ec2 nodes and then I would have another private alb behind",
    "start": "2967540",
    "end": "2973960"
  },
  {
    "text": "another subnet so that it's not available to the public and that would be maybe where the websites on the ec2 nodes call my services tier so one of",
    "start": "2973960",
    "end": "2981430"
  },
  {
    "text": "the things you can look at with container you know orchestration and deployments is whether or not you want to have a",
    "start": "2981430",
    "end": "2986440"
  },
  {
    "text": "services here that's on the orchestration platform and have your websites just be traditional and have",
    "start": "2986440",
    "end": "2992320"
  },
  {
    "text": "your backends continue to be traditional as a migration plan right so I've got these legacy databases I don't have",
    "start": "2992320",
    "end": "2998740"
  },
  {
    "text": "everything isolated into domain boundaries yet I need to take time to",
    "start": "2998740",
    "end": "3004980"
  },
  {
    "text": "get that done but we can start by scaling the middle tier and making that a more agile",
    "start": "3004980",
    "end": "3010860"
  },
  {
    "text": "you know deployment and development story so I can you know enhance features",
    "start": "3010860",
    "end": "3017580"
  },
  {
    "text": "create new product listings create new services for the business that live in",
    "start": "3017580",
    "end": "3022650"
  },
  {
    "text": "the middle and consume the same data models we already have and then over time migrate to that pure sort of micro",
    "start": "3022650",
    "end": "3029460"
  },
  {
    "text": "service isolation of those data stores and maybe even move the websites into",
    "start": "3029460",
    "end": "3034680"
  },
  {
    "text": "the containerization story so that I can optimize my deployments and not have to",
    "start": "3034680",
    "end": "3039870"
  },
  {
    "text": "have ec2 notes as well right both of those are acceptable models is just",
    "start": "3039870",
    "end": "3045610"
  },
  {
    "text": "it's a decision that you make right so having this dynamic having this you know",
    "start": "3045610",
    "end": "3051790"
  },
  {
    "text": "happe services I was kind of pointing on the wrong side here before dynamically stitch up to the alb would handle the",
    "start": "3051790",
    "end": "3057580"
  },
  {
    "text": "sort of discovery of services that are healthy you have to have health endpoints that are available so that alb",
    "start": "3057580",
    "end": "3064570"
  },
  {
    "text": "knows when to remove something from the alb when a service is not responding correctly that means your service when",
    "start": "3064570",
    "end": "3071620"
  },
  {
    "text": "you build them have to write upfront think about what is healthy is it just a two hundred at a ping or should I be",
    "start": "3071620",
    "end": "3078490"
  },
  {
    "text": "checking that a few other things are available or should I have two different health checks one for sort of the",
    "start": "3078490",
    "end": "3084640"
  },
  {
    "text": "ongoing ping and then every once in a while let's do a sanity check that the database is actually available on the",
    "start": "3084640",
    "end": "3090400"
  },
  {
    "text": "other side so you can think about those things and those can be built into some of the rules around health checks and",
    "start": "3090400",
    "end": "3099090"
  },
  {
    "text": "and how alb response for example right okay so one of the things I wanted to do",
    "start": "3099090",
    "end": "3106840"
  },
  {
    "text": "here is go to Amazon and right now I",
    "start": "3106840",
    "end": "3112480"
  },
  {
    "text": "have some alerts set up I'm going to turn my phone back on and those alerts are are I'm going to go through them in",
    "start": "3112480",
    "end": "3119080"
  },
  {
    "text": "a second but first I'm going to go and start a low test so that it can kick off because it takes a few minutes okay so",
    "start": "3119080",
    "end": "3129520"
  },
  {
    "text": "let's do this I think I'm in the right one okay so I exit out I'm typing way",
    "start": "3129520",
    "end": "3138460"
  },
  {
    "text": "too fast over this guy seriously okay",
    "start": "3138460",
    "end": "3143790"
  },
  {
    "text": "okay so I'll just show you what I'm doing here oops",
    "start": "3153550",
    "end": "3162720"
  },
  {
    "text": "yeah",
    "start": "3162900",
    "end": "3165900"
  },
  {
    "text": "so all I'm doing is running a command that's going to send a million requests",
    "start": "3168450",
    "end": "3174680"
  },
  {
    "text": "for over to the services that are running in Amazon right now and it's",
    "start": "3174680",
    "end": "3181410"
  },
  {
    "text": "actually putting in some instructions for how many calls to make and how many",
    "start": "3181410",
    "end": "3187350"
  },
  {
    "text": "in parallel right 125 in parallel and the idea is I'm gonna load up those",
    "start": "3187350",
    "end": "3192630"
  },
  {
    "text": "services that are just just deployed right now so that we will get will trigger some alerts we're going to first",
    "start": "3192630",
    "end": "3198300"
  },
  {
    "text": "trigger an alert of memory usage on the individual nodes that will trigger",
    "start": "3198300",
    "end": "3204140"
  },
  {
    "text": "deploying additional services and distributing those and then we're going to have a CPU overload that's going to",
    "start": "3204140",
    "end": "3210120"
  },
  {
    "text": "actually expand increase the number of instances so let me just run this first",
    "start": "3210120",
    "end": "3217430"
  },
  {
    "text": "and there we go okay so that's going to take some time",
    "start": "3221180",
    "end": "3226380"
  },
  {
    "text": "and while we're doing that I'm gonna head over to the display and so these",
    "start": "3226380",
    "end": "3232530"
  },
  {
    "text": "alerts this one will like I said right now this is read because it's saying if you're using less than 25% of CPU scale",
    "start": "3232530",
    "end": "3239490"
  },
  {
    "text": "down but scale down means go down to one and I'm requiring two minimum so it",
    "start": "3239490",
    "end": "3245070"
  },
  {
    "text": "can't scale down so it just shows us red and again I might not do that in production but it's just a way to show",
    "start": "3245070",
    "end": "3250440"
  },
  {
    "text": "that that when this trigger is a green then we know the first alert has happened right because what will happen",
    "start": "3250440",
    "end": "3255750"
  },
  {
    "text": "is I will you know start using more CPU so that will first turn off that alert",
    "start": "3255750",
    "end": "3262260"
  },
  {
    "text": "and then I'm going to hit the CPU utilization for greater than 75 and what",
    "start": "3262260",
    "end": "3268710"
  },
  {
    "text": "that will do is start triggering deploying additional instances to the Amazon cluster so in my ECS cluster I",
    "start": "3268710",
    "end": "3277640"
  },
  {
    "text": "have two services and three tasks running here's the task definitions that",
    "start": "3277640",
    "end": "3286530"
  },
  {
    "text": "I have available and I think the one I'm caring about right now is",
    "start": "3286530",
    "end": "3291859"
  },
  {
    "text": "no that's not it",
    "start": "3298230",
    "end": "3301770"
  },
  {
    "text": "demo task it's this one API",
    "start": "3303570",
    "end": "3308760"
  },
  {
    "text": "okay sorry I'm just like trying to",
    "start": "3313680",
    "end": "3319619"
  },
  {
    "text": "figure out which one I last activated because I had it all sitting there and then I went away so",
    "start": "3319619",
    "end": "3329240"
  },
  {
    "text": "that looks better okay and um the other",
    "start": "3343250",
    "end": "3350630"
  },
  {
    "text": "thing I was gonna do is go over here I'm just waiting for this to kick off so that we can kind of get a look what I",
    "start": "3350630",
    "end": "3357140"
  },
  {
    "text": "was gonna do is show you what happens so basically this is saying add two hundred percent capacity so it's going to go and",
    "start": "3357140",
    "end": "3364520"
  },
  {
    "text": "try and add double the number of containers that I have right now basically that are running so this alarm",
    "start": "3364520",
    "end": "3371960"
  },
  {
    "text": "will change and then it will follow with the rule if we take a look at the one",
    "start": "3371960",
    "end": "3377270"
  },
  {
    "text": "for memory greater then it's going to",
    "start": "3377270",
    "end": "3383720"
  },
  {
    "text": "talk about instances so just a second",
    "start": "3383720",
    "end": "3388510"
  },
  {
    "text": "I'll go in here navigation is not clicking the way I like so right so CPU",
    "start": "3395780",
    "end": "3406130"
  },
  {
    "text": "is first and then memory second okay and",
    "start": "3406130",
    "end": "3411650"
  },
  {
    "text": "so what you're gonna see is when the alarm triggers it will obviously show us",
    "start": "3411650",
    "end": "3416840"
  },
  {
    "text": "some history so you can see that maybe some of the things that have already happened but basically once the alarm",
    "start": "3416840",
    "end": "3422180"
  },
  {
    "text": "happens so this is my alarm thank you it sends me a text message and so if I",
    "start": "3422180",
    "end": "3428000"
  },
  {
    "text": "actually head back to the dashboard we'll be able to see that the it's",
    "start": "3428000",
    "end": "3434930"
  },
  {
    "text": "probably got a refresh but it's almost there hopefully yeah so now the one",
    "start": "3434930",
    "end": "3441890"
  },
  {
    "text": "that's triggered is the CPU greater than 75 right so this is load is still going it's still pushing out you know requests",
    "start": "3441890",
    "end": "3448970"
  },
  {
    "text": "right to the containers and so based on that because this one is currently",
    "start": "3448970",
    "end": "3455240"
  },
  {
    "text": "triggered it's it's going to start adding capacity to the cluster so if I go back over to my container let's come",
    "start": "3455240",
    "end": "3463580"
  },
  {
    "text": "back to the clusters and I think we'll just go in and take a look actually at",
    "start": "3463580",
    "end": "3476240"
  },
  {
    "text": "the number so right now it says desire task 2 and running tasks so it might",
    "start": "3476240",
    "end": "3482630"
  },
  {
    "text": "have already started doing it let me go to the tasks and we can see with our running let's see if it's added any yet",
    "start": "3482630",
    "end": "3491750"
  },
  {
    "text": "there's probably going to be adding some more it takes a little bit of time so unfortunately I'm just sort of waiting now so let's see the other thing I can",
    "start": "3491750",
    "end": "3500900"
  },
  {
    "text": "do is I can really cause chaos and I can delete a couple of api's so if I stop these it'll also continue to try to",
    "start": "3500900",
    "end": "3508430"
  },
  {
    "text": "provision enough and it will do that automatically right so these are set up to have a minimum number of healthy and",
    "start": "3508430",
    "end": "3514400"
  },
  {
    "text": "that minimum healthy includes it too right now and so that's what the task definition indicates and so this will",
    "start": "3514400",
    "end": "3521750"
  },
  {
    "text": "automatically start spending up additional while we're in here because of course I want to just give you a",
    "start": "3521750",
    "end": "3528170"
  },
  {
    "text": "quick taste also of the D cos let me come into D cos so in d cos",
    "start": "3528170",
    "end": "3533299"
  },
  {
    "text": "while amazon is figuring out its scale out and the alarms are going on right",
    "start": "3533299",
    "end": "3539150"
  },
  {
    "text": "now I have oh let's go over here there's my other alarm okay it's gonna add",
    "start": "3539150",
    "end": "3545329"
  },
  {
    "text": "instances now let's go to my terminal",
    "start": "3545329",
    "end": "3550569"
  },
  {
    "text": "which is this one",
    "start": "3550569",
    "end": "3557049"
  },
  {
    "text": "it won't jump until I get there okay I need to tunnel in so that I can see my D",
    "start": "3557230",
    "end": "3562609"
  },
  {
    "text": "cos panel so this will stop being like zero so the other thing I wanted to",
    "start": "3562609",
    "end": "3568819"
  },
  {
    "text": "illustrate was that when you come into D cos is a totally different view of similar things right you're going to",
    "start": "3568819",
    "end": "3574309"
  },
  {
    "text": "know how many nose you're going to see how many tasks are running but more importantly if I come in here I have a",
    "start": "3574309",
    "end": "3579410"
  },
  {
    "text": "public marathon load balancer and I also actually have that listed here probably",
    "start": "3579410",
    "end": "3585349"
  },
  {
    "text": "right and then I have an internal load balancer so the internal load balancer is responsible for the API and if I look",
    "start": "3585349",
    "end": "3591769"
  },
  {
    "text": "at the logs you'll see that when I actually add a new API it will dynamically configure it at the front",
    "start": "3591769",
    "end": "3598880"
  },
  {
    "text": "end of the load balancer at ten thousand one so it's going to stitch up dynamic ports as I add and scale so I'm going to",
    "start": "3598880",
    "end": "3606019"
  },
  {
    "text": "just go out over here and actually show you the services that are running I have an API have a website and I have my",
    "start": "3606019",
    "end": "3611539"
  },
  {
    "text": "internal load balancer attached to the API so if I select API and I do a scale",
    "start": "3611539",
    "end": "3616670"
  },
  {
    "text": "event and I add say three nodes so I'll go to five it's going to start adding",
    "start": "3616670",
    "end": "3623390"
  },
  {
    "text": "those run them stitch them up distribute them to random you know nodes it'll show",
    "start": "3623390",
    "end": "3631279"
  },
  {
    "text": "that they're healthy at the moment and then if I go over to my tasks here I got",
    "start": "3631279",
    "end": "3637160"
  },
  {
    "text": "a bunch of events here so it just added several new services basically to the",
    "start": "3637160",
    "end": "3646700"
  },
  {
    "text": "internal load balancer so that it will dynamically find that was basically my requests come in so I guess a couple",
    "start": "3646700",
    "end": "3652910"
  },
  {
    "text": "things just to sort of tie it together because obviously we have to finish up soon you can see right now that my cloud",
    "start": "3652910",
    "end": "3660819"
  },
  {
    "text": "watch is actually all healthy because what it's done is it's finished its scale activity right it's added",
    "start": "3660819",
    "end": "3666410"
  },
  {
    "text": "instances and it actually added nodes so it'll start scaling down if I actually kill this guy over here and then that",
    "start": "3666410",
    "end": "3673460"
  },
  {
    "text": "will start to go away and I'll get alerts in the other direction when it's done so for example here I can go to",
    "start": "3673460",
    "end": "3680980"
  },
  {
    "text": "here and kill it and that'll start kind of cleaning up but let's kind of just",
    "start": "3680980",
    "end": "3689000"
  },
  {
    "text": "sum up what I've got here so one of the things we talked about was self-healing",
    "start": "3689000",
    "end": "3696350"
  },
  {
    "text": "and I showed that just really fast for time which is I killed one of the containers another example would be the",
    "start": "3696350",
    "end": "3701690"
  },
  {
    "text": "containers not healthy anymore and a new one tries to spin up it can only do that if there's enough resources to do so so",
    "start": "3701690",
    "end": "3707660"
  },
  {
    "text": "you always need a little spare in order to have the ability to spin up the new before tearing down the old that counts",
    "start": "3707660",
    "end": "3714230"
  },
  {
    "text": "for upgrades rolling upgrades so that you never have any downtime always high availability always two nodes healthy",
    "start": "3714230",
    "end": "3720290"
  },
  {
    "text": "the two new ones come up those two others are drained and that's what the orchestration engine will do Amazon will",
    "start": "3720290",
    "end": "3726080"
  },
  {
    "text": "handle that for you automatically DCOs handles that for you automatically kubernetes handles that for you",
    "start": "3726080",
    "end": "3731510"
  },
  {
    "text": "automatically so those are you know nice features of all three really I don't",
    "start": "3731510",
    "end": "3736550"
  },
  {
    "text": "think there's really a question that all three can't do pretty much all the things we care about that we've talked about so you know when we look at the",
    "start": "3736550",
    "end": "3744740"
  },
  {
    "text": "the summary basically each of them has their own native registry you know",
    "start": "3744740",
    "end": "3749990"
  },
  {
    "text": "whether or not you can use them on pram or cloud so one of the things that I find I run into on premise is the",
    "start": "3749990",
    "end": "3755600"
  },
  {
    "text": "decision around should I use a cloud native mixed with an on-prem you know deployed item and and what I've kind of",
    "start": "3755600",
    "end": "3763100"
  },
  {
    "text": "landed on is I think you want to go with something like D cos or kubernetes both in the cloud and on-premise or hybrids",
    "start": "3763100",
    "end": "3768500"
  },
  {
    "text": "when you need to have because you want to learn to manage one thing it's too much to learn to in my opinion so that's",
    "start": "3768500",
    "end": "3777080"
  },
  {
    "text": "that's a decision that's cultural as well but if you're in Amazon or Google or Azure these are your choices and I",
    "start": "3777080",
    "end": "3784430"
  },
  {
    "text": "kind of already went through that so I just put a chart up here just to follow so in summary in only an hour we talked",
    "start": "3784430",
    "end": "3792380"
  },
  {
    "text": "about simplicity of containers developer workflows that you have to care about you the service definitions you have the",
    "start": "3792380",
    "end": "3798160"
  },
  {
    "text": "immutability of the images tagging them all the way through to production you need the platforms to handle all the",
    "start": "3798160",
    "end": "3804790"
  },
  {
    "text": "rest of the health concerns so we need scheduling constraints we have to think about the constraints we have to do drills before we go live it's a lot of",
    "start": "3804790",
    "end": "3812320"
  },
  {
    "text": "work right so you have to see the light at the other side in order to want to do it but if you do it right we're forced",
    "start": "3812320",
    "end": "3818440"
  },
  {
    "text": "to do it right or you won't be successful in it essentially you could scale the containers you need to know",
    "start": "3818440",
    "end": "3825460"
  },
  {
    "text": "how to auto scale the nodes as well you need to think about the load balancing and discovery aspects so I just showed really load balancing not and and and",
    "start": "3825460",
    "end": "3833260"
  },
  {
    "text": "dynamic discovery underneath a load balancer but not console which would be the full dynamic discovery methodology",
    "start": "3833260",
    "end": "3841020"
  },
  {
    "text": "health checks and self-healing so killing a node having it regroup and",
    "start": "3841020",
    "end": "3846340"
  },
  {
    "text": "then you know just a peek at some of these you know so I think in terms of your decisions it really comes down to",
    "start": "3846340",
    "end": "3852700"
  },
  {
    "text": "which cloud are you in you know what do you have an affinity to its cultural a little bit",
    "start": "3852700",
    "end": "3858790"
  },
  {
    "text": "most of these actually deal with all the features the only ones I would say maybe aren't as fully functional yet but it's",
    "start": "3858790",
    "end": "3864340"
  },
  {
    "text": "gonna be interesting in the next year I think and that is swarm darker native and docker data center because those are",
    "start": "3864340",
    "end": "3871540"
  },
  {
    "text": "coming up fast whereas kubernetes is already pretty seasoned and DCOs with mesosphere and",
    "start": "3871540",
    "end": "3876580"
  },
  {
    "text": "and and marathon are also very seasoned right and and of course Amazon is quite",
    "start": "3876580",
    "end": "3881950"
  },
  {
    "text": "seasoned I think also it's going to get interesting in Azure because a sure is just a template right now but it's going",
    "start": "3881950",
    "end": "3887500"
  },
  {
    "text": "to start providing services around all of that which is going to be really helping you to you know manage the",
    "start": "3887500",
    "end": "3893830"
  },
  {
    "text": "cluster or aspects of it that are part of your Azure assets right and so I think that's sort of the difference",
    "start": "3893830",
    "end": "3901030"
  },
  {
    "text": "between is it really is or is it more it's going to be more right now it's a bit more like I as right and you know",
    "start": "3901030",
    "end": "3909010"
  },
  {
    "text": "remember the goal of this which is deploying a bunch of little things instead of big things and having a lot",
    "start": "3909010",
    "end": "3915010"
  },
  {
    "text": "to manage which means you have to do it right the first time you're going to start with - you're going to get to ten services and then finally be able to go",
    "start": "3915010",
    "end": "3922300"
  },
  {
    "text": "up to 100 or 200 because you've mastered that whole cycle that we talked about a little bit and",
    "start": "3922300",
    "end": "3927550"
  },
  {
    "text": "then some so you know business can have new features everywhere and that helps",
    "start": "3927550",
    "end": "3933040"
  },
  {
    "text": "them to you know get what they want because you can just replace and have",
    "start": "3933040",
    "end": "3938740"
  },
  {
    "text": "those rolling upgrades and have it be seamless because you've done the drills and you've done the right things to master the orchestration platform",
    "start": "3938740",
    "end": "3945750"
  },
  {
    "text": "because microservice is and it's about the business so I guess in summary",
    "start": "3945750",
    "end": "3951370"
  },
  {
    "text": "forget everything you did before and enjoy you know looking at whichever",
    "start": "3951370",
    "end": "3959650"
  },
  {
    "text": "platforms makes sense for you and if you ever have questions feel free to send them because our team's been working on a lot of them so it'd be interesting to",
    "start": "3959650",
    "end": "3965800"
  },
  {
    "text": "find out if what kinds of questions people have in terms of digging in and and getting started so happy to try to",
    "start": "3965800",
    "end": "3971080"
  },
  {
    "text": "help if you need it all right take care thank you",
    "start": "3971080",
    "end": "3975720"
  }
]