[
  {
    "start": "0",
    "end": "136000"
  },
  {
    "text": "so my name is Jimmy Bogaerts you can find me on twitter @ @j Bogaerts this",
    "start": "870",
    "end": "6870"
  },
  {
    "text": "presentation and just everything I do is on my github and github.com /j",
    "start": "6870",
    "end": "12150"
  },
  {
    "text": "bogart and i blog a lot about this topic on my blog at Jimmy Bogart calm a few",
    "start": "12150",
    "end": "18119"
  },
  {
    "text": "things about me I'm a Microsoft MVP I don't really know why I get the award I",
    "start": "18119",
    "end": "24029"
  },
  {
    "text": "fill out some spreadsheet every year and they keep giving me free stuff and I accept it so that's good stuff I guess I work for a consulting company here in",
    "start": "24029",
    "end": "31170"
  },
  {
    "text": "town called head spring and a lot of what I'll be talking about are from projects that I worked on at that",
    "start": "31170",
    "end": "36960"
  },
  {
    "text": "company I do a lot of open source stuff as well you may have heard of some of those projects over there on the right",
    "start": "36960",
    "end": "42210"
  },
  {
    "text": "you may love them but you probably hate them wanted to - there doesn't seem to be any middle ground there um so I want",
    "start": "42210",
    "end": "48660"
  },
  {
    "text": "to talk about today some of the projects that I've worked on and especially some of the ones that I've had a chance to",
    "start": "48660",
    "end": "54570"
  },
  {
    "text": "consult on and my work as consultants for companies that's asked to come in",
    "start": "54570",
    "end": "60660"
  },
  {
    "text": "and look at their code usually people don't come in to ask to look at they might look at their code when their code",
    "start": "60660",
    "end": "66659"
  },
  {
    "text": "is good usually it's on the the kind of opposite end of the spectrum there where",
    "start": "66659",
    "end": "72180"
  },
  {
    "text": "it's something that they don't they're not really proud of they they they're wondering why they're having a hard time",
    "start": "72180",
    "end": "77820"
  },
  {
    "text": "changing it's why they're not meeting their estimates not meeting their deadlines and in general is when I find",
    "start": "77820",
    "end": "84299"
  },
  {
    "text": "these these code bases and you know there are a big ball of mud or a chocolate ice cream stack I guess",
    "start": "84299",
    "end": "91110"
  },
  {
    "text": "something like that so in a particular kind of highlighted the problem of what",
    "start": "91110",
    "end": "96630"
  },
  {
    "text": "this architecture we'll be talking about today it tends to solve and so this architecture was built around an",
    "start": "96630",
    "end": "102780"
  },
  {
    "text": "application that was just a very simple workflow application so this is an application meant to approve some some",
    "start": "102780",
    "end": "109979"
  },
  {
    "text": "work items and then there were two different views of it there's like a regular user and an admin user now the",
    "start": "109979",
    "end": "116640"
  },
  {
    "text": "virginal developers hadn't built many new systems in their career they mainly been maintaining existing systems so as",
    "start": "116640",
    "end": "123840"
  },
  {
    "text": "part of what they were doing for building this application was you know how to research about what current best practices were or building systems and",
    "start": "123840",
    "end": "130170"
  },
  {
    "text": "architectures and so in this application there were exactly four screens for this whole system with",
    "start": "130170",
    "end": "138360"
  },
  {
    "start": "136000",
    "end": "136000"
  },
  {
    "text": "the very basic workflow and very simple role-based security but to get to those four screens they somehow generated",
    "start": "138360",
    "end": "143790"
  },
  {
    "text": "twenty thousand lines of code and in this twenty thousand lines of code there had two separate solutions and twelve",
    "start": "143790",
    "end": "150390"
  },
  {
    "text": "individual projects to be able to build out these overall force grades and all",
    "start": "150390",
    "end": "155430"
  },
  {
    "text": "these things they were building from where like supposed to be a kind of industry standard best practices about",
    "start": "155430",
    "end": "160710"
  },
  {
    "text": "how to build enterprise applications so when a presented with new out applications new systems try to figure",
    "start": "160710",
    "end": "166110"
  },
  {
    "text": "out how the pieces fit together especially something with you know multiple solutions multiple applications different projects what I'd like to do",
    "start": "166110",
    "end": "172740"
  },
  {
    "text": "is take a request in the application that is someone is using something screen which one clicks a button",
    "start": "172740",
    "end": "177870"
  },
  {
    "text": "so let's trace that request all the way from the front end to the back end and then back again and just see what all",
    "start": "177870",
    "end": "184680"
  },
  {
    "text": "the things that need to be touched and are to kind of follow the business logic as well as if I need to make a change to",
    "start": "184680",
    "end": "190380"
  },
  {
    "text": "this system what are all the places I needed touched in order to make that change so this application starts out",
    "start": "190380",
    "end": "197280"
  },
  {
    "text": "with an aspx page by the way this is like 2015 did this application was",
    "start": "197280",
    "end": "202650"
  },
  {
    "text": "created so that's like red flag number one what was we probably shouldn't be using web forms like ever ever again so",
    "start": "202650",
    "end": "209400"
  },
  {
    "text": "they kind of set the tone for me about what was going to fight next that of course ap aspx has a code behind still",
    "start": "209400",
    "end": "215970"
  },
  {
    "text": "no business logic there but this application uses WCF like you do so the",
    "start": "215970",
    "end": "221940"
  },
  {
    "text": "next thing we talked to is course is a service proxy now this is not a service product that comes from WCF this is a",
    "start": "221940",
    "end": "227190"
  },
  {
    "text": "custom one just in case they had to have additional kind of business logic to do things so their custom service proxy",
    "start": "227190",
    "end": "233040"
  },
  {
    "text": "this finally talks to the actual WCF service proxy and this is where the first solution ends now I open up the",
    "start": "233040",
    "end": "241440"
  },
  {
    "text": "second solution for the back-end part of the application because we don't want the front end talking directly to a",
    "start": "241440",
    "end": "247080"
  },
  {
    "text": "database we have to go through some kind of layer so we have to have this this WCF service layer tool to be able to",
    "start": "247080",
    "end": "252660"
  },
  {
    "text": "talk to so of course the next thing you need to do is look for the WCF service the thing that actually receives the",
    "start": "252660",
    "end": "258510"
  },
  {
    "text": "request from that front end now there was no business logic there so kept digging the next thing I looked for was",
    "start": "258510",
    "end": "264930"
  },
  {
    "text": "what the DCF service called in do they called a separate project which was the Bao I'll usually do this talk I asked the",
    "start": "264930",
    "end": "271680"
  },
  {
    "text": "audience like well what do you think bas stands for because I haven't seen this this acronym in a very long time usually",
    "start": "271680",
    "end": "278190"
  },
  {
    "text": "it's the B is probably a business and then L is probably layer a da I had a",
    "start": "278190",
    "end": "285450"
  },
  {
    "text": "digging search for but it was a business application layer I'm not usually a business logic layer in case there was",
    "start": "285450",
    "end": "291780"
  },
  {
    "text": "nothing in there it was literally just delegating to yet another thing so I dug the next step down to see what the",
    "start": "291780",
    "end": "297060"
  },
  {
    "text": "business application layer talked to and that was the data access layer the data set access layer was layer on top of the",
    "start": "297060",
    "end": "303720"
  },
  {
    "text": "data but still there was no actual business logic being done through all these different application layers all",
    "start": "303720",
    "end": "308910"
  },
  {
    "text": "the way for the front-end and out of the data access layer I didn't actually find any business logic the thing that was actually doing the world work now where",
    "start": "308910",
    "end": "315570"
  },
  {
    "text": "was the real work actually being done short procedure so all of this ceremony",
    "start": "315570",
    "end": "321810"
  },
  {
    "text": "all these different layers were just built in order to call a single store procedure that actually had the real",
    "start": "321810",
    "end": "327540"
  },
  {
    "text": "business logic but none of the other pieces was providing any actual value or",
    "start": "327540",
    "end": "332820"
  },
  {
    "text": "any additional any additional I really value to the either the developer or to",
    "start": "332820",
    "end": "339180"
  },
  {
    "text": "the actual business itself it was just a bunch of additional ceremony I could point something like this and say well obviously this is a bad idea especially",
    "start": "339180",
    "end": "345360"
  },
  {
    "text": "with that application this is small what happens if you have an application that isn't just for screens what happens when",
    "start": "345360",
    "end": "351690"
  },
  {
    "text": "we have an application that has many many screens and we start to need some kind of organization and structure in",
    "start": "351690",
    "end": "358350"
  },
  {
    "text": "order to handle the different logic that we're going to run into so you have something like this it doesn't make sense to have any sort of structure but",
    "start": "358350",
    "end": "364560"
  },
  {
    "text": "what happens when we try to scale any kind of architecture like this up to up to larger systems larger applications",
    "start": "364560",
    "end": "371360"
  },
  {
    "text": "now my me myself I did not go to school for computer science I was an",
    "start": "371360",
    "end": "377669"
  },
  {
    "text": "engineering degree and so when I first got out of school and had my first real application to work with I needed to",
    "start": "377669",
    "end": "383160"
  },
  {
    "text": "learn on how to build systems and build applications and so when I was taught and what I found back then was it the",
    "start": "383160",
    "end": "388980"
  },
  {
    "start": "387000",
    "end": "387000"
  },
  {
    "text": "way he built applications is with an interior architecture oh they I'd never really saw I guess a little done the",
    "start": "388980",
    "end": "395430"
  },
  {
    "text": "last screen shows like what eight tiers I guess but most time you see like a three or four tier and of",
    "start": "395430",
    "end": "400860"
  },
  {
    "text": "architecture where I have a user interface layer that supposed to handle the UI logic and in the business logic",
    "start": "400860",
    "end": "406080"
  },
  {
    "text": "layer which for us the business logic finally you don't want to talk directly to the database from your business logic layer so you need to have something in",
    "start": "406080",
    "end": "412050"
  },
  {
    "text": "between and then finally at the database itself not built of shipped applications with this exact structure where I had",
    "start": "412050",
    "end": "417900"
  },
  {
    "text": "like you know three projects and plus the database to be able to handle the stuff of my system it seemed to work okay leaves for the projects I was",
    "start": "417900",
    "end": "424470"
  },
  {
    "text": "working in which were usually pretty small now as it's already good at bigger applications we found that this kind",
    "start": "424470",
    "end": "431130"
  },
  {
    "text": "architecture didn't necessarily scale so we went to the much improved version of this which is the domain driven design",
    "start": "431130",
    "end": "437130"
  },
  {
    "text": "style domain driven design style into architecture I had to go back and forth because they look almost exactly exactly",
    "start": "437130",
    "end": "444180"
  },
  {
    "text": "the same well we used to call it business logic now it's services and now we have a",
    "start": "444180",
    "end": "449220"
  },
  {
    "text": "domain layer in there as well and then finally we don't talk directly to the database we have to talk to the repository but otherwise the way we",
    "start": "449220",
    "end": "455610"
  },
  {
    "text": "structured the code was was very very similar to what we saw before maybe a slight wrinkle there and that we had we",
    "start": "455610",
    "end": "462690"
  },
  {
    "text": "had domain objects that matched the names that our business used but usually",
    "start": "462690",
    "end": "467700"
  },
  {
    "text": "those the main objects didn't ously have a lot of behavior we're easily found the behavior was and those service objects up above as it was",
    "start": "467700",
    "end": "475110"
  },
  {
    "text": "rare that we could have business logic that could be completely encapsulated inside of a domain model and so we had the services we really found the",
    "start": "475110",
    "end": "481830"
  },
  {
    "text": "business logic that had to coordinate activities between different things so in this improved style",
    "start": "481830",
    "end": "489680"
  },
  {
    "text": "we had some applicants some applications that we build with this with a lot of",
    "start": "489680",
    "end": "495120"
  },
  {
    "text": "success but then we went to an application that was going to be much larger in scope and larger in scope I",
    "start": "495120",
    "end": "500700"
  },
  {
    "text": "mean like hundreds of screens as opposed to maybe a two or three dozen you might",
    "start": "500700",
    "end": "505830"
  },
  {
    "text": "say like well don't build a system with that many screens but this is before any kind of like micro service or anything",
    "start": "505830",
    "end": "511740"
  },
  {
    "text": "like that so in this case we thought we're doing okay especially because we saw this kind of structure work really",
    "start": "511740",
    "end": "518490"
  },
  {
    "text": "well for small systems and applications that thought well it worked well there then why not have it another batch",
    "start": "518490",
    "end": "525180"
  },
  {
    "text": "eliezer application so in this structure we very quickly started to see cracks in",
    "start": "525180",
    "end": "531840"
  },
  {
    "text": "the system in this kind of architect we found ourselves organizing all the code by individual layer we usually had",
    "start": "531840",
    "end": "539070"
  },
  {
    "start": "535000",
    "end": "535000"
  },
  {
    "text": "projects around each of these kinds of structures so in this case we had if I'm just dealing with something with a with",
    "start": "539070",
    "end": "545130"
  },
  {
    "text": "a person those there's will be a person table in the database as well we had our person domain model they made a person",
    "start": "545130",
    "end": "551730"
  },
  {
    "text": "controller we had the person service for all the all the business logic around",
    "start": "551730",
    "end": "556950"
  },
  {
    "text": "dealing with this person model really reside it was in the one service and then finally of course we can't talk",
    "start": "556950",
    "end": "561960"
  },
  {
    "text": "directly to the database we had their person repository dealing with all the data access logic from that now with",
    "start": "561960",
    "end": "569100"
  },
  {
    "text": "this kind of structure when I'm organizing coded by individual layer we tend to find that each of these kind of",
    "start": "569100",
    "end": "575520"
  },
  {
    "text": "layer object starts to grow in size and if our application starts to grow in size we tend to find these kind of layer",
    "start": "575520",
    "end": "581340"
  },
  {
    "text": "based structures really start to get out of hand I'm so I'm actually got a picture of a repository in this sort of",
    "start": "581340",
    "end": "589620"
  },
  {
    "start": "586000",
    "end": "586000"
  },
  {
    "text": "structure this is like actual production code that I wrote so although the first example I could",
    "start": "589620",
    "end": "594720"
  },
  {
    "text": "say oh that's other developers into the bags this is on me maybe this is well like I actually get the the curly brace",
    "start": "594720",
    "end": "601380"
  },
  {
    "text": "the in curly brace is probably somewhere near your feet down the floor somewhere about all these different methods that I",
    "start": "601380",
    "end": "608400"
  },
  {
    "text": "put on top of this repository object the reason why this thing got so big is because we had started to have more",
    "start": "608400",
    "end": "614700"
  },
  {
    "text": "complex data access logic based on the complex requirements we were seeing from the overall user interface so a simple",
    "start": "614700",
    "end": "621840"
  },
  {
    "text": "repository I just get a single model back but that's not sufficient a lot of times we need to get other pieces of",
    "start": "621840",
    "end": "627210"
  },
  {
    "text": "information or that individual domain object and because we're dealing with relational databases and have to do",
    "start": "627210",
    "end": "633030"
  },
  {
    "text": "different joints to get different pieces of information well in sequel and that's a very simple statement I just select",
    "start": "633030",
    "end": "638610"
  },
  {
    "text": "and then do some joint and here we go but with our ribs you have to do some more interesting sort of ORM specific",
    "start": "638610",
    "end": "644850"
  },
  {
    "text": "logic we don't have that arm specific logic leaking into our service layer so then we had to have all these very",
    "start": "644850",
    "end": "650310"
  },
  {
    "text": "specific methods to get very specific things to ensure that we didn't actually access the RM directly now there are",
    "start": "650310",
    "end": "656700"
  },
  {
    "text": "some ways to mitigate this but the overall problem we found is that when we build these objects that stretch across many different quests as my system that",
    "start": "656700",
    "end": "664230"
  },
  {
    "text": "each method is only used really buy that one request it starts become a tangled mess the other big issue we",
    "start": "664230",
    "end": "670330"
  },
  {
    "text": "found was just trying to make sense of the code itself so when we wanted to make a change in the system I was a tech",
    "start": "670330",
    "end": "676180"
  },
  {
    "text": "lead in this project at the time and I wanted to give instructions to developers of okay when you want to add a new screen or change a field on the",
    "start": "676180",
    "end": "682060"
  },
  {
    "text": "screen here all the things that you need to change in order to be able to accomplish that so I actually white",
    "start": "682060",
    "end": "687460"
  },
  {
    "text": "boarded this I said okay you need to go to do this object to James this thing this object is a - James just saying",
    "start": "687460",
    "end": "692920"
  },
  {
    "text": "over here over here but here what we found was that you actually had a jump around a whole lot in the solution to be",
    "start": "692920",
    "end": "699430"
  },
  {
    "text": "able to get anything done typically I think our touch points at that point was in like 12 different touch points to be",
    "start": "699430",
    "end": "705550"
  },
  {
    "text": "able to add a field to the screen scattered across the solution and different projects things like that even",
    "start": "705550",
    "end": "712540"
  },
  {
    "text": "looking at the difference requests in the system I would trace through different different individual requests",
    "start": "712540",
    "end": "718180"
  },
  {
    "text": "and then see what different objects that different requests touched well we found is that when I have these",
    "start": "718180",
    "end": "723820"
  },
  {
    "text": "layer objects that are more specific to the data as opposed to the behavior and",
    "start": "723820",
    "end": "729100"
  },
  {
    "text": "things like having service layers that deal with it just everything to deal with that that entity or the aggregate",
    "start": "729100",
    "end": "736060"
  },
  {
    "text": "we found is that although it could be very straightforward for this kind of a first layer but as I started to to cross",
    "start": "736060",
    "end": "742180"
  },
  {
    "text": "the boundary and cross the lines we found that one individual method could be used by a lot of different a lot of",
    "start": "742180",
    "end": "748330"
  },
  {
    "text": "different color paths what that meant for us was if I have to make a change in some location or one specific request I",
    "start": "748330",
    "end": "756190"
  },
  {
    "text": "have to do a lot of legwork research am I going to break anything else in the system and so what I'd really like to do",
    "start": "756190",
    "end": "762790"
  },
  {
    "text": "in the systems that I building is to not have to do a lot of research about what am I going to break because that worries",
    "start": "762790",
    "end": "768430"
  },
  {
    "text": "me a lot I mean I'm not generally a warrior but I do I do I do worry about breaking other things in the system so",
    "start": "768430",
    "end": "774040"
  },
  {
    "text": "it would be great if that if I'm adding a new feature set up functions to an application I don't want have to worry about at all",
    "start": "774040",
    "end": "779700"
  },
  {
    "text": "breaking any sort of existing functionality I can only worry about adding new things to the system and not",
    "start": "779700",
    "end": "785110"
  },
  {
    "text": "worry about breaking other things so in my next really big application that I",
    "start": "785110",
    "end": "791860"
  },
  {
    "text": "was gonna be tackling I looked at this picture it said I don't think this is this is an improvement I'm I'm not",
    "start": "791860",
    "end": "798250"
  },
  {
    "text": "getting complaints from the developers just a lot of grumbling about mr. estimates and things like that I took a step back and said this is",
    "start": "798250",
    "end": "803740"
  },
  {
    "text": "actually adding value to our developers is actually adding value to the",
    "start": "803740",
    "end": "810430"
  },
  {
    "text": "organization to our team is this structure actually improving this system or not and I didn't know or not so I",
    "start": "810430",
    "end": "817690"
  },
  {
    "text": "thought why don't we just chuck it all out that is let's just hard code everything",
    "start": "817690",
    "end": "823150"
  },
  {
    "text": "inside of the controller initially and then wait for like a month",
    "start": "823150",
    "end": "828310"
  },
  {
    "text": "with everything in the controller I knew you're not supposed to do that but at the point at that point in time I didn't trust these different ways of organizing",
    "start": "828310",
    "end": "835210"
  },
  {
    "text": "things so I said let's just put everything in the controller and then stick a step back and say okay now that we've got something going on our system",
    "start": "835210",
    "end": "841210"
  },
  {
    "text": "let's see if there's any patterns that emerged from just dumping everything in controller and see if we can see what",
    "start": "841210",
    "end": "847900"
  },
  {
    "text": "patterns we should be actually refactoring towards now most of the systems I deal with are web applications",
    "start": "847900",
    "end": "853920"
  },
  {
    "text": "that is there's some kind of either you know web application that's that's",
    "start": "853920",
    "end": "859380"
  },
  {
    "text": "exposing HTML or these days a lot of times I'm building api's and in these",
    "start": "859380",
    "end": "865150"
  },
  {
    "text": "web applications we generally see requests fall into the two different major categories that is requests that",
    "start": "865150",
    "end": "872650"
  },
  {
    "text": "are going to get information to show on a screen or return back to another service or a request to change",
    "start": "872650",
    "end": "878170"
  },
  {
    "text": "information and that comes in the form of an HTTP gets and an HTTP POST now",
    "start": "878170",
    "end": "884200"
  },
  {
    "text": "about the time that is going through this transition of like okay let's get rid of our our service classes and repositories and just put in anything",
    "start": "884200",
    "end": "890440"
  },
  {
    "text": "the controller and step back and take a look at what we've got here around the same time a new concept was emerging",
    "start": "890440",
    "end": "897430"
  },
  {
    "text": "around these overall concepts of retrieving information and changing",
    "start": "897430",
    "end": "902500"
  },
  {
    "text": "information and if you look at what these are actually doing from a outside of HTTP and from kind of a just overall",
    "start": "902500",
    "end": "908620"
  },
  {
    "text": "structural perspective you can see that I get is really a query from information I'm asking the system or some",
    "start": "908620",
    "end": "914080"
  },
  {
    "text": "information and then I want to do something with it and the other side of the post is a request to perform some",
    "start": "914080",
    "end": "919810"
  },
  {
    "text": "operation I want to approve this invoice I want to ship this product I want to",
    "start": "919810",
    "end": "925530"
  },
  {
    "text": "just edit some information on the screen that is a command to the system say I want you to perform this operation and",
    "start": "925530",
    "end": "932250"
  },
  {
    "text": "so this led to the CQRS principal secure are standing for the command query a responsibility",
    "start": "932250",
    "end": "938940"
  },
  {
    "text": "segregation principle and the overall idea here is to split those service classes those layered objects split",
    "start": "938940",
    "end": "946860"
  },
  {
    "text": "those split those linear objects into two because what we find is that for each of the those late objects only one",
    "start": "946860",
    "end": "954180"
  },
  {
    "text": "path is ever executed for every single request instead of trying to jam everything together in these kind of God",
    "start": "954180",
    "end": "959400"
  },
  {
    "text": "objects split those objects outs and two basic command and query responsibilities so CQRS is really just about creating",
    "start": "959400",
    "end": "967140"
  },
  {
    "text": "two classes where once there was one two classes being at the class for changing",
    "start": "967140",
    "end": "973020"
  },
  {
    "text": "information and retrieving information separating those out into two so if I go back and look at this repository that I",
    "start": "973020",
    "end": "980010"
  },
  {
    "text": "wrote so I have no one to blame but myself I can look at this to say well if I look at the methods on here they're",
    "start": "980010",
    "end": "986220"
  },
  {
    "text": "pretty much split into these two overall basic responsibilities I have some methods on here that about queries so",
    "start": "986220",
    "end": "994230"
  },
  {
    "text": "retrieving information and they're also some methods on here for commands to modify information and so I started",
    "start": "994230",
    "end": "1000440"
  },
  {
    "text": "looking at all these different layer these layer types and found all these",
    "start": "1000440",
    "end": "1006350"
  },
  {
    "text": "layer types I had all these different methods they were bit they were still all split up into methods that retrieved",
    "start": "1006350",
    "end": "1011390"
  },
  {
    "text": "information or methods that changed information I wanna link to my overall application I found that when I want to",
    "start": "1011390",
    "end": "1018170"
  },
  {
    "start": "1016000",
    "end": "1016000"
  },
  {
    "text": "make a change to this system I'm not dealing with the entire layer all at once",
    "start": "1018170",
    "end": "1023390"
  },
  {
    "text": "instead I'm dealing with individual methods all the way down from the UI down to the to the service layer to the",
    "start": "1023390",
    "end": "1030380"
  },
  {
    "text": "repository it even to the database sometimes these overall operations I'm trying to perform are not dealing with",
    "start": "1030380",
    "end": "1037130"
  },
  {
    "text": "things across an entire layer instead what they're dealing with is a set of logic across each individual particle",
    "start": "1037130",
    "end": "1043459"
  },
  {
    "text": "slice so when we move towards this architecture I had to come up with the",
    "start": "1043459",
    "end": "1049760"
  },
  {
    "text": "name of it and the best I can come up with is a vertical slice architecture the vertical slice architecture is where we model and organize our application",
    "start": "1049760",
    "end": "1057080"
  },
  {
    "start": "1052000",
    "end": "1052000"
  },
  {
    "text": "architecture around axes have changed that is a look at what needs to change in a system and I build these these",
    "start": "1057080",
    "end": "1063710"
  },
  {
    "text": "primitives around what changes at the same time and build and organize the code around",
    "start": "1063710",
    "end": "1068960"
  },
  {
    "text": "those axes have changed so what do these vertical slices look like well the first",
    "start": "1068960",
    "end": "1075620"
  },
  {
    "text": "thing we want to do is move all the code related to an individual request it could be scattered across all my",
    "start": "1075620",
    "end": "1081260"
  },
  {
    "text": "different layers in my architecture move those over into one single place the idea here is that if I need to make a",
    "start": "1081260",
    "end": "1087230"
  },
  {
    "text": "change or add code to a system I don't have to jump around the the code to be able to do this I put all the code that",
    "start": "1087230",
    "end": "1093320"
  },
  {
    "text": "needs to change together physically physically together in the same place and we'll see what that looks like here",
    "start": "1093320",
    "end": "1098720"
  },
  {
    "text": "in a little bit maybe you can imagine that if I need to make changes to the view to the to the HTML to the business",
    "start": "1098720",
    "end": "1104630"
  },
  {
    "text": "object instead of scattering that across the application into different folders I move all that that sort of logic into",
    "start": "1104630",
    "end": "1110750"
  },
  {
    "text": "one single place now this does require some refactoring in our case because",
    "start": "1110750",
    "end": "1116350"
  },
  {
    "text": "originally these individual boxes were part of larger classes that were designated to these kind of layer types",
    "start": "1116350",
    "end": "1122419"
  },
  {
    "text": "or each individual layering system but we found again that if I look at each",
    "start": "1122419",
    "end": "1127820"
  },
  {
    "start": "1126000",
    "end": "1126000"
  },
  {
    "text": "one of those layer types that have those public methods do some work whether it's",
    "start": "1127820",
    "end": "1133370"
  },
  {
    "text": "change information or read information each one of those methods is only ever used on one single code path so what it",
    "start": "1133370",
    "end": "1139850"
  },
  {
    "text": "can do is take those individual methods use on those one single code paths and move each of them into their own",
    "start": "1139850",
    "end": "1145820"
  },
  {
    "text": "individual class or type and each individual class or type is dealing with that one request set of logic for that",
    "start": "1145820",
    "end": "1152750"
  },
  {
    "text": "one set of work that needs to do is now completely encapsulated inside each fund of those individual classes now this is",
    "start": "1152750",
    "end": "1159830"
  },
  {
    "text": "actually a very state of refactoring you can go back to the Fowler book written now 20 years ago and this this exact",
    "start": "1159830",
    "end": "1166700"
  },
  {
    "text": "arrow is they called out to refactoring that you can do it's extract class from a method so all I'm doing here is kind",
    "start": "1166700",
    "end": "1173570"
  },
  {
    "text": "of a standard refactoring of taking this one class that's too big and taking each method and extracting it into its own",
    "start": "1173570",
    "end": "1179360"
  },
  {
    "text": "individual class but the last thing I'm doing is taking each one of those classes and placing it together with other related classes they are dealing",
    "start": "1179360",
    "end": "1186080"
  },
  {
    "text": "with that individual request so this approve invoice reject invoice and flag in place classes are not going",
    "start": "1186080",
    "end": "1192200"
  },
  {
    "text": "to live in the same folder they actually gonna live in different folders because I want to separate those out too based",
    "start": "1192200",
    "end": "1197240"
  },
  {
    "text": "on the overall requests in my system and not the kind of they're the same kind of",
    "start": "1197240",
    "end": "1202490"
  },
  {
    "text": "thing I don't put all elephants together I don't put all drafts together I look at the oval request my system and say okay",
    "start": "1202490",
    "end": "1208070"
  },
  {
    "text": "this set of stuff all changes together so let's put them all in the same folder now we started out with this this kind",
    "start": "1208070",
    "end": "1214370"
  },
  {
    "text": "of approach where we just took the old methods over in one giant service class and starting to put them into individual",
    "start": "1214370",
    "end": "1219800"
  },
  {
    "text": "service classes what we found is that when we were giving this kind of instructions to our developers to say",
    "start": "1219800",
    "end": "1225530"
  },
  {
    "text": "okay what you used to do was build us one service class and have methods just take that old method and put it into a",
    "start": "1225530",
    "end": "1232460"
  },
  {
    "text": "class all by itself we started to find that these service classes started to really diverge and how they looked and",
    "start": "1232460",
    "end": "1237770"
  },
  {
    "text": "behaved and so we want to put some structure and say let's get some uniformity around these these individual",
    "start": "1237770",
    "end": "1244100"
  },
  {
    "text": "service classes so that the developers don't have to think a lot about how to design or name these things they all",
    "start": "1244100",
    "end": "1250100"
  },
  {
    "text": "decide of a uniform design and really the work inside of that those those classes that's the most important thing",
    "start": "1250100",
    "end": "1255140"
  },
  {
    "text": "in my system so I started to see that these things were basically a single",
    "start": "1255140",
    "end": "1261350"
  },
  {
    "text": "class was the single method that accepted inputs it had some sort of output so we can abstract that into",
    "start": "1261350",
    "end": "1267530"
  },
  {
    "text": "something that handles requests take some inputs and produces some sort of",
    "start": "1267530",
    "end": "1272870"
  },
  {
    "text": "output and so this was the abstraction that we used probably a dozen projects where we would create some kind of",
    "start": "1272870",
    "end": "1278720"
  },
  {
    "text": "request handler class that takes some input and produces some outputs and then all the requests in our system were",
    "start": "1278720",
    "end": "1283940"
  },
  {
    "text": "built around this this exact primitive well I got tired of copying this code",
    "start": "1283940",
    "end": "1288980"
  },
  {
    "text": "from place to place to place and so at some points I was goaded into making an",
    "start": "1288980",
    "end": "1294830"
  },
  {
    "text": "open-source project to do exactly this kind of abstraction and so that was what",
    "start": "1294830",
    "end": "1300320"
  },
  {
    "text": "led up to the mediator project by the way I'm again you can kind of send out like when that project was created",
    "start": "1300320",
    "end": "1305870"
  },
  {
    "text": "because I'm not I'm not creative with names and so that was about the time that signal R was like coming really",
    "start": "1305870",
    "end": "1312020"
  },
  {
    "text": "popular and so I thought okay this is just so this is really just say if the petition of the mediator pattern so",
    "start": "1312020",
    "end": "1317840"
  },
  {
    "text": "let's call it mediate are I actually still don't know how to pronounce that it's mediate our mediator any case it's",
    "start": "1317840",
    "end": "1324560"
  },
  {
    "text": "easily Google which is that that's the most important thing so I took these primitives and said okay let's let's",
    "start": "1324560",
    "end": "1331790"
  },
  {
    "text": "let's break this down to an open-source project it defines something they can handle requests it defines an input",
    "start": "1331790",
    "end": "1339100"
  },
  {
    "text": "and also finds an output what I wanted to do was to apply some uniformity to",
    "start": "1339100",
    "end": "1344590"
  },
  {
    "text": "this though it says you only get one input and you only get one output additionally I wanted to have some",
    "start": "1344590",
    "end": "1351250"
  },
  {
    "text": "coupling between the input and the output so in this structure the input is",
    "start": "1351250",
    "end": "1356350"
  },
  {
    "text": "an I request of T so it's a marker interface but the key thing here is that the request knows about the response so",
    "start": "1356350",
    "end": "1363610"
  },
  {
    "text": "I know what's going to come out the other side well the other thing we want to do is not share requests and",
    "start": "1363610",
    "end": "1369370"
  },
  {
    "text": "responses between individual things in my system because that would lead to additional coupling and that couldn't lead to us having problems when we need",
    "start": "1369370",
    "end": "1376059"
  },
  {
    "text": "to change things in the future want to have a very explicit coupling between request response in my system so that",
    "start": "1376059",
    "end": "1382570"
  },
  {
    "text": "each request has one Handler and one response I need to make a change in my system I had a confidence know that if I",
    "start": "1382570",
    "end": "1389799"
  },
  {
    "text": "make a change the handler the request or the response it's only dealing with that one individual code path now because",
    "start": "1389799",
    "end": "1398169"
  },
  {
    "text": "we're I'm in c-sharp and it's an object origin language if I was doing this in a",
    "start": "1398169",
    "end": "1403240"
  },
  {
    "text": "functional language there's any f-sharp folks on the call by the way you probably laughing because this is really just a functional style of building",
    "start": "1403240",
    "end": "1409360"
  },
  {
    "text": "applications but I've been C sure if I'm an O and and trying to build a functional style is just ugly as hell so",
    "start": "1409360",
    "end": "1415870"
  },
  {
    "text": "I'm not going to try to do that instead we have to have this object-oriented style I'm also going to be using dependency injection for these request",
    "start": "1415870",
    "end": "1422440"
  },
  {
    "text": "handlers to be able to inject dependencies so whatever you think whatever that request handler needs to do its work is going to be injected in",
    "start": "1422440",
    "end": "1429250"
  },
  {
    "text": "its constructor as opposed to passed in through that handle method now with HP",
    "start": "1429250",
    "end": "1435190"
  },
  {
    "text": "net core this is now super easy to do you can just say add mediator and give it to the give it a type or assembly to",
    "start": "1435190",
    "end": "1442299"
  },
  {
    "text": "scan for handlers and will register all those Engler's that you can find mi di container but that's not the most",
    "start": "1442299",
    "end": "1448900"
  },
  {
    "text": "important part just I need some way to find all the handlers and so this is a one line way of doing it",
    "start": "1448900",
    "end": "1454320"
  },
  {
    "text": "so I have a way to define requests handlers and responses so how does this",
    "start": "1454320",
    "end": "1459760"
  },
  {
    "text": "actually track back to the overall application architecture that I'm trying to deal with which is CQRS application",
    "start": "1459760",
    "end": "1465610"
  },
  {
    "text": "having gets and posts how do i model this in terms of handlers well if I look at a query a query is is",
    "start": "1465610",
    "end": "1474470"
  },
  {
    "text": "eventually gonna track to to some method on a controller likely and that controller is going to have some logic",
    "start": "1474470",
    "end": "1480350"
  },
  {
    "text": "what I'm going to do is take that logic and move it into an overall handler to be able to handle that query so for the",
    "start": "1480350",
    "end": "1487970"
  },
  {
    "text": "query side we're gonna have some sort of query definition and that's going to be passed to a query healer and finally the",
    "start": "1487970",
    "end": "1494510"
  },
  {
    "text": "response is what's I give back to the end user either to an API or to render",
    "start": "1494510",
    "end": "1499520"
  },
  {
    "text": "as HTML and a post is going to be very similar I'm gonna have some definition of the command information that I want",
    "start": "1499520",
    "end": "1507890"
  },
  {
    "text": "to change and then that's going to be given to a handler and finally I'm gonna have some sort of response so this comes",
    "start": "1507890",
    "end": "1515210"
  },
  {
    "text": "down to having for each of these handlers one model in and one model out so in terms of modeling the request of",
    "start": "1515210",
    "end": "1522320"
  },
  {
    "text": "my sips of system it starts to become very straightforward just defining these query objects that finding the response",
    "start": "1522320",
    "end": "1528049"
  },
  {
    "text": "objects and then my developers are really tasked with coding that code and",
    "start": "1528049",
    "end": "1534260"
  },
  {
    "text": "the handler be able to accept the request and fulfill the response now",
    "start": "1534260",
    "end": "1539679"
  },
  {
    "text": "these handlers are intended to have complete encapsulation over their requests in the response so anything",
    "start": "1539679",
    "end": "1545299"
  },
  {
    "start": "1541000",
    "end": "1541000"
  },
  {
    "text": "that that's handle needs to do should be inside of the handler and that's and not",
    "start": "1545299",
    "end": "1550850"
  },
  {
    "text": "something that's done before the handler or after handler I'm the general idea is that from the application perspective I",
    "start": "1550850",
    "end": "1557360"
  },
  {
    "text": "get I receive a request I hand it off to the mediator to head off to a handler",
    "start": "1557360",
    "end": "1562490"
  },
  {
    "text": "and then I receive a response but inside of that is a complete black box to the application and in terms of what the",
    "start": "1562490",
    "end": "1568790"
  },
  {
    "text": "logic it actually being performed inside of there we'll see here a little bit what that entails because that box can",
    "start": "1568790",
    "end": "1575900"
  },
  {
    "text": "be big or the hailer so we're gonna have to deal with that in some form or fashion so let's look first at how we",
    "start": "1575900",
    "end": "1583880"
  },
  {
    "text": "would model the query side of the equation now the query side is dealing",
    "start": "1583880",
    "end": "1589040"
  },
  {
    "start": "1587000",
    "end": "1587000"
  },
  {
    "text": "with first that request object coming in so if I looked at an overall controller",
    "start": "1589040",
    "end": "1595490"
  },
  {
    "text": "action before I performed any that refactoring I need to look at this controller action say well what what constitutes they",
    "start": "1595490",
    "end": "1601549"
  },
  {
    "text": "quote request in this system and for a request it's a few things well",
    "start": "1601549",
    "end": "1607220"
  },
  {
    "text": "first of all it's the request parameters to this controller action that defines",
    "start": "1607220",
    "end": "1612560"
  },
  {
    "text": "the inputs to the overall handler it's those things I'm passing in through the",
    "start": "1612560",
    "end": "1617570"
  },
  {
    "text": "query string that are going to be passed eventually down to my overall request handler now some queries are simple as",
    "start": "1617570",
    "end": "1624500"
  },
  {
    "text": "they don't have any parameters passed in through the through the controller action method and so those query classes",
    "start": "1624500",
    "end": "1631910"
  },
  {
    "text": "that we request classes are just going to be empty but they are going to be scoped so you can see here that this",
    "start": "1631910",
    "end": "1638270"
  },
  {
    "text": "query class is scoped under an index class and so I could either do",
    "start": "1638270",
    "end": "1643730"
  },
  {
    "text": "namespaces or classes however I want to do it I want to make sure that this query request is logically defined under",
    "start": "1643730",
    "end": "1652160"
  },
  {
    "text": "some kind of structure that corresponds to the requests in my system this is not",
    "start": "1652160",
    "end": "1657410"
  },
  {
    "text": "any generic query used for anybody this is the query used for an index page on some specific section of the application",
    "start": "1657410",
    "end": "1664330"
  },
  {
    "text": "now some queries are going to have parameters and so those are going to be the the action parameters the query",
    "start": "1664330",
    "end": "1670100"
  },
  {
    "start": "1666000",
    "end": "1666000"
  },
  {
    "text": "string parameters or if you're using a web a desktop application it's the form",
    "start": "1670100",
    "end": "1675470"
  },
  {
    "text": "information on the screen um all of those different parameters those direct inputs into the requests are going to be",
    "start": "1675470",
    "end": "1682460"
  },
  {
    "text": "properties on my request object I just take all those different action parameters and create properties my",
    "start": "1682460",
    "end": "1688850"
  },
  {
    "text": "query that will eventually be passed out to my my overall handler the general idea here is that my handler shouldn't",
    "start": "1688850",
    "end": "1694700"
  },
  {
    "text": "have to reach back out to get input information for its request it should all be the request object so it just",
    "start": "1694700",
    "end": "1700730"
  },
  {
    "text": "takes the requests and can just perform what it needs to do based on those direct inputs to intuit now quarries",
    "start": "1700730",
    "end": "1707090"
  },
  {
    "text": "could get complicated right I could have paging and sorting and filtering I can have complex search trains with lots of",
    "start": "1707090",
    "end": "1713060"
  },
  {
    "text": "fields on them and all those fields all this almost all the different form fields are just going to be mapped to",
    "start": "1713060",
    "end": "1718790"
  },
  {
    "text": "properties on this overall request object so I have the request object",
    "start": "1718790",
    "end": "1725240"
  },
  {
    "text": "defined but you notice that the class is defined as a request of some response",
    "start": "1725240",
    "end": "1730460"
  },
  {
    "text": "type and so I also have to define what that response look like now the response how did a pin",
    "start": "1730460",
    "end": "1736559"
  },
  {
    "start": "1734000",
    "end": "1734000"
  },
  {
    "text": "on what kind of application on buildings I don't build the responses in a vacuum those responses are really defined and",
    "start": "1736559",
    "end": "1742260"
  },
  {
    "text": "designed based on how this one request needs to be performed and used by either",
    "start": "1742260",
    "end": "1748230"
  },
  {
    "text": "the subsequent parts the application or the end user but I want to make sure",
    "start": "1748230",
    "end": "1754320"
  },
  {
    "text": "that everything the next step needs to do to perform its work is on that response object at the door doesn't have",
    "start": "1754320",
    "end": "1760200"
  },
  {
    "text": "to go through additional changes or enrichments it's everything that's needed to do to now pass it to the user",
    "start": "1760200",
    "end": "1766919"
  },
  {
    "text": "interface or the next system is all on that response so I went back to my",
    "start": "1766919",
    "end": "1772740"
  },
  {
    "start": "1772000",
    "end": "1772000"
  },
  {
    "text": "controller action said okay how do we how can we define the outputs to the next step in the process whether it's",
    "start": "1772740",
    "end": "1778950"
  },
  {
    "text": "written or HTML or returning JSON so click here and say well let's just find all the outputs I'm passing back to the",
    "start": "1778950",
    "end": "1785280"
  },
  {
    "text": "end user and this kind of depends what kind of application architects you're working with you're working with NBC or web api or razor pages this is the",
    "start": "1785280",
    "end": "1792900"
  },
  {
    "text": "although stuff that needs to be passed to kind of representation step of the web prop web request process to say I",
    "start": "1792900",
    "end": "1799440"
  },
  {
    "text": "need to take this data and now transform it into HTML JSON XML whatever it might be so this case I look at what are all",
    "start": "1799440",
    "end": "1806370"
  },
  {
    "text": "the things in my controller action that are that are data to be passed to the overall representation rendering step of",
    "start": "1806370",
    "end": "1812880"
  },
  {
    "text": "the process I've got you back stuff I've also got a a strongly typed the view",
    "start": "1812880",
    "end": "1818880"
  },
  {
    "text": "model then also passing as well so all of those different pieces become",
    "start": "1818880",
    "end": "1824220"
  },
  {
    "text": "properties on the response object and so all those different pieces though like all the different things I'm showing on",
    "start": "1824220",
    "end": "1829830"
  },
  {
    "text": "the screen are then now pulled up into the response now one key thing here is",
    "start": "1829830",
    "end": "1835049"
  },
  {
    "text": "that these responses need to be very dumb DT o--'s or data transfer objects I don't want any kind of like ORM entities",
    "start": "1835049",
    "end": "1844289"
  },
  {
    "text": "and any framework things where if I go down the wrong property path now it's making a behind-the-scenes database call",
    "start": "1844289",
    "end": "1849630"
  },
  {
    "text": "I want these things to be as dumb as possible and represent only the information I'm going to show on that",
    "start": "1849630",
    "end": "1855000"
  },
  {
    "text": "screen some of my systems would just pass through entities all the way down to the view or out to the end user but",
    "start": "1855000",
    "end": "1861090"
  },
  {
    "text": "that could pass much more information than they actually need I want to make sure that the response models things",
    "start": "1861090",
    "end": "1866669"
  },
  {
    "text": "coming out of the handler are only the information necessary to be able to pass back to the end-user",
    "start": "1866669",
    "end": "1872399"
  },
  {
    "text": "and nothing more so simple models would just be a set of property it's just like",
    "start": "1872399",
    "end": "1878429"
  },
  {
    "text": "a flat set of properties and nothing else and so if I looked at this is probably dealing with some kind of",
    "start": "1878429",
    "end": "1884190"
  },
  {
    "text": "domain object a domain object has a lot more stuff going on but I don't want to give everything back to the end user I",
    "start": "1884190",
    "end": "1889950"
  },
  {
    "text": "only want to get back the information that's necessary to show on that screen but pare down all the properties being",
    "start": "1889950",
    "end": "1895590"
  },
  {
    "text": "only the things I'm showing the screen and nothing more now sometimes you can",
    "start": "1895590",
    "end": "1900779"
  },
  {
    "text": "have more complex responses to queries so in this case I've got kind of like a parent-child relationship with a model",
    "start": "1900779",
    "end": "1906419"
  },
  {
    "text": "I've got some kind of summary information as well as a table of detail",
    "start": "1906419",
    "end": "1911519"
  },
  {
    "text": "information as well and so the way I model that is with just a single class that has the top-level properties and",
    "start": "1911519",
    "end": "1916950"
  },
  {
    "text": "then a list of objects that is the table of properties they're going to be showing down below on the screen but",
    "start": "1916950",
    "end": "1923700"
  },
  {
    "text": "what I'm not going to do here is go back to my old way of pulling back the full domain model for that's that child",
    "start": "1923700",
    "end": "1931169"
  },
  {
    "text": "property I'm so gonna create a type that is only the information we're gonna be showing in that piece of code on the",
    "start": "1931169",
    "end": "1936690"
  },
  {
    "text": "screen and nothing more and then sure they don't accidentally share that that that DTO amongst other parts of my",
    "start": "1936690",
    "end": "1943080"
  },
  {
    "text": "application I'll actually nest those models to ensure that you don't accidentally pick up the wrong class or",
    "start": "1943080",
    "end": "1948720"
  },
  {
    "text": "wrong type everything sort of captured and capsulated in this one single request okay so now that I've got the",
    "start": "1948720",
    "end": "1956820"
  },
  {
    "text": "request object I got the response object now is the middle part like the meat of the code which is going to be that query",
    "start": "1956820",
    "end": "1963360"
  },
  {
    "text": "handler now this at this point we just taken the code that was hard-coded in",
    "start": "1963360",
    "end": "1969419"
  },
  {
    "text": "the controller action and we just stuck it in the handler we made me model the request model response and then the last",
    "start": "1969419",
    "end": "1974970"
  },
  {
    "text": "little piece was whatever I needed to do to be able to you take the request and build off the response so sometimes this",
    "start": "1974970",
    "end": "1980880"
  },
  {
    "text": "is going to be very very simple um we still use autumn a poor a lot in our projects so in this case I'm using auto",
    "start": "1980880",
    "end": "1986549"
  },
  {
    "text": "map or projections which translates the DTO into a link select statement which",
    "start": "1986549",
    "end": "1992519"
  },
  {
    "text": "eventually gets translated by the query provider and to a select statement that",
    "start": "1992519",
    "end": "1997710"
  },
  {
    "text": "is just the properties they find on to DTM so in this case with this automat projection which is that line that says",
    "start": "1997710",
    "end": "2003710"
  },
  {
    "text": "project I'm projecting an entity to a DTL and that projection through Lake results in",
    "start": "2003710",
    "end": "2010019"
  },
  {
    "text": "a sequel statement that is only the set of properties that have selected as part of that DTO nothing else nothing more so",
    "start": "2010019",
    "end": "2016980"
  },
  {
    "text": "by going through this kind of projection step it ensures that I don't have to have any kind of like lazy loading or",
    "start": "2016980",
    "end": "2023130"
  },
  {
    "text": "anything like that the the query provider looks at the Select projection and then makes the exact sequel",
    "start": "2023130",
    "end": "2029340"
  },
  {
    "text": "statement necessary to be able to put that data into that into that DTL now",
    "start": "2029340",
    "end": "2035549"
  },
  {
    "text": "sometimes my queries get complicated so my handler can if it wants to then",
    "start": "2035549",
    "end": "2041929"
  },
  {
    "text": "drop down into whatever kind of data access strategy it wants to so this case it's using sequel just kind of raw",
    "start": "2041929",
    "end": "2048030"
  },
  {
    "text": "sequel to be able to get the information out this course is a I'm a dumb sequel statement but I have had cases where the",
    "start": "2048030",
    "end": "2053638"
  },
  {
    "text": "sequel gets very complicated and my ORM is no longer sufficient or effective and being able to to take that sequel and",
    "start": "2053639",
    "end": "2060388"
  },
  {
    "text": "then fill out a DTL so in some of my projects we have two different libraries",
    "start": "2060389",
    "end": "2066480"
  },
  {
    "text": "we use for right paths and read paths for right paths we may use the ORM and if a repast we may use a microarray or",
    "start": "2066480",
    "end": "2073740"
  },
  {
    "text": "something like dapper that is just responsible for taking sequel and produce and then fill that into a dto um",
    "start": "2073740",
    "end": "2080089"
  },
  {
    "text": "but the key thing here is that that logic that strategy of how to fill the",
    "start": "2080089",
    "end": "2085589"
  },
  {
    "text": "requests how to take the request and fill the response is 100% encapsulated inside of this individual handler so",
    "start": "2085589",
    "end": "2092398"
  },
  {
    "text": "this handler needs to change it has go from entity framework to something else I can do that in this one spot and not",
    "start": "2092399",
    "end": "2099720"
  },
  {
    "text": "worry about affecting any other handler in my application and system that's pretty comforting for me as a developer",
    "start": "2099720",
    "end": "2106200"
  },
  {
    "text": "say I know that if I change this spot I'm not affecting any other requests of my system and if any of the request",
    "start": "2106200",
    "end": "2112859"
  },
  {
    "text": "changes in a system they're not going to affect me so inside of my handler I can",
    "start": "2112859",
    "end": "2120210"
  },
  {
    "start": "2117000",
    "end": "2117000"
  },
  {
    "text": "do whatever I want to be able to fulfill the request it could be an RM it could be one of those micrograms I could call",
    "start": "2120210",
    "end": "2125520"
  },
  {
    "text": "out to an API I could go out to some other web service or something that's to be able to build the response I can",
    "start": "2125520",
    "end": "2130710"
  },
  {
    "text": "combine these things together however I want to look a bit whatever I want to in this handler to be able to fulfill that",
    "start": "2130710",
    "end": "2135990"
  },
  {
    "text": "request and that's 100% encapsulated for my system from the",
    "start": "2135990",
    "end": "2141210"
  },
  {
    "text": "from the calling logic I should say now something needs to know how to like fill in the details of the ORM HD client so",
    "start": "2141210",
    "end": "2148050"
  },
  {
    "text": "in these systems you're gonna have some setup code but that's really no different than any other kind of",
    "start": "2148050",
    "end": "2153530"
  },
  {
    "text": "application architecture strategy is you will have to configure these different items in some kind of like setup",
    "start": "2153530",
    "end": "2159720"
  },
  {
    "text": "configuration but that's regardless of the strategy you'd have to do that anyway the key thing here is though is",
    "start": "2159720",
    "end": "2167250"
  },
  {
    "text": "my calling logic doesn't know about that it just says here's the request do whatever you need to do and then give me",
    "start": "2167250",
    "end": "2173100"
  },
  {
    "text": "the response let's go on to the next step now as we build out these overall",
    "start": "2173100",
    "end": "2179550"
  },
  {
    "text": "handlers in my system we may run for the case where we find some sort of duplication between individual handlers",
    "start": "2179550",
    "end": "2185550"
  },
  {
    "start": "2183000",
    "end": "2183000"
  },
  {
    "text": "now I will say that this happens much less frequently with queries than with commands with queries it's not that",
    "start": "2185550",
    "end": "2191820"
  },
  {
    "text": "common that you have to query common data across a set of requests but it does pop up from time to time and so",
    "start": "2191820",
    "end": "2197790"
  },
  {
    "text": "when I see duplicated logic between multiple handlers what do I do what I do",
    "start": "2197790",
    "end": "2203790"
  },
  {
    "text": "is actually behind me somewhere if it's reach for the Fowler refactoring book",
    "start": "2203790",
    "end": "2209400"
  },
  {
    "text": "because duplicate logic amongst multiple classes is again I say a well defined",
    "start": "2209400",
    "end": "2214770"
  },
  {
    "text": "code smell with well-defined refactoring techniques to handle and and and gather",
    "start": "2214770",
    "end": "2220440"
  },
  {
    "text": "that common logic together so that those different classes handlers and be able to do that now queries themselves I tend",
    "start": "2220440",
    "end": "2227760"
  },
  {
    "text": "not to extract a lot of complex types and classes to be able to encapsulate they common logic um it could be a class",
    "start": "2227760",
    "end": "2234930"
  },
  {
    "text": "it could be just a static helper method a lot of times what I do is do stew extension methods on top of whatever",
    "start": "2234930",
    "end": "2241500"
  },
  {
    "text": "data access thing I'm using so if I need to get like what is the current logged in user or give me the the roles and and",
    "start": "2241500",
    "end": "2248030"
  },
  {
    "text": "permissions for this user I just go to an extension method that's encapsulated all that logic for me and each of those",
    "start": "2248030",
    "end": "2253710"
  },
  {
    "text": "handlers calls into that common logic so they have to be very very careful here is when I have two handlers now using",
    "start": "2253710",
    "end": "2261030"
  },
  {
    "text": "the same logic well that does introduce some coupling so just like the fellow book reprimands just because I copied",
    "start": "2261030",
    "end": "2268410"
  },
  {
    "text": "the code once doesn't mean that I do extract that into some common clothes but if I copy it twice that could be a",
    "start": "2268410",
    "end": "2277489"
  },
  {
    "text": "indication to me I need to extract that logic into some kind of common location it's not required but it is a indication",
    "start": "2277489",
    "end": "2285420"
  },
  {
    "text": "that I need to do so okay so that's queries let's now look at commands a",
    "start": "2285420",
    "end": "2290910"
  },
  {
    "start": "2290000",
    "end": "2290000"
  },
  {
    "text": "commands even though the the overall structure looks similar about requests in the response the commands are going",
    "start": "2290910",
    "end": "2297960"
  },
  {
    "text": "to look much different than the queries in terms of the requests and responses the commands going to have a lot more",
    "start": "2297960",
    "end": "2305069"
  },
  {
    "text": "going on in the request types because the commands are going to have to have all the information the user system has",
    "start": "2305069",
    "end": "2311489"
  },
  {
    "text": "entered in order to perform and fulfill that request so in this request where I'm needed to",
    "start": "2311489",
    "end": "2319109"
  },
  {
    "text": "edit this information I need to decide what are the different properties that",
    "start": "2319109",
    "end": "2324599"
  },
  {
    "text": "are going to be on the request but what I'll do is just look at the form on the page and say well I've got these inputs",
    "start": "2324599",
    "end": "2331049"
  },
  {
    "text": "on the screen those just need to be mapped to the request object to be delegated to the handler and if I'm",
    "start": "2331049",
    "end": "2340200"
  },
  {
    "text": "building the task space user interfaces that is user interfaces that have user",
    "start": "2340200",
    "end": "2346380"
  },
  {
    "text": "user experiences that tie back to a specific task the user is trying to perform and not a generic tasks like",
    "start": "2346380",
    "end": "2353519"
  },
  {
    "text": "create thing edit thing but instead very specific to what that user is trying to do then each of these these buttons each",
    "start": "2353519",
    "end": "2360989"
  },
  {
    "text": "of the forms on the screen are going to be defined around each of these Foursquare requests handler and",
    "start": "2360989",
    "end": "2366420"
  },
  {
    "text": "responses so each of these kinds of tasks or actions that use once reformed are going to be separate request",
    "start": "2366420",
    "end": "2373140"
  },
  {
    "text": "handlers types and responses so every",
    "start": "2373140",
    "end": "2378329"
  },
  {
    "text": "single button on the screen becomes its own individual request handler in response so if you're building task",
    "start": "2378329",
    "end": "2386969"
  },
  {
    "text": "based user interfaces and I find that this kind of approach actually fits very well with that kind of user experience",
    "start": "2386969",
    "end": "2392549"
  },
  {
    "text": "strategy now what about the response we saw with queries and that queries",
    "start": "2392549",
    "end": "2399479"
  },
  {
    "start": "2396000",
    "end": "2396000"
  },
  {
    "text": "usually had a very small request object very large response object well if I with commands is that those have been",
    "start": "2399479",
    "end": "2405059"
  },
  {
    "text": "flipped and commands the request object is much larger and the response object is much",
    "start": "2405059",
    "end": "2410609"
  },
  {
    "text": "smaller we could have some requests that have no response there's a ask the",
    "start": "2410609",
    "end": "2416760"
  },
  {
    "text": "system perform the thing but the only thing I need in confirmation is that it didn't throw an exception so I passed",
    "start": "2416760",
    "end": "2422579"
  },
  {
    "text": "the handler does its work as long as it didn't throw an exception then we can safely understand that it was successful",
    "start": "2422579",
    "end": "2429450"
  },
  {
    "text": "a lot of times I will have some kind of response as part of that where I have a",
    "start": "2429450",
    "end": "2436290"
  },
  {
    "text": "request I need to have some kind of feedback from the handler to know not just was you know did not throw an",
    "start": "2436290",
    "end": "2441540"
  },
  {
    "text": "exception but some additional feedback um it could just be as simple as success fail like true or false that the thing",
    "start": "2441540",
    "end": "2448440"
  },
  {
    "text": "was successful not that I don't have exceptions be the thing that tells me it was successful or not I want an actual like boolean value that",
    "start": "2448440",
    "end": "2455160"
  },
  {
    "text": "I can check and the calling logic to be able to perform some alternate path based on failures it could be for some",
    "start": "2455160",
    "end": "2462390"
  },
  {
    "text": "requests that I'm not just returning to true or false but I'm also returning the identifier of the thing that you",
    "start": "2462390",
    "end": "2468390"
  },
  {
    "text": "modified or created so in the case of the creation path I say ok I want you to create this new thing the handler is",
    "start": "2468390",
    "end": "2475530"
  },
  {
    "text": "going to return back the ID of the thing you created so that the calling logic whether it's an API or controller and",
    "start": "2475530",
    "end": "2483030"
  },
  {
    "text": "then issue that redirect to say F you've created the thing and now redirect you to the URL of the new thing that you",
    "start": "2483030",
    "end": "2489450"
  },
  {
    "text": "just created but this can get complex we've had some cases where it's not",
    "start": "2489450",
    "end": "2495089"
  },
  {
    "text": "sufficient just to say you know true/false success but if something failed I need to have the reason why it",
    "start": "2495089",
    "end": "2500730"
  },
  {
    "text": "failed so kind of a kind of a domain validation sort of response and so for those I might have you know the actual",
    "start": "2500730",
    "end": "2506670"
  },
  {
    "text": "payload of the response as part of just one property in that command results but also have the reason why it failed and",
    "start": "2506670",
    "end": "2512790"
  },
  {
    "text": "then I just simple boolean to say was this a successful or not so I can check and the calling go to say what's the",
    "start": "2512790",
    "end": "2518579"
  },
  {
    "text": "successful and the doom some other logic and if it's not successful and I will show and return the failure reason back",
    "start": "2518579",
    "end": "2524400"
  },
  {
    "text": "to the end user about you can't approve this invoice because it's already been cancelled whatever that logic might be I",
    "start": "2524400",
    "end": "2531530"
  },
  {
    "text": "don't care about that um and so when I'm building out these applications my system we start to notice how",
    "start": "2531530",
    "end": "2538460"
  },
  {
    "text": "of a natural coupling between some requests in some response so in a web",
    "start": "2538460",
    "end": "2544430"
  },
  {
    "text": "application when I first want to show a form on the screen I often need to make a request to the system to stay give me",
    "start": "2544430",
    "end": "2550310"
  },
  {
    "text": "the information for this form I'm going to show on the screen so in a server-side rendering application you'd have an initial gift that is to show the",
    "start": "2550310",
    "end": "2557270"
  },
  {
    "text": "form and then you click the button and that's the post to perform the response and so I can I can model that explicitly",
    "start": "2557270",
    "end": "2562940"
  },
  {
    "text": "to say the query is a request that returns the command which is just a prefilled information and then if I the",
    "start": "2562940",
    "end": "2569210"
  },
  {
    "text": "command has then the user modified information that they can then post back up to perform that action now finally",
    "start": "2569210",
    "end": "2578750"
  },
  {
    "start": "2578000",
    "end": "2578000"
  },
  {
    "text": "looks like at the command handlers themselves now the way I catch my team's",
    "start": "2578750",
    "end": "2584150"
  },
  {
    "text": "to go through this the CQRS journey is don't try to performance or premature or",
    "start": "2584150",
    "end": "2590210"
  },
  {
    "text": "upfront optimization or design of these overall handlers if we can build up our",
    "start": "2590210",
    "end": "2597320"
  },
  {
    "text": "refactoring techniques and and chops then we should be able to take those",
    "start": "2597320",
    "end": "2602930"
  },
  {
    "text": "handlers and refactor them to what we want them to be based on the actual logic we see in them so the first thing",
    "start": "2602930",
    "end": "2608599"
  },
  {
    "text": "we want to do is just make it as dumb as possible so just make it the dumbest most procedural code just hard code",
    "start": "2608599",
    "end": "2614540"
  },
  {
    "start": "2609000",
    "end": "2609000"
  },
  {
    "text": "everything just procedural as much as possible in the fowler enterprise",
    "start": "2614540",
    "end": "2620540"
  },
  {
    "text": "application architecture book this this kind of code isn't it as a transaction",
    "start": "2620540",
    "end": "2626599"
  },
  {
    "text": "script rabbit transaction that's just procedural code to just perform all the steps in the in the action and be done",
    "start": "2626599",
    "end": "2631940"
  },
  {
    "text": "with it so I tell my team just start with that start with them the most the dumbest code it could possibly work and",
    "start": "2631940",
    "end": "2637300"
  },
  {
    "text": "then we can take a step back and say it what does it actually do I want think",
    "start": "2637300",
    "end": "2642320"
  },
  {
    "text": "that is different with our systems probably a lot of other folks as we we tend not to have any abstractions around",
    "start": "2642320",
    "end": "2648349"
  },
  {
    "text": "any of the dependencies we can use this is this all basic that came out of when",
    "start": "2648349",
    "end": "2653630"
  },
  {
    "text": "I first D factor the application into everything in the controller hard-coded we decided that we'd only introduce any",
    "start": "2653630",
    "end": "2659570"
  },
  {
    "text": "kind of encapsulations or abstractions on top of our dependencies when we felt pain so this is same thing I tell my",
    "start": "2659570",
    "end": "2665480"
  },
  {
    "text": "teams is only introduce any of the only introduced any kind a pattern or",
    "start": "2665480",
    "end": "2672540"
  },
  {
    "text": "abstraction or encapsulation when the code itself or the tests themselves demonstrate the need through some kind",
    "start": "2672540",
    "end": "2679450"
  },
  {
    "text": "of pain point so coat smells pain points those are the things that drive us",
    "start": "2679450",
    "end": "2684580"
  },
  {
    "text": "towards any kind of patterns we want to use in our system now command handlers",
    "start": "2684580",
    "end": "2689790"
  },
  {
    "text": "unlike wear handlers can get very complicated so we need to make sure we",
    "start": "2689790",
    "end": "2695560"
  },
  {
    "text": "don't panic this is natural in our systems and applications what we need to do is rely on our old friend red green",
    "start": "2695560",
    "end": "2703300"
  },
  {
    "text": "refactor from our TDD stuff I don't I don't do a lot of TDD days these days I",
    "start": "2703300",
    "end": "2708520"
  },
  {
    "text": "do a whole lot of automated testing in terms of like what happens when it kind of depends on what I'm doing at the time",
    "start": "2708520",
    "end": "2714310"
  },
  {
    "text": "but the overall steps are this are the same and that I want to make sure that I start with the failing tests I make it",
    "start": "2714310",
    "end": "2721000"
  },
  {
    "text": "pass and then I take that step back the step that most people skip and look at refactoring the actual business logic",
    "start": "2721000",
    "end": "2726880"
  },
  {
    "text": "behind the scenes so this is the same thing a guy my Teamsters as you're building an application make sure you're",
    "start": "2726880",
    "end": "2732160"
  },
  {
    "text": "taking it step back as you build each set of thing in the system step back and look at the code itself see if it's exhibiting any code smells",
    "start": "2732160",
    "end": "2738670"
  },
  {
    "text": "and then refactor as necessary so what",
    "start": "2738670",
    "end": "2744610"
  },
  {
    "text": "kind of things might be fine and these handlers well the two big kind of refactoring things the factoring book",
    "start": "2744610",
    "end": "2751000"
  },
  {
    "text": "things behind our large class and long method basically go together because we",
    "start": "2751000",
    "end": "2756640"
  },
  {
    "text": "have a single handler class our single single request handler class with one method so if the classes are just",
    "start": "2756640",
    "end": "2762370"
  },
  {
    "text": "because the single method is very large and the way we can address those codes nouns is very well documented in the",
    "start": "2762370",
    "end": "2769840"
  },
  {
    "text": "refactoring literature there's a set of refactorings we can apply to this code to get it cleaner and include things",
    "start": "2769840",
    "end": "2775630"
  },
  {
    "text": "like extracting a class extracting a subclass I don't do that one very much usually it's distracting class track",
    "start": "2775630",
    "end": "2782350"
  },
  {
    "text": "interface replace method with method object compose method is the one that I",
    "start": "2782350",
    "end": "2787510"
  },
  {
    "text": "use a whole lot compose method is taking a long or large complex method and",
    "start": "2787510",
    "end": "2792930"
  },
  {
    "text": "breaking going to cook the complexity down into a similar level of encapsulation or abstraction that when",
    "start": "2792930",
    "end": "2799930"
  },
  {
    "text": "you read the method becomes much shorter and each statement is another method that's being called it does well",
    "start": "2799930",
    "end": "2805600"
  },
  {
    "text": "overall step in the process so that would I use a whole lot which is basically just a long method I extract",
    "start": "2805600",
    "end": "2811330"
  },
  {
    "text": "methods for all the different steps usually my developers have added code comments and what I do is just replace",
    "start": "2811330",
    "end": "2816970"
  },
  {
    "text": "those code comments with a method that actually does the work um often times I",
    "start": "2816970",
    "end": "2822460"
  },
  {
    "text": "will extract methods outs and I find then that met that is really dealing with logic of some other object and so",
    "start": "2822460",
    "end": "2829570"
  },
  {
    "text": "after I've extracted that method I look in the medicine it's this method really dealing with a lot with a lot of stuff",
    "start": "2829570",
    "end": "2835150"
  },
  {
    "text": "and someone else some other object and so for factory there's then to move that method over to the other object to have",
    "start": "2835150",
    "end": "2842470"
  },
  {
    "text": "that logic word works dealing with the rest of the information and that system of course extract method is just another",
    "start": "2842470",
    "end": "2849190"
  },
  {
    "text": "kind of thing I do with that compose method as well and this deals with logic",
    "start": "2849190",
    "end": "2854440"
  },
  {
    "text": "on one individual handler but sometimes the the logic of my handler becomes a",
    "start": "2854440",
    "end": "2860650"
  },
  {
    "text": "bit more complicated than just simply extracting and moving methods isn't going to deal with the complexity I see",
    "start": "2860650",
    "end": "2866470"
  },
  {
    "text": "in that Handler and so my second favorite refactoring book and help deal with those code smells and this is",
    "start": "2866470",
    "end": "2872680"
  },
  {
    "start": "2872000",
    "end": "2872000"
  },
  {
    "text": "actually my favorite patterns book I know people don't end like design patterns these days but we use them all",
    "start": "2872680",
    "end": "2877780"
  },
  {
    "text": "the time maybe you just don't call them by their name anymore and so this this patterns book there I love it so much",
    "start": "2877780",
    "end": "2883960"
  },
  {
    "text": "because instead of being just like a catalog of like here are the twelve patterns that we've identified and it's",
    "start": "2883960",
    "end": "2890890"
  },
  {
    "text": "up to you to figure out when you should use them instead this book talks about code smells and using code smells as the",
    "start": "2890890",
    "end": "2896890"
  },
  {
    "text": "way to drive into refactoring patterns I'm driving to design patterns and so",
    "start": "2896890",
    "end": "2903490"
  },
  {
    "text": "some of the patterns that I tuned to see the code smell take them to see things like combinatorial explosion I bunch of",
    "start": "2903490",
    "end": "2909010"
  },
  {
    "text": "ifs our switch statements I have feature in be like I have one object using stuff from another objects",
    "start": "2909010",
    "end": "2915490"
  },
  {
    "text": "are duplicated code between my overall overall handlers so let's look at",
    "start": "2915490",
    "end": "2920980"
  },
  {
    "text": "example of this so I've got example here where I've got a handler that's got way",
    "start": "2920980",
    "end": "2927700"
  },
  {
    "text": "too much going on in fact you could see again I don't have the closing brace we get some closing braces like down here",
    "start": "2927700",
    "end": "2933340"
  },
  {
    "text": "somewhere on the floor I guess and it's just doing too much logic and so I can look at this and say well what is the",
    "start": "2933340",
    "end": "2939100"
  },
  {
    "text": "work being done here and most of my most of my request handlers have like I need to",
    "start": "2939100",
    "end": "2944590"
  },
  {
    "text": "get the thing either database that have performed the business logic and then I saved the thing and they get the thing",
    "start": "2944590",
    "end": "2951550"
  },
  {
    "text": "and the save the thing those are the uninteresting parts the interesting part is all the stuff in the middle so it's",
    "start": "2951550",
    "end": "2956740"
  },
  {
    "text": "usually that middle part of the handler that that's the stuff I really want to I want to I want to refactor it and and be",
    "start": "2956740",
    "end": "2963460"
  },
  {
    "text": "able to encapsulate it somewhere else so I look at all this code in structures down here somewhere that's the stuff",
    "start": "2963460",
    "end": "2969970"
  },
  {
    "text": "when I want to first typically first extract a method outs and that tells me like what information it's using to",
    "start": "2969970",
    "end": "2975670"
  },
  {
    "text": "perform its work and then I will push that behavior somewhere else so that that that logic and behavior can",
    "start": "2975670",
    "end": "2982390"
  },
  {
    "text": "be tested independently of this overall set of business logic and if I'm doing",
    "start": "2982390",
    "end": "2988770"
  },
  {
    "start": "2988000",
    "end": "2988000"
  },
  {
    "text": "behavioral models and domain driven design the place I typically push that behavior down into is into my domain so",
    "start": "2988770",
    "end": "2996310"
  },
  {
    "text": "now I have the data access code is in my request handler but the business logic handling has been delegated down into my",
    "start": "2996310",
    "end": "3003450"
  },
  {
    "text": "overall domain so now all that logic that was extracted onto method I now move that method over to the domain",
    "start": "3003450",
    "end": "3009090"
  },
  {
    "text": "object now domain object has the the data coming in performing the business",
    "start": "3009090",
    "end": "3014490"
  },
  {
    "text": "logic to do its updates and then when that's done I can now save the changes for that for that object whatever I did",
    "start": "3014490",
    "end": "3021390"
  },
  {
    "text": "to it now that's that handle method has all the information it needs to be able",
    "start": "3021390",
    "end": "3027840"
  },
  {
    "text": "to perform its work so it may include the request object but it may include additional information to perform its work but it is still encapsulated from",
    "start": "3027840",
    "end": "3035490"
  },
  {
    "text": "other kind of handle methods and said that domain object where I am still dealing with that one individual request and not other things going on",
    "start": "3035490",
    "end": "3043130"
  },
  {
    "text": "yep all the logic being pushed down into there now there are some times where",
    "start": "3043130",
    "end": "3050190"
  },
  {
    "text": "it's not feasible to push it down to the domain objects so in that case we often",
    "start": "3050190",
    "end": "3055860"
  },
  {
    "text": "do have a kind of a domain layer it includes all of our domain objects and",
    "start": "3055860",
    "end": "3061290"
  },
  {
    "text": "domain services be able to coordinate requests between coordinating activities",
    "start": "3061290",
    "end": "3066360"
  },
  {
    "text": "between different models so in those domain services I could have roaming",
    "start": "3066360",
    "end": "3071490"
  },
  {
    "text": "like a more a more complex invoice approval set illogic so I might have a invoice approver service that",
    "start": "3071490",
    "end": "3078750"
  },
  {
    "text": "handles the meat of the business logic but the general idea is I just used kind of standard refactoring techniques to",
    "start": "3078750",
    "end": "3084750"
  },
  {
    "text": "take the the large set of logic inside my handler and move that over to other objects to be able to encapsulate and",
    "start": "3084750",
    "end": "3091170"
  },
  {
    "text": "test independently now some other things have to worry about kind of",
    "start": "3091170",
    "end": "3097589"
  },
  {
    "text": "cross-cutting concerns include something like validation now validation is",
    "start": "3097589",
    "end": "3102779"
  },
  {
    "text": "something you have to still deal with on every single request so how do I deal with validation in this kind of",
    "start": "3102779",
    "end": "3107880"
  },
  {
    "text": "application architecture well I didn't to take a step back and say there's not",
    "start": "3107880",
    "end": "3112950"
  },
  {
    "text": "just kind of a single kind of validation that to deal with in my system and there's actually kind of multiple levels",
    "start": "3112950",
    "end": "3119190"
  },
  {
    "text": "or layers of validation that hatch perform so that deals with different validation scopes I have the the initial",
    "start": "3119190",
    "end": "3126660"
  },
  {
    "start": "3123000",
    "end": "3123000"
  },
  {
    "text": "validation of the request validation I can just look at the request itself and nothing else to be able to say is this",
    "start": "3126660",
    "end": "3134400"
  },
  {
    "text": "request valid to be submitted you can kind of think of this as if you looking on a paper form that what are all the",
    "start": "3134400",
    "end": "3141059"
  },
  {
    "text": "things you have to fill in to just submit the form in the first place so what about the required fields and kind of just standalone data validation that",
    "start": "3141059",
    "end": "3148319"
  },
  {
    "text": "just ensures that you know like a captain said on your keyboard that you've actually fit you filled out all the data appropriately on that form just",
    "start": "3148319",
    "end": "3155520"
  },
  {
    "text": "by itself now once I've performed that request level validation and I typically",
    "start": "3155520",
    "end": "3160589"
  },
  {
    "text": "have some requests that have to look at other things to be able to validate that request and so that validation it's more",
    "start": "3160589",
    "end": "3167549"
  },
  {
    "text": "command level validation so you can imagine like if I have a page that has to approve an invoice and we have a a",
    "start": "3167549",
    "end": "3174359"
  },
  {
    "text": "business rule that says you can't approve canceled invoices well in the request validation I don't have that",
    "start": "3174359",
    "end": "3180930"
  },
  {
    "text": "original status on that request that status is further down in my domain so I",
    "start": "3180930",
    "end": "3186720"
  },
  {
    "text": "have to go into my domain model or to the database to say well what is the current status well the status is",
    "start": "3186720",
    "end": "3191910"
  },
  {
    "text": "cancelled then I need to invalidate that request and say you can't do this now",
    "start": "3191910",
    "end": "3197250"
  },
  {
    "text": "request validation can be very simple I typically Center request validation on those requests themselves and pick some",
    "start": "3197250",
    "end": "3204270"
  },
  {
    "start": "3198000",
    "end": "3198000"
  },
  {
    "text": "kind of framework to be able to to do that kind of validation so in this",
    "start": "3204270",
    "end": "3209360"
  },
  {
    "text": "case I'm using full of validation because fluent validation has this generic argument that fits very well",
    "start": "3209360",
    "end": "3214940"
  },
  {
    "text": "into my request models but a lot of times I just stick with data annotations validation I just decorates my request object with",
    "start": "3214940",
    "end": "3221720"
  },
  {
    "text": "data annotation saying this is required this should be a date future this should be great in that field as long as they",
    "start": "3221720",
    "end": "3227750"
  },
  {
    "text": "can fit into data annotations then I know it's it's good for request",
    "start": "3227750",
    "end": "3232760"
  },
  {
    "text": "validation but as soon as I have to step outside of that request that's kind of when you notice data annotations validation falls down or any kind of",
    "start": "3232760",
    "end": "3239720"
  },
  {
    "text": "like attribute-based validation so in that case I start to look at domain validation so here's an example one this",
    "start": "3239720",
    "end": "3246980"
  },
  {
    "text": "is a method on my domain model my domain models not just performing the business logic but it's also doing the domain",
    "start": "3246980",
    "end": "3253550"
  },
  {
    "text": "validation or the command validation of that request in this case the approved method isn't just performing the work of",
    "start": "3253550",
    "end": "3259700"
  },
  {
    "text": "approving the invoice instead it's also looking the the status of that invoice to say whether or not you can do this",
    "start": "3259700",
    "end": "3265280"
  },
  {
    "text": "thing or not another result that's returning is not just true or false or void it's actually returning a command",
    "start": "3265280",
    "end": "3271490"
  },
  {
    "text": "result object that says was it successful or I want to fail this this command and here's the reason why like",
    "start": "3271490",
    "end": "3277340"
  },
  {
    "text": "can that approve a rejected order now this is definitely more complicated than",
    "start": "3277340",
    "end": "3282800"
  },
  {
    "text": "just like request validation with just putting attributes on my request so I only do this kind of structure this kind",
    "start": "3282800",
    "end": "3290180"
  },
  {
    "text": "of validation would it make sense in projects I basically wait until the validation becomes too complicated or",
    "start": "3290180",
    "end": "3296360"
  },
  {
    "text": "becomes too much for the request handler to do and they start to move towards this kind of pattern now the last thing",
    "start": "3296360",
    "end": "3305330"
  },
  {
    "text": "we want to look at is how do we build out those responses what do those things need to look like and if I'm looking at",
    "start": "3305330",
    "end": "3312920"
  },
  {
    "text": "these these responses these these really represent representation I'm going to be showing to the end-user those responses",
    "start": "3312920",
    "end": "3319760"
  },
  {
    "text": "in to be built based on the representation I'm going to be showing at the screen now make controllers if",
    "start": "3319760",
    "end": "3325130"
  },
  {
    "text": "I'm going a kind of a API based sort of approach my controllers start to become",
    "start": "3325130",
    "end": "3330140"
  },
  {
    "text": "very very small and my controllers are really just there to perform routing and nothing else if you're using a v-neck or",
    "start": "3330140",
    "end": "3337970"
  },
  {
    "text": "you can use razor pages which actually fit well into this kind of structure and what all of the different pieces need to",
    "start": "3337970",
    "end": "3344660"
  },
  {
    "start": "3341000",
    "end": "3341000"
  },
  {
    "text": "perform that operation can be encapsulated inside that razor page or right alongside it so when I go to the",
    "start": "3344660",
    "end": "3351230"
  },
  {
    "text": "code I'm application I can find the razor page as well as everything needed to fulfill that request directly",
    "start": "3351230",
    "end": "3357230"
  },
  {
    "text": "alongside it broken out into individual classes for those individual responsibilities the data that I didn't",
    "start": "3357230",
    "end": "3363650"
  },
  {
    "text": "show on the screen becomes that model then I return back to the UI now what",
    "start": "3363650",
    "end": "3369080"
  },
  {
    "text": "I'm a pee eyes are going to be a little bit different because often times Web API show they have different requests",
    "start": "3369080",
    "end": "3374840"
  },
  {
    "text": "that come in two different handlers but often times I'm dealing with some kind of single page application or just like",
    "start": "3374840",
    "end": "3380540"
  },
  {
    "text": "a react to UI and that's I perform a request but it doesn't go to a different screen the extra stays on that one",
    "start": "3380540",
    "end": "3386570"
  },
  {
    "text": "screen and usually what an update of that information I show on that screen so this is one of the cases where I",
    "start": "3386570",
    "end": "3392120"
  },
  {
    "text": "actually do share a response model because those response models are really",
    "start": "3392120",
    "end": "3397220"
  },
  {
    "text": "there to drive the the end user experience and so that end user",
    "start": "3397220",
    "end": "3402650"
  },
  {
    "text": "experience is shared therefore the response needs to share as well now",
    "start": "3402650",
    "end": "3410630"
  },
  {
    "text": "there are going to be other cases of which I have cross-cutting concerns across kind of every single request my",
    "start": "3410630",
    "end": "3415730"
  },
  {
    "text": "ami system and if I have duplication that's not specific to one individual",
    "start": "3415730",
    "end": "3421820"
  },
  {
    "text": "request but really to all overall requests then there are other patterns",
    "start": "3421820",
    "end": "3426980"
  },
  {
    "text": "to be able to wrap my overall Handler with additional behavior to have that",
    "start": "3426980",
    "end": "3432110"
  },
  {
    "text": "duplication removed from all of my requests and so this is really just a decorator I can now direct all of my",
    "start": "3432110",
    "end": "3439760"
  },
  {
    "text": "handlers with some kind of behavior in this case I called a pipeline behaviour because I sold a name from someone else but these are just decorators and these",
    "start": "3439760",
    "end": "3446750"
  },
  {
    "text": "decorators can stack so that I have similar to like action filters I have a",
    "start": "3446750",
    "end": "3454420"
  },
  {
    "text": "behavior around all of the requests and responses in my system that it can perform some action outside of all of my",
    "start": "3454420",
    "end": "3461840"
  },
  {
    "text": "requests going on so transactions are good example this what if I want every single request on",
    "start": "3461840",
    "end": "3468320"
  },
  {
    "start": "3466000",
    "end": "3466000"
  },
  {
    "text": "my system to have a transaction around it when every single command in my system to have a transaction around it",
    "start": "3468320",
    "end": "3474289"
  },
  {
    "text": "well this is really easy to do with a with a decorator and the form of a pipeline behavior so in this decorator I",
    "start": "3474289",
    "end": "3479949"
  },
  {
    "text": "perform the transaction I begin the transaction I await the next step in the process",
    "start": "3479949",
    "end": "3486349"
  },
  {
    "text": "which could be handler or it could be another could be another decorator behavior and then I commit the",
    "start": "3486349",
    "end": "3491929"
  },
  {
    "text": "transaction and return the response something goes wrong they never rollback the transaction some cases I may have to",
    "start": "3491929",
    "end": "3500209"
  },
  {
    "text": "implement a unit of work so it's a similar kind of process where I await the next thing and then I complete the",
    "start": "3500209",
    "end": "3505729"
  },
  {
    "text": "unit of work after that next thing has completed and then return back the response so I've had to do this in cases",
    "start": "3505729",
    "end": "3512089"
  },
  {
    "text": "where the ORM you I'm using doesn't implement the unit of work pattern then I can do this to make sure that all my",
    "start": "3512089",
    "end": "3517880"
  },
  {
    "text": "handlers don't have to do this unit of work handling itself it's just for them already in this decorator I can do they",
    "start": "3517880",
    "end": "3525169"
  },
  {
    "text": "like and of things like concurrency and retries so in this case I'm dealing with",
    "start": "3525169",
    "end": "3530900"
  },
  {
    "start": "3526000",
    "end": "3526000"
  },
  {
    "text": "cosmos TV which can return have a concurrency exception so if I receive a",
    "start": "3530900",
    "end": "3537439"
  },
  {
    "text": "response back that says there's some kind of concurrency problem then I can just transparent lis retry that",
    "start": "3537439",
    "end": "3542989"
  },
  {
    "text": "operation perform the operation again and then try to add some end number of times before I go ahead and fail things",
    "start": "3542989",
    "end": "3550279"
  },
  {
    "text": "like logging - all this sort of kind of common cross-cutting concerns are things you have to worry about I want to have",
    "start": "3550279",
    "end": "3556369"
  },
  {
    "text": "multiple requests and multiple handlers in my system registering these I have to do explicitly because I want to have a",
    "start": "3556369",
    "end": "3562459"
  },
  {
    "text": "specific order with this so I want to make sure that I you know I register in the order that I want them to actually",
    "start": "3562459",
    "end": "3568309"
  },
  {
    "text": "execute and the last thing I thought on quickly is testing these systems I feel",
    "start": "3568309",
    "end": "3575029"
  },
  {
    "start": "3575000",
    "end": "3575000"
  },
  {
    "text": "like at testing in this overall kind of flow it actually Maps very well to the different parts of tests which are",
    "start": "3575029",
    "end": "3581419"
  },
  {
    "text": "arranged act and assert the arrange is really setting up the requests and data needed for the handler act is calling in",
    "start": "3581419",
    "end": "3588169"
  },
  {
    "text": "to the handler and then assert is then asserting on that response with this kind of approach though I do make sure",
    "start": "3588169",
    "end": "3594289"
  },
  {
    "text": "that I've hurt my reproduce reality as much as possible so I will kind of I will execute the same startup stuff that",
    "start": "3594289",
    "end": "3601429"
  },
  {
    "text": "my application does ensure that when I call to the handler and matches as much as possible as what production does",
    "start": "3601429",
    "end": "3608180"
  },
  {
    "text": "individual requests will also map exactly to how the overall application actually performs requests so I look at",
    "start": "3608180",
    "end": "3614089"
  },
  {
    "text": "the code that that's doing and say let's go ahead and perform this application logic as well and when I need a set up",
    "start": "3614089",
    "end": "3619250"
  },
  {
    "text": "data setting up data in a real system is performed in transactions so I also make sure when I set up data and my tests",
    "start": "3619250",
    "end": "3625280"
  },
  {
    "text": "it's done as part of a transaction as well when I send request down to my mediator that's also done as part of a",
    "start": "3625280",
    "end": "3632240"
  },
  {
    "text": "overall scope requests and transaction let make sure my test would I want to execute a healer it's actually",
    "start": "3632240",
    "end": "3637819"
  },
  {
    "text": "performing overall scope transaction and in my tests themselves they start to",
    "start": "3637819",
    "end": "3644329"
  },
  {
    "text": "look very much like kind of an acceptance test where I'm sending requests down I'm testing things based",
    "start": "3644329",
    "end": "3651050"
  },
  {
    "text": "on the results coming back out slice a new query down and certain the results I do make sure I try to test through the",
    "start": "3651050",
    "end": "3657079"
  },
  {
    "text": "front door that is I will send the same request down to setup data as the user interface what you do so the same thing",
    "start": "3657079",
    "end": "3663109"
  },
  {
    "text": "requests calling the same handlers the UI does to ensure that the test setup words the data setup is very similar to",
    "start": "3663109",
    "end": "3669440"
  },
  {
    "text": "my application sometimes it doesn't work so I'll set up data directly when necessary but in my my tests themselves",
    "start": "3669440",
    "end": "3676549"
  },
  {
    "text": "it's complete round-trips throughout every single step in the process it match as much as possible how production",
    "start": "3676549",
    "end": "3682460"
  },
  {
    "text": "actually works but instead of going through like HTTP or selenium something like that instead it's working one level",
    "start": "3682460",
    "end": "3687950"
  },
  {
    "text": "down through my request and handlers so what does it look like in terms of kind",
    "start": "3687950",
    "end": "3693680"
  },
  {
    "text": "of the test pyramid we wind up having our integration tests dealing with the overall handler and behavior pipeline",
    "start": "3693680",
    "end": "3700579"
  },
  {
    "text": "but then unit tests are going to be testing directly that rich domain model that I've been root factoring towards as",
    "start": "3700579",
    "end": "3706520"
  },
  {
    "text": "I build out each of these individual handlers don't unit tests handlers a unit tests the naturally isolated domain",
    "start": "3706520",
    "end": "3712220"
  },
  {
    "text": "model so you takeaways here vertical slices in this approach make it very",
    "start": "3712220",
    "end": "3718609"
  },
  {
    "text": "easy to add change and delete code we want to make sure we don't skip that",
    "start": "3718609",
    "end": "3723799"
  },
  {
    "text": "refactor step we never should be skipping it but especially with this approach because things just going to handler first we want to make sure that",
    "start": "3723799",
    "end": "3730040"
  },
  {
    "text": "we take that step back look at the code smiles and perform that refactoring if we're doing domain driven design those",
    "start": "3730040",
    "end": "3735770"
  },
  {
    "text": "refactoring is going to be with a specific direction in mind which is to push the behavior down into your domain and then finally want",
    "start": "3735770",
    "end": "3742070"
  },
  {
    "text": "make sure that we're integration testing hammers over unit test domain so that",
    "start": "3742070",
    "end": "3747830"
  },
  {
    "text": "was vertical slice architectures say yes to celery and say no to the sticky layered architectures this is on a",
    "start": "3747830",
    "end": "3755990"
  },
  {
    "text": "github I could have a calm sauce presentations there's a bit late to an actual code example wise thank you very",
    "start": "3755990",
    "end": "3761900"
  },
  {
    "text": "much and hope you'll have a great rest of conference for me it's time for",
    "start": "3761900",
    "end": "3766869"
  }
]