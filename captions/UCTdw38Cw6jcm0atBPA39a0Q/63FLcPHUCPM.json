[
  {
    "text": "foreign talk about kubernetes I'm trying not to",
    "start": "1319",
    "end": "7680"
  },
  {
    "text": "spoil you desserts with yaml just yet um so uh I want to show you some things",
    "start": "7680",
    "end": "14400"
  },
  {
    "text": "that on youtube.net but also I want to explain some kubernetes to you the reason is hi I'm Martin and I've",
    "start": "14400",
    "end": "21240"
  },
  {
    "text": "recently worked with kubernetes so I work for a consultancy in Vienna the consultmentation is based in Finland",
    "start": "21240",
    "end": "27960"
  },
  {
    "text": "called tier to every but over the last years I've been working more and more with kubernetes had to learn a lot of",
    "start": "27960",
    "end": "33120"
  },
  {
    "text": "things some things the hard way and I want to share a bit of that with you so",
    "start": "33120",
    "end": "38700"
  },
  {
    "text": "to give you an easier way into kubernetes so what I'll be doing is giving you some overview over kubernetes",
    "start": "38700",
    "end": "45660"
  },
  {
    "text": "so maybe if you have not worked with it before you understand some of the Core Concepts and we will be deploying things to a",
    "start": "45660",
    "end": "53460"
  },
  {
    "text": "live cluster so hope the demos will work so we'll be deploying a.net app later",
    "start": "53460",
    "end": "58699"
  },
  {
    "text": "and spring it up in a real cluster also I want to talk a bit about how you",
    "start": "58699",
    "end": "64559"
  },
  {
    "text": "can package your final applications in our case we ship some Helm charts I'll explain that later",
    "start": "64559",
    "end": "70619"
  },
  {
    "text": "to customers so we package things that customers can install on their own clusters",
    "start": "70619",
    "end": "76799"
  },
  {
    "text": "um why we've been doing that so we've seen a few different needs so some customers come to us and say yeah we're",
    "start": "76799",
    "end": "82920"
  },
  {
    "text": "using kubernetes if you want to write software for us um if you if you want to be paid you",
    "start": "82920",
    "end": "89520"
  },
  {
    "text": "need to ship it in a way that's able to run in kubernetes um others want to move to the cloud",
    "start": "89520",
    "end": "97200"
  },
  {
    "text": "but don't want to avoid or want to avoid vendor locking so in at least the german-speaking area",
    "start": "97200",
    "end": "104579"
  },
  {
    "text": "customers are still a bit afraid of the cloud either for legal reasons for",
    "start": "104579",
    "end": "110220"
  },
  {
    "text": "political reasons whatever and so we also see a lot of mixed with with hybrid environments where people",
    "start": "110220",
    "end": "116579"
  },
  {
    "text": "want to run things on premises or in the cloud and want to use kind of basically",
    "start": "116579",
    "end": "121740"
  },
  {
    "text": "the same way of packaging duplication that works in both instances and kubernetes really helps here",
    "start": "121740",
    "end": "128580"
  },
  {
    "text": "um also we've worked with a companies that had run their factories",
    "start": "128580",
    "end": "133980"
  },
  {
    "text": "that produce goods and they have on-premise kubernetes classes as well",
    "start": "133980",
    "end": "139560"
  },
  {
    "text": "so um we've been working with them and",
    "start": "139560",
    "end": "145140"
  },
  {
    "text": "we had a look at okay we need to do something with kubernetes what are the tools that are available to us",
    "start": "145140",
    "end": "150900"
  },
  {
    "text": "and then once you look up the chart it's really hard to to like navigate all the different concepts and components so",
    "start": "150900",
    "end": "158700"
  },
  {
    "text": "I hope it can give you an easy introduction if you're new to that one thing is the terminology so",
    "start": "158700",
    "end": "164280"
  },
  {
    "text": "everything is based around shipping things so we have very nautical terminology",
    "start": "164280",
    "end": "169739"
  },
  {
    "text": "um those of us who have been to the boat yesterday may have used some of them or seen some of them so we're shipping",
    "start": "169739",
    "end": "175500"
  },
  {
    "text": "containers from docs with docker and also the name kubernetes is from the Greek word",
    "start": "175500",
    "end": "182780"
  },
  {
    "text": "kubernetes which just means pilot or hampsman and all the other tools you will see",
    "start": "182780",
    "end": "188459"
  },
  {
    "text": "will usually have some reference to some knowledgeable terminology",
    "start": "188459",
    "end": "193800"
  },
  {
    "text": "so when we think of shipping and application or making sure that an application runs in production",
    "start": "193800",
    "end": "199560"
  },
  {
    "text": "we usually have some different components involved in there we usually have some operating system candle we",
    "start": "199560",
    "end": "205680"
  },
  {
    "text": "have some operating system around the kernel in Windows that's usually kind of intertwined with Linux it's a",
    "start": "205680",
    "end": "211980"
  },
  {
    "text": "bit more open we have some form of application servers so for example if we're developing an",
    "start": "211980",
    "end": "217260"
  },
  {
    "text": "angular application that might just be some nginx web server Apache web server whatever with our stuff on the top so",
    "start": "217260",
    "end": "225120"
  },
  {
    "text": "usually we write the stuff on the top and then figure out how to deploy the thing into production and the first time we do this we usually",
    "start": "225120",
    "end": "231540"
  },
  {
    "text": "create an installation document and that is hopefully up to date two years later as well",
    "start": "231540",
    "end": "237180"
  },
  {
    "text": "yeah I hate writing documentation so how does this look when you move to Containers so in containers we basically",
    "start": "237180",
    "end": "244319"
  },
  {
    "text": "package everything that is not the kernel and pack it into one shippable unit",
    "start": "244319",
    "end": "250019"
  },
  {
    "text": "and we only need to take care about that so we don't no longer need to explain to",
    "start": "250019",
    "end": "255739"
  },
  {
    "text": "operations people how nginx needs to be configured where these files need to be placed it's already pre-built",
    "start": "255739",
    "end": "263220"
  },
  {
    "text": "so the installation document goes away yeah I have to write less documentation I like that but actually I do write",
    "start": "263220",
    "end": "269639"
  },
  {
    "text": "documentation it's just it has become code it has become the instruction on how to actually build that container",
    "start": "269639",
    "end": "277020"
  },
  {
    "text": "so instead of some PDF with some prose words we can just write code",
    "start": "277020",
    "end": "283259"
  },
  {
    "text": "all the steps that are needed to generate the container that is then able to run",
    "start": "283259",
    "end": "289560"
  },
  {
    "text": "and the way this works is we basically share",
    "start": "289560",
    "end": "295080"
  },
  {
    "text": "the operating system so traditionally I don't think anyone still does that but actually I once worked with Public",
    "start": "295080",
    "end": "301979"
  },
  {
    "text": "Safety infrastructure but it had to be done just work on Bare Bones we usually use some hypervisors some virtual",
    "start": "301979",
    "end": "308160"
  },
  {
    "text": "machines but we no longer need to manage the virtual machines we just need to manage containers that run on some shared",
    "start": "308160",
    "end": "314220"
  },
  {
    "text": "operating system by the way if you're designing such systems a container is a very good isolation boundary it is not a",
    "start": "314220",
    "end": "321540"
  },
  {
    "text": "security boundary so you're sharing the kernel you're sharing resources if you",
    "start": "321540",
    "end": "326759"
  },
  {
    "text": "need to design an architecture do not consider container boundaries as security boundaries that's also why you",
    "start": "326759",
    "end": "333840"
  },
  {
    "text": "will see for example with Windows containers options like hyper-v isolation for containers where they",
    "start": "333840",
    "end": "340080"
  },
  {
    "text": "actually spin up a new candle instance just for your container",
    "start": "340080",
    "end": "345139"
  },
  {
    "text": "but of course you're writing usually more complex applications right if",
    "start": "346440",
    "end": "351979"
  },
  {
    "text": "we spent two years developing a large system with 20 30 40 people so whatever those implications become quite complex",
    "start": "352020",
    "end": "358139"
  },
  {
    "text": "over time and you need to figure things out like how do you communicate between containers how do you do I do the",
    "start": "358139",
    "end": "364080"
  },
  {
    "text": "configuration management it's usually more than one instance it's running I'd like to",
    "start": "364080",
    "end": "369660"
  },
  {
    "text": "we did have to work in kind of a resilient way run across multiple hosts",
    "start": "369660",
    "end": "374759"
  },
  {
    "text": "then I need to do a load balancing I need to figure out how to configure my different services and so on usually I",
    "start": "374759",
    "end": "382020"
  },
  {
    "text": "also want to have zero downtime deployments so deploying an update and everything should still be running",
    "start": "382020",
    "end": "388319"
  },
  {
    "text": "traditionally there might be some problems with that especially when you're dealing with Legacy software that you need to lift",
    "start": "388319",
    "end": "395039"
  },
  {
    "text": "and shift into kubernetes but at least you get some tools with that that's basically called orchestration",
    "start": "395039",
    "end": "402259"
  },
  {
    "text": "there are very few other options but kubernetes just came along and killed everyone else so the momentum behind",
    "start": "402259",
    "end": "408539"
  },
  {
    "text": "kubernetes is just enormous so it's more and more companies publish how to",
    "start": "408539",
    "end": "413880"
  },
  {
    "text": "use it it's more even seen in public companies that used",
    "start": "413880",
    "end": "419400"
  },
  {
    "text": "to operate their own data centers and yeah now we're not doing anything new and that changed over the last two or",
    "start": "419400",
    "end": "425100"
  },
  {
    "text": "three years even in Austria and how you benefit is those platforms",
    "start": "425100",
    "end": "432240"
  },
  {
    "text": "orchestration platforms help you with a lot of the cross-cutting concerns so when you do some diplomacy do operations",
    "start": "432240",
    "end": "438360"
  },
  {
    "text": "there's things you need to think about like logging how you configure your application how to do deployments how",
    "start": "438360",
    "end": "445860"
  },
  {
    "text": "these things find each other as well as how you do some diagnostic work if you need to figure out how",
    "start": "445860",
    "end": "452580"
  },
  {
    "text": "certain bugs happened and how you reproduce them and also",
    "start": "452580",
    "end": "458039"
  },
  {
    "text": "there are more things up there but at least the platform kubernetes can help",
    "start": "458039",
    "end": "463560"
  },
  {
    "text": "you with some of them so for example you can even have kubernetes",
    "start": "463560",
    "end": "468800"
  },
  {
    "text": "figure out how you reach some other service that you need but even the",
    "start": "468800",
    "end": "474120"
  },
  {
    "text": "things on top of that so like dealing with different communication protocols or some Frameworks that help you",
    "start": "474120",
    "end": "480180"
  },
  {
    "text": "implement microservice architectures those will usually be easier to do once",
    "start": "480180",
    "end": "485639"
  },
  {
    "text": "you run a kubernetes because there are tools and and Frameworks based on kubernetes that will help you tackle",
    "start": "485639",
    "end": "491099"
  },
  {
    "text": "these as well and kubernetes comes in a lot of flavors so if you Google thinks okay I need to",
    "start": "491099",
    "end": "497880"
  },
  {
    "text": "set up a local kubernetes cluster for development maybe we cannot do it in the cloud because of legal reasons",
    "start": "497880",
    "end": "504120"
  },
  {
    "text": "for example if you're working with some infrastructure provider that works in critical infrastructure and you look at how this has been and I",
    "start": "504120",
    "end": "511080"
  },
  {
    "text": "think it's built kind of similar to Linux where you have basically an open source core that you could use on its",
    "start": "511080",
    "end": "517560"
  },
  {
    "text": "own but it's quite difficult to do so you could download all the components it's go source code you can compile it",
    "start": "517560",
    "end": "523740"
  },
  {
    "text": "and you can run it but it's very difficult to configure so usually it will use some form of distribution",
    "start": "523740",
    "end": "530220"
  },
  {
    "text": "um can be something like Suzy Rancho kubernetes engine can be read at openshift or the OSS variant okd",
    "start": "530220",
    "end": "538560"
  },
  {
    "text": "and that is usually easier to to install on premises but if you go to the cloud you will",
    "start": "538560",
    "end": "544440"
  },
  {
    "text": "usually use some kind of managed service like Azure eks",
    "start": "544440",
    "end": "549560"
  },
  {
    "text": "you can use a Google kubernetes engine Amazon has an offering as well and even",
    "start": "549560",
    "end": "554640"
  },
  {
    "text": "on local hosting companies you will usually have some form of managed kubernetes",
    "start": "554640",
    "end": "560580"
  },
  {
    "text": "platform as well and speaking of these components you",
    "start": "560580",
    "end": "566640"
  },
  {
    "text": "will usually see two types of components one of the like control plane components that do all the intelligent work and",
    "start": "566640",
    "end": "573899"
  },
  {
    "text": "then there's the things that just runs on your worker nodes so um I just wanted to highlight two of",
    "start": "573899",
    "end": "580440"
  },
  {
    "text": "these in the and it doesn't work so basically the thing that you interact",
    "start": "580440",
    "end": "586980"
  },
  {
    "text": "with will be the API server that's what you just interact with when",
    "start": "586980",
    "end": "592019"
  },
  {
    "text": "you deploy something when you ask kubernetes hey what's the status of something that's the thing you interact",
    "start": "592019",
    "end": "597660"
  },
  {
    "text": "with and then there's a database in it basically I usually explain kubernetes it's a database of configuration and",
    "start": "597660",
    "end": "604740"
  },
  {
    "text": "things around it that make it work as you configure it if you use managed service",
    "start": "604740",
    "end": "611940"
  },
  {
    "text": "usually those control plane services will be managed by the cloud vendor and we only manage and pay which machines or",
    "start": "611940",
    "end": "618959"
  },
  {
    "text": "which worker nodes you need to run so I would have something like Azure AKs where just to find okay there are",
    "start": "618959",
    "end": "625680"
  },
  {
    "text": "certain pools of Agents maybe with different sizes I can mix and match mixed Linux nodes and windows pools and",
    "start": "625680",
    "end": "632940"
  },
  {
    "text": "just configure how many I want and pay for them so it's quite it's it's become quite",
    "start": "632940",
    "end": "638940"
  },
  {
    "text": "easy to set up kubernetes in cloud services right now so",
    "start": "638940",
    "end": "645060"
  },
  {
    "text": "how does kubernetes benefit me so everything in kubernetes is basically abstractions or abstracts or",
    "start": "645060",
    "end": "651839"
  },
  {
    "text": "abstractions so you have some application needs that might be networking so you have two",
    "start": "651839",
    "end": "658019"
  },
  {
    "text": "containers to need to talk to each other it could tell kubernetes we want to talk to each other and whatever your",
    "start": "658019",
    "end": "664079"
  },
  {
    "text": "networking infrastructure might be could have some on-premise Cisco networking you could have some Azure",
    "start": "664079",
    "end": "670079"
  },
  {
    "text": "v-nets that will just work without using application developer or",
    "start": "670079",
    "end": "675600"
  },
  {
    "text": "most of the times even operations guy need to think about you can also say okay my application",
    "start": "675600",
    "end": "681660"
  },
  {
    "text": "needs storage like I need to persist on PDF files that people can upload and whatever platform you run on that",
    "start": "681660",
    "end": "687779"
  },
  {
    "text": "storage will be provided for you so you don't need to think about like mounting Azure disks or using elastic block",
    "start": "687779",
    "end": "694800"
  },
  {
    "text": "storage you can just say yeah I need this directory to be in persistent storage with maybe a few options",
    "start": "694800",
    "end": "702180"
  },
  {
    "text": "like how fast should it be how much space to anticipate Etc same goes for load balancing so",
    "start": "702180",
    "end": "708899"
  },
  {
    "text": "different clouds have different infrastructure different on-premise systems can have different like Cisco",
    "start": "708899",
    "end": "714300"
  },
  {
    "text": "load balances for example um you just say yeah um these instances of this service that",
    "start": "714300",
    "end": "720120"
  },
  {
    "text": "needs to be reachable via the public internet and load balanced please make that work and in Azure if you use AKs",
    "start": "720120",
    "end": "726779"
  },
  {
    "text": "that will for example be an Azure load balancer and there are some other things as apart",
    "start": "726779",
    "end": "734339"
  },
  {
    "text": "from infrastructure so you can have some you can have some configuration that can be just like key value pairs or you can",
    "start": "734339",
    "end": "741420"
  },
  {
    "text": "have secrets that you would usually use for things like data bus passwords or default application passwords",
    "start": "741420",
    "end": "748019"
  },
  {
    "text": "also don't forget you're running on the platform that implements scheduling",
    "start": "748019",
    "end": "753060"
  },
  {
    "text": "so you can also make use of that and do things like Chrome jobs in the thing that already implemented scheduling",
    "start": "753060",
    "end": "758579"
  },
  {
    "text": "across a distributed system so don't forget that your platform can also help",
    "start": "758579",
    "end": "763680"
  },
  {
    "text": "you with your basic in-app abstractions so for example if I had three hosts that",
    "start": "763680",
    "end": "769920"
  },
  {
    "text": "were small kubernetes cluster I have an application with a web server",
    "start": "769920",
    "end": "775760"
  },
  {
    "text": "some API component maybe and a database server",
    "start": "775760",
    "end": "780959"
  },
  {
    "text": "what happens if I deploy that it kubernetes would try to distribute my",
    "start": "780959",
    "end": "786000"
  },
  {
    "text": "workloads and then the postgres service said yeah I also need some persistent storage",
    "start": "786000",
    "end": "791760"
  },
  {
    "text": "so this storage would be provisioned it would mount it and it would make sure the platform would make sure that um",
    "start": "791760",
    "end": "798959"
  },
  {
    "text": "this persistent storage is available at the directory that the postgres expects",
    "start": "798959",
    "end": "804959"
  },
  {
    "text": "and if that host host goes offline that workload will just be rescheduled",
    "start": "804959",
    "end": "810180"
  },
  {
    "text": "on a different host again persistent storage is persistent it's just mounted to another host",
    "start": "810180",
    "end": "815540"
  },
  {
    "text": "without any operate intervention if I then try to scale up my application",
    "start": "815540",
    "end": "822779"
  },
  {
    "text": "maybe have three instances of my service running it would just spin up more services and if I then wanted to update",
    "start": "822779",
    "end": "829980"
  },
  {
    "text": "to a newer version so the green one up there the default would be rolling update so it would just spin up new",
    "start": "829980",
    "end": "837180"
  },
  {
    "text": "instances and kill the old ones continuously the way we usually split up or divide",
    "start": "837180",
    "end": "845940"
  },
  {
    "text": "the cluster is using namespaces so we can have different virtual clusters or virtual views of",
    "start": "845940",
    "end": "853019"
  },
  {
    "text": "clusters to separate our applications these can be like different applications that need",
    "start": "853019",
    "end": "859139"
  },
  {
    "text": "to be deployed on the same cluster you could also use production and staging environments and make sure that you",
    "start": "859139",
    "end": "866519"
  },
  {
    "text": "don't run into any like CPU and memory resource conflicts with that and you could have two instances of the",
    "start": "866519",
    "end": "873839"
  },
  {
    "text": "same application running on the cluster this is also a good boundary to separate",
    "start": "873839",
    "end": "879300"
  },
  {
    "text": "like um which users have access to which name spaces so if you're using",
    "start": "879300",
    "end": "885600"
  },
  {
    "text": "um any access control system that's also a good way of separating a cluster",
    "start": "885600",
    "end": "892079"
  },
  {
    "text": "especially if you run things like openshift over maybe a thousand nodes on",
    "start": "892079",
    "end": "897420"
  },
  {
    "text": "premises there's usually some Access Control implemented so you",
    "start": "897420",
    "end": "902820"
  },
  {
    "text": "will have your own virtual view over the namespaces that you have access to",
    "start": "902820",
    "end": "907880"
  },
  {
    "text": "no let's look at the different components and to apply something",
    "start": "908040",
    "end": "913320"
  },
  {
    "text": "so the smallest unit in kubernetes is called a pod so when you work with tools like Docker",
    "start": "913320",
    "end": "920040"
  },
  {
    "text": "you would create a container and that would be the smallest instance in Docker the smallest instance in",
    "start": "920040",
    "end": "925920"
  },
  {
    "text": "kubernetes is basically a pod so you use the port to run a container",
    "start": "925920",
    "end": "931680"
  },
  {
    "text": "you can actually also run multiple containers in there um that's usually used for additional",
    "start": "931680",
    "end": "939360"
  },
  {
    "text": "things like logging proxying Etc um but every part gets its own IP",
    "start": "939360",
    "end": "944579"
  },
  {
    "text": "address it can communicate with other pods with the other possibly addresses it will",
    "start": "944579",
    "end": "950040"
  },
  {
    "text": "have networking setup and it will have persistent storage setup so for example for example you could have a part that",
    "start": "950040",
    "end": "957060"
  },
  {
    "text": "has a container with a web server and a container with some synchronization service it just synchronizes some local",
    "start": "957060",
    "end": "963779"
  },
  {
    "text": "volume that would be the smallest smallest thing you can deploy how you would do that is",
    "start": "963779",
    "end": "972560"
  },
  {
    "text": "by using yaml so I've set up a small cluster in azure",
    "start": "972720",
    "end": "978540"
  },
  {
    "text": "in Europe so I hope it works and the main thing about kubernetes is it's",
    "start": "978540",
    "end": "984480"
  },
  {
    "text": "all the amplifiers so much the amplifies to become sentient basically and you usually have these",
    "start": "984480",
    "end": "992279"
  },
  {
    "text": "things that you deploy with some API version and kind so this is a part that",
    "start": "992279",
    "end": "997740"
  },
  {
    "text": "I want to deploy a metadata usually specifies the name and or the namespace",
    "start": "997740",
    "end": "1003680"
  },
  {
    "text": "where it goes in this case I am in a demo namespace",
    "start": "1003680",
    "end": "1009940"
  },
  {
    "text": "and then you just Define yeah which containers should go in the port there are other things as well you can",
    "start": "1010699",
    "end": "1015800"
  },
  {
    "text": "set but one of the most important things is resources",
    "start": "1015800",
    "end": "1020740"
  },
  {
    "text": "now the important thing is of course uh which image I want to deploy so give a name and an image so for example I want",
    "start": "1021139",
    "end": "1028220"
  },
  {
    "text": "to deploy the business books image I can specify some command that needs to run but I can also specify the resources",
    "start": "1028220",
    "end": "1034640"
  },
  {
    "text": "that's important mostly for scheduling so for example you say I need it around was 100 m it's a milli CPU so it's 0.1",
    "start": "1034640",
    "end": "1043880"
  },
  {
    "text": "CPUs that should be free on that node so that the scheduler would schedule the",
    "start": "1043880",
    "end": "1050780"
  },
  {
    "text": "workload on that node you can also specify some limits so if you use more than that you can set an higher limit to",
    "start": "1050780",
    "end": "1057020"
  },
  {
    "text": "just the light to to um have some more available during Peak load",
    "start": "1057020",
    "end": "1063679"
  },
  {
    "text": "so what I do here I uh run a shell command in a pcbox container",
    "start": "1063679",
    "end": "1070700"
  },
  {
    "text": "that just print something and then sleeps for 10 seconds so",
    "start": "1070700",
    "end": "1076120"
  },
  {
    "text": "how do I interact with my clusters so on the command line we have Cube CTL",
    "start": "1080179",
    "end": "1086120"
  },
  {
    "text": "Cube cuddle usually for the rest of this demo I have a breeded that with KC so",
    "start": "1086120",
    "end": "1094460"
  },
  {
    "text": "um I have more screen estate available and it can apply this yaml file",
    "start": "1094460",
    "end": "1103280"
  },
  {
    "text": "I can also use this KC get po is short reports command now if I'm executing",
    "start": "1103280",
    "end": "1110539"
  },
  {
    "text": "that it will say oh it's running perfect so I've been able to deploy something",
    "start": "1110539",
    "end": "1117020"
  },
  {
    "text": "but you notice there is a sleep command so it just finished and now it's running",
    "start": "1117020",
    "end": "1122360"
  },
  {
    "text": "again the reason it's doing that is kubernetes actually figures out yeah I",
    "start": "1122360",
    "end": "1127700"
  },
  {
    "text": "defined that some something should be running so if it stops I need to restart it and that's what it should do whenever",
    "start": "1127700",
    "end": "1133700"
  },
  {
    "text": "it it stops or crashes foreign we can also have a look at",
    "start": "1133700",
    "end": "1142460"
  },
  {
    "text": "the output",
    "start": "1142460",
    "end": "1145419"
  },
  {
    "text": "using cubesatl logs",
    "start": "1149000",
    "end": "1152799"
  },
  {
    "text": "and I should see the output of the last run instance after some time it should also try to do",
    "start": "1158780",
    "end": "1165620"
  },
  {
    "text": "some back off so if the applications fails all the time you will also see the state crash",
    "start": "1165620",
    "end": "1171620"
  },
  {
    "text": "loop back off so it will wait a bit until it tries to restart that can be up to minutes",
    "start": "1171620",
    "end": "1178760"
  },
  {
    "text": "so let's delete it again and Casey delete",
    "start": "1178760",
    "end": "1184240"
  },
  {
    "text": "perfect",
    "start": "1191840",
    "end": "1194200"
  },
  {
    "text": "and the abstraction over that seems I don't want to create 500 yaml files if I want to just",
    "start": "1198260",
    "end": "1206360"
  },
  {
    "text": "deploy 50 instances of 10 services I want to basically have an abstraction",
    "start": "1206360",
    "end": "1211820"
  },
  {
    "text": "over that as well and that is called deployments so you don't need to think about the individual Parts you just say",
    "start": "1211820",
    "end": "1216919"
  },
  {
    "text": "hey I need to have three parts that kind of look like that so you give it a template we specify how many of them you",
    "start": "1216919",
    "end": "1225380"
  },
  {
    "text": "want to have run and what the abstraction also does is when you do some changes to that",
    "start": "1225380",
    "end": "1231440"
  },
  {
    "text": "configuration basically you want to deploy an update or a change that will",
    "start": "1231440",
    "end": "1236720"
  },
  {
    "text": "also take care of things like rolling updates so you can specify like how many things do you want to have offline at a",
    "start": "1236720",
    "end": "1242360"
  },
  {
    "text": "given time and it will do that for you let's have a look",
    "start": "1242360",
    "end": "1250539"
  },
  {
    "text": "let's watch deployments and pods so that yaml file is a bit larger",
    "start": "1269660",
    "end": "1277460"
  },
  {
    "text": "so it's no longer a pod it's a deployment it also has a name",
    "start": "1277460",
    "end": "1284179"
  },
  {
    "text": "and then it is a specification and now it gets a little bit more complicated so",
    "start": "1284179",
    "end": "1289280"
  },
  {
    "text": "I set a deployment is based on some Port template so you will see there is a template entrance entry here and that's",
    "start": "1289280",
    "end": "1296659"
  },
  {
    "text": "basically the same I would have in the podium file so I have more metadata and I also have a specification",
    "start": "1296659",
    "end": "1303440"
  },
  {
    "text": "so you will see us back a lot of times in the amplifies and you just need to mentally keep track of where you are",
    "start": "1303440",
    "end": "1308780"
  },
  {
    "text": "that's one of the difficult things about the dcml files in this case this is now a pod specification and that should look",
    "start": "1308780",
    "end": "1315740"
  },
  {
    "text": "quite similar to what we have done in the past we specify which image",
    "start": "1315740",
    "end": "1322220"
  },
  {
    "text": "to run we specify some resources and in this case it's also a web server and we",
    "start": "1322220",
    "end": "1327860"
  },
  {
    "text": "want to tell kubernetes here you know what this service has something running on Port 80 that's interesting maybe you",
    "start": "1327860",
    "end": "1333620"
  },
  {
    "text": "want to use it later on somewhere else we could also use this to to Define some",
    "start": "1333620",
    "end": "1338840"
  },
  {
    "text": "alliances but this is standard HTTP that works with all the defaults in the",
    "start": "1338840",
    "end": "1344659"
  },
  {
    "text": "platform so what's this this is we are able to specify some additional metadata on",
    "start": "1344659",
    "end": "1351500"
  },
  {
    "text": "basically everything one of them being labels I can apply labels to pods I can",
    "start": "1351500",
    "end": "1357140"
  },
  {
    "text": "apply labels to deployments and that's used to find things later on in this case",
    "start": "1357140",
    "end": "1362550"
  },
  {
    "text": "[Music] a deployment is basically a Reconciliation Loop so every so often",
    "start": "1362550",
    "end": "1368900"
  },
  {
    "text": "the system will look at okay which parts are running which deployments exist and then it says",
    "start": "1368900",
    "end": "1374240"
  },
  {
    "text": "okay there is a deployment so it says I want to have two instances running with a selector that says I want to have",
    "start": "1374240",
    "end": "1382460"
  },
  {
    "text": "two instances of running matching this definition and it if it doesn't find two of them it",
    "start": "1382460",
    "end": "1389419"
  },
  {
    "text": "will deploy them using this template so that's the way to think about these",
    "start": "1389419",
    "end": "1395600"
  },
  {
    "text": "selected definitions so selectors are usually used to find pods and then the reconciliation Loop",
    "start": "1395600",
    "end": "1402860"
  },
  {
    "text": "will see okay what do I need to change in the system and that's basically how most of the",
    "start": "1402860",
    "end": "1408500"
  },
  {
    "text": "things in kubernetes work so let me just deploy that one",
    "start": "1408500",
    "end": "1414640"
  },
  {
    "text": "and we see we have this deployment now it says rated two of two and we can see there are two parts in here those also",
    "start": "1423919",
    "end": "1431360"
  },
  {
    "text": "get some uh random name so we have two distant parts",
    "start": "1431360",
    "end": "1437240"
  },
  {
    "text": "and they should be running so what happens if I do some changes",
    "start": "1437240",
    "end": "1442400"
  },
  {
    "text": "let's maybe change that to three",
    "start": "1442400",
    "end": "1446440"
  },
  {
    "text": "so it just spun up another instance um if we lift and shift existing things to",
    "start": "1454760",
    "end": "1461840"
  },
  {
    "text": "kubernetes sometimes we are not able to have rolling updates working especially with",
    "start": "1461840",
    "end": "1467360"
  },
  {
    "text": "database updates sometimes you need to do something different if you really really need that there is",
    "start": "1467360",
    "end": "1474320"
  },
  {
    "text": "a way to do that using a different deployment strategy so you can change that for example to recreate",
    "start": "1474320",
    "end": "1482840"
  },
  {
    "text": "so if I deploy a new instance if I changed image there's a newer version of Alpine available",
    "start": "1482840",
    "end": "1490419"
  },
  {
    "text": "it would restart all the containers at once so your system would be offline",
    "start": "1491480",
    "end": "1496760"
  },
  {
    "text": "yeah now it doesn't find the image because I think 23 should be the next one so you see",
    "start": "1496760",
    "end": "1503419"
  },
  {
    "text": "there is an error image pool and now change let's change back to the",
    "start": "1503419",
    "end": "1509780"
  },
  {
    "text": "default configuration so the default should be rolling updates",
    "start": "1509780",
    "end": "1516440"
  },
  {
    "text": "you see there are now four instances scheduled so they are containers where creative is",
    "start": "1516440",
    "end": "1521720"
  },
  {
    "text": "creating While others were terminating so we had now a rolling rolling deployment",
    "start": "1521720",
    "end": "1527779"
  },
  {
    "text": "yeah I just deployed an HTTP server how they reach that one of them would be to use port",
    "start": "1527779",
    "end": "1534080"
  },
  {
    "text": "forwards so for example if I use this",
    "start": "1534080",
    "end": "1538658"
  },
  {
    "text": "vs code kubernetes plugin I can see it as deployment there are the pods and I can actually",
    "start": "1543080",
    "end": "1549200"
  },
  {
    "text": "set up a port forward",
    "start": "1549200",
    "end": "1552340"
  },
  {
    "text": "maybe local port 8080 to one of the parts of the deployment to",
    "start": "1555440",
    "end": "1560900"
  },
  {
    "text": "Port 80 so there's the cubicle port forward command I don't like to type that",
    "start": "1560900",
    "end": "1566360"
  },
  {
    "text": "manually so let's see localhost",
    "start": "1566360",
    "end": "1571480"
  },
  {
    "text": "it works perfect",
    "start": "1571760",
    "end": "1575200"
  },
  {
    "text": "so um next to deployments there's also a different way to deploy parts that would be stateful sets so you've seen these",
    "start": "1589039",
    "end": "1596539"
  },
  {
    "text": "parts have some random identifier there are situations where you don't want that usually these will be stateful",
    "start": "1596539",
    "end": "1602720"
  },
  {
    "text": "applications like databases or Cache clusters and they really rely on some",
    "start": "1602720",
    "end": "1609559"
  },
  {
    "text": "stable naming so for example cash instance one cache instance two cache instance three and because when you",
    "start": "1609559",
    "end": "1616159"
  },
  {
    "text": "deploy new parts the cluster needs usually needs to know hey did node",
    "start": "1616159",
    "end": "1621620"
  },
  {
    "text": "server recover again or did I add a new node to the cluster and so this is usually fixed by using stateful sets",
    "start": "1621620",
    "end": "1629179"
  },
  {
    "text": "um those also do not do rolling updates they just restart one instance after another in contrast to the deployment do",
    "start": "1629179",
    "end": "1635419"
  },
  {
    "text": "we just see that just restarted everything at once and um usually that they also have some",
    "start": "1635419",
    "end": "1641539"
  },
  {
    "text": "additional methods to have different persistent storage for each instance but",
    "start": "1641539",
    "end": "1646820"
  },
  {
    "text": "typically you would only see that in in like pre-existing software that you deploy to your clusters that is like a",
    "start": "1646820",
    "end": "1653900"
  },
  {
    "text": "database or a cache or something else but what you will need is there a way to",
    "start": "1653900",
    "end": "1661220"
  },
  {
    "text": "for these services to talk to one another so I could find out which pods are running what IPS they have in the",
    "start": "1661220",
    "end": "1667700"
  },
  {
    "text": "cluster and talk to them by IP address if I run some containers but finding",
    "start": "1667700",
    "end": "1673159"
  },
  {
    "text": "these IP address is kind of hard and that's what services are for so in kubernetes you your typical way of",
    "start": "1673159",
    "end": "1680200"
  },
  {
    "text": "resolving other services would be DNS and services help you set up the DNS",
    "start": "1680200",
    "end": "1686419"
  },
  {
    "text": "so you can provide a single endpoint for things to connect to the instances of",
    "start": "1686419",
    "end": "1691880"
  },
  {
    "text": "your ports there are a few different types the default one is cluster RP so every service could have one IP",
    "start": "1691880",
    "end": "1698419"
  },
  {
    "text": "address that you just use so you don't need to think about something like",
    "start": "1698419",
    "end": "1703460"
  },
  {
    "text": "re making sure that you do DNS queries all the time and you don't end up with daily and as address so you just have",
    "start": "1703460",
    "end": "1709340"
  },
  {
    "text": "one IP and that IP will be load balanced to some instances of the of the",
    "start": "1709340",
    "end": "1714620"
  },
  {
    "text": "application that are running so that makes it a bit easier to think",
    "start": "1714620",
    "end": "1719659"
  },
  {
    "text": "about these uh ways of resolving other other things so if you also want to make things",
    "start": "1719659",
    "end": "1726260"
  },
  {
    "text": "available outside of the cluster uh you can also use services for that so",
    "start": "1726260",
    "end": "1731480"
  },
  {
    "text": "you can for example deploy notepad note Port service that will still have an internal IP but for example it will make",
    "start": "1731480",
    "end": "1738500"
  },
  {
    "text": "a the service available on all the worker nodes on a specific pod so for",
    "start": "1738500",
    "end": "1744140"
  },
  {
    "text": "example if you're deploying on-premise systems you maybe have some mqt or mqtt",
    "start": "1744140",
    "end": "1750500"
  },
  {
    "text": "messaging system you can just say hey Xpose Port something on all nodes and",
    "start": "1750500",
    "end": "1755840"
  },
  {
    "text": "forward it to that instance and and that would work quite well in a in an um Cloud environment you",
    "start": "1755840",
    "end": "1764059"
  },
  {
    "text": "would usually use a load balancer service if you want to make things available uh to the public that would",
    "start": "1764059",
    "end": "1769940"
  },
  {
    "text": "usually provision a new IP address or configure an existing load balancer to",
    "start": "1769940",
    "end": "1775880"
  },
  {
    "text": "also have some rules to balance to your instances so let's try and deploy some services",
    "start": "1775880",
    "end": "1784240"
  },
  {
    "text": "foreign",
    "start": "1792980",
    "end": "1795220"
  },
  {
    "text": "so service again client service some metadata with a name",
    "start": "1800779",
    "end": "1807140"
  },
  {
    "text": "this for this one I want to deploy class Therapy Services which is basically the",
    "start": "1807140",
    "end": "1812600"
  },
  {
    "text": "default and again I specify selector so I say okay which parts do I want to Target",
    "start": "1812600",
    "end": "1818419"
  },
  {
    "text": "again with this uh labels that I want to query and what ports do you want to",
    "start": "1818419",
    "end": "1824600"
  },
  {
    "text": "expose",
    "start": "1824600",
    "end": "1826960"
  },
  {
    "text": "so you see there is a new service created it has a new different uip address and",
    "start": "1837320",
    "end": "1844340"
  },
  {
    "text": "now every component in the cluster could just use this IP address to talk to our services or resolve it via DNS so just",
    "start": "1844340",
    "end": "1853399"
  },
  {
    "text": "to test that I have some parts that runs a BusyBox instance",
    "start": "1853399",
    "end": "1861580"
  },
  {
    "text": "so and a good way of now running things",
    "start": "1867380",
    "end": "1873260"
  },
  {
    "text": "into classes I can just execute something in the in a an existing",
    "start": "1873260",
    "end": "1878600"
  },
  {
    "text": "container so I want to have an interactive terminal to my busy box",
    "start": "1878600",
    "end": "1885220"
  },
  {
    "text": "container and I want to run a shell",
    "start": "1885220",
    "end": "1889480"
  },
  {
    "text": "perfect so I could do curl http",
    "start": "1890299",
    "end": "1897460"
  },
  {
    "text": "this IP address kind of doesn't work in here",
    "start": "1899600",
    "end": "1905740"
  },
  {
    "text": "then use whatever you get",
    "start": "1905740",
    "end": "1910840"
  },
  {
    "text": "and I get this nginx HTML page but of course I hit appear dresses",
    "start": "1912140",
    "end": "1918380"
  },
  {
    "text": "so you can just use the name of the service",
    "start": "1918380",
    "end": "1922658"
  },
  {
    "text": "and that should work um if you deploy things in different namespaces",
    "start": "1925279",
    "end": "1930559"
  },
  {
    "text": "the full name would be demo front end dot demo that's the current namespace name if you need to talk to things in",
    "start": "1930559",
    "end": "1937340"
  },
  {
    "text": "different name spaces you can use the other DNS components for that in theory the",
    "start": "1937340",
    "end": "1945260"
  },
  {
    "text": "fully assisted as we see Caster local but your default search",
    "start": "1945260",
    "end": "1951020"
  },
  {
    "text": "domains should resolve everything fine with sales name Dot namespace",
    "start": "1951020",
    "end": "1957340"
  },
  {
    "text": "Okay so let's try something else let's see say I want to make this publicly available",
    "start": "1959480",
    "end": "1968020"
  },
  {
    "text": "so I can deploy another service this time I switched class type P to",
    "start": "1968360",
    "end": "1975320"
  },
  {
    "text": "load balancer so you see load balancer and then external IP pending",
    "start": "1975320",
    "end": "1982220"
  },
  {
    "text": "and what pending means is is in Azure it will provision a new IP address and",
    "start": "1982220",
    "end": "1988039"
  },
  {
    "text": "configure Azure load balancer for that so I got some IP address",
    "start": "1988039",
    "end": "1993760"
  },
  {
    "text": "now let me check that",
    "start": "1993799",
    "end": "1997240"
  },
  {
    "text": "maybe not yet takes a bit so in in Azure we usually have that",
    "start": "2000039",
    "end": "2007600"
  },
  {
    "text": "fancy interface so like here is a kubernetes cluster you can change things in the background this will actually",
    "start": "2007600",
    "end": "2014860"
  },
  {
    "text": "create a new Resource Group with all the things in there so my node",
    "start": "2014860",
    "end": "2020620"
  },
  {
    "text": "pools will become virtual machine skill sets and in there I should also see public IP",
    "start": "2020620",
    "end": "2026860"
  },
  {
    "text": "addresses and the load balancer so by just deploying some yaml file Azure",
    "start": "2026860",
    "end": "2032620"
  },
  {
    "text": "nodes or AKs knows how to do that with the Azure load balancer and the Azure",
    "start": "2032620",
    "end": "2038620"
  },
  {
    "text": "way of implementing infrastructure I could use exactly the same yaml file deployed to Amazon it would work the",
    "start": "2038620",
    "end": "2045340"
  },
  {
    "text": "same just with with the different platform components so I should see front-end RP",
    "start": "2045340",
    "end": "2050800"
  },
  {
    "text": "configurations and the inbound rules so",
    "start": "2050800",
    "end": "2059580"
  },
  {
    "text": "yep now it works I have my web server",
    "start": "2060159",
    "end": "2065220"
  },
  {
    "text": "however that might not be the",
    "start": "2066639",
    "end": "2073118"
  },
  {
    "text": "easiest way to manage exposing HTTP Based Services there's also an",
    "start": "2073119",
    "end": "2078158"
  },
  {
    "text": "abstraction called ingresses and the ingresses you use to define how HTTP cluster from outside the HTTP",
    "start": "2078159",
    "end": "2085358"
  },
  {
    "text": "traffic from outside the cluster is routed to components running in the cluster so it is basically and layer 7 load",
    "start": "2085359",
    "end": "2093878"
  },
  {
    "text": "balancer actually a reverse proxy and the way you use it is you say on this host name maybe with that path",
    "start": "2093879",
    "end": "2102280"
  },
  {
    "text": "routed to a specific service and this is the first one that kubernetes actually doesn't Implement",
    "start": "2102280",
    "end": "2108220"
  },
  {
    "text": "itself so you need to bring your own component that then implements that abstraction so I could install nginx I could install",
    "start": "2108220",
    "end": "2115780"
  },
  {
    "text": "AJ proxy traffic Etc there are some custom plugins as well if you need to integrate maybe an external",
    "start": "2115780",
    "end": "2123280"
  },
  {
    "text": "thing like it's basically load balancer that could also integrate with that",
    "start": "2123280",
    "end": "2129520"
  },
  {
    "text": "abstraction so again that's the interface you use an application developer specify",
    "start": "2129520",
    "end": "2136000"
  },
  {
    "text": "what URL what path goes to which service and then in turn it will route to the to the",
    "start": "2136000",
    "end": "2143020"
  },
  {
    "text": "correct Port but you could also do some",
    "start": "2143020",
    "end": "2148720"
  },
  {
    "text": "advanced stuff with that so that can redeployments specifying which traffic for which users should go where your",
    "start": "2148720",
    "end": "2155560"
  },
  {
    "text": "rewriting is quite good if you have like subpaths but your application doesn't",
    "start": "2155560",
    "end": "2160839"
  },
  {
    "text": "understand subpath you can just rewrite rewrite that and one of the most important things is usually TLS of",
    "start": "2160839",
    "end": "2167680"
  },
  {
    "text": "loading so you would configure your TLS certificate on the Ingress or you have a component that creates TLS",
    "start": "2167680",
    "end": "2175000"
  },
  {
    "text": "certificates for you using things like let's encrypt but you can also specify course headers",
    "start": "2175000",
    "end": "2180760"
  },
  {
    "text": "in there which is quite useful and you could even do some authentication stuff like make sure that",
    "start": "2180760",
    "end": "2187720"
  },
  {
    "text": "for example there should be a bearer token in every request to your API",
    "start": "2187720",
    "end": "2193300"
  },
  {
    "text": "so let's have a look at that",
    "start": "2193300",
    "end": "2201359"
  },
  {
    "text": "so ingresses next type of record metadata and the specification",
    "start": "2208780",
    "end": "2215880"
  },
  {
    "text": "what recently changing kubernetes over the last years is you should specify an Ingress class that",
    "start": "2215880",
    "end": "2222880"
  },
  {
    "text": "should be available in your cluster usually when you deploy all these things that you could use to actually do the",
    "start": "2222880",
    "end": "2229420"
  },
  {
    "text": "reverse processing they will provide an English class name that you can use in your English definitions so for example",
    "start": "2229420",
    "end": "2236560"
  },
  {
    "text": "I want to work with the nginx system that I already deployed to the cluster",
    "start": "2236560",
    "end": "2241660"
  },
  {
    "text": "and I just Define some rules for example demo cluster does model 80",
    "start": "2241660",
    "end": "2247900"
  },
  {
    "text": "everything under root should go to set to the cells I just deployed at Port 80.",
    "start": "2247900",
    "end": "2253780"
  },
  {
    "text": "So currently there should be nothing running on there so I'm reaching the Ingress controller",
    "start": "2253780",
    "end": "2261160"
  },
  {
    "text": "basically the engine X instance that is looking at the ingresses in the castle",
    "start": "2261160",
    "end": "2266380"
  },
  {
    "text": "but it doesn't find anything so if I",
    "start": "2266380",
    "end": "2273779"
  },
  {
    "text": "deploy this Ingress",
    "start": "2273820",
    "end": "2277200"
  },
  {
    "text": "yeah that is deploy it",
    "start": "2286119",
    "end": "2292140"
  },
  {
    "text": "it should find the correct nginx instance",
    "start": "2293020",
    "end": "2299980"
  },
  {
    "text": "what it can also do in there is currently cached in a real wave",
    "start": "2299980",
    "end": "2305740"
  },
  {
    "text": "is also specify TLS configuration so once",
    "start": "2305740",
    "end": "2313839"
  },
  {
    "text": "you specify TLS it will look at some secrets that is also a",
    "start": "2313839",
    "end": "2319000"
  },
  {
    "text": "kubernetes object that can contain either unstructured key value pairs or TLS certificates",
    "start": "2319000",
    "end": "2325720"
  },
  {
    "text": "and find the correct certificate for the host teams in my case I also use a component called set manager that are",
    "start": "2325720",
    "end": "2333460"
  },
  {
    "text": "already deployed and configured in the cluster that uses let's encrypt to create these certificate so another",
    "start": "2333460",
    "end": "2339220"
  },
  {
    "text": "thing I can have in that metadata apart from labels are annotations which is basically additional information",
    "start": "2339220",
    "end": "2345300"
  },
  {
    "text": "for other components looking at that definition so",
    "start": "2345300",
    "end": "2351480"
  },
  {
    "text": "I gave you this certificate issue configuration that's valid for a whole cluster for let's encrypt just use that",
    "start": "2352200",
    "end": "2360579"
  },
  {
    "text": "and if this secret doesn't exist request a certificate",
    "start": "2360579",
    "end": "2367240"
  },
  {
    "text": "and that's also why this https is already working",
    "start": "2367240",
    "end": "2374460"
  },
  {
    "text": "so um something I will show you in a bit you can also have contract map secrets",
    "start": "2386020",
    "end": "2391599"
  },
  {
    "text": "you can also have yaml files for defining how you want to do storage uh",
    "start": "2391599",
    "end": "2397480"
  },
  {
    "text": "what kind of persistent volumes you want to have and what's also quite useful in",
    "start": "2397480",
    "end": "2402640"
  },
  {
    "text": "a lot of Enterprise applications you can run jobs so you can do something like match processing where you can use the API",
    "start": "2402640",
    "end": "2410140"
  },
  {
    "text": "service to schedule a job maybe if you want if someone clicks an export button",
    "start": "2410140",
    "end": "2415420"
  },
  {
    "text": "and you need to maybe generate an export you can write code that actually submits the correct yaml file or the correct",
    "start": "2415420",
    "end": "2422560"
  },
  {
    "text": "definition to have your job running maybe for that one export you can also",
    "start": "2422560",
    "end": "2428020"
  },
  {
    "text": "Define Crone drops so for example if I want to generate some reports or remove",
    "start": "2428020",
    "end": "2433359"
  },
  {
    "text": "some stable data every hour I could also make use of that platform again Chrome shops just an abstraction overdrops",
    "start": "2433359",
    "end": "2442260"
  },
  {
    "text": "so let's have a look at an actual application",
    "start": "2442260",
    "end": "2447420"
  },
  {
    "text": "so I created a angular front and end.net backend",
    "start": "2448000",
    "end": "2454359"
  },
  {
    "text": "application I'm going to spare you the details just saying the front-end this build using a",
    "start": "2454359",
    "end": "2461619"
  },
  {
    "text": "Docker file you may have done it before backend application actually is now based in written in.net",
    "start": "2461619",
    "end": "2469440"
  },
  {
    "text": "7.7 will have a new feature for publishing containers so what you can do in in.net7",
    "start": "2469440",
    "end": "2477720"
  },
  {
    "text": "is you can use a published profile",
    "start": "2482200",
    "end": "2489280"
  },
  {
    "text": "called default container you specify which operating system and architecture you want to run on and it",
    "start": "2489280",
    "end": "2495579"
  },
  {
    "text": "will just create that that container for you so",
    "start": "2495579",
    "end": "2501420"
  },
  {
    "text": "and it actually doesn't use a Docker file it just uses an API to communicate",
    "start": "2501420",
    "end": "2506619"
  },
  {
    "text": "with Docker to just say okay these layers are the base layers just add those files that I just created so you",
    "start": "2506619",
    "end": "2513280"
  },
  {
    "text": "don't need to go through a docker-based build to get your container yep and it now published",
    "start": "2513280",
    "end": "2520300"
  },
  {
    "text": "this image I could also specify something like 301",
    "start": "2520300",
    "end": "2527819"
  },
  {
    "text": "and it would publish the same thing with with a different version so if you have trouble maintaining",
    "start": "2529960",
    "end": "2536260"
  },
  {
    "text": "Docker files to to do your.net builds this is probably going to help you I",
    "start": "2536260",
    "end": "2541540"
  },
  {
    "text": "think you can even do it with console applications and use it's not directly",
    "start": "2541540",
    "end": "2549880"
  },
  {
    "text": "but okay yeah it's brought in in this case by the SDK are depending on what",
    "start": "2550839",
    "end": "2557140"
  },
  {
    "text": "type of project you're using might need to reference a specific nougat package you will find that in the dotnet",
    "start": "2557140",
    "end": "2562240"
  },
  {
    "text": "documentation once.net Sam is released there's been a few changes to that okay",
    "start": "2562240",
    "end": "2569140"
  },
  {
    "text": "let's deploy something",
    "start": "2570460",
    "end": "2573900"
  },
  {
    "text": "I'm just switching namespaces",
    "start": "2579040",
    "end": "2582900"
  },
  {
    "text": "nope",
    "start": "2587319",
    "end": "2590280"
  },
  {
    "text": "okay now there are more things in here let's just start with a few things",
    "start": "2593619",
    "end": "2599500"
  },
  {
    "text": "already so in this case I need a database",
    "start": "2599500",
    "end": "2605319"
  },
  {
    "text": "this is a bit much to deployed once so of course I can use the same file for moderate BML files in this case",
    "start": "2605319",
    "end": "2613359"
  },
  {
    "text": "I deployed a secret this is basically also deploying key",
    "start": "2613359",
    "end": "2618400"
  },
  {
    "text": "value pairs of names and values in this case there are base64 encoded",
    "start": "2618400",
    "end": "2623740"
  },
  {
    "text": "I also Define a persistent volume claim that means hey I want some persistent volume to be available",
    "start": "2623740",
    "end": "2630819"
  },
  {
    "text": "saying yeah I want one gigabyte and then Azure has this storage class",
    "start": "2630819",
    "end": "2636700"
  },
  {
    "text": "which gives me faster Azure disks and a deployment",
    "start": "2636700",
    "end": "2643200"
  },
  {
    "text": "that references the secret to Define an environment variable so you can define environment",
    "start": "2643300",
    "end": "2649599"
  },
  {
    "text": "variables referencing Secrets contract Maps or just putting values in inline",
    "start": "2649599",
    "end": "2655420"
  },
  {
    "text": "and it also mounts the volume or it makes the",
    "start": "2655420",
    "end": "2660579"
  },
  {
    "text": "persistent volume available to the pod and test the container where to mount it",
    "start": "2660579",
    "end": "2666220"
  },
  {
    "text": "inside the container so this should be deploying a postgres database it should be ready by now",
    "start": "2666220",
    "end": "2673300"
  },
  {
    "text": "I want to have my front end running",
    "start": "2673300",
    "end": "2682119"
  },
  {
    "text": "I've also created a service footed front and it looks just the same as the ones I showed you before",
    "start": "2682119",
    "end": "2689079"
  },
  {
    "text": "backend is a bit different in this case I am using asp.net configuration system and maybe I don't want to hard code all",
    "start": "2689079",
    "end": "2695920"
  },
  {
    "text": "the values either in duplication or in the deployment so I can use something called a conflict",
    "start": "2695920",
    "end": "2701140"
  },
  {
    "text": "map that also stores key value pairs in this case I'm will be making that available via",
    "start": "2701140",
    "end": "2707619"
  },
  {
    "text": "environment variables and what you need to do in kubernetes is you need to use double underscores and the asp.net",
    "start": "2707619",
    "end": "2713800"
  },
  {
    "text": "configuration system will understand these double underscores as well um it's just kubernetes doesn't allow",
    "start": "2713800",
    "end": "2719920"
  },
  {
    "text": "single underscores in environment variables so",
    "start": "2719920",
    "end": "2726420"
  },
  {
    "text": "deploy the configuration [Music]",
    "start": "2728200",
    "end": "2732659"
  },
  {
    "text": "now to the deployment so here at the I defined the container",
    "start": "2737020",
    "end": "2742240"
  },
  {
    "text": "I'm referencing my custom image and I'm setting environment variables so I'm setting some inline",
    "start": "2742240",
    "end": "2749079"
  },
  {
    "text": "and then I'm also telling it hey just everything that's defined in that config",
    "start": "2749079",
    "end": "2754359"
  },
  {
    "text": "map just dump it into the environment variables so that's a very lazy way to do things",
    "start": "2754359",
    "end": "2761200"
  },
  {
    "text": "but it works so I also want a service",
    "start": "2761200",
    "end": "2769020"
  },
  {
    "text": "for that and now the important part",
    "start": "2770319",
    "end": "2776859"
  },
  {
    "text": "I want to have an Ingress so different you might have done before is yes I",
    "start": "2776859",
    "end": "2782200"
  },
  {
    "text": "still want everything under the slash path to go to my front end but everything under slash API I want to",
    "start": "2782200",
    "end": "2789940"
  },
  {
    "text": "send to my backend so I don't need to worry about cores having like a different domain it's just",
    "start": "2789940",
    "end": "2796180"
  },
  {
    "text": "on the same domain the reverse proxy will just sort out which requesters and to which",
    "start": "2796180",
    "end": "2801880"
  },
  {
    "text": "um to which basically service so let's see that should be running",
    "start": "2801880",
    "end": "2810359"
  },
  {
    "text": "okay that persistent volume was still there",
    "start": "2814720",
    "end": "2821260"
  },
  {
    "text": "now let's look in luckily the password is written here",
    "start": "2821260",
    "end": "2827579"
  },
  {
    "text": "Ander should be able to create new items",
    "start": "2835359",
    "end": "2841300"
  },
  {
    "text": "perfect so now I have a running application",
    "start": "2841300",
    "end": "2845400"
  },
  {
    "text": "how do I deploy that so we've seen we've had a lot of vml files so far I needed",
    "start": "2848380",
    "end": "2853660"
  },
  {
    "text": "to deploy what was it six ml files to just get a small application running and the more complex your application gets",
    "start": "2853660",
    "end": "2860800"
  },
  {
    "text": "the more yaml fights you have you're just throwing amplifies together until the sentient and the way Helen works",
    "start": "2860800",
    "end": "2867520"
  },
  {
    "text": "is you define a chart basically a map the things you want to have in the application in a bit of an again another",
    "start": "2867520",
    "end": "2875020"
  },
  {
    "text": "layer of abstraction so it's basically a template on how to create those objects",
    "start": "2875020",
    "end": "2881079"
  },
  {
    "text": "so if I want to have an application I can package it as a Helm chart and the heat these are the knobs you can turn",
    "start": "2881079",
    "end": "2886720"
  },
  {
    "text": "those are the contract values that we support and then you render out all these definitions",
    "start": "2886720",
    "end": "2892480"
  },
  {
    "text": "so these are go templates it's a template cooking language that might be",
    "start": "2892480",
    "end": "2897760"
  },
  {
    "text": "a bit weird the first time if you have not yet used go you usually Define a default values file",
    "start": "2897760",
    "end": "2904680"
  },
  {
    "text": "which is also just the yaml file that with your own schema and you allow users to customize some of",
    "start": "2904680",
    "end": "2911859"
  },
  {
    "text": "these values so you will have an override that is just merged and then you can use your template to",
    "start": "2911859",
    "end": "2917140"
  },
  {
    "text": "use the values in there to render your definitions also we've understand that you can",
    "start": "2917140",
    "end": "2922660"
  },
  {
    "text": "package that you can ship it to registries you can let other people use that and you can even use pre-built and",
    "start": "2922660",
    "end": "2931000"
  },
  {
    "text": "charts so just a quick demo",
    "start": "2931000",
    "end": "2938520"
  },
  {
    "text": "how would that look if I actually use hem charts so for example let's say I want to install WordPress on",
    "start": "2938980",
    "end": "2945819"
  },
  {
    "text": "myself that would mean I could add a repository",
    "start": "2945819",
    "end": "2951520"
  },
  {
    "text": "in this case a bit numb is a company that publishes a lot of Helm charts I can update the things that are in",
    "start": "2951520",
    "end": "2958960"
  },
  {
    "text": "there so it just knows it downloads the index and knows which packages there are",
    "start": "2958960",
    "end": "2964960"
  },
  {
    "text": "I've already done that so that would be an error now yeah and now have the",
    "start": "2964960",
    "end": "2971200"
  },
  {
    "text": "WordPress namespace",
    "start": "2971200",
    "end": "2974640"
  },
  {
    "text": "now I want to not use the default password since it will be available publicly so I've created a secret",
    "start": "2978040",
    "end": "2985480"
  },
  {
    "text": "definition",
    "start": "2985480",
    "end": "2987900"
  },
  {
    "text": "and the way many hum shots work is you can Define values and you could",
    "start": "2993940",
    "end": "2999640"
  },
  {
    "text": "Define values in line but that means they are no longer in this secret system where it might be encrypted in the back",
    "start": "2999640",
    "end": "3005819"
  },
  {
    "text": "end so usually reference existing stuff as well in handshots so in this case these",
    "start": "3005819",
    "end": "3012060"
  },
  {
    "text": "are some content values that I can change in the helm chart so you can change something like the username",
    "start": "3012060",
    "end": "3018980"
  },
  {
    "text": "I can change the service types I can enable ingresses and Define the things I",
    "start": "3019200",
    "end": "3024900"
  },
  {
    "text": "will specify about these ingresses so amount of TLS I needed this specific annotation for search manager to issue",
    "start": "3024900",
    "end": "3032339"
  },
  {
    "text": "the correct certificate and the hostname and the way to install that",
    "start": "3032339",
    "end": "3039240"
  },
  {
    "text": "is to use Helm install with a release name which chart to use which names list to use and my override values",
    "start": "3039240",
    "end": "3048619"
  },
  {
    "text": "so it's now slowly coming up",
    "start": "3053700",
    "end": "3059400"
  },
  {
    "text": "it deployed a database",
    "start": "3059400",
    "end": "3064040"
  },
  {
    "text": "that might take a few seconds to spin up so there's just a lot of things going on",
    "start": "3065460",
    "end": "3071460"
  },
  {
    "text": "there reading",
    "start": "3071460",
    "end": "3077900"
  },
  {
    "text": "I can also have a look at that via some uis so for example I like to use a Rancher which can actually manage or",
    "start": "3084540",
    "end": "3091859"
  },
  {
    "text": "connect to multiple clusters have a look at the workloads in the",
    "start": "3091859",
    "end": "3099660"
  },
  {
    "text": "WordPress namespace prefix those things are deploying and I can also look at",
    "start": "3099660",
    "end": "3104819"
  },
  {
    "text": "storage so there should now be persistent volumes in here",
    "start": "3104819",
    "end": "3109579"
  },
  {
    "text": "so something for the Mario DB created 50 seconds ago",
    "start": "3110940",
    "end": "3117059"
  },
  {
    "text": "yeah the database seems to be running now WordPress should be starting in a moment yep",
    "start": "3117059",
    "end": "3124380"
  },
  {
    "text": "and here we are so like successfully deployed I'm not going to log in now I hope you",
    "start": "3125520",
    "end": "3132240"
  },
  {
    "text": "trust me that that kind of works but usually you want to create your own",
    "start": "3132240",
    "end": "3138359"
  },
  {
    "text": "Health charts so you can use commands that head and",
    "start": "3138359",
    "end": "3143880"
  },
  {
    "text": "create Foo which would create a new basically empty chart there's already a",
    "start": "3143880",
    "end": "3150480"
  },
  {
    "text": "lot of the structure you will need in there so for example a default yaml file some templates that will help you set up",
    "start": "3150480",
    "end": "3157079"
  },
  {
    "text": "sensible defaults so for example like a deployment and then there's a lot of",
    "start": "3157079",
    "end": "3162300"
  },
  {
    "text": "templating thing going on in there I've already created that",
    "start": "3162300",
    "end": "3170339"
  },
  {
    "text": "for the to-do list",
    "start": "3170339",
    "end": "3173660"
  },
  {
    "text": "already exists",
    "start": "3182280",
    "end": "3185720"
  },
  {
    "text": "so in my to-do list demo I also have this values file",
    "start": "3187800",
    "end": "3195119"
  },
  {
    "text": "maybe some different defaults and my own template so for example",
    "start": "3195119",
    "end": "3200520"
  },
  {
    "text": "in the interest there I can use some variables so that language is a bit more complex I suggest looking at some",
    "start": "3200520",
    "end": "3208140"
  },
  {
    "text": "examples looking at some in GitHub and looking at the documentation you will find a lot of things like this",
    "start": "3208140",
    "end": "3215940"
  },
  {
    "text": "include statements or template statements I use things of a template file you can also have some logic there",
    "start": "3215940",
    "end": "3222780"
  },
  {
    "text": "like if else if I specified an override value do something with data or it just",
    "start": "3222780",
    "end": "3229800"
  },
  {
    "text": "yeah uh play with this little that's the most I can say in the",
    "start": "3229800",
    "end": "3235500"
  },
  {
    "text": "remaining 10 minutes but it usually makes it easier to to",
    "start": "3235500",
    "end": "3242339"
  },
  {
    "text": "um make things configurable so whenever you want to specify some concrete value",
    "start": "3242339",
    "end": "3247559"
  },
  {
    "text": "in the ml file you would usually reference the values that have been provided to the helm release",
    "start": "3247559",
    "end": "3255300"
  },
  {
    "text": "so let's just",
    "start": "3255300",
    "end": "3263000"
  },
  {
    "text": "try to deploy that help install",
    "start": "3268319",
    "end": "3274380"
  },
  {
    "text": "test instance then I need to specify the health chart",
    "start": "3274380",
    "end": "3279480"
  },
  {
    "text": "that's not just a directory to-do list and I have some",
    "start": "3279480",
    "end": "3284579"
  },
  {
    "text": "overwrite values here and that should deploy different instances",
    "start": "3284579",
    "end": "3291319"
  },
  {
    "text": "all right because I'm not gonna wait for that to be fully deployed",
    "start": "3296220",
    "end": "3302780"
  },
  {
    "text": "let's just have a look at some other things so I already mentioned if you're configuring with.net",
    "start": "3304680",
    "end": "3310940"
  },
  {
    "text": "environment variables work by default you can use double underscores to set them",
    "start": "3310940",
    "end": "3317040"
  },
  {
    "text": "you can awesome Mount things as files so if you have conflict maps or Secrets if",
    "start": "3317040",
    "end": "3322319"
  },
  {
    "text": "they're Json format it is very easy to just Mount them as files so you can mount not just persistent volumes but",
    "start": "3322319",
    "end": "3328140"
  },
  {
    "text": "also you can use your secret as a volume reference the Json file in the",
    "start": "3328140",
    "end": "3334020"
  },
  {
    "text": "configuration Builder with database migrations I usually suggest",
    "start": "3334020",
    "end": "3341520"
  },
  {
    "text": "trying to deploy as often as you can and make sure your deployments are backwards and forwards compatible it doesn't work",
    "start": "3341520",
    "end": "3347760"
  },
  {
    "text": "all the time maybe you need to fall back to this recreate deployment strategy or you have something like a knit",
    "start": "3347760",
    "end": "3355200"
  },
  {
    "text": "container that blocks the startup of your new parts until the migration is done and then as part of your deployment",
    "start": "3355200",
    "end": "3361020"
  },
  {
    "text": "you can deploy a job that will perform the migration so your rolling update",
    "start": "3361020",
    "end": "3367200"
  },
  {
    "text": "would wait on that migration to be performed by a job to do schedule and",
    "start": "3367200",
    "end": "3372240"
  },
  {
    "text": "then those init containers will unblock the further starting of all the new pods so you can also do that via Helm hooks",
    "start": "3372240",
    "end": "3379859"
  },
  {
    "text": "so if you just have an upgrade that will automatically schedule that job for you",
    "start": "3379859",
    "end": "3386480"
  },
  {
    "text": "yeah if you use hand weight it would wait try to wait for all the pots to",
    "start": "3386880",
    "end": "3392400"
  },
  {
    "text": "start up for scheduling the job you do not want that in that instance",
    "start": "3392400",
    "end": "3397980"
  },
  {
    "text": "yeah that's how you configure a help hook you just set some annotations and we'll recognize these",
    "start": "3397980",
    "end": "3404339"
  },
  {
    "text": "so the way I did this I have an init container uh in every important part that needs a",
    "start": "3404339",
    "end": "3410520"
  },
  {
    "text": "database that just runs some tool image with the command to wait for the database",
    "start": "3410520",
    "end": "3417319"
  },
  {
    "text": "also a tip for me from my side Implement consistent versioning make sure that your pipeline runs have",
    "start": "3417359",
    "end": "3423900"
  },
  {
    "text": "the same version as your containers as a Helm chart I really like to use noteband git versioning here it's a tool called.net",
    "start": "3423900",
    "end": "3431700"
  },
  {
    "text": "nbgv that just makes some environment variables based available based on your",
    "start": "3431700",
    "end": "3436980"
  },
  {
    "text": "git history and then I can just update him charts publish them Etc",
    "start": "3436980",
    "end": "3445039"
  },
  {
    "text": "also note you can use kubernetes in your application as well so",
    "start": "3445440",
    "end": "3450720"
  },
  {
    "text": "um those parts will usually be scheduled using a service account and you can give this service account right to do",
    "start": "3450720",
    "end": "3458280"
  },
  {
    "text": "something like read configuration scheduled jobs update deployments and",
    "start": "3458280",
    "end": "3463380"
  },
  {
    "text": "you can use the kubernetes client nougat package to actually do that so the way the smokes is you can at some",
    "start": "3463380",
    "end": "3470040"
  },
  {
    "text": "point specify a service account and make sure that this service account makes the token available to each",
    "start": "3470040",
    "end": "3477000"
  },
  {
    "text": "container you do find some rights on some specific apis using rows and role bindings yeah it's a",
    "start": "3477000",
    "end": "3484680"
  },
  {
    "text": "topic that could fill an hour as well and then in the art.net code you can use HTTP clients",
    "start": "3484680",
    "end": "3491240"
  },
  {
    "text": "typed HTTP clients using the HTTP client Factory to create new kubernetes client",
    "start": "3491240",
    "end": "3497940"
  },
  {
    "text": "instances and in this case we were writing some implementing partitioning for a service",
    "start": "3497940",
    "end": "3504000"
  },
  {
    "text": "where we found out yeah we have some problems with cap theorem let's work around that",
    "start": "3504000",
    "end": "3509220"
  },
  {
    "text": "so we were watching all the other services that were started and you",
    "start": "3509220",
    "end": "3514500"
  },
  {
    "text": "figure out which requests to send to which individual part so we are using services to resolve all the instances",
    "start": "3514500",
    "end": "3522480"
  },
  {
    "text": "that are running behind the service but you can do much more some other things you can look into Auto",
    "start": "3522480",
    "end": "3530099"
  },
  {
    "text": "scaling you can do that via something called horizontal Port autoscaler which is very",
    "start": "3530099",
    "end": "3535859"
  },
  {
    "text": "dumb thing that just looks at high CPU usage or event Driven Auto scaling things that would look at like your cue",
    "start": "3535859",
    "end": "3541859"
  },
  {
    "text": "length you can also use service meshes that help you with securing Communications between services and also",
    "start": "3541859",
    "end": "3551220"
  },
  {
    "text": "having some policies to say which thing can talk to each other thing again monitoring tracing tools there are",
    "start": "3551220",
    "end": "3558660"
  },
  {
    "text": "two great projects one is Dapper due to distributed application runtime that helps you that also gives you more",
    "start": "3558660",
    "end": "3565619"
  },
  {
    "text": "abstractions you can be using distributed applications also if you don't like to create yaml files while",
    "start": "3565619",
    "end": "3572040"
  },
  {
    "text": "developing something this project tie that's basically like a compose file",
    "start": "3572040",
    "end": "3577380"
  },
  {
    "text": "for kubernetes and one more topic you can also explore",
    "start": "3577380",
    "end": "3583140"
  },
  {
    "text": "you're already running in this system that is basically a database maybe you want to use your own resource",
    "start": "3583140",
    "end": "3588780"
  },
  {
    "text": "type so things like deployment service Etc I could have like machine configuration",
    "start": "3588780",
    "end": "3595140"
  },
  {
    "text": "and I would no longer have to implement something like a contract system for that I could just load machine",
    "start": "3595140",
    "end": "3600720"
  },
  {
    "text": "configurations by the kubernetes API um that works I won't specify a schema",
    "start": "3600720",
    "end": "3606900"
  },
  {
    "text": "tell kubernetes hey expect objects with that schema and then I could write in operator",
    "start": "3606900",
    "end": "3613559"
  },
  {
    "text": "that basically looks at this at these definitions and does something based on",
    "start": "3613559",
    "end": "3620040"
  },
  {
    "text": "that maybe scheduled instances of deployments or do some configuration changes based",
    "start": "3620040",
    "end": "3627059"
  },
  {
    "text": "on that and that would work with all the uis so it would show up in for example that",
    "start": "3627059",
    "end": "3632940"
  },
  {
    "text": "Ranger I showed you and you could use that for example as a configuration interface",
    "start": "3632940",
    "end": "3639480"
  },
  {
    "text": "so since there is no time left for questions just talk to me and have fun at the",
    "start": "3639480",
    "end": "3645540"
  },
  {
    "text": "conference thank you [Applause]",
    "start": "3645540",
    "end": "3654569"
  }
]