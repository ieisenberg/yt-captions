[
  {
    "start": "0",
    "end": "83000"
  },
  {
    "text": "so welcome to the talk this is from zero to hero with HTTP api's I've been going",
    "start": "1859",
    "end": "8340"
  },
  {
    "text": "through in my mind a lot what to do in this talk and come up with this agenda",
    "start": "8340",
    "end": "13640"
  },
  {
    "text": "first I want to tell you what's in it for you because after all we all go to some talks and maybe they don't fix everyone",
    "start": "13640",
    "end": "21679"
  },
  {
    "text": "but just to start out why would it fit you then I'll show you some of the HTTP",
    "start": "21679",
    "end": "27419"
  },
  {
    "text": "protocol why suave so a bit of background Slav is the web server",
    "start": "27419",
    "end": "32910"
  },
  {
    "text": "I'll primarily talk about but this is actually a talk also about community and",
    "start": "32910",
    "end": "38219"
  },
  {
    "text": "about building this open source software so it's a deeply personal experience",
    "start": "38219",
    "end": "44760"
  },
  {
    "text": "which I'm trying to share to you today it's built a community and in this",
    "start": "44760",
    "end": "52920"
  },
  {
    "text": "community we've found patterns that work software that works so I'll show some of",
    "start": "52920",
    "end": "58679"
  },
  {
    "text": "those I'll give some links how to get started and tell you something about the",
    "start": "58679",
    "end": "63780"
  },
  {
    "text": "future of sod first of all let's start out by erasing of hands how many people",
    "start": "63780",
    "end": "68850"
  },
  {
    "text": "here have heard of sword or used it that's nice so about 40 percent for the",
    "start": "68850",
    "end": "77970"
  },
  {
    "text": "rest of you let me give you first a brief introduction what is it well it's something about HTTP and also me I'm",
    "start": "77970",
    "end": "86370"
  },
  {
    "start": "83000",
    "end": "138000"
  },
  {
    "text": "here like felt I'm at half on github and Twitter I'm hella Celt I'm pretty",
    "start": "86370",
    "end": "93540"
  },
  {
    "text": "prolific 20 comes to open source software so I've written a few libraries saw this one together Adam are expect",
    "start": "93540",
    "end": "101130"
  },
  {
    "text": "our testing framework library logging in metrics as one for dotnet F sharp and C sharp HTTP S which is a wrapper around",
    "start": "101130",
    "end": "108140"
  },
  {
    "text": "HTTP web request some minor libraries for example talking to console a key",
    "start": "108140",
    "end": "115680"
  },
  {
    "text": "value store building with Ruby on net albacore etc I'm also running a startup",
    "start": "115680",
    "end": "122640"
  },
  {
    "text": "called T to Matilda comm is trying to automate good keeping for everyone to make it really easy to run your own",
    "start": "122640",
    "end": "128759"
  },
  {
    "text": "business that's what I've been doing a lot of three years and we actually have them Rasmus here with us today",
    "start": "128759",
    "end": "135360"
  },
  {
    "text": "working with us so why would you listen to this talk",
    "start": "135360",
    "end": "141240"
  },
  {
    "start": "138000",
    "end": "152000"
  },
  {
    "text": "maybe you're functionally curious you're interested in what F sharp could bring to the table for your organization or",
    "start": "141240",
    "end": "147420"
  },
  {
    "text": "even just you as a developer maybe",
    "start": "147420",
    "end": "152490"
  },
  {
    "start": "152000",
    "end": "174000"
  },
  {
    "text": "you're interested in website or construction or maybe you want to free yourself from heavy-handed web",
    "start": "152490",
    "end": "158160"
  },
  {
    "text": "frameworks fair works that sort of build you into themselves and then leave you stuck there all of those things you'll",
    "start": "158160",
    "end": "165150"
  },
  {
    "text": "get a get a hunch about how to fix or free yourself from today first of all",
    "start": "165150",
    "end": "171270"
  },
  {
    "text": "let's look at HTTP because that's what all of this is going to be based around it was invented in 1989 sorted by Tim",
    "start": "171270",
    "end": "179130"
  },
  {
    "start": "174000",
    "end": "190000"
  },
  {
    "text": "berners-lee he was working at CERN and invented it as an information retrieval system he wanted to share research with",
    "start": "179130",
    "end": "186090"
  },
  {
    "text": "other scientists quite a bit later everything was standardised and",
    "start": "186090",
    "end": "192630"
  },
  {
    "start": "190000",
    "end": "220000"
  },
  {
    "text": "formalized so the internet Engineering Task Force IETF and w3c released RFC",
    "start": "192630",
    "end": "200300"
  },
  {
    "text": "2068 in 1997 that was the formal specification for HTTP 1.1 but even",
    "start": "200300",
    "end": "208440"
  },
  {
    "text": "before then we had had Netscape and we had had Internet Explorer in the browser Wars and people had started to discover",
    "start": "208440",
    "end": "214500"
  },
  {
    "text": "what the Internet could be they had started to get the feeling of what was to come in 1999 and 2014 the protocol",
    "start": "214500",
    "end": "227100"
  },
  {
    "start": "220000",
    "end": "247000"
  },
  {
    "text": "was further refined and bug fixes basically added to the RFC and now in",
    "start": "227100",
    "end": "232110"
  },
  {
    "text": "2015 we've got an HTTP 2.0 the latest protocol based on a proprietary one",
    "start": "232110",
    "end": "238890"
  },
  {
    "text": "called speedy from Google but also informed by Microsoft's similar protocol",
    "start": "238890",
    "end": "247610"
  },
  {
    "start": "247000",
    "end": "319000"
  },
  {
    "text": "this is the basics I'm sure you all have seen it you have a user and you have a",
    "start": "247610",
    "end": "253080"
  },
  {
    "text": "server and it's request/response it's layered on top of TCP which means that it's using already existing",
    "start": "253080",
    "end": "262500"
  },
  {
    "text": "foundations the stateless protocol so in and of",
    "start": "262500",
    "end": "267550"
  },
  {
    "text": "itself it doesn't contain any state but you can layer it on top of HTTP so you",
    "start": "267550",
    "end": "272860"
  },
  {
    "text": "can add cookies and you can add session State on the server and that's a pretty common pattern when you build web",
    "start": "272860",
    "end": "278650"
  },
  {
    "text": "frameworks or libraries it's also built to be item totems and what that means that when you apply a function more than",
    "start": "278650",
    "end": "286060"
  },
  {
    "text": "once you should have the same outfit as if you've just applied it once so if you do a get request to an endpoint on an",
    "start": "286060",
    "end": "293410"
  },
  {
    "text": "HTTP server then we should have the same result those gets there are exceptions",
    "start": "293410",
    "end": "299740"
  },
  {
    "text": "from this for example post requests or delete requests the primarily post",
    "start": "299740",
    "end": "305620"
  },
  {
    "text": "requests they aim to change some state and then you don't expect it to be idempotent so what about sloths as an",
    "start": "305620",
    "end": "315760"
  },
  {
    "text": "HTTP server so for me it was about",
    "start": "315760",
    "end": "322000"
  },
  {
    "start": "319000",
    "end": "338000"
  },
  {
    "text": "developer happiness I wanted something that I would feel happy with building functionality and something that would",
    "start": "322000",
    "end": "328870"
  },
  {
    "text": "reduce my development friction and enable me to produce software more rapidly I also wanted to create",
    "start": "328870",
    "end": "335650"
  },
  {
    "text": "something that was community driven this question lingered in my head is it",
    "start": "335650",
    "end": "342490"
  },
  {
    "start": "338000",
    "end": "398000"
  },
  {
    "text": "possible to compose a web server when I came to solve it wasn't widely used but",
    "start": "342490",
    "end": "351070"
  },
  {
    "text": "it was already existing Audemars Gonzalez is the other co-author of Zod he lives in Toronto now and works in",
    "start": "351070",
    "end": "357580"
  },
  {
    "text": "Bitcoin startups so he had made all the Foundation's and what I needed was a web",
    "start": "357580",
    "end": "362979"
  },
  {
    "text": "server that I could deploy for a micro service architecture when I was working with a software development team and we",
    "start": "362979",
    "end": "369310"
  },
  {
    "text": "were under pressure to deliver but I also wanted to apply in my previous history which I'll go through in a",
    "start": "369310",
    "end": "375789"
  },
  {
    "text": "little while but because I wanted a micro services architecture I wanted to have a low memory and fast enough web",
    "start": "375789",
    "end": "383080"
  },
  {
    "text": "server and I wanted to free myself from the AI is trapped where you were sort of",
    "start": "383080",
    "end": "389560"
  },
  {
    "text": "stuck there and then everything would have to go through the GUI I wanted something that was close to the code",
    "start": "389560",
    "end": "395890"
  },
  {
    "text": "close to the metal last night I also wanted something where I could",
    "start": "395890",
    "end": "402040"
  },
  {
    "start": "398000",
    "end": "494000"
  },
  {
    "text": "onboard people and teach them how to program effectively and I wanted",
    "start": "402040",
    "end": "408310"
  },
  {
    "text": "something that could make sense both for beginners and advanced programmers",
    "start": "408310",
    "end": "414960"
  },
  {
    "text": "cross-platform was something I wanted because we started a micro services architecture in a similar vein as all",
    "start": "414960",
    "end": "421450"
  },
  {
    "text": "the other architectures with Linux and Windows co-hosted in the same cloud so",
    "start": "421450",
    "end": "428590"
  },
  {
    "text": "we needed something that could run as API utility servers next to Linux",
    "start": "428590",
    "end": "434770"
  },
  {
    "text": "services the transparent development",
    "start": "434770",
    "end": "440440"
  },
  {
    "text": "process came afterwards first and foremost these needs were mind fulfill but after running this for a",
    "start": "440440",
    "end": "447730"
  },
  {
    "text": "couple of years the development process has actually turned quite a neat finally",
    "start": "447730",
    "end": "454680"
  },
  {
    "text": "one item is to encourage dotnet devs people like yourselves to step outside",
    "start": "454680",
    "end": "460450"
  },
  {
    "text": "of your comfort zones so it is quite minimal so you can read through the code",
    "start": "460450",
    "end": "466330"
  },
  {
    "text": "in a sitting maybe in four hours you can read through all of the coders love that",
    "start": "466330",
    "end": "473350"
  },
  {
    "text": "makes it easy to to on board and it makes it easy for you to to start to investigate what it would require to",
    "start": "473350",
    "end": "479920"
  },
  {
    "text": "build infrastructure because I as a c-sharp developer when I started this project never wrote infrastructural code",
    "start": "479920",
    "end": "486850"
  },
  {
    "text": "I always use the frameworks and I always used the available libraries published",
    "start": "486850",
    "end": "491950"
  },
  {
    "text": "by authorities this is what it looks like hello world and swab and it's",
    "start": "491950",
    "end": "499300"
  },
  {
    "text": "actually actual F sharp compiled this framework is running on swab it's called",
    "start": "499300",
    "end": "505420"
  },
  {
    "text": "FS reveal so it's an adaptation of reveal Jas that lets you write markdown",
    "start": "505420",
    "end": "510670"
  },
  {
    "text": "for slides and then it also compiled F sharp to these nice tool tips slav works",
    "start": "510670",
    "end": "516700"
  },
  {
    "text": "around web parts which is the basic building block just to understand what",
    "start": "516700",
    "end": "522700"
  },
  {
    "text": "Slav does doesn't require you to fully understand what a web part is but it's enough to understand that you can",
    "start": "522700",
    "end": "528700"
  },
  {
    "text": "compose them with this fish-eating so you got webparts like yet that",
    "start": "528700",
    "end": "535209"
  },
  {
    "text": "filters requests and then we have webparts like taught that also filter and then if those don't match then it",
    "start": "535209",
    "end": "541690"
  },
  {
    "text": "can continue to another web part further down the application finally you have outlet web parts like redirections or a",
    "start": "541690",
    "end": "549010"
  },
  {
    "text": "successful output in this case we have all successful okay and to take a string converted to bytes in utf-8 and and",
    "start": "549010",
    "end": "556000"
  },
  {
    "text": "output it to the socket that you have the client on so when you look at the",
    "start": "556000",
    "end": "561550"
  },
  {
    "text": "HTTP protocol this is what it could look like when you do a hello world I've",
    "start": "561550",
    "end": "567339"
  },
  {
    "text": "spawned the server locally and I'm making a get request it starts here on",
    "start": "567339",
    "end": "573100"
  },
  {
    "text": "line four with the verb gaps and the pass hello it also contains the protocol",
    "start": "573100",
    "end": "578800"
  },
  {
    "text": "that the client is using the host user accept and user agent headers are",
    "start": "578800",
    "end": "585610"
  },
  {
    "text": "required well technically not the user agent but accept and host are the",
    "start": "585610",
    "end": "591250"
  },
  {
    "text": "minimal requests you can create in response you you get the protocol chosen",
    "start": "591250",
    "end": "597880"
  },
  {
    "text": "you get the server the date and the content type and also the content links",
    "start": "597880",
    "end": "603130"
  },
  {
    "text": "so down here you can see that world was outputted you can look at the",
    "start": "603130",
    "end": "609010"
  },
  {
    "start": "606000",
    "end": "715000"
  },
  {
    "text": "relationships between the different protocols like this everything is running on Ethernet switching the basic",
    "start": "609010",
    "end": "616390"
  },
  {
    "text": "gift store called line on top of that you have which provides addressing you",
    "start": "616390",
    "end": "622329"
  },
  {
    "text": "also have addressing an Ethernet via the MAC addresses but you need a way of decoupling the physical hardware from",
    "start": "622329",
    "end": "628390"
  },
  {
    "text": "the logical network address so they have IP on top of IP you have UDP and TCP",
    "start": "628390",
    "end": "634570"
  },
  {
    "text": "like you know tea space the most commonly used protocol for HTTP so it",
    "start": "634570",
    "end": "641079"
  },
  {
    "text": "gives you guarantee delivery of packages but not messages that means you can have terminated connections you can have",
    "start": "641079",
    "end": "646959"
  },
  {
    "text": "partial requests and you can have lost messages as well so while we do get",
    "start": "646959",
    "end": "653170"
  },
  {
    "text": "replayability of packages and reordering of them with TCP we don't necessarily",
    "start": "653170",
    "end": "658510"
  },
  {
    "text": "get all the messaging features that you'd expect from a broker like random key or cassia",
    "start": "658510",
    "end": "663900"
  },
  {
    "text": "on top of TCP then is HTTP so HTTP 1",
    "start": "663900",
    "end": "669170"
  },
  {
    "text": "creates a socket and then makes requests and the client gets a response",
    "start": "669170",
    "end": "676160"
  },
  {
    "text": "further up you have WebSockets and server sent events how many here have heard of server sent events they found",
    "start": "676160",
    "end": "683220"
  },
  {
    "text": "and of okay so about 30% and WebSockets",
    "start": "683220",
    "end": "688550"
  },
  {
    "text": "almost everyone let me explain the difference when you look at an HTTP",
    "start": "688550",
    "end": "695010"
  },
  {
    "text": "request it's transparent because it's plain text you can write a curl command and you can see the actual output of it",
    "start": "695010",
    "end": "701070"
  },
  {
    "text": "that's because the headers are sent as ascii and if you just have a text HTML body that also sent us at least utf-8",
    "start": "701070",
    "end": "709140"
  },
  {
    "text": "eight with WebSockets in comparison to sse you got this you make a request",
    "start": "709140",
    "end": "718430"
  },
  {
    "start": "715000",
    "end": "747000"
  },
  {
    "text": "another response you get a text slash event stream that's still plain text and",
    "start": "718430",
    "end": "724020"
  },
  {
    "text": "what server sent events do is that they make the socket remain open and then you",
    "start": "724020",
    "end": "730020"
  },
  {
    "text": "can push data as you go you can then do a cur command and you can see a data",
    "start": "730020",
    "end": "735270"
  },
  {
    "text": "being outfitted over time you could also call this half duplex like one of those",
    "start": "735270",
    "end": "741720"
  },
  {
    "text": "modems that had to be silent when the other side was communicating with it WebSockets on the other hand their fill",
    "start": "741720",
    "end": "750060"
  },
  {
    "text": "duplex the first let's look at that what it could see what you could do with just server sent events small chat example",
    "start": "750060",
    "end": "758180"
  },
  {
    "start": "757000",
    "end": "859000"
  },
  {
    "text": "this also showcase a bit of the sort of API primarily this function that starts",
    "start": "758180",
    "end": "766260"
  },
  {
    "text": "the web server call start the web server it gets configured with a Slav config",
    "start": "766260",
    "end": "772050"
  },
  {
    "text": "that you can set up yourself in the solve configure you have things like binding what network network interface",
    "start": "772050",
    "end": "778560"
  },
  {
    "text": "do you want to bind to or ports and how many concurrent operations you do have what buffer should have etc then what",
    "start": "778560",
    "end": "787050"
  },
  {
    "text": "the small hats thing here means off to solve config is that everything that comes off to this hat is one value",
    "start": "787050",
    "end": "795670"
  },
  {
    "text": "particularly one web pot so previously I showed you the composition of get path",
    "start": "795670",
    "end": "802300"
  },
  {
    "text": "okay that was one web pot cues and it's arguments that's also one",
    "start": "802300",
    "end": "808090"
  },
  {
    "text": "web part so what use does is that it iterates through the different alternatives and the moment one says",
    "start": "808090",
    "end": "816250"
  },
  {
    "text": "that I'm going to reply to the request choose also returns so it's like a",
    "start": "816250",
    "end": "823870"
  },
  {
    "text": "select statement for K events or our completion port so first we see if it",
    "start": "823870",
    "end": "832000"
  },
  {
    "text": "matches the API and then if it doesn't we always serve the index.html page this",
    "start": "832000",
    "end": "837250"
  },
  {
    "text": "is a very common pattern when you build single page applications because you want to serve so that the JavaScript can",
    "start": "837250",
    "end": "843700"
  },
  {
    "text": "do the routing in the browser using the history API finally them if nothing",
    "start": "843700",
    "end": "848740"
  },
  {
    "text": "matches here which is a bit strange because we've compiled and built the site so we should have a new mix file",
    "start": "848740",
    "end": "854380"
  },
  {
    "text": "then we serve internal error because we have some sort of programming error here",
    "start": "854380",
    "end": "860310"
  },
  {
    "start": "859000",
    "end": "1102000"
  },
  {
    "text": "this is an example of what the chat API can look like so we want to say that we",
    "start": "869920",
    "end": "877340"
  },
  {
    "text": "always serve JSON we also serve utf-8 this is a common mistake when people",
    "start": "877340",
    "end": "883160"
  },
  {
    "text": "start out with HTTP that they don't actually specify utf-8 and then the browser is interpreted as the default",
    "start": "883160",
    "end": "889430"
  },
  {
    "text": "for the operating system in question that the client is running on beyond",
    "start": "889430",
    "end": "894890"
  },
  {
    "text": "that we have three endpoints send messages and subscribe we also have some",
    "start": "894890",
    "end": "901910"
  },
  {
    "text": "global state so I remember when I was doing a speed of nap and there was this",
    "start": "901910",
    "end": "907310"
  },
  {
    "text": "big big question about how do I keep something long running on the site and you would read this about the advice and",
    "start": "907310",
    "end": "914510"
  },
  {
    "text": "say that well you can use MSM q and then you can create a Windows service and you have to go and read about the Windows service and everything was very very",
    "start": "914510",
    "end": "921520"
  },
  {
    "text": "intricate because if you created something on asp.net like a spread",
    "start": "921520",
    "end": "927650"
  },
  {
    "text": "running in the background the guidance was that this thread may be killed at any point so you ran into the problem of",
    "start": "927650",
    "end": "936680"
  },
  {
    "text": "your app may not work and you'll never know when it doesn't work unless you capture the global error handler and",
    "start": "936680",
    "end": "942320"
  },
  {
    "text": "look at the thread abort exception and that only happens every four days so",
    "start": "942320",
    "end": "947420"
  },
  {
    "text": "yeah good old days but like you can see here instead we have left API equals so",
    "start": "947420",
    "end": "958700"
  },
  {
    "text": "everything that comes after everything from 199 to 209",
    "start": "958700",
    "end": "964540"
  },
  {
    "text": "that's something which is statically initialized like a global variable oh no",
    "start": "964540",
    "end": "971150"
  },
  {
    "text": "you say those are evil they are to some extent but when you build a stripped",
    "start": "971150",
    "end": "979520"
  },
  {
    "text": "assistance what you want to do is you want to push all the subscription and metadata information to a database or",
    "start": "979520",
    "end": "985130"
  },
  {
    "text": "some sort of broadcast layer in the background and there is nothing wrong in initializing your resources for your",
    "start": "985130",
    "end": "991040"
  },
  {
    "text": "application statically if your application is the only holder of those resources so what we're doing is that",
    "start": "991040",
    "end": "998209"
  },
  {
    "text": "actually initializing the hub this is very similar to signal law because we have a hub-and-spoke architecture in",
    "start": "998209",
    "end": "1005139"
  },
  {
    "text": "this demo we only have a singular hub we don't actually have a persistent pub/sub",
    "start": "1005139",
    "end": "1012300"
  },
  {
    "text": "back-end so it's enough for us to initialize it statically like this let's",
    "start": "1012300",
    "end": "1021279"
  },
  {
    "text": "look at the first pause here sending your messages what we're doing then is",
    "start": "1021279",
    "end": "1028808"
  },
  {
    "text": "to deserialize the command that came in the chat message and then passing that along to this other function called",
    "start": "1028809",
    "end": "1035288"
  },
  {
    "text": "broadcast I know this looks quite",
    "start": "1035289",
    "end": "1040480"
  },
  {
    "text": "advanced but once you get into the feeling of it it feels quite natural the",
    "start": "1040480",
    "end": "1046209"
  },
  {
    "text": "pattern is that whenever you have some resource which is either configuration or statically initialized you just pass",
    "start": "1046209",
    "end": "1052480"
  },
  {
    "text": "it as initial arguments and whatever you get back that's a function and that function can be called by the request so",
    "start": "1052480",
    "end": "1060760"
  },
  {
    "text": "that function then is what your request acts upon and all the previous arguments",
    "start": "1060760",
    "end": "1066549"
  },
  {
    "text": "all the configuration and the husband and everything like that the things you use IOC for in c-sharp those are just",
    "start": "1066549",
    "end": "1072880"
  },
  {
    "text": "parameters and that you get the configure function so in this case I'm initializing the hub because it's a",
    "start": "1072880",
    "end": "1079929"
  },
  {
    "text": "global so it's something you'd otherwise put in the IOC container and it just takes one line of code we also see",
    "start": "1079929",
    "end": "1088690"
  },
  {
    "text": "another pattern here which is deserialized which then passes the deserialize command into the broadcast function so",
    "start": "1088690",
    "end": "1097210"
  },
  {
    "text": "the function returns from calling broadcast with the hub this is what it",
    "start": "1097210",
    "end": "1104380"
  },
  {
    "start": "1102000",
    "end": "1188000"
  },
  {
    "text": "could look like when you want to push data from the API so as we move towards the future our API us are becoming more",
    "start": "1104380",
    "end": "1111970"
  },
  {
    "text": "and more live it's not enough to pull using a read model in the database",
    "start": "1111970",
    "end": "1117010"
  },
  {
    "text": "anymore but the user may want to be directly and instantly notified when",
    "start": "1117010",
    "end": "1122080"
  },
  {
    "text": "something happens let me walk you through this",
    "start": "1122080",
    "end": "1127180"
  },
  {
    "text": "it's using a pattern which originates from ml which is to take the stateful",
    "start": "1127180",
    "end": "1134510"
  },
  {
    "text": "type T as the first parameter if you remember here we're pausing the hub to",
    "start": "1134510",
    "end": "1141380"
  },
  {
    "text": "subscribe function that's the first parameter here so we don't need to we",
    "start": "1141380",
    "end": "1149720"
  },
  {
    "text": "don't need to care about this implementation we just have some handle to some stateful thing and now we can",
    "start": "1149720",
    "end": "1154880"
  },
  {
    "text": "work with it the stateful thing is then talked to using the public API of that stateful",
    "start": "1154880",
    "end": "1161270"
  },
  {
    "text": "thing which is the thing that uses messages in this code namely their",
    "start": "1161270",
    "end": "1171080"
  },
  {
    "text": "source type messages the rest is just a loop that continuously consumes messages",
    "start": "1171080",
    "end": "1177080"
  },
  {
    "text": "and then send them on the event source and this could be equivalently done using WebSockets",
    "start": "1177080",
    "end": "1184480"
  },
  {
    "start": "1188000",
    "end": "1266000"
  },
  {
    "text": "so WebSockets worked like this it's still duplex and that means that you have a request which contains a specific",
    "start": "1189179",
    "end": "1195899"
  },
  {
    "text": "header called upgrade that part is plain text but when you get a response back it",
    "start": "1195899",
    "end": "1204629"
  },
  {
    "text": "has been upgraded to a binary format something which you not necessarily can expect inspect sorry or expect if you're",
    "start": "1204629",
    "end": "1213929"
  },
  {
    "text": "a reverse proxy perhaps but it also allows you to pause messages as you're",
    "start": "1213929",
    "end": "1219359"
  },
  {
    "text": "receiving them so you can build your API as part of the WebSocket connection and",
    "start": "1219359",
    "end": "1226339"
  },
  {
    "text": "then you go into the quandary should I have post endpoints or should I",
    "start": "1226339",
    "end": "1231960"
  },
  {
    "text": "have WebSocket endpoints as you can see from the code sample I'm a big fan of",
    "start": "1231960",
    "end": "1237389"
  },
  {
    "text": "having actual HTTP endpoints for things that we want the HTTP semantics for we",
    "start": "1237389",
    "end": "1242849"
  },
  {
    "text": "may want idempotency we may want to have requests IDs and we want to handle them",
    "start": "1242849",
    "end": "1250529"
  },
  {
    "text": "using headers version numbers of domestic concurrency control session",
    "start": "1250529",
    "end": "1255629"
  },
  {
    "text": "cookies etc and then you can use WebSockets to push read models data that",
    "start": "1255629",
    "end": "1261690"
  },
  {
    "text": "you continuously create on the server side or service unto them I wanted to go",
    "start": "1261690",
    "end": "1270359"
  },
  {
    "text": "through my story because the building of this framework has been a lot about my own personal experience and my my",
    "start": "1270359",
    "end": "1278129"
  },
  {
    "text": "journey towards it back in 2003 I was devouring this patterns and practices",
    "start": "1278129",
    "end": "1284820"
  },
  {
    "text": "how to build enter apps back then I didn't have a visual studio I was actually coding in Dreamweaver yeah",
    "start": "1284820",
    "end": "1294589"
  },
  {
    "text": "exactly but they did have a takeaway there something about forces the forces",
    "start": "1294589",
    "end": "1302669"
  },
  {
    "text": "were the things you wanted to consider when building software applications they",
    "start": "1302669",
    "end": "1307710"
  },
  {
    "text": "mention things like you wanted to minimize the changes required you wanted reuse of components cohesive components",
    "start": "1307710",
    "end": "1315239"
  },
  {
    "text": "and performance at some points those were the forces you had to consider",
    "start": "1315239",
    "end": "1321320"
  },
  {
    "start": "1320000",
    "end": "1404000"
  },
  {
    "text": "then the year afterwards came Evans Eric Evans with his book two men driven design tackling complexity in the heart",
    "start": "1321929",
    "end": "1327480"
  },
  {
    "text": "of software and I remember I was sitting down at the ethic Bay and sitting in the",
    "start": "1327480",
    "end": "1334289"
  },
  {
    "text": "sunshine drinking a good latte and reading this book end to end and it was the most relevant or experience I have",
    "start": "1334289",
    "end": "1341909"
  },
  {
    "text": "ever had as a programmer because I came from these parents and practices which I",
    "start": "1341909",
    "end": "1347549"
  },
  {
    "text": "really didn't understand how to generate the data set with and then suddenly oh it can be a repository instead Wow and",
    "start": "1347549",
    "end": "1354350"
  },
  {
    "text": "it can be only killed that was also amazing but the big takeaway I had from",
    "start": "1354350",
    "end": "1361739"
  },
  {
    "text": "that book until my future self was actually the leather jacket that when",
    "start": "1361739",
    "end": "1366899"
  },
  {
    "text": "you wear a leather jacket then as you wear it and you move a belt like this and you dance perhaps you get points of",
    "start": "1366899",
    "end": "1373649"
  },
  {
    "text": "suppleness like in the elbows or up here on the shoulders because that's where you move and the rest is stiff and",
    "start": "1373649",
    "end": "1381450"
  },
  {
    "text": "protects you and you want to build software the same way you want to build software that supple in the right places",
    "start": "1381450",
    "end": "1388049"
  },
  {
    "text": "but otherwise guides you in the right direction it also gave us a vocabulary for",
    "start": "1388049",
    "end": "1394499"
  },
  {
    "text": "actually speaking about software going beyond the exact code artifact names like interfaith and cloth and taking it",
    "start": "1394499",
    "end": "1401850"
  },
  {
    "text": "up a level of abstraction and so then I started with open source and I start",
    "start": "1401850",
    "end": "1408690"
  },
  {
    "start": "1404000",
    "end": "1545000"
  },
  {
    "text": "looking into cattle transactions and and they're contributing at a bit to it you",
    "start": "1408690",
    "end": "1414119"
  },
  {
    "text": "could in a single sentence aid was global in realizability for aspect or in the programming how many people use that",
    "start": "1414119",
    "end": "1424580"
  },
  {
    "text": "it's a bit opaque what it means is that we want to guarantee correctness and the",
    "start": "1424580",
    "end": "1430309"
  },
  {
    "text": "aspect-oriented programming part was that when you had a method you could wrap it in a transaction similar to our",
    "start": "1430309",
    "end": "1436499"
  },
  {
    "text": "spring transactions did it if I'm not completely mistaken",
    "start": "1436499",
    "end": "1441619"
  },
  {
    "text": "but the problem with that is that it's opaque when you have some transaction going on around your message you're not",
    "start": "1444720",
    "end": "1451240"
  },
  {
    "text": "really sure you're in a transaction so you have to look a transaction scope and then context current and see if there is",
    "start": "1451240",
    "end": "1456250"
  },
  {
    "text": "a transaction but what is it's a nested transaction damage you're lost again and then also MD SM has actually",
    "start": "1456250",
    "end": "1464100"
  },
  {
    "text": "parent-child transactions that can run in parallel how many people have used us",
    "start": "1464100",
    "end": "1471179"
  },
  {
    "text": "so it was a great learning experience and for the camera no one actually put",
    "start": "1471179",
    "end": "1476530"
  },
  {
    "text": "up their handler it learned it sort of",
    "start": "1476530",
    "end": "1481929"
  },
  {
    "text": "taught me the importance of quality in order to understand these transactions I had to understand the underlying",
    "start": "1481929",
    "end": "1487299"
  },
  {
    "text": "transaction paradigm and then I had to understand the relational databases and then I had to understand the distributed",
    "start": "1487299",
    "end": "1493030"
  },
  {
    "text": "relational databases and so on so that's sort of how I got my shove into disturb systems so just for future reference",
    "start": "1493030",
    "end": "1501820"
  },
  {
    "text": "tricky realisability means that you have multiple entities like multiple rows in the table and you have multiple",
    "start": "1501820",
    "end": "1509260"
  },
  {
    "text": "transactions as well and they all run so that each program observes some sequence",
    "start": "1509260",
    "end": "1515919"
  },
  {
    "text": "of events readings and writings from the database or and/or tables which",
    "start": "1515919",
    "end": "1521380"
  },
  {
    "text": "corresponds to a particular execution of that program as it were think",
    "start": "1521380",
    "end": "1526630"
  },
  {
    "text": "single-threaded that's what transactions is supposed to give you but it was opaque and like with",
    "start": "1526630",
    "end": "1536320"
  },
  {
    "text": "RMS you never knew what you read and plus you lower the transaction level to",
    "start": "1536320",
    "end": "1541570"
  },
  {
    "text": "with no lock just so the report could be finished but in 2006 then I started with",
    "start": "1541570",
    "end": "1548110"
  },
  {
    "start": "1545000",
    "end": "1652000"
  },
  {
    "text": "Haskell actually because I started University and I learned that you could",
    "start": "1548110",
    "end": "1554740"
  },
  {
    "text": "separate state from logic because previously especially in the DDD book which was quiet object-oriented you",
    "start": "1554740",
    "end": "1561010"
  },
  {
    "text": "always put the logic into the entities and their aggregate roots so now you had to intermingle the logic and the state",
    "start": "1561010",
    "end": "1567480"
  },
  {
    "text": "which turned out to be hard when when people and myself designing applications",
    "start": "1567480",
    "end": "1572980"
  },
  {
    "text": "with it because you really didn't know how you ended up in that and if something went wrong you had to",
    "start": "1572980",
    "end": "1579100"
  },
  {
    "text": "sort of execute on the database manually but with Haskell you separated them",
    "start": "1579100",
    "end": "1584140"
  },
  {
    "text": "instead so you had logic and state on one hand side and in Haskell side you",
    "start": "1584140",
    "end": "1589810"
  },
  {
    "text": "had logic that flows data so data moves through the logic instead and then if",
    "start": "1589810",
    "end": "1595180"
  },
  {
    "text": "you have patterns you make them type clauses so instead of closest you make them a type cloth and knots then the",
    "start": "1595180",
    "end": "1601450"
  },
  {
    "text": "pattern that you're reusing when it comes to flowing the data in 2007 and",
    "start": "1601450",
    "end": "1608650"
  },
  {
    "text": "2008 this book came out just before then it was only FS fish and strange hash",
    "start": "1608650",
    "end": "1615820"
  },
  {
    "text": "lights at the top of the FS files but at this point with fu-uck 2.0 it started to",
    "start": "1615820",
    "end": "1621190"
  },
  {
    "text": "become readily available in Visual Studio and I became F sharp curious I",
    "start": "1621190",
    "end": "1627779"
  },
  {
    "text": "also discovered that maybe there is a on this slide maybe there is a way to write",
    "start": "1631170",
    "end": "1636550"
  },
  {
    "text": "code that's correct by construction and I started looking into different sources type series like martin love and like",
    "start": "1636550",
    "end": "1643800"
  },
  {
    "text": "dependent types and so on but of course f-sharp isn't that but F sharp gives you a lot more when compared to c-sharp 2.0",
    "start": "1643800",
    "end": "1652530"
  },
  {
    "start": "1652000",
    "end": "1705000"
  },
  {
    "text": "then I started consulting I met Simon Paton Jones that was awesome I also read",
    "start": "1652530",
    "end": "1658120"
  },
  {
    "text": "some books and now follow some books because at this point books started to become a really interesting part of",
    "start": "1658120",
    "end": "1664380"
  },
  {
    "text": "course all of this aims to talk about how this library was constructed in the end that's why I'm saying this I just",
    "start": "1664380",
    "end": "1671530"
  },
  {
    "text": "remembered I need to say that but I read this anti fragile book which is about when you have complex systems like",
    "start": "1671530",
    "end": "1678130"
  },
  {
    "text": "software systems in this case you want them to gain from disorder they want to",
    "start": "1678130",
    "end": "1684490"
  },
  {
    "text": "be anti fragile so robust system is something like this table I can hit it and it sort of gives back to normal that",
    "start": "1684490",
    "end": "1690610"
  },
  {
    "text": "myself if I do if I did push-ups or I do handstands which I'm not going to show then",
    "start": "1690610",
    "end": "1695860"
  },
  {
    "text": "my muscles grow stronger and I gain from the disorder I create I sort of destroy some muscle fibers but in the end I get",
    "start": "1695860",
    "end": "1702190"
  },
  {
    "text": "more of them I also worked with many friends in 2013 I joined an enterprise",
    "start": "1702190",
    "end": "1708700"
  },
  {
    "start": "1705000",
    "end": "1795000"
  },
  {
    "text": "and I started looking into lean thinking books because that was really really what you start to think about",
    "start": "1708700",
    "end": "1715310"
  },
  {
    "text": "when you join enterprises but it became",
    "start": "1715310",
    "end": "1722720"
  },
  {
    "text": "more about analyzing humans when they they act in software systems because",
    "start": "1722720",
    "end": "1727820"
  },
  {
    "text": "this enterprise in particular had quite large software systems they had about 200 huge customers with thousands and",
    "start": "1727820",
    "end": "1735290"
  },
  {
    "text": "thousands of end-users and each had customizations and reports and things that made it very very couple to this",
    "start": "1735290",
    "end": "1742010"
  },
  {
    "text": "particular version so my nice migration scripts in black but then how do you",
    "start": "1742010",
    "end": "1748490"
  },
  {
    "text": "sort of move forward in such an organization and continuously deliver value when you're always getting locked",
    "start": "1748490",
    "end": "1755720"
  },
  {
    "text": "down because as systems grow especially if they're monolith and especially if",
    "start": "1755720",
    "end": "1761690"
  },
  {
    "text": "they don't have a culture of XP extreme programming continuous delivery continuous improvement etc then you hold",
    "start": "1761690",
    "end": "1771110"
  },
  {
    "text": "off on releasing and that in that spikes the risk rather than diminishing it and",
    "start": "1771110",
    "end": "1777290"
  },
  {
    "text": "then when something goes wrong it becomes a self-fulfilling prophecy that oh we should have tested it more and a",
    "start": "1777290",
    "end": "1783890"
  },
  {
    "text": "nut in turn makes it even less frequent so these books are really nice Romek was",
    "start": "1783890",
    "end": "1789620"
  },
  {
    "text": "one of the people in America that started doing lean in his how am I on",
    "start": "1789620",
    "end": "1796940"
  },
  {
    "start": "1795000",
    "end": "1844000"
  },
  {
    "text": "time looking good so anyway 2015 I started my company k2 and I've asked",
    "start": "1796940",
    "end": "1804500"
  },
  {
    "text": "myself the question what was what is so",
    "start": "1804500",
    "end": "1809990"
  },
  {
    "text": "where have I come at the moment and where am i coming from so we've gone through where I'm coming from now and",
    "start": "1809990",
    "end": "1815150"
  },
  {
    "text": "the question becomes what ought to be what should the developer development experience the business building",
    "start": "1815150",
    "end": "1821390"
  },
  {
    "text": "experience the software experience be for you people the people who use my fair work Slav to build software and",
    "start": "1821390",
    "end": "1828440"
  },
  {
    "text": "deliver a good book here is by hooked one for many these are the rise of the",
    "start": "1828440",
    "end": "1833930"
  },
  {
    "text": "curating organization where they go through that if you just organize people around the idea of something rather than",
    "start": "1833930",
    "end": "1840590"
  },
  {
    "text": "organizing them by telling them things you get a a system that organizes itself and not",
    "start": "1840590",
    "end": "1848399"
  },
  {
    "start": "1844000",
    "end": "1870000"
  },
  {
    "text": "lazy to the pit of success because you won't build that with people and with software could I just get a check on how",
    "start": "1848399",
    "end": "1858029"
  },
  {
    "text": "many minutes I have left is it ten minutes how much of an hour left",
    "start": "1858029",
    "end": "1866429"
  },
  {
    "text": "that was just okay good then I can slow down so my point is then that sort of it",
    "start": "1866429",
    "end": "1873299"
  },
  {
    "text": "is sort of a movement at least a lot of feels to me because I created it on my",
    "start": "1873299",
    "end": "1878460"
  },
  {
    "text": "own chamber with Adam are we iterated on it we tested it we improved upon it and",
    "start": "1878460",
    "end": "1884389"
  },
  {
    "text": "now it's grown people are using it in production FS nip dotnet we have the",
    "start": "1884389",
    "end": "1891149"
  },
  {
    "text": "gamma was initially written with it we have people demoing the new vicious studio with it people are actually",
    "start": "1891149",
    "end": "1897809"
  },
  {
    "text": "starting to pick up this software and using it and I believe that's because the thought that has gone into it",
    "start": "1897809",
    "end": "1906320"
  },
  {
    "start": "1906000",
    "end": "1928000"
  },
  {
    "text": "because there is no single person or company that under writes what's la vez",
    "start": "1906830",
    "end": "1912059"
  },
  {
    "text": "it's a community instead the development process is completely open it just",
    "start": "1912059",
    "end": "1918000"
  },
  {
    "text": "exists and you can choose to use it I'm not going to push features on you you",
    "start": "1918000",
    "end": "1923220"
  },
  {
    "text": "can stay on an older version if you want you can pull requests or older versions",
    "start": "1923220",
    "end": "1928908"
  },
  {
    "start": "1928000",
    "end": "1951000"
  },
  {
    "text": "so it becomes sort of this adaptive nonlinear human system something that's",
    "start": "1929179",
    "end": "1934309"
  },
  {
    "text": "self-organizing and I think the biggest upside with it is that it brings it sort",
    "start": "1934309",
    "end": "1940740"
  },
  {
    "text": "of guides you in the right direction towards something which is which as low coupling is cohesive and bring you the",
    "start": "1940740",
    "end": "1947610"
  },
  {
    "text": "properties you want from from building software it gives you the structure and",
    "start": "1947610",
    "end": "1953029"
  },
  {
    "text": "then it goes out of the way and lets you write your app so one thing many people",
    "start": "1953029",
    "end": "1959760"
  },
  {
    "text": "mention when it comes to functional programming is that oh my god it has to be immutable then I can't change things",
    "start": "1959760",
    "end": "1964889"
  },
  {
    "text": "so what about the socket in that like all of you have said that at some point I'm sure because it becomes so hard to",
    "start": "1964889",
    "end": "1972659"
  },
  {
    "text": "build systems when you can't change it the world is after all changeable the reason you have this conflict is",
    "start": "1972659",
    "end": "1979690"
  },
  {
    "text": "that functional program is actually allowing you to change things underneath",
    "start": "1979690",
    "end": "1985419"
  },
  {
    "text": "the hood as long as your public API is immutable then you're free to use as",
    "start": "1985419",
    "end": "1990789"
  },
  {
    "text": "much mutability and as much performance optimizations as you want beneath the hood a really good example of this is",
    "start": "1990789",
    "end": "1997809"
  },
  {
    "text": "the parser called utter parsec for Haskell which actually has a very very mutable buffer and lots of algorithms to",
    "start": "1997809",
    "end": "2005339"
  },
  {
    "text": "grow and shrink it and then outperform see on HTTP parsing I suppose you're",
    "start": "2005339",
    "end": "2011849"
  },
  {
    "text": "getting a feeling Mouse where I want to take slot in the future so it hides the",
    "start": "2011849",
    "end": "2018779"
  },
  {
    "text": "complexity and lets you focus on your building your application instead this",
    "start": "2018779",
    "end": "2025139"
  },
  {
    "start": "2023000",
    "end": "2053000"
  },
  {
    "text": "is our production code and it showcases the suave API for our API you can see",
    "start": "2025139",
    "end": "2032489"
  },
  {
    "text": "first that we try to find the static file requested that's the happy path for",
    "start": "2032489",
    "end": "2037619"
  },
  {
    "text": "all the static assets and then it goes through the different API endpoints including the interactive endpoints that",
    "start": "2037619",
    "end": "2044549"
  },
  {
    "text": "are in public but rather something that the app uses or our logging framework logger uses so",
    "start": "2044549",
    "end": "2055440"
  },
  {
    "text": "what is one part of the F sharp story the F sharp story though on the other",
    "start": "2055440",
    "end": "2062638"
  },
  {
    "text": "hand it's what ought to be that's why I'm so happy to meet you guys today because you're part of the F sharp story",
    "start": "2062639",
    "end": "2069388"
  },
  {
    "text": "if you want to you can choose to take the step towards being better software developers and furthering your knowledge",
    "start": "2069389",
    "end": "2076878"
  },
  {
    "text": "you can do that where y'all right now of course it's not a contradiction but in",
    "start": "2076879",
    "end": "2084179"
  },
  {
    "text": "the F sharp community we've actually gotten some steam and gotten some speed",
    "start": "2084179",
    "end": "2089460"
  },
  {
    "text": "towards the goal of building really well architected software and it's community",
    "start": "2089460",
    "end": "2095128"
  },
  {
    "text": "driven and it feels like such a breath of fresh air to me",
    "start": "2095129",
    "end": "2101838"
  },
  {
    "start": "2100000",
    "end": "2210000"
  },
  {
    "text": "let's dive a bit deeper into sod and look at how it works this is the",
    "start": "2102080",
    "end": "2107270"
  },
  {
    "text": "connection handling you see on the left hand side you've got the user here's",
    "start": "2107270",
    "end": "2113540"
  },
  {
    "text": "here's you the programmer you have a nice beard we have the bound socket here",
    "start": "2113540",
    "end": "2121780"
  },
  {
    "text": "that's the thing that you bind on your VM so a socket is the IP and the TCP",
    "start": "2121780",
    "end": "2128900"
  },
  {
    "text": "endpoint which is sorry the TCP endpoint is the IP and port and you bind it and",
    "start": "2128900",
    "end": "2136100"
  },
  {
    "text": "you have a singular process listening to one of those people so when the client",
    "start": "2136100",
    "end": "2141560"
  },
  {
    "text": "connects you you have the sin of this Bay which you get syn ack back to and then the request starts to happen the",
    "start": "2141560",
    "end": "2148010"
  },
  {
    "text": "date that I've done the headers that you saw in one of the earlier slides but the data sent to a child socket which has an",
    "start": "2148010",
    "end": "2155240"
  },
  {
    "text": "ephemeral port in the high port range so when you do netstat you'll see one bound",
    "start": "2155240",
    "end": "2160490"
  },
  {
    "text": "port and then you'll see one ephemeral port for each client the web part is",
    "start": "2160490",
    "end": "2168500"
  },
  {
    "text": "written by you so all the buffering and all the shrinking and growing and",
    "start": "2168500",
    "end": "2174650"
  },
  {
    "text": "metrics and ensuring the HTTP is valid as a request happens before you get",
    "start": "2174650",
    "end": "2180740"
  },
  {
    "text": "invoked then you can execute you can do a synchronous invocations to a database or to file systems or maybe zip the file",
    "start": "2180740",
    "end": "2188750"
  },
  {
    "text": "on the fly as you stream that back to the client so you get the data and then",
    "start": "2188750",
    "end": "2196010"
  },
  {
    "text": "if you either have connection closed as a header you close the connection or you can have keepalive connections and then",
    "start": "2196010",
    "end": "2203330"
  },
  {
    "text": "you can let the client continue to send requests to your API in code you first",
    "start": "2203330",
    "end": "2213410"
  },
  {
    "text": "bound the listening socket it's a socket type stream on the TCP protocol and then",
    "start": "2213410",
    "end": "2219260"
  },
  {
    "text": "for every TCP connection you accept so then you grab the client socket you process the HP request you can see the",
    "start": "2219260",
    "end": "2226400"
  },
  {
    "text": "left bang that's F sharp or saying this is the happy pause and then if we have",
    "start": "2226400",
    "end": "2232430"
  },
  {
    "text": "the side pass and something goes wrong like we get a bad request that handle outside of this code so you",
    "start": "2232430",
    "end": "2237440"
  },
  {
    "text": "can handle it in one place that's decoupling again the logic so you parse 'request you get the result and",
    "start": "2237440",
    "end": "2243170"
  },
  {
    "text": "then you keep it you put it into record",
    "start": "2243170",
    "end": "2248239"
  },
  {
    "text": "and feed it to your web part which can now execute them and create a response",
    "start": "2248239",
    "end": "2254019"
  },
  {
    "text": "so we've seen the execution side the other side is a different dimension in",
    "start": "2254079",
    "end": "2259219"
  },
  {
    "text": "sort of orthogonal in this case because you can choose to either return bytes or a socket ASCII in the initial hello",
    "start": "2259219",
    "end": "2266809"
  },
  {
    "text": "world example we said okay and then a string that's good that gets directly converted to some bytes it's a pretty",
    "start": "2266809",
    "end": "2273200"
  },
  {
    "text": "simple operation but if you're zipping a file on the fly you want to continue to",
    "start": "2273200",
    "end": "2278479"
  },
  {
    "text": "stream that file because it can be big so then you return instead of socket tasks and you can be a part of the a",
    "start": "2278479",
    "end": "2285769"
  },
  {
    "text": "synchronous sending to the browser this",
    "start": "2285769",
    "end": "2291709"
  },
  {
    "text": "is a discriminated Union and it's in the HTTP output file in this valve source",
    "start": "2291709",
    "end": "2298849"
  },
  {
    "text": "code and what the discriminated Union means for the seizure of developers is that it's either or it's either the",
    "start": "2298849",
    "end": "2306140"
  },
  {
    "text": "bytes always a socket task or it's in no reply and then that's when you unit test",
    "start": "2306140",
    "end": "2312380"
  },
  {
    "text": "for example let me show you some",
    "start": "2312380",
    "end": "2317390"
  },
  {
    "text": "patterns then how do you use Slav in real life this is for example how you",
    "start": "2317390",
    "end": "2323089"
  },
  {
    "start": "2321000",
    "end": "2354000"
  },
  {
    "text": "add login so one of the open source frameworks I've released is called lagering it's a competitor to Sarah log",
    "start": "2323089",
    "end": "2330589"
  },
  {
    "text": "but it also does metrics that means that you can feed your application timers and",
    "start": "2330589",
    "end": "2337509"
  },
  {
    "text": "gauges and reservoirs etc into something like influx or stat stay or yeah you get",
    "start": "2337509",
    "end": "2345769"
  },
  {
    "text": "to get the gist of it and gives you a functional interface as well",
    "start": "2345769",
    "end": "2353049"
  },
  {
    "text": "this is another pattern it's called the 12 factor app if you haven't seen it it's a really nice pattern for",
    "start": "2355010",
    "end": "2361190"
  },
  {
    "text": "decomposing and analyzing software that you deploy it's primarily a deployment",
    "start": "2361190",
    "end": "2366320"
  },
  {
    "text": "pattern but as it turns out in DevOps it's not just the operations that matter",
    "start": "2366320",
    "end": "2371870"
  },
  {
    "text": "it's the programmer as well you as a programmer has to be there all the way to the production to deploy and monitor",
    "start": "2371870",
    "end": "2379370"
  },
  {
    "text": "and improve your application and the 12 factor net site gives you the tools you",
    "start": "2379370",
    "end": "2384860"
  },
  {
    "text": "need to do that it also happens to sit really well with this new technology called kubernetes kubernetes is like a",
    "start": "2384860",
    "end": "2392770"
  },
  {
    "text": "process scheduler but for the cloud so instead of doing terraform and then you",
    "start": "2392770",
    "end": "2397820"
  },
  {
    "text": "get a new VM and you have to manually push every software up there started as a service and then monitor it you can",
    "start": "2397820",
    "end": "2403790"
  },
  {
    "text": "say this is a service it expose it exposes this port and it has these",
    "start": "2403790",
    "end": "2408860"
  },
  {
    "text": "endpoints can you please deploy that for me with a replica factor of three and",
    "start": "2408860",
    "end": "2414140"
  },
  {
    "text": "then cover native goes and does that so it's a hot recommendation to look into",
    "start": "2414140",
    "end": "2419330"
  },
  {
    "text": "if you haven't yet we also have this other pattern called server pre test it",
    "start": "2419330",
    "end": "2425060"
  },
  {
    "start": "2421000",
    "end": "2449000"
  },
  {
    "text": "means that when you compose your application functionally all of your side effects and all of your",
    "start": "2425060",
    "end": "2431090"
  },
  {
    "text": "configuration is pushed up to your composition route just like in c-sharp where you have your ioc container but",
    "start": "2431090",
    "end": "2437660"
  },
  {
    "text": "that means that you can spawn a server with this config with the changes needed to run it as a unit test so we have a",
    "start": "2437660",
    "end": "2444560"
  },
  {
    "text": "library called Slovak testing which lets you spawn server like this for each test",
    "start": "2444560",
    "end": "2451090"
  },
  {
    "start": "2449000",
    "end": "2501000"
  },
  {
    "text": "in this case the run with on line 8 takes the config which is your adapted",
    "start": "2451090",
    "end": "2457730"
  },
  {
    "text": "completion route and your application and then starts it it ensures that if",
    "start": "2457730",
    "end": "2463460"
  },
  {
    "text": "the test fails it'll shut it down again and then you perform the action you make",
    "start": "2463460",
    "end": "2468590"
  },
  {
    "text": "a request on line 9 with a get them nobody and then you pick out the status",
    "start": "2468590",
    "end": "2474080"
  },
  {
    "text": "code from the reply then you can expect on it this is using a testing framework",
    "start": "2474080",
    "end": "2479330"
  },
  {
    "text": "called expecto which i've also written which is a fork as well so I'm standing",
    "start": "2479330",
    "end": "2485150"
  },
  {
    "text": "on the shoulders of giants but it lets you in a nice fluent say what you're expecting and it lets",
    "start": "2485150",
    "end": "2491350"
  },
  {
    "text": "you just as sloth lets you treat your webparts as values lets you treat your tests as values this is what it can look",
    "start": "2491350",
    "end": "2499450"
  },
  {
    "text": "like in the end we also have a really nice community this is one community",
    "start": "2499450",
    "end": "2506770"
  },
  {
    "start": "2501000",
    "end": "2531000"
  },
  {
    "text": "contribution it uses something in F sharp called type providers so that when",
    "start": "2506770",
    "end": "2512830"
  },
  {
    "text": "you create the code which you see on line 19 to 21 you get the typed pause",
    "start": "2512830",
    "end": "2519670"
  },
  {
    "text": "and you also get a compile time construct to interact with it typed boss",
    "start": "2519670",
    "end": "2526410"
  },
  {
    "start": "2531000",
    "end": "2545000"
  },
  {
    "text": "in the end you get generated swagger documentation and all of these things",
    "start": "2532490",
    "end": "2537920"
  },
  {
    "text": "compose orthogonally so if you have your calculation function that does the processing of the web request you can",
    "start": "2537920",
    "end": "2544670"
  },
  {
    "text": "just shove it in here as part of the callback here and then as it happens you",
    "start": "2544670",
    "end": "2550160"
  },
  {
    "text": "can on top of that layer the documentation and that's really the strength of functional programming the",
    "start": "2550160",
    "end": "2555320"
  },
  {
    "text": "layering becomes a composability so this",
    "start": "2555320",
    "end": "2564470"
  },
  {
    "text": "is all suave have a look at swab swagger and if",
    "start": "2564470",
    "end": "2570800"
  },
  {
    "start": "2569000",
    "end": "2600000"
  },
  {
    "text": "you're interested in getting started I recommend Slavitt IO the website there",
    "start": "2570800",
    "end": "2576680"
  },
  {
    "text": "is a whole book written by the male uski called slam music stone it was written",
    "start": "2576680",
    "end": "2582410"
  },
  {
    "text": "as I said as a speech D project I think it gives to everything from server-side",
    "start": "2582410",
    "end": "2588349"
  },
  {
    "text": "page generation to logging into session types to cryptography to some extent",
    "start": "2588349",
    "end": "2593950"
  },
  {
    "text": "there's been a victim called them so sorry this is the book soft music store there's also been a",
    "start": "2593950",
    "end": "2602119"
  },
  {
    "start": "2600000",
    "end": "2671000"
  },
  {
    "text": "book written called F sharp applied and it goes through how you would compose an application with F sharp from scratch he",
    "start": "2602119",
    "end": "2608990"
  },
  {
    "text": "actually builds well in like 80 pages and then he tells us oh so this is how",
    "start": "2608990",
    "end": "2615619"
  },
  {
    "text": "it works and now you know it because he built it yourself then he introduces the",
    "start": "2615619",
    "end": "2621200"
  },
  {
    "text": "other tooling like packet the one here at the top a nugget manager for dotnet",
    "start": "2621200",
    "end": "2627040"
  },
  {
    "text": "that lets you get away from one hour nugget packet update PS prompts there is",
    "start": "2627040",
    "end": "2634580"
  },
  {
    "text": "a building tool chain called fake also written in F sharp lets you build nice",
    "start": "2634580",
    "end": "2640750"
  },
  {
    "text": "projects quite easily iron I'd a free editor that runs as a plug-in to vias",
    "start": "2640750",
    "end": "2647480"
  },
  {
    "text": "code and finally rx to orchestrate concurrent operations in the backend",
    "start": "2647480",
    "end": "2654400"
  },
  {
    "text": "everything tied together with f-sharp and swap so besides that it also gives",
    "start": "2654400",
    "end": "2659990"
  },
  {
    "text": "you it gives you the ability to do CTRs at the end so he tries to ticket them all but",
    "start": "2659990",
    "end": "2667790"
  },
  {
    "text": "it's nicely written and it doesn't get overboard with it we also have this",
    "start": "2667790",
    "end": "2673010"
  },
  {
    "start": "2671000",
    "end": "2681000"
  },
  {
    "text": "really nice to getting started toolkit called a web stack design for developer happiness and github it's called fable",
    "start": "2673010",
    "end": "2679670"
  },
  {
    "text": "solve scaffold so how many here have heard of Elm all right so that's like",
    "start": "2679670",
    "end": "2686300"
  },
  {
    "start": "2681000",
    "end": "2723000"
  },
  {
    "text": "80% of the room you can actually write similar applications only on that maps with f-sharp and compiler f-sharp into",
    "start": "2686300",
    "end": "2693350"
  },
  {
    "text": "stateless reactive you guys on the front end so this web stack is designed for",
    "start": "2693350",
    "end": "2699320"
  },
  {
    "text": "developer happiness lets you do that on the front end and then invoke type routes on your server side with slot and",
    "start": "2699320",
    "end": "2705410"
  },
  {
    "text": "then you can also have swagger documentation authentication yeah you get the idea and it runs on dotnet core as well and",
    "start": "2705410",
    "end": "2713720"
  },
  {
    "text": "if you're using webpack there is a web pack loader for fable which is the",
    "start": "2713720",
    "end": "2719540"
  },
  {
    "text": "compiler for F sharp D JavaScript so check it out I've also written this",
    "start": "2719540",
    "end": "2725060"
  },
  {
    "start": "2723000",
    "end": "2760000"
  },
  {
    "text": "course called the Linux intro course coming from a dotnet background I realized that many people don't actually",
    "start": "2725060",
    "end": "2731270"
  },
  {
    "text": "publish the applications on Linux they normally paste it in RDP on is but this",
    "start": "2731270",
    "end": "2738710"
  },
  {
    "text": "is how you can get started so it gives you everything from scratch this is how you set up the terminal and this is how",
    "start": "2738710",
    "end": "2744200"
  },
  {
    "text": "you start a new project with Forge generating the F sharp site and then blah blah blah everything up until you",
    "start": "2744200",
    "end": "2751160"
  },
  {
    "text": "get to cover neck days this is how we operate systems at scale this is how we do monitoring it's on my github as well",
    "start": "2751160",
    "end": "2758240"
  },
  {
    "text": "half / Linux integrals there are also videos the last couple of",
    "start": "2758240",
    "end": "2764180"
  },
  {
    "start": "2760000",
    "end": "2772000"
  },
  {
    "text": "years have had talks here at NBC about slot and have a look at them now follows",
    "start": "2764180",
    "end": "2774350"
  },
  {
    "start": "2772000",
    "end": "2800000"
  },
  {
    "text": "a few more sorry about this there is really cool attempting library that runs",
    "start": "2774350",
    "end": "2780920"
  },
  {
    "text": "a state machine as a web server but lets you expose your iot computer as a web",
    "start": "2780920",
    "end": "2788090"
  },
  {
    "text": "api and then you can also map the different API endpoints to the states that your hardware has",
    "start": "2788090",
    "end": "2795470"
  },
  {
    "text": "this presentation was built with SS reveal this is how you can do",
    "start": "2795470",
    "end": "2802490"
  },
  {
    "start": "2800000",
    "end": "2818000"
  },
  {
    "text": "authentication with f-sharp this is probably the most horrid monadic code",
    "start": "2802490",
    "end": "2807950"
  },
  {
    "text": "I've ever written but it does exactly one thing and it's just a library so you'd never have to read this code",
    "start": "2807950",
    "end": "2813980"
  },
  {
    "text": "because it follows the specification as tested you can run web shop run solve if",
    "start": "2813980",
    "end": "2820220"
  },
  {
    "start": "2818000",
    "end": "2831000"
  },
  {
    "text": "you wanted to because love is also an a wind server and of course that means you",
    "start": "2820220",
    "end": "2826460"
  },
  {
    "text": "can run identity server of course Laurie",
    "start": "2826460",
    "end": "2833450"
  },
  {
    "start": "2831000",
    "end": "2843000"
  },
  {
    "text": "the logging framework I mentioned you can do metrics and logging from your client side and push them into solve and",
    "start": "2833450",
    "end": "2839180"
  },
  {
    "text": "then push them into your logging back-end there is also this previous",
    "start": "2839180",
    "end": "2845900"
  },
  {
    "start": "2843000",
    "end": "2871000"
  },
  {
    "text": "talk about building a chat with hope a con job which goes into how to use an",
    "start": "2845900",
    "end": "2853700"
  },
  {
    "text": "old invention 40 years ago no actually 20 years ago called concurrent and now which we now have a",
    "start": "2853700",
    "end": "2860450"
  },
  {
    "text": "porters to f-sharp called her pack so lots more what about the future I",
    "start": "2860450",
    "end": "2868370"
  },
  {
    "text": "want to increase uptake that's why I'm standing here I'm going to look at GC",
    "start": "2868370",
    "end": "2873650"
  },
  {
    "text": "performances issues and also how we can make a nicer passer because what you",
    "start": "2873650",
    "end": "2879470"
  },
  {
    "text": "want from a system like this is isomorphic code you want something that",
    "start": "2879470",
    "end": "2885380"
  },
  {
    "text": "those sends and receives with similar logic so then you might as well join",
    "start": "2885380",
    "end": "2892040"
  },
  {
    "text": "infuse your HTTP client with your server and had something which tests end-to-end",
    "start": "2892040",
    "end": "2899210"
  },
  {
    "text": "in your unit test with this pattern server as a test",
    "start": "2899210",
    "end": "2906220"
  },
  {
    "start": "2905000",
    "end": "2947000"
  },
  {
    "text": "going to look into distributed persistent channels similar to what elixir does so that you can have a load",
    "start": "2907099",
    "end": "2913099"
  },
  {
    "text": "balanced chat server that keeps track of each clan connection in case one goes down and also on that client connection",
    "start": "2913099",
    "end": "2920569"
  },
  {
    "text": "what subscriptions we've had and what position of the log it had already read making channels our first primitive in",
    "start": "2920569",
    "end": "2929229"
  },
  {
    "text": "building web applications so it's really trying to take it to the next level of distributed systems so with all of these",
    "start": "2929229",
    "end": "2936319"
  },
  {
    "text": "we're looking for yeah documentation we're looking into protocols this is the",
    "start": "2936319",
    "end": "2945470"
  },
  {
    "text": "client and server we could do some really nice testing if we did this in",
    "start": "2945470",
    "end": "2953289"
  },
  {
    "start": "2952000",
    "end": "2963000"
  },
  {
    "text": "the end it comes down to speeding up the development with higher quality code",
    "start": "2953349",
    "end": "2958809"
  },
  {
    "text": "that's what I want to have as a takeaway from here and if one of you is",
    "start": "2958809",
    "end": "2965299"
  },
  {
    "start": "2963000",
    "end": "2984000"
  },
  {
    "text": "interested in sponsoring salt perhaps as a company patron that would be very",
    "start": "2965299",
    "end": "2970339"
  },
  {
    "text": "appreciated we could combine it with courses and you'd expect to see",
    "start": "2970339",
    "end": "2976809"
  },
  {
    "text": "development speed ups and that's from experience and not from other companies as well so come talk to me you can reach",
    "start": "2976809",
    "end": "2986089"
  },
  {
    "start": "2984000",
    "end": "3017000"
  },
  {
    "text": "me here Hayate q2 or on twitter so thank you",
    "start": "2986089",
    "end": "2991269"
  },
  {
    "text": "very much so now do you have any",
    "start": "2991269",
    "end": "3002229"
  },
  {
    "text": "questions before everyone leaves all",
    "start": "3002229",
    "end": "3012460"
  },
  {
    "text": "right well thank you for coming",
    "start": "3012460",
    "end": "3015749"
  }
]