[
  {
    "text": "ready when you are oh there we are splendid hello good afternoon everyone my name is guy davidson i am the head of engineering",
    "start": "7040",
    "end": "14000"
  },
  {
    "text": "practice at creative assembly creative assembly is the uk's certainly oldest",
    "start": "14000",
    "end": "19199"
  },
  {
    "text": "and possibly largest game development studio i've been there for about 22 years now i was employee i think about",
    "start": "19199",
    "end": "25359"
  },
  {
    "text": "number 30 there's about well we're getting on for 900 now um it's a great place to work so you",
    "start": "25359",
    "end": "31039"
  },
  {
    "text": "know do look out for it when it comes to your next employment decision okay",
    "start": "31039",
    "end": "36880"
  },
  {
    "text": "i'm the author of beautiful c plus plus uh which was co-edited by kate gregory that book is not available just yet so",
    "start": "36880",
    "end": "44399"
  },
  {
    "text": "this is a very very early talk it's a book about the core guidelines",
    "start": "44399",
    "end": "49760"
  },
  {
    "text": "which if any of you are really carefully deeply studying c plus will know all about",
    "start": "49760",
    "end": "55760"
  },
  {
    "text": "i'm going to tell you about writing this book and what it revealed to me about the core guidelines themselves so",
    "start": "55760",
    "end": "61199"
  },
  {
    "text": "there's two things i'm going to tell you about the core guidelines but i'm also going to tell you about the process of writing a book",
    "start": "61199",
    "end": "66320"
  },
  {
    "text": "um it's an extraordinary thing to do and i'd like to inspire you to become",
    "start": "66320",
    "end": "72320"
  },
  {
    "text": "technical authors and to write books as well um you will learn plenty about your subject just by writing it gathering it",
    "start": "72320",
    "end": "78560"
  },
  {
    "text": "all together putting it into a book you probably won't earn very much i'm told so don't do it for the money",
    "start": "78560",
    "end": "84840"
  },
  {
    "text": "um do it for the love do it for the subject matter",
    "start": "84840",
    "end": "89920"
  },
  {
    "text": "um besides being head of engineering practice and an author and now a trainer i also co-founded hash include c plus um",
    "start": "89920",
    "end": "97759"
  },
  {
    "text": "i would like to mention this briefly because the biggest problem that we have in the c plus plus community right now",
    "start": "97759",
    "end": "103840"
  },
  {
    "text": "is that there are more problems to solve than engineers to solve them",
    "start": "103840",
    "end": "109520"
  },
  {
    "text": "especially right now we need problem solvers to work on the really hard problems",
    "start": "109520",
    "end": "114799"
  },
  {
    "text": "historically software engineering has been a very inclusive environment margaret hamilton who's heard of",
    "start": "114799",
    "end": "120479"
  },
  {
    "text": "margaret hamilton not enough of you margaret hamilton she was the director",
    "start": "120479",
    "end": "127119"
  },
  {
    "text": "of the software engineering division of the massachusetts institute of technology instrumentation laboratory",
    "start": "127119",
    "end": "133840"
  },
  {
    "text": "they developed the onboard flight software for nasa's apollo uh apollo program and she's one of the people credited with coining the term",
    "start": "133840",
    "end": "140480"
  },
  {
    "text": "software engineering so yay ladies",
    "start": "140480",
    "end": "145840"
  },
  {
    "text": "but we appear now to be heavily biased towards white men",
    "start": "145840",
    "end": "150160"
  },
  {
    "text": "can't deny it we really are um we've got very low gender and ethnicity",
    "start": "151440",
    "end": "156720"
  },
  {
    "text": "diversity in the c plus plus programming community actually in the entire programming community and we as a",
    "start": "156720",
    "end": "162160"
  },
  {
    "text": "species need to fix this and if you're interested in helping please visit the website join the discord server",
    "start": "162160",
    "end": "168400"
  },
  {
    "text": "help me change the world thanks very much now i've divided the talking to five sections",
    "start": "168400",
    "end": "173840"
  },
  {
    "text": "another book choosing the guidelines tour of the contents emerging themes and production",
    "start": "173840",
    "end": "179840"
  },
  {
    "text": "i'm hoping to get through the talk in 50 minutes which will leave time for questions but yesterday it took me 72 minutes to do the talk so",
    "start": "179840",
    "end": "186800"
  },
  {
    "text": "do bear with me but uh another book doesn't the world have enough c plus plus books",
    "start": "186800",
    "end": "194080"
  },
  {
    "text": "it has a lot a lot a lot i searched on amazon i found well i didn't find amazon",
    "start": "194080",
    "end": "200000"
  },
  {
    "text": "told me ah 10 000 plus entries in c plus plus books",
    "start": "200000",
    "end": "205680"
  },
  {
    "text": "and we have been yes and we have been around for over 30 years there's been people been publishing books for over 30 years on c plus plus",
    "start": "205680",
    "end": "212319"
  },
  {
    "text": "so you would expect them to accumulate and c plus changes every three years it becomes a new language as we release a",
    "start": "212319",
    "end": "218480"
  },
  {
    "text": "new standard but some things are unchanging not just within c plus but within",
    "start": "218480",
    "end": "224400"
  },
  {
    "text": "programming itself all programming languages are trying to",
    "start": "224400",
    "end": "229519"
  },
  {
    "text": "they're trying to turn a human idea into a concrete model",
    "start": "229519",
    "end": "234640"
  },
  {
    "text": "so how do we apply those common themes to c plus well an attempt was made by beyonce strip he is the designer of c",
    "start": "234720",
    "end": "241920"
  },
  {
    "text": "plus plus and herb sutter who was the convener of the standards body that governs the development of c plus plus",
    "start": "241920",
    "end": "248879"
  },
  {
    "text": "and they wanted to summarize best practice so they launched this attempt in 2015 at cppcon the top two",
    "start": "248879",
    "end": "257040"
  },
  {
    "text": "links are the keynotes that they delivered that year the guidelines provide excellent simple",
    "start": "257040",
    "end": "263199"
  },
  {
    "text": "advice for improving your c-plus plus improving your style such that you can",
    "start": "263199",
    "end": "268639"
  },
  {
    "text": "write correct um performance and efficient code at your first attempt",
    "start": "268639",
    "end": "275120"
  },
  {
    "text": "to excuse me i want to turn the microphone down a little bit i'm about to blow my nose",
    "start": "275120",
    "end": "281800"
  },
  {
    "text": "there we are sorry about this this is my first time in norway it's a",
    "start": "284880",
    "end": "290320"
  },
  {
    "text": "little colder than i'm used to and it appears to be anyway um the core guidelines they're the",
    "start": "290320",
    "end": "297440"
  },
  {
    "text": "evolving um evolving guide that c plus plus practitioners need it's available on github pull requests are welcome",
    "start": "297440",
    "end": "304880"
  },
  {
    "text": "they really are and there are a lot of guidelines a lot dozens hundreds",
    "start": "304880",
    "end": "309919"
  },
  {
    "text": "hundreds of thousands tens millions billions have gotten there well there",
    "start": "309919",
    "end": "314960"
  },
  {
    "text": "are a lot of guidelines that's the point um they're divided into 22 sections and",
    "start": "314960",
    "end": "320720"
  },
  {
    "text": "those sections have names like interfaces functions concurrency and parallelism",
    "start": "320720",
    "end": "326479"
  },
  {
    "text": "performance enumerations all these kind of big picture topics now a couple of years after they were",
    "start": "326479",
    "end": "332160"
  },
  {
    "text": "launched kate gregory did a talk at cppcon she gave a presentation about them",
    "start": "332160",
    "end": "337680"
  },
  {
    "text": "although she gave a talk about 10 of them again that's the link at the top go and watch it it will change your life if",
    "start": "337680",
    "end": "343039"
  },
  {
    "text": "you haven't already seen it and these are the 10 that she divided she decided were really um",
    "start": "343039",
    "end": "348639"
  },
  {
    "text": "important and that would immediately deliver benefit to your coding",
    "start": "348639",
    "end": "353840"
  },
  {
    "text": "now at around this time i was just starting to get involved with the c plus plus community with a committee myself",
    "start": "354240",
    "end": "359759"
  },
  {
    "text": "um our first meeting i attended was in toronto and that's where i actually met kate",
    "start": "359759",
    "end": "365120"
  },
  {
    "text": "and it was also where we initially talked about the lack of diversity in the c plus plus community in a bar",
    "start": "365120",
    "end": "370479"
  },
  {
    "text": "nearby where all the meetings were had and we we kind of accidentally conceived the hash include group um i'll tell you the",
    "start": "370479",
    "end": "377039"
  },
  {
    "text": "story one day not here anyway i was looking for everything that i could to improve my teaching outside",
    "start": "377039",
    "end": "382800"
  },
  {
    "text": "of engineering practice i tell people how to write good code or advise or lead in roughly the right",
    "start": "382800",
    "end": "389199"
  },
  {
    "text": "direction now she divided her talk into these five sections with two guidelines each",
    "start": "389199",
    "end": "395440"
  },
  {
    "text": "and i was quite taken by the talk and even if you don't read our book you should at least watch that talk look at a presentation",
    "start": "395440",
    "end": "403120"
  },
  {
    "text": "now in the early months of 2020 kate put out a call on the hash include discord um and the gist of the message",
    "start": "403120",
    "end": "410400"
  },
  {
    "text": "was would anyone like to write a book with me um and i raised my hand i thought this would be interesting",
    "start": "410400",
    "end": "416000"
  },
  {
    "text": "what you know it'll be fun what could possibly go wrong a friend of hers from the far east",
    "start": "416000",
    "end": "421280"
  },
  {
    "text": "wanted to publish a book based on this presentation because it was such a golden presentation",
    "start": "421280",
    "end": "427120"
  },
  {
    "text": "but there was no rush of volunteers there was just me so it looks like she and i would be co-authoring now",
    "start": "427120",
    "end": "434800"
  },
  {
    "text": "i have a confession to make i should point out right now that this wasn't the book that",
    "start": "434800",
    "end": "439919"
  },
  {
    "text": "i actually wanted to write uh i had been to a presentation by josh los binoso at cppcon in 2019",
    "start": "439919",
    "end": "448639"
  },
  {
    "text": "now he inspired me to write he was talking about the book that he'd written now i'm a games developer i want to",
    "start": "448639",
    "end": "454319"
  },
  {
    "text": "write a book about teaching c plus to people who want to write games using game development as",
    "start": "454319",
    "end": "459919"
  },
  {
    "text": "a vehicle to convey how to learn c plus it's um it's a different",
    "start": "459919",
    "end": "466560"
  },
  {
    "text": "sort of it's a different media to other c plus plus development environments and i know that everyone says this oh we do",
    "start": "466560",
    "end": "471759"
  },
  {
    "text": "things differently here everyone thinks they're the unique special snowflake of c plus development that's unlike every other",
    "start": "471759",
    "end": "478720"
  },
  {
    "text": "um so i've got some questions for you i want a show of hands who here writes unit tests",
    "start": "478720",
    "end": "484639"
  },
  {
    "text": "oh that is yeah we don't we're trying we're trying to start writing unit tests but it seems to be",
    "start": "484639",
    "end": "491280"
  },
  {
    "text": "very rare in game dev who builds their solutions more than",
    "start": "491280",
    "end": "497199"
  },
  {
    "text": "30 times a day more than 50 times a day",
    "start": "497199",
    "end": "503280"
  },
  {
    "text": "okay are you in game dev no okay um i can expect to build my entire stack",
    "start": "503280",
    "end": "511120"
  },
  {
    "text": "more than 100 times a day it's a lot of times so",
    "start": "511120",
    "end": "516240"
  },
  {
    "text": "things like compilation speed really really really matter to us a lot",
    "start": "516240",
    "end": "521760"
  },
  {
    "text": "who here catches exceptions that's interesting there was a survey",
    "start": "521760",
    "end": "528800"
  },
  {
    "text": "done a couple of years ago by the sea floods foundation which suggested that it's about 50 50 but",
    "start": "528800",
    "end": "534399"
  },
  {
    "text": "this room seems to be more like sort of 80 20 if that",
    "start": "534399",
    "end": "539600"
  },
  {
    "text": "that's 80 you don't catch exceptions who here writes in more than one language on a daily basis on a weekly",
    "start": "539600",
    "end": "545920"
  },
  {
    "text": "basis it's all c plus plus for us that's about a third of you it's all c plus for us we",
    "start": "545920",
    "end": "552640"
  },
  {
    "text": "do use a bit of lua sometimes uh for scripting for the designers who aren't really writing code so there's a lure",
    "start": "552640",
    "end": "557920"
  },
  {
    "text": "interpretation going on now there are a lot of programming books",
    "start": "557920",
    "end": "563200"
  },
  {
    "text": "out there um so i remember buying a unix programming book it was an addison wesley hardback",
    "start": "563200",
    "end": "570080"
  },
  {
    "text": "um with over 700 pages most of smaller than that i didn't want to write a 700 page book kate didn't",
    "start": "570080",
    "end": "576080"
  },
  {
    "text": "want to write a 700 page book and we decided the book should be about 250 pages that seemed like a good number",
    "start": "576080",
    "end": "583680"
  },
  {
    "text": "and i wondered if each chapter could be like a blog entry sort of examining individual individual guidelines our",
    "start": "583680",
    "end": "590480"
  },
  {
    "text": "original publisher was also keen that each chapter be accompanied by an introductory video explaining the",
    "start": "590480",
    "end": "596959"
  },
  {
    "text": "chapter and that this video should be about 10 minutes long which i found alarming since it would take about 15",
    "start": "596959",
    "end": "602959"
  },
  {
    "text": "minutes to read a blog entry um i said that to one side but this was a",
    "start": "602959",
    "end": "609040"
  },
  {
    "text": "regular feature of their imprint it's very popular apparently in the far east in east asia we looked at some books",
    "start": "609040",
    "end": "615519"
  },
  {
    "text": "we counted the words on the page and we realized that about 90 000 words were required",
    "start": "615519",
    "end": "622000"
  },
  {
    "text": "that's 3000 words per chapter seems like a good length which leaves us with 30 items and you might be thinking this doesn't",
    "start": "622000",
    "end": "627920"
  },
  {
    "text": "sound very scientific and it wasn't we were just making this up as we went along it was yeah these seem like good numbers",
    "start": "627920",
    "end": "634399"
  },
  {
    "text": "great yeah let's do that brilliant um and once we arrived at that we waited",
    "start": "634399",
    "end": "639680"
  },
  {
    "text": "for a contract um now you may remember that during the spring of 2020 things went a bit wrong",
    "start": "639680",
    "end": "645760"
  },
  {
    "text": "in the far everywhere everywhere entirely so this wasn't a great time in fact when",
    "start": "645760",
    "end": "650800"
  },
  {
    "text": "lockdown hit i was sent home and i've been working from home ever since it's been over 18 months now for me",
    "start": "650800",
    "end": "657760"
  },
  {
    "text": "but i was able to turn a room into a study unfortunate like that and suddenly i had an extra two hours in",
    "start": "657760",
    "end": "663600"
  },
  {
    "text": "my day because i wasn't commuting the weather was remarkably fabulous in",
    "start": "663600",
    "end": "669760"
  },
  {
    "text": "the uk suddenly it was prematurely warm and some people thought god is playing the sims",
    "start": "669760",
    "end": "676000"
  },
  {
    "text": "you lock everybody up and then you turn the temperature up it's a perfect sims move you should all play the sims it's a",
    "start": "676000",
    "end": "682000"
  },
  {
    "text": "laugh i took up running",
    "start": "682000",
    "end": "686640"
  },
  {
    "text": "and if you know me well or have glanced at my general bulk you'll realize that was also quite an extraordinary turn of",
    "start": "687040",
    "end": "692720"
  },
  {
    "text": "affairs um but i was delighted for this extra time i thought i'll get this book out in no",
    "start": "692720",
    "end": "698880"
  },
  {
    "text": "time it'd be fantastic but i didn't want to start without a contract because you know",
    "start": "698880",
    "end": "704160"
  },
  {
    "text": "and i use my extra time to catch up on reading playing the piano i'm studying for my grade 8 piano exams right now i",
    "start": "704160",
    "end": "709360"
  },
  {
    "text": "started reading fiction i hadn't read fiction for a decade i've been reading papers and journals ever since being on",
    "start": "709360",
    "end": "716560"
  },
  {
    "text": "the committee carries a huge reading workload six times a year you get a mailing which",
    "start": "716560",
    "end": "721920"
  },
  {
    "text": "it's bigger than the bible it's bigger than the works of shakespeare so i spent most of my time reading non-fiction",
    "start": "721920",
    "end": "727760"
  },
  {
    "text": "um and we really did quite wait quite a long time for that final contract uh",
    "start": "727760",
    "end": "733760"
  },
  {
    "text": "we got some contracts with pieces of information strategically missing such as how much money we'd actually get how",
    "start": "733760",
    "end": "740320"
  },
  {
    "text": "many copies would be printed that sort of thing and the months rolled by and meanwhile we worked on the general",
    "start": "740320",
    "end": "746639"
  },
  {
    "text": "content of the book over the summer what the shape would be kate lives in canada i live in the uk i",
    "start": "746639",
    "end": "752079"
  },
  {
    "text": "live on the south coast in brighton and hove it's lovely and we were exchanging emails while discussing the awful state of the world",
    "start": "752079",
    "end": "759040"
  },
  {
    "text": "um bitcoin was going weird markets were being unpredictable suddenly everybody had heard of zoom",
    "start": "759040",
    "end": "765600"
  },
  {
    "text": "but we had to choose 30 guidelines from the huge set available to us and this wasn't a trivial task",
    "start": "766240",
    "end": "771680"
  },
  {
    "text": "the core guidelines they're not designed to be read from top to bottom like a textbook it's it's an encyclopedia each",
    "start": "771680",
    "end": "777680"
  },
  {
    "text": "guideline is identified by its section and is placed within the section so here's a guideline nl.8 use consistent",
    "start": "777680",
    "end": "784480"
  },
  {
    "text": "naming style so this is item 8 from the 22nd section naming and layout nl rules",
    "start": "784480",
    "end": "791440"
  },
  {
    "text": "it's not the 8th item there is no nl6 it's an evolving guideline nl6 was",
    "start": "791440",
    "end": "796720"
  },
  {
    "text": "withdrawn now one approach to reading the guidelines is to simply address the section when it becomes",
    "start": "796720",
    "end": "802079"
  },
  {
    "text": "relevant to the problem at hand for example are you writing a function something you'll do quite a lot in c",
    "start": "802079",
    "end": "807839"
  },
  {
    "text": "plus plus um perhaps you might like to review section f functions and there are nearly",
    "start": "807839",
    "end": "813360"
  },
  {
    "text": "40 advisories in there some are obvious f.3",
    "start": "813360",
    "end": "818880"
  },
  {
    "text": "i don't know why this is only number three but f.3 states keep functions short and simple",
    "start": "818880",
    "end": "825279"
  },
  {
    "text": "any controversy there anybody want to stand for long complex functions none of you not one brilliant i'm",
    "start": "825279",
    "end": "831760"
  },
  {
    "text": "delighted to hear that but some are more subtle f.53 states and i need to read this out",
    "start": "831760",
    "end": "838320"
  },
  {
    "text": "avoid capturing by reference in lambdas that will be used non-locally including",
    "start": "838320",
    "end": "844000"
  },
  {
    "text": "returned stored on the heap or passed to another thread you all got that",
    "start": "844000",
    "end": "849440"
  },
  {
    "text": "we all do that don't we yeah great so i want to talk about the problems",
    "start": "849440",
    "end": "854480"
  },
  {
    "text": "that we face as engineers because our job is to solve problems by writing software we have a number of things to take into",
    "start": "854480",
    "end": "860480"
  },
  {
    "text": "account how long must the software run before restart or shut down how long must the software run",
    "start": "860480",
    "end": "867680"
  },
  {
    "text": "before it will be replaced or upgraded",
    "start": "867680",
    "end": "872560"
  },
  {
    "text": "who else will service the code base and this last one is probably the most",
    "start": "873120",
    "end": "879040"
  },
  {
    "text": "important one when it comes to writing code because how much time do you want to spend being asked questions about your",
    "start": "879040",
    "end": "885519"
  },
  {
    "text": "code um are you able to affect a clean exit from the code base and leave it to",
    "start": "885519",
    "end": "890560"
  },
  {
    "text": "somebody else that's the dream for a lot of us i can tell you one of the problems with c-plus plus is",
    "start": "890560",
    "end": "896240"
  },
  {
    "text": "it's full of interesting sort of nooks and crannies and strange corner cases and we accumulate a history",
    "start": "896240",
    "end": "903920"
  },
  {
    "text": "with each release of the standard although the language is getting simpler for newcomers as time goes on because we",
    "start": "903920",
    "end": "909680"
  },
  {
    "text": "iron some of these out those of us who've been using it for a long time and i've been using it for over 30 years now",
    "start": "909680",
    "end": "916800"
  },
  {
    "text": "we have to unlearn some things and learn these new features stay current use the latest idioms and",
    "start": "916800",
    "end": "923199"
  },
  {
    "text": "paradigms since we're only choosing 30 guidelines they need to be quite immediate and not",
    "start": "923199",
    "end": "930079"
  },
  {
    "text": "too obvious i can't write 3000 words about keep function short and simple i can i can witter on endlessly but it's",
    "start": "930079",
    "end": "936720"
  },
  {
    "text": "not it's not good reading it's not good text if i could find direct personal experience in the telling then that",
    "start": "936720",
    "end": "942639"
  },
  {
    "text": "would be so much the better so the other constraint we gave ourselves was to match kate's presentation structure",
    "start": "942639",
    "end": "949600"
  },
  {
    "text": "and as i mentioned earlier five themes we needed to parse the guidelines and see",
    "start": "949600",
    "end": "954720"
  },
  {
    "text": "which if any of the guidelines would actually fit into them",
    "start": "954720",
    "end": "960000"
  },
  {
    "text": "so here's an example where would you put performance.19",
    "start": "960000",
    "end": "965040"
  },
  {
    "text": "access memory predictably all right show of hands",
    "start": "965040",
    "end": "971279"
  },
  {
    "text": "number two don't hurt yourself actually yeah maybe so",
    "start": "971279",
    "end": "976800"
  },
  {
    "text": "the thing is i look at these all right who thinks we're going bike shedding is bad which is all about making pointless decisions about things that we all know",
    "start": "976800",
    "end": "983199"
  },
  {
    "text": "about well stop using that or use this new thing properly how about all right",
    "start": "983199",
    "end": "989759"
  },
  {
    "text": "define operations on enumerations for safe and simple use where would you put that number two as well",
    "start": "989759",
    "end": "997839"
  },
  {
    "text": "you're spoiling this part of the presentation that's actually a really good idea ah these are so much harder last night when i was thinking all right",
    "start": "999279",
    "end": "1005120"
  },
  {
    "text": "use templates to express syntax tree manipulation where would you put that",
    "start": "1005120",
    "end": "1010920"
  },
  {
    "text": "no it's all right i it's not it's not easy i don't know where i put that so some of the guidelines were",
    "start": "1012399",
    "end": "1018399"
  },
  {
    "text": "eliminated just through not being able to shoehorn them into the presentation but as i said there's hundreds of the things so we weren't too upset",
    "start": "1018399",
    "end": "1024959"
  },
  {
    "text": "at not being able to cover them all but an additional constraint was that we had to find guidelines that we were",
    "start": "1024959",
    "end": "1030000"
  },
  {
    "text": "passionate about okay i did not relish the idea of writing 3000 words about f.56 avoid",
    "start": "1030000",
    "end": "1037120"
  },
  {
    "text": "unnecessary condition nesting yeah all right",
    "start": "1037120",
    "end": "1042880"
  },
  {
    "text": "r.13 perform at most one explicit resource allocation and a single expression statement it doesn't set me",
    "start": "1042880",
    "end": "1048799"
  },
  {
    "text": "on fire both of these i mean they're good advice but it's difficult to you know envision",
    "start": "1048799",
    "end": "1054400"
  },
  {
    "text": "getting truly excited about it if i'm not excited the reader won't be",
    "start": "1054400",
    "end": "1059760"
  },
  {
    "text": "excited either and i know that you know textbooks don't necessarily strive to be exciting but if",
    "start": "1059760",
    "end": "1066000"
  },
  {
    "text": "i'm paying 45 or pounds or euros they're almost all the same now anyway",
    "start": "1066000",
    "end": "1071600"
  },
  {
    "text": "for a book um the least the author can do is engage me",
    "start": "1071600",
    "end": "1077039"
  },
  {
    "text": "especially if it's not a comprehensive treatment of the subject and this certainly isn't this is not a book on learning c plus this is a book",
    "start": "1077039",
    "end": "1083280"
  },
  {
    "text": "on some of the core guidelines my next one that's a book on learning c",
    "start": "1083280",
    "end": "1088559"
  },
  {
    "text": "plus this is a book of advice it needs to land on you and stick with you",
    "start": "1088559",
    "end": "1094640"
  },
  {
    "text": "so after a fair amount of backing and forthing we decided to stick with kate items and add another four to each section",
    "start": "1094640",
    "end": "1101600"
  },
  {
    "text": "so kate started piling up responsibilities outside the book so i agreed to write the new ones and she would write",
    "start": "1101600",
    "end": "1107280"
  },
  {
    "text": "the ones that she'd already spoken of so i had a 60 writing burden so what i'm going to do",
    "start": "1107280",
    "end": "1113520"
  },
  {
    "text": "is i'm going to give you a quick tour of these 30 items i am mindful that this is the session immediately after lunch",
    "start": "1113520",
    "end": "1121120"
  },
  {
    "text": "one of the things that happens in sessions immediately after lunch is people start to nod off that's fine okay i can't avoid not",
    "start": "1121120",
    "end": "1127840"
  },
  {
    "text": "talking about the book i've got a wall of text here if you feel like nodding off i'll i'll survive don't worry",
    "start": "1127840",
    "end": "1136000"
  },
  {
    "text": "this is a fact of conference life the post lunchtime session is the sleepy one",
    "start": "1136000",
    "end": "1141360"
  },
  {
    "text": "bike shedding is bad so we present guidelines which allow you to simply make a decision about when to do a or b for some",
    "start": "1141360",
    "end": "1148640"
  },
  {
    "text": "particular set of a's and b's and then just move on with the minimum of fuss and argument it actually comes from um",
    "start": "1148640",
    "end": "1154640"
  },
  {
    "text": "the word bike shooting it derives from uh has anybody heard of c northcote parkinson he's an american writer",
    "start": "1154640",
    "end": "1161679"
  },
  {
    "text": "quite popular in anglophone nations but he has something called the law of triviality",
    "start": "1161679",
    "end": "1167520"
  },
  {
    "text": "and this is an argument that organization members typically give disproportionate weight to trivial",
    "start": "1167520",
    "end": "1172640"
  },
  {
    "text": "issues such as the color to paint a bike shared compared to the testing criteria for the nuclear",
    "start": "1172640",
    "end": "1179520"
  },
  {
    "text": "power station that the bikes the bike shed is attached to um because it's the one thing everyone",
    "start": "1179520",
    "end": "1184960"
  },
  {
    "text": "knows something about we all know about the color of things so we're all more inclined to argue about it so that's",
    "start": "1184960",
    "end": "1190160"
  },
  {
    "text": "what bike shedding is and it's a miserable pursuit so in the first guideline i exhort everyone to write in iso standard c plus",
    "start": "1190160",
    "end": "1197200"
  },
  {
    "text": "plus you know and this is this is hardly controversial you know we've gone to great lengths to standardize the",
    "start": "1197200",
    "end": "1203200"
  },
  {
    "text": "language we really have so please use the standard and so i cover the history of the standardization",
    "start": "1203200",
    "end": "1209440"
  },
  {
    "text": "the features that c plus plus has acquired along the way um backwards and forwards compatibility",
    "start": "1209440",
    "end": "1215600"
  },
  {
    "text": "um the wider communities of practitioners and teachers of bloggers and writers and",
    "start": "1215600",
    "end": "1221280"
  },
  {
    "text": "conference speakers and all that sort of thing it's a gentle introduction to the whole it's the whole shebang and then i move",
    "start": "1221280",
    "end": "1227520"
  },
  {
    "text": "on to different ways of reusing a function name via overloading and via default arguments",
    "start": "1227520",
    "end": "1233360"
  },
  {
    "text": "between which you should prefer the latter no prefer default arguments ah",
    "start": "1233360",
    "end": "1241679"
  },
  {
    "text": "prefer default arguments okay do that so who can explain the rules hands up",
    "start": "1241679",
    "end": "1247440"
  },
  {
    "text": "who can explain the rules for overload resolution no it's horrible isn't it um",
    "start": "1247440",
    "end": "1254799"
  },
  {
    "text": "during interviews i ask candidates that i don't particularly like to rate their skills out of 10",
    "start": "1254799",
    "end": "1260320"
  },
  {
    "text": "and occasionally one of them will say yeah i reckon i'm an eight so i'll ask them please explain the rules of overload resolution and and",
    "start": "1260320",
    "end": "1267280"
  },
  {
    "text": "they say maybe i'm a seven or a four um overloading should be chosen with great",
    "start": "1267280",
    "end": "1273360"
  },
  {
    "text": "care it's not at all trivial right constructing objects that is a rich source of",
    "start": "1273360",
    "end": "1279600"
  },
  {
    "text": "programmer error it really really is um habitually older paradigms would have",
    "start": "1279600",
    "end": "1285679"
  },
  {
    "text": "you create an object and then modify it once you created it i'm hoping none of you do that but you'll still find it in",
    "start": "1285679",
    "end": "1291200"
  },
  {
    "text": "code it's i think it has a name something like uh well default construct and initialize or build and",
    "start": "1291200",
    "end": "1297600"
  },
  {
    "text": "initialize or allocate then initialize or something like that",
    "start": "1297600",
    "end": "1302000"
  },
  {
    "text": "this guideline tries to persuade you to initialize objects as early as possible before even the initializer list of the",
    "start": "1303280",
    "end": "1309679"
  },
  {
    "text": "constructor by using member initializers and then the maintainer and the client",
    "start": "1309679",
    "end": "1315039"
  },
  {
    "text": "can see that there is a well-defined state for the default object if such a thing is appropriate i",
    "start": "1315039",
    "end": "1320320"
  },
  {
    "text": "actually don't like default objects and default constructors they kind of need to exist i think they",
    "start": "1320320",
    "end": "1325440"
  },
  {
    "text": "should be the exception not the rule",
    "start": "1325440",
    "end": "1329360"
  },
  {
    "text": "getters and setters so these have been a bug bear of mine for many many years um",
    "start": "1331440",
    "end": "1336880"
  },
  {
    "text": "this chapter is where the heat and the meat start to become apparent in the book",
    "start": "1336880",
    "end": "1342159"
  },
  {
    "text": "um because we talk about encapsulation and abstraction and class invariance all of these things sort of emerge from not",
    "start": "1342159",
    "end": "1349039"
  },
  {
    "text": "using getters and setters and the proper naming of member functions using nouns and verbs and it's",
    "start": "1349039",
    "end": "1354799"
  },
  {
    "text": "great to be able to call back to the keynotes nouns and verbs are really important they're great ways of identifying functions member",
    "start": "1354799",
    "end": "1361520"
  },
  {
    "text": "functions in classes if your non-const functions are verbs they do things they change things if your const member",
    "start": "1361520",
    "end": "1367600"
  },
  {
    "text": "functions are nouns they tell you things about what the object is it'll make your",
    "start": "1367600",
    "end": "1373039"
  },
  {
    "text": "your comprehension of your api much easier and i also look at the model view",
    "start": "1373039",
    "end": "1378400"
  },
  {
    "text": "controller paradigm and attempt to persuade people to move away from this whole get set thing and move on to nouns and verbs",
    "start": "1378400",
    "end": "1385760"
  },
  {
    "text": "and then we move on to declaring a single name per declaration now multiple declarations on a single",
    "start": "1385760",
    "end": "1391919"
  },
  {
    "text": "line also annoy me um it's a hangover from the days of c when you see int and then",
    "start": "1391919",
    "end": "1399679"
  },
  {
    "text": "then they declare six objects right away that sort of highlights a",
    "start": "1399840",
    "end": "1405440"
  },
  {
    "text": "potential abstraction if you've gathered these things together for a good reason then the chances are you've actually got",
    "start": "1405440",
    "end": "1410559"
  },
  {
    "text": "an entire object there that means means something separate from that just that line of code and it's utility within the",
    "start": "1410559",
    "end": "1417120"
  },
  {
    "text": "function if you're grouping names together you know why are you doing that",
    "start": "1417120",
    "end": "1423919"
  },
  {
    "text": "you're discarding the potential for unearthing and surfacing and abstraction this practice is outdated it's",
    "start": "1423919",
    "end": "1429360"
  },
  {
    "text": "unnecessary don't do that although if you have a counter example i am all ears i'm always",
    "start": "1429360",
    "end": "1435120"
  },
  {
    "text": "all ears i don't want to be so dogmatic about this but finally for section one i go into",
    "start": "1435120",
    "end": "1442000"
  },
  {
    "text": "the history of this misquoted piece of advice oh daniela what is it",
    "start": "1442000",
    "end": "1449360"
  },
  {
    "text": "do you disagree",
    "start": "1449360",
    "end": "1452000"
  },
  {
    "text": "okay good i'm pleased",
    "start": "1454480",
    "end": "1458360"
  },
  {
    "text": "[Music] yeah it is and actually um i did quite a lot of",
    "start": "1462440",
    "end": "1468400"
  },
  {
    "text": "research into this um because this is all about the sources of received wisdom",
    "start": "1468400",
    "end": "1473919"
  },
  {
    "text": "um the core guidelines for an evolving document of best practice and what was a good idea in 1998",
    "start": "1473919",
    "end": "1479279"
  },
  {
    "text": "um may no longer be a good idea now and in this in the case of single return statement methodology i go back and look",
    "start": "1479279",
    "end": "1485600"
  },
  {
    "text": "at assembly programming in the 1980s um which is where the motivation started",
    "start": "1485600",
    "end": "1490960"
  },
  {
    "text": "well actually 70s where it started to develop um",
    "start": "1490960",
    "end": "1496000"
  },
  {
    "text": "and actually this single return thing was returning to one place not returning from one place",
    "start": "1496000",
    "end": "1502559"
  },
  {
    "text": "in assembly you can return to many sorts of places depending on the shenanigans that you get up to with the call with the call stack which i used to do a lot",
    "start": "1502559",
    "end": "1509200"
  },
  {
    "text": "of and make my code completely unreadable",
    "start": "1509200",
    "end": "1515240"
  },
  {
    "text": "so in the second section don't hurt yourself we present guidelines for preventing personal injury while writing",
    "start": "1515840",
    "end": "1521120"
  },
  {
    "text": "code so you know your choices are probably pretty reasonable one of the problems with the residual",
    "start": "1521120",
    "end": "1526720"
  },
  {
    "text": "complexity of c plus is that there are several places where you can shoot yourself in the foot with",
    "start": "1526720",
    "end": "1532640"
  },
  {
    "text": "great ease for example it's legal to populate a",
    "start": "1532640",
    "end": "1537840"
  },
  {
    "text": "constructor initialization list in any order at all you can declare your initializations but there's only one",
    "start": "1537840",
    "end": "1544000"
  },
  {
    "text": "actual order your compiler will reorder those so it's never wise to do that even",
    "start": "1544000",
    "end": "1549600"
  },
  {
    "text": "though it's legal so in the first chapter i really start to get into my side about stride about",
    "start": "1549600",
    "end": "1554840"
  },
  {
    "text": "abstraction and i contrast it with encapsulation and data hiding",
    "start": "1554840",
    "end": "1560240"
  },
  {
    "text": "these are three different things these three concepts are often used interchangeably",
    "start": "1560240",
    "end": "1565520"
  },
  {
    "text": "and that's frequently at the cost of clarity um so in this chapter we build a command",
    "start": "1565520",
    "end": "1571200"
  },
  {
    "text": "line parser and we watch it bloom into a mighty complex of unmaintainable special",
    "start": "1571200",
    "end": "1576400"
  },
  {
    "text": "cases and that's often what happens with parsers special cases crop up and you think ah right well if this",
    "start": "1576400",
    "end": "1582400"
  },
  {
    "text": "oh and if this and and you end up with this massively nested function",
    "start": "1582400",
    "end": "1588720"
  },
  {
    "text": "um and suddenly through careful identification of the levels of abstraction of this parser um",
    "start": "1588720",
    "end": "1595279"
  },
  {
    "text": "a powerful parser emerges which is trivially extensible without trapping the author in maintenance nightmare at",
    "start": "1595279",
    "end": "1600559"
  },
  {
    "text": "least that's my hope read the book and you'll find out whether or not this is true",
    "start": "1600559",
    "end": "1607440"
  },
  {
    "text": "so in the second chapter we look at what happens when things start to get out of hand so similar to the first chapter",
    "start": "1608799",
    "end": "1614720"
  },
  {
    "text": "where we had a function whose implementation just burst into life here we have a function whose signature",
    "start": "1614720",
    "end": "1621120"
  },
  {
    "text": "blooms like algae on a pond rising numbers of arguments implies",
    "start": "1621120",
    "end": "1629120"
  },
  {
    "text": "scope creep it means that you're starting to ask the function to do more and more things",
    "start": "1629120",
    "end": "1634240"
  },
  {
    "text": "um never a good idea it's it blunts the meaning of the name that has been assigned to the function",
    "start": "1634240",
    "end": "1640559"
  },
  {
    "text": "when you get scope creep so as with the first chapter paying proper attention to abstraction saves",
    "start": "1640559",
    "end": "1646000"
  },
  {
    "text": "the day avi who knows what abi is who doesn't",
    "start": "1646000",
    "end": "1651039"
  },
  {
    "text": "know what api is who doesn't want to play this hands-up game okay abi",
    "start": "1651039",
    "end": "1657279"
  },
  {
    "text": "it's a contentious issue it's it means application binary interface and it stops us from making",
    "start": "1657279",
    "end": "1663360"
  },
  {
    "text": "rapid broad and sweeping changes to the standard because backwards compatibility is one of our fundamental pillars it's a",
    "start": "1663360",
    "end": "1669760"
  },
  {
    "text": "it's a pretty strong guarantee in the standard avoiding abi problems",
    "start": "1669760",
    "end": "1675360"
  },
  {
    "text": "is not a trivial matter so we discuss some of the implications of api compliance including the rather surprising impact of exception handling",
    "start": "1675360",
    "end": "1681919"
  },
  {
    "text": "and how that can impact abi initialization order does still catch",
    "start": "1681919",
    "end": "1687200"
  },
  {
    "text": "people out it needs to be drummed into students",
    "start": "1687200",
    "end": "1692960"
  },
  {
    "text": "that there really is only one order of initialization there can be only one one",
    "start": "1692960",
    "end": "1699120"
  },
  {
    "text": "the number is one it is not two nor five not ten it is one and i've had some really quite ridiculous conversations",
    "start": "1699120",
    "end": "1705600"
  },
  {
    "text": "with people um proposing things like de-initialization lists",
    "start": "1705600",
    "end": "1711840"
  },
  {
    "text": "no paired destructors destructors matching constructors that kind of thing",
    "start": "1711840",
    "end": "1718399"
  },
  {
    "text": "and other foolish ideas but there is one and only one order of initialization i explain why quite clearly and at length",
    "start": "1718399",
    "end": "1725760"
  },
  {
    "text": "in this chapter please do not ignore this next i finally grasped the nettle of",
    "start": "1725760",
    "end": "1732720"
  },
  {
    "text": "multi-threaded programming it's still hard you know it was it was pretty hard when",
    "start": "1732720",
    "end": "1738799"
  },
  {
    "text": "herb sutter wrote the free lunch is over um and it's kind of got easier but it's still pretty hard there's still a lot of",
    "start": "1738799",
    "end": "1744640"
  },
  {
    "text": "scope for getting things horribly wrong and spending an enormous amount of time trying to debug things",
    "start": "1744640",
    "end": "1751360"
  },
  {
    "text": "so one of the problems is that our toolkit in the standard library is insufficient um we should be thinking in terms of",
    "start": "1751679",
    "end": "1758000"
  },
  {
    "text": "tasks and messages really rather than sharing data all over the place data races and deadlocks are they're",
    "start": "1758000",
    "end": "1764880"
  },
  {
    "text": "simple problems to describe we all know what a data race is what a deadlock is but unfortunately that's",
    "start": "1764880",
    "end": "1770640"
  },
  {
    "text": "where the simplicity ends resolving these problems can be really quite time consuming",
    "start": "1770640",
    "end": "1776559"
  },
  {
    "text": "now i don't know how many of you recoil in terror or fill with delight at the mention of the phrase template meta",
    "start": "1776559",
    "end": "1782880"
  },
  {
    "text": "programming i personally recoil in terror i'm never pleased when i see it turning",
    "start": "1782880",
    "end": "1788799"
  },
  {
    "text": "up and the standard has expanded considerably to reduce the number of occasions on which you might actually",
    "start": "1788799",
    "end": "1794880"
  },
  {
    "text": "want to reach for template meta programming um we've got if const express we've got requires clauses and all of these reduce",
    "start": "1794880",
    "end": "1802399"
  },
  {
    "text": "the amount of template furniture that we might want to use for nefarious purposes",
    "start": "1802399",
    "end": "1808240"
  },
  {
    "text": "and this chapter provides a look at expression templates which is a popular form of meta programming it challenges",
    "start": "1808240",
    "end": "1813520"
  },
  {
    "text": "the legibility of this technique and it's very easy to challenge the legibility of expression templates",
    "start": "1813520",
    "end": "1818559"
  },
  {
    "text": "because they are utterly illegible right section three",
    "start": "1818559",
    "end": "1824480"
  },
  {
    "text": "three of five um so this section is named stop using that",
    "start": "1824480",
    "end": "1830480"
  },
  {
    "text": "it deals with parts of the language that are retained for backwards compatibility um and includes pieces of advice that",
    "start": "1830480",
    "end": "1837919"
  },
  {
    "text": "used to be value but valuable but which have been superseded by changes to the standard uh and developments in the",
    "start": "1837919",
    "end": "1843760"
  },
  {
    "text": "language because as cfos plus evolves things that seemed like a good good idea at the time occasionally revealed",
    "start": "1843760",
    "end": "1849440"
  },
  {
    "text": "themselves to be you know really rather less valuable than we originally thought",
    "start": "1849440",
    "end": "1855679"
  },
  {
    "text": "the standardization the standardization process fixes these things um",
    "start": "1855679",
    "end": "1861039"
  },
  {
    "text": "but everyone needs to stay informed about them because you might one day find yourself working on an old",
    "start": "1861039",
    "end": "1866080"
  },
  {
    "text": "old code base um c plus plus off is a guarantee of backward compatibility code written 50",
    "start": "1866080",
    "end": "1871279"
  },
  {
    "text": "years ago in c should still compile today should a bit of",
    "start": "1871279",
    "end": "1877360"
  },
  {
    "text": "anyone worked on a code base more than 30 years old oh gosh",
    "start": "1877360",
    "end": "1882880"
  },
  {
    "text": "rather more of you than that's an uncomfortable number isn't it um it's",
    "start": "1882880",
    "end": "1888159"
  },
  {
    "text": "it's really unpleasant seeing lovely new features turning up in c plus bus and then thinking ah but my i'm working with",
    "start": "1888159",
    "end": "1893360"
  },
  {
    "text": "gcc 2.3 and i will never be able to use these fabulous treasures",
    "start": "1893360",
    "end": "1899440"
  },
  {
    "text": "so i open with a discourse on ownership and what it really means um transferring ownership means",
    "start": "1899440",
    "end": "1905519"
  },
  {
    "text": "transferring responsibilities and this is not clearly signaled with",
    "start": "1905519",
    "end": "1910799"
  },
  {
    "text": "unadorned pointer or reference semantics bear point as bear references tell you nothing about ownership",
    "start": "1910799",
    "end": "1918240"
  },
  {
    "text": "so since c plus plus 11 the option for signaling this clearly and unambiguously",
    "start": "1918480",
    "end": "1923679"
  },
  {
    "text": "has been available with the advent of unique pointer sharedpointer weakpoint all of these sorts of things",
    "start": "1923679",
    "end": "1930080"
  },
  {
    "text": "actually those three things and i also properly introduced the guideline support library this is the",
    "start": "1930080",
    "end": "1935360"
  },
  {
    "text": "gsl as it's known which ships with um the microsoft compiler it's a helpful set of objects",
    "start": "1935360",
    "end": "1941519"
  },
  {
    "text": "for enforcing the core guidelines global objects are bad okay",
    "start": "1941519",
    "end": "1949640"
  },
  {
    "text": "or do you love global objects who loves global objects who thinks none of you great or maybe you don't want to play the",
    "start": "1949679",
    "end": "1955360"
  },
  {
    "text": "hands up game okay global objects are bad just believe me they really are and this knee-jerk piece of advice",
    "start": "1955360",
    "end": "1961279"
  },
  {
    "text": "though is set under the microscope for careful examination and this chapter highlights the difference between a",
    "start": "1961279",
    "end": "1966880"
  },
  {
    "text": "singleton and a singleton pattern the two are different it turns out um",
    "start": "1966880",
    "end": "1973200"
  },
  {
    "text": "you know it identifies the true nature of a global object it raises the observation that good advice doesn't",
    "start": "1973200",
    "end": "1978399"
  },
  {
    "text": "necessarily doesn't necessarily remain good advice forever um i hope that this book will be valuable",
    "start": "1978399",
    "end": "1984960"
  },
  {
    "text": "for for years to come but it would be supremely arrogant of me to assume that",
    "start": "1984960",
    "end": "1990320"
  },
  {
    "text": "this is a book of wisdom for the ages it's it certainly can't be",
    "start": "1990320",
    "end": "1995840"
  },
  {
    "text": "now i started programming around the same time that beyond started thinking about see with classes",
    "start": "1995840",
    "end": "2001360"
  },
  {
    "text": "there was a time when my hand-rolled assembly could outpace a compiler trivially easily but that's no longer",
    "start": "2001360",
    "end": "2007919"
  },
  {
    "text": "the case and it hasn't been since i don't know late 80s early 90s",
    "start": "2007919",
    "end": "2013200"
  },
  {
    "text": "and there are still coders who believe that they can outpace the compiler maybe they can outpace old compilers but",
    "start": "2013200",
    "end": "2018399"
  },
  {
    "text": "probably not today's compilers on today's processes it may be true in particular very",
    "start": "2018399",
    "end": "2024240"
  },
  {
    "text": "particular coding circumstances but functions like memset and memcopy",
    "start": "2024240",
    "end": "2030480"
  },
  {
    "text": "should be avoided unless you're dealing with buffers treating them as high-speed proxies for construction and assignment",
    "start": "2030480",
    "end": "2036399"
  },
  {
    "text": "is completely inappropriate i love const",
    "start": "2036399",
    "end": "2042399"
  },
  {
    "text": "i love const is fantastic my name is guy davidson and i love const",
    "start": "2042399",
    "end": "2049280"
  },
  {
    "text": "you love you love cats great anyone else love const come on yes const is fantastic",
    "start": "2049280",
    "end": "2057040"
  },
  {
    "text": "casting it away is an awful thing to do it really really is so in this chapter i",
    "start": "2057040",
    "end": "2062398"
  },
  {
    "text": "cover the value of being able to divide a class interface by constant non-const functions",
    "start": "2062399",
    "end": "2068240"
  },
  {
    "text": "to give a view and control interface your view interfaces your const functions your control interfaces your non-const functions",
    "start": "2068240",
    "end": "2074800"
  },
  {
    "text": "nouns and verbs again um it saved our bacon during the development of rome total war back in the early naughties",
    "start": "2074800",
    "end": "2081358"
  },
  {
    "text": "um the early part of this century i get to talk about the last century quite a lot",
    "start": "2081359",
    "end": "2086638"
  },
  {
    "text": "during the book which is when i started programming it's 2021. it's fatally disturbing last century",
    "start": "2086639",
    "end": "2093280"
  },
  {
    "text": "work error handling that's the achilles heel of c-plus plus we still haven't got it universally",
    "start": "2093280",
    "end": "2099200"
  },
  {
    "text": "loved and adored we don't have consistent error handling strategies in fact we have plenty of error handling strategies",
    "start": "2099200",
    "end": "2105359"
  },
  {
    "text": "and besides the original global state of erno i describe them all",
    "start": "2105359",
    "end": "2112799"
  },
  {
    "text": "i consider a variety of other options but ultimately this isn't a happy chapter",
    "start": "2113440",
    "end": "2120079"
  },
  {
    "text": "right don't write using namespace but globalscope in the header file so we look at using directives these are a",
    "start": "2120079",
    "end": "2125760"
  },
  {
    "text": "plague a plague i tell you a plague on any code base",
    "start": "2125760",
    "end": "2131280"
  },
  {
    "text": "it causes the inadvertent creation of overload sets for one thing which people don't quite realize uh i used to have a",
    "start": "2131280",
    "end": "2137119"
  },
  {
    "text": "function called clamp and then it got introduced into the standard and then i was",
    "start": "2137119",
    "end": "2142720"
  },
  {
    "text": "destroyed because they had their parameters in a different order and i had to work out which clamp was being called",
    "start": "2142720",
    "end": "2147760"
  },
  {
    "text": "and i oh i hated my life so don't don't do this",
    "start": "2147760",
    "end": "2153119"
  },
  {
    "text": "after writing this chapter i realized i had effectively reproduced a blog post by arthur dwyer",
    "start": "2153119",
    "end": "2159760"
  },
  {
    "text": "completely stuck in my memory but he graciously permitted the inclusion of his material so do go and read his blog",
    "start": "2159760",
    "end": "2165440"
  },
  {
    "text": "it's most enlightening okay let's take a break for a quiz 60 of the way through who's this man",
    "start": "2165440",
    "end": "2173839"
  },
  {
    "text": "sorry monk it is milk who knew this was monk",
    "start": "2174560",
    "end": "2179599"
  },
  {
    "text": "norway's most famous artist i believe i'm there to believe",
    "start": "2179599",
    "end": "2185040"
  },
  {
    "text": "okay i do like to pepper some of my talks with art quizzes um that's the only art question in this",
    "start": "2185599",
    "end": "2192560"
  },
  {
    "text": "talk though right section four use this new thing properly so what we're doing here we're",
    "start": "2192560",
    "end": "2198320"
  },
  {
    "text": "contrasting the topic of stop using that with the title use this new thing properly",
    "start": "2198320",
    "end": "2203920"
  },
  {
    "text": "um things like concepts const express structured bindings um they all need care when being",
    "start": "2203920",
    "end": "2209760"
  },
  {
    "text": "deployed all off all the features of cbos plus do c plus plus an evolving standard as i",
    "start": "2209760",
    "end": "2215280"
  },
  {
    "text": "say uh new things appear with each release and they all require some teaching to back them up now i'm not",
    "start": "2215280",
    "end": "2220320"
  },
  {
    "text": "going to try and teach the entirety of c plus 20 in the 250 page volume that's a fool's",
    "start": "2220320",
    "end": "2226160"
  },
  {
    "text": "errand but these guidelines do give you a flavor of how to apprehend novel",
    "start": "2226160",
    "end": "2232400"
  },
  {
    "text": "features so we start with what to do about returning extra information to a function caller",
    "start": "2232400",
    "end": "2238160"
  },
  {
    "text": "now in the error handling section um we look at the return domain and it",
    "start": "2238160",
    "end": "2243839"
  },
  {
    "text": "could be that your return type all of the values of your return type are valid which means it becomes very",
    "start": "2243839",
    "end": "2249200"
  },
  {
    "text": "very hard to signal an error um so special measures need to be taken under those cases to return errors and",
    "start": "2249200",
    "end": "2255280"
  },
  {
    "text": "if you don't want to throw exceptions your options really do become quite limited maybe there is a lot of relevant",
    "start": "2255280",
    "end": "2260720"
  },
  {
    "text": "information that you want to cheaply return to the caller who knows about return value",
    "start": "2260720",
    "end": "2266640"
  },
  {
    "text": "optimization yeah it's great isn't it it's pretty much guaranteed now so it becomes entirely feasible to",
    "start": "2266640",
    "end": "2272880"
  },
  {
    "text": "return a struct or a tuple and use structured bindings to manage this rather than having output",
    "start": "2272880",
    "end": "2278720"
  },
  {
    "text": "parameters and input parameters in your function signature scoped enumerations",
    "start": "2278720",
    "end": "2285040"
  },
  {
    "text": "class enums overplayed enums what they really mean here are scoped enumerations um there aren't many things to be said",
    "start": "2285040",
    "end": "2290960"
  },
  {
    "text": "about them but i still see unscoped enumerations all over the place there's not really any need to use unscoped",
    "start": "2290960",
    "end": "2296320"
  },
  {
    "text": "enumerations anymore so this chapter summarizes all of the advice on using enumerations in the core guidelines",
    "start": "2296320",
    "end": "2302160"
  },
  {
    "text": "there's five really pithy pieces of advice and particularly the value of gaining the ability to to properly and portably",
    "start": "2302160",
    "end": "2309200"
  },
  {
    "text": "forward declare an enumeration now i use visual studio i've always been able to declare enumerations because it was one",
    "start": "2309200",
    "end": "2315440"
  },
  {
    "text": "of those little implementation implementation details that they favored this was not portable",
    "start": "2315440",
    "end": "2321599"
  },
  {
    "text": "but if you put the class keyword after your enum it is portably forward declarable declaratable",
    "start": "2321599",
    "end": "2328119"
  },
  {
    "text": "declarationizable i don't know you can fully declare it so the theme of scope persists into the",
    "start": "2328119",
    "end": "2334560"
  },
  {
    "text": "next chapter um keeping scopes small i mean that is an obvious piece of",
    "start": "2334560",
    "end": "2339839"
  },
  {
    "text": "advice um but it applies to all six scopes would anybody like to name all six scopes",
    "start": "2339839",
    "end": "2347599"
  },
  {
    "text": "another yeah i'm an eight i'm an eight name all six scopes please i'm a six i'm a five",
    "start": "2347920",
    "end": "2354640"
  },
  {
    "text": "we look at the difference between scope and duration and linkage and the interplay between scope and context and",
    "start": "2354640",
    "end": "2362480"
  },
  {
    "text": "abstraction it's a very subtle piece it forms the building blocks of the",
    "start": "2362480",
    "end": "2368400"
  },
  {
    "text": "narrative of your program how you look at all the bits and pieces and how they fit together",
    "start": "2368400",
    "end": "2373920"
  },
  {
    "text": "right who wants to const express all the things lovely even floating point calculations",
    "start": "2373920",
    "end": "2381040"
  },
  {
    "text": "you really what's the rounding mode of your compiler it matters",
    "start": "2381040",
    "end": "2387520"
  },
  {
    "text": "oh yes yeah constant is amazing really i love it it's get rid of constexpr",
    "start": "2388160",
    "end": "2395520"
  },
  {
    "text": "or make it default oh how would we do that wouldn't we love that wouldn't we love member functions to be const by",
    "start": "2395520",
    "end": "2400960"
  },
  {
    "text": "default objects to be const by default constant yeah well we it's not suck it",
    "start": "2400960",
    "end": "2406020"
  },
  {
    "text": "[Music] i'd love to change it i really would",
    "start": "2406020",
    "end": "2411200"
  },
  {
    "text": "really are we did i miss a memo wow you're brilliant i love you please",
    "start": "2411200",
    "end": "2417839"
  },
  {
    "text": "carry on thank you thank you well in this chapter we look at how it",
    "start": "2417839",
    "end": "2422880"
  },
  {
    "text": "was introduced to c plus plus 11 and how it's broadened in scope ever since if you remember the first introduction of",
    "start": "2422880",
    "end": "2428000"
  },
  {
    "text": "constructs for a single expression functions could be constant express now",
    "start": "2428000",
    "end": "2433119"
  },
  {
    "text": "you can have constexpr vectors which i find bizarre um but i write a context",
    "start": "2433119",
    "end": "2440079"
  },
  {
    "text": "for sine function and we also consider constant valence in it",
    "start": "2440079",
    "end": "2445838"
  },
  {
    "text": "right the last two topics look at some implications of template use okay so in t.11 sorry 2.1 isn't it",
    "start": "2445920",
    "end": "2454319"
  },
  {
    "text": "yes t.1 i go into some depth about the value of abstraction again and how we can use it to continue refining a",
    "start": "2454319",
    "end": "2460640"
  },
  {
    "text": "solution domain um so there are examples of real reinvention how to avoid it",
    "start": "2460640",
    "end": "2467839"
  },
  {
    "text": "um plus a look at how abstraction is observed in the differences between assembly language and c and c plus and",
    "start": "2467839",
    "end": "2474400"
  },
  {
    "text": "basic they all operate at different levels of abstraction i started programming in the early days",
    "start": "2474400",
    "end": "2480000"
  },
  {
    "text": "of home computers back in 1980 uh on a school acorn atom",
    "start": "2480000",
    "end": "2485839"
  },
  {
    "text": "power bar 6502 processor and i learned basic and z80 assembly pretty much back to back",
    "start": "2485839",
    "end": "2492720"
  },
  {
    "text": "and it was quite an introduction to different styles of programming i'm so pleased that that was it was just good",
    "start": "2492720",
    "end": "2497760"
  },
  {
    "text": "fortune that this was exposed to me so the final chapter takes an early peak at concepts",
    "start": "2497760",
    "end": "2503680"
  },
  {
    "text": "um and i was rather nervous about writing this chapter because i have yet to try out concepts",
    "start": "2503680",
    "end": "2509839"
  },
  {
    "text": "sort of in earnest in anger on a great big code base because there are not many compilers",
    "start": "2509839",
    "end": "2515599"
  },
  {
    "text": "that actually support concepts fully and thoroughly we've been trying to get concepts into",
    "start": "2515599",
    "end": "2520720"
  },
  {
    "text": "the language since the last century beyond really wanted them in 98 he really wanted them in cbos 11.",
    "start": "2520720",
    "end": "2527839"
  },
  {
    "text": "it didn't happen it's a big deal but they are a dramatic feature in terms of code documentation and also",
    "start": "2527839",
    "end": "2534319"
  },
  {
    "text": "potentially compilation time okay final section write code well by",
    "start": "2534319",
    "end": "2539520"
  },
  {
    "text": "default we all want to do this so these are simple guidelines that if you",
    "start": "2539520",
    "end": "2545599"
  },
  {
    "text": "follow them will result in you generating good code without having to think too hard",
    "start": "2545599",
    "end": "2551520"
  },
  {
    "text": "about what's going on so they lead to the production of good idiomatic c plus which will be",
    "start": "2551520",
    "end": "2556960"
  },
  {
    "text": "understood and appreciated by your colleagues so type safety ranks highly with",
    "start": "2556960",
    "end": "2564319"
  },
  {
    "text": "deterministic destruction as one of the best reasons to use c plus",
    "start": "2564319",
    "end": "2569599"
  },
  {
    "text": "mechanisms exist to subvert type safety they are evil and i describe",
    "start": "2569599",
    "end": "2575359"
  },
  {
    "text": "them in this chapter so unions casting the unsigned keyword [Music]",
    "start": "2575359",
    "end": "2582000"
  },
  {
    "text": "buffer overflow all of these things get a close look and their perils are highlighted to the reader",
    "start": "2582000",
    "end": "2587920"
  },
  {
    "text": "the use of unsigned has been of particular difficulty to the community the size of a vector",
    "start": "2587920",
    "end": "2595280"
  },
  {
    "text": "should be assigned type not an unsigned type we've kind of you're shaking your head at me",
    "start": "2595280",
    "end": "2602160"
  },
  {
    "text": "okay all right it's the wrong one we'll talk about this later",
    "start": "2604160",
    "end": "2610720"
  },
  {
    "text": "um right continuing on the philosophy trail of advisory section section p is the",
    "start": "2610720",
    "end": "2616319"
  },
  {
    "text": "philosophy section um i could have written you know quite a lot of quite a lot of chapters about the",
    "start": "2616319",
    "end": "2621839"
  },
  {
    "text": "p stuff but it was it would have been a very slim volume actually um",
    "start": "2621839",
    "end": "2627680"
  },
  {
    "text": "but i look at const versus non-constant why you should prefer const wherever possible okay",
    "start": "2627680",
    "end": "2633119"
  },
  {
    "text": "um and there's a small digression on east const versus const west show of hands for east const",
    "start": "2633119",
    "end": "2640240"
  },
  {
    "text": "for west const small majority",
    "start": "2640400",
    "end": "2645599"
  },
  {
    "text": "lots of people not voting still right um",
    "start": "2645599",
    "end": "2651920"
  },
  {
    "text": "that became clear to me while finishing this section that the power of abstraction was something that i was just not fully aware of",
    "start": "2653119",
    "end": "2660480"
  },
  {
    "text": "encapsulating rule violations is a perfect application of abstraction it really is we look at a tricky ownership",
    "start": "2660480",
    "end": "2666560"
  },
  {
    "text": "problem and then we put all of the meaty nasty parts into a single abstraction hide away the complexity and make it",
    "start": "2666560",
    "end": "2672880"
  },
  {
    "text": "look like a standardized stream so it's like an iceberg of lovely ice stream at the top and underneath just",
    "start": "2672880",
    "end": "2678000"
  },
  {
    "text": "this vile agglomeration of code this is one of my favorite guidelines",
    "start": "2678000",
    "end": "2684720"
  },
  {
    "text": "actually whenever i'm performing a code review and i see an early declaration it's an easy win to move it down as far",
    "start": "2684720",
    "end": "2691760"
  },
  {
    "text": "as possible um this minimizes the scope of the object uh it can highlight the need for a",
    "start": "2691760",
    "end": "2697599"
  },
  {
    "text": "constructor because quite often an early declaration will be a default constructor and then it will be modified",
    "start": "2697599",
    "end": "2702800"
  },
  {
    "text": "as the function goes down sometimes it can completely eliminate",
    "start": "2702800",
    "end": "2708640"
  },
  {
    "text": "the need for local state entirely there's a great joy to be had in introducing simplicity by saying you",
    "start": "2708640",
    "end": "2715680"
  },
  {
    "text": "know what there's no need for any of this designing to enable optimization that's",
    "start": "2715680",
    "end": "2722960"
  },
  {
    "text": "our holy grail really this is one of the performance guidelines the key takeaway is that you should signal your",
    "start": "2722960",
    "end": "2728960"
  },
  {
    "text": "intentions to the compiler as fully as possible at the highest available level of",
    "start": "2728960",
    "end": "2734160"
  },
  {
    "text": "abstraction and then let it do all the work this is kind of the sort of thing that sean perrin was saying when he was",
    "start": "2734160",
    "end": "2740000"
  },
  {
    "text": "saying no raw loops you know there are higher levels of abstraction available to you that the compiler can exploit be as clear as you",
    "start": "2740000",
    "end": "2746960"
  },
  {
    "text": "can with your intention so this chapter looks at the evolution of the sort function",
    "start": "2746960",
    "end": "2752160"
  },
  {
    "text": "okay so in the standard c library it's q sort which was invented by tony haw in",
    "start": "2752160",
    "end": "2757200"
  },
  {
    "text": "the 1960s right through to stood ranges sort",
    "start": "2757200",
    "end": "2763040"
  },
  {
    "text": "which is obviously a much more recent beast the function signature for stood ranges",
    "start": "2763040",
    "end": "2768160"
  },
  {
    "text": "sort is is huge it is very verbose",
    "start": "2768160",
    "end": "2774800"
  },
  {
    "text": "but the compiler is much more able to exploit the additional knowledge that function signature gives you",
    "start": "2774800",
    "end": "2782240"
  },
  {
    "text": "and in the final chapter we talk about raii resource allocation",
    "start": "2782560",
    "end": "2788640"
  },
  {
    "text": "is initialization no resource acquisition i make this mistake so once upon a time i said on facebook to all my",
    "start": "2788640",
    "end": "2795440"
  },
  {
    "text": "terms oh yeah right resource allocation is initialization what i didn't what i'd forgotten was that bjarn is actually he's my friend on",
    "start": "2795440",
    "end": "2801920"
  },
  {
    "text": "facebook and he corrected me in front of all my friends in the comments which was jolly for",
    "start": "2801920",
    "end": "2808880"
  },
  {
    "text": "everyone except me um resource acquisition is initialization",
    "start": "2808880",
    "end": "2814480"
  },
  {
    "text": "um and it's great i continue to say how great deterministic distraction is",
    "start": "2814480",
    "end": "2820240"
  },
  {
    "text": "and i also give an insight into the workings of the c plus committee because um there's a feature in one of the technical specifications",
    "start": "2820240",
    "end": "2827040"
  },
  {
    "text": "the library fundamentals technical specification it's um a scope object for",
    "start": "2827040",
    "end": "2832240"
  },
  {
    "text": "assisting in destruction it's called unique resource how it might make it into the standard it probably won't i don't know",
    "start": "2832240",
    "end": "2839359"
  },
  {
    "text": "but i'm very keen to recruit fine minds to the expansion of c plus plus into the",
    "start": "2839359",
    "end": "2844559"
  },
  {
    "text": "growth of the standard okay there are still nooks and crannies that need filling that need ironing out that need fixing up",
    "start": "2844559",
    "end": "2850800"
  },
  {
    "text": "if only for vocabulary reasons we still don't have a matrix class for example i'm working on that but python who uses",
    "start": "2850800",
    "end": "2857839"
  },
  {
    "text": "python yeah lots of you python is absolutely eating our lunch when it comes to",
    "start": "2857839",
    "end": "2863839"
  },
  {
    "text": "matrices and linear algebra there's no need for that i've been writing code for a long time",
    "start": "2863839",
    "end": "2869760"
  },
  {
    "text": "as you've probably guessed over 40 years now and i've been reading textbooks about programming for a long time as",
    "start": "2869760",
    "end": "2875440"
  },
  {
    "text": "well the first one was probably the zx81 sinclair basic programming manual which",
    "start": "2875440",
    "end": "2880960"
  },
  {
    "text": "taught me how to use basic keywords i took a maths degree and there was a computing component so it was one",
    "start": "2880960",
    "end": "2887359"
  },
  {
    "text": "quarter computing three-quarters maths um over time i have found that degree",
    "start": "2887359",
    "end": "2892960"
  },
  {
    "text": "somewhat wanting it was it was low in content",
    "start": "2892960",
    "end": "2898839"
  },
  {
    "text": "um what i'm saying is i have no formal training in computer science i'm a",
    "start": "2898839",
    "end": "2904800"
  },
  {
    "text": "mathematician i'm not a computer scientist and i've read a lot of a lot of books but only ones that interested me you",
    "start": "2904800",
    "end": "2910800"
  },
  {
    "text": "know nothing as impressive as a formal curriculum i've just read the books that have you know",
    "start": "2910800",
    "end": "2917280"
  },
  {
    "text": "have taken my fancy and one of this has some interesting side effects i've never really i've never properly studied databases",
    "start": "2917280",
    "end": "2923599"
  },
  {
    "text": "you know i'm 54 years old i've never really got in there and and you know study databases i just use them",
    "start": "2923599",
    "end": "2931359"
  },
  {
    "text": "um i've simply picked things up so i've gone along now there are some words that are banded",
    "start": "2931359",
    "end": "2937280"
  },
  {
    "text": "around quite often in the field like cohesion and coupling and encapsulation",
    "start": "2937280",
    "end": "2942319"
  },
  {
    "text": "and data hiding and i sort of know what they mean in a roundabout sort of a way",
    "start": "2942319",
    "end": "2948400"
  },
  {
    "text": "writing this book it produced a lot of clarification in my mind about a lot of these things",
    "start": "2948559",
    "end": "2955359"
  },
  {
    "text": "as i realized what it was that i didn't know and sought to clarify what was going on the best part about writing",
    "start": "2955359",
    "end": "2960720"
  },
  {
    "text": "this book actually was how much i learned and as you might have guessed from the tour of the contents the big one for me",
    "start": "2960720",
    "end": "2966880"
  },
  {
    "text": "was abstractions i'm just going to spend a few minutes talking about abstraction because when i first started to learn",
    "start": "2966880",
    "end": "2971920"
  },
  {
    "text": "started learning to code it was through through the basic programming language and i was basically writing a script i",
    "start": "2971920",
    "end": "2977839"
  },
  {
    "text": "wanted to write games i was 12 13 years old i understood very well",
    "start": "2977839",
    "end": "2984400"
  },
  {
    "text": "how games worked i was at arcades as much as i could be i was playing space invaders and asteroids and",
    "start": "2984400",
    "end": "2990160"
  },
  {
    "text": "pac-man and all the lovely retro games of that era the pool was strong and it was expensive",
    "start": "2990160",
    "end": "2996880"
  },
  {
    "text": "and a week's pocket money would last me about 20 minutes in an arcade",
    "start": "2996880",
    "end": "3002640"
  },
  {
    "text": "so writing games seemed to me the best way forward they're very particular pieces of software because rather than",
    "start": "3002640",
    "end": "3007680"
  },
  {
    "text": "taking a command line and some input and then yielding some outputs um they're actually you know",
    "start": "3007680",
    "end": "3013920"
  },
  {
    "text": "they are interactive programs so my first experience of programming was writing interactive software",
    "start": "3013920",
    "end": "3019119"
  },
  {
    "text": "they collect uh so games will collect input on every frame every display frame and then they'll update a model of the",
    "start": "3019119",
    "end": "3025200"
  },
  {
    "text": "world and then they'll produce a display frame and nowadays that'll happen in 16 milliseconds",
    "start": "3025200",
    "end": "3032480"
  },
  {
    "text": "and when i started writing games i'd write a big loop i'd collect up inputs and i'd update the world i might draw a",
    "start": "3032480",
    "end": "3038160"
  },
  {
    "text": "frame and i'd repeat as necessary even in basic uh over a rather longer time",
    "start": "3038160",
    "end": "3044160"
  },
  {
    "text": "and this greatly coloured how i apprehended programming the idea of small composable programs",
    "start": "3044160",
    "end": "3049920"
  },
  {
    "text": "you know unix style with a pipe operator was completely unknown to me but that's a very particular way of",
    "start": "3049920",
    "end": "3056079"
  },
  {
    "text": "writing code it doesn't match with developing in large teams for example",
    "start": "3056079",
    "end": "3061520"
  },
  {
    "text": "all the complexity was bound up in iteration and the notion of finding similarity and generalizing functions",
    "start": "3061520",
    "end": "3068000"
  },
  {
    "text": "was rather alien and i remember encountering classes and member functions for the first time and",
    "start": "3068000",
    "end": "3073920"
  },
  {
    "text": "i tended to treat them as vessels for data i thought what are these for and i wasn't really sure what member",
    "start": "3073920",
    "end": "3080160"
  },
  {
    "text": "functions were for other than to hide states so that i could stop other people from you know",
    "start": "3080160",
    "end": "3086880"
  },
  {
    "text": "fiddling around with it whilst i wasn't looking and i heard the word encapsulation i thought oh that's what i'm doing i'm",
    "start": "3086880",
    "end": "3093200"
  },
  {
    "text": "doing encapsulation clever me yay don't i know stuff um",
    "start": "3093200",
    "end": "3099040"
  },
  {
    "text": "the three pillars of object orientation which which i heard about in the early 90s",
    "start": "3099040",
    "end": "3105200"
  },
  {
    "text": "were polymorphism inheritance and encapsulation so i realized i must be doing something right i'm writing",
    "start": "3105200",
    "end": "3111119"
  },
  {
    "text": "object-orientated code but i discovered i wasn't doing that i was data hiding",
    "start": "3111119",
    "end": "3117040"
  },
  {
    "text": "how marvelous i was doing things without realizing that they were the right thing to do",
    "start": "3117040",
    "end": "3122559"
  },
  {
    "text": "but the thing is data hiding and encapsulation are visible manifestations of",
    "start": "3122559",
    "end": "3128880"
  },
  {
    "text": "abstraction abstraction comes from it comes from the latin abs trajere which means to draw",
    "start": "3128880",
    "end": "3135119"
  },
  {
    "text": "out from when you create an abstraction you are eliminating complexity",
    "start": "3135119",
    "end": "3142160"
  },
  {
    "text": "you're hiding it behind something public-facing so think of a cpu",
    "start": "3142160",
    "end": "3147520"
  },
  {
    "text": "a cpu has billions of transistors and i'm not i'm not joking the epic rome",
    "start": "3147520",
    "end": "3152880"
  },
  {
    "text": "from amd contains nearly 40 billion transistors not a single die",
    "start": "3152880",
    "end": "3158559"
  },
  {
    "text": "actually if you like big numbers it was estimated in 2018 that the number of transistors that had ever been made",
    "start": "3158559",
    "end": "3164880"
  },
  {
    "text": "was 1.3 times 10 to the power 22",
    "start": "3164880",
    "end": "3170240"
  },
  {
    "text": "that's how many transistors have been made um that's 136 tillion for those of you",
    "start": "3170240",
    "end": "3175599"
  },
  {
    "text": "who like sextillion is not a word you use though there are very few things that you can ascribe that to",
    "start": "3175599",
    "end": "3183200"
  },
  {
    "text": "but controlling those transistors those 40 billion transistors represents an extraordinary amount of complexity",
    "start": "3184000",
    "end": "3191280"
  },
  {
    "text": "but fortunately chip manufacturers give us a programming language um",
    "start": "3191280",
    "end": "3197839"
  },
  {
    "text": "machine code and they give us meaningful instructions to to translate from",
    "start": "3197839",
    "end": "3203280"
  },
  {
    "text": "to translate into machine code assembly language so assembly language will map to machine code and that machine code",
    "start": "3203280",
    "end": "3208480"
  },
  {
    "text": "will control the cpus but that's the public-facing part the machine code or the assembly language actually that's probably the",
    "start": "3208480",
    "end": "3214000"
  },
  {
    "text": "public facing part there's the abstraction to the cpu",
    "start": "3214000",
    "end": "3220839"
  },
  {
    "text": "and with a handful of instructions in the program counter we can we can apprehend the vast complexity of a cpu",
    "start": "3222400",
    "end": "3229520"
  },
  {
    "text": "does anyone write code in assembly day to day no probably good",
    "start": "3229520",
    "end": "3236480"
  },
  {
    "text": "it's not as fun as it used to be i learned 6 502 and then z80 and then 68",
    "start": "3236480",
    "end": "3242160"
  },
  {
    "text": "000 and x86 and it's all horrible all of it i loved it at first writing super fast",
    "start": "3242160",
    "end": "3249599"
  },
  {
    "text": "stuff um compared to my basic programs in assembly it was a real thrill",
    "start": "3249599",
    "end": "3255040"
  },
  {
    "text": "but my basic programs were much easier to understand um they eliminated a lot of the complexity",
    "start": "3255040",
    "end": "3261839"
  },
  {
    "text": "involved with assembly programming for example in assembly programming if you want to jump somewhere for the purposes of iteration",
    "start": "3261839",
    "end": "3268160"
  },
  {
    "text": "you have to know how many bytes you want to adjust the program can to buy which is fine until you want to change",
    "start": "3268160",
    "end": "3273599"
  },
  {
    "text": "the loop and then you have to recalculate all of your jumps because you suddenly made your code a",
    "start": "3273599",
    "end": "3278640"
  },
  {
    "text": "little bit larger um in my day most assemblers came at the time with ways of labeling points of",
    "start": "3278640",
    "end": "3284240"
  },
  {
    "text": "code so you didn't have to do the it would do the calculation for you but nonetheless that is one of the problems actually that was an abstraction give me",
    "start": "3284240",
    "end": "3290880"
  },
  {
    "text": "labels and and positions and that piece and an assembler that was an abstraction",
    "start": "3290880",
    "end": "3296079"
  },
  {
    "text": "that hid away the complexity of calculating how far i had to jump",
    "start": "3296079",
    "end": "3302079"
  },
  {
    "text": "my basic programs could jump and loop and they handled all of the program counter stuff for me",
    "start": "3302079",
    "end": "3309760"
  },
  {
    "text": "so the complexity of performing calculations on a range of instructions to establish their size was eliminated",
    "start": "3310640",
    "end": "3315920"
  },
  {
    "text": "by the use of line numbers and go to that's an abstraction but this did not come for free because basic is an",
    "start": "3315920",
    "end": "3321760"
  },
  {
    "text": "interpreted language every instruction was interpreted at runtime even have been executed a thousand times before it",
    "start": "3321760",
    "end": "3329280"
  },
  {
    "text": "was still reinterpreted and this was a time consuming process and when i discovered c",
    "start": "3329280",
    "end": "3335440"
  },
  {
    "text": "i realized what had been going wrong i could almost treat c like a macro assembly language",
    "start": "3335440",
    "end": "3341440"
  },
  {
    "text": "because looking at the output of c i could directly map the commands to the 68 000 assembly i was doing this on",
    "start": "3341440",
    "end": "3346559"
  },
  {
    "text": "lattice c on the atari st at the time and this really was quite amazing because i've been writing games in",
    "start": "3346559",
    "end": "3352160"
  },
  {
    "text": "assembly and suddenly by moving over to c entire categories of error were eliminated",
    "start": "3352160",
    "end": "3357839"
  },
  {
    "text": "um for loops while loops all the control structures were truly zero cost abstractions",
    "start": "3357839",
    "end": "3363440"
  },
  {
    "text": "so preserving the state of registers prior to entering a function that could go wrong but the compiler would take care of that",
    "start": "3363440",
    "end": "3369119"
  },
  {
    "text": "for me um i ended up writing stuff in a mixture of",
    "start": "3369119",
    "end": "3374799"
  },
  {
    "text": "c and assembly but i'd witnessed my first zero cost abstractions and that was the important thing and many of the core guidelines can be",
    "start": "3374799",
    "end": "3381040"
  },
  {
    "text": "restated as write code for abstraction impedance 11 encapsulate messy constructs rather than spreading through",
    "start": "3381040",
    "end": "3386799"
  },
  {
    "text": "the code we see how abstraction is more than merely encapsulating and data hiding it allows us to create levels of complexity",
    "start": "3386799",
    "end": "3393680"
  },
  {
    "text": "and expose only the bare minimum required to interact with an object in i-23 keep the number of function",
    "start": "3393680",
    "end": "3399760"
  },
  {
    "text": "arguments low same thing the complexity of comprehending many parameters is hidden behind the",
    "start": "3399760",
    "end": "3405599"
  },
  {
    "text": "abstraction describes the role that those parameters play in f21 to return multiple out values prefer returning a",
    "start": "3405599",
    "end": "3411599"
  },
  {
    "text": "struct or tuple a similar transformation collect a messy bunch of data into a single uh abstraction and then return",
    "start": "3411599",
    "end": "3418640"
  },
  {
    "text": "that rather than taking multiple out parameters c.8 use class rather than struct if any",
    "start": "3418640",
    "end": "3424079"
  },
  {
    "text": "member is non-public you do this to make it clear that something is being abstracted class",
    "start": "3424079",
    "end": "3429119"
  },
  {
    "text": "members are private by default a class signals to you there are things that you do not need to see that there",
    "start": "3429119",
    "end": "3434319"
  },
  {
    "text": "is complexity being hidden es1 prefer the standard library to other libraries into handcrafted code",
    "start": "3434319",
    "end": "3440480"
  },
  {
    "text": "the observation here is that library code tends to be of a higher level of abstraction i've participated in code reviews where",
    "start": "3440480",
    "end": "3446079"
  },
  {
    "text": "the engineers simply rewrote stood mismatch or something like that and didn't",
    "start": "3446079",
    "end": "3451440"
  },
  {
    "text": "realize it and did a worse job watching someone's face fall when i say why didn't you stood min max",
    "start": "3451440",
    "end": "3458000"
  },
  {
    "text": "it is not an edifying experience in es2 prefers suitable abstractions to",
    "start": "3458000",
    "end": "3463040"
  },
  {
    "text": "direct use of language features the use of abstraction is explicit in the title",
    "start": "3463040",
    "end": "3468640"
  },
  {
    "text": "this guideline demonstrates that application concepts are further from the bare language than they are from the",
    "start": "3468640",
    "end": "3474799"
  },
  {
    "text": "appropriate combinations of library features i've been focusing on abstractions that deal with the solution domain a computer",
    "start": "3474799",
    "end": "3481280"
  },
  {
    "text": "with a particular hardware configuration types that abstract memory keywords abstract conditional flow content",
    "start": "3481280",
    "end": "3488559"
  },
  {
    "text": "but abstractions are also available for the problem domain i make big games now space invaders is very different beast",
    "start": "3488559",
    "end": "3494640"
  },
  {
    "text": "to our latest title warhammer 3. so here's a trailer",
    "start": "3494640",
    "end": "3500359"
  },
  {
    "text": "[Music]",
    "start": "3502040",
    "end": "3507280"
  },
  {
    "text": "behold the unyielding motherland",
    "start": "3507280",
    "end": "3512720"
  },
  {
    "text": "through the teachings of the great orthodoxy this world's end is kept at",
    "start": "3513760",
    "end": "3519440"
  },
  {
    "text": "the base our mothers and fathers",
    "start": "3519440",
    "end": "3524880"
  },
  {
    "text": "brothers and sisters spend the united",
    "start": "3524880",
    "end": "3531359"
  },
  {
    "text": "the mighty bear god and the power of winter itself",
    "start": "3536880",
    "end": "3544119"
  },
  {
    "text": "go",
    "start": "3544720",
    "end": "3546960"
  },
  {
    "text": "join us pledge yourself to the i score defend the legacy of kiss",
    "start": "3556400",
    "end": "3565960"
  },
  {
    "text": "[Music]",
    "start": "3567270",
    "end": "3570369"
  },
  {
    "text": "so do come and work for us if you like that stuff um warhammer is quite an extraordinary",
    "start": "3575040",
    "end": "3580960"
  },
  {
    "text": "product and we're very proud of it but think of the complexity [Music]",
    "start": "3580960",
    "end": "3586880"
  },
  {
    "text": "sega um think of the complexity that it represents there all of that was done in the game we weren't um",
    "start": "3586880",
    "end": "3592559"
  },
  {
    "text": "uh you know we didn't just go out and say hey can you just do an animation for us a lot of this was done in the game",
    "start": "3592559",
    "end": "3598160"
  },
  {
    "text": "and where would you start engineering this because factoring the problem is hard work just in the trailer we've got dogs",
    "start": "3598160",
    "end": "3604000"
  },
  {
    "text": "bears we've got all sorts of animals and people how do we model that what they have in common so we need to",
    "start": "3604000",
    "end": "3609200"
  },
  {
    "text": "draw them on the screen in 3d from any viewpoint so that means we need models and we need",
    "start": "3609200",
    "end": "3614640"
  },
  {
    "text": "sets of things that they can do and animations to represent those things and textures to bring those models to life",
    "start": "3614640",
    "end": "3621680"
  },
  {
    "text": "so we have a bear which has a model and a position for that model in the world and an animation describing what it's doing now and other data like how",
    "start": "3621680",
    "end": "3628559"
  },
  {
    "text": "healthy he is and we need to schedule their actions so they look alive we need to decide what those",
    "start": "3628559",
    "end": "3634480"
  },
  {
    "text": "actions are going to be and this all falls under ai so we need an ai controller that",
    "start": "3634480",
    "end": "3639680"
  },
  {
    "text": "knows about all the bear objects and makes them behave in a sensible way credibly like a bear army",
    "start": "3639680",
    "end": "3645119"
  },
  {
    "text": "or how you might imagine a bear army would behave because obviously there are no bear armies",
    "start": "3645119",
    "end": "3650319"
  },
  {
    "text": "we want to tell the ai controller here's your initial condition this is what the human player has done and advance",
    "start": "3650319",
    "end": "3656799"
  },
  {
    "text": "everything by one tenth of a second and that's all the complexity of the ai controller is hidden just behind those",
    "start": "3656799",
    "end": "3662319"
  },
  {
    "text": "three functions and these divisions are each partial abstractions of the complexity of the game and nothing to do with bytes or",
    "start": "3662319",
    "end": "3668559"
  },
  {
    "text": "control structures or anything like that this is abstracting the problem of the game",
    "start": "3668559",
    "end": "3673599"
  },
  {
    "text": "and once we have the notion of a class with constant non-const member functions we have a model view controller paradigm",
    "start": "3673599",
    "end": "3678799"
  },
  {
    "text": "available to us and as you track the dependencies of all the classes in our game the dependencies get closer and",
    "start": "3678799",
    "end": "3684319"
  },
  {
    "text": "closer and closer just to instant floats abstraction is the superpower of c plus plus",
    "start": "3684319",
    "end": "3690079"
  },
  {
    "text": "now it is we are one hour in and i've vastly vastly overrun",
    "start": "3690079",
    "end": "3695280"
  },
  {
    "text": "so mr video camera person uh and actually the rest of you i can carry",
    "start": "3695280",
    "end": "3700400"
  },
  {
    "text": "on i reckon i can get through the rest of this in about five minutes or we can call it a day and take questions so please do take part in this",
    "start": "3700400",
    "end": "3707359"
  },
  {
    "text": "who'd like to call it a day and take questions if you'd like me to carry on",
    "start": "3707359",
    "end": "3713040"
  },
  {
    "text": "lovely my adoring audience thank you right let's talk about the production of the book very quickly",
    "start": "3713040",
    "end": "3720319"
  },
  {
    "text": "so spring turned into summer autumn started pulling its boots on and there was still no sign of the",
    "start": "3720319",
    "end": "3726160"
  },
  {
    "text": "contract so i'd already involved herb sutter in the process and i asked him",
    "start": "3726160",
    "end": "3731440"
  },
  {
    "text": "you know do you know anyone and he told me about addison wesley and gregory dench and so we signed up with them we",
    "start": "3731440",
    "end": "3737359"
  },
  {
    "text": "decided to jump ship and we awaited a contract from them instead and then my birthday rolled around and",
    "start": "3737359",
    "end": "3743520"
  },
  {
    "text": "my wife said let's go to sicily and i took a laptop fatal i took a laptop and i started sketching header",
    "start": "3743520",
    "end": "3750640"
  },
  {
    "text": "levels sort of header one and header two stuff and started making notes still no contract in hand",
    "start": "3750640",
    "end": "3757119"
  },
  {
    "text": "but i was really enjoying putting words onto the screen and eventually having got home and being told there would be a contract from madison wesley i decided",
    "start": "3757119",
    "end": "3763760"
  },
  {
    "text": "yep there will be a contract and i just started to write so we set a target of",
    "start": "3763760",
    "end": "3768960"
  },
  {
    "text": "delivering the book for cppcon 2021 and that was over a year away how hard",
    "start": "3768960",
    "end": "3774559"
  },
  {
    "text": "could it be well you know how hard because it's not out yet and cppcon is next week",
    "start": "3774559",
    "end": "3780799"
  },
  {
    "text": "um was still working from home had a couple of extra hours gifted to me by the lack of commuting so i was able to",
    "start": "3780839",
    "end": "3786799"
  },
  {
    "text": "churn out the words um i estimated that in those two hours that i got back from commute i could write 750 words",
    "start": "3786799",
    "end": "3793760"
  },
  {
    "text": "so i thought that's 3750 words a week on five days and i'd have the book ready in 24 weeks",
    "start": "3793760",
    "end": "3799839"
  },
  {
    "text": "so i was ready to start writing i could just start i could just sit down i could open up word and i could write",
    "start": "3799839",
    "end": "3806160"
  },
  {
    "text": "at any time so if this were a story from the cheapest sort of airport fiction",
    "start": "3806160",
    "end": "3812400"
  },
  {
    "text": "about now you would hear about how i stared at my screen blankly and was looking for my muse i was making tea",
    "start": "3812400",
    "end": "3818319"
  },
  {
    "text": "running baths cleaning the pot cupboard in the kitchen all those sorts of things anything getting down to zero inbox",
    "start": "3818319",
    "end": "3825119"
  },
  {
    "text": "anything to distract from writing but as it as it turned out um that wasn't what happened",
    "start": "3825119",
    "end": "3830640"
  },
  {
    "text": "i waited around a little longer for a contract but then i just wrote like this so put it all into github and i just",
    "start": "3830640",
    "end": "3836799"
  },
  {
    "text": "wrote every day except for fridays so i didn't write on fridays because i wanted to spend time with my family",
    "start": "3836799",
    "end": "3843839"
  },
  {
    "text": "at christmas i really hammered it at christmas um i didn't get writer's block i just wrote",
    "start": "3843839",
    "end": "3850240"
  },
  {
    "text": "whenever i felt i don't know what to write i just wrote rubbish on the assumption that i could fix it later",
    "start": "3850240",
    "end": "3855520"
  },
  {
    "text": "um i wrote at the same time every day and i finished on may the 28th and i ended up writing 750 words monday to",
    "start": "3855520",
    "end": "3861839"
  },
  {
    "text": "thursday but 1500 words on saturday and sunday i was a bit busy on something else during april",
    "start": "3861839",
    "end": "3868160"
  },
  {
    "text": "and once i finished my 30 chapters i was 95 percent of the way there which meant that only 95 percent was left to do",
    "start": "3868160",
    "end": "3876160"
  },
  {
    "text": "so books have a front matter this is a full word and afterward we asked bjorn and herb if they provided forward and",
    "start": "3876160",
    "end": "3881920"
  },
  {
    "text": "afterward they did gladly i'm very pleased with them very grateful and then we had to think about diagrams",
    "start": "3881920",
    "end": "3887440"
  },
  {
    "text": "and pictures books are dull and turgid affairs particularly textbooks",
    "start": "3887440",
    "end": "3892559"
  },
  {
    "text": "pictures brighten things up they break the monotony i can't draw like my diagrams are just disgusting",
    "start": "3892559",
    "end": "3899599"
  },
  {
    "text": "um there are half a dozen drawings in the book eventually they just interpreted my",
    "start": "3899599",
    "end": "3904960"
  },
  {
    "text": "sketches and made the best of it so don't expect this volume to be a treasure trove",
    "start": "3904960",
    "end": "3910079"
  },
  {
    "text": "of of pictorial aids to learning um code samples were a rather different matter",
    "start": "3910079",
    "end": "3915119"
  },
  {
    "text": "um anyone buying programming books in the 90s will unknown the cd-rom glued into the back cover",
    "start": "3915119",
    "end": "3920640"
  },
  {
    "text": "and in the naughties suddenly it was all hosted on websites i have a friend his name's matt godbolt",
    "start": "3920640",
    "end": "3925760"
  },
  {
    "text": "and he has a website called compiler explorer anyone use compiler explorer oh great matt loves you all i'm sure so",
    "start": "3925760",
    "end": "3932319"
  },
  {
    "text": "matt has agreed to reserve some stable names for me so all the code samples are now available on compiler explorer you",
    "start": "3932319",
    "end": "3938079"
  },
  {
    "text": "can actually look at them now i've already written them come up to me afterwards and i'll show you actually i can show you the synx",
    "start": "3938079",
    "end": "3943680"
  },
  {
    "text": "example and then i needed a team of critical friends to review the content and tell me what was going on",
    "start": "3943680",
    "end": "3949680"
  },
  {
    "text": "tell me what i got wrong um i needed a lot of people i didn't ask enough people um",
    "start": "3949680",
    "end": "3955599"
  },
  {
    "text": "50 would have been good i credit seven people in the",
    "start": "3955599",
    "end": "3960880"
  },
  {
    "text": "acknowledgements they did a sterling job some of them actually read the entire thing and handed back you know good feedback some of them just read bits and",
    "start": "3960880",
    "end": "3966960"
  },
  {
    "text": "pieces and finally there was the publisher editing process um so they have to edit the copy and",
    "start": "3966960",
    "end": "3973200"
  },
  {
    "text": "check that i'm actually writing well and then they have to make sure that it's it fits in with the house style",
    "start": "3973200",
    "end": "3980079"
  },
  {
    "text": "and then the book was laid out into a design it looks like a book this is the strangest part i got a pdf",
    "start": "3980079",
    "end": "3985839"
  },
  {
    "text": "with text and chat headings and things like that it was glorious also during this time and then came the",
    "start": "3985839",
    "end": "3991760"
  },
  {
    "text": "final author review i had 10 days to ensure that nothing was out of place and everything was perfect 10 days is not long i actually do have a",
    "start": "3991760",
    "end": "3998720"
  },
  {
    "text": "day job but i succeeded and that takes us to last friday and during this time i was also given",
    "start": "3998720",
    "end": "4004880"
  },
  {
    "text": "some cover sketches to ponder and we've settled on a cover sketch so if you want to get your cameras ready that's it",
    "start": "4004880",
    "end": "4012079"
  },
  {
    "text": "needs a bit of a lining here and there so that's pretty much what you should see on your bookshelves in the middle of december um",
    "start": "4013920",
    "end": "4020960"
  },
  {
    "text": "i've still got to make an index pass the back cover needs to be finalized but that's the story of my book that's the",
    "start": "4020960",
    "end": "4026160"
  },
  {
    "text": "book that you should be giving to the the geek in your life for this christmas so i do hope the story's been informative and that maybe",
    "start": "4026160",
    "end": "4032960"
  },
  {
    "text": "you know you'll be inspired to share the things that you've learned write your own book um it's a quite transformative process i",
    "start": "4032960",
    "end": "4039200"
  },
  {
    "text": "really do thoroughly recommend it thanks very much [Applause]",
    "start": "4039200",
    "end": "4051659"
  },
  {
    "text": "you",
    "start": "4054640",
    "end": "4056720"
  }
]