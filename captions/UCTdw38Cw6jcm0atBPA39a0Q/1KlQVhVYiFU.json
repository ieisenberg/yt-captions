[
  {
    "text": "hello and thank you so much for showing up to my talk so so late in the",
    "start": "5759",
    "end": "12200"
  },
  {
    "text": "afternoon it is great to be here at MDC Oslo and I'm really happy that I'm",
    "start": "12200",
    "end": "17400"
  },
  {
    "text": "allowed to talk about event sourcing because that's a way of building solution that I find really fascinating",
    "start": "17400",
    "end": "24080"
  },
  {
    "text": "but much more important I find it really really useful for the right problems to",
    "start": "24080",
    "end": "29119"
  },
  {
    "text": "solve my name is Anita K I work in equinor it's a Energy Solution company",
    "start": "29119",
    "end": "34800"
  },
  {
    "text": "here in Norway and I have been working with software design since the mid90s oh",
    "start": "34800",
    "end": "40559"
  },
  {
    "text": "that's a long long time but I don't know maybe it ever have been more fun than now great days at work when I was",
    "start": "40559",
    "end": "49280"
  },
  {
    "text": "graduated I really was interested in user friendliness as we call it then and",
    "start": "49280",
    "end": "54879"
  },
  {
    "text": "then for 20 years ago I read the domain driven design book The Blue Book by Eric",
    "start": "54879",
    "end": "60399"
  },
  {
    "text": "Evans and that really resonated with me and lately I've been uh into the DDD",
    "start": "60399",
    "end": "66360"
  },
  {
    "text": "community and I have learned a lot there and one of those things is event",
    "start": "66360",
    "end": "71960"
  },
  {
    "text": "sourcing these days I am a Hands-On coding architect building solution for",
    "start": "71960",
    "end": "78640"
  },
  {
    "text": "our in-house trading desk and I'm allowed to do two main design together with behavior-driven development and",
    "start": "78640",
    "end": "85600"
  },
  {
    "text": "event sourcing so that is in my mind really really great but today it will",
    "start": "85600",
    "end": "92119"
  },
  {
    "text": "all be about event sourcing as as you can see from the title it will be a very very basic",
    "start": "92119",
    "end": "98920"
  },
  {
    "text": "talk but before I start with what it is it I want to put it into context related",
    "start": "98920",
    "end": "106360"
  },
  {
    "text": "to event-driven architectures if you have an event-driven architecture you can have some solution that publish some events",
    "start": "106360",
    "end": "114040"
  },
  {
    "text": "we often call them outside events or integration events and other Solutions subscribed to those events",
    "start": "114040",
    "end": "120920"
  },
  {
    "text": "and of course the same solution can and typical will both publish And subscribe",
    "start": "120920",
    "end": "126719"
  },
  {
    "text": "to those events so this event driven architecture is between those Solutions",
    "start": "126719",
    "end": "132599"
  },
  {
    "text": "event sourcing on the other hand well that inside one solution and there we",
    "start": "132599",
    "end": "138959"
  },
  {
    "text": "have what we call inside events and if you do it with a domain you been design in mind we typical call them and try to",
    "start": "138959",
    "end": "145920"
  },
  {
    "text": "model them as domain event and they are stored in event store and they are the",
    "start": "145920",
    "end": "152000"
  },
  {
    "text": "internal of the application so event sourcing isn't a high level architecture",
    "start": "152000",
    "end": "157040"
  },
  {
    "text": "pattern that you should apply to everything you do you should use it where it actually fits the problem to",
    "start": "157040",
    "end": "163760"
  },
  {
    "text": "solve event driven architectures and event sourcing fits really really good",
    "start": "163760",
    "end": "169120"
  },
  {
    "text": "together but you don't have to do both to do the other you can have event",
    "start": "169120",
    "end": "174159"
  },
  {
    "text": "sourcing in a rest based architecture and you typical will have a mix of those",
    "start": "174159",
    "end": "181319"
  },
  {
    "text": "architecture patterns but event sourcing is then inside okay back to the question",
    "start": "181319",
    "end": "188000"
  },
  {
    "text": "what is event sourcing well it's a very mat way of thinking it's not something",
    "start": "188000",
    "end": "193319"
  },
  {
    "text": "new it's what accounting has done for 100 and hundreds of years and it actually what gab is doing every day and",
    "start": "193319",
    "end": "202000"
  },
  {
    "text": "even if you look at the InFocus Trend report for architecture event sourcing",
    "start": "202000",
    "end": "207959"
  },
  {
    "text": "is to in the late adopters together with the event driven",
    "start": "207959",
    "end": "213640"
  },
  {
    "text": "architectures so I think it's a mature choice to take if you have again the",
    "start": "213640",
    "end": "219000"
  },
  {
    "text": "right problem to solve so what is it let me come to that now before when I was",
    "start": "219000",
    "end": "224360"
  },
  {
    "text": "building solution I typical had maybe a state somewhere and the shopping cart is",
    "start": "224360",
    "end": "230360"
  },
  {
    "text": "the typical example to use when you explain event sourcing so I would do it that way too so I store the state to",
    "start": "230360",
    "end": "238840"
  },
  {
    "text": "call in SQL database but you can do it in a document database but you stored the state in this case a shopping cart",
    "start": "238840",
    "end": "245680"
  },
  {
    "text": "with two items but if you think a bit different and ask yourself how did we",
    "start": "245680",
    "end": "251079"
  },
  {
    "text": "get to that state how did we reach that well maybe the user added an item and",
    "start": "251079",
    "end": "257560"
  },
  {
    "text": "then it added once more and this is like my husband is shopping really structured",
    "start": "257560",
    "end": "263479"
  },
  {
    "text": "adding items checking out go on but for me I'm adding an item adding a new one",
    "start": "263479",
    "end": "269800"
  },
  {
    "text": "removing one all all those choices adding a new one but I we get to the same state and this more part to the",
    "start": "269800",
    "end": "278039"
  },
  {
    "text": "same state are we come back to later but when we do event sourcing we",
    "start": "278039",
    "end": "284400"
  },
  {
    "text": "have those events that we call domain events like item added and it's a domain",
    "start": "284400",
    "end": "290400"
  },
  {
    "text": "event because it's something that has happened so it past tense in contrast to a command that adding an item that can",
    "start": "290400",
    "end": "297560"
  },
  {
    "text": "fail so this is a fact it's something that has happened and when it's a domain event it's something that the business",
    "start": "297560",
    "end": "304120"
  },
  {
    "text": "cares about so that help us to model those event on the right level and you",
    "start": "304120",
    "end": "310080"
  },
  {
    "text": "can at any time Source the state by looping through those event and building",
    "start": "310080",
    "end": "316240"
  },
  {
    "text": "up your state hence event sourcing and also you can Source the state from the",
    "start": "316240",
    "end": "322319"
  },
  {
    "text": "events that is the only source of Truth when it comes to data in your",
    "start": "322319",
    "end": "327479"
  },
  {
    "text": "application now I we pause a bit and talk about",
    "start": "327479",
    "end": "333280"
  },
  {
    "text": "Aggregate and that's a concept from domain driven design but I think it's good to say something about it in order",
    "start": "333280",
    "end": "340199"
  },
  {
    "text": "to understand the rest of this talk so in domain dur and design we have this bonded context and inside of onon the",
    "start": "340199",
    "end": "346960"
  },
  {
    "text": "context you can have one or more aggregate like the product catalog is an",
    "start": "346960",
    "end": "352759"
  },
  {
    "text": "aggregate the shopping card can be an Aggregate and this is all about how you",
    "start": "352759",
    "end": "358600"
  },
  {
    "text": "modular you solution so that's is an important",
    "start": "358600",
    "end": "364199"
  },
  {
    "text": "concept also when you do event sourcing because you see all events",
    "start": "364199",
    "end": "370240"
  },
  {
    "text": "belongs to an instance of an aggregate so if you wonder all these events what",
    "start": "370240",
    "end": "376160"
  },
  {
    "text": "is kind of I don't have one table to put different types of information there just events flowing around it isn't the",
    "start": "376160",
    "end": "384360"
  },
  {
    "text": "events belongs in a stream and that stream belongs to one instance of an",
    "start": "384360",
    "end": "390240"
  },
  {
    "text": "aggregate in this CA case a shopping cart so if the user do something for instance adding an item the command",
    "start": "390240",
    "end": "398479"
  },
  {
    "text": "capture the intention of the user and then that command have to do something",
    "start": "398479",
    "end": "403720"
  },
  {
    "text": "to something and that something is to Aggregate and that's why I wanted to introduce that concept so in the",
    "start": "403720",
    "end": "410560"
  },
  {
    "text": "shopping cart you typical have some business rules and you save the event",
    "start": "410560",
    "end": "417160"
  },
  {
    "text": "they are saving as facts all events belong to a stream as I said and the",
    "start": "417160",
    "end": "423400"
  },
  {
    "text": "sequence is critical I guess you all can see that if you start with removing an",
    "start": "423400",
    "end": "428560"
  },
  {
    "text": "item it will be messy and the uh events together will",
    "start": "428560",
    "end": "435639"
  },
  {
    "text": "then make the state of one aggregate instance and that's actually all it is",
    "start": "435639",
    "end": "442199"
  },
  {
    "text": "at least if you look at some of the definition out there event sourcing it's",
    "start": "442199",
    "end": "447240"
  },
  {
    "text": "just another way to store your data you store them as a stream of event instead",
    "start": "447240",
    "end": "452800"
  },
  {
    "text": "of your state but I think for me at least but for most people doing event",
    "start": "452800",
    "end": "459199"
  },
  {
    "text": "sourcing it's more than that because this way of storing data has some consequences what should we do when we",
    "start": "459199",
    "end": "465560"
  },
  {
    "text": "read the data when we all we have is those events well here we have a pattern",
    "start": "465560",
    "end": "472000"
  },
  {
    "text": "command cury responsibility segregation that comes in handy it actually divide",
    "start": "472000",
    "end": "478879"
  },
  {
    "text": "our rights side where you write your data to your database and a read side where you actually read your",
    "start": "478879",
    "end": "484960"
  },
  {
    "text": "data and then you have what we call a projector that can listen to events and",
    "start": "484960",
    "end": "490879"
  },
  {
    "text": "a projector when you are listening to events to make up something that you read this information then you can",
    "start": "490879",
    "end": "497240"
  },
  {
    "text": "listen to all the aggregate all the different Aggregates types and you just pick out the pieces of those event that",
    "start": "497240",
    "end": "503680"
  },
  {
    "text": "you need that is relevant for the what we called on the read side our read model and we try to make these as atomic",
    "start": "503680",
    "end": "511960"
  },
  {
    "text": "as possible and really separate those out so you can easily throw one out and",
    "start": "511960",
    "end": "517518"
  },
  {
    "text": "make a new one so we project the events into read",
    "start": "517519",
    "end": "524720"
  },
  {
    "text": "models and that's how we actually handling the uh the need of also",
    "start": "524720",
    "end": "529760"
  },
  {
    "text": "displaying this data in the user interface or in a report or",
    "start": "529760",
    "end": "534880"
  },
  {
    "text": "whatever and then since we have those events it's really a",
    "start": "534880",
    "end": "540079"
  },
  {
    "text": "attempting actually I wonder if I skipped yeah it's really attempting to",
    "start": "540079",
    "end": "545120"
  },
  {
    "text": "use them because you can react to those events and that's where our concept of",
    "start": "545120",
    "end": "551680"
  },
  {
    "text": "reactors comes in so when you are reacting to an event you can do",
    "start": "551680",
    "end": "558760"
  },
  {
    "text": "something you capture that intention how do you want to react in a command again and you can do something to an agregate",
    "start": "558760",
    "end": "565560"
  },
  {
    "text": "but you are also allowed to do side effects so this means that you kind of",
    "start": "565560",
    "end": "571040"
  },
  {
    "text": "get a you can have more more places where you use the reactors you can do it",
    "start": "571040",
    "end": "576720"
  },
  {
    "text": "when you one aggregate should react to something that has happened in another aggregate or maybe you want to publish",
    "start": "576720",
    "end": "584800"
  },
  {
    "text": "an event and as I said event sourcing inside events don't publish them out",
    "start": "584800",
    "end": "590360"
  },
  {
    "text": "there but you can react to one of those insid event and create the outside event",
    "start": "590360",
    "end": "595760"
  },
  {
    "text": "that you want to share with the rest of the world and you can also react to",
    "start": "595760",
    "end": "601240"
  },
  {
    "text": "something that has happened and call for instance an external Solution by an",
    "start": "601240",
    "end": "607200"
  },
  {
    "text": "API so that is our reactors since we have those events we use them and I want",
    "start": "607200",
    "end": "613560"
  },
  {
    "text": "to take an example to explain what I think is the power of these reactors in",
    "start": "613560",
    "end": "618839"
  },
  {
    "text": "one of the solution I'm working with we have this concept of a strategy and when they user for instance start a strategy",
    "start": "618839",
    "end": "626120"
  },
  {
    "text": "it get a strategy started event that at that time we can give feedback back to the user and we can save that event and the",
    "start": "626120",
    "end": "635880"
  },
  {
    "text": "product recommendation hold a set of recommendation for that product and listen to this oh a strategy that I'm",
    "start": "635880",
    "end": "643000"
  },
  {
    "text": "interesting in has been started so it could save a set of recommendation algo",
    "start": "643000",
    "end": "649920"
  },
  {
    "text": "enabled event that the next aggregate can listen to and if the external",
    "start": "649920",
    "end": "655120"
  },
  {
    "text": "solution is done well it just wait and the user has for long time ago got the",
    "start": "655120",
    "end": "660560"
  },
  {
    "text": "feedback so it can wait but finally it will be done when the solution is up",
    "start": "660560",
    "end": "666079"
  },
  {
    "text": "again and typical it's just a matter of millisecond for a network glitch or",
    "start": "666079",
    "end": "672240"
  },
  {
    "text": "something so reactors give us kind of enter event driven architecture inside",
    "start": "672240",
    "end": "679200"
  },
  {
    "text": "our Solutions okay but all these events how",
    "start": "679200",
    "end": "685720"
  },
  {
    "text": "do we then fix our mistakes we don't have the possibility to just change the",
    "start": "685720",
    "end": "692320"
  },
  {
    "text": "state well event sourcing for me mimic the real world and that's something I really like about it because it feels",
    "start": "692320",
    "end": "699920"
  },
  {
    "text": "more right so let's assume that you go to Las Vegas and you have a good time",
    "start": "699920",
    "end": "706399"
  },
  {
    "text": "and you get married and you wake up the next day and you regret it so much what",
    "start": "706399",
    "end": "711839"
  },
  {
    "text": "will you do I guess you P should do some corrective action for instance try to",
    "start": "711839",
    "end": "717760"
  },
  {
    "text": "cancel that marriage that we lead to some compensating events that would be a",
    "start": "717760",
    "end": "723320"
  },
  {
    "text": "part of the stream of events and it be a part of the core of your story and that",
    "start": "723320",
    "end": "729600"
  },
  {
    "text": "is the same of course that accounting also is doing if you have a fat finger mistake and you pay a",
    "start": "729600",
    "end": "736720"
  },
  {
    "text": "thousand instead of 100 you typical don't just update that one number you",
    "start": "736720",
    "end": "742399"
  },
  {
    "text": "might be crediting the whole whole amount before you P pay the ne right",
    "start": "742399",
    "end": "748480"
  },
  {
    "text": "amount in the next transaction so this is how we correct our mistakes we do it",
    "start": "748480",
    "end": "754360"
  },
  {
    "text": "by triggers and compensating actions that lead to those compensating events and those is core",
    "start": "754360",
    "end": "761279"
  },
  {
    "text": "part of our domain model and of the history of that instance of the",
    "start": "761279",
    "end": "767800"
  },
  {
    "text": "aggregate I think event sourcing also gave me an other tool set when I'm thinking about the business rules",
    "start": "769120",
    "end": "776079"
  },
  {
    "text": "compared to more traditional solution I have built before and again this is about the splitting of",
    "start": "776079",
    "end": "782959"
  },
  {
    "text": "the re side and the right side and having this handling the command from",
    "start": "782959",
    "end": "788680"
  },
  {
    "text": "the users the reactors and the read models the writing with commands when",
    "start": "788680",
    "end": "793959"
  },
  {
    "text": "the user do something that is as it always has been it's checking about are",
    "start": "793959",
    "end": "799199"
  },
  {
    "text": "you allowed to do this for us it could be you can only start five strategies at the time uh in the banking example",
    "start": "799199",
    "end": "806399"
  },
  {
    "text": "mightbe you don't have allow to overdraw your account or probably they want you to do",
    "start": "806399",
    "end": "812440"
  },
  {
    "text": "so they can get interest but that's another story H so that is the kind of rules we",
    "start": "812440",
    "end": "818240"
  },
  {
    "text": "often call invariance in DDD that's the rules that needs to be true when data",
    "start": "818240",
    "end": "823360"
  },
  {
    "text": "are at rest and then you have the reactors and then one of the reason why I like these reactors in our world where",
    "start": "823360",
    "end": "830360"
  },
  {
    "text": "we do more and more automation is that they take care of all the rules on whenever this happen then that should",
    "start": "830360",
    "end": "837279"
  },
  {
    "text": "happen and there's more automation we have I feel tend to feel that we get more and more of those kind of rules and",
    "start": "837279",
    "end": "844360"
  },
  {
    "text": "of course if it also do something to an aggregate it need to check that the rules the business rules are",
    "start": "844360",
    "end": "850720"
  },
  {
    "text": "applied and on the other side you have the read models and you can say but that's only about putting data together",
    "start": "850720",
    "end": "857759"
  },
  {
    "text": "there isn't a lot of business rules there when my experience is different a lot of time when we show things to our",
    "start": "857759",
    "end": "866440"
  },
  {
    "text": "data to the user through the user interface it can be a dashboard it can be a lot of business rules like how many",
    "start": "866440",
    "end": "873360"
  },
  {
    "text": "digits should you use for this kind of calculation if you have product a product type how do you group those all",
    "start": "873360",
    "end": "880480"
  },
  {
    "text": "those kind of rules that before was kind of cluttered together with the right side is now on the read side and only",
    "start": "880480",
    "end": "888079"
  },
  {
    "text": "there so read side is about transforming the data but by using the business",
    "start": "888079",
    "end": "894920"
  },
  {
    "text": "rules and since different uh business rule can go different different places",
    "start": "894920",
    "end": "900160"
  },
  {
    "text": "each part tend to become a bit more simpler yeah so event sourcing you can",
    "start": "900160",
    "end": "907600"
  },
  {
    "text": "say you have a command and a command Handler that do something to this Aggregate and it create the events and",
    "start": "907600",
    "end": "913959"
  },
  {
    "text": "then you have the read model or the projector listening to that events it's not like it wait until the user",
    "start": "913959",
    "end": "921880"
  },
  {
    "text": "interface ask for some information before it makes the read model it will listen and react as fast as possible to",
    "start": "921880",
    "end": "929000"
  },
  {
    "text": "build that read model and then you typical have when the client have a cury",
    "start": "929000",
    "end": "934279"
  },
  {
    "text": "and ask for some information well it get that from the finished read model and",
    "start": "934279",
    "end": "941560"
  },
  {
    "text": "then of course you also have the reactors and the same pattern for the reactors we also use when we react to",
    "start": "941560",
    "end": "949160"
  },
  {
    "text": "outside events yeah so that was what is event",
    "start": "949160",
    "end": "957639"
  },
  {
    "text": "sourcing and then we can go to why should you use it and of course the easy",
    "start": "957639",
    "end": "964000"
  },
  {
    "text": "answer is you should only use it when it fits the problem to solve and I think that is also an",
    "start": "964000",
    "end": "971240"
  },
  {
    "text": "important answer because this is really a pattern that has some caveats and it",
    "start": "971240",
    "end": "976880"
  },
  {
    "text": "doesn't fit all the types of problems but even though it's important on the right answer it probably isn't very",
    "start": "976880",
    "end": "983759"
  },
  {
    "text": "useful so what I would try to do now is to go through some good part what do I think it it's good with this pattern and",
    "start": "983759",
    "end": "990680"
  },
  {
    "text": "some hard part where is the pain because I think I hope I give you something to",
    "start": "990680",
    "end": "995800"
  },
  {
    "text": "think about so if you want to solve it in a solution yourself you can go through and check is the good part the",
    "start": "995800",
    "end": "1003000"
  },
  {
    "text": "gain bigger than the Heart part or the pain maybe it's something to",
    "start": "1003000",
    "end": "1010920"
  },
  {
    "text": "consider and the first thing that often come up when you check this what is the best thing about event sourcing is that",
    "start": "1011480",
    "end": "1018560"
  },
  {
    "text": "it never lose any data and here I come back to the different path that lead to",
    "start": "1018560",
    "end": "1024480"
  },
  {
    "text": "the same uh instance of or the state of your",
    "start": "1024480",
    "end": "1030038"
  },
  {
    "text": "aggregate in this case if you only store the state of your Aggregate and someone",
    "start": "1030039",
    "end": "1035240"
  },
  {
    "text": "ask you how often does this kind of shoes be removed from your shopping cart",
    "start": "1035240",
    "end": "1040720"
  },
  {
    "text": "you can't answer that question and that is what they mean by never losing any data but I've been",
    "start": "1040720",
    "end": "1047880"
  },
  {
    "text": "working with Sol soltions for years and years before I started with EV sourcing",
    "start": "1047880",
    "end": "1053240"
  },
  {
    "text": "and was it like I felt that we were losing data all the time did we just throw it away because it wasn't",
    "start": "1053240",
    "end": "1058360"
  },
  {
    "text": "important we didn't at least not in the business application I've been working with so what we did we do well we added",
    "start": "1058360",
    "end": "1066039"
  },
  {
    "text": "versions and then we added some Flags we said this line this version of this information was done by a user and this",
    "start": "1066039",
    "end": "1074080"
  },
  {
    "text": "was updated by a system user and we cluttered kind of our AG state with a",
    "start": "1074080",
    "end": "1079840"
  },
  {
    "text": "lot of information and after starting with event sourcing I kind realize that",
    "start": "1079840",
    "end": "1084880"
  },
  {
    "text": "why did we do that we actually wanted to know how we got to that state voila do",
    "start": "1084880",
    "end": "1091640"
  },
  {
    "text": "event sourcing and you get it for free well there are some pain so I guess there is nothing like a free lunch but",
    "start": "1091640",
    "end": "1098360"
  },
  {
    "text": "at least that you can keep all those data without needing to add so much",
    "start": "1098360",
    "end": "1105440"
  },
  {
    "text": "extra information just to know how did we actually get to the state that we are storing that's at least we did for the",
    "start": "1105440",
    "end": "1112840"
  },
  {
    "text": "solution I have been working with in the past and then I have this phrase for",
    "start": "1112840",
    "end": "1119159"
  },
  {
    "text": "architecting for tomorrow questions and I think equinor is a",
    "start": "1119159",
    "end": "1125159"
  },
  {
    "text": "organization that want to be more and more datadriven as a lot of organization want these days and of",
    "start": "1125159",
    "end": "1133600"
  },
  {
    "text": "course in an organization like this someone will and they should actually ask us a question based on the data we",
    "start": "1133600",
    "end": "1140919"
  },
  {
    "text": "have can you answer this for me and here I think event sourcing fits really well",
    "start": "1140919",
    "end": "1147120"
  },
  {
    "text": "because what we do we have our domain events and we put all information that",
    "start": "1147120",
    "end": "1152640"
  },
  {
    "text": "is relevant to actually what have happened related to that specific type of of event and that you can say makes",
    "start": "1152640",
    "end": "1160520"
  },
  {
    "text": "the event a bit more complicated because it keeps track of more information but it doesn't influence in any bad way the",
    "start": "1160520",
    "end": "1168440"
  },
  {
    "text": "AG gate state it doesn't influence the read models or the reactors so it's a",
    "start": "1168440",
    "end": "1173919"
  },
  {
    "text": "kind of very isolated and cheap way to keep all the information that you need",
    "start": "1173919",
    "end": "1180159"
  },
  {
    "text": "for for answering the question that you will get tomorrow and of course we do that by",
    "start": "1180159",
    "end": "1187960"
  },
  {
    "text": "when I ask a new question we can just make a new read model we can also try to",
    "start": "1187960",
    "end": "1194480"
  },
  {
    "text": "change one of the existing one but the thinking for read models is that keep them small for instance they can match",
    "start": "1194480",
    "end": "1201840"
  },
  {
    "text": "one table in the user interface or they can match a report so if they want something to that is they are quite the",
    "start": "1201840",
    "end": "1209240"
  },
  {
    "text": "same but still different we just make two different R models and I think event sourcing have a",
    "start": "1209240",
    "end": "1217240"
  },
  {
    "text": "sweet spot when it comes to task-based interfaces and with what I mean by that",
    "start": "1217240",
    "end": "1222280"
  },
  {
    "text": "is for instance in our strategy example if we only have this state save strategy",
    "start": "1222280",
    "end": "1228080"
  },
  {
    "text": "command we already at that point have actually lost the intention from the user what did it try to do if you have a",
    "start": "1228080",
    "end": "1235880"
  },
  {
    "text": "task based user interface as we are using with defining a new strategy",
    "start": "1235880",
    "end": "1241159"
  },
  {
    "text": "taking ownership of it start or stopping it then it's easy to capture that intent",
    "start": "1241159",
    "end": "1247480"
  },
  {
    "text": "in a command and to have those linked to the events so it has a sweet spot there",
    "start": "1247480",
    "end": "1254120"
  },
  {
    "text": "not so good fit for a completely crude based user interface",
    "start": "1254120",
    "end": "1259480"
  },
  {
    "text": "time traveling haven't you always wanted that traveling in Time Event sourcing",
    "start": "1259480",
    "end": "1265360"
  },
  {
    "text": "gives you that un luckily we are not able to travel in the future that would",
    "start": "1265360",
    "end": "1270840"
  },
  {
    "text": "have been awesome but at least we can travel into the past once there was in a",
    "start": "1270840",
    "end": "1276880"
  },
  {
    "text": "solution where the user was uh focusing on some fabrics and those Fabrics had",
    "start": "1276880",
    "end": "1282679"
  },
  {
    "text": "OES and they told us that we are likely to need to know how many of the these",
    "start": "1282679",
    "end": "1288799"
  },
  {
    "text": "outes did we actually know about three months before they happened this kind of",
    "start": "1288799",
    "end": "1295279"
  },
  {
    "text": "questions is easy to answer in a event sourcing application and that is one of",
    "start": "1295279",
    "end": "1301240"
  },
  {
    "text": "the really good part of it and luckily for us we never got around to implement",
    "start": "1301240",
    "end": "1306559"
  },
  {
    "text": "that part of the solution but that's a completely other story but I hope you see the kind of scenario where this",
    "start": "1306559",
    "end": "1313600"
  },
  {
    "text": "makes sense in memory read models that",
    "start": "1313600",
    "end": "1318840"
  },
  {
    "text": "something I like very much because you could say as long as the remodels is listening to those event what if every",
    "start": "1318840",
    "end": "1325919"
  },
  {
    "text": "time you restart your application you actually start listening to the first event ever and then you build up your",
    "start": "1325919",
    "end": "1333559"
  },
  {
    "text": "read model you don't need to save it in the database and this might feel silly you",
    "start": "1333559",
    "end": "1339440"
  },
  {
    "text": "don't do this kind of thing but yeah we do it and we do it in production but not all the",
    "start": "1339440",
    "end": "1345440"
  },
  {
    "text": "places in the start of your application when you develop it before it go into",
    "start": "1345440",
    "end": "1350559"
  },
  {
    "text": "production is really good because when you show data information to the users I feel like when I see something they know",
    "start": "1350559",
    "end": "1357200"
  },
  {
    "text": "what they should have asked so the read models tend to be changing a lot in the",
    "start": "1357200",
    "end": "1362360"
  },
  {
    "text": "star and that is faster to change when you don't need to keep in track with the",
    "start": "1362360",
    "end": "1367880"
  },
  {
    "text": "with a database too and since these read models are in memory this is really fast",
    "start": "1367880",
    "end": "1373480"
  },
  {
    "text": "so what we have some in memory read models in production today but we are also places where they started in",
    "start": "1373480",
    "end": "1380080"
  },
  {
    "text": "production to be in memory and when the streams got too long well we made this",
    "start": "1380080",
    "end": "1386240"
  },
  {
    "text": "part to save it to the database so it gives you those option to add it on on a latest State without it takes too much",
    "start": "1386240",
    "end": "1394840"
  },
  {
    "text": "time and I think uh event sorting help with distributed solution and again it's",
    "start": "1394840",
    "end": "1401120"
  },
  {
    "text": "the reactors that help us with it I don't know if you know about the outbox part then for instance if you want to",
    "start": "1401120",
    "end": "1408880"
  },
  {
    "text": "save update your state in a nonevent source application and you also want to call an",
    "start": "1408880",
    "end": "1414799"
  },
  {
    "text": "API that can of course not be done in one physical transaction so what a lot of people does is to save that updated",
    "start": "1414799",
    "end": "1422720"
  },
  {
    "text": "State and save a row in an outbut out books pattern out Book Table and in the",
    "start": "1422720",
    "end": "1430919"
  },
  {
    "text": "same transaction and then I can pull that outbox to actually do the API call so",
    "start": "1430919",
    "end": "1437520"
  },
  {
    "text": "they know it be done done will be done and this using the",
    "start": "1437520",
    "end": "1442559"
  },
  {
    "text": "reactors just reacting to the event you get this outbox pattern for free because",
    "start": "1442559",
    "end": "1448120"
  },
  {
    "text": "this date is already already saved and the reactor will keep on getting that",
    "start": "1448120",
    "end": "1453440"
  },
  {
    "text": "event until it actually has done the API call and the external solution is up and",
    "start": "1453440",
    "end": "1459840"
  },
  {
    "text": "the same you can do for those outside events in an event driven",
    "start": "1459840",
    "end": "1465399"
  },
  {
    "text": "architecture but in this conference at least been on some good talks related to",
    "start": "1465399",
    "end": "1470679"
  },
  {
    "text": "model monolith and I think our event sourcing solution also is good for",
    "start": "1470679",
    "end": "1477720"
  },
  {
    "text": "building mon monoliths and the reason for this is that our agregates is",
    "start": "1477720",
    "end": "1483440"
  },
  {
    "text": "communicating by reacting to events the read model is communicating by reacting",
    "start": "1483440",
    "end": "1490120"
  },
  {
    "text": "or projecting those events and if anyone was here looking at the talk by Leila",
    "start": "1490120",
    "end": "1496600"
  },
  {
    "text": "Taylor yesterday she were talking about this distribute ready modular monat and",
    "start": "1496600",
    "end": "1503320"
  },
  {
    "text": "that was kind of the same pattern so it is you get it again not completely for",
    "start": "1503320",
    "end": "1510480"
  },
  {
    "text": "free I will come back to that on the paino but at least that's how we just build these Solutions so they are kind",
    "start": "1510480",
    "end": "1517600"
  },
  {
    "text": "of distributed ready model monolit if we want to put them into one",
    "start": "1517600",
    "end": "1523720"
  },
  {
    "text": "monolit it's good fit for near real time user interfaces and the reason why I think that is of",
    "start": "1523720",
    "end": "1531399"
  },
  {
    "text": "course we use signal a to push out the information into the user interface and you can do that without event sourcing",
    "start": "1531399",
    "end": "1538520"
  },
  {
    "text": "of course you can but then you need to know oh this part of the database is now",
    "start": "1538520",
    "end": "1543919"
  },
  {
    "text": "updated where in my user interface does that affect with our read model concept",
    "start": "1543919",
    "end": "1549559"
  },
  {
    "text": "is really good with this front and for backend now backend for front end pattern so we have these specific read",
    "start": "1549559",
    "end": "1556440"
  },
  {
    "text": "models and the read models itself know no I have been updated and this part has",
    "start": "1556440",
    "end": "1561600"
  },
  {
    "text": "been updated and that's what I push out to to the user and I think I find them easier to",
    "start": "1561600",
    "end": "1568559"
  },
  {
    "text": "extend and the reason why that is easier to extend an existing aggregate with",
    "start": "1568559",
    "end": "1574440"
  },
  {
    "text": "just adding handling of a new event and a new command then need to change their",
    "start": "1574440",
    "end": "1581640"
  },
  {
    "text": "state of it because that's more to enhance the aggregate but here you kind of extend them with those building",
    "start": "1581640",
    "end": "1587960"
  },
  {
    "text": "blocks and you can extend them with a complete new read model without touching the right side that is often the hard",
    "start": "1587960",
    "end": "1594760"
  },
  {
    "text": "side at all and you get an audit log for",
    "start": "1594760",
    "end": "1600799"
  },
  {
    "text": "free because time is an implicit Dimension here and you get all those",
    "start": "1600799",
    "end": "1606600"
  },
  {
    "text": "events telling what have happened so you have this audit log and that gives me what I call dger heaven and why do I",
    "start": "1606600",
    "end": "1613840"
  },
  {
    "text": "like that well I know how it is not to have it wa when I have been working for",
    "start": "1613840",
    "end": "1619559"
  },
  {
    "text": "a year I think I was working in a accounting solution and this was in the",
    "start": "1619559",
    "end": "1625520"
  },
  {
    "text": "' 90s so there was no event sourcing or events that could tell me what have happened but at least we got a hole in",
    "start": "1625520",
    "end": "1631919"
  },
  {
    "text": "our sequence of transaction ideas and if you know anything about accounting",
    "start": "1631919",
    "end": "1637080"
  },
  {
    "text": "that's bad really bad and I used literally a week to figure it out that",
    "start": "1637080",
    "end": "1642880"
  },
  {
    "text": "if the user went into this screen pushed that button went into that screen push that and that button and went into the",
    "start": "1642880",
    "end": "1649200"
  },
  {
    "text": "first screen and saved I recreated that situation after a year now when we have",
    "start": "1649200",
    "end": "1655520"
  },
  {
    "text": "situations and I'm always stressed when something happen in production I can go to the logs of event and like what did I",
    "start": "1655520",
    "end": "1663440"
  },
  {
    "text": "do that one did that event happen before that one it's there laying it out it's",
    "start": "1663440",
    "end": "1669720"
  },
  {
    "text": "kind of you you can't miss what have been happening and you can use that to",
    "start": "1669720",
    "end": "1675000"
  },
  {
    "text": "debug Your solution later really awesome awesome and I think it's easier to scale",
    "start": "1675000",
    "end": "1682360"
  },
  {
    "text": "the part independently both because if you are distributed ready modular monol you can carve out the pieces and also",
    "start": "1682360",
    "end": "1689559"
  },
  {
    "text": "it's a it's easier to make these distributed Solutions so that's related",
    "start": "1689559",
    "end": "1695399"
  },
  {
    "text": "to this but together that gives me a lots of options and as an architect I like option that I don't need to use in",
    "start": "1695399",
    "end": "1702799"
  },
  {
    "text": "the start of building the solution but when I actually need it",
    "start": "1702799",
    "end": "1709159"
  },
  {
    "text": "okay a lot of good things but there are some hard parts and one of those is that",
    "start": "1709159",
    "end": "1716640"
  },
  {
    "text": "it's a new way of building solution and I think that is kind of the number one that is mentioned when I talk to other",
    "start": "1716640",
    "end": "1723360"
  },
  {
    "text": "people too and that is what I have seen hit us really hard too because if you",
    "start": "1723360",
    "end": "1729120"
  },
  {
    "text": "are not used to it it's a bit different way of thinking and I don't think it's so much that you don't know it but I",
    "start": "1729120",
    "end": "1736519"
  },
  {
    "text": "think actually you need to believe that this is a good way for solving that problem and really wanting and embracing",
    "start": "1736519",
    "end": "1743399"
  },
  {
    "text": "those concept not making kind of a compromise that doesn't really work so",
    "start": "1743399",
    "end": "1749760"
  },
  {
    "text": "this one is not to be underestimated but it's of course dependent on the team and the motivation",
    "start": "1749760",
    "end": "1756600"
  },
  {
    "text": "for just building the solution this way immutable events they hard to",
    "start": "1756600",
    "end": "1762760"
  },
  {
    "text": "correct mistakes I need to admit it I sometimes do miss my update possibilities just",
    "start": "1762760",
    "end": "1771320"
  },
  {
    "text": "updating the state when I have these events and need to make this",
    "start": "1771320",
    "end": "1776559"
  },
  {
    "text": "compensating events when things have happen that is harder but it is doable and when you",
    "start": "1776559",
    "end": "1784320"
  },
  {
    "text": "have done it you have the trace a new solution that is a good",
    "start": "1784320",
    "end": "1789960"
  },
  {
    "text": "thing I think I also want to mention that the reactors can slow down new solution and that's of course if you",
    "start": "1789960",
    "end": "1796919"
  },
  {
    "text": "compare it to a monol it because since the reactors react to things that have been saved to the database if you",
    "start": "1796919",
    "end": "1804039"
  },
  {
    "text": "compare it to a monolit and it can be a modular monolit that is a good pattern",
    "start": "1804039",
    "end": "1810159"
  },
  {
    "text": "but if that has all the communication inside one process this will typically",
    "start": "1810159",
    "end": "1815760"
  },
  {
    "text": "be slower just as when you do more distribution it will be slower because here you actually get a bit of this",
    "start": "1815760",
    "end": "1823399"
  },
  {
    "text": "intercommunication already so that is something to take into account it isn't very slow so maybe it isn't an issue for",
    "start": "1823399",
    "end": "1830919"
  },
  {
    "text": "some application but maybe for others eventual consistency of course if",
    "start": "1830919",
    "end": "1837279"
  },
  {
    "text": "the user types something in the user interface you don't need to wait until the read model is eventually updated",
    "start": "1837279",
    "end": "1843399"
  },
  {
    "text": "because it's already given you that information so you can display it to it but most of the things that we show to",
    "start": "1843399",
    "end": "1850080"
  },
  {
    "text": "our users is the it's application where there's a lot of automation going on so",
    "start": "1850080",
    "end": "1856639"
  },
  {
    "text": "maybe it's a on a third party platform that is coming in and we are displaying it well there the eventual consistency",
    "start": "1856639",
    "end": "1865320"
  },
  {
    "text": "is all about what is the pain point for how long it could take if I ask my users",
    "start": "1865320",
    "end": "1870960"
  },
  {
    "text": "is it okay you see it at one minute after it happened mightbe they say no is it okay if you see it one second after",
    "start": "1870960",
    "end": "1877320"
  },
  {
    "text": "has happened maybe they say yes and then my the pain point is somewhere between",
    "start": "1877320",
    "end": "1882679"
  },
  {
    "text": "this and I really want to challenge this eventual consistency a bit because I",
    "start": "1882679",
    "end": "1888760"
  },
  {
    "text": "when I read about it on the internet even for the read models it seems to be such a big issue and I don't think we",
    "start": "1888760",
    "end": "1894919"
  },
  {
    "text": "always take into account how is this actually for the users because again I've been working with solution in the",
    "start": "1894919",
    "end": "1901480"
  },
  {
    "text": "past and I've working with solution with huge databases really strong consistency and Best in Class for",
    "start": "1901480",
    "end": "1908679"
  },
  {
    "text": "two-phase commit everything is strong consistent and I had the pleasure to have walk through with a lot of users",
    "start": "1908679",
    "end": "1915399"
  },
  {
    "text": "for those uh solution and one of them told me something that sticks to my mind she said to me and this was a Windows",
    "start": "1915399",
    "end": "1922200"
  },
  {
    "text": "application with a lot of windows so she said when I look at the table in this window if someone else update that data",
    "start": "1922200",
    "end": "1929039"
  },
  {
    "text": "I need to refresh it and then she opened another window and said if I'm looking at this information in that window and",
    "start": "1929039",
    "end": "1935919"
  },
  {
    "text": "sometime some people change it I need to close the window and reopen it again and",
    "start": "1935919",
    "end": "1940960"
  },
  {
    "text": "now we see the changes and then she had a third Windows she said but if someone",
    "start": "1940960",
    "end": "1946399"
  },
  {
    "text": "changed the information in this window I actually have to close the application and take it up again to see those",
    "start": "1946399",
    "end": "1952919"
  },
  {
    "text": "changes so may be our near real time uh interfaces even though they are",
    "start": "1952919",
    "end": "1959600"
  },
  {
    "text": "Adventure consistency in some cases are better it all depends on the use case",
    "start": "1959600",
    "end": "1964880"
  },
  {
    "text": "but think about it challenge it not just think oh it's it's a bad thing anyhow",
    "start": "1964880",
    "end": "1970399"
  },
  {
    "text": "and of course a lot of the information we show for the users when we get it from third party platforms it is",
    "start": "1970399",
    "end": "1976639"
  },
  {
    "text": "eventual for them anyway because we don't get it in the same nanc as it was",
    "start": "1976639",
    "end": "1982880"
  },
  {
    "text": "created because that was an other platform on by another company those events lives",
    "start": "1982880",
    "end": "1990679"
  },
  {
    "text": "forever and of course this then you get the version what if they are changing",
    "start": "1990679",
    "end": "1996480"
  },
  {
    "text": "and all these kind of things and that is a really paino that you should think",
    "start": "1996480",
    "end": "2001600"
  },
  {
    "text": "about and Greg young has actually written a book about this but about versing for Event Source Solutions and",
    "start": "2001600",
    "end": "2009360"
  },
  {
    "text": "there are pattern out there but it's good to think about what is a good fit for your solution we actually do",
    "start": "2009360",
    "end": "2016240"
  },
  {
    "text": "migration this means that we take the complete stream of events start with the first change it and we put it into a new",
    "start": "2016240",
    "end": "2023639"
  },
  {
    "text": "event store and that's how we keep up with the vers but of course you can have event with versing and so on too so",
    "start": "2023639",
    "end": "2031600"
  },
  {
    "text": "there is a lot of different option here but yeah it is a bit of a paino that they live forever but we don't want to",
    "start": "2031600",
    "end": "2038480"
  },
  {
    "text": "lose any data so we haven't an option to to throw them away and then we need to make the stream",
    "start": "2038480",
    "end": "2045760"
  },
  {
    "text": "shorter we want short streams for our Aggregates and this was new to me",
    "start": "2045760",
    "end": "2052320"
  },
  {
    "text": "starting with aent sourcing even though I know didd and done designing of",
    "start": "2052320",
    "end": "2058118"
  },
  {
    "text": "Aggregates that was hard before but now it has become a bit more harder because I need to take this into account try to",
    "start": "2058119",
    "end": "2065480"
  },
  {
    "text": "avoid to have an aggregate that can get new events forever and ever and again",
    "start": "2065480",
    "end": "2071839"
  },
  {
    "text": "like accounting accounting do event sorting but they every year they kind of",
    "start": "2071839",
    "end": "2077398"
  },
  {
    "text": "stop things and they start on a new stream the next year so you can think like that to solve this problem but it",
    "start": "2077399",
    "end": "2086280"
  },
  {
    "text": "is harder and there's money moving part no way around it especially if you compare",
    "start": "2086280",
    "end": "2092560"
  },
  {
    "text": "it to a traditional solution where you don't even uh split the right on the",
    "start": "2092560",
    "end": "2098920"
  },
  {
    "text": "read side this have more moving parts and it can be harder to see the big",
    "start": "2098920",
    "end": "2105480"
  },
  {
    "text": "picture and I think this mightbe it's not so much about this event sourcing",
    "start": "2105480",
    "end": "2111119"
  },
  {
    "text": "but it's actually that we make take the events and make an event driven architecture inside of a solution and",
    "start": "2111119",
    "end": "2118720"
  },
  {
    "text": "you can do that without event sourcing too and then you get the same challenges that you often get with event driven",
    "start": "2118720",
    "end": "2125520"
  },
  {
    "text": "architecture between Solutions that is harder to see how all these events uh",
    "start": "2125520",
    "end": "2131240"
  },
  {
    "text": "fills together but it's easier in one way with event sourcing because all those events are internal so we give",
    "start": "2131240",
    "end": "2139079"
  },
  {
    "text": "track of which event has been triggered by what other event so we know the",
    "start": "2139079",
    "end": "2144160"
  },
  {
    "text": "traces of the solution",
    "start": "2144160",
    "end": "2147880"
  },
  {
    "text": "easier yeah so that was why we should use event sourcing and you see the list",
    "start": "2149240",
    "end": "2154839"
  },
  {
    "text": "but the number of point in the list it doesn't matter what matter is what problem are you",
    "start": "2154839",
    "end": "2160640"
  },
  {
    "text": "solving and how important is each point of on that list for your solution and of",
    "start": "2160640",
    "end": "2168560"
  },
  {
    "text": "course this list is not complete there is more but I try to highlight the ones",
    "start": "2168560",
    "end": "2174440"
  },
  {
    "text": "that I find most important okay let's go on with how do",
    "start": "2174440",
    "end": "2182000"
  },
  {
    "text": "we build a vort solution and the good part here is that the only thing you",
    "start": "2182000",
    "end": "2187359"
  },
  {
    "text": "need need is four building blocks and actually the only thing we use are those",
    "start": "2187359",
    "end": "2193160"
  },
  {
    "text": "four building blocks and the thinking here is that we take those building blocks like Lego bricks and we can",
    "start": "2193160",
    "end": "2200160"
  },
  {
    "text": "assemble them in different ways and put together our Event Source business application solving the business",
    "start": "2200160",
    "end": "2207680"
  },
  {
    "text": "problems and these four building blocks I actually pick up by a talk by Sebastian Fon",
    "start": "2207680",
    "end": "2214599"
  },
  {
    "text": "Conrad and I find them really useful because in our team we always know what",
    "start": "2214599",
    "end": "2219960"
  },
  {
    "text": "building blocks are we working on now and we know the pattern for each and every one of those making it easier to",
    "start": "2219960",
    "end": "2226880"
  },
  {
    "text": "keep them simple and I will come back to that so the first building box is the",
    "start": "2226880",
    "end": "2232319"
  },
  {
    "text": "event store and we use Cosmos DB for that and the reason is that Cosmos DB",
    "start": "2232319",
    "end": "2238119"
  },
  {
    "text": "has a something they call a change feed and this change feed let you push out events and I will also come more back to",
    "start": "2238119",
    "end": "2245920"
  },
  {
    "text": "that but Microsoft on their pages are saying that event sourcing in what is",
    "start": "2245920",
    "end": "2251520"
  },
  {
    "text": "one of the scenarios where Co Cosmos DBS change feed is a good fit to use so it's",
    "start": "2251520",
    "end": "2257520"
  },
  {
    "text": "good to know that we use it in a way that it really is intended and the event",
    "start": "2257520",
    "end": "2262760"
  },
  {
    "text": "store only need to have two core uh methods the one is to load all the",
    "start": "2262760",
    "end": "2269160"
  },
  {
    "text": "events for our stream so we can Loop through them and actually Source the state of our Aggregate and the other is",
    "start": "2269160",
    "end": "2276599"
  },
  {
    "text": "to save new events by appending them to the event stream for that stream",
    "start": "2276599",
    "end": "2283400"
  },
  {
    "text": "ID and the beauty of it is that when we need new Aggregates or if I need new",
    "start": "2283400",
    "end": "2289040"
  },
  {
    "text": "event types in my existing Aggregates I don't need to think about how to save",
    "start": "2289040",
    "end": "2294440"
  },
  {
    "text": "that data on the right side because event the event store take care of that",
    "start": "2294440",
    "end": "2299560"
  },
  {
    "text": "and since I really like to work with the business problems not so much with the",
    "start": "2299560",
    "end": "2305200"
  },
  {
    "text": "database code I find that really useful and of course this is because we for",
    "start": "2305200",
    "end": "2310960"
  },
  {
    "text": "every event we store some information for what stream it is what's stream ID",
    "start": "2310960",
    "end": "2317000"
  },
  {
    "text": "that's the kind of ID of that aggregate instance the version here is the",
    "start": "2317000",
    "end": "2323680"
  },
  {
    "text": "sequence in the Stream of events for that aggregate instance and as long as you have the event type and you have a",
    "start": "2323680",
    "end": "2329800"
  },
  {
    "text": "payload you can seriz and deserialize new event types into your event store so",
    "start": "2329800",
    "end": "2336920"
  },
  {
    "text": "you don't need to add any logic when you get new information like new Aggregates",
    "start": "2336920",
    "end": "2342000"
  },
  {
    "text": "and new event types so writing with commands building block we have touched",
    "start": "2342000",
    "end": "2347599"
  },
  {
    "text": "upon this already the user do some something we capture the intention in the command we do something to the",
    "start": "2347599",
    "end": "2354640"
  },
  {
    "text": "Aggregate and the result can be a set of events that again lead to an updated",
    "start": "2354640",
    "end": "2361160"
  },
  {
    "text": "aggregate state so I want to say a bit about an aggregate in a d DD context because I've",
    "start": "2361160",
    "end": "2369400"
  },
  {
    "text": "been working with uh domain D design for non Event Source applications and there",
    "start": "2369400",
    "end": "2374920"
  },
  {
    "text": "I was used to that aggregate we treat as a unit that means if the user is adding",
    "start": "2374920",
    "end": "2381760"
  },
  {
    "text": "an item I would never just save that one row line in one table because our",
    "start": "2381760",
    "end": "2388400"
  },
  {
    "text": "aggregate we always read as a unit we update them as a unit and we save them",
    "start": "2388400",
    "end": "2393920"
  },
  {
    "text": "as a unit because they are our transaction boundaries and there also",
    "start": "2393920",
    "end": "2399040"
  },
  {
    "text": "have the rules for what is a valid state of the aggregate so if you keep that in",
    "start": "2399040",
    "end": "2406040"
  },
  {
    "text": "mind loading all the events for the Aggregate and loop through it to Source",
    "start": "2406040",
    "end": "2411079"
  },
  {
    "text": "the state well that's what we did before in the DDD solution I've been working",
    "start": "2411079",
    "end": "2416599"
  },
  {
    "text": "with because then we just read the complete state from the start and the next point is where things becomes a bit",
    "start": "2416599",
    "end": "2423720"
  },
  {
    "text": "different because the business logic really only it's about what events new",
    "start": "2423720",
    "end": "2430000"
  },
  {
    "text": "events will be created and it can be zero one or more but at this point when",
    "start": "2430000",
    "end": "2435599"
  },
  {
    "text": "the new events has been created the aggregate state is still not updated",
    "start": "2435599",
    "end": "2440680"
  },
  {
    "text": "because that you do as the next step then you Source the updated aggregate state from those new",
    "start": "2440680",
    "end": "2447119"
  },
  {
    "text": "events and then you do an EV validation if you need it and if it's aggregate",
    "start": "2447119",
    "end": "2452839"
  },
  {
    "text": "state is valid you can save it and all the code I show it's just illustrative",
    "start": "2452839",
    "end": "2458760"
  },
  {
    "text": "code it's it is based on real code but it's simplified so here for all the",
    "start": "2458760",
    "end": "2463960"
  },
  {
    "text": "command handlers they need to Source the state of the Aggregate and update the state and save the new events so here we",
    "start": "2463960",
    "end": "2471440"
  },
  {
    "text": "have some common code so we don't need to do that boiler plate every time what",
    "start": "2471440",
    "end": "2477200"
  },
  {
    "text": "we need to do then if we have a new aggregate we need to put new the",
    "start": "2477200",
    "end": "2482520"
  },
  {
    "text": "information in that aggregate State and we need for new new command you need to",
    "start": "2482520",
    "end": "2489079"
  },
  {
    "text": "write the business logic how does that lead to new events and then the last part is that",
    "start": "2489079",
    "end": "2496280"
  },
  {
    "text": "you need to Define how new different event types really update the state of",
    "start": "2496280",
    "end": "2502880"
  },
  {
    "text": "your agregate so if you get a new command on an existing aggregate that do",
    "start": "2502880",
    "end": "2508400"
  },
  {
    "text": "only lead to existing event you don't need to add to the last part and finally",
    "start": "2508400",
    "end": "2515520"
  },
  {
    "text": "you we also have a rules for what is a valid state of the aggregate but that is",
    "start": "2515520",
    "end": "2520880"
  },
  {
    "text": "something that typical do not change a",
    "start": "2520880",
    "end": "2525880"
  },
  {
    "text": "lot and the third building box is reading by curious and that is how",
    "start": "2526680",
    "end": "2532920"
  },
  {
    "text": "sebastan Fon Conrad coins it I call it read models and here is the pattern you",
    "start": "2532920",
    "end": "2539240"
  },
  {
    "text": "have an event you have if it's the first event ever you have an empty read model",
    "start": "2539240",
    "end": "2545960"
  },
  {
    "text": "state but then you build your read model state so if you have a remodel State and you get an updated read model State and",
    "start": "2545960",
    "end": "2552319"
  },
  {
    "text": "I focus on these patterns because I really think those are important in order to keep each building block",
    "start": "2552319",
    "end": "2560359"
  },
  {
    "text": "simple and here is the uh the chain feed are giving us the functionality we need",
    "start": "2560359",
    "end": "2567280"
  },
  {
    "text": "because when you have the chain feed you can make a projector that listen to events and you can tell the chain Feld I",
    "start": "2567280",
    "end": "2574440"
  },
  {
    "text": "want to start from the very first event of that street and the change will field will take care",
    "start": "2574440",
    "end": "2580119"
  },
  {
    "text": "of the bookmark and finally you can listen to those event not hammering is there any news is anything have happened",
    "start": "2580119",
    "end": "2587000"
  },
  {
    "text": "what have happened since the last time of course there are some hammering under the hood of things but that's Microsoft",
    "start": "2587000",
    "end": "2593319"
  },
  {
    "text": "takes care of and we don't need to do that so that's why we use the cosmos GB",
    "start": "2593319",
    "end": "2600559"
  },
  {
    "text": "is actually because change feed has this functionality and I just want to say a",
    "start": "2600559",
    "end": "2608440"
  },
  {
    "text": "lot of people use change feed related to Asher functions but we have just a",
    "start": "2608440",
    "end": "2616079"
  },
  {
    "text": "ordinary web application a net web application but we don't need to write a",
    "start": "2616079",
    "end": "2621880"
  },
  {
    "text": "lot of code as I can you can see here we need to have a method that it should be",
    "start": "2621880",
    "end": "2627119"
  },
  {
    "text": "called when events are pushed out and that could be a uh a set of events",
    "start": "2627119",
    "end": "2633040"
  },
  {
    "text": "depending on the load if it's only one new event that has come in the cosos change with push out that one event and",
    "start": "2633040",
    "end": "2640680"
  },
  {
    "text": "you typical put it in a IH hosted service so it start when you app",
    "start": "2640680",
    "end": "2646359"
  },
  {
    "text": "actually starts and then what you need to",
    "start": "2646359",
    "end": "2655680"
  },
  {
    "text": "do it so hard to see for this read models is of course",
    "start": "2655680",
    "end": "2662760"
  },
  {
    "text": "that you need to keep the state of things and you need to get St events",
    "start": "2662760",
    "end": "2669240"
  },
  {
    "text": "that you get a list of and for each and every one of them you project them so what you need to write of code is for",
    "start": "2669240",
    "end": "2675720"
  },
  {
    "text": "each event type you could say how should this update the AG the remodel State and",
    "start": "2675720",
    "end": "2683480"
  },
  {
    "text": "this is the clue why I say it's easier to extend because if you if you change",
    "start": "2683480",
    "end": "2689760"
  },
  {
    "text": "with a new event type you know you haven't done any bad side effects for other event types so it's really",
    "start": "2689760",
    "end": "2696200"
  },
  {
    "text": "structured around around those events and then you have the",
    "start": "2696200",
    "end": "2702480"
  },
  {
    "text": "reactors and those reactors is uh is what Sebastian Fon called the cool stuff",
    "start": "2702480",
    "end": "2709559"
  },
  {
    "text": "and I tend to agree with him because you can say as if writing with command",
    "start": "2709559",
    "end": "2715240"
  },
  {
    "text": "handles clients commands and reads with cury",
    "start": "2715240",
    "end": "2720319"
  },
  {
    "text": "hand those clients read well the reactors take care of the rest and my",
    "start": "2720319",
    "end": "2726680"
  },
  {
    "text": "EXP experience is that more automation we getting our res solution more and more it's on those part that falls on",
    "start": "2726680",
    "end": "2734319"
  },
  {
    "text": "those reactors so here you have an event you capture the intention for how you want",
    "start": "2734319",
    "end": "2741559"
  },
  {
    "text": "to react to the that event and this event can actually be an inside event or an outside event and then you do you",
    "start": "2741559",
    "end": "2749800"
  },
  {
    "text": "update the aggregate State at least you can do that or you can only do the API",
    "start": "2749800",
    "end": "2757000"
  },
  {
    "text": "or the side effect so here you have a choice and of course if you want to do something to an agregate and get some",
    "start": "2757000",
    "end": "2763680"
  },
  {
    "text": "new events you follow the same pattern as you have with writing with command building",
    "start": "2763680",
    "end": "2770680"
  },
  {
    "text": "block so for the reactors we use the change feed again",
    "start": "2770680",
    "end": "2776040"
  },
  {
    "text": "listen to events and reacting to them if it's a internal event but if it's the",
    "start": "2776040",
    "end": "2781599"
  },
  {
    "text": "external event from a service bus or something you will just do it as you have already",
    "start": "2781599",
    "end": "2787440"
  },
  {
    "text": "always done it for other application and then you need to have a two step one is to take that event and",
    "start": "2787440",
    "end": "2795480"
  },
  {
    "text": "capture the command capture the intent in that command and the second part is",
    "start": "2795480",
    "end": "2800520"
  },
  {
    "text": "actually the business Logic for getting the new events if you update the aggregator actually doing the API calls",
    "start": "2800520",
    "end": "2808200"
  },
  {
    "text": "but the good thing here is that the change feed if something is wrong if the API is",
    "start": "2808200",
    "end": "2814359"
  },
  {
    "text": "down you can just throw an error and it will push up the event again so it will",
    "start": "2814359",
    "end": "2820200"
  },
  {
    "text": "keep nagging until the things are done so you know when you have an reactor it",
    "start": "2820200",
    "end": "2826040"
  },
  {
    "text": "will be down in the end and usually things are are up and",
    "start": "2826040",
    "end": "2832040"
  },
  {
    "text": "running but the good thing is that we need to take in account all these Network clips and all the other stuff",
    "start": "2832040",
    "end": "2838240"
  },
  {
    "text": "that give us a hard time for distributed solution and the reactors help us with that since the chain fed of Cosmos DB",
    "start": "2838240",
    "end": "2845839"
  },
  {
    "text": "actually are nagging and nagging until we do stuff yeah so that is actually how we",
    "start": "2845839",
    "end": "2853359"
  },
  {
    "text": "build our invent Source solution we only have those five four building blocks and",
    "start": "2853359",
    "end": "2859680"
  },
  {
    "text": "of course you don't typical have a lot of event stores but for the others we",
    "start": "2859680",
    "end": "2864720"
  },
  {
    "text": "have a lot of them but we want them to be small and simple because as sebastan",
    "start": "2864720",
    "end": "2871040"
  },
  {
    "text": "phone Conrad said Event Source solution is a complex Arrangement but it needs to",
    "start": "2871040",
    "end": "2877359"
  },
  {
    "text": "be a complex arrangement of simple part because if not if each building blocks",
    "start": "2877359",
    "end": "2883319"
  },
  {
    "text": "is get getting bigger and bigger and mightbe a mixing a bit with writing with command on a reactor and even update a",
    "start": "2883319",
    "end": "2890680"
  },
  {
    "text": "read model because you can do that if you want you can do everything synchr is too but then you don't you lose out on",
    "start": "2890680",
    "end": "2897800"
  },
  {
    "text": "the benefits of for scaling and all the other parts so we try to really follow",
    "start": "2897800",
    "end": "2903520"
  },
  {
    "text": "this pattern to make each building block simple because we don't want to have a",
    "start": "2903520",
    "end": "2909800"
  },
  {
    "text": "complex arrangement of complex Parts I think that would be hard we want this",
    "start": "2909800",
    "end": "2915079"
  },
  {
    "text": "complex management of simple part and the way we do it is to focus on those",
    "start": "2915079",
    "end": "2920640"
  },
  {
    "text": "patterns as you see here they are simple it's like for the read models we are not",
    "start": "2920640",
    "end": "2926040"
  },
  {
    "text": "allowed to have a lot of rules knowing that if this event comes before that and after that now the state of the read",
    "start": "2926040",
    "end": "2933599"
  },
  {
    "text": "model need to have enough information that all you need is one event and then a state of the read model to make go to",
    "start": "2933599",
    "end": "2940520"
  },
  {
    "text": "the updated State and if you keep that mindset we manage by by keeping that",
    "start": "2940520",
    "end": "2946480"
  },
  {
    "text": "mindset we manage to keep those different building blocks",
    "start": "2946480",
    "end": "2952520"
  },
  {
    "text": "simple and that's how you build it but of course before you start building whatever you want to build you need to",
    "start": "2953200",
    "end": "2960599"
  },
  {
    "text": "know what are you building what problem are you solving and I can't have a talk about event sourcing",
    "start": "2960599",
    "end": "2967319"
  },
  {
    "text": "without mention event storming that is a brainstorming technique that Alberto",
    "start": "2967319",
    "end": "2973280"
  },
  {
    "text": "brandolini has uh coined and it's so great I think whatever solution I'm",
    "start": "2973280",
    "end": "2980400"
  },
  {
    "text": "building but especially for Event Source solution here you can have some workshop on a high level and you go with a",
    "start": "2980400",
    "end": "2986680"
  },
  {
    "text": "business and you laid out all the events and understand how one event trigger new",
    "start": "2986680",
    "end": "2991799"
  },
  {
    "text": "event and what is the business rules between those and then you add on with the commands and then we have those new",
    "start": "2991799",
    "end": "3001079"
  },
  {
    "text": "brainstorming just in our team where we add on more details about the reactors we use and",
    "start": "3001079",
    "end": "3007839"
  },
  {
    "text": "the how the read models are uh upgraded and so on so this gives us the perfect",
    "start": "3007839",
    "end": "3014160"
  },
  {
    "text": "overview and we use it when we enhance our application we take up and it's",
    "start": "3014160",
    "end": "3019559"
  },
  {
    "text": "mirror and you can say that's documentation and it is but it's quite easy to extract things to get it updated",
    "start": "3019559",
    "end": "3027240"
  },
  {
    "text": "and it gives us the overview that we really not need okay I will approaching the Ender",
    "start": "3027240",
    "end": "3033839"
  },
  {
    "text": "now these are andc party coming up so we should not be the last in line for that",
    "start": "3033839",
    "end": "3039400"
  },
  {
    "text": "one but I want to say some words about digitalization and event storming I",
    "start": "3039400",
    "end": "3045960"
  },
  {
    "text": "think in my company we really focus on Automation and here is the reactors the",
    "start": "3045960",
    "end": "3052960"
  },
  {
    "text": "building blocks from Heaven because they actually take take care of all these rules whenever this happen that should",
    "start": "3052960",
    "end": "3059960"
  },
  {
    "text": "happen but we don't want the automation kind of live on its own it's really important for us to empower our users",
    "start": "3059960",
    "end": "3067680"
  },
  {
    "text": "they need to be on top of things and here I find the read models incredible",
    "start": "3067680",
    "end": "3073799"
  },
  {
    "text": "useful so my personal bet just because I think this is a good way to build a",
    "start": "3073799",
    "end": "3079760"
  },
  {
    "text": "solution is that maybe I will are able to do this for some years because I think the new problem to solve in a",
    "start": "3079760",
    "end": "3087040"
  },
  {
    "text": "world of digitalization often is a good fit for event sourcing I hope you find",
    "start": "3087040",
    "end": "3093119"
  },
  {
    "text": "something I hope you go home and have a playground project try to play around with it and build some building blocks",
    "start": "3093119",
    "end": "3100839"
  },
  {
    "text": "because it's a new way of thinking but when you start thinking like this it is",
    "start": "3100839",
    "end": "3106200"
  },
  {
    "text": "like I said the re the way we think in the real life and at least for some of",
    "start": "3106200",
    "end": "3111520"
  },
  {
    "text": "us it makes very sense thank you very much and have a great NDC party than",
    "start": "3111520",
    "end": "3119680"
  }
]