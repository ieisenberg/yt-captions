[
  {
    "text": "hello hello well we are live one minute to spare welcome welcome to the uh",
    "start": "6640",
    "end": "13040"
  },
  {
    "text": "Copenhagen developer conference SAA um I hope we're all going to feel",
    "start": "13040",
    "end": "18439"
  },
  {
    "text": "nice and warm by the end of the session because I know I am um so I'm here to talk to you about",
    "start": "18439",
    "end": "25840"
  },
  {
    "text": "intentional code and really what this is is a response so that feeling you get",
    "start": "25840",
    "end": "31560"
  },
  {
    "text": "when you try and use a system and you try and fix a system and everything just kind of sucks and everyone's",
    "start": "31560",
    "end": "38800"
  },
  {
    "text": "kind of been there there's just this horrible feeling where you you try to maintain a piece of software and you open it up and you're peeling away",
    "start": "38800",
    "end": "45239"
  },
  {
    "text": "layers upon layers of kind of needless abstraction that seems to give you nothing just to find that one file with",
    "start": "45239",
    "end": "52359"
  },
  {
    "text": "the four lines in the middle that actually does the work and we all have systems like this we all own them and",
    "start": "52359",
    "end": "58039"
  },
  {
    "text": "like it's it's pretty tedious and it scares me so this is hopefully a bit of an antidote a bit of a salve to that",
    "start": "58039",
    "end": "65760"
  },
  {
    "text": "horrible visceral pain so we're all going to feel it together so my name is David and I spend",
    "start": "65760",
    "end": "74159"
  },
  {
    "text": "a lot of time thinking about software design it's kind of my toxic character trait um so I'm the head of architecture",
    "start": "74159",
    "end": "80200"
  },
  {
    "text": "for a company called New Day based out of London um and I'm really here to talk to you about why design itself is",
    "start": "80200",
    "end": "86119"
  },
  {
    "text": "important and why every single thing matters um that you know the truth is I'm a programmer and you're going to",
    "start": "86119",
    "end": "92119"
  },
  {
    "text": "primy my keyboard out my cold dead hands um regardless of the job title you stick on top of it so it doesn't matter what",
    "start": "92119",
    "end": "98439"
  },
  {
    "text": "kind of role that you hold in your technical organization this is this is really for you with that said there's",
    "start": "98439",
    "end": "104280"
  },
  {
    "text": "not a lot of code in this talk because what I really want to think about here is software design that's what I want us to be",
    "start": "104280",
    "end": "110600"
  },
  {
    "text": "considering now I did a bit of a a small viral tweet sorry a viral XZ you know",
    "start": "110600",
    "end": "117159"
  },
  {
    "text": "that that same joke at the end of uh last year that seem to resonate with a lot of people so I was trying to fix",
    "start": "117159",
    "end": "124079"
  },
  {
    "text": "this pretty architecturally awful code base and as soon as I opened up my IDE",
    "start": "124079",
    "end": "129440"
  },
  {
    "text": "my heckles were raised by this god- awful organizational pattern that you'll see here so I did what I always do when",
    "start": "129440",
    "end": "135280"
  },
  {
    "text": "I see something I hate I opened Twitter and rage tweeted into the void to make sure that everyone felt as bad as I did",
    "start": "135280",
    "end": "140360"
  },
  {
    "text": "about the thing and I remember just sitting there thinking this is like a damning indictment on the state of",
    "start": "140360",
    "end": "146640"
  },
  {
    "text": "software design in 2023 so Twitter obviously agreed at the",
    "start": "146640",
    "end": "152280"
  },
  {
    "text": "time but mostly the thing that really jumped out me when I was looking at this code base was really how shitty and",
    "start": "152280",
    "end": "159720"
  },
  {
    "text": "thoughtless it all was it was all really really thoughtless this organizational pattern you know organiz organizing code",
    "start": "159720",
    "end": "166519"
  },
  {
    "text": "by architectural feature is like way up there on the lists of horrible like hate crimes you can do to your software um",
    "start": "166519",
    "end": "173400"
  },
  {
    "text": "it's something that has no real meaning and it it buries everything and you sit there and you think why would someone do",
    "start": "173400",
    "end": "178519"
  },
  {
    "text": "this there isn't an answer that's the problem there is no why um so hopefully",
    "start": "178519",
    "end": "184040"
  },
  {
    "text": "throughout the session we're going to try and answer the question why is everything like",
    "start": "184040",
    "end": "189440"
  },
  {
    "text": "this now as the joke goes organizing your code by architectural feature is",
    "start": "189440",
    "end": "194599"
  },
  {
    "text": "exactly this picture it's taking a classic car collection and splitting it up into tires wind screens Bonnets and",
    "start": "194599",
    "end": "201480"
  },
  {
    "text": "engines and saying come and enjoy this now so much of talk about design",
    "start": "201480",
    "end": "208560"
  },
  {
    "text": "when we think about software and and the form of code always ends up getting dragged back to the work done in the 90s",
    "start": "208560",
    "end": "214640"
  },
  {
    "text": "mostly about design patterns now this isn't a talk about design patterns but I",
    "start": "214640",
    "end": "220360"
  },
  {
    "text": "want to pay them a little bit of lip service and due respect because you know it might perhaps be easy to misinterpret",
    "start": "220360",
    "end": "226599"
  },
  {
    "text": "what I'm about to say as some horrendous tyde against design patterns and whenever you say design patterns are bad",
    "start": "226599",
    "end": "232360"
  },
  {
    "text": "everyone gets very very angry and the pitchforks come out um this isn't a cry against standards it's not a cry against",
    "start": "232360",
    "end": "238840"
  },
  {
    "text": "patterns but first we have to understand what design patterns really were because I think what people call them today are",
    "start": "238840",
    "end": "244760"
  },
  {
    "text": "really not what they were intended to be now design patterns themselves originated in the works of Christopher",
    "start": "244760",
    "end": "250400"
  },
  {
    "text": "Alexander who was like an actual real life building architects of buildings that weren't allowed to fall down um who",
    "start": "250400",
    "end": "256959"
  },
  {
    "text": "wrote this beautifully titled book called notes on the synthesis of form which is also the name of my like",
    "start": "256959",
    "end": "262079"
  },
  {
    "text": "Progressive death metal album I think um and it was consumed by cons computer science researchers throughout the 70s",
    "start": "262079",
    "end": "268040"
  },
  {
    "text": "and ' 80s including specifically people like Kent Beck and Ward Cunningham who around the 80s started writing around",
    "start": "268040",
    "end": "274720"
  },
  {
    "text": "about pattern languages in software design now you end up with with things",
    "start": "274720",
    "end": "280000"
  },
  {
    "text": "like the gang of four book that came out in 1994 and you know it's probably the foundational text that talks about",
    "start": "280000",
    "end": "286080"
  },
  {
    "text": "design patterns and software and what it did is it attempted to lay out a series of structural creational and behavioral",
    "start": "286080",
    "end": "292800"
  },
  {
    "text": "patterns as they were observed in common software of the era and that's really important like they were looking around",
    "start": "292800",
    "end": "298240"
  },
  {
    "text": "themselves identifying things that they were seeing there were a bunch of other books that followed things like Kent",
    "start": "298240",
    "end": "304400"
  },
  {
    "text": "Beck writing Small Talk best practices and the the the classic Martin Fowler patterns of Enterprise architecture that",
    "start": "304400",
    "end": "310680"
  },
  {
    "text": "everyone read in the year 2000 or then about but ultimately the intention of all these books was exactly one thing",
    "start": "310680",
    "end": "317280"
  },
  {
    "text": "and it was to provide concrete guidance and description of common solutions to common problems they weren't saying",
    "start": "317280",
    "end": "323520"
  },
  {
    "text": "here's how you should build things they were saying here's how we have seen people build things and what they really",
    "start": "323520",
    "end": "330039"
  },
  {
    "text": "are like design patterns are an aspect of language what they they're trying to do is give model answers to model",
    "start": "330039",
    "end": "335880"
  },
  {
    "text": "questions and provide names of things that you see so you can talk about them and that's like super super valuable",
    "start": "335880",
    "end": "342400"
  },
  {
    "text": "work right like if you don't have a name for things you can't describe it you can't communicate about it and so much of what we do in software is lost when",
    "start": "342400",
    "end": "349520"
  },
  {
    "text": "we really end up with lots and lots of names for the same things so you know this isn't a talk about design patterns",
    "start": "349520",
    "end": "354800"
  },
  {
    "text": "but all that work was really good work categories of problems that are the same same this talk is about everything",
    "start": "354800",
    "end": "361479"
  },
  {
    "text": "that isn't the same now I suppose I just kind of lament",
    "start": "361479",
    "end": "366720"
  },
  {
    "text": "the fact that most talk of design in software is kind of grouped up into this talk of design patterns because they're",
    "start": "366720",
    "end": "372960"
  },
  {
    "text": "really the least interesting part all the stuff that everyone does all the time um if design patterns are about the",
    "start": "372960",
    "end": "378280"
  },
  {
    "text": "parts of the systems that are familiar and with the exceptions that you know we push programming languages to innovate",
    "start": "378280",
    "end": "384440"
  },
  {
    "text": "over time hopefully the the theory goes that our programming languages should",
    "start": "384440",
    "end": "389479"
  },
  {
    "text": "make some of these design patterns from the foundational Works basically obsolete at this point right it feels",
    "start": "389479",
    "end": "395360"
  },
  {
    "text": "like we kind of forgot to really talk about everything that wasn't predictable or common and you know really design",
    "start": "395360",
    "end": "401400"
  },
  {
    "text": "patterns are kind of bug fixes for gaps in your programming languages if you have to do the same thing over and over",
    "start": "401400",
    "end": "407520"
  },
  {
    "text": "again and that's where real design starts when the talk of patterns end and you're just left with trying to work out",
    "start": "407520",
    "end": "412720"
  },
  {
    "text": "what to do with the rest of everything that is your actual software now on the other end of the",
    "start": "412720",
    "end": "419039"
  },
  {
    "text": "spectrum and we have kind of large scale architectural discussions and conversations about design and you you",
    "start": "419039",
    "end": "425479"
  },
  {
    "text": "end up just seeing The Usual Suspects of stuff like n tier hexagonal architecture 12 Factor apps now these all try and",
    "start": "425479",
    "end": "432720"
  },
  {
    "text": "offer prescriptive rules around how you should arrange the form of an application and but I think kind of",
    "start": "432720",
    "end": "439479"
  },
  {
    "text": "software design has more than just those two axes of functional patterns and large scale architecture and I think all",
    "start": "439479",
    "end": "445240"
  },
  {
    "text": "the most interesting parts of software design are the incidental moments of about the way the programmers interact",
    "start": "445240",
    "end": "450800"
  },
  {
    "text": "with their code it's the every other line it's the daytoday it exists in the",
    "start": "450800",
    "end": "456160"
  },
  {
    "text": "Gap so here's the funny story back in the depths of time I was an art student",
    "start": "456160",
    "end": "461520"
  },
  {
    "text": "um like painting and stuff um but more importantly I also studied literature",
    "start": "461520",
    "end": "467440"
  },
  {
    "text": "and English language and design and Fine Art and painting in the 90s in high",
    "start": "467440",
    "end": "473400"
  },
  {
    "text": "school and I spe spe specialized we're going to go with that in literature and",
    "start": "473400",
    "end": "479000"
  },
  {
    "text": "politics I but I always wanted to be a programmer and that's because computers",
    "start": "479000",
    "end": "484360"
  },
  {
    "text": "were like magic and they were exciting and they were making things right but for the first half of my career and when I was learning for that kind of first 10",
    "start": "484360",
    "end": "490879"
  },
  {
    "text": "years in high school I just really struggled to reconcile this aesthetic sensibility of design with the works",
    "start": "490879",
    "end": "499560"
  },
  {
    "text": "around design as it was kind of rendered into programming and all those books",
    "start": "499560",
    "end": "504639"
  },
  {
    "text": "about design pens they just seem to have a completely different aesthetic Viewpoint than I was used to",
    "start": "504639",
    "end": "510199"
  },
  {
    "text": "um and I then went on and did a computer science degree after coming from this pure arts background uh which I didn't",
    "start": "510199",
    "end": "516159"
  },
  {
    "text": "particularly enjoy but during the first year of compai I came across Donald nth like every first year computer science",
    "start": "516159",
    "end": "522200"
  },
  {
    "text": "student and he wrote the famous series of books that are still being written in the art computer programming um but he",
    "start": "522200",
    "end": "530000"
  },
  {
    "text": "also wrote about this concept that he described as literate programming which was a book he published way back in",
    "start": "530000",
    "end": "536320"
  },
  {
    "text": "1984 um literally the year I was born so no new ideas in computer",
    "start": "536320",
    "end": "542360"
  },
  {
    "text": "software now new had tried to get traction around in the space around the idea that software should be written by",
    "start": "542360",
    "end": "548920"
  },
  {
    "text": "combining a programming language and a documentation language and they both",
    "start": "548920",
    "end": "554279"
  },
  {
    "text": "were combined and run side by side to produce the the source code he was really obsessed with this idea that um",
    "start": "554279",
    "end": "561320"
  },
  {
    "text": "your your software should be read like a book and you know the the funny thing is",
    "start": "561320",
    "end": "567040"
  },
  {
    "text": "like having this kind of artsy approach to it is very consistent with someone like Donald n who spent 10 years writing",
    "start": "567040",
    "end": "572360"
  },
  {
    "text": "texts so he could write a book he's like he must be the king of yak shaving at",
    "start": "572360",
    "end": "578079"
  },
  {
    "text": "that point um and you know if you think about it the languages that nth was",
    "start": "578079",
    "end": "583160"
  },
  {
    "text": "talking about the time in the 70s really were a lot more primordial we'll go with",
    "start": "583160",
    "end": "588720"
  },
  {
    "text": "that they were they were a lot simpler they were a lot more structured a lot more rigid and less expressive than the",
    "start": "588720",
    "end": "594240"
  },
  {
    "text": "languages we have today and actually modern programming languages are in order of magnitude closer to what he was",
    "start": "594240",
    "end": "599959"
  },
  {
    "text": "dreaming of when he thought about literate programming how about things that were legible and could be read by humans rather than just",
    "start": "599959",
    "end": "606560"
  },
  {
    "text": "machines um he was kind of right and he was Vindicated by subsequent 30 years of",
    "start": "606560",
    "end": "612120"
  },
  {
    "text": "development into programming languages that dragged programming languages into a more expressive form and that core",
    "start": "612120",
    "end": "618519"
  },
  {
    "text": "idea really resonated with me the the the thing where he was like oh well it's really it should be like the index page of a book and you flip through the pages",
    "start": "618519",
    "end": "625079"
  },
  {
    "text": "I was like you know what yeah software it really is the same as literature it really really is and this was a little bit of a",
    "start": "625079",
    "end": "630880"
  },
  {
    "text": "revelation to kind of baby programmer me because it totally changed the way that I started writing code because I started",
    "start": "630880",
    "end": "637639"
  },
  {
    "text": "specifically optimizing for that thing because I realized that software only became good literature if you treated it",
    "start": "637639",
    "end": "644360"
  },
  {
    "text": "like good literature and try to arrange it in those organizational patterns so over the years I've come to",
    "start": "644360",
    "end": "651880"
  },
  {
    "text": "this real precise definition of what I really think software is um software is",
    "start": "651880",
    "end": "658399"
  },
  {
    "text": "a constraint form of communication between programmer and programmer that describes Concepts and problems but also",
    "start": "658399",
    "end": "665079"
  },
  {
    "text": "happens to be executable by machines and I've thought about this a lot and I think I believe it it's it's",
    "start": "665079",
    "end": "670800"
  },
  {
    "text": "probably a heel I would die on and you know the more you think about it the more it starts making sense you spend so",
    "start": "670800",
    "end": "676000"
  },
  {
    "text": "much more of your day reading code than you do writing it your code exists in a context it has subtext it has authorial",
    "start": "676000",
    "end": "683959"
  },
  {
    "text": "intent your code has flow it has form it has Rhythm it has tone just like any other writing sometimes the authorial",
    "start": "683959",
    "end": "690959"
  },
  {
    "text": "intent is not what gets rendered into the the screen and that's kind of where bugs come from right like the analogy",
    "start": "690959",
    "end": "697600"
  },
  {
    "text": "works but most importantly your code has reason it has a reason for existing it has",
    "start": "697600",
    "end": "703920"
  },
  {
    "text": "intent now here's the bit where everyone gets to be mad at me because I tell them to burn books and burning books is",
    "start": "704120",
    "end": "709360"
  },
  {
    "text": "heresy um burn burn your copies of clean code it's the book that everyone always cites as the foundational work on",
    "start": "709360",
    "end": "715639"
  },
  {
    "text": "software design and it's aged so poorly um it means we don't have to deal with problematic family members um it's an",
    "start": "715639",
    "end": "723839"
  },
  {
    "text": "extremely dogmatic book and it's presence in the industry honestly has kind of muted so much conversation",
    "start": "723839",
    "end": "729920"
  },
  {
    "text": "around design to things to design to to conversations about naming variables",
    "start": "729920",
    "end": "735000"
  },
  {
    "text": "it's muted conversations around architectural style in the same way that people just chanting solid principles in",
    "start": "735000",
    "end": "741480"
  },
  {
    "text": "every interview has kind of muted every conversation around what good structure looks like it Shadow is long and it's",
    "start": "741480",
    "end": "747519"
  },
  {
    "text": "Thoughtless and kind of full of Dogma when you follow it blindly now as an aside on another occasion I've done this",
    "start": "747519",
    "end": "753800"
  },
  {
    "text": "talk people said oh but don't you think everything exists in a context and I think there's probably some value to that you know I think this book was very",
    "start": "753800",
    "end": "760120"
  },
  {
    "text": "important to a lot of people at a certain point in time it certainly was to me when I was early on in my career",
    "start": "760120",
    "end": "765680"
  },
  {
    "text": "but I think we can grow past and learn from older works and move",
    "start": "765680",
    "end": "771680"
  },
  {
    "text": "on so I hear you scream heresy you can't say that about clean",
    "start": "771680",
    "end": "777000"
  },
  {
    "text": "code um but you know I think instead of this this notion of cleanliness and this",
    "start": "777000",
    "end": "783399"
  },
  {
    "text": "weird like Craftsman metaphor that that series of books really focuses on I've I've really",
    "start": "783399",
    "end": "789760"
  },
  {
    "text": "come to value intentionality in my code above any sense of syntactic cleanliness",
    "start": "789760",
    "end": "795720"
  },
  {
    "text": "the more I think about this and you know intentionality is a fairly abstract word so let's talk about what I really mean",
    "start": "795720",
    "end": "801800"
  },
  {
    "text": "by that I mean literally every single character on the screen matters",
    "start": "801800",
    "end": "806880"
  },
  {
    "text": "everyone you know if you think about this as literature and as work I want you to approach the work as if everything is important and everything",
    "start": "806880",
    "end": "813560"
  },
  {
    "text": "has to have meaning every choice you make is a choice you're making the Whit space matters the rhythm",
    "start": "813560",
    "end": "820839"
  },
  {
    "text": "of the code matters the naming obviously still matters form matters function",
    "start": "820839",
    "end": "826959"
  },
  {
    "text": "matters and code written with thoughtfulness and intentionality that are written for a reader matter more",
    "start": "826959",
    "end": "834079"
  },
  {
    "text": "than anything else now thinking as your software where as literature like this kind of lets you",
    "start": "834079",
    "end": "841000"
  },
  {
    "text": "value different ways of communicating in code so we can communicate on the the kind of the macro scale with",
    "start": "841000",
    "end": "847120"
  },
  {
    "text": "organizational patterns and application architectures so let's take for example MVC MBC is a an organizational pattern",
    "start": "847120",
    "end": "855440"
  },
  {
    "text": "it dictates how you split up your code with all of its common implementations and it basically tells you where to put",
    "start": "855440",
    "end": "860680"
  },
  {
    "text": "your files right now NBC is a weird pattern that I have a LoveHate relationship with because what MBC does",
    "start": "860680",
    "end": "867720"
  },
  {
    "text": "is it totally obos the intent of your software MVC is a an organizational",
    "start": "867720",
    "end": "873120"
  },
  {
    "text": "pattern is most popularly used for web applications in 20120 I look at an MVC",
    "start": "873120",
    "end": "878560"
  },
  {
    "text": "codebase I see a website I don't see what the website is about I it it it's",
    "start": "878560",
    "end": "884240"
  },
  {
    "text": "hidden completely and you know it's a good example of an organizational pattern that is useful in one axis",
    "start": "884240",
    "end": "890759"
  },
  {
    "text": "because it helps people understand how to maintain their software but actually obscures a lot of the intent of what it",
    "start": "890759",
    "end": "895959"
  },
  {
    "text": "does so all I know is how the code base is wired up when I look at the MVC",
    "start": "895959",
    "end": "902480"
  },
  {
    "text": "application now I actually find the micro scale much more interesting than the macro scale um where the way that",
    "start": "902480",
    "end": "909000"
  },
  {
    "text": "you form code from function to function or module to module telegraphs intent",
    "start": "909000",
    "end": "915480"
  },
  {
    "text": "because of course we use form and flow to increase cohesion in our code base it's that same old axis of like cohesion",
    "start": "915480",
    "end": "921920"
  },
  {
    "text": "and coupling being these two things that you get to play around with in design Now by way of an example and",
    "start": "921920",
    "end": "928959"
  },
  {
    "text": "don't worry about the the details here I'll I'll talk you through them of what I mean when I say use form flow and",
    "start": "928959",
    "end": "934600"
  },
  {
    "text": "cohesion on the micro scale I want to share two screenshots ironically from that same code base that you saw before",
    "start": "934600",
    "end": "942399"
  },
  {
    "text": "now here's a relatively ugly mundane function it does some HTTP stuff like",
    "start": "942399",
    "end": "948519"
  },
  {
    "text": "what it does isn't super interesting but what it is is it's really difficult to read and it's really difficult to read",
    "start": "948519",
    "end": "954880"
  },
  {
    "text": "because there is no form or function or flow in this code it forces your brain to comprehend",
    "start": "954880",
    "end": "960959"
  },
  {
    "text": "software literally one line at a time as statements now we use paragraphs in",
    "start": "960959",
    "end": "967920"
  },
  {
    "text": "texts to guide the reader to group related concepts by moving things together before moving on to something",
    "start": "967920",
    "end": "973120"
  },
  {
    "text": "else code is the same what you're doing when you start to reorganize code is give the reader something to lead",
    "start": "973120",
    "end": "979000"
  },
  {
    "text": "through to read to pause to breathe with lines mean something and if you use them everywhere or nowhere you've removed the",
    "start": "979000",
    "end": "986120"
  },
  {
    "text": "intent you've taken away a whole form of expression from your code now this is like a really incredibly small scale",
    "start": "986120",
    "end": "992880"
  },
  {
    "text": "example that does great Injustice to the effects of kind of code with good form versus code with bad form but code with",
    "start": "992880",
    "end": "999720"
  },
  {
    "text": "good form is like poetry with rhythm it reacts to a reader it directs a reader",
    "start": "999720",
    "end": "1005120"
  },
  {
    "text": "it telegraphs how they're meant to understand it it shows you what's related significant things are grouped",
    "start": "1005120",
    "end": "1011040"
  },
  {
    "text": "the things on the left are more important than the things on the right its aesthetic sensibility reflects how",
    "start": "1011040",
    "end": "1017120"
  },
  {
    "text": "the form of and the flow of control of the software is designed to be interpreted and that's the interesting",
    "start": "1017120",
    "end": "1022839"
  },
  {
    "text": "thing and all I all I did was deleted some lines like there was nothing big that happened here but what I did is I I",
    "start": "1022839",
    "end": "1029480"
  },
  {
    "text": "spent time looking at it and thinking about how I wanted someone to comprehend it now the form and flow of your code is",
    "start": "1029480",
    "end": "1035600"
  },
  {
    "text": "something you use to communicate and it's often lost in this kind of morass of linters and auto formatters that",
    "start": "1035600",
    "end": "1042640"
  },
  {
    "text": "force a regular form without any concept of context onto your code base form",
    "start": "1042640",
    "end": "1048679"
  },
  {
    "text": "intent its design now the more I started thinking about software through this lens of",
    "start": "1048679",
    "end": "1055000"
  },
  {
    "text": "literature through this lens of intent the more it became really apparent to me is that I was what I was really reacting",
    "start": "1055000",
    "end": "1061679"
  },
  {
    "text": "to was the inherent complexity of a lot of modern software that your job as a reader is to kind of load this this",
    "start": "1061679",
    "end": "1068360"
  },
  {
    "text": "context into your head so you can comprehend the work and then you can make a change and what I was really",
    "start": "1068360",
    "end": "1074039"
  },
  {
    "text": "doing was craving this clear communication of a clear piece of written pros of meaningful code and that",
    "start": "1074039",
    "end": "1081440"
  },
  {
    "text": "was really this horrible grander design problem now I've been working on a sentence recently and I think it's up on",
    "start": "1081440",
    "end": "1088280"
  },
  {
    "text": "the screen I can't see the screens from here um and it's ridiculous to ever be working on a sentence um what's your",
    "start": "1088280",
    "end": "1095280"
  },
  {
    "text": "life work I came up with some some really cool short phrases um and and it's this it's you know I believe that",
    "start": "1095280",
    "end": "1102360"
  },
  {
    "text": "the the real central point of design is that the complexity of any application",
    "start": "1102360",
    "end": "1107880"
  },
  {
    "text": "you build should be at most as complex as the problem space it inhibits and no",
    "start": "1107880",
    "end": "1114120"
  },
  {
    "text": "greater macro and micro designer tools that we have to meet this goal and just so many systems straight up fail this",
    "start": "1114120",
    "end": "1121600"
  },
  {
    "text": "thing and you know anytime you've opened a thing and you you want to change a line of text on a on a screen for in a",
    "start": "1121600",
    "end": "1128320"
  },
  {
    "text": "mediocre mundane web application and you have to peel away layers of abstract",
    "start": "1128320",
    "end": "1134640"
  },
  {
    "text": "Factory Builder renderer view model God knows what else I want to to kill myself right like it's this is the",
    "start": "1134640",
    "end": "1140960"
  },
  {
    "text": "horrible bit right it's it's the worst thing and systems just fail that sniff test because all of the important work",
    "start": "1140960",
    "end": "1148280"
  },
  {
    "text": "is in a tiny Corner buried in everything else right you're completely hiding the work it buries systems it makes working",
    "start": "1148280",
    "end": "1154840"
  },
  {
    "text": "with them like swimming through treal and it's often when people overdesign they they apply too much design to a",
    "start": "1154840",
    "end": "1161400"
  },
  {
    "text": "small problem space um and it's kind of like we forgot how to build small programs because we",
    "start": "1161400",
    "end": "1168080"
  },
  {
    "text": "we basically drank the Kool-Aid of decades and Decades of best practice that told us we needed all of these",
    "start": "1168080",
    "end": "1173720"
  },
  {
    "text": "things in every system without stopping to think that maybe we don't and maybe actually we only have three problems and",
    "start": "1173720",
    "end": "1179799"
  },
  {
    "text": "we could just solve those right really interesting like I love beautiful tiny",
    "start": "1179799",
    "end": "1184919"
  },
  {
    "text": "programs that do way more heavy lifting than they have any means of doing because they're so small and perfect and",
    "start": "1184919",
    "end": "1192360"
  },
  {
    "text": "they totally Encompass a problem space now the interesting thing about",
    "start": "1192360",
    "end": "1198240"
  },
  {
    "text": "thinking about design like that and and even using the word design is that design can be thought of as contentious you know much like software architecture",
    "start": "1198240",
    "end": "1205240"
  },
  {
    "text": "as like a building analogy that we put on our domain design is a a visual skill",
    "start": "1205240",
    "end": "1211440"
  },
  {
    "text": "that we use to communicate information you know designs exist to solve problems to communicate intent again using Form",
    "start": "1211440",
    "end": "1217640"
  },
  {
    "text": "and Function that's why design is different from art but design is also temporal in",
    "start": "1217640",
    "end": "1223080"
  },
  {
    "text": "nature real regular design with many designs only really making sense in the context of their time and you know even",
    "start": "1223080",
    "end": "1230919"
  },
  {
    "text": "sometimes if great design can be timeless anyway now if you look on the outside of software great design is",
    "start": "1230919",
    "end": "1236960"
  },
  {
    "text": "really deeply contextual now there are plenty of examples of products where great period design applies um but",
    "start": "1236960",
    "end": "1246240"
  },
  {
    "text": "they're nonsense now so if you look at these pictures like these two designs are completely 100% obsolete the dead",
    "start": "1246240",
    "end": "1252440"
  },
  {
    "text": "technology we don't use any of this stuff and a lot of our Legacy applications contain design patterns now",
    "start": "1252440",
    "end": "1259280"
  },
  {
    "text": "that are as obsolete as as using these things and haven't kind of changed with the systems and the context changing",
    "start": "1259280",
    "end": "1265520"
  },
  {
    "text": "around them now there there's a really observation a really interesting observation here though that taking",
    "start": "1265520",
    "end": "1270720"
  },
  {
    "text": "those two particular iconic designs as an example you might think these products ex don't exist anymore but they",
    "start": "1270720",
    "end": "1278039"
  },
  {
    "text": "weren't actually the last of their their lines they weren't they evolved and changed over time and ironically kind of",
    "start": "1278039",
    "end": "1283679"
  },
  {
    "text": "converged and it's because design is always iterative and it's always context sensitive",
    "start": "1283679",
    "end": "1289200"
  },
  {
    "text": "like phones didn't cease to exist Walkman didn't vanish what actually happened is they were iterated out",
    "start": "1289200",
    "end": "1294720"
  },
  {
    "text": "towards touch phones and MP3 players and mobile phones and dism and iPods and all",
    "start": "1294720",
    "end": "1299960"
  },
  {
    "text": "those things converged and you know they actually converged because we just discovered there was a beautiful",
    "start": "1299960",
    "end": "1305400"
  },
  {
    "text": "generalization in those two designs and we weren't really trying to play music or make phone calls at all we were just",
    "start": "1305400",
    "end": "1311000"
  },
  {
    "text": "trying to transmit audio right and actually it's all the same problem and that's great",
    "start": "1311000",
    "end": "1316039"
  },
  {
    "text": "design now I find it it really interesting personally when I look at like real world design to to see that",
    "start": "1316039",
    "end": "1321960"
  },
  {
    "text": "iterative step-by-step process because I think it really neatly reflects the iterative process of kind of tdd and",
    "start": "1321960",
    "end": "1328320"
  },
  {
    "text": "test driven design similarly right you know I'm I'm sure you'll see like the rising trend of people that have",
    "start": "1328320",
    "end": "1334200"
  },
  {
    "text": "criticized tdd because they don't understand it and and whenever I see people criticizing tdd the main thing",
    "start": "1334200",
    "end": "1340279"
  },
  {
    "text": "that always screams at me is they that they always kind of say oh well I I had to write the test first but I already had the thing in my head and I didn't",
    "start": "1340279",
    "end": "1346279"
  },
  {
    "text": "get anything better and it seems like a waste of time I was like yeah but the the the tddd thing is like a red green",
    "start": "1346279",
    "end": "1352799"
  },
  {
    "text": "refactor iterative cyle and if you're not doing the iteration you're not really doing tdd you're just thinking of",
    "start": "1352799",
    "end": "1358600"
  },
  {
    "text": "a thing holding that in your head and then trying to test your idea right like the iteration is a fundamental part of",
    "start": "1358600",
    "end": "1365720"
  },
  {
    "text": "good design and you know one of the things that I'm absolutely certain of is",
    "start": "1365720",
    "end": "1370799"
  },
  {
    "text": "people that if people think that that cycle is redundant ceremony they've never actually really felt it work for",
    "start": "1370799",
    "end": "1376840"
  },
  {
    "text": "them and they've never really it ated on the software um so this Al also highlights one of the",
    "start": "1376840",
    "end": "1383919"
  },
  {
    "text": "other really kind of magical qualities of design as a discipline itself which is it's just as much about form as it is",
    "start": "1383919",
    "end": "1390120"
  },
  {
    "text": "about function there are like entire categories of problem I personally believe you can't feel until you see it",
    "start": "1390120",
    "end": "1397600"
  },
  {
    "text": "and one of the coolest things about tdd is discipline is that when you see the apis that you've kind of driven out you",
    "start": "1397600",
    "end": "1403600"
  },
  {
    "text": "can look at them and go like I don't really like that it doesn't feel right I don't think I I feel like when someone reads that",
    "start": "1403600",
    "end": "1409919"
  },
  {
    "text": "they're going to be confused like that kind of extra level of visual reasoning that you get from looking at a thing and",
    "start": "1409919",
    "end": "1415559"
  },
  {
    "text": "interacting with it is super super powerful and I think you know it's not that I'm saying that without iteration",
    "start": "1415559",
    "end": "1420799"
  },
  {
    "text": "you can't build beautiful things but I reckon you have to be a lot smarter than I am because you're missing this entire",
    "start": "1420799",
    "end": "1427400"
  },
  {
    "text": "category of signal of being able to use a malleable thing now I appreciate there's kind of a",
    "start": "1427400",
    "end": "1433159"
  },
  {
    "text": "common Trope that programmers are not visual people or don't feel like they are but it's precise ly those visuals",
    "start": "1433159",
    "end": "1439919"
  },
  {
    "text": "that give you the ick when you open software you might not think you're visual but if you open a codebase and go oh God who did this that is you",
    "start": "1439919",
    "end": "1446679"
  },
  {
    "text": "responding to visual signal in real time straight away so looking at this framing device",
    "start": "1446679",
    "end": "1453679"
  },
  {
    "text": "looking at software design as actual design it's probably worth us thinking about the context that modern software",
    "start": "1453679",
    "end": "1459799"
  },
  {
    "text": "exists in and how that might challenge some of our more conventional approaches to design it's kind of worth us",
    "start": "1459799",
    "end": "1465679"
  },
  {
    "text": "re-evaluating all of our organizational PN it to to kind of exist in this world",
    "start": "1465679",
    "end": "1471120"
  },
  {
    "text": "where we're not building software that ships on DVDs for desktop computers running MSS and Windows 95 because all",
    "start": "1471120",
    "end": "1478120"
  },
  {
    "text": "of the books about design patterns were written when we were doing those things and looking around the room I don't think many of you are old enough to have",
    "start": "1478120",
    "end": "1484279"
  },
  {
    "text": "ever done that now I'll tell you what all of the",
    "start": "1484279",
    "end": "1489919"
  },
  {
    "text": "10th Generation clean architecture people really absolutely hate people talking",
    "start": "1489919",
    "end": "1495440"
  },
  {
    "text": "about most of the things that you describe as best practice are just",
    "start": "1495440",
    "end": "1500919"
  },
  {
    "text": "kind of overblown structural design patterns normally sorry um and they kind",
    "start": "1500919",
    "end": "1506960"
  },
  {
    "text": "of look almost as silly as organizing by architectural feature on sufficiently small size systems like I see a lot of",
    "start": "1506960",
    "end": "1514120"
  },
  {
    "text": "system design these days where the bit where where these ideas have been fragmented into",
    "start": "1514120",
    "end": "1519480"
  },
  {
    "text": "microservices who am I kidding it's always distributed monoliths always every single time and and you know the",
    "start": "1519480",
    "end": "1527840"
  },
  {
    "text": "individual moving parts of those systems have then been absolutely decimated by best practice CU like cool you need to",
    "start": "1527840",
    "end": "1534159"
  },
  {
    "text": "solve four problems so you split them up into four systems you make four repositories and four sets of CI tools",
    "start": "1534159",
    "end": "1540120"
  },
  {
    "text": "and four sets of Automation and four Target production environments Times by three and oh my God I now have",
    "start": "1540120",
    "end": "1545360"
  },
  {
    "text": "300 problems right and this isn't me saying just put all your code in one",
    "start": "1545360",
    "end": "1551840"
  },
  {
    "text": "place but what it what it means is when you zoom out it looks like best practice we got we got our we neatly separated",
    "start": "1551840",
    "end": "1558360"
  },
  {
    "text": "our concerns well high five so I want to show you an example of another",
    "start": "1558360",
    "end": "1564279"
  },
  {
    "text": "application that I was trying to fix that suffered from exactly this and you're definitely not going to be able to read the slide so don't worry just",
    "start": "1564279",
    "end": "1570440"
  },
  {
    "text": "look at the number of things so this is a class diagram that I generated from a system I was building",
    "start": "1570440",
    "end": "1577559"
  },
  {
    "text": "that was following a prescriptive clean architecture pattern but all I see here is complete dogmatic thoughtlessness so",
    "start": "1577559",
    "end": "1584799"
  },
  {
    "text": "the system which was being recompacted back down into into a single logical application was divided into a huge",
    "start": "1584799",
    "end": "1590720"
  },
  {
    "text": "number of modules all of which were further subdivided by architectural feature and each part of the application",
    "start": "1590720",
    "end": "1597799"
  },
  {
    "text": "had its own web app and a module and some core libraries and a function and",
    "start": "1597799",
    "end": "1603480"
  },
  {
    "text": "eight different directories so they all looked absolutely identical right and the the total cognitive load of being",
    "start": "1603480",
    "end": "1610080"
  },
  {
    "text": "able to rationalize what any of this stuff was doing was absolutely huge and I think it was well-intentioned like",
    "start": "1610080",
    "end": "1616640"
  },
  {
    "text": "someone wasn't trying to make a mess but all I see is an explosion of complexity",
    "start": "1616640",
    "end": "1622120"
  },
  {
    "text": "because all the invisible things really really really damage the surface area of the software and the the obvious big",
    "start": "1622120",
    "end": "1630039"
  },
  {
    "text": "comedy bit is it was all maintained by one team of four people so I I don't get",
    "start": "1630039",
    "end": "1635600"
  },
  {
    "text": "it right and the irony is for all the macro design that was going on the project structure the the code like this",
    "start": "1635600",
    "end": "1642159"
  },
  {
    "text": "is a diff of me cleaning up one file from the big load of mess to like four lines right like this this is where we",
    "start": "1642159",
    "end": "1649039"
  },
  {
    "text": "ended up the state of the actual code was horrendous it was all like copy past a Guff it was horrible and all that",
    "start": "1649039",
    "end": "1656399"
  },
  {
    "text": "effort was focused on organizing files into folders rather than focusing on the",
    "start": "1656399",
    "end": "1661519"
  },
  {
    "text": "code that really mattered um so you know it was horrible",
    "start": "1661519",
    "end": "1666840"
  },
  {
    "text": "and I see things like this all the time and I know everyone has systems like this so how did we spot and fix this",
    "start": "1666840",
    "end": "1675640"
  },
  {
    "text": "well we did a f the first thing I noticed actually was all of these systems were being deployed to the same",
    "start": "1675640",
    "end": "1681559"
  },
  {
    "text": "application Service Group in Azure they were being recombined at the end of all of the work which was like the canary",
    "start": "1681559",
    "end": "1687080"
  },
  {
    "text": "and the coal mine of weird design so we did a first round where we trimmed away a lot of the complexity we collapsed all",
    "start": "1687080",
    "end": "1693159"
  },
  {
    "text": "the families of libraries together um and rather than a web application depending on a module and a core thing",
    "start": "1693159",
    "end": "1700120"
  },
  {
    "text": "they at least now were just directories in the same application so we merged all the all the things back together we then",
    "start": "1700120",
    "end": "1705880"
  },
  {
    "text": "went through all the organization by Fe and we collocated all of the things that were only used in one place to live",
    "start": "1705880",
    "end": "1711880"
  },
  {
    "text": "inside the code that was calling it and then finally once we'd rationalized all the C code base down and folded it in we",
    "start": "1711880",
    "end": "1718399"
  },
  {
    "text": "had 12 applications that we just deployed in a single job and then we cut and pasted all the stuff from all 12",
    "start": "1718399",
    "end": "1724240"
  },
  {
    "text": "into one and deployed it one time and rerooted all the URLs deleted all the code one single",
    "start": "1724240",
    "end": "1731679"
  },
  {
    "text": "application so after the work was completed the we went from 64 independent moving Parts with 19 build",
    "start": "1732039",
    "end": "1739240"
  },
  {
    "text": "pipelines times three for each of our environments into a single Deployable",
    "start": "1739240",
    "end": "1744720"
  },
  {
    "text": "application that we could fix by systematically removing low-level code rot using just standard old refactoring",
    "start": "1744720",
    "end": "1752200"
  },
  {
    "text": "tools and this is what I believe adhering to these really really super strict kind of clean architectur",
    "start": "1752200",
    "end": "1759240"
  },
  {
    "text": "organizational patterns actually lead you to if you don't really really need that complexity and again I'm not saying",
    "start": "1759240",
    "end": "1765640"
  },
  {
    "text": "those architectures are all bad I'm saying make sure you have a problem that requires them before littering your",
    "start": "1765640",
    "end": "1771640"
  },
  {
    "text": "system with them um build smaller things where you",
    "start": "1771640",
    "end": "1778799"
  },
  {
    "text": "can now there are obviously certain problem spaces where there are known",
    "start": "1781559",
    "end": "1786720"
  },
  {
    "text": "good structural design patterns and that's cool not a problem you know the most obvious example is kind of RPC",
    "start": "1786720",
    "end": "1793320"
  },
  {
    "text": "style systems with HTTP API calls now they often map really neatly to kind of command query pattern classes that",
    "start": "1793320",
    "end": "1800519"
  },
  {
    "text": "totally makes sense right they're good rational organizational patterns but in those systems where you have known good",
    "start": "1800519",
    "end": "1806919"
  },
  {
    "text": "patterns it's really important that the form and your flow of the individual implementation matters matters even more",
    "start": "1806919",
    "end": "1814279"
  },
  {
    "text": "I guess what I'm reaching for is it's not just what you say but how you say it and it matters because when your macro",
    "start": "1814279",
    "end": "1819519"
  },
  {
    "text": "level design all fits a well-known pattern you kind of get this code blindness when you're reading right and",
    "start": "1819519",
    "end": "1825159"
  },
  {
    "text": "you start to skim and you start to not really read and it's important to me that we use the lowlevel details to actually communicate",
    "start": "1825159",
    "end": "1831919"
  },
  {
    "text": "what is different and where people need to be paying attention in fact you know when I learned about MVC I",
    "start": "1831919",
    "end": "1840200"
  },
  {
    "text": "made this mistake everything was an MVC app right um I I suffered from this Affliction for for a lot of my career I",
    "start": "1840200",
    "end": "1846880"
  },
  {
    "text": "thought everything was a controller then I learned about aspect oriented programming and everything was an",
    "start": "1846880",
    "end": "1852240"
  },
  {
    "text": "Interceptor and I'm like cool I've got my new shiny toy I'm going to do it to every piece of software um I built a a",
    "start": "1852240",
    "end": "1857360"
  },
  {
    "text": "few di containers and I decided that everything could be injected using Di and some clever Factory logic definitely",
    "start": "1857360",
    "end": "1863240"
  },
  {
    "text": "did that um this is my Penance I think um I then learned that controllers only",
    "start": "1863240",
    "end": "1868519"
  },
  {
    "text": "dealt with HTTP so then every piece of logic became an application service right and and I desperately in the",
    "start": "1868519",
    "end": "1874440"
  },
  {
    "text": "middle of my career tried tried to find the good shape the answer that everyone would be happy with me",
    "start": "1874440",
    "end": "1880480"
  },
  {
    "text": "for and I also when microservice design first got popular blew up a 100 systems",
    "start": "1880480",
    "end": "1885760"
  },
  {
    "text": "into lots of moving parts right like we've all done this we've all made these mistakes and it's cool but it takes some time from having",
    "start": "1885760",
    "end": "1893240"
  },
  {
    "text": "lived with these systems that you've made these mistakes too to learn where your designs fail and you know it takes",
    "start": "1893240",
    "end": "1899919"
  },
  {
    "text": "time to learn that uniformity is actually the opposite of expressiveness by trying to force everything into the",
    "start": "1899919",
    "end": "1905799"
  },
  {
    "text": "thing I liked the most at the time I sto letting the programs breathe and look like the things they really are so to me",
    "start": "1905799",
    "end": "1911639"
  },
  {
    "text": "it's really important that when different parts of your system do things that are different or break a pattern or a mold they look look different because",
    "start": "1911639",
    "end": "1918519"
  },
  {
    "text": "then when I'm reading through the code I'm like oh cool well the style has changed here the the API has changed",
    "start": "1918519",
    "end": "1923919"
  },
  {
    "text": "here this is something I need to pay attention to it's optimizing for the reader using visuals to lead the eye it",
    "start": "1923919",
    "end": "1930440"
  },
  {
    "text": "encourages reading instead of",
    "start": "1930440",
    "end": "1933638"
  },
  {
    "text": "skimming we're going to talk about complexity a little bit here now I kind",
    "start": "1935880",
    "end": "1941320"
  },
  {
    "text": "of have come to believe this this idea of intentionality is the is the inverse of",
    "start": "1941320",
    "end": "1946360"
  },
  {
    "text": "complexity you know it's the stop doing things just because it stop cargo culting design",
    "start": "1946360",
    "end": "1952240"
  },
  {
    "text": "decisions if you don't understand why you're applying a pattern or a structure so your code base you should really stop",
    "start": "1952240",
    "end": "1958760"
  },
  {
    "text": "doing it and and actually once you get that mindset on every choice you're making every Library you're adopting",
    "start": "1958760",
    "end": "1965080"
  },
  {
    "text": "every tool every framework is additional complexity right and if you can't justify that additional complexity of",
    "start": "1965080",
    "end": "1971639"
  },
  {
    "text": "picking up extra moving Parts you should stop and think about it now unfortunately because so much software",
    "start": "1971639",
    "end": "1977440"
  },
  {
    "text": "today is is really context sensitive there are many times where blindly applying design patterns Mak software",
    "start": "1977440",
    "end": "1983799"
  },
  {
    "text": "much more difficult to reason about and what you're really doing is you're increasing cognitive load right and our",
    "start": "1983799",
    "end": "1990039"
  },
  {
    "text": "job the job of design is to decrease cognitive load so I want to go through some techniques that we can use to remove cognitive load in our",
    "start": "1990039",
    "end": "1997720"
  },
  {
    "text": "designs so when I talk about complexity I often discover that lots of people have different ideas of what complex",
    "start": "1997720",
    "end": "2004240"
  },
  {
    "text": "really means it's a kind of an overloaded word so I read this really great book called",
    "start": "2004240",
    "end": "2009679"
  },
  {
    "text": "a philosophy of software design by um John kout and I think it really gets to the",
    "start": "2009679",
    "end": "2015919"
  },
  {
    "text": "heart of like a great definition of what complexity is in software I'd really as an aside I'd recommend the book um but",
    "start": "2015919",
    "end": "2022480"
  },
  {
    "text": "it's second chapter is specifically about complexity and design and it's really really very good um and the",
    "start": "2022480",
    "end": "2029200"
  },
  {
    "text": "second chapter describes how software complexity isn't like picking the wrong framework generally",
    "start": "2029200",
    "end": "2035960"
  },
  {
    "text": "it's caused by tiny paper cuts and Tiny bits of cruff that accumulate over time",
    "start": "2035960",
    "end": "2042760"
  },
  {
    "text": "rather than a catastrophic design error it's from the collection of dependencies and obscurities and",
    "start": "2042760",
    "end": "2048960"
  },
  {
    "text": "idiosyncrasies at work that's where complexity comes from so user how",
    "start": "2048960",
    "end": "2054358"
  },
  {
    "text": "describes complexity as the thing that leads to what he describes as change amplification which leads to high",
    "start": "2054359",
    "end": "2060398"
  },
  {
    "text": "cognitive load unknown unknowns and then an explosion of work and effort which",
    "start": "2060399",
    "end": "2065760"
  },
  {
    "text": "subsequently leads to the number number of modifications required to make any change high so that's that's kind of",
    "start": "2065760",
    "end": "2071720"
  },
  {
    "text": "your indicator right like if you're making lots and lots of modifications to to change a system it's a complex system",
    "start": "2071720",
    "end": "2077280"
  },
  {
    "text": "by Design so building on that definition I think that intentional thoughtful design is this kind of Salve for the",
    "start": "2077280",
    "end": "2083919"
  },
  {
    "text": "creeping rise of complexity surrounding software so there's a distressing",
    "start": "2083919",
    "end": "2090560"
  },
  {
    "text": "realization When You Reach this line of thinking which is that design patterns are precisely popular because of exactly",
    "start": "2090560",
    "end": "2097760"
  },
  {
    "text": "that thing I was searching for in the middle of my career they give people a really easy nice green tick of a goal to",
    "start": "2097760",
    "end": "2104599"
  },
  {
    "text": "head towards like they give you something you know is good like there's an answer like a real definite answer to",
    "start": "2104599",
    "end": "2110920"
  },
  {
    "text": "what good looks like but once you've seen enough code bases and enough languages you kind of realize that most",
    "start": "2110920",
    "end": "2117359"
  },
  {
    "text": "of the arbitrary stylistic quirks of those environments are just that you know they're kind of fine you",
    "start": "2117359",
    "end": "2124599"
  },
  {
    "text": "don't really need to worry about them people get lost in theep detail um you know they're most mostly irrelevant so",
    "start": "2124599",
    "end": "2131160"
  },
  {
    "text": "what I've come to believe is that good code is a couple of different things right good code is code that's easy for",
    "start": "2131160",
    "end": "2136839"
  },
  {
    "text": "someone with minimal domain context to read so code that your average developer can understand is good that's easy code",
    "start": "2136839",
    "end": "2144760"
  },
  {
    "text": "that focuses on developer experience debug ability and usability right code",
    "start": "2144760",
    "end": "2150040"
  },
  {
    "text": "that you cannot debug meaningfully is Bag code and code where the intent of the",
    "start": "2150040",
    "end": "2157119"
  },
  {
    "text": "software the the thing that you're doing is lost in the visual noise of the programming languages and tooling and",
    "start": "2157119",
    "end": "2163359"
  },
  {
    "text": "Frameworks is is bad code right so code where there's more syntax than there is",
    "start": "2163359",
    "end": "2170440"
  },
  {
    "text": "operations that mean something in your program bad code so regardless of language or style",
    "start": "2170440",
    "end": "2178200"
  },
  {
    "text": "or intent all programmers really interact with code Bas is the same way you know what you do is you glance at it",
    "start": "2178200",
    "end": "2183599"
  },
  {
    "text": "to understand it and you go through what it does and then you read it intently to understand how it does it you kind of go",
    "start": "2183599",
    "end": "2189640"
  },
  {
    "text": "through this rapid cycle of like what is this what am I doing how are you doing that good code regardless of style makes",
    "start": "2189640",
    "end": "2196760"
  },
  {
    "text": "that process super easy now at a meta level all code is",
    "start": "2196760",
    "end": "2205000"
  },
  {
    "text": "constructed from abstractions and encapsulation like these are two very very common terms and this has always been true so",
    "start": "2205000",
    "end": "2213160"
  },
  {
    "text": "the programming languages run times and Frameworks that we write code on top of",
    "start": "2213160",
    "end": "2218200"
  },
  {
    "text": "help go through an enormous amount of kind of compilation translation interpretation to let you write your",
    "start": "2218200",
    "end": "2224720"
  },
  {
    "text": "applications now the programming languages themselves are common abstractions over operating system apis",
    "start": "2224720",
    "end": "2231560"
  },
  {
    "text": "which are abstractions over Hardware which are abstractions over assembled languages and CPU instructions like this",
    "start": "2231560",
    "end": "2237920"
  },
  {
    "text": "trend continues upwards right and your goal in your application and Library space is to write increasingly narrow",
    "start": "2237920",
    "end": "2243440"
  },
  {
    "text": "abstractions that provide additional value now for the most part we get to be",
    "start": "2243440",
    "end": "2248839"
  },
  {
    "text": "blissfully unaware of this huge amount of work that's that we're building software on top of and that's because",
    "start": "2248839",
    "end": "2255440"
  },
  {
    "text": "the value that those abstractions bring vastly outweigh the amount of mental effort we have to go through to",
    "start": "2255440",
    "end": "2261599"
  },
  {
    "text": "comprehend them right so the the the obvious example of this is you never really worry about what file open does",
    "start": "2261599",
    "end": "2268680"
  },
  {
    "text": "but like file open is really really complicated in every programming language in every runtime on every platform there are a lot of spinning",
    "start": "2268680",
    "end": "2274560"
  },
  {
    "text": "discs there's ssds there's memory mapping there's file systems there's God knows what right but as a developer",
    "start": "2274560",
    "end": "2280359"
  },
  {
    "text": "there's a really really beautiful neat constrained abstractions of folders and files that exists for you to interact",
    "start": "2280359",
    "end": "2285640"
  },
  {
    "text": "with right beautiful actual beautiful design as you implement your own",
    "start": "2285640",
    "end": "2291599"
  },
  {
    "text": "software sadly it's not always the case that the abstractions that you introduce reduces cognitive load right like",
    "start": "2291599",
    "end": "2298680"
  },
  {
    "text": "getting to that beautiful point is really difficult and it's often a very subtle process to understand exactly why",
    "start": "2298680",
    "end": "2304520"
  },
  {
    "text": "one abstraction feels right and one isn't so I'm going to borrow a little",
    "start": "2304520",
    "end": "2310640"
  },
  {
    "text": "bit more from that book um a bit more terminology so when we think about this",
    "start": "2310640",
    "end": "2315720"
  },
  {
    "text": "example of file open I want you to um consider the the idea of a module in software now it doesn't matter what",
    "start": "2315720",
    "end": "2321440"
  },
  {
    "text": "programming language you work in we have modules and modules expose functions and",
    "start": "2321440",
    "end": "2326560"
  },
  {
    "text": "they have some kind of API that we work with um now the interface that a module",
    "start": "2326560",
    "end": "2331760"
  },
  {
    "text": "exposes represents the complexity that that module imposes on on the software",
    "start": "2331760",
    "end": "2337960"
  },
  {
    "text": "that consumes it so the more stuff you can do with a module the more complexity you introduce your code base because the",
    "start": "2337960",
    "end": "2344839"
  },
  {
    "text": "problem space opens up so the smaller and narrower the interfaces that you",
    "start": "2344839",
    "end": "2350040"
  },
  {
    "text": "expose by your modules the less complexity you force upon the software that consumes",
    "start": "2350040",
    "end": "2356520"
  },
  {
    "text": "them by that description you can think of the best modules you can build as deep now file open is a really really",
    "start": "2356520",
    "end": "2363079"
  },
  {
    "text": "beautifully deep module has a very very narrow interface that trades in its own types of files and directories you don't",
    "start": "2363079",
    "end": "2369960"
  },
  {
    "text": "know about hard disk blocks and the file system and God knows what else and it's very very deep because it completely",
    "start": "2369960",
    "end": "2375520"
  },
  {
    "text": "contains all of that detail in nice abstraction so modules that offer deep",
    "start": "2375520",
    "end": "2382000"
  },
  {
    "text": "functionality through a narrow interface are desirable and reduce the cognitive load as you're building software the",
    "start": "2382000",
    "end": "2388920"
  },
  {
    "text": "inverse then is often true so an interface with lots of functions or a module that exposes lots of behavior and",
    "start": "2388920",
    "end": "2395640"
  },
  {
    "text": "lots of parameters and lots of types out of the top forces that complexity up onto the software that consumes it and",
    "start": "2395640",
    "end": "2402880"
  },
  {
    "text": "you know that makes your design worse every time you do it your software degrades in quality so as much a factor of avoiding",
    "start": "2402880",
    "end": "2411160"
  },
  {
    "text": "the wrong abstractions is really finding the right ones okay and it may seem like really painfully obvious advice but",
    "start": "2411160",
    "end": "2417040"
  },
  {
    "text": "abstractions and generally like any other module of code that you find should contain their problem space",
    "start": "2417040",
    "end": "2423680"
  },
  {
    "text": "entirely that means that abstractions that include things like pass through methods and like I've seen so much code",
    "start": "2423680",
    "end": "2429560"
  },
  {
    "text": "where you're just brain deadly passing things through I've written that code myself what they're doing is every time",
    "start": "2429560",
    "end": "2435560"
  },
  {
    "text": "you do it you increase the complexity right you're not gaining anything you're only losing um you know our software is",
    "start": "2435560",
    "end": "2442920"
  },
  {
    "text": "riddled with thoughtless abstraction and poor encapsulation and every time a design decision like that is made it",
    "start": "2442920",
    "end": "2449359"
  },
  {
    "text": "decreases the reason that the module exists or the piece of software in its entirety so anything that adds a large",
    "start": "2449359",
    "end": "2455520"
  },
  {
    "text": "amount of boiler plate code to an application by this measure is bad",
    "start": "2455520",
    "end": "2461040"
  },
  {
    "text": "code now you get to a certain point where you realize that all this talk about kind of design and Dogma I guess",
    "start": "2461040",
    "end": "2467720"
  },
  {
    "text": "dissolves into kind of absolutism and people searching for that one concrete good answer because you know I can tell",
    "start": "2467720",
    "end": "2474200"
  },
  {
    "text": "you one truth here which is that any design when stretched to its logical extreme becomes",
    "start": "2474200",
    "end": "2480000"
  },
  {
    "text": "nonsense and it means that you know you can look at systems that were beautiful at one scale and make no sense at",
    "start": "2480000",
    "end": "2485839"
  },
  {
    "text": "another and that's totally fine you know designing software with intent software that survives really is an exercise on",
    "start": "2485839",
    "end": "2493119"
  },
  {
    "text": "compromise and tradeoffs and it's it's really why anyone with experience in designing software always says it",
    "start": "2493119",
    "end": "2498839"
  },
  {
    "text": "depends right it's the answer to every design question is well don't know it kind of depends what are the tradeoffs",
    "start": "2498839",
    "end": "2504359"
  },
  {
    "text": "and you know that that is the right answer to be honest you know and a lot of the poor trade-offs you see in the",
    "start": "2504359",
    "end": "2509680"
  },
  {
    "text": "software industry involve people actively not understanding these sources of complexity and often adopting",
    "start": "2509680",
    "end": "2515839"
  },
  {
    "text": "packages or Services they really don't control and they don't understand which then loads complexity on the software",
    "start": "2515839",
    "end": "2521200"
  },
  {
    "text": "that they're writing themselves you know there's there's a lot to be said about the lower risk and lower complexity of",
    "start": "2521200",
    "end": "2527880"
  },
  {
    "text": "maintaining 30 100 lines of code that you control you might be able to get it",
    "start": "2527880",
    "end": "2532960"
  },
  {
    "text": "for free from a library but if you don't you don't take on the the emotional labor and the burden of the upgrade",
    "start": "2532960",
    "end": "2539359"
  },
  {
    "text": "cycle of that library and all the additional complexity because dependencies introduce these ex extra",
    "start": "2539359",
    "end": "2545119"
  },
  {
    "text": "surface areas into your code base and all those extra features amplify complexity over time and this is how we",
    "start": "2545119",
    "end": "2551760"
  },
  {
    "text": "end up with you know the the the classic JavaScript leftpad problem where some random dependency that was taken for a",
    "start": "2551760",
    "end": "2557520"
  },
  {
    "text": "fairly mundane thing got revoked and broke a lot of",
    "start": "2557520",
    "end": "2562640"
  },
  {
    "text": "software now it's interesting because it's really an uneasy bed fellow with the conventional wisdom that like any",
    "start": "2562640",
    "end": "2569040"
  },
  {
    "text": "you know you shouldn't really build software that you can buy you know every line of code is cost everything you",
    "start": "2569040",
    "end": "2574599"
  },
  {
    "text": "build you maintain but I don't know like the example I always use is I recently wrote a 300 line static site generator",
    "start": "2574599",
    "end": "2581839"
  },
  {
    "text": "rather than using one because I spent an hour looking at the State ofthe art and I was just like God there's just so much",
    "start": "2581839",
    "end": "2587800"
  },
  {
    "text": "in here I could have this done in the time it would take me to read the documentation so I just wrote it myself",
    "start": "2587800",
    "end": "2594079"
  },
  {
    "text": "was fine I was just rendering like 20 Pages it didn't really matter my problem space was small so I picked a small",
    "start": "2594079",
    "end": "2601200"
  },
  {
    "text": "answer all of your designs really should be expressions of that kind of tradeoff",
    "start": "2601200",
    "end": "2606280"
  },
  {
    "text": "like if you need one feature from a library maybe write it it's fine or copy it it's fine that's what open source is",
    "start": "2606280",
    "end": "2612400"
  },
  {
    "text": "for right now in fact once you start considering things as this like kind of continual tradeoff what you realize is",
    "start": "2612400",
    "end": "2619280"
  },
  {
    "text": "instead of rules around system designs you end up with tests and I don't mean coded tests or unit tests I mean you end",
    "start": "2619280",
    "end": "2625119"
  },
  {
    "text": "up with design tests that you evaluate your your choices on I want you I want to take you through a few tests that I",
    "start": "2625119",
    "end": "2631480"
  },
  {
    "text": "use to to select what I think a good design looks like now this is my my favor favorite test always is can I do",
    "start": "2631480",
    "end": "2637839"
  },
  {
    "text": "this with less moving parts now the kind of the yeah a solution with less moving parts and less",
    "start": "2637839",
    "end": "2643760"
  },
  {
    "text": "systems and less cognitive load is easier to rationalize support and maintain the one with",
    "start": "2643760",
    "end": "2648839"
  },
  {
    "text": "more now any additional moving parts and this is where a lot of the push back from people that have always built Big",
    "start": "2648839",
    "end": "2655359"
  },
  {
    "text": "systems comes against microservice architectures there's just so much stuff and every extra moving part is something",
    "start": "2655359",
    "end": "2661319"
  },
  {
    "text": "that could break and often there's a good reason to choose a moving part but it shouldn't just be the default",
    "start": "2661319",
    "end": "2668079"
  },
  {
    "text": "answer um there are many places in our ecosystem where this kind of ballooning complexity makes working with systems",
    "start": "2668079",
    "end": "2673640"
  },
  {
    "text": "just harder than they should be so we should never extract parts of our applications to elsewhere just because",
    "start": "2673640",
    "end": "2680960"
  },
  {
    "text": "just because is the dumbest reason never use it right so break up individual",
    "start": "2680960",
    "end": "2686079"
  },
  {
    "text": "systems and components when they need to either ship scale deploy or be maintained",
    "start": "2686079",
    "end": "2692280"
  },
  {
    "text": "distinctly like you only really break down systems when the usage pattern change that's the important",
    "start": "2692280",
    "end": "2698680"
  },
  {
    "text": "rule is this operable in a production environment again lots and lots of cool things that people promote to me are",
    "start": "2698680",
    "end": "2704720"
  },
  {
    "text": "just not operable software they can't be maintained they can't be upgraded they can't be patched they can't be observed",
    "start": "2704720",
    "end": "2710880"
  },
  {
    "text": "if you have a dependency that seems cool but isn't operable it's just a burden and it will take your sight down at some",
    "start": "2710880",
    "end": "2716480"
  },
  {
    "text": "point you can't pick it you can't use it so software where the design is difficult to configure or deploy bad",
    "start": "2716480",
    "end": "2724599"
  },
  {
    "text": "software is it easy to change now the best software is software",
    "start": "2724599",
    "end": "2730200"
  },
  {
    "text": "that's easy to change because the only thing I can guarantee about your software is you will have to change it and one of the things I often have to",
    "start": "2730200",
    "end": "2736119"
  },
  {
    "text": "talk about at work when dealing with can of our stakeholders is that you know they want us to get things 100% right",
    "start": "2736119",
    "end": "2742280"
  },
  {
    "text": "where they can never have any errors and I I end up having these long conversations around the fact that I can never guarantee that any of our software",
    "start": "2742280",
    "end": "2748760"
  },
  {
    "text": "will ever work I can only promise that it will fail at some point so that's actually the scenario we need to design",
    "start": "2748760",
    "end": "2754880"
  },
  {
    "text": "for um so again avoid overdesign and focus on Simplicity",
    "start": "2754880",
    "end": "2761480"
  },
  {
    "text": "first so I guess as we come to the end of this what I'm really advocating for here when I plead for intentionality is",
    "start": "2761480",
    "end": "2768760"
  },
  {
    "text": "for you to write your software with care and with purpose you know I want you to think about the design of your software",
    "start": "2768760",
    "end": "2775160"
  },
  {
    "text": "I want you to think about the reader I want you to think about your friends I want you to think about your peers I want you to think about what form and",
    "start": "2775160",
    "end": "2781200"
  },
  {
    "text": "flow means to the software and I want you to use all of these forms of expression that are available to you in",
    "start": "2781200",
    "end": "2788040"
  },
  {
    "text": "your codebase to communicate meaning and intent you know different problem spaces and different solutions require",
    "start": "2788040",
    "end": "2794200"
  },
  {
    "text": "different aesthetic viewpoints and we should really Embrace that you know you know lest we Dam ourselves to the two",
    "start": "2794200",
    "end": "2800119"
  },
  {
    "text": "default designs which is everything is a jumble of components and HTTP calls or everything is an MVC app and I don't",
    "start": "2800119",
    "end": "2808400"
  },
  {
    "text": "want to work that way so it doesn't have to be that way right and and we can be",
    "start": "2808400",
    "end": "2813559"
  },
  {
    "text": "better because when you look at software that's someone has built with care it really shows like it shows when you you",
    "start": "2813559",
    "end": "2820200"
  },
  {
    "text": "use a library in something it's easy to work with where the documentation makes sense like I see you all of you",
    "start": "2820200",
    "end": "2827359"
  },
  {
    "text": "programmers I see you when I see the effort that you put into the work and like I super deeply feel like this is",
    "start": "2827359",
    "end": "2834240"
  },
  {
    "text": "our work and I I I think back to myself as an art student and like you know that would have been my work this is the",
    "start": "2834240",
    "end": "2841599"
  },
  {
    "text": "work so I was on a podcast a couple of years ago and and someone asked that",
    "start": "2841599",
    "end": "2847280"
  },
  {
    "text": "really really obvious predictable question that always comes up oh what would you tell to yourself 20 years ago when you were starting your career and I",
    "start": "2847280",
    "end": "2853760"
  },
  {
    "text": "always used to hate that question because I never had an answer for it but now I know now I know the answer is take",
    "start": "2853760",
    "end": "2860359"
  },
  {
    "text": "more time take more time all of the most beautiful things that I ever built all",
    "start": "2860359",
    "end": "2866160"
  },
  {
    "text": "the things that people love the most were when I finished and I sat and I just read the work and I thought what",
    "start": "2866160",
    "end": "2873240"
  },
  {
    "text": "was I doing why did I do that that makes no sense sense because if I'm sitting there reading it and seeing that",
    "start": "2873240",
    "end": "2879240"
  },
  {
    "text": "everybody else is too right so all of the things that I've made that were ever beautiful because I sat there and I read",
    "start": "2879240",
    "end": "2884920"
  },
  {
    "text": "critically like a reader and fixed the things before anyone ever saw it and I think that's super important just take",
    "start": "2884920",
    "end": "2890559"
  },
  {
    "text": "time it's beautiful so I want to leave you with a couple of reading recommendations as as we finish up here",
    "start": "2890559",
    "end": "2896559"
  },
  {
    "text": "partially because I don't really think there are many books on this topic right design is something that's hard to talk about all three of these books are",
    "start": "2896559",
    "end": "2902800"
  },
  {
    "text": "really good so there's a philosophy of software design which is John osterhout which I've been quoting from in this",
    "start": "2902800",
    "end": "2907920"
  },
  {
    "text": "deck does your code as a crime scene by Adam torill he's written another book that follows that up that also is crime",
    "start": "2907920",
    "end": "2914920"
  },
  {
    "text": "sceney which is about understanding how your code has changed over time through kind of G forensics which is super",
    "start": "2914920",
    "end": "2921720"
  },
  {
    "text": "interesting and code that fits in your head by Mark Seaman talks in detail about kind of different ways that you",
    "start": "2921720",
    "end": "2927359"
  },
  {
    "text": "can refactor through your code bases to make them more legible um they're obviously far more exhausted than any 1hour conference talk",
    "start": "2927359",
    "end": "2934079"
  },
  {
    "text": "could be on on this topic but they're all brilliant I really do recommend you read them and also support the authors",
    "start": "2934079",
    "end": "2939400"
  },
  {
    "text": "in our community it's nice isn't it so ever seen a talk before that could",
    "start": "2939400",
    "end": "2944640"
  },
  {
    "text": "be summarized as it it depends this talk um I like talking",
    "start": "2944640",
    "end": "2951400"
  },
  {
    "text": "about things like design and language in literature because when you talk about words they mean things and we grow our",
    "start": "2951400",
    "end": "2956599"
  },
  {
    "text": "language and then we can talk about them some more um I love talking about this stuff please please hit me up I hope",
    "start": "2956599",
    "end": "2963040"
  },
  {
    "text": "this was interesting and gave you a bit of a different perspective on how to think about design than the regular just",
    "start": "2963040",
    "end": "2968839"
  },
  {
    "text": "do these four things and you'll be great and everything will be rainbows and kittens and I don't know other nice",
    "start": "2968839",
    "end": "2975520"
  },
  {
    "text": "things so Care thank you [Applause]",
    "start": "2975520",
    "end": "2987400"
  },
  {
    "text": "please",
    "start": "2987400",
    "end": "2990400"
  }
]