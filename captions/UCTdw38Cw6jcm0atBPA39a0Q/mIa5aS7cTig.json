[
  {
    "text": "warm and uh sunny welcome to to this session so my name is uh ashin brussels",
    "start": "1439",
    "end": "7680"
  },
  {
    "text": "and i work for the lego group um i am kind of active in the serverless",
    "start": "7680",
    "end": "13360"
  },
  {
    "text": "and aws committee so i have the privilege to be known as aws serverless",
    "start": "13360",
    "end": "18560"
  },
  {
    "text": "hero as well and i often write a blog post about serverless experience and you can always follow you know follow me on",
    "start": "18560",
    "end": "25199"
  },
  {
    "text": "twitter as well right so today's agenda so i will give a glimpse",
    "start": "25199",
    "end": "31039"
  },
  {
    "text": "of what we are doing with serverless at the logo group and then we'll focus on a",
    "start": "31039",
    "end": "36320"
  },
  {
    "text": "couple of slides on just to set the tone what is and why we need serverless and",
    "start": "36320",
    "end": "42559"
  },
  {
    "text": "then we you know start looking at patterns and uh some of the serverless",
    "start": "42559",
    "end": "47600"
  },
  {
    "text": "patterns that we we use as part of uh the the work that we're doing at the lego group and",
    "start": "47600",
    "end": "54800"
  },
  {
    "text": "close with uh you know what are the benefits and few resources in between i will also kind of",
    "start": "54800",
    "end": "60160"
  },
  {
    "text": "touch upon how the sustainability becomes important and part of you know the whole",
    "start": "60160",
    "end": "66320"
  },
  {
    "text": "serverless technology as well okay so what are we doing",
    "start": "66320",
    "end": "72080"
  },
  {
    "text": "at the logo group with serverless now this is lego.com now",
    "start": "72080",
    "end": "77759"
  },
  {
    "text": "this we moved to serverless back in 2019 and often people ask okay that's fine",
    "start": "77759",
    "end": "84159"
  },
  {
    "text": "but what exactly are you doing with serverless at lego.com and",
    "start": "84159",
    "end": "89280"
  },
  {
    "text": "if you if you visit lego.com say you you purchase something you i you know pick an item drop into the basket you want to",
    "start": "89280",
    "end": "97200"
  },
  {
    "text": "make your payment and then you complete the order all sorts of you know validation and everything",
    "start": "97200",
    "end": "102320"
  },
  {
    "text": "behind the scenes all the micro services that support those activities for the front end are",
    "start": "102320",
    "end": "109200"
  },
  {
    "text": "100 serverless so that's sort of the you know the serverless around lego.com that we are",
    "start": "109200",
    "end": "115280"
  },
  {
    "text": "doing so this was migrated from the the old legacy platform back in 2018 and",
    "start": "115280",
    "end": "121520"
  },
  {
    "text": "2019 when we completed but now the back end of lego.com runs you know fully",
    "start": "121520",
    "end": "127520"
  },
  {
    "text": "serverless the front end which is you know the typical react javascript node.js and",
    "start": "127520",
    "end": "133599"
  },
  {
    "text": "also we have the the the middle layer or the you know the back and forth front and graphql layer",
    "start": "133599",
    "end": "138800"
  },
  {
    "text": "so there are not forget but if you look at all the services behind the scenes they are all serverless so that's where",
    "start": "138800",
    "end": "145200"
  },
  {
    "text": "kind of the serverless movement started at the lego group so when i say lego group i should make it clear that",
    "start": "145200",
    "end": "152400"
  },
  {
    "text": "this work becomes part of a bigger you know department or team called marketing",
    "start": "152400",
    "end": "157599"
  },
  {
    "text": "channels technology which comes under digital technology organization whereas",
    "start": "157599",
    "end": "163280"
  },
  {
    "text": "if you look at the different teams across the lego group there are a bunch of different technologies we still do",
    "start": "163280",
    "end": "169120"
  },
  {
    "text": "the you know on-prem stuff we we have you know big sap establishment systems",
    "start": "169120",
    "end": "174400"
  },
  {
    "text": "in place and uh teams are also working on containers and kubernetes and clusters and also you know the the",
    "start": "174400",
    "end": "181680"
  },
  {
    "text": "typical monolith systems also they are in you know typical enterprise you can you can think of everything in place",
    "start": "181680",
    "end": "188720"
  },
  {
    "text": "okay so when we started this was the first service that we put out to production um when when when we moved",
    "start": "188720",
    "end": "196560"
  },
  {
    "text": "towards serverless so based on the experience and the you know the success",
    "start": "196560",
    "end": "201680"
  },
  {
    "text": "that we we saw we kind of gradually kind of expanded across to all the different",
    "start": "201680",
    "end": "207280"
  },
  {
    "text": "um you know the services behind lego.com so going back to a few years so that",
    "start": "207280",
    "end": "214000"
  },
  {
    "text": "time we had no serverless and few engineers and then by the time we deployed or we moved to my serverless we",
    "start": "214000",
    "end": "220720"
  },
  {
    "text": "had like uh you know 20 engineers but typically the you know the typical back-end front-end kind of team setup so",
    "start": "220720",
    "end": "228879"
  },
  {
    "text": "if i fast forward to now ish so there are more than 20 product scores now so product score scores i",
    "start": "228879",
    "end": "236480"
  },
  {
    "text": "mean you know the typically 8-10 people forming a in a squad and they own a",
    "start": "236480",
    "end": "242480"
  },
  {
    "text": "particular product for example if i say checkout there's a squad they look after",
    "start": "242480",
    "end": "247519"
  },
  {
    "text": "the checkout services as well as the front end similar to payments loyalty",
    "start": "247519",
    "end": "252560"
  },
  {
    "text": "etc etc and then a number of services are lost covered because we operate now with",
    "start": "252560",
    "end": "259440"
  },
  {
    "text": "different cloud accounts so like i mentioned the different scores nowadays they own their",
    "start": "259440",
    "end": "265120"
  },
  {
    "text": "own account and they operate with their own you know repositories and stuff like that so basically over 100 you know",
    "start": "265120",
    "end": "271120"
  },
  {
    "text": "microservices and plenty of you know lambda functions and things okay",
    "start": "271120",
    "end": "276320"
  },
  {
    "text": "and these sort of uh you know these spikes and graphs these days are very fam you know common even few days ago",
    "start": "276320",
    "end": "282800"
  },
  {
    "text": "may product launch we had similar spikes and when it comes to serverless we you",
    "start": "282800",
    "end": "289440"
  },
  {
    "text": "know kind of don't need to do anything sometimes depending on the occasion we may",
    "start": "289440",
    "end": "295360"
  },
  {
    "text": "provision concurrency set on few lambda functions that are you know they hit hard but otherwise just nothing it just",
    "start": "295360",
    "end": "302000"
  },
  {
    "text": "scales up comes down as you would expect",
    "start": "302000",
    "end": "306960"
  },
  {
    "text": "okay so what is serverless how many of you are kind of familiar or",
    "start": "308400",
    "end": "314000"
  },
  {
    "text": "working with serverless okay quite a lot thanks um so before i get to serverless let's",
    "start": "314000",
    "end": "321199"
  },
  {
    "text": "quickly go through the evolution i'm not going to you know go all the way back you must have heard from the you know",
    "start": "321199",
    "end": "327840"
  },
  {
    "text": "the keynote earlier the evolution of microsoft technology and things around",
    "start": "327840",
    "end": "332880"
  },
  {
    "text": "so it's all kind of started with a hosted data centers and we we had",
    "start": "332880",
    "end": "338160"
  },
  {
    "text": "infrastructure as service then came the platform as a service and",
    "start": "338160",
    "end": "343280"
  },
  {
    "text": "from there basically the whole evolution of the function function as a service the fast and that kind of you know",
    "start": "343280",
    "end": "350400"
  },
  {
    "text": "brought the serverless to the forefront so that's where you know the serverless kind of",
    "start": "350400",
    "end": "356560"
  },
  {
    "text": "came into and became popular with uh you know different cloud providers um so",
    "start": "356560",
    "end": "362000"
  },
  {
    "text": "what is it is a you know cloud computing model no manager we don't need to kind of manage our containers or clusters or",
    "start": "362000",
    "end": "368560"
  },
  {
    "text": "anything and you pay for the compute and also you know if you're storing any data you may you know pay for that and",
    "start": "368560",
    "end": "376560"
  },
  {
    "text": "auto scale highly available everything is fine so the thing is i i i'm interested in",
    "start": "376560",
    "end": "382960"
  },
  {
    "text": "talking about why we need serverless because often people uh think that when they when when we say serverless og is",
    "start": "382960",
    "end": "389680"
  },
  {
    "text": "just the function as a service no it's not functions of service plays a part whereas serverless ecosystem itself has",
    "start": "389680",
    "end": "397520"
  },
  {
    "text": "a number of managed services they come together to provide us the you know the",
    "start": "397520",
    "end": "402720"
  },
  {
    "text": "solution so and the optimization grant this is another thing i like because if you if",
    "start": "402720",
    "end": "408560"
  },
  {
    "text": "you work with serverless you know that you can tune you know resources individually if you",
    "start": "408560",
    "end": "414960"
  },
  {
    "text": "have two functions in a service microservice you can tune them separately you can give them different",
    "start": "414960",
    "end": "421520"
  },
  {
    "text": "security credential access rights so that is the power of serverless in my opinion that goes all the way so deeper",
    "start": "421520",
    "end": "428880"
  },
  {
    "text": "level security data privacy if you have two data tables you can kind of set them",
    "start": "428880",
    "end": "434080"
  },
  {
    "text": "up completely different you don't need to kind of generalize so that's sort of the you know flexibility and the two",
    "start": "434080",
    "end": "439599"
  },
  {
    "text": "other important aspects i like is or the the it's an ideal technology for",
    "start": "439599",
    "end": "444639"
  },
  {
    "text": "iterative development so you don't need to kind of build everything up front and",
    "start": "444639",
    "end": "449840"
  },
  {
    "text": "bring it up just start with your poc or the mvp or the you know the minimum",
    "start": "449840",
    "end": "455039"
  },
  {
    "text": "viable stuff and then kind of iterate and get over so this is the you know the kind of more common uh the the you know",
    "start": "455039",
    "end": "462560"
  },
  {
    "text": "they approach people or the teams follow these days so it's ideal for that and the other thing is the engineering",
    "start": "462560",
    "end": "468240"
  },
  {
    "text": "diversity what i mean here is that um you know if you come from the traditional setup you you you say that",
    "start": "468240",
    "end": "474400"
  },
  {
    "text": "okay i'm a you know c plus plus a java program or javascript things like that whereas when it comes to serverless you",
    "start": "474400",
    "end": "481199"
  },
  {
    "text": "are more than a programmer you need to know about security you need to know about event-driven computing you need to",
    "start": "481199",
    "end": "486960"
  },
  {
    "text": "know about messaging all these aspects come together and that makes you as a",
    "start": "486960",
    "end": "492240"
  },
  {
    "text": "you know complete serverless engineer you're not just a programmer so that's another beauty of the technology i",
    "start": "492240",
    "end": "497840"
  },
  {
    "text": "always trust this point on so okay so those are the you know things to do with serverless i'm not going to go into you",
    "start": "497840",
    "end": "504479"
  },
  {
    "text": "know details so let's go on to patterns so what i was preparing for this talk i",
    "start": "504479",
    "end": "510240"
  },
  {
    "text": "gave this talk a few years ago this phrase came to me this is absolutely true when we you know think of patterns",
    "start": "510240",
    "end": "517360"
  },
  {
    "text": "so you see patterns on top of patterns you patterns you know within patterns you patterns hidden by patterns all",
    "start": "517360",
    "end": "524480"
  },
  {
    "text": "sorts of things so there is no kind of a clear-cut definitions to say that oh you",
    "start": "524480",
    "end": "530160"
  },
  {
    "text": "know this is what the pattern is and this is not okay because if you if you",
    "start": "530160",
    "end": "536080"
  },
  {
    "text": "think that way we wouldn't have any of the other books other than this one right gang of four's patent book",
    "start": "536080",
    "end": "542080"
  },
  {
    "text": "why we have all the other books because there are different patterns like j2e if",
    "start": "542080",
    "end": "547360"
  },
  {
    "text": "you've been through that you know java ecosystem you know that the ejps and those kind of things and",
    "start": "547360",
    "end": "554399"
  },
  {
    "text": "the microservices pattern chris book so that talks about patents related to microservices like",
    "start": "554399",
    "end": "560800"
  },
  {
    "text": "even sourcing and things like that so the the gang of four original book was kind of influenced by those days you",
    "start": "560800",
    "end": "567040"
  },
  {
    "text": "know the the c plus plus or the object-oriented program it was true it was good but then things moved on you",
    "start": "567040",
    "end": "572800"
  },
  {
    "text": "have we have enterprise integration patterns so it talks about say",
    "start": "572800",
    "end": "577839"
  },
  {
    "text": "dead letter q dlq as a pattern but nowadays if you work in cloud and serverless you would think",
    "start": "577839",
    "end": "583680"
  },
  {
    "text": "that oh is that really a patent because that's kind of common day use in your you know in your design or architecture",
    "start": "583680",
    "end": "590240"
  },
  {
    "text": "but these are all kind of you know come together so that's why the previous uh the phrase patterns within patterns and",
    "start": "590240",
    "end": "596480"
  },
  {
    "text": "patterns on top of patterns they all kind of you know bring make sense so",
    "start": "596480",
    "end": "601519"
  },
  {
    "text": "if we you know there are different uh ways of looking at patterns they help to",
    "start": "601519",
    "end": "606880"
  },
  {
    "text": "you know design things quickly or faster and associated with the problems",
    "start": "606880",
    "end": "612079"
  },
  {
    "text": "sometimes like you know other singletons or factories and things like that and",
    "start": "612079",
    "end": "617120"
  },
  {
    "text": "then of a solution yes true can consequences if you use the right pattern wrongly or if",
    "start": "617120",
    "end": "624640"
  },
  {
    "text": "you don't know how to use the pattern then it can kind of you know get into in issues and very opinionated",
    "start": "624640",
    "end": "631200"
  },
  {
    "text": "opinionated like i said earlier a few years ago when i was giving a chalk and i was going through all the arc you know",
    "start": "631200",
    "end": "636880"
  },
  {
    "text": "cloud and serverless patterns and someone later commented that oh you didn't talk anything about the classic pattern i",
    "start": "636880",
    "end": "643839"
  },
  {
    "text": "asked what do you mean by classic pattern oh you know they all the the the factories and the singletons and",
    "start": "643839",
    "end": "650079"
  },
  {
    "text": "things like that so you know people kind of think differently different you know ways based on the you know the",
    "start": "650079",
    "end": "656240"
  },
  {
    "text": "background and experience and often people say oh serverless is a pattern i don't know so",
    "start": "656240",
    "end": "661760"
  },
  {
    "text": "so that's okay so if you look at the traditional design patterns we can kind",
    "start": "661760",
    "end": "666959"
  },
  {
    "text": "of classify them into three different groups so we have creational patterns",
    "start": "666959",
    "end": "672399"
  },
  {
    "text": "and we have structural patterns and then the behavioral pattern so if you look at",
    "start": "672399",
    "end": "678800"
  },
  {
    "text": "the you know the the gang of four patterns book if we kind of group them",
    "start": "678800",
    "end": "684880"
  },
  {
    "text": "you can see we can see these sort of the different uh you know the patterns and that are in place so for example when we",
    "start": "685760",
    "end": "692160"
  },
  {
    "text": "say behavioral patterns the observer is one thing and structural pattern adapter and facades and so many other things so",
    "start": "692160",
    "end": "698640"
  },
  {
    "text": "they all come together but if we take the a different view say a high level",
    "start": "698640",
    "end": "706399"
  },
  {
    "text": "view then we can kind of classify into three different ways so we have coding",
    "start": "706399",
    "end": "712880"
  },
  {
    "text": "patterns we have design or architectural patterns and the modern days we have",
    "start": "712880",
    "end": "718880"
  },
  {
    "text": "patents associated with the cloud architecture because cloud has an influence cloud has something to say how",
    "start": "718880",
    "end": "725839"
  },
  {
    "text": "we kind of scale up servers or you know do something else load balancing so",
    "start": "725839",
    "end": "730880"
  },
  {
    "text": "those areas may have patterns so same as serverless as it falls into cloud so it",
    "start": "730880",
    "end": "736399"
  },
  {
    "text": "has its own kind of way of defining certain um you know the solutions for problems so so desi i mean",
    "start": "736399",
    "end": "745120"
  },
  {
    "text": "there's always overlap right so because when we have architectural patterns like a cqrs we need to do the implementation",
    "start": "745120",
    "end": "752240"
  },
  {
    "text": "for that in order to make it work right so there is always the you know sort of overlap and when it comes to cloud again",
    "start": "752240",
    "end": "758959"
  },
  {
    "text": "these sort of the strangler patterns very common especially we use as we migrated towards cloud it's one of the",
    "start": "758959",
    "end": "765920"
  },
  {
    "text": "common patterns many many uh teams you make use of when they migrate to",
    "start": "765920",
    "end": "771440"
  },
  {
    "text": "microservices or cloud from the legacy you know platform orchestration choreography this is like always the",
    "start": "771440",
    "end": "777600"
  },
  {
    "text": "debate you know what do we use orchestration or the choreography is like the typical kind of you know fight",
    "start": "777600",
    "end": "782720"
  },
  {
    "text": "between rest or the graphql and this and that so all these things are like circuit breaker classic pattern",
    "start": "782720",
    "end": "789279"
  },
  {
    "text": "thousands of different types of implementation so you choose which you know what is the best one for you to",
    "start": "789279",
    "end": "794959"
  },
  {
    "text": "kind of put put together so this is this is kind of the way i i kind of see those as a you know the classification but",
    "start": "794959",
    "end": "802079"
  },
  {
    "text": "serverless now cross cuts all all these areas you know across so that's why i said serverless kind of you know it's",
    "start": "802079",
    "end": "808560"
  },
  {
    "text": "been part of cloud evolution but then takes things from you know all over the place cert certain person say for",
    "start": "808560",
    "end": "814560"
  },
  {
    "text": "example singleton may not be that popular these days with when you write function as a service for",
    "start": "814560",
    "end": "820959"
  },
  {
    "text": "example but you do have these sort of single purpose functions you're writing okay so kind of in a different way that",
    "start": "820959",
    "end": "827519"
  },
  {
    "text": "comes into the picture okay so the same thing i i mentioned so",
    "start": "827519",
    "end": "832800"
  },
  {
    "text": "serverless patterns so we will go through a few patterns i think if you have you know should be very familiar to you",
    "start": "832800",
    "end": "839279"
  },
  {
    "text": "i'm not kind of you know coming with any groundbreaking patterns or anything so we will touch upon one or two things",
    "start": "839279",
    "end": "844800"
  },
  {
    "text": "with the examples synchronous will start with the symbol synchronous one asynchronous will touch upon function",
    "start": "844800",
    "end": "850320"
  },
  {
    "text": "unless functionalist is gaining momentum i will talk when i when we get there and orchestration and choreography can't",
    "start": "850320",
    "end": "856880"
  },
  {
    "text": "talk without those things because they form core of the event-driven asynchronous compute model we have these",
    "start": "856880",
    "end": "863199"
  },
  {
    "text": "days and then circuit breaker i will also touch upon the sustainability i don't go into the details but i'll just",
    "start": "863199",
    "end": "869839"
  },
  {
    "text": "give you a flavor of you know what where we are moving towards in terms of sustainability",
    "start": "869839",
    "end": "876160"
  },
  {
    "text": "okay so synchronous invocation very simple have a consumer provider so",
    "start": "876160",
    "end": "881600"
  },
  {
    "text": "consumer is invoking a service requesting a service is fine you're done thousands of times provider is",
    "start": "881600",
    "end": "887839"
  },
  {
    "text": "fulfilling the request the difference is that consumer is waiting waiting for provider to complete the task and get",
    "start": "887839",
    "end": "895279"
  },
  {
    "text": "back a response symbol you know there are so many things in place and where do we use",
    "start": "895279",
    "end": "901519"
  },
  {
    "text": "apa calls commonly usually shorter duration because you want to get this done especially when you have browser or",
    "start": "901519",
    "end": "908240"
  },
  {
    "text": "the web apps you you have a customer or someone waiting for the response so you can kind of hang around and do",
    "start": "908240",
    "end": "913680"
  },
  {
    "text": "everything else and mostly you get into this sort of the coupled situation so so which is service or",
    "start": "913680",
    "end": "919279"
  },
  {
    "text": "you know you have the knowledge of the service there is a contract and etc etc so",
    "start": "919279",
    "end": "925040"
  },
  {
    "text": "same thing item shipping in uh sorry uh putting something into the basket like i",
    "start": "925040",
    "end": "930160"
  },
  {
    "text": "mentioned earlier on you know the the typical you know the the e-commerce flow",
    "start": "930160",
    "end": "935600"
  },
  {
    "text": "now how do we use it so we have a shopping app an api a function behind it push the",
    "start": "935600",
    "end": "942000"
  },
  {
    "text": "logic and there is a you know a platform or a third party or a different service behind the scenes you know fulfilling so",
    "start": "942000",
    "end": "949040"
  },
  {
    "text": "obviously when you drop something in the basket bunch of things go behind the scenes like validation",
    "start": "949040",
    "end": "954800"
  },
  {
    "text": "if you are a scientist or you know registered customer you will check the age make sure that you can buy this",
    "start": "954800",
    "end": "960240"
  },
  {
    "text": "product this country all sorts of things happen so performance again is a priority logic",
    "start": "960240",
    "end": "966480"
  },
  {
    "text": "valuation there's no kind of in the situations of partial failure you say either success or failure right you",
    "start": "966480",
    "end": "972399"
  },
  {
    "text": "can't simply you know go in between because customer won't understand any of those things and",
    "start": "972399",
    "end": "979600"
  },
  {
    "text": "the validation step is crucial because that's what kind of you know makes it mostly successful or failure and the",
    "start": "980880",
    "end": "986399"
  },
  {
    "text": "thing is though it looks simple what's if your platform the third party is on fire",
    "start": "986399",
    "end": "993920"
  },
  {
    "text": "okay because that needs to be taken care so now you have a broken",
    "start": "993920",
    "end": "1000160"
  },
  {
    "text": "um circuit we'll talk about the circuit breaker pattern later so this is something we need to take into account",
    "start": "1000160",
    "end": "1006800"
  },
  {
    "text": "even though synchronous pattern looks very simple it can trip everyone okay especially in",
    "start": "1006800",
    "end": "1013680"
  },
  {
    "text": "a high volume situation these are the things that we need to keep in mind when we",
    "start": "1013680",
    "end": "1018959"
  },
  {
    "text": "implement these sort of things so this is where the you know the circuit breaker all the caching and so many",
    "start": "1018959",
    "end": "1024319"
  },
  {
    "text": "other aspects come into the picture okay now let's uh let's switch it further so you",
    "start": "1024319",
    "end": "1030720"
  },
  {
    "text": "put something in the basket now you're ready to make a payment and then you need to know what are the available",
    "start": "1030720",
    "end": "1036160"
  },
  {
    "text": "payment methods for you because it could depend on if you are a customer you already saved few of your cards for",
    "start": "1036160",
    "end": "1043199"
  },
  {
    "text": "payment and if you are in a particular country then you need you know the system needs to work out okay what are",
    "start": "1043199",
    "end": "1048720"
  },
  {
    "text": "the eligible payments for gb and if you you're a registered company have you have we stored any payments that you can",
    "start": "1048720",
    "end": "1054480"
  },
  {
    "text": "make a quick payment with so those things so typically in a in a situation like this you would",
    "start": "1054480",
    "end": "1061200"
  },
  {
    "text": "have a checkout service so that kind of dealing with the front-end aspect of the customer going through the checkout flow",
    "start": "1061200",
    "end": "1068000"
  },
  {
    "text": "then behind the scenes there's a different micro services completely detached it's doing the payments",
    "start": "1068000",
    "end": "1073200"
  },
  {
    "text": "business okay so it's going to ask the payment service okay you know here is so and so in this country etc you know what",
    "start": "1073200",
    "end": "1080080"
  },
  {
    "text": "are the payments of payment options i should present so this is such a p this is actually a thing that we have",
    "start": "1080080",
    "end": "1086160"
  },
  {
    "text": "the checkout service is a team and i convention has got and the other one the payment there is another squad called",
    "start": "1086160",
    "end": "1091280"
  },
  {
    "text": "bricoy and they focus mainly on the payment supply apis all serverless so the difference is like the the the",
    "start": "1091280",
    "end": "1098160"
  },
  {
    "text": "payment score is almost like a you know the service squad apis whereas uh the",
    "start": "1098160",
    "end": "1103200"
  },
  {
    "text": "checkout is kind of a full stack so you have serverless and the front and everything anyway so",
    "start": "1103200",
    "end": "1109039"
  },
  {
    "text": "again performance is should be you know top notch because there is a customer here waiting uh to you know make the",
    "start": "1109039",
    "end": "1115520"
  },
  {
    "text": "payment and this is a service to service call so extra things come into play the",
    "start": "1115520",
    "end": "1120720"
  },
  {
    "text": "timeouts between these different apis needs to be aligned okay because if this",
    "start": "1120720",
    "end": "1126240"
  },
  {
    "text": "is taking longer and if checkout is kind of timing out faster then we have a problem the other thing is quota checks",
    "start": "1126240",
    "end": "1133039"
  },
  {
    "text": "so in this case if it within within an organization is fine what if this is provided by a third",
    "start": "1133039",
    "end": "1138960"
  },
  {
    "text": "party they have limits on how many invocations you can make and uh you know per second or per day etc so these",
    "start": "1138960",
    "end": "1146240"
  },
  {
    "text": "things come into place and also that you know the the the",
    "start": "1146240",
    "end": "1152400"
  },
  {
    "text": "downturn okay how do we how do what do we do if it's downtime is there a way we can do some caching so that we don't",
    "start": "1152400",
    "end": "1159200"
  },
  {
    "text": "always rely on here so if it's the same customer who was here you know a few days ago there is a cache maybe you can",
    "start": "1159200",
    "end": "1165360"
  },
  {
    "text": "serve for example so these sort of different aspects come into the picture so we start with the standard pattern",
    "start": "1165360",
    "end": "1171919"
  },
  {
    "text": "then always there is a you know extra bit that we need to put in place",
    "start": "1171919",
    "end": "1177760"
  },
  {
    "text": "okay so asynchronous let's move on to async self so this is quite popular especially with the event driven",
    "start": "1177760",
    "end": "1183520"
  },
  {
    "text": "architecture right so pattern is kind of similar only difference is that",
    "start": "1183520",
    "end": "1188799"
  },
  {
    "text": "the service provider is kind of carrying on processing the task but the consumer is not waiting so the client is not",
    "start": "1188799",
    "end": "1195200"
  },
  {
    "text": "waiting client is carrying on with its own task doing something because this is sort of situation where you you know",
    "start": "1195200",
    "end": "1201840"
  },
  {
    "text": "submit something bigger task or something or trigger something with you know on a service and then you get on",
    "start": "1201840",
    "end": "1207919"
  },
  {
    "text": "with it and later on you will see uh you will you know ask for the status we will see you know the flavor with the cqrs",
    "start": "1207919",
    "end": "1214799"
  },
  {
    "text": "pattern so again apis and events come into play",
    "start": "1214799",
    "end": "1220080"
  },
  {
    "text": "it's not always apis when it comes to you know sync or async you can always do a function to function async invocation",
    "start": "1220080",
    "end": "1226720"
  },
  {
    "text": "or even trigger is async all these you know the different aspects come in and",
    "start": "1226720",
    "end": "1232880"
  },
  {
    "text": "it in many cases it can be a fire and forget okay submit it you forget it then you kind of do it some kind of call back",
    "start": "1232880",
    "end": "1239840"
  },
  {
    "text": "or a query to know the progress and in some cases you get acknowledgement so",
    "start": "1239840",
    "end": "1245039"
  },
  {
    "text": "for example the payment service i mentioned uh previously so",
    "start": "1245039",
    "end": "1250400"
  },
  {
    "text": "so one of our big consumers for that particular service is the backend sap systems because they do the order",
    "start": "1250400",
    "end": "1256159"
  },
  {
    "text": "filterman when they do the autofilter that's when they take the payment that that's when they capture all the settle",
    "start": "1256159",
    "end": "1262400"
  },
  {
    "text": "the payment so every day three times a day they will submit thousands of you know payment ids like 5000 or 6000. so",
    "start": "1262400",
    "end": "1270080"
  },
  {
    "text": "there's an api there's an endpoint that that will receive it and just give back an id and that will go back that go away",
    "start": "1270080",
    "end": "1277760"
  },
  {
    "text": "and they then process that you know the capturing and the sap will kind of pull for uh details so polling is one",
    "start": "1277760",
    "end": "1284320"
  },
  {
    "text": "mechanism you might have you know heard of the web hook the other one if there is a push notification going back to the",
    "start": "1284320",
    "end": "1290000"
  },
  {
    "text": "client so that's the you know other flavor of it okay so",
    "start": "1290000",
    "end": "1295919"
  },
  {
    "text": "this is a filtered events to consumers i will explain",
    "start": "1295919",
    "end": "1301360"
  },
  {
    "text": "here so this is an even streaming use case so on the even producers the",
    "start": "1301360",
    "end": "1308080"
  },
  {
    "text": "web browser and web apps and so many things so i think you probably are familiar most",
    "start": "1308080",
    "end": "1313520"
  },
  {
    "text": "of you must be familiar these days when you go through a website e-commerce platform website every action",
    "start": "1313520",
    "end": "1319520"
  },
  {
    "text": "you do is tracked behind the scenes you click on a product you put something in the basket you're making a payment",
    "start": "1319520",
    "end": "1325760"
  },
  {
    "text": "completing your order abandoning or something everything is tracked behind the scenes via event so this is this",
    "start": "1325760",
    "end": "1332080"
  },
  {
    "text": "even flow so even flow is getting stored and then there is a there is a function",
    "start": "1332080",
    "end": "1337679"
  },
  {
    "text": "that will fetch each batch events or thousands of events and it will identify",
    "start": "1337679",
    "end": "1342880"
  },
  {
    "text": "into group into different types of events and then there are a bunch of consumers they will be interested to",
    "start": "1342880",
    "end": "1349600"
  },
  {
    "text": "know for example if you spent a minute or two on a you know on a page on an e-commerce",
    "start": "1349600",
    "end": "1355440"
  },
  {
    "text": "page you you know suddenly get recommendations hey would you like to see this product how does that happen",
    "start": "1355440",
    "end": "1361679"
  },
  {
    "text": "because this data flows to a you know your big data or a data lake or data inside steam",
    "start": "1361679",
    "end": "1367600"
  },
  {
    "text": "they do all their logic and you know mass and everything and they will send you back okay this customer you know",
    "start": "1367600",
    "end": "1373760"
  },
  {
    "text": "show these products so these are all so many things happen behind the scenes so let's see",
    "start": "1373760",
    "end": "1379280"
  },
  {
    "text": "um yeah so let's see how it works so so let's assume that the events come",
    "start": "1379280",
    "end": "1385919"
  },
  {
    "text": "into a you know data store in this case an s3 bucket the dotted line part i will show in a different uh pattern later and",
    "start": "1385919",
    "end": "1393039"
  },
  {
    "text": "there is a lambda function that kind of you know takes all the batch of events let's say thousands of",
    "start": "1393039",
    "end": "1398400"
  },
  {
    "text": "events and kind of splits all the events into different groups and it knows where to send so for behind each target the",
    "start": "1398400",
    "end": "1406240"
  },
  {
    "text": "targets could be on the micro service or the third party or different team within the organization etc so the lambda",
    "start": "1406240",
    "end": "1413039"
  },
  {
    "text": "function that will invoke the lambda functions asynchronously which is not a synchronous lambda invocation that is an",
    "start": "1413039",
    "end": "1420240"
  },
  {
    "text": "anti-pattern in my opinion never do one lambda to other call synchronously because your main lambda is waiting",
    "start": "1420240",
    "end": "1426159"
  },
  {
    "text": "until you know while the other one is working on so you kind of end up paying more so this is asynchronous invocation",
    "start": "1426159",
    "end": "1432080"
  },
  {
    "text": "it's just more like a you know fire and forgets so high volume events",
    "start": "1432080",
    "end": "1438080"
  },
  {
    "text": "dynamic onboarding i'll explain so",
    "start": "1438080",
    "end": "1443760"
  },
  {
    "text": "in our case the list of you know targets change or",
    "start": "1443760",
    "end": "1449679"
  },
  {
    "text": "vary all of a sudden we say oh you know we need to kind of send data to so and so third party or internally so what we",
    "start": "1449679",
    "end": "1457120"
  },
  {
    "text": "do is we have a kind of a fan out rule so this is a simple json this simplified",
    "start": "1457120",
    "end": "1462240"
  },
  {
    "text": "version of it and that is kept in uh in a place and the triage or lambda or the",
    "start": "1462240",
    "end": "1467440"
  },
  {
    "text": "fanout function will basically read the data from here and it will then know",
    "start": "1467440",
    "end": "1472880"
  },
  {
    "text": "which events are to be sent to which consumers so that way only this part a",
    "start": "1472880",
    "end": "1478320"
  },
  {
    "text": "new service will come into picture and this will get edited none of the other things will get you know changed so this",
    "start": "1478320",
    "end": "1484480"
  },
  {
    "text": "is a asynchronous invitation pattern in a different way so this is a another",
    "start": "1484480",
    "end": "1490000"
  },
  {
    "text": "one so typically as a loyalty customer if you go to a say a lego store and you give",
    "start": "1490000",
    "end": "1496080"
  },
  {
    "text": "your vip number and you place an order you kind of you know redeem points or vouchers and things like that that order",
    "start": "1496080",
    "end": "1503120"
  },
  {
    "text": "data comes back to back to back to the back to us to different places one of the services will be",
    "start": "1503120",
    "end": "1509840"
  },
  {
    "text": "looking at looking for the data is the loyalty platform loyalty platform needs to needs to needs to kind of you know do",
    "start": "1509840",
    "end": "1517039"
  },
  {
    "text": "the points calculations and updates and things like that and also the back you need to send",
    "start": "1517039",
    "end": "1523360"
  },
  {
    "text": "a satisfaction survey to external parties so that you get an email to you know say that you your experience was",
    "start": "1523360",
    "end": "1530080"
  },
  {
    "text": "good or satisfactory etc etc so for this we have",
    "start": "1530080",
    "end": "1535760"
  },
  {
    "text": "an implementation in place so this is an order processing the one that takes care of the loyalty order",
    "start": "1535760",
    "end": "1541840"
  },
  {
    "text": "then it once is processed this is is this is not kind of you know client facing this is background so it",
    "start": "1541840",
    "end": "1548240"
  },
  {
    "text": "can take its own time that's why it's a decoupled asynchronous or happening behind the scenes so when it once when",
    "start": "1548240",
    "end": "1554720"
  },
  {
    "text": "an order is placed everything is good it spits an event onto the bus and then it triggers a rule and this is something",
    "start": "1554720",
    "end": "1560880"
  },
  {
    "text": "called api destination if you're familiar with aws this is from there so basically what it what is representing",
    "start": "1560880",
    "end": "1567120"
  },
  {
    "text": "here is a setup setup of an api endpoint with the security credentials and the",
    "start": "1567120",
    "end": "1573120"
  },
  {
    "text": "rate limiting and the read rise and everything so this is asynchronous in the sense that this doesn't need a",
    "start": "1573120",
    "end": "1580159"
  },
  {
    "text": "response because say for example the uh compared to making a payment sending",
    "start": "1580159",
    "end": "1585600"
  },
  {
    "text": "a email or something to get the feedback is not that critical even if you lose an",
    "start": "1585600",
    "end": "1591279"
  },
  {
    "text": "event or lose warning something that's that's fine so this is this setup this",
    "start": "1591279",
    "end": "1596559"
  },
  {
    "text": "is where it just fires and you know uh figures it so and the other thing i",
    "start": "1596559",
    "end": "1602640"
  },
  {
    "text": "want to stress here is there is no function written here this is all part of the the platform so this is again",
    "start": "1602640",
    "end": "1609279"
  },
  {
    "text": "coming towards the the functionalist thing that i will be uh talking soon",
    "start": "1609279",
    "end": "1615279"
  },
  {
    "text": "um yeah so rate limiting and secret manager that's part of it so because uh the you",
    "start": "1615279",
    "end": "1620400"
  },
  {
    "text": "know the credentials are kept so it's used only when the invocation happens um",
    "start": "1620400",
    "end": "1625600"
  },
  {
    "text": "the problems payload size could be an issue so so your even bus can have a limit on how",
    "start": "1625600",
    "end": "1632960"
  },
  {
    "text": "you know what the data size your api the destination or the you know the http",
    "start": "1632960",
    "end": "1638000"
  },
  {
    "text": "endpoint that you know the end may have a you know different requirement so that kind of needs to be",
    "start": "1638000",
    "end": "1645440"
  },
  {
    "text": "kind of you know match and the other thing is often we have is the debugging or the traceability issues so that's",
    "start": "1645440",
    "end": "1652480"
  },
  {
    "text": "always the case when we use the platform integration rather than our own code but that's kind of the trade-off that we",
    "start": "1652480",
    "end": "1658240"
  },
  {
    "text": "know things are getting better but that's another area that you know this pattern kind of you know um surprises",
    "start": "1658240",
    "end": "1666559"
  },
  {
    "text": "um so as i mentioned i i returned a few blog posts about these things",
    "start": "1666559",
    "end": "1672480"
  },
  {
    "text": "um so this is coming down to the cqrs so when you finally place an order for",
    "start": "1672480",
    "end": "1678640"
  },
  {
    "text": "example there's so many validation happens behind the scenes the main one of the main",
    "start": "1678640",
    "end": "1684320"
  },
  {
    "text": "points of validation is the payments because payments depending on the provider the car or the bank it needs to",
    "start": "1684320",
    "end": "1692080"
  },
  {
    "text": "go through many hoops and hurts you know to get back to give you a success or not",
    "start": "1692080",
    "end": "1697360"
  },
  {
    "text": "so if you think of a 3ds flow it has a different kind of challenges and things so it can't take long you know seconds",
    "start": "1697360",
    "end": "1705039"
  },
  {
    "text": "or even minutes or more so we can't kind of keep this connection until that point",
    "start": "1705039",
    "end": "1710720"
  },
  {
    "text": "keep the customer waiting there so what usually happens is that you take the order and you then kind of decouple that",
    "start": "1710720",
    "end": "1717679"
  },
  {
    "text": "part so so this is the decoupling part so this",
    "start": "1717679",
    "end": "1723279"
  },
  {
    "text": "is the kind of you know function that receives and performs the initial validation it gives back an order number",
    "start": "1723279",
    "end": "1729520"
  },
  {
    "text": "then it's completely detached this is a queue that's pushing into a queue the other reason is like when you are on a",
    "start": "1729520",
    "end": "1736159"
  },
  {
    "text": "you know sort of a high volume sale event the orders come through in thousands per",
    "start": "1736159",
    "end": "1741600"
  },
  {
    "text": "second right or minutes for example and we can't process everything in the same speed they come in so we need to push",
    "start": "1741600",
    "end": "1748399"
  },
  {
    "text": "into some queue to have that buffer then behind the scenes you do the working out",
    "start": "1748399",
    "end": "1753760"
  },
  {
    "text": "so in this is this is like you know the command okay you know here is an order i'm submitting in order to do something",
    "start": "1753760",
    "end": "1759840"
  },
  {
    "text": "and then what happens is behind the scenes there's a cache table being set up which will keep the you know the",
    "start": "1759840",
    "end": "1766559"
  },
  {
    "text": "status of the things so then you provide a query endpoint to get a status of where we are",
    "start": "1766559",
    "end": "1773360"
  },
  {
    "text": "with the order this is a common pattern uh that that is in place this secures",
    "start": "1773360",
    "end": "1778880"
  },
  {
    "text": "the polling pattern one one thing to highlight here is that the statuses",
    "start": "1778880",
    "end": "1785360"
  },
  {
    "text": "i think you you know some of you may be familiar with",
    "start": "1785360",
    "end": "1790080"
  },
  {
    "text": "for example say the payment failed for some reason",
    "start": "1791200",
    "end": "1796240"
  },
  {
    "text": "backend knows backend service knows exactly why it failed either the pin wrong or insufficient",
    "start": "1796240",
    "end": "1803760"
  },
  {
    "text": "fund but backend would never communicate that to the front end so you can clearly change",
    "start": "1803760",
    "end": "1810720"
  },
  {
    "text": "the visibility of the error because for fraudulent activity reasons like for",
    "start": "1810720",
    "end": "1815919"
  },
  {
    "text": "people make use of that as and they can vary the the amount or change the pin and do",
    "start": "1815919",
    "end": "1821120"
  },
  {
    "text": "something like that so that's another beauty of this sort of separation so the backend service knows it it will log or",
    "start": "1821120",
    "end": "1828320"
  },
  {
    "text": "do things it needs to do in such scenarios whereas the the status visibility that it provides",
    "start": "1828320",
    "end": "1834799"
  },
  {
    "text": "to the front end is completely different because frontend doesn't need to know many of the reasons that happen behind",
    "start": "1834799",
    "end": "1840399"
  },
  {
    "text": "the scenes um okay functionless",
    "start": "1840399",
    "end": "1847120"
  },
  {
    "text": "so function is kind of the term it's been around for few years now",
    "start": "1847120",
    "end": "1852880"
  },
  {
    "text": "so it kind of started off uh with when initially people were kind of doing a",
    "start": "1852880",
    "end": "1859919"
  },
  {
    "text": "function or lambda function for everything so i'll i'll i'll put the picture and",
    "start": "1859919",
    "end": "1866080"
  },
  {
    "text": "explain it so this is typically you will see if there is an api that is behind the behind the api there is a function i",
    "start": "1866080",
    "end": "1872480"
  },
  {
    "text": "once uh i once you use the lambda hammer as a analogy like those days you know",
    "start": "1872480",
    "end": "1877919"
  },
  {
    "text": "when when this came around architect stories uh you know lambda hammer for every problem they hit with the lambda",
    "start": "1877919",
    "end": "1884240"
  },
  {
    "text": "okay we need a lambda function here but thing is kind of exploded and uncontrollably you know that many number",
    "start": "1884240",
    "end": "1890640"
  },
  {
    "text": "of lambda function so then you have a problem because people you know you start to hear this oh code is a",
    "start": "1890640",
    "end": "1896799"
  },
  {
    "text": "liability something you wrote today's legacy tomorrow all sorts of things and don't use functions to shift data this",
    "start": "1896799",
    "end": "1903600"
  },
  {
    "text": "is a bad thing if you know if you have just grabbing something here and dumping over there then obviously there is a",
    "start": "1903600",
    "end": "1909039"
  },
  {
    "text": "something missing in your provider service so this is where the function of movement started so how can we",
    "start": "1909039",
    "end": "1916399"
  },
  {
    "text": "get rid of functions where we don't need it so in this particular case if this",
    "start": "1916399",
    "end": "1922080"
  },
  {
    "text": "function is not doing any specific logic related things if it's simply fetching a",
    "start": "1922080",
    "end": "1928320"
  },
  {
    "text": "data from the data store can we integrate directly with the you know api so that's one of the kind of",
    "start": "1928320",
    "end": "1935919"
  },
  {
    "text": "the you know the simplest ways to explain the function unless if you're not familiar with that so basically what",
    "start": "1935919",
    "end": "1941600"
  },
  {
    "text": "we are doing is like using the native integration patterns so whether it is api or the where is a",
    "start": "1941600",
    "end": "1947919"
  },
  {
    "text": "event bridge or if you you know work with azure is i think even grade and all sorts of things so how can we you know",
    "start": "1947919",
    "end": "1954480"
  },
  {
    "text": "use the native integration because if you use that way then you don't need to worry about the cold starts it's a kind",
    "start": "1954480",
    "end": "1960000"
  },
  {
    "text": "of you know low latency low cost you don't need to you don't pay you don't pay for the you know the compute for the",
    "start": "1960000",
    "end": "1965919"
  },
  {
    "text": "function etc but at the same time that traceability could be an issue because when most of the cases that you know the",
    "start": "1965919",
    "end": "1973440"
  },
  {
    "text": "the thing that happens with the native integration is like a black box you don't get to see what's going on inside",
    "start": "1973440",
    "end": "1979600"
  },
  {
    "text": "so that's the other you know thing that needs to remember um so",
    "start": "1979600",
    "end": "1986000"
  },
  {
    "text": "so this is uh the data integra sorry injection pipeline that i explained earlier the you know",
    "start": "1986000",
    "end": "1991519"
  },
  {
    "text": "click stream event flowing through and the service that we use is an api gateway and kinesis data firewalls this",
    "start": "1991519",
    "end": "1998320"
  },
  {
    "text": "is an aws service it can take you know millions of events per second so this is ideal in this particular case and this",
    "start": "1998320",
    "end": "2005039"
  },
  {
    "text": "part i explained earlier so this basically will batch events we can you know dictate",
    "start": "2005039",
    "end": "2010640"
  },
  {
    "text": "how was the size and frequency etc but typically you have the lambda function there but the question is what do we",
    "start": "2010640",
    "end": "2017919"
  },
  {
    "text": "need the lambda function what does it what is it doing is it doing anything logic or is it really shifting the the",
    "start": "2017919",
    "end": "2024080"
  },
  {
    "text": "data coming from the api payload to firehose in that case you don't need it so you know get rid of it there's no",
    "start": "2024080",
    "end": "2031279"
  },
  {
    "text": "no need for that so it's a function less integration pattern so",
    "start": "2031279",
    "end": "2036720"
  },
  {
    "text": "like i mentioned let's go to maintain but also in the same time we need to think of the you know the the drawbacks",
    "start": "2036720",
    "end": "2042799"
  },
  {
    "text": "as well but this is kind of getting more you know more popular so behind the scenes the ap gate will have some kind",
    "start": "2042799",
    "end": "2048960"
  },
  {
    "text": "of you know script like this uh so there is still code but it's not kind of you know part of a function or anything is",
    "start": "2048960",
    "end": "2054878"
  },
  {
    "text": "something part of the the integration setup as well okay",
    "start": "2054879",
    "end": "2061838"
  },
  {
    "text": "so another pattern another function less one so order number generation or customer id",
    "start": "2062399",
    "end": "2068480"
  },
  {
    "text": "generation candidate id generation in many cases these are all kind of sequence numbers if you are coming from",
    "start": "2068480",
    "end": "2075358"
  },
  {
    "text": "the traditional relational database world you know that if you want to generate a sequence number you know how",
    "start": "2075359",
    "end": "2080638"
  },
  {
    "text": "to do it right it's an oracle provides away and every other database but when it comes to serverless if you work with",
    "start": "2080639",
    "end": "2086960"
  },
  {
    "text": "nosql databases like dynamodb we don't have an option in place you",
    "start": "2086960",
    "end": "2092079"
  },
  {
    "text": "know as popular as the ones we have with the relational database world so",
    "start": "2092079",
    "end": "2098160"
  },
  {
    "text": "a way to look at to do is like this is an example with a dynamodb and",
    "start": "2098160",
    "end": "2104640"
  },
  {
    "text": "we can use its atomic number generation so if you set an api and uh integrate directly with the",
    "start": "2104640",
    "end": "2111359"
  },
  {
    "text": "dynamodb there's no function there you can do the you know number generation with a you know a couple of parameters",
    "start": "2111359",
    "end": "2117520"
  },
  {
    "text": "and coming in we can you can have different tables not necessarily just one table for everybody you can have",
    "start": "2117520",
    "end": "2124320"
  },
  {
    "text": "different tables and uh generate the numbers so this is kind of the strip part of the script that will be behind",
    "start": "2124320",
    "end": "2130960"
  },
  {
    "text": "the scene as part of the api gateway integration so again this is a",
    "start": "2130960",
    "end": "2136640"
  },
  {
    "text": "dynamodb script to kind of generate the atomic values",
    "start": "2136640",
    "end": "2141760"
  },
  {
    "text": "orchestration is an interesting pattern so what is an orchestration so in an",
    "start": "2141760",
    "end": "2147599"
  },
  {
    "text": "orchestration typically you know people relate to an orchestra where they have kind of you know musicians and you know",
    "start": "2147599",
    "end": "2154800"
  },
  {
    "text": "things there so somebody is you know conductor is say you know kind of instructing what to do when so this is",
    "start": "2154800",
    "end": "2161839"
  },
  {
    "text": "typically in a workflow you know workflow you have a number of processes you know there's a start there's a",
    "start": "2161839",
    "end": "2168000"
  },
  {
    "text": "parallel thing or a decision point so many things happen together before that comes to an end so",
    "start": "2168000",
    "end": "2175520"
  },
  {
    "text": "it can be long running or even short running depending on the you know thing in some cases you can pause and resume",
    "start": "2175520",
    "end": "2182240"
  },
  {
    "text": "not just you know you hit the you know the start button and everything goes through fine",
    "start": "2182240",
    "end": "2188640"
  },
  {
    "text": "and also you can introduce kind of delays and timers and things like that",
    "start": "2188960",
    "end": "2194720"
  },
  {
    "text": "um so there's always this question of cross service orchestration if you have",
    "start": "2194720",
    "end": "2200800"
  },
  {
    "text": "two micro services you see good have one orchestrating",
    "start": "2200800",
    "end": "2206240"
  },
  {
    "text": "resources across multiple services or not so there's no clear answer but the",
    "start": "2206240",
    "end": "2211839"
  },
  {
    "text": "general consensus don't do it because if you are in one service an orchestration or a workflow in one",
    "start": "2211839",
    "end": "2218160"
  },
  {
    "text": "service if you're trying to kind of connect with a lambda function in a different service",
    "start": "2218160",
    "end": "2223280"
  },
  {
    "text": "that is a really anti-patent because if things change you are changing two things right so",
    "start": "2223280",
    "end": "2229119"
  },
  {
    "text": "that's why people pre you know say that uh do the kind of orchestration if at all possible in one service but now there",
    "start": "2229119",
    "end": "2236400"
  },
  {
    "text": "are ways to kind of you know distribute i will talk about that towards the end but so that's kind of the you know the",
    "start": "2236400",
    "end": "2242160"
  },
  {
    "text": "general i think the recently this is this this game so popular because aws",
    "start": "2242160",
    "end": "2247920"
  },
  {
    "text": "now has um uh express state function where it lasts for five minutes but uh",
    "start": "2247920",
    "end": "2253040"
  },
  {
    "text": "you know you can kind of you know execute sorry invoke it multiple or millions of times",
    "start": "2253040",
    "end": "2258800"
  },
  {
    "text": "um so whether you shift uh the logic from a big lambda function to state mission or not",
    "start": "2258800",
    "end": "2266079"
  },
  {
    "text": "so again there's a trade-off because state machine can get complicated with all your kind of you know if and health",
    "start": "2266079",
    "end": "2272160"
  },
  {
    "text": "conditions and so many things so but that you know the options there",
    "start": "2272160",
    "end": "2277599"
  },
  {
    "text": "okay so this is a simple one so session monitoring so i mentioned earlier that someone going",
    "start": "2277599",
    "end": "2284240"
  },
  {
    "text": "to a lego store and buying something at the at the checkout till so we kind of have a session uh duration of two hours",
    "start": "2284240",
    "end": "2292160"
  },
  {
    "text": "within which that should become i think that's more than enough for something to be completed till right the reason we",
    "start": "2292160",
    "end": "2297760"
  },
  {
    "text": "have this session based thing is because if they chose to say uh redeem a voucher or redeem certain",
    "start": "2297760",
    "end": "2304480"
  },
  {
    "text": "loyalty points we don't know whether they you know the order completed until we receive the",
    "start": "2304480",
    "end": "2310320"
  },
  {
    "text": "order data but what we do is the the loyalty service platform again microservices serverless platform in",
    "start": "2310320",
    "end": "2316400"
  },
  {
    "text": "between you will do is that it will put those things on hold you'll say okay i'll keep these things aside so you",
    "start": "2316400",
    "end": "2322720"
  },
  {
    "text": "can't you know kind of use elsewhere in between but i will wait until you your order is finished but what happens is",
    "start": "2322720",
    "end": "2329200"
  },
  {
    "text": "that in some cases orders can get abandoned so that means you can't kind of hold on to those",
    "start": "2329200",
    "end": "2335359"
  },
  {
    "text": "the the rewards and stuff forever so we have a mechanism we need to have a mechanism how can we kind of efficiently",
    "start": "2335359",
    "end": "2341920"
  },
  {
    "text": "identify so what happens is that as part of the loyalty service when it knows",
    "start": "2341920",
    "end": "2347040"
  },
  {
    "text": "that there is a session it's going to be started you will send out an event and it will kind of you know kick off a",
    "start": "2347040",
    "end": "2352880"
  },
  {
    "text": "state machine workflow the labels kind of you know kind of they're not kind of uh",
    "start": "2352880",
    "end": "2358240"
  },
  {
    "text": "they don't represent the actual thing but uh that's what happened so that that time out the that step will wait for two",
    "start": "2358240",
    "end": "2366160"
  },
  {
    "text": "hours and once it's over basically it will say okay there's no order for this session so i'm",
    "start": "2366160",
    "end": "2371839"
  },
  {
    "text": "going to send out a clean up event so the event goes off it doesn't do anything though the or you know the",
    "start": "2371839",
    "end": "2377280"
  },
  {
    "text": "state state mission of the workflow it will just send out an event onto the bus and whichever service that needs to",
    "start": "2377280",
    "end": "2383440"
  },
  {
    "text": "perform the cleanup can subscribe to that event and they will act again these things happen this happens behind the",
    "start": "2383440",
    "end": "2389839"
  },
  {
    "text": "scenes this is not again customer facing so we have the kind of uh the freedom the luxury to carry out these things",
    "start": "2389839",
    "end": "2396640"
  },
  {
    "text": "asynchronous asynchronously and decoupled fashion",
    "start": "2396640",
    "end": "2401359"
  },
  {
    "text": "okay so this this comes to the cross service task coordination the thing i mentioned so we have a micro service",
    "start": "2403040",
    "end": "2409119"
  },
  {
    "text": "here it has an orchestration say this is one of the main micro services it needs",
    "start": "2409119",
    "end": "2414480"
  },
  {
    "text": "other services to fulfill fulfill its uh you know functionality say it it relies",
    "start": "2414480",
    "end": "2420160"
  },
  {
    "text": "on two other micro services b and c microsoft b has an api and also has",
    "start": "2420160",
    "end": "2425440"
  },
  {
    "text": "functions whereas c is completely self-contained there's no api or anything it's a long-running process",
    "start": "2425440",
    "end": "2432560"
  },
  {
    "text": "so api call that's fine but if you are making that call like i mentioned earlier this is probably a you",
    "start": "2432560",
    "end": "2440079"
  },
  {
    "text": "know not a good thing we don't want to hardwire functions across different services or any other you know similar",
    "start": "2440079",
    "end": "2445839"
  },
  {
    "text": "resources and and this is a long running process what do we do in these situations so",
    "start": "2445839",
    "end": "2454079"
  },
  {
    "text": "this is where the distributor orchestration comes into picture so this is a",
    "start": "2454079",
    "end": "2459359"
  },
  {
    "text": "simple view of the loyalty and service platforms it has bunch of micro services the two things that i",
    "start": "2459359",
    "end": "2466079"
  },
  {
    "text": "want to highlight are the order processing and the vendor mediator the vendor mediator is basically dealing",
    "start": "2466079",
    "end": "2472640"
  },
  {
    "text": "with a sas platform all the interactions to do with this third party application happen here none of the services will be",
    "start": "2472640",
    "end": "2480000"
  },
  {
    "text": "aware of this shop existing here the reason we are isolated is because tomorrow if business decided to change",
    "start": "2480000",
    "end": "2486160"
  },
  {
    "text": "the platform to somebody else only we need to write another micro service or mic you know modify this one none of the",
    "start": "2486160",
    "end": "2493040"
  },
  {
    "text": "uh the schema or anything else will change so that's why they they kind of separate so the problem is",
    "start": "2493040",
    "end": "2499280"
  },
  {
    "text": "as this the order processing goes through a bunch of things it requires this one to do two or three things with",
    "start": "2499280",
    "end": "2505359"
  },
  {
    "text": "a third party and on success or failure of this interaction it can it will decide",
    "start": "2505359",
    "end": "2511760"
  },
  {
    "text": "whether the order is success you know uh successfully processed or not so this is a",
    "start": "2511760",
    "end": "2517520"
  },
  {
    "text": "work as the state mission behind the order processing a bunch of steps to identify as a vip non-vip sale return",
    "start": "2517520",
    "end": "2524960"
  },
  {
    "text": "mixed all sorts of things but along those lines somewhere it needs to interact with the other one okay you",
    "start": "2524960",
    "end": "2530640"
  },
  {
    "text": "know update the order to the the other customer the to the platform so",
    "start": "2530640",
    "end": "2535760"
  },
  {
    "text": "and then this service has no public api this is a completely hundred percent inventory one so that's how you know",
    "start": "2535760",
    "end": "2541920"
  },
  {
    "text": "kind of architected that way so this is where the distributed orchestration comes so we have two",
    "start": "2541920",
    "end": "2548240"
  },
  {
    "text": "services and task one one service then you know invokes the other one and it will wait",
    "start": "2548240",
    "end": "2553839"
  },
  {
    "text": "for the other one to uh complete uh completed task and then it will carry",
    "start": "2553839",
    "end": "2560319"
  },
  {
    "text": "on from there so if you're from you know if if you're familiar with uh the aws",
    "start": "2560319",
    "end": "2566319"
  },
  {
    "text": "step functions though they introduced something called task tokens recently so basically what you can do is you can",
    "start": "2566319",
    "end": "2573119"
  },
  {
    "text": "issue an event or instruction with a token i can go anywhere right it's not kind of targeted to this service that's",
    "start": "2573119",
    "end": "2579680"
  },
  {
    "text": "part of the implementation so those who whoever is fetching the event with the",
    "start": "2579680",
    "end": "2584720"
  },
  {
    "text": "token can do carry out the work it could be an orchestration or could be a function or anything",
    "start": "2584720",
    "end": "2590480"
  },
  {
    "text": "and then once it's done send the you know call back with uh with the token so the token will go back and",
    "start": "2590480",
    "end": "2597760"
  },
  {
    "text": "then there's a way we can identify okay so now you can proceed so",
    "start": "2597760",
    "end": "2603040"
  },
  {
    "text": "so this is kind of the simple representation so the task sends out the token the you know the yellow boxes and",
    "start": "2603040",
    "end": "2608960"
  },
  {
    "text": "once it's done there's an event that even with that same token goes back there is a somebody listening for the",
    "start": "2608960",
    "end": "2614400"
  },
  {
    "text": "event and then will resume so you can do for different arms of a particular uh",
    "start": "2614400",
    "end": "2619920"
  },
  {
    "text": "state mission flow not for the entire you know it's not just one for the entire thing you can have as many uh",
    "start": "2619920",
    "end": "2627040"
  },
  {
    "text": "arms and as many weight and resume tokens and we can do you know as as we",
    "start": "2627040",
    "end": "2633119"
  },
  {
    "text": "need so this is another powerful so this is this gives us a way of distributing this sort of",
    "start": "2633119",
    "end": "2639599"
  },
  {
    "text": "orchestration across different microservices but you need to be careful",
    "start": "2639599",
    "end": "2644880"
  },
  {
    "text": "in terms of who can subscribe to this event because in this this sort of situations we are",
    "start": "2644880",
    "end": "2651200"
  },
  {
    "text": "targeting the events to somebody specifically it's not the typical",
    "start": "2651200",
    "end": "2656560"
  },
  {
    "text": "i would say you want to even publish subscribe anybody can do anything because in this case that anybody can't",
    "start": "2656560",
    "end": "2662480"
  },
  {
    "text": "do everything because we are kind of you know targeting uh to specifically so if you have a bunch of micro services we",
    "start": "2662480",
    "end": "2668640"
  },
  {
    "text": "can you can carefully kind of distribute and get over the problem",
    "start": "2668640",
    "end": "2674480"
  },
  {
    "text": "okay choreography is the other side so with choreography there is uh it's always related to the",
    "start": "2674480",
    "end": "2680960"
  },
  {
    "text": "you know sort of even bus and publish subscribers because unlike in any dance movement for example",
    "start": "2680960",
    "end": "2688079"
  },
  {
    "text": "each one is instructed to carry out their part irrespective of you know others so as per the music and that you",
    "start": "2688079",
    "end": "2694480"
  },
  {
    "text": "know tune goes they they simply perform right nobody is talking to them nobody is instructing them they just perform",
    "start": "2694480",
    "end": "2701040"
  },
  {
    "text": "same same in this case so something happens in a new sorry in a service",
    "start": "2701040",
    "end": "2706560"
  },
  {
    "text": "pushes an event out okay it's job done and whoever else needs to subscribe",
    "start": "2706560",
    "end": "2711839"
  },
  {
    "text": "you know already subscribe and they will then act based on what needs to be done so in the previous example as i showed",
    "start": "2711839",
    "end": "2719040"
  },
  {
    "text": "you the vendor mediator as it receives the event it knows exactly what needs to be done update the order etc etc",
    "start": "2719040",
    "end": "2725839"
  },
  {
    "text": "similarly different services they know exactly you know what they knew so couple of things the item potency is",
    "start": "2725839",
    "end": "2732480"
  },
  {
    "text": "important because not all even bus implementers uh guarantee uh you know",
    "start": "2732480",
    "end": "2738079"
  },
  {
    "text": "once only delivery it could be you know sometimes duplicates go uh when i when i go through the circuit breaker",
    "start": "2738079",
    "end": "2744880"
  },
  {
    "text": "i will i will talk about that and the traceability can be an issue so one of the ways we do is like",
    "start": "2744880",
    "end": "2751920"
  },
  {
    "text": "and even can carry an envelope with some kind of a unique id so that you can",
    "start": "2751920",
    "end": "2757119"
  },
  {
    "text": "take to all the way to the different services wherever the service that you know the event that",
    "start": "2757119",
    "end": "2762640"
  },
  {
    "text": "flows to um so this is a feature we developed a",
    "start": "2762640",
    "end": "2768000"
  },
  {
    "text": "while ago so someone coming on to the side looking for a product they say is not available so this feature is",
    "start": "2768000",
    "end": "2774240"
  },
  {
    "text": "basically register your email so that we will notify you when the product is back in stock",
    "start": "2774240",
    "end": "2779680"
  },
  {
    "text": "okay simple to talk about but there are quite a few things involved behind the scenes as a future it looks simple but",
    "start": "2779680",
    "end": "2787359"
  },
  {
    "text": "there are different micro services come into play when we implement because",
    "start": "2787359",
    "end": "2792880"
  },
  {
    "text": "there's a registration part somebody needs to look after the email addresses like pii gdp or et cetera et cetera all",
    "start": "2792880",
    "end": "2799040"
  },
  {
    "text": "combined then somebody needs to notify the customer and there's a service that",
    "start": "2799040",
    "end": "2804560"
  },
  {
    "text": "constantly working on the status of the products and stuff and on top",
    "start": "2804560",
    "end": "2810400"
  },
  {
    "text": "you need to you need to generate the data insights and the business analytics for example business will be interested",
    "start": "2810400",
    "end": "2816800"
  },
  {
    "text": "to know how many registrations we have for this product and also they would like to know how many how many customers",
    "start": "2816800",
    "end": "2822720"
  },
  {
    "text": "bought the product based on the emails because if if you're not familiar with the email",
    "start": "2822720",
    "end": "2828079"
  },
  {
    "text": "notification process as we send out emails via say ses or on our email provider you can receive back the",
    "start": "2828079",
    "end": "2834800"
  },
  {
    "text": "feedback if necessary we can know whether you open the email where you click the link",
    "start": "2834800",
    "end": "2841599"
  },
  {
    "text": "inside the email all these things so all those information come back to give the business uh the the details they need",
    "start": "2841599",
    "end": "2850640"
  },
  {
    "text": "so this is roughly a you know architectural",
    "start": "2850640",
    "end": "2855760"
  },
  {
    "text": "visualization of the solution not everything in place but on the on the on",
    "start": "2855760",
    "end": "2861040"
  },
  {
    "text": "one side we have the registration its job is just registering it doesn't do anything so what it will do is it will get the details from the customer from",
    "start": "2861040",
    "end": "2867839"
  },
  {
    "text": "the by the browser send an event onto the bus it's job done and somebody else is taking care of",
    "start": "2867839",
    "end": "2874240"
  },
  {
    "text": "storing those events and the there's a stock checking one so that",
    "start": "2874240",
    "end": "2880720"
  },
  {
    "text": "will basically check the stock data continuously and push events and ah",
    "start": "2880720",
    "end": "2885839"
  },
  {
    "text": "you know the the notification will be listening for those events coming as a product coming back to stock kind of",
    "start": "2885839",
    "end": "2892240"
  },
  {
    "text": "event types so then from there it will kind of kick off the uh even flow so the",
    "start": "2892240",
    "end": "2897920"
  },
  {
    "text": "email feedback this is what i mentioned that the all the review i think aws supports like",
    "start": "2897920",
    "end": "2903200"
  },
  {
    "text": "nano 10 different types of feedback you can you can receive like marking your spam or undelivered and so many so many",
    "start": "2903200",
    "end": "2910319"
  },
  {
    "text": "things so they come back and they kind of you know use for the business insights",
    "start": "2910319",
    "end": "2915599"
  },
  {
    "text": "so in terms of micro services so this sort of the dotted uh rectangle i mean this is simplified view but that's kind",
    "start": "2915599",
    "end": "2922079"
  },
  {
    "text": "of the way it's the things are split and another example of how these different services",
    "start": "2922079",
    "end": "2928880"
  },
  {
    "text": "come together and to work in a you know kind of choreographic way",
    "start": "2928880",
    "end": "2934240"
  },
  {
    "text": "right um so just a quick one there's always this",
    "start": "2934240",
    "end": "2940319"
  },
  {
    "text": "debate and like i already mentioned so when do you use choreography when do you",
    "start": "2940319",
    "end": "2945520"
  },
  {
    "text": "use orchestration so like i mentioned if at all possible stick within a service",
    "start": "2945520",
    "end": "2951040"
  },
  {
    "text": "if you are doing you know orchestration whereas choreography is like coordinating between different micro services i mean",
    "start": "2951040",
    "end": "2958720"
  },
  {
    "text": "this is not kind of you know hard and fast rules but following this sort of principle will",
    "start": "2958720",
    "end": "2964079"
  },
  {
    "text": "help us to avoid tankling of microservices as you kind of you know grow your",
    "start": "2964079",
    "end": "2970559"
  },
  {
    "text": "ecosystem so circuit breaker so there are hundreds of ways of implementing circuit",
    "start": "2970559",
    "end": "2977440"
  },
  {
    "text": "breaker so this is a different approach so when you when you when you invoke an api",
    "start": "2977440",
    "end": "2983680"
  },
  {
    "text": "if everything is good yeah it's fine circuit is closed when the service is on fire you can't reach anything services you know the",
    "start": "2983680",
    "end": "2990160"
  },
  {
    "text": "circuit is open nothing can go so usually typically in a circuit breaker situation what you will do is you have",
    "start": "2990160",
    "end": "2996480"
  },
  {
    "text": "some kind of a service status monitoring okay so you look at okay this is green",
    "start": "2996480",
    "end": "3001680"
  },
  {
    "text": "this is good okay fine this is completely blocked or is it uh you know half open and you keep on a you know",
    "start": "3001680",
    "end": "3008880"
  },
  {
    "text": "threshold and some logic behind the scenes so the thing is like in most cases when you",
    "start": "3008880",
    "end": "3015200"
  },
  {
    "text": "send requests to a different uh service or a third party if they are down you need to resend all those things",
    "start": "3015200",
    "end": "3022480"
  },
  {
    "text": "right so you need to take care of okay how do i get told of or keep hold of those failed requests and i can replay",
    "start": "3022480",
    "end": "3029200"
  },
  {
    "text": "them so that's the probably the hardest part here so ah okay that's fine so coming back to the",
    "start": "3029200",
    "end": "3036480"
  },
  {
    "text": "service the the one that uh the center you know the vendor mediator so this is",
    "start": "3036480",
    "end": "3042240"
  },
  {
    "text": "sas platform somebody else third-party platform so we can't take it for granted that is going to be there all the time",
    "start": "3042240",
    "end": "3047839"
  },
  {
    "text": "especially this platform as part of their cla it says that it will be down six hours per year okay so there you go",
    "start": "3047839",
    "end": "3053920"
  },
  {
    "text": "so you can't some you know simply assume that will be there so you need to do kind of three invocations happen per up",
    "start": "3053920",
    "end": "3060319"
  },
  {
    "text": "to three can happen one two one one to three can happen for every successful order so that's why it's important for",
    "start": "3060319",
    "end": "3066960"
  },
  {
    "text": "us so the way we i did i was using a feature of even bridge from amazon the",
    "start": "3066960",
    "end": "3074000"
  },
  {
    "text": "so they have something called a archive and a replay so that is what we use so",
    "start": "3074000",
    "end": "3081280"
  },
  {
    "text": "just to call out the storage first pattern is something you might be hearing these days",
    "start": "3081280",
    "end": "3086960"
  },
  {
    "text": "so what happens is with the asynchronous decoupled way of doing things the",
    "start": "3086960",
    "end": "3092000"
  },
  {
    "text": "pattern is like when a service receives a request to fulfill something the first thing it",
    "start": "3092000",
    "end": "3097359"
  },
  {
    "text": "will do is kind of store the details somewhere before acting on anything so this kind",
    "start": "3097359",
    "end": "3102960"
  },
  {
    "text": "of helps if it needs to replay or come back to the you know the service for",
    "start": "3102960",
    "end": "3109200"
  },
  {
    "text": "some reason so that's a pattern that you probably will hear now so when it comes to",
    "start": "3109200",
    "end": "3114400"
  },
  {
    "text": "third party applications in my way these there are three three cases so success",
    "start": "3114400",
    "end": "3120240"
  },
  {
    "text": "fine everything is good fine error hard error if it's something to do with",
    "start": "3120240",
    "end": "3125440"
  },
  {
    "text": "the data no matter how many times you try and resubmit it's going to hit the",
    "start": "3125440",
    "end": "3130720"
  },
  {
    "text": "same error okay so that needs a different treatment that is that needs kind of you know business need to take",
    "start": "3130720",
    "end": "3136720"
  },
  {
    "text": "you know know the data and relays with somebody to get over whereas the retries",
    "start": "3136720",
    "end": "3142240"
  },
  {
    "text": "whether it's down or time out or you know the typical service unavailable issues those need to",
    "start": "3142240",
    "end": "3149680"
  },
  {
    "text": "be needs to be harvested and you need to kind of replay so what happens is like this particular service at the back of",
    "start": "3149680",
    "end": "3156319"
  },
  {
    "text": "every order it processes among many many events it will send out these three",
    "start": "3156319",
    "end": "3161520"
  },
  {
    "text": "events go out as well success error or the retry so we will be looking for the",
    "start": "3161520",
    "end": "3167359"
  },
  {
    "text": "retry events coming out of the service and then we set up something called an event",
    "start": "3167359",
    "end": "3174160"
  },
  {
    "text": "archive so this rule something and even coming through this pipeline or this",
    "start": "3174160",
    "end": "3179520"
  },
  {
    "text": "flow we know that they only get the retry events here so what happens is is kept",
    "start": "3179520",
    "end": "3186559"
  },
  {
    "text": "in a you know archive which is part of the the service itself and",
    "start": "3186559",
    "end": "3192480"
  },
  {
    "text": "what is an archive is basically a collection of events so you need to set up a filtering and routing rule behind the",
    "start": "3192480",
    "end": "3198800"
  },
  {
    "text": "scenes so it knows okay so these events i am going to keep on you can create multiple archives so if there are",
    "start": "3198800",
    "end": "3204319"
  },
  {
    "text": "different types of services or you know events you can create a different arcade so that you're",
    "start": "3204319",
    "end": "3210960"
  },
  {
    "text": "not kind of putting everything together and making a mess you can target you know individually you know remember the",
    "start": "3210960",
    "end": "3216720"
  },
  {
    "text": "granularity i talked about talked about earlier so so that's there so in addition to these",
    "start": "3216720",
    "end": "3223200"
  },
  {
    "text": "things there is a setup behind the scenes basically looking at the status of that third-party application so",
    "start": "3223200",
    "end": "3228960"
  },
  {
    "text": "that's based on a current job it runs i don't know one or two minutes every two minutes hitting their status and points",
    "start": "3228960",
    "end": "3234960"
  },
  {
    "text": "to make sure so every every invocation it updates the details onto the status table and behind",
    "start": "3234960",
    "end": "3241520"
  },
  {
    "text": "the scenes there is a there is a lambda listening for all the status and there's some logic here it will look at okay",
    "start": "3241520",
    "end": "3247280"
  },
  {
    "text": "what's the threshold what you know threshold i need to now look at so if the system has been down for long and",
    "start": "3247280",
    "end": "3253839"
  },
  {
    "text": "suddenly it receives a uh event via this update saying that oh hey third party is up now oh okay then this will kind of",
    "start": "3253839",
    "end": "3260480"
  },
  {
    "text": "come alive and look at a few parameters say okay i'm not go i know i'm not going to",
    "start": "3260480",
    "end": "3265920"
  },
  {
    "text": "trigger the replay of of those events kept in that archive between these two",
    "start": "3265920",
    "end": "3271200"
  },
  {
    "text": "you know time frames because uh that the function knows when was the last time uh",
    "start": "3271200",
    "end": "3276319"
  },
  {
    "text": "it was up or down so based on that the events will be",
    "start": "3276319",
    "end": "3281520"
  },
  {
    "text": "played back to the ah bus and it will go back to the service and the flow will continue just like",
    "start": "3281520",
    "end": "3288000"
  },
  {
    "text": "normal and if things are failed again so we will come back here and so this probably may look like a kind of",
    "start": "3288000",
    "end": "3294079"
  },
  {
    "text": "expensive circuit breaker implementation but in our case because the reasons i mentioned the the decoupled nature of",
    "start": "3294079",
    "end": "3300000"
  },
  {
    "text": "the services and we just simply couldn't want to kind of you know scan the table for because we don't know how long we'll",
    "start": "3300000",
    "end": "3307359"
  },
  {
    "text": "be down and how many items will be in the table if it's like a handful of items okay fine we can do a",
    "start": "3307359",
    "end": "3313520"
  },
  {
    "text": "query or something we don't want to kind of carry thousands of items so in our case behind the scene is the nosql",
    "start": "3313520",
    "end": "3320000"
  },
  {
    "text": "dynamodb so they're all kind of the trade-offs we looked at and we have this uh you know kind of implementation in",
    "start": "3320000",
    "end": "3326000"
  },
  {
    "text": "place things to watch out for",
    "start": "3326000",
    "end": "3330720"
  },
  {
    "text": "even exodus because your uh your the third party may not handle the volume of events all of a",
    "start": "3331359",
    "end": "3338559"
  },
  {
    "text": "sudden coming out of your archive and hitting so that's why you need to kind of have the you know the throttling mechanisms or",
    "start": "3338559",
    "end": "3345200"
  },
  {
    "text": "the buffering mechanisms in place to make sure that you don't hit the third party a lot i",
    "start": "3345200",
    "end": "3350720"
  },
  {
    "text": "mean often people ask say for example most most websites many",
    "start": "3350720",
    "end": "3356079"
  },
  {
    "text": "websites these days i mean lego.com also we have this queuing mechanism during peak sale period so if you if you want",
    "start": "3356079",
    "end": "3362960"
  },
  {
    "text": "to buy something you'll be in a q a people ask oh you're running on serverless then what's the point in kind",
    "start": "3362960",
    "end": "3368160"
  },
  {
    "text": "of you know having this queue can you not scale it's not for the you know the serverless that we have to protect is for the all",
    "start": "3368160",
    "end": "3375520"
  },
  {
    "text": "the third party applications that we interact because if they can't cope then",
    "start": "3375520",
    "end": "3380640"
  },
  {
    "text": "we have a problem so it's difficult to explain but trust a question that comes again and again always because they",
    "start": "3380640",
    "end": "3387520"
  },
  {
    "text": "think that serverless scales up indefinitely yes it can be but we need to kind of look after the ecosystem",
    "start": "3387520",
    "end": "3394160"
  },
  {
    "text": "around so that's the thing",
    "start": "3394160",
    "end": "3397359"
  },
  {
    "text": "okay quickly on sustainability because this is a hot topic these days and especially as cloud providers started to",
    "start": "3399599",
    "end": "3406480"
  },
  {
    "text": "provide the mechanisms of measuring carbon footprint and bunch of things so everyone is now",
    "start": "3406480",
    "end": "3413119"
  },
  {
    "text": "conscious but if you look at sustainable sustainability itself it's not specific",
    "start": "3413119",
    "end": "3418640"
  },
  {
    "text": "to the environment even though the planet and environment gets the focus it can be anything right because it can be",
    "start": "3418640",
    "end": "3424640"
  },
  {
    "text": "a related to a product we are building a sustainable product things like for example",
    "start": "3424640",
    "end": "3430079"
  },
  {
    "text": "can you extend the product beyond your uh you know two sprints or you're going to kind of start all over again so that",
    "start": "3430079",
    "end": "3436160"
  },
  {
    "text": "needs to be part of it because we kind of gone away from the the typical maintenance mode and we are kind of more",
    "start": "3436160",
    "end": "3442559"
  },
  {
    "text": "into sustaining the products right we start with the mvp and kind of iterate and go forward so we need to think of",
    "start": "3442559",
    "end": "3449040"
  },
  {
    "text": "how can i sustain my product itself not just you know do it for once and uh you",
    "start": "3449040",
    "end": "3454240"
  },
  {
    "text": "know dump it for maintenance so those days are gone and also the pro you know what are the processes that help in my",
    "start": "3454240",
    "end": "3460559"
  },
  {
    "text": "sustainability journey and of course the cloud comes in you know what do they provide what we need to take care of so",
    "start": "3460559",
    "end": "3466960"
  },
  {
    "text": "such this is what i'm saying so that's gone these days more of sustaining things you know how do we operate you",
    "start": "3466960",
    "end": "3472880"
  },
  {
    "text": "know single micro services they go out and uh so for that couple of things we",
    "start": "3472880",
    "end": "3478400"
  },
  {
    "text": "need to take you know take into consideration during the design or architectural uh thinking so can it be",
    "start": "3478400",
    "end": "3484799"
  },
  {
    "text": "modeler can i extend it how can i observe so these you know elements are important to build sustainable products",
    "start": "3484799",
    "end": "3490960"
  },
  {
    "text": "so processes similar um um at least was talking about the lean principle in",
    "start": "3490960",
    "end": "3497119"
  },
  {
    "text": "another talk recently so those things come into place how do i you know reduce waste so if you are kind of keeping your",
    "start": "3497119",
    "end": "3504000"
  },
  {
    "text": "if you have a you know very bad value stream and if you are keeping resources running until you you know",
    "start": "3504000",
    "end": "3510640"
  },
  {
    "text": "you're queuing or deploying that means you are kind of unnecessarily burning resources so these are the things that",
    "start": "3510640",
    "end": "3517119"
  },
  {
    "text": "you need to take into account account and also the most importantly automating everything so that there aren't any",
    "start": "3517119",
    "end": "3523040"
  },
  {
    "text": "manual you know delays everything is automated things are tidied up once the job done etc",
    "start": "3523040",
    "end": "3528640"
  },
  {
    "text": "so when it comes to cloud aws kind of puts out this sort of responsibility in two",
    "start": "3528640",
    "end": "3534000"
  },
  {
    "text": "ways it's a shared responsibility they do their part i mean it applies to any cloud provider not just aws right so",
    "start": "3534000",
    "end": "3541040"
  },
  {
    "text": "they provide their part and we need to do our part as well",
    "start": "3541040",
    "end": "3546160"
  },
  {
    "text": "so in terms of what they are doing cloud providers to use the you know renewable energy and they do the resource sharing",
    "start": "3546160",
    "end": "3553040"
  },
  {
    "text": "and all sorts of things whereas when it comes to our site so we use managed services serverless gives us a step",
    "start": "3553040",
    "end": "3558799"
  },
  {
    "text": "ahead but in plus we need to kind of get rid of the unwanted resources data storage you know get rid of them don't",
    "start": "3558799",
    "end": "3565599"
  },
  {
    "text": "keep them because they all kind of in the end of the day you know consuming power and",
    "start": "3565599",
    "end": "3570960"
  },
  {
    "text": "other resources so there are a bunch of you know the patterns uh they kind of help with how",
    "start": "3570960",
    "end": "3576559"
  },
  {
    "text": "can we you know improve the situation uh when it comes to sustainability okay so that coming towards the",
    "start": "3576559",
    "end": "3583760"
  },
  {
    "text": "uh the benefits of patents so like i mentioned uh earlier so this is where we first we started so simple pattern and",
    "start": "3583760",
    "end": "3591520"
  },
  {
    "text": "ap gateway and lambda function people won't even consider us a pattern these days because that's there everywhere",
    "start": "3591520",
    "end": "3597119"
  },
  {
    "text": "right so that's where it started so and from there things moved on and this one",
    "start": "3597119",
    "end": "3602880"
  },
  {
    "text": "i saw i show you the kinesis firehose thingy this pattern is repeated i think at least three other places the email",
    "start": "3602880",
    "end": "3610000"
  },
  {
    "text": "feedback the the mechanism i mentioned that has fire fire was behind the scenes because",
    "start": "3610000",
    "end": "3615920"
  },
  {
    "text": "when you when you send out hundreds of thousands of emails you can expect to come back you know the feedback coming",
    "start": "3615920",
    "end": "3621680"
  },
  {
    "text": "back in thousands right so that sort of injection pipeline that we have",
    "start": "3621680",
    "end": "3626960"
  },
  {
    "text": "and the development acceleration so this is one of the earliest data processing",
    "start": "3626960",
    "end": "3633200"
  },
  {
    "text": "pipelines we put in place so sap feeds will drop into the bucket you know kick off a lambda they have a again a queue",
    "start": "3633200",
    "end": "3640640"
  },
  {
    "text": "and you know lambda hit hit the platform on the other end it's all fine and so the",
    "start": "3640640",
    "end": "3646400"
  },
  {
    "text": "sqs allows allowed us to kind of vary the speed of the flow because in certain certain product feeds like",
    "start": "3646400",
    "end": "3652720"
  },
  {
    "text": "product price that needs to go super fast to the other end whereas if a feed",
    "start": "3652720",
    "end": "3657760"
  },
  {
    "text": "is related to somebody's product feedback okay so that can slow down and let everything else go so with sqs",
    "start": "3657760",
    "end": "3664240"
  },
  {
    "text": "probably if you work with the cs you know that you can kind of vary the delays and visibility timeout and things",
    "start": "3664240",
    "end": "3670240"
  },
  {
    "text": "like that so those aspects allow us so the reason i put out this one is but",
    "start": "3670240",
    "end": "3675280"
  },
  {
    "text": "this is where i start where we started now we have over 18 pipelines in a pure software engineering mentality this is",
    "start": "3675280",
    "end": "3682160"
  },
  {
    "text": "nothing but copy paste of the same pattern over and over again so this is another example of you know how these",
    "start": "3682160",
    "end": "3687760"
  },
  {
    "text": "things kind of you know give you that momentum not for the development team also for",
    "start": "3687760",
    "end": "3693040"
  },
  {
    "text": "the business to gain that velocity to move forward so patterns if you are in aws jeremy daly is a serverless hero has",
    "start": "3693040",
    "end": "3700160"
  },
  {
    "text": "you know written bunch of things and there's a cdk is an infrastructure",
    "start": "3700160",
    "end": "3705280"
  },
  {
    "text": "score kind of area it has bunch of patents as well and",
    "start": "3705280",
    "end": "3711119"
  },
  {
    "text": "and there is a serverless land so you know if you are in the air if you are in aws area they have tons of things",
    "start": "3711119",
    "end": "3718160"
  },
  {
    "text": "there you will also get you know the code samples and all sorts of things so make",
    "start": "3718160",
    "end": "3723359"
  },
  {
    "text": "use of all those things possible i'll leave you with this one i think it's uh one of virgos from amazon a few years",
    "start": "3723359",
    "end": "3729520"
  },
  {
    "text": "ago he said you know he said all the code you're right in future business logic so",
    "start": "3729520",
    "end": "3736240"
  },
  {
    "text": "if you think of the function less and the integration patterns and things that we are kind of moving towards and",
    "start": "3736240",
    "end": "3742559"
  },
  {
    "text": "getting popular maybe one day we will just write the business logic and leave everything else to them you know the",
    "start": "3742559",
    "end": "3748000"
  },
  {
    "text": "platform and everything else to do the magic that's all today thank you so much thank you so much for",
    "start": "3748000",
    "end": "3754240"
  },
  {
    "text": "listening",
    "start": "3754240",
    "end": "3756559"
  },
  {
    "text": "i'll be if you're anyone interested i'll be around today until the evening",
    "start": "3761760",
    "end": "3768400"
  }
]