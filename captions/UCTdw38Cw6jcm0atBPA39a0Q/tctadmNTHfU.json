[
  {
    "start": "0",
    "end": "125000"
  },
  {
    "text": "okay so we'll get started",
    "start": "4279",
    "end": "9040"
  },
  {
    "text": "um so I hope everybody is in the right room um this is a very boring topic as",
    "start": "9320",
    "end": "15200"
  },
  {
    "text": "far as I'm concerned but I've been doing this for a while so it does get boring talking about it but I'm hoping that everybody's here for um a talk about",
    "start": "15200",
    "end": "22320"
  },
  {
    "text": "practical open Telemetry um is this anybody's first introduction to open",
    "start": "22320",
    "end": "27560"
  },
  {
    "text": "Telemetry has anybody not seen or used it oh you're in for a",
    "start": "27560",
    "end": "33840"
  },
  {
    "text": "treat um yeah we've got a few more people coming in so if you can um just move to the sides a little bit and let",
    "start": "33840",
    "end": "40039"
  },
  {
    "text": "people come in there's some space at the back there",
    "start": "40039",
    "end": "47440"
  },
  {
    "text": "awesome thank you so much it's fine thank",
    "start": "57440",
    "end": "65079"
  },
  {
    "text": "you okay so I actually did my first talk post pandemic here um around the same",
    "start": "68479",
    "end": "76520"
  },
  {
    "text": "subject um so if any of you were here um I apologize I was um out of practice I'm",
    "start": "76520",
    "end": "82759"
  },
  {
    "text": "not now so hopefully this will be better so who am I my name is Martin th I'm",
    "start": "82759",
    "end": "88920"
  },
  {
    "text": "first and foremost OB observability evangelist and we'll talk a little bit about what observability is um I'm also",
    "start": "88920",
    "end": "94880"
  },
  {
    "text": "a developer advocate for a company called honeycomb who develop observability products today I'm not",
    "start": "94880",
    "end": "99920"
  },
  {
    "text": "here to talk about honeycomb I'm to talk about observability in general but also about specifically open Telemetry and",
    "start": "99920",
    "end": "107320"
  },
  {
    "text": "how to use it open Telemetry has been around for quite a while however it's now getting to a",
    "start": "107320",
    "end": "114119"
  },
  {
    "text": "point where people don't want talks on how cool it is they want talks on actually how to use it in their",
    "start": "114119",
    "end": "120439"
  },
  {
    "text": "applications what should they be doing what shouldn't they be doing and that's really what this talk is about so without we can't really talk",
    "start": "120439",
    "end": "128759"
  },
  {
    "start": "125000",
    "end": "279000"
  },
  {
    "text": "about um open Elementary Without Really defining why it is that we're doing it what observability actually is so",
    "start": "128759",
    "end": "135080"
  },
  {
    "text": "observability this is a quote from cheres Majors um who's our CTO um who started the movement around",
    "start": "135080",
    "end": "141239"
  },
  {
    "text": "observability um in software around seven years ago um who describes it as",
    "start": "141239",
    "end": "146879"
  },
  {
    "text": "understanding and debugging unknown unknowns and the ability to ask questions that's",
    "start": "146879",
    "end": "152400"
  },
  {
    "text": "really what observability is about it's not about three pillars it's not about logs it's not about metrics it's not",
    "start": "152400",
    "end": "157640"
  },
  {
    "text": "about any of those things specifically it's about asking questions it's about",
    "start": "157640",
    "end": "164000"
  },
  {
    "text": "the ability to ask questions so what sort of questions well",
    "start": "164000",
    "end": "171159"
  },
  {
    "text": "things like what's the impact of my change is the code that I've just wrote",
    "start": "171159",
    "end": "176840"
  },
  {
    "text": "being used is this feature being used has the time of any of my user",
    "start": "176840",
    "end": "183720"
  },
  {
    "text": "actions changed cross region latencies third",
    "start": "183720",
    "end": "190200"
  },
  {
    "text": "parties all of that sort of stuff it's about being able to ask those questions how are these things",
    "start": "190200",
    "end": "196159"
  },
  {
    "text": "doing so why does it matter I mean we've been writing software without this idea for quite a while now I would assume um",
    "start": "196159",
    "end": "203760"
  },
  {
    "text": "I won't reveal how long I've been writing software without this but it's been a while so why does it matter now",
    "start": "203760",
    "end": "210840"
  },
  {
    "text": "um I don't know about you but as an engineer I feel overw works I always have done um and now we're asking",
    "start": "210840",
    "end": "218040"
  },
  {
    "text": "Engineers to ship more often we're asking for daily deployments we're asking for per commit",
    "start": "218040",
    "end": "223400"
  },
  {
    "text": "deployments we're asking for every hour it's no longer in this cycle of doing",
    "start": "223400",
    "end": "228439"
  },
  {
    "text": "six-month deployments you know we do two deployments a year make sure you get your code changes",
    "start": "228439",
    "end": "233480"
  },
  {
    "text": "in we're asking to be done this to be done regularly but while we're doing that we're also being asked to write",
    "start": "233480",
    "end": "239959"
  },
  {
    "text": "better code like not the stuff you were writing before no it needs to be better now and you need to ship it more",
    "start": "239959",
    "end": "246400"
  },
  {
    "text": "often okay great oh but can you also spend less time fixing books as well",
    "start": "246400",
    "end": "251720"
  },
  {
    "text": "like actually writing features so you need to ship it more often make your code better also spend time less fixing",
    "start": "251720",
    "end": "259079"
  },
  {
    "text": "less bugs great okay but can you also make sure we don't have downtime as well",
    "start": "259079",
    "end": "264080"
  },
  {
    "text": "it's like there's all of these things that we've been asked to do and we can't ask engine is to do more things without",
    "start": "264080",
    "end": "272240"
  },
  {
    "text": "giving them better tools without giving them the ability to do these things better faster more",
    "start": "272240",
    "end": "280320"
  },
  {
    "start": "279000",
    "end": "721000"
  },
  {
    "text": "often so that introduces us to open Telemetry what is open Telemetry we've had Telemetry things before we've had",
    "start": "280320",
    "end": "287360"
  },
  {
    "text": "APM tools so application performance monitoring tools the big vendors have been out there doing this sort of thing",
    "start": "287360",
    "end": "293639"
  },
  {
    "text": "for quite a while now so what is open Telemetry in this space now first and",
    "start": "293639",
    "end": "299320"
  },
  {
    "text": "formost for most open Telemetry is a protocol it's not something we",
    "start": "299320",
    "end": "306080"
  },
  {
    "text": "install there are sdks but first and foremost it's a protocol it's how do we get Telemetry",
    "start": "306080",
    "end": "315919"
  },
  {
    "text": "data that we produce in our applications to a vendor backend or an",
    "start": "315919",
    "end": "321319"
  },
  {
    "text": "open source backend or a back end that you deploy that is why open Telemetry is so",
    "start": "321319",
    "end": "330600"
  },
  {
    "text": "so interesting to me because it means that we're no longer beholden to the provider that we chose when we started",
    "start": "330600",
    "end": "337000"
  },
  {
    "text": "doing the software now if you've ever tried to move Provider from an APM tool and",
    "start": "337000",
    "end": "344479"
  },
  {
    "text": "you've got I don't know even just a 100 machines never mind the 1500 machines that some people work with and they've",
    "start": "344479",
    "end": "350560"
  },
  {
    "text": "got an agent from said vendor installed on all 100 machines and then you go",
    "start": "350560",
    "end": "356000"
  },
  {
    "text": "great we'd like to use a different vendor and your infrastructure team go ha oh you were",
    "start": "356000",
    "end": "362199"
  },
  {
    "text": "serious no we're not doing that because reinstalling all of those agents those",
    "start": "362199",
    "end": "368160"
  },
  {
    "text": "proprietary things is what you need to do to move vendors but what if you",
    "start": "368160",
    "end": "374280"
  },
  {
    "text": "didn't what if to be able to move between different vendors it was three",
    "start": "374280",
    "end": "379639"
  },
  {
    "text": "lines of config if all you needed to do was",
    "start": "379639",
    "end": "385120"
  },
  {
    "text": "change a few config lines and your new provider gets all the same data that the previous provider",
    "start": "385120",
    "end": "391599"
  },
  {
    "text": "got that is the promise of open Telemetry and it is delivered this is in",
    "start": "391599",
    "end": "397520"
  },
  {
    "text": "production in lots of companies that we work with now the other thing open Telemetry provides in order to do this",
    "start": "397520",
    "end": "403240"
  },
  {
    "text": "is sdks they provide sdks inside of your solution that produce this Telemetry in",
    "start": "403240",
    "end": "411039"
  },
  {
    "text": "a standardized way so that vendors or open source Solutions can use that in",
    "start": "411039",
    "end": "416639"
  },
  {
    "text": "interesting ways open Telemetry is made up of three",
    "start": "416639",
    "end": "422520"
  },
  {
    "text": "primary signals notice the word signals there not pillars they are signals logs",
    "start": "422520",
    "end": "429240"
  },
  {
    "text": "metrics and traces in the net World traces and metrics are stable",
    "start": "429240",
    "end": "437160"
  },
  {
    "text": "mainly because we have activity and meter inside of the code based from net so yes we can use them logs the protocol",
    "start": "437160",
    "end": "445560"
  },
  {
    "text": "is stable but we shouldn't be using logs anyway we'll come on to why logs are trash um we'll cover them for about 30 seconds",
    "start": "445560",
    "end": "451720"
  },
  {
    "text": "and then move on but the protocol is stable that's the how do we transfer between the two",
    "start": "451720",
    "end": "458160"
  },
  {
    "text": "systems the sdks are not which is why when you're looking at some of these code examples you'll see that we use the",
    "start": "458160",
    "end": "464440"
  },
  {
    "text": "pre-release flag to install some of the pre-release packages that's because yes",
    "start": "464440",
    "end": "469599"
  },
  {
    "text": "they work yes they're in production yes they're running at scale but unfortunately the API might change based",
    "start": "469599",
    "end": "475479"
  },
  {
    "text": "on the open Telemetry specifications",
    "start": "475479",
    "end": "481199"
  },
  {
    "text": "now I'm talking specifically about net by the way so those um stability things there are specific to",
    "start": "481199",
    "end": "487840"
  },
  {
    "text": "net meter um or metrics is not stable in all languages logs is there in only",
    "start": "487840",
    "end": "494759"
  },
  {
    "text": "Python and net they are more coming up but ultimately they're not stable so what's a",
    "start": "494759",
    "end": "501919"
  },
  {
    "text": "trace we're talking about tracing first because that's where I believe",
    "start": "501919",
    "end": "506960"
  },
  {
    "text": "everybody should be moving towards open Telemetry is not just tracing tring but tracing is the primary signal um that",
    "start": "506960",
    "end": "512120"
  },
  {
    "text": "you get value from so Trace is a thing that is being done it's not something we",
    "start": "512120",
    "end": "518919"
  },
  {
    "text": "create it's not something where we go create Trace what we do is we create a",
    "start": "518919",
    "end": "526160"
  },
  {
    "text": "span and a span has a trace ID and that is how we build up a trace because all",
    "start": "526160",
    "end": "533040"
  },
  {
    "text": "the spans with the same Trace ID are a trace together but a trace itself isn't",
    "start": "533040",
    "end": "538800"
  },
  {
    "text": "something that that we create so what is a span then and",
    "start": "538800",
    "end": "544120"
  },
  {
    "text": "talking about spans what exactly is one you can think of it as a structured blog",
    "start": "544120",
    "end": "549320"
  },
  {
    "text": "of data think about Json blob think about any kind of blob of data you can think",
    "start": "549320",
    "end": "554920"
  },
  {
    "text": "about as a structured log if you really want but it's a structured blob of data that has some mandatory properties on it",
    "start": "554920",
    "end": "562160"
  },
  {
    "text": "the first one being a unique ID something that identifies this particular span a span ID it has a",
    "start": "562160",
    "end": "569360"
  },
  {
    "text": "correlation ID correlation IDs I'm assuming most people have heard of they have been around for a while when we",
    "start": "569360",
    "end": "574880"
  },
  {
    "text": "were doing logs as our primary signal um we call that a trace ID but it also has a",
    "start": "574880",
    "end": "582160"
  },
  {
    "text": "duration measured in milliseconds it has a duration it also has a time stamp when",
    "start": "582160",
    "end": "589320"
  },
  {
    "text": "this thing started and it has the most interesting",
    "start": "589320",
    "end": "594480"
  },
  {
    "text": "part a causality ID the thing that was happening at the the time when this thing was created",
    "start": "594480",
    "end": "601440"
  },
  {
    "text": "essentially the parent span the thing that happened before now having these",
    "start": "601440",
    "end": "607200"
  },
  {
    "text": "allows us to be able to do a trace waterfall which is what you see on the right on the right left my right your",
    "start": "607200",
    "end": "614560"
  },
  {
    "text": "left that one and that Trace view is what allows",
    "start": "614560",
    "end": "619800"
  },
  {
    "text": "us to see how a request has transitioned through our system what caused it to happen what",
    "start": "619800",
    "end": "625640"
  },
  {
    "text": "happened before now you may say that we had this before we had logs we had correlation IDs we had time stamps and",
    "start": "625640",
    "end": "632839"
  },
  {
    "text": "it would transition through five different services and I'd see all of those sent into a centralized logging",
    "start": "632839",
    "end": "638160"
  },
  {
    "text": "system to that I say when was the last time you check your time stamps on all of your servers and your time servers",
    "start": "638160",
    "end": "643320"
  },
  {
    "text": "across all your different microservices did you syn them how far out are they quite far",
    "start": "643320",
    "end": "651720"
  },
  {
    "text": "normally what we do with causality ID is essentially stamp that between all of",
    "start": "651720",
    "end": "657600"
  },
  {
    "text": "our services between all of the different process boundaries but what that it's a structured log basically with some",
    "start": "657600",
    "end": "663880"
  },
  {
    "text": "mandatory properties it's basically just a fancy log the stickers for most of these",
    "start": "663880",
    "end": "669639"
  },
  {
    "text": "images by the way come and get them at the end so if I'm telling you that's a",
    "start": "669639",
    "end": "676240"
  },
  {
    "text": "span what is a log then well logs are designed for humans they're not designed",
    "start": "676240",
    "end": "682079"
  },
  {
    "text": "for systems they're not designed for aggregation they're designed for systems we took logs and made them structured",
    "start": "682079",
    "end": "689360"
  },
  {
    "text": "but primarily logs are designed for humans which means they're great for Access logs like your access log in",
    "start": "689360",
    "end": "696920"
  },
  {
    "text": "engine X or is the w3c access logs because they don't have context there's",
    "start": "696920",
    "end": "702639"
  },
  {
    "text": "no causality ID they're good for audit",
    "start": "702639",
    "end": "708519"
  },
  {
    "text": "logs they're also really good for debugging whether your tracing is working or",
    "start": "708800",
    "end": "713959"
  },
  {
    "text": "not I wrote an entire blog post on that there will be some links at the End by the way um for you to pick up and and um",
    "start": "713959",
    "end": "719519"
  },
  {
    "text": "do some follow on reading now ultimately most people are doing logging wrong just ask this",
    "start": "719519",
    "end": "727440"
  },
  {
    "start": "721000",
    "end": "756000"
  },
  {
    "text": "guy I just um Nick is an amazing educator he's got a talk on logging and",
    "start": "727440",
    "end": "733399"
  },
  {
    "text": "performance tomorrow go see it because a lot of the things that he talks about about optimizing performance for logging",
    "start": "733399",
    "end": "739639"
  },
  {
    "text": "also apply to using activity in spans so go and have a look also look at his",
    "start": "739639",
    "end": "745480"
  },
  {
    "text": "YouTube um cool I mean most logs are",
    "start": "745480",
    "end": "750760"
  },
  {
    "text": "fine depending how much money you've got to burn so let's get into some",
    "start": "750760",
    "end": "759040"
  },
  {
    "start": "756000",
    "end": "1150000"
  },
  {
    "text": "code because what we're talking about here is how to practically do things what are the things you should be doing",
    "start": "759040",
    "end": "764680"
  },
  {
    "text": "so first one is logging now you notice here we've got the pre-release",
    "start": "764680",
    "end": "770480"
  },
  {
    "text": "package but it's a simple as adding open Telemetry to your login",
    "start": "771000",
    "end": "776560"
  },
  {
    "text": "Builder and then we tell it where to send that data now here we're using the open",
    "start": "776560",
    "end": "783399"
  },
  {
    "text": "Telemetry line protocol which is OT LP not",
    "start": "783399",
    "end": "789199"
  },
  {
    "text": "oltp because those two mean different things and I always get them mixed up so open Telemetry line protocol is that",
    "start": "789199",
    "end": "795160"
  },
  {
    "text": "protocol I was talking about about how we transfer the the between the two Services metrics similar thing because",
    "start": "795160",
    "end": "803320"
  },
  {
    "text": "metric is stable there is no pre-release flags and the same thing we add open",
    "start": "803320",
    "end": "809000"
  },
  {
    "text": "cemetry as to our service collection we say um with",
    "start": "809000",
    "end": "814959"
  },
  {
    "text": "tracing and then we add the OTL exporter it's getting boring now isn't",
    "start": "814959",
    "end": "821000"
  },
  {
    "text": "it it's the same thing with metrics add",
    "start": "821000",
    "end": "826680"
  },
  {
    "text": "OTP wrong way around you get the idea like I say these this isn't the",
    "start": "827639",
    "end": "833800"
  },
  {
    "text": "interesting part this is the bit that's easy this is how easy it is to add open",
    "start": "833800",
    "end": "840160"
  },
  {
    "text": "Telemetry to your application you're not telling it which vendor you're not telling it where you're going to send it",
    "start": "840160",
    "end": "846480"
  },
  {
    "text": "you're literally just adding it like this I don't know about you from years ago when we used to start a project the",
    "start": "846480",
    "end": "853120"
  },
  {
    "text": "first six months of any project was deciding which logging framework you were going to use and there were battles fought over",
    "start": "853120",
    "end": "859600"
  },
  {
    "text": "lesser things so once we've set up our login there are",
    "start": "859600",
    "end": "867120"
  },
  {
    "text": "a couple of things that are really important to set up now we need to tell open Telemetry what our service is",
    "start": "867120",
    "end": "875000"
  },
  {
    "text": "called and we do that using something called the resource Builder because a span is based on two different types of",
    "start": "875000",
    "end": "882079"
  },
  {
    "text": "attributes resource attributes which are set at the start of a process like startup of a ASP net cor site and",
    "start": "882079",
    "end": "890320"
  },
  {
    "text": "attributes that are applied to each individual's uh to an individual spam so here we're using configure resource I",
    "start": "890320",
    "end": "897839"
  },
  {
    "text": "thing I want to draw you attention tion to here though is it's actually an",
    "start": "897839",
    "end": "902959"
  },
  {
    "text": "extension on ad open Telemetry for tracing a metrics it's not within the width",
    "start": "902959",
    "end": "909279"
  },
  {
    "text": "tracing element it's specifically inside of that which means it applies to tracing it",
    "start": "909279",
    "end": "914839"
  },
  {
    "text": "applies to metrics do you be careful about the attributes that you add",
    "start": "914839",
    "end": "920399"
  },
  {
    "text": "globally because you can add extra attributes like this if you add them at this",
    "start": "920399",
    "end": "926800"
  },
  {
    "text": "level they will be added as labels to every",
    "start": "926800",
    "end": "931920"
  },
  {
    "text": "metric there are problems with metrics and the reason why I don't promote metrics as much as other people is",
    "start": "932160",
    "end": "938920"
  },
  {
    "text": "because dimensionality of metrics is hard when you start throwing lots and lots of different dimensions and lots",
    "start": "938920",
    "end": "945519"
  },
  {
    "text": "and lots of different values in those Dimensions metric systems tend to crawl",
    "start": "945519",
    "end": "951079"
  },
  {
    "text": "into a corner and say please stop whereas traces don't so once we've added our service we",
    "start": "951079",
    "end": "958199"
  },
  {
    "text": "can now add more attributes now these don't get applied when we create a span so from a",
    "start": "958199",
    "end": "964880"
  },
  {
    "text": "performance angle this is the most efficient way to give your traces",
    "start": "964880",
    "end": "971000"
  },
  {
    "text": "context but they're applied to every span within that service once it starts",
    "start": "971000",
    "end": "976720"
  },
  {
    "text": "up so the reason why that's really interesting is because we can do things like adding the region that we deployed",
    "start": "976720",
    "end": "983199"
  },
  {
    "text": "our service to if we're in kubernetes we can add the name we can",
    "start": "983199",
    "end": "989199"
  },
  {
    "text": "add the deployment name the service name we can add which specific version",
    "start": "989199",
    "end": "995240"
  },
  {
    "text": "of the application it is that we've got deployed because if we're deploying these things every day you're going to",
    "start": "995240",
    "end": "1002360"
  },
  {
    "text": "be in a situation where you've got multiple different versions live that's why these things become",
    "start": "1002360",
    "end": "1009800"
  },
  {
    "text": "important okay metrics it is incredibly",
    "start": "1010000",
    "end": "1016920"
  },
  {
    "text": "easy you'll notice is a theme throughout what we do when we talk about this",
    "start": "1016920",
    "end": "1022360"
  },
  {
    "text": "everything is fairly simple and the reason it's fairly simple is because",
    "start": "1022360",
    "end": "1027798"
  },
  {
    "text": "it's not complicated I don't know how else to say",
    "start": "1027799",
    "end": "1033000"
  },
  {
    "text": "this it's a few lines of code but it's code that you control not",
    "start": "1033000",
    "end": "1039199"
  },
  {
    "text": "a vendor it's code that you can decide where to put it's code that you can",
    "start": "1039199",
    "end": "1044839"
  },
  {
    "text": "decide to put context on so when we a meter now we'll talk about how to set up",
    "start": "1044839",
    "end": "1051000"
  },
  {
    "text": "configs in a minute in this particular example I'm using a static class for my diagnostic",
    "start": "1051000",
    "end": "1059160"
  },
  {
    "text": "config and at the top there on that fourth line we've got meter equals new",
    "start": "1059160",
    "end": "1064840"
  },
  {
    "text": "meter with the service name and that's static in this",
    "start": "1064840",
    "end": "1071039"
  },
  {
    "text": "class and then we create all of our different types of metrics for that particular meter things like sales value",
    "start": "1071039",
    "end": "1078559"
  },
  {
    "text": "you markup histograms counters inet 8 we've now got up down counters as well",
    "start": "1078559",
    "end": "1085760"
  },
  {
    "text": "it's actually in doet 7 but Net 7 doesn't really count because it's not LTS is it",
    "start": "1085760",
    "end": "1091640"
  },
  {
    "text": "so and then when we've created them open",
    "start": "1091640",
    "end": "1096799"
  },
  {
    "text": "Telemetry doesn't know about them so you can create them at the top there but until you do this bit at the bottom open",
    "start": "1096799",
    "end": "1103640"
  },
  {
    "text": "Telemetry isn't going to listen to them it's not going to send them anywhere it's l just going to run it um",
    "start": "1103640",
    "end": "1109840"
  },
  {
    "text": "in the background and they'll go into a black hole so when you create some metrics and",
    "start": "1109840",
    "end": "1115000"
  },
  {
    "text": "you don't see them check to make sure you've added the ad meter bit at the bottom",
    "start": "1115000",
    "end": "1121440"
  },
  {
    "text": "there now when we then go to use these metrics because obviously we've just defined different types of metrics at",
    "start": "1121440",
    "end": "1126840"
  },
  {
    "text": "this point when we go to use them it is as simple as referencing that",
    "start": "1126840",
    "end": "1133320"
  },
  {
    "text": "static class referencing the particular type of",
    "start": "1133320",
    "end": "1139400"
  },
  {
    "text": "meter and using record for histograms using ad for counters same for up down",
    "start": "1139400",
    "end": "1145720"
  },
  {
    "text": "counters that's it metric's",
    "start": "1145720",
    "end": "1152919"
  },
  {
    "start": "1150000",
    "end": "1420000"
  },
  {
    "text": "done there isn't that much more to it because all of the interesting things that happen with metrics happen after",
    "start": "1152919",
    "end": "1159640"
  },
  {
    "text": "your code they happen when you put them into a back end to do aggregations they happen in the back end",
    "start": "1159640",
    "end": "1166120"
  },
  {
    "text": "when you start doing reporting on these things it's literally just that in your code",
    "start": "1166120",
    "end": "1171919"
  },
  {
    "text": "choose where you're going to put them choose your metrics sparingly throw labels on your metrics",
    "start": "1171919",
    "end": "1178480"
  },
  {
    "text": "but don't throw too many otherwise your Ops team will cry",
    "start": "1178480",
    "end": "1183559"
  },
  {
    "text": "because Prometheus won't work anymore but you can add things like that",
    "start": "1183559",
    "end": "1190400"
  },
  {
    "text": "okay instrumentation libraries this is where we",
    "start": "1190400",
    "end": "1195720"
  },
  {
    "text": "get a level of automatic instrumentation now this is what's going",
    "start": "1195720",
    "end": "1200960"
  },
  {
    "text": "to get you up to a point that you're used to with an APM tool we got to a",
    "start": "1200960",
    "end": "1206799"
  },
  {
    "text": "point with APM tools where you'd install an agent and it would give you everything it felt like magic we just",
    "start": "1206799",
    "end": "1212960"
  },
  {
    "text": "install the thing and then we've got pretty graphs that we can put up on a dashboard and management think we're doing really cool things we're really",
    "start": "1212960",
    "end": "1219799"
  },
  {
    "text": "not nobody looks at them this is what's going to get you",
    "start": "1219799",
    "end": "1225039"
  },
  {
    "text": "there because what we've talked about is manually creating",
    "start": "1225039",
    "end": "1230159"
  },
  {
    "text": "metrics instrumentation libraries are language and SDK specific so these are",
    "start": "1230799",
    "end": "1237400"
  },
  {
    "text": "specific toet they're specific to the libraries that you have in net so when you've got",
    "start": "1237400",
    "end": "1243320"
  },
  {
    "text": "a library like SQL client or HTTP client or grpc Services you've got aspnet core",
    "start": "1243320",
    "end": "1251919"
  },
  {
    "text": "you've got all of these different things all of them will have an instrumentation library that goes with it that you can",
    "start": "1251919",
    "end": "1258679"
  },
  {
    "text": "now tell open Telemetry to use or not use it's important to to say that this",
    "start": "1258679",
    "end": "1266039"
  },
  {
    "text": "is step one this is your getting started this is out of the out of the gates let's just put a load of automatic stuff",
    "start": "1266039",
    "end": "1273120"
  },
  {
    "text": "on there don't stop",
    "start": "1273120",
    "end": "1277799"
  },
  {
    "text": "here so basic Microsoft stuff ASP net core I would Hazard a guess that 80% 90%",
    "start": "1278520",
    "end": "1285960"
  },
  {
    "text": "of the people in the room are using aspet core you can add the packages you'll notice they're all",
    "start": "1285960",
    "end": "1292799"
  },
  {
    "text": "pre-release do not be scared of that do make friends with your security team so",
    "start": "1292799",
    "end": "1297919"
  },
  {
    "text": "you can explain why you're using pre-release packages the pre-release means that the",
    "start": "1297919",
    "end": "1303679"
  },
  {
    "text": "naming of spans and attributes is not defined and ratified",
    "start": "1303679",
    "end": "1309919"
  },
  {
    "text": "yet that's the only problem it's a problem we've had for about the last two years but nobody will",
    "start": "1309919",
    "end": "1317320"
  },
  {
    "text": "fix it until we've got that ratified those",
    "start": "1317320",
    "end": "1322360"
  },
  {
    "text": "won't be marked as stable it should happen in about November because we've just had all of",
    "start": "1322360",
    "end": "1329279"
  },
  {
    "text": "those schemas come into open Telemetry and now starting to get ratified and hopefully in November that will have all",
    "start": "1329279",
    "end": "1335120"
  },
  {
    "text": "happened and we can all move on with our lives ASP nit core HTTP client SQL",
    "start": "1335120",
    "end": "1341720"
  },
  {
    "text": "client they're all part of the open Cemetary name space you can add them just with ad aspet core instrumentation",
    "start": "1341720",
    "end": "1348320"
  },
  {
    "text": "add SQL client instrumentation add HTTP client instrumentation if you're using Entity framework or postgress again the",
    "start": "1348320",
    "end": "1356120"
  },
  {
    "text": "same thing add npgsql and add Entity framework you'll notice however npgsql",
    "start": "1356120",
    "end": "1362720"
  },
  {
    "text": "do Telemetry is a different namespace and it's not pre-release because they",
    "start": "1362720",
    "end": "1367919"
  },
  {
    "text": "get to choose whether they say it's pre-release or not and they decided not to go",
    "start": "1367919",
    "end": "1375400"
  },
  {
    "text": "figure redis I'm presuming a lot of people people use reddis as well um is slightly different so reddis when we ask",
    "start": "1375400",
    "end": "1382760"
  },
  {
    "text": "for automatic instrumentation or um instrumentation libraries it needs access to something called The Connection multiplexer essentially",
    "start": "1382760",
    "end": "1389440"
  },
  {
    "text": "access to the connection to add some data for that we can use a special",
    "start": "1389440",
    "end": "1394520"
  },
  {
    "text": "extension called configure open Telemetry Trace provider that gets resolved when your",
    "start": "1394520",
    "end": "1400960"
  },
  {
    "text": "application starts not when you register services so it means it can use things",
    "start": "1400960",
    "end": "1406799"
  },
  {
    "text": "from the service provider it can use dependency injection all of this is documented",
    "start": "1406799",
    "end": "1413520"
  },
  {
    "text": "there is a GitHub repo with all of this in you don't need to take pictures it's absolutely fine this is",
    "start": "1413520",
    "end": "1420480"
  },
  {
    "start": "1420000",
    "end": "1633000"
  },
  {
    "text": "mundane this is where it gets interesting this is where we start to",
    "start": "1420480",
    "end": "1426400"
  },
  {
    "text": "think about what is our context what is our context in our",
    "start": "1426400",
    "end": "1431600"
  },
  {
    "text": "application because yes most applications you've got a database you've got a website you've got people",
    "start": "1431600",
    "end": "1437880"
  },
  {
    "text": "hitting it you got some apis maybe it's a bit front end maybe some microservices happening every everybody's the same",
    "start": "1437880",
    "end": "1444559"
  },
  {
    "text": "yeah every single site's the same everybody stores their user ID in the right in the same place in the request yeah everybody has the same account",
    "start": "1444559",
    "end": "1451679"
  },
  {
    "text": "object it's all accounts in the database yeah nobody uses customer nobody uses customer now do they your context is",
    "start": "1451679",
    "end": "1459679"
  },
  {
    "text": "important and that is where we had a failing with apms because they assumed so much manual",
    "start": "1459679",
    "end": "1467120"
  },
  {
    "text": "instrumentation is where we can add our context I need to take a little bit of a",
    "start": "1467120",
    "end": "1472720"
  },
  {
    "text": "diversion to talk about span and activity because in a land Far Far Away",
    "start": "1472720",
    "end": "1479320"
  },
  {
    "text": "known as Seattle Microsoft designed something called",
    "start": "1479320",
    "end": "1485279"
  },
  {
    "text": "activity and it's been in The NET Framework since around Net 2.0 tracing has been in net for many",
    "start": "1485279",
    "end": "1493080"
  },
  {
    "text": "many many years so it's not new when open",
    "start": "1493080",
    "end": "1498159"
  },
  {
    "text": "Telemetry came around there was no reason for open Telemetry to go and reinvent and create",
    "start": "1498159",
    "end": "1505080"
  },
  {
    "text": "a new thing there is such thing as a shim that uses span Tracer span event span links",
    "start": "1505080",
    "end": "1514840"
  },
  {
    "text": "and all of the open Telemetry technology that you can use in net if you're working inet every day ignore it just",
    "start": "1514840",
    "end": "1520559"
  },
  {
    "text": "use activity okay slight run over with what",
    "start": "1520559",
    "end": "1526279"
  },
  {
    "text": "is a span or activity I'm going to use the word activity and span interchangeably because I don't see the",
    "start": "1526279",
    "end": "1532679"
  },
  {
    "text": "difference so please whenever I say those two span does not mean the span object in net which is a completely",
    "start": "1532679",
    "end": "1540640"
  },
  {
    "text": "different thing um so spanner activity is time bound analysis it's the idea and we talked",
    "start": "1540640",
    "end": "1546399"
  },
  {
    "text": "about what a span was it has a duration and it has a start time a time stamp it's about time bound",
    "start": "1546399",
    "end": "1553000"
  },
  {
    "text": "analysis we create an activity we dispose of an activity that's our J",
    "start": "1553000",
    "end": "1559679"
  },
  {
    "text": "ation it's normally scoped to an individual piece of work so everybody's",
    "start": "1559840",
    "end": "1565080"
  },
  {
    "text": "got that little algorithm that they've got in their code it's the crown jewels of their application they spent three",
    "start": "1565080",
    "end": "1571440"
  },
  {
    "text": "years building it it's got 42,000 unit tests around it it never goes wrong so",
    "start": "1571440",
    "end": "1577200"
  },
  {
    "text": "we don't need to look at it do we but actually what happens is the performance of that might change depending on",
    "start": "1577200",
    "end": "1583440"
  },
  {
    "text": "inputs so an activity is how we scope that around that piece of work where we call the algorithm to be able to do",
    "start": "1583440",
    "end": "1590240"
  },
  {
    "text": "stuff so an activity might be a HTTP request that comes in it might be a call to a database it might be a call to a",
    "start": "1590240",
    "end": "1596960"
  },
  {
    "text": "third party those are things you get for free with instrumentation libraries you",
    "start": "1596960",
    "end": "1602039"
  },
  {
    "text": "don't get them for free in your code which is where you've got to add some stuff spans and activities are also",
    "start": "1602039",
    "end": "1608760"
  },
  {
    "text": "about causality so this thing happened before it's about correlation we talked",
    "start": "1608760",
    "end": "1615960"
  },
  {
    "text": "about Trace IDs correlation IDs and they're really",
    "start": "1615960",
    "end": "1621840"
  },
  {
    "text": "useful for understanding complex code structures and how something takes a",
    "start": "1621840",
    "end": "1627440"
  },
  {
    "text": "path through a platform I mean really they're just a log but with so much",
    "start": "1627440",
    "end": "1634600"
  },
  {
    "start": "1633000",
    "end": "1900000"
  },
  {
    "text": "more so how do we create them the first thing we need to create an activity is an activity Source Now activity",
    "start": "1634600",
    "end": "1642440"
  },
  {
    "text": "sources are actually Shield um they're actually a shell they they don't really",
    "start": "1642440",
    "end": "1648000"
  },
  {
    "text": "do anything they store a string value basically you can create 20 different",
    "start": "1648000",
    "end": "1655320"
  },
  {
    "text": "activity sources with the same name it really doesn't matter don't do that create it once with a name it's",
    "start": "1655320",
    "end": "1661440"
  },
  {
    "text": "irrelevant though the name is what's important once we've got our activity",
    "start": "1661440",
    "end": "1666960"
  },
  {
    "text": "Source we can then create activities using a function on the source called",
    "start": "1666960",
    "end": "1672240"
  },
  {
    "text": "start activity with a name that's as simple as it is to create a spam",
    "start": "1672240",
    "end": "1678960"
  },
  {
    "text": "diagnostic config do source. activity now in this scenario I'm using a static",
    "start": "1678960",
    "end": "1686039"
  },
  {
    "text": "class to store my activity Source the other way of doing this is",
    "start": "1686039",
    "end": "1691399"
  },
  {
    "text": "using dependency injection if you really hate yourself where you can inject a",
    "start": "1691399",
    "end": "1698360"
  },
  {
    "text": "diagnostic config my main piece of advice is if you are doing dependency injection like this don't try and inject",
    "start": "1698360",
    "end": "1705600"
  },
  {
    "text": "activity source inject a custom class that contains an",
    "start": "1705600",
    "end": "1711000"
  },
  {
    "text": "activity Source do it as a Singleton and then use",
    "start": "1711000",
    "end": "1718399"
  },
  {
    "text": "that now there is a question I get asked quite a lot how do I test this I have an",
    "start": "1718399",
    "end": "1725399"
  },
  {
    "text": "entire talk on that on YouTube go and look at it it isn't easy but it is doable and it",
    "start": "1725399",
    "end": "1732440"
  },
  {
    "text": "is really really valuable when you do it because that isn't an interface that you you can Mock and I'm using that in",
    "start": "1732440",
    "end": "1739840"
  },
  {
    "text": "theoc sense not theq sense because don't use",
    "start": "1739840",
    "end": "1744919"
  },
  {
    "text": "that you can tell who in the room is up to date with what's going on in the net",
    "start": "1745279",
    "end": "1750760"
  },
  {
    "text": "Community um okay so manually creating spans we saw what we were doing to manually create a span there now here's",
    "start": "1750760",
    "end": "1757640"
  },
  {
    "text": "an example bit of code um I firmly believe this is how some um e-commerce",
    "start": "1757640",
    "end": "1762799"
  },
  {
    "text": "sites work out how to charge people just do a random number on top of the cat",
    "start": "1762799",
    "end": "1769120"
  },
  {
    "text": "number so the idea is here we've got a little bit of code there that's going to",
    "start": "1769120",
    "end": "1774840"
  },
  {
    "text": "change its Performance Based on the category ID that comes in because the higher the category number the more",
    "start": "1774840",
    "end": "1781159"
  },
  {
    "text": "random numbers we're going to add so how would we do that so what we",
    "start": "1781159",
    "end": "1787960"
  },
  {
    "text": "do there is we create an activity that wraps just our for",
    "start": "1787960",
    "end": "1793679"
  },
  {
    "text": "Loop we give it a name that means something the name that we give it is what we call",
    "start": "1793679",
    "end": "1799640"
  },
  {
    "text": "low cardinality essentially it's a static string it doesn't have parameters in it",
    "start": "1799640",
    "end": "1806760"
  },
  {
    "text": "this isn't a message it's not a log line it's low cardal it shouldn't change",
    "start": "1806760",
    "end": "1812960"
  },
  {
    "text": "the things that do change are the tags the context so when we've put this in",
    "start": "1812960",
    "end": "1819440"
  },
  {
    "text": "we've created an activity what we've then done is we've",
    "start": "1819440",
    "end": "1824480"
  },
  {
    "text": "added two tags the first one being the cat ID that came in the second one being the product price now notice the naming",
    "start": "1824480",
    "end": "1832440"
  },
  {
    "text": "Convention of the tags we Nam space the names of our tags",
    "start": "1832440",
    "end": "1837679"
  },
  {
    "text": "using dots that allows us in uis on the back",
    "start": "1837679",
    "end": "1842840"
  },
  {
    "text": "end depending which vendors you're using to group these together under the common things we then do all of our stuff we",
    "start": "1842840",
    "end": "1851440"
  },
  {
    "text": "then add a tag at the end which is our new price and then return out of the method",
    "start": "1851440",
    "end": "1858600"
  },
  {
    "text": "now because we're using the new using syntax in C what that's going to do is it's going",
    "start": "1858600",
    "end": "1865240"
  },
  {
    "text": "to dispose of the activity at the end of the method that's when our activity is going",
    "start": "1865240",
    "end": "1870360"
  },
  {
    "text": "to end again it's not complicated we're not",
    "start": "1870360",
    "end": "1875399"
  },
  {
    "text": "doing anything particularly Advanced with this this isn't Advanced C Concepts",
    "start": "1875399",
    "end": "1881000"
  },
  {
    "text": "we're using libraries that are built to be easy to use now what I would do though",
    "start": "1881000",
    "end": "1888480"
  },
  {
    "text": "that's that's great code I would I would be happy to see that in people's platforms they're adding context to",
    "start": "1888480",
    "end": "1893760"
  },
  {
    "text": "their traces that's great but we can take this a little bit further now we had our diagnostic config class the next",
    "start": "1893760",
    "end": "1901960"
  },
  {
    "text": "class I would advise people to make is a diagnostic names class which contains",
    "start": "1901960",
    "end": "1909639"
  },
  {
    "text": "constants what that means is that everybody uses the same names for their tags now it actually suggest that people",
    "start": "1909639",
    "end": "1916639"
  },
  {
    "text": "go a step step further than this when you're working in microservice platforms and put this in a shared new",
    "start": "1916639",
    "end": "1923639"
  },
  {
    "text": "get package that everybody uses so everybody uses the same names which means you've",
    "start": "1923639",
    "end": "1930679"
  },
  {
    "text": "got shared language you've got shared context so when you're looking at your observability in the",
    "start": "1930679",
    "end": "1936760"
  },
  {
    "text": "background you know what you're looking for throw throw descriptions on these tell people what they should be putting",
    "start": "1936760",
    "end": "1942880"
  },
  {
    "text": "in them what they shouldn't be putting in them help your developers out",
    "start": "1942880",
    "end": "1949080"
  },
  {
    "text": "and that makes it look like something like this I don't know about you I hate magic strings magic strings in net make",
    "start": "1950600",
    "end": "1958840"
  },
  {
    "text": "code look horrible they make it look unreadable it also means you can't",
    "start": "1958840",
    "end": "1964519"
  },
  {
    "text": "search through your codebase for implementations of a thing help your IDE out ideas have",
    "start": "1964519",
    "end": "1972039"
  },
  {
    "text": "feelings too okay now the other thing I see quite",
    "start": "1972039",
    "end": "1977639"
  },
  {
    "text": "a lot is people wrapping the activity class they'll create the my activity",
    "start": "1977639",
    "end": "1984360"
  },
  {
    "text": "class because it creates it it creates an activity with very special parameters that are unique to",
    "start": "1984360",
    "end": "1991399"
  },
  {
    "text": "us the problem with that is you're abstracting people away from what net brings with",
    "start": "1991399",
    "end": "1997279"
  },
  {
    "text": "activity it means that when you bring somebody onto your team you got to explain what all the extens or the new",
    "start": "1997279",
    "end": "2002639"
  },
  {
    "text": "classes are activity is pretty common people can use everywhere so just use extension",
    "start": "2002639",
    "end": "2010240"
  },
  {
    "text": "methods instead so everything is based on activity provide context so what we've",
    "start": "2010240",
    "end": "2016200"
  },
  {
    "text": "got here is an extension method that will start an activity with some TX and it's just appr proxy into source.",
    "start": "2016200",
    "end": "2024480"
  },
  {
    "text": "activity it's not a particularly complicated one you can go a level further with this on activity so we use",
    "start": "2024480",
    "end": "2031200"
  },
  {
    "text": "the product example and I don't actually have a slide for this but we used the product example before one of the things I'd suggest",
    "start": "2031200",
    "end": "2038399"
  },
  {
    "text": "that people do is actually have an activity extension that says set product",
    "start": "2038399",
    "end": "2043559"
  },
  {
    "text": "information which takes a product price which takes this information and then",
    "start": "2043559",
    "end": "2049440"
  },
  {
    "text": "makes sure that all of the spans have that information on",
    "start": "2049440",
    "end": "2053638"
  },
  {
    "start": "2054000",
    "end": "2197000"
  },
  {
    "text": "them okay activity versus activity",
    "start": "2054879",
    "end": "2060040"
  },
  {
    "text": "current so we've used this code where we do creating an activity",
    "start": "2060040",
    "end": "2067118"
  },
  {
    "text": "and then we start the activity now what that does is it creates an activity it starts it but it",
    "start": "2067119",
    "end": "2075079"
  },
  {
    "text": "also makes activity. current which is a special property of activity set to that",
    "start": "2075079",
    "end": "2081599"
  },
  {
    "text": "activity which means anywhere in your code base you don't have to pass activity",
    "start": "2081599",
    "end": "2088240"
  },
  {
    "text": "around you can just access whatever the current activity is that's running and add stuff to it just like",
    "start": "2088240",
    "end": "2095480"
  },
  {
    "text": "we've got there now you do need to be careful because that code example at the",
    "start": "2095480",
    "end": "2103200"
  },
  {
    "text": "bottom is actually the same as the one at the top unless another activity is created",
    "start": "2103200",
    "end": "2109560"
  },
  {
    "text": "in the middle so in that little space in between the start activ well it actually",
    "start": "2109560",
    "end": "2115640"
  },
  {
    "text": "says create activity that's a bug if that said start",
    "start": "2115640",
    "end": "2121839"
  },
  {
    "text": "activity that bit at the bottom wouldn't actually work it would add it to a new",
    "start": "2121839",
    "end": "2127560"
  },
  {
    "text": "activity in the middle so in an example where in the middle you're calling out to five",
    "start": "2127560",
    "end": "2133599"
  },
  {
    "text": "different methods which all create their own activities that doesn't mean that you're",
    "start": "2133599",
    "end": "2140720"
  },
  {
    "text": "going to use the same activity when you get back do be aware that if you want it to",
    "start": "2140720",
    "end": "2146680"
  },
  {
    "text": "be added to the activity you've just created use the activity however if you don't and you",
    "start": "2146680",
    "end": "2153280"
  },
  {
    "text": "don't care like for instance you're in a controller method",
    "start": "2153280",
    "end": "2158599"
  },
  {
    "text": "if you're in a controller method like that you don't have access to the",
    "start": "2158599",
    "end": "2164720"
  },
  {
    "text": "activity what you've got is activity. current and you can say just set a tag",
    "start": "2164760",
    "end": "2171400"
  },
  {
    "text": "don't care which activity it's on just set a",
    "start": "2171400",
    "end": "2176280"
  },
  {
    "text": "tag so just know the difference between using the activity you've created and using activity.",
    "start": "2177200",
    "end": "2183800"
  },
  {
    "text": "current it's up to you I can't tell you which one's the best want to use performance- wise they're exactly the",
    "start": "2183800",
    "end": "2189520"
  },
  {
    "text": "same it's entirely up to you which one you want to use but it does work over ring context",
    "start": "2189520",
    "end": "2195760"
  },
  {
    "text": "it works through all of those things okay span event now we're getting into the really",
    "start": "2195760",
    "end": "2202319"
  },
  {
    "start": "2197000",
    "end": "2343000"
  },
  {
    "text": "complicated stuff you thought it was easy at the start you like oh I'll just walk out I know all",
    "start": "2202319",
    "end": "2207760"
  },
  {
    "text": "this so span act span event or an activity event it's a point in time",
    "start": "2207760",
    "end": "2215240"
  },
  {
    "text": "action something that that happen during your span execution or your activity",
    "start": "2215240",
    "end": "2221599"
  },
  {
    "text": "execution it has its own context so it has its own",
    "start": "2222839",
    "end": "2229200"
  },
  {
    "text": "tags very useful for say an exception that happened in your code during the",
    "start": "2229760",
    "end": "2236599"
  },
  {
    "text": "execution of your spam But ultimately gets then attached to your",
    "start": "2236599",
    "end": "2243160"
  },
  {
    "text": "spam and we'll come on to why keeping all of these things to together is",
    "start": "2243160",
    "end": "2248560"
  },
  {
    "text": "really useful at the end when we talk about sampling ultimately a span event is",
    "start": "2248560",
    "end": "2253880"
  },
  {
    "text": "really just a structured log but it's a structured log that's part of your",
    "start": "2253880",
    "end": "2259839"
  },
  {
    "text": "spam so a span event has its span ID that it's part of it also has the trace",
    "start": "2262280",
    "end": "2267560"
  },
  {
    "text": "ID it also has its own unique ID a span event ID because you can have more than one event on a span Tim stamp and just a",
    "start": "2267560",
    "end": "2274720"
  },
  {
    "text": "list of a bucket of attributes so one of the other ways to use it would",
    "start": "2274720",
    "end": "2281800"
  },
  {
    "text": "be things like validation events so if you don't want to add all of these extra bits of information to",
    "start": "2281800",
    "end": "2287880"
  },
  {
    "text": "your current span you can add an activity um event to",
    "start": "2287880",
    "end": "2293359"
  },
  {
    "text": "your current span we're using activity. current here because we haven't passed that activity",
    "start": "2293359",
    "end": "2299640"
  },
  {
    "text": "down so you can see it's pretty much the same as we've been doing before other than the fact that we're adding tags",
    "start": "2301240",
    "end": "2306960"
  },
  {
    "text": "when we create it now rather than adding tags as we go",
    "start": "2306960",
    "end": "2312000"
  },
  {
    "text": "along it's also good for recording exceptions so if an exception happens",
    "start": "2312240",
    "end": "2317440"
  },
  {
    "text": "there is an extension method in open Telemetry that adds to activity and",
    "start": "2317440",
    "end": "2323040"
  },
  {
    "text": "allows you to do record exception pass it the exception information it'll add an exception message it'll add the",
    "start": "2323040",
    "end": "2328880"
  },
  {
    "text": "exception type and decompose some of those stuff pretty much that's the extension method stuff I was talking",
    "start": "2328880",
    "end": "2334119"
  },
  {
    "text": "about when I was saying product because now everybody will use record exception therefore in your back end everybody's",
    "start": "2334119",
    "end": "2340119"
  },
  {
    "text": "going to use the same names span link I'm getting really into",
    "start": "2340119",
    "end": "2350079"
  },
  {
    "start": "2343000",
    "end": "2537000"
  },
  {
    "text": "it everything that we've talked about so far is based on",
    "start": "2350079",
    "end": "2356760"
  },
  {
    "text": "parentage when you create a new P span it's parent span I ID was the span that",
    "start": "2356760",
    "end": "2362960"
  },
  {
    "text": "was active when I did it so sometimes that isn't the right way",
    "start": "2362960",
    "end": "2368560"
  },
  {
    "text": "to model your observability before I came into um",
    "start": "2368560",
    "end": "2374760"
  },
  {
    "text": "doing this sort of thing for honey I worked for a bank we had a event driven",
    "start": "2374760",
    "end": "2383040"
  },
  {
    "text": "platform where an interest would be acred at midnight every day for every",
    "start": "2383040",
    "end": "2388839"
  },
  {
    "text": "transaction that was created which is fine we get a message",
    "start": "2388839",
    "end": "2395400"
  },
  {
    "text": "through um we get a transaction created goes on",
    "start": "2395400",
    "end": "2401079"
  },
  {
    "text": "service bus a lot of systems come in do some stuff to it great that happens",
    "start": "2401079",
    "end": "2406680"
  },
  {
    "text": "within five minutes but then almost 24 hours later something else",
    "start": "2406680",
    "end": "2411960"
  },
  {
    "text": "happens now it might be that that parentage isn't the right thing and that's where span Links come in Span",
    "start": "2411960",
    "end": "2418119"
  },
  {
    "text": "links allow us to say that our new Trace our new Span in our new Trace relates to",
    "start": "2418119",
    "end": "2424160"
  },
  {
    "text": "another Span in another Trace",
    "start": "2424160",
    "end": "2428359"
  },
  {
    "text": "so we're not saying that this thing is a dependency we're saying that it's linked it might be a",
    "start": "2430240",
    "end": "2437800"
  },
  {
    "text": "dependency so we use Trace context or span context to create these",
    "start": "2439920",
    "end": "2445040"
  },
  {
    "text": "things but it doesn't exist inside the same trace this is how we get two traces",
    "start": "2445040",
    "end": "2451839"
  },
  {
    "text": "that we can move between the two I will caution you on span links and span events because not all backend vendors",
    "start": "2451839",
    "end": "2458560"
  },
  {
    "text": "support it the most notable example for this conference is that a your monitor",
    "start": "2458560",
    "end": "2464880"
  },
  {
    "text": "doesn't support it log analytics doesn't support",
    "start": "2464880",
    "end": "2469520"
  },
  {
    "text": "it so it's basically an alternative to our parent child parentage stuff that we",
    "start": "2471440",
    "end": "2476520"
  },
  {
    "text": "were talking about now we create span um span links and this example here is where you might want to do",
    "start": "2476520",
    "end": "2484040"
  },
  {
    "text": "this now somebody sends me a um an order and I have to trigger an",
    "start": "2484040",
    "end": "2490599"
  },
  {
    "text": "email and then I run something asynchronously in the background maybe I want the sending of",
    "start": "2490599",
    "end": "2497040"
  },
  {
    "text": "the email to be related to the checkout but maybe I",
    "start": "2497040",
    "end": "2502319"
  },
  {
    "text": "don't I don't know your context no vendor knows your context you are in",
    "start": "2502319",
    "end": "2509960"
  },
  {
    "text": "control of your observability journey beyond your code when you start using",
    "start": "2509960",
    "end": "2515280"
  },
  {
    "text": "open telemetry there are opinionated ways that some of this work so with the new Azure service",
    "start": "2515280",
    "end": "2521319"
  },
  {
    "text": "bus libraries as an example if you able enable the experimental",
    "start": "2521319",
    "end": "2526440"
  },
  {
    "text": "Flags a lot of these things work for messaging and will default to",
    "start": "2526440",
    "end": "2532920"
  },
  {
    "text": "parentage but there is an option to move it to a span link if you want",
    "start": "2532920",
    "end": "2538200"
  },
  {
    "start": "2537000",
    "end": "2663000"
  },
  {
    "text": "to okay processors 18 minutes right need",
    "start": "2538359",
    "end": "2544760"
  },
  {
    "text": "to for people watching this on YouTube this is where you go at half speed the rest of you can do that in",
    "start": "2544760",
    "end": "2550800"
  },
  {
    "text": "your head that'd be great okay processes so processes are part of our open Telemetry pipeline",
    "start": "2550800",
    "end": "2558000"
  },
  {
    "text": "inside of our application which allow us to do some interesting things with spans when they're created and when they're",
    "start": "2558000",
    "end": "2566000"
  },
  {
    "text": "disposed and it gives us basically a hook so that on start we can do",
    "start": "2566000",
    "end": "2571359"
  },
  {
    "text": "something on end we can do something so we can do things like adding additional context",
    "start": "2571359",
    "end": "2577119"
  },
  {
    "text": "it's realistically just a middleware like you will have used for an app builder to add use and then pass things",
    "start": "2577119",
    "end": "2584359"
  },
  {
    "text": "through your context however beware there is a performance impact because it",
    "start": "2584359",
    "end": "2590200"
  },
  {
    "text": "runs on start it runs synchronous if you add a thread do sleep",
    "start": "2590200",
    "end": "2596240"
  },
  {
    "text": "into a processor like that on the on everybody who creates an activity is",
    "start": "2596240",
    "end": "2602960"
  },
  {
    "text": "going to have that sleep before they code is executed so",
    "start": "2602960",
    "end": "2608079"
  },
  {
    "text": "you need to be really careful about what you put in processes that's as simple as they are",
    "start": "2608079",
    "end": "2614839"
  },
  {
    "text": "you derive them from Bas processor and you get an Onan on end that you can",
    "start": "2614839",
    "end": "2621440"
  },
  {
    "text": "override and you can do some interesting things like I would like the tenant ID",
    "start": "2621440",
    "end": "2626720"
  },
  {
    "text": "from my HTTP request to be on every single span that's created so I can add a processor that on",
    "start": "2626720",
    "end": "2634960"
  },
  {
    "text": "start goes to the headers grabs out X tenant ID and adds that as a tag to the",
    "start": "2634960",
    "end": "2644040"
  },
  {
    "text": "activity and then I can add that using that configure open Telemetry Tracer provider same method that we were",
    "start": "2644359",
    "end": "2650760"
  },
  {
    "text": "talking about for reddis before because it can use dependency",
    "start": "2650760",
    "end": "2657319"
  },
  {
    "text": "injection so we can pass it in the IH HTTP",
    "start": "2657319",
    "end": "2663040"
  },
  {
    "start": "2663000",
    "end": "2899000"
  },
  {
    "text": "context now baggage if anybody has followed me on Twitter you'll know that this is my favorite thing to talk about",
    "start": "2663359",
    "end": "2669559"
  },
  {
    "text": "it's commonly referred to well it's referred to by me as the foot gun you never",
    "start": "2669559",
    "end": "2675880"
  },
  {
    "text": "wanted so baggage is the idea that you can pass over context between your two",
    "start": "2675880",
    "end": "2682680"
  },
  {
    "text": "services to influence the tracing on descendant",
    "start": "2682680",
    "end": "2688400"
  },
  {
    "text": "Services now the key there is influence it's not a passing over an",
    "start": "2688559",
    "end": "2694880"
  },
  {
    "text": "attribute that will then be added to every single trace every single span that then comes out the back",
    "start": "2694880",
    "end": "2702240"
  },
  {
    "text": "end it's about being able to say in the back end",
    "start": "2703440",
    "end": "2709720"
  },
  {
    "text": "something happened in the front end that's going to say you need to add extra Telemetry to the back",
    "start": "2709720",
    "end": "2717559"
  },
  {
    "text": "end now there are a lot of people and a lot of disos that add what's called a baggage spam processor which will take",
    "start": "2717559",
    "end": "2724640"
  },
  {
    "text": "everything from baggage and add it to your spans honeycom is one of them I'm",
    "start": "2724640",
    "end": "2732720"
  },
  {
    "text": "sorry um but I don't recommend it all of these stuff that we've talked",
    "start": "2732720",
    "end": "2738160"
  },
  {
    "text": "about all the trace context all of the baggage stuff is not open Telemetry it",
    "start": "2738160",
    "end": "2743599"
  },
  {
    "text": "comes from w3c and it comes from a standard called Trace",
    "start": "2743599",
    "end": "2748640"
  },
  {
    "text": "context so be aware that this is dangerous why is it dangerous well if I set for instance",
    "start": "2748640",
    "end": "2755240"
  },
  {
    "text": "something like this this if I set baggage. Curren do set",
    "start": "2755240",
    "end": "2760319"
  },
  {
    "text": "baggage and I set the users's account name on there and then I make a call out",
    "start": "2760319",
    "end": "2765640"
  },
  {
    "text": "to my inventory API great the account names come through the problem is if that is HTTP",
    "start": "2765640",
    "end": "2773280"
  },
  {
    "text": "client there is actually HTTP colev",
    "start": "2773280",
    "end": "2780119"
  },
  {
    "text": "corp.com they're going to get all the account names because open Telemetry doesn't",
    "start": "2780119",
    "end": "2785480"
  },
  {
    "text": "know the difference between one of your internal services and your external third",
    "start": "2785480",
    "end": "2792000"
  },
  {
    "text": "parties we can do that we can override propagation unfortunately that's an",
    "start": "2792000",
    "end": "2797240"
  },
  {
    "text": "entire talk in its own right um but I do have blog posts on exactly how to do",
    "start": "2797240",
    "end": "2803480"
  },
  {
    "text": "that now once we've set something in baggage we can then in our inventory",
    "start": "2803480",
    "end": "2810040"
  },
  {
    "text": "service we can go and get the account name out by the way everybody should have this code in their platform",
    "start": "2810040",
    "end": "2817800"
  },
  {
    "text": "we can use that baggage data and say well if the account name is martin.net",
    "start": "2818640",
    "end": "2824200"
  },
  {
    "text": "then I'm going to set a value that says this is a VIP you don't have to put that in if you",
    "start": "2824200",
    "end": "2831160"
  },
  {
    "text": "don't want suppose but you get the idea that what I'm not doing is I'm not adding the account name as an attribute",
    "start": "2831160",
    "end": "2837760"
  },
  {
    "text": "in the back end I'm using that to influence the Telemetry that I build that is why baggage was created that's",
    "start": "2837760",
    "end": "2843839"
  },
  {
    "text": "the reason why baggage exists however a lot of people do this and they",
    "start": "2843839",
    "end": "2849040"
  },
  {
    "text": "write a span processor that we talked about before so that on end of the span it goes to the current baggage values",
    "start": "2849040",
    "end": "2855800"
  },
  {
    "text": "just iterates over them all and adds them as tags which I suppose is a way to do",
    "start": "2855800",
    "end": "2862040"
  },
  {
    "text": "it um now if you are going to do something like this what I would",
    "start": "2862040",
    "end": "2867200"
  },
  {
    "text": "suggest is at least add a filter and use a prefix on these baggage",
    "start": "2867200",
    "end": "2874720"
  },
  {
    "text": "items because that baggage could be coming in from a third party to you and if you",
    "start": "2874720",
    "end": "2882800"
  },
  {
    "text": "blindly accept all of that data and somebody sent you over a card number a",
    "start": "2882800",
    "end": "2887839"
  },
  {
    "text": "social security number you've just added that to your back end into all of your",
    "start": "2887839",
    "end": "2895520"
  },
  {
    "text": "observability so think about what you're adding custom",
    "start": "2895640",
    "end": "2902559"
  },
  {
    "start": "2899000",
    "end": "3061000"
  },
  {
    "text": "propagation I'm going to talk a little bit about custom propagation in terms",
    "start": "2902559",
    "end": "2907920"
  },
  {
    "text": "of messaging so propagation itself is based",
    "start": "2908079",
    "end": "2914760"
  },
  {
    "text": "on the w3c context w3c is a standard outside of open",
    "start": "2914760",
    "end": "2921520"
  },
  {
    "text": "Telemetry it is currently as a recommendation not a standard I think it takes seven years to make it through it",
    "start": "2921599",
    "end": "2929480"
  },
  {
    "text": "makes some agile projects look you know pretty fast really don't",
    "start": "2929480",
    "end": "2934520"
  },
  {
    "text": "they but it's a an effort for us to be able to have standards between all the different languages with open Telemetry",
    "start": "2934599",
    "end": "2942119"
  },
  {
    "text": "propagation is automatic you don't need to do anything if you add ASP net core",
    "start": "2942119",
    "end": "2947680"
  },
  {
    "text": "and HTTP client the auto instrumentations that we the manual instrumentation libraries that we talked about at the start you will get this for",
    "start": "2947680",
    "end": "2954040"
  },
  {
    "text": "free if you are using HTTP if you've got an aspet core website",
    "start": "2954040",
    "end": "2960079"
  },
  {
    "text": "that calls out using htcp client to another website all of this you get for free",
    "start": "2960079",
    "end": "2966480"
  },
  {
    "text": "however we can use propagation in non-http contexts and if we use the standards it",
    "start": "2966480",
    "end": "2973839"
  },
  {
    "text": "will also propagate baggage so in Azure service bus this is",
    "start": "2973839",
    "end": "2980400"
  },
  {
    "text": "what you can do now without using the experimental stuff within the Azure service bu",
    "start": "2980400",
    "end": "2987000"
  },
  {
    "text": "sdks so when we create a message in Azure service bus we new up an object called service bus message which has",
    "start": "2987079",
    "end": "2993920"
  },
  {
    "text": "headers or properties it's called application properties and from there we can inject",
    "start": "2993920",
    "end": "3001160"
  },
  {
    "text": "into our application properties our Trace context so that message gets our Trace",
    "start": "3001160",
    "end": "3008200"
  },
  {
    "text": "context and we do that by passing in the current context passing in any",
    "start": "3008200",
    "end": "3014760"
  },
  {
    "text": "baggage giving it the message that we want it to inject to and then passing a delegate over that",
    "start": "3014760",
    "end": "3022319"
  },
  {
    "text": "tells it how to set properties on them application",
    "start": "3022319",
    "end": "3027920"
  },
  {
    "text": "properties and then we do the inverse on the opposite side so when we get a message we can extract the properties",
    "start": "3028119",
    "end": "3035079"
  },
  {
    "text": "from those um application properties and we can use those to create our own",
    "start": "3035079",
    "end": "3040280"
  },
  {
    "text": "activity using that context as its parent again repos are all",
    "start": "3040280",
    "end": "3047480"
  },
  {
    "text": "online the main thing here is knowing that you can do it so that you know what questions to ask to go and find the data",
    "start": "3047480",
    "end": "3054880"
  },
  {
    "text": "there isn't an exam at the end you're not going to be quizzed on what inject and extract",
    "start": "3054880",
    "end": "3060440"
  },
  {
    "text": "is okay got just enough time to do something called sampling so I hope everybody understands quantum",
    "start": "3060440",
    "end": "3068040"
  },
  {
    "start": "3061000",
    "end": "3338000"
  },
  {
    "text": "physics because that's where we start sampling is very math heavy um so",
    "start": "3068040",
    "end": "3073720"
  },
  {
    "text": "I'm not going to go through that part um I totally understand what it's all",
    "start": "3073720",
    "end": "3079359"
  },
  {
    "text": "about but we won't go through that two types of sampling we've got head sampling and ta",
    "start": "3079799",
    "end": "3086160"
  },
  {
    "text": "sampling head sampling happens at your application Level tail sampling happens",
    "start": "3086160",
    "end": "3091200"
  },
  {
    "text": "inside of a centralized thing that we like to call The Collector and it's a way for us to",
    "start": "3091200",
    "end": "3097720"
  },
  {
    "text": "retain Trace context without um as much cost so it helps us",
    "start": "3097720",
    "end": "3105079"
  },
  {
    "text": "reduce our storage and our ingest while retaining all of that context that we that rich context that",
    "start": "3105079",
    "end": "3111799"
  },
  {
    "text": "you get from them when we do head sampling it looks something like this when the",
    "start": "3111799",
    "end": "3118520"
  },
  {
    "text": "request starts we make a decision are we going to sample this data I.E keep it or",
    "start": "3118520",
    "end": "3126119"
  },
  {
    "text": "are we going to discard this particular context now you can imagine at that",
    "start": "3126119",
    "end": "3132839"
  },
  {
    "text": "point we don't know whether this is going to error we don't know whether it's going to call 10 Services we don't know whether it's going to be slow so we",
    "start": "3132839",
    "end": "3139799"
  },
  {
    "text": "have very little information which means it's a very coarse tool to able to make decisions on",
    "start": "3139799",
    "end": "3147319"
  },
  {
    "text": "you can make decisions on say maybe I want to sample a small amount of my",
    "start": "3147319",
    "end": "3153319"
  },
  {
    "text": "health checks because they're not really important to me I don't want to litter up my tracing system with health checks",
    "start": "3153319",
    "end": "3160359"
  },
  {
    "text": "so maybe do one in a thousand just end over a one in a thousand but tell the back end that",
    "start": "3160359",
    "end": "3167880"
  },
  {
    "text": "there was a thousand of them so for every one you send through say there was a thousand which allows your back end to",
    "start": "3167880",
    "end": "3173680"
  },
  {
    "text": "be able to extrapolate what what the actual value was importantly it's before activities",
    "start": "3173680",
    "end": "3181079"
  },
  {
    "text": "are created that we make these decisions it's really efficient because it removes any performance overhead of",
    "start": "3181079",
    "end": "3188040"
  },
  {
    "text": "us actually doing any logging or any um tracing in the back end but the amount of information that",
    "start": "3188040",
    "end": "3196040"
  },
  {
    "text": "you can use to make a decision is very very limited by contrast tail sampling",
    "start": "3196040",
    "end": "3202119"
  },
  {
    "text": "happens after all the spans are finished for a particular Trace which means we've got tons of",
    "start": "3202119",
    "end": "3209079"
  },
  {
    "text": "information to make a decision on because it runs on a delay after that",
    "start": "3209079",
    "end": "3215000"
  },
  {
    "text": "first span has been received in our collector it has access to all the span",
    "start": "3215000",
    "end": "3222000"
  },
  {
    "text": "data so it's got access to how many errors happened was there a retry did it",
    "start": "3222000",
    "end": "3227119"
  },
  {
    "text": "take 5 Seconds did it take a minute did it take 200 milliseconds which systems did it call",
    "start": "3227119",
    "end": "3233280"
  },
  {
    "text": "did it call a third party and it can do that across the entire",
    "start": "3233280",
    "end": "3239280"
  },
  {
    "text": "Trace not just on one span it can take into account all of the information for all of the spans in that",
    "start": "3239280",
    "end": "3245680"
  },
  {
    "text": "Trace but it does have the downside that it's going to delay sending of those spans to the back",
    "start": "3245680",
    "end": "3253079"
  },
  {
    "text": "end that's an important characteristic when you're looking at observability is how quickly can I start asking questions",
    "start": "3253079",
    "end": "3259440"
  },
  {
    "text": "based on my system there are platforms out there that have a five minute SLA from you",
    "start": "3259440",
    "end": "3265720"
  },
  {
    "text": "sending it data to you being able to receive it now if you've ever been in an outage",
    "start": "3265720",
    "end": "3272200"
  },
  {
    "text": "5 minutes is an eternity for you to know whether things are still working which is why people end up going on the",
    "start": "3272200",
    "end": "3277799"
  },
  {
    "text": "website and checking themsel it's like oh it works for me and then you realize",
    "start": "3277799",
    "end": "3283359"
  },
  {
    "text": "that you're on the internal Network and the firewall's down so nobody can view",
    "start": "3283359",
    "end": "3288200"
  },
  {
    "text": "it the other thing is it requires an application to send all the spans for",
    "start": "3288960",
    "end": "3295760"
  },
  {
    "text": "all the traces all the time so you've got a lot of data exiting",
    "start": "3295760",
    "end": "3301200"
  },
  {
    "text": "your application into that so head Samplers are pretty easy you can write them in net that one there just takes a",
    "start": "3301200",
    "end": "3307559"
  },
  {
    "text": "random percentage of all the spans and says I'm going to keep this one I'm not going to keep that one the sampling",
    "start": "3307559",
    "end": "3313359"
  },
  {
    "text": "parameters are things that you get when the um activity is created so for net it",
    "start": "3313359",
    "end": "3318720"
  },
  {
    "text": "should be but it isn't at the moment it's broken um you should be able to do things like URL user agent some of the headers all",
    "start": "3318720",
    "end": "3326440"
  },
  {
    "text": "of that kind of stuff and you make a decision am I going to keep it or am I going to drop it and then every",
    "start": "3326440",
    "end": "3333359"
  },
  {
    "text": "descendant service that is part of this Trace will inherit that",
    "start": "3333359",
    "end": "3339319"
  },
  {
    "start": "3338000",
    "end": "3599000"
  },
  {
    "text": "decision and that's all done using something called The",
    "start": "3339319",
    "end": "3344079"
  },
  {
    "text": "Collector okay The Collector is part of open cemetry but it's not.net",
    "start": "3344839",
    "end": "3351520"
  },
  {
    "text": "so why does it fit into this talk the open Elementary collector is a",
    "start": "3351520",
    "end": "3358240"
  },
  {
    "text": "service written in go and as one of my friends quite",
    "start": "3358240",
    "end": "3363839"
  },
  {
    "text": "eloquently put um earlier Go's an awful language but all the interesting tools are written in",
    "start": "3363839",
    "end": "3371960"
  },
  {
    "text": "it now The Collector is a service that runs it can run in two ways it can run as a service inside your infrastructure",
    "start": "3371960",
    "end": "3378559"
  },
  {
    "text": "as a container that everything sends data to or it can run as a side car if you're running kubernetes or",
    "start": "3378559",
    "end": "3386280"
  },
  {
    "text": "both one of the really cool things that it allows is centralizing of",
    "start": "3386280",
    "end": "3392000"
  },
  {
    "text": "config so where you're sending your observability data to might change you might have an API key and if",
    "start": "3392000",
    "end": "3400319"
  },
  {
    "text": "you've got 1500 microservices all sending to one Telemetry back end and",
    "start": "3400319",
    "end": "3406480"
  },
  {
    "text": "your security team comes to you and say our key has been compromised for our vendor I need you to go and change the",
    "start": "3406480",
    "end": "3412119"
  },
  {
    "text": "API key for where you're sending your data and then you watch devs cry it's like I'm not coming home",
    "start": "3412119",
    "end": "3420720"
  },
  {
    "text": "toight if you centralize your config with the collector if you have all of your applications all of your net",
    "start": "3420720",
    "end": "3426400"
  },
  {
    "text": "microservices all sending their data to one collector and that collector then forwards that data on to your backend",
    "start": "3426400",
    "end": "3432280"
  },
  {
    "text": "provider when they come to you and say I'm really sorry I'm really sorry you're going to have to change the config again",
    "start": "3432280",
    "end": "3439520"
  },
  {
    "text": "and you go oh it's going to take me three weeks I'll do it at home just don't contact",
    "start": "3439520",
    "end": "3446799"
  },
  {
    "text": "me so centralizing config is really important it also centralizes things like filtering and redaction it also",
    "start": "3448280",
    "end": "3455240"
  },
  {
    "text": "centralizes egress if you're in a hypers secure environment you probably not got access to the internet from your",
    "start": "3455240",
    "end": "3460880"
  },
  {
    "text": "microservices they have to go through something else and when you say to them I need all of my microservices to access",
    "start": "3460880",
    "end": "3466960"
  },
  {
    "text": "this IP address and they say great send us a form and you go okay is it a good Google",
    "start": "3466960",
    "end": "3475599"
  },
  {
    "text": "form and they say no back it to this",
    "start": "3475599",
    "end": "3481200"
  },
  {
    "text": "number centralizing egress allows you to be able to put a collector at the edge of your network talk to your security team and",
    "start": "3481200",
    "end": "3488200"
  },
  {
    "text": "say that thing there needs to send Telemetry to that thing there and they go just one thing and then you're their",
    "start": "3488200",
    "end": "3493799"
  },
  {
    "text": "best friend so centralizing that egress allows you to be able to do it that way",
    "start": "3493799",
    "end": "3498839"
  },
  {
    "text": "it also allows you to be able to control it over things like private link and vpns and express routs and all of those",
    "start": "3498839",
    "end": "3504240"
  },
  {
    "text": "cool stuff it also allows us to do filtering and redaction of information outside of your",
    "start": "3504240",
    "end": "3511119"
  },
  {
    "text": "application what it allows you to do is for every span that comes through inspect the attributes and if you see 16",
    "start": "3511119",
    "end": "3516400"
  },
  {
    "text": "contiguous numbers together you're going to redact that because that's a card number and you shouldn't be sending it",
    "start": "3516400",
    "end": "3521720"
  },
  {
    "text": "that makes security teams happy if you've got problems with your security team talks and them about the",
    "start": "3521720",
    "end": "3527760"
  },
  {
    "text": "collector they'll love it but it allows them to say filter data don't send these spans do send these spans redact this",
    "start": "3527760",
    "end": "3535079"
  },
  {
    "text": "data keep that data these are the only Keys you're allowed to send and do that",
    "start": "3535079",
    "end": "3540119"
  },
  {
    "text": "in one location not inside your application the other thing it allows you to do is enrichment one really cool",
    "start": "3540119",
    "end": "3546480"
  },
  {
    "text": "thing is if you're running kubernetes which by the end of the year will be the number two project from the cloud native Computing Foundation guess",
    "start": "3546480",
    "end": "3553079"
  },
  {
    "text": "what's going to be number one open Telemetry um it allows you to do",
    "start": "3553079",
    "end": "3560119"
  },
  {
    "text": "enrichment with kubernetes based information automatically so if you enable something",
    "start": "3560119",
    "end": "3565960"
  },
  {
    "text": "called The KES attributes processor in The Collector and all of your services are sending their data through the collector every single one of your spans",
    "start": "3565960",
    "end": "3573039"
  },
  {
    "text": "will have a pod name it'll have the start time of your pod it'll have the deployment that it was part of the",
    "start": "3573039",
    "end": "3578440"
  },
  {
    "text": "replica sets that it was part of it'll have the cluster name the node name and",
    "start": "3578440",
    "end": "3584440"
  },
  {
    "text": "you don't have to do anything and that's why it's really cool but it will also do tail",
    "start": "3584440",
    "end": "3589680"
  },
  {
    "text": "sampling it's a really simple service it's configurable by you and you can do",
    "start": "3589680",
    "end": "3595240"
  },
  {
    "text": "receivers you can also if you're using Jer at the moment inside your applications spin up the collector send",
    "start": "3595240",
    "end": "3601599"
  },
  {
    "text": "your Jer stuff to The Collector and The Collector will now put it in open telary format for you really",
    "start": "3601599",
    "end": "3607839"
  },
  {
    "text": "cool and that's me bang on time awesome um there's a QR",
    "start": "3607839",
    "end": "3615039"
  },
  {
    "text": "code there it's got some links um the repos will be on there um I do work for a company called honeycomb we are an",
    "start": "3615039",
    "end": "3620880"
  },
  {
    "text": "observability provider we do accept open Cemetary data um there's a free account",
    "start": "3620880",
    "end": "3626440"
  },
  {
    "text": "that you can send 20 million events per month every month to us for free do sign up we did also literally write the book",
    "start": "3626440",
    "end": "3632960"
  },
  {
    "text": "on observability engineering it is free you can download it all the links are on the QR code all the links from all the",
    "start": "3632960",
    "end": "3640200"
  },
  {
    "text": "blog post and stuff throughout the presentation are as well there are some stickers at the front come take some stickers I'm here for the rest of the",
    "start": "3640200",
    "end": "3646119"
  },
  {
    "text": "week so come and grab me have a chat I'm open to any questions but not here because somebody's probably going to",
    "start": "3646119",
    "end": "3652119"
  },
  {
    "text": "come on next",
    "start": "3652119",
    "end": "3656520"
  },
  {
    "text": "for",
    "start": "3664839",
    "end": "3667839"
  }
]