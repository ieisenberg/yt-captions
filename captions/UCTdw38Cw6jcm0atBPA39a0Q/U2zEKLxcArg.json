[
  {
    "start": "0",
    "end": "155000"
  },
  {
    "text": "okay let's begin hello everyone uh good morning and welcome to this talk",
    "start": "8080",
    "end": "13360"
  },
  {
    "text": "which is titled from bob to c-sharp my name is adam furmanek and i will be your host for the next one hour",
    "start": "13360",
    "end": "20400"
  },
  {
    "text": "uh and greetings from europe at the same time in my time zone it's around midnight so if you are sleepy because",
    "start": "20400",
    "end": "26320"
  },
  {
    "text": "it's morning then i'm sleepy as well because it's night for my time zone um what we are going to discuss for the",
    "start": "26320",
    "end": "33040"
  },
  {
    "text": "next 60 minutes is uh we'll see how the computer works how these machines which",
    "start": "33040",
    "end": "39760"
  },
  {
    "text": "we use every single day how they are constructed how they work under the hood and how it's possible that we can",
    "start": "39760",
    "end": "46160"
  },
  {
    "text": "actually program them write some code and execute the things we would like to do",
    "start": "46160",
    "end": "51600"
  },
  {
    "text": "so we won't be covering actually anything which we typically do in our day-to-day work right we won't be",
    "start": "51600",
    "end": "58160"
  },
  {
    "text": "covering high-level code we won't be covering even low-level code what we will see today is more of like a",
    "start": "58160",
    "end": "65280"
  },
  {
    "text": "physical aspect of the of computers how they are constructed how it's possible",
    "start": "65280",
    "end": "70400"
  },
  {
    "text": "to that they actually can perform some calculations exchange data store things on hard drives etc",
    "start": "70400",
    "end": "77360"
  },
  {
    "text": "and at the same time it's not going to be as super like um as complicated or",
    "start": "77360",
    "end": "83280"
  },
  {
    "text": "requiring a very deep knowledge nothing like this we will start with some good intuitions and we will see that we can",
    "start": "83280",
    "end": "89280"
  },
  {
    "text": "actually build a computer using any single light switch or if you ever read like a book free",
    "start": "89280",
    "end": "95920"
  },
  {
    "text": "body problem you could even build a computer just by waving hands as it's described in that book",
    "start": "95920",
    "end": "102720"
  },
  {
    "text": "so that's the idea and before moving on couple words about me uh so i'm a software engineer i was",
    "start": "102720",
    "end": "108960"
  },
  {
    "text": "currently working at amazon doing some machine learning work i was also in back and front and mobile 10 desktop",
    "start": "108960",
    "end": "115520"
  },
  {
    "text": "application developer doing plenty of stuff uh i have a blog at the",
    "start": "115520",
    "end": "120600"
  },
  {
    "text": "blog.adamformance.po feel free to take a look if you are interested in like math or internals of couple platforms",
    "start": "120600",
    "end": "126799"
  },
  {
    "text": "operating systems etc i'm also an author of net internals cookbook a book which",
    "start": "126799",
    "end": "132000"
  },
  {
    "text": "explains some internals of the net platform available at amazon feel free",
    "start": "132000",
    "end": "137680"
  },
  {
    "text": "to take a look drop me a line on twitter email whatever works for you feel free",
    "start": "137680",
    "end": "143040"
  },
  {
    "text": "to ask questions either in the the webex chat we have here or on the slack",
    "start": "143040",
    "end": "148319"
  },
  {
    "text": "channel i'll try to answer the questions uh during the talk as we go",
    "start": "148319",
    "end": "154239"
  },
  {
    "text": "okay um so agenda for for this presentation uh well our goal for today",
    "start": "154239",
    "end": "161519"
  },
  {
    "start": "155000",
    "end": "235000"
  },
  {
    "text": "is we would like to build a computer probably not something a us a as",
    "start": "161519",
    "end": "167040"
  },
  {
    "text": "developed or as complex are the computers we are using currently but something definitely capable of",
    "start": "167040",
    "end": "173599"
  },
  {
    "text": "performing calculations storing some data and doing some logic doing some",
    "start": "173599",
    "end": "179360"
  },
  {
    "text": "actual like operations conditions loops and all these things and we'll start with just",
    "start": "179360",
    "end": "185840"
  },
  {
    "text": "light switches because at the at the very bottom of everything we can think of transistors",
    "start": "185840",
    "end": "192959"
  },
  {
    "text": "or of the of the current as basically a light which is in the bulb so we will",
    "start": "192959",
    "end": "198800"
  },
  {
    "text": "have some bulb emitting the light or not and we starting from there we'll go and",
    "start": "198800",
    "end": "204799"
  },
  {
    "text": "finish with some some actual computer then we'll cover some physical aspects",
    "start": "204799",
    "end": "211120"
  },
  {
    "text": "of semiconductors and why we use them at all and then we'll quickly move through",
    "start": "211120",
    "end": "216239"
  },
  {
    "text": "the the more things or more standards which were built on the physical",
    "start": "216239",
    "end": "221680"
  },
  {
    "text": "components and giving us the the things we have right now uh so we'll see a bit of",
    "start": "221680",
    "end": "228080"
  },
  {
    "text": "history and we'll see how all these things work together to uh to do what we want",
    "start": "228080",
    "end": "234000"
  },
  {
    "text": "to do let's begin so bob is all we need uh",
    "start": "234000",
    "end": "239120"
  },
  {
    "text": "so let's start with uh this pretty simple example uh showing the idea of what we are going",
    "start": "239120",
    "end": "246080"
  },
  {
    "text": "to to do today so we do have a piece of wire",
    "start": "246080",
    "end": "251840"
  },
  {
    "text": "and we do have a battery which is basically a source of voltage and we have a light switch like a light",
    "start": "251840",
    "end": "258479"
  },
  {
    "text": "emitting bulb which can be either in on or off state so this is where we start",
    "start": "258479",
    "end": "264080"
  },
  {
    "text": "and you can see in this in this wire that we have an ability to basically",
    "start": "264080",
    "end": "269199"
  },
  {
    "text": "open the circuit or close the circuit here so we can control whether the light is turned off or it's turned on just by",
    "start": "269199",
    "end": "277360"
  },
  {
    "text": "you know connecting two pieces of wire together so this is where we start and",
    "start": "277360",
    "end": "282479"
  },
  {
    "text": "because you're probably programmers and then you probably know that we can interpret like no light as signal zero",
    "start": "282479",
    "end": "289440"
  },
  {
    "text": "or as value false and a light being emitted as value true or our signal one",
    "start": "289440",
    "end": "295520"
  },
  {
    "text": "or as like a high voltage or something like this this is where we start",
    "start": "295520",
    "end": "300800"
  },
  {
    "text": "and uh the first thing actually which was invented or which was invented pretty early is a thing which allowed us",
    "start": "300800",
    "end": "308800"
  },
  {
    "text": "to communicate so imagine that you would like to communicate with your friend sitting",
    "start": "308800",
    "end": "314800"
  },
  {
    "text": "probably next door next street or maybe next city what we can do is we can just",
    "start": "314800",
    "end": "320720"
  },
  {
    "text": "take two light switches and we can connect them using using wire which",
    "start": "320720",
    "end": "325840"
  },
  {
    "text": "probably could be pretty long uh depending where our friend is",
    "start": "325840",
    "end": "331120"
  },
  {
    "text": "however the whole principle stays the same now we do have some wire which we can like turn on and turn off in these",
    "start": "331120",
    "end": "338560"
  },
  {
    "text": "two places and like when we connect this this piece of wires uh here at this",
    "start": "338560",
    "end": "343759"
  },
  {
    "text": "point light is being emitted using this bulb if our friend connects the wires",
    "start": "343759",
    "end": "349759"
  },
  {
    "text": "here the light would be emitted and using this bulb so what we can do now is",
    "start": "349759",
    "end": "355360"
  },
  {
    "text": "we can take these two light switches keep one with ourselves put one in our friend's room and then pull this whole",
    "start": "355360",
    "end": "362800"
  },
  {
    "text": "cable and bang now we can communicate and obviously we would have a pretty simple signal",
    "start": "362800",
    "end": "369120"
  },
  {
    "text": "just to send which would be like a light which we then could interpret in any way",
    "start": "369120",
    "end": "374960"
  },
  {
    "text": "we could we would like to for instance you probably heard about the morse code so we could be like by sequence of",
    "start": "374960",
    "end": "381759"
  },
  {
    "text": "lights of different lengths we could be descending like letters digits or basically any transmission we",
    "start": "381759",
    "end": "388479"
  },
  {
    "text": "would like to do and it is as simple as that and if we ever actually thought",
    "start": "388479",
    "end": "394000"
  },
  {
    "text": "about the telegraph and the telegraph works like this this is exactly what telegraph does we",
    "start": "394000",
    "end": "400639"
  },
  {
    "text": "just have a probably potentially very long wire which is a then connected or",
    "start": "400639",
    "end": "406479"
  },
  {
    "text": "which is then allowed to pass some voltage uh using this button on one end",
    "start": "406479",
    "end": "412160"
  },
  {
    "text": "and probably using some electromagnet which is like making sound or or turning",
    "start": "412160",
    "end": "417680"
  },
  {
    "text": "on some writing a machine on the other hand or whatever else making a buzz",
    "start": "417680",
    "end": "422720"
  },
  {
    "text": "and this is how telegraph works so if you ever heard about like intercontinental communication using",
    "start": "422720",
    "end": "428240"
  },
  {
    "text": "telegraph it's based on this super simple principle uh which we could just use or apply by taking like switches and",
    "start": "428240",
    "end": "436319"
  },
  {
    "text": "and moving on a couple words about notation here you probably see like with this circuit that",
    "start": "436319",
    "end": "443440"
  },
  {
    "text": "we do have basically a full loop of wire right you can see that this wire like let's say it starts here and it",
    "start": "443440",
    "end": "449680"
  },
  {
    "text": "basically goes in this big loop right this is what we typically do and we typically also indicate this would like",
    "start": "449680",
    "end": "456960"
  },
  {
    "text": "to indicate the source of power using the battery however because every single",
    "start": "456960",
    "end": "462080"
  },
  {
    "text": "circuit will have these things like the positive and negative side of the battery on the the closed circuit and",
    "start": "462080",
    "end": "468639"
  },
  {
    "text": "the adayada we typically make our notation a little simpler so what we do",
    "start": "468639",
    "end": "474240"
  },
  {
    "text": "is we indicate the source of the voltage as this letter v and also we indicated",
    "start": "474240",
    "end": "480240"
  },
  {
    "text": "the other side of the of the of the wire as being ground as",
    "start": "480240",
    "end": "485840"
  },
  {
    "text": "ground you could physically just connect this wire like from your place starting",
    "start": "485840",
    "end": "492319"
  },
  {
    "text": "here to the place like a of your friend a friend home and just by using a very",
    "start": "492319",
    "end": "498800"
  },
  {
    "text": "big physical pole which would be physically in the ground there is this is where the name comes from",
    "start": "498800",
    "end": "504960"
  },
  {
    "text": "but we won't be getting into these details just keep in mind that from now on whenever we do have letter v it is",
    "start": "504960",
    "end": "511280"
  },
  {
    "text": "basically a battery giving us some uh some power which we can then can use",
    "start": "511280",
    "end": "516880"
  },
  {
    "text": "to to emit light from any of the of the bulbs we have here",
    "start": "516880",
    "end": "522719"
  },
  {
    "text": "so now just by having these two light switches we can start constructing something a little more sophisticated a",
    "start": "522719",
    "end": "529839"
  },
  {
    "text": "little more complex and if you ever programmed in any language basically you",
    "start": "529839",
    "end": "535040"
  },
  {
    "text": "probably know the operators like conjunction disjunction negation or whatever else and we will start by",
    "start": "535040",
    "end": "541760"
  },
  {
    "text": "building these operations using light switches so what we are going to do",
    "start": "541760",
    "end": "547040"
  },
  {
    "start": "545000",
    "end": "813000"
  },
  {
    "text": "first is we are going to build uh the so-called and gate and if you ever heard",
    "start": "547040",
    "end": "552399"
  },
  {
    "text": "about and gate in like transistor level we will get to that for now on we'll be",
    "start": "552399",
    "end": "557680"
  },
  {
    "text": "just building the gates using light switches so the end gate here would be basically",
    "start": "557680",
    "end": "563920"
  },
  {
    "text": "a very simple right we would have these two switches on a piece of wire if they are together",
    "start": "563920",
    "end": "569760"
  },
  {
    "text": "like if they both are closed so the circuit is closed then the light would be emitted here and and the circuit",
    "start": "569760",
    "end": "577120"
  },
  {
    "text": "would be closed right however because we probably in the in the integrated circles or the designs we",
    "start": "577120",
    "end": "584160"
  },
  {
    "text": "are not going to use the uh these light switches or whatever else we need to have some other notion or some other way",
    "start": "584160",
    "end": "591440"
  },
  {
    "text": "of specifying that what we want to build is basically the circuit which represents the conjunction of two",
    "start": "591440",
    "end": "597760"
  },
  {
    "text": "variables and this is called the the end gate so this gate is represented as this like",
    "start": "597760",
    "end": "604959"
  },
  {
    "text": "letter d with two inputs and one output and you can see that basically logic for",
    "start": "604959",
    "end": "611360"
  },
  {
    "text": "this or the rows for this gate is they are super simple just like in your any",
    "start": "611360",
    "end": "617040"
  },
  {
    "text": "language you use like c sharp you have two boolean values as the input and here",
    "start": "617040",
    "end": "622560"
  },
  {
    "text": "represented as zero and one and the end gate emits signal on the other end only",
    "start": "622560",
    "end": "629680"
  },
  {
    "text": "when both inputs are true so you can see here that the output signal we would",
    "start": "629680",
    "end": "635200"
  },
  {
    "text": "interpret using light switches as basically light being emitted or not right so if light is emitted the output",
    "start": "635200",
    "end": "642880"
  },
  {
    "text": "signal is interpreted to be one if the light is not emitted output signal is",
    "start": "642880",
    "end": "647920"
  },
  {
    "text": "interpreted as zero and input signals here are basically these two these two",
    "start": "647920",
    "end": "653600"
  },
  {
    "text": "switches so this is how we could build an and gate using",
    "start": "653600",
    "end": "659200"
  },
  {
    "text": "using just a piece of wire a battery and a light switch similarly we could build",
    "start": "659200",
    "end": "664800"
  },
  {
    "text": "an or gate uh using similar principles so this time because or gate emits the",
    "start": "664800",
    "end": "671519"
  },
  {
    "text": "the signal when at least one of the inputs is is on so we basically need to connect",
    "start": "671519",
    "end": "678399"
  },
  {
    "text": "these two wires in this way so if any of them makes the the circuit closed then",
    "start": "678399",
    "end": "684959"
  },
  {
    "text": "the power would go through the through the circle then the light would be emitted so this is how we built two",
    "start": "684959",
    "end": "691440"
  },
  {
    "text": "basic gates namely and uh gate and or gate and so conjunction and",
    "start": "691440",
    "end": "698399"
  },
  {
    "text": "disjunction gates now comes the question how do we make another gate which is basically an",
    "start": "698399",
    "end": "703760"
  },
  {
    "text": "inverter so negation and for inverter we basically need to do some magic so there is some voltage",
    "start": "703760",
    "end": "711839"
  },
  {
    "text": "there is some current going to the circuit and on the other end it's not going out or the opposite there is no",
    "start": "711839",
    "end": "718959"
  },
  {
    "text": "current entering the circuit and then it's going out and to build this uh this",
    "start": "718959",
    "end": "724480"
  },
  {
    "text": "this gate we actually need a yet another component which here is basically an electromagnet so what is happening here",
    "start": "724480",
    "end": "731680"
  },
  {
    "text": "is we do have this input here which is basically whether there is a current",
    "start": "731680",
    "end": "736959"
  },
  {
    "text": "flowing through to the electromagnet from here but there is also actually a separate part of the circuit which is",
    "start": "736959",
    "end": "743920"
  },
  {
    "text": "flowing through the starting here and flowing to the bulb so whenever this thing this one thing is",
    "start": "743920",
    "end": "751120"
  },
  {
    "text": "turned off there is no electricity flowing through here so the circuit is",
    "start": "751120",
    "end": "756800"
  },
  {
    "text": "closed at this point however imagine that we now start that we now close the circuit here so",
    "start": "756800",
    "end": "763360"
  },
  {
    "text": "there would be a wire connected here we would have some electricity flowing through the electromagnet which would",
    "start": "763360",
    "end": "769920"
  },
  {
    "text": "effectively because it's a magnet it would make the other switch to just bend",
    "start": "769920",
    "end": "775200"
  },
  {
    "text": "a little which would open the circuit at this point so it would stop emitting the",
    "start": "775200",
    "end": "781040"
  },
  {
    "text": "the light so this is the principle behind building the the not gate so the",
    "start": "781040",
    "end": "786160"
  },
  {
    "text": "inverter gate so we can see just by using again battery piece of wire and",
    "start": "786160",
    "end": "791360"
  },
  {
    "text": "bulbs and the light switch we need one more thing which is basically the electromagnet and we can build the",
    "start": "791360",
    "end": "798480"
  },
  {
    "text": "inverter gate so now we have three logical operations built using only the the",
    "start": "798480",
    "end": "805360"
  },
  {
    "text": "bulbs which is conjunction disjunction and a and negation we can build couple more",
    "start": "805360",
    "end": "811760"
  },
  {
    "text": "uh slightly more sophisticated gates uh for instance the not or gate which is",
    "start": "811760",
    "end": "817839"
  },
  {
    "start": "813000",
    "end": "931000"
  },
  {
    "text": "basically working as an disjunction of do of two variables so it's like an or of two variables and",
    "start": "817839",
    "end": "825279"
  },
  {
    "text": "then negation so this thing this not or gate it will emit a one on this side",
    "start": "825279",
    "end": "832880"
  },
  {
    "text": "only when both inputs are zero right because we will take all of these two",
    "start": "832880",
    "end": "838000"
  },
  {
    "text": "things which would be still zero and then we negate them at this point and that would be one",
    "start": "838000",
    "end": "844079"
  },
  {
    "text": "uh for nand gate pretty similar we just take the conjunction of two signals and then we",
    "start": "844079",
    "end": "850800"
  },
  {
    "text": "emit something so we will emit a zero here only when both inputs are once so",
    "start": "850800",
    "end": "857839"
  },
  {
    "text": "because we have conjunction of two ones it would be one and then we invert it so it becomes uh becomes zero and again uh",
    "start": "857839",
    "end": "865839"
  },
  {
    "text": "the the last gate we could build here is basically the exclusive or which emits one",
    "start": "865839",
    "end": "871760"
  },
  {
    "text": "if and only if exactly one of the inputs is is non-zero so if exactly one of the",
    "start": "871760",
    "end": "878959"
  },
  {
    "text": "inputs is true uh you can see that we can just by taking these three basic gates like",
    "start": "878959",
    "end": "886160"
  },
  {
    "text": "conjunction disjunction and negation we can start building couple more sophisticated gates actually in the in",
    "start": "886160",
    "end": "894000"
  },
  {
    "text": "like designs on the low level we typically start with one of these gates like not and gate and we build other",
    "start": "894000",
    "end": "901199"
  },
  {
    "text": "gates out from this one but this is like a degradation so this is what we built okay we can see",
    "start": "901199",
    "end": "908000"
  },
  {
    "text": "that we started with the light switch piece of wire and electricity we could send a signal now we can start modifying",
    "start": "908000",
    "end": "915680"
  },
  {
    "text": "this signal to some extent we can do some logical operations obviously we'll probably need plenty of the",
    "start": "915680",
    "end": "922720"
  },
  {
    "text": "of the light switches if we want to do something or plenty of these gates constructed from wires and batteries but",
    "start": "922720",
    "end": "929279"
  },
  {
    "text": "technically it would work what can we do next well we can start doing some",
    "start": "929279",
    "end": "934800"
  },
  {
    "start": "931000",
    "end": "1192000"
  },
  {
    "text": "logical operation or sorry some arithmetic operations and we can start building the so-called half other",
    "start": "934800",
    "end": "942480"
  },
  {
    "text": "if you remember from like from ground school uh whenever you do the long addition uh like addition you",
    "start": "942480",
    "end": "950560"
  },
  {
    "text": "know adding two long numbers what we typically do is we add them digit by digit and we have carry",
    "start": "950560",
    "end": "957839"
  },
  {
    "text": "which we include when adding the the following digits we can do the same obviously on a binary",
    "start": "957839",
    "end": "963600"
  },
  {
    "text": "level in like binary system and and the first thing which we need to",
    "start": "963600",
    "end": "968880"
  },
  {
    "text": "build is the so-called half other which will just add the two digits and then",
    "start": "968880",
    "end": "974480"
  },
  {
    "text": "emit both the sum of these digits and the and the carry so you can see that",
    "start": "974480",
    "end": "980000"
  },
  {
    "text": "just by using the exclusive or gate and the conjunction gate we can",
    "start": "980000",
    "end": "985920"
  },
  {
    "text": "calculate what we need because what we want to calculate is first we would like to have a sum of",
    "start": "985920",
    "end": "991519"
  },
  {
    "text": "these two inputs and b here so you can see that if you calculate this in binary",
    "start": "991519",
    "end": "996959"
  },
  {
    "text": "this sum will be one if and only if exactly one of the inputs is set to one",
    "start": "996959",
    "end": "1002880"
  },
  {
    "text": "if we add two ones and then what we effectively get is we get the number which is two so it",
    "start": "1002880",
    "end": "1010160"
  },
  {
    "text": "requires two digits to be encoded in boundary level so first the lowest digit",
    "start": "1010160",
    "end": "1015199"
  },
  {
    "text": "will be zero and then we will have the the carry which will include in adding",
    "start": "1015199",
    "end": "1021279"
  },
  {
    "text": "uh the the next digits uh in order and so this is half other which is also",
    "start": "1021279",
    "end": "1027199"
  },
  {
    "text": "typically uh depicted as this like rectangle named half other with with inputs and and",
    "start": "1027199",
    "end": "1034720"
  },
  {
    "text": "outputs and then using half others we can start building the full other",
    "start": "1034720",
    "end": "1040640"
  },
  {
    "text": "and the full other is only slightly more complex because what full adder needs to do",
    "start": "1040640",
    "end": "1046400"
  },
  {
    "text": "is it takes the digits which need to be zoomed together but it also takes the",
    "start": "1046400",
    "end": "1052160"
  },
  {
    "text": "carry bit from adding previous two digits so what we have here as an input",
    "start": "1052160",
    "end": "1058559"
  },
  {
    "text": "we basically take two digits to be added and the carry bit from previous addition",
    "start": "1058559",
    "end": "1064080"
  },
  {
    "text": "and what we do next is again for some we do some uh some some magic using using",
    "start": "1064080",
    "end": "1071440"
  },
  {
    "text": "the half other and for carry we basically need to include carry from uh",
    "start": "1071440",
    "end": "1076480"
  },
  {
    "text": "from both additions here because effectively here we are doing like two additions",
    "start": "1076480",
    "end": "1082240"
  },
  {
    "text": "and two editions in one go so this is again depicted as something like this or",
    "start": "1082240",
    "end": "1088320"
  },
  {
    "text": "this can be depicted as a as uh one unit which is basically an other",
    "start": "1088320",
    "end": "1094480"
  },
  {
    "text": "and you can see that once we build this thingy what we can do next is we can build a series of",
    "start": "1094480",
    "end": "1102720"
  },
  {
    "text": "these others because this particular other it only adds two bits of of like",
    "start": "1102720",
    "end": "1109280"
  },
  {
    "text": "two bits right it doesn't add like 32-bit long integer or something like this it just adds two binary digits with",
    "start": "1109280",
    "end": "1116960"
  },
  {
    "text": "one carry but if we would like to sum integers which would be 80 bits long 16",
    "start": "1116960",
    "end": "1122640"
  },
  {
    "text": "bits long or whatever else what we need to do is we need to basically put a series of these",
    "start": "1122640",
    "end": "1129440"
  },
  {
    "text": "of these full others and then we'll get each bit uh x will extract each",
    "start": "1129440",
    "end": "1135840"
  },
  {
    "text": "particular bit of the sum which we can then use to to reconstruct them",
    "start": "1135840",
    "end": "1141679"
  },
  {
    "text": "the the full result of the result of addition of like eight bit integers so this is how we build the the",
    "start": "1141679",
    "end": "1149039"
  },
  {
    "text": "arithmetic operations uh you can probably imagine we won't be going through more details but you can imagine",
    "start": "1149039",
    "end": "1154400"
  },
  {
    "text": "that subtraction will be based on couple similar ideas and once we have addition",
    "start": "1154400",
    "end": "1160160"
  },
  {
    "text": "and subtraction we can build multiplication division yada yada so we can",
    "start": "1160160",
    "end": "1165440"
  },
  {
    "text": "take for granted from now that we do have some boolean logic because we know how to do conjunction negation etc and",
    "start": "1165440",
    "end": "1173039"
  },
  {
    "text": "we can do some simple arithmetic we can add numbers everything just using light",
    "start": "1173039",
    "end": "1179200"
  },
  {
    "text": "switches now we are probably to simplify the notion we are just using gates but you",
    "start": "1179200",
    "end": "1185600"
  },
  {
    "text": "know that these gates can be built using a simple light switch with piece of wire and the battery",
    "start": "1185600",
    "end": "1191200"
  },
  {
    "text": "moving on what we would like to do next is we would like to have a clock because our",
    "start": "1191200",
    "end": "1197280"
  },
  {
    "start": "1192000",
    "end": "1334000"
  },
  {
    "text": "cpus they do have some frequency right so how do we build a clock well we build",
    "start": "1197280",
    "end": "1202640"
  },
  {
    "text": "a thing which seems a very which looks like a very counter-intuitive",
    "start": "1202640",
    "end": "1208240"
  },
  {
    "text": "circuit but in fact it's pretty simple so we start with similarly to negation",
    "start": "1208240",
    "end": "1213919"
  },
  {
    "text": "we do have an electromagnet here but we do have a circuit which is like a single",
    "start": "1213919",
    "end": "1220000"
  },
  {
    "text": "loop here which is closed which goes like the input of the circuit is at the",
    "start": "1220000",
    "end": "1225520"
  },
  {
    "text": "same time the output of the circuit so what happens is in this oscillator which",
    "start": "1225520",
    "end": "1230799"
  },
  {
    "text": "we are building is we start with something like this there is no electricity in this circuit because well",
    "start": "1230799",
    "end": "1235840"
  },
  {
    "text": "the circuit is open here what we do next is we would like to close the circuit",
    "start": "1235840",
    "end": "1241120"
  },
  {
    "text": "here and once we do it because we do it the the circuit is closed as you can see",
    "start": "1241120",
    "end": "1246799"
  },
  {
    "text": "here the electricity starts flowing through the circuit however the moment",
    "start": "1246799",
    "end": "1252159"
  },
  {
    "text": "the electricity starts flowing there is the electricity here in the electromagnet right so because there is",
    "start": "1252159",
    "end": "1258559"
  },
  {
    "text": "electricity here it pulls the switch here so it opens the circuit and we end",
    "start": "1258559",
    "end": "1266000"
  },
  {
    "text": "in this position because now the circuit is open there is no electricity in the electromagnet so",
    "start": "1266000",
    "end": "1273919"
  },
  {
    "text": "this switch will just return to its original position because let's say there is some spring or whatever",
    "start": "1273919",
    "end": "1280559"
  },
  {
    "text": "so that will basically go again to this situation because this switch will be",
    "start": "1280559",
    "end": "1287520"
  },
  {
    "text": "closed so the electricity will be flowing there will be electricity and an electromagnet which will then open the",
    "start": "1287520",
    "end": "1293679"
  },
  {
    "text": "circuit and yada yada over and over again obviously because these are",
    "start": "1293679",
    "end": "1298880"
  },
  {
    "text": "physical components so this switch sorry this switch which is here it will have",
    "start": "1298880",
    "end": "1305120"
  },
  {
    "text": "some physical delay between the time it opens and it closes so it will have some",
    "start": "1305120",
    "end": "1311919"
  },
  {
    "text": "inherent frequency which is here it may be too low for our needs however",
    "start": "1311919",
    "end": "1318159"
  },
  {
    "text": "it will just work so once we start moving or we execute",
    "start": "1318159",
    "end": "1323840"
  },
  {
    "text": "this circuit if i can use this word this will work indefinitely a meeting like",
    "start": "1323840",
    "end": "1329360"
  },
  {
    "text": "zero and one opening and closing the the circuit so this is how we build oscillator",
    "start": "1329360",
    "end": "1334559"
  },
  {
    "start": "1334000",
    "end": "1398000"
  },
  {
    "text": "and this is how we typically depict the oscillator so you can see that what we built here is the inverter gates of the",
    "start": "1334559",
    "end": "1341600"
  },
  {
    "text": "negation and this is why it's super counter intuitive because we do have the",
    "start": "1341600",
    "end": "1346720"
  },
  {
    "text": "output of this gate is again the input of this gate so it seems like it would",
    "start": "1346720",
    "end": "1351760"
  },
  {
    "text": "never go to it will never you know converge to some stable state and this",
    "start": "1351760",
    "end": "1356880"
  },
  {
    "text": "is what basically gives us the time because it will be emitting low voltage high voltage low voltage high voltage",
    "start": "1356880",
    "end": "1363360"
  },
  {
    "text": "and yada yada so just by using this simple trick which is counter intuitive but well it's",
    "start": "1363360",
    "end": "1370799"
  },
  {
    "text": "pretty pretty simple once we figure out what we are trying to do we can see that",
    "start": "1370799",
    "end": "1375840"
  },
  {
    "text": "we do have a time because we have a clock we can use the output from here",
    "start": "1375840",
    "end": "1380960"
  },
  {
    "text": "basically as an input to something else and that would be a clock in our system",
    "start": "1380960",
    "end": "1386240"
  },
  {
    "text": "so we do have boolean logic we do have arithmetic now we have a clock",
    "start": "1386240",
    "end": "1392480"
  },
  {
    "text": "what else do we need to run a computer well there would be one more thing which would be super useful for us and this",
    "start": "1392480",
    "end": "1399360"
  },
  {
    "start": "1398000",
    "end": "1654000"
  },
  {
    "text": "one last thing is basically a memory because we would like to keep the memory we are not talking here about like you",
    "start": "1399360",
    "end": "1406400"
  },
  {
    "text": "know a non-volatile memory like a hard drive or something like this this is much closer to let's say some ram memory",
    "start": "1406400",
    "end": "1414240"
  },
  {
    "text": "like random access memory which can persist the bit for the duration of the",
    "start": "1414240",
    "end": "1419760"
  },
  {
    "text": "of the when the computer is turned on once we you know remove the electricity it can all collapse so uh",
    "start": "1419760",
    "end": "1426640"
  },
  {
    "text": "just like the ram can it can lose its content but this is okay for us because we'll be just",
    "start": "1426640",
    "end": "1432720"
  },
  {
    "text": "using it for the calculations so what we do here is we are going to build yet another slightly more sophisticated",
    "start": "1432720",
    "end": "1439200"
  },
  {
    "text": "circuit in which we are using two nor gates and we are going to build the so-called",
    "start": "1439200",
    "end": "1444559"
  },
  {
    "text": "reset set flip-flop so we do have two inputs uh one of them",
    "start": "1444559",
    "end": "1450240"
  },
  {
    "text": "actually this one at the top is called res a reset uh reset uh",
    "start": "1450240",
    "end": "1455600"
  },
  {
    "text": "input and sorry this is called the set input and the one at the bottom is called the",
    "start": "1455600",
    "end": "1461440"
  },
  {
    "text": "reset so what is happening here is you can see that initially in the circuit there is",
    "start": "1461440",
    "end": "1469279"
  },
  {
    "text": "some electricity flowing through here why because we do have not or gate which is",
    "start": "1469279",
    "end": "1475200"
  },
  {
    "text": "getting two zeros initially at the input so it must negate it so it's emitting",
    "start": "1475200",
    "end": "1480320"
  },
  {
    "text": "one and the other nor gate is emitting zero because it has one non-zero input",
    "start": "1480320",
    "end": "1487440"
  },
  {
    "text": "once we want to set the the bit of this memory and our",
    "start": "1487440",
    "end": "1493120"
  },
  {
    "text": "memory is basically this light switch the light bulb is our memory here once",
    "start": "1493120",
    "end": "1498159"
  },
  {
    "text": "we want to set it we basically close the circuit here so you can see that we do have",
    "start": "1498159",
    "end": "1504000"
  },
  {
    "text": "we do start by closing this so then one bit changes to to true signal so then",
    "start": "1504000",
    "end": "1511520"
  },
  {
    "text": "this nor gate will change to zero here because we will have zero here we will",
    "start": "1511520",
    "end": "1517120"
  },
  {
    "text": "have zero here zero here this nor gate will start emitting one and when this",
    "start": "1517120",
    "end": "1522559"
  },
  {
    "text": "one is being emitted here you can see that it's flowing as well here so this circuit will converge to the state we",
    "start": "1522559",
    "end": "1530000"
  },
  {
    "text": "have here at the top so we will have two ones zero here zero at the input and",
    "start": "1530000",
    "end": "1535440"
  },
  {
    "text": "then finally one here so this is where we start this is what happens once we set",
    "start": "1535440",
    "end": "1541279"
  },
  {
    "text": "the the thingy however the important part of the of this is that once we are",
    "start": "1541279",
    "end": "1547200"
  },
  {
    "text": "in this state we can basically close sorry open this input we can like",
    "start": "1547200",
    "end": "1554720"
  },
  {
    "text": "open this switch but notice that even though we did open this switch because we do have one being as an input here",
    "start": "1554720",
    "end": "1562960"
  },
  {
    "text": "we still have the electricity flowing at this point so our bulb at the very end",
    "start": "1562960",
    "end": "1568960"
  },
  {
    "text": "remains turned on so it remains emitting the light and this is effectively that",
    "start": "1568960",
    "end": "1574559"
  },
  {
    "text": "the beat remains being set it is still turned on even though we you",
    "start": "1574559",
    "end": "1580559"
  },
  {
    "text": "know we returned the circuit to the original state when it comes to the to the inputs",
    "start": "1580559",
    "end": "1586080"
  },
  {
    "text": "so this is said bit how it's how it works when it comes to resetting the bit",
    "start": "1586080",
    "end": "1591679"
  },
  {
    "text": "what we would like to do is we would like to reset it here so we would like to close the circuit here we will be",
    "start": "1591679",
    "end": "1598400"
  },
  {
    "text": "emitting one at this point so then here at the very end this will change to to",
    "start": "1598400",
    "end": "1604960"
  },
  {
    "text": "zero so because this changes to zero we'll have zero here we'll have zero here so then there will be one emitted",
    "start": "1604960",
    "end": "1612960"
  },
  {
    "text": "here and because of that the the the circuit will converge to the initial",
    "start": "1612960",
    "end": "1618480"
  },
  {
    "text": "state which we observed like here on the left which is basically electricity flowing only here and the bulb being",
    "start": "1618480",
    "end": "1625120"
  },
  {
    "text": "turned off so this is where we this is how we can build the memory using again",
    "start": "1625120",
    "end": "1632320"
  },
  {
    "text": "battery couple a piece of wire and couple light switches if needed",
    "start": "1632320",
    "end": "1638240"
  },
  {
    "text": "so what we have here now is boolean logic arithmetic clock memory",
    "start": "1638240",
    "end": "1644880"
  },
  {
    "text": "now what we need to do is it should be pretty understandable now but let's make it uh pretty obvious",
    "start": "1644880",
    "end": "1652159"
  },
  {
    "text": "and we'll skip this this slide and this light as well what we would like to do is we would like to build a bigger",
    "start": "1652159",
    "end": "1658720"
  },
  {
    "start": "1654000",
    "end": "1701000"
  },
  {
    "text": "memory how do we build a bigger memory well we know how to persist one single",
    "start": "1658720",
    "end": "1664880"
  },
  {
    "text": "bit of memory so we can persist multiple of them using the same principle just like we add",
    "start": "1664880",
    "end": "1671520"
  },
  {
    "text": "longer longer numbers by call by you know putting together multiple",
    "start": "1671520",
    "end": "1677360"
  },
  {
    "text": "others and half others the same way we persist more memory just by using more",
    "start": "1677360",
    "end": "1682720"
  },
  {
    "text": "flip-flops to do to do the magic and now what we would like to do is we",
    "start": "1682720",
    "end": "1688320"
  },
  {
    "text": "would like to start building the heart of our computer which is something like",
    "start": "1688320",
    "end": "1694159"
  },
  {
    "text": "an if condition so then it can recognize what the input is logically and then we",
    "start": "1694159",
    "end": "1700399"
  },
  {
    "text": "can start executing some instructions so we will do a free to added decoder",
    "start": "1700399",
    "end": "1705600"
  },
  {
    "text": "thingy which looks pretty pretty complex but effectively",
    "start": "1705600",
    "end": "1710640"
  },
  {
    "text": "once you decipher all the gates here it is super simple because what we would like to do is we do have an input which",
    "start": "1710640",
    "end": "1717840"
  },
  {
    "text": "is three bits of input and we would like to basically build a very big if else",
    "start": "1717840",
    "end": "1723520"
  },
  {
    "text": "condition which could tell us hey what is happening because imagine that now we",
    "start": "1723520",
    "end": "1728799"
  },
  {
    "text": "are building a very simple instruction set of our cpu so we do support eight",
    "start": "1728799",
    "end": "1734880"
  },
  {
    "text": "instructions like addition negation subtraction maybe some jump maybe",
    "start": "1734880",
    "end": "1741120"
  },
  {
    "text": "whatever else so we do want to recognize hey what instruction we should execute",
    "start": "1741120",
    "end": "1748720"
  },
  {
    "text": "and in order to do that in if we were to implement this using like a c-sharp language that the circuit on",
    "start": "1748720",
    "end": "1756080"
  },
  {
    "text": "the left is basically doing this cascade of if-else conditions because once you",
    "start": "1756080",
    "end": "1761679"
  },
  {
    "text": "figure out how these inputs here these three inputs are connected to the end",
    "start": "1761679",
    "end": "1766880"
  },
  {
    "text": "gates here you'll figure out that it's basically doing some",
    "start": "1766880",
    "end": "1771919"
  },
  {
    "text": "uh some conjunction uh checking whether we have like two three zeros here or three ones here at",
    "start": "1771919",
    "end": "1778399"
  },
  {
    "text": "the input and only one of these outputs will be",
    "start": "1778399",
    "end": "1783600"
  },
  {
    "text": "set to true only one of these outputs will be emitting the the current so only",
    "start": "1783600",
    "end": "1789279"
  },
  {
    "text": "like one light switch would be on and because of that we can use only one",
    "start": "1789279",
    "end": "1795279"
  },
  {
    "text": "output to to figure out which instruction is to be executed next you can imagine that",
    "start": "1795279",
    "end": "1801200"
  },
  {
    "text": "for instance this output would represent like the add instruction this output would represent something like negation",
    "start": "1801200",
    "end": "1808399"
  },
  {
    "text": "instruction etc etc so once we have this we are done",
    "start": "1808399",
    "end": "1814080"
  },
  {
    "text": "because we do have boolean logic we do have arithmetic we do have clock so we do have our",
    "start": "1814080",
    "end": "1820480"
  },
  {
    "text": "frequency and by using clock we can for instance set the speed of our cpu we do have memory and we know how to recognize",
    "start": "1820480",
    "end": "1828559"
  },
  {
    "text": "the instructions and just this is all we need to basically build a computer",
    "start": "1828559",
    "end": "1834159"
  },
  {
    "start": "1833000",
    "end": "1908000"
  },
  {
    "text": "and just like you know how to draw an old you draw some circles and then you do have an hole",
    "start": "1834159",
    "end": "1840559"
  },
  {
    "text": "this is how computer is constructed obviously it would be thousands of",
    "start": "1840559",
    "end": "1845760"
  },
  {
    "text": "thousands of light switches especially if we wanted to do some actual computations right because for",
    "start": "1845760",
    "end": "1852559"
  },
  {
    "text": "actual computations we probably need like a couple of registers which are like 16 or 32 bits long right so we",
    "start": "1852559",
    "end": "1860640"
  },
  {
    "text": "probably will need like plenty of light switches to represent them the same for instruction set eight instructions for",
    "start": "1860640",
    "end": "1867519"
  },
  {
    "text": "our cpu probably won't be enough we will need something like 100 instructions to",
    "start": "1867519",
    "end": "1872960"
  },
  {
    "text": "to do things efficiently so the the decoder would be way bigger and much",
    "start": "1872960",
    "end": "1878159"
  },
  {
    "text": "more sophisticated but the principle stays the same not to mention the memory if we would like to hold let's say one",
    "start": "1878159",
    "end": "1884559"
  },
  {
    "text": "kilobyte of memory you imagine it would be 1024 bits so that would be plenty of",
    "start": "1884559",
    "end": "1891360"
  },
  {
    "text": "flip-flops to hold the memory but apart from that we know all the principles now and we",
    "start": "1891360",
    "end": "1898320"
  },
  {
    "text": "can effectively uh start building these things so this is how computer starts",
    "start": "1898320",
    "end": "1904880"
  },
  {
    "text": "at la at least on the on the light switches level now",
    "start": "1904880",
    "end": "1910480"
  },
  {
    "start": "1908000",
    "end": "1997000"
  },
  {
    "text": "moving on to something a little more practical um not i'm not saying that",
    "start": "1910480",
    "end": "1915679"
  },
  {
    "text": "this is not practical but you would probably require a very big room to build the computer using light switches",
    "start": "1915679",
    "end": "1922559"
  },
  {
    "text": "and this is how actually how first computers were constructed they were pretty simple",
    "start": "1922559",
    "end": "1928720"
  },
  {
    "text": "in terms of size because well light switches wires batteries they do occupy",
    "start": "1928720",
    "end": "1934640"
  },
  {
    "text": "plenty of space and what allowed us to build computers",
    "start": "1934640",
    "end": "1939679"
  },
  {
    "text": "like for real was the invention of the transistor which could be built using",
    "start": "1939679",
    "end": "1945200"
  },
  {
    "text": "the semiconductors so when we take a look a quick bit of the physics level we do have things which are called",
    "start": "1945200",
    "end": "1951200"
  },
  {
    "text": "conductors insulators and semiconductors so conductors they do allow for passage",
    "start": "1951200",
    "end": "1957039"
  },
  {
    "text": "of electricity right so it is they are these are things which",
    "start": "1957039",
    "end": "1962480"
  },
  {
    "text": "we can use to basically kick the electrons so the electrons are flowing through the wire so the electricity is",
    "start": "1962480",
    "end": "1968799"
  },
  {
    "text": "is moving on we do have insulators which do not uh conduct the electricity and we",
    "start": "1968799",
    "end": "1974399"
  },
  {
    "text": "don't have semiconductors and semiconductors are not called semi",
    "start": "1974399",
    "end": "1979440"
  },
  {
    "text": "because they are working like half as well as the the regular conductors they are called semiconductors because we can",
    "start": "1979440",
    "end": "1986240"
  },
  {
    "text": "modify their characteristic we can dope them combine them with some other",
    "start": "1986240",
    "end": "1991919"
  },
  {
    "text": "particles other impurities so we can control how they behave",
    "start": "1991919",
    "end": "1997600"
  },
  {
    "start": "1997000",
    "end": "2096000"
  },
  {
    "text": "and then there was probably the biggest invention of 20th century which was by",
    "start": "1997600",
    "end": "2002799"
  },
  {
    "text": "shockley bardeen and brattan in 1947 which was the invention of npn",
    "start": "2002799",
    "end": "2008880"
  },
  {
    "text": "transistor and transistor is a very tricky thingy",
    "start": "2008880",
    "end": "2013919"
  },
  {
    "text": "which allows us to control the current by setting some voltage on the base",
    "start": "2013919",
    "end": "2019039"
  },
  {
    "text": "thingy and once we put the voltage on the base we can control how much current is flowing through collector to emitter",
    "start": "2019039",
    "end": "2026880"
  },
  {
    "text": "not going much into details how these things work you can just assume or or take this for granted that this npn",
    "start": "2026880",
    "end": "2034080"
  },
  {
    "text": "transistor can can do this magic and now once we have this transistor",
    "start": "2034080",
    "end": "2039600"
  },
  {
    "text": "what we can do is we can build everything what we built previously so we can start by building gates how do we",
    "start": "2039600",
    "end": "2046960"
  },
  {
    "text": "build gates with transistors the same way as previously so previously",
    "start": "2046960",
    "end": "2052320"
  },
  {
    "text": "we did have like a couple of we did have wires which were connected like serially",
    "start": "2052320",
    "end": "2057919"
  },
  {
    "text": "or in parallel and we did have the the light switch at the very end this",
    "start": "2057919",
    "end": "2063118"
  },
  {
    "text": "time instead of wires instead of light switches we just use the the transistors",
    "start": "2063119",
    "end": "2068720"
  },
  {
    "text": "but the principle stays the same we just need to connect the wires",
    "start": "2068720",
    "end": "2073760"
  },
  {
    "text": "in in given way to basically build the logical circuit and i won't be going",
    "start": "2073760",
    "end": "2079358"
  },
  {
    "text": "through all we constructed previously you can imagine that the same way we built the and gate the or gate we could",
    "start": "2079359",
    "end": "2086000"
  },
  {
    "text": "build arithmetic cpu decoder for instructions memory yada yada it work",
    "start": "2086000",
    "end": "2091760"
  },
  {
    "text": "all works on the on the same principle but the advantage of transistors",
    "start": "2091760",
    "end": "2098960"
  },
  {
    "start": "2096000",
    "end": "2166000"
  },
  {
    "text": "is that transistors are much smaller and we can",
    "start": "2098960",
    "end": "2104480"
  },
  {
    "text": "they do not emit that much of a heat as light switches would and even though they are pretty",
    "start": "2104480",
    "end": "2111040"
  },
  {
    "text": "expensive especially initially they were pretty expensive we can prefabricate the ready to be used",
    "start": "2111040",
    "end": "2118079"
  },
  {
    "text": "components called chips which are actually doing the things which we would like to do so we can",
    "start": "2118079",
    "end": "2124320"
  },
  {
    "text": "build a chip which is basically an other capable of adding like 80 digits eight binary digits or something like this or",
    "start": "2124320",
    "end": "2131440"
  },
  {
    "text": "chips doing other things like if condition yada yada and we still need to think about the interconnections between",
    "start": "2131440",
    "end": "2138160"
  },
  {
    "text": "transistors and if we minimize or if we if we change our construction process to",
    "start": "2138160",
    "end": "2145599"
  },
  {
    "text": "to fit more transistors in smaller space we'll probably need to deal with heat being emitted but apart from that this",
    "start": "2145599",
    "end": "2153440"
  },
  {
    "text": "actually allowed us to build things uh in the proper scale so we could finally",
    "start": "2153440",
    "end": "2159359"
  },
  {
    "text": "build a microcomputer computer which is small enough capable of doing the things we need",
    "start": "2159359",
    "end": "2166000"
  },
  {
    "start": "2166000",
    "end": "2224000"
  },
  {
    "text": "and and moving on once we get to this point so we can build a chip which is doing a simple",
    "start": "2166000",
    "end": "2173119"
  },
  {
    "text": "operation like addition we can start building more and more sophisticated",
    "start": "2173119",
    "end": "2178480"
  },
  {
    "text": "chips uh or or integrated circuits which we can just",
    "start": "2178480",
    "end": "2183760"
  },
  {
    "text": "you know take off the shelf buy them in the store and start building something bigger just like in",
    "start": "2183760",
    "end": "2190400"
  },
  {
    "text": "programming language we take the libraries for parsing json for sending http requests and we use them to build",
    "start": "2190400",
    "end": "2196960"
  },
  {
    "text": "something some business logic the same way here we just take a chip which is adding numbers and we can build build",
    "start": "2196960",
    "end": "2204240"
  },
  {
    "text": "something more there are multiple technologies for building these integrated circuits you probably heard",
    "start": "2204240",
    "end": "2209520"
  },
  {
    "text": "the abbreviations like ttl or cmos and everything around that is basically how",
    "start": "2209520",
    "end": "2215200"
  },
  {
    "text": "we build these things and then how how we can use them what characteristics they have to to to when we are building",
    "start": "2215200",
    "end": "2223200"
  },
  {
    "text": "that the full computer so this is all this basically closes the physical aspect of it",
    "start": "2223200",
    "end": "2230000"
  },
  {
    "start": "2224000",
    "end": "2469000"
  },
  {
    "text": "and you can realize you probably realize that like the physical aspect",
    "start": "2230000",
    "end": "2235119"
  },
  {
    "text": "we could think of it as of like a learning how to program like the basics of computer language like c-sharp",
    "start": "2235119",
    "end": "2242079"
  },
  {
    "text": "language right but what we now need to do is we need to come up with patterns like solid principles or patterns for",
    "start": "2242079",
    "end": "2248880"
  },
  {
    "text": "our integration between nodes or in distributed system or just basically the",
    "start": "2248880",
    "end": "2254079"
  },
  {
    "text": "ways to build things efficiently just like we build libraries or nugget packages in c sharp so this is where we",
    "start": "2254079",
    "end": "2261280"
  },
  {
    "text": "enter the world of computer architecture in which we'll basically see what other",
    "start": "2261280",
    "end": "2266640"
  },
  {
    "text": "standards had to be built in order for us to finally land where we are now",
    "start": "2266640",
    "end": "2273040"
  },
  {
    "text": "so computer is basically something like cpu so a unit which is capable of",
    "start": "2273040",
    "end": "2278480"
  },
  {
    "text": "calculating things ram as the memory some memory we where we can store",
    "start": "2278480",
    "end": "2283760"
  },
  {
    "text": "intermediate results some way of getting instructions into ram so we do have some input device it",
    "start": "2283760",
    "end": "2291359"
  },
  {
    "text": "doesn't necessarily matter whether it's like a tape or a hard drive or whatever else but there needs to be some input",
    "start": "2291359",
    "end": "2299280"
  },
  {
    "text": "which we can use there also need to be some output obviously we could use light",
    "start": "2299280",
    "end": "2304560"
  },
  {
    "text": "switches as an output we could use like a monitor screen display for an output",
    "start": "2304560",
    "end": "2310640"
  },
  {
    "text": "we could use something else as a printer but it means there is some output of the",
    "start": "2310640",
    "end": "2316160"
  },
  {
    "text": "calculations we have we could also use some non-volatile memory which is basically a storage like a hard drive we",
    "start": "2316160",
    "end": "2322960"
  },
  {
    "text": "could come up with other things which would use here for instance network cards which could be considered being an",
    "start": "2322960",
    "end": "2329440"
  },
  {
    "text": "output device or other things which probably uh we use every single day but these are the",
    "start": "2329440",
    "end": "2335760"
  },
  {
    "text": "things which we need to start with and all these things they need to communicate somehow now the question is",
    "start": "2335760",
    "end": "2341599"
  },
  {
    "text": "how we build the free to a decoder so we know how to interpret what the input is",
    "start": "2341599",
    "end": "2348800"
  },
  {
    "text": "and which instruction we should execute but now comes the thing how do we communicate between different devices",
    "start": "2348800",
    "end": "2355359"
  },
  {
    "text": "probably manufactured by different products like producers what we can do is we come up with a bus",
    "start": "2355359",
    "end": "2362640"
  },
  {
    "text": "and just like the same way you come up with like enterprise service bus to",
    "start": "2362640",
    "end": "2367839"
  },
  {
    "text": "connect your nodes or the http protocol to connect your machines",
    "start": "2367839",
    "end": "2373119"
  },
  {
    "text": "the same way we come up with a bus which basically is a standardized physical component which knows how to read the",
    "start": "2373119",
    "end": "2381200"
  },
  {
    "text": "input read the address and deliver the the data to some output",
    "start": "2381200",
    "end": "2387280"
  },
  {
    "text": "so we do have some bus which is connecting all the components and cpu can use some of the",
    "start": "2387280",
    "end": "2393920"
  },
  {
    "text": "registers of this bus or some of the physical inputs or basically light switches in our nomenclature for today",
    "start": "2393920",
    "end": "2401119"
  },
  {
    "text": "to indicate what the address it wants to access for instance and what the instruction it wants to perform so then",
    "start": "2401119",
    "end": "2408960"
  },
  {
    "text": "bus knows how to deliver this thingy for instance to the memory unit so then the",
    "start": "2408960",
    "end": "2415119"
  },
  {
    "text": "address is delivered to the memory and the memory component knows which light switches to read to to return data for",
    "start": "2415119",
    "end": "2422079"
  },
  {
    "text": "the cpu so this is the thing and the same way we divide or we come up with standards for",
    "start": "2422079",
    "end": "2428079"
  },
  {
    "text": "like logical things uh the same way bus buses have to be standardized and there",
    "start": "2428079",
    "end": "2434240"
  },
  {
    "text": "are multiple bus standards especially initially in early days all of these",
    "start": "2434240",
    "end": "2439920"
  },
  {
    "text": "standards were completely incompatible and they had to be you know battle tested and and people had to realize",
    "start": "2439920",
    "end": "2446880"
  },
  {
    "text": "which things can actually survive for slightly longer and so then we could",
    "start": "2446880",
    "end": "2452000"
  },
  {
    "text": "build on top of these things not to reinvent the bus every single time and",
    "start": "2452000",
    "end": "2458079"
  },
  {
    "text": "there are a couple for insta standards for instance the industry standard architecture isa which was designed by",
    "start": "2458079",
    "end": "2465359"
  },
  {
    "text": "ibm and which prevailed for for pretty long time once we have the bus once we have the",
    "start": "2465359",
    "end": "2472079"
  },
  {
    "start": "2469000",
    "end": "2537000"
  },
  {
    "text": "cpu uh we now need to figure out how we actually logically put these components",
    "start": "2472079",
    "end": "2478319"
  },
  {
    "text": "so they can interoperate and we come to the think code computer architecture",
    "start": "2478319",
    "end": "2484000"
  },
  {
    "text": "there are multiple architectures one of them which is the the most popular is called von neumann architecture so this",
    "start": "2484000",
    "end": "2491920"
  },
  {
    "text": "architecture basically specifies that there is some arithmetic logic unit",
    "start": "2491920",
    "end": "2497280"
  },
  {
    "text": "uh it basically describes how we have the motherboard with northbridge with southbridge how these things communicate",
    "start": "2497280",
    "end": "2504240"
  },
  {
    "text": "over bus etc etc and the thing which is the most important here is that how we",
    "start": "2504240",
    "end": "2510400"
  },
  {
    "text": "address the data and the instructions in our computer in von neumann architecture",
    "start": "2510400",
    "end": "2517760"
  },
  {
    "text": "both data and instructions are stored in the same storage and they they do have",
    "start": "2517760",
    "end": "2523760"
  },
  {
    "text": "one uh one address space meaning that we can take some data and use it as an",
    "start": "2523760",
    "end": "2530880"
  },
  {
    "text": "instruction or the opposite we can take the instruction and use it as a data",
    "start": "2530880",
    "end": "2536079"
  },
  {
    "text": "there are other architectures as well even though von neumann we typically say that our computers are based on von",
    "start": "2536079",
    "end": "2542720"
  },
  {
    "start": "2537000",
    "end": "2609000"
  },
  {
    "text": "neumann architecture it's not necessarily true because now our computers now are much more sophisticated we do have especially",
    "start": "2542720",
    "end": "2549680"
  },
  {
    "text": "caches and caches are technically modified harvard architecture so just",
    "start": "2549680",
    "end": "2555119"
  },
  {
    "text": "like we we did say about the addressing in von neumann modified harvard allows us to",
    "start": "2555119",
    "end": "2563200"
  },
  {
    "text": "separate or sorry the hardware separates the uh the addresses for",
    "start": "2563200",
    "end": "2568960"
  },
  {
    "text": "memory and separates the addresses for instructions so this is harvard",
    "start": "2568960",
    "end": "2574480"
  },
  {
    "text": "architecture however modified harvard at the architecture which is used for caches basically merges these things",
    "start": "2574480",
    "end": "2581760"
  },
  {
    "text": "together so these things are pretty flexible in terms of classification how",
    "start": "2581760",
    "end": "2587440"
  },
  {
    "text": "these things work we typically say that our computer is von neumann architecture this is not super precise but for our",
    "start": "2587440",
    "end": "2594800"
  },
  {
    "text": "needs it's it's good enough so once we do have this this architecture which is basically like a",
    "start": "2594800",
    "end": "2601119"
  },
  {
    "text": "logical plan of how we would like to build our computer we do have a bus",
    "start": "2601119",
    "end": "2606319"
  },
  {
    "text": "allowing us to communicate between the components what we need to build next is we would like to focus on improving our",
    "start": "2606319",
    "end": "2613839"
  },
  {
    "start": "2609000",
    "end": "2726000"
  },
  {
    "text": "cpus so they work faster better support more instructions",
    "start": "2613839",
    "end": "2619520"
  },
  {
    "text": "and cpu architecture is basically a term which is used in multiple contexts",
    "start": "2619520",
    "end": "2625440"
  },
  {
    "text": "typically when we take we only talk about ins about cpu architecture we",
    "start": "2625440",
    "end": "2630880"
  },
  {
    "text": "think about the instruction set architecture or even like more precisely",
    "start": "2630880",
    "end": "2636000"
  },
  {
    "text": "how big the the the numbers are this is what we typically think like when we say our architecture is 32-bit architecture",
    "start": "2636000",
    "end": "2643680"
  },
  {
    "text": "or 64-bit architecture this is what we typically think of however it's not not",
    "start": "2643680",
    "end": "2649359"
  },
  {
    "text": "enough because architecture specifies how the cpu works in general",
    "start": "2649359",
    "end": "2656400"
  },
  {
    "text": "what is the pipeline what instructions are allowed how instructions are executed ordered how they how fast they",
    "start": "2656400",
    "end": "2663200"
  },
  {
    "text": "run etc etc all these things are basically important for the cpu and",
    "start": "2663200",
    "end": "2668640"
  },
  {
    "text": "thanks to the long history of of computers we have now we don't need to think about all these things however in",
    "start": "2668640",
    "end": "2675760"
  },
  {
    "text": "early days uh in last century all these things obviously were super inconsistent",
    "start": "2675760",
    "end": "2681920"
  },
  {
    "text": "each cpu was running on different architecture and now when you think that you have issues because your application",
    "start": "2681920",
    "end": "2688160"
  },
  {
    "text": "is not portable from windows to linux you typically do not have the issues which appeared or which were",
    "start": "2688160",
    "end": "2695359"
  },
  {
    "text": "prevalent in in previous century which was like our applications were not compatible between two cpus",
    "start": "2695359",
    "end": "2702800"
  },
  {
    "text": "currently all the cpus they are standardized for us so we are happy enough to to not think about that but",
    "start": "2702800",
    "end": "2709040"
  },
  {
    "text": "previously like you could be writing your application using some very low level language and then",
    "start": "2709040",
    "end": "2715760"
  },
  {
    "text": "ibm comes up with diff or intel comes up with new cpu and you basically need to",
    "start": "2715760",
    "end": "2721839"
  },
  {
    "text": "rewrite everything from scratch because instructions are completely different",
    "start": "2721839",
    "end": "2726880"
  },
  {
    "start": "2726000",
    "end": "2752000"
  },
  {
    "text": "uh so the instructions at architecture what it specifies is it tells what data",
    "start": "2726880",
    "end": "2732160"
  },
  {
    "text": "types are available which registers we can use and how they behave depending on",
    "start": "2732160",
    "end": "2737680"
  },
  {
    "text": "the instructions which we execute how the hardware for memory works etc what",
    "start": "2737680",
    "end": "2742960"
  },
  {
    "text": "the memory consistency is etc etc all these things uh we can classify",
    "start": "2742960",
    "end": "2749599"
  },
  {
    "text": "depending on the architectural complexity and there are multiple like acronyms you",
    "start": "2749599",
    "end": "2755280"
  },
  {
    "start": "2752000",
    "end": "2915000"
  },
  {
    "text": "may have heard of and for instance we typically say that our computers or our",
    "start": "2755280",
    "end": "2761520"
  },
  {
    "text": "cpus currently they run using so-called complex instruction set computer so sisk",
    "start": "2761520",
    "end": "2768560"
  },
  {
    "text": "instructions so cisc instructions if you ever like read the assembly code",
    "start": "2768560",
    "end": "2774800"
  },
  {
    "text": "you probably noticed that each instruction may have completely different length for instance the knob",
    "start": "2774800",
    "end": "2780079"
  },
  {
    "text": "instruction is just one byte but for instance jump instruction should be",
    "start": "2780079",
    "end": "2785119"
  },
  {
    "text": "something like five or nine bytes depending whether you are running in 32 or 64 bit because it's telling hey i",
    "start": "2785119",
    "end": "2791680"
  },
  {
    "text": "need to jump and then it specifies the address and there are so many different",
    "start": "2791680",
    "end": "2798160"
  },
  {
    "text": "instructions available to us in the cpus for instance some of them are like for encryption some of them are for",
    "start": "2798160",
    "end": "2804000"
  },
  {
    "text": "calculations etc and intel adds more and more instructions with each new new cpu",
    "start": "2804000",
    "end": "2810400"
  },
  {
    "text": "unit why is that because well we would like to do more with less instructions",
    "start": "2810400",
    "end": "2815920"
  },
  {
    "text": "if we can specify that like one instruction is for whole aes encryption that's perfect for programmers not",
    "start": "2815920",
    "end": "2822800"
  },
  {
    "text": "necessarily perfect for cpu why because cpu in order to run fast and",
    "start": "2822800",
    "end": "2828560"
  },
  {
    "text": "efficiently it would like to know exactly how long each instruction takes",
    "start": "2828560",
    "end": "2834480"
  },
  {
    "text": "and it would like instructions to be consistent so that's why we do have some other instructions at architecture which",
    "start": "2834480",
    "end": "2840480"
  },
  {
    "text": "is called risk reduced instruction set computer which basically uses like",
    "start": "2840480",
    "end": "2846160"
  },
  {
    "text": "many less instructions which are all typically of the same length and they",
    "start": "2846160",
    "end": "2851520"
  },
  {
    "text": "are much more basic like in cisc computer we may have instruction which is used to encrypt the data using aes",
    "start": "2851520",
    "end": "2859200"
  },
  {
    "text": "in risk instruction we will have only basic operations like attitude numbers or something like this",
    "start": "2859200",
    "end": "2865760"
  },
  {
    "text": "and we typically say just like with von neumann architecture we say our computers are based on von neumann",
    "start": "2865760",
    "end": "2871440"
  },
  {
    "text": "architecture we typically say that intel cpus they are cisc",
    "start": "2871440",
    "end": "2876800"
  },
  {
    "text": "cisc instruction sets this is not necessarily true again because under the hood these instructions are translated",
    "start": "2876800",
    "end": "2884079"
  },
  {
    "text": "to risk instructions so effectively cpu runs on the risk however for us",
    "start": "2884079",
    "end": "2889119"
  },
  {
    "text": "programmers what is exposed is the sisk instruction set now also other architectures",
    "start": "2889119",
    "end": "2896000"
  },
  {
    "text": "like epic or or very long instruction word yada yada",
    "start": "2896000",
    "end": "2901200"
  },
  {
    "text": "obviously they were alive for some specific use cases but now prevalent and",
    "start": "2901200",
    "end": "2907040"
  },
  {
    "text": "prevalent architectures we are talking about is the instruct are the architectures based on the",
    "start": "2907040",
    "end": "2912480"
  },
  {
    "text": "8086 processors which we'll get to that in a sec so a short history about ibm pc so so",
    "start": "2912480",
    "end": "2919839"
  },
  {
    "start": "2915000",
    "end": "2999000"
  },
  {
    "text": "ibm and intel they were producing components which changed the world and shaped the future for many years so in",
    "start": "2919839",
    "end": "2926839"
  },
  {
    "text": "1974 there was the 8-bit microprocessor called 8080. uh it was used by the first",
    "start": "2926839",
    "end": "2933920"
  },
  {
    "text": "home computer like author 8000 and then based on this cpu intel finally decided",
    "start": "2933920",
    "end": "2940960"
  },
  {
    "text": "to stop changing the instructions or architectures with every single cpu they",
    "start": "2940960",
    "end": "2946640"
  },
  {
    "text": "started maintaining a piece of compatibility with previous solutions so they built 8085 which was 8-bit",
    "start": "2946640",
    "end": "2953839"
  },
  {
    "text": "microprocessor fully compatible with 8080 and then 8086 which was a big step",
    "start": "2953839",
    "end": "2960240"
  },
  {
    "text": "forward because it was 16 bit microprocessor so it could address much more memory",
    "start": "2960240",
    "end": "2965920"
  },
  {
    "text": "uh however 8086 was not compatible with 8080 and then 8088 was constructed which",
    "start": "2965920",
    "end": "2973359"
  },
  {
    "text": "was 16 bit and also which was compatible with 8080 and this 8088 cpu was used in the thing",
    "start": "2973359",
    "end": "2981920"
  },
  {
    "text": "which we call the personal computer the pc which was 5150 personal computer",
    "start": "2981920",
    "end": "2987440"
  },
  {
    "text": "built by ibm so this is how these things started and around this 1979 1980 we",
    "start": "2987440",
    "end": "2994640"
  },
  {
    "text": "finally had some architecture we could build upon and maintain the backwards compatibility and this is where the x86",
    "start": "2994640",
    "end": "3002480"
  },
  {
    "start": "2999000",
    "end": "3132000"
  },
  {
    "text": "and amd64 architectures come from so 8x this a x86 architecture is 16-bit cisc",
    "start": "3002480",
    "end": "3011200"
  },
  {
    "text": "architecture based on these old processors which we just covered and then 32-bit extension was built by intel",
    "start": "3011200",
    "end": "3018800"
  },
  {
    "text": "and this is what we call 32-bit architecture or typically we call it just x86 even though it's ia32 intel",
    "start": "3018800",
    "end": "3026720"
  },
  {
    "text": "architecture 32 or x86-32 to be precise",
    "start": "3026720",
    "end": "3031920"
  },
  {
    "text": "then intel experimented with new architecture which was based on 64 bits they coded",
    "start": "3031920",
    "end": "3039400"
  },
  {
    "text": "ia64 and it was built on completely different principles it was still compatible capable of running 32-bit",
    "start": "3039400",
    "end": "3047119"
  },
  {
    "text": "programs but it wasn't as fast as it could be so they dropped it because at the same time",
    "start": "3047119",
    "end": "3053200"
  },
  {
    "text": "amd built the extension for 64 bits which was called amd64",
    "start": "3053200",
    "end": "3058559"
  },
  {
    "text": "and this is what we called x64 now so 64-bit architecture",
    "start": "3058559",
    "end": "3063839"
  },
  {
    "text": "compatible with old 8080 processors so then intel took this amd 64 extension",
    "start": "3063839",
    "end": "3070400"
  },
  {
    "text": "built their own intel 64 or em64t adayada and and this is where we are now",
    "start": "3070400",
    "end": "3077680"
  },
  {
    "text": "obviously you probably heard about different architecture which is called arm which is in your mobile phones this",
    "start": "3077680",
    "end": "3083920"
  },
  {
    "text": "is completely different from this thingy this is completely independent but you know the principles you now understand",
    "start": "3083920",
    "end": "3090480"
  },
  {
    "text": "what the different might be between x86 or arms so the instruction set or how the memory is constructed",
    "start": "3090480",
    "end": "3098480"
  },
  {
    "text": "and that also explains why for instance when microsoft released the windows for arm",
    "start": "3098960",
    "end": "3105200"
  },
  {
    "text": "applications running on the regular windows were not like windows was unable",
    "start": "3105200",
    "end": "3110559"
  },
  {
    "text": "to run them on arm why because these two architectures are incompatible and this is incompatibility of on a very low",
    "start": "3110559",
    "end": "3118960"
  },
  {
    "text": "level which dictates basically anything what happens in the computer so it's not",
    "start": "3118960",
    "end": "3125920"
  },
  {
    "text": "as simple as just changing you know linux to windows it's actually much much bigger bigger thing to support",
    "start": "3125920",
    "end": "3133680"
  },
  {
    "start": "3132000",
    "end": "3214000"
  },
  {
    "text": "um so this is where we more or less started and what also happens when we develop cpus is we would like to have as",
    "start": "3133680",
    "end": "3140640"
  },
  {
    "text": "powerful instructions as possible so the ssc or other for instance avx there are",
    "start": "3140640",
    "end": "3147280"
  },
  {
    "text": "basically instructions which are capable of doing more with less instructions so",
    "start": "3147280",
    "end": "3153119"
  },
  {
    "text": "for instance they allow you to encrypt data using aes they can add vectors they",
    "start": "3153119",
    "end": "3158960"
  },
  {
    "text": "can add very big numbers in one go and the the advantage of these",
    "start": "3158960",
    "end": "3164000"
  },
  {
    "text": "instructions is they are executed physically natively by the cpu so they",
    "start": "3164000",
    "end": "3169599"
  },
  {
    "text": "are pretty fast we can emulate them using using software",
    "start": "3169599",
    "end": "3175280"
  },
  {
    "text": "but but it's much slower than so even if your cpu doesn't support them you may",
    "start": "3175280",
    "end": "3180800"
  },
  {
    "text": "still be able to run your applications however it will be much slower than the",
    "start": "3180800",
    "end": "3185839"
  },
  {
    "text": "native physical support one example of this is when you are trying to virtualize",
    "start": "3185839",
    "end": "3192160"
  },
  {
    "text": "something like virtualizing your your virtual machine if you do have physical support it is done by some instruction",
    "start": "3192160",
    "end": "3200160"
  },
  {
    "text": "set in the cpu so if you do have the support and then your virtual machines",
    "start": "3200160",
    "end": "3205760"
  },
  {
    "text": "will run way faster if you do not have the support virtual machines will still run but they will be much slower because",
    "start": "3205760",
    "end": "3212800"
  },
  {
    "text": "things need to be emulated and then it's time to finally cover a",
    "start": "3212800",
    "end": "3217839"
  },
  {
    "start": "3214000",
    "end": "3318000"
  },
  {
    "text": "couple of different codes we have so we typically say that we program in high",
    "start": "3217839",
    "end": "3222960"
  },
  {
    "text": "level code so there must be also some low level code and let's go through all these",
    "start": "3222960",
    "end": "3228880"
  },
  {
    "text": "codes starting from the lowest possible level so even below the machine level code",
    "start": "3228880",
    "end": "3234720"
  },
  {
    "text": "which you can write on your cpu there is a thing which is called microcode this microcode is something which is",
    "start": "3234720",
    "end": "3241440"
  },
  {
    "text": "implemented directly in the cpu and this is also some different type of",
    "start": "3241440",
    "end": "3246800"
  },
  {
    "text": "programming for instance in this microcode things which are written are to translate",
    "start": "3246800",
    "end": "3251920"
  },
  {
    "text": "things cisg instructions to risk instructions etc they are obviously completely not portable because they",
    "start": "3251920",
    "end": "3258240"
  },
  {
    "text": "depend on the cpu you're running on implementing these things is relatively high relatively hard and more complex",
    "start": "3258240",
    "end": "3266480"
  },
  {
    "text": "than than implementing anything even in like assembly language but the funny thing or interesting thing",
    "start": "3266480",
    "end": "3272960"
  },
  {
    "text": "is this microcode in cpu physical chips can be updated using like windows or linux",
    "start": "3272960",
    "end": "3279359"
  },
  {
    "text": "updates so basically when you download windows updates some of these updates",
    "start": "3279359",
    "end": "3284640"
  },
  {
    "text": "they do go and update your cpu code this is especially visible when we do have",
    "start": "3284640",
    "end": "3290319"
  },
  {
    "text": "some security issues uh for instance hard bleed or something else",
    "start": "3290319",
    "end": "3295440"
  },
  {
    "text": "there is at the the updates for the microcode of the cpu may be",
    "start": "3295440",
    "end": "3301920"
  },
  {
    "text": "distributed or will be distributed using the regular windows updates to enable or disable or change the things how they",
    "start": "3301920",
    "end": "3308640"
  },
  {
    "text": "work and this is something we as a regular programmers we cannot touch at",
    "start": "3308640",
    "end": "3314160"
  },
  {
    "text": "all in most of the cases like we physically cannot touch this at all then we have some machine code this is",
    "start": "3314160",
    "end": "3321599"
  },
  {
    "start": "3318000",
    "end": "3372000"
  },
  {
    "text": "the code which we written using the our bulbs so this was could be uh seen as",
    "start": "3321599",
    "end": "3328079"
  },
  {
    "text": "the the you know composition of gates uh which we constructed initially during",
    "start": "3328079",
    "end": "3333440"
  },
  {
    "text": "this talk the machine code which is different than the assembly language because machine",
    "start": "3333440",
    "end": "3339040"
  },
  {
    "text": "code needs to be even more specific like in assembly language you just say hey add these two registers",
    "start": "3339040",
    "end": "3346000"
  },
  {
    "text": "but the machine code needs to be precise to specify exactly which registers because there is different instruction",
    "start": "3346000",
    "end": "3352160"
  },
  {
    "text": "to add registers eax and ebx then instruction to add eax and ecx so it's",
    "start": "3352160",
    "end": "3359119"
  },
  {
    "text": "rarely written by hand mostly emitted by compilers etc things are basically based",
    "start": "3359119",
    "end": "3364240"
  },
  {
    "text": "on numbers hard to read hard to write but we in theory can generate it and",
    "start": "3364240",
    "end": "3369599"
  },
  {
    "text": "compilers do generate it then we do have an assembly language the",
    "start": "3369599",
    "end": "3374880"
  },
  {
    "start": "3372000",
    "end": "3387000"
  },
  {
    "text": "typical assembler you have so mob add sub instructions or the things this can",
    "start": "3374880",
    "end": "3380079"
  },
  {
    "text": "be accessed by the by the developers even in like kernel mode or user mode so",
    "start": "3380079",
    "end": "3385200"
  },
  {
    "text": "in the operating system level mode or the user space then on top of that",
    "start": "3385200",
    "end": "3390400"
  },
  {
    "start": "3387000",
    "end": "3427000"
  },
  {
    "text": "our operating systems they do provide some api once again some standards to to",
    "start": "3390400",
    "end": "3396400"
  },
  {
    "text": "simplify the way we implement things one of the standards is a win api the other",
    "start": "3396400",
    "end": "3401440"
  },
  {
    "text": "is it posix so we do have these standards and we this allows us to implement applications",
    "start": "3401440",
    "end": "3407520"
  },
  {
    "text": "which are portable so we can take the posix application from windows to linux or the other way and in theory they",
    "start": "3407520",
    "end": "3414319"
  },
  {
    "text": "should work properly still we can access this api obviously uh like directly uh",
    "start": "3414319",
    "end": "3421440"
  },
  {
    "text": "using for instance c plus plus language or in kernel mode through drivers or whatever else",
    "start": "3421440",
    "end": "3427599"
  },
  {
    "text": "and when we are talking user and kernel mode the difference between these two is just how cpu allows you to access like",
    "start": "3427599",
    "end": "3435200"
  },
  {
    "text": "memory on the or devices we won't be getting more into details for this",
    "start": "3435200",
    "end": "3440799"
  },
  {
    "text": "uh this is just for security for most of the times and your cpu initially when",
    "start": "3440799",
    "end": "3446000"
  },
  {
    "text": "you like press the power button initially when you start your machine and the code which runs there needs to",
    "start": "3446000",
    "end": "3453040"
  },
  {
    "text": "configure these rings and this mode so the cpu is protected from like malicious user",
    "start": "3453040",
    "end": "3459520"
  },
  {
    "text": "space code and then we get very high uh to the user mode native",
    "start": "3459520",
    "end": "3466640"
  },
  {
    "start": "3460000",
    "end": "3491000"
  },
  {
    "text": "applications so this is basically like user space applications written in some native language like c plus plus or del",
    "start": "3466640",
    "end": "3474319"
  },
  {
    "text": "phi so these applications they typically use something like c plus plus runtime or win api directly or whatever else to",
    "start": "3474319",
    "end": "3481680"
  },
  {
    "text": "do their job so you can already see that there are so many layers under the hood",
    "start": "3481680",
    "end": "3487359"
  },
  {
    "text": "for these native applications as we call them and then on top of that we build the",
    "start": "3487359",
    "end": "3494319"
  },
  {
    "start": "3491000",
    "end": "3530000"
  },
  {
    "text": "managed applications so we build a managed platform like java virtual machine clr effort.net or web browser or",
    "start": "3494319",
    "end": "3502160"
  },
  {
    "text": "python virtual machines or whatever else they typically cover all the operating",
    "start": "3502160",
    "end": "3507200"
  },
  {
    "text": "system functions and apis with the managed api so then programmers",
    "start": "3507200",
    "end": "3512799"
  },
  {
    "text": "typically don't want to or don't need to access the low level operating system apis right we do have we can do the",
    "start": "3512799",
    "end": "3520400"
  },
  {
    "text": "interrupt thing is but we typically don't need to because dot net covers all of that",
    "start": "3520400",
    "end": "3525839"
  },
  {
    "text": "and on top of that on this jvm or clr which runs using bytecode we get to them",
    "start": "3525839",
    "end": "3532000"
  },
  {
    "start": "3530000",
    "end": "3546000"
  },
  {
    "text": "manage the languages so there could be we could use clr language directly or bytecode in jvm",
    "start": "3532000",
    "end": "3540000"
  },
  {
    "text": "directly and the application the platform would make sure that that the application is correct we do not crash",
    "start": "3540000",
    "end": "3545920"
  },
  {
    "text": "the memory etc but we finally land with high level manage the language which is",
    "start": "3545920",
    "end": "3551200"
  },
  {
    "start": "3546000",
    "end": "3561000"
  },
  {
    "text": "c sharp or java which is typically portable which covers all the quirks of the",
    "start": "3551200",
    "end": "3557200"
  },
  {
    "text": "platform hides all the details of the cpu so to sum up going from the high level",
    "start": "3557200",
    "end": "3563760"
  },
  {
    "text": "to the lowest possible level we write the application in some high level managed language like c-sharp which is",
    "start": "3563760",
    "end": "3569839"
  },
  {
    "text": "then compiled to low-level managed language like intermediate language and",
    "start": "3569839",
    "end": "3575040"
  },
  {
    "text": "clr which then runs is compiled using just-in-time compiler to machine code",
    "start": "3575040",
    "end": "3580880"
  },
  {
    "text": "running in user space which caused the operating system functions like win api",
    "start": "3580880",
    "end": "3586400"
  },
  {
    "text": "then these win api functions then switch from user space to kernel space",
    "start": "3586400",
    "end": "3591440"
  },
  {
    "text": "and in the kernel space they typically run some assembly code which is compiled",
    "start": "3591440",
    "end": "3596480"
  },
  {
    "text": "to the machine code then the machine code is fetched by the cpu",
    "start": "3596480",
    "end": "3601760"
  },
  {
    "text": "translated to micro operations and to the microcode and these micro operations",
    "start": "3601760",
    "end": "3607760"
  },
  {
    "text": "are finally executed using the transistors or using the light switches",
    "start": "3607760",
    "end": "3613200"
  },
  {
    "text": "where we started so we made a very big leap from the computer which we built",
    "start": "3613200",
    "end": "3618880"
  },
  {
    "text": "but at the very end under the hood what happens there is we still have the same",
    "start": "3618880",
    "end": "3623920"
  },
  {
    "text": "things boolean logic arithmetic decoder for instructions some",
    "start": "3623920",
    "end": "3629520"
  },
  {
    "text": "flip-flops for memory and all these things connected with wires with light",
    "start": "3629520",
    "end": "3634960"
  },
  {
    "text": "switches etc to to run the the code",
    "start": "3634960",
    "end": "3640000"
  },
  {
    "text": "so even though it's constructed way differently because we don't use light switches we use the transistors we use",
    "start": "3640000",
    "end": "3646240"
  },
  {
    "text": "so many sophisticated things to make this run fast the principles they are still the same",
    "start": "3646240",
    "end": "3653200"
  },
  {
    "text": "so summary computer even though it sounds tricky once we start with these gates it's",
    "start": "3653200",
    "end": "3658880"
  },
  {
    "text": "relatively simple concept and it took many years to cover all these simple",
    "start": "3658880",
    "end": "3664799"
  },
  {
    "text": "concepts so they are standardized and we can use them together efficiently",
    "start": "3664799",
    "end": "3670400"
  },
  {
    "text": "and however now we are in much better shape because we are not exposed to all these things even though they",
    "start": "3670400",
    "end": "3676960"
  },
  {
    "text": "are still there but we don't need to think about them that's thanks to standards and this is how computer",
    "start": "3676960",
    "end": "3682640"
  },
  {
    "text": "science or software engineering typically works that we build more and more abstractions on the lower level",
    "start": "3682640",
    "end": "3689119"
  },
  {
    "text": "layers q a i don't see any questions here in the",
    "start": "3689119",
    "end": "3695280"
  },
  {
    "text": "chat room i don't see any questions in the slack channel feel free to drop me these questions later in the slack",
    "start": "3695280",
    "end": "3701599"
  },
  {
    "text": "channel i'm happy to answer all of them uh and yeah let's wrap this up",
    "start": "3701599",
    "end": "3707119"
  },
  {
    "text": "typically i recommend some books or some links which you could read to to for to learn",
    "start": "3707119",
    "end": "3713920"
  },
  {
    "text": "more about the things i covered there is a fantastic book by charles plattson which is called code the hidden language",
    "start": "3713920",
    "end": "3720480"
  },
  {
    "text": "of computer hardware and software actually images in this talk they come from this book as well",
    "start": "3720480",
    "end": "3727200"
  },
  {
    "text": "and it really covers plenty of these things and also is a very interesting read for the history if you would like",
    "start": "3727200",
    "end": "3733039"
  },
  {
    "text": "to learn how hard things were back then how these things evolved how the standards were introduced this book is",
    "start": "3733039",
    "end": "3739440"
  },
  {
    "text": "really a fantastic read to to understand all these all these things and having said all of that it's time to",
    "start": "3739440",
    "end": "3747280"
  },
  {
    "text": "to finish this talk uh so my name is adam furmaneg and i'd like to thank you for attending this talk hope you enjoyed",
    "start": "3747280",
    "end": "3753520"
  },
  {
    "text": "it and i wish you all the best and enjoy your day at ndc conference",
    "start": "3753520",
    "end": "3760200"
  }
]