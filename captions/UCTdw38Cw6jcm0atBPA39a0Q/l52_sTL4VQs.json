[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "yeah it was kind of expected but you know what you can save about 420 to just",
    "start": "9380",
    "end": "16789"
  },
  {
    "text": "get started on the last day on Friday we'll do that probably in Norway and in",
    "start": "16789",
    "end": "26570"
  },
  {
    "text": "Minnesota as well so slightly different version because we make progress almost",
    "start": "26570",
    "end": "31849"
  },
  {
    "text": "on a daily basis but so should we get",
    "start": "31849",
    "end": "38449"
  },
  {
    "text": "started folks I just need the signal",
    "start": "38449",
    "end": "45649"
  },
  {
    "text": "from them so okay so welcome to",
    "start": "45649",
    "end": "52480"
  },
  {
    "text": "distributed tracing using open census and I would like to start from the",
    "start": "52480",
    "end": "61250"
  },
  {
    "start": "56000",
    "end": "56000"
  },
  {
    "text": "Lehman law so mayor Lehman was the professor here in Imperial College in",
    "start": "61250",
    "end": "68090"
  },
  {
    "text": "London and he formulated a set of laws about software evolution later being",
    "start": "68090",
    "end": "75560"
  },
  {
    "text": "called Lehman laws one of his law said that the change in software is",
    "start": "75560",
    "end": "81049"
  },
  {
    "text": "inevitable and it's and the software is gonna change no matter what it doesn't",
    "start": "81049",
    "end": "86450"
  },
  {
    "text": "really depend on a bad design a bad implementation it just that the software naturally has to evolve and as a result",
    "start": "86450",
    "end": "94250"
  },
  {
    "text": "it has to change so it's not surprising that in the last 20 plus years we were",
    "start": "94250",
    "end": "101320"
  },
  {
    "text": "seeing revolution in in software and in hardware if previously we were running",
    "start": "101320",
    "end": "107869"
  },
  {
    "text": "our code on premises on dedicated hardware now we do it on the cloud we",
    "start": "107869",
    "end": "113540"
  },
  {
    "text": "were running on virtual machines in the cloud but today we kind of moved towards",
    "start": "113540",
    "end": "119450"
  },
  {
    "text": "the containers world so that we reduce the footprint of our workloads and they improve efficiency",
    "start": "119450",
    "end": "125539"
  },
  {
    "text": "we were running monolith applications which were deployed as a single unit",
    "start": "125539",
    "end": "131030"
  },
  {
    "text": "were really hard to scale and today we tend to develop more in the",
    "start": "131030",
    "end": "136430"
  },
  {
    "text": "micro-services style which means that every micro this could be developed by a different",
    "start": "136430",
    "end": "141900"
  },
  {
    "text": "team and deployed separately and scaled in much more efficient way we used to",
    "start": "141900",
    "end": "147690"
  },
  {
    "text": "develop using a single stock single language and today it's much more common",
    "start": "147690",
    "end": "153780"
  },
  {
    "text": "to see services where you have a go Python Java and some other languages",
    "start": "153780",
    "end": "159200"
  },
  {
    "text": "mixed together because multiple teams could create software using different",
    "start": "159200",
    "end": "165690"
  },
  {
    "text": "languages of expertise and so we see polyglot services we used to run things",
    "start": "165690",
    "end": "173310"
  },
  {
    "text": "in the single cloud but today actually many companies are looking for moving",
    "start": "173310",
    "end": "180060"
  },
  {
    "text": "into multiple cloud solutions for redundancy and making sure that their",
    "start": "180060",
    "end": "185760"
  },
  {
    "text": "applications will always work despite the outages that could happen from time to time there is even a second layer of",
    "start": "185760",
    "end": "196640"
  },
  {
    "text": "evolution where we move from the containers world into the server list",
    "start": "196640",
    "end": "201810"
  },
  {
    "text": "world where we don't need to focus on how to run our infrastructure but we",
    "start": "201810",
    "end": "206819"
  },
  {
    "text": "mostly focus on the actual function that we want to implement and somebody else takes care of the infrastructure now",
    "start": "206819",
    "end": "214620"
  },
  {
    "start": "214000",
    "end": "214000"
  },
  {
    "text": "with all those new architectures and the new evolution curve also new challenges",
    "start": "214620",
    "end": "220370"
  },
  {
    "text": "how do we debug software in this new world how we detect problems and how do",
    "start": "220370",
    "end": "227670"
  },
  {
    "text": "we understand that the problem has happened and what that problem could be how do we develop maybe our development",
    "start": "227670",
    "end": "235500"
  },
  {
    "text": "practices should change as a result of this evolution how do we package the software how do we deal with secrets and",
    "start": "235500",
    "end": "242760"
  },
  {
    "text": "configuration management it's a lot of problems and obviously I can cover all of that in one lecture so we'll try to",
    "start": "242760",
    "end": "250079"
  },
  {
    "text": "focus today on observability and before we delve into that I'd like to introduce",
    "start": "250079",
    "end": "257010"
  },
  {
    "text": "myself so I am Simon Seltzer software engineer working on improving",
    "start": "257010",
    "end": "262320"
  },
  {
    "text": "developer experience with infrastructure and operations products in Google cloud",
    "start": "262320",
    "end": "268910"
  },
  {
    "start": "269000",
    "end": "269000"
  },
  {
    "text": "so observability what it is I think the easier way probably to define that is being",
    "start": "269419",
    "end": "276860"
  },
  {
    "text": "able to debug the system and gain insights into the system's behavior now",
    "start": "276860",
    "end": "283610"
  },
  {
    "text": "some folks things that observability is just a new way to say testing or to say",
    "start": "283610",
    "end": "290389"
  },
  {
    "text": "monitoring every couple of years we tend to invent new terms and we try to kind",
    "start": "290389",
    "end": "296510"
  },
  {
    "text": "of give new meaning into the concepts that we already know but that is actually not true and Cindy Frieda run",
    "start": "296510",
    "end": "303440"
  },
  {
    "text": "came up with really nice Venn diagram that illustrates that observability it's not just testing and it's not just",
    "start": "303440",
    "end": "310280"
  },
  {
    "text": "monitoring it's about understanding the root cause of the problem on every",
    "start": "310280",
    "end": "316040"
  },
  {
    "text": "single stage that this problem could happen before we deployed up their problem so we do some testing also after",
    "start": "316040",
    "end": "323270"
  },
  {
    "text": "we deploy so we can run some monitors to detect predicted failures all of the",
    "start": "323270",
    "end": "329389"
  },
  {
    "text": "things are covered in observability so it's not just a new world now Baron",
    "start": "329389",
    "end": "335630"
  },
  {
    "text": "Schwarz he is very known for his contributions to my sequel once said",
    "start": "335630",
    "end": "341479"
  },
  {
    "text": "that monitoring tells you whether the system works observability lets you ask",
    "start": "341479",
    "end": "347300"
  },
  {
    "text": "why it's not working so I think if you remember that it will give you a really",
    "start": "347300",
    "end": "352430"
  },
  {
    "text": "good picture of what we are going to talk about now with observability we",
    "start": "352430",
    "end": "358490"
  },
  {
    "text": "usually want to take the holistic approach we want to gather all the signals that could be available for our",
    "start": "358490",
    "end": "364610"
  },
  {
    "text": "systems and put them all into the single timeline be it logs metrics traces",
    "start": "364610",
    "end": "372130"
  },
  {
    "text": "profiling information where we can just profile the system for CPU and memory",
    "start": "372130",
    "end": "380479"
  },
  {
    "text": "allocation for every method that gets executed as part of our code passes so",
    "start": "380479",
    "end": "386389"
  },
  {
    "text": "we just want to take all the signals put them together on the same timeline and then get some meaning out of that now",
    "start": "386389",
    "end": "394520"
  },
  {
    "start": "394000",
    "end": "394000"
  },
  {
    "text": "what if I tell you that there is ultimate recipe for making your cloud services reliable something that will",
    "start": "394520",
    "end": "401330"
  },
  {
    "text": "always work and something that will always make you successful so it just three thinks it's very simple",
    "start": "401330",
    "end": "407990"
  },
  {
    "text": "on paper track system house detect problems and then fix and refine",
    "start": "407990",
    "end": "414530"
  },
  {
    "text": "basically rinse and repeat it's this cycle that never ends but at the same time it's just the three simple things",
    "start": "414530",
    "end": "420740"
  },
  {
    "text": "that you need to take care but guess what it's just like a dream problem so",
    "start": "420740",
    "end": "426740"
  },
  {
    "text": "some people know that if they want to lose weight they go to gym they need to practice at least three times a week",
    "start": "426740",
    "end": "433280"
  },
  {
    "text": "probably lose some calories eat healthy and the results will come but apparently",
    "start": "433280",
    "end": "440920"
  },
  {
    "text": "it's not that easy so apparently the problem of observability is a hard",
    "start": "440920",
    "end": "446240"
  },
  {
    "text": "problem but it's also an expensive problem to solve you need to deal with things like context propagation multiple",
    "start": "446240",
    "end": "453320"
  },
  {
    "text": "environments external dependencies vendor locking which kind of forces you to only use what the vendor has to offer",
    "start": "453320",
    "end": "460520"
  },
  {
    "text": "and you can't move out and of course cost could be an issue as well so open sensors is our try to get",
    "start": "460520",
    "end": "472790"
  },
  {
    "text": "these problems to a resolution open census is a single distribution of libraries in multiple programming",
    "start": "472790",
    "end": "479900"
  },
  {
    "text": "languages that allow you to do metrics collection and the traces collection for your air systems it's a single set of",
    "start": "479900",
    "end": "487130"
  },
  {
    "text": "api's which is implemented in eight languages at the moment including dotnet",
    "start": "487130",
    "end": "493430"
  },
  {
    "text": "core my examples are going to show a c-sharp but it's also available in other",
    "start": "493430",
    "end": "499670"
  },
  {
    "text": "languages as well sorry so I digging a little bit more into that",
    "start": "499670",
    "end": "505490"
  },
  {
    "text": "it's a single set of api's for metrics and traces collection which is",
    "start": "505490",
    "end": "512020"
  },
  {
    "text": "implemented in idiomatic way in every language that's popular today beat",
    "start": "512020",
    "end": "517940"
  },
  {
    "text": "Python go Java C sharp and so on it has",
    "start": "517940",
    "end": "523640"
  },
  {
    "text": "a lot of integrations with external systems such as for example if you use",
    "start": "523640",
    "end": "529310"
  },
  {
    "text": "radish cache and you once again some insights into what is happening as part",
    "start": "529310",
    "end": "535820"
  },
  {
    "text": "of the incoming requests into your system such that that request could trigger some activities on",
    "start": "535820",
    "end": "541850"
  },
  {
    "text": "you want to get some insights into what's going on so open census kind of",
    "start": "541850",
    "end": "547980"
  },
  {
    "text": "provide some integrations which allow you to get that visibility without writing any additional code for that it",
    "start": "547980",
    "end": "554819"
  },
  {
    "text": "also implements the context propagation we have some proposal for how to do it",
    "start": "554819",
    "end": "560369"
  },
  {
    "text": "in a way that's being standardized across the industry so this context",
    "start": "560369",
    "end": "567269"
  },
  {
    "text": "propagation is implemented across all different languages and all different packages that we offer an open census",
    "start": "567269",
    "end": "573540"
  },
  {
    "text": "and it's also a set of exporters which allow you to take all this observability",
    "start": "573540",
    "end": "579869"
  },
  {
    "text": "information that was collected and then export it over to one of the backends of your choice so if you think about the",
    "start": "579869",
    "end": "586439"
  },
  {
    "text": "states before open census you probably could already use some systems for",
    "start": "586439",
    "end": "592139"
  },
  {
    "text": "metrics collection for traces collection you still want to continue to use that but the gain that you get from open",
    "start": "592139",
    "end": "599970"
  },
  {
    "text": "census is that you can instrument you called one-way no matter what language you use because the API are identical",
    "start": "599970",
    "end": "606569"
  },
  {
    "text": "and then you can decide where this information is going to be exported and then you can change if you want later on",
    "start": "606569",
    "end": "613259"
  },
  {
    "text": "to export it into a different location but you don't need to instrument your code all over again not with traces and",
    "start": "613259",
    "end": "620459"
  },
  {
    "text": "not with metrics finally we came up with this notion of collector for Smart",
    "start": "620459",
    "end": "627829"
  },
  {
    "text": "traces and the metrics ingre Gatien and I'll show it later on in the demo now",
    "start": "627829",
    "end": "634160"
  },
  {
    "text": "who is behind open census I originally open census came up from Google's",
    "start": "634160",
    "end": "640439"
  },
  {
    "text": "internal project called census this is used for as you would imagine traces",
    "start": "640439",
    "end": "645779"
  },
  {
    "text": "collection and Microsoft came up with very similar ideas so we just joined",
    "start": "645779",
    "end": "650879"
  },
  {
    "text": "forces and some other folks out there in the observability space joined this",
    "start": "650879",
    "end": "656309"
  },
  {
    "text": "effort as well so we have pretty vibrant community that has monthly meetings",
    "start": "656309",
    "end": "661799"
  },
  {
    "text": "where we try to progress together it's all open source so you can join as well",
    "start": "661799",
    "end": "667019"
  },
  {
    "text": "so it got a lot of support it's also not featuring all of their forms that joined",
    "start": "667019",
    "end": "673079"
  },
  {
    "text": "recently such as dynaTrace and basically just growing almost on a",
    "start": "673079",
    "end": "678870"
  },
  {
    "text": "daily basis now speaking about open census in c-sharp you probably want to",
    "start": "678870",
    "end": "684779"
  },
  {
    "start": "680000",
    "end": "680000"
  },
  {
    "text": "know about what nougat packages are available for you to be able to instrument your codes for traces and",
    "start": "684779",
    "end": "691529"
  },
  {
    "text": "metrics so there are like over I think 15 packages available today for",
    "start": "691529",
    "end": "698009"
  },
  {
    "text": "different exporters for the core implementation but these four are the core that you probably want to to know",
    "start": "698009",
    "end": "705810"
  },
  {
    "text": "about so that you can start using open census so the first one is open census",
    "start": "705810",
    "end": "711930"
  },
  {
    "text": "dot abstractions which implements the interfaces which is basically the spec",
    "start": "711930",
    "end": "718410"
  },
  {
    "text": "of open census which is identical between different programming languages then we have the open census package",
    "start": "718410",
    "end": "726240"
  },
  {
    "text": "which implements that this interfaces then if you use HTTP client to make",
    "start": "726240",
    "end": "732930"
  },
  {
    "text": "outgoing HTTP requests and you want to instrument this request with traces and metrics you can use open census dot",
    "start": "732930",
    "end": "740160"
  },
  {
    "text": "collector dot dependencies and finally we have open census collector dot ASP",
    "start": "740160",
    "end": "746550"
  },
  {
    "text": "dot asp net core which is for instrumenting your SP dodn't core applications we also plan to shape G RPC",
    "start": "746550",
    "end": "753690"
  },
  {
    "text": "package if you use G RPC for for your remote procedure calls it is also going",
    "start": "753690",
    "end": "760860"
  },
  {
    "text": "to be possible to instrument your adjure PC calls from the client to the server",
    "start": "760860",
    "end": "766410"
  },
  {
    "text": "and back with open sensors and it's in fact already supported in some other",
    "start": "766410",
    "end": "771660"
  },
  {
    "text": "languages ok so let's start talking",
    "start": "771660",
    "end": "776670"
  },
  {
    "start": "775000",
    "end": "775000"
  },
  {
    "text": "about how you actually do get started with open census for tracing so when you",
    "start": "776670",
    "end": "783300"
  },
  {
    "text": "start with instrumenting your codes with traces you first need to figure out",
    "start": "783300",
    "end": "788610"
  },
  {
    "text": "what's the architecture and typically there are two ways that it can go first",
    "start": "788610",
    "end": "794550"
  },
  {
    "text": "is agentless where you have your service running in the process it could be",
    "start": "794550",
    "end": "800100"
  },
  {
    "text": "hosted on container could be hosted on a dedicated we have and then your",
    "start": "800100",
    "end": "805230"
  },
  {
    "text": "application amid some traces is the result of incoming HTTP and then there is some exporter",
    "start": "805230",
    "end": "812010"
  },
  {
    "text": "component which leaves in your process which basically collects those traces",
    "start": "812010",
    "end": "817710"
  },
  {
    "text": "and send them over to some external system the other option is using the",
    "start": "817710",
    "end": "823800"
  },
  {
    "text": "agent so with the agent you have your application up and running it could be",
    "start": "823800",
    "end": "828990"
  },
  {
    "text": "also running as a separate process but then the agent is installed side by side",
    "start": "828990",
    "end": "834480"
  },
  {
    "text": "like a separate process it's it has its",
    "start": "834480",
    "end": "839790"
  },
  {
    "text": "pros and cons compared to the agent fest for example you need to deal with agent",
    "start": "839790",
    "end": "844920"
  },
  {
    "text": "installation which may not be straightforward in every environment but at the same time your application is",
    "start": "844920",
    "end": "850410"
  },
  {
    "text": "kind of transparent to tracing it just emits the traces without knowing who will collect that and you don't need to",
    "start": "850410",
    "end": "856800"
  },
  {
    "text": "install any dependencies in your application for being able to collect those traces out so what we'll do we'll",
    "start": "856800",
    "end": "863670"
  },
  {
    "text": "get started with open census in the agentless world and then we will kind of",
    "start": "863670",
    "end": "868890"
  },
  {
    "text": "gradually move forward to this other option as well now before we actually see the code we should agree on the",
    "start": "868890",
    "end": "876240"
  },
  {
    "start": "872000",
    "end": "872000"
  },
  {
    "text": "terminology so with open census we have the trace which is basically a",
    "start": "876240",
    "end": "882150"
  },
  {
    "text": "collection of spans the span is the basic activity that happens is the",
    "start": "882150",
    "end": "888060"
  },
  {
    "text": "result of of the incoming request so in this case you have messages all",
    "start": "888060",
    "end": "894600"
  },
  {
    "text": "scheduled get my sequel dot query and so on as separate spans all this together",
    "start": "894600",
    "end": "901100"
  },
  {
    "text": "constitutes one trace then you have sampler which is a component which",
    "start": "901100",
    "end": "907410"
  },
  {
    "text": "decides whether given trace should be sent over to back-end or not we'll see",
    "start": "907410",
    "end": "913350"
  },
  {
    "text": "the importance of this component later on in the demo and finally we have exporter which is component that",
    "start": "913350",
    "end": "920339"
  },
  {
    "text": "actually sends all these traces that were collected locally into some back-end system for tracing now in order",
    "start": "920339",
    "end": "931410"
  },
  {
    "start": "929000",
    "end": "929000"
  },
  {
    "text": "to get started we need to configure those components that we just spoke about so first is exporter in my first",
    "start": "931410",
    "end": "939780"
  },
  {
    "text": "demo I'm going to use as which is open-source tracing system",
    "start": "939780",
    "end": "944870"
  },
  {
    "text": "originated at Twitter so I just create the exporter passing the exporter",
    "start": "944870",
    "end": "952050"
  },
  {
    "text": "options which is the service that this trace represents and where this endpoint",
    "start": "952050",
    "end": "958710"
  },
  {
    "text": "that collects the traces is located then I pass this is tracing dot export",
    "start": "958710",
    "end": "964140"
  },
  {
    "text": "component is open census component which basically stores all this traces locally",
    "start": "964140",
    "end": "970650"
  },
  {
    "text": "before they are sent over to some back-end of your choice so after we have",
    "start": "970650",
    "end": "978390"
  },
  {
    "start": "977000",
    "end": "977000"
  },
  {
    "text": "the exporter set up we need to set up the sampler as as I mentioned before",
    "start": "978390",
    "end": "985560"
  },
  {
    "text": "sampler is a component that decides where the given trait should be sent over to the backend or not in this case",
    "start": "985560",
    "end": "992790"
  },
  {
    "text": "there are multiple ways to define the sampler I'm using configuration here",
    "start": "992790",
    "end": "998490"
  },
  {
    "text": "so the actual sampler setting is here in the samplers dot always sample open",
    "start": "998490",
    "end": "1005750"
  },
  {
    "text": "census library provides multiple default samplers that you can use such as this",
    "start": "1005750",
    "end": "1010790"
  },
  {
    "text": "one which samples every single request for mostly luring purposes you could",
    "start": "1010790",
    "end": "1016100"
  },
  {
    "text": "also implement your own components the framework is very flexible so that you",
    "start": "1016100",
    "end": "1021860"
  },
  {
    "text": "can just implement the right interface which is defined in the open census dot",
    "start": "1021860",
    "end": "1029260"
  },
  {
    "text": "project so that when you set the sampler you can pass your own sampler that just",
    "start": "1029260",
    "end": "1035060"
  },
  {
    "text": "implements the right interface so once you have the sampler you get hold the",
    "start": "1035060",
    "end": "1041199"
  },
  {
    "start": "1039000",
    "end": "1039000"
  },
  {
    "text": "tracing dot racer which is this component that actually creates the traces and finally you start creating",
    "start": "1041199",
    "end": "1050210"
  },
  {
    "text": "this pads which actually produces this implementation that we want to get from",
    "start": "1050210",
    "end": "1055280"
  },
  {
    "text": "the demo what I recommend is always trying to use a sculpt span which means",
    "start": "1055280",
    "end": "1060800"
  },
  {
    "text": "that we not only creating the span but we also limit the start and end time for",
    "start": "1060800",
    "end": "1067070"
  },
  {
    "text": "that span to the using statement where it is defined so once this using statement completes the span will close",
    "start": "1067070",
    "end": "1075140"
  },
  {
    "text": "and so we have pretty well defined duration okay",
    "start": "1075140",
    "end": "1080199"
  },
  {
    "text": "so let's see this in the demo so I'll",
    "start": "1080199",
    "end": "1085449"
  },
  {
    "text": "quickly go through some of these components that they just mentioned and then we'll just execute this demo and",
    "start": "1085449",
    "end": "1090729"
  },
  {
    "text": "see where is it traced so this is the",
    "start": "1090729",
    "end": "1095949"
  },
  {
    "text": "exporter piece we define the exporter we",
    "start": "1095949",
    "end": "1102279"
  },
  {
    "text": "also updated the configuration to use the sampler which always samples you see",
    "start": "1102279",
    "end": "1108129"
  },
  {
    "text": "this implements I sampler interface you could provide your own and then we have",
    "start": "1108129",
    "end": "1115359"
  },
  {
    "text": "this tracer that we can use we created",
    "start": "1115359",
    "end": "1120879"
  },
  {
    "text": "sculpt span which is called main and we do some operation which will happen in",
    "start": "1120879",
    "end": "1127389"
  },
  {
    "text": "the context of that main span and if we go into this do work so we can do some",
    "start": "1127389",
    "end": "1135789"
  },
  {
    "text": "stuff there as well so I get this tracer in there as well and I can create even",
    "start": "1135789",
    "end": "1142869"
  },
  {
    "text": "subscribe and sub span so basically this span will be a child of the previous",
    "start": "1142869",
    "end": "1150459"
  },
  {
    "text": "span so you can see here we just create another span and I can in at any point",
    "start": "1150459",
    "end": "1157119"
  },
  {
    "text": "of time get the context of the current span where I'm currently running and I",
    "start": "1157119",
    "end": "1166269"
  },
  {
    "text": "can also do some annotations basically provide some additional method metadata",
    "start": "1166269",
    "end": "1172359"
  },
  {
    "text": "about the execution of the current code pass one of the possible reasons to do",
    "start": "1172359",
    "end": "1181359"
  },
  {
    "text": "that if you want to add some contextual information for example the name of the table when you want to trace some",
    "start": "1181359",
    "end": "1187869"
  },
  {
    "text": "activity that happens in that table so it could be really useful information to",
    "start": "1187869",
    "end": "1194349"
  },
  {
    "text": "have so let's try to run this demo really quick now I run all my demos in",
    "start": "1194349",
    "end": "1201639"
  },
  {
    "text": "docker containers so in order to reproduce the same thing on your machine you will have to install docker",
    "start": "1201639",
    "end": "1208680"
  },
  {
    "text": "for desktop and also all this demos as",
    "start": "1208680",
    "end": "1213820"
  },
  {
    "text": "well as the presentation will be available later on I'll post it on my a",
    "start": "1213820",
    "end": "1219250"
  },
  {
    "text": "Twitter and the demos will be available on their github okay so we just executed something which",
    "start": "1219250",
    "end": "1227260"
  },
  {
    "text": "should have produced some traces so let's try and see how it looks like",
    "start": "1227260",
    "end": "1233310"
  },
  {
    "text": "so this is Zipkin and this is our service that we initialized and if you",
    "start": "1244490",
    "end": "1251720"
  },
  {
    "text": "find traces we can see that it generated something and you can see here all these",
    "start": "1251720",
    "end": "1258440"
  },
  {
    "text": "activities of the work that happened within the parent activity of Maine and all those things together they",
    "start": "1258440",
    "end": "1265820"
  },
  {
    "text": "constitute one trace and one single transaction that happened I can also double click and get these",
    "start": "1265820",
    "end": "1272480"
  },
  {
    "text": "annotations that I added in my code so this is like a simple getting started",
    "start": "1272480",
    "end": "1278540"
  },
  {
    "text": "with tracing and I could also switch this zip key and implementation as my",
    "start": "1278540",
    "end": "1284660"
  },
  {
    "text": "tracing back into something else like we'll do in other demos",
    "start": "1284660",
    "end": "1290890"
  },
  {
    "text": "it's",
    "start": "1299820",
    "end": "1302600"
  },
  {
    "text": "okay so we saw that it's kind of easy to get started with tracing but there are",
    "start": "1310640",
    "end": "1316980"
  },
  {
    "text": "some problems that we need to deal with for example context propagation when you get a lot of requests that come in",
    "start": "1316980",
    "end": "1323549"
  },
  {
    "text": "parallel into your system you want to essentially reproduce the full picture of what's going on with every single",
    "start": "1323549",
    "end": "1329730"
  },
  {
    "text": "request so that at the very least you need to be able to propagate the trace ad that is associated with the parents",
    "start": "1329730",
    "end": "1337650"
  },
  {
    "text": "of all this of every single request as well as all the spans that happen as the",
    "start": "1337650",
    "end": "1344220"
  },
  {
    "text": "sub activities of that request and so this pans can span across multiple",
    "start": "1344220",
    "end": "1349260"
  },
  {
    "text": "components of your system such as here you can see the front end talking to",
    "start": "1349260",
    "end": "1354270"
  },
  {
    "text": "checkout talking to an email service you want to get this entire activity tree",
    "start": "1354270",
    "end": "1359900"
  },
  {
    "text": "reproduced as a trace in your system in something like this so for that you need",
    "start": "1359900",
    "end": "1365070"
  },
  {
    "text": "to be able to pass some information some of that information could be just handled by the system such as a trace ad",
    "start": "1365070",
    "end": "1372870"
  },
  {
    "text": "and the span ad but you may also want to pass some additional information some",
    "start": "1372870",
    "end": "1379470"
  },
  {
    "text": "context that should be available in your other components for example from the",
    "start": "1379470",
    "end": "1384780"
  },
  {
    "text": "front end you might want to send some additional information in the traces to the checkout and then use that",
    "start": "1384780",
    "end": "1391530"
  },
  {
    "text": "information to make some more decisions so we need to deal with context",
    "start": "1391530",
    "end": "1397140"
  },
  {
    "text": "propagation could be very useful in scenarios of a be testing when you really want to know when you get from",
    "start": "1397140",
    "end": "1404250"
  },
  {
    "text": "the front end to the checkout whether you're executing version a or version B on the checkout because the whole",
    "start": "1404250",
    "end": "1410610"
  },
  {
    "text": "activity started probably from where and a on the front end so it's it could be",
    "start": "1410610",
    "end": "1415710"
  },
  {
    "text": "really important you know so for that we have the implementation of w3 standard",
    "start": "1415710",
    "end": "1422760"
  },
  {
    "text": "that was proposed jointly by folks from Microsoft Google and dynaTrace and this star standard is",
    "start": "1422760",
    "end": "1431190"
  },
  {
    "text": "currently in the last stages of approval and I'm not going to delve too much into",
    "start": "1431190",
    "end": "1437880"
  },
  {
    "text": "its details but there is a link in the slides that you can go and read what's important is that this standard",
    "start": "1437880",
    "end": "1445049"
  },
  {
    "text": "is already implemented in all open source libraries across all the languages so if you go with open census",
    "start": "1445049",
    "end": "1451500"
  },
  {
    "text": "for tracing your applications you can be sure that if you call some external",
    "start": "1451500",
    "end": "1457049"
  },
  {
    "text": "components which also comply with the standard you will get more visibility into those component just naturally by",
    "start": "1457049",
    "end": "1463740"
  },
  {
    "text": "the fact that you use the same standard for context propagation as they use okay",
    "start": "1463740",
    "end": "1470370"
  },
  {
    "text": "so so far we were talking mostly about tracing but open census is also about",
    "start": "1470370",
    "end": "1475799"
  },
  {
    "text": "metrics so let's see what we can do with metrics in order to see the demo for",
    "start": "1475799",
    "end": "1482400"
  },
  {
    "start": "1479000",
    "end": "1479000"
  },
  {
    "text": "metrics we need to come up with the object model which works for metrics as",
    "start": "1482400",
    "end": "1489690"
  },
  {
    "text": "well so this is the example from stack driver this is Google's product that",
    "start": "1489690",
    "end": "1495990"
  },
  {
    "text": "allows you to do a monitoring tracing performance and debugging and I just",
    "start": "1495990",
    "end": "1502770"
  },
  {
    "text": "want on this picture to kind of explain some of these concepts that we'll see in the code later on so first thing if we",
    "start": "1502770",
    "end": "1510090"
  },
  {
    "text": "want to measure something we need to define that entity of what we measure so",
    "start": "1510090",
    "end": "1515370"
  },
  {
    "text": "in this example it's CPU utilization it also should include the unit so it could be percentage it could be just one like",
    "start": "1515370",
    "end": "1522570"
  },
  {
    "text": "a unit could be other things as well then when you want to measure CPU",
    "start": "1522570",
    "end": "1528990"
  },
  {
    "text": "utilization you probably want some additional contextual information to understand where it was measured or some",
    "start": "1528990",
    "end": "1535080"
  },
  {
    "text": "other stuff that will help you then break it down in the reports so in this case we might want to record the",
    "start": "1535080",
    "end": "1541470"
  },
  {
    "text": "instance CD maybe also environment information so that you can then see what happens on a given machine as",
    "start": "1541470",
    "end": "1547679"
  },
  {
    "text": "opposed to environment is the posture maybe entire cluster later we'll",
    "start": "1547679",
    "end": "1553890"
  },
  {
    "text": "probably also need to actually take those measurements these are the points that essentially you see on the graph so",
    "start": "1553890",
    "end": "1559770"
  },
  {
    "text": "these are called measurements that they belong to given measure and you took this measurements a given point in time",
    "start": "1559770",
    "end": "1566330"
  },
  {
    "text": "now the graphs cannot represent always all the measurements that were taken",
    "start": "1566330",
    "end": "1572039"
  },
  {
    "text": "because maybe the graph represents only what had every second so there is a point per",
    "start": "1572039",
    "end": "1578590"
  },
  {
    "text": "second here but at the same time you could have taken maybe 50 measurements in one second so there should be a way",
    "start": "1578590",
    "end": "1586360"
  },
  {
    "text": "to represent 50 different points in one point in the graph so for that you need",
    "start": "1586360",
    "end": "1592120"
  },
  {
    "text": "what's called aggregation aggregation is a method that basically takes all your measurements for given period of time",
    "start": "1592120",
    "end": "1599020"
  },
  {
    "text": "and produces one a point which represents all those measurements together so this could be sum of all",
    "start": "1599020",
    "end": "1607270"
  },
  {
    "text": "those points the minimum the maximum where a distribution or some other way for you to kind of decide on a single",
    "start": "1607270",
    "end": "1614350"
  },
  {
    "text": "point to represent next thing that we need to cover is a view data so view",
    "start": "1614350",
    "end": "1620950"
  },
  {
    "text": "data it's basically taking all these measurements and also providing the",
    "start": "1620950",
    "end": "1626950"
  },
  {
    "text": "values for all the things that we mentioned before such as tags the actual values for tags for every single point",
    "start": "1626950",
    "end": "1634090"
  },
  {
    "text": "in time that we measure as well as the values for aggregation you can see view",
    "start": "1634090",
    "end": "1640660"
  },
  {
    "text": "data as basically all the information that actually gets collected for your",
    "start": "1640660",
    "end": "1646900"
  },
  {
    "text": "metrics and then the rest of you in this case view is is just a definition of",
    "start": "1646900",
    "end": "1654250"
  },
  {
    "text": "what we intend to collect so if if you compare view and view data",
    "start": "1654250",
    "end": "1660100"
  },
  {
    "text": "it's like table schema and table data so view it's like a table schema it defines",
    "start": "1660100",
    "end": "1665560"
  },
  {
    "text": "what you want to measure so it has a name but it also has this measure tag and aggregation definition what you want",
    "start": "1665560",
    "end": "1672490"
  },
  {
    "text": "to what you intend to measure and then the view data is the actual measurements",
    "start": "1672490",
    "end": "1677740"
  },
  {
    "text": "that you take given this definition of the view now that we have that we can go",
    "start": "1677740",
    "end": "1685170"
  },
  {
    "text": "into the demo",
    "start": "1685170",
    "end": "1689160"
  },
  {
    "text": "so in this demo I'm going to export information into stock driver and I",
    "start": "1696440",
    "end": "1703130"
  },
  {
    "text": "could as well export it to primitives which is open-source system for matrix",
    "start": "1703130",
    "end": "1708260"
  },
  {
    "text": "collection or some other system which is commercial it just as easy so in this",
    "start": "1708260",
    "end": "1715640"
  },
  {
    "text": "case I'm using open census exporter stock driver as well as open census dot",
    "start": "1715640",
    "end": "1722240"
  },
  {
    "text": "starts which is the namespace for a matrix collection matrix and starts it's",
    "start": "1722240",
    "end": "1727490"
  },
  {
    "text": "basically the same thing as far as metric collection goes okay so first",
    "start": "1727490",
    "end": "1733460"
  },
  {
    "text": "thing that we need to do is define what we measure so this happens here I want",
    "start": "1733460",
    "end": "1740450"
  },
  {
    "text": "to measure something that I called it full execution sighs this is description",
    "start": "1740450",
    "end": "1745550"
  },
  {
    "text": "this is the unit then I want to define what additional contextual information I",
    "start": "1745550",
    "end": "1752180"
  },
  {
    "text": "want to send with that measurements so",
    "start": "1752180",
    "end": "1757280"
  },
  {
    "text": "we have environment and machine these are just the keys without the actual value so it's like defining the schema",
    "start": "1757280",
    "end": "1764240"
  },
  {
    "text": "for for your table without actually sending the the data for that schema yet",
    "start": "1764240",
    "end": "1769880"
  },
  {
    "text": "so we define that every measurement should have environments and machine name attached to it and then we when we",
    "start": "1769880",
    "end": "1779390"
  },
  {
    "text": "actually want to send those measurements we want to calculate the actual machine",
    "start": "1779390",
    "end": "1784610"
  },
  {
    "text": "name and the actual environment name so I created this context object which maps",
    "start": "1784610",
    "end": "1790280"
  },
  {
    "text": "between the tag key to tag value so I just created here this is my test",
    "start": "1790280",
    "end": "1796190"
  },
  {
    "text": "environment and I'm sending the actual machine name now next thing is starts",
    "start": "1796190",
    "end": "1802910"
  },
  {
    "text": "recorder now start recorder is the component that stores all this metrics locally before sending them over to some",
    "start": "1802910",
    "end": "1810710"
  },
  {
    "text": "back-end so we get hold of this starts recorder and now we need to configure",
    "start": "1810710",
    "end": "1817880"
  },
  {
    "text": "well where this information essentially will go so I'm using a stock driver",
    "start": "1817880",
    "end": "1823310"
  },
  {
    "text": "exporter and in order to use that you need to provide the project ID of your Google Cloud project where all",
    "start": "1823310",
    "end": "1830060"
  },
  {
    "text": "data is gonna be stored and again if you use a different exporter it will be",
    "start": "1830060",
    "end": "1836450"
  },
  {
    "text": "similarly in the way that first you provide some contextual information to kind of set up that exporter for example",
    "start": "1836450",
    "end": "1843170"
  },
  {
    "text": "the end point where all these metrics will be collected and then you need to",
    "start": "1843170",
    "end": "1848270"
  },
  {
    "text": "provide what is called the view manager which holds all those measurements locally before they they are sent over",
    "start": "1848270",
    "end": "1856430"
  },
  {
    "text": "to the backend of choice which is stock driver here now we need to define the",
    "start": "1856430",
    "end": "1862010"
  },
  {
    "text": "view view in this case is defined like this this is just the name and the",
    "start": "1862010",
    "end": "1867560"
  },
  {
    "text": "description this is the measure that we defined earlier this is the aggregation",
    "start": "1867560",
    "end": "1873950"
  },
  {
    "text": "function that I'm going to use and these are the keys that they want to send with",
    "start": "1873950",
    "end": "1880880"
  },
  {
    "text": "each measurement I need to register that view so that the local component knows",
    "start": "1880880",
    "end": "1887120"
  },
  {
    "text": "what to expect when the information is coming now I'm just executing something",
    "start": "1887120",
    "end": "1893600"
  },
  {
    "text": "in in a dedicated thread and basically what they want to do there there is a",
    "start": "1893600",
    "end": "1900050"
  },
  {
    "text": "method some random method that they implemented and that method will just",
    "start": "1900050",
    "end": "1906140"
  },
  {
    "text": "draw a point on a console just for simplicity and every time the method is executing I want to record the metric",
    "start": "1906140",
    "end": "1914870"
  },
  {
    "text": "which counts the number of executions so the way to do it is just get getting the",
    "start": "1914870",
    "end": "1920570"
  },
  {
    "text": "instance of what's called stats recorder and creating the measurement",
    "start": "1920570",
    "end": "1926420"
  },
  {
    "text": "and the actual value for that measurement so this is the number of invocation this is the measurement that",
    "start": "1926420",
    "end": "1931700"
  },
  {
    "text": "we defined in the first step and one in this case is the actual value for that metric at this moment in time and once",
    "start": "1931700",
    "end": "1940130"
  },
  {
    "text": "we decide to record that we also need to provide all this contextual information",
    "start": "1940130",
    "end": "1946340"
  },
  {
    "text": "which we already pre-calculated and put in the tag context now I realize that",
    "start": "1946340",
    "end": "1952460"
  },
  {
    "text": "you might see a lot of different steps to do something relatively simple and the reason I'm showing so many steps is",
    "start": "1952460",
    "end": "1959540"
  },
  {
    "text": "because this is basically what always needs to happen on the the hood a lot of those things such as",
    "start": "1959540",
    "end": "1965280"
  },
  {
    "text": "setting up the exporter and making sure that you can set up the views in much",
    "start": "1965280",
    "end": "1970620"
  },
  {
    "text": "easier way it's all going to be abstracted away by the implementation of our C sharp libraries so that you will",
    "start": "1970620",
    "end": "1977309"
  },
  {
    "text": "work less but achieve the same things but I think it's really useful to to see",
    "start": "1977309",
    "end": "1982440"
  },
  {
    "text": "how all the things look like when you want to get started literally from zero",
    "start": "1982440",
    "end": "1989630"
  },
  {
    "text": "so when I execute this application what you will see is some points starting to",
    "start": "1989630",
    "end": "1998330"
  },
  {
    "text": "to show up every point means that the full method was executed and what should",
    "start": "1998330",
    "end": "2005480"
  },
  {
    "text": "happen behind the scenes is that we keep recording all those invocations as a metric and then the stackdriver exporter",
    "start": "2005480",
    "end": "2013850"
  },
  {
    "text": "component that works as part of our application it will take all those measurements and then periodically send",
    "start": "2013850",
    "end": "2020510"
  },
  {
    "text": "them over to start driver back-end so if I go to stock driver and we are going to",
    "start": "2020510",
    "end": "2026960"
  },
  {
    "text": "do that right now",
    "start": "2026960",
    "end": "2029740"
  },
  {
    "text": "I should expect actually to see that it should show some graph that represents",
    "start": "2034740",
    "end": "2041940"
  },
  {
    "text": "this metric that I just collected so I'm just going to choose monitoring which is",
    "start": "2041940",
    "end": "2049500"
  },
  {
    "text": "the stock driver monitoring part stock driver consists of many sub products",
    "start": "2049500",
    "end": "2054659"
  },
  {
    "text": "that deal with all types of observability problems so in this screen",
    "start": "2054660",
    "end": "2064679"
  },
  {
    "text": "basically what I should choose is matrix Explorer so we send matrix to sent to",
    "start": "2064680",
    "end": "2071760"
  },
  {
    "text": "stock driver and I should expect to see my metric feature here in the list and",
    "start": "2071760",
    "end": "2078690"
  },
  {
    "text": "it was called foo something let's see sample execution count that's",
    "start": "2078690",
    "end": "2084379"
  },
  {
    "text": "that's the name okay so what you should",
    "start": "2084380",
    "end": "2090179"
  },
  {
    "text": "start seeing there is this blue line and if if we leave it for a long enough",
    "start": "2090180",
    "end": "2096780"
  },
  {
    "text": "period of time you will see that it start starts progressing kind of towards [Music]",
    "start": "2096780",
    "end": "2102920"
  },
  {
    "text": "that side because essentially all this measurements are taken as we speak and",
    "start": "2102920",
    "end": "2108380"
  },
  {
    "text": "the interval at which the stunt driver graph is updating is 1 minute so it",
    "start": "2108380",
    "end": "2115620"
  },
  {
    "text": "sends obviously more than one measurement so over time you will see that this graph will start changing and",
    "start": "2115620",
    "end": "2124130"
  },
  {
    "text": "basically it will kind of demonstrate that we actually take the measurements and and send them over ok you can see",
    "start": "2124130",
    "end": "2131640"
  },
  {
    "text": "now that there was some change and if we keep this working it's just going to",
    "start": "2131640",
    "end": "2138350"
  },
  {
    "text": "basically evolve as as we speak because the metal gets executed in a dedicated",
    "start": "2138350",
    "end": "2144390"
  },
  {
    "text": "thread at some random intervals and this is why the actual measurements of how",
    "start": "2144390",
    "end": "2150510"
  },
  {
    "text": "many times the metal was executed at given moment is going to change",
    "start": "2150510",
    "end": "2155870"
  },
  {
    "text": "accordingly ok so let's stop it",
    "start": "2155870",
    "end": "2163430"
  },
  {
    "text": "okay so let's talk about some other open census related topics so one of the",
    "start": "2170059",
    "end": "2176339"
  },
  {
    "start": "2174000",
    "end": "2174000"
  },
  {
    "text": "latest concepts that we introduced is open census service open census service",
    "start": "2176339",
    "end": "2182190"
  },
  {
    "text": "consists of two components agent and collector now the reason that we came up",
    "start": "2182190",
    "end": "2188700"
  },
  {
    "text": "with this proposal is that some folks told us that they prefer to send information not necessarily to one",
    "start": "2188700",
    "end": "2196339"
  },
  {
    "text": "exporting component but maybe to multiple exporters at the same time also",
    "start": "2196339",
    "end": "2201539"
  },
  {
    "text": "they want to be able to switch the exporters without restarting their service on production it could be really",
    "start": "2201539",
    "end": "2207900"
  },
  {
    "text": "costly to restart your running application if you just want to send the monitoring data to to some other",
    "start": "2207900",
    "end": "2216180"
  },
  {
    "text": "component of your choice so we came up with this open sense of service solution",
    "start": "2216180",
    "end": "2221970"
  },
  {
    "text": "where basically you have this open census libraries in any language you want to use it and then the libraries",
    "start": "2221970",
    "end": "2229559"
  },
  {
    "text": "essentially will use open census agents as their exporter so you will not have",
    "start": "2229559",
    "end": "2235859"
  },
  {
    "text": "to use different exporters directly in your code you will use open census agent",
    "start": "2235859",
    "end": "2242190"
  },
  {
    "text": "as your exporter agent intern will send information into open census collector",
    "start": "2242190",
    "end": "2247799"
  },
  {
    "text": "so basically it means that you will need to install open census collector is another component now open census",
    "start": "2247799",
    "end": "2254579"
  },
  {
    "text": "collector could make a decision what to do with those traces instead of the",
    "start": "2254579",
    "end": "2260309"
  },
  {
    "text": "agent making the decision and instead of you making the decision in in the",
    "start": "2260309",
    "end": "2266220"
  },
  {
    "text": "process where your application is running and then if you want to add more exporters you want to export to multiple",
    "start": "2266220",
    "end": "2274670"
  },
  {
    "text": "observability backends basically you need to deal with open census collector there is a llamo file where you can make",
    "start": "2274670",
    "end": "2281819"
  },
  {
    "text": "your configuration changes and then if we if we need to restart the component",
    "start": "2281819",
    "end": "2287999"
  },
  {
    "text": "that sends information to the right backends of fair choice you just restart the open census collector but your",
    "start": "2287999",
    "end": "2294210"
  },
  {
    "text": "system is not impacted in any way so this is maybe slightly more",
    "start": "2294210",
    "end": "2299640"
  },
  {
    "text": "sophisticated architecture in terms of what you need to install but it has some benefits which is also",
    "start": "2299640",
    "end": "2306270"
  },
  {
    "text": "includes smart sampling that I'm going to mention shortly okay so we mentioned",
    "start": "2306270",
    "end": "2314670"
  },
  {
    "start": "2311000",
    "end": "2311000"
  },
  {
    "text": "this concept of sampler which is the component that needs to decide whether to take this trace and send it over or",
    "start": "2314670",
    "end": "2321210"
  },
  {
    "text": "not now traces can be multiple like your",
    "start": "2321210",
    "end": "2326400"
  },
  {
    "text": "application can generate a lot of traces and those traces could include many spans and if all this information is",
    "start": "2326400",
    "end": "2333780"
  },
  {
    "text": "exported to some back-end of choice you could pay a lot of money for that so obviously you don't want to over pay but",
    "start": "2333780",
    "end": "2341280"
  },
  {
    "text": "also even if we put the pay aside you can create a lot of noise because if there are some activities which always",
    "start": "2341280",
    "end": "2347310"
  },
  {
    "text": "succeed and you trace everything you don't really need information about something that always works so you",
    "start": "2347310",
    "end": "2354450"
  },
  {
    "text": "probably want to skip all this unnecessary traces and only capture what you really care about reducing costs and",
    "start": "2354450",
    "end": "2362010"
  },
  {
    "text": "also reducing the noise so we came up with a solution to solve that which is",
    "start": "2362010",
    "end": "2368160"
  },
  {
    "text": "smart sampling and rat 2 ways that you can do sampling with open sensors or in",
    "start": "2368160",
    "end": "2374940"
  },
  {
    "text": "general have base sampling and tail based sampling now we've had by sampling",
    "start": "2374940",
    "end": "2380460"
  },
  {
    "text": "the sampling decision is happening when the request comes in so request comes in there is a component",
    "start": "2380460",
    "end": "2387930"
  },
  {
    "text": "which is that sampler that we saw before in the first demo and that component",
    "start": "2387930",
    "end": "2393090"
  },
  {
    "text": "decides whether to take that trace and send it over or not which could be nice",
    "start": "2393090",
    "end": "2399000"
  },
  {
    "text": "because we could just decide to use sampler which takes maybe some probabilistic approach like take 10% of",
    "start": "2399000",
    "end": "2405990"
  },
  {
    "text": "request and sample only them or take requests that much given a criteria and",
    "start": "2405990",
    "end": "2412280"
  },
  {
    "text": "then this way just reduce the cost but in some cases there could be a problem",
    "start": "2412280",
    "end": "2418500"
  },
  {
    "text": "where there was a decision to trace but then it's not interesting trace the",
    "start": "2418500",
    "end": "2425070"
  },
  {
    "text": "other problem that could be is that request comes in we decided to not trace",
    "start": "2425070",
    "end": "2431430"
  },
  {
    "text": "that because it's not in this bucket of 10% that we do want to trace and then",
    "start": "2431430",
    "end": "2436500"
  },
  {
    "text": "basically the downstream systems where this trace goes through there there is a problem",
    "start": "2436500",
    "end": "2442650"
  },
  {
    "text": "and so you will miss this trace because you took the decision early enough what",
    "start": "2442650",
    "end": "2448500"
  },
  {
    "text": "we really want to do is take the decision when we have all the information and this is where tale base",
    "start": "2448500",
    "end": "2454260"
  },
  {
    "text": "sampling can really help you be more efficient so I'm going to show the tale",
    "start": "2454260",
    "end": "2460980"
  },
  {
    "text": "base sampling and for that I need to do some warm-up for my demo so I'm going to",
    "start": "2460980",
    "end": "2467880"
  },
  {
    "text": "start and while it's starting we are going to talk about the architecture of",
    "start": "2467880",
    "end": "2474329"
  },
  {
    "text": "this demo so this demo is based on a",
    "start": "2474329",
    "end": "2479670"
  },
  {
    "text": "sample app that we created at Google called hipster shop there is a repo for",
    "start": "2479670",
    "end": "2485520"
  },
  {
    "text": "that demo in the github and you can also see it",
    "start": "2485520",
    "end": "2491210"
  },
  {
    "text": "basically it's just a ecommerce application developed using the modern cloud stack and there are multiple",
    "start": "2491210",
    "end": "2499140"
  },
  {
    "text": "components which are all developed using different programming languages and they are talking to each other one of those",
    "start": "2499140",
    "end": "2505650"
  },
  {
    "text": "components is checkout service so when you hit the front end of this hipster",
    "start": "2505650",
    "end": "2511140"
  },
  {
    "text": "shop you may want to click on checkout and do the actual operation of you know",
    "start": "2511140",
    "end": "2517799"
  },
  {
    "text": "checking out and buying something and what we want to do in this demo is",
    "start": "2517799",
    "end": "2523619"
  },
  {
    "text": "basically assimilate what's going on with traces when this checkout activity",
    "start": "2523619",
    "end": "2529470"
  },
  {
    "text": "is not always succeeding so what will happen is this there is a component that",
    "start": "2529470",
    "end": "2535410"
  },
  {
    "text": "we created that simulates creation of the loads - - hipster shop application",
    "start": "2535410",
    "end": "2542420"
  },
  {
    "text": "such that some of the activities will include errors in the checkout component",
    "start": "2542420",
    "end": "2548430"
  },
  {
    "text": "some other activities will just succeed ok now there is we are using here this",
    "start": "2548430",
    "end": "2555930"
  },
  {
    "text": "open cell census service and the collector when it gets all these traces it has to take the decision of whether",
    "start": "2555930",
    "end": "2563160"
  },
  {
    "text": "to trace all these activities that happened in hipster shop or not in order",
    "start": "2563160",
    "end": "2569970"
  },
  {
    "text": "to drum trait that tail bass sampling is really effective way we actually try to export",
    "start": "2569970",
    "end": "2576940"
  },
  {
    "text": "the information to two separate trace backends in this demo I'm going to use a",
    "start": "2576940",
    "end": "2583480"
  },
  {
    "text": "Jaeger which is another open-source tracing system just like Zipkin but this",
    "start": "2583480",
    "end": "2588910"
  },
  {
    "text": "one was created by uber and basically the first instance of Jaeger is going to",
    "start": "2588910",
    "end": "2595930"
  },
  {
    "text": "use head base sampling which basically means that it will take the decision",
    "start": "2595930",
    "end": "2601240"
  },
  {
    "text": "whether to trace or not at the early stage so you can expect to see different",
    "start": "2601240",
    "end": "2608140"
  },
  {
    "text": "types of traces both with errors in the checkout as well as without errors in",
    "start": "2608140",
    "end": "2614470"
  },
  {
    "text": "the checkout and the second instance of Jaeger is going to use the tale based",
    "start": "2614470",
    "end": "2620320"
  },
  {
    "text": "sampling where we only trace activities where spans have errors okay so let's",
    "start": "2620320",
    "end": "2628660"
  },
  {
    "text": "see it",
    "start": "2628660",
    "end": "2631470"
  },
  {
    "text": "okay so it's warmed and it's all running in containers who can reproduce it",
    "start": "2635270",
    "end": "2641180"
  },
  {
    "text": "anywhere and the instructions will be posted on github alongside this",
    "start": "2641180",
    "end": "2646550"
  },
  {
    "text": "presentation so I'm going to open the",
    "start": "2646550",
    "end": "2653390"
  },
  {
    "text": "first instance of Jager and here are all",
    "start": "2653390",
    "end": "2658580"
  },
  {
    "text": "these services of the hipster shop one of them is the checkout service",
    "start": "2658580",
    "end": "2664270"
  },
  {
    "text": "did it click okay so when I look at the",
    "start": "2671880",
    "end": "2677610"
  },
  {
    "text": "traces for the checkout service or that involve checkout service you can see",
    "start": "2677610",
    "end": "2682620"
  },
  {
    "text": "that there are mixed races some of them don't include any broken spans or spans",
    "start": "2682620",
    "end": "2688530"
  },
  {
    "text": "with errors some of them do include spans with errors okay so it's really mixed because",
    "start": "2688530",
    "end": "2696210"
  },
  {
    "text": "the traffic in some cases and simulates errors in some cases it doesn't simulate",
    "start": "2696210",
    "end": "2703320"
  },
  {
    "text": "the errors if we go to the second instance of Jaeger let's do it here and",
    "start": "2703320",
    "end": "2715460"
  },
  {
    "text": "we also open the traces you see much",
    "start": "2715460",
    "end": "2720720"
  },
  {
    "text": "less traces and every single activity that was captured here that involves the",
    "start": "2720720",
    "end": "2727140"
  },
  {
    "text": "checkout it also involves some errors so basically given the same volume of trace",
    "start": "2727140",
    "end": "2734280"
  },
  {
    "text": "information that came into the collector service in this case we were able to",
    "start": "2734280",
    "end": "2740390"
  },
  {
    "text": "collect much more important information first because we use tale based sampling",
    "start": "2740390",
    "end": "2746370"
  },
  {
    "text": "where we only sample the cases where errors happen in our Spence",
    "start": "2746370",
    "end": "2753320"
  },
  {
    "text": "look at some more concepts that opens",
    "start": "2759050",
    "end": "2766700"
  },
  {
    "text": "answers introduces that also originated at Google the pages so in Google what we",
    "start": "2766700",
    "end": "2774530"
  },
  {
    "text": "have in some internal systems is the ability to understand on the given",
    "start": "2774530",
    "end": "2779600"
  },
  {
    "text": "machine when the traffic hits that machine what traces are captured on that",
    "start": "2779600",
    "end": "2786440"
  },
  {
    "text": "specific machine so basically you can just go into slash trace Z or RPC see",
    "start": "2786440",
    "end": "2791900"
  },
  {
    "text": "depends on what type of communication framework is used with that machine and get all this information because it's",
    "start": "2791900",
    "end": "2798920"
  },
  {
    "text": "actually something that is hosted in in the libraries that we use for",
    "start": "2798920",
    "end": "2804110"
  },
  {
    "text": "instrumentation so you just get it kind of for free by a mere fact that your instrument using open sensors libraries",
    "start": "2804110",
    "end": "2809960"
  },
  {
    "text": "now it's not available yet in c-sharp but it's available in Java yo and some",
    "start": "2809960",
    "end": "2815900"
  },
  {
    "text": "other languages and will be available in c-sharp as well just like any other functionality so you will get this just",
    "start": "2815900",
    "end": "2823580"
  },
  {
    "text": "by using the right instrumentation libraries now we have the metrics of",
    "start": "2823580",
    "end": "2830240"
  },
  {
    "text": "what exporters are available T is for trace exporters as is for stats or",
    "start": "2830240",
    "end": "2836900"
  },
  {
    "text": "metrics exporters across different languages now you see that it's not full and we working on improving that across",
    "start": "2836900",
    "end": "2844460"
  },
  {
    "text": "all different languages that we want to support as well as major Beck and",
    "start": "2844460",
    "end": "2850910"
  },
  {
    "text": "components for observability that once you have their presence in this open",
    "start": "2850910",
    "end": "2857300"
  },
  {
    "text": "census ecosystem but it's improving literally on a daily basis so we'll get",
    "start": "2857300",
    "end": "2863600"
  },
  {
    "text": "there and it will be fuller as we progress we also have some existing",
    "start": "2863600",
    "end": "2869540"
  },
  {
    "start": "2867000",
    "end": "2867000"
  },
  {
    "text": "pre-built integrations so if you use one of these components and this is not the",
    "start": "2869540",
    "end": "2875270"
  },
  {
    "text": "full list basically these are already pre instrumented with open sensors so if",
    "start": "2875270",
    "end": "2880370"
  },
  {
    "text": "you depend on these components and your stock is already instrumented with open",
    "start": "2880370",
    "end": "2887390"
  },
  {
    "text": "sensors you will get visibility not only into what your activities doing but also what this external",
    "start": "2887390",
    "end": "2894510"
  },
  {
    "text": "components are doing because they implement the same trace context propagation and they also provide you",
    "start": "2894510",
    "end": "2900210"
  },
  {
    "text": "some of this metric views which already kind of pre pre build by folks that",
    "start": "2900210",
    "end": "2907980"
  },
  {
    "text": "created this integrations in the first place and of course we want to improve this",
    "start": "2907980",
    "end": "2914100"
  },
  {
    "text": "and build more and more integrations one of the interesting examples is Google",
    "start": "2914100",
    "end": "2919590"
  },
  {
    "text": "Cloud basically just by mere fact that you ran in Google Cloud we will detect automatically all these",
    "start": "2919590",
    "end": "2926880"
  },
  {
    "text": "tags that represents the environment where you are running so we can detect",
    "start": "2926880",
    "end": "2932460"
  },
  {
    "text": "that you are running on Google kubernetes engine or Google App Engine or some other environment could be just",
    "start": "2932460",
    "end": "2939510"
  },
  {
    "text": "VM and attach these tags into every single span that gets created so you",
    "start": "2939510",
    "end": "2946080"
  },
  {
    "text": "will get a lot of this helpful information without doing anything okay",
    "start": "2946080",
    "end": "2953640"
  },
  {
    "start": "2953000",
    "end": "2953000"
  },
  {
    "text": "so open census has pretty active community we have this open census dot",
    "start": "2953640",
    "end": "2958950"
  },
  {
    "text": "your website guiter channel we develop",
    "start": "2958950",
    "end": "2964110"
  },
  {
    "text": "in the multiple github repos it's basically divided by different languages",
    "start": "2964110",
    "end": "2969330"
  },
  {
    "text": "that we support so I take a look I hope that you can also join and help us",
    "start": "2969330",
    "end": "2976460"
  },
  {
    "text": "improve and progress the community meets once a month its public meeting that you",
    "start": "2976460",
    "end": "2985320"
  },
  {
    "start": "2979000",
    "end": "2979000"
  },
  {
    "text": "all can join we have pretty substantial",
    "start": "2985320",
    "end": "2992240"
  },
  {
    "text": "improvements in the last year 2018 and we want to do even more in 2019 one of",
    "start": "2992240",
    "end": "2999270"
  },
  {
    "text": "the main focuses that we are going to work on this year is improving their",
    "start": "2999270",
    "end": "3004940"
  },
  {
    "text": "ease of use as you could see in the second demo of the metrics there are a lot of steps that you need to do to be",
    "start": "3004940",
    "end": "3011870"
  },
  {
    "text": "able to accomplish relatively simple tasks we want to reduce that so that you",
    "start": "3011870",
    "end": "3017480"
  },
  {
    "text": "almost don't need to do anything and you will still get a lot of information and",
    "start": "3017480",
    "end": "3022580"
  },
  {
    "text": "insights from your system if your instrumented with open census we also want to enhance the",
    "start": "3022580",
    "end": "3028990"
  },
  {
    "text": "feature set across all different languages that we support so that there will be no gaps in functionality between",
    "start": "3028990",
    "end": "3034990"
  },
  {
    "text": "the languages you can use in any language you want building strong community CN CF is one of the directions",
    "start": "3034990",
    "end": "3044170"
  },
  {
    "text": "that we want to go maybe except they're trying to accept this project into CN CF",
    "start": "3044170",
    "end": "3050349"
  },
  {
    "text": "as well as you might heard about open tracing which is another try to kind of",
    "start": "3050349",
    "end": "3058150"
  },
  {
    "text": "standardize on how do you do at tracing across the industry they share a lot of",
    "start": "3058150",
    "end": "3064900"
  },
  {
    "text": "very similar goals but the only cover tracing whereas open census covers",
    "start": "3064900",
    "end": "3070300"
  },
  {
    "text": "metrics and also logs in the future so we want to basically get together and",
    "start": "3070300",
    "end": "3077440"
  },
  {
    "text": "make sure that there is one standard that works for all and in progress over",
    "start": "3077440",
    "end": "3083140"
  },
  {
    "text": "there so I encourage you to give it a try and join the work and with that I'd",
    "start": "3083140",
    "end": "3090970"
  },
  {
    "start": "3089000",
    "end": "3089000"
  },
  {
    "text": "like to thank you and have any questions I'm here yeah",
    "start": "3090970",
    "end": "3104460"
  },
  {
    "text": "[Music]",
    "start": "3106640",
    "end": "3109760"
  },
  {
    "text": "so yeah it really depends on what suck",
    "start": "3120370",
    "end": "3126740"
  },
  {
    "text": "do you use and what circumstances for example if you develop in c-sharp and",
    "start": "3126740",
    "end": "3132050"
  },
  {
    "text": "use asp.net course so you can plug your tracer into the dependency injection of",
    "start": "3132050",
    "end": "3137810"
  },
  {
    "text": "HP dotted core and then you have this eye tracer available everywhere so you",
    "start": "3137810",
    "end": "3143420"
  },
  {
    "text": "can just use the eye tracer dot create a new span and take it from there",
    "start": "3143420",
    "end": "3149420"
  },
  {
    "text": "basically just one API call to create the trace also we are planning to have",
    "start": "3149420",
    "end": "3154850"
  },
  {
    "text": "the basic HTTP operations as well as G RPC operations already pre instrumented",
    "start": "3154850",
    "end": "3161420"
  },
  {
    "text": "so all you will need to do is just to say something like ads open census",
    "start": "3161420",
    "end": "3166780"
  },
  {
    "text": "extension methods where you just say how do you want to sample that who is your",
    "start": "3166780",
    "end": "3172490"
  },
  {
    "text": "exporter and we'll take it from there basically so every incoming request into",
    "start": "3172490",
    "end": "3178220"
  },
  {
    "text": "your asp.net core application will be automatically instrumented so we'll create a span for you the name of the",
    "start": "3178220",
    "end": "3185210"
  },
  {
    "text": "span will be as the name of the request that that isn't coming to you like slash",
    "start": "3185210",
    "end": "3190400"
  },
  {
    "text": "messages or whatever and then if if your code is making outgoing requests and you",
    "start": "3190400",
    "end": "3196520"
  },
  {
    "text": "use beat HTTP client or you use share PC client for making outgoing RPC calls we",
    "start": "3196520",
    "end": "3203480"
  },
  {
    "text": "will also instrument that as well so you just create those clients in advance when you once you register all your",
    "start": "3203480",
    "end": "3210380"
  },
  {
    "text": "components in dependency injection and once you get and that instance through dependency injection it's already pre",
    "start": "3210380",
    "end": "3217700"
  },
  {
    "text": "set up with with tracing and you can also do the same thing with metrics so",
    "start": "3217700",
    "end": "3222950"
  },
  {
    "text": "basically the majority of the common stuff you will be able to do maybe like",
    "start": "3222950",
    "end": "3228470"
  },
  {
    "text": "with two or three lines of code at the startup time when you just say who is your exporter and how to sample that but",
    "start": "3228470",
    "end": "3235700"
  },
  {
    "text": "if you want to do something more because with traces you're not only limited to",
    "start": "3235700",
    "end": "3241030"
  },
  {
    "text": "tracing the HTTP stack you can also trace some logical activities that happen in your application so it will",
    "start": "3241030",
    "end": "3248180"
  },
  {
    "text": "also be like one API call away okay so the span can span exposes so is",
    "start": "3248180",
    "end": "3257980"
  },
  {
    "text": "the word different components in your whole architecture so let's say if",
    "start": "3257980",
    "end": "3263290"
  },
  {
    "text": "you've got your web service is calling - you know another component on a",
    "start": "3263290",
    "end": "3271329"
  },
  {
    "text": "different machine and they can all you couldn't follow the trace from yeah yeah",
    "start": "3271329",
    "end": "3292540"
  },
  {
    "text": "so basically the trace is your entrant activity so say someone makes a request",
    "start": "3292540",
    "end": "3299680"
  },
  {
    "text": "to google.com and basically this triggers the start of the trace but then",
    "start": "3299680",
    "end": "3305470"
  },
  {
    "text": "there are a lot of internal systems that are involved in producing that response for you so you can think that every",
    "start": "3305470",
    "end": "3311920"
  },
  {
    "text": "system like that will produce at least one span which kind of describes the",
    "start": "3311920",
    "end": "3317349"
  },
  {
    "text": "activity of that subsystem so when when there is incoming requests to that subsystem it basically starts their span",
    "start": "3317349",
    "end": "3325829"
  },
  {
    "text": "it does what whatever it does and then when it finishes it ends the activity",
    "start": "3325829",
    "end": "3331900"
  },
  {
    "text": "for that span now all those pans are sent to the tracing back end as in since",
    "start": "3331900",
    "end": "3338049"
  },
  {
    "text": "every single span includes the information about the trace ad and and the parent for every span only the first",
    "start": "3338049",
    "end": "3345490"
  },
  {
    "text": "span doesn't have a parent which is the initialization of the full transaction so basically you will get all of this",
    "start": "3345490",
    "end": "3353740"
  },
  {
    "text": "representation of what's going on in the tracing back end just because they all",
    "start": "3353740",
    "end": "3360160"
  },
  {
    "text": "follow the same object model so all this trace tracing back ends will be able to",
    "start": "3360160",
    "end": "3366309"
  },
  {
    "text": "represent that in in the same way more or less okay yeah",
    "start": "3366309",
    "end": "3374849"
  },
  {
    "text": "yes so I think I'm not sure if it's",
    "start": "3377299",
    "end": "3396299"
  },
  {
    "text": "already supported specifically Kafka but I think there is plan to support it just",
    "start": "3396299",
    "end": "3402900"
  },
  {
    "text": "like any sort party integration so we do want to to be able to instrument all",
    "start": "3402900",
    "end": "3409829"
  },
  {
    "text": "those things in a way that you just declare in your court that I do want to get those traces or I do want to get",
    "start": "3409829",
    "end": "3415740"
  },
  {
    "text": "metrics from those external systems and it will just happen and you will have a speck which defines what you should",
    "start": "3415740",
    "end": "3422250"
  },
  {
    "text": "expect to get especially for for their metrics III can give example with ERP C",
    "start": "3422250",
    "end": "3429539"
  },
  {
    "text": "and HTTP but it should hold the same with also party integrations for example if you want to measure the quality of",
    "start": "3429539",
    "end": "3435599"
  },
  {
    "text": "service of incoming calls into that third party there is a view definition",
    "start": "3435599",
    "end": "3441000"
  },
  {
    "text": "that will say what are the metrics that will be collected by this third party",
    "start": "3441000",
    "end": "3446369"
  },
  {
    "text": "component so if you enable open census metrics for that component there is some",
    "start": "3446369",
    "end": "3451440"
  },
  {
    "text": "implementation that you would be able to find through this open census echo system but that implementation will just",
    "start": "3451440",
    "end": "3458250"
  },
  {
    "text": "guarantee that this metrics get produced for you and you just define where you want to send this matrix what is your",
    "start": "3458250",
    "end": "3464700"
  },
  {
    "text": "exporter and you will just get all that information and be able to create the graphs even though it's external",
    "start": "3464700",
    "end": "3471089"
  },
  {
    "text": "component for you so even if it's a message broker yes we would still want to take care of that okay cool thank you",
    "start": "3471089",
    "end": "3483200"
  },
  {
    "text": "well so it supports profiles so you can have work profile and personal profile",
    "start": "3495630",
    "end": "3505230"
  },
  {
    "text": "token of thanks from the NDC to charity that they support thank you very much",
    "start": "3510060",
    "end": "3516730"
  },
  {
    "text": "thank you",
    "start": "3516730",
    "end": "3519420"
  },
  {
    "text": "so actually we do yes so we do support even its it may sound a bit weird but we",
    "start": "3526950",
    "end": "3534370"
  },
  {
    "text": "support starting from 4.5 which is not officially supported by Microsoft and the reason for that is that Microsoft",
    "start": "3534370",
    "end": "3541570"
  },
  {
    "text": "folks said that a lot of people still used 4.5 and they don't want to lose",
    "start": "3541570",
    "end": "3546820"
  },
  {
    "text": "those people because essentially the story is you use something old which may",
    "start": "3546820",
    "end": "3551950"
  },
  {
    "text": "not be supported and in order to migrate that into something newer you at least",
    "start": "3551950",
    "end": "3557410"
  },
  {
    "text": "want to get the visibility on what it's doing right now and then start your migration story so this is why they want",
    "start": "3557410",
    "end": "3564220"
  },
  {
    "text": "to provide this observability into slightly older stock than what they officially support so that you can get",
    "start": "3564220",
    "end": "3570790"
  },
  {
    "text": "started with a really good picture and just move forward",
    "start": "3570790",
    "end": "3575400"
  },
  {
    "text": "actually was started at core the libraries weren't ready so he wrote it",
    "start": "3579660",
    "end": "3585960"
  },
  {
    "text": "framework now we just want to add some like quite big so we do want to move",
    "start": "3585960",
    "end": "3594390"
  },
  {
    "text": "yeah so it it is definitely supported now but the only acre-feet to that is",
    "start": "3597240",
    "end": "3604570"
  },
  {
    "text": "that not all the exporters have support for Boston framework and not not core",
    "start": "3604570",
    "end": "3611609"
  },
  {
    "text": "it works but I mean with rotten frame of the regular one but I need to double",
    "start": "3612770",
    "end": "3617960"
  },
  {
    "text": "check if all the specs for primitives work like I remember there was a recent",
    "start": "3617960",
    "end": "3623180"
  },
  {
    "text": "bug like from a few weeks ago where if you want to host primitives exporter",
    "start": "3623180",
    "end": "3628910"
  },
  {
    "text": "there is this way of like exporting your metrics so that primitives can grab them and it uses port so in some cases of",
    "start": "3628910",
    "end": "3636319"
  },
  {
    "text": "azure websites they may not allow you to export the separate ports you need to export it on the same ports as your",
    "start": "3636319",
    "end": "3642710"
  },
  {
    "text": "application so there are some folks working on there fixing that so it in in",
    "start": "3642710",
    "end": "3649339"
  },
  {
    "text": "general it's supported but we need to see the details if it really matches your use case thanks thanks",
    "start": "3649339",
    "end": "3665240"
  },
  {
    "text": "I hope that I mean as I felt like it started not well but then it progressed",
    "start": "3665240",
    "end": "3671029"
  },
  {
    "text": "better",
    "start": "3671029",
    "end": "3673390"
  }
]