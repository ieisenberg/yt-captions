[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "all right so uh welcome to the last slot of the day wasn't exactly sure uh what",
    "start": "2159",
    "end": "7600"
  },
  {
    "text": "kind of uh what kind of a room I'd get I didn't know if everybody would be uh be done by now uh have all of you seen some",
    "start": "7600",
    "end": "13759"
  },
  {
    "text": "some good stuff uh this is my first NDC by the way it's been a it's been a great conference I uh I really enjoyed it I've",
    "start": "13759",
    "end": "19920"
  },
  {
    "text": "seen three or four really good sessions today uh hopefully you've had the you've",
    "start": "19920",
    "end": "25080"
  },
  {
    "text": "had a similar experience um all right so uh I know I",
    "start": "25080",
    "end": "30359"
  },
  {
    "text": "realized the last Talk of the day we have uh after this we have uh what shrimp and beer on some sort of a large",
    "start": "30359",
    "end": "37559"
  },
  {
    "text": "boat is that is that what it is so I'll try to uh I'll try to make this as uh as",
    "start": "37559",
    "end": "42680"
  },
  {
    "text": "enjoyable as possible so that we can we can uh cruise through that and then uh and then get on a boat so um thanks for",
    "start": "42680",
    "end": "49840"
  },
  {
    "start": "48000",
    "end": "91000"
  },
  {
    "text": "coming we are going to talk about uh Azure Cosmos DB um just real quick about",
    "start": "49840",
    "end": "55480"
  },
  {
    "text": "me uh my name is Josh I've worked in uh in industry for 20 some odd years as a",
    "start": "55480",
    "end": "63040"
  },
  {
    "text": "consultant built a lot of software done some training and instructing uh right now I work for a company called Cloud",
    "start": "63040",
    "end": "69600"
  },
  {
    "text": "academy.com we do uh AWS Azure Google uh",
    "start": "69600",
    "end": "74680"
  },
  {
    "text": "cloud-based training or or uh training uh around the the three major Cloud uh",
    "start": "74680",
    "end": "80240"
  },
  {
    "text": "vendors we do some other things like uh some devops uh training and that sort of thing as well um yeah I'm an Azure MVP",
    "start": "80240",
    "end": "87560"
  },
  {
    "text": "and I also tweet at JPL Lane um occasionally all right so uh quick show",
    "start": "87560",
    "end": "94360"
  },
  {
    "start": "91000",
    "end": "315000"
  },
  {
    "text": "of hands before I get started how many of you are using as your Cosmos DB today",
    "start": "94360",
    "end": "99799"
  },
  {
    "text": "actually like doing something with it making money or attempting to make money okay a few of you document DB probably",
    "start": "99799",
    "end": "105759"
  },
  {
    "text": "uh before it was Cosmos we'll talk about that uh how many of you have done just like tried hello world so you've at",
    "start": "105759",
    "end": "111759"
  },
  {
    "text": "least sort of like seen it and yeah okay not not too many others um how about",
    "start": "111759",
    "end": "116920"
  },
  {
    "text": "things like mongod DB Cassandra those those kinds of things so any familiarity",
    "start": "116920",
    "end": "121960"
  },
  {
    "text": "with no SQL in general it's okay you know it's okay if you haven't we'll talk we'll talk about uh kind of give a broad",
    "start": "121960",
    "end": "127880"
  },
  {
    "text": "overview of of nosql or at least I won't go into too much detail on uh uh kind of",
    "start": "127880",
    "end": "133640"
  },
  {
    "text": "deep nosql kinds of things for those of you maybe who are less familiar uh but at any rate uh Cosmos DB",
    "start": "133640",
    "end": "140840"
  },
  {
    "text": "so let's start from the beginning since especially since some uh most of you don't have a ton of familiarity with kind of the uh uh nosql Paradigm itself",
    "start": "140840",
    "end": "149599"
  },
  {
    "text": "uh uh Cosmos DB was kind of first uh incarnated or or thought of back in 2010",
    "start": "149599",
    "end": "155599"
  },
  {
    "text": "as an internal Microsoft uh project uh the the it was called project Florence",
    "start": "155599",
    "end": "161239"
  },
  {
    "text": "uh The Story Goes that there are a number of teams inside of Microsoft uh as you can imagine of course Microsoft",
    "start": "161239",
    "end": "167239"
  },
  {
    "text": "being this kind of large multinational organization they've got several large software teams that have to deal with",
    "start": "167239",
    "end": "174040"
  },
  {
    "text": "the you know Pro various problems of data at scale right uh things that uh maybe the rest of us don't necessarily",
    "start": "174040",
    "end": "180239"
  },
  {
    "text": "have to do or at least don't have to do on as much of a regular basis as they do so you know these are teams like Office",
    "start": "180239",
    "end": "186200"
  },
  {
    "text": "365 uh ex couple of teams on the Xbox uh or organizations teams within the Xbox",
    "start": "186200",
    "end": "192159"
  },
  {
    "text": "or organization that sort of thing and the The Story Goes that these teams kind of kept bumping up against uh the same",
    "start": "192159",
    "end": "198760"
  },
  {
    "text": "sorts of problems over and over again uh they have to deal with large uh geographically dispersed user bases they",
    "start": "198760",
    "end": "205239"
  },
  {
    "text": "have uh gigabytes if not terabytes of data that they sort of have to shuttle around uh and move around the planet and",
    "start": "205239",
    "end": "211840"
  },
  {
    "text": "make various bits of that uh available uh with very high uptime very low latency uh for a very wide widely",
    "start": "211840",
    "end": "220120"
  },
  {
    "text": "geographically dispersed audience millions of of simultaneous users potentially and so you can imagine if",
    "start": "220120",
    "end": "225480"
  },
  {
    "text": "you got two or three teams or four teams internally kind of all banging their heads against the wall like how do we do",
    "start": "225480",
    "end": "230640"
  },
  {
    "text": "this how do we accomplish these these things at some point somebody inside Microsoft says well Gee let's spin up a",
    "start": "230640",
    "end": "236239"
  },
  {
    "text": "team and figure this out ourselves so in 2010 they started to do that it took them a couple of years but uh",
    "start": "236239",
    "end": "242239"
  },
  {
    "text": "they were successful and those teams by by all accounts uh were able to kind of use that that that uh in that tool",
    "start": "242239",
    "end": "249079"
  },
  {
    "text": "internally and then of course uh in 2015 the the the the decision was made to uh",
    "start": "249079",
    "end": "255159"
  },
  {
    "text": "make public some element of that or or some kind of subset of that and that was called document DB uh and that's been",
    "start": "255159",
    "end": "262199"
  },
  {
    "text": "around again since 2015 you if you're an Azure customer or a Azure consumer then",
    "start": "262199",
    "end": "268040"
  },
  {
    "text": "you've been able to use that for a couple of years now now um those of you who maybe uh the few of you who are",
    "start": "268040",
    "end": "273320"
  },
  {
    "text": "familiar maybe uh have paid attention and and saw at build uh six weeks or so ago um a new prod product called Cosmos",
    "start": "273320",
    "end": "281800"
  },
  {
    "text": "DB was introduced and this is basically the thing that subsumes document DB so",
    "start": "281800",
    "end": "286919"
  },
  {
    "text": "it uh I'll again I'll talk about the features in a moment but uh document DB now no longer exists properly it is now",
    "start": "286919",
    "end": "293800"
  },
  {
    "text": "called Cosmos DB all of the features all the functionality of document that was there in document DB kind of carries",
    "start": "293800",
    "end": "299759"
  },
  {
    "text": "forward it's still there in fact you literally we you know all of us who were using document DB uh the day prior you",
    "start": "299759",
    "end": "305600"
  },
  {
    "text": "know we woke up the next day build was going on and now all of a sudden we were all Cosmos DB uh users uh which actually",
    "start": "305600",
    "end": "312199"
  },
  {
    "text": "is an interesting testimony towards the uh the power of a manag service because the team I mean you literally there was",
    "start": "312199",
    "end": "318160"
  },
  {
    "start": "315000",
    "end": "495000"
  },
  {
    "text": "nothing to install there was nothing to upgrade no buttons to click we just literally woke up the next day and there we were all right so more generally",
    "start": "318160",
    "end": "325680"
  },
  {
    "text": "about the service itself uh first and foremost it is a nosql j data store so",
    "start": "325680",
    "end": "331319"
  },
  {
    "text": "that's a sort of a fancy way of saying that basically what you're what you're dealing with fundamentally is Json data",
    "start": "331319",
    "end": "337520"
  },
  {
    "text": "uh individual uh documents or individual elements that are packaged as Json and defined as Json um that again that may",
    "start": "337520",
    "end": "344360"
  },
  {
    "text": "be obvious to some of you but you know those of you maybe who are familiar with things like mongodb it's kind of a very",
    "start": "344360",
    "end": "350240"
  },
  {
    "text": "very similar kind of Paradigm kind of at its core uh another kind of core feature or",
    "start": "350240",
    "end": "355280"
  },
  {
    "text": "core element of Cosmos is the the notion of uh this push push button Geor",
    "start": "355280",
    "end": "360400"
  },
  {
    "text": "replication so uh this this quite literally allows you to go into the Azure portal if you're familiar with the",
    "start": "360400",
    "end": "366479"
  },
  {
    "text": "Azure portal you can log in you can also do this programmatically via apis but you can go into the Azure portal and you",
    "start": "366479",
    "end": "372720"
  },
  {
    "text": "you kind of present it with a map of the world and and a you know some icons for that represent all of the data centers",
    "start": "372720",
    "end": "378240"
  },
  {
    "text": "uh for Azure and you can just you pick a primary one when you create your account but then you have you can uh click on",
    "start": "378240",
    "end": "384520"
  },
  {
    "text": "any of the other uh secondary icons to create secondary uh replicas of your account meaning of all of the data in",
    "start": "384520",
    "end": "391240"
  },
  {
    "text": "that account uh and this is uh you can pick one extra one you can pick 40 I think there are uh 40 some odd data",
    "start": "391240",
    "end": "397880"
  },
  {
    "text": "centers I think now uh in Azure and you can literally replicate your data into all of them if you wish now of of course",
    "start": "397880",
    "end": "404280"
  },
  {
    "text": "you're going to pay for all of that uh and typically that's you know that's the the the the size and scale of of",
    "start": "404280",
    "end": "411120"
  },
  {
    "text": "organizations that that maybe would want to do that it's relatively small of course the the number of them that would",
    "start": "411120",
    "end": "416160"
  },
  {
    "text": "want to do that but still it's it's there if you if uh you're so in",
    "start": "416160",
    "end": "421520"
  },
  {
    "text": "mind the uh the next uh kind of major feature or or thing to kind of be aware",
    "start": "423319",
    "end": "428479"
  },
  {
    "text": "of with Cosmos is that it provides an SLA backed guarantee for low latency",
    "start": "428479",
    "end": "434080"
  },
  {
    "text": "reads and wrs now this is sort of uh you know kind of a generic uh a generic uh saying here or a generic you know this",
    "start": "434080",
    "end": "440160"
  },
  {
    "text": "isn't this isn't talking specifics but specifically the current SLA guarantees",
    "start": "440160",
    "end": "445400"
  },
  {
    "text": "at 49 uh so 99.99% uh SL laa guarantee for uh 10",
    "start": "445400",
    "end": "451639"
  },
  {
    "text": "millisecond reads or less and 50 millisecond or 15 millisecond reads or",
    "start": "451639",
    "end": "457520"
  },
  {
    "text": "rights uh or less uh in fact the this is this is reads and wrs occurring within",
    "start": "457520",
    "end": "462599"
  },
  {
    "text": "the same data center where the data you know that you're trying to read or write against uh resides uh of course there's",
    "start": "462599",
    "end": "468319"
  },
  {
    "text": "additional latency you know Network and that sort of thing if you're going across data centers the uh the uh the median reads",
    "start": "468319",
    "end": "475919"
  },
  {
    "text": "and I I have another slide on this but the the median read and right is actually closer to two I believe it's 2",
    "start": "475919",
    "end": "482240"
  },
  {
    "text": "milliseconds for reads and 6 milliseconds for wres uh so this is this is uh it's quite fast and again it's SLA",
    "start": "482240",
    "end": "488960"
  },
  {
    "text": "backed at 49s so the the team is uh is pretty proud of their ability toh to deliver on that kind of guarantee and I",
    "start": "488960",
    "end": "496520"
  },
  {
    "start": "495000",
    "end": "985000"
  },
  {
    "text": "I have another the very next slide actually I'll talk a little bit more about the slas um another aspect of this to to",
    "start": "496520",
    "end": "502440"
  },
  {
    "text": "keep in mind is this notion of provision throughput so the way that Cosmos DB works it it's it works differently than",
    "start": "502440",
    "end": "508360"
  },
  {
    "text": "your kind of standard uh database that maybe you're used to like SQL Server Oracle that kind of thing first of all",
    "start": "508360",
    "end": "513760"
  },
  {
    "text": "it is a managed service so you're not managing the infrastructure but fundamentally when you use it you you uh one of your",
    "start": "513760",
    "end": "520959"
  },
  {
    "text": "responsibilities is to specify uh specify at your account creation time or",
    "start": "520959",
    "end": "526480"
  },
  {
    "text": "really it's actually at the individual collection uh creation time uh meaning collection of Json documents you specify",
    "start": "526480",
    "end": "533800"
  },
  {
    "text": "the the the required throughput that you anticipate needing for your application so this may be you know this could be",
    "start": "533800",
    "end": "540160"
  },
  {
    "text": "something like uh a thousand you know you you you're a you're either a a software architect yourself or developer",
    "start": "540160",
    "end": "546279"
  },
  {
    "text": "or you work with the the team who has built your software which is going to run on top of Cosmos and your",
    "start": "546279",
    "end": "552640"
  },
  {
    "text": "responsibility is to sort of understand well I have this many users my application behaves in in these ways and",
    "start": "552640",
    "end": "558480"
  },
  {
    "text": "and has these kinds of access uh patterns against the data and so I might need a thousand requ I I might need to",
    "start": "558480",
    "end": "564519"
  },
  {
    "text": "support a th requests per second uh meaning reads or writes um or maybe I need a maybe I'm a a big organization I",
    "start": "564519",
    "end": "571240"
  },
  {
    "text": "need I literally need a million reads and writes per second I need to support that level you specify the provision",
    "start": "571240",
    "end": "576800"
  },
  {
    "text": "throughput that you require from the service and designate that when you sign up and when you create your collection",
    "start": "576800",
    "end": "582600"
  },
  {
    "text": "and the service guarantees again at a 49's level that you will you will get that provision throughput now of course",
    "start": "582600",
    "end": "589480"
  },
  {
    "text": "the trick or or at least you know you can imagine that the the the higher throughput that you designate I mean",
    "start": "589480",
    "end": "594800"
  },
  {
    "text": "nothing's for free right so the more throughput that you designate and say I need this I need you to guarant me this",
    "start": "594800",
    "end": "599959"
  },
  {
    "text": "the ability to have this this many reads and writes per second the the higher that number is the more you pay um and",
    "start": "599959",
    "end": "606920"
  },
  {
    "text": "in addition you pay regardless of whether you use it or not so if you provision a million requests per second",
    "start": "606920",
    "end": "612920"
  },
  {
    "text": "uh and then you only do 50 uh then you're paying for a million you're not paying for what you consume you're paying for what you ask for uh for what",
    "start": "612920",
    "end": "620480"
  },
  {
    "text": "you ask for so the your responsibility as a",
    "start": "620480",
    "end": "626160"
  },
  {
    "text": "developer uh and as an architect uh and as a consumer consumer of the service is to understand your needs and you know",
    "start": "626160",
    "end": "632320"
  },
  {
    "text": "try try as best you can to not over provision or certainly not underprovision I'll talk a little bit",
    "start": "632320",
    "end": "637639"
  },
  {
    "text": "more about kind of what that looks like and um at least some ideas on on kind of where you can go to to get some help",
    "start": "637639",
    "end": "644079"
  },
  {
    "text": "there because uh that is quite frankly one of the trickier aspects of of uh using the service I mentioned that it's",
    "start": "644079",
    "end": "650440"
  },
  {
    "text": "a managed service so again you're not installing something you're not running this on your servers uh it's literally I",
    "start": "650440",
    "end": "655720"
  },
  {
    "text": "I won't go through it because it takes a couple of minutes to spin up uh but if you're the portal you just more or less",
    "start": "655720",
    "end": "660760"
  },
  {
    "text": "just you know give your account a name you specify what data center you want to be your primary um there's a couple of",
    "start": "660760",
    "end": "667360"
  },
  {
    "text": "other things it's like four or five you know small fields and you click uh submit it takes a minute or two usually",
    "start": "667360",
    "end": "673639"
  },
  {
    "text": "and then you have an account and you can immediately start using it but again you're not patching servers you're not",
    "start": "673639",
    "end": "679200"
  },
  {
    "text": "uh you're not uh uh responsible for any of that the the cluster you know if you if uh require if you require a million",
    "start": "679200",
    "end": "686120"
  },
  {
    "text": "requests uh per second uh then obviously that's going to happen cross a number of machines it's not going to happen on one",
    "start": "686120",
    "end": "691480"
  },
  {
    "text": "single physical machine somewhere uh but again however that happens is sort of abstracted away from you you don't have",
    "start": "691480",
    "end": "697639"
  },
  {
    "text": "to worry about that what you worry about is that the service provides you a 49's SLA for that throughput that you've",
    "start": "697639",
    "end": "703120"
  },
  {
    "text": "asked for another uh I have a separate slide",
    "start": "703120",
    "end": "708160"
  },
  {
    "text": "on this I won't go into the detail too too many of the details right here but uh one of the really big value",
    "start": "708160",
    "end": "713839"
  },
  {
    "text": "propositions for Cosmos again when we're talking about data at scale is you have this notion of multiple consistency",
    "start": "713839",
    "end": "720120"
  },
  {
    "text": "choices or multiple consist consistency levels that you can choose from uh and this is uh this is basically helps you",
    "start": "720120",
    "end": "726880"
  },
  {
    "text": "solve the uh the problems that come with cap theorem so if you're familiar with dealing with uh with cap theorem and the",
    "start": "726880",
    "end": "734680"
  },
  {
    "text": "the consequences of cap theorem when you when you have distributed data essentially across multiple physical",
    "start": "734680",
    "end": "740519"
  },
  {
    "text": "nodes um these consistency choices allow you to kind of uh tune tune the behavior of the database that uh to something",
    "start": "740519",
    "end": "747480"
  },
  {
    "text": "which works well within the confines of cap theorem but works well for your application and again I have some more",
    "start": "747480",
    "end": "752639"
  },
  {
    "text": "details on that so I'll I'll skip the rest of the details right now but later in the talk we'll we'll go into that a",
    "start": "752639",
    "end": "757839"
  },
  {
    "text": "little bit more um so this next one uh again the from the standpoint of uh the",
    "start": "757839",
    "end": "763839"
  },
  {
    "text": "database itself it is not a relational database so you're not dealing upfront with with any any formal notion of",
    "start": "763839",
    "end": "769839"
  },
  {
    "text": "schema Cosmos DB just like just like uh Cassandra and other kind of nosql databases it will not enforce a",
    "start": "769839",
    "end": "777160"
  },
  {
    "text": "schema on your behalf you can certainly that in your own application if you need to um and of course you know typically",
    "start": "777160",
    "end": "782560"
  },
  {
    "text": "we need to at least uh to some kind of loose level uh but but it's not going to do you know you're not going to Define",
    "start": "782560",
    "end": "787800"
  },
  {
    "text": "any of that ahead of time in the database the other thing that it does uh from the standpoint of uh performance",
    "start": "787800",
    "end": "793880"
  },
  {
    "text": "you know getting these kind of low latency reads and writes uh it it by default it auto indexes all of the data",
    "start": "793880",
    "end": "799760"
  },
  {
    "text": "that's in that all the Json data that you submit that you push into the service and again if this is a million",
    "start": "799760",
    "end": "805240"
  },
  {
    "text": "requests per second and you're pushing a uh a very high volume of Rights into the",
    "start": "805240",
    "end": "810399"
  },
  {
    "text": "service all that autoindexing behavior is happening and all and the those that guaranteed uh 15 millisecond SLA for",
    "start": "810399",
    "end": "817800"
  },
  {
    "text": "rights that's all inclusive of autoindexing um I don't mention encryption on here but everything's encrypted by default in Cosmos DB so all",
    "start": "817800",
    "end": "825240"
  },
  {
    "text": "of that stuff is included in in all of the those uh performance metrics uh for the SLA last uh last quick thing then",
    "start": "825240",
    "end": "832160"
  },
  {
    "text": "we'll move on to the a little bit more on the SLA itself um Cosmos DB is a",
    "start": "832160",
    "end": "837199"
  },
  {
    "text": "multi multiple data model database uh and it supports multiple sdks um and",
    "start": "837199",
    "end": "843240"
  },
  {
    "text": "basically what that means is it is a docu the precursor document DB that we saw in the last slide that was a",
    "start": "843240",
    "end": "850000"
  },
  {
    "text": "document oriented uh database very similar to something like and that was kind of the original incarnation of",
    "start": "850000",
    "end": "856120"
  },
  {
    "text": "the service but now that Cosmos is out there are additional models data models that are essentially projected on top of",
    "start": "856120",
    "end": "863160"
  },
  {
    "text": "kind of the core model that that Cosmos maintains internally of your data so you",
    "start": "863160",
    "end": "868240"
  },
  {
    "text": "have Json documents that's still there you can you can do that if you want to and manipulate and work with the data",
    "start": "868240",
    "end": "873440"
  },
  {
    "text": "that way uh there's graph oriented data I'll do a demo of the graph oriented data uh in a in a in a little bit uh and",
    "start": "873440",
    "end": "881320"
  },
  {
    "text": "then there there are also currently two other kind of compatibility modes uh that you can work with uh with Cosmos",
    "start": "881320",
    "end": "887959"
  },
  {
    "text": "there's one for uh mongodb so if you happen to have uh a mongodb based",
    "start": "887959",
    "end": "893199"
  },
  {
    "text": "application and you're kind of comfortable and familiar with that you've written a lot of code you don't really want to change all your code but",
    "start": "893199",
    "end": "899279"
  },
  {
    "text": "you you're kind of interested in this in this Cosmos D DB thing and maybe maybe I could I want to try that out you can",
    "start": "899279",
    "end": "904800"
  },
  {
    "text": "actually Point your your existing mon  application uh to a cosmos DB",
    "start": "904800",
    "end": "910279"
  },
  {
    "text": "instance uh just give it a different by giving it a different connection string and by and large there's they're still",
    "start": "910279",
    "end": "915759"
  },
  {
    "text": "working out all of the compatibility but it's it's actually pretty close right now um and most applications",
    "start": "915759",
    "end": "921360"
  },
  {
    "text": "applications can just talk to Cosmos DB as is without changing any code uh same",
    "start": "921360",
    "end": "926560"
  },
  {
    "text": "thing for oh yeah go ahead question no schema on read right or it's schema on",
    "start": "926560",
    "end": "932079"
  },
  {
    "text": "read yeah good question yeah um if you have more questions on that then we can certainly talk about it afterwards but",
    "start": "932079",
    "end": "937880"
  },
  {
    "text": "yes you're exactly right um the uh the other compatibility layer",
    "start": "937880",
    "end": "943360"
  },
  {
    "text": "that exists so we have the other one is azure table storage anybody familiar with Azure table storage or use",
    "start": "943360",
    "end": "949519"
  },
  {
    "text": "it or yeah okay that's cool um yeah anybody who's used Azure for for a little while certainly is familiar with",
    "start": "949519",
    "end": "954880"
  },
  {
    "text": "that service there is a compatibility layer for Cosmos DB that works similar",
    "start": "954880",
    "end": "960040"
  },
  {
    "text": "to but it's for Azure tables so if you again if you know table storage has been around for a while I mean there's",
    "start": "960040",
    "end": "965560"
  },
  {
    "text": "nothing wrong with it it's not going anywhere but if you're interested in Cosmos and you like the the the features",
    "start": "965560",
    "end": "970800"
  },
  {
    "text": "it offers and you're kind of interested in trying it out then again you can you can use the compatibility layer Point your your existing table storage",
    "start": "970800",
    "end": "977319"
  },
  {
    "text": "application uh with its ex existing apis you don't have to rewrite any code give it a different connection string and now",
    "start": "977319",
    "end": "983240"
  },
  {
    "text": "it's talking to Cosmos instead of uh table storage so that's that's uh that's pretty clever and and there's 's",
    "start": "983240",
    "end": "989040"
  },
  {
    "text": "actually more work that the team is doing uh uh to to uh support additional databases as well additional scenarios",
    "start": "989040",
    "end": "995560"
  },
  {
    "text": "like that real uh real quick on the slas so",
    "start": "995560",
    "end": "1001360"
  },
  {
    "text": "every managed service every cloud based service that that anybody ever works with certainly supports an availability",
    "start": "1001360",
    "end": "1008000"
  },
  {
    "text": "SLA right like how how how long is you know how much downtime are we guarant guaranteeing or maximum downtime or",
    "start": "1008000",
    "end": "1014720"
  },
  {
    "text": "guaranteeing you're going to have over the course of a year that kind of thing and so Cosmo certainly offers that and",
    "start": "1014720",
    "end": "1020480"
  },
  {
    "text": "it offers it at a at a 49's SLA um so that's uh what what is that like8 hours",
    "start": "1020480",
    "end": "1026880"
  },
  {
    "text": "6 hours something like that a year it's it's it's very high I mean that's that's certainly a very good uh very good availability SLA but there are there are",
    "start": "1026880",
    "end": "1034079"
  },
  {
    "text": "three oops I just I hit the hit my uh button here on my remote there are three",
    "start": "1034079",
    "end": "1039240"
  },
  {
    "text": "other uh facets of the SLA which are worth noting and this is something that the cosmos DB team and Microsoft sort of",
    "start": "1039240",
    "end": "1045798"
  },
  {
    "text": "hold up as a bit of a differentiator relative to some of the other options and competitors that are out there and",
    "start": "1045799",
    "end": "1052039"
  },
  {
    "text": "so these other these other vectors are latency consistency and throughput and and they're they're more or less kind of",
    "start": "1052039",
    "end": "1057880"
  },
  {
    "text": "what they sound like latency obviously uh that that uh 10 milliseconds kind of Maximum window for reads 15 milliseconds",
    "start": "1057880",
    "end": "1064960"
  },
  {
    "text": "for rights that's that's that that's the 49's SLA um uh regarding latency for",
    "start": "1064960",
    "end": "1071000"
  },
  {
    "text": "consistency uh this goes back to the consistency models that I sort of skipped uh talking uh details about a",
    "start": "1071000",
    "end": "1076640"
  },
  {
    "text": "moment ago but essentially uh if you pick one you will pick one of the five consistency levels in Cosmos when you",
    "start": "1076640",
    "end": "1083440"
  },
  {
    "text": "use it and each of those sort of has certain consequences uh uh regarding kind of uh how your data will behave uh",
    "start": "1083440",
    "end": "1090520"
  },
  {
    "text": "when you actually use when you when you pick a consistency level and then use the use the service itself uh and so the",
    "start": "1090520",
    "end": "1097080"
  },
  {
    "text": "the SLA more or less guarantees that that behavior which is kind of spelled out for you uh again at a at a 49's SLA",
    "start": "1097080",
    "end": "1104600"
  },
  {
    "text": "the last one is throughput so again this is the um this is how uh how how many",
    "start": "1104600",
    "end": "1109679"
  },
  {
    "text": "reads and writes per second you designate and you say you want that you you require your your instance of Cosmos",
    "start": "1109679",
    "end": "1116760"
  },
  {
    "text": "to uh to allow you to uh to uh to perform and again this is this is maintained at a 49's level and you know",
    "start": "1116760",
    "end": "1123320"
  },
  {
    "text": "this is financially backed this is this is very similar to uh the financial backing aspect is very similar to",
    "start": "1123320",
    "end": "1128440"
  },
  {
    "text": "existing uh competitors and certainly pretty uh consistent with what's already there in Azure with other similar",
    "start": "1128440",
    "end": "1135559"
  },
  {
    "start": "1135000",
    "end": "1281000"
  },
  {
    "text": "Services uh real quickly uh I this is a bit of an ey chart and kind of a long list and I did this intentionally just",
    "start": "1135559",
    "end": "1142000"
  },
  {
    "text": "because there are a lot of like really nice things I'm a I'm a developer and and kind of software Architect by trade",
    "start": "1142000",
    "end": "1147480"
  },
  {
    "text": "I'm not not really a DBA or a data guy I I've done a lot of work built a lot of software uh that works with a variety of",
    "start": "1147480",
    "end": "1153320"
  },
  {
    "text": "different databases U but I'm certainly you know from a from a develop I I walk up to this and use this from a developer",
    "start": "1153320",
    "end": "1159600"
  },
  {
    "text": "standpoint and there are a number of really interesting features kind of developer or architect oriented features",
    "start": "1159600",
    "end": "1164960"
  },
  {
    "text": "in Cosmos and I just kind of wanted to call these out here and uh you can kind of read about them on your own time but just know that some of these things are",
    "start": "1164960",
    "end": "1171200"
  },
  {
    "text": "there couple that I will mention just those first those first two I I I mentioned already the default encryption",
    "start": "1171200",
    "end": "1177159"
  },
  {
    "text": "uh so you can't I I say default but you can't actually turn it off um the uh the",
    "start": "1177159",
    "end": "1182200"
  },
  {
    "text": "uh the encryption of of certainly the encryption of uh uh data when you're when you're making a connection and",
    "start": "1182200",
    "end": "1188360"
  },
  {
    "text": "you're actually talking to the service uh that's all done via H https using uh SSL so you can't you can't actually turn",
    "start": "1188360",
    "end": "1195200"
  },
  {
    "text": "that off but then you also have encryption at rest as well so all the data that's stored in the service is",
    "start": "1195200",
    "end": "1200679"
  },
  {
    "text": "encrypted and again that's inclusive of all of the uh you know the SLA guarantees for latency and throughput",
    "start": "1200679",
    "end": "1206799"
  },
  {
    "text": "that's all that that includes any encryption that's happening behind the scenes uh the other one that's interesting here from a de developer",
    "start": "1206799",
    "end": "1212320"
  },
  {
    "text": "standpoint is uh the that uh store procedures triggers and udfs are",
    "start": "1212320",
    "end": "1217480"
  },
  {
    "text": "supported in the service and they are authored in JavaScript uh which is kind of an interesting choice but basically",
    "start": "1217480",
    "end": "1224480"
  },
  {
    "text": "the the service itself embeds and hosts a uh J JavaScript runtime in all you",
    "start": "1224480",
    "end": "1230320"
  },
  {
    "text": "know in all the physical nodes where your data exists so if you define uh a store procedure that you know kind of",
    "start": "1230320",
    "end": "1236280"
  },
  {
    "text": "works against a certain collection then you know that that's that's kind of running local uh to to your data so",
    "start": "1236280",
    "end": "1242320"
  },
  {
    "text": "that's actually one of the patterns in Cosmos document DB before it and and certainly Cosmos coming forward uh one",
    "start": "1242320",
    "end": "1249360"
  },
  {
    "text": "of the patterns is to use store procedures for like big batch operations where you're trying to insert thousands of records at a time uh as opposed to",
    "start": "1249360",
    "end": "1256360"
  },
  {
    "text": "kind of iterating using an SDK or something thing and you know cuz essentially you're making kind of longdistance calls at that point um it's",
    "start": "1256360",
    "end": "1262960"
  },
  {
    "text": "much better to kind of just stream the data or you know store the data in Blob storage or something and then suck it in",
    "start": "1262960",
    "end": "1268440"
  },
  {
    "text": "uh uh using a store procedure um yeah there's some additional uh items on here I won't go go through them all but",
    "start": "1268440",
    "end": "1274960"
  },
  {
    "text": "certainly if you have questions about them or you're Cur curious come and talk to me after the talk and we can uh we",
    "start": "1274960",
    "end": "1280520"
  },
  {
    "text": "can talk about it all right so let's do a let's do a quick demo here um the the",
    "start": "1280520",
    "end": "1287080"
  },
  {
    "start": "1281000",
    "end": "1585000"
  },
  {
    "text": "demo that I want to do is is to demonstrate the mongodb compatibility support and you can't see",
    "start": "1287080",
    "end": "1294200"
  },
  {
    "text": "that uh let's see let me switch my screen sorry about",
    "start": "1294200",
    "end": "1302158"
  },
  {
    "text": "that Mouse there we go",
    "start": "1303640",
    "end": "1309600"
  },
  {
    "text": "project we'll duplicate that looks better okay so what",
    "start": "1309600",
    "end": "1315799"
  },
  {
    "text": "I want to do is uh demonstrate the mongodb compatibility support this tool that I'm showing you",
    "start": "1315799",
    "end": "1323240"
  },
  {
    "text": "is a it's basically a mongod DB shell um some of you may be familiar with it if you've used uh I think it was originally",
    "start": "1323240",
    "end": "1329080"
  },
  {
    "text": "called Robo or Chef something like that there's a there's a handful of open- source freely available",
    "start": "1329080",
    "end": "1335600"
  },
  {
    "text": "tools for talking to a mongod DB instance uh so again the the the short the short thing here is that this tool",
    "start": "1335600",
    "end": "1341640"
  },
  {
    "text": "knows nothing about Cosmos DB so but I do want to connect to a cosmos instance I I'll show you real quick in the in the",
    "start": "1341640",
    "end": "1348720"
  },
  {
    "text": "uh Azure portal I have I've created ahead of time since again it takes a couple minutes I've created a cosmos DB",
    "start": "1348720",
    "end": "1357000"
  },
  {
    "text": "uh account called mongod doppelganger and I already have a a",
    "start": "1357000",
    "end": "1363039"
  },
  {
    "text": "collection in here called complaints I have some uh CSV data I'll show you in a minute it's basically uh some data that",
    "start": "1363039",
    "end": "1369679"
  },
  {
    "text": "the US government makes available it's like uh consumer complaints like you know somebody was calling my my mobile",
    "start": "1369679",
    "end": "1375360"
  },
  {
    "text": "phone too often or somebody's a scammer you know charge too much money on my credit card that kind of thing um and so",
    "start": "1375360",
    "end": "1381559"
  },
  {
    "text": "there's a big database of all that stuff and you can get a CSV extract of it so I just grabbed that and and I took just a",
    "start": "1381559",
    "end": "1387279"
  },
  {
    "text": "little small slice of it it's only a couple hundred K U of documents but there uh but there's actually gigabytes",
    "start": "1387279",
    "end": "1393159"
  },
  {
    "text": "of this data um so this is the uh this is the the the portal kind of view this",
    "start": "1393159",
    "end": "1399880"
  },
  {
    "text": "is if you just real quick I mentioned this earlier but that that map for replicating the data so you can see here",
    "start": "1399880",
    "end": "1407240"
  },
  {
    "text": "this is the uh the northern Europe is where this data is currently located",
    "start": "1407240",
    "end": "1412480"
  },
  {
    "text": "that's where that blue checkbox is but if I wanted to I could click on any of a handful of other data",
    "start": "1412480",
    "end": "1418600"
  },
  {
    "text": "centers and oh not from this view sorry I have to click replicate data globally",
    "start": "1418600",
    "end": "1423840"
  },
  {
    "text": "and I'll get the same map that I can actually click on so I can just click on any of these you know so I two three",
    "start": "1423840",
    "end": "1430120"
  },
  {
    "text": "four I'm not going to actually do this because it'll it'll cost me money but um yeah we'll discard",
    "start": "1430120",
    "end": "1436480"
  },
  {
    "text": "that but that's uh that's the replication feature so let's go back to our tool I want to connect to this I'm",
    "start": "1436480",
    "end": "1443120"
  },
  {
    "text": "going to I'm going to edit this I've already connected to this before just tested it out to make sure it it it will",
    "start": "1443120",
    "end": "1448559"
  },
  {
    "text": "actually work here but if I zoom in again any of you who are familiar",
    "start": "1448559",
    "end": "1453679"
  },
  {
    "text": "with know that when you connect to a server basically you need the name of the server you need a port you",
    "start": "1453679",
    "end": "1459039"
  },
  {
    "text": "probably need authentication uh information etc etc so you kind of have this uh tool for for uh connecting to a",
    "start": "1459039",
    "end": "1465440"
  },
  {
    "text": " instance so if I go back to the portal and click on connection string",
    "start": "1465440",
    "end": "1472200"
  },
  {
    "text": "you'll see that I can get all that information conveniently enough right from the portal so I've got the host name I've got a port number that I would",
    "start": "1472200",
    "end": "1478320"
  },
  {
    "text": "talk to a username and a password uh big long ugly password that I would use and",
    "start": "1478320",
    "end": "1483520"
  },
  {
    "text": "so I've already configured that in here server name port number",
    "start": "1483520",
    "end": "1489880"
  },
  {
    "text": "authentication username password uh default database that I'm going to connect to or authentication database",
    "start": "1489880",
    "end": "1496600"
  },
  {
    "text": "the last thing I need to check is uh SS cell protocol support because again uh you can't talk to Cosmos DB using an",
    "start": "1496600",
    "end": "1502760"
  },
  {
    "text": "unencrypted or unauthenticated uh or a a sorry an unencrypted uh connection so",
    "start": "1502760",
    "end": "1509559"
  },
  {
    "text": "oops wrong way all right so let's cancel out of there we'll",
    "start": "1509559",
    "end": "1516840"
  },
  {
    "text": "connect oh come on say this would be a very boring demo if I can't connect all right so I already have a couple of",
    "start": "1518559",
    "end": "1524880"
  },
  {
    "text": "databases in here um again any anyone who's used M you know that kind of the hierarchy of of kind of elements in",
    "start": "1524880",
    "end": "1531039"
  },
  {
    "text": " you have you have like a a database and you have a collections inside of the database uh and then you",
    "start": "1531039",
    "end": "1537679"
  },
  {
    "text": "have documents inside of the collection and Cosmos kind of works the same way um uh again in kind of document mode and",
    "start": "1537679",
    "end": "1544240"
  },
  {
    "text": "and and certainly in compatibility mode so I'll I'll keep my existing database uh again I've already got a",
    "start": "1544240",
    "end": "1550039"
  },
  {
    "text": "collection but I'll create a new one and we'll call it complaints to conveniently",
    "start": "1550039",
    "end": "1557399"
  },
  {
    "text": "enough and you can see here let me zoom in now I have complaints too this is my",
    "start": "1557399",
    "end": "1562880"
  },
  {
    "text": "new collection it's got nothing in it yet if I switch back to the portal just to show you nothing's",
    "start": "1562880",
    "end": "1569840"
  },
  {
    "text": "up my",
    "start": "1569840",
    "end": "1572200"
  },
  {
    "text": "sleeve you can see that I now have two collections I had complaints already now",
    "start": "1576000",
    "end": "1581360"
  },
  {
    "text": "I have complaints too so again I I'll I'll kind of repeat myself and I'll kind of be beating a",
    "start": "1581360",
    "end": "1587399"
  },
  {
    "start": "1585000",
    "end": "1875000"
  },
  {
    "text": "dead horse here but again this tool that I'm using doesn't know anything native you know it has no notion of Cosmos DB",
    "start": "1587399",
    "end": "1593279"
  },
  {
    "text": "it's just using this compatibility layer talking to it it thinks it's talking to  so",
    "start": "1593279",
    "end": "1601440"
  },
  {
    "text": "yeah no it's actually using it's directly backed by SSD uh discs like",
    "start": "1605279",
    "end": "1611080"
  },
  {
    "text": "very fast discs um yeah yeah it's a virtual Andor physical machine I actually don't know what they're using",
    "start": "1611080",
    "end": "1617240"
  },
  {
    "text": "on I probably virtual machines but no you can't you can't you can't go",
    "start": "1617240",
    "end": "1623039"
  },
  {
    "text": "directly to the machines I mean it's all that's abstracted away from you on purp on purpose because that's all managed by",
    "start": "1623039",
    "end": "1628720"
  },
  {
    "text": "an infrastructure team within Azure you you don't have you can't not only do you not uh you know you don't have to manage",
    "start": "1628720",
    "end": "1635559"
  },
  {
    "text": "it you're not able to manage it um if you wanted to run your own uh nosql",
    "start": "1635559",
    "end": "1640799"
  },
  {
    "text": "database you would need to do that using like or something like that and host it in your own VM yeah okay so",
    "start": "1640799",
    "end": "1648240"
  },
  {
    "text": "let's import some data here uh that's that's really what we want what we want to see so I'm going to click on import",
    "start": "1648240",
    "end": "1655559"
  },
  {
    "text": "CSV and go find the CSV file this is this this is this",
    "start": "1655559",
    "end": "1661120"
  },
  {
    "text": "complaints uh file it's only it's like 100 yeah 167k it's not very large just",
    "start": "1661120",
    "end": "1666840"
  },
  {
    "text": "something we can you know won't take too long to import uh let me zoom in a little bit so",
    "start": "1666840",
    "end": "1672559"
  },
  {
    "text": "everybody can see this um this just kind of gives you know this tool just kind of gives me a little preview of what the",
    "start": "1672559",
    "end": "1677679"
  },
  {
    "text": "data looks like um it's assuming it's it's comma separated and you know the defaults are mostly fine here I think",
    "start": "1677679",
    "end": "1684480"
  },
  {
    "text": "you can see on the on the right hand side this is kind of a preview of what the Json is going to end up looking like when I when I uh insert",
    "start": "1684480",
    "end": "1691360"
  },
  {
    "text": "it so I'll keep going again I don't think I have to change anything here as I recall so I'll just start the import",
    "start": "1691360",
    "end": "1697399"
  },
  {
    "text": "this will this takes 45 seconds or so something like that um yeah we can see it's already 10%",
    "start": "1697399",
    "end": "1704240"
  },
  {
    "text": "done in fact I can I can I can uh even before this is done I'm pretty sure I",
    "start": "1704240",
    "end": "1709320"
  },
  {
    "text": "can start to browse this so if I open the collection yeah I you can already see",
    "start": "1709320",
    "end": "1714840"
  },
  {
    "text": "I've got some Json in here um I can get a tree View and start to start to drill",
    "start": "1714840",
    "end": "1720200"
  },
  {
    "text": "into this and see the the data in kind of a tree view um and we don't we certainly don't have to pick through all",
    "start": "1720200",
    "end": "1725320"
  },
  {
    "text": "this data but the but the the interesting thing is if I go back to the",
    "start": "1725320",
    "end": "1732399"
  },
  {
    "text": "collect if I go back to the browser I want to browse actually I don't want this View query Explorer",
    "start": "1732399",
    "end": "1741360"
  },
  {
    "text": "View and I'll go to complaints to now I'm going to use the even though I used",
    "start": "1742640",
    "end": "1748320"
  },
  {
    "text": "kind of the mongod DB compatibility layer to kind of get the data into the database I can still query against it",
    "start": "1748320",
    "end": "1754240"
  },
  {
    "text": "using the SQL U Cosmos DB has a SQL query projection um uh uh layered on top",
    "start": "1754240",
    "end": "1761480"
  },
  {
    "text": "of its kind of core data this core data model so I can do it's not a it's not full an SQL just a sec it's it's not",
    "start": "1761480",
    "end": "1768240"
  },
  {
    "text": "full ANC SQL it's kind of a at the at the moment it's kind of a restricted subset of SQL but it lets you do kind of",
    "start": "1768240",
    "end": "1774240"
  },
  {
    "text": "simple filters and projections uh that kind of thing and uh the the team has actually said publicly that uh most of",
    "start": "1774240",
    "end": "1781840"
  },
  {
    "text": "most of the the SQL query language like kind of the an SQL query language uh constructs could be could ultimately be",
    "start": "1781840",
    "end": "1788480"
  },
  {
    "text": "uh supported by Cosmos it's sort of a matter of priorities and and uh if and when they're actually going to support all that yeah does it",
    "start": "1788480",
    "end": "1796200"
  },
  {
    "text": "support uh it does not support for mongod DB aggregations at least not that I recall that's a I I remember at some",
    "start": "1796200",
    "end": "1802480"
  },
  {
    "text": "point uh having the same thought kind of internally and I don't I I actually don't recall the answer I can I can find",
    "start": "1802480",
    "end": "1808039"
  },
  {
    "text": "out um all right so anyway I can say select star from C where uh well I can",
    "start": "1808039",
    "end": "1816360"
  },
  {
    "text": "just say select star from C I think it'll just return the first 50 records that's probably the easiest thing to do instead of trying since I don't remember",
    "start": "1816360",
    "end": "1822600"
  },
  {
    "text": "all the all the values that are in here yeah here we go so you can see again",
    "start": "1822600",
    "end": "1828159"
  },
  {
    "text": "nothing up my sleeve there's actually data in here um",
    "start": "1828159",
    "end": "1835360"
  },
  {
    "text": "okay so the that the the the purpose of that demo is really just to sort of demonstrate that you know if if you're",
    "start": "1835360",
    "end": "1841919"
  },
  {
    "text": "if you're talking about a kind of a  a a compatibility layer at a protocol level with with uh with",
    "start": "1841919",
    "end": "1848320"
  },
  {
    "text": "something like uh one of the best ways you can demonstrate that certainly is just to run an import um because Imports are going to kind of exercise a",
    "start": "1848320",
    "end": "1855120"
  },
  {
    "text": "lot of the the core functionality uh uh of the of the protocol um okay I think yeah we can see",
    "start": "1855120",
    "end": "1864559"
  },
  {
    "text": "the cool uh let me get a drink of",
    "start": "1864559",
    "end": "1870120"
  },
  {
    "text": "water see how we're doing on time okay we're good all right so I've talked",
    "start": "1872639",
    "end": "1878360"
  },
  {
    "start": "1875000",
    "end": "2038000"
  },
  {
    "text": "about some of the the data models that are supported so I'll just kind of Breeze through this real quick this is the uh document or oriented model again",
    "start": "1878360",
    "end": "1885200"
  },
  {
    "text": "that was in document DB which was the the the kind of original incarnation of the database um that's still there today",
    "start": "1885200",
    "end": "1891240"
  },
  {
    "text": "we saw this kind of the SQL query projection on top of it and and this is supported by a number of languages and",
    "start": "1891240",
    "end": "1897840"
  },
  {
    "text": "platforms so there are sdks for net Java node.js",
    "start": "1897840",
    "end": "1903679"
  },
  {
    "text": "python couple that I'm forgetting um so you know you can also talk to it using a",
    "start": "1903679",
    "end": "1909320"
  },
  {
    "text": "rest API so if you if you're using uh some stack uh that doesn't have a native",
    "start": "1909320",
    "end": "1915120"
  },
  {
    "text": "SDK or if you just want if you just prefer using a API then you everything everything that you can do in Cosmos",
    "start": "1915120",
    "end": "1921200"
  },
  {
    "text": "ultimately is all done uh is all accomplished via can all all be accomplished via rest that includes",
    "start": "1921200",
    "end": "1926440"
  },
  {
    "text": "management uh fun functionality as well as kind of interacting with the data reads and",
    "start": "1926440",
    "end": "1931559"
  },
  {
    "text": "writes uh I just demonstrated the mongodb compatibility layer so um that kind of speaks for itself uh again you",
    "start": "1931559",
    "end": "1938039"
  },
  {
    "text": "can do that from any there's no there's no SDK support there per se it literally works at the protocol level so if you",
    "start": "1938039",
    "end": "1944200"
  },
  {
    "text": "have a node.js application that's that's currently talking to using or",
    "start": "1944200",
    "end": "1949720"
  },
  {
    "text": "something like that then you can talk to Cosmos um same thing with python Etc I mentioned Azure table storage",
    "start": "1949720",
    "end": "1956559"
  },
  {
    "text": "compatibility this currently is only supported in the as as I recall in the net SDK it's kind of in preview right",
    "start": "1956559",
    "end": "1962760"
  },
  {
    "text": "now so I think the I assume the goal is that to support this in other other sdks",
    "start": "1962760",
    "end": "1968000"
  },
  {
    "text": "as well but right now they're kind of just uh kicking the tires and kind of shaking it out um but this uh this does",
    "start": "1968000",
    "end": "1973639"
  },
  {
    "text": "work today um if you're if you're uh using net uh the last one which is interesting and I'll demonstrate this in",
    "start": "1973639",
    "end": "1979960"
  },
  {
    "text": "a few minutes the last one is the graph-based API so is anybody familiar with Apache",
    "start": "1979960",
    "end": "1985440"
  },
  {
    "text": "Tinker poop by any chance any like graph oriented yeah okay so so Apache Tinker",
    "start": "1985440",
    "end": "1991039"
  },
  {
    "text": "pop is basically a a a framework it's maintained by the Apache Foundation it's a framework for interacting with graph",
    "start": "1991039",
    "end": "1998720"
  },
  {
    "text": "oriented data you know kind of obvious but um but it has it has a query language called Gremlin and so what the",
    "start": "1998720",
    "end": "2005279"
  },
  {
    "text": "team did was to to basically build the uh on top of that so that that you can issue Gremlin queries and I'll again",
    "start": "2005279",
    "end": "2011880"
  },
  {
    "text": "I'll demonstrate this but you can issue Gremlin queries against uh Cosmos DB and",
    "start": "2011880",
    "end": "2017000"
  },
  {
    "text": "and interact with the data in kind of graph form that way and that's pretty interesting and again that that support",
    "start": "2017000",
    "end": "2022279"
  },
  {
    "text": "is uh there today for net and Java and I pretty sure I'm pretty sure the goal is",
    "start": "2022279",
    "end": "2028279"
  },
  {
    "text": "to extend that to uh to other sdks as well okay so sorry did you have a",
    "start": "2028279",
    "end": "2035320"
  },
  {
    "text": "question oh okay um programmable data consistency we haven't",
    "start": "2035320",
    "end": "2042200"
  },
  {
    "start": "2038000",
    "end": "2160000"
  },
  {
    "text": "I I've mentioned this a few times we haven't gotten into the details yet but so let's talk about that for a moment most uh most nosql databases uh at any",
    "start": "2042200",
    "end": "2050520"
  },
  {
    "text": "rate support either either strong cons what's called strong consistency or eventual consistency um some of them a",
    "start": "2050520",
    "end": "2057919"
  },
  {
    "text": "few of them support both and let you choose uh between the two but typically it's kind of an either or proposition so",
    "start": "2057919",
    "end": "2064320"
  },
  {
    "text": "strong consistency is kind of what we're used to you know if you if you've used server or Oracle or postgress that kind",
    "start": "2064320",
    "end": "2070079"
  },
  {
    "text": "of thing and you you know you do transactions against a relational database you're used to that's you're using strong consistency basically I you",
    "start": "2070079",
    "end": "2077040"
  },
  {
    "text": "know you can play with uh uh query hints and and uh isolation levels and that",
    "start": "2077040",
    "end": "2082320"
  },
  {
    "text": "kind of thing but I'm kind of skipping all that for the moment transactional consistency is basically you do a bunch",
    "start": "2082320",
    "end": "2088000"
  },
  {
    "text": "of work in a transaction update this update that Etc and it either all goes in and it's all it's all uh committed at",
    "start": "2088000",
    "end": "2094320"
  },
  {
    "text": "one time or It All Rolls back um because something something bad went wrong and it fails we all kind of know this right",
    "start": "2094320",
    "end": "2099960"
  },
  {
    "text": "so that's that's that's strong consistency eventual consistency is uh",
    "start": "2099960",
    "end": "2105040"
  },
  {
    "text": "uh in a distributed system uh where you have multiple physical nodes uh eventual consistency basically says I submit a",
    "start": "2105040",
    "end": "2111680"
  },
  {
    "text": "right I submit an update to the to my data and it's going to be handled by some physical node on in this in this",
    "start": "2111680",
    "end": "2117920"
  },
  {
    "text": "distributed cluster um that's that's handl that's like kind of processing all my data but it's going to take some time",
    "start": "2117920",
    "end": "2124440"
  },
  {
    "text": "maybe milliseconds maybe seconds maybe longer it's going to take some time for that data that that update to propagate",
    "start": "2124440",
    "end": "2131040"
  },
  {
    "text": "around to all of the physical copies all the physical replicas that may exist in these other nodes in this distributed uh",
    "start": "2131040",
    "end": "2137760"
  },
  {
    "text": "system and both of these uh choices have advantages both of these choices have",
    "start": "2137760",
    "end": "2143240"
  },
  {
    "text": "disadvantages some are appro some of you know one of these is appropriate for some applications one is appropriate for",
    "start": "2143240",
    "end": "2148680"
  },
  {
    "text": "others there are some applications for which neither one of these are particularly a good fit which is exactly",
    "start": "2148680",
    "end": "2153920"
  },
  {
    "text": "where we we go to what cause that leads me into what Cosmos DB offers from a consistency standpoint and again I I'll",
    "start": "2153920",
    "end": "2161079"
  },
  {
    "start": "2160000",
    "end": "2195000"
  },
  {
    "text": "preface this by saying that this is probably uh Microsoft certainly holds this up as as perhaps the kind of",
    "start": "2161079",
    "end": "2168200"
  },
  {
    "text": "differentiating feature uh for Cosmos relative to things like uh Google uh has",
    "start": "2168200",
    "end": "2173760"
  },
  {
    "text": "big table and now they have Cloud spanner um uh AWS has Dynamo DB then you",
    "start": "2173760",
    "end": "2179480"
  },
  {
    "text": "know there are other kind of similar uh competitive offerings um none of them and again Microsoft makes this claim",
    "start": "2179480",
    "end": "2186240"
  },
  {
    "text": "none of them offer five different as many as more than two really consistency choices but certainly not five different",
    "start": "2186240",
    "end": "2192680"
  },
  {
    "text": "consistency models that you can choose from so you can see on the on this this spectrum we still have strong and",
    "start": "2192680",
    "end": "2198440"
  },
  {
    "start": "2195000",
    "end": "2275000"
  },
  {
    "text": "eventual consistency you can choose either one of those you you basically what happens is when you use Cosmos you",
    "start": "2198440",
    "end": "2203480"
  },
  {
    "text": "pick one uh and you say for your account you say this is my default so you can pick strong meaning you get that that",
    "start": "2203480",
    "end": "2209599"
  },
  {
    "text": "that strong notion of transactional consistency um and and that that allows you to do to to do things like uh ensure",
    "start": "2209599",
    "end": "2217119"
  },
  {
    "text": "that if you make an update among other things there are lots of kind of consequences of of choosing these options um but for example if you use",
    "start": "2217119",
    "end": "2224680"
  },
  {
    "text": "strong consistency you make an update and or you do you perform some work in a transaction and nobody else is going to",
    "start": "2224680",
    "end": "2230480"
  },
  {
    "text": "see the consequences of those updates until that transaction fully commits uh and is fully uh fully executed",
    "start": "2230480",
    "end": "2236720"
  },
  {
    "text": "successfully uh so you know that that may be something that your application you know you kind of examine your application and you think yes I'm going",
    "start": "2236720",
    "end": "2243200"
  },
  {
    "text": "to need this and so I'm going to use uh I'm going to pick and choose uh strong consistency the problem with that of",
    "start": "2243200",
    "end": "2249359"
  },
  {
    "text": "course is kind of like the slide says at the bottom uh you get you get lower latency higher availability and better",
    "start": "2249359",
    "end": "2254720"
  },
  {
    "text": "scalability the the further you go on the right hand side of that Spectrum so transactional consistency strong",
    "start": "2254720",
    "end": "2260119"
  },
  {
    "text": "consistency is nice uh it you know we we all you know as developers we probably understand it pretty well we're kind of",
    "start": "2260119",
    "end": "2265480"
  },
  {
    "text": "used to it and comfortable with it um and so it's nice from that standpoint but there is definitely a perform",
    "start": "2265480",
    "end": "2271079"
  },
  {
    "text": "overall performance and scalability uh penalty uh for choosing that model so then you can go the other direction if",
    "start": "2271079",
    "end": "2276599"
  },
  {
    "start": "2275000",
    "end": "2345000"
  },
  {
    "text": "you want you can say yeah you know what uh I you know I'm comfortable with a eventual consistency I've built systems like that before and that's the way of",
    "start": "2276599",
    "end": "2282880"
  },
  {
    "text": "the world and and uh you know I I've been doing this thing for years so I'm happy with that and I'll deal with the",
    "start": "2282880",
    "end": "2288359"
  },
  {
    "text": "consequences of eventual consistency myself uh in my application and so I'm good I'm just going to choose that you",
    "start": "2288359",
    "end": "2293760"
  },
  {
    "text": "can do that but these other three options kind of uh give you some some other choices that may work better for",
    "start": "2293760",
    "end": "2299960"
  },
  {
    "text": "your application so just real quickly bounded staleness I I can summarize that",
    "start": "2299960",
    "end": "2305079"
  },
  {
    "text": "as saying bounded staleness is basically eventual consistency if you're familiar with eventual consistency it's it's",
    "start": "2305079",
    "end": "2310800"
  },
  {
    "text": "eventual consistency where eventual has a definition it has an upper bound so eventual consistency again could be uh",
    "start": "2310800",
    "end": "2317599"
  },
  {
    "text": "you know your data has to get propagated to all the other nodes in the in the cluster um that could take milliseconds",
    "start": "2317599",
    "end": "2323319"
  },
  {
    "text": "it could take seconds it could take longer there's no guarantee you don't know how long it's going to take um",
    "start": "2323319",
    "end": "2329000"
  },
  {
    "text": "bounded staleness basically allows you to specify how long it what's kind of what's the maximum time that your",
    "start": "2329000",
    "end": "2335240"
  },
  {
    "text": "application can tolerate um time or number of versions essentially number of uh of updates to a single",
    "start": "2335240",
    "end": "2342599"
  },
  {
    "text": "piece of data uh it gives you a the the you can basically say this is the maximum window that my application can",
    "start": "2342599",
    "end": "2349760"
  },
  {
    "start": "2345000",
    "end": "2382000"
  },
  {
    "text": "tolerate uh the data being uh kind of stale or out of date and what that does is of course it gives you uh it gives",
    "start": "2349760",
    "end": "2356359"
  },
  {
    "text": "you a little bit of a mix of eventual consistency with some guarantee it's not strong consistency but it's a little bit",
    "start": "2356359",
    "end": "2362319"
  },
  {
    "text": "of a guarantee and uh you you'll get a little bit better performance a a little bit higher availability Etc then you",
    "start": "2362319",
    "end": "2369079"
  },
  {
    "text": "would uh with strong consistency if you're able to tolerate that uh if that doesn't work for you you",
    "start": "2369079",
    "end": "2375119"
  },
  {
    "text": "can pick something like session consistency in fact this is the default in Cosmos as I recall if you don't choose anything uh uh anything else",
    "start": "2375119",
    "end": "2382359"
  },
  {
    "start": "2382000",
    "end": "2408000"
  },
  {
    "text": "explicitly session consistency is interesting because it uh it's it works really well for unsurprisingly for",
    "start": "2382359",
    "end": "2389040"
  },
  {
    "text": "session oriented applications um and there are lots of applications kind of deal with sessions so if you uh this",
    "start": "2389040",
    "end": "2396760"
  },
  {
    "text": "could be anything from like an IO imagine like an iot application where you've got you know a million devices",
    "start": "2396760",
    "end": "2402119"
  },
  {
    "text": "out in the field uh you know measuring uh uh condensation uh on grass or",
    "start": "2402119",
    "end": "2407839"
  },
  {
    "text": "something like that and so uh all these devices are uploading data or maybe",
    "start": "2407839",
    "end": "2412880"
  },
  {
    "start": "2408000",
    "end": "2431000"
  },
  {
    "text": "reading data from the cloud but all they really care about all the device cares about is its own data right I mean all",
    "start": "2412880",
    "end": "2420599"
  },
  {
    "text": "those typically not always but typically in an iot scenario the devices aren't all kind of like interacting with one",
    "start": "2420599",
    "end": "2426440"
  },
  {
    "text": "another and and aggregating data at the edge that's all being done by some analytics package kind of on the back",
    "start": "2426440",
    "end": "2431560"
  },
  {
    "start": "2431000",
    "end": "2503000"
  },
  {
    "text": "end so the device the device essentially represents a session it represents its own kind of unit of work or scope of",
    "start": "2431560",
    "end": "2437319"
  },
  {
    "text": "work uh when it talks to uh the database or you know the the cloud which is you know has the database behind it and so",
    "start": "2437319",
    "end": "2443960"
  },
  {
    "text": "if you can use session consistency and this this model basically guarantees that the the device in this case can uh",
    "start": "2443960",
    "end": "2452200"
  },
  {
    "text": "if it updates data it can immediately read that data that it just updated and it's guaranteed that will see its own",
    "start": "2452200",
    "end": "2458079"
  },
  {
    "text": "updates because that's one of the problems I mean there are again there are a number of potential consequences of eventual consistency one of them is I",
    "start": "2458079",
    "end": "2465760"
  },
  {
    "text": "I submit a right and then I immediately submit a query to to kind of view that that data that I just updated but I may",
    "start": "2465760",
    "end": "2472359"
  },
  {
    "text": "not get it because again if if my if my update was serviced by physical node one",
    "start": "2472359",
    "end": "2477960"
  },
  {
    "text": "and my query that immediately follows that update was serviced by physical node 17 because again this is just one",
    "start": "2477960",
    "end": "2484240"
  },
  {
    "text": "you know some big cluster somewhere um but it's just one service to me but if it just so happens that physically that",
    "start": "2484240",
    "end": "2489599"
  },
  {
    "text": "data hasn't propagated yet I'm not going in eventual consistency I'm not going to see my update right away uh necessarily",
    "start": "2489599",
    "end": "2496319"
  },
  {
    "text": "with session consistency if it's my update that I just made then this then the service guarantees that I will see",
    "start": "2496319",
    "end": "2501760"
  },
  {
    "text": "that update um and again you the the whole point is that as you move further on this the Spectrum you get a little",
    "start": "2501760",
    "end": "2508000"
  },
  {
    "start": "2503000",
    "end": "2600000"
  },
  {
    "text": "bit better availability a little bit lower latency and so you kind of choose the model that works best for you the",
    "start": "2508000",
    "end": "2514440"
  },
  {
    "text": "last one consistent prefix um more I can sum that up uh This Way U eventual",
    "start": "2514440",
    "end": "2519800"
  },
  {
    "text": "consistency one again one of the consequences of eventual consistency is out of or seeing uh updates out of order",
    "start": "2519800",
    "end": "2526839"
  },
  {
    "text": "so if I'm using eventual consist consistency and I update a piece of data I have update one then update two then",
    "start": "2526839",
    "end": "2533480"
  },
  {
    "text": "update three then under eventual consistency you as a reader as a consumer of that same data you may see",
    "start": "2533480",
    "end": "2540119"
  },
  {
    "text": "my updates out of order you may see 321 1 two3 231 whatever there's again",
    "start": "2540119",
    "end": "2546079"
  },
  {
    "text": "there's no guarantee with a eventual cons consistency that you will see the the updates in the correct order that I",
    "start": "2546079",
    "end": "2551240"
  },
  {
    "text": "that I submitted them with consistent prefix you do have that guarantee so again the guarantees here are all again",
    "start": "2551240",
    "end": "2557839"
  },
  {
    "text": "remember back to the SLA Slide the SLA guarantees the these behaviors with these different consistency levels so if",
    "start": "2557839",
    "end": "2564599"
  },
  {
    "text": "your application is maybe okay with with eventual consistency but you really kind of need uh the you know to see you you",
    "start": "2564599",
    "end": "2571920"
  },
  {
    "text": "kind of want to see the updates in order like maybe you're building a a queuing system on top of Cosmos for some reason",
    "start": "2571920",
    "end": "2577800"
  },
  {
    "text": "you're not using uh you know some other Q mechanism you just want to use Cosmos as as kind of a glorified Q then",
    "start": "2577800",
    "end": "2584280"
  },
  {
    "text": "consistent prefix would be your friend that that would be the option that you would choose um all right there's I mean this",
    "start": "2584280",
    "end": "2589800"
  },
  {
    "text": "is I could probably do a two-hour talk on consistency um but I uh I won't in the interest of time and and in the",
    "start": "2589800",
    "end": "2595599"
  },
  {
    "text": "interest of not putting everybody to sleep yeah real quick yes you can you can you can uh you",
    "start": "2595599",
    "end": "2603359"
  },
  {
    "start": "2600000",
    "end": "2627000"
  },
  {
    "text": "can choose a you can go from uh left to right essentially and choose a less",
    "start": "2603359",
    "end": "2608440"
  },
  {
    "text": "stringent um consistency uh option on a per query basis yes you",
    "start": "2608440",
    "end": "2615359"
  },
  {
    "text": "can yes yeah in the SDK",
    "start": "2616440",
    "end": "2621720"
  },
  {
    "text": "yes I don't know if it's supported with the compatibility layer that's actually a good question I I don't I",
    "start": "2626160",
    "end": "2631920"
  },
  {
    "start": "2627000",
    "end": "2654000"
  },
  {
    "text": "don't uh I don't I've never tried that so the short answer is I don't know how that works and I'm not even sure if it's",
    "start": "2631920",
    "end": "2637400"
  },
  {
    "text": "supported um that may only be supported in the kind of the the native kind of document D document oriented uh store um",
    "start": "2637400",
    "end": "2644920"
  },
  {
    "text": "probably in graph as well was there was there uh was there another question yeah",
    "start": "2644920",
    "end": "2650119"
  },
  {
    "text": "can you uh it's I believe you're only you're",
    "start": "2650119",
    "end": "2656960"
  },
  {
    "start": "2654000",
    "end": "2672000"
  },
  {
    "text": "you only overwrite it on the reads as I recall I can uh again I can find that",
    "start": "2656960",
    "end": "2662480"
  },
  {
    "text": "out um uh and and certainly let you know yeah I I don't recall actually I I know",
    "start": "2662480",
    "end": "2668880"
  },
  {
    "text": "definitely on reads but yeah I think yeah I'm not sure I'm",
    "start": "2668880",
    "end": "2674640"
  },
  {
    "start": "2672000",
    "end": "2708000"
  },
  {
    "text": "not sure what that there would be some weird consequences with that so I'm pretty sure it's just reads but good question um how are we doing on time by",
    "start": "2674640",
    "end": "2681960"
  },
  {
    "text": "the way uh",
    "start": "2681960",
    "end": "2686240"
  },
  {
    "text": "yes uh that's also so a good question um I don't recall I've actually believe it",
    "start": "2694559",
    "end": "2701240"
  },
  {
    "text": "or not I've actually read the SLA it's not as boring as it I mean most slas are incredibly boring right um written by an",
    "start": "2701240",
    "end": "2707280"
  },
  {
    "text": "attorney um this one the the the one for Cosmos is actually pretty digestible and I but I don't recall if it I don't think",
    "start": "2707280",
    "end": "2714040"
  },
  {
    "start": "2708000",
    "end": "2736000"
  },
  {
    "text": "it specifies a consistency level uh in the SLA uh for uh uh under latency uh",
    "start": "2714040",
    "end": "2721480"
  },
  {
    "text": "I'm trying to remember now if it actually designates it and says I I understand your question and I can't",
    "start": "2721480",
    "end": "2727000"
  },
  {
    "text": "remember if it actually specifies which consistency model um uh the the 10 and",
    "start": "2727000",
    "end": "2733119"
  },
  {
    "text": "15 milliseconds uh falls under um again hold that let me know afterwards and",
    "start": "2733119",
    "end": "2738520"
  },
  {
    "start": "2736000",
    "end": "2749000"
  },
  {
    "text": "I'll I'll write a couple of these down um and I can I can give you uh those of you with questions I can give you my",
    "start": "2738520",
    "end": "2743839"
  },
  {
    "text": "email address and we can certainly resolve that afterwards fair enough okay",
    "start": "2743839",
    "end": "2748880"
  },
  {
    "text": "all right uh couple other things um I'll Breeze through these and then I have a couple of things that I wanted to talk",
    "start": "2748880",
    "end": "2754359"
  },
  {
    "text": "about as far as like you know i' I've worked with a couple of clients uh uh using document DB at any rate the the",
    "start": "2754359",
    "end": "2761119"
  },
  {
    "text": "precursor to Cosmos and so I have some kind of good and bad or or kind of things to watch out for uh as you start",
    "start": "2761119",
    "end": "2766520"
  },
  {
    "text": "to use it uh as well as some maybe some speculative stuff that I I anticipate maybe the team will will start working",
    "start": "2766520",
    "end": "2772520"
  },
  {
    "text": "on but uh in the meantime a couple of other um couple of other things on availability and",
    "start": "2772520",
    "end": "2778280"
  },
  {
    "text": "performance um the service supports U both manual and automated failover so uh",
    "start": "2778280",
    "end": "2784520"
  },
  {
    "start": "2779000",
    "end": "2822000"
  },
  {
    "text": "that's pretty cool because basically you can you can either th designate if you if you replicate into multiple other",
    "start": "2784520",
    "end": "2789800"
  },
  {
    "text": "data centers you can specify the priority in which those uh fail so uh or should fail over so if the if your",
    "start": "2789800",
    "end": "2796400"
  },
  {
    "text": "primary fails for some reason then you can say well I'm mean you know my primary is in East us and I want my",
    "start": "2796400",
    "end": "2801680"
  },
  {
    "text": "secondary to be uh Western Europe and you you know you can just kind of designate the order in which they",
    "start": "2801680",
    "end": "2806760"
  },
  {
    "text": "they'll occur the other cool thing you can do is you can do manual failover there's a button literally in the portal",
    "start": "2806760",
    "end": "2814720"
  },
  {
    "text": "uh if I go to the oh you can't see that well that's all",
    "start": "2814720",
    "end": "2821200"
  },
  {
    "text": "right it's you can trust me um there's a button in the portal where you can just you can go and you can uh uh say I want",
    "start": "2821200",
    "end": "2826960"
  },
  {
    "text": "to fail over basically what it doesn't it doesn't bring down the data center it basically just makes your uh instance of",
    "start": "2826960",
    "end": "2833319"
  },
  {
    "text": "Cosmos unavailable in that dat in your primary data center and then you can test your uh your Disaster Recovery",
    "start": "2833319",
    "end": "2839720"
  },
  {
    "text": "strategy so you know when your boss says to you hey you know we have this Dr strategy have we tested it this is actually a way for you to do that and of",
    "start": "2839720",
    "end": "2846200"
  },
  {
    "text": "course if you're using Cosmos is kind of like the the basis you know the the the backbone or Foundation of your of your",
    "start": "2846200",
    "end": "2852200"
  },
  {
    "text": "application then this is a very I won't say easy but it's certainly an obvious way that you can initiate a failover and",
    "start": "2852200",
    "end": "2858359"
  },
  {
    "text": "kind of test all of the failover mechanisms you know your application uh the database should fail over but of",
    "start": "2858359",
    "end": "2863400"
  },
  {
    "text": "course all of your applications that talk to it should also fail over in some appropriate manner as well and you can",
    "start": "2863400",
    "end": "2868920"
  },
  {
    "text": "uh you can test that yourself the other interesting uh thing that this allows you to do um you can do all that there's",
    "start": "2868920",
    "end": "2874200"
  },
  {
    "text": "a button in the in the portal to do this there's also API to do it and so uh I've",
    "start": "2874200",
    "end": "2879359"
  },
  {
    "text": "I've not worked with anybody personally who does this but I'm aware um the team has talked about uh they have customers",
    "start": "2879359",
    "end": "2885079"
  },
  {
    "text": "who have uh uh they the Azure team has customers who themselves have customers",
    "start": "2885079",
    "end": "2890880"
  },
  {
    "text": "who are geographically dispersed around the world uh like e-commerce uh style customer or or or physical Commerce",
    "start": "2890880",
    "end": "2897920"
  },
  {
    "text": "customers um where you know the typically their their uh their workloads or their their requests uh are kind of",
    "start": "2897920",
    "end": "2905280"
  },
  {
    "text": "follow the follow the clock or you know they occur in like these eight or 10 hour Windows as the the sun you know or",
    "start": "2905280",
    "end": "2911359"
  },
  {
    "text": "as the Earth rotates around the uh the Sun so um they uh you can basically uh",
    "start": "2911359",
    "end": "2918640"
  },
  {
    "text": "uh you can basically turn turn off or or make unavailable uh data centers kind of",
    "start": "2918640",
    "end": "2924520"
  },
  {
    "text": "as the uh as the Earth turns and just kind of follow the clock as it goes around and ensure that uh the customers",
    "start": "2924520",
    "end": "2930599"
  },
  {
    "text": "the the folks who are using your database are always talk you know the the the database they're talking to is always the one that's kind of physically",
    "start": "2930599",
    "end": "2937079"
  },
  {
    "text": "closest to them you kind of get the lowest latency that way um you can uh",
    "start": "2937079",
    "end": "2942440"
  },
  {
    "start": "2941000",
    "end": "3009000"
  },
  {
    "text": "you can talk to Cosmos DB programmatically using uh both physical and logical endpoints so uh more or less",
    "start": "2942440",
    "end": "2948960"
  },
  {
    "text": "what this means is you can you can uh create a connection and specify exactly the data center again if you're in",
    "start": "2948960",
    "end": "2954400"
  },
  {
    "text": "multiple data centers you can specify exactly the data center you want to you want to uh connect and talk to or you",
    "start": "2954400",
    "end": "2960559"
  },
  {
    "text": "can use a logical endpoint which is more or less just like a DNS name that that excludes kind of uh any geography in it",
    "start": "2960559",
    "end": "2967640"
  },
  {
    "text": "uh and then you can also uh when you do that you can sort of designate uh again the the the sequence or the priority of",
    "start": "2967640",
    "end": "2974520"
  },
  {
    "text": "the actual physical uh data uh uh data centers that you want to talk to so you use the logical endpoint and you say",
    "start": "2974520",
    "end": "2980680"
  },
  {
    "text": "well the first one I want you to try is East us and then the next one I want you to try is West us and Etc you can you",
    "start": "2980680",
    "end": "2986839"
  },
  {
    "text": "can kind of create this prioritized list um that allows it's basically a way to uh to kind of provide uh uptime and",
    "start": "2986839",
    "end": "2993799"
  },
  {
    "text": "availability kind of from the client side um and and sure that if a data center goes down that the that the uh",
    "start": "2993799",
    "end": "2999920"
  },
  {
    "text": "the SDK essentially the the client SDK will automatically retry using uh using the next uh data center uh By",
    "start": "2999920",
    "end": "3008079"
  },
  {
    "text": "Priority okay uh real quick uh I've mentioned uh load latency reads and rights again 10 milliseconds and 15",
    "start": "3008079",
    "end": "3015240"
  },
  {
    "start": "3009000",
    "end": "3030000"
  },
  {
    "text": "milliseconds uh the median is uh for both is less than 10 which is uh which is uh good to know every again this",
    "start": "3015240",
    "end": "3021440"
  },
  {
    "text": "works because everything is indexed uh and it works independent of uh the fact that or it works inclusive of the fact",
    "start": "3021440",
    "end": "3027680"
  },
  {
    "text": "that everything is encrypted as well I mentioned the provision throughput model",
    "start": "3027680",
    "end": "3032880"
  },
  {
    "start": "3030000",
    "end": "3072000"
  },
  {
    "text": "the other thing I will note about the the the provision throughput model is you can change that both programmatically and through the portal",
    "start": "3032880",
    "end": "3039640"
  },
  {
    "text": "so uh this is another example where say you need a million requests per second but you only need it uh in a certain",
    "start": "3039640",
    "end": "3045640"
  },
  {
    "text": "window of time again you're paying for that so if you if you only need it for eight hours a day and you know what",
    "start": "3045640",
    "end": "3051119"
  },
  {
    "text": "those eight hours are then spend then essentially use a script or use some sort of process that calls the API and",
    "start": "3051119",
    "end": "3057720"
  },
  {
    "text": "says okay I need a million requests per second right now and then wait 8 hours and then you can you can dial it back",
    "start": "3057720",
    "end": "3064319"
  },
  {
    "text": "down to half that or you know whatever it is you need at that point um",
    "start": "3064319",
    "end": "3069798"
  },
  {
    "text": "yeah hold that thought great question hold that thought okay that's that's",
    "start": "3070319",
    "end": "3076160"
  },
  {
    "text": "that's a great point I'm G I'm gonna try to get to the last slide in fact what what I'll do is I'll skip this last demo just in the interest of of time um so",
    "start": "3076160",
    "end": "3083640"
  },
  {
    "text": "that we can talk about some of that stuff well we have we have 10 minutes yeah it's probably not enough time um",
    "start": "3083640",
    "end": "3090119"
  },
  {
    "start": "3090000",
    "end": "3094000"
  },
  {
    "text": "all right real quick on uh on use cases so there are uh this is one of the",
    "start": "3090119",
    "end": "3097440"
  },
  {
    "text": "things that that uh the questions that I usually get from from folks when they're you know we kind of talk about Cosmos DB",
    "start": "3097440",
    "end": "3102760"
  },
  {
    "start": "3102000",
    "end": "3110000"
  },
  {
    "text": "like okay it's this big distributed thing and it's no SQL and you know I'm used to SQL server and kind of you know",
    "start": "3102760",
    "end": "3108240"
  },
  {
    "text": "what what am I going to use this thing for and so there are a couple kind of primary things U to to think about first of all certainly if you need something",
    "start": "3108240",
    "end": "3115040"
  },
  {
    "start": "3110000",
    "end": "3137000"
  },
  {
    "text": "which is geoscale something that's going you know you you've got users or applications that are distributed around",
    "start": "3115040",
    "end": "3120200"
  },
  {
    "text": "the world and and and users that are using those applications and you you need something at at that kind of scale",
    "start": "3120200",
    "end": "3126520"
  },
  {
    "text": "certainly you have other options it's not as though Cosmos is the only option at your disposal uh even things like uh",
    "start": "3126520",
    "end": "3132839"
  },
  {
    "text": "Azure SQL database now does uh uh Geor replication uh nevertheless it is a good",
    "start": "3132839",
    "end": "3139000"
  },
  {
    "start": "3137000",
    "end": "3146000"
  },
  {
    "text": "it is a good option and it's certainly one to consider um yeah I mentioned the follow follow the clock scenarios as",
    "start": "3139000",
    "end": "3145119"
  },
  {
    "text": "well uh the next one is uh again it sounded like we didn't have too many folks who were uh kind of using no SQL",
    "start": "3145119",
    "end": "3152200"
  },
  {
    "start": "3146000",
    "end": "3157000"
  },
  {
    "text": "or or or terribly familiar with no SQL today uh and that's fine um but uh if",
    "start": "3152200",
    "end": "3157680"
  },
  {
    "start": "3157000",
    "end": "3181000"
  },
  {
    "text": "you if you do find yourself in the the the a situation where uh you uh you're",
    "start": "3157680",
    "end": "3163680"
  },
  {
    "text": "sort of hamstrung I guess is maybe one term hamstrung by uh the notion of a",
    "start": "3163680",
    "end": "3168920"
  },
  {
    "text": "defined SCH a predefined schema you know a relational schema that's uh where all of your data is highly normalized and",
    "start": "3168920",
    "end": "3174480"
  },
  {
    "text": "you're you're kind of doing a lot of joins and that sort of thing to to kind of get at at your data and present it in a user interface that kind of thing um",
    "start": "3174480",
    "end": "3181640"
  },
  {
    "start": "3181000",
    "end": "3245000"
  },
  {
    "text": "and and maybe your maybe your your rights are slower because you're taking big blobs of data and shredding that all",
    "start": "3181640",
    "end": "3187680"
  },
  {
    "text": "that data into uh this nice highly normalized series of tables if you find yourself in that situation then uh then",
    "start": "3187680",
    "end": "3194680"
  },
  {
    "text": "a then something like Cosmos DB is a good fit precisely because it doesn't enforce scheme it doesn't have that kind of formal strict notion of schema behind",
    "start": "3194680",
    "end": "3201799"
  },
  {
    "text": "the scenes um and that's you know that can be good for things like iot for example I mentioned earlier uh but it",
    "start": "3201799",
    "end": "3208040"
  },
  {
    "text": "but uh you know every iot device has its own notion of state and and uh events that it produces that kind of thing and",
    "start": "3208040",
    "end": "3214680"
  },
  {
    "text": "it would be it it it often is kind of impossible even imagine like a firmware",
    "start": "3214680",
    "end": "3219760"
  },
  {
    "text": "update uh if you do you know you do like a firmware update on a on a small device that could radically change uh the the",
    "start": "3219760",
    "end": "3226160"
  },
  {
    "text": "schema quote unquote of of data of the data that it produces and that you need to store and so you know chasing chasing",
    "start": "3226160",
    "end": "3233200"
  },
  {
    "text": "all of those kinds of updates you know when you've got millions of devices out in the the field can be very tedious and that's a that's often a good fit for",
    "start": "3233200",
    "end": "3239720"
  },
  {
    "text": "something like uh Cosmos DB a schema list no SQL store um another another",
    "start": "3239720",
    "end": "3246440"
  },
  {
    "start": "3245000",
    "end": "3265000"
  },
  {
    "text": "thing where this I know Microsoft has some case studies on this they use they use uh Cosmos DB extensively on the Xbox",
    "start": "3246440",
    "end": "3253200"
  },
  {
    "text": "team um for Halo and I I know that there are some uh like thirdparty gaming",
    "start": "3253200",
    "end": "3258880"
  },
  {
    "text": "companies that have used uh again they've done some case studies and they've used Cosmos DB or the precursor",
    "start": "3258880",
    "end": "3264839"
  },
  {
    "text": "document DB um so you know basically low latency requirements gaming is a good option but or a good example of that but",
    "start": "3264839",
    "end": "3271400"
  },
  {
    "text": "there are others um so that's that's certainly one too um the last thing I will mention and this this is definitely",
    "start": "3271400",
    "end": "3277119"
  },
  {
    "start": "3274000",
    "end": "3289000"
  },
  {
    "text": "worth noting perhaps something I should have said originally but but I think it's important to note there's nothing",
    "start": "3277119",
    "end": "3282520"
  },
  {
    "text": "wrong with it's it's not this is not the kind of thing where we're saying relational databases are crap don't use",
    "start": "3282520",
    "end": "3287960"
  },
  {
    "text": "those anymore uh Cosmos DB no SQL those things it's it's a tool it's it's",
    "start": "3287960",
    "end": "3293200"
  },
  {
    "start": "3289000",
    "end": "3358000"
  },
  {
    "text": "something that it's it's important that it's out there it's use um it fits well in certain scenarios and",
    "start": "3293200",
    "end": "3299520"
  },
  {
    "text": "quite frankly in other scenarios it isn't a good fit and there's nothing wrong inherently with relational databases it's just they are tools as",
    "start": "3299520",
    "end": "3305960"
  },
  {
    "text": "well so this essentially what's happening is your your your your toolbox your potential options has just have",
    "start": "3305960",
    "end": "3312880"
  },
  {
    "text": "expanded which is great um and so now it's sort of up to you as a as a developer as an architect to to sort of",
    "start": "3312880",
    "end": "3319319"
  },
  {
    "text": "you know put your thinking hat on and and say okay well these are my requirements what am I going to use that that what database am I going to use",
    "start": "3319319",
    "end": "3325760"
  },
  {
    "text": "that best fits those requirements in many cases I will say um and i' I've worked with some clients where this is",
    "start": "3325760",
    "end": "3331079"
  },
  {
    "text": "the case in many cases the answer is use both um use relational uh relational engine where it makes sense and use uh a",
    "start": "3331079",
    "end": "3338760"
  },
  {
    "text": "like a nosql uh style uh database where it makes sense even within the same application and that's uh that's not",
    "start": "3338760",
    "end": "3344839"
  },
  {
    "text": "uncommon at all yeah Qui question from the geale",
    "start": "3344839",
    "end": "3352160"
  },
  {
    "text": "instead of as of today you can't use you can't you can't you're not if you're using",
    "start": "3356839",
    "end": "3362520"
  },
  {
    "text": "document DB you're using this now in fact document DB had the geoc scale as well um Cosmos DB was basically was uh",
    "start": "3362520",
    "end": "3370559"
  },
  {
    "start": "3365000",
    "end": "3378000"
  },
  {
    "text": "when it was introduced it was a lot of it was sort of like a marketing uh branding kind of uh uh initiative when",
    "start": "3370559",
    "end": "3376520"
  },
  {
    "text": "they introduced it um but but document DB is is now it's not even it's not even so much that it's deprecated it just",
    "start": "3376520",
    "end": "3382559"
  },
  {
    "start": "3378000",
    "end": "3400000"
  },
  {
    "text": "more or less has a different name and it has new capabilities and new features um like the graph oriented data that",
    "start": "3382559",
    "end": "3388559"
  },
  {
    "text": "kind of thing um it it yeah it's it's it's the it's uh",
    "start": "3388559",
    "end": "3395160"
  },
  {
    "text": "Cosmos DB is a superet of document DB with a different name yeah uh okay areas for improvement real",
    "start": "3395160",
    "end": "3402640"
  },
  {
    "start": "3400000",
    "end": "3487000"
  },
  {
    "text": "quick um so the biggest one the the one that I'll I'll talk about here uh the biggest one is knowing how to how to",
    "start": "3402640",
    "end": "3408680"
  },
  {
    "text": "provision throughput this this is by far again working with folks um and trying to figure help help people figure this",
    "start": "3408680",
    "end": "3414880"
  },
  {
    "text": "out when they're using Cosmos um the this is a hard thing to do there is no I I wish I could tell you there",
    "start": "3414880",
    "end": "3421079"
  },
  {
    "text": "was a tool if there was such a thing I would I would probably try to build it and and make a lot of money um maybe",
    "start": "3421079",
    "end": "3427720"
  },
  {
    "text": "there is uh but I I I haven't thought of an easy answer for this yet although we'll talk about the machine learning in a second um but but that's a hard thing",
    "start": "3427720",
    "end": "3435760"
  },
  {
    "text": "uh typically what's going to happen is you'll you'll over-provision first the pattern is usually you'll over provision",
    "start": "3435760",
    "end": "3441599"
  },
  {
    "text": "then you'll underprovision and and it'll you know basically if you if you underprovision that that means you're making more requests than you've",
    "start": "3441599",
    "end": "3447599"
  },
  {
    "text": "actually uh you know you you provisioned for or set aside uh then then basically the the uh the service will throttle you",
    "start": "3447599",
    "end": "3453880"
  },
  {
    "text": "you'll get you'll get uh HT HTT HTTP errors uh that you can recognize uh that",
    "start": "3453880",
    "end": "3459520"
  },
  {
    "text": "you're being throttled and basically that's your cue that oh yeah I need to I need to ask for or provision more",
    "start": "3459520",
    "end": "3464640"
  },
  {
    "text": "throughput uh and it's so it's a bit of a dance back and forth um and you know it just requires some testing and some",
    "start": "3464640",
    "end": "3469839"
  },
  {
    "text": "QA work uh to kind of arrive at the right answer for for your application um",
    "start": "3469839",
    "end": "3476000"
  },
  {
    "text": "uh some of these other things are are kind of minor things you know take a moment and read it and if you have",
    "start": "3476000",
    "end": "3481039"
  },
  {
    "text": "questions about it certainly come and ask me afterwards just in the interest of time",
    "start": "3481039",
    "end": "3486839"
  },
  {
    "text": "um okay so so this is the last one that I that I wanted to uh this is the last slide and I I want to preface all this",
    "start": "3486839",
    "end": "3494160"
  },
  {
    "start": "3487000",
    "end": "3600000"
  },
  {
    "text": "by saying that these are all my own personal kind of musings or or thoughts",
    "start": "3494160",
    "end": "3499520"
  },
  {
    "text": "um I this is not like any sort of an official list that the team is working on um these are just things that you",
    "start": "3499520",
    "end": "3505280"
  },
  {
    "text": "know having having used a service and and having uh you know having some familiarity with it these are things",
    "start": "3505280",
    "end": "3510359"
  },
  {
    "text": "that I expect are are likely uh uh new features or things that they're working on uh kind of into the future um",
    "start": "3510359",
    "end": "3516880"
  },
  {
    "text": "certainly it's fairly obvious that there'll be more uh over time there'll be more and and and better uh kind of",
    "start": "3516880",
    "end": "3522920"
  },
  {
    "text": "query apis so there's SE we saw SQL um there's the mongod DB compatibility layer there's um table storage um uh",
    "start": "3522920",
    "end": "3531920"
  },
  {
    "text": "there's the graph apis which I didn't show just because we ran out of time um but there will be there's almost certainly going to be others I mean",
    "start": "3531920",
    "end": "3538039"
  },
  {
    "text": "there's think about it there's other databases in the world right there's Cassandra there's uh well elastic",
    "start": "3538039",
    "end": "3544319"
  },
  {
    "text": "searches maybe a database maybe something else but um there are any number of other possible stores that",
    "start": "3544319",
    "end": "3550440"
  },
  {
    "text": "that that the team could decide well G it'd be really nice if we could get the the five million users who are using",
    "start": "3550440",
    "end": "3555559"
  },
  {
    "text": "this tool and see if we can attract them to use uh Cosmos DB so it's not unreasonable to expect that that",
    "start": "3555559",
    "end": "3561319"
  },
  {
    "text": "something like that will happen um more and better ecosystem integration that one's kind of obious because the easier",
    "start": "3561319",
    "end": "3567119"
  },
  {
    "text": "it is for you to use Cosmos with all the other Azure Services then the more money you're spending and and the happier",
    "start": "3567119",
    "end": "3573640"
  },
  {
    "text": "Microsoft is certainly about that um architectural building blocks so cqrs",
    "start": "3573640",
    "end": "3578839"
  },
  {
    "text": "event sourcing stateful Services those kinds of patterns if you're familiar with them uh the more comfortable you",
    "start": "3578839",
    "end": "3583880"
  },
  {
    "text": "get with Cosmos DB and kind of you know kicking the tires with it Cosmos would make a great foundation for Building",
    "start": "3583880",
    "end": "3590520"
  },
  {
    "text": "Systems uh using some of those patterns um for for a variety of reasons um not",
    "start": "3590520",
    "end": "3596319"
  },
  {
    "text": "the least of which is the the geoc scale um but but yeah I think there there are some interesting possibilities there and",
    "start": "3596319",
    "end": "3601599"
  },
  {
    "text": "I I'd personally like to see somebody whether it's Microsoft or somebody else um do some you know build some examples",
    "start": "3601599",
    "end": "3606920"
  },
  {
    "text": "of that uh more runtime integration so I we mentioned that uh JavaScript use",
    "start": "3606920",
    "end": "3612280"
  },
  {
    "text": "JavaScript for store procedures and and triggers that kind of thing uh if you again if you paid attention to build at",
    "start": "3612280",
    "end": "3618559"
  },
  {
    "text": "all you you saw how you can actually take the Azure functions runtime and like run it in a container like on your",
    "start": "3618559",
    "end": "3624880"
  },
  {
    "text": "laptop like for debug purposes it's not much of a mental stretch to imagine uh",
    "start": "3624880",
    "end": "3630000"
  },
  {
    "text": "imagine the cosmos DV team uh saying well gee we can we can you we can host the Azure functions runtime and now all",
    "start": "3630000",
    "end": "3635680"
  },
  {
    "text": "of a sudden you can write store procedures in Python C uh F like all the languages that you",
    "start": "3635680",
    "end": "3642000"
  },
  {
    "text": "can use uh in Azure functions so something like that I don't know if it'll be Azure functions or it'll be some other languages but uh hosted in",
    "start": "3642000",
    "end": "3648799"
  },
  {
    "text": "some other way but that wouldn't surprise me um the pricing Innovation so back to this gentleman's com comment a",
    "start": "3648799",
    "end": "3654720"
  },
  {
    "text": "moment ago some of the other things like spot markets and secondary markets yeah maybe maybe not but I I your your",
    "start": "3654720",
    "end": "3661119"
  },
  {
    "text": "comment I think is very uh very intuitive and and quite frankly that's probably to me the most interesting",
    "start": "3661119",
    "end": "3666359"
  },
  {
    "text": "thing on this slide and it's the one that I will be frankly shocked if if they don't do um precisely because that",
    "start": "3666359",
    "end": "3673880"
  },
  {
    "text": "that that idea of figuring out how much throughput I need to provision it's hard I mean it just flat out is is not an",
    "start": "3673880",
    "end": "3679240"
  },
  {
    "text": "easy thing to do and why not use uh machine learning uh point it at your",
    "start": "3679240",
    "end": "3684319"
  },
  {
    "text": "your account your application start starts working and it's over time it's going to start to understand your",
    "start": "3684319",
    "end": "3689440"
  },
  {
    "text": "patterns your application patterns your how many you you know your users you have a big spike first thing in the morning because everybody logs onto the",
    "start": "3689440",
    "end": "3695799"
  },
  {
    "text": "system and tries to do this and that and then it goes down at 10:00 a.m. and then it's kind of you know then it Peaks back",
    "start": "3695799",
    "end": "3701400"
  },
  {
    "text": "at noon time uh you know whatever whatever the pattern looks like whether it's seasonal throughout the year uh",
    "start": "3701400",
    "end": "3706559"
  },
  {
    "text": "machine learning that's that's essentially a machine learning problem and so again it'll shock me if if that's not uh if that's not part of the the",
    "start": "3706559",
    "end": "3713599"
  },
  {
    "text": "service eventually I don't know how long it'll take um quite frankly the data is there today for you to uh uh to to make some of",
    "start": "3713599",
    "end": "3721200"
  },
  {
    "text": "those decisions you could use machine learning today and kind of you know you'd have to set it all up and and build it yourself but you could do that",
    "start": "3721200",
    "end": "3727960"
  },
  {
    "text": "um the last one is just uh you know convergence with SQL database um I don't think that they might just my personal",
    "start": "3727960",
    "end": "3734480"
  },
  {
    "text": "guess I don't I don't imagine that Cosmos DB and Azure SQL database will just become one thing um but I do think",
    "start": "3734480",
    "end": "3741000"
  },
  {
    "text": "over time it's likely I mean because you know SQL database now does geoc scale and has a lot of high availability kind",
    "start": "3741000",
    "end": "3747319"
  },
  {
    "text": "of features that Cosmos DB certainly has Cosmos DB has uh SQL language support so",
    "start": "3747319",
    "end": "3753200"
  },
  {
    "text": "there's just there's just a lot of overlap between the or or some overlap between the two and probably more over time so uh I I would just expect that to",
    "start": "3753200",
    "end": "3760760"
  },
  {
    "text": "kind of continue as well um yeah that's all I had um thank you everybody for sticking out uh sticking it out through",
    "start": "3760760",
    "end": "3767400"
  },
  {
    "text": "to the end of the day um I appreciate it",
    "start": "3767400",
    "end": "3772720"
  }
]