[
  {
    "start": "0",
    "end": "165000"
  },
  {
    "text": "well good morning everyone Welcome to my talk Uh what are graph databases and why do I",
    "start": "9280",
    "end": "15400"
  },
  {
    "text": "care first a little bit about me Uh so my name is David Beckburgger I am a",
    "start": "15400",
    "end": "20720"
  },
  {
    "text": "senior architect at a consulting company called Xpiro Uh Xpiro is based out of",
    "start": "20720",
    "end": "25920"
  },
  {
    "text": "Texas uh in the United States uh we have and we specialize in uh doing product",
    "start": "25920",
    "end": "32320"
  },
  {
    "text": "discovery UX design and architecture and development for big data IoT and graph",
    "start": "32320",
    "end": "38079"
  },
  {
    "text": "databases Uh myself I've been developing software for about 18 years now Uh most",
    "start": "38079",
    "end": "44960"
  },
  {
    "text": "of that time has been focused on developing heavily in the .NET stack Uh but most recently I've moved over to",
    "start": "44960",
    "end": "51039"
  },
  {
    "text": "doing completely pretty much backend development against graph databases Been doing that for about two years now Um if",
    "start": "51039",
    "end": "57760"
  },
  {
    "text": "you're interested in a little bit what we do there's a couple of uh you know you can go uh to that page and take a look at uh some of the things we do uh",
    "start": "57760",
    "end": "64080"
  },
  {
    "text": "building on top of graph databases specifically Uh in case anybody was wondering why I'm walking around in a",
    "start": "64080",
    "end": "70240"
  },
  {
    "text": "sling I was playing hockey on Sunday and decided to you know hit the wall instead of uh and I lost",
    "start": "70240",
    "end": "79080"
  },
  {
    "text": "So but what are we going to talk about today well today we're here to cover uh",
    "start": "79080",
    "end": "84640"
  },
  {
    "text": "we're going to do a little bit of an introduction to what graphs are Um is anybody here actually using a graph",
    "start": "84640",
    "end": "89680"
  },
  {
    "text": "database or has used a graph database in the past which one which which one neo Neo Neo Okay Um so some of this will",
    "start": "89680",
    "end": "97439"
  },
  {
    "text": "probably be familiar to you guys Uh then we're going to talk a bit about some of the use cases that graph databases are",
    "start": "97439",
    "end": "102799"
  },
  {
    "text": "are good at Uh then we're going to talk a bit about the ecosystem So the ecosystem for graph databases is",
    "start": "102799",
    "end": "108640"
  },
  {
    "text": "changing literally every day In fact yes I believe it was yesterday that Microsoft announced they'll they now have a new graph uh processing layer on",
    "start": "108640",
    "end": "116000"
  },
  {
    "text": "top of SQL Server So it's a very fast growing uh area And then last why you",
    "start": "116000",
    "end": "122240"
  },
  {
    "text": "should care about it You know why not just use your relational database i'll show walk through a couple of of",
    "start": "122240",
    "end": "127439"
  },
  {
    "text": "examples showing you just how graphs can help simplify uh your life in some ways",
    "start": "127439",
    "end": "133040"
  },
  {
    "text": "So hopefully as I said this hopefully you'll walk out of here with you know you'll know what a graph database does is and isn't um you know you know what",
    "start": "133040",
    "end": "140400"
  },
  {
    "text": "you can you'll know what you can do with them you'll have an understanding of what the ecosystem of graphs are of",
    "start": "140400",
    "end": "145680"
  },
  {
    "text": "graph databases are and then what you can do to get started so first off we're going to walk",
    "start": "145680",
    "end": "151440"
  },
  {
    "text": "through a little bit of what I like to call like graph 101 for um yeah first",
    "start": "151440",
    "end": "156959"
  },
  {
    "text": "you know we're not talking about bar charts line charts spark lines we're talking about inter",
    "start": "156959",
    "end": "162200"
  },
  {
    "text": "interconnected webs of data um so have any of you heard of the seven",
    "start": "162200",
    "end": "170080"
  },
  {
    "start": "165000",
    "end": "165000"
  },
  {
    "text": "bridges of Koigberg's problem I'm guessing probably a lot of people did at some point but so basically the seven",
    "start": "170080",
    "end": "175440"
  },
  {
    "text": "bridges of coinsburg problem laid down uh was basically a famous problem uh that was developed by Leonard Oiler in",
    "start": "175440",
    "end": "182959"
  },
  {
    "text": "1736 He was a Swiss mathematician Um and this it became what basically this problem laid down the",
    "start": "182959",
    "end": "189360"
  },
  {
    "text": "foundations of what became graph theory uh on which graph databases are built Basically there's you know there was two",
    "start": "189360",
    "end": "196239"
  },
  {
    "text": "islands and uh in the middle of this river So there's four pieces of land and seven bridges connecting them And the problem was is it possible to walk",
    "start": "196239",
    "end": "202959"
  },
  {
    "text": "across every bridge once and only once um and this became what known as an",
    "start": "202959",
    "end": "208239"
  },
  {
    "text": "Oilerian walk if you can actually do this successfully Um what Oiler did was basically he he took this uh real world",
    "start": "208239",
    "end": "214640"
  },
  {
    "text": "problem was able to abstract it out into what you see at the bottom here which is uh the abstract concept of nodes and",
    "start": "214640",
    "end": "221280"
  },
  {
    "text": "edges you know nodes and things connecting them together Just out of curiosity does anybody know if you can",
    "start": "221280",
    "end": "226560"
  },
  {
    "text": "actually solve this no Yeah you're right You can't um you can't An oilarian walk only works if",
    "start": "226560",
    "end": "232959"
  },
  {
    "text": "you have uh only uh if you have well sorry it doesn't work if you have",
    "start": "232959",
    "end": "238560"
  },
  {
    "text": "greater than two nodes that have an odd number of edges of incident edges going into or out And incident edges are edges",
    "start": "238560",
    "end": "244959"
  },
  {
    "text": "coming into or out of a node So first off what is a graph well a",
    "start": "244959",
    "end": "250560"
  },
  {
    "text": "graph is an ordered set of vertices and edges And I promise it's the last time I'm going to talk about any more math theory for the rest of this talk Um",
    "start": "250560",
    "end": "259359"
  },
  {
    "text": "uh you know vertices are basically a finite set of elements and edges are a",
    "start": "259359",
    "end": "264880"
  },
  {
    "text": "basically a set of two subsets of vertices So basically you know nodes or",
    "start": "264880",
    "end": "270440"
  },
  {
    "text": "vertexes have are connected by edges It's pretty straightforward The other way you can think about this is it's an",
    "start": "270440",
    "end": "275840"
  },
  {
    "text": "entity and the relationship between them or uh it's ver when you're when you're actually working with these you tend to",
    "start": "275840",
    "end": "282479"
  },
  {
    "text": "think of vertices are the nouns and edges are the verbs in your uh domain",
    "start": "282479",
    "end": "288680"
  },
  {
    "text": "model So uh both vertices and edges tend to have labels associated with them You",
    "start": "288680",
    "end": "295520"
  },
  {
    "text": "know in this case we have uh two vertices which have the label of person and the edge in between them is labeled",
    "start": "295520",
    "end": "301919"
  },
  {
    "text": "as son of They tend to they can connect similar things So in this case we have Jason who",
    "start": "301919",
    "end": "308000"
  },
  {
    "start": "304000",
    "end": "304000"
  },
  {
    "text": "is the son of Alice So both the vertices are people They can also connect different",
    "start": "308000",
    "end": "313680"
  },
  {
    "text": "things Um in this case basically we have you know a person lives in a city So here Jason lives in",
    "start": "313680",
    "end": "320759"
  },
  {
    "text": "Boston They can connect different types of things yet again You know here we have you know a Spider-Man lunchbox",
    "start": "320759",
    "end": "326080"
  },
  {
    "text": "which is part of the Marvel universe Um it can connect multiple different things at the same time",
    "start": "326080",
    "end": "333440"
  },
  {
    "text": "Basically you here we have you know a Spider-Man lunch box which is connected as which is part of a franchise and is",
    "start": "333440",
    "end": "339840"
  },
  {
    "text": "recommended for the age groups 3 to 8 Uh edges also tend to have directions",
    "start": "339840",
    "end": "346320"
  },
  {
    "text": "with them uh specifically when we're talking about edges with directions we're talking about directed graphs uh",
    "start": "346320",
    "end": "352000"
  },
  {
    "text": "which is a subset of graphs but it's the type that most graph databases are built upon So it's what we're going to talk about in this talk Um and as you can see",
    "start": "352000",
    "end": "359039"
  },
  {
    "text": "here you know we have our previous graph which had you know Spider-Man lunchbox which was part of the Marvel franchise",
    "start": "359039",
    "end": "364800"
  },
  {
    "text": "and was recommended for ages 3 to 8 but now it also has an inward-f facing edge from the back to school promotion for",
    "start": "364800",
    "end": "371199"
  },
  {
    "text": "2015 uh in what we're going to talk about",
    "start": "371199",
    "end": "376400"
  },
  {
    "text": "today both vertices and edges may have properties associated with them Um this is actually one of the biggest",
    "start": "376400",
    "end": "383039"
  },
  {
    "text": "differences between a graph database and some say something like a relational database In a relational database you",
    "start": "383039",
    "end": "389440"
  },
  {
    "text": "know the relations between your uh different entities themselves can't really contain any metadata of their own",
    "start": "389440",
    "end": "395919"
  },
  {
    "text": "Um you know because in a relational database the relations between your data is basically foreign keys That's how you",
    "start": "395919",
    "end": "401840"
  },
  {
    "text": "know uh you know one one thing is related to another You can't actually put metadata on those foreign keys You",
    "start": "401840",
    "end": "407280"
  },
  {
    "text": "end up having to build a table in between like something I like to call or I think of as a bridge table um that to",
    "start": "407280",
    "end": "414080"
  },
  {
    "text": "store any of that metadata Well in a graph database relationships are first class",
    "start": "414080",
    "end": "419160"
  },
  {
    "text": "entities and those entities are able to actually have that metadata on that relationship itself And it's one of the",
    "start": "419160",
    "end": "424880"
  },
  {
    "text": "more powerful things I find when actually working with graph databases uh or migrating data from graph uh from",
    "start": "424880",
    "end": "430479"
  },
  {
    "text": "relational databases to graph databases So what does a typical graph",
    "start": "430479",
    "end": "436560"
  },
  {
    "start": "433000",
    "end": "433000"
  },
  {
    "text": "query look like so find me all the in this case we're going to look at what a simple a simple recommendation query",
    "start": "436560",
    "end": "443599"
  },
  {
    "text": "sort of use case In this case we're going to want to find all the products that are for the",
    "start": "443599",
    "end": "448639"
  },
  {
    "text": "same recommended age as a Spider-Man lunchbox So what would you do uh the way you would think about this is you'd",
    "start": "448639",
    "end": "454400"
  },
  {
    "text": "start here with the Spider-Man lunchbox and basically you would walk out the recommended edge to the age range of 3",
    "start": "454400",
    "end": "461680"
  },
  {
    "text": "to eight and then you would look for any other inward-f facing edges that are also recommended for that uh same age",
    "start": "461680",
    "end": "468800"
  },
  {
    "text": "group In this case there's only one which is the Iron Man toothbrush Uh when you're working in",
    "start": "468800",
    "end": "474639"
  },
  {
    "text": "graph what we just did is what's actually uh you will be referred to as the traversal of your graph Uh that was",
    "start": "474639",
    "end": "480160"
  },
  {
    "text": "a very simple one but they get much more complex than that Um you know one of the",
    "start": "480160",
    "end": "485599"
  },
  {
    "start": "484000",
    "end": "484000"
  },
  {
    "text": "thing you know things that uh graph graphs do very well is they're able to go through an arbitrary number of hops",
    "start": "485599",
    "end": "492000"
  },
  {
    "text": "in order to uh in order to get to answers Um you know so in this case",
    "start": "492000",
    "end": "498000"
  },
  {
    "text": "we're basically wanting to find all the products for that are for the same recommended age is part of a the same or",
    "start": "498000",
    "end": "503360"
  },
  {
    "text": "similar franchise as that Spider-Man lunchbox Um in this case we basically added somebody added to the graph that",
    "start": "503360",
    "end": "509360"
  },
  {
    "text": "you know the DC comics universe is a similar franchise to the Marvel universe",
    "start": "509360",
    "end": "515760"
  },
  {
    "text": "So what would what would we do here basically the way you would traverse this graph or think about how you would traverse this graph is first off you",
    "start": "515760",
    "end": "522000"
  },
  {
    "text": "would traverse the same the graph the same way of going out the recommended age you know to to the age range and",
    "start": "522000",
    "end": "527600"
  },
  {
    "text": "then over to the Iron Man toothbrush to get that as one of the responses back Um but you would also basically at the same",
    "start": "527600",
    "end": "534240"
  },
  {
    "text": "well in parallel you would actually traverse out the part of Edge to the Marvel franchise You would then traverse",
    "start": "534240",
    "end": "540800"
  },
  {
    "text": "out the similar edge to the DC Comics franchise and then you would traverse back the part of Edge to get the",
    "start": "540800",
    "end": "546560"
  },
  {
    "text": "Superman pillowcase So you would be in this case you would return the Superman pillowcase and the Iron Man toothbrush",
    "start": "546560",
    "end": "552399"
  },
  {
    "text": "But as you can kind of see as we're walking through this it you know each one took a different arbitrary path to get through there",
    "start": "552399",
    "end": "560040"
  },
  {
    "text": "you know and now someone has gone and add sales data to the graph So basically we want to build a more powerful",
    "start": "561600",
    "end": "567200"
  },
  {
    "text": "recommendation engine based on items that people bought Well as you can see",
    "start": "567200",
    "end": "572399"
  },
  {
    "text": "if you wanted to solve you know I'm not going to walk through this one because this gets far more complex but you are",
    "start": "572399",
    "end": "577760"
  },
  {
    "text": "able to basically walk through a very large arbitrary number of hops to get to",
    "start": "577760",
    "end": "583040"
  },
  {
    "text": "that same sort of information here uh if you wanted to do something like this in a relational database it basically would",
    "start": "583040",
    "end": "589680"
  },
  {
    "text": "probably require a lot of recursive common table expressions unions joins and it would be a query I would not want",
    "start": "589680",
    "end": "595760"
  },
  {
    "text": "to run or or I would not want to write maintain or probably try to like write any performance increases on because it",
    "start": "595760",
    "end": "602800"
  },
  {
    "text": "would be uh quite a headache to actually get it to work within a reasonable period of",
    "start": "602800",
    "end": "609080"
  },
  {
    "text": "time So I guess before we go on are there any questions about what we've talked about so far",
    "start": "609080",
    "end": "616120"
  },
  {
    "text": "this one",
    "start": "619279",
    "end": "622519"
  },
  {
    "text": "Yeah So the question here was in this uh in this query would you get the Iron Man toothbrush twice depends on how you",
    "start": "632720",
    "end": "640000"
  },
  {
    "text": "actually put the query that you a lot of these uh when you're querying these you could actually uh you by default you",
    "start": "640000",
    "end": "645920"
  },
  {
    "text": "would probably get it twice but a lot of the query languages allow you to remove",
    "start": "645920",
    "end": "650880"
  },
  {
    "text": "duplicates okay so next we're going to talk a bit about uh some of the use cases for graph",
    "start": "653640",
    "end": "660839"
  },
  {
    "text": "databases so what are common graph type problems so common graph type problems are things like dependencies uh you know",
    "start": "660839",
    "end": "667839"
  },
  {
    "start": "661000",
    "end": "661000"
  },
  {
    "text": "failure chain uh order of operations um something like this is a lot of time",
    "start": "667839",
    "end": "673120"
  },
  {
    "text": "used for things like root cause analysis um you know order of operations I don't know if any of you were in the talk uh",
    "start": "673120",
    "end": "678959"
  },
  {
    "text": "with the about uh terraform and console yesterday but that was actually a great example of uh basically finding",
    "start": "678959",
    "end": "685839"
  },
  {
    "text": "dependency graphs um you know in order to build my infrastructure I have to build the you know the VPC before I can",
    "start": "685839",
    "end": "692640"
  },
  {
    "text": "build a subnet that's part of that VPC well that's a graph type problem to do that you know clustering",
    "start": "692640",
    "end": "698640"
  },
  {
    "text": "finding things that are closely related to each other Um friends of friends you",
    "start": "698640",
    "end": "703839"
  },
  {
    "text": "know who who here's on LinkedIn and gets the like these are people you might know or you know Facebook same sort of idea",
    "start": "703839",
    "end": "710800"
  },
  {
    "text": "That's uh you know would be a clustering sort of problem or fraud Uh fraud is actually another very common use case",
    "start": "710800",
    "end": "717760"
  },
  {
    "text": "for graphs uh um it you know uh they use variety of different algorithms but",
    "start": "717760",
    "end": "722800"
  },
  {
    "text": "clustering is one of them to basically say is this group of transactions similar to another or you know clustered",
    "start": "722800",
    "end": "729120"
  },
  {
    "text": "together with another group of fraudulent or known fraudulent track transactions Um similarity you know",
    "start": "729120",
    "end": "735040"
  },
  {
    "text": "similar you know you want to find things that have similar paths or patterns associated with them um you know let's",
    "start": "735040",
    "end": "740639"
  },
  {
    "text": "say you something like a recruiter you know you work on recruiting software and you want to take I you know from the",
    "start": "740639",
    "end": "747200"
  },
  {
    "text": "position I'm at I want to get to a CEO what other what is the most common path or what is a very similar path of people",
    "start": "747200",
    "end": "752639"
  },
  {
    "text": "that started like I have to get to become CEO of a company you know",
    "start": "752639",
    "end": "757760"
  },
  {
    "text": "matching or categorization um you know flow flow cost uh type",
    "start": "757760",
    "end": "763360"
  },
  {
    "text": "problems things like you know Google maps are a flow to flow cost type problem I want to find the shortest path",
    "start": "763360",
    "end": "769839"
  },
  {
    "text": "from A to B Centrality and search problems You know uh you want to find the most influential person in a social",
    "start": "769839",
    "end": "778760"
  },
  {
    "text": "network You know uh another example of dependency type problem is a pipeline You know what is the root cause of a",
    "start": "778760",
    "end": "784959"
  },
  {
    "start": "779000",
    "end": "779000"
  },
  {
    "text": "failure um you know how do I route flow from X to Y when I take Y offline you",
    "start": "784959",
    "end": "790320"
  },
  {
    "text": "know example vertices in like a pipeline would be something like a storage tank a",
    "start": "790320",
    "end": "795560"
  },
  {
    "text": "refinery or wells Um edges would be pipelines control lines things of that",
    "start": "795560",
    "end": "803160"
  },
  {
    "start": "803000",
    "end": "803000"
  },
  {
    "text": "nature Industrial assets uh you know would be a clustering sort of problem You know if part A fails what other",
    "start": "803160",
    "end": "809600"
  },
  {
    "text": "parts tend to fail with it you know I have a large group of industrial uh maybe I I run a trucking fleet and if",
    "start": "809600",
    "end": "816720"
  },
  {
    "text": "you know truck A fails what other what other trucks tend to fail with it where they you know and then you can do as I",
    "start": "816720",
    "end": "822399"
  },
  {
    "text": "you can go back and actually do rec root cause analysis find out why they may have failed together Maybe they were all in the same place that had a sandstorm",
    "start": "822399",
    "end": "829040"
  },
  {
    "text": "at the same time or something like that you know Um examples of you know vertices in here are things like parts",
    "start": "829040",
    "end": "835279"
  },
  {
    "text": "or assemblies or pieces of equipment and edges are things like consists of",
    "start": "835279",
    "end": "840480"
  },
  {
    "text": "connected to is compatible with similarity You know an example of",
    "start": "840480",
    "end": "848480"
  },
  {
    "start": "844000",
    "end": "844000"
  },
  {
    "text": "similarity is social networks and fraud This social networks are probably one of the the most common uh use cases that",
    "start": "848480",
    "end": "855519"
  },
  {
    "text": "people think of with graphs You know LinkedIn and uh Facebook made using graphs for a social network a very",
    "start": "855519",
    "end": "862240"
  },
  {
    "text": "common thing uh out there anymore You know which of my friends is the most influential you know which of my users",
    "start": "862240",
    "end": "868480"
  },
  {
    "text": "activity or is my users activity similar to a known fraudulent pattern you know here you would have vertices that are",
    "start": "868480",
    "end": "874399"
  },
  {
    "text": "things like people's or business or transactions Um you know edges are things like phone calls emails",
    "start": "874399",
    "end": "880639"
  },
  {
    "text": "memberships",
    "start": "880639",
    "end": "883440"
  },
  {
    "start": "884000",
    "end": "884000"
  },
  {
    "text": "purchases Categorization um recommendation engine is a very uh good",
    "start": "885720",
    "end": "890800"
  },
  {
    "text": "example of a categorization You maybe you want to you have a c different categories of people that you want to do recommendations against Um you know",
    "start": "890800",
    "end": "898240"
  },
  {
    "text": "based on my history of buying of purchasing products what am I likely to purchase um you know what type of",
    "start": "898240",
    "end": "904240"
  },
  {
    "text": "customer am I when I am I when I use a system you know here you would have things like you know vertices would be",
    "start": "904240",
    "end": "909360"
  },
  {
    "text": "things like users or orders or web pages if you're doing something like click stream tracking um you know edges would",
    "start": "909360",
    "end": "915199"
  },
  {
    "text": "be things like purchased or clicked um worked with customers in this space where they basically have click streams",
    "start": "915199",
    "end": "921199"
  },
  {
    "text": "coming in of applications and they want to be able to basically uh categorize you into different uh use cases or",
    "start": "921199",
    "end": "927680"
  },
  {
    "text": "different groups of users to basically show you something like targeted advertising things of that",
    "start": "927680",
    "end": "934879"
  },
  {
    "text": "nature You know flow cost problems Uh you know transportation is the first one I tend to think of here You know what is",
    "start": "935240",
    "end": "941519"
  },
  {
    "text": "the shortest path between X and Y i don't know about you guys but I've used Google Maps since I've been here in London And that's an example of how you",
    "start": "941519",
    "end": "948800"
  },
  {
    "text": "actually get from you know X to Y It's really it has to do an unknown number of hops to get from a you know from one",
    "start": "948800",
    "end": "954959"
  },
  {
    "text": "place to another You know they'll connect somehow but you don't know how many uh you know connections it'll take to get there While it's something you",
    "start": "954959",
    "end": "961680"
  },
  {
    "text": "can do in a relational database it's actually very difficult to do unknown numbers of joins You end up with",
    "start": "961680",
    "end": "967040"
  },
  {
    "text": "recursive functions and they tend to be very not or very unperformant You know uh also things",
    "start": "967040",
    "end": "973920"
  },
  {
    "text": "like you know I'm going to take station X offline for maintenance What's the effect going to be on my you know transportation network how's that how am",
    "start": "973920",
    "end": "980959"
  },
  {
    "text": "I going to route traffic around it what are the different options you know here you would have vertices that are things like stations or cities and edges of",
    "start": "980959",
    "end": "988880"
  },
  {
    "text": "things like railways roadways intersections Actually intersections I'm sorry would be a verticy in this case",
    "start": "988880",
    "end": "995920"
  },
  {
    "text": "Centrality and search uh the internet the internet is nothing but a giant graph of data Um this is actually where",
    "start": "995920",
    "end": "1003920"
  },
  {
    "text": "uh Google really for those of you that are uh old enough to remember Alta Vista you know Alta Vista was based on",
    "start": "1003920",
    "end": "1010399"
  },
  {
    "text": "basically just searching the text inside your web documents And this is where Google actually made was differentiated",
    "start": "1010399",
    "end": "1015839"
  },
  {
    "text": "from Alta Vista when they first came out as they actually not only searched the text inside the document but they t they",
    "start": "1015839",
    "end": "1021360"
  },
  {
    "text": "searched and indexed how those documents were linked to other documents They basically built a graph of the web you",
    "start": "1021360",
    "end": "1027839"
  },
  {
    "text": "know but you know centrality and search also is useful for things like what are the critical parts of my network you",
    "start": "1027839",
    "end": "1034400"
  },
  {
    "text": "know uh you know I'm storing network management data or I'm storing data",
    "start": "1034400",
    "end": "1039438"
  },
  {
    "text": "about how my network is configured I want to find the most critical piece of my infrastructure You know if this",
    "start": "1039439",
    "end": "1045520"
  },
  {
    "text": "router goes down half of my network is going to go down because it's the one single point of failure inside my",
    "start": "1045520",
    "end": "1050960"
  },
  {
    "text": "network Uh that's a sort of graph problem to solve You know here you would have things like you know your vertices",
    "start": "1050960",
    "end": "1057679"
  },
  {
    "text": "would be like routers or computers Your edges would be like you know fibers or Ethernet connections microwave",
    "start": "1057679",
    "end": "1063960"
  },
  {
    "text": "connections Case if you're thinking about the uh Google use case it would be things like links of web pages",
    "start": "1063960",
    "end": "1071720"
  },
  {
    "start": "1070000",
    "end": "1070000"
  },
  {
    "text": "uh really when you comes down to it basically any any interaction out there you have as a graph you know here's",
    "start": "1071840",
    "end": "1078160"
  },
  {
    "text": "other sorts of problems that you can solve with graphs you know which professor publishes the most influential paper maybe you have a link of all you",
    "start": "1078160",
    "end": "1084960"
  },
  {
    "text": "know papers published in the last five years as well as all their uh citations and you want to go out and find which of",
    "start": "1084960",
    "end": "1091760"
  },
  {
    "text": "those papers has been cited the most either by that paper or by another paper that's cited papers that have cited it",
    "start": "1091760",
    "end": "1098160"
  },
  {
    "text": "Uh one we actually kind of run across quite uh quite often is something like I have a username to be Smith I have a",
    "start": "1098160",
    "end": "1104240"
  },
  {
    "text": "username Brian Smith Uh maybe I'm a large uh maybe I work for a large company and we have multiple different",
    "start": "1104240",
    "end": "1111240"
  },
  {
    "text": "uh ways in which a c a customer can interact with him Well I want to figure out if those two people are the same",
    "start": "1111240",
    "end": "1116960"
  },
  {
    "text": "person in order to basically provide them a better experience a more unified experience across uh multiple plat maybe",
    "start": "1116960",
    "end": "1122960"
  },
  {
    "text": "a web and a mobile platform healthcare and life sciences you know",
    "start": "1122960",
    "end": "1128080"
  },
  {
    "text": "basically how does this drug interact with other drugs um and then the one I mentioned earlier you know which is the",
    "start": "1128080",
    "end": "1134320"
  },
  {
    "text": "most common case a common career path to get from myself to being CEO of a",
    "start": "1134320",
    "end": "1140039"
  },
  {
    "start": "1140000",
    "end": "1140000"
  },
  {
    "text": "company So what sort of industries use graph um this is by no means a",
    "start": "1140039",
    "end": "1146000"
  },
  {
    "text": "definitive list of either industries or [Music] um how graphs are used inside those",
    "start": "1146000",
    "end": "1153520"
  },
  {
    "text": "industries uh but you know somewhere like uh but this is uh is is an example of some of the ways in",
    "start": "1153520",
    "end": "1160559"
  },
  {
    "text": "which uh people use it and some of the ways we've worked with our customers in these areas you know software companies",
    "start": "1160559",
    "end": "1166000"
  },
  {
    "text": "they deal with NOx and data management and that's really nothing but a giant",
    "start": "1166000",
    "end": "1171280"
  },
  {
    "text": "graph of how you you know everything how all your networks are connected together social networks are an obvious one you",
    "start": "1171280",
    "end": "1177760"
  },
  {
    "text": "know Facebook your LinkedIn things like that one that actually kind of surprised me when we first came across this uh as",
    "start": "1177760",
    "end": "1184400"
  },
  {
    "text": "a as a use case is like identity and access management Um you know something",
    "start": "1184400",
    "end": "1189840"
  },
  {
    "text": "like what active directory does uh in a Windows world is a real is really comes down to being a graph problem because",
    "start": "1189840",
    "end": "1195520"
  },
  {
    "text": "you are in groups A B and C and in group A you are admin and group B you only",
    "start": "1195520",
    "end": "1200720"
  },
  {
    "text": "have readonly access Group C you only have you know maybe you have readwrite access and group C has access to a",
    "start": "1200720",
    "end": "1206640"
  },
  {
    "text": "folder that group A has access to and group B has access to and there's subfiles inside those What actual access",
    "start": "1206640",
    "end": "1214240"
  },
  {
    "text": "do you have to a file is really basically a gigantic graph to find out what you know all the different",
    "start": "1214240",
    "end": "1220240"
  },
  {
    "text": "permutations you have to get to your you know to actually have access to that end piece of data um financial services you",
    "start": "1220240",
    "end": "1228559"
  },
  {
    "text": "know fraud prevention is probably the most common one you hear in this you know uh in the in in the financial",
    "start": "1228559",
    "end": "1235039"
  },
  {
    "text": "services but you know there's also they do social marketing They do impact analysis and they actually do sentiment",
    "start": "1235039",
    "end": "1240960"
  },
  {
    "text": "analysis there there you know there are financial services companies out there that are reading your Twitter feeds and",
    "start": "1240960",
    "end": "1246000"
  },
  {
    "text": "your Facebook posts and finding out what you think about different companies because what you think about different companies affects how much or affects",
    "start": "1246000",
    "end": "1253440"
  },
  {
    "text": "whether their stock goes up or down that day sometimes Um so there's companies out there doing stuff like that um you",
    "start": "1253440",
    "end": "1259520"
  },
  {
    "text": "know telecommunications network management much similar to software companies",
    "start": "1259520",
    "end": "1264640"
  },
  {
    "text": "master data management um geospatial search Um there's telecommunications",
    "start": "1264640",
    "end": "1270640"
  },
  {
    "text": "companies out there that basically are tracking you know basically",
    "start": "1270640",
    "end": "1275760"
  },
  {
    "text": "obviously they're tracking where you're using your cell phone and they're trying to basically uh group together you know",
    "start": "1275760",
    "end": "1281760"
  },
  {
    "text": "cluster together groups of people into to see maybe that you you maybe you and all your friends went to dinner at the",
    "start": "1281760",
    "end": "1287679"
  },
  {
    "text": "same time at the same place for roughly the same amount of time They're trying to find this information out about you",
    "start": "1287679",
    "end": "1293280"
  },
  {
    "text": "uh so they can better uh market to you uh you know uh web social and recruiting",
    "start": "1293280",
    "end": "1299600"
  },
  {
    "text": "you know social graphs knowledge graphs sentiment analysis Yet again um probably",
    "start": "1299600",
    "end": "1304799"
  },
  {
    "text": "one of the more upand cominging places is uh that are using graphs are things like healthcare and life sciences You",
    "start": "1304799",
    "end": "1310559"
  },
  {
    "text": "know they're looking for drug interactions You know looking for different things about gene sequencing Uh you know they're looking for impact",
    "start": "1310559",
    "end": "1316320"
  },
  {
    "text": "analysis on treatment and care There any questions on some of the",
    "start": "1316320",
    "end": "1322240"
  },
  {
    "text": "use cases before we move on",
    "start": "1322240",
    "end": "1326440"
  },
  {
    "text": "okay Uh the next thing we're going to talk a bit about is the graph ecosystem that's out",
    "start": "1335280",
    "end": "1340679"
  },
  {
    "text": "there So first off what what is a graph database and I know there's a couple of you that have used graph databases",
    "start": "1340679",
    "end": "1347520"
  },
  {
    "start": "1341000",
    "end": "1341000"
  },
  {
    "text": "Anyone else used any other NoSQL sort of databases or is most people coming from the relational world",
    "start": "1347520",
    "end": "1354919"
  },
  {
    "text": "okay Well uh the graph graph databases are a type of NoSQL data store Um they",
    "start": "1355000",
    "end": "1361039"
  },
  {
    "text": "store data based on graph concepts So you know vertexes edges and properties",
    "start": "1361039",
    "end": "1366880"
  },
  {
    "text": "Uh there's several different types out there that we'll talk a bit about here in a moment Um specifically the ones",
    "start": "1366880",
    "end": "1372000"
  },
  {
    "text": "that are out there are RDF triple stores property graph models uh and what I tend",
    "start": "1372000",
    "end": "1377120"
  },
  {
    "text": "to call processing frameworks And what graph databases do um is they really help you effect efficiently and",
    "start": "1377120",
    "end": "1383520"
  },
  {
    "text": "effectively navigate connected data um you know data that's highly connected with one another",
    "start": "1383520",
    "end": "1390360"
  },
  {
    "start": "1389000",
    "end": "1389000"
  },
  {
    "text": "Um so little you know base of database types So what you'll see on the screen",
    "start": "1390360",
    "end": "1396559"
  },
  {
    "text": "here is basically the different types of the five basic types of data stores that are out there uh and how they each",
    "start": "1396559",
    "end": "1403280"
  },
  {
    "text": "handle uh increasing data complexity I mean the simplest ones out there are things like key value stores Um you know",
    "start": "1403280",
    "end": "1409840"
  },
  {
    "text": "key value stores are something like a Dynamob uh from AWS or Reddus and they",
    "start": "1409840",
    "end": "1415679"
  },
  {
    "text": "store very simple data They store a key value pair of data Um you want to get a little more have your data has a little",
    "start": "1415679",
    "end": "1421679"
  },
  {
    "text": "bit more complexity to it and stores more than just one value to a key You get something like a column family store",
    "start": "1421679",
    "end": "1428320"
  },
  {
    "text": "um you know it allows you to store basically single rows of data but those rows are not uh don't have relationships",
    "start": "1428320",
    "end": "1434240"
  },
  {
    "text": "to other rows don't have explicit relationships to other rows I should say this is",
    "start": "1434240",
    "end": "1439520"
  },
  {
    "text": "something like uh Apache Cassandra Apache age base um you get a little more",
    "start": "1439520",
    "end": "1445600"
  },
  {
    "text": "uh you know you get data that it's a little more uh has a little more relation a little more complexity to it",
    "start": "1445600",
    "end": "1450960"
  },
  {
    "text": "and when I'm talking about complexity here what I'm really referring to is basically the how the data is related to",
    "start": "1450960",
    "end": "1456080"
  },
  {
    "text": "one another and how those relationships are manifested themselves in the data store Um so you get something like a",
    "start": "1456080",
    "end": "1462880"
  },
  {
    "text": "document data store Well you know a document data store the the documents themselves are pretty atomic units of",
    "start": "1462880",
    "end": "1468960"
  },
  {
    "text": "information but inside them they can have uh highly nested relations of data",
    "start": "1468960",
    "end": "1474000"
  },
  {
    "text": "Um you know something like MongoDB or couch DB are pretty good uh examples of",
    "start": "1474000",
    "end": "1479600"
  },
  {
    "text": "doc or pretty common examples of document data stores Guessing most a lot of people here have probably used one or",
    "start": "1479600",
    "end": "1484880"
  },
  {
    "text": "the other of those And then there's the one that we're all famili familiar with relational databases You know relational",
    "start": "1484880",
    "end": "1490720"
  },
  {
    "text": "databases are good at st good at storing relational data It's what they're built on You know they have you know tables",
    "start": "1490720",
    "end": "1496880"
  },
  {
    "text": "that have you know uh foreign keys to other tables They have foreign keys to other tables And you can build out a",
    "start": "1496880",
    "end": "1502720"
  },
  {
    "text": "hierarchy of data there You know these are your oracles your SQL servers your Postgresses your MySQL things of that",
    "start": "1502720",
    "end": "1508720"
  },
  {
    "text": "nature And then for even more complex data that uh doesn't fit in your relational",
    "start": "1508720",
    "end": "1514400"
  },
  {
    "text": "database you have graph databases Uh two of the most common ones out there are Neo4j and uh data stacks enterprise",
    "start": "1514400",
    "end": "1521120"
  },
  {
    "text": "graph Those are the two that uh we work with the most Uh there's many more out there as you'll see here in a moment Uh",
    "start": "1521120",
    "end": "1527840"
  },
  {
    "text": "but as mentioned earlier the real big difference between a relational database and a graph database is that in a graph",
    "start": "1527840",
    "end": "1534400"
  },
  {
    "text": "database the relationships are also first class entities in your system and those relationships can can store",
    "start": "1534400",
    "end": "1540640"
  },
  {
    "text": "properties against them One other thing to note is that",
    "start": "1540640",
    "end": "1546320"
  },
  {
    "start": "1543000",
    "end": "1543000"
  },
  {
    "text": "data that graph databases are the fastest growing type of data store out there at the moment Um since this is",
    "start": "1546320",
    "end": "1552799"
  },
  {
    "text": "started in January 2013 until this January they've got had almost a 600%",
    "start": "1552799",
    "end": "1558080"
  },
  {
    "text": "growth in uh so this comes from a uh I don't know if any of you know dbengins.com",
    "start": "1558080",
    "end": "1564799"
  },
  {
    "text": "uh but if you don't it's actually a very good site to that will kind of give a base comparison of different types of",
    "start": "1564799",
    "end": "1570960"
  },
  {
    "text": "data stores out there So just uh you know this is part of the reason why I wanted",
    "start": "1570960",
    "end": "1576960"
  },
  {
    "text": "to come and do this talk was the fact that this is a very fast growing uh area",
    "start": "1576960",
    "end": "1582640"
  },
  {
    "text": "and it's something that you guys will probably run into as uh or at least might want to think about using in some",
    "start": "1582640",
    "end": "1588159"
  },
  {
    "text": "of the projects as you're coming up or that are coming up for you So the first differentiation I'm",
    "start": "1588159",
    "end": "1594960"
  },
  {
    "start": "1592000",
    "end": "1592000"
  },
  {
    "text": "going to make in the types of graph databases is the difference between a database and a framework Um a graph",
    "start": "1594960",
    "end": "1601520"
  },
  {
    "text": "database is basically built you know one of the differences between a database and framework is that databases will run",
    "start": "1601520",
    "end": "1607039"
  },
  {
    "text": "real-time queries Um they hand some of them can handle both transactional and analytical type workloads you know and",
    "start": "1607039",
    "end": "1615440"
  },
  {
    "text": "they persist the data themselves um they they tend to have no they'll",
    "start": "1615440",
    "end": "1620880"
  },
  {
    "text": "have no scaling feature or NoSQL features like scaling and high availability whereas frameworks really",
    "start": "1620880",
    "end": "1626799"
  },
  {
    "text": "are are built to work on humongous data loads and by humongous data loads I'm talking about data loads that tend to",
    "start": "1626799",
    "end": "1632960"
  },
  {
    "text": "not fit uh don't even necessarily fit in the memory of the servers that they're running on Uh they're they're built for",
    "start": "1632960",
    "end": "1639919"
  },
  {
    "text": "OLAP workloads and they they use another method underneath uh them to actually",
    "start": "1639919",
    "end": "1645840"
  },
  {
    "text": "persist the data It's often something like a Hadoop cluster Um the way I think of this is basically",
    "start": "1645840",
    "end": "1652240"
  },
  {
    "text": "a framework essentially as a library that sits on top of something else to run your graph data on So you have to",
    "start": "1652240",
    "end": "1658640"
  },
  {
    "text": "sit there you'll have to load your data into that graph framework You have to run your graph queries and you'll have to persist your data out to something",
    "start": "1658640",
    "end": "1665000"
  },
  {
    "text": "else A database itself is just like a SQL database it it handles both not only",
    "start": "1665000",
    "end": "1670400"
  },
  {
    "text": "the the the querying of the data but also the persisting of the data",
    "start": "1670400",
    "end": "1675559"
  },
  {
    "text": "back So some of the common graph processing frameworks out there if you get into this space are something like",
    "start": "1675559",
    "end": "1681360"
  },
  {
    "start": "1676000",
    "end": "1676000"
  },
  {
    "text": "uh Apache Giraffe I'm not quite sure how that's supposed to be draft but that's what it",
    "start": "1681360",
    "end": "1686760"
  },
  {
    "text": "is Um that is that you know so you have something like Apache Giraffe which is built on top of Hadoop That's where it",
    "start": "1686760",
    "end": "1693679"
  },
  {
    "text": "runs uh for its persistence layer You have something like uh graphics which is actually part of the Apache Spark",
    "start": "1693679",
    "end": "1699960"
  },
  {
    "text": "project Um then you have things like Oracle things you know which is",
    "start": "1699960",
    "end": "1705600"
  },
  {
    "text": "obviously built on top of Oracle Uh you'll have things like things span graph base infog and this this little",
    "start": "1705600",
    "end": "1711760"
  },
  {
    "text": "guy here is actually Apache Hama Um one interesting one to note here is the",
    "start": "1711760",
    "end": "1717760"
  },
  {
    "text": "Apache Tinker Pop project Uh so the Apache Tinkerpop project is made up of a",
    "start": "1717760",
    "end": "1722960"
  },
  {
    "text": "couple of different parts Um it in and of itself it's a graph processing",
    "start": "1722960",
    "end": "1728200"
  },
  {
    "text": "framework Um but that graph processing framework actually specifies a query",
    "start": "1728200",
    "end": "1734000"
  },
  {
    "text": "language associated with called Gremlin which we'll talk about here in a little bit But that uh as well as the the the",
    "start": "1734000",
    "end": "1741440"
  },
  {
    "text": "uh query language it basically also specifies an interface in a graph engine",
    "start": "1741440",
    "end": "1746720"
  },
  {
    "text": "that are used by some of the databases we'll talk in about here in a moment So it's kind of a very",
    "start": "1746720",
    "end": "1753320"
  },
  {
    "text": "uh it's a complete uh you know it's kind of has a lots of",
    "start": "1753320",
    "end": "1758720"
  },
  {
    "text": "it's hands in a lots of different pieces of the graph database world uh probably more than anything else but in and of",
    "start": "1758720",
    "end": "1764799"
  },
  {
    "text": "itself you can actually just use it as a graph processing framework",
    "start": "1764799",
    "end": "1770278"
  },
  {
    "text": "So the next kind of differentiation I made and and just to be honest the these",
    "start": "1779039",
    "end": "1784080"
  },
  {
    "text": "differentiations are semi-arbitrary on my part They're not really arbitrary as they're sort of uh there's some logic",
    "start": "1784080",
    "end": "1791600"
  },
  {
    "text": "behind it but other people may group these slightly differently Um but the",
    "start": "1791600",
    "end": "1796960"
  },
  {
    "text": "next one I'm going to talk about is basically the two types of graph databases are out there One's called RDF",
    "start": "1796960",
    "end": "1802799"
  },
  {
    "text": "or you'll hear them called RDF triple stores Um they work with a a subject",
    "start": "1802799",
    "end": "1808399"
  },
  {
    "text": "predicate object triple Um the the entities that you store are these",
    "start": "1808399",
    "end": "1814200"
  },
  {
    "text": "triples Um this comes from a background of the semantic web Uh it has well-",
    "start": "1814200",
    "end": "1819840"
  },
  {
    "text": "definfined standards associated with this and RDF databases are very",
    "start": "1819840",
    "end": "1825120"
  },
  {
    "text": "efficient at finding relationships inside your data Um the other type is a",
    "start": "1825120",
    "end": "1830720"
  },
  {
    "text": "property model graph database Um this works with the nodes edges and properties very similar to what the the",
    "start": "1830720",
    "end": "1836799"
  },
  {
    "text": "first section where I was showing uh talking about It has separate entities for nodes and edges And both the nodes",
    "start": "1836799",
    "end": "1843919"
  },
  {
    "text": "nodes and edges can have properties on them And what property model graph databases are very are good at is",
    "start": "1843919",
    "end": "1850080"
  },
  {
    "text": "they're good at efficiently traversing relationships in your data And I'll show you an example of the difference between these two here in a moment Uh but the",
    "start": "1850080",
    "end": "1857200"
  },
  {
    "text": "biggest thing to probably take away from this slide is RDF databases are very good at finding relationships in your",
    "start": "1857200",
    "end": "1863720"
  },
  {
    "text": "data and property model graph databases are very good at uh traversing relationships in your data",
    "start": "1863720",
    "end": "1872360"
  },
  {
    "start": "1875000",
    "end": "1875000"
  },
  {
    "text": "So an example of an RDF uh sort of an RDF database what what sort of data you",
    "start": "1876320",
    "end": "1881760"
  },
  {
    "text": "would store in that is you know people are a people with a common parent are",
    "start": "1881760",
    "end": "1887559"
  },
  {
    "text": "siblings and a father is a parent So you would put these rules in uh the way RDF",
    "start": "1887559",
    "end": "1893520"
  },
  {
    "text": "databases work is basically through an inference engine So you basically put these rules in as you've seen here The",
    "start": "1893520",
    "end": "1899360"
  },
  {
    "text": "next thing you'd put in is you'd put in a couple of facts you put in the fact that Mike is the father of John and that",
    "start": "1899360",
    "end": "1905440"
  },
  {
    "text": "Mike is the father of Steve Uh what would happen then is that that that inference engine in the RDF database",
    "start": "1905440",
    "end": "1912399"
  },
  {
    "text": "would basically infer new facts about your data based on the rules that you've",
    "start": "1912399",
    "end": "1917440"
  },
  {
    "text": "already entered So in this case it would be able to infer that John and Steve are siblings because you know each you know",
    "start": "1917440",
    "end": "1923840"
  },
  {
    "text": "they they both have a father their father is Mike and people with a common parent are siblings",
    "start": "1923840",
    "end": "1929360"
  },
  {
    "text": "Property model graph databases on the other hand would look more what you have on the what's that the left right up",
    "start": "1929360",
    "end": "1935760"
  },
  {
    "text": "here whatever this one over here don't know my left from my right sorry um thing uh what you would have to put",
    "start": "1935760",
    "end": "1942799"
  },
  {
    "text": "in here is you would have to you put in the same information you'd put in a node that is you know that there's a person",
    "start": "1942799",
    "end": "1948480"
  },
  {
    "text": "named Mike a person and a person named John and that there there's a relationship between them of father of",
    "start": "1948480",
    "end": "1955519"
  },
  {
    "text": "uh you would then put in that there's a person named Steve and the relationship would be father of and here's where",
    "start": "1955519",
    "end": "1961360"
  },
  {
    "text": "property model graphs get a bit are definitely differ a little bit than RDF sort of databases So now now you have an",
    "start": "1961360",
    "end": "1968640"
  },
  {
    "text": "option You can either if when you go to actually run your traversal on this you can either basically run a traversal",
    "start": "1968640",
    "end": "1975039"
  },
  {
    "text": "that would say okay you know give me you know for I want to find you know for for",
    "start": "1975039",
    "end": "1981519"
  },
  {
    "text": "John I want to find all the you know I want to find his father and then I would find you know who else he's the father",
    "start": "1981519",
    "end": "1986799"
  },
  {
    "text": "of and be able to in my application logic know that those two peoples are siblings or you could at the time you",
    "start": "1986799",
    "end": "1994880"
  },
  {
    "text": "put the data in put that relationship in Um relationships in a property model",
    "start": "1994880",
    "end": "2000960"
  },
  {
    "text": "graph are basically precomputed joins of your data Um so you can either basically",
    "start": "2000960",
    "end": "2007919"
  },
  {
    "text": "it works either way You could either basically navigate this relationship um inside your application inside your",
    "start": "2007919",
    "end": "2014320"
  },
  {
    "text": "traversal or you'd have to premputee that join ahead of time There any questions on this i know",
    "start": "2014320",
    "end": "2020480"
  },
  {
    "text": "this is a very kind of confusing sort of concept",
    "start": "2020480",
    "end": "2026279"
  },
  {
    "text": "question and this rule works for all all the data right so yes one for siblings",
    "start": "2027640",
    "end": "2034960"
  },
  {
    "text": "and for siblings and then we have it on the right side do we have to do only once as",
    "start": "2034960",
    "end": "2043039"
  },
  {
    "text": "well so so the question was in the RDF database you basically define the uh you",
    "start": "2043039",
    "end": "2050240"
  },
  {
    "text": "know you define the rules once and you put the data and when the data comes in you you do it on the in the property",
    "start": "2050240",
    "end": "2056800"
  },
  {
    "text": "model graph do you only define sibling of once well you would need to define sibling of for each pe each place you",
    "start": "2056800",
    "end": "2063200"
  },
  {
    "text": "want to have that relationship so this is where uh it's kind of an example of how RDF databases are great at finding",
    "start": "2063200",
    "end": "2070320"
  },
  {
    "text": "information that you don't have uh because it's able to basically infer that this is a new relationship type",
    "start": "2070320",
    "end": "2076638"
  },
  {
    "text": "whereas property model graphs are really better traversing how those relationships already exist So that you",
    "start": "2076639",
    "end": "2082320"
  },
  {
    "text": "know if you want to be efficient and you want to find everyone that's a sibling of somebody you need to put this sibling of edge in for every person that's a",
    "start": "2082320",
    "end": "2089118"
  },
  {
    "text": "sibling of you know maybe there's John Steve Mike Tom Bill Jane Sue Mike had a",
    "start": "2089119",
    "end": "2095839"
  },
  {
    "text": "lot of kids what can I say you would want to put the sibling of edge in for each of those that does that",
    "start": "2095839",
    "end": "2101520"
  },
  {
    "text": "answer your question Okay So what are some common property",
    "start": "2101520",
    "end": "2107520"
  },
  {
    "start": "2104000",
    "end": "2104000"
  },
  {
    "text": "model graph databases um you know the probably the most common one out there right now is Neoforj Um it's definitely",
    "start": "2107520",
    "end": "2113760"
  },
  {
    "text": "the probably the it's definitely the industry leader in this space It's what the the two people in this room have used It's it's probably the easiest to",
    "start": "2113760",
    "end": "2120079"
  },
  {
    "text": "get started with Um then you move on some to something like data stax enterprise graph Um this is a a very",
    "start": "2120079",
    "end": "2126960"
  },
  {
    "text": "built to basically scale to larger data sizes Um it's built on top of basically",
    "start": "2126960",
    "end": "2132320"
  },
  {
    "text": "data stax enterprise if any of you are familiar with that Um then you have one called Orient DB Uh",
    "start": "2132320",
    "end": "2138880"
  },
  {
    "text": "Orient DB is actually you'll see it again later because it's not only a property model database but a multimodel",
    "start": "2138880",
    "end": "2145280"
  },
  {
    "text": "graph database which I'll talk about here in a moment Um but these three that you see across the top here are commercial uh commercial uh licensed",
    "start": "2145280",
    "end": "2153599"
  },
  {
    "text": "products Um they each have like community version essentially that you could you can try out for free Um the",
    "start": "2153599",
    "end": "2161280"
  },
  {
    "text": "bottom two here are first one you'll see is called Janisgraph which is actually a new one on the market It's actually a",
    "start": "2161280",
    "end": "2167680"
  },
  {
    "text": "fork of an old uh one of an old of a database that's been around for a while",
    "start": "2167680",
    "end": "2173200"
  },
  {
    "text": "called Titan Uh this is actually very new and as of I think it was last Thursday This was announced as part of",
    "start": "2173200",
    "end": "2179200"
  },
  {
    "text": "the Linux Foundation Uh so it's an open source uh project uh run by the Linux Foundation Actually the company I work",
    "start": "2179200",
    "end": "2185440"
  },
  {
    "text": "for Spiro is one of the uh the key members in there along with people like Google Horton Works and IBM Uh so I have",
    "start": "2185440",
    "end": "2193920"
  },
  {
    "text": "to throw a little shout out to that one while I was here Uh and then there's another uh very interesting one that's I",
    "start": "2193920",
    "end": "2199040"
  },
  {
    "text": "believe only it's either an alpha or beta called Dgraph Uh that's built to do a highly distributed model uh of graph",
    "start": "2199040",
    "end": "2205760"
  },
  {
    "text": "databases of property model graph databases",
    "start": "2205760",
    "end": "2210440"
  },
  {
    "text": "The next uh this slide it basically shows you some of the common uh RDF data",
    "start": "2210800",
    "end": "2215839"
  },
  {
    "text": "stores that are out there Um in this slide uh you know you have ones like stardog allegor blaze graph and ontoext",
    "start": "2215839",
    "end": "2224160"
  },
  {
    "text": "Uh of these the only one that has any sort of open source option with it is blaze graph All of the rest of them are",
    "start": "2224160",
    "end": "2230760"
  },
  {
    "text": "um commercial licensed Then you kind of get into the middle",
    "start": "2230760",
    "end": "2237119"
  },
  {
    "start": "2234000",
    "end": "2234000"
  },
  {
    "text": "ground of these ones we call uh I called multimodel data stores Um you have ones",
    "start": "2237119",
    "end": "2242880"
  },
  {
    "text": "So basically what these are these are essentially I think of them as basically",
    "start": "2242880",
    "end": "2248720"
  },
  {
    "text": "a framework you know graph processing framework on top of a another NoSQL data",
    "start": "2248720",
    "end": "2253760"
  },
  {
    "text": "store another type of data store but they both come together in one package",
    "start": "2253760",
    "end": "2259040"
  },
  {
    "text": "Um so for example something like an Orient DB you can store not only uh",
    "start": "2259040",
    "end": "2264079"
  },
  {
    "text": "unstructured data in the form of documents in it but you can store graph data um under the covers it's a document",
    "start": "2264079",
    "end": "2270480"
  },
  {
    "text": "data store with a graph layer on top of it but they expose both of them to you uh which can be very useful depending on",
    "start": "2270480",
    "end": "2277200"
  },
  {
    "text": "what you're trying to actually accomplish If you want to accomplish uh if you have a a use case where you have",
    "start": "2277200",
    "end": "2282480"
  },
  {
    "text": "where you want to use a multimodel sort of approach maybe you have a bunch of unstructured data you want to store but",
    "start": "2282480",
    "end": "2288079"
  },
  {
    "text": "you want to store the relationships between those data inside a graph something like an orient DB would be uh",
    "start": "2288079",
    "end": "2293599"
  },
  {
    "text": "great for that you know uh I don't know if any of you familiar with elastic search but it's the same sort of thing",
    "start": "2293599",
    "end": "2298720"
  },
  {
    "text": "they recently released a graph model on top of a graph framework on top that on top of their product but be comes as",
    "start": "2298720",
    "end": "2305520"
  },
  {
    "text": "part of their product so like I said it's kind of a it's It's a middle ground between the",
    "start": "2305520",
    "end": "2311000"
  },
  {
    "text": "two And then you know you have SAP HANA Orango DB and",
    "start": "2311000",
    "end": "2316440"
  },
  {
    "text": "Virtuoso This everything I'm showing up here in all these slides there's there's more of these types out there than I",
    "start": "2316440",
    "end": "2323200"
  },
  {
    "text": "have on these slides I just tried to show a representative sample of some of the more common",
    "start": "2323200",
    "end": "2328880"
  },
  {
    "text": "ones So before we go on are there any ecos or ecosystem questions out there",
    "start": "2329400",
    "end": "2337240"
  },
  {
    "text": "okay so your data is in graph What do you do with it now well the first thing you're going to",
    "start": "2342320",
    "end": "2348880"
  },
  {
    "start": "2347000",
    "end": "2347000"
  },
  {
    "text": "probably want to do is query your data out Um what I'm showing here are really",
    "start": "2348880",
    "end": "2353920"
  },
  {
    "text": "there each of the data stores we showed tend to have their own proprietary query language A lot of times they're some SQL",
    "start": "2353920",
    "end": "2362320"
  },
  {
    "text": "like uh query language Sometimes it's it's almost exactly the same as SQL Uh",
    "start": "2362320",
    "end": "2367520"
  },
  {
    "text": "what I'm showing here is basically the the only the standard or open source languages that are here that are",
    "start": "2367520",
    "end": "2373200"
  },
  {
    "text": "implemented by multiple different products Um so the easiest one here is",
    "start": "2373200",
    "end": "2378480"
  },
  {
    "text": "down here with RDF databases There's a W3C standard called Sparkle Pretty much any of the RDF databases out there will",
    "start": "2378480",
    "end": "2386160"
  },
  {
    "text": "implement at least some version of Sparkle Uh some are more compatible than others just like you know every other",
    "start": "2386160",
    "end": "2392400"
  },
  {
    "text": "standard out there in the world Um up here at the top is where it",
    "start": "2392400",
    "end": "2397680"
  },
  {
    "text": "definitely gets a little bit more uh complex So the first one you see here is what's called the Open Cipher project Uh",
    "start": "2397680",
    "end": "2405040"
  },
  {
    "text": "Cipher is the native graph language that uh was developed by Neo4j Um I think it",
    "start": "2405040",
    "end": "2411040"
  },
  {
    "text": "was a little over a year ago they uh they basically opened the specifications",
    "start": "2411040",
    "end": "2416320"
  },
  {
    "text": "for cipher in a project called open cipher for other uh database vendors to implement them a version of cipher for",
    "start": "2416320",
    "end": "2423280"
  },
  {
    "text": "them for their own language Uh cipher is a very declarative language that's reminiscent of SQL Uh I'll show you some",
    "start": "2423280",
    "end": "2430160"
  },
  {
    "text": "actual examples here in a second Um and it this currently I believe has",
    "start": "2430160",
    "end": "2436160"
  },
  {
    "text": "somewhere around 10 implementations of which I think believe",
    "start": "2436160",
    "end": "2441440"
  },
  {
    "text": "four go against databases Don't don't quote me on those numbers because those yet again those numbers are changing all the time but gives you a rough idea of",
    "start": "2441440",
    "end": "2448000"
  },
  {
    "text": "how uh adopted it how well adopted it is Uh the next one you'll see here with the cute little green guy is Gremlin Uh this",
    "start": "2448000",
    "end": "2455119"
  },
  {
    "text": "is the query language that's specified as part of the Apache Tinker Pop project I talked about before and it takes a",
    "start": "2455119",
    "end": "2461359"
  },
  {
    "text": "more traversalbased approach to the uh basically to your syntax and it",
    "start": "2461359",
    "end": "2466880"
  },
  {
    "text": "currently has basically 17 plus implementations somewhere along that The",
    "start": "2466880",
    "end": "2472720"
  },
  {
    "text": "last one you'll see here is actually GraphQL uh GraphQL was uh basically developed by Facebook and it's different",
    "start": "2472720",
    "end": "2479839"
  },
  {
    "text": "from these other two in as much as it's really a JSON based query language",
    "start": "2479839",
    "end": "2485280"
  },
  {
    "text": "that's uh for your API Uh you'll understand a little more what I mean",
    "start": "2485280",
    "end": "2490640"
  },
  {
    "text": "here in a second when I show you an example Um but it's it's a bit of a different uh beast than these other two",
    "start": "2490640",
    "end": "2496880"
  },
  {
    "text": "which are kind of more like comparable what SQL would be for the relational",
    "start": "2496880",
    "end": "2501960"
  },
  {
    "text": "databases So for these property model queries this is the basic property model",
    "start": "2501960",
    "end": "2507440"
  },
  {
    "start": "2502000",
    "end": "2502000"
  },
  {
    "text": "we're going to work against Um it's pretty basic We're only going to do a small part of it but basically you know",
    "start": "2507440",
    "end": "2512480"
  },
  {
    "text": "we're what we're worried about here is we're going to have a we want to find all the people who acted in a film that was directed by J.J",
    "start": "2512480",
    "end": "2518200"
  },
  {
    "text": "Abrams So basically we're going to basically come from this person uh you know we're going to find the person",
    "start": "2518200",
    "end": "2523920"
  },
  {
    "text": "whose name is J.J Abrams Then we're going to follow this directed in edge to the movie And then we're going to follow",
    "start": "2523920",
    "end": "2530240"
  },
  {
    "text": "this acted in age back to all the people that acted in movies that he",
    "start": "2530240",
    "end": "2535319"
  },
  {
    "text": "directed So the first query we're going to look at is the open cipher query Um",
    "start": "2535319",
    "end": "2541040"
  },
  {
    "text": "as you can see basically it's pretty easy to read these sort of queries you",
    "start": "2541040",
    "end": "2546240"
  },
  {
    "text": "know um things to note about cipher is basically what you'll end up with is",
    "start": "2546240",
    "end": "2551920"
  },
  {
    "text": "basically the bra the uh round brackets are the different types of nodes you're looking for and the square brackets are",
    "start": "2551920",
    "end": "2559040"
  },
  {
    "text": "the edges And what you'll see is actually uh these square brackets will have dashes and greater than or less",
    "start": "2559040",
    "end": "2565920"
  },
  {
    "text": "than signs in front of them to basically indicate the edge that that direction that you're traversing out that",
    "start": "2565920",
    "end": "2571440"
  },
  {
    "text": "direction So the next one is Gremlin Um Gremlin is",
    "start": "2571440",
    "end": "2579200"
  },
  {
    "text": "as you can see is a bit different than the open than open cipher in as much as what you're doing here is you're is",
    "start": "2579200",
    "end": "2585599"
  },
  {
    "text": "you're uh basically the way I think about it is I'm actually this is I'm telling it exactly how I wanted to walk",
    "start": "2585599",
    "end": "2591599"
  },
  {
    "text": "through my graph in order to get the information I'm looking for Uh so basically the way this works so g.v uh",
    "start": "2591599",
    "end": "2598000"
  },
  {
    "text": "for those of you not familiar is basically the way you say give me all of all the vertices in my graph I want to",
    "start": "2598000",
    "end": "2606319"
  },
  {
    "text": "you know I want to find a person edge or person node that has a name of JJ Abrams",
    "start": "2606319",
    "end": "2612880"
  },
  {
    "text": "I then want to follow the an outwards directed edge called directed in Then I",
    "start": "2612880",
    "end": "2619359"
  },
  {
    "text": "want to so that would take us to the movie verticy And then I want to go back an inward directed edge called actinid",
    "start": "2619359",
    "end": "2625319"
  },
  {
    "text": "actin to get back to the people This this next is actually a very specific",
    "start": "2625319",
    "end": "2630480"
  },
  {
    "text": "thing to gremlin that say um basically it's lazily evaluated and until you put something on there to force it to be",
    "start": "2630480",
    "end": "2636640"
  },
  {
    "text": "evaluated It won't actually print anything out Uh that that next will actually force it to print out all your",
    "start": "2636640",
    "end": "2642079"
  },
  {
    "text": "results So as you can see these are very similar yet different to one",
    "start": "2642079",
    "end": "2649000"
  },
  {
    "text": "another But when you look at uh GraphQL as you can see it's very",
    "start": "2649000",
    "end": "2655160"
  },
  {
    "text": "uh familiar if you're used to doing something like REST calls but it doesn't",
    "start": "2655160",
    "end": "2660319"
  },
  {
    "text": "really look or map directly or as easily to uh Gremlin or open cipher",
    "start": "2660319",
    "end": "2667960"
  },
  {
    "text": "What it's doing here is basically saying for I have a I want to find a person who has a name of J.J Abrams Then I want to",
    "start": "2668079",
    "end": "2675520"
  },
  {
    "text": "go out the directed that actually should say directed in That was my bad Um you",
    "start": "2675520",
    "end": "2680960"
  },
  {
    "text": "know I want to find all the things he directed in and then all the people that acted in those and return the name",
    "start": "2680960",
    "end": "2687480"
  },
  {
    "text": "Um as I said uh you know this is a very you know it was a standard produced by",
    "start": "2687480",
    "end": "2693920"
  },
  {
    "text": "Facebook I always think of these as very useful if you're looking at building out REST endpoints because who wants to send",
    "start": "2693920",
    "end": "2699200"
  },
  {
    "text": "this sort of query across uh a REST endpoint There any questions on this",
    "start": "2699200",
    "end": "2705680"
  },
  {
    "text": "before I go",
    "start": "2705680",
    "end": "2708240"
  },
  {
    "start": "2713000",
    "end": "2713000"
  },
  {
    "text": "on so the next thing is I how do you visualize your data you know um you know",
    "start": "2713240",
    "end": "2721119"
  },
  {
    "text": "for visualizing your data there's there's a lot of uh offtheshelf products uh something here like ling curious",
    "start": "2721119",
    "end": "2727359"
  },
  {
    "text": "enterprise is actually a very powerful tool uh for doing some visualization of your data um something like key lines is",
    "start": "2727359",
    "end": "2734400"
  },
  {
    "text": "probably one of the leaders in actually uh basically like web web toolkits to uh",
    "start": "2734400",
    "end": "2741040"
  },
  {
    "text": "work against your data if you want to do a lot of different customizations something like a D3 is very useful",
    "start": "2741040",
    "end": "2748240"
  },
  {
    "text": "uh Where this starts to get very interesting is if you have a geospatial type of problem Um a lot of times what",
    "start": "2748240",
    "end": "2755680"
  },
  {
    "text": "we find is that the problems we're working with end up having a geospatial aspect with to them as well Not only do",
    "start": "2755680",
    "end": "2761280"
  },
  {
    "text": "I want to know how things were connected I want to know where they were at at the times that that certain events happened",
    "start": "2761280",
    "end": "2767119"
  },
  {
    "text": "especially if you're thinking like in the IoT space Um so these are just some",
    "start": "2767119",
    "end": "2772160"
  },
  {
    "text": "of the tools out there Um but what can you kind of do with it so these are some uh basically some screens of things that",
    "start": "2772160",
    "end": "2778800"
  },
  {
    "start": "2775000",
    "end": "2775000"
  },
  {
    "text": "we have worked on One uh and and the the my UX",
    "start": "2778800",
    "end": "2784000"
  },
  {
    "text": "colleagues would would would harass me if I didn't basically say that just",
    "start": "2784000",
    "end": "2789359"
  },
  {
    "text": "because it's a graph piece of data Uh you know just because the underlying data is a graph doesn't mean you need to",
    "start": "2789359",
    "end": "2794880"
  },
  {
    "text": "show it just as node charts You know in the case of here you know this was an IoT sort of demo uh you know where you",
    "start": "2794880",
    "end": "2800640"
  },
  {
    "text": "were following trucks and following sensors That makes sense to basically kind of almost show that as a node chart of the the flow of where it's going But",
    "start": "2800640",
    "end": "2807920"
  },
  {
    "text": "over here this is a healthcare app The graph data underneath the data underneath it may be stored in a graph",
    "start": "2807920",
    "end": "2814319"
  },
  {
    "text": "but that's not how the end user is thinking about it and the end user shouldn't know or necessarily care that",
    "start": "2814319",
    "end": "2819760"
  },
  {
    "text": "the data is being stored as a graph Um so you know applying good UX principles to these sorts of things are uh are",
    "start": "2819760",
    "end": "2827680"
  },
  {
    "text": "really important in order to uh basically get the best information out of it You know good examples of this or",
    "start": "2827680",
    "end": "2833760"
  },
  {
    "text": "something like a LinkedIn or Facebook or you know they don't show you that the graph of how your friends how they got",
    "start": "2833760",
    "end": "2840400"
  },
  {
    "text": "to the friends you may know They just show you a list of people that you may know but it's being powered under the",
    "start": "2840400",
    "end": "2845760"
  },
  {
    "text": "covers by a graph You know Amazon recommendations are the same sort of way You know people who bought this also",
    "start": "2845760",
    "end": "2850880"
  },
  {
    "text": "bought that Well that's being powered by a graph at some level but they're not telling you that it's powered by a graph",
    "start": "2850880",
    "end": "2856240"
  },
  {
    "text": "They're just showing the the output in a way that's easily consumed by the user So the last sort of section here is",
    "start": "2856240",
    "end": "2864720"
  },
  {
    "text": "why should you care about it well we're going to look at a basic product recommendation uh engine here You know I",
    "start": "2864720",
    "end": "2871440"
  },
  {
    "start": "2866000",
    "end": "2866000"
  },
  {
    "text": "want to find all the products that I have purchased uh find me all the products I haven't purchased but were",
    "start": "2871440",
    "end": "2877200"
  },
  {
    "text": "purchased by customers who purchased other things I bought pretty simple or pretty common uh I want",
    "start": "2877200",
    "end": "2884640"
  },
  {
    "text": "or need for a uh you know any sort of e-commerce site is is kind of to power out your uh product recommendation Well",
    "start": "2884640",
    "end": "2892000"
  },
  {
    "text": "here's roughly the SQL it takes to do that Um you know the actual specifics",
    "start": "2892000",
    "end": "2898800"
  },
  {
    "text": "don't matter Uh I'll share the slides with you later if anybody wants but here's the uh corresponding cipher and",
    "start": "2898800",
    "end": "2905200"
  },
  {
    "text": "gremlin to answer that same query um you know for you know if you look at the gremlin or the cipher it's about takes",
    "start": "2905200",
    "end": "2913440"
  },
  {
    "text": "these three lines to answer what takes pretty much all the way down to this group by to get to the same sort of answer",
    "start": "2913440",
    "end": "2919839"
  },
  {
    "text": "uh you know and the gremlin takes a little bit more than that but you know in in general you're talking you know",
    "start": "2919839",
    "end": "2925680"
  },
  {
    "text": "four you know three or four lines versus probably 15 uh to get your answer",
    "start": "2925680",
    "end": "2933400"
  },
  {
    "text": "performance performance uh the I mean obviously performance is going to be very different depending on what you're",
    "start": "2934400",
    "end": "2940480"
  },
  {
    "text": "doing but I would not re I would not guess that the performance of your SQL is going to be super uh is not going to",
    "start": "2940480",
    "end": "2946720"
  },
  {
    "text": "be super performant uh whereas the cipher from the gremlin will be because that's what they're optimized for Um so",
    "start": "2946720",
    "end": "2953760"
  },
  {
    "text": "the next use case is basically to find an org chart You know I want to find the employee all the employees who their",
    "start": "2953760",
    "end": "2959680"
  },
  {
    "text": "supervisor is and where they live inside the organization You know basically build out a simple org chart Well to do",
    "start": "2959680",
    "end": "2965760"
  },
  {
    "text": "that in the SQL you essentially have to end you end up having to build this recursive uh recursive function to",
    "start": "2965760",
    "end": "2971920"
  },
  {
    "text": "basically pull the information out you know it takes all the way till down here these you know probably 12 lines uh of",
    "start": "2971920",
    "end": "2979200"
  },
  {
    "text": "code to get to basically the just the rough data before you actually can even pull it out Well here is the uh the",
    "start": "2979200",
    "end": "2987760"
  },
  {
    "text": "cipher to do it Basically these the cipher to do all of these 12 lines is",
    "start": "2987760",
    "end": "2994800"
  },
  {
    "text": "pretty much this first line will return you all the data After that it's actually just formatting the data the",
    "start": "2994800",
    "end": "2999839"
  },
  {
    "text": "way you want to actually pull it back out In Gremlin it basically takes about",
    "start": "2999839",
    "end": "3005160"
  },
  {
    "text": "the line and a half to do the same sort of thing Um you know here's you know kind of shows you how you know something",
    "start": "3005160",
    "end": "3012640"
  },
  {
    "text": "like this is is more performant or can be more performant and is certainly easier to maintain for these sorts of uh",
    "start": "3012640",
    "end": "3020400"
  },
  {
    "text": "queries So how do you know if you need a graph this is you know the question we get all the time Well if you can answer",
    "start": "3021800",
    "end": "3028240"
  },
  {
    "text": "yes to any of these sorts of questions then you might have a problem that is worthy of that would be worthwhile to",
    "start": "3028240",
    "end": "3034000"
  },
  {
    "text": "take a look at using a graph database for You know do you have queries with multiple joins and unions of data do you",
    "start": "3034000",
    "end": "3039599"
  },
  {
    "text": "have recursive uh common table expressions is the performance of your joins or common table expressions poor",
    "start": "3039599",
    "end": "3045760"
  },
  {
    "text": "and can't be increased by uh other means or you know by standard traditional relational database techniques uh is the",
    "start": "3045760",
    "end": "3052400"
  },
  {
    "text": "structure of your data continuously evolving um one of the things I haven't touched on much here is the fact that uh",
    "start": "3052400",
    "end": "3058319"
  },
  {
    "text": "graph databases tend to be very good at at allowing for evolving and flexible schemas You know you if you want to add",
    "start": "3058319",
    "end": "3065359"
  },
  {
    "text": "a new relationship type to your graph you just add a new relationship type to your graph You don't need to go in",
    "start": "3065359",
    "end": "3071040"
  },
  {
    "text": "change tables add default values things like all those things you end up having to do in a relational database to make",
    "start": "3071040",
    "end": "3076640"
  },
  {
    "text": "that uh to basically make it uh you know uh work Is your domain that you're",
    "start": "3076640",
    "end": "3082880"
  },
  {
    "text": "working in a natural fit for them you know are you storing IT dependencies are you doing network management are you",
    "start": "3082880",
    "end": "3088240"
  },
  {
    "text": "doing relationships between people or any of those sort of things we talked about in the use cases and the one that probably uh",
    "start": "3088240",
    "end": "3095040"
  },
  {
    "text": "sticks with me more than anything else is are you dealing with the connections",
    "start": "3095040",
    "end": "3100079"
  },
  {
    "text": "between things more often than you're dealing with the things themselves do you really is what you're really trying",
    "start": "3100079",
    "end": "3105200"
  },
  {
    "text": "to care about how thing is how the things are connected together more than what is connected together um that's a",
    "start": "3105200",
    "end": "3111839"
  },
  {
    "text": "really strong indicator to myself that uh you know you might want to look at using a graph database",
    "start": "3111839",
    "end": "3118480"
  },
  {
    "start": "3117000",
    "end": "3117000"
  },
  {
    "text": "So if you're actually interested in getting started uh if you go to this website we actually have uh this getting started with graph link and it basically",
    "start": "3118480",
    "end": "3125280"
  },
  {
    "text": "provides a long list of just different resources that you can uh go out to get",
    "start": "3125280",
    "end": "3130960"
  },
  {
    "text": "started with graph including links to pretty much all of the data stores we talked about up here at least the",
    "start": "3130960",
    "end": "3136400"
  },
  {
    "text": "versions that you can download for free their tutorials uh their getting started pages things like that",
    "start": "3136400",
    "end": "3143680"
  },
  {
    "text": "Um and if anyone's interested and wants this slide deck just come see me after this and uh I can send it to you so you",
    "start": "3143680",
    "end": "3149680"
  },
  {
    "text": "can get some of these addresses or whatever So I guess there any questions",
    "start": "3149680",
    "end": "3157960"
  },
  {
    "text": "large amount of data So the question was uh do these graph databases allow you to partition data to sort it across",
    "start": "3166640",
    "end": "3172800"
  },
  {
    "text": "multiple nodes and sort of a cluster also allow you to do queries on the partition",
    "start": "3172800",
    "end": "3178480"
  },
  {
    "text": "Yeah And allow you to do queries on the partition data The answer to that question is it depends on which graph data store you're looking at Um I I am",
    "start": "3178480",
    "end": "3186960"
  },
  {
    "text": "not as familiar with a lot of the RDF ones so I can't answer to those specifically as much but uh on the",
    "start": "3186960",
    "end": "3192559"
  },
  {
    "text": "property model graph database side yes they can if you look at something like uh like data stacks enterprise is",
    "start": "3192559",
    "end": "3199440"
  },
  {
    "text": "basically I don't know if you guys are familiar with Apache Cassandra at all it's built on a clustering technology uh",
    "start": "3199440",
    "end": "3205040"
  },
  {
    "text": "by default and data stax enterprise graph is built on top of that so it's absolutely by default those are",
    "start": "3205040",
    "end": "3211359"
  },
  {
    "text": "partitioned uh if you're looking at something like Neoforj if you go to their enterprise edition In their most",
    "start": "3211359",
    "end": "3216400"
  },
  {
    "text": "recent release they actually added causal clustering to their uh to their graph databases Um if you look at",
    "start": "3216400",
    "end": "3223200"
  },
  {
    "text": "something like an Orient DB they have the ability to partition that data out as well uh using their own internal mechanisms So yes each of them have it",
    "start": "3223200",
    "end": "3230880"
  },
  {
    "text": "and each of them do it in a different way Does that answer your question",
    "start": "3230880",
    "end": "3237920"
  },
  {
    "text": "any other questions",
    "start": "3237920",
    "end": "3241400"
  },
  {
    "text": "record",
    "start": "3243680",
    "end": "3246680"
  },
  {
    "text": "So the question was are people using these as systems of record or as the primary data store or are they using",
    "start": "3249599",
    "end": "3254720"
  },
  {
    "text": "them as secondary data stores The answer to that is both Uh it depends on what the specific use case is Uh I've worked",
    "start": "3254720",
    "end": "3261760"
  },
  {
    "text": "with customers where they have basically migrated are have or are in the process of migrating all their data to be stored",
    "start": "3261760",
    "end": "3268160"
  },
  {
    "text": "inside a graph as the system of record I've also worked with customers where this is used as a a secondary system um",
    "start": "3268160",
    "end": "3276319"
  },
  {
    "text": "a lot of times especially if they want to if they have a small part of their application or their it's a small part",
    "start": "3276319",
    "end": "3282480"
  },
  {
    "text": "of the system where they have a very graph-based problem that they want to solve in a small area you know they may",
    "start": "3282480",
    "end": "3288240"
  },
  {
    "text": "keep their large Oracle installation or SQL server installation to be the system of record and then transfer the data",
    "start": "3288240",
    "end": "3294079"
  },
  {
    "text": "into this uh either in batches or continuously to handle those sorts of",
    "start": "3294079",
    "end": "3300000"
  },
  {
    "text": "dependency queries or whatever it is they're trying to actually pull out that that is better solved in a graph",
    "start": "3300000",
    "end": "3307640"
  },
  {
    "text": "Do you know any code that combine approach",
    "start": "3309680",
    "end": "3314800"
  },
  {
    "text": "any that appro that that combine an RDF with a property database uh actually",
    "start": "3314800",
    "end": "3320319"
  },
  {
    "text": "there's several of them that uh will allow you to traverse them as both I believe actually Oracle does this A star",
    "start": "3320319",
    "end": "3328319"
  },
  {
    "text": "dog I believe does that as well and I blaze graph I believe also will allow you to basically do either RDF or uh",
    "start": "3328319",
    "end": "3336319"
  },
  {
    "text": "property graph traversals of them I can't say I've done anything with",
    "start": "3336319",
    "end": "3343280"
  },
  {
    "text": "those uh in that specific use case I don't have any personal uh experience with it unfortunately but I believe they",
    "start": "3343280",
    "end": "3350319"
  },
  {
    "text": "both allow uh but those ones I believe allow you to do it in both ways",
    "start": "3350319",
    "end": "3355280"
  },
  {
    "text": "Okay that's it Thank you guys very much",
    "start": "3360559",
    "end": "3365920"
  }
]