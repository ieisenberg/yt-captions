[
  {
    "text": "okay should we get started okay can someone lock the doors please so no one can leave it's being",
    "start": "6600",
    "end": "12759"
  },
  {
    "text": "sorted out uh thank you so much for coming along today um this is actually one of my favorite conference venues in",
    "start": "12759",
    "end": "19560"
  },
  {
    "text": "the world which is weird because it's it doesn't on first glance seem like a",
    "start": "19560",
    "end": "24880"
  },
  {
    "text": "great venue but I love the sort of brutalist nature of it uh I also not",
    "start": "24880",
    "end": "30480"
  },
  {
    "text": "sure how I feel about all the high intensity security downstairs as well believe me it's been worse in past years",
    "start": "30480",
    "end": "36840"
  },
  {
    "text": "but you are also fortunate enough to be enjoying when I think it's typically the best conference food that I see at these",
    "start": "36840",
    "end": "42719"
  },
  {
    "text": "venues which doesn't say a lot but it says quite a bit actually cu the staff here worked really really hard and I had",
    "start": "42719",
    "end": "49480"
  },
  {
    "text": "a good coffee earlier so I'm I'm already buzzing and I'm already happy so it's good to see you all here today we're going to be talking today a little bit",
    "start": "49480",
    "end": "55800"
  },
  {
    "text": "about meaning what words mean uh so I'm going to be doing this",
    "start": "55800",
    "end": "65080"
  },
  {
    "text": "not I didn't set down to do a talk about meaning I set out to do a talk about trying to",
    "start": "65080",
    "end": "70640"
  },
  {
    "text": "clarify some Concepts that we talk about a lot I spend a lot of my time working with uh clients all over the world",
    "start": "70640",
    "end": "78119"
  },
  {
    "text": "looking at their architecture typically the way I'm working is how to people and",
    "start": "78119",
    "end": "83799"
  },
  {
    "text": "architecture and Technology all work together and that's ended up being a big focus of my career really for the last",
    "start": "83799",
    "end": "89240"
  },
  {
    "text": "25 years in hindsight that's what I've been doing and I spend a lot of my time as part of this thinking about boxes and",
    "start": "89240",
    "end": "97520"
  },
  {
    "text": "arrows we often joke that we can break architecture down to boxes and arrows and boxes and arrows are very much a",
    "start": "97520",
    "end": "105240"
  },
  {
    "text": "major focal point of what I do and sometimes we're thinking about how big",
    "start": "105240",
    "end": "112119"
  },
  {
    "text": "those boxes should be or more importantly how small those boxes should be sometimes we get to have more",
    "start": "112119",
    "end": "119000"
  },
  {
    "text": "interesting convers ations like what should we put in the boxes and maybe the",
    "start": "119000",
    "end": "124159"
  },
  {
    "text": "boxes should be broken up into smaller boxes using Cutting Edge ideas from the",
    "start": "124159",
    "end": "130280"
  },
  {
    "text": "1960s I tend to often focus on the right shape of the box and of course the",
    "start": "130280",
    "end": "135879"
  },
  {
    "text": "correct shape of a box is a hexagon in case there was any doubt but this is not",
    "start": "135879",
    "end": "141080"
  },
  {
    "text": "going to be a talk about the boxes this is mostly going to be a talk about the",
    "start": "141080",
    "end": "146760"
  },
  {
    "text": "arrows between them and I you know often when we're thinking",
    "start": "146760",
    "end": "152280"
  },
  {
    "text": "about how we find the boundary of a service for example how that Maps organizations and team and worker that's",
    "start": "152280",
    "end": "158840"
  },
  {
    "text": "all very very important but then we get into the conversation is okay great Sam now how are these boxes going to talk to",
    "start": "158840",
    "end": "165480"
  },
  {
    "text": "each other and that's what I want this talk to be about now obviously I spent a lot",
    "start": "165480",
    "end": "171040"
  },
  {
    "text": "of my time thinking about microservice architecture um because I'm nothing if",
    "start": "171040",
    "end": "176640"
  },
  {
    "text": "not able to Surf every single buzzword until it's no longer valid but this is the kind of architecture diagram I draw",
    "start": "176640",
    "end": "183200"
  },
  {
    "text": "a lot I draw boxes and I draw arrows and typically when I draw an arrow what I'm denoting is a dependency so this I'm",
    "start": "183200",
    "end": "190879"
  },
  {
    "text": "going to try and be very explicit about meaning in this talk for some people",
    "start": "190879",
    "end": "195920"
  },
  {
    "text": "these arrows mean different things when I draw an arrow between two boxes I'm showing some form of logical",
    "start": "195920",
    "end": "203840"
  },
  {
    "text": "dependency so in this example here we see a returns having an arrow talking to",
    "start": "203840",
    "end": "209360"
  },
  {
    "text": "ship I'm not talking necessarily about the flow of data because data always",
    "start": "209360",
    "end": "214439"
  },
  {
    "text": "ends up flowing in both directions I'm talking about a logical dependency from a logical point of view",
    "start": "214439",
    "end": "221720"
  },
  {
    "text": "the return service has a dependency on the shipping microservice that's what I'm just",
    "start": "221720",
    "end": "227560"
  },
  {
    "text": "explaining with these arrows and so at a high level this is all",
    "start": "227560",
    "end": "233519"
  },
  {
    "text": "fine where it starts getting more confusing is when we start wanting to talk in terms of these arrows being",
    "start": "233519",
    "end": "240200"
  },
  {
    "text": "synchronous arrows or asynchronous arrows now I've kind of tried dealing",
    "start": "240200",
    "end": "245560"
  },
  {
    "text": "with this issue a few times over the last 10 years or so and I've never been",
    "start": "245560",
    "end": "250879"
  },
  {
    "text": "entirely happy with the distinction here but I kind of just shied away from it and hoped that somebody else would sort",
    "start": "250879",
    "end": "256560"
  },
  {
    "text": "out this distinction for me and that hasn't happened but while that was not while I was not dealing with this",
    "start": "256560",
    "end": "262000"
  },
  {
    "text": "problem and I sort of just battered it away instead I'd focus on a distinction which I think is much clearer and that's the distinction between request response",
    "start": "262000",
    "end": "269160"
  },
  {
    "text": "or inter communication and event driven communication because when we're",
    "start": "269160",
    "end": "274520"
  },
  {
    "text": "thinking at a higher level when thinking sort of a logical level this distinction",
    "start": "274520",
    "end": "279919"
  },
  {
    "text": "I think is clear and has some very different type of outcomes when we think",
    "start": "279919",
    "end": "286080"
  },
  {
    "text": "about the working relationship between Services talking about request response",
    "start": "286080",
    "end": "293320"
  },
  {
    "text": "based software just request driven interactions this is really really straightforward and I think this is a",
    "start": "293320",
    "end": "299039"
  },
  {
    "text": "familiar p to most of you you have a service the return service which is going to ask for something so returns",
    "start": "299039",
    "end": "306479"
  },
  {
    "text": "depends on shipping and the way that dependency is implemented is the returns",
    "start": "306479",
    "end": "311639"
  },
  {
    "text": "microservices going somewhere and saying hello shipping service can you please provide something to me so I'm making a",
    "start": "311639",
    "end": "317960"
  },
  {
    "text": "request now I know some people like using the word command I prefer request",
    "start": "317960",
    "end": "323000"
  },
  {
    "text": "words are important as we'll see later in this talk the reason I would prefer the word request over the word command",
    "start": "323000",
    "end": "330639"
  },
  {
    "text": "is because request seems slightly softer a command is something that must",
    "start": "330639",
    "end": "337280"
  },
  {
    "text": "be obeyed on the contrary I think actually you should be able to say no",
    "start": "337280",
    "end": "343800"
  },
  {
    "text": "the thing you've asked me to do is not valid for me so that's why I prefer the terminology of request I also like using",
    "start": "343800",
    "end": "350479"
  },
  {
    "text": "this word because the term request is in the hdp specification and that is the best and most widely used kind of",
    "start": "350479",
    "end": "357680"
  },
  {
    "text": "inprocessing abstraction layer that many of you were familiar with but this example here we've got returns",
    "start": "357680",
    "end": "362880"
  },
  {
    "text": "microservice I'm sending a request I'm asking for something and I'm getting back a response sometimes response is no I",
    "start": "362880",
    "end": "369599"
  },
  {
    "text": "can't help you sometimes response is yes I can and here's what you asked for sometimes you don't actually want",
    "start": "369599",
    "end": "375319"
  },
  {
    "text": "anything back other than an acknowledgement of receipt we'd often talk about the returns micros service",
    "start": "375319",
    "end": "380599"
  },
  {
    "text": "here as being the consumer I am consuming functionality provided by",
    "start": "380599",
    "end": "385639"
  },
  {
    "text": "other service and I think this is a pretty clear-cut example of a high level of interpress communication we'll talk a",
    "start": "385639",
    "end": "391680"
  },
  {
    "text": "bit later on about the different ways we can implement this in terms of synchronous and asynchronous",
    "start": "391680",
    "end": "397800"
  },
  {
    "text": "communication we've then also got event and communication which is very different with event and communication",
    "start": "397800",
    "end": "404800"
  },
  {
    "text": "there's an inversion to an extent it might be considered a passive aggressive form of communication here we're dealing",
    "start": "404800",
    "end": "411039"
  },
  {
    "text": "with facts fact something has happened in this case here the inventory",
    "start": "411039",
    "end": "416720"
  },
  {
    "text": "microservice is firing an event to let us know that we've just received 10,000 copies of Justin Bieber's Greatest Hits",
    "start": "416720",
    "end": "424160"
  },
  {
    "text": "this is important information that the system needs to be made aware of we have two different Services the promotion",
    "start": "424160",
    "end": "429919"
  },
  {
    "text": "service and the wish list service from a dependency point of view you might show",
    "start": "429919",
    "end": "434960"
  },
  {
    "text": "that promotions and wish list both depend on inventory they want to know",
    "start": "434960",
    "end": "440240"
  },
  {
    "text": "when stock level changes but the way we Implement that dependency has been",
    "start": "440240",
    "end": "445440"
  },
  {
    "text": "inverted now they consume the event promotions and wish list two different",
    "start": "445440",
    "end": "451919"
  },
  {
    "text": "services that want to do different things with the same piece of information be great in broadcast",
    "start": "451919",
    "end": "457479"
  },
  {
    "text": "situation the promotions microservice for example May well start discounting products based on the fact we've now got",
    "start": "457479",
    "end": "463280"
  },
  {
    "text": "way too much just in Bieber on the other hand the wishlist microservice might say well there all these people all these",
    "start": "463280",
    "end": "469800"
  },
  {
    "text": "Believers out there that want the latest copy of Justin Bieber's Greatest Hits and they need to be alerted and so we kind of the consumers",
    "start": "469800",
    "end": "477960"
  },
  {
    "text": "here are on the right side I personally love event Jen systems I always found they they're nice and",
    "start": "477960",
    "end": "483800"
  },
  {
    "text": "Loosely coupled it also gives you fantastic ways in which to really screw systems up we're not necessarily going",
    "start": "483800",
    "end": "489520"
  },
  {
    "text": "to go into detail about the distinction between request response and event driven today but I wanted to lay out the",
    "start": "489520",
    "end": "494599"
  },
  {
    "text": "landscape where I think this distinction is pretty clear on the whole and most",
    "start": "494599",
    "end": "500639"
  },
  {
    "text": "non-trivial architectures I've worked on have a mix and that's absolutely fine but the reason I focused on this",
    "start": "500639",
    "end": "507280"
  },
  {
    "text": "distinction is because it is easier and clearer for me to explain and yet when I come back to wanting to talk about this",
    "start": "507280",
    "end": "513159"
  },
  {
    "text": "distinction synchronous and asynchronous that Clarity is not there the distinction",
    "start": "513159",
    "end": "521000"
  },
  {
    "text": "between synchronous and asynchronous which is by far in a way the thing that most people want to talk about should I",
    "start": "521000",
    "end": "526600"
  },
  {
    "text": "use a sess communication this is where things get a lot more",
    "start": "526600",
    "end": "532080"
  },
  {
    "text": "murky and in the past I would say well look when you're doing request response based communication you could do synchronous or asynchronous when you're",
    "start": "532080",
    "end": "538200"
  },
  {
    "text": "doing eventure communication it's mostly some kind of asynchronous communication and then I would just hope that people",
    "start": "538200",
    "end": "543320"
  },
  {
    "text": "would go away after I said it depends a lot and I'm you know I'm getting older",
    "start": "543320",
    "end": "548480"
  },
  {
    "text": "I'm realizing that I should probably address some of my past traumas so this is part of what I'm trying to do here is",
    "start": "548480",
    "end": "555240"
  },
  {
    "text": "look let's take another run at this now fortunately I don't think I've",
    "start": "555240",
    "end": "560720"
  },
  {
    "text": "quite solved it but I have come up to the conclusion of there is no consistent definition of what asynchronous",
    "start": "560720",
    "end": "567600"
  },
  {
    "text": "communication means in the context of interprocess communication it does not exist there is",
    "start": "567600",
    "end": "574440"
  },
  {
    "text": "no consensus there is no useful working definition on which we all agree and",
    "start": "574440",
    "end": "579800"
  },
  {
    "text": "therefore we should probably stop using the word asynchronous I was actually inspired to",
    "start": "579800",
    "end": "586839"
  },
  {
    "text": "do this talk because of this blog post this is a post by Pat Helen one of the pioneers of computing uh he's got a",
    "start": "586839",
    "end": "592279"
  },
  {
    "text": "great substack I have views about substack which we'll leave till later but the the you know his newsletter is",
    "start": "592279",
    "end": "598720"
  },
  {
    "text": "great and in this post Pat Helen is trying to take uh review the use of the term",
    "start": "598720",
    "end": "605600"
  },
  {
    "text": "consistency in eventual consistency and he argues that the term",
    "start": "605600",
    "end": "611000"
  },
  {
    "text": "eventual consistency is confusing because of the word consistency we use the term consistency",
    "start": "611000",
    "end": "618480"
  },
  {
    "text": "to mean different things in different spaces in Computing ironically enough consistency",
    "start": "618480",
    "end": "625839"
  },
  {
    "text": "is not consistent consistency in the context of an acid database transaction for example has extremely clear",
    "start": "625839",
    "end": "632880"
  },
  {
    "text": "mathematical properties and they are probably not what you think they are and so as a result when you see people",
    "start": "632880",
    "end": "638200"
  },
  {
    "text": "working with database transactions and working with eventually consistent systems they get themselves in a mess",
    "start": "638200",
    "end": "643920"
  },
  {
    "text": "because they somehow think they're sort of similar and they're not they're totally different concepts he's actually arguing here that we should instead talk",
    "start": "643920",
    "end": "651000"
  },
  {
    "text": "about eventual convergence because with eventual consistency it basically states",
    "start": "651000",
    "end": "656079"
  },
  {
    "text": "that we will see consistent views once all replic process all the messages eventually our",
    "start": "656079",
    "end": "662519"
  },
  {
    "text": "replicas will Converge on a consistent view so I was hoping maybe I'm as smart",
    "start": "662519",
    "end": "669200"
  },
  {
    "text": "as Pat Helen I am not and perhaps I can do the syn two for asynchronous",
    "start": "669200",
    "end": "674360"
  },
  {
    "text": "communication what he attempted to do when redefining what eventual consistency means could I come up with a",
    "start": "674360",
    "end": "681320"
  },
  {
    "text": "new word I did not but I discovered a lot of things along the way and I'm going to share them with you now because",
    "start": "681320",
    "end": "686560"
  },
  {
    "text": "I am obviously a highly experienced researcher I uh went immediately into full-on",
    "start": "686560",
    "end": "692519"
  },
  {
    "text": "research mode and sent a tweet out um and just HED that other people do the work for me and so I said to the people",
    "start": "692519",
    "end": "699440"
  },
  {
    "text": "that followed me at the time on Twitter I said hello everybody I think there's confusion about what asynchronous means",
    "start": "699440",
    "end": "706440"
  },
  {
    "text": "and I just wanted to see in a deeply scientific way that I absolutely haven't cherry-picked to fit",
    "start": "706440",
    "end": "712880"
  },
  {
    "text": "my narrative what exactly the people out there think that asynchronous means",
    "start": "712880",
    "end": "719519"
  },
  {
    "text": "um so maybe it won't shock you to find that there was Divergence I've kind of",
    "start": "719519",
    "end": "724839"
  },
  {
    "text": "given away the ending here one of the first responses I got was from an old colleague of mine Darren Hobs and he",
    "start": "724839",
    "end": "730240"
  },
  {
    "text": "said for him asynchronous communication is the difference between",
    "start": "730240",
    "end": "735560"
  },
  {
    "text": "say having an sending an email versus having a phone call okay that's",
    "start": "735560",
    "end": "743199"
  },
  {
    "text": "interesting I sort of liked that initially there was an immediacy that",
    "start": "743199",
    "end": "748800"
  },
  {
    "text": "when I pied up the phone we have the conversation we're going backwards and forwards and we often in the context of",
    "start": "748800",
    "end": "754040"
  },
  {
    "text": "work in say an office environment we'll talk about email being more asynchronous",
    "start": "754040",
    "end": "759519"
  },
  {
    "text": "the face-to-face conversations being synchronous Communications so in the context of human interactions this kind of feels true however we start thinking",
    "start": "759519",
    "end": "767480"
  },
  {
    "text": "in the context of computer-based systems this distinction starts feeling interesting because it kind of implies",
    "start": "767480",
    "end": "774639"
  },
  {
    "text": "that asynchronous communication will somehow be slower than synchronous communication",
    "start": "774639",
    "end": "780399"
  },
  {
    "text": "which is just flat not the case uh the lowest latency systems that I've worked",
    "start": "780399",
    "end": "785519"
  },
  {
    "text": "on have all been asynchronous so there's something here",
    "start": "785519",
    "end": "790639"
  },
  {
    "text": "but it doesn't feel right there an there an analogy as a as a metaphor a synchronous communication doesn't quite",
    "start": "790639",
    "end": "797120"
  },
  {
    "text": "do it for me but there's something interesting there about the immediacy so while the tweet twitter thread's going on um and uh I I I'm also",
    "start": "797120",
    "end": "806160"
  },
  {
    "text": "I did a little bit of research I started looking for definitions out there from smart people CU I am not a smart person",
    "start": "806160",
    "end": "813440"
  },
  {
    "text": "but I have Google so I can therefore cherry-pick smart people's information and so I took a look at the reactive",
    "start": "813440",
    "end": "819880"
  },
  {
    "text": "Manifesto now how many people here have read the reactive Manifesto A few of you okay all right so",
    "start": "819880",
    "end": "827639"
  },
  {
    "text": "the reactive Manifesto is written by some smart people many of whom I consider to be friends and from whom",
    "start": "827639",
    "end": "832720"
  },
  {
    "text": "I've learned a lot it is also an example of what I would describe as Dogma which",
    "start": "832720",
    "end": "838360"
  },
  {
    "text": "is a very opinionated a set of views from people who position their views as being the only way forward it is also a",
    "start": "838360",
    "end": "844880"
  },
  {
    "text": "deeply confusing and flaw document and that is I want to be really really clear here there's a lot of hard work that",
    "start": "844880",
    "end": "851320"
  },
  {
    "text": "they put into trying to make this document clear and the latest version is much better than the original version",
    "start": "851320",
    "end": "857480"
  },
  {
    "text": "however you don't have to go very far to realize it's not actually useful in",
    "start": "857480",
    "end": "862680"
  },
  {
    "text": "terms of helping us understand how to implement systems in a number of different ways",
    "start": "862680",
    "end": "869360"
  },
  {
    "text": "let's start by looking at the term asynchronous we go straight to the Nu of it so asynchronous communication please",
    "start": "869360",
    "end": "876639"
  },
  {
    "text": "tell me smart people what do you think asynchronous means and they said in the context of",
    "start": "876639",
    "end": "883560"
  },
  {
    "text": "this Manifesto good they're talking about context context is important we'll come back to context later in the",
    "start": "883560",
    "end": "889639"
  },
  {
    "text": "context of this Manifesto we mean that the processing of a",
    "start": "889639",
    "end": "895600"
  },
  {
    "text": "request occurs at an arbitrary point in time sometime after it has been",
    "start": "895600",
    "end": "903920"
  },
  {
    "text": "transmitted from the client to the service it's being very very clear you're thinking well Sam that's",
    "start": "903920",
    "end": "909759"
  },
  {
    "text": "extremely clear why can't you understand this let's take another run at this the",
    "start": "909759",
    "end": "915320"
  },
  {
    "text": "processing of a request occurs at an arbitrary time",
    "start": "915320",
    "end": "920560"
  },
  {
    "text": "sometime after it is being transmitted to the from the client to the",
    "start": "920560",
    "end": "926000"
  },
  {
    "text": "server as opposed to what right as opposed to us processing the",
    "start": "926000",
    "end": "932959"
  },
  {
    "text": "request before it was sent is that because that would be the opposite for me right so that would be synchronous",
    "start": "932959",
    "end": "938959"
  },
  {
    "text": "communication that I'm going to process a request before it's being sent like we've got sort of some sort of time",
    "start": "938959",
    "end": "945480"
  },
  {
    "text": "travel type networking protocol going on so that's not helpful because we always",
    "start": "945480",
    "end": "952199"
  },
  {
    "text": "process something after it's been sent because that's the causal nature of our universe or at least that is the causal",
    "start": "952199",
    "end": "957519"
  },
  {
    "text": "nature of our networking protocols and computer infrastructure there's other stuff in",
    "start": "957519",
    "end": "963319"
  },
  {
    "text": "here that is getting closer I think to at least what some of the authors of the manifesto think and by the way I've",
    "start": "963319",
    "end": "968680"
  },
  {
    "text": "spoken to enough of the authors of the manifesto to know that they do not all agree but that's okay as well because",
    "start": "968680",
    "end": "974639"
  },
  {
    "text": "this is also about disagreement as I said writing this is really really tough and I want to be really clear I am",
    "start": "974639",
    "end": "980440"
  },
  {
    "text": "poking fun a little bit but I'm poking fun at people that are put a lot of hard work in and there is still valuable",
    "start": "980440",
    "end": "985480"
  },
  {
    "text": "stuff in here but there is a more of a help ful definition in here so let's",
    "start": "985480",
    "end": "991240"
  },
  {
    "text": "take a look elsewhere in this section so they go on to say the the that this is",
    "start": "991240",
    "end": "997560"
  },
  {
    "text": "the opposite of synchronous processing they use a different word there this is the opposite of synchronous processing",
    "start": "997560",
    "end": "1004560"
  },
  {
    "text": "and they saying that synchronous synchronous processing implies that the client only resumes its own",
    "start": "1004560",
    "end": "1012519"
  },
  {
    "text": "execution once the service has processed the request now this is kind of",
    "start": "1012519",
    "end": "1020800"
  },
  {
    "text": "interesting so around this time I got some more responses in my thread so I got a comment here from Steve Smith",
    "start": "1020800",
    "end": "1027280"
  },
  {
    "text": "Steve works at equal experts he old friend of mine he's very tall very smart chat he said that for him uh",
    "start": "1027280",
    "end": "1034880"
  },
  {
    "text": "communication between asynch communication uh well synchronous communication rather means that the TCP",
    "start": "1034880",
    "end": "1041280"
  },
  {
    "text": "connection is open for the duration of the communication and I sort of knew where Steve was going but I wanted to",
    "start": "1041280",
    "end": "1046678"
  },
  {
    "text": "poke fun so I said okay well if I'm using a different networking protocol does that change your definition and he further clarified to say well",
    "start": "1046679",
    "end": "1054120"
  },
  {
    "text": "actually he's assuming you're not blocking for a response now this is",
    "start": "1054120",
    "end": "1059160"
  },
  {
    "text": "useful that's getting into terms that are more explicit this comes back to what the reactive Manifesto said I'm not",
    "start": "1059160",
    "end": "1065160"
  },
  {
    "text": "blocking for response that's fundamentally what the reactive Manifesto said the client is not blocking waiting",
    "start": "1065160",
    "end": "1073360"
  },
  {
    "text": "for the request and the response to be handled so this we've got an explicit",
    "start": "1073360",
    "end": "1079720"
  },
  {
    "text": "term for this is non-blocking and non-blocking is cool let's take a look at what non-blocking",
    "start": "1079720",
    "end": "1085480"
  },
  {
    "text": "is and understand why it's useful and also look at some of the limitations of non-blocking we've got a very simple",
    "start": "1085480",
    "end": "1091159"
  },
  {
    "text": "interaction here we've got one service enrollment which is going to ask both loyalty and subscription to do something",
    "start": "1091159",
    "end": "1098039"
  },
  {
    "text": "for the purposes of this exercise these operations can be carried out in parallel there's no obvious interaction",
    "start": "1098039",
    "end": "1104919"
  },
  {
    "text": "between them um but we both want to make sure these operations are actually completed so enrollment is going to go to the",
    "start": "1104919",
    "end": "1110799"
  },
  {
    "text": "Loyalty service and say please could you award some points give some points to Sam Sam earn some points can you also go",
    "start": "1110799",
    "end": "1116960"
  },
  {
    "text": "to the subscription service and please upgrade that subscription so Sam can earn way more money in the",
    "start": "1116960",
    "end": "1123960"
  },
  {
    "text": "future now a very simple way we might implement this if we're coming to this at the beginning would be to write it as",
    "start": "1123960",
    "end": "1130000"
  },
  {
    "text": "a piece of code on our clients we decid the enrollment service we'd have okay loyalty service. award points we could",
    "start": "1130000",
    "end": "1136640"
  },
  {
    "text": "imagine this is maybe some kind of RPC abstraction over the network call that's happening so we're going to open a",
    "start": "1136640",
    "end": "1141760"
  },
  {
    "text": "connection we're going to send some bits and bites asking as our request and then we're going to hopefully get a response",
    "start": "1141760",
    "end": "1146960"
  },
  {
    "text": "coming back over the same network connection so in this case here we're going to get a response res one is going",
    "start": "1146960",
    "end": "1152120"
  },
  {
    "text": "to be the results of that first call and so once we get back that response we then move on to the next",
    "start": "1152120",
    "end": "1158840"
  },
  {
    "text": "line of execution and so if it completes we then go on the next line and do the second",
    "start": "1158840",
    "end": "1165480"
  },
  {
    "text": "thing so we would describe these as being blocking calls because from the point of view of the client's code This",
    "start": "1165480",
    "end": "1173159"
  },
  {
    "text": "Thread is is basically blocking execution while we wait for the other service to",
    "start": "1173159",
    "end": "1178679"
  },
  {
    "text": "respond so I'm going to wait okay now I can carry on now I'll do",
    "start": "1178679",
    "end": "1184400"
  },
  {
    "text": "my next thing now one of the problems of blocking calls here is how is it relates",
    "start": "1184400",
    "end": "1190600"
  },
  {
    "text": "to latency if we're looking at the operation the overarching operation here",
    "start": "1190600",
    "end": "1196039"
  },
  {
    "text": "our latency is now effectively going to be bound by the sum of these calls so if",
    "start": "1196039",
    "end": "1201480"
  },
  {
    "text": "we said that the award Point call took 50 milliseconds and upgrade subscription took 150 milliseconds our total",
    "start": "1201480",
    "end": "1208640"
  },
  {
    "text": "operation length assuming this was the only thing involved would be 200 milliseconds in total now that's kind of",
    "start": "1208640",
    "end": "1216240"
  },
  {
    "text": "not great given that we know we could ideally parallelize these operations but also do bear in mind that latency will",
    "start": "1216240",
    "end": "1223400"
  },
  {
    "text": "vary you'll typically look at latency on the histogram and what you'll start seeing is if you're going lots of calls",
    "start": "1223400",
    "end": "1229280"
  },
  {
    "text": "s of being done sequentially you'll see a larger overall variance in the latency of operations which leads to more",
    "start": "1229280",
    "end": "1235840"
  },
  {
    "text": "inconsistent service behavior and you tend to try and avoid that so things like tail latencies and things can get harder to manage in these situations",
    "start": "1235840",
    "end": "1242960"
  },
  {
    "text": "that's a topic for the talk though but an obvious Improvement in this situation because those two things are not",
    "start": "1242960",
    "end": "1248400"
  },
  {
    "text": "causally linked from a logic point of view would be to actually have those two CS done in parallel instead so rather",
    "start": "1248400",
    "end": "1255720"
  },
  {
    "text": "why do one and then wait before doing the other instead can we just do them both at the",
    "start": "1255720",
    "end": "1261120"
  },
  {
    "text": "same time and we've always been able to do this but for a long time it was more",
    "start": "1261120",
    "end": "1267080"
  },
  {
    "text": "things that we would have to handle ourselves until we have this lovely syntactic sugar that we've all got in",
    "start": "1267080",
    "end": "1273000"
  },
  {
    "text": "our programming languages now typically comes in the form of what we might call reactive extensions don't get me started",
    "start": "1273000",
    "end": "1280080"
  },
  {
    "text": "on the number of different ways we've overused the term reactive as well but putting that to one side the reactive",
    "start": "1280080",
    "end": "1286000"
  },
  {
    "text": "extensions have enabled operations like this to be done much more effectively and",
    "start": "1286000",
    "end": "1291760"
  },
  {
    "text": "efficiently so in this example here I'm wrapping these executions in what's",
    "start": "1291760",
    "end": "1297279"
  },
  {
    "text": "called a future so a future is a readon type the value of which will only be",
    "start": "1297279",
    "end": "1304240"
  },
  {
    "text": "known at some point in the future and I'm sort of keeping this fairly language agnostic but the what's",
    "start": "1304240",
    "end": "1311480"
  },
  {
    "text": "inside the parameters the parentheses here for that future call is basically going to be packaged up and probably",
    "start": "1311480",
    "end": "1317360"
  },
  {
    "text": "stuck on a background frad of execution that whatever reactive extension Library we're using is handling for",
    "start": "1317360",
    "end": "1323559"
  },
  {
    "text": "us so what happens now when we run that first line of code all that's happened is at the point",
    "start": "1323559",
    "end": "1330279"
  },
  {
    "text": "that the next line that the program flow flows onto the next line of code the the call hasn't necessarily happened but we",
    "start": "1330279",
    "end": "1336720"
  },
  {
    "text": "just created that background thread and that's probably now running in parallel behind the",
    "start": "1336720",
    "end": "1341919"
  },
  {
    "text": "scenes so now we get close probably pretty parallel operations there's all sorts of different variants is and terms",
    "start": "1341919",
    "end": "1349279"
  },
  {
    "text": "of your runtime exactly how this is done but the upsell here would be well great we're now doing these two calls in",
    "start": "1349279",
    "end": "1355799"
  },
  {
    "text": "parallel we would imagine the overall latency of our operations to have gone from 200 milliseconds to 150",
    "start": "1355799",
    "end": "1361240"
  },
  {
    "text": "milliseconds and that's great the issue though with non-blocking",
    "start": "1361240",
    "end": "1366840"
  },
  {
    "text": "is request response we often want a",
    "start": "1366840",
    "end": "1374360"
  },
  {
    "text": "response now sometimes we want the response just to know if it happened sometimes we want a response because",
    "start": "1374360",
    "end": "1380640"
  },
  {
    "text": "actually there's information coming back that we might need it might be the answer to a question we may have created",
    "start": "1380640",
    "end": "1387000"
  },
  {
    "text": "something and we get back an ID that we then use for further processing for example so in this situation here if",
    "start": "1387000",
    "end": "1393440"
  },
  {
    "text": "we're thinking about reading the program as a human being that first line of code executes the second line of code",
    "start": "1393440",
    "end": "1399400"
  },
  {
    "text": "executes at this point we do not know if those calls have actually completed or",
    "start": "1399400",
    "end": "1405279"
  },
  {
    "text": "not because they could still be running the background so we don't know if the calls",
    "start": "1405279",
    "end": "1411720"
  },
  {
    "text": "have completed we don't know if they're successful we don't know if if we've actually got a value back from these",
    "start": "1411720",
    "end": "1418200"
  },
  {
    "text": "calls so if we do need the results what do we need to do we have to wait so how",
    "start": "1418200",
    "end": "1423559"
  },
  {
    "text": "do we wait well we do something like this I sometimes see people say I'm",
    "start": "1423559",
    "end": "1429960"
  },
  {
    "text": "doing non-blocking calls and they're doing async a wait that's you might as well just delete the word async and delete the",
    "start": "1429960",
    "end": "1436400"
  },
  {
    "text": "word await because you're just in a blocking call all this blocks this will block the process flow",
    "start": "1436400",
    "end": "1443120"
  },
  {
    "text": "until both those Futures have a value now obviously there's other",
    "start": "1443120",
    "end": "1449919"
  },
  {
    "text": "syntactic there's other stuff you would expect to see in a real program around retry operations and all those sorts of",
    "start": "1449919",
    "end": "1455120"
  },
  {
    "text": "things but at the heart of it if you need the results you're going to have to wait",
    "start": "1455120",
    "end": "1460760"
  },
  {
    "text": "somewhere that's just life right so fundamentally",
    "start": "1460760",
    "end": "1469200"
  },
  {
    "text": "the logic of how your application or your service is set up may still require",
    "start": "1469200",
    "end": "1474919"
  },
  {
    "text": "that you have to wait for things to happen even non-blocking calls may end",
    "start": "1474919",
    "end": "1481240"
  },
  {
    "text": "up with you having to block execution on the client this is not by the way me",
    "start": "1481240",
    "end": "1486919"
  },
  {
    "text": "saying you shouldn't bother about non-blocking you absolutely should but you should understand it only takes you",
    "start": "1486919",
    "end": "1491960"
  },
  {
    "text": "so far sometimes you can restructure processing to avoid problems like this",
    "start": "1491960",
    "end": "1497880"
  },
  {
    "text": "but if you can use non-blocking is still a good thing to do beyond the fact that often the syntactic sugar I think is",
    "start": "1497880",
    "end": "1503799"
  },
  {
    "text": "really useful um it just actually helps us with latency and all that kind of",
    "start": "1503799",
    "end": "1508919"
  },
  {
    "text": "stuff is a good idea so let's go back to Twitter thread what else is happening out there here's",
    "start": "1508919",
    "end": "1515399"
  },
  {
    "text": "Graham Lee um worked for many years at a company called Tyro in Australia which",
    "start": "1515399",
    "end": "1521240"
  },
  {
    "text": "is like a payments company that became a bank and Graham said uh the definition I've been using is that they sending",
    "start": "1521240",
    "end": "1528399"
  },
  {
    "text": "service doesn't wait for completion of the receiving service before continuing",
    "start": "1528399",
    "end": "1534200"
  },
  {
    "text": "Andor completing its own work that first sentence is very much the non-blocking part of the conversation we've already",
    "start": "1534200",
    "end": "1540200"
  },
  {
    "text": "looked at the second piece is is kind of interesting that comes from Gro says now I think about it I also expect a",
    "start": "1540200",
    "end": "1547960"
  },
  {
    "text": "temporal decoupling from the receiving Services",
    "start": "1547960",
    "end": "1554039"
  },
  {
    "text": "availability temporal decoupling is actually a term that is used in the context of interprocess communication",
    "start": "1554039",
    "end": "1560919"
  },
  {
    "text": "it's also used in the Pro in the context of just code and it means different things in different places which is",
    "start": "1560919",
    "end": "1566080"
  },
  {
    "text": "again another example of us using the same term to mean different things but we'll get into that in a",
    "start": "1566080",
    "end": "1571240"
  },
  {
    "text": "minute likewise we had uh Benjamin Johnson here saying that synchronous communication for them was a direct",
    "start": "1571240",
    "end": "1577679"
  },
  {
    "text": "communication between the sender and receiver and async communication there's",
    "start": "1577679",
    "end": "1582919"
  },
  {
    "text": "an intermediary that's involved in the sender and receiver for examp example a",
    "start": "1582919",
    "end": "1588760"
  },
  {
    "text": "message brok up so for at least Benjamin's point of",
    "start": "1588760",
    "end": "1594480"
  },
  {
    "text": "view this is about an intermediary and that's actually what Graham was talking about as well I'm",
    "start": "1594480",
    "end": "1601840"
  },
  {
    "text": "going to use an intermediary to remove the temporal coupling that might",
    "start": "1601840",
    "end": "1607000"
  },
  {
    "text": "otherwise occur so we'll talk about temporal coupling in a minute but we should talk just firsty about this idea of an",
    "start": "1607000",
    "end": "1614520"
  },
  {
    "text": "intermediary something between a and b that's somehow going to help with the",
    "start": "1614520",
    "end": "1619960"
  },
  {
    "text": "communication and the most common form of intermediary would encounter in this environment would be a message broker of",
    "start": "1619960",
    "end": "1625360"
  },
  {
    "text": "some sort you lots of different varieties of message Brokers this not get into the details of those now but",
    "start": "1625360",
    "end": "1631480"
  },
  {
    "text": "you've probably all seen or worked with them but they all work in a in this context they will work in a similar",
    "start": "1631480",
    "end": "1637799"
  },
  {
    "text": "way with a message broker what we've got going on here is we're sending a message",
    "start": "1637799",
    "end": "1643919"
  },
  {
    "text": "generically between two things I use the term message as the generic thing I'm sending it could contain an event it",
    "start": "1643919",
    "end": "1649600"
  },
  {
    "text": "could contain a request it could contain a response that's kind of by the buy so rather than a talking directly to",
    "start": "1649600",
    "end": "1655480"
  },
  {
    "text": "service B we instead you go via the intermediary the problem we're trying to solve here is if I want to send",
    "start": "1655480",
    "end": "1661080"
  },
  {
    "text": "something to b b has to be there to receive what I'm sending if B is not",
    "start": "1661080",
    "end": "1666440"
  },
  {
    "text": "available or not reachable for whatever reason that communication is going to have a problem that's a temporal",
    "start": "1666440",
    "end": "1673640"
  },
  {
    "text": "coupling we've talked about for a lot of our normal say I'm saying noral HTP call you have to be there for the request to",
    "start": "1673640",
    "end": "1679399"
  },
  {
    "text": "be processed if you're not we have an issue so temporal decoupling is",
    "start": "1679399",
    "end": "1684720"
  },
  {
    "text": "basically removing the Reliance on the recipient being there at the time you send the request so temporal decoupling",
    "start": "1684720",
    "end": "1692279"
  },
  {
    "text": "means something quite different in code context so how do we do that with a broker or an intermediary we use them to",
    "start": "1692279",
    "end": "1699240"
  },
  {
    "text": "hold on to the message for us so I want to send a message to you I send you the message the broker now holding on to",
    "start": "1699240",
    "end": "1705399"
  },
  {
    "text": "that message great if B was already available the broker would develop that deliver that message",
    "start": "1705399",
    "end": "1712039"
  },
  {
    "text": "straight away and some of these message Brokers can be screamingly fast like eye",
    "start": "1712039",
    "end": "1718320"
  },
  {
    "text": "wateringly fast some of them can also be slow right depends on your appropriate technology you've picked so we've now",
    "start": "1718320",
    "end": "1725720"
  },
  {
    "text": "removed that temporal coupling problem that grahe highlighted and what we've",
    "start": "1725720",
    "end": "1730880"
  },
  {
    "text": "effectively done here is we've offloaded some of the requirements around guaranteed delivery so if I'm just using",
    "start": "1730880",
    "end": "1737559"
  },
  {
    "text": "a say TCP connection and I try and send something to you and I don't get an acknowledgement that you've received it",
    "start": "1737559",
    "end": "1744159"
  },
  {
    "text": "I then have if I need to make sure it gets through I'm now handling a lot of the logic of retries and all those sorts",
    "start": "1744159",
    "end": "1749480"
  },
  {
    "text": "of things but what message Brokers will do for you is they'll do that for you and they've hopefully been written by people",
    "start": "1749480",
    "end": "1755559"
  },
  {
    "text": "for whom this is their full-time job and they can do a good job and there were lots of excellent message Brokers out",
    "start": "1755559",
    "end": "1760880"
  },
  {
    "text": "there rabbit M2 is great Kafka is great there's lots of great ones out there but this is now as beneficial we like",
    "start": "1760880",
    "end": "1766519"
  },
  {
    "text": "offloading work to smart people we do it all the time at databases some of the smartest work in the world been done",
    "start": "1766519",
    "end": "1772080"
  },
  {
    "text": "inside databases we get a database we just use it and it works message Brokers can be the same I'm offloading a bunch",
    "start": "1772080",
    "end": "1779279"
  },
  {
    "text": "of concerns to you great fantastic there's a few people actually",
    "start": "1779279",
    "end": "1784480"
  },
  {
    "text": "chimed in that for them asynch communication was very much around this idea of the",
    "start": "1784480",
    "end": "1789880"
  },
  {
    "text": "broker here someone saying that for them asynchronous communication is like dropping a mail in a red post box then",
    "start": "1789880",
    "end": "1796480"
  },
  {
    "text": "going on with your life and then one one day boom Postman Pat stuff something",
    "start": "1796480",
    "end": "1801840"
  },
  {
    "text": "into your house mailbox along with the millions of coupons and charity mailers",
    "start": "1801840",
    "end": "1807360"
  },
  {
    "text": "uh now I do appreciate that some of you are local some of you are not local this is an International Conference which part the reason I life doing NDC London",
    "start": "1807360",
    "end": "1813760"
  },
  {
    "text": "every year um so I should interpret a few things this is Postman Pat right this is the OG Postman Pat the old stop",
    "start": "1813760",
    "end": "1821000"
  },
  {
    "text": "animation one I think there was a newer version that might have been like computer generated that had a hovercraft and stuff this is the proper Postman Pat",
    "start": "1821000",
    "end": "1827559"
  },
  {
    "text": "right works as Village Postman the idea you know the name of your I actually do know the name of Postman where I live but that's a different thing uh when I",
    "start": "1827559",
    "end": "1833600"
  },
  {
    "text": "do this talk for the US audiences I have to explain that we also have letter boxes in our houses right people go up",
    "start": "1833600",
    "end": "1839120"
  },
  {
    "text": "they put Post in your letter box right and this is a useful property the postman brings a letter they put it in",
    "start": "1839120",
    "end": "1845760"
  },
  {
    "text": "your letter box I don't have to be home when I get back home the letter will be waiting for me whereas in America of",
    "start": "1845760",
    "end": "1851679"
  },
  {
    "text": "course people are not allowed onto your property because if you do you'll shoot them dead so instead you have you have",
    "start": "1851679",
    "end": "1857679"
  },
  {
    "text": "like mailboxes right um now actually these intermediaries there are different",
    "start": "1857679",
    "end": "1862840"
  },
  {
    "text": "variations I talked about the message Brokers being the most common one and I mentioned rabbit mq and Kafka although",
    "start": "1862840",
    "end": "1868320"
  },
  {
    "text": "they're quite different to each other they're both very much message Brokers used for different purposes different trade-offs right but there are other",
    "start": "1868320",
    "end": "1874320"
  },
  {
    "text": "things that we can use as intermediaries without we may not realize we're doing it but we do all the",
    "start": "1874320",
    "end": "1879639"
  },
  {
    "text": "time we often communicate V database okay you can put something one",
    "start": "1879639",
    "end": "1886519"
  },
  {
    "text": "service can write something to a database and a difference there is later on can read something out of a database it's",
    "start": "1886519",
    "end": "1892279"
  },
  {
    "text": "probably not a good approach as a general purpose because of all the coupling issues incur but people do this the database itself is holding on to the",
    "start": "1892279",
    "end": "1899159"
  },
  {
    "text": "information before the next thing uses it file systems all those mainframes that still",
    "start": "1899159",
    "end": "1905200"
  },
  {
    "text": "run a lot of our banking systems are mostly communicating passing files around there they're using the file",
    "start": "1905200",
    "end": "1910600"
  },
  {
    "text": "system as an intermediary I put a file there and you get the file later on",
    "start": "1910600",
    "end": "1918000"
  },
  {
    "text": "you can even use email for this purpose right you could use email for communication between",
    "start": "1918000",
    "end": "1923320"
  },
  {
    "text": "services but don't do that because it's stupid right but the key thing with this idea",
    "start": "1923320",
    "end": "1930159"
  },
  {
    "text": "of of decoupling of this temporal decoupling is that the sender of the message doesn't need to worry about",
    "start": "1930159",
    "end": "1937039"
  },
  {
    "text": "whether or not the recipient is currently available I may still want to make sure",
    "start": "1937039",
    "end": "1942960"
  },
  {
    "text": "it does happen I may still want to make know that this has been received and handled",
    "start": "1942960",
    "end": "1948399"
  },
  {
    "text": "appropriately but if in this exact instant the recipient isn't available that's okay because we've got an",
    "start": "1948399",
    "end": "1955320"
  },
  {
    "text": "intermediate that's going to deal with this for us now of course for this to work you",
    "start": "1955320",
    "end": "1960679"
  },
  {
    "text": "need to trust the intermediary this is why you'll have conversations about how well-run your",
    "start": "1960679",
    "end": "1966559"
  },
  {
    "text": "message broker is there's reasons I will never use active mq right it's scars of",
    "start": "1966559",
    "end": "1972240"
  },
  {
    "text": "the past I'm sure it's fine now but like over a decade and a half ago activ mq",
    "start": "1972240",
    "end": "1978279"
  },
  {
    "text": "hurt me and I will not go back um this is also why certain databases are good",
    "start": "1978279",
    "end": "1983840"
  },
  {
    "text": "and this is also you know we have to trust right there's a degree of trust we place it in the same way that we put trust in the faith of the people that",
    "start": "1983840",
    "end": "1990000"
  },
  {
    "text": "create our database and run that database for us so this is interesting so let's",
    "start": "1990000",
    "end": "1995679"
  },
  {
    "text": "explore this in a bit more detail let's look in the context of request response based communication this is often the confusion I think people get they sort",
    "start": "1995679",
    "end": "2001919"
  },
  {
    "text": "see how message Brokers can be used for events that's pretty straightforward but how does that work for request response",
    "start": "2001919",
    "end": "2007840"
  },
  {
    "text": "let's run it through so here we've got a service a and service a wants to send a request to service B so it takes that",
    "start": "2007840",
    "end": "2013880"
  },
  {
    "text": "request and it goes to the broker and in this case here there's going to be a dedicated Q this would be the request Q",
    "start": "2013880",
    "end": "2019880"
  },
  {
    "text": "for service B and I'm putting items into the que for service B now service B is",
    "start": "2019880",
    "end": "2025200"
  },
  {
    "text": "available straight away it can pick up the work maybe it's busy at the moment doesn't have a spare thread but when it does it will pick up the work out and",
    "start": "2025200",
    "end": "2031519"
  },
  {
    "text": "and I take that work from the queue and I can start working on it so here B has picked up that request now we've got a",
    "start": "2031519",
    "end": "2038279"
  },
  {
    "text": "response haven't we I've done the work it's worked or it hasn't worked I've got to send back the response so how do we",
    "start": "2038279",
    "end": "2044720"
  },
  {
    "text": "get the response it's the same again I put the response into response cue and",
    "start": "2044720",
    "end": "2050599"
  },
  {
    "text": "we receive the message at the other end request response V message",
    "start": "2050599",
    "end": "2056480"
  },
  {
    "text": "broker of course it's not actually that simple if it was this would be a shorter talk because in",
    "start": "2056480",
    "end": "2063280"
  },
  {
    "text": "reality I've again I'm drawing this sort of a semi logical architecture diagram here there's a box called a and a box",
    "start": "2063280",
    "end": "2070560"
  },
  {
    "text": "called B but in reality when we deploy a when we deploy B there are going to be multiple copies of them we often will",
    "start": "2070560",
    "end": "2076560"
  },
  {
    "text": "have multiple instances of a service to accommodate for nodes dying or to maybe",
    "start": "2076560",
    "end": "2083240"
  },
  {
    "text": "provide the scale that our system needs so let's tweak this a bit let's now imagine we've got two instances of",
    "start": "2083240",
    "end": "2089878"
  },
  {
    "text": "service a the first instance of service a sends that",
    "start": "2089879",
    "end": "2095638"
  },
  {
    "text": "request B generates service response and it comes back into the que but we cannot necessarily guarantee",
    "start": "2095639",
    "end": "2104000"
  },
  {
    "text": "that the same instance that sent the request can handle the",
    "start": "2104000",
    "end": "2109160"
  },
  {
    "text": "response now there's one of two things you can do at this point there are two trouser legs of",
    "start": "2109160",
    "end": "2115520"
  },
  {
    "text": "possibility down the first trouser leg of possibility lies Doom down the second",
    "start": "2115520",
    "end": "2120720"
  },
  {
    "text": "TR trouser leg of possibility lies this analog is not going anywhere good but it's better there's one good trouser leg",
    "start": "2120720",
    "end": "2127520"
  },
  {
    "text": "of possibility here so a lot of people at this point will say no no it's fine we'll solve this we will make sure that",
    "start": "2127520",
    "end": "2133119"
  },
  {
    "text": "that response is somehow routed only to the instance which sent it and there are",
    "start": "2133119",
    "end": "2139119"
  },
  {
    "text": "ways you can do this right this is effectively though like trying to do sticky session load balancing it is",
    "start": "2139119",
    "end": "2146240"
  },
  {
    "text": "technically something you should do but it is not something you should",
    "start": "2146240",
    "end": "2152119"
  },
  {
    "text": "do why is it a problem Sam well look if I have put in the complexity in the",
    "start": "2152119",
    "end": "2157720"
  },
  {
    "text": "system to ensure that the response goes back to the instance that sent the request I could do it with some",
    "start": "2157720",
    "end": "2163240"
  },
  {
    "text": "correlation IDs that's not a problem I could do that easily enough what I'm basically saying is only that instance",
    "start": "2163240",
    "end": "2169359"
  },
  {
    "text": "of the service can handle that response now that might be because",
    "start": "2169359",
    "end": "2174440"
  },
  {
    "text": "you're holding on to state in memory and you're effectively like persisting the request response flow in memory and you",
    "start": "2174440",
    "end": "2180280"
  },
  {
    "text": "want to carry on your processing what's the issue with that what happens if that original instance",
    "start": "2180280",
    "end": "2186319"
  },
  {
    "text": "of a dies",
    "start": "2186319",
    "end": "2189560"
  },
  {
    "text": "uh uh now if you implement this such that any instance of a can process the",
    "start": "2191440",
    "end": "2197760"
  },
  {
    "text": "response so we actually have stateless processing of the response guess what you don't need any other the complexity",
    "start": "2197760",
    "end": "2204599"
  },
  {
    "text": "about routing the message and any instance of a can serve as response and",
    "start": "2204599",
    "end": "2209760"
  },
  {
    "text": "you can shut down and spin up nodes willy-nilly to handle the load really easily and that's a nicer way of working",
    "start": "2209760",
    "end": "2215599"
  },
  {
    "text": "this is effectively stateless processing of the responses this is exactly why you shouldn't do sticky session low",
    "start": "2215599",
    "end": "2220640"
  },
  {
    "text": "balancing and you shouldn't have build stateless Services unless you really really really need them and look if you",
    "start": "2220640",
    "end": "2228079"
  },
  {
    "text": "think you really need status processing you probably don't and if you really do you know enough to ignore me",
    "start": "2228079",
    "end": "2234680"
  },
  {
    "text": "anyway so this actually I think is quite useful so actually when people start",
    "start": "2234680",
    "end": "2239760"
  },
  {
    "text": "getting into this world I think it's a useful forcing function because it forces people to think about failure and",
    "start": "2239760",
    "end": "2245400"
  },
  {
    "text": "actually encourages stateless processing when you you start using Brokers for request response flows these things aren't necessarily",
    "start": "2245400",
    "end": "2252160"
  },
  {
    "text": "evident now of course when you're running just on a laptop but just ask yourself some question what happens if this dies more to the point what does",
    "start": "2252160",
    "end": "2260079"
  },
  {
    "text": "happen if a computer dies partway through processing if we come back to our",
    "start": "2260079",
    "end": "2266839"
  },
  {
    "text": "non-blocking code from earlier here by Design we assume the",
    "start": "2266839",
    "end": "2275640"
  },
  {
    "text": "responses are coming back to the same people P of code we've got a bit of client code running I've got a process",
    "start": "2275640",
    "end": "2280920"
  },
  {
    "text": "I'm asking you to do things they come back they're coming back to me so in this example we do expect all the responses to come back to the same",
    "start": "2280920",
    "end": "2288119"
  },
  {
    "text": "instance so if it does die halfway through we got to work out how to deal with that situation honestly most of the",
    "start": "2288119",
    "end": "2294839"
  },
  {
    "text": "time you deal with this by re by retrying if you make operations ID and potent retries are",
    "start": "2294839",
    "end": "2300960"
  },
  {
    "text": "safe making operations ID and potent is another talk I could probably do some other time but I think it's arguable",
    "start": "2300960",
    "end": "2307160"
  },
  {
    "text": "though that the use of Intero intermediary based communication does actually encourage stateless processing",
    "start": "2307160",
    "end": "2313880"
  },
  {
    "text": "and I think in general encouraging stateless processing of request response and events is a much happier place to be",
    "start": "2313880",
    "end": "2321200"
  },
  {
    "text": "you can still put stuff in a database that's fine so we've got some different definitions out here right we've got",
    "start": "2321200",
    "end": "2327560"
  },
  {
    "text": "some for some people it's about immediacy for other people it's about removing temporal coupling for others",
    "start": "2327560",
    "end": "2334160"
  },
  {
    "text": "it's about non-blocking for some people it requires that they have an intermediary but these are all fairly",
    "start": "2334160",
    "end": "2341359"
  },
  {
    "text": "explicit terms we know what these things mean or least we can have a more detailed and",
    "start": "2341359",
    "end": "2347200"
  },
  {
    "text": "accurate conversation about them but when you say the word asynchronous all of these terms are flying around in",
    "start": "2347200",
    "end": "2353400"
  },
  {
    "text": "people's heads so does it matter though words",
    "start": "2353400",
    "end": "2359880"
  },
  {
    "text": "have different meanings many of you English is not your",
    "start": "2359880",
    "end": "2365160"
  },
  {
    "text": "first it's maybe your second third or even fourth Lang language and I suspect even for those of you in English you",
    "start": "2365160",
    "end": "2370599"
  },
  {
    "text": "appreciate the fact that in words I only speak one language yeah um I speak English just uh",
    "start": "2370599",
    "end": "2378480"
  },
  {
    "text": "words within English have many different meanings does anyone want to guess for",
    "start": "2378480",
    "end": "2383720"
  },
  {
    "text": "me which word in the English language has the most dictionary",
    "start": "2383720",
    "end": "2390520"
  },
  {
    "text": "meanings it's set so the current edition of the full Ox English dictionary",
    "start": "2390520",
    "end": "2398319"
  },
  {
    "text": "the word set debt is closely close behind which I think is quite nice from",
    "start": "2398319",
    "end": "2403680"
  },
  {
    "text": "a programing point of view um now in the latest edition that they're working on",
    "start": "2403680",
    "end": "2409000"
  },
  {
    "text": "that I think is going to be ready for the mid 2030s this is you know it's a big thing it's like a multivolume thing",
    "start": "2409000",
    "end": "2415839"
  },
  {
    "text": "um that's probably the word we think is going to have the most definitions Now set has 430 different meanings in a",
    "start": "2415839",
    "end": "2422680"
  },
  {
    "text": "dictionary run at the moment well as of 2011 had had 645 meanings in the current",
    "start": "2422680",
    "end": "2431880"
  },
  {
    "text": "draft could you list them all no can you use set and run in your daily lives yeah",
    "start": "2431960",
    "end": "2439680"
  },
  {
    "text": "so why am I bothering with this words have different meanings we just deal with it right it's",
    "start": "2439680",
    "end": "2444920"
  },
  {
    "text": "fine it's not a problem so why am I going on about asynchronous things different things different people and",
    "start": "2444920",
    "end": "2450599"
  },
  {
    "text": "that is a problem the issue is that we derive meaning of a word via the context in",
    "start": "2450599",
    "end": "2459440"
  },
  {
    "text": "which the word is used so I was actually having a conversation with Ian Cooper at this",
    "start": "2459440",
    "end": "2465560"
  },
  {
    "text": "conference last year we were having this conversation Ian's is a lovely guy and has a many people have a hinterland Ian",
    "start": "2465560",
    "end": "2472960"
  },
  {
    "text": "Cooper's hint land is the Alps there's all sorts of things he's done in his past and in his present and it's unsurprising to find that Ian studied",
    "start": "2472960",
    "end": "2479839"
  },
  {
    "text": "something called semiotics at University which is the study of meaning and he was explaining to me well what's happening",
    "start": "2479839",
    "end": "2485640"
  },
  {
    "text": "here is that the word the meaning of a word becomes more narrow as we add other",
    "start": "2485640",
    "end": "2492440"
  },
  {
    "text": "words around it so when we look at a word in isolation when we put other",
    "start": "2492440",
    "end": "2497880"
  },
  {
    "text": "words around it the meaning of that word becomes much more",
    "start": "2497880",
    "end": "2503000"
  },
  {
    "text": "clear so let's take an example I want each of you to think what does the word",
    "start": "2503000",
    "end": "2508720"
  },
  {
    "text": "run mean to me right now just the first thing that comes to your mind so now I'm",
    "start": "2508720",
    "end": "2514240"
  },
  {
    "text": "going to put some other words around it and let's see if what I thought run menant is the same thing as what you thought run",
    "start": "2514240",
    "end": "2519520"
  },
  {
    "text": "meant the issue got worse the moment the program was run is there possibility we were using",
    "start": "2519520",
    "end": "2526880"
  },
  {
    "text": "the same definition of run but maybe weren't let's try again pick a different meaning or a different way in which You'",
    "start": "2526880",
    "end": "2533160"
  },
  {
    "text": "use the word run and think of that",
    "start": "2533160",
    "end": "2539000"
  },
  {
    "text": "oh the economy crashed due to a run on the banks there a different way we could",
    "start": "2539000",
    "end": "2545240"
  },
  {
    "text": "use run now if I just said run to you actually if I just said run you go H if I said",
    "start": "2545240",
    "end": "2552200"
  },
  {
    "text": "run the context there is you know there's context there in the pitch and the way I'm delivering it but in here",
    "start": "2552200",
    "end": "2559200"
  },
  {
    "text": "there's no ambiguity was much less ambiguity about what a run on the banks",
    "start": "2559200",
    "end": "2565520"
  },
  {
    "text": "means context is important the context in which we use words is",
    "start": "2566319",
    "end": "2572359"
  },
  {
    "text": "important let's come back to the reactive Manifesto think about context they talk about asyn communication in",
    "start": "2572359",
    "end": "2579280"
  },
  {
    "text": "the context this Manifesto means dum dum D Dum the first sentence in this section",
    "start": "2579280",
    "end": "2585440"
  },
  {
    "text": "is that the Oxford dictionary defines asynchronous as not existing or",
    "start": "2585440",
    "end": "2591200"
  },
  {
    "text": "occurring at the same time now indeed if you say if you type in what does asynchronous mean into Google this is",
    "start": "2591200",
    "end": "2598359"
  },
  {
    "text": "the exact answer you get back this is not the definition of asynchronous in the Oxford dictionary it",
    "start": "2598359",
    "end": "2605240"
  },
  {
    "text": "is a definition of asynchronous in the ox English dictionary the the dictionary actually",
    "start": "2605240",
    "end": "2612839"
  },
  {
    "text": "understands the importance of context I it's very easy for you're British to get access to the full Ox",
    "start": "2612839",
    "end": "2618760"
  },
  {
    "text": "linguish dictionary it's all freely available at libraries and you get free logins using online I my brother's a is",
    "start": "2618760",
    "end": "2624920"
  },
  {
    "text": "a medieval historian and he also has access so he did he gave me this page these are the full definition of",
    "start": "2624920",
    "end": "2631119"
  },
  {
    "text": "asynchronous in the English dictionary and it's a long long page and actually",
    "start": "2631119",
    "end": "2636200"
  },
  {
    "text": "the first definition that comes up is basically the top one in the ox English dictionary no surprise Google gives you",
    "start": "2636200",
    "end": "2642160"
  },
  {
    "text": "the first hit which is probably why it's ended up in the reactive Manifesto and has been re requoted at",
    "start": "2642160",
    "end": "2648720"
  },
  {
    "text": "inum now interestingly talking about context where did this definition come from the one that everyone seems to want",
    "start": "2648720",
    "end": "2654240"
  },
  {
    "text": "to use um originally only in medical contexts so this is a term that came",
    "start": "2654240",
    "end": "2661200"
  },
  {
    "text": "from a medical context not a Computing context so does the oxid addic have anything to say",
    "start": "2661200",
    "end": "2667839"
  },
  {
    "text": "about a Computing context for asynchronous yes it does in fact there are two definitions of asynchronous in",
    "start": "2667839",
    "end": "2675400"
  },
  {
    "text": "Computing the one that's closest to what we're talking about is the first one",
    "start": "2675400",
    "end": "2680760"
  },
  {
    "text": "here which means which states that designating asynchronous designating transmissions in which packets of data",
    "start": "2680760",
    "end": "2687160"
  },
  {
    "text": "are sent at irregular intervals with the start and end of each packet being marked by specific signals involving",
    "start": "2687160",
    "end": "2693800"
  },
  {
    "text": "such transmission I don't know what that means I suspect this is discussing the Contex",
    "start": "2693800",
    "end": "2701559"
  },
  {
    "text": "the asy synus communication from the point of view of somebody implementing a low-level networking",
    "start": "2701559",
    "end": "2707760"
  },
  {
    "text": "protocol so the context here of this definition is much more precise than the",
    "start": "2707760",
    "end": "2712880"
  },
  {
    "text": "one newactive Manifesto but still useless and not",
    "start": "2712880",
    "end": "2718720"
  },
  {
    "text": "helpful why is am I going on about this fundamentally software is a type of",
    "start": "2718720",
    "end": "2724160"
  },
  {
    "text": "socio technical system okay socio technical socio people technical",
    "start": "2724160",
    "end": "2732680"
  },
  {
    "text": "technology technology in the broader Latin sense of the word technology techy right complex",
    "start": "2732680",
    "end": "2739440"
  },
  {
    "text": "systems we when we build software it's these things coming together that create the things that we",
    "start": "2739440",
    "end": "2745160"
  },
  {
    "text": "build um now before you start thinking oh God is going to come over like some sort of snowflake liberal yes I am a",
    "start": "2745160",
    "end": "2750559"
  },
  {
    "text": "snowflake liberal but I'm also correct in this one right the context of soci Technical Systems actually comes from",
    "start": "2750559",
    "end": "2756280"
  },
  {
    "text": "studies of col mining was actually the the context the the work around social",
    "start": "2756280",
    "end": "2761599"
  },
  {
    "text": "technicism is actually done by the Tavistock Institute here in London if you want there's a there's a great rapbit hole you can go down where the",
    "start": "2761599",
    "end": "2766760"
  },
  {
    "text": "Tavistock Institute which came up with a concept of socio Technical Systems is basically the center of a of a really",
    "start": "2766760",
    "end": "2773200"
  },
  {
    "text": "elaborate conspiracy theory where certain people think they're trying to control our minds because it's their",
    "start": "2773200",
    "end": "2779119"
  },
  {
    "text": "fault we've got the Beetles and the Rolling Stones it's a weird deep Rabbit Hole to go down anyway I digress um but",
    "start": "2779119",
    "end": "2785960"
  },
  {
    "text": "the concept of this is is like how do we so they were looking at look we've got these complex things happening coal mining we've got people how do we make",
    "start": "2785960",
    "end": "2793280"
  },
  {
    "text": "sure all of this stuff works together and operates together software is one of those things",
    "start": "2793280",
    "end": "2799040"
  },
  {
    "text": "the creation of software is about people working together to construct something the amount of useful software created by",
    "start": "2799040",
    "end": "2806760"
  },
  {
    "text": "individuals is vanishingly rare some people say ah lonus created",
    "start": "2806760",
    "end": "2812000"
  },
  {
    "text": "the kernel lonus created the first version of the konel his biggest contribution was creating a",
    "start": "2812000",
    "end": "2819680"
  },
  {
    "text": "community to contribute to it there are very very few things where",
    "start": "2819680",
    "end": "2826880"
  },
  {
    "text": "one person created it software-wise by themselves that you use day in day out I'd say virtually none we bring people",
    "start": "2826880",
    "end": "2834440"
  },
  {
    "text": "together with complicated systems to build things to be able to do that it means we",
    "start": "2834440",
    "end": "2840160"
  },
  {
    "text": "need to be able to work together and communicate to each other you may not believe you know this is that important",
    "start": "2840160",
    "end": "2847760"
  },
  {
    "text": "but think how many times have you had a conversation with somebody only to realize you're talking across",
    "start": "2847760",
    "end": "2852960"
  },
  {
    "text": "purposes we're going to make the system asynchronous one of you you're thinking",
    "start": "2852960",
    "end": "2858280"
  },
  {
    "text": "about it in terms of a phone call they're thinking about it in terms of an email you're both using the same word but you're on the different page and",
    "start": "2858280",
    "end": "2865599"
  },
  {
    "text": "when you have that kind of misunderstanding going on uh problems can",
    "start": "2865599",
    "end": "2871280"
  },
  {
    "text": "occur you don't have to take my word for it there's a little thing called the Old Testament so the Old Testament it's",
    "start": "2871280",
    "end": "2878920"
  },
  {
    "text": "quite exciting there's lots of good stories in the Old Testament and one of those stories is this is the Tower of",
    "start": "2878920",
    "end": "2884480"
  },
  {
    "text": "Babel it's actually a very very short section in the um King James translation",
    "start": "2884480",
    "end": "2890040"
  },
  {
    "text": "of the old of the Old Testament um and it tells the story of these people who",
    "start": "2890040",
    "end": "2895920"
  },
  {
    "text": "are building a grand Tower and actually there were two reasons cited by about by why how their",
    "start": "2895920",
    "end": "2901720"
  },
  {
    "text": "Tower could be grown in such a magnificent fashion one is because they spoke with",
    "start": "2901720",
    "end": "2906960"
  },
  {
    "text": "one language and the ability to speak with one language aided them it also mentions that they basically had good",
    "start": "2906960",
    "end": "2912680"
  },
  {
    "text": "concrete which often gets Expos you know they had good technology as well that's put off on side but it was they could speak they could talk together they",
    "start": "2912680",
    "end": "2918319"
  },
  {
    "text": "could communicate to each other now no rationalization is necess given in the Old Testament as to why this what",
    "start": "2918319",
    "end": "2923480"
  },
  {
    "text": "happened next happened there's lots of interpretations um but basically the Old Testament God said no don't like that",
    "start": "2923480",
    "end": "2932000"
  },
  {
    "text": "and he basically made them all speak of different languages and the tower low and behold could not be",
    "start": "2932000",
    "end": "2939280"
  },
  {
    "text": "completed so this is a story which is several thousand years",
    "start": "2939280",
    "end": "2945880"
  },
  {
    "text": "old about the understanding of if we can all speak the same language it's much easier to do Grand",
    "start": "2945880",
    "end": "2953160"
  },
  {
    "text": "things it also kind of it's another one of those stories which says that the Old Testament God was sort of quite",
    "start": "2953160",
    "end": "2959079"
  },
  {
    "text": "different to the New Testament God it's like one of those weird sort of character Arc changes like in we don't",
    "start": "2959079",
    "end": "2965079"
  },
  {
    "text": "need to get into the last season of Game of Thrones but we all know that certain characters had really weird changes in their character Arc happened halfway but",
    "start": "2965079",
    "end": "2971680"
  },
  {
    "text": "anyway that's a different problem I really don't want to get into an argument people about both the Old Testament and the last series of Game of",
    "start": "2971680",
    "end": "2977200"
  },
  {
    "text": "Thrones because we've all got a long day look this is an old",
    "start": "2977200",
    "end": "2982880"
  },
  {
    "text": "story we think about our new story the term asynchronous the term asynchronous in",
    "start": "2982880",
    "end": "2989559"
  },
  {
    "text": "the context of interprocess communication has so many meanings to so",
    "start": "2989559",
    "end": "2995280"
  },
  {
    "text": "many different people the word itself effectively no longer has meaning it is",
    "start": "2995280",
    "end": "3000400"
  },
  {
    "text": "not a useful word for us to talk about it doesn't help us achieve",
    "start": "3000400",
    "end": "3006880"
  },
  {
    "text": "anything so what can we do as always in these",
    "start": "3006880",
    "end": "3012559"
  },
  {
    "text": "things start by understanding what your application needs think instead about how your",
    "start": "3012559",
    "end": "3021119"
  },
  {
    "text": "application wants to handle different situations how quick do you want the communication to be what should happen",
    "start": "3021119",
    "end": "3027319"
  },
  {
    "text": "if the server I'm talking to is not there what should I do if a client",
    "start": "3027319",
    "end": "3033760"
  },
  {
    "text": "crashes decide how you want your application to behave and then use some of those more",
    "start": "3033760",
    "end": "3041359"
  },
  {
    "text": "specific terms that we talked about today be more explicit don't say our syn",
    "start": "3041359",
    "end": "3047280"
  },
  {
    "text": "our system is is going to be asynchronous say clients should be non-blocking and here's how we're going to do non-blocking clients say that you",
    "start": "3047280",
    "end": "3054480"
  },
  {
    "text": "want to wear possible run operations in parallel and explain why say you're going to you're decided to use a broker",
    "start": "3054480",
    "end": "3060400"
  },
  {
    "text": "as an intermediary be more explicit that will Aid communication you'll be on the same page and you'll be better able to",
    "start": "3060400",
    "end": "3066880"
  },
  {
    "text": "build things together try not to make this all about",
    "start": "3066880",
    "end": "3074040"
  },
  {
    "text": "correcting what somebody else thinks these words mean though um I",
    "start": "3074040",
    "end": "3080160"
  },
  {
    "text": "mean the kind of the clickbaity title for this talk obviously comes from The Princess Bride",
    "start": "3080160",
    "end": "3086760"
  },
  {
    "text": "where uh the the joke that we're all in on is that vincus is using the word",
    "start": "3086760",
    "end": "3095520"
  },
  {
    "text": "inconceivable and we as the audience and especially in go mon Toya know that he's using that word incorrectly right you",
    "start": "3095520",
    "end": "3103200"
  },
  {
    "text": "keep using that word I do not think it means what you think it means",
    "start": "3103200",
    "end": "3109559"
  },
  {
    "text": "this this is a bit different in a working environment when someone says I",
    "start": "3109559",
    "end": "3115680"
  },
  {
    "text": "want to make this a synchronous don't think I know what that means better than you just ask them what does it mean to",
    "start": "3115680",
    "end": "3123480"
  },
  {
    "text": "you what does that word mean to you get a bit more explicit about it because if",
    "start": "3123480",
    "end": "3130599"
  },
  {
    "text": "you can communicate more clearly you'll build better stuff together and uh what",
    "start": "3130599",
    "end": "3136440"
  },
  {
    "text": "you find might shock you all right thank you very much",
    "start": "3136440",
    "end": "3142839"
  },
  {
    "text": "[Applause]",
    "start": "3143190",
    "end": "3147889"
  },
  {
    "text": "we've got about seven minutes for questions if you do have questions there is a microphone to the left hand side so",
    "start": "3148920",
    "end": "3156359"
  },
  {
    "text": "if you're able to ask if you want to ask question and you're able to to the microphone that' be appreciated anyone got a question for me you want to",
    "start": "3156359",
    "end": "3162880"
  },
  {
    "text": "ask okay well if you're too scared I'm going to hang around here for a bit uh if you want to find me online I'm not",
    "start": "3162880",
    "end": "3168720"
  },
  {
    "text": "really on Twitter much anymore for reasons I won't go into but you can find me on madon over on the hacky DM server",
    "start": "3168720",
    "end": "3175040"
  },
  {
    "text": "um but other than that I hope you have an amazing conference is one of my favorites and if you are visiting the city do take time to explore the area",
    "start": "3175040",
    "end": "3182440"
  },
  {
    "text": "and have a nice time the weather at the moment seems to be keeping keeping you you know it's it's not it's not raining",
    "start": "3182440",
    "end": "3188880"
  },
  {
    "text": "right now so enjoy it while it lasts but um thank you so much [Applause]",
    "start": "3188880",
    "end": "3198439"
  }
]