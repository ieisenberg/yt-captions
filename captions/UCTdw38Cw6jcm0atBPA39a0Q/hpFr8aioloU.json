[
  {
    "text": "hi um welcome to my presentation my name is uh Magnus longwar I graduated",
    "start": "1020",
    "end": "9480"
  },
  {
    "text": "three years ago and this is a short summary of my relevant experience on",
    "start": "9480",
    "end": "15480"
  },
  {
    "text": "this matter I spent one year at Deloitte in 2019 as a",
    "start": "15480",
    "end": "20880"
  },
  {
    "text": "CDF task maker and from the summer of 2020 until now",
    "start": "20880",
    "end": "26460"
  },
  {
    "text": "I've been a consultant at wave but they are interning hiring me out to equinor",
    "start": "26460",
    "end": "31980"
  },
  {
    "text": "where I do infrastructure and platform engineering I'm not a security specialist",
    "start": "31980",
    "end": "39840"
  },
  {
    "text": "in fact I'm not even my team security Champion that honor is bestowed upon",
    "start": "39840",
    "end": "45840"
  },
  {
    "text": "someone else but I do consider myself to be more than averagely interested in security",
    "start": "45840",
    "end": "52039"
  },
  {
    "text": "certainly for a developer my talk here today",
    "start": "52039",
    "end": "58140"
  },
  {
    "text": "is about DNS and particular shenanigans that you can do with DNS",
    "start": "58140",
    "end": "65158"
  },
  {
    "text": "so before I go to the core of my topic I need to give a brief overview of how DNS",
    "start": "65159",
    "end": "71400"
  },
  {
    "text": "works foreign so if you look at this diagram here on",
    "start": "71400",
    "end": "77100"
  },
  {
    "text": "the left hand side I have some client machine who is making a DNS request",
    "start": "77100",
    "end": "83400"
  },
  {
    "text": "in this particular scenario it is a kubernetes pod and it is making this query here it",
    "start": "83400",
    "end": "91439"
  },
  {
    "text": "wants to find out which a record contains the IP address for sub dot on",
    "start": "91439",
    "end": "98159"
  },
  {
    "text": "the hand sector.no it sends this request to the core DNS",
    "start": "98159",
    "end": "103680"
  },
  {
    "text": "resolver inside the cluster and in this particular scenario the core",
    "start": "103680",
    "end": "110939"
  },
  {
    "text": "DNS resolver will forward the request to Azure DNS and then Azure DNS does the recur this",
    "start": "110939",
    "end": "117840"
  },
  {
    "text": "the recursive resolution here it will figure out okay the dot no",
    "start": "117840",
    "end": "125060"
  },
  {
    "text": "Zone which server is the authoritative name server for that zone it will ask",
    "start": "125060",
    "end": "130380"
  },
  {
    "text": "the root name servers in order to get the answer to that question and that will be something like",
    "start": "130380",
    "end": "137000"
  },
  {
    "text": "this.no it is one of many and then it will in turn ask that name server what is the authoritative name",
    "start": "137000",
    "end": "144959"
  },
  {
    "text": "server for the um no Zone and it will presumably get the answer to",
    "start": "144959",
    "end": "152099"
  },
  {
    "text": "that as well it is NS Dot secret.no",
    "start": "152099",
    "end": "157560"
  },
  {
    "text": "and when it has all this information it is ready to make the final request",
    "start": "157560",
    "end": "163440"
  },
  {
    "text": "which is what is the IP address of sub Dot undehem sector.no",
    "start": "163440",
    "end": "170099"
  },
  {
    "text": "and if all goes according to plan um the correct IP address is returned",
    "start": "170099",
    "end": "175800"
  },
  {
    "text": "and is sent all the way back to the clients",
    "start": "175800",
    "end": "180200"
  },
  {
    "text": "but there is a plot twist in this diagram",
    "start": "181019",
    "end": "186440"
  },
  {
    "text": "and that is that I control the authoritative name server for the um",
    "start": "187800",
    "end": "194640"
  },
  {
    "text": "it's mine it's actually true and the main takeaway you need to",
    "start": "194640",
    "end": "201300"
  },
  {
    "text": "remember from this diagram for the rest of the presentation is that on the left hand side there",
    "start": "201300",
    "end": "206879"
  },
  {
    "text": "there might be a firewall which surrounds the pod on the left hand side",
    "start": "206879",
    "end": "213360"
  },
  {
    "text": "but no matter what sane firewall configuration you apply here",
    "start": "213360",
    "end": "219019"
  },
  {
    "text": "you are almost required to allow outbound DNS",
    "start": "219019",
    "end": "225480"
  },
  {
    "text": "you are going to run into a lot of trouble if you don't and no matter what restrictions I apply",
    "start": "225480",
    "end": "231480"
  },
  {
    "text": "to this IP layered firewall I would have to allow this request to be",
    "start": "231480",
    "end": "236640"
  },
  {
    "text": "bounced around the world until it reaches my evil name server there is nothing the client can do on the",
    "start": "236640",
    "end": "243000"
  },
  {
    "text": "firewall level to prevent this so just remember that and you can forget",
    "start": "243000",
    "end": "249239"
  },
  {
    "text": "everything else about this diagram but remember that detail",
    "start": "249239",
    "end": "254480"
  },
  {
    "text": "so DNS exfiltration what is that all about",
    "start": "257160",
    "end": "262199"
  },
  {
    "text": "so imagine that the pod on the left hand side on the previous slide is",
    "start": "262199",
    "end": "267960"
  },
  {
    "text": "compromised through some arbitrary exploits and on that part there is an environment",
    "start": "267960",
    "end": "275639"
  },
  {
    "text": "variable the database password and it looks like this",
    "start": "275639",
    "end": "280860"
  },
  {
    "text": "now assume that this pod has a very strict firewall which prevents nearly all",
    "start": "280860",
    "end": "287160"
  },
  {
    "text": "outbound traffic but the attacker wants to know the value of this environment variable",
    "start": "287160",
    "end": "293220"
  },
  {
    "text": "well one option if you are so lucky that you own the authoritative name server for some DNS",
    "start": "293220",
    "end": "299940"
  },
  {
    "text": "Zone is that you can send this value home through a DNS request",
    "start": "299940",
    "end": "305040"
  },
  {
    "text": "you would trick the client into resolving a domain where the first term of the subdomain is",
    "start": "305040",
    "end": "311940"
  },
  {
    "text": "equal to the value of whatever you're trying to exfiltrate so if you look at this string here it's",
    "start": "311940",
    "end": "319259"
  },
  {
    "text": "equal to the database password if I trick the client into resolving this domain",
    "start": "319259",
    "end": "324360"
  },
  {
    "text": "then I will read it in my end if I control the name server",
    "start": "324360",
    "end": "329419"
  },
  {
    "text": "so I use DNS for something but it's not supposed to be used for I I hide",
    "start": "331139",
    "end": "339060"
  },
  {
    "text": "arbitrary data inside the the datagrams",
    "start": "339060",
    "end": "345180"
  },
  {
    "text": "now what the server returns here is not important when I receive this request I got what I wanted",
    "start": "345180",
    "end": "351780"
  },
  {
    "text": "now what is DNS tunneling that's when you take this concept one step further",
    "start": "351780",
    "end": "357000"
  },
  {
    "text": "that you're not only interested in what you receive from the client but you also send data back to enable two-way duplex",
    "start": "357000",
    "end": "365280"
  },
  {
    "text": "communication so this scheme here can be used to for",
    "start": "365280",
    "end": "370860"
  },
  {
    "text": "example establish a persistent tunnel between some compromise targets and the",
    "start": "370860",
    "end": "376979"
  },
  {
    "text": "evil authoritative name server so in this uh very simple use case here",
    "start": "376979",
    "end": "384240"
  },
  {
    "text": "the the client asks what should I do next dot on the handsystem.no the name server happily replies well you should",
    "start": "384240",
    "end": "391319"
  },
  {
    "text": "do this uh what you ask for is the cname and uh inside the uh the cname answer section I",
    "start": "391319",
    "end": "399720"
  },
  {
    "text": "tell you what to do and by using this principle",
    "start": "399720",
    "end": "404940"
  },
  {
    "text": "you can establish a a long-term command and control",
    "start": "404940",
    "end": "409979"
  },
  {
    "text": "infrastructure",
    "start": "409979",
    "end": "412979"
  },
  {
    "text": "how long has this been a thing the first recorded technical discussion",
    "start": "419580",
    "end": "424979"
  },
  {
    "text": "on this topic appeared in an email on the dog track mailing list in April 1998.",
    "start": "424979",
    "end": "431340"
  },
  {
    "text": "Oscar Pearson is his name I frankly don't know if this guy's an American or",
    "start": "431340",
    "end": "437039"
  },
  {
    "text": "if it's a Swede does anyone here know because I I would love to know more about the guy",
    "start": "437039",
    "end": "443639"
  },
  {
    "text": "details about him or our Spears on the internet but I think he's um",
    "start": "443639",
    "end": "450539"
  },
  {
    "text": "well not an irrelevant person in the history of the internet so he needs a",
    "start": "450539",
    "end": "456060"
  },
  {
    "text": "chronicler well he pretty much said that I have",
    "start": "456060",
    "end": "461520"
  },
  {
    "text": "Grim news people your firewalls are no more because all of you people are allowing",
    "start": "461520",
    "end": "467940"
  },
  {
    "text": "outbound DNS and as long as you do no one is safe",
    "start": "467940",
    "end": "472979"
  },
  {
    "text": "and he describes the um the principle",
    "start": "472979",
    "end": "478380"
  },
  {
    "text": "which you can use to establish a DNS tunnel",
    "start": "478380",
    "end": "483560"
  },
  {
    "text": "well what happened in the next years",
    "start": "484500",
    "end": "488599"
  },
  {
    "text": "uh at the black cat briefings conference in 2004",
    "start": "489960",
    "end": "495780"
  },
  {
    "text": "Dan Kaminsky had a talk and",
    "start": "495780",
    "end": "501139"
  },
  {
    "text": "he presented DNS tunneling and it was a really hot bleeding edge new topic there",
    "start": "501139",
    "end": "508259"
  },
  {
    "text": "for most of the audience but he emphasized that he is not the",
    "start": "508259",
    "end": "513899"
  },
  {
    "text": "first person to play around with this it has been done before and there are lots and lots of private unreleased stuff out",
    "start": "513899",
    "end": "520260"
  },
  {
    "text": "there he said this in 2004 six years after Oscar Pearson made this male hair",
    "start": "520260",
    "end": "526320"
  },
  {
    "text": "on the backtrack mailing list so even if the system administrators of",
    "start": "526320",
    "end": "531959"
  },
  {
    "text": "the world did not pay much heat to his warnings uh the black hat hackers of the",
    "start": "531959",
    "end": "537300"
  },
  {
    "text": "world obviously did um DNS exfiltration proliferated as a",
    "start": "537300",
    "end": "542399"
  },
  {
    "text": "technique in the next six years",
    "start": "542399",
    "end": "546140"
  },
  {
    "text": "I have been looking for the earliest tools to",
    "start": "548880",
    "end": "555060"
  },
  {
    "text": "streamline DNS exfiltration and tunneling and I found these three",
    "start": "555060",
    "end": "560720"
  },
  {
    "text": "nstx and iodine are um they're not primarily advertised",
    "start": "560720",
    "end": "568740"
  },
  {
    "text": "as tools for black cat hacking but more like utilities that you can use if you happen",
    "start": "568740",
    "end": "576959"
  },
  {
    "text": "to be behind a a strict firewall like for example an airplane and you feel",
    "start": "576959",
    "end": "582120"
  },
  {
    "text": "like doing some work and then you can piggyback off DNS to to do what you want",
    "start": "582120",
    "end": "588180"
  },
  {
    "text": "so uh the the team did not say this is for Black Cat hackers it says this is",
    "start": "588180",
    "end": "594540"
  },
  {
    "text": "for people who happen to be lucky enough to own an authoritative name server and like doing their work even when they",
    "start": "594540",
    "end": "601980"
  },
  {
    "text": "happen to be locked behind the strict firewall of demand DNS which Kaminsky released at",
    "start": "601980",
    "end": "608399"
  },
  {
    "text": "the blackout conference that was definitely advertised for hacking",
    "start": "608399",
    "end": "613760"
  },
  {
    "text": "yeah um if you happen to be on an airplane you usually have to pay for Wi-Fi in",
    "start": "617220",
    "end": "623459"
  },
  {
    "text": "order to get out to The Wider internet but you are usually allowed to make DNS",
    "start": "623459",
    "end": "629279"
  },
  {
    "text": "requests to whatever domain you want so if you have already prepared an",
    "start": "629279",
    "end": "635580"
  },
  {
    "text": "authoritative name server back home then you can bounce your traffic through that and uh",
    "start": "635580",
    "end": "641459"
  },
  {
    "text": "not pay anything",
    "start": "641459",
    "end": "644360"
  },
  {
    "text": "the first time I heard about DNS tunnels it was in this young adult novel written",
    "start": "648120",
    "end": "654839"
  },
  {
    "text": "by Corey doctorow published 2008. I think it's a great read the",
    "start": "654839",
    "end": "661079"
  },
  {
    "text": "protagonist lives in this alternate version of the USA where it has become a",
    "start": "661079",
    "end": "666800"
  },
  {
    "text": "full-blown surveillance State and he's battling various government agencies trying to stay under their radar",
    "start": "666800",
    "end": "674040"
  },
  {
    "text": "in this encounter here uh the main character meets this hacker",
    "start": "674040",
    "end": "679860"
  },
  {
    "text": "and she's supposed to show him some evidence of some government malconduct",
    "start": "679860",
    "end": "685740"
  },
  {
    "text": "and her gov her protocol of choice to deliver this video was DNS",
    "start": "685740",
    "end": "692519"
  },
  {
    "text": "it took a few years after I read this for the technical details to fully sink in",
    "start": "692519",
    "end": "698220"
  },
  {
    "text": "but I remember it vividly when I heard about DNS tunneling the next time and I",
    "start": "698220",
    "end": "703860"
  },
  {
    "text": "went back and reread it there are some things that Dr o got",
    "start": "703860",
    "end": "708959"
  },
  {
    "text": "completely wrong here uh DNS tunneling it ain't anonymous",
    "start": "708959",
    "end": "715079"
  },
  {
    "text": "and it's even less true that it's fast anyone who has tried DNS tunneling from",
    "start": "715079",
    "end": "720180"
  },
  {
    "text": "from an airport airplane or anywhere else would know this it will be the the worst bandwidth you",
    "start": "720180",
    "end": "727380"
  },
  {
    "text": "have ever had and I don't care how many DNS servers he used",
    "start": "727380",
    "end": "734240"
  },
  {
    "text": "no I've been looking through some high profile data breaches during the past",
    "start": "738300",
    "end": "744000"
  },
  {
    "text": "decade trying to find the real hard confirmation that DNS tunneling was part",
    "start": "744000",
    "end": "750240"
  },
  {
    "text": "of the attack and the the details are usually spares to the public so it's been hard for me",
    "start": "750240",
    "end": "758100"
  },
  {
    "text": "to make uh conclusions there but we do know",
    "start": "758100",
    "end": "764120"
  },
  {
    "text": "almost certainly that in the solar wind sack of 2020",
    "start": "764120",
    "end": "769620"
  },
  {
    "text": "DNS tunneling was an integral part of the poised exploitation command and",
    "start": "769620",
    "end": "775500"
  },
  {
    "text": "control setup so there was a team city server I think which was integral to the breach and",
    "start": "775500",
    "end": "783300"
  },
  {
    "text": "after the initial exploit the attacker set up at DNS tunnel to call back home to maintain control of the server",
    "start": "783300",
    "end": "791100"
  },
  {
    "text": "and then there was the office of personnel management a less known incident in 2015.",
    "start": "791100",
    "end": "799399"
  },
  {
    "text": "there has not been any memo issued to the public about exactly what happened",
    "start": "799399",
    "end": "805100"
  },
  {
    "text": "but what we do know at least according to this blogger at Cisco",
    "start": "805100",
    "end": "810180"
  },
  {
    "text": "is that immediately after the the incident the Department of Homeland Security arranged a workshop for the OPM",
    "start": "810180",
    "end": "817440"
  },
  {
    "text": "where DNS tunneling was very high on the agenda so I think it's safe to assume that",
    "start": "817440",
    "end": "825660"
  },
  {
    "text": "DNS tunneling had something to do with it and there are two malware groups oil rig",
    "start": "825660",
    "end": "833100"
  },
  {
    "text": "and accent who allegedly always used DNS tunneling as part of their modus",
    "start": "833100",
    "end": "839579"
  },
  {
    "text": "operandi uh I haven't heard their names before but maybe if you pay attention to",
    "start": "839579",
    "end": "844800"
  },
  {
    "text": "this kind of stuff those are Brands you've heard of before so it's been hard to like find the",
    "start": "844800",
    "end": "852860"
  },
  {
    "text": "third-party sources that confirm that yeah the enough tunneling was used here and it was used here but I'm pretty sure",
    "start": "852860",
    "end": "858779"
  },
  {
    "text": "that any black hat hacker worth assault during the past 20 years keeps DNS",
    "start": "858779",
    "end": "865139"
  },
  {
    "text": "tunneling at the very top of his toolbox",
    "start": "865139",
    "end": "869300"
  },
  {
    "text": "here's a screenshot from the Norwegian nrk where the solar wind sack was mentioned",
    "start": "870480",
    "end": "875820"
  },
  {
    "text": "so this made the headlines in mainstream news",
    "start": "875820",
    "end": "881060"
  },
  {
    "text": "yes so it's time for a demonstration",
    "start": "885240",
    "end": "890579"
  },
  {
    "text": "do you remember log for shell well yes",
    "start": "890579",
    "end": "896959"
  },
  {
    "text": "I have set up a application which is vulnerable to lock",
    "start": "899699",
    "end": "905339"
  },
  {
    "text": "for shell",
    "start": "905339",
    "end": "907940"
  },
  {
    "text": "my setup is kind of fragile here so things might go wrong for any number of reasons but if they do I have prepared a",
    "start": "914880",
    "end": "921540"
  },
  {
    "text": "video to fall back on just in case",
    "start": "921540",
    "end": "925220"
  },
  {
    "text": "yes this is a Hello World program",
    "start": "932639",
    "end": "936740"
  },
  {
    "text": "let me just stop intercepting these",
    "start": "942779",
    "end": "946820"
  },
  {
    "text": "I have configured this app here to use the log4j library to log the contents of",
    "start": "954720",
    "end": "960660"
  },
  {
    "text": "the user agent header upon each incoming request so I happen to know that if I fiddle",
    "start": "960660",
    "end": "968220"
  },
  {
    "text": "with a user agent header I can make some stuff ever happen",
    "start": "968220",
    "end": "973339"
  },
  {
    "text": "yes so this is the classic log4j exploit you use an ldap lookup to download some",
    "start": "981899",
    "end": "990959"
  },
  {
    "text": "orbit some some malicious jar file from a server with the attacker controls",
    "start": "990959",
    "end": "998699"
  },
  {
    "text": "but uh in this exploit here I'm not trying to download a jar file I know that would",
    "start": "998699",
    "end": "1005240"
  },
  {
    "text": "not work because the app on the left hand side here has a strict outbound firewall which would not allow this",
    "start": "1005240",
    "end": "1011779"
  },
  {
    "text": "request to go through to go through but what I'm trying to do here instead is to look up a domain which I have",
    "start": "1011779",
    "end": "1020000"
  },
  {
    "text": "built dynamically here where I make the first term of the domain to be equal",
    "start": "1020000",
    "end": "1027020"
  },
  {
    "text": "to this environment variable which may or may not exist on the compromised machine we don't know yet",
    "start": "1027020",
    "end": "1034938"
  },
  {
    "text": "and the rest of this request May Fail I don't care as long as I can trick the",
    "start": "1034939",
    "end": "1040100"
  },
  {
    "text": "machine on the left hand side to resolve the domain",
    "start": "1040100",
    "end": "1044438"
  },
  {
    "text": "the shell on the right hand side there is from the inside of my authoritative name server and you're looking at the",
    "start": "1047660",
    "end": "1054440"
  },
  {
    "text": "logs from my bind my buying software instance",
    "start": "1054440",
    "end": "1060340"
  },
  {
    "text": "okay let's for forward the request and see what happens",
    "start": "1062000",
    "end": "1067179"
  },
  {
    "text": "there we go",
    "start": "1067520",
    "end": "1070240"
  },
  {
    "text": "this string here is the content",
    "start": "1074240",
    "end": "1079700"
  },
  {
    "text": "of this aerobics git commit Tash environment variable okay let's see if we can find other",
    "start": "1079700",
    "end": "1086660"
  },
  {
    "text": "stuff",
    "start": "1086660",
    "end": "1088960"
  },
  {
    "text": "what about DB pass for DB password",
    "start": "1094460",
    "end": "1100580"
  },
  {
    "text": "it's not entirely unlikely that a web application may have an environment variable like that is it",
    "start": "1100580",
    "end": "1107179"
  },
  {
    "text": "well let's try",
    "start": "1107179",
    "end": "1109899"
  },
  {
    "text": "nothing happened I'm guessing that means that there was was no such environment variable because",
    "start": "1114799",
    "end": "1121760"
  },
  {
    "text": "I tried resolving an invalid domain okay let's try again",
    "start": "1121760",
    "end": "1128020"
  },
  {
    "text": "what about DB password",
    "start": "1130580",
    "end": "1136659"
  },
  {
    "text": "now that didn't work neither well this is fragile as I warned you",
    "start": "1143480",
    "end": "1149000"
  },
  {
    "text": "this was supposed to work it didn't right now but believe me it usually does",
    "start": "1149000",
    "end": "1156220"
  },
  {
    "text": "okay um no I'm sure it's not cached I've",
    "start": "1160100",
    "end": "1166580"
  },
  {
    "text": "actually never tried this particular exfiltration before",
    "start": "1166580",
    "end": "1172240"
  },
  {
    "text": "I have one more demo for you this is a different web app",
    "start": "1179440",
    "end": "1185679"
  },
  {
    "text": "some of you may recognize this as the damn vulnerable web application I have patched it slightly to showcase",
    "start": "1186740",
    "end": "1195140"
  },
  {
    "text": "the scenario I want to demonstrate but suppose that I have some command",
    "start": "1195140",
    "end": "1201140"
  },
  {
    "text": "injection here now",
    "start": "1201140",
    "end": "1209059"
  },
  {
    "text": "um don't bother too much for the details but I can trick this machine here to",
    "start": "1209179",
    "end": "1215120"
  },
  {
    "text": "execute any shell command which is to the right of this semicolon now I'm executing the DNS CAD client and",
    "start": "1215120",
    "end": "1224299"
  },
  {
    "text": "I try to get I try to connect it to the under handstick.no domain",
    "start": "1224299",
    "end": "1229580"
  },
  {
    "text": "now again keep in mind the server on the left hand side has a watertight app on",
    "start": "1229580",
    "end": "1234679"
  },
  {
    "text": "firewall I would not be able to make any requests to any website or any other protocol",
    "start": "1234679",
    "end": "1241280"
  },
  {
    "text": "anywhere on the web except DNS because I have to allow DNS",
    "start": "1241280",
    "end": "1248140"
  },
  {
    "text": "um you may wonder how did this binary end up on the server well I cheated a little",
    "start": "1248360",
    "end": "1254539"
  },
  {
    "text": "bit it was part of the container image from which I built this app but I could very well have assembled",
    "start": "1254539",
    "end": "1262400"
  },
  {
    "text": "this binary on the back end by piping some base64 Snippets",
    "start": "1262400",
    "end": "1269679"
  },
  {
    "text": "and then reassembling them",
    "start": "1269840",
    "end": "1276799"
  },
  {
    "text": "in the back um",
    "start": "1276799",
    "end": "1282400"
  },
  {
    "text": "something like this",
    "start": "1282620",
    "end": "1285760"
  },
  {
    "text": "but I have not prepared a script to do this but believe me it would work so this entirely impossible scenario is",
    "start": "1288559",
    "end": "1296240"
  },
  {
    "text": "still kind of possible",
    "start": "1296240",
    "end": "1299320"
  },
  {
    "text": "okay so now I'm turning off my bind because only one service can listen to",
    "start": "1303799",
    "end": "1311299"
  },
  {
    "text": "Port 53 at any given time",
    "start": "1311299",
    "end": "1315880"
  },
  {
    "text": "okay now the server is listening waiting for",
    "start": "1338900",
    "end": "1346820"
  },
  {
    "text": "some compromised machine to connect to it and establish a DNS tunnel",
    "start": "1346820",
    "end": "1352600"
  },
  {
    "text": "now I'm hoping this works",
    "start": "1357380",
    "end": "1362380"
  },
  {
    "text": "well it looks like it doesn't but that's why I've created a video",
    "start": "1363320",
    "end": "1368200"
  },
  {
    "text": "wow resolution was poor here",
    "start": "1375799",
    "end": "1379658"
  },
  {
    "text": "this is better now the server got the initiating",
    "start": "1381260",
    "end": "1387620"
  },
  {
    "text": "request and interactively I established a sell",
    "start": "1387620",
    "end": "1393980"
  },
  {
    "text": "session with my compromise clients",
    "start": "1393980",
    "end": "1398799"
  },
  {
    "text": "now I have a shell I typed LS and I got the output from my compromise client help index.php and",
    "start": "1408080",
    "end": "1415340"
  },
  {
    "text": "Source those are the three files in the working directory of this DNS get binary",
    "start": "1415340",
    "end": "1421640"
  },
  {
    "text": "that I tricked the compromised machine into executing so I'm in",
    "start": "1421640",
    "end": "1428299"
  },
  {
    "text": "and I must re-emphasize the firewall belonging to the app on the left hand side is all but water tight",
    "start": "1428299",
    "end": "1435980"
  },
  {
    "text": "it allows DNS nothing else but still this can happen",
    "start": "1435980",
    "end": "1441760"
  },
  {
    "text": "no icmp is blocked",
    "start": "1445820",
    "end": "1449559"
  },
  {
    "text": "uh yeah that's a bit ironic but uh that would not work",
    "start": "1451700",
    "end": "1458559"
  },
  {
    "text": "okay so now you've seen how bad it can get",
    "start": "1464539",
    "end": "1470980"
  },
  {
    "text": "so how do you prevent this from happening the way I see it there are in general",
    "start": "1472280",
    "end": "1477980"
  },
  {
    "text": "two different approaches the first one is to monitor your DNS",
    "start": "1477980",
    "end": "1483740"
  },
  {
    "text": "traffic detect DNS tunnels when they are happening and stop them as soon as you",
    "start": "1483740",
    "end": "1489380"
  },
  {
    "text": "can and the other approach is to maintain a strict allow list",
    "start": "1489380",
    "end": "1495200"
  },
  {
    "text": "of which DNS zones the client is allowed to make lookups to in the first place",
    "start": "1495200",
    "end": "1501080"
  },
  {
    "text": "and then you would stop the DNS exfiltration before it is ever allowed",
    "start": "1501080",
    "end": "1506120"
  },
  {
    "text": "to be initiated so about approach number one",
    "start": "1506120",
    "end": "1514580"
  },
  {
    "text": "you would have some algorithm some AI or whatnot that would scrutinize the DNS",
    "start": "1514580",
    "end": "1520880"
  },
  {
    "text": "traffic and look for idiosyncrasies of",
    "start": "1520880",
    "end": "1525919"
  },
  {
    "text": "DNS tunneling clients this would typically involve very many txt record lookups with very long query names if",
    "start": "1525919",
    "end": "1533900"
  },
  {
    "text": "you're seeing that in your DNS logs you should Sound the Alarm because something bad is probably happening somewhere in",
    "start": "1533900",
    "end": "1539659"
  },
  {
    "text": "your infrastructure now the the cons of this approach is",
    "start": "1539659",
    "end": "1545240"
  },
  {
    "text": "that a single outgoing DNS request might be enough it might be critical",
    "start": "1545240",
    "end": "1554779"
  },
  {
    "text": "if the attacker is able to guess the environment variable which",
    "start": "1554779",
    "end": "1560960"
  },
  {
    "text": "contains the database password in a log for Shell scenario then it doesn't matter if you're able to stop the DNS",
    "start": "1560960",
    "end": "1567200"
  },
  {
    "text": "tunnel after it has began and the other con to the best of my",
    "start": "1567200",
    "end": "1574580"
  },
  {
    "text": "knowledge uh DNS tunneling detection is only offered by these pricey Enterprise",
    "start": "1574580",
    "end": "1580100"
  },
  {
    "text": "grade firewalls you cannot do it with open source components to the best of my knowledge",
    "start": "1580100",
    "end": "1586640"
  },
  {
    "text": "you can correct me if I'm wrong after the presentation I'd love to hear more about it",
    "start": "1586640",
    "end": "1592220"
  },
  {
    "text": "but based on my non-exhaustive research you have to pay for this",
    "start": "1592220",
    "end": "1599260"
  },
  {
    "text": "and the second approach the disadvantages here",
    "start": "1601039",
    "end": "1607820"
  },
  {
    "text": "is that you can only apply this defense mechanism to machine clients",
    "start": "1607820",
    "end": "1613640"
  },
  {
    "text": "a human would usually resolve quite a lot of domain names through any workday",
    "start": "1613640",
    "end": "1621980"
  },
  {
    "text": "and it would be a nightmare to maintain and operate an allow list and",
    "start": "1621980",
    "end": "1628520"
  },
  {
    "text": "accommodate requests from Human users who want to open this in this domain I see that it's hopeless",
    "start": "1628520",
    "end": "1636020"
  },
  {
    "text": "and even if you do have machine clients you need to not have too many of them which",
    "start": "1636020",
    "end": "1644600"
  },
  {
    "text": "um which are allowed listed by the same resolver so",
    "start": "1644600",
    "end": "1649940"
  },
  {
    "text": "each box which filtrates DNS requests it must have few clients or this approach",
    "start": "1649940",
    "end": "1656840"
  },
  {
    "text": "will fall apart now it is possible to do this with",
    "start": "1656840",
    "end": "1662299"
  },
  {
    "text": "Enterprise grade firewalls I see that many of them have this feature where you can have one allow list for One Source",
    "start": "1662299",
    "end": "1667760"
  },
  {
    "text": "IP and another allow list for a different Source IP but this assumes that you know the",
    "start": "1667760",
    "end": "1673640"
  },
  {
    "text": "outbound IPS of all your various applications with various requirements to their DNS allow lists and at least",
    "start": "1673640",
    "end": "1681799"
  },
  {
    "text": "not in Equinox landscape this is not the case we generally we generally don't have",
    "start": "1681799",
    "end": "1688640"
  },
  {
    "text": "static outbound IPS from various applications so this approach is difficult to pull",
    "start": "1688640",
    "end": "1695539"
  },
  {
    "text": "off now is DNS being filtered",
    "start": "1695539",
    "end": "1703600"
  },
  {
    "text": "yes but it's a lot more common to detect it than to block it the second the um",
    "start": "1705200",
    "end": "1714200"
  },
  {
    "text": "uh there's a typo here I mean approach one detection seems more common than",
    "start": "1714200",
    "end": "1719299"
  },
  {
    "text": "allow listing and it looks like at least these six",
    "start": "1719299",
    "end": "1725720"
  },
  {
    "text": "well-known Enterprise firewalls um offer DNS filtering in some capacity",
    "start": "1725720",
    "end": "1732679"
  },
  {
    "text": "probably Palo Alto as well I have not included that on this list but I believe",
    "start": "1732679",
    "end": "1738020"
  },
  {
    "text": "it's also true for Palo Alto",
    "start": "1738020",
    "end": "1741340"
  },
  {
    "text": "the first time I I got aware of DNS listing as a concept it was when I read",
    "start": "1744039",
    "end": "1750620"
  },
  {
    "text": "this thread on Reddit on RSS admin there was this popular post what is the",
    "start": "1750620",
    "end": "1757340"
  },
  {
    "text": "most stealthy way you have observed the traffic was",
    "start": "1757340",
    "end": "1762799"
  },
  {
    "text": "hidden and sent out of your network and the most popular reply was yeah data",
    "start": "1762799",
    "end": "1769039"
  },
  {
    "text": "exfiltration via DNS queries Swant me yeah I I I I knew about that before",
    "start": "1769039",
    "end": "1775940"
  },
  {
    "text": "but then I saw another reply to that reply by the user charion",
    "start": "1775940",
    "end": "1783500"
  },
  {
    "text": "and he said yeah this is exactly why our high security network only allows DNS to",
    "start": "1783500",
    "end": "1789320"
  },
  {
    "text": "a single server that is whitelisted on waterfall recursively query and I was like that that",
    "start": "1789320",
    "end": "1796179"
  },
  {
    "text": "that's pretty clever why is no one else doing it why have I",
    "start": "1796179",
    "end": "1804200"
  },
  {
    "text": "never heard of it before and why should you limit this approach to high security networks",
    "start": "1804200",
    "end": "1810919"
  },
  {
    "text": "why not do it everywhere in this modern Paradigm of small",
    "start": "1810919",
    "end": "1816799"
  },
  {
    "text": "containerized microservices we would actually be able to apply a very short",
    "start": "1816799",
    "end": "1822140"
  },
  {
    "text": "allow list to each individual environment so I think this approach is feasible",
    "start": "1822140",
    "end": "1827659"
  },
  {
    "text": "everywhere not just on very special high security networks",
    "start": "1827659",
    "end": "1833240"
  },
  {
    "text": "now some contexts about the work I do at equinox I'm a platform engineer I work",
    "start": "1833240",
    "end": "1840080"
  },
  {
    "text": "on the Radix platform it was launched about five years ago it Powers",
    "start": "1840080",
    "end": "1846039"
  },
  {
    "text": "250 applications I believe the number is rising fast my product owner is sitting right there",
    "start": "1846039",
    "end": "1852020"
  },
  {
    "text": "he would know the it's open source the core components are a kubernetes",
    "start": "1852020",
    "end": "1859460"
  },
  {
    "text": "operator a set of custom resource definitions a website API and a user",
    "start": "1859460",
    "end": "1865279"
  },
  {
    "text": "interface there are somewhere between 10 and 15 microservices involved",
    "start": "1865279",
    "end": "1871279"
  },
  {
    "text": "now the end user experience the the develop for the developers in Equinox is",
    "start": "1871279",
    "end": "1877159"
  },
  {
    "text": "that they provide a Docker file and a short infrastructure manifest and we do",
    "start": "1877159",
    "end": "1883279"
  },
  {
    "text": "the rest here's an example of erotic's config",
    "start": "1883279",
    "end": "1890539"
  },
  {
    "text": "file",
    "start": "1890539",
    "end": "1892840"
  },
  {
    "text": "so I have a list of components here where each component roughly corresponds",
    "start": "1897260",
    "end": "1902480"
  },
  {
    "text": "to a kubernetes deployment but we have a lot fewer Fields than the",
    "start": "1902480",
    "end": "1908659"
  },
  {
    "text": "kubernetes deployment in order to make sure the the developers don't do anything funny",
    "start": "1908659",
    "end": "1915440"
  },
  {
    "text": "and here's a list of environments where each environment",
    "start": "1915440",
    "end": "1922179"
  },
  {
    "text": "corresponds to one kubernetes namespace and in this example configuration here",
    "start": "1922179",
    "end": "1930500"
  },
  {
    "text": "I have2 environments for my app io1 which I've called with the DNS rules",
    "start": "1930500",
    "end": "1937640"
  },
  {
    "text": "and inside this namespace paths are not allowed to query any other domains",
    "start": "1937640",
    "end": "1944860"
  },
  {
    "text": "and anything under the equinox.com zone",
    "start": "1945440",
    "end": "1951039"
  },
  {
    "text": "so under normal circumstances this is what DNS resolution in the kubernetes cluster",
    "start": "1964279",
    "end": "1970940"
  },
  {
    "text": "would look like I have all these namespaces only all these namespaces contain all these parts",
    "start": "1970940",
    "end": "1976399"
  },
  {
    "text": "and they all send their DNS requests directly to core DNS",
    "start": "1976399",
    "end": "1981620"
  },
  {
    "text": "one DNS resolver to rule them all",
    "start": "1981620",
    "end": "1986500"
  },
  {
    "text": "but what if",
    "start": "1988220",
    "end": "1992620"
  },
  {
    "text": "you inject a DNS mask pod inside each namespace where you funnel through the",
    "start": "1993260",
    "end": "1999860"
  },
  {
    "text": "DNS requests where each DNS mask pod has a configuration file where it would either",
    "start": "1999860",
    "end": "2006880"
  },
  {
    "text": "allow or block outgoing DNS requests spoiler that this is the implementation",
    "start": "2006880",
    "end": "2013539"
  },
  {
    "text": "for this feature you're seeing here in the radixconfig.aml file if I specify allow",
    "start": "2013539",
    "end": "2020919"
  },
  {
    "text": "DNS zones here what will happen under the hood is that the robix platform will",
    "start": "2020919",
    "end": "2025960"
  },
  {
    "text": "inject this pod into the namespace and it will take care of the DNS resolution for you",
    "start": "2025960",
    "end": "2032559"
  },
  {
    "text": "and the part will be equipped with a configuration file which is parsed at runtime which will either block",
    "start": "2032559",
    "end": "2039340"
  },
  {
    "text": "or deny requests according to these specifications",
    "start": "2039340",
    "end": "2045059"
  },
  {
    "text": "so I have yet another demo for you",
    "start": "2049179",
    "end": "2054598"
  },
  {
    "text": "now we are repeating the first scenario with a log for Shell application but this time",
    "start": "2057700",
    "end": "2064300"
  },
  {
    "text": "it is hidden behind the DNS mask proxy now let's see",
    "start": "2064300",
    "end": "2071879"
  },
  {
    "text": "I replace the user agent header I again want to know the value of",
    "start": "2078760",
    "end": "2087300"
  },
  {
    "text": "I again want to know the value of the Radix git committee okay let's forward it",
    "start": "2089560",
    "end": "2097020"
  },
  {
    "text": "again I'm inspecting my bind logs",
    "start": "2098080",
    "end": "2102240"
  },
  {
    "text": "and nothing appears well let's check the logs of the DNS mask pod",
    "start": "2103660",
    "end": "2110280"
  },
  {
    "text": "inside the namespace from which I'm calling look at this",
    "start": "2110280",
    "end": "2117900"
  },
  {
    "text": "query was refused because it did not comply",
    "start": "2118119",
    "end": "2125380"
  },
  {
    "text": "with a list of allowed dnsons so this attack will stop dead in his tracks",
    "start": "2125380",
    "end": "2131619"
  },
  {
    "text": "no exfiltration here",
    "start": "2131619",
    "end": "2135119"
  },
  {
    "text": "and again I repeat the experiment with the DNS",
    "start": "2138940",
    "end": "2145359"
  },
  {
    "text": "tunnel",
    "start": "2145359",
    "end": "2147720"
  },
  {
    "text": "I tried executing it nothing happens on the right hand side",
    "start": "2159160",
    "end": "2164200"
  },
  {
    "text": "but let's check the DNS mask logs",
    "start": "2164200",
    "end": "2168599"
  },
  {
    "text": "and there we go the client is continuously trying to send this txt requests",
    "start": "2173980",
    "end": "2181960"
  },
  {
    "text": "to contact my evil name server but it fails because DNS mask won't let it",
    "start": "2181960",
    "end": "2189660"
  },
  {
    "text": "let me try to get full screen again",
    "start": "2196359",
    "end": "2200099"
  },
  {
    "text": "okay I have looked into some other alternatives to achieve the same",
    "start": "2203040",
    "end": "2208240"
  },
  {
    "text": "behavior maybe some of you are thinking okay core DNS it has this ACL plugin",
    "start": "2208240",
    "end": "2214359"
  },
  {
    "text": "which supports something like this why didn't you try that well just like those pesky Enterprise",
    "start": "2214359",
    "end": "2221440"
  },
  {
    "text": "grade firewalls it requires the source IP of each individual application to customize the allow list",
    "start": "2221440",
    "end": "2229599"
  },
  {
    "text": "so it was not scalable I would have to have one big allow list for the entire cluster and that's not what I want",
    "start": "2229599",
    "end": "2237280"
  },
  {
    "text": "what about actually using an Enterprise firewall okay sure there's a price but if you paid it would it work well I",
    "start": "2237280",
    "end": "2245380"
  },
  {
    "text": "haven't seen that any of them support this use case where you could",
    "start": "2245380",
    "end": "2251560"
  },
  {
    "text": "um deploy one instance of the firewall as a pod into individual kubernetes",
    "start": "2251560",
    "end": "2258700"
  },
  {
    "text": "namespaces I I haven't seen that any of them support this type of configuration",
    "start": "2258700",
    "end": "2264540"
  },
  {
    "text": "uh maybe some of them do I would be very surprised but if they do please let me know I'll dig into it more",
    "start": "2264540",
    "end": "2272140"
  },
  {
    "text": "and there's istio like that magic service mesh which can",
    "start": "2272140",
    "end": "2278800"
  },
  {
    "text": "do almost anything you could possibly want to do with the traffic in the kubernetes cluster there was a talk by",
    "start": "2278800",
    "end": "2285400"
  },
  {
    "text": "Steve Wade his name was yesterday he's one of the um he's a contributor of",
    "start": "2285400",
    "end": "2291579"
  },
  {
    "text": "istio and I asked him about this and he was not sure if this um",
    "start": "2291579",
    "end": "2298180"
  },
  {
    "text": "if I could have achieved this using his deal it was like 50 sure",
    "start": "2298180",
    "end": "2304200"
  },
  {
    "text": "so there are many examples using istio on how to manipulate DNS traffic but",
    "start": "2304200",
    "end": "2309460"
  },
  {
    "text": "they are all about optimizing performance a lot about denying malicious",
    "start": "2309460",
    "end": "2316359"
  },
  {
    "text": "requests but maybe I could have made it work",
    "start": "2316359",
    "end": "2323700"
  },
  {
    "text": "now this intercepting pod which keeps tracks which keeps track of which DNS",
    "start": "2324339",
    "end": "2330280"
  },
  {
    "text": "requests are good and which are bad I could have replaced it with something else well yes almost certainly I",
    "start": "2330280",
    "end": "2336640"
  },
  {
    "text": "probably could have containerized bind and I could have used Unbound another",
    "start": "2336640",
    "end": "2341740"
  },
  {
    "text": "DNS resolver and probably several other Alternatives I chose DNS mask simply",
    "start": "2341740",
    "end": "2348339"
  },
  {
    "text": "because it seemed simplest to configure",
    "start": "2348339",
    "end": "2352079"
  },
  {
    "text": "yeah but after presenting this concept people often ask me Among Us uh what's",
    "start": "2355480",
    "end": "2362619"
  },
  {
    "text": "the point my firewall is wide open anyway and an attacker who needs to send",
    "start": "2362619",
    "end": "2368320"
  },
  {
    "text": "data out of my app which is an HTTP and no one would stop him",
    "start": "2368320",
    "end": "2373660"
  },
  {
    "text": "and I'm like yes that's another problem for another talk",
    "start": "2373660",
    "end": "2379480"
  },
  {
    "text": "and I have approaches to mitigate that as well to summarize very succinctly it involves",
    "start": "2379480",
    "end": "2386700"
  },
  {
    "text": "yet more layer 7 proxies some Azure style private links",
    "start": "2386700",
    "end": "2393660"
  },
  {
    "text": "regrettably my my talk on this topic was not approved for this conference so you",
    "start": "2393660",
    "end": "2399160"
  },
  {
    "text": "want to hear more about it but I have cards at my sleeve there as well",
    "start": "2399160",
    "end": "2405960"
  },
  {
    "text": "and a big reason for why it is so hard to maintain a strict outbound firewall",
    "start": "2407380",
    "end": "2413020"
  },
  {
    "text": "these days instead of modern containerized app will often consume some third-party API in the cloud like for",
    "start": "2413020",
    "end": "2420579"
  },
  {
    "text": "example Azure functions and if you do then you need to open outbound to a very big ipmask",
    "start": "2420579",
    "end": "2429000"
  },
  {
    "text": "um and an attacker is at Liberty to create his own Azure functions instance",
    "start": "2430180",
    "end": "2437160"
  },
  {
    "text": "and send traffic home to himself so if you have to allow all of azure functions",
    "start": "2437160",
    "end": "2443859"
  },
  {
    "text": "then your firewall is doomed",
    "start": "2443859",
    "end": "2449099"
  },
  {
    "text": "yes that was it there is time for questions",
    "start": "2451180",
    "end": "2457320"
  },
  {
    "text": "thank you foreign",
    "start": "2458380",
    "end": "2462780"
  },
  {
    "text": "what do you do with the data from from DNS mask like they refuse to collect it and use it for good very well collected",
    "start": "2467160",
    "end": "2475960"
  },
  {
    "text": "um I would maybe set up an alarm that triggers if some unexpected request",
    "start": "2475960",
    "end": "2481480"
  },
  {
    "text": "makes its way to the intercepting proxy I would certainly log it somewhere it's",
    "start": "2481480",
    "end": "2488680"
  },
  {
    "text": "uh it would be interesting it seems like a good indicator of compromise if there's something unexpected happening",
    "start": "2488680",
    "end": "2495280"
  },
  {
    "text": "yes it could of course be that you just forgot to to add something yes",
    "start": "2495280",
    "end": "2501460"
  },
  {
    "text": "so this DNS mask tool was it created for this purpose specifically",
    "start": "2509140",
    "end": "2516160"
  },
  {
    "text": "um no um the primary purpose is again performance optimization minimized",
    "start": "2516160",
    "end": "2521920"
  },
  {
    "text": "redundant DNS requests it was published in 2002 it's really old",
    "start": "2521920",
    "end": "2528720"
  },
  {
    "text": "published before Dan kaminsky's talk where he uh the lord of the world of the NS tunneling",
    "start": "2528880",
    "end": "2535839"
  },
  {
    "text": "okay a follow-up question on that your Implement your implementation now is uh",
    "start": "2535839",
    "end": "2541060"
  },
  {
    "text": "was that open source and yes it is is it used anywhere else",
    "start": "2541060",
    "end": "2546220"
  },
  {
    "text": "as you know no it's not so the the Radix platform it's",
    "start": "2546220",
    "end": "2554140"
  },
  {
    "text": "um it is inspired by similar projects that uh nav and Finn but it is our own",
    "start": "2554140",
    "end": "2562359"
  },
  {
    "text": "product and uh it is not being operated anywhere else",
    "start": "2562359",
    "end": "2568300"
  },
  {
    "text": "in Equinox and my implementation of this feature it's only compatible with our platform",
    "start": "2568300",
    "end": "2575520"
  },
  {
    "text": "okay seems like we're out of questions thank you [Applause]",
    "start": "2590859",
    "end": "2602199"
  }
]