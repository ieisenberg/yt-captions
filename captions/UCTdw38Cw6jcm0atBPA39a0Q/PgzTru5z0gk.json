[
  {
    "text": "my name's Mitchell - Brooke I've been doing mobile for a few years now a",
    "start": "9920",
    "end": "15780"
  },
  {
    "text": "mixture of xamarin and Java Android and for about last year really been kind of",
    "start": "15780",
    "end": "22529"
  },
  {
    "text": "digging in to react native especially working in the Android space often will",
    "start": "22529",
    "end": "30000"
  },
  {
    "text": "work on lots and lots of features which are very similar to Android and iOS and",
    "start": "30000",
    "end": "36239"
  },
  {
    "text": "having done xamarin before you kind of feel like you're wasting bed time late there are definitely features in mobile",
    "start": "36239",
    "end": "42840"
  },
  {
    "text": "where you need to be really on the metal like the games a really good example of",
    "start": "42840",
    "end": "47940"
  },
  {
    "text": "this but then there's lots of other stuff where you just don't need to be kind of at the metal like how many",
    "start": "47940",
    "end": "56090"
  },
  {
    "text": "powered II need to render someone's like profile screen or their settings pages and things not really that much so this",
    "start": "56090",
    "end": "67350"
  },
  {
    "text": "is a phrase I think people have loved and hated since probably the late 90s is",
    "start": "67350",
    "end": "72780"
  },
  {
    "text": "the write once run anywhere slogan from Java and people always kind of say it as",
    "start": "72780",
    "end": "78119"
  },
  {
    "text": "a write-once debug everywhere but that that's I never really found that to be",
    "start": "78119",
    "end": "84600"
  },
  {
    "text": "the case like the JVM kind of does give you like a nice abstraction and the stuff did break on the platforms it was",
    "start": "84600",
    "end": "90810"
  },
  {
    "text": "broken in the JVM itself like the Java code generally kind of worked across all the platforms fairly well but the",
    "start": "90810",
    "end": "101100"
  },
  {
    "text": "problem we kind of run into in the in the mobile space when developing mobile apps is that we have what I like to call",
    "start": "101100",
    "end": "106560"
  },
  {
    "text": "full Native isolation so not only uh we don't have any kind of shared runtime",
    "start": "106560",
    "end": "112680"
  },
  {
    "text": "like you don't get you at the JVM on iOS like Apple just won't let you so we were",
    "start": "112680",
    "end": "117930"
  },
  {
    "text": "istic disliked on iOS you kind of stuck with objective-c Swift C++ Android",
    "start": "117930",
    "end": "123689"
  },
  {
    "text": "you've got Java a Kotla and C++ and the web now actually has C++ have web assembler so we really do have language",
    "start": "123689",
    "end": "133440"
  },
  {
    "text": "that kind of goes everywhere and we've had it since probably like the 80s and C and C++ but no one wants to write in it",
    "start": "133440",
    "end": "139709"
  },
  {
    "text": "like it's a really powerful language but it's also a really low level",
    "start": "139709",
    "end": "145209"
  },
  {
    "text": "language there's lots of stuff that you have to do manually and I don't know about you but I kind of like having my",
    "start": "145209",
    "end": "151000"
  },
  {
    "text": "high level language that takes care of all the memory management and things for me so we've got a few solutions which I",
    "start": "151000",
    "end": "160750"
  },
  {
    "text": "would say native cross-platform solutions so we've got xamarin which",
    "start": "160750",
    "end": "166209"
  },
  {
    "text": "will take netcode and on iOS we'll actually compile it down to arm code so it's running in the same way that",
    "start": "166209",
    "end": "173019"
  },
  {
    "text": "objective-c does and objective-c talks to a C API love the time reacts native",
    "start": "173019",
    "end": "181379"
  },
  {
    "text": "is using javascript on the on the net on the platforms and then interacting with",
    "start": "181379",
    "end": "187450"
  },
  {
    "text": "them via a native bridge the same with native scripts flosser is just one in",
    "start": "187450",
    "end": "193090"
  },
  {
    "text": "here that Google is working on so flutter is interesting in that the top free used the native UI toolkits that",
    "start": "193090",
    "end": "200349"
  },
  {
    "text": "already exists in the platform so they're using the native UIs flotter has a OpenGL rendering engine",
    "start": "200349",
    "end": "207459"
  },
  {
    "text": "and it's just rendering it's everything it's entirety of your eye so if you've ever seen people talk about how they've",
    "start": "207459",
    "end": "213280"
  },
  {
    "text": "used unity to make apps with I guess flutter is kind of moving towards this",
    "start": "213280",
    "end": "219220"
  },
  {
    "text": "idea that we have a GPU on all these devices so why do we need to keep reinventing the UI toolkit every time",
    "start": "219220",
    "end": "227760"
  },
  {
    "text": "this really succinctly describes the challenge I've had we've compiled",
    "start": "229560",
    "end": "236050"
  },
  {
    "text": "cross-platform tools wherever it be C++ xamarin this is",
    "start": "236050",
    "end": "241870"
  },
  {
    "text": "especially a problem in Android the ant and Google noses so they're working on it but at the moment if you try and",
    "start": "241870",
    "end": "248170"
  },
  {
    "text": "build a large application it will take several minutes and if you're someone like uber a large application for them",
    "start": "248170",
    "end": "254769"
  },
  {
    "text": "takes about 40 to 50 minutes to compile so imagine making a code change and then",
    "start": "254769",
    "end": "260290"
  },
  {
    "text": "having to basically go to lunch every time to see if you actually your program will actually compile it's not really",
    "start": "260290",
    "end": "266889"
  },
  {
    "text": "practical in fact this kind of got to the point where like is taking 40 minutes consistently enough where they",
    "start": "266889",
    "end": "273070"
  },
  {
    "text": "actually had to rewrite the build tools for Android von Schlieffen had made some",
    "start": "273070",
    "end": "280240"
  },
  {
    "text": "headway in this and that Facebook had already gone down this path so uber just had to build on top of Facebook stuff",
    "start": "280240",
    "end": "286270"
  },
  {
    "text": "and were able to get their compiled down to a few seconds but with languages like JavaScript you don't have for the most",
    "start": "286270",
    "end": "293470"
  },
  {
    "text": "plate you don't have a compile step you've got things like Babel which allow you to use newer features that compiles",
    "start": "293470",
    "end": "299560"
  },
  {
    "text": "them backwards but there's the compile times and JavaScript are really quite small so what is react so just a really",
    "start": "299560",
    "end": "309070"
  },
  {
    "text": "quick brief history about like what react is so react kind of appeared in",
    "start": "309070",
    "end": "314080"
  },
  {
    "text": "2011 at Facebook originally was actually meant to be a PHP server side rendering framework but then eventually moved into",
    "start": "314080",
    "end": "322120"
  },
  {
    "text": "a kind of what people call isomorphic a universal rendering framework was just JavaScript you could",
    "start": "322120",
    "end": "329229"
  },
  {
    "text": "render on the browser or on the back end and in 2013 Facebook released reacts to",
    "start": "329229",
    "end": "337300"
  },
  {
    "text": "a kind of meh response because in reacts your JavaScript and your HTML and your",
    "start": "337300",
    "end": "344139"
  },
  {
    "text": "CSS kind of all live together and this was so against the grain at the time that the initial release of reacts was",
    "start": "344139",
    "end": "351760"
  },
  {
    "text": "met with almost hostility to a certain extent 2015 Facebook released the react",
    "start": "351760",
    "end": "359440"
  },
  {
    "text": "native for their ads app that they had so again like this is a an app where the",
    "start": "359440",
    "end": "367150"
  },
  {
    "text": "you don't need to be as close to the metal not to say that reacts not performant but there is definitely",
    "start": "367150",
    "end": "372430"
  },
  {
    "text": "benefits of being right against the runtime that you're targeting and react",
    "start": "372430",
    "end": "377680"
  },
  {
    "text": "native is now starting to target other platforms such as Windows Mac OS and Ubuntu so you can stay I start writing",
    "start": "377680",
    "end": "383560"
  },
  {
    "text": "native apps not just for the mobile platform but for the desktop as well so",
    "start": "383560",
    "end": "391000"
  },
  {
    "text": "in react everything is a component and the component is basically a way to",
    "start": "391000",
    "end": "397419"
  },
  {
    "text": "describe what it is that you want to be rendered so in this case we a component",
    "start": "397419",
    "end": "406360"
  },
  {
    "text": "is for the most part most of your components are only going to have a render function and the render is the",
    "start": "406360",
    "end": "411550"
  },
  {
    "text": "declaration of the UI so in this case we have a view which is wrapping a text so",
    "start": "411550",
    "end": "418320"
  },
  {
    "text": "this is JSX and this is the thing that caused the bit of controversy and that",
    "start": "418320",
    "end": "423639"
  },
  {
    "text": "you can see that the name here has kind of got this kind of handlebar syntax so we're escaping the XML inside our render",
    "start": "423639",
    "end": "429729"
  },
  {
    "text": "function to put JavaScript kind of in line the way in which you talk to a",
    "start": "429729",
    "end": "437440"
  },
  {
    "text": "component is via the props and the props information that you pass into a",
    "start": "437440",
    "end": "442750"
  },
  {
    "text": "component in this sense we have just",
    "start": "442750",
    "end": "447880"
  },
  {
    "text": "created an object here called talk and we have our component and the way in",
    "start": "447880",
    "end": "452889"
  },
  {
    "text": "which the you map the data from the outside into a component is via the kind",
    "start": "452889",
    "end": "459550"
  },
  {
    "text": "of attributes style syntax so it's very XML in this respects is kind of similar",
    "start": "459550",
    "end": "465610"
  },
  {
    "text": "to HTML and this in some ways reflects it's kind of origin is like HTML based",
    "start": "465610",
    "end": "471520"
  },
  {
    "text": "rendering framework so you can see on the left here so right",
    "start": "471520",
    "end": "481470"
  },
  {
    "text": "that it's going to take that's JSX and then it come creates",
    "start": "482060",
    "end": "488040"
  },
  {
    "text": "adjacent object with it and then it passes that json object into our component here because it's JavaScript",
    "start": "488040",
    "end": "495450"
  },
  {
    "text": "there's like a million ways to do things if you don't want to specify each individual attribute if you object satisfies the properties that you need",
    "start": "495450",
    "end": "502080"
  },
  {
    "text": "you can use the spread operator sorry that's this triple dots here and then",
    "start": "502080",
    "end": "511110"
  },
  {
    "text": "once we in the render function of our talk component here we can then access",
    "start": "511110",
    "end": "517349"
  },
  {
    "text": "the props by the this attribute so the properties are always guaranteed to be",
    "start": "517349",
    "end": "523380"
  },
  {
    "text": "on the thing I think component so in this case we need to this stop props ID",
    "start": "523380",
    "end": "529140"
  },
  {
    "text": "name and title so how do you update the",
    "start": "529140",
    "end": "534240"
  },
  {
    "text": "props and the simple matter is you don't props always come from outside but what",
    "start": "534240",
    "end": "542130"
  },
  {
    "text": "you do is you have another mechanism called state a stateful component is one",
    "start": "542130",
    "end": "548820"
  },
  {
    "text": "where it can update either itself or can update its children so if you change the station of a component and that changes",
    "start": "548820",
    "end": "556530"
  },
  {
    "text": "the properties that you're passing down to as children and then re passes the properties down to the children again in",
    "start": "556530",
    "end": "562700"
  },
  {
    "text": "this case the state is very much optional you have to either declare it",
    "start": "562700",
    "end": "569820"
  },
  {
    "text": "as a property on your object ahead of time or you have to assign it inside the constructor the way in which you update",
    "start": "569820",
    "end": "580110"
  },
  {
    "text": "the state is you called the set state function now the set state function takes two different arguments I've it",
    "start": "580110",
    "end": "586440"
  },
  {
    "text": "takes a lambda with a single argument itself which contains the previous properties sorry the previous states",
    "start": "586440",
    "end": "592590"
  },
  {
    "text": "that it was given or you can pass a paste pass it adjacent objects I will truly",
    "start": "592590",
    "end": "600060"
  },
  {
    "text": "recommend using the lambda function because the set state is actually a",
    "start": "600060",
    "end": "605220"
  },
  {
    "text": "synchronous function and if you call it multiple times it will actually compose",
    "start": "605220",
    "end": "610410"
  },
  {
    "text": "all the records together and if you're not looking at what the previous value was which it will always give you the",
    "start": "610410",
    "end": "616920"
  },
  {
    "text": "previous one that you gave it you can end up kind of obfuscating values kind",
    "start": "616920",
    "end": "623580"
  },
  {
    "text": "of before the component will actually re-render on the screen so this is just",
    "start": "623580",
    "end": "632280"
  },
  {
    "text": "a nice little demo showing that when you call the set state so it says state you can access the same way as the props",
    "start": "632280",
    "end": "637740"
  },
  {
    "text": "where it's just this dot state instead of this dot props and that's the whole",
    "start": "637740",
    "end": "645660"
  },
  {
    "text": "example together so where would you use",
    "start": "645660",
    "end": "652230"
  },
  {
    "text": "the props versus the state this is something I really struggle with for a bit and I think people struggle with a",
    "start": "652230",
    "end": "657630"
  },
  {
    "text": "lot when they're getting into react State you really want to kind of be",
    "start": "657630",
    "end": "665220"
  },
  {
    "text": "hesitant about using States because in a react application you're generally",
    "start": "665220",
    "end": "670290"
  },
  {
    "text": "better off passing actions down the tree so by an action I mean like I click",
    "start": "670290",
    "end": "677460"
  },
  {
    "text": "handler so you have all your logic kind of sitting up at the root and then you're passing the entirety of your",
    "start": "677460",
    "end": "683610"
  },
  {
    "text": "application State down the tree so when you want to set States you generally want to do this in a container component",
    "start": "683610",
    "end": "690780"
  },
  {
    "text": "so contain a component kind of defines the behavior of all its children in a simple application just the route itself",
    "start": "690780",
    "end": "697890"
  },
  {
    "text": "can be the container and everything in between is really just a component for presentation so it's just a way of",
    "start": "697890",
    "end": "704040"
  },
  {
    "text": "taking the data at that level breaking it down to something that makes sense and then rendering to the screen and",
    "start": "704040",
    "end": "710700"
  },
  {
    "text": "declaring what children you want the other thing is to have like form",
    "start": "710700",
    "end": "716490"
  },
  {
    "text": "elements are a good place where you want to use state in reacts this idea of uni-directional dataflow is very common",
    "start": "716490",
    "end": "723290"
  },
  {
    "text": "and there's also the Redux framework which allows you to add extra features",
    "start": "723290",
    "end": "728970"
  },
  {
    "text": "to this paradigm but it becomes a little bit expensive to kind of always go all",
    "start": "728970",
    "end": "735870"
  },
  {
    "text": "the way up to the top so in a form when you want to validate the input that's",
    "start": "735870",
    "end": "740880"
  },
  {
    "text": "only something that logic is only really relevant to that form input and then",
    "start": "740880",
    "end": "746190"
  },
  {
    "text": "that says I would probably here's what I tend to call a self-contained component where you do",
    "start": "746190",
    "end": "752620"
  },
  {
    "text": "all use the set state to update the component and then when the validity of",
    "start": "752620",
    "end": "757810"
  },
  {
    "text": "the component changes then you can propagate it back up to the root so how",
    "start": "757810",
    "end": "766090"
  },
  {
    "text": "does react native work so this tends to",
    "start": "766090",
    "end": "771580"
  },
  {
    "text": "be a question that gets asked a lot when people kind of come across react native we've had for a while solutions like",
    "start": "771580",
    "end": "777610"
  },
  {
    "text": "Cordova which use a webview and then some C bindings to then call into the framework react doesn't actually use",
    "start": "777610",
    "end": "784510"
  },
  {
    "text": "this reacts is actually mostly native code only about 40% of react native out",
    "start": "784510",
    "end": "791350"
  },
  {
    "text": "of the box is actually JavaScript the rest of it is the C++ and C which is",
    "start": "791350",
    "end": "797170"
  },
  {
    "text": "common across both the platforms and the objective-c in Java a lot of the",
    "start": "797170",
    "end": "802750"
  },
  {
    "text": "objective-c in Java is binding code for the native platforms so when you compile a react native for Android you only get",
    "start": "802750",
    "end": "810700"
  },
  {
    "text": "the C and Java code and vice-versa for iOS so the way in which this all kind of",
    "start": "810700",
    "end": "817450"
  },
  {
    "text": "gets brought together is that the Java Script kind of lives on its own thread soul is in the JavaScript Fred and then",
    "start": "817450",
    "end": "823210"
  },
  {
    "text": "we have a C++ thread in the middle and then the native UI platform living on",
    "start": "823210",
    "end": "829630"
  },
  {
    "text": "the main thread and whenever JavaScript wants to do something so when it was",
    "start": "829630",
    "end": "835660"
  },
  {
    "text": "update the UI it will send a message across to the C++ to then communicate to",
    "start": "835660",
    "end": "841000"
  },
  {
    "text": "the native platform that it wants to update the user interface so on both",
    "start": "841000",
    "end": "853390"
  },
  {
    "text": "Android and iOS of course we can't use a webview we're actually using the Jas core which is the actual JavaScript",
    "start": "853390",
    "end": "861070"
  },
  {
    "text": "virtual machine the powers Safari in both mobile and desktop because the",
    "start": "861070",
    "end": "872110"
  },
  {
    "text": "Safari may not the sorry the J's core may not be as up today is what you'd",
    "start": "872110",
    "end": "877150"
  },
  {
    "text": "expect react native comes with babel Jas out-of-the-box if you're not familiar payable Jas it's source-code transpiler which takes",
    "start": "877150",
    "end": "885279"
  },
  {
    "text": "newer features of java scripts and then emulates them in older versions of the runtime javascript doesn't actually have",
    "start": "885279",
    "end": "891730"
  },
  {
    "text": "any versioning so you it's really up to the runtime to kind of you have to",
    "start": "891730",
    "end": "897459"
  },
  {
    "text": "inspect your runtime to make sure that it's the version you want and the only way to do this is to ask for functions",
    "start": "897459",
    "end": "903309"
  },
  {
    "text": "to see if they actually exist so unfortunately a lot of that's taken care of for you so we've seen view a few",
    "start": "903309",
    "end": "912939"
  },
  {
    "text": "times now so in react native we are using actual native UI controls so the base component",
    "start": "912939",
    "end": "920679"
  },
  {
    "text": "that uses like view and textview will actually bind to native UI components so in iOS u they will usually have a UI",
    "start": "920679",
    "end": "927970"
  },
  {
    "text": "view some components will bind other things such as like UI controllers and",
    "start": "927970",
    "end": "933040"
  },
  {
    "text": "things and the Android was using the androids native view itself now to get",
    "start": "933040",
    "end": "939790"
  },
  {
    "text": "started if we act now if you don't actually need any of the tool chain you don't need Android studio don't need",
    "start": "939790",
    "end": "945339"
  },
  {
    "text": "the Android SDKs you don't need Xcode to get started we can use this create",
    "start": "945339",
    "end": "951669"
  },
  {
    "text": "reaction native app from NPM so if you're not for me if M p.m. it's the no package manager so if you familiar",
    "start": "951669",
    "end": "958269"
  },
  {
    "text": "things like chuckle your brew or you get that's pretty much what NPM is and this",
    "start": "958269",
    "end": "966850"
  },
  {
    "text": "work so in this case I don't actually have any King I don't actually need anything installed to be able to run the",
    "start": "966850",
    "end": "973269"
  },
  {
    "text": "app in this case I'm using I have the iOS simulator which means that do you actually have Xcode installed but you",
    "start": "973269",
    "end": "979600"
  },
  {
    "text": "could plug in a real device and actually get it running so you can also see that",
    "start": "979600",
    "end": "986679"
  },
  {
    "text": "if you get something wrong it doesn't actually crash the application it will actually tell you what's wrong and give",
    "start": "986679",
    "end": "992289"
  },
  {
    "text": "you a chance to fix it in this case we're gonna text has to be inside a text",
    "start": "992289",
    "end": "999160"
  },
  {
    "text": "XML tag so we have to do that and that's using an app called expo so expo is an",
    "start": "999160",
    "end": "1008879"
  },
  {
    "text": "application where it has all the react native code bundled with it already",
    "start": "1008879",
    "end": "1014160"
  },
  {
    "text": "and you just need to send across your bundle JavaScript it will then unpack it",
    "start": "1014160",
    "end": "1019920"
  },
  {
    "text": "and then run it on the device if you do",
    "start": "1019920",
    "end": "1028439"
  },
  {
    "text": "want to go for the full tooling so you want to compile the projects you need to install the react native CLA and that",
    "start": "1028440",
    "end": "1035339"
  },
  {
    "text": "gives you all the tools you need to be actually be able to compile a project and release it to the App Store so expo",
    "start": "1035339",
    "end": "1041430"
  },
  {
    "text": "has its own kind of virtual app store inside the app so you can actually release a kind of beta product about",
    "start": "1041430",
    "end": "1047850"
  },
  {
    "text": "actually having to go for the entire process of going through the App Store release process apples one is a little",
    "start": "1047850",
    "end": "1053550"
  },
  {
    "text": "bit challenging Google ones is a lot simpler so you know I have to go for that expo will help you in that regard",
    "start": "1053550",
    "end": "1059760"
  },
  {
    "text": "as well so react native uses styling",
    "start": "1059760",
    "end": "1066300"
  },
  {
    "text": "which looks and feels very similar to CSS in this case we're setting the",
    "start": "1066300",
    "end": "1072060"
  },
  {
    "text": "background color and we're using flex so if you're not for me what flex is",
    "start": "1072060",
    "end": "1077450"
  },
  {
    "text": "flexbox is a layout specification which originally was in the web but we're now",
    "start": "1077450",
    "end": "1083670"
  },
  {
    "text": "seeing implementations for native platforms because it's the algorithms and the flexbox are quite nice to be",
    "start": "1083670",
    "end": "1090030"
  },
  {
    "text": "able to effectively layout stuff in the cheap cheap man",
    "start": "1090030",
    "end": "1097130"
  },
  {
    "text": "so in this case we've got our parent component which we're saying is a flex one so flex one says I want you to fill",
    "start": "1101090",
    "end": "1108480"
  },
  {
    "text": "all the available space that's available to you and if we specify siblings with",
    "start": "1108480",
    "end": "1113490"
  },
  {
    "text": "Flex values as well it'll actually kind of add them all up and then give you a ratio so in this case we have the first",
    "start": "1113490",
    "end": "1120150"
  },
  {
    "text": "one is will be a six two six and so on",
    "start": "1120150",
    "end": "1125250"
  },
  {
    "text": "to end up with something like this so it's creeped our falinda structure",
    "start": "1125250",
    "end": "1130740"
  },
  {
    "text": "everything there's a little bit of a drawback in that the style is similar to",
    "start": "1130740",
    "end": "1137610"
  },
  {
    "text": "the classes you tend to get this in CSS as well so there's a few solutions in",
    "start": "1137610",
    "end": "1142950"
  },
  {
    "text": "the react for web which try to allow you to have a much more dynamic flow by",
    "start": "1142950",
    "end": "1148770"
  },
  {
    "text": "assigning the styles it's kind of hard it also makes the XML a lot more difficult to read so in which case I",
    "start": "1148770",
    "end": "1156390"
  },
  {
    "text": "strongly suggest that even though you might just begin start off react native install style components because it",
    "start": "1156390",
    "end": "1163050"
  },
  {
    "text": "gives you a much more flexible way of creating themes for your application so",
    "start": "1163050",
    "end": "1171050"
  },
  {
    "text": "the back tick here is a very JavaScript thing and it's called it's a string",
    "start": "1171050",
    "end": "1177000"
  },
  {
    "text": "interpolated function you can't Google this it's like trying to Google Haskell symbols sometimes I think we need like a",
    "start": "1177000",
    "end": "1186090"
  },
  {
    "text": "Java scripts kind of look up for some of the bizarre syntax that we get the language is becoming quite big now one",
    "start": "1186090",
    "end": "1193200"
  },
  {
    "text": "the other reason I strongly recommend style components is because you can create these base themes and then you",
    "start": "1193200",
    "end": "1198780"
  },
  {
    "text": "can extend them but only that but it also means that when you have a style component it actually creates a",
    "start": "1198780",
    "end": "1207660"
  },
  {
    "text": "component for you on the fly so you can now start to have much more semantic kind of XML hierarchies rather than just",
    "start": "1207660",
    "end": "1214680"
  },
  {
    "text": "having nested views with style tags all over the place you can start to have almost kind of readable kind of",
    "start": "1214680",
    "end": "1220560"
  },
  {
    "text": "structure to your application so there's there's two ways to do lists",
    "start": "1220560",
    "end": "1226590"
  },
  {
    "text": "of data there's actually a third way called a list view it's kind of almost",
    "start": "1226590",
    "end": "1232409"
  },
  {
    "text": "officially deprecated now but you have a small set of data with flexbox you can",
    "start": "1232409",
    "end": "1238409"
  },
  {
    "text": "kind of layout things in a nice vertical manner of tail easily and cheaply so for small sets of data for a list I'd",
    "start": "1238409",
    "end": "1244889"
  },
  {
    "text": "probably choose a scroll view if you need a much more larger set or kind of infinite scroll the flat list and",
    "start": "1244889",
    "end": "1251309"
  },
  {
    "text": "section lists are the official ways to do any kind of lists so this is just how",
    "start": "1251309",
    "end": "1259529"
  },
  {
    "text": "we can use a flat list that's the API is fairly simple we have a render function and then we just give us some data now",
    "start": "1259529",
    "end": "1269029"
  },
  {
    "text": "react native doesn't actually come with navigation out-of-the-box comes with no navigation out-of-the-box this I kindly",
    "start": "1269029",
    "end": "1277200"
  },
  {
    "text": "goes back to the kind of ideal that especially on the web react is a library",
    "start": "1277200",
    "end": "1282629"
  },
  {
    "text": "not a framework so everything is kind of a choose-your-own-adventure and react",
    "start": "1282629",
    "end": "1288479"
  },
  {
    "text": "and this is also true and react native in fact when I started learning reacts this exact half this exact thing",
    "start": "1288479",
    "end": "1293789"
  },
  {
    "text": "happened to me at about six months into my journey they changed the official",
    "start": "1293789",
    "end": "1299239"
  },
  {
    "text": "third-party navigation library and there's not just one of them there's a",
    "start": "1299239",
    "end": "1304649"
  },
  {
    "text": "few of them so react navigation is kind of like the default one they suggest for everybody and it's all done inside",
    "start": "1304649",
    "end": "1311249"
  },
  {
    "text": "JavaScript so if you've used the MVC app it's using react navigation but because",
    "start": "1311249",
    "end": "1317549"
  },
  {
    "text": "it's using react navigation you end up with some odd behaviors so if you switch the days you'll notice that the scroll",
    "start": "1317549",
    "end": "1323159"
  },
  {
    "text": "view remains in the same place and that's because reactors trying to be helpful and that it's trying to save",
    "start": "1323159",
    "end": "1331369"
  },
  {
    "text": "having to make the app scroll so if you wanted to have that more kind of neat behavior you would have to tell that",
    "start": "1331369",
    "end": "1338309"
  },
  {
    "text": "tell the navigation that you also wanted to scroll up to the top when you want change the days there's Wix navigations",
    "start": "1338309",
    "end": "1346470"
  },
  {
    "text": "- Wix I believe a fairly big consultancy so they've probably got the most complete navigation solution so what",
    "start": "1346470",
    "end": "1354059"
  },
  {
    "text": "they've done is they've built a bunch of native navigation components and then builds a bunch of bill for the",
    "start": "1354059",
    "end": "1359560"
  },
  {
    "text": "JavaScript bindings for you Airbnb probably have the most well-known native implementation but if you",
    "start": "1359560",
    "end": "1365860"
  },
  {
    "text": "actually go to the github page they tell you to go use Wix because they haven't actually completely open-source their",
    "start": "1365860",
    "end": "1371950"
  },
  {
    "text": "own solution yet and this other stuff which is very specific to them which probably isn't very good for a",
    "start": "1371950",
    "end": "1377980"
  },
  {
    "text": "general-purpose application navigation if you are like developing for iOS that",
    "start": "1377980",
    "end": "1383980"
  },
  {
    "text": "native iOS navigation is really good but it doesn't work in Android so kind of",
    "start": "1383980",
    "end": "1389350"
  },
  {
    "text": "defeats the purpose of trying to be cross-platform so react navigation is",
    "start": "1389350",
    "end": "1397480"
  },
  {
    "text": "probably the easiest one to get started with and out of the box that comes a free kind of navigation dynamics a stack",
    "start": "1397480",
    "end": "1403330"
  },
  {
    "text": "which is you can generally think of it the same way you have like an Android application we get from screen to screen",
    "start": "1403330",
    "end": "1408990"
  },
  {
    "text": "tabs tabs is quite nice because you can actually stacked them so if your tabs at the bottom and at the top you can have",
    "start": "1408990",
    "end": "1416350"
  },
  {
    "text": "both and then you've got the drawer out which is your standard kind of click on menu comes out at side of the screen so",
    "start": "1416350",
    "end": "1425140"
  },
  {
    "text": "the stack navigation supports the idea of titles so you can have both dynamic",
    "start": "1425140",
    "end": "1430660"
  },
  {
    "text": "and stake titles so the dynamic title when you navigate to a screen will pass",
    "start": "1430660",
    "end": "1436240"
  },
  {
    "text": "in the props and inside the props the you can specify data that gets passed to",
    "start": "1436240",
    "end": "1445360"
  },
  {
    "text": "it and instead of being in this dot props you have two dango props",
    "start": "1445360",
    "end": "1450490"
  },
  {
    "text": "navigation state parameters users this tends to happen a bit and reacts",
    "start": "1450490",
    "end": "1455920"
  },
  {
    "text": "especially if the unidirectional flow you tend to have these very large objects and the hole generally you want",
    "start": "1455920",
    "end": "1461620"
  },
  {
    "text": "to have it so that your UI sits at one level of this tree going down so this is",
    "start": "1461620",
    "end": "1471940"
  },
  {
    "text": "how we can set up a navigation stack so we just it's just a JSON object by",
    "start": "1471940",
    "end": "1477520"
  },
  {
    "text": "default it will give you the first item in the JSON object if you want to",
    "start": "1477520",
    "end": "1482710"
  },
  {
    "text": "specify in this case the profile screen has been the first item you pass that in as the second parameter that you need to",
    "start": "1482710",
    "end": "1488050"
  },
  {
    "text": "specify with so the reacts navigation is also a component so you tend to find that a lot",
    "start": "1488050",
    "end": "1496140"
  },
  {
    "text": "of react API is things tend to be components and this is so that you can mix stuff into your application without",
    "start": "1496140",
    "end": "1502950"
  },
  {
    "text": "having to kind of go outside the react paradigm which is that pretty much everything lives inside the render",
    "start": "1502950",
    "end": "1508380"
  },
  {
    "text": "function so if you want to go back again",
    "start": "1508380",
    "end": "1515730"
  },
  {
    "text": "that's on the props object so navigation is only passed to the direct child of",
    "start": "1515730",
    "end": "1520950"
  },
  {
    "text": "navigation so if you want like the grandchild in a navigator tree so if you",
    "start": "1520950",
    "end": "1526290"
  },
  {
    "text": "have a navigation screen which has several children and the third child down that tree has a button you have to",
    "start": "1526290",
    "end": "1532980"
  },
  {
    "text": "pass the callback for for calling the go",
    "start": "1532980",
    "end": "1538350"
  },
  {
    "text": "back calling the go back function or the",
    "start": "1538350",
    "end": "1543450"
  },
  {
    "text": "navigate function down the tree because navigate won't be passed out and by default unless you pass down all the",
    "start": "1543450",
    "end": "1549300"
  },
  {
    "text": "props in the tree again",
    "start": "1549300",
    "end": "1555870"
  },
  {
    "text": "that's a duplicate slide",
    "start": "1555870",
    "end": "1559130"
  },
  {
    "text": "all right I mentioned Redux a few times Redux is a very nice implementation of",
    "start": "1561610",
    "end": "1569860"
  },
  {
    "text": "estate management system even the unidirectional data flow kind of management but it also tends to be",
    "start": "1569860",
    "end": "1577929"
  },
  {
    "text": "incredibly verbose because what it effectively means is that because in the",
    "start": "1577929",
    "end": "1583059"
  },
  {
    "text": "unidirectional data flow you have all your data at the root you also have to have all the actions that can possibly",
    "start": "1583059",
    "end": "1589960"
  },
  {
    "text": "happen at the root which means for every possible action your application has you basically end up with these giant switch",
    "start": "1589960",
    "end": "1596169"
  },
  {
    "text": "statements throughout your application they're Redux is quite nice and that you can split these up into multiple files but again you still have lots and lots",
    "start": "1596169",
    "end": "1603010"
  },
  {
    "text": "of code that you need to do to do what normally used to be fairly simple things and but it can become helpful if your",
    "start": "1603010",
    "end": "1613299"
  },
  {
    "text": "application becomes really really big but generally I try to keep the kind of state management to a kind of per screen",
    "start": "1613299",
    "end": "1620830"
  },
  {
    "text": "level and in a mobile application is only so much data you can put on a single screen so that tends to work",
    "start": "1620830",
    "end": "1626290"
  },
  {
    "text": "fairly well so set state in the root",
    "start": "1626290",
    "end": "1631720"
  },
  {
    "text": "component and has probably good enough that's kind of what you get with free Docs you have much larger application if",
    "start": "1631720",
    "end": "1636730"
  },
  {
    "text": "you need to be able to handle asynchronous flows they would recommend using rxjs I would say it's probably bit easier to",
    "start": "1636730",
    "end": "1645429"
  },
  {
    "text": "kind of and less verbose to use it for doing kind of asynchronous flows and being able to kind of get the data back",
    "start": "1645429",
    "end": "1652120"
  },
  {
    "text": "in a sane manner it also supports cancellation which can be a little bit tricky in Redux so you",
    "start": "1652120",
    "end": "1663130"
  },
  {
    "text": "still can't get away from the delete or bill cache and start again so she do have trouble with react native",
    "start": "1663130",
    "end": "1668380"
  },
  {
    "text": "application blowing away the cache is probably the best way the chrome",
    "start": "1668380",
    "end": "1673809"
  },
  {
    "text": "debugger helps but be careful because when you're using the chrome debugger sorry for context you can't actually",
    "start": "1673809",
    "end": "1681280"
  },
  {
    "text": "debug on the navy devices so what react native allows you to do is run the",
    "start": "1681280",
    "end": "1687100"
  },
  {
    "text": "application in the browser and then instead of running on J's corner of the device it's going to run in v8 in your",
    "start": "1687100",
    "end": "1692590"
  },
  {
    "text": "browser but it's a different virtual oisin so the behavior may change so if you're trying to bug something and the",
    "start": "1692590",
    "end": "1698780"
  },
  {
    "text": "bugs aren't happening in the current iboga but they are in the app then you'll find that that may just be due to",
    "start": "1698780",
    "end": "1705680"
  },
  {
    "text": "something right so I've been talking a",
    "start": "1705680",
    "end": "1718730"
  },
  {
    "text": "bit about the kind of greenfield experience that you get with react native for the most part reacts and",
    "start": "1718730",
    "end": "1724700"
  },
  {
    "text": "react native is fairly simple like navigation is pretty tricky state management is a bit hard but you don't",
    "start": "1724700",
    "end": "1731990"
  },
  {
    "text": "have to start from the ground up again and react native react native you can actually take just a single part of your",
    "start": "1731990",
    "end": "1738050"
  },
  {
    "text": "screen and have that just be a react native component so in this case I'm",
    "start": "1738050",
    "end": "1743360"
  },
  {
    "text": "just going to use like little simple Android application and to get started",
    "start": "1743360",
    "end": "1748970"
  },
  {
    "text": "we just need to make a package.json and the means they set up the start script",
    "start": "1748970",
    "end": "1755300"
  },
  {
    "text": "which is going to the start scripts just going to package up all the JavaScript for us install react and react native",
    "start": "1755300",
    "end": "1761030"
  },
  {
    "text": "and then we just need to configure it inside the Android project I have this in here because I actually ran into a",
    "start": "1761030",
    "end": "1767210"
  },
  {
    "text": "slight bug where it was installing the wrong binaries in the node modules so if",
    "start": "1767210",
    "end": "1773660"
  },
  {
    "text": "I specify the exact version of react native that I wanted it would actually go up to the Internet and pull down the",
    "start": "1773660",
    "end": "1779660"
  },
  {
    "text": "correct version and again we just need to tell the Android build tools where",
    "start": "1779660",
    "end": "1786590"
  },
  {
    "text": "the JavaScript lives the way in which we kind of tell the Android where our",
    "start": "1786590",
    "end": "1796280"
  },
  {
    "text": "components are is by a string name so in this case we're just going to have a component which is going to call counter",
    "start": "1796280",
    "end": "1801440"
  },
  {
    "text": "and then we're just going to register it with the at the react native application",
    "start": "1801440",
    "end": "1807340"
  },
  {
    "text": "then we need to create the react native instance manager so this is the thing that runs the JavaScript virtual machine",
    "start": "1807340",
    "end": "1813890"
  },
  {
    "text": "on the device for us so the packages is probably the most",
    "start": "1813890",
    "end": "1821720"
  },
  {
    "text": "important thing so this is the these are all the native dependencies that we want",
    "start": "1821720",
    "end": "1826940"
  },
  {
    "text": "for the application the rest of this is kind of just boilerplate that we need to do then we need to create a view in",
    "start": "1826940",
    "end": "1833809"
  },
  {
    "text": "Android so this is just the kind of a layout where we want to have Reax be rendered into no I actually had this",
    "start": "1833809",
    "end": "1843830"
  },
  {
    "text": "working earlier where are you alright so",
    "start": "1843830",
    "end": "1850070"
  },
  {
    "text": "this is a little application so in this case it's got this button here and I'm",
    "start": "1850070",
    "end": "1855230"
  },
  {
    "text": "just switching out the views natively Android studio right you can see here",
    "start": "1855230",
    "end": "1867860"
  },
  {
    "text": "that that container is the bottom view where we have everything and when we're",
    "start": "1867860",
    "end": "1874460"
  },
  {
    "text": "clicking the buttons we're actually replacing the react native use with the different ones so they're still sharing",
    "start": "1874460",
    "end": "1880220"
  },
  {
    "text": "the same react native instance manager but we're swapping out the views that we actually want to be using in this case",
    "start": "1880220",
    "end": "1888289"
  },
  {
    "text": "we've got our deke our decrement counter where if we click it we can see that the",
    "start": "1888289",
    "end": "1895460"
  },
  {
    "text": "counter goes down but all we're doing in the Android side of things is that we're just updating the Android",
    "start": "1895460",
    "end": "1902510"
  },
  {
    "text": "data base to say for anything to say take the existing counter and then",
    "start": "1902510",
    "end": "1907880"
  },
  {
    "text": "decrement it by one we actually have to go into the native code to see what is",
    "start": "1907880",
    "end": "1916549"
  },
  {
    "text": "actually happening so what we're doing",
    "start": "1916549",
    "end": "1921740"
  },
  {
    "text": "is we're actually polling the android framework I can't read that the back",
    "start": "1921740",
    "end": "1927010"
  },
  {
    "text": "nope alright let's turn this up 18 us",
    "start": "1927010",
    "end": "1935840"
  },
  {
    "text": "about that the Android thing earlier all right as that oh good oh cool so",
    "start": "1935840",
    "end": "1941410"
  },
  {
    "text": "we're just going to be polling the Android native UI oh sorry the Android",
    "start": "1941410",
    "end": "1946690"
  },
  {
    "text": "native code for an update of the database and every second we're just going to update the react native UI not",
    "start": "1946690",
    "end": "1952750"
  },
  {
    "text": "the most efficient way of doing things but it's simple enough for a demo it works consistently so the way which we",
    "start": "1952750",
    "end": "1961060"
  },
  {
    "text": "have to do that is we go into here so we",
    "start": "1961060",
    "end": "1969580"
  },
  {
    "text": "just need to extend the Reax context other let me put this so you can read it",
    "start": "1969580",
    "end": "1977399"
  },
  {
    "text": "it's a presentation right ah that's much better all right so we need to extend the react",
    "start": "1984780",
    "end": "1990100"
  },
  {
    "text": "native based context java module and then we just need to override two methods well we need to over a one",
    "start": "1990100",
    "end": "1996850"
  },
  {
    "text": "method which is to give it a name and if we go back to the Java Script we can see",
    "start": "1996850",
    "end": "2002850"
  },
  {
    "text": "that the native modules has an object on it called MT counter module so that's",
    "start": "2002850",
    "end": "2010560"
  },
  {
    "text": "this here so everything's kind of connected by strings because we're crossing a runtime there's not really anything else you can really use and",
    "start": "2010560",
    "end": "2016440"
  },
  {
    "text": "then we just need to register have this annotation which adds a method to our",
    "start": "2016440",
    "end": "2021720"
  },
  {
    "text": "module in which case we're accepting your callback we're reading the value from the native android database and",
    "start": "2021720",
    "end": "2027930"
  },
  {
    "text": "then we're giving the callback the value so that when this callback does fire",
    "start": "2027930",
    "end": "2033350"
  },
  {
    "text": "we're just going to update the state with the new counter value",
    "start": "2033350",
    "end": "2039140"
  },
  {
    "text": "so you dick room yes let's go one second poll so if we click it too fast you",
    "start": "2043269",
    "end": "2049310"
  },
  {
    "text": "actually see it jumps so there's more efficient ways of doing it but that's",
    "start": "2049310",
    "end": "2054679"
  },
  {
    "text": "the nice little simple way to kind of get things going alright so one of the",
    "start": "2054679",
    "end": "2062510"
  },
  {
    "text": "downsides about react native is that we're using javascript and i spent a lot",
    "start": "2062510",
    "end": "2068358"
  },
  {
    "text": "of time in java Android and xamarin so I spent a lot of time using static languages and Java scripting language so",
    "start": "2068359",
    "end": "2076550"
  },
  {
    "text": "does anyone know what happens if you plus two empty arrays this is the",
    "start": "2076550",
    "end": "2082128"
  },
  {
    "text": "interactive part of the presentation feel free shout out right now it's empty string so what about an empty",
    "start": "2082129",
    "end": "2091069"
  },
  {
    "text": "array plus an empty object it's object",
    "start": "2091069",
    "end": "2096679"
  },
  {
    "text": "of course now plus is associative so shouldn't matter that we change the",
    "start": "2096679",
    "end": "2101900"
  },
  {
    "text": "arguments around so does everybody know well if we happen if you have an empty object plus an empty array come on",
    "start": "2101900",
    "end": "2111700"
  },
  {
    "text": "anything zero so what about an empty",
    "start": "2111700",
    "end": "2118130"
  },
  {
    "text": "object - an empty object now this one is correct this one does give a correct answer it's not number and then we get",
    "start": "2118130",
    "end": "2130849"
  },
  {
    "text": "things like this we're like we're comparing their true is equal to any string which it contains some data so if",
    "start": "2130849",
    "end": "2138829"
  },
  {
    "text": "isn't true wouldn't be empty to an equal empty string and the reason we get this",
    "start": "2138829",
    "end": "2144589"
  },
  {
    "text": "kind of stuff is because JavaScript does have a type system but it's a runtime",
    "start": "2144589",
    "end": "2151400"
  },
  {
    "text": "type system so it works up the types at runtime so when you go plus it doesn't know what the types are on either side",
    "start": "2151400",
    "end": "2156829"
  },
  {
    "text": "and if you use the double if you use double equals and boolean equations it",
    "start": "2156829",
    "end": "2162380"
  },
  {
    "text": "will actually coerce the types into what it thinks it can actually compare so you",
    "start": "2162380",
    "end": "2167630"
  },
  {
    "text": "can end up with some really weird behavior and because the coercion is just this big switch statement it just",
    "start": "2167630",
    "end": "2173720"
  },
  {
    "text": "finds the first type it thinks it can compare you is that and then for the second argument does the same thing so you end up with this is really strange behaviour so we",
    "start": "2173720",
    "end": "2181150"
  },
  {
    "text": "get areas like undefined it's not a function that is true because undefined is a type and function is a type and",
    "start": "2181150",
    "end": "2187930"
  },
  {
    "text": "they're different types so yes undefined as my function is most hopeful error message but sources it's not wrong all",
    "start": "2187930",
    "end": "2195220"
  },
  {
    "text": "right let's talk about type systems so react native does have some typing that",
    "start": "2195220",
    "end": "2201430"
  },
  {
    "text": "you can use inside JavaScript so if you don't want to use language like typescript or something like that you",
    "start": "2201430",
    "end": "2208540"
  },
  {
    "text": "can actually enable it and it will just turn it off automatically in production but the way in which it works is you",
    "start": "2208540",
    "end": "2214900"
  },
  {
    "text": "have to import a library and then you create a JSON object which documents",
    "start": "2214900",
    "end": "2220380"
  },
  {
    "text": "what the types are that you're expecting for things so in this case the prop types is used on the props so when",
    "start": "2220380",
    "end": "2228550"
  },
  {
    "text": "you're passing data into your objects you tell it what information it should expect if it expects things that doesn't",
    "start": "2228550",
    "end": "2234010"
  },
  {
    "text": "think should be there it will actually throw warnings into the console so we",
    "start": "2234010",
    "end": "2239410"
  },
  {
    "text": "can specify optional strings required strings we can do union types we can do objects all sorts of fun stuff but I",
    "start": "2239410",
    "end": "2247210"
  },
  {
    "text": "prefer type scripts you can also use flow but with typescript we can still",
    "start": "2247210",
    "end": "2253000"
  },
  {
    "text": "use JavaScript we don't have to have a complicated bill chain but we can also have types so we can specify our",
    "start": "2253000",
    "end": "2258609"
  },
  {
    "text": "variables having a number a bit of a number type and it'll compile time will validate all our code for us by default",
    "start": "2258609",
    "end": "2268410"
  },
  {
    "text": "JavaScript is does not expect nulls so",
    "start": "2268410",
    "end": "2274119"
  },
  {
    "text": "if you do want to have something which is null you're integrating with a JavaScript library you can specify something's being knowable by default",
    "start": "2274119",
    "end": "2280950"
  },
  {
    "text": "types are actually not knowable you've got interfaces and types interfaces are",
    "start": "2280950",
    "end": "2288910"
  },
  {
    "text": "extendable types of fixed hierarchies",
    "start": "2288910",
    "end": "2293220"
  },
  {
    "text": "you can do function signatures you can do type Aylor seeing all that kind of fun stuff this is probably most useful",
    "start": "2294750",
    "end": "2301300"
  },
  {
    "text": "feature I find is you can do actual kind of type unions so you can specify a",
    "start": "2301300",
    "end": "2306490"
  },
  {
    "text": "series of strings a lot of JavaScript libraries will use string this way passing flags this can be a",
    "start": "2306490",
    "end": "2312460"
  },
  {
    "text": "little bit annoying because if you make a spelling mistake it's not obvious as to where they're it comes from and this",
    "start": "2312460",
    "end": "2318880"
  },
  {
    "text": "is somewhat specific to type scripts but type scripts this what's called structurally typed so the argument that",
    "start": "2318880",
    "end": "2324880"
  },
  {
    "text": "you pass in just has to satisfy the minimum now of parameters that you have he's passing extra parameters they will",
    "start": "2324880",
    "end": "2331810"
  },
  {
    "text": "just take them like you just need to meet the minimum requirement of a contract you can actually overfill it",
    "start": "2331810",
    "end": "2337180"
  },
  {
    "text": "theater contract and it's perfectly happy you can type properties in an",
    "start": "2337180",
    "end": "2342790"
  },
  {
    "text": "object that's fun you can extend all right let's talk about type script and",
    "start": "2342790",
    "end": "2347980"
  },
  {
    "text": "react so setup type script in reacts we just need to tell the typescript compiler that we want to use JSX which",
    "start": "2347980",
    "end": "2353620"
  },
  {
    "text": "reacts and that we want to use the note the module resolution strategy for node because when you're compiling type",
    "start": "2353620",
    "end": "2359680"
  },
  {
    "text": "scripts you compile it as if it were a node module type react native doesn't",
    "start": "2359680",
    "end": "2367570"
  },
  {
    "text": "come with typescript out of the box Facebook makes flows so there comes a flow so we need to install the",
    "start": "2367570",
    "end": "2372910"
  },
  {
    "text": "typescript bindings and then for the props we can just specify over a type or",
    "start": "2372910",
    "end": "2379300"
  },
  {
    "text": "an interface and then in the generic parameter for the component then pass in the interface or type that we expect it",
    "start": "2379300",
    "end": "2386530"
  },
  {
    "text": "to be given for the properties in this case we're guaranteed to have the title and the speaker name in the properties",
    "start": "2386530",
    "end": "2391990"
  },
  {
    "text": "here state is the same so it just",
    "start": "2391990",
    "end": "2397030"
  },
  {
    "text": "becomes the second parameter you don't have to specify them by default by default it actually takes an empty type",
    "start": "2397030",
    "end": "2404550"
  },
  {
    "text": "if type scripts not strict enough there are languages like a camel and reason there's also fable I'm wearing a Haskell",
    "start": "2405480",
    "end": "2412930"
  },
  {
    "text": "shirt there our high school the JavaScript compilers and they're in various states of support so but these",
    "start": "2412930",
    "end": "2418180"
  },
  {
    "text": "two frameworks I would say are probably the best thing that you can get for the",
    "start": "2418180",
    "end": "2423490"
  },
  {
    "text": "strongest type safety in a JavaScript runtime and the JavaScript joke examples",
    "start": "2423490",
    "end": "2429760"
  },
  {
    "text": "are from what the wet talk so if you haven't seen it go check it out alright so performance so yes javascript",
    "start": "2429760",
    "end": "2437140"
  },
  {
    "text": "and react native is still single threaded if you take more than sixteen point six milliseconds on a blocking",
    "start": "2437140",
    "end": "2442630"
  },
  {
    "text": "operation you start to drop frames but one of the good things about javascript is it functions",
    "start": "2442630",
    "end": "2449500"
  },
  {
    "text": "the first class so you can make functions over functions over functions and this worked well in the kind of",
    "start": "2449500",
    "end": "2454750"
  },
  {
    "text": "event loop model that JavaScript does have so I said before that's the",
    "start": "2454750",
    "end": "2462880"
  },
  {
    "text": "ListView is kind of deprecated and the reason for this is that it's it's API is",
    "start": "2462880",
    "end": "2468309"
  },
  {
    "text": "really complicated it's very slow to render at first and it doesn't do view recycling so we can you scroll down in a",
    "start": "2468309",
    "end": "2475300"
  },
  {
    "text": "ListView it's actually creating new UI elements all the time and if you've ever used a really old Android application",
    "start": "2475300",
    "end": "2482559"
  },
  {
    "text": "you can see that really old Android apps didn't have this as well or kind of yet the way in which you've got various like",
    "start": "2482559",
    "end": "2488710"
  },
  {
    "text": "he was basically cheap hack in the Android API they have since fixed that so but the",
    "start": "2488710",
    "end": "2495700"
  },
  {
    "text": "flat list and section list actually provide you with few recycling so there they have constant memory usage because",
    "start": "2495700",
    "end": "2503200"
  },
  {
    "text": "you're not creating new types of views all the time it's just going to take an existing view and recycle it and just",
    "start": "2503200",
    "end": "2509380"
  },
  {
    "text": "assign new data to it and as you saw before earlier in the presentation the",
    "start": "2509380",
    "end": "2515589"
  },
  {
    "text": "API was really simply just go Brenda item that's about it so react it become",
    "start": "2515589",
    "end": "2524440"
  },
  {
    "text": "with Flex box and things it become it's really easy to have these really nested trees and hierarchies is this a such an",
    "start": "2524440",
    "end": "2534910"
  },
  {
    "text": "issue on iOS but an Android this becomes a real problem Android doesn't really deal with nested hierarchies and UI",
    "start": "2534910",
    "end": "2542049"
  },
  {
    "text": "components very well at all so things like immutable data a pure component",
    "start": "2542049",
    "end": "2548589"
  },
  {
    "text": "will check the references of the props that you pass it so if the reference equality is true it will skip any",
    "start": "2548589",
    "end": "2555970"
  },
  {
    "text": "rendering of itself or its children if you're not using the pure component you",
    "start": "2555970",
    "end": "2561579"
  },
  {
    "text": "can there's a callback which you can specify the Equality check so you can actually tell it how you want it to",
    "start": "2561579",
    "end": "2567280"
  },
  {
    "text": "compare data coming from its parent so if you're rendering everything from the",
    "start": "2567280",
    "end": "2573910"
  },
  {
    "text": "top and each of the children in the second tier takes about two milliseconds and",
    "start": "2573910",
    "end": "2579200"
  },
  {
    "text": "you ferti it takes three milliseconds you can end up started dropping frames quite a bit and this is where kind of",
    "start": "2579200",
    "end": "2584750"
  },
  {
    "text": "having strategic containers we're having",
    "start": "2584750",
    "end": "2590119"
  },
  {
    "text": "them update state further down the tree becomes helpful so having a Redux model",
    "start": "2590119",
    "end": "2595400"
  },
  {
    "text": "in a mobile application is maybe not always the best solution react native",
    "start": "2595400",
    "end": "2602329"
  },
  {
    "text": "also has what what I call kind of view reduction so in this case I don't expect",
    "start": "2602329",
    "end": "2608329"
  },
  {
    "text": "you to read a little stuff and left with them I got this nice pretty diagram where this is all the visual information that we want to render and what react",
    "start": "2608329",
    "end": "2615980"
  },
  {
    "text": "will actually do is actually work out the positioning based upon the kind of non presentational parents well then",
    "start": "2615980",
    "end": "2624290"
  },
  {
    "text": "work out where the children need to be rendered at and then kind of throw the parents away when it sends a message over to the native interface about what",
    "start": "2624290",
    "end": "2631250"
  },
  {
    "text": "it wants and where it wants the elements and the way in which it does this is it works out what doesn't actually have any",
    "start": "2631250",
    "end": "2638480"
  },
  {
    "text": "kind of visual representation so any kind of view component which is just used for positioning gets eliminated and",
    "start": "2638480",
    "end": "2645710"
  },
  {
    "text": "we can then get end up with in this case we've got two tier D so we could",
    "start": "2645710",
    "end": "2651140"
  },
  {
    "text": "probably optimize this to be a bit a bit more and have it so that it's just one",
    "start": "2651140",
    "end": "2656180"
  },
  {
    "text": "tier and because what reacts Nev will do is it will use absolute positioning so",
    "start": "2656180",
    "end": "2661940"
  },
  {
    "text": "it works out where everything needs to be and then just renders it so JavaScript text care of all the positioning stuff testing testing",
    "start": "2661940",
    "end": "2670190"
  },
  {
    "text": "in react native is so much you see an image right if anyone has ever done",
    "start": "2670190",
    "end": "2675950"
  },
  {
    "text": "Android before they know that Android doesn't actually let you create the your",
    "start": "2675950",
    "end": "2682700"
  },
  {
    "text": "UI components it will create them for you and then kind of give you a call back but you can't actually control how",
    "start": "2682700",
    "end": "2688760"
  },
  {
    "text": "the UI components are being created in reacts and in react web as well as in",
    "start": "2688760",
    "end": "2695839"
  },
  {
    "text": "react native we've got jests and what jests allows us to do in fact the documentation for this is actually a",
    "start": "2695839",
    "end": "2702380"
  },
  {
    "text": "little bit better I still have this in Chrome noop uh yeah",
    "start": "2702380",
    "end": "2713078"
  },
  {
    "text": "so again because to react everything's library we just import the library let's",
    "start": "2715359",
    "end": "2723799"
  },
  {
    "text": "just make this full screen so this is our little component here and the way in",
    "start": "2723799",
    "end": "2729529"
  },
  {
    "text": "which you test it is you have it take it to adjacent and then you have it save",
    "start": "2729529",
    "end": "2735829"
  },
  {
    "text": "that tree for the first time so if you have any kind of boolean operations it will kind of evaluate them and work out",
    "start": "2735829",
    "end": "2741950"
  },
  {
    "text": "what the difference in the trees will be and then the output of this is all the",
    "start": "2741950",
    "end": "2747710"
  },
  {
    "text": "kind of inline information that you would expect anyway so it's quite nice",
    "start": "2747710",
    "end": "2759500"
  },
  {
    "text": "in that you can kind of render out what you expect your application to be the",
    "start": "2759500",
    "end": "2765829"
  },
  {
    "text": "first time and then sequential changes to your code you can then compared the trees against it so if you're changing",
    "start": "2765829",
    "end": "2771680"
  },
  {
    "text": "the application in some way Jess will then tell you that the application structure has changed fundamentally",
    "start": "2771680",
    "end": "2776990"
  },
  {
    "text": "between releases the only other so one",
    "start": "2776990",
    "end": "2783200"
  },
  {
    "text": "yes so now for a quick demo I think let's see all right so what this slides",
    "start": "2783200",
    "end": "2791839"
  },
  {
    "text": "here so one thing which I kind of showed earlier let me turn off this the",
    "start": "2791839",
    "end": "2801680"
  },
  {
    "text": "annoying things about react is that you are if you're running one bundle off for",
    "start": "2801680",
    "end": "2811160"
  },
  {
    "text": "the application you can't run multiple at once",
    "start": "2811160",
    "end": "2814990"
  },
  {
    "text": "let's say delete sorry I must have closed it all right so this is that this",
    "start": "2816890",
    "end": "2827210"
  },
  {
    "text": "is an expo application so I'm already",
    "start": "2827210",
    "end": "2832249"
  },
  {
    "text": "running it all right okay",
    "start": "2832249",
    "end": "2837309"
  },
  {
    "text": "so now if we go rusty yeah so if they default we can actually manually reload",
    "start": "2839530",
    "end": "2846460"
  },
  {
    "text": "the application every time oh we can",
    "start": "2846460",
    "end": "2858970"
  },
  {
    "text": "actually actually have this thing called live reload so if we just turned off for",
    "start": "2858970",
    "end": "2865030"
  },
  {
    "text": "the moment we can see that when we when",
    "start": "2865030",
    "end": "2872350"
  },
  {
    "text": "we change the application nothing happens but if we enable live reload",
    "start": "2872350",
    "end": "2878130"
  },
  {
    "text": "every time we save the file will actually update our application so both",
    "start": "2878130",
    "end": "2884230"
  },
  {
    "text": "this and the fact that for the most part we don't have a compile step means you can kind of get really far with an idea",
    "start": "2884230",
    "end": "2891040"
  },
  {
    "text": "for an application without having to spend lots of time setting up tooling or kind of learning too much like the weird",
    "start": "2891040",
    "end": "2898090"
  },
  {
    "text": "things about ios and android at the same time yes and that's that's really react",
    "start": "2898090",
    "end": "2914680"
  },
  {
    "text": "native any questions yes",
    "start": "2914680",
    "end": "2921030"
  },
  {
    "text": "so there be so what the question is kind of like why would you do it like a an",
    "start": "2947230",
    "end": "2952579"
  },
  {
    "text": "existing native application yeah yeah so",
    "start": "2952579",
    "end": "2963559"
  },
  {
    "text": "what I'd say the benefit is that a lot of screens like especially like setting screen since that I kind of really high",
    "start": "2963559",
    "end": "2969829"
  },
  {
    "text": "like low value to your application so why would you be writing them twice for",
    "start": "2969829",
    "end": "2977240"
  },
  {
    "text": "both Android and iOS and as you get into bigger companies the whole thing becomes talent acquisition and retention becomes",
    "start": "2977240",
    "end": "2984770"
  },
  {
    "text": "incredibly expensive there's not that many mobile developers compared to like",
    "start": "2984770",
    "end": "2990140"
  },
  {
    "text": "JavaScript developers so you can have a few native developers who really know how those native modules work and then",
    "start": "2990140",
    "end": "2996020"
  },
  {
    "text": "the JavaScript developers can just do the simple kind of UI stuff so air B&B now actually uses react native quite",
    "start": "2996020",
    "end": "3002140"
  },
  {
    "text": "extensively in their application so if you ever used the air B&B trips part of the app most of those screens are in",
    "start": "3002140",
    "end": "3009069"
  },
  {
    "text": "react native and the reason they went down that path was just too hard that",
    "start": "3009069",
    "end": "3014500"
  },
  {
    "text": "like also I think uber has like 100 Android developers and about same number for iOS so that's a hundred developers",
    "start": "3014500",
    "end": "3021880"
  },
  {
    "text": "and both sides that you can't share anything with whereas if react native you can start to share not you'll have",
    "start": "3021880",
    "end": "3028630"
  },
  {
    "text": "to share everything you'd have to make the entire application react native but you can start to share those components which don't need to be on the metal as",
    "start": "3028630",
    "end": "3035380"
  },
  {
    "text": "it were yeah sure",
    "start": "3035380",
    "end": "3041130"
  },
  {
    "text": "yes this is your control yeah yeah so",
    "start": "3050310",
    "end": "3065770"
  },
  {
    "text": "it's using a web server running locally so when you change the file it's then",
    "start": "3065770",
    "end": "3071380"
  },
  {
    "text": "sending in event over and it's causing it to reload the JavaScript file yes so",
    "start": "3071380",
    "end": "3084910"
  },
  {
    "text": "the JavaScript doesn't get compiled down so the JavaScript just no it knows what native component wants in the UI side",
    "start": "3084910",
    "end": "3091720"
  },
  {
    "text": "and then sends a message across the C++ bridge and then all that Objective C code we saw in that wrecked native",
    "start": "3091720",
    "end": "3098560"
  },
  {
    "text": "breakdown diagram that has all the code for then taking that message creating",
    "start": "3098560",
    "end": "3103720"
  },
  {
    "text": "the view and then positioned on side the screen that's right thank you",
    "start": "3103720",
    "end": "3112109"
  },
  {
    "text": "yep",
    "start": "3119350",
    "end": "3122350"
  },
  {
    "text": "so reacting it's a job scripts still",
    "start": "3126680",
    "end": "3131849"
  },
  {
    "text": "single-threaded so it's it's really good if you're IO bound but if you're CPU",
    "start": "3131849",
    "end": "3137280"
  },
  {
    "text": "bound on any kind of thing it's really not suitable but the good thing is like",
    "start": "3137280",
    "end": "3143190"
  },
  {
    "text": "if because if we act native you can kind of mix and match so you can have a native you inside a reactor you inside a",
    "start": "3143190",
    "end": "3149760"
  },
  {
    "text": "native you insider reacts you so if you want to do like video rendering or video processing on a phone you can have all",
    "start": "3149760",
    "end": "3156150"
  },
  {
    "text": "the video stuff done natively and then you just give it a block on the screen where it's just going to render everything",
    "start": "3156150",
    "end": "3163099"
  },
  {
    "text": "yes I gaming up like you'd probably be using something like energy but you could possibly even have it so that",
    "start": "3176030",
    "end": "3183050"
  },
  {
    "text": "you're like Settings menu in the unity app is actually running a react so when",
    "start": "3183050",
    "end": "3188900"
  },
  {
    "text": "you go to like edit settings or difficulty stuff you have that and react and when you hit save or then sends it",
    "start": "3188900",
    "end": "3194720"
  },
  {
    "text": "back across the unity and then the game will then keep going so the game's doing all the kind of computationally heavy",
    "start": "3194720",
    "end": "3200180"
  },
  {
    "text": "stuff and you got react native doing all the kind of simple IO bound operations",
    "start": "3200180",
    "end": "3206740"
  },
  {
    "text": "yeah the the I would say the community is quite large so if the component you",
    "start": "3219400",
    "end": "3226700"
  },
  {
    "text": "want to be able to do something it's probably already out there already I guess do you the other challenge is that",
    "start": "3226700",
    "end": "3233120"
  },
  {
    "text": "because react is still fairly young like I mean compared to xamarin xamarin nothing started in 2007 with mono touch",
    "start": "3233120",
    "end": "3241000"
  },
  {
    "text": "react native is like a few years old so I think for only been a few years old it's gotten pretty far pretty quickly so",
    "start": "3241000",
    "end": "3248660"
  },
  {
    "text": "as time goes on we're gonna see it improve alright thank you",
    "start": "3248660",
    "end": "3256920"
  },
  {
    "text": "[Applause]",
    "start": "3256920",
    "end": "3260979"
  }
]