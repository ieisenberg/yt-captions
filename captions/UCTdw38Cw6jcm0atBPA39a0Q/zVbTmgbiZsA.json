[
  {
    "text": "so hello everyone I believe we can start welcome I'm really really happy that I'm",
    "start": "5170",
    "end": "11170"
  },
  {
    "text": "here today I'm really happy that you are here today you have quite brave ones I believe because it's quite advanced talk",
    "start": "11170",
    "end": "17949"
  },
  {
    "text": "I mean probably it will be maybe not we will see and so my name is Connie otra",
    "start": "17949",
    "end": "23859"
  },
  {
    "text": "cosa and then what is the agenda for this talk it is solely about writing",
    "start": "23859",
    "end": "29320"
  },
  {
    "text": "your own custom dotnet GC we do this every day so that's this talk is about",
    "start": "29320",
    "end": "35970"
  },
  {
    "text": "and the agenda will be why we can never care about writing something like that",
    "start": "35970",
    "end": "41980"
  },
  {
    "text": "like our custom dotnet GC what happe what we have to do to write something",
    "start": "41980",
    "end": "47199"
  },
  {
    "text": "how to write something that is working at least a little and then how to write",
    "start": "47199",
    "end": "52600"
  },
  {
    "text": "something that tries to be at least a bit a little useful at least start",
    "start": "52600",
    "end": "58179"
  },
  {
    "text": "writing it as we will see it is not so easy thing to do as you can expect I'm",
    "start": "58179",
    "end": "63879"
  },
  {
    "text": "why this topic in general I'm a guy related to dotnet performance and the internal stuff I really like such a",
    "start": "63879",
    "end": "70119"
  },
  {
    "text": "stuff I wrote this book which is two to one thousand page about dotnet memory",
    "start": "70119",
    "end": "76030"
  },
  {
    "text": "management it should be automatic but it still have some caveats and I when I",
    "start": "76030",
    "end": "81159"
  },
  {
    "text": "started writing it I just was writing writing writing can't it took 1000 pages",
    "start": "81159",
    "end": "86799"
  },
  {
    "text": "to describe all the stuff I'm a co-founder or dotnet was initiative which is also about talking about",
    "start": "86799",
    "end": "92979"
  },
  {
    "text": "performance scalability internal stuff related all about dotnet an advanced way",
    "start": "92979",
    "end": "99070"
  },
  {
    "text": "of seeing it I'm also on Twitter if you like follow me I almost I'm always",
    "start": "99070",
    "end": "105310"
  },
  {
    "text": "smiling when someone starts to follow me see it is yeah so welcome to the world",
    "start": "105310",
    "end": "111490"
  },
  {
    "text": "of the custom disease which in case of dotnet does not exist so much or maybe I",
    "start": "111490",
    "end": "118329"
  },
  {
    "text": "should say it does not exist at all because we have only one VC in.net that",
    "start": "118329",
    "end": "124240"
  },
  {
    "text": "you can choose from I mean choose from because there is no choice we have the only one default GC it is but why why we",
    "start": "124240",
    "end": "131740"
  },
  {
    "text": "even care about something like dotnet customs GC maybe you have used J",
    "start": "131740",
    "end": "138380"
  },
  {
    "text": "maybe have used Java on other a JVM language and people from JVM are quite",
    "start": "138380",
    "end": "144920"
  },
  {
    "text": "used to things like custom disease they have are several disease that they can choose from and number is growing so",
    "start": "144920",
    "end": "152840"
  },
  {
    "text": "they have constantly new disease that they can use and yeah they have a flag",
    "start": "152840",
    "end": "158450"
  },
  {
    "text": "that they allows them to choose which DC they are using moreover they have a lot",
    "start": "158450",
    "end": "163610"
  },
  {
    "text": "of configurations that allows them to fine-tune how those disease are working",
    "start": "163610",
    "end": "169190"
  },
  {
    "text": "it ends up as copy pasting code from Stack Overflow just to get a good set of",
    "start": "169190",
    "end": "176210"
  },
  {
    "text": "parameters but obviously joking for sure it is powerful things like they can",
    "start": "176210",
    "end": "181700"
  },
  {
    "text": "really fine-tune what are they today needs what what do you see they want to",
    "start": "181700",
    "end": "186920"
  },
  {
    "text": "use what parameters they want to use what they how they be should they be",
    "start": "186920",
    "end": "193010"
  },
  {
    "text": "configured and yeah because when we're talking about you see there is nothing's",
    "start": "193010",
    "end": "198740"
  },
  {
    "text": "like a civil ballot that will be just enough for every possible scenario we can look at disease from various",
    "start": "198740",
    "end": "204170"
  },
  {
    "text": "perspectives we can look out for example about and think about memory overhead of GC whether it is really aggressive in",
    "start": "204170",
    "end": "211220"
  },
  {
    "text": "releasing memory or maybe totally not what is the CPU overhead what is the resource resources use of the VC what is",
    "start": "211220",
    "end": "219380"
  },
  {
    "text": "the resulting throughput what pulses are introduced by the team do you see there are a lot of possibilities how this DC",
    "start": "219380",
    "end": "226490"
  },
  {
    "text": "can behave in various scenarios because our applications are obviously different we have different workloads so there is",
    "start": "226490",
    "end": "233510"
  },
  {
    "text": "nothing like very powerful one generic DC that will just behave in good in",
    "start": "233510",
    "end": "239570"
  },
  {
    "text": "every possible scenario in case of dotnet as I said there is only one DC so",
    "start": "239570",
    "end": "245240"
  },
  {
    "text": "in fact you have this simple configuration knobs like whether you want to your server DC or workstation DC",
    "start": "245240",
    "end": "251450"
  },
  {
    "text": "on whether it should be concurrent or not but it is still the same DC it's in",
    "start": "251450",
    "end": "257299"
  },
  {
    "text": "terms of logic and lengths of algorithm it is still the same DC those flags obviously influence how they will work",
    "start": "257299",
    "end": "264080"
  },
  {
    "text": "but it is still the same algorithm so the choice is not so sophisticated here",
    "start": "264080",
    "end": "270919"
  },
  {
    "text": "in fact we have some additional configuration knobs that can additionally find Huhn those this",
    "start": "270919",
    "end": "276530"
  },
  {
    "text": "default DC but still it is the only one so the second approach here is that was",
    "start": "276530",
    "end": "283490"
  },
  {
    "text": "recently added in case of dotnet core it was to go to the second the highest",
    "start": "283490",
    "end": "289460"
  },
  {
    "text": "possible level of customization and now you can just write your own custom GC which is quite powerful feature that I",
    "start": "289460",
    "end": "295879"
  },
  {
    "text": "would like you to describe here so what can be done with such custom writing own",
    "start": "295879",
    "end": "302900"
  },
  {
    "text": "custom GC possibility in fact you can replace the whole GC mechanism and this",
    "start": "302900",
    "end": "309379"
  },
  {
    "text": "is the sole purpose here you and that you can just get rid of the current one and replace it with the completely new",
    "start": "309379",
    "end": "316639"
  },
  {
    "text": "written by you it would be a little bit more harder to fine-tune and change",
    "start": "316639",
    "end": "321770"
  },
  {
    "text": "something in the current one like I have this default one and I wants to change this little thing here or there and that",
    "start": "321770",
    "end": "328999"
  },
  {
    "text": "would be harder easier approach is here just to get rid of everything can't replace it with something new the",
    "start": "328999",
    "end": "336080"
  },
  {
    "text": "ultimate goal then probably would be to write something better than the current GC good luck obviously because it is",
    "start": "336080",
    "end": "343129"
  },
  {
    "text": "written for a lot of years and this really powerful thing a really",
    "start": "343129",
    "end": "349240"
  },
  {
    "text": "well-written so obviously this is a goal which is quite far let's say the",
    "start": "349240",
    "end": "354789"
  },
  {
    "text": "practical one goal would be just write anything that works and compiles and",
    "start": "354789",
    "end": "360050"
  },
  {
    "text": "doesn't crash the runtime it's quite quite good goal as for the beginning so from the well from the",
    "start": "360050",
    "end": "368149"
  },
  {
    "text": "world how pirates sees the world there is a map and we go and we try to reach",
    "start": "368149",
    "end": "373699"
  },
  {
    "text": "this island which is island with the treasure which is a concurrent compacting ultimate GC which is much",
    "start": "373699",
    "end": "379969"
  },
  {
    "text": "better than the current one which is obviously very hard to be there and to be there we need to start from somewhere",
    "start": "379969",
    "end": "387050"
  },
  {
    "text": "and I just always when I decided to do",
    "start": "387050",
    "end": "392180"
  },
  {
    "text": "something like custom GC I decided to write something like minimal valuable",
    "start": "392180",
    "end": "397460"
  },
  {
    "text": "product which is a kind of 0 DC it is a well known name like zero DC which is quite strange",
    "start": "397460",
    "end": "405039"
  },
  {
    "text": "to see because only allocating objects it's only put policies to allocate",
    "start": "405039",
    "end": "410080"
  },
  {
    "text": "objects and it is not reclaiming memory after it totally so there is no DC at",
    "start": "410080",
    "end": "416199"
  },
  {
    "text": "all in fact we are only able to allocate something and this is a called 0 DC and",
    "start": "416199",
    "end": "421770"
  },
  {
    "text": "I thought ok this is a good idea because it is the simplest thing that you can imagine right just something like that",
    "start": "421770",
    "end": "428590"
  },
  {
    "text": "and so we start from this 0 DC island and here we will try to implement",
    "start": "428590",
    "end": "434560"
  },
  {
    "text": "something that compiles plugs into the runtime and doesn't crash anything this",
    "start": "434560",
    "end": "440020"
  },
  {
    "text": "is quite good set of requirements I said a bit for the beginning and it might be",
    "start": "440020",
    "end": "445779"
  },
  {
    "text": "the idea of the 0 DC seems quite strange or funny or may make no sense at all but",
    "start": "445779",
    "end": "452080"
  },
  {
    "text": "in fact there are some disease like for example in the JVM or world there is a epsilon G C it is quite good name like",
    "start": "452080",
    "end": "459430"
  },
  {
    "text": "it means it sounds quite wise it is still 0 DC it is only responsible for",
    "start": "459430",
    "end": "465099"
  },
  {
    "text": "allocating objects and no opt a garbage collector and it some salt proposes that",
    "start": "465099",
    "end": "472360"
  },
  {
    "text": "it handles memory allocations but does not implement memory reclamation at all",
    "start": "472360",
    "end": "477580"
  },
  {
    "text": "exactly like I would like to do in case of dopant and talking about epsilon GC",
    "start": "477580",
    "end": "483699"
  },
  {
    "text": "or mine my is 0 GC we can think about how can be the motivation the why we",
    "start": "483699",
    "end": "489699"
  },
  {
    "text": "would ever write something like that and epsilon GC has provided quite a nice set",
    "start": "489699",
    "end": "496539"
  },
  {
    "text": "of motivations that I just would like to provide you because it they quite nicely",
    "start": "496539",
    "end": "502060"
  },
  {
    "text": "explained the idea like for example when we have something like epsilon GC or 0",
    "start": "502060",
    "end": "508539"
  },
  {
    "text": "GC it is good for performance testing because we have nice baseline we have the the simplest possible GC that we",
    "start": "508539",
    "end": "515800"
  },
  {
    "text": "plugged in into the runtime and then when we will be writing something more sophisticated we will have a baseline to",
    "start": "515800",
    "end": "521860"
  },
  {
    "text": "compare with because there is nothing simpler than 0 GC also memory pressure",
    "start": "521860",
    "end": "528130"
  },
  {
    "text": "testing is a good name for I have a memory leak by default so when I have a",
    "start": "528130",
    "end": "533410"
  },
  {
    "text": "memo when I do not reclaim an old memory for sure I will see how the memory",
    "start": "533410",
    "end": "539810"
  },
  {
    "text": "consumption grows in my application if it is heavy allocating or not so then I will be able to quite fastly and",
    "start": "539810",
    "end": "546800"
  },
  {
    "text": "discover that for example my application is heavy allocating and I need to tune",
    "start": "546800",
    "end": "552110"
  },
  {
    "text": "it now somehow also obviously when we have this virtual machine at the run",
    "start": "552110",
    "end": "558020"
  },
  {
    "text": "time and we have the DC writing 0 DC the simplest possible to see is a quite nice",
    "start": "558020",
    "end": "563390"
  },
  {
    "text": "way of testing the whole interface with the contract between the runtime and the",
    "start": "563390",
    "end": "568400"
  },
  {
    "text": "GC so writing it it is a good way to know whether the contract is well",
    "start": "568400",
    "end": "574339"
  },
  {
    "text": "designed or not also more practical approach like in the use case for",
    "start": "574339",
    "end": "582730"
  },
  {
    "text": "extremely short leaf living objects for extremis all living jobs like several",
    "start": "582730",
    "end": "588170"
  },
  {
    "text": "functions when we know that the function will be just running for a minute maybe there is no sense in running GC because",
    "start": "588170",
    "end": "594770"
  },
  {
    "text": "we know that the process will close shortly so why we should bother about reclaiming memory so in terms of very",
    "start": "594770",
    "end": "600860"
  },
  {
    "text": "short living objects the jobs processes the quite nice possibilities just to get",
    "start": "600860",
    "end": "607280"
  },
  {
    "text": "rid of the GC totally and the same encasing last drop latency improvements",
    "start": "607280",
    "end": "612530"
  },
  {
    "text": "when we have a application that almost completely is garbage free it almost no",
    "start": "612530",
    "end": "617860"
  },
  {
    "text": "allocates a lock is almost no memory it is also good to get rid of GC because we",
    "start": "617860",
    "end": "624230"
  },
  {
    "text": "have put so much effort to not allocate that getting rid of the GC totally may",
    "start": "624230",
    "end": "629990"
  },
  {
    "text": "be beneficial for us so maybe to practical use cases of such exotic GC",
    "start": "629990",
    "end": "635450"
  },
  {
    "text": "and additionally for me it is a quite good template like when I have a such as",
    "start": "635450",
    "end": "641660"
  },
  {
    "text": "0 GC it is a perfect place to start to implement something more sophisticated also a lot of learning because I need to",
    "start": "641660",
    "end": "649130"
  },
  {
    "text": "learn a lot about how the GC cooperates with the runtime and how this all",
    "start": "649130",
    "end": "654140"
  },
  {
    "text": "couples and this is a great opportunity to learn something new and also quite a",
    "start": "654140",
    "end": "660170"
  },
  {
    "text": "lot for me a lot of fun like maybe I'm a nerd but for me it was a fun also that",
    "start": "660170",
    "end": "665870"
  },
  {
    "text": "something I'm was able to write right and it doesn't crash the runtime so that's a summary why you",
    "start": "665870",
    "end": "674750"
  },
  {
    "text": "even care something about customs you see first of all because maybe the default configuration possibilities are",
    "start": "674750",
    "end": "681200"
  },
  {
    "text": "quite limited for us and we want to write something that is more fine-tuned to our needs maybe we need GC because we",
    "start": "681200",
    "end": "688100"
  },
  {
    "text": "have very specific workload very specific needs and now we have this possibility that we can replace it",
    "start": "688100",
    "end": "693920"
  },
  {
    "text": "totally so it is quite nice maybe we can write something more configurable it depends on our needs and because",
    "start": "693920",
    "end": "701300"
  },
  {
    "text": "obviously we can learn a lot about the runtime out about the GC about the memory management but it is important to",
    "start": "701300",
    "end": "708770"
  },
  {
    "text": "remember that it is not because the current default GC is wrong I mean it is really awesome so it is really really to",
    "start": "708770",
    "end": "716420"
  },
  {
    "text": "cut up and writing something better and we should not start just writing custom",
    "start": "716420",
    "end": "721730"
  },
  {
    "text": "GC because we believe that in a year or two we will just write something better probably will be not able to do that so",
    "start": "721730",
    "end": "727910"
  },
  {
    "text": "it is not the case here so what we have to do to write some at custom GC it is",
    "start": "727910",
    "end": "735410"
  },
  {
    "text": "called local GC in terms of internal microsoft terminology the project was",
    "start": "735410",
    "end": "740660"
  },
  {
    "text": "was was called local DC in the old repository between before the merge of",
    "start": "740660",
    "end": "746330"
  },
  {
    "text": "repositories the project was called local GC and what is interesting here",
    "start": "746330",
    "end": "754430"
  },
  {
    "text": "that it has been cancelled like it has been implemented it has been merged into",
    "start": "754430",
    "end": "759860"
  },
  {
    "text": "the dotnet core but at some point the the work on it has stopped totally so as",
    "start": "759860",
    "end": "765200"
  },
  {
    "text": "we see here the last issues within this project are from two years ago",
    "start": "765200",
    "end": "771050"
  },
  {
    "text": "because someone has did it and just left the company and the whole project has been left but at least they left it in a",
    "start": "771050",
    "end": "778940"
  },
  {
    "text": "way that it is a we were we are able to compile it were able to consume it some",
    "start": "778940",
    "end": "784550"
  },
  {
    "text": "work is still for sure to be done like some more diagnostic some more things",
    "start": "784550",
    "end": "790970"
  },
  {
    "text": "that are maybe not so important but still should be added so this is kind of",
    "start": "790970",
    "end": "798050"
  },
  {
    "text": "the project that is on the production can be but for sure need some more polishing",
    "start": "798050",
    "end": "803480"
  },
  {
    "text": "from Microsoft but how we can use it it is very simple obviously it is only for",
    "start": "803480",
    "end": "810170"
  },
  {
    "text": "dotnet core and to use it we just need to set a single environment variable",
    "start": "810170",
    "end": "815510"
  },
  {
    "text": "that just tells you this library from now implements are my custom GC and when",
    "start": "815510",
    "end": "821300"
  },
  {
    "text": "the runtime will be just starting it will look at this environment variable and we'll just load the GC code from",
    "start": "821300",
    "end": "827840"
  },
  {
    "text": "this library so yeah quite easily we need just a single file with the library",
    "start": "827840",
    "end": "833030"
  },
  {
    "text": "library with the DC code quite easy thing what to do to implement such like",
    "start": "833030",
    "end": "839840"
  },
  {
    "text": "such library obviously we need unmanaged code we need probably C++ code because the whole",
    "start": "839840",
    "end": "845510"
  },
  {
    "text": "runtime is written in C++ it is good because we only need to include three",
    "start": "845510",
    "end": "851090"
  },
  {
    "text": "files it is quite good the coupling between the runtime and the DC because three files in case of the whole runtime",
    "start": "851090",
    "end": "857720"
  },
  {
    "text": "is a very small number and then we need to implement two methods that will be exported I will explain them shortly and",
    "start": "857720",
    "end": "864590"
  },
  {
    "text": "implement the rest of the GC yes right just to implement few interfaces which",
    "start": "864590",
    "end": "871370"
  },
  {
    "text": "reminds me that it is not so easy to do because we need some very deep knowledge",
    "start": "871370",
    "end": "877670"
  },
  {
    "text": "in fact how this GC will cooperate with the runtime we have this interface but",
    "start": "877670",
    "end": "882890"
  },
  {
    "text": "we need to intervene to understand this interface so on the one hand we just",
    "start": "882890",
    "end": "888680"
  },
  {
    "text": "need to write library that include three files implement few classes few interfaces on the other hand we just",
    "start": "888680",
    "end": "895460"
  },
  {
    "text": "need to write the whole GC which reminds me this picture like just include few files and then write the rest of the GC",
    "start": "895460",
    "end": "902150"
  },
  {
    "text": "easy okay but talking about those exported methods the very first one is",
    "start": "902150",
    "end": "909170"
  },
  {
    "text": "very easy in fact because it is called version info it will be called by the runtime to check what GC API",
    "start": "909170",
    "end": "916490"
  },
  {
    "text": "our library supports because the GC API is version 8 so the runtime will check",
    "start": "916490",
    "end": "923330"
  },
  {
    "text": "whether it understand this specific API of the GC but it is easy we are just",
    "start": "923330",
    "end": "928730"
  },
  {
    "text": "provides two numbers then we need method also easy method which is called",
    "start": "928730",
    "end": "934760"
  },
  {
    "text": "initialize that provides the pointer style custom DC implementation so we",
    "start": "934760",
    "end": "939860"
  },
  {
    "text": "need just to set those two pointers that are talking saying that from now let's",
    "start": "939860",
    "end": "944900"
  },
  {
    "text": "replace the pointer to default DC with the pointer to my own custom",
    "start": "944900",
    "end": "950420"
  },
  {
    "text": "implementation of the DC so it is also very easy function we also need to",
    "start": "950420",
    "end": "955490"
  },
  {
    "text": "remember this pointer which is called IGC to CLR interface which provides very",
    "start": "955490",
    "end": "960830"
  },
  {
    "text": "nice features like we will be using Kito's features like for some time at some moments our DC will need to ask the",
    "start": "960830",
    "end": "968480"
  },
  {
    "text": "runtime for something and this interface allows us to do that so yeah this is a",
    "start": "968480",
    "end": "975560"
  },
  {
    "text": "heap file is the hardest one to implement there is a constructor it is",
    "start": "975560",
    "end": "981740"
  },
  {
    "text": "easy it is C++ and then we have those set of methods a lot of methods and this",
    "start": "981740",
    "end": "988790"
  },
  {
    "text": "might be quite scary like okay I need to implement all those methods so probably",
    "start": "988790",
    "end": "994520"
  },
  {
    "text": "I will do it for a month or two or one a year and yes it can be a little bit",
    "start": "994520",
    "end": "1001000"
  },
  {
    "text": "scary but in fact what we really do have to implement in those in this interface",
    "start": "1001000",
    "end": "1007060"
  },
  {
    "text": "when we look at them about the cooperation between the runtime and the GC we see that obviously we have this AI",
    "start": "1007060",
    "end": "1014050"
  },
  {
    "text": "the GC to the CLR interface and we have",
    "start": "1014050",
    "end": "1019150"
  },
  {
    "text": "this which is implemented by the runtime and we have a GC heap but when we look at the methods of this interface we",
    "start": "1019150",
    "end": "1025689"
  },
  {
    "text": "looked at a lot of them currently are highly coupled with the current implementation like for example there is",
    "start": "1025690",
    "end": "1031720"
  },
  {
    "text": "a method set large of Jacob compaction mode but we don't have a concept of large of the heap in our custom DC so",
    "start": "1031720",
    "end": "1038770"
  },
  {
    "text": "this method will not make sense for us to implement also methods like if object",
    "start": "1038770",
    "end": "1043870"
  },
  {
    "text": "is being promoted my GC may have no concept of promotion so also this will not make sense to implement it and a lot",
    "start": "1043870",
    "end": "1051220"
  },
  {
    "text": "of such matters will be just because of the current coupling between the default and a default DC and the runtime and",
    "start": "1051220",
    "end": "1057240"
  },
  {
    "text": "only a few will be really need to be implemented this is a good news so what",
    "start": "1057240",
    "end": "1063400"
  },
  {
    "text": "we have to do it does write simple C++ library and implement those interfaces mostly by providing some",
    "start": "1063400",
    "end": "1070780"
  },
  {
    "text": "dummy implementation for most of the methods we will see its own so how we",
    "start": "1070780",
    "end": "1077110"
  },
  {
    "text": "can write something working on this zero to see island there is a very first step called colored based zero DC it is a DC",
    "start": "1077110",
    "end": "1085420"
  },
  {
    "text": "our locating objects with the help of so-called kalach might not collect function which is a function provided by",
    "start": "1085420",
    "end": "1093100"
  },
  {
    "text": "the windows api and as i said most of the methods can be done e because we",
    "start": "1093100",
    "end": "1098290"
  },
  {
    "text": "don't care like if the runtime is asking whether the runtime structures are valid let's say they are let's assume they are",
    "start": "1098290",
    "end": "1105750"
  },
  {
    "text": "if the object is being promoted it is not because we don't have promotion in",
    "start": "1105750",
    "end": "1111070"
  },
  {
    "text": "our GC or when what was the last DC collected what was the last generation",
    "start": "1111070",
    "end": "1117520"
  },
  {
    "text": "collected I don't have concept of generation so let's just return zero a lot of such matters will be implemented",
    "start": "1117520",
    "end": "1124360"
  },
  {
    "text": "in such one-line way of implementing them because it is just enough and the",
    "start": "1124360",
    "end": "1130900"
  },
  {
    "text": "most important method that is probably for us is like a method guide but garbage collect which is called by the",
    "start": "1130900",
    "end": "1137440"
  },
  {
    "text": "runtime if the runtime asks us to make a garbage collection we will just say okay",
    "start": "1137440",
    "end": "1142900"
  },
  {
    "text": "I am done there was no errors and that's all one line because we don't have GC",
    "start": "1142900",
    "end": "1149500"
  },
  {
    "text": "but in fact this method is called not so very often because this is a method when we for example called GC collect in",
    "start": "1149500",
    "end": "1156730"
  },
  {
    "text": "c-sharp code which we should not do it or for example when the operating system",
    "start": "1156730",
    "end": "1162220"
  },
  {
    "text": "asked us to make GC so it is quite not very often path most much more often",
    "start": "1162220",
    "end": "1168910"
  },
  {
    "text": "puffs of triggering disease allocation because this is how the GC is working when the runtime wants to a new app new",
    "start": "1168910",
    "end": "1175600"
  },
  {
    "text": "object when we are new ink up new object in c-sharp code it makes we it means we",
    "start": "1175600",
    "end": "1180640"
  },
  {
    "text": "are making so-called allocation and this allocation is calling those two methods",
    "start": "1180640",
    "end": "1185860"
  },
  {
    "text": "and the two main responsibilities of those methods are we need to get an",
    "start": "1185860",
    "end": "1191500"
  },
  {
    "text": "object I mean I mean we need to get an address of a memory for this object and",
    "start": "1191500",
    "end": "1197820"
  },
  {
    "text": "also at some point in time probably we will need to tract that we are running out of memory",
    "start": "1197820",
    "end": "1202960"
  },
  {
    "text": "and we will like to trigger GC and this really 99% of disease happens in this",
    "start": "1202960",
    "end": "1209830"
  },
  {
    "text": "path that alligator is seeing that it is running out of space for us it is good",
    "start": "1209830",
    "end": "1215380"
  },
  {
    "text": "news because we don't trigger GC so we will just not trigger GC from within these methods we will just be creating a",
    "start": "1215380",
    "end": "1222820"
  },
  {
    "text": "space for a new object and return an address of this memory and we will be",
    "start": "1222820",
    "end": "1228820"
  },
  {
    "text": "doing it with the help of colic it is a very simple C sharp Cutlass sorry C++ code that is just using",
    "start": "1228820",
    "end": "1235420"
  },
  {
    "text": "kalach which is system a system call that returns you and the rest of us few",
    "start": "1235420",
    "end": "1241120"
  },
  {
    "text": "bytes because allocation just asked for a given amount of bytes for a new object and this is dull and this is the whole",
    "start": "1241120",
    "end": "1248290"
  },
  {
    "text": "alligator it is every time you create an object you ask the system to get a memory for it so it is obviously not",
    "start": "1248290",
    "end": "1254740"
  },
  {
    "text": "very not optimal way of doing things but at least this should work yeah so this",
    "start": "1254740",
    "end": "1261400"
  },
  {
    "text": "is the allocation then we have to handle handles handles are very important topic in the.net runtime like we have pinned",
    "start": "1261400",
    "end": "1268630"
  },
  {
    "text": "handles strong handles the string interning is using handles a lot of handles are being used internally and we",
    "start": "1268630",
    "end": "1276460"
  },
  {
    "text": "need to implement it but it is again quite easy implementation is just operating on an array of handles and",
    "start": "1276460",
    "end": "1283900"
  },
  {
    "text": "putting pointers in such for such array I would not explain it here but it is really really easy code even that I just",
    "start": "1283900",
    "end": "1292390"
  },
  {
    "text": "hard-coded the maximum number of handed handles because I was lazy enough not to make this the collection dynamic so I",
    "start": "1292390",
    "end": "1299260"
  },
  {
    "text": "have handles of maximum 65,000 handles and the handling those handles is pretty",
    "start": "1299260",
    "end": "1308620"
  },
  {
    "text": "easy so this is hole in fact this is the color by zod see only few lines of code",
    "start": "1308620",
    "end": "1314020"
  },
  {
    "text": "that most of them are just done implementation allocator that is calling",
    "start": "1314020",
    "end": "1319660"
  },
  {
    "text": "color and you can look at this code in my repository compile it and plug in on",
    "start": "1319660",
    "end": "1325390"
  },
  {
    "text": "the production on your production servers we will see what will happen just tweet me about the results and",
    "start": "1325390",
    "end": "1333130"
  },
  {
    "text": "obviously we need to set the environment viable like we need to provide a path to this dll that is implementing such 0gc",
    "start": "1333130",
    "end": "1340510"
  },
  {
    "text": "you can also use lunch settings JSON file it depends on you that's easy and the result was I was",
    "start": "1340510",
    "end": "1349809"
  },
  {
    "text": "quite surprised that first of all it worked like oh my god it doesn't cross the run time and I was load testing",
    "start": "1349809",
    "end": "1357460"
  },
  {
    "text": "asp.net core application with the help of it so I just provided very simple Web",
    "start": "1357460",
    "end": "1363790"
  },
  {
    "text": "API that was returning some values and I was load testing it and maybe you will",
    "start": "1363790",
    "end": "1369070"
  },
  {
    "text": "able to see it or not maybe the numbers are too small probably they are in case of the normal SP dot not core",
    "start": "1369070",
    "end": "1375910"
  },
  {
    "text": "application I was able to process during the load test 700 requests per seconds",
    "start": "1375910",
    "end": "1382270"
  },
  {
    "text": "and this was a normal full speed of not core with the normal default full DC and",
    "start": "1382270",
    "end": "1388360"
  },
  {
    "text": "in coils of my 0 DC being plugged into the runtime I was able to process almost",
    "start": "1388360",
    "end": "1394809"
  },
  {
    "text": "700 requests per second I was quite surprised because it's the same number almost so very trivial DC written in a",
    "start": "1394809",
    "end": "1402610"
  },
  {
    "text": "few hours was able to match the same performance I don't know if what it says",
    "start": "1402610",
    "end": "1408220"
  },
  {
    "text": "about the VC or why DC but yeah this is the difference that I was quite shocked",
    "start": "1408220",
    "end": "1413790"
  },
  {
    "text": "obviously there are some differences that we can measure like this is a memory usage visible for the asp.net",
    "start": "1413790",
    "end": "1420960"
  },
  {
    "text": "full version I mean as B does not call with the full DC we see that the memory",
    "start": "1420960",
    "end": "1427120"
  },
  {
    "text": "used is stable because this is working so it reclines memory and the CPUs it's the smaller graph then the blue one is",
    "start": "1427120",
    "end": "1434920"
  },
  {
    "text": "quite low so the CPUs it was the CPU overhead was quite low on the other hand this is the minor version so we have a",
    "start": "1434920",
    "end": "1444640"
  },
  {
    "text": "memory by default we can really fastly measure how fast how we allocate also",
    "start": "1444640",
    "end": "1450040"
  },
  {
    "text": "the GC is kicking in because I mean the CPU is very high it has a very high usage because of this color code for",
    "start": "1450040",
    "end": "1456550"
  },
  {
    "text": "every obey object being created we call the operating system to ask for memory",
    "start": "1456550",
    "end": "1461710"
  },
  {
    "text": "so it is really not optimal way we consume a lot lot of memory I and a lot",
    "start": "1461710",
    "end": "1466720"
  },
  {
    "text": "more CPU but it worked and it was able to sustain",
    "start": "1466720",
    "end": "1471730"
  },
  {
    "text": "[Music] 23,000 requests without crashing so",
    "start": "1471730",
    "end": "1477260"
  },
  {
    "text": "magic happened here that it was able to rock so as a summer it was quite easy to",
    "start": "1477260",
    "end": "1482990"
  },
  {
    "text": "write something like that it the cooperation does in fact the separation between the runtime and the",
    "start": "1482990",
    "end": "1489680"
  },
  {
    "text": "GC turned out to be quite nicely designed there were some caveats like we",
    "start": "1489680",
    "end": "1495110"
  },
  {
    "text": "I need to do some magic to get rid of the so-called write barriers that I'm not covering here because it is kind of",
    "start": "1495110",
    "end": "1500990"
  },
  {
    "text": "too advanced for a such a talk but you can refer to the articles that I'm providing you at the end of this",
    "start": "1500990",
    "end": "1507680"
  },
  {
    "text": "presentation but they were not so very hard to overcome so it took me only I",
    "start": "1507680",
    "end": "1513770"
  },
  {
    "text": "don't know 15 minutes to overcome and also it is quite easy to upgrade it to",
    "start": "1513770",
    "end": "1519890"
  },
  {
    "text": "something more sophisticated like get rid of the color call in a locator and",
    "start": "1519890",
    "end": "1525080"
  },
  {
    "text": "use so called bump pointer a locator which is more sophisticated more optimal way of doing allocations which provided",
    "start": "1525080",
    "end": "1532310"
  },
  {
    "text": "less quite significantly smaller City usage with the same results so it was",
    "start": "1532310",
    "end": "1538880"
  },
  {
    "text": "nice also that we can improve it and so you can take this code play around with",
    "start": "1538880",
    "end": "1545360"
  },
  {
    "text": "it and maybe we'll do something more useful from that and how we can write something useful in fact please meet the",
    "start": "1545360",
    "end": "1553700"
  },
  {
    "text": "epsilon GC I just decided to name my reward you see I mean a fancy name and",
    "start": "1553700",
    "end": "1559700"
  },
  {
    "text": "asked the epsilon disease in the Avion I obviously decided to write something better so I'm using better a Greek",
    "start": "1559700",
    "end": "1566750"
  },
  {
    "text": "letter for that they have epsilon you see I have epsilon G C epsilon G C is a",
    "start": "1566750",
    "end": "1573910"
  },
  {
    "text": "living on a completely new Island because now if we start to reclaim memory we are living the 0 GC which is",
    "start": "1573910",
    "end": "1581540"
  },
  {
    "text": "only allocating and we just need to get somehow to the zero to this epsilon Epsilon Island which will be able to in",
    "start": "1581540",
    "end": "1589670"
  },
  {
    "text": "fact reclaim memory that we are creating so it will be kind of reward to see that",
    "start": "1589670",
    "end": "1595220"
  },
  {
    "text": "we can plug into our servers and because we are doing really development",
    "start": "1595220",
    "end": "1602060"
  },
  {
    "text": "now we need to debug something I was quite surprised at the previous one I was able to implement without even",
    "start": "1602060",
    "end": "1608060"
  },
  {
    "text": "debugging because just few trials was enough to see what was what what crashes",
    "start": "1608060",
    "end": "1613820"
  },
  {
    "text": "and what I should change but here I really need to debug the the back both of my custom GC and the back the runtime",
    "start": "1613820",
    "end": "1621770"
  },
  {
    "text": "so I need the debug version of the runtime I need to build the runtime the debug version I need to build my custom",
    "start": "1621770",
    "end": "1629390"
  },
  {
    "text": "DC in a debug version so yeah that was a something really important at this step",
    "start": "1629390",
    "end": "1635450"
  },
  {
    "text": "so we need to check out the runtime have you ever compiled the runtime the",
    "start": "1635450",
    "end": "1642080"
  },
  {
    "text": "corsola runtime to two hands few hands it takes like 10 minutes it depends on",
    "start": "1642080",
    "end": "1649400"
  },
  {
    "text": "the power of your computer then you have your own version of the runtime which you can debug step by step because it",
    "start": "1649400",
    "end": "1656030"
  },
  {
    "text": "will be in the back ration and probably nose verse in this scenario it is really",
    "start": "1656030",
    "end": "1661370"
  },
  {
    "text": "useful because we need need you need to understand what is going on so we really need to debug it after those 10 minutes",
    "start": "1661370",
    "end": "1670220"
  },
  {
    "text": "you will have this and then it is not so easy to utilize even at such a runtime",
    "start": "1670220",
    "end": "1676040"
  },
  {
    "text": "because you have a runtime but runtime depends a lot of many other libraries managed ones the managed ones that",
    "start": "1676040",
    "end": "1683210"
  },
  {
    "text": "somehow cooperate with the runtime and it is not so easy to take your custom runtime and your not run your own",
    "start": "1683210",
    "end": "1690100"
  },
  {
    "text": "application on it it is not so trivial to make those things cooperate so the",
    "start": "1690100",
    "end": "1696110"
  },
  {
    "text": "easiest way in fact is do something like so compile your application in so called",
    "start": "1696110",
    "end": "1703820"
  },
  {
    "text": "self-contained mode you publish your application in so called self-contained mode it means that this application will",
    "start": "1703820",
    "end": "1710480"
  },
  {
    "text": "be compiled and deployed all together with the runtime so the whole runtime",
    "start": "1710480",
    "end": "1715790"
  },
  {
    "text": "will be within the folder of the application and then you have this debug version of your runtime you just copy",
    "start": "1715790",
    "end": "1722570"
  },
  {
    "text": "pasting the your own custom version of the runtime over the files in this self-contained application then you will",
    "start": "1722570",
    "end": "1729890"
  },
  {
    "text": "be able to run your application with the help of our custom debug version of the runtime",
    "start": "1729890",
    "end": "1736049"
  },
  {
    "text": "mics this is not I'm mentioning it because it is not so trivial I mean I was quite surprised that we need to do",
    "start": "1736049",
    "end": "1742950"
  },
  {
    "text": "some kind of copy pasting magic to run something useful on the custom version",
    "start": "1742950",
    "end": "1748830"
  },
  {
    "text": "of the runtime and after doing that we need something when you have some",
    "start": "1748830",
    "end": "1754139"
  },
  {
    "text": "application that we will be running because we need some code to be tested and then we have our custom debug",
    "start": "1754139",
    "end": "1760740"
  },
  {
    "text": "version of the runtime and a deal begins for me an idea is just the time that I'm",
    "start": "1760740",
    "end": "1765990"
  },
  {
    "text": "just kind to the need for this presentation it is a third driven",
    "start": "1765990",
    "end": "1771120"
  },
  {
    "text": "development like there is no documentation about custom GC I mean I",
    "start": "1771120",
    "end": "1777000"
  },
  {
    "text": "have a custom GC interface and now I need to write it but I don't know how because there is no documentation and",
    "start": "1777000",
    "end": "1783980"
  },
  {
    "text": "luckily in debug mode the runtime has a lot of assets and in fact those it is",
    "start": "1783980",
    "end": "1792360"
  },
  {
    "text": "less forgiving we should really not be able to do something which we harmful because icon",
    "start": "1792360",
    "end": "1797549"
  },
  {
    "text": "the runtime contains so many authors inside and it is good for us because in",
    "start": "1797549",
    "end": "1804659"
  },
  {
    "text": "the lack of documentation asserts simply drive our development because we are",
    "start": "1804659",
    "end": "1810750"
  },
  {
    "text": "hitting assets and we start to understand ok in this scenario this assert failed so I probably should do",
    "start": "1810750",
    "end": "1817559"
  },
  {
    "text": "this or that this is a kite side of doing things but at least we have something so when we started to the very",
    "start": "1817559",
    "end": "1826950"
  },
  {
    "text": "first run of my custom console hello world application run on the custom",
    "start": "1826950",
    "end": "1833279"
  },
  {
    "text": "debug version of the runtime with my custom GC plugged in I hit the very",
    "start": "1833279",
    "end": "1840000"
  },
  {
    "text": "first assert and then I will need to understand ok at some point I'm seeing",
    "start": "1840000",
    "end": "1845549"
  },
  {
    "text": "that during allocation of some array some object is being checked whether it",
    "start": "1845549",
    "end": "1852870"
  },
  {
    "text": "is into the hip or not it turns out that in fact the runtime at some point is",
    "start": "1852870",
    "end": "1858450"
  },
  {
    "text": "calling this method this hip pointer which means the runtime is asking",
    "start": "1858450",
    "end": "1863639"
  },
  {
    "text": "whether this particular object is be allocated by the GC and for my 0dc it",
    "start": "1863639",
    "end": "1870809"
  },
  {
    "text": "was just enough to say if it is not null okay I'm it is allocated by me because I was",
    "start": "1870809",
    "end": "1876870"
  },
  {
    "text": "allocating everything like that but in case of my more sophisticated absolute",
    "start": "1876870",
    "end": "1881880"
  },
  {
    "text": "epsilon GC I need to have some more logic here to answer the right question to provide the right answer to this",
    "start": "1881880",
    "end": "1890100"
  },
  {
    "text": "question so I started to track what objects in fact I really allocated by my",
    "start": "1890100",
    "end": "1896250"
  },
  {
    "text": "code so I started to track segments and now I'm able to ask for with the proper",
    "start": "1896250",
    "end": "1902300"
  },
  {
    "text": "and the problem I give the value transfer whether an object has been allocated by me or not it was quite easy",
    "start": "1902300",
    "end": "1909780"
  },
  {
    "text": "change driven by the assert because I just hit some assert during the development and the whole story",
    "start": "1909780",
    "end": "1916920"
  },
  {
    "text": "continues like that I mean how everything is about a third and then because epsilon this is the real world",
    "start": "1916920",
    "end": "1924990"
  },
  {
    "text": "this is so I need those two steps like mark-and-sweep because it is living on the mark and",
    "start": "1924990",
    "end": "1931110"
  },
  {
    "text": "sweet violent so it is not 0 DC anymore I need those two mark two phases marking",
    "start": "1931110",
    "end": "1938400"
  },
  {
    "text": "phase and sweep phase the mark face is the one that marks all the objects that",
    "start": "1938400",
    "end": "1944309"
  },
  {
    "text": "are living so I need to know what objects are living so far so I should not reply memory after them and they I",
    "start": "1944309",
    "end": "1951510"
  },
  {
    "text": "will have a sweet face that will just mark out all those which are no longer used as a free space to be reused",
    "start": "1951510",
    "end": "1957960"
  },
  {
    "text": "obviously I'm assuming the simplest non-concurrent approach because it is too hard to write something concurrent",
    "start": "1957960",
    "end": "1964620"
  },
  {
    "text": "and in fact it ends that my Upsilon GGC",
    "start": "1964620",
    "end": "1969630"
  },
  {
    "text": "is going to trigger GC at allocation path if it is running out of memory",
    "start": "1969630",
    "end": "1974760"
  },
  {
    "text": "which I have somehow will track I don't know how it will mark all objects in all",
    "start": "1974760",
    "end": "1980340"
  },
  {
    "text": "segments my maintained by me which means I will just notice which objects are still reachable which objects are still",
    "start": "1980340",
    "end": "1987809"
  },
  {
    "text": "live and then I will sweep you news unused objects into free space like I",
    "start": "1987809",
    "end": "1994140"
  },
  {
    "text": "will mark all the space after they're no longer needed objects as a free space to be",
    "start": "1994140",
    "end": "1999380"
  },
  {
    "text": "in the future as new places for allocating objects so the very first",
    "start": "1999380",
    "end": "2006610"
  },
  {
    "text": "think now we need is just to write the code that we'll be able to do very simple thing I need because my algorithm",
    "start": "2006610",
    "end": "2013900"
  },
  {
    "text": "is non-concurrent one I need to suspend the whole everything I need in factor to",
    "start": "2013900",
    "end": "2020980"
  },
  {
    "text": "suspend I need to suspend all the threads in my application and there is this API provided by the I DC I CLR to",
    "start": "2020980",
    "end": "2031360"
  },
  {
    "text": "DC interface which has this very nice method suspend ie which is just asking",
    "start": "2031360",
    "end": "2038320"
  },
  {
    "text": "the runtime to suspend all the threads in our application because I need to do",
    "start": "2038320",
    "end": "2044110"
  },
  {
    "text": "something I need to do the GC and then I would like to call obviously to call",
    "start": "2044110",
    "end": "2049360"
  },
  {
    "text": "restart EE which is just asking the runtime to risk the resume all the threads to proceed with they work so",
    "start": "2049360",
    "end": "2058540"
  },
  {
    "text": "this is quite easy I will just calling this and I obviously what happened when I ran it assert because it's like",
    "start": "2058540",
    "end": "2064929"
  },
  {
    "text": "development is driven by a certain mother case so it turns out that for",
    "start": "2064929",
    "end": "2070148"
  },
  {
    "text": "example I'm not able to call suspend EE if there is no the suspense is expecting",
    "start": "2070149",
    "end": "2078850"
  },
  {
    "text": "the method is in DC in progress to say that yes the GC is in progress okay",
    "start": "2078850",
    "end": "2085388"
  },
  {
    "text": "so let's make a flag global flag disease in progress and my new is DC in progress",
    "start": "2085389",
    "end": "2092770"
  },
  {
    "text": "method will just return this value of this flag I'm now tracking whether really I'm now doing GC or not",
    "start": "2092770",
    "end": "2100540"
  },
  {
    "text": "and yes I'm setting this flag to true before calling suspending and doing some",
    "start": "2100540",
    "end": "2107020"
  },
  {
    "text": "things that I will be doing here and then I'm calling the setting this flag to false and suspending resuming all the",
    "start": "2107020",
    "end": "2114490"
  },
  {
    "text": "threads with the help of rs30 method and obviously what happened here an assert",
    "start": "2114490",
    "end": "2120480"
  },
  {
    "text": "now an assault happened at the level of the resumed runtime because it turns out",
    "start": "2120480",
    "end": "2125920"
  },
  {
    "text": "that the resumed our runtime is expecting that SDC is not in progress",
    "start": "2125920",
    "end": "2132190"
  },
  {
    "text": "which was it surprised I mean it is expecting that it will be in progress it shouldn't be",
    "start": "2132190",
    "end": "2137930"
  },
  {
    "text": "not in progress and it turns out that West RTE says this flag by its own so",
    "start": "2137930",
    "end": "2145640"
  },
  {
    "text": "again by data third I discovered that something that something like that should be said to",
    "start": "2145640",
    "end": "2154810"
  },
  {
    "text": "fulfill its expectations so restart EE just says that this flag to false by",
    "start": "2154810",
    "end": "2161600"
  },
  {
    "text": "this all so now after only two asserts of have a proper valid code that is able",
    "start": "2161600",
    "end": "2167210"
  },
  {
    "text": "to suspend all the threats for my own needs then I will do some magic and then",
    "start": "2167210",
    "end": "2172820"
  },
  {
    "text": "I will just resume in the work assuming their threats and that's nice quite easy",
    "start": "2172820",
    "end": "2178640"
  },
  {
    "text": "if you pass all these assert driven errors so then I will need to start",
    "start": "2178640",
    "end": "2185270"
  },
  {
    "text": "doing some serious job because I'm just only able now to suspend threats which is not so sophisticated and the real",
    "start": "2185270",
    "end": "2192470"
  },
  {
    "text": "work here starts from scanning what are the living objects in my application and",
    "start": "2192470",
    "end": "2198580"
  },
  {
    "text": "I need to start from so-called roots I have a lot of various types of roots in",
    "start": "2198580",
    "end": "2204890"
  },
  {
    "text": "application the most typical ones are the stock roots when your application is running you have a method in these",
    "start": "2204890",
    "end": "2210890"
  },
  {
    "text": "methods you have local variables and those method variables are the roots of your objects because they are just",
    "start": "2210890",
    "end": "2216980"
  },
  {
    "text": "keeping those objects are life you have local viable so this is representing a root for some object so I need an API to",
    "start": "2216980",
    "end": "2225650"
  },
  {
    "text": "scan all those local variables and luckily there is such an IP I provided",
    "start": "2225650",
    "end": "2231680"
  },
  {
    "text": "it is called GC scan roots and you just provide a nicole back for it and this",
    "start": "2231680",
    "end": "2239090"
  },
  {
    "text": "callback will be called for every object discovered as being rooted by the stack",
    "start": "2239090",
    "end": "2245450"
  },
  {
    "text": "by the local variable by your methods so quite easy again think you provide this",
    "start": "2245450",
    "end": "2251420"
  },
  {
    "text": "callback and then you are able to scan all the roots on the local variables on",
    "start": "2251420",
    "end": "2257630"
  },
  {
    "text": "the methods being executed when you suspended the code and when you suspend it all the threats and obviously then we",
    "start": "2257630",
    "end": "2265970"
  },
  {
    "text": "need to scan other type of roots in cars of our oops alone GC we have only two types of roots",
    "start": "2265970",
    "end": "2271170"
  },
  {
    "text": "in fact we have only local roots local variables roots and handles handles it",
    "start": "2271170",
    "end": "2277950"
  },
  {
    "text": "is much easier to handle because we are owner of the handle stable so scanning",
    "start": "2277950",
    "end": "2283079"
  },
  {
    "text": "it is just going through our own array of handles because we know all the details of this handles array so it is",
    "start": "2283079",
    "end": "2290640"
  },
  {
    "text": "even easier and obviously we need to implement all this thing like it is a",
    "start": "2290640",
    "end": "2297150"
  },
  {
    "text": "poster which shows the current implementation of the GC in.net and we",
    "start": "2297150",
    "end": "2304769"
  },
  {
    "text": "just have written we have just written a very simple if you erase from this how",
    "start": "2304769",
    "end": "2312150"
  },
  {
    "text": "it really should work and this is just to compare the complexity we just here starting to implement it and yes so we",
    "start": "2312150",
    "end": "2324359"
  },
  {
    "text": "have this code which should be quite nicely quite nice start of work for the",
    "start": "2324359",
    "end": "2331200"
  },
  {
    "text": "further development we are stunning scanning the roots the local ones and",
    "start": "2331200",
    "end": "2336240"
  },
  {
    "text": "scanning the handles roots from the handles and I was quite surprised but it",
    "start": "2336240",
    "end": "2342539"
  },
  {
    "text": "just worked I mean there was no assert anymore I was just able to print all",
    "start": "2342539",
    "end": "2348480"
  },
  {
    "text": "local objects that are keeps alive by the scan by the study by this local",
    "start": "2348480",
    "end": "2356759"
  },
  {
    "text": "viable fruits and handles I was very happy seeing this screen I miss very",
    "start": "2356759",
    "end": "2361980"
  },
  {
    "text": "happy seeing this result because now it means I'm something to start from there",
    "start": "2361980",
    "end": "2367740"
  },
  {
    "text": "are those objects from which I should start to traverse all the whole graph because they are the very beginning of",
    "start": "2367740",
    "end": "2374130"
  },
  {
    "text": "the whole graph we will see here a magical numbers like their confirmation",
    "start": "2374130",
    "end": "2379440"
  },
  {
    "text": "that it is really working is that a lot of those objects are strings and my my",
    "start": "2379440",
    "end": "2385470"
  },
  {
    "text": "example application was allocating a lot of strings so yeah it means that it is",
    "start": "2385470",
    "end": "2392309"
  },
  {
    "text": "working I have a lot of strings as a local variables doing the DC happened",
    "start": "2392309",
    "end": "2397680"
  },
  {
    "text": "and try to do some work but it is a very easy step like you",
    "start": "2397680",
    "end": "2404910"
  },
  {
    "text": "discover all the roots on the stack or in the handles now we need to do something more sophisticated like we",
    "start": "2404910",
    "end": "2412350"
  },
  {
    "text": "need to start to traverse the whole object graph and we know that this particular object is alive because it",
    "start": "2412350",
    "end": "2418770"
  },
  {
    "text": "has a local variable or in some method but now I need to traverse it so it means I need to go from this object to",
    "start": "2418770",
    "end": "2426690"
  },
  {
    "text": "another objects that are referenced by this object and then to go through the all the references from these particular",
    "start": "2426690",
    "end": "2433410"
  },
  {
    "text": "objects to the all objects that it refers so we need to traverse all the",
    "start": "2433410",
    "end": "2438420"
  },
  {
    "text": "object graph and this is kind of really tricky because currently there is no API",
    "start": "2438420",
    "end": "2443820"
  },
  {
    "text": "for that and it was at this point I was very sad and disappointed because there",
    "start": "2443820",
    "end": "2449100"
  },
  {
    "text": "is no API to discover that ok I have an address than an object and now I need to",
    "start": "2449100",
    "end": "2454830"
  },
  {
    "text": "know what this object points to what are the references inside this object that I",
    "start": "2454830",
    "end": "2459990"
  },
  {
    "text": "should follow to discover what is being reachable because this object is being",
    "start": "2459990",
    "end": "2465420"
  },
  {
    "text": "alive so there is no API for that I'm working on it to add it to the core CLR",
    "start": "2465420",
    "end": "2471330"
  },
  {
    "text": "code because it is just it does not make sense to have all this custom we see without such API because at this is a",
    "start": "2471330",
    "end": "2479040"
  },
  {
    "text": "blocker simply I'm not able to traverse the object graph so it doesn't make sense to write an ADC without such API",
    "start": "2479040",
    "end": "2487940"
  },
  {
    "text": "so as a summary the development of such custom GC is really a third driven",
    "start": "2487940",
    "end": "2495060"
  },
  {
    "text": "development there is no documentation I should probably write some or maybe Microsoft should probably write some",
    "start": "2495060",
    "end": "2501780"
  },
  {
    "text": "because you there is nothing to start from yeah besides my it simple up tries",
    "start": "2501780",
    "end": "2510480"
  },
  {
    "text": "here and maybe that's because only few people in the world are interested in writing custom don't know GC but still",
    "start": "2510480",
    "end": "2517980"
  },
  {
    "text": "if there is such project probably it should being as left in the state that is usable so a documentation here could",
    "start": "2517980",
    "end": "2525960"
  },
  {
    "text": "be quite nice to have it was quite easy to utilize the suspend to restart",
    "start": "2525960",
    "end": "2532980"
  },
  {
    "text": "capability to suspend and restart all the threats it was very easy to find the",
    "start": "2532980",
    "end": "2538829"
  },
  {
    "text": "stock routes it was also nice even easier to find the handle routes because",
    "start": "2538829",
    "end": "2544369"
  },
  {
    "text": "we manage them and currently the whole thing is blocked because we are not able",
    "start": "2544369",
    "end": "2550859"
  },
  {
    "text": "to traverse the object graph because we don't know those River and references",
    "start": "2550859",
    "end": "2555890"
  },
  {
    "text": "outgoing from a particular object so the whole project is postponed and blocked",
    "start": "2555890",
    "end": "2561960"
  },
  {
    "text": "by by the lack of this API the rest is just the sea of unknown here like I",
    "start": "2561960",
    "end": "2568740"
  },
  {
    "text": "don't know what problems I will meet in the future for sure there will be a lots of problems and so what's next what's",
    "start": "2568740",
    "end": "2576480"
  },
  {
    "text": "next for me for sure the very first step is to add this API of traversing objects",
    "start": "2576480",
    "end": "2583589"
  },
  {
    "text": "or maybe asked Microsoft to add such API because without it it doesn't make sense",
    "start": "2583589",
    "end": "2588990"
  },
  {
    "text": "I'm living here starting to live here on this Upsilon island trying to implement",
    "start": "2588990",
    "end": "2595710"
  },
  {
    "text": "those things grassing trying retrying trying to implement it and there is this",
    "start": "2595710",
    "end": "2602970"
  },
  {
    "text": "concurrent compacting GC which should be our target because the main difference",
    "start": "2602970",
    "end": "2608130"
  },
  {
    "text": "between the current dotnet GC and some newest this is available for JVM they",
    "start": "2608130",
    "end": "2615240"
  },
  {
    "text": "are about the able to compact during the application is working the current",
    "start": "2615240",
    "end": "2621000"
  },
  {
    "text": "dotnet GC is not able to do that so we need to stop all the threats to compacts memory why in JVM words we have at least",
    "start": "2621000",
    "end": "2628349"
  },
  {
    "text": "through this is that able to compact memory why the application is working which is quite a hard topic because we",
    "start": "2628349",
    "end": "2635160"
  },
  {
    "text": "are moving objects why we are using them so it is obviously not so easy task and this is for me the goal here to try to",
    "start": "2635160",
    "end": "2643260"
  },
  {
    "text": "implement something like that so I'm trying to get there somehow currently",
    "start": "2643260",
    "end": "2648300"
  },
  {
    "text": "I'm starting this epsilon Island I'm trying to find this treasure here to everyone be happy and probably it will I",
    "start": "2648300",
    "end": "2656460"
  },
  {
    "text": "mean I'm maybe sometime it will happen if you like such things there is a geet",
    "start": "2656460",
    "end": "2662080"
  },
  {
    "text": "repository for that you can just start to help me if you like C++ and memory",
    "start": "2662080",
    "end": "2668740"
  },
  {
    "text": "management if you really like to do something like that there is a perfect book about garbage collection if in",
    "start": "2668740",
    "end": "2675100"
  },
  {
    "text": "general very Academical one like this is a very dense book about every possible",
    "start": "2675100",
    "end": "2681220"
  },
  {
    "text": "GC algorithm that has been invented so far it describes this in details in very",
    "start": "2681220",
    "end": "2687100"
  },
  {
    "text": "Academical way but after it you will just know everything but then you will need to implement it somehow because",
    "start": "2687100",
    "end": "2693010"
  },
  {
    "text": "it's mostly about not the implementation details is mostly about how they work as",
    "start": "2693010",
    "end": "2699070"
  },
  {
    "text": "a concept obviously my book if you are interested in how the current is dotnet",
    "start": "2699070",
    "end": "2704470"
  },
  {
    "text": "GC is working and if you'd like to know a little bit more details about this particular zero these implementations I",
    "start": "2704470",
    "end": "2711400"
  },
  {
    "text": "also refer you to those two articles from my blog about those Caviar's about",
    "start": "2711400",
    "end": "2717400"
  },
  {
    "text": "writing write barriers some more details if you get if you got interested and in",
    "start": "2717400",
    "end": "2724240"
  },
  {
    "text": "fact that's all thank you it was quite",
    "start": "2724240",
    "end": "2735130"
  },
  {
    "text": "fast do you have any questions do you feel encouraged to write your own custom",
    "start": "2735130",
    "end": "2741430"
  },
  {
    "text": "DC yeah as far as I know I'm the only",
    "start": "2741430",
    "end": "2749590"
  },
  {
    "text": "guide trying to use it so probably no",
    "start": "2749590",
    "end": "2755100"
  },
  {
    "text": "but I don't know maybe they are doing this there is good question because in",
    "start": "2755100",
    "end": "2761080"
  },
  {
    "text": "JVM words it's happening like there are companies providing their own runtimes with their own batter disease so there",
    "start": "2761080",
    "end": "2768550"
  },
  {
    "text": "is a field for a business probably but for now I don't I'm not a very friendly of like that yep",
    "start": "2768550",
    "end": "2777780"
  },
  {
    "text": "as far as I know this project has been created by a summer intern thus has left",
    "start": "2783960",
    "end": "2790870"
  },
  {
    "text": "after the summer and probably he left this at the same status I'm now so he",
    "start": "2790870",
    "end": "2797440"
  },
  {
    "text": "didn't implement anything really real-world like he just decoupled it",
    "start": "2797440",
    "end": "2802720"
  },
  {
    "text": "provide the contract compile it and yeah then they stopped the work has stopped",
    "start": "2802720",
    "end": "2809280"
  },
  {
    "text": "but maybe they have some I'm I don't know some implementations yep which one",
    "start": "2809280",
    "end": "2823140"
  },
  {
    "text": "with a github repository link yeah okay",
    "start": "2823680",
    "end": "2829890"
  },
  {
    "text": "it was just somewhere at the beginning",
    "start": "2829890",
    "end": "2835170"
  },
  {
    "text": "maybe other question when I'm just growing",
    "start": "2836640",
    "end": "2841590"
  },
  {
    "text": "it is really yeah currently it is not possible because there is no such API for traversing those objects you can",
    "start": "2846930",
    "end": "2853809"
  },
  {
    "text": "write your own I mean you can copy paste the code from the runtime to custom this is trying to do that but then you will",
    "start": "2853809",
    "end": "2860559"
  },
  {
    "text": "be highly coupled with the current implementation the runtime should provide this API not your own decision",
    "start": "2860559",
    "end": "2866650"
  },
  {
    "text": "know the internals of the runtime to use this logic so all as it is possible now",
    "start": "2866650",
    "end": "2873970"
  },
  {
    "text": "no one guarantees that the future version of the runtime will change a little bit how it organized internally",
    "start": "2873970",
    "end": "2879789"
  },
  {
    "text": "so your copy pasted code will be no longer valid so we could try but I would",
    "start": "2879789",
    "end": "2885880"
  },
  {
    "text": "rather not to go that direction I'm just trying to get this IP I working and",
    "start": "2885880",
    "end": "2892240"
  },
  {
    "text": "other questions yep yep I'm not sure I",
    "start": "2892240",
    "end": "2905619"
  },
  {
    "text": "didn't receive any direct feelings I don't know what they think I probably",
    "start": "2905619",
    "end": "2910900"
  },
  {
    "text": "maybe I just should ask directly I know that they are of that we were talking",
    "start": "2910900",
    "end": "2916450"
  },
  {
    "text": "about that but I believe this project for them is very high I mean the lowest",
    "start": "2916450",
    "end": "2922660"
  },
  {
    "text": "priority possible like someone did it and someone like me just started to use",
    "start": "2922660",
    "end": "2928839"
  },
  {
    "text": "it and because I'm the only one in the world the priority is high quite low here but",
    "start": "2928839",
    "end": "2934950"
  },
  {
    "text": "maybe I should start asking them directly ok and other questions if not",
    "start": "2934950",
    "end": "2943720"
  },
  {
    "text": "thank you and see you on the github repository just create some pull requests er thank you",
    "start": "2943720",
    "end": "2950940"
  },
  {
    "text": "[Applause]",
    "start": "2950940",
    "end": "2956179"
  }
]