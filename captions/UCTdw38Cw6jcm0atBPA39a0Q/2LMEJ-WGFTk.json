[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "and please God won't the pain stop won't somebody think of the children okay I spend a lot of my time doing this",
    "start": "900",
    "end": "7980"
  },
  {
    "text": "and when we when I draw a diagram I'd be very clear to talk is all about meaning and so I want to be clear about my",
    "start": "7980",
    "end": "14219"
  },
  {
    "text": "meanings and how I draw diagrams and what I show when I show an arrow like this in a diagram of a microservice",
    "start": "14219",
    "end": "20400"
  },
  {
    "text": "architecture we're seeing here an arrow going from one service to another and this is denoting some form of logical",
    "start": "20400",
    "end": "27720"
  },
  {
    "text": "dependency what I'm showing you here is not data flow because that kind of",
    "start": "27720",
    "end": "32820"
  },
  {
    "text": "implies that data goes One Direction which it never does I'm showing here a logical dependency I'm saying here that",
    "start": "32820",
    "end": "39360"
  },
  {
    "text": "the shipping returns microservice depends on functionality provided by the",
    "start": "39360",
    "end": "44460"
  },
  {
    "text": "shipping microservice and when we think about architecture at a logical level when we're sort of abstracting ourselves",
    "start": "44460",
    "end": "49980"
  },
  {
    "text": "away from the underlying implementation detail trying to get these logical dependencies right to avoid things like",
    "start": "49980",
    "end": "56280"
  },
  {
    "text": "circular dependencies or services that seem overly chatty or you know overly kind of coupled this is a very useful",
    "start": "56280",
    "end": "63180"
  },
  {
    "text": "place to start and at microservice architecture we can Implement these dependencies in a number",
    "start": "63180",
    "end": "69360"
  },
  {
    "text": "of different ways but generically speaking what we're saying here is the returns microservice depends on",
    "start": "69360",
    "end": "75180"
  },
  {
    "text": "functionality provided by the shipping microservice and that's what this arrow is showing simple straightforward stuff",
    "start": "75180",
    "end": "83460"
  },
  {
    "text": "of course spending all of you know I can't spend all of my time in the world of logical architecture because you know",
    "start": "83460",
    "end": "89400"
  },
  {
    "text": "back in the sort of I would say late 1990s early 2000s you could make a very good career as a highly paid our",
    "start": "89400",
    "end": "96060"
  },
  {
    "text": "software architect existing purely in a space of logical architecture and never having to solid your hands with things",
    "start": "96060",
    "end": "102299"
  },
  {
    "text": "like actually implementing the system or understanding how code works that days",
    "start": "102299",
    "end": "107820"
  },
  {
    "text": "those days have gone thankfully we now have to think actually about how we're going to take these ideas and actually",
    "start": "107820",
    "end": "113520"
  },
  {
    "text": "Implement them so then people start talking to me about well Sam how are we going to communicate between these",
    "start": "113520",
    "end": "119040"
  },
  {
    "text": "things are we using synchronous or asynchronous communication and that's what this talk",
    "start": "119040",
    "end": "125640"
  },
  {
    "start": "120000",
    "end": "434000"
  },
  {
    "text": "is all going to be about now I want to start off with an admission I've always struggled with",
    "start": "125640",
    "end": "131160"
  },
  {
    "text": "this these two terms and I think this talk today is really me trying to",
    "start": "131160",
    "end": "136560"
  },
  {
    "text": "summarize why I struggle with these terms when it comes to logical interactions",
    "start": "136560",
    "end": "142200"
  },
  {
    "text": "the concepts I found to be more useful when thinking about the nature of interactions between Services when I'm",
    "start": "142200",
    "end": "149160"
  },
  {
    "text": "trying to think about getting my boundaries right is not to think about synchronous and asynchronous but instead",
    "start": "149160",
    "end": "154440"
  },
  {
    "text": "to think about the differentiation between request response or into communication sometimes called request",
    "start": "154440",
    "end": "160200"
  },
  {
    "text": "driven or event-driven communication and I think here the differential is",
    "start": "160200",
    "end": "165720"
  },
  {
    "text": "quite Stark and quite clear and as a result is often a more meaningful way to",
    "start": "165720",
    "end": "170819"
  },
  {
    "text": "think about communication between things probably the most common form of communication that I see in an",
    "start": "170819",
    "end": "176580"
  },
  {
    "text": "inter-process context is request response-based communication and this is often because it's quite analogous to",
    "start": "176580",
    "end": "183780"
  },
  {
    "text": "calling a method on an object and for many people they take an existing monolithic application they break it",
    "start": "183780",
    "end": "190019"
  },
  {
    "text": "down into Services perhaps using something like an RPC mechanism and that kind of promotes this sort of request",
    "start": "190019",
    "end": "196260"
  },
  {
    "text": "response flow I have a service that needs to accomplish something in this situation here the return service needs",
    "start": "196260",
    "end": "203459"
  },
  {
    "text": "to facilitate a customer returning an item and so it needs a postage label but",
    "start": "203459",
    "end": "208800"
  },
  {
    "text": "it cannot generate that postage label by itself that's the responsibility of the shipping microservice and so we send a",
    "start": "208800",
    "end": "216300"
  },
  {
    "text": "request we say hello could I have a shipping label here's the size of the package here's the weight",
    "start": "216300",
    "end": "222180"
  },
  {
    "text": "here's the destination and in this case here the shipping microservice understands all different courier",
    "start": "222180",
    "end": "227280"
  },
  {
    "text": "companies we might work with it selects the right kind of label and it sends it back and that is our response we often",
    "start": "227280",
    "end": "233400"
  },
  {
    "text": "talk in this context about the returns microservice here being the consumer because it is consuming the",
    "start": "233400",
    "end": "240239"
  },
  {
    "text": "functionality provided by another microservice in request response or into Communications quite conversational and",
    "start": "240239",
    "end": "247379"
  },
  {
    "text": "the consumer is driving the interaction this is quite starkly compared to",
    "start": "247379",
    "end": "253439"
  },
  {
    "text": "event-driven collaboration with event driven collaboration we start with an event an event is omitted an",
    "start": "253439",
    "end": "260940"
  },
  {
    "text": "event is a fact it is a statement something has occurred in this case here the stock level has changed and it is",
    "start": "260940",
    "end": "269520"
  },
  {
    "text": "then up to other microservices to decide if they want to react to that event and",
    "start": "269520",
    "end": "275820"
  },
  {
    "text": "if they decide they want to react to that event they get to decide what they do with that information in this case",
    "start": "275820",
    "end": "281639"
  },
  {
    "text": "here we have the promotions microservice which is saying okay well I know that when we reached our stock level hits a",
    "start": "281639",
    "end": "288240"
  },
  {
    "text": "certain volume I should automatically discount the products because we want to shift them out of our warehouse",
    "start": "288240",
    "end": "293880"
  },
  {
    "text": "whereas the wishlist microservice might say well hang on okay I know all these people were really interested in when",
    "start": "293880",
    "end": "300300"
  },
  {
    "text": "this new album came out so I'm now going to email them and let them know that their item that they had wish listed for",
    "start": "300300",
    "end": "306600"
  },
  {
    "text": "pre-order is now available and in stock two different microservices here on the right hand side are both the consumers",
    "start": "306600",
    "end": "314220"
  },
  {
    "text": "in this context they are consuming the functionality but they don't initiate",
    "start": "314220",
    "end": "319320"
  },
  {
    "text": "this distinction for me has always been quite clear and quite useful as a way of",
    "start": "319320",
    "end": "324360"
  },
  {
    "text": "saying what style of communication do we want and I tend to start at this point",
    "start": "324360",
    "end": "329520"
  },
  {
    "text": "in fact once I've understood the nature of the domain we're working on we start sketching out our service boundaries",
    "start": "329520",
    "end": "336120"
  },
  {
    "text": "we're going to start thinking okay well naturally with this type of interaction are we drawn more in One Direction than",
    "start": "336120",
    "end": "342000"
  },
  {
    "text": "the other and then we overlay other concerns on top of this things like what are our",
    "start": "342000",
    "end": "347160"
  },
  {
    "text": "security concerns latency sort of just throughput what technology do you already have in the mix and how well",
    "start": "347160",
    "end": "352860"
  },
  {
    "text": "does the technology we have available to us match to these styles but very quickly the conversation comes",
    "start": "352860",
    "end": "360960"
  },
  {
    "text": "back to this synchronous versus asynchronous but Sam I want an answer because some people are",
    "start": "360960",
    "end": "367979"
  },
  {
    "text": "telling me that I'm a bad person for using synchronous communication and I've got to use asynchronous communication",
    "start": "367979",
    "end": "373740"
  },
  {
    "text": "because my hair will be long and glossy I will be more attractive to the members",
    "start": "373740",
    "end": "379259"
  },
  {
    "text": "of the appropriate sex I would have a spring in my gate",
    "start": "379259",
    "end": "385100"
  },
  {
    "text": "so trying to combine these models I would often talk about how these ideas combine I would talk about how with a",
    "start": "385259",
    "end": "392100"
  },
  {
    "text": "request response-based interaction it can be synchronous or asynchronous in",
    "start": "392100",
    "end": "397139"
  },
  {
    "text": "nature and that once you decided to use the questions bonds based communication you still have another choice to make",
    "start": "397139",
    "end": "403259"
  },
  {
    "text": "which is which one of these implementations would you prefer event-driven communication I would",
    "start": "403259",
    "end": "409080"
  },
  {
    "text": "always describe as always being asynchronous in nature if you're saying I'm going to use event driven",
    "start": "409080",
    "end": "414840"
  },
  {
    "text": "communication you are naturally gravitating towards asynchronous communication",
    "start": "414840",
    "end": "420960"
  },
  {
    "text": "I kind of sort of still stand by this kinda sorter",
    "start": "420960",
    "end": "426360"
  },
  {
    "text": "but the problem I've got and this came up when I was trying to do the second well and I was writing the second edition of my book recently was",
    "start": "426360",
    "end": "432960"
  },
  {
    "text": "realizing that there is not any good consistent definition of what the term asynchronous means",
    "start": "432960",
    "end": "440639"
  },
  {
    "start": "434000",
    "end": "575000"
  },
  {
    "text": "and I was inspired to do this particular talk partly because my challenge is here but also partly by this post by Pat",
    "start": "440639",
    "end": "447060"
  },
  {
    "text": "Helen so Pat Helen is one of the pioneers of computing you should read his sub stack it's very infrequent but",
    "start": "447060",
    "end": "452880"
  },
  {
    "text": "it's always a very good signal to noise ratio and in his particular article Pat",
    "start": "452880",
    "end": "458220"
  },
  {
    "text": "is trying to explore the term eventual consistency and he makes the argument",
    "start": "458220",
    "end": "463860"
  },
  {
    "text": "that eventual consistency part of the reason it can be so confusing is that we use the term consistency in lots of",
    "start": "463860",
    "end": "471180"
  },
  {
    "text": "different contexts in Computing but where that term has very different meanings",
    "start": "471180",
    "end": "477960"
  },
  {
    "text": "so he actually argues in this that we should probably prep better refer to eventual consistency as eventual",
    "start": "477960",
    "end": "484259"
  },
  {
    "text": "convergence because eventual consistency describes a system where eventually",
    "start": "484259",
    "end": "490560"
  },
  {
    "text": "every replica will converge to show the same state",
    "start": "490560",
    "end": "496440"
  },
  {
    "text": "whereas consistency we often get confused in terms of say the consistency of an acid database transaction",
    "start": "496440",
    "end": "503699"
  },
  {
    "text": "and if you think you know what the consistency of an asset database transaction actually is go and now look",
    "start": "503699",
    "end": "510360"
  },
  {
    "text": "at the definition of it because it will surprise you because it's not at all what you thought",
    "start": "510360",
    "end": "515580"
  },
  {
    "text": "so I was struggling with this a little bit and I thought well hang on can I do a pat Helen can I come up with a better term for",
    "start": "515580",
    "end": "521940"
  },
  {
    "text": "asynchronous communication in short answer no because I'm not as smart as him but at least want to take",
    "start": "521940",
    "end": "528360"
  },
  {
    "text": "you through my thinking so far because maybe some of you will have a better idea",
    "start": "528360",
    "end": "533399"
  },
  {
    "text": "now at this point what I would normally do of course if I was sentiment and smart is I'd do a huge amount of",
    "start": "533399",
    "end": "538620"
  },
  {
    "text": "research looking through lots of books for prior art and I did a little bit of that but I didn't do a lot of it because",
    "start": "538620",
    "end": "544440"
  },
  {
    "text": "I'm not Kevin Henny instead I relied on Twitter because I am fundamentally at heart lazy so I thought maybe maybe I",
    "start": "544440",
    "end": "553440"
  },
  {
    "text": "can get some sensible answers on Twitter and obviously this being the pre-musk days the answers were slightly more sensible than they are today and so I",
    "start": "553440",
    "end": "560940"
  },
  {
    "text": "put this out there like a Batman Spotlight only it's you know to my",
    "start": "560940",
    "end": "566040"
  },
  {
    "text": "followers which are largely other people interested in architecture and I said was this mean to",
    "start": "566040",
    "end": "571560"
  },
  {
    "text": "you what does our asynchronous mean to you because I think the definition is fuzzy and I got a variety of different",
    "start": "571560",
    "end": "578580"
  },
  {
    "start": "575000",
    "end": "795000"
  },
  {
    "text": "responses I'm going to take you through some of them and take you through some of the other research I did around this topic",
    "start": "578580",
    "end": "583680"
  },
  {
    "text": "and just share some insights around this so on the first responses I got was from",
    "start": "583680",
    "end": "589140"
  },
  {
    "text": "Darren Hobbs who happens to be an old colleague of mine he's based in the UK and he said for him asynchronous",
    "start": "589140",
    "end": "596279"
  },
  {
    "text": "communication is about sort of sending an email versus send having a phone call",
    "start": "596279",
    "end": "602640"
  },
  {
    "text": "and at first glance this feels like a useful and interesting distinction however it does imply some kind of",
    "start": "602640",
    "end": "610980"
  },
  {
    "text": "performance differential phone calls are fast emails well how many people here have got a zero inbox",
    "start": "610980",
    "end": "617279"
  },
  {
    "text": "right yeah the people that have zero inboxes they don't have very busy lives right",
    "start": "617279",
    "end": "622740"
  },
  {
    "text": "you know but we know we don't respond to email straight away so there's something interesting here but it also sort of",
    "start": "622740",
    "end": "629700"
  },
  {
    "text": "implies a speed aspect which I don't actually think stands up because actually the most high throughput low",
    "start": "629700",
    "end": "635519"
  },
  {
    "text": "latency systems I've ever worked on would absolutely be things that most people would describe as being",
    "start": "635519",
    "end": "640620"
  },
  {
    "text": "asynchronous in nature so that doesn't quite work so around this time I started you know letting the",
    "start": "640620",
    "end": "646440"
  },
  {
    "text": "Twitter thread rumble on and picking out interesting responses they came in so I also started looking at prior art and",
    "start": "646440",
    "end": "652620"
  },
  {
    "text": "one of the more interesting pieces of uh our out prior are out there is a thing called the reactive Manifesto",
    "start": "652620",
    "end": "659760"
  },
  {
    "text": "so hands up if you have read the reactive Manifesto okay hands up if you signed it",
    "start": "659760",
    "end": "667560"
  },
  {
    "text": "hands up if you understand it what one person right okay half half",
    "start": "667560",
    "end": "674100"
  },
  {
    "text": "understand it right so the first thing I want to say is I'm about to tear this apart but I'm going to start off by",
    "start": "674100",
    "end": "679800"
  },
  {
    "text": "saying I know some of the authors that are active Manifesto and they're very smart people who are respect greatly and from whom I've learned a lot there is a",
    "start": "679800",
    "end": "686519"
  },
  {
    "text": "lot of stuff in the reactive Manifesto that I find to be interesting and useful however we have to accept it is a piece",
    "start": "686519",
    "end": "692519"
  },
  {
    "text": "of Dogma which is a very kind of specific and extreme Viewpoint it is",
    "start": "692519",
    "end": "698519"
  },
  {
    "text": "also unfortunately not very useful for you to understand how to build systems",
    "start": "698519",
    "end": "704700"
  },
  {
    "text": "because it is it's a little bit vague in its definitions but let's get into that and talk about it so I want to stay up",
    "start": "704700",
    "end": "710040"
  },
  {
    "text": "for this these people put hard work and effort into creating something and putting it out there and I'm going to",
    "start": "710040",
    "end": "716100"
  },
  {
    "text": "tear that apart a little bit so this is done with great respect but at the same time it's fun to poke holes at other",
    "start": "716100",
    "end": "722100"
  },
  {
    "text": "people's work so we'll start off with their definition they've put some work into defining the term asynchronous and",
    "start": "722100",
    "end": "727620"
  },
  {
    "text": "I thought great because these are smart people I respect the work they've done a lot so let's read what they wrote about",
    "start": "727620",
    "end": "733380"
  },
  {
    "text": "asynchronous so this the entry goes the Oxford English Dictionary describes",
    "start": "733380",
    "end": "738839"
  },
  {
    "text": "asynchronous as not existing or occurring at the same time we'll come back to that later on in the talk",
    "start": "738839",
    "end": "744839"
  },
  {
    "text": "in the context of this Manifesto we mean that the processing of a request",
    "start": "744839",
    "end": "750680"
  },
  {
    "text": "occurs at an arbitrary point in time sometime after it has been transmitted",
    "start": "750680",
    "end": "759779"
  },
  {
    "text": "from client to server just go that one more time",
    "start": "759779",
    "end": "766380"
  },
  {
    "text": "the processing of a request occurs at an arbitrary point of time",
    "start": "766380",
    "end": "773459"
  },
  {
    "text": "sometime after it's been transmitted from the client to the server this sort",
    "start": "773459",
    "end": "780720"
  },
  {
    "text": "of is using the language of request response which is kind of odd because really they talk about events but it's that's a bit muddy but anyway the thing",
    "start": "780720",
    "end": "787560"
  },
  {
    "text": "that really stuck out with me is this idea that things are only asynchronous if the request is processed after it's",
    "start": "787560",
    "end": "794399"
  },
  {
    "text": "been received and I'm like as opposed to what right as",
    "start": "794399",
    "end": "799800"
  },
  {
    "text": "opposed to the server processing the request before it was sent like I I don't know unless they got some",
    "start": "799800",
    "end": "807000"
  },
  {
    "text": "kind of Doctor Who kind of networking protocol wiring on here because Also let's remember the two",
    "start": "807000",
    "end": "812940"
  },
  {
    "text": "fundamental truths of distributed systems the first is that you cannot beam",
    "start": "812940",
    "end": "818220"
  },
  {
    "text": "information instantaneously between two points in time yes we understand that quantum",
    "start": "818220",
    "end": "823680"
  },
  {
    "text": "entanglement is a thing but quantum entanglement is not a networking protocol",
    "start": "823680",
    "end": "829260"
  },
  {
    "text": "so in that context we know we cannot beam information instantaneously between point a and point B therefore because",
    "start": "829260",
    "end": "835620"
  },
  {
    "text": "our universe is one in which causality exists the request will always be",
    "start": "835620",
    "end": "840839"
  },
  {
    "text": "processed after it is sent unless time travel is a thing so this is kind of a",
    "start": "840839",
    "end": "846240"
  },
  {
    "text": "meaningless term I mean it's definition but it's other stuff in there and I said is there is some great stuff in the",
    "start": "846240",
    "end": "851399"
  },
  {
    "text": "reactive Manifesto so I dug a bit deeper and often it's easier to define a term by talking about the opposite and this",
    "start": "851399",
    "end": "858180"
  },
  {
    "text": "can sometimes be a useful way of understanding what something is and they've actually done that as well",
    "start": "858180",
    "end": "863940"
  },
  {
    "text": "and this just starts to feel more concrete to me and starts to give me better understanding",
    "start": "863940",
    "end": "869160"
  },
  {
    "text": "so they're saying that synchronous is the opposite of synchronous processing which implies that the client only",
    "start": "869160",
    "end": "876120"
  },
  {
    "text": "resumes its own execution once the service has processed the",
    "start": "876120",
    "end": "881639"
  },
  {
    "text": "request it's saying that synchronous processing means that I can't do anything until that other thing has",
    "start": "881639",
    "end": "886920"
  },
  {
    "text": "finished its request that's what it's saying now actually this is a very very",
    "start": "886920",
    "end": "892320"
  },
  {
    "text": "specific thing that has a concrete term and that term isn't asynchronous",
    "start": "892320",
    "end": "898139"
  },
  {
    "text": "and this came up back in the Twitter thread so Steve Smith who's uh works for equal experts over in the UK knows a lot",
    "start": "898139",
    "end": "904740"
  },
  {
    "text": "about continuous delivery very nice chap he initially came back and said that for him synchronous versus asynchronous you know",
    "start": "904740",
    "end": "911880"
  },
  {
    "text": "he thinks synchronous communication for him is like TCP is a connection is open for the duration",
    "start": "911880",
    "end": "917519"
  },
  {
    "text": "of communication and again I like poking holes at my friends so I said okay so you say if I use quick or UDP what does",
    "start": "917519",
    "end": "924959"
  },
  {
    "text": "that mean and he clarified is what he actually means is that you're not blocking for a",
    "start": "924959",
    "end": "931260"
  },
  {
    "text": "response so what the reactive Manifesto was talking about and what Steve's talking about is the concept of non-blocking and",
    "start": "931260",
    "end": "938880"
  },
  {
    "start": "937000",
    "end": "1282000"
  },
  {
    "text": "that is a very specific concept which I think is more useful to discuss than talking generically about asynchronous",
    "start": "938880",
    "end": "945300"
  },
  {
    "text": "communication so let's talk briefly about non-blocking calls",
    "start": "945300",
    "end": "951000"
  },
  {
    "text": "so we've got a very simple scenario here we've got a micro service which is going to be responsible for some kind of",
    "start": "951000",
    "end": "956279"
  },
  {
    "text": "business process so you can imagine this is a simple little orchestrated process here and to carry out this operation I need",
    "start": "956279",
    "end": "963360"
  },
  {
    "text": "to go to a loyalty micro service and give someone some points I also want to upgrade their",
    "start": "963360",
    "end": "969779"
  },
  {
    "text": "subscription by talking to the subscription microservice now these calls are not don't need to be",
    "start": "969779",
    "end": "975660"
  },
  {
    "text": "causally linked I don't need to do one and then the other they're not Linked In and of themselves",
    "start": "975660",
    "end": "981839"
  },
  {
    "text": "but I do want to do both these operations now if I implement it is in a fairly straightforward naive fashion I might",
    "start": "981839",
    "end": "988560"
  },
  {
    "text": "have a bit of code like this so I have my first line of code which makes the first call",
    "start": "988560",
    "end": "994560"
  },
  {
    "text": "and then I get back a response object rest one when that when that call has",
    "start": "994560",
    "end": "1001579"
  },
  {
    "text": "completed so I make the call I wait until I get a response I now have that response object",
    "start": "1001579",
    "end": "1008199"
  },
  {
    "text": "then I move on to the next line of code here",
    "start": "1008199",
    "end": "1013279"
  },
  {
    "text": "and then I make the second call to the other microservice",
    "start": "1013279",
    "end": "1018380"
  },
  {
    "text": "so I have to block and wait for the first service to complete handling of my",
    "start": "1018380",
    "end": "1026360"
  },
  {
    "text": "request and to wait until I get that response object back once I have that response object then I can go on to the",
    "start": "1026360",
    "end": "1032900"
  },
  {
    "text": "next line of code this is what a lot of people certainly a lot of people who like the reactor Manifesto would decry",
    "start": "1032900",
    "end": "1038260"
  },
  {
    "text": "this is for them synchronous and blocking it definitely feels like it's blocking",
    "start": "1038260",
    "end": "1044058"
  },
  {
    "text": "right so of course there are some inherent challenges with blocking calls like this",
    "start": "1044059",
    "end": "1050840"
  },
  {
    "text": "although it actually is quite a as an obvious starting point for a lot of people building distributed systems for",
    "start": "1050840",
    "end": "1056419"
  },
  {
    "text": "the first time one of the bigger issues here is around latency so if you think about how long this",
    "start": "1056419",
    "end": "1062900"
  },
  {
    "text": "operation is going to take the duration of this operation is now going to be the",
    "start": "1062900",
    "end": "1067940"
  },
  {
    "text": "sum of the calls rather than being the maximum of the",
    "start": "1067940",
    "end": "1072980"
  },
  {
    "text": "longest call so in this case here if we said that arbitrarily the first call takes 50",
    "start": "1072980",
    "end": "1078620"
  },
  {
    "text": "milliseconds and the second call takes 150 milliseconds that means",
    "start": "1078620",
    "end": "1083840"
  },
  {
    "text": "that our operation is going to take at least 200 milliseconds in total",
    "start": "1083840",
    "end": "1089679"
  },
  {
    "text": "and obviously this actually is in reality would likely be worse because in a real world system you",
    "start": "1089720",
    "end": "1095660"
  },
  {
    "text": "should never look at the average latency you should always look at latency on a histogram because tail latencies can really screw things up and what you tend",
    "start": "1095660",
    "end": "1102860"
  },
  {
    "text": "to find is when you have a series of sequentially blocking calls you actually end up with a really large",
    "start": "1102860",
    "end": "1109340"
  },
  {
    "text": "variation in how long an operation can take and when you have a system that has",
    "start": "1109340",
    "end": "1114860"
  },
  {
    "text": "quite a large variation in terms of healthy Behavior it becomes very hard to",
    "start": "1114860",
    "end": "1120740"
  },
  {
    "text": "actually manage that system so we end up with a double whammy problem firstly this thing is taking",
    "start": "1120740",
    "end": "1126440"
  },
  {
    "text": "longer than it needs to and secondly we end up with a system that can be harder to understand and that's not good",
    "start": "1126440",
    "end": "1132760"
  },
  {
    "text": "consistent behavior is often better it's often significantly better than",
    "start": "1132760",
    "end": "1137840"
  },
  {
    "text": "sporadically fast Behavior that's also sometimes really slow right you would take a consistently mediocreally",
    "start": "1137840",
    "end": "1144620"
  },
  {
    "text": "performing system over extremes any day of the week",
    "start": "1144620",
    "end": "1149720"
  },
  {
    "text": "but an obvious Improvement here is to do these two calls in parallel so rather than doing one line of code and",
    "start": "1149720",
    "end": "1155660"
  },
  {
    "text": "executing it and then going to the second line of code instead what we would like to do is to say well look let's just make this whole thing faster",
    "start": "1155660",
    "end": "1162020"
  },
  {
    "text": "and let's basically run this in parallel and this is actually very very easy to",
    "start": "1162020",
    "end": "1167960"
  },
  {
    "text": "do using things like reactive extensions so in this example here we're going to",
    "start": "1167960",
    "end": "1173539"
  },
  {
    "text": "make a change we're going to wrap the invocation of these calls in a future so a future is a",
    "start": "1173539",
    "end": "1180200"
  },
  {
    "text": "read-only type the value of which is dependent on a as",
    "start": "1180200",
    "end": "1185900"
  },
  {
    "text": "yet potentially uncompleted operation so I'm making a call",
    "start": "1185900",
    "end": "1191000"
  },
  {
    "text": "but that call is effectively being dispatched on a background thread so if you see that first bit in the",
    "start": "1191000",
    "end": "1196940"
  },
  {
    "text": "parentheses there when I create that future I'm not blocking and waiting what's",
    "start": "1196940",
    "end": "1202760"
  },
  {
    "text": "happening behind the scenes is that call to the service is being packaged into a separate thread and run separately run",
    "start": "1202760",
    "end": "1210500"
  },
  {
    "text": "independently so it's now not blocking this potential this bit of code execution so in Java this would actually",
    "start": "1210500",
    "end": "1216740"
  },
  {
    "text": "end up being an operating system thread so the nice thing about this is that we",
    "start": "1216740",
    "end": "1221900"
  },
  {
    "text": "can kind of train up a whole bunch of calls but we're not waiting for the first call to finish we're immediately going onto",
    "start": "1221900",
    "end": "1227900"
  },
  {
    "text": "the second line the third line and we can keep walking through in the background these calls are now happening in parallel and this is just obviously a",
    "start": "1227900",
    "end": "1234740"
  },
  {
    "text": "bit of pseudo code there's difference in tactic sugar for different programming languages but it's all pretty straightforward to look at examples in",
    "start": "1234740",
    "end": "1241700"
  },
  {
    "text": "your own programming language your choice effectively though what this basically means is all the code looks virtually",
    "start": "1241700",
    "end": "1248780"
  },
  {
    "text": "identical to the previous example what's actually now going to happen is that those calls will run pretty much in",
    "start": "1248780",
    "end": "1255799"
  },
  {
    "text": "parallel assuming we've got spare threads and I O capacity and everything else",
    "start": "1255799",
    "end": "1261080"
  },
  {
    "text": "so the hope would be that our the latency of this particular operation might go from being say 200 milliseconds",
    "start": "1261080",
    "end": "1267679"
  },
  {
    "text": "to now being 150 milliseconds because we're able to paralyze the calls",
    "start": "1267679",
    "end": "1272720"
  },
  {
    "text": "so this is obviously an improvement non-blocking seems great in this context and in general I tend to agree but let's",
    "start": "1272720",
    "end": "1278780"
  },
  {
    "text": "poke a little bit deeper into the concept of non-blocking because it turns out that sometimes when",
    "start": "1278780",
    "end": "1287240"
  },
  {
    "text": "you ask a microservice for something or any service for something you might actually want the results weird I know",
    "start": "1287240",
    "end": "1294200"
  },
  {
    "text": "it's almost like that's the point of a request response based interaction is that you get the response and that",
    "start": "1294200",
    "end": "1300740"
  },
  {
    "text": "response may just be confirmation that the thing worked but sometimes it might be the data you requested",
    "start": "1300740",
    "end": "1307340"
  },
  {
    "text": "and sometimes it might be something like an ID of a new resource that you've created and you might need to do",
    "start": "1307340",
    "end": "1312799"
  },
  {
    "text": "something with that information you might need to take the results of a service invocation and use that result",
    "start": "1312799",
    "end": "1318980"
  },
  {
    "text": "so it's invocation for some other job so we actually may need the results so",
    "start": "1318980",
    "end": "1324860"
  },
  {
    "text": "that gets tricky because we come back to our previous example if we're thinking about how the code executes kind of a line at a time",
    "start": "1324860",
    "end": "1331480"
  },
  {
    "text": "at this point neither of those calls may have completed they might have finished they",
    "start": "1331480",
    "end": "1337280"
  },
  {
    "text": "may not have finished we just don't know so we don't actually know if those result objects are going to give us",
    "start": "1337280",
    "end": "1343400"
  },
  {
    "text": "anything other than I'm not ready yet when I would try and access them",
    "start": "1343400",
    "end": "1348440"
  },
  {
    "text": "so what do I do to get those results to actually get those response objects from these",
    "start": "1348440",
    "end": "1354140"
  },
  {
    "text": "non-blocking calls we have to wait how do we wait for the results of a",
    "start": "1354140",
    "end": "1360679"
  },
  {
    "text": "non-blocking call we might do something like this so this is like an await and it is",
    "start": "1360679",
    "end": "1366620"
  },
  {
    "text": "saying block and wait until both of these Futures have completed",
    "start": "1366620",
    "end": "1374320"
  },
  {
    "text": "so we've got a non-blocking",
    "start": "1374320",
    "end": "1379640"
  },
  {
    "text": "and therefore based on reactive Minister festo asynchronous communication",
    "start": "1379640",
    "end": "1385720"
  },
  {
    "text": "that then has to block so is this asynchronous or not",
    "start": "1386360",
    "end": "1391460"
  },
  {
    "text": "is it non-blocking or not I don't think you can describe this client as non-blocking I think you can",
    "start": "1391460",
    "end": "1398539"
  },
  {
    "text": "describe these particular invocations as non-blocking but not the whole client",
    "start": "1398539",
    "end": "1403760"
  },
  {
    "text": "so this is again it's murky but I still prefer I like the term non-blocking and blocking when we talk about an",
    "start": "1403760",
    "end": "1410179"
  },
  {
    "text": "individual invocation to another service it makes sense we can discuss it but this idea that non-blocking is",
    "start": "1410179",
    "end": "1416780"
  },
  {
    "text": "non-blocking kind of not right so even if you have non-blocking calls the",
    "start": "1416780",
    "end": "1423020"
  },
  {
    "start": "1418000",
    "end": "1568000"
  },
  {
    "text": "logic of your processing may still require that you have to wait for things to happen",
    "start": "1423020",
    "end": "1429799"
  },
  {
    "text": "even non-blocking calls can end up in you having to block but",
    "start": "1429799",
    "end": "1435799"
  },
  {
    "text": "they are still worth doing in my opinion that confusion aside non-blocking calls",
    "start": "1435799",
    "end": "1441740"
  },
  {
    "text": "in general especially if you're starting from a piece of code that looks like my first example are often a good and easy",
    "start": "1441740",
    "end": "1449240"
  },
  {
    "text": "way to improve your program in terms of speeding up performance",
    "start": "1449240",
    "end": "1455059"
  },
  {
    "text": "and also avoiding you having to do anything crazy threading yourself and the reactive extensions for all the",
    "start": "1455059",
    "end": "1460159"
  },
  {
    "text": "different programming languages out there are really really good this is actually one area where net led the way",
    "start": "1460159",
    "end": "1467059"
  },
  {
    "text": "so okay well this kind of was starting to make concrete sense but I knew there are other definitions out there so back",
    "start": "1467059",
    "end": "1473120"
  },
  {
    "text": "to the Twitter thread we go so here is Graham Lee and Graham Lee's",
    "start": "1473120",
    "end": "1478159"
  },
  {
    "text": "uh used to work on Tyro which is a payment system and Bank in the U in Australia it's worked on big complex",
    "start": "1478159",
    "end": "1483500"
  },
  {
    "text": "systems before and so Graham was sharing his thoughts he said okay the definition that he's",
    "start": "1483500",
    "end": "1488659"
  },
  {
    "text": "been using is the sending service doesn't wait for completion of the receiving service before continuing and",
    "start": "1488659",
    "end": "1494780"
  },
  {
    "text": "or completing its own work this is non-blocking again that first little bit there is non-blocking",
    "start": "1494780",
    "end": "1500059"
  },
  {
    "text": "but now I think about it I also expect a temporal decoupling",
    "start": "1500059",
    "end": "1506780"
  },
  {
    "text": "from the receiving Services availability this is a new thing whereas we've introduced a new term temporal",
    "start": "1506780",
    "end": "1513320"
  },
  {
    "text": "decoupling and what this describes is a situation where when I talk to another service",
    "start": "1513320",
    "end": "1519980"
  },
  {
    "text": "if that service isn't available and that means that I can now carry on with my work I am temporally coupled you have to",
    "start": "1519980",
    "end": "1527779"
  },
  {
    "text": "be up and available at the same time I am for this operation to work temporal decoupling would create a",
    "start": "1527779",
    "end": "1534740"
  },
  {
    "text": "situation where even if you were maybe offline I could still get on with my day",
    "start": "1534740",
    "end": "1540460"
  },
  {
    "text": "and this has kind of reiterated from a few different people so Benjamin Johnson said that",
    "start": "1541220",
    "end": "1546500"
  },
  {
    "text": "synchronous communication is as a direct communication between the sender and the receiver",
    "start": "1546500",
    "end": "1552020"
  },
  {
    "text": "but with asynchronous communication there is an intermediary involved",
    "start": "1552020",
    "end": "1557360"
  },
  {
    "text": "between the sender and receiver for example a message broker this gets kind of interesting",
    "start": "1557360",
    "end": "1563539"
  },
  {
    "text": "we look up intermediaries they are often what we use to achieve temporal decoupling",
    "start": "1563539",
    "end": "1569600"
  },
  {
    "start": "1568000",
    "end": "1840000"
  },
  {
    "text": "and as Benjamin mentioned they kind of the most common example of an intermediary might see would be some",
    "start": "1569600",
    "end": "1575179"
  },
  {
    "text": "form of message broker so I'm sure some of hands up if you use a message broker before yes look at that",
    "start": "1575179",
    "end": "1582380"
  },
  {
    "text": "right hands up if you enjoyed the process some of them are great you should have",
    "start": "1582380",
    "end": "1588559"
  },
  {
    "text": "you're probably using a bad one right I love message Brokers as my kind of I've used them an awful lot because I",
    "start": "1588559",
    "end": "1594500"
  },
  {
    "text": "often used to work in environments where they were actually a core part of how the organizations worked and were very",
    "start": "1594500",
    "end": "1600140"
  },
  {
    "text": "well supported managing message Brokers yourself is often a giant pain so just use managed Solutions nowadays and",
    "start": "1600140",
    "end": "1606440"
  },
  {
    "text": "you'll be fine but let's just kind of work through for those who haven't maybe actually used a message broker let's talk about one of the most interesting",
    "start": "1606440",
    "end": "1613400"
  },
  {
    "text": "characteristics of them which actually helps us achieve this property of temporal decoupling",
    "start": "1613400",
    "end": "1619100"
  },
  {
    "text": "so you have service a that wants to send some kind of message and I describe that anything you send over message broker is",
    "start": "1619100",
    "end": "1625700"
  },
  {
    "text": "generically a message and messages can contain other things so a message could contain a request a response and events",
    "start": "1625700",
    "end": "1632299"
  },
  {
    "text": "or whatever else so here I've got service a and I'm going to send a message over a message broker",
    "start": "1632299",
    "end": "1638179"
  },
  {
    "text": "and I rather than going sending that straight to B which is where I wanted to go to i instead give it to the message",
    "start": "1638179",
    "end": "1644000"
  },
  {
    "text": "broker and say look can you make sure this gets to be so as long as the message broker is up",
    "start": "1644000",
    "end": "1649100"
  },
  {
    "text": "even if B was offline I've still handed that message over",
    "start": "1649100",
    "end": "1654740"
  },
  {
    "text": "and the broker itself ensures that it will eventually deliver it to service B",
    "start": "1654740",
    "end": "1659860"
  },
  {
    "text": "once service B is available and ready to receive a new message this is the",
    "start": "1659860",
    "end": "1665900"
  },
  {
    "text": "property of what's called guaranteed delivery and if you want to know what guaranteed",
    "start": "1665900",
    "end": "1671419"
  },
  {
    "text": "delivery actually means for the message broker you are using you're going to need to look at the documentation because they've all got slightly",
    "start": "1671419",
    "end": "1677299"
  },
  {
    "text": "different nuances about what this actually means but fundamentally this is a nice property",
    "start": "1677299",
    "end": "1682940"
  },
  {
    "text": "in a situation where as another service may be unavailable if I have to deal with all those",
    "start": "1682940",
    "end": "1689539"
  },
  {
    "text": "concerns myself in terms of sending service I'm now thinking about my own buffering and retrying and cascading",
    "start": "1689539",
    "end": "1695240"
  },
  {
    "text": "failures and all that but if I can just hand it off to a broker I'm kind of happy I mentioned there are two sort of",
    "start": "1695240",
    "end": "1701240"
  },
  {
    "text": "fundamental truths of distributed systems the first being that you cannot beam information instantaneously between",
    "start": "1701240",
    "end": "1707059"
  },
  {
    "text": "two points in time the second fundamental truth of distributed systems is that sometimes the thing you want to",
    "start": "1707059",
    "end": "1713960"
  },
  {
    "text": "talk to is not there and so having something like a message broker which has been built to be highly",
    "start": "1713960",
    "end": "1721279"
  },
  {
    "text": "available this gives us the ability to potentially absorb that problem when our own",
    "start": "1721279",
    "end": "1728779"
  },
  {
    "text": "Services May intermittently be unavailable for a variety of different reasons so it's a nice property I would",
    "start": "1728779",
    "end": "1734720"
  },
  {
    "text": "also mention that the term temporal decoupling itself has multiple different meanings in different contexts but this",
    "start": "1734720",
    "end": "1740299"
  },
  {
    "text": "is the context which I'm using this term A variation in this comes from this this",
    "start": "1740299",
    "end": "1746059"
  },
  {
    "text": "person who said the asynchronous communication is like dropping snail mail in a red post box",
    "start": "1746059",
    "end": "1753919"
  },
  {
    "text": "and going on with your day this is the idea that I'm handing it off and I'm going on my date there's a combination here of I'm handing it to an",
    "start": "1753919",
    "end": "1760100"
  },
  {
    "text": "intermediary and I'm non-blocking so there's a bit of a combination of things happening here for this individual and",
    "start": "1760100",
    "end": "1765860"
  },
  {
    "text": "then one day boom Postman Pat stuffs something into your",
    "start": "1765860",
    "end": "1771140"
  },
  {
    "text": "house mailbox along with millions of coupons and charity mailers for those of you who don't know who Postman Pat is",
    "start": "1771140",
    "end": "1777020"
  },
  {
    "text": "this is Postman Pat this is the OG Postman Pat not that new weird guy with the with the hovercraft this is the",
    "start": "1777020",
    "end": "1782659"
  },
  {
    "text": "proper official pavement pack so at home I'm not at home right now as you can tell this is not a hologram I don't have",
    "start": "1782659",
    "end": "1788840"
  },
  {
    "text": "I can't afford that kind of will I am technology so I am actually here in person but I have a post box at home and",
    "start": "1788840",
    "end": "1794840"
  },
  {
    "text": "our Postman who it doesn't look like this he's actually got a beard but otherwise it's pretty much the same look right he has been delivering posts for",
    "start": "1794840",
    "end": "1802159"
  },
  {
    "text": "me and it's in my letterbox we have a letterbox on our front door like I'm sure many of you do here so when I get",
    "start": "1802159",
    "end": "1807260"
  },
  {
    "text": "home there'll be letters waiting for me um it's unlike in the US of course we don't allow people to come to our front",
    "start": "1807260",
    "end": "1813559"
  },
  {
    "text": "door um just in case we like minigun them to death or something so but you get the idea right we have like an inbox where",
    "start": "1813559",
    "end": "1819919"
  },
  {
    "text": "our post comes and we're not there right now but we can pick that up and that's where the message broker is",
    "start": "1819919",
    "end": "1825080"
  },
  {
    "text": "doing this analogy of the intermediary the message broker as a mailbox is quite",
    "start": "1825080",
    "end": "1831380"
  },
  {
    "text": "apt in that sense I don't somebody else that puts it into",
    "start": "1831380",
    "end": "1836480"
  },
  {
    "text": "that mailbox and when the person is ready to receive it they come and pick it up and there are lots of variations of this",
    "start": "1836480",
    "end": "1842600"
  },
  {
    "text": "kind of inbox style pattern using an intermediary you can use a database for this type of",
    "start": "1842600",
    "end": "1849440"
  },
  {
    "text": "purpose you probably shouldn't but I know some of you have file systems are commonly used as an",
    "start": "1849440",
    "end": "1856760"
  },
  {
    "text": "intermediary in fact this is probably the most common form of service-based",
    "start": "1856760",
    "end": "1864260"
  },
  {
    "text": "communication in the world a large amount of systems that were",
    "start": "1864260",
    "end": "1870140"
  },
  {
    "text": "digitized you know back in the 80s and 90s digitized paper-based processing systems and so what happens is now we've",
    "start": "1870140",
    "end": "1877640"
  },
  {
    "text": "got electronic versions of files that we generate and we put somewhere and at some point later on another program",
    "start": "1877640",
    "end": "1882919"
  },
  {
    "text": "picks them up and so we use file systems effectively as our intermediary you can also use email as an",
    "start": "1882919",
    "end": "1889820"
  },
  {
    "text": "intermediary based system for communication between your services but don't do that because that's silly",
    "start": "1889820",
    "end": "1895700"
  },
  {
    "text": "right but the beauty of this model is that the sender of the message does not need to",
    "start": "1895700",
    "end": "1902000"
  },
  {
    "text": "worry about whether or not the recipient is currently available and that's a nice property",
    "start": "1902000",
    "end": "1907520"
  },
  {
    "text": "of course what we do though need is for the intermediary to be up itself if your",
    "start": "1907520",
    "end": "1913340"
  },
  {
    "text": "broker is down we're back in the same problem as before I sort of mentioned at the beginning",
    "start": "1913340",
    "end": "1918740"
  },
  {
    "text": "that you can use request response based interactions can be synchronous or asynchronous in nature we've already",
    "start": "1918740",
    "end": "1924559"
  },
  {
    "text": "looked at how request response-based communication can maybe be non-blocking but we can also use intermediaries with",
    "start": "1924559",
    "end": "1931580"
  },
  {
    "text": "request response-based communication and this opens up some interesting questions for us",
    "start": "1931580",
    "end": "1936860"
  },
  {
    "text": "so in this example here service a again is sending a message it's sending this case it's going to send a request it's going to ask service B to do something",
    "start": "1936860",
    "end": "1944720"
  },
  {
    "text": "and so that request goes to the request queue for service B so service B is",
    "start": "1944720",
    "end": "1950360"
  },
  {
    "text": "there listening waiting for like a request it's like is anything there no nothing's there what about no no yeah yeah grab it and",
    "start": "1950360",
    "end": "1957679"
  },
  {
    "text": "he grabs the request and starts processing it's like it's a nice model I like I like this stuff it's cool so it",
    "start": "1957679",
    "end": "1963080"
  },
  {
    "text": "grabs that request and starts processing it now of course it's got a response so how does it get the response back to the",
    "start": "1963080",
    "end": "1969260"
  },
  {
    "text": "person who sent it the request originally well obviously the answer is always another cue so we take our",
    "start": "1969260",
    "end": "1975380"
  },
  {
    "text": "response we send that back on a different queue in this case here I've just called it the response queue and",
    "start": "1975380",
    "end": "1982640"
  },
  {
    "text": "now service a is able to consume that response again when it is ready and able to do so",
    "start": "1982640",
    "end": "1988340"
  },
  {
    "text": "this is an example of using an intermediary based system like a message broker to implement request response",
    "start": "1988340",
    "end": "1994940"
  },
  {
    "text": "which is something people are actually surprisingly often don't know about but it's a fairly straightforward model",
    "start": "1994940",
    "end": "2000580"
  },
  {
    "text": "but let's poke a little bit deeper remember I started off by saying that you used to be able to live as an architect purely in the world of logical",
    "start": "2000580",
    "end": "2007120"
  },
  {
    "text": "architecture unsullied by concerns like making the system actually work we can't",
    "start": "2007120",
    "end": "2013000"
  },
  {
    "text": "do that anymore we actually have to think about well it gets implemented one of those annoying details we have to",
    "start": "2013000",
    "end": "2018640"
  },
  {
    "text": "deal with is the fact that quite often in fact normally in the case of microservices especially if you're",
    "start": "2018640",
    "end": "2024220"
  },
  {
    "text": "running on the public Cloud we would need to have multiple instances of our services so in this case here I have two",
    "start": "2024220",
    "end": "2031419"
  },
  {
    "text": "instances of service a so when I send that message when I send",
    "start": "2031419",
    "end": "2037419"
  },
  {
    "text": "that request to service B it does its work its calculations it generates that",
    "start": "2037419",
    "end": "2043059"
  },
  {
    "text": "shipping label or whatever else and then it sends that back to me over the response queue",
    "start": "2043059",
    "end": "2048878"
  },
  {
    "text": "there's no guarantee that that response is going to come back to the same instance",
    "start": "2048879",
    "end": "2056200"
  },
  {
    "text": "now some people would see that as a problem I see that as a benefit what often people start trying to do at",
    "start": "2056200",
    "end": "2063280"
  },
  {
    "text": "this point is tie themselves in knots that response has to go back to the same instance that sent the request",
    "start": "2063280",
    "end": "2069398"
  },
  {
    "text": "why because what they're doing is holding stuff in memory",
    "start": "2069399",
    "end": "2074560"
  },
  {
    "text": "so holding State related to this request response based flow and they want that response to come back to that same",
    "start": "2074560",
    "end": "2080500"
  },
  {
    "text": "instance well that's the problem you've got right there stateful processing",
    "start": "2080500",
    "end": "2086200"
  },
  {
    "text": "outside of a very small Niche you should not be doing stateful processing like that it's Daft right what happens if",
    "start": "2086200",
    "end": "2093760"
  },
  {
    "text": "that originating Services sent the instance that sent that request crashes",
    "start": "2093760",
    "end": "2099339"
  },
  {
    "text": "if that response has to go back to that instance but that instance is now gone what'd you do",
    "start": "2099339",
    "end": "2105280"
  },
  {
    "text": "you also then have to add complexity this is basically the equivalent of trying to do sticky sessions I think you said if you'll ever find",
    "start": "2105280",
    "end": "2111460"
  },
  {
    "text": "yourself implementing sticky sessions you're solving the wrong problem it's beneficial actually from a point of",
    "start": "2111460",
    "end": "2117579"
  },
  {
    "text": "view of system robustness and simplicity to build your interactions when using mechanisms like this to assume that any",
    "start": "2117579",
    "end": "2125500"
  },
  {
    "text": "instance of your service could handle that request that will simplify your lives greatly",
    "start": "2125500",
    "end": "2133480"
  },
  {
    "text": "but if we come back to our earlier example where we're not using that intermediary we've opened that connection we're doing these",
    "start": "2133480",
    "end": "2138700"
  },
  {
    "text": "non-blocking calls and if we start now thinking about what happens when the service that sends a request dies part",
    "start": "2138700",
    "end": "2145359"
  },
  {
    "text": "way through we don't really have a good answer in this world because here the way we've coded it the",
    "start": "2145359",
    "end": "2153040"
  },
  {
    "text": "response is the assumption is and how we've coded the responses are coming back to the same thing that send the request in the first place because",
    "start": "2153040",
    "end": "2158260"
  },
  {
    "text": "actually we've opened up a network connection we've opened up a connection we've spoken to you and you're coming back to us if we die that connection is",
    "start": "2158260",
    "end": "2164980"
  },
  {
    "text": "gone so we've now got in this scenario very",
    "start": "2164980",
    "end": "2170140"
  },
  {
    "text": "much got to consider the problems of what happens if the client dies part way through",
    "start": "2170140",
    "end": "2175240"
  },
  {
    "text": "in general the way we handle this is we just retry the entire operation which is why it's essential to make operations",
    "start": "2175240",
    "end": "2181480"
  },
  {
    "text": "wherever possible item potent and if you can't make your operations item potent it's going to be painful",
    "start": "2181480",
    "end": "2189779"
  },
  {
    "start": "2189000",
    "end": "2236000"
  },
  {
    "text": "but it's arguable anyway that when using an intermediary it actually encourages stateless processing which is a bit of a",
    "start": "2190000",
    "end": "2197020"
  },
  {
    "text": "win obviously we've made our world probably simpler to reason about the downside of course is we've made our",
    "start": "2197020",
    "end": "2202540"
  },
  {
    "text": "world more complicated by requiring that we've now got a reliable intermediary in the mix so we've got all of these competing",
    "start": "2202540",
    "end": "2208660"
  },
  {
    "text": "definitions we can talk about immediacy how quickly is something going to happen we can talk about temporal decoupling or",
    "start": "2208660",
    "end": "2216880"
  },
  {
    "text": "temporal coupling we can talk about non-blocking versus blocking we can talk about the use of in an intermediary",
    "start": "2216880",
    "end": "2224320"
  },
  {
    "text": "and it this is why I found this idea of asynchronous communication so confusing",
    "start": "2224320",
    "end": "2231160"
  },
  {
    "text": "will a real asynchronous please stand up and of course you might say to me you",
    "start": "2231160",
    "end": "2237339"
  },
  {
    "start": "2236000",
    "end": "2327000"
  },
  {
    "text": "know Sam does this matter words do have different meanings I the majority of you here I suspect",
    "start": "2237339",
    "end": "2243520"
  },
  {
    "text": "don't speak English as a second or even third language but you would still understand that in English as in your",
    "start": "2243520",
    "end": "2249520"
  },
  {
    "text": "own languages you might have the same word but when used in different context it takes on different meanings",
    "start": "2249520",
    "end": "2257320"
  },
  {
    "text": "does anyone want to guess stick your hand up you've got a guess for this what word in the English language has the",
    "start": "2257320",
    "end": "2263859"
  },
  {
    "text": "most dictionary meanings good yes it's set",
    "start": "2263859",
    "end": "2269140"
  },
  {
    "text": "so set has the most definitions most meanings in the official oxidation",
    "start": "2269140",
    "end": "2274720"
  },
  {
    "text": "dictionaries that's the the big not the one you get on your bookshelf right this is the 60 volume thing that was the the",
    "start": "2274720",
    "end": "2281560"
  },
  {
    "text": "current version of which was written in the mid-1980s the next version this is going to be out in 2037 it's a",
    "start": "2281560",
    "end": "2287320"
  },
  {
    "text": "Monumental undertaking um the in the new edition we believe that run is going to have the most",
    "start": "2287320",
    "end": "2293320"
  },
  {
    "text": "definitions so to give an example of what I mean by having lots of meanings",
    "start": "2293320",
    "end": "2299619"
  },
  {
    "text": "set has only 430 meanings whereas at the moment in the draft",
    "start": "2299619",
    "end": "2304780"
  },
  {
    "text": "Edition run has 645 meanings Uh Kevin Henny actually did a great talk",
    "start": "2304780",
    "end": "2310119"
  },
  {
    "text": "at craftconf last week where he said so the two words in English language with the most meanings in the current edition",
    "start": "2310119",
    "end": "2315880"
  },
  {
    "text": "are set and get and yet those are two of the terms we use widely in Computing",
    "start": "2315880",
    "end": "2321579"
  },
  {
    "text": "and then we're surprised when people find Computing confusing right",
    "start": "2321579",
    "end": "2327099"
  },
  {
    "start": "2327000",
    "end": "2422000"
  },
  {
    "text": "oops but there is an extent to which we're used to this and ultimately we derive meaning from",
    "start": "2327099",
    "end": "2333400"
  },
  {
    "text": "these terms based on the context in which those terms are used",
    "start": "2333400",
    "end": "2338800"
  },
  {
    "text": "I was chatting about your stuff at uh in London earlier this year and Ian Cooper who's also speaking here as well should",
    "start": "2338800",
    "end": "2344920"
  },
  {
    "text": "go see his talk uh obviously Ian Coop has a hinterland uh some people's Hinterlands are quite small Ian Cooper's",
    "start": "2344920",
    "end": "2351579"
  },
  {
    "text": "Hinterland is like bigger than my entire life turns out that of course he studies semiotics at University which is the",
    "start": "2351579",
    "end": "2356800"
  },
  {
    "text": "study of meaning right and he was explaining to me that if you take a word that has a very vague definition as you",
    "start": "2356800",
    "end": "2363760"
  },
  {
    "text": "put more words around it the meaning becomes much more clear",
    "start": "2363760",
    "end": "2369579"
  },
  {
    "text": "so let's let's take a let's run an experiment on this so let's think about the word run what I",
    "start": "2369579",
    "end": "2375160"
  },
  {
    "text": "want each of you to do now is think about what the first definition of run and what it means to you",
    "start": "2375160",
    "end": "2381160"
  },
  {
    "text": "think about that in your head I'm not going to check you working but you know just go with me and now I'm",
    "start": "2381160",
    "end": "2387339"
  },
  {
    "text": "going to put some words around this to explain what I mean by run in this",
    "start": "2387339",
    "end": "2392440"
  },
  {
    "text": "context and then I want to see if it matches what you were thinking",
    "start": "2392440",
    "end": "2397500"
  },
  {
    "text": "the issue got worse the moment the program was run did that match what you were thinking",
    "start": "2397780",
    "end": "2404020"
  },
  {
    "text": "about were you thinking about run maybe because we're in like a Tech conference and maybe you were thinking",
    "start": "2404020",
    "end": "2409540"
  },
  {
    "text": "about run in the context of running a program but maybe you were thinking about something else",
    "start": "2409540",
    "end": "2415300"
  },
  {
    "text": "think about a different meaning of the word run and I put some new words around it",
    "start": "2415300",
    "end": "2422260"
  },
  {
    "text": "the economy crashed due to a run on the banks",
    "start": "2422260",
    "end": "2427440"
  },
  {
    "text": "again a bit topical maybe this is the definition you're thinking of maybe it wasn't",
    "start": "2427660",
    "end": "2433900"
  },
  {
    "text": "but if we were talking about the word run without any other words around it without any other context around it",
    "start": "2433900",
    "end": "2439300"
  },
  {
    "text": "there's very little chance that we can guarantee we were talking about the same thing so again does this matter",
    "start": "2439300",
    "end": "2446260"
  },
  {
    "text": "the issue is that we throw around terms like asynchronous",
    "start": "2446260",
    "end": "2451780"
  },
  {
    "text": "as though that word by itself has meaning you should make your programming",
    "start": "2451780",
    "end": "2457240"
  },
  {
    "text": "asynchronous we should use asynchronous interactions if you're not doing things asynchronously you're a bad person",
    "start": "2457240",
    "end": "2465359"
  },
  {
    "text": "says the message broker vendor right let's come back to the reactive Manifesto",
    "start": "2465700",
    "end": "2472660"
  },
  {
    "text": "they say that the Oxford dictionary describes asynchronous as not existing or occurring at the same time and if you",
    "start": "2472660",
    "end": "2479680"
  },
  {
    "text": "actually ask Google what the definition of asynchronous is it will say the same thing",
    "start": "2479680",
    "end": "2487540"
  },
  {
    "text": "but we've just learned that the Oxford English Dictionary has multiple definitions for words is that the only definition it has at this point it's",
    "start": "2487540",
    "end": "2494260"
  },
  {
    "text": "very useful to have access to a full copy of the Oxford English Dictionary which I do because my brother's a medieval historian and that's apparently",
    "start": "2494260",
    "end": "2500500"
  },
  {
    "text": "comes with the perks I mean they get paid badly but they get access to you know this thing and they're actually",
    "start": "2500500",
    "end": "2506020"
  },
  {
    "text": "multiple definitions of asynchronous in the Oxford English Dictionary in fact the one that is most commonly",
    "start": "2506020",
    "end": "2512680"
  },
  {
    "text": "used out there on the internet was derived that meaning derived from",
    "start": "2512680",
    "end": "2518320"
  },
  {
    "text": "the use in medical contexts so that was historically where that definition came from and the full arts",
    "start": "2518320",
    "end": "2525339"
  },
  {
    "text": "English dictionary on lines great says all the footnotes of where these things come from so the definition we are using in a Computing context is derived from",
    "start": "2525339",
    "end": "2531940"
  },
  {
    "text": "something that's primarily used in medical context which doesn't seem to make sense in fact if we look in the meanings of the word",
    "start": "2531940",
    "end": "2539200"
  },
  {
    "text": "asynchronous there are at least two definitions right now that do come from a Computing context",
    "start": "2539200",
    "end": "2546040"
  },
  {
    "text": "and these were not the definitions used in the reactive Manifesto interestingly enough",
    "start": "2546040",
    "end": "2552040"
  },
  {
    "text": "or in any of the books that I've read about the use the term asynchronous so one of these terms talks more about",
    "start": "2552040",
    "end": "2559000"
  },
  {
    "text": "asynchronicity within a single process but there is one that talks a bit more about transmission",
    "start": "2559000",
    "end": "2564760"
  },
  {
    "text": "so this is a definition data transmission in which packets of data are centered irregular intervals",
    "start": "2564760",
    "end": "2571720"
  },
  {
    "text": "with the start and end of each packet being marked by specific signals involving such Transmissions I don't",
    "start": "2571720",
    "end": "2578319"
  },
  {
    "text": "know what any of that means this is ultimately coming from work where we're talking about the",
    "start": "2578319",
    "end": "2584200"
  },
  {
    "text": "communication at a very low level how many people here open up raw raw sockets and craft your own packets over",
    "start": "2584200",
    "end": "2591400"
  },
  {
    "text": "your own networking protocols someone up there does there they are",
    "start": "2591400",
    "end": "2597099"
  },
  {
    "text": "which burn them",
    "start": "2597099",
    "end": "2600119"
  },
  {
    "text": "PCP or UDP or we work at level of HTTP or we work at grpc where we're hiding",
    "start": "2602859",
    "end": "2609339"
  },
  {
    "text": "all these abstractions this is a definition about asynchronicity and communication that is from way down in the stack and as a result has no meaning",
    "start": "2609339",
    "end": "2615520"
  },
  {
    "text": "to us the reason this is important to talk about is because fundamentally software",
    "start": "2615520",
    "end": "2621520"
  },
  {
    "start": "2620000",
    "end": "2704000"
  },
  {
    "text": "is a type of socio-technical system that's a very long word isn't it socio-technical socio-technical from",
    "start": "2621520",
    "end": "2627819"
  },
  {
    "text": "socio people and Technical technology this is technology in the kind of the I think",
    "start": "2627819",
    "end": "2634300"
  },
  {
    "text": "it's the Greek time the term of Technology meaning a complex system with knowledge rather than what we think about as Tech right this is the generic",
    "start": "2634300",
    "end": "2641020"
  },
  {
    "text": "kind of concept of technology and before you start saying oh God no it's some other woke left-fing tofu eating",
    "start": "2641020",
    "end": "2648880"
  },
  {
    "text": "wokarati Guardian reader coming out here talking about to Ram politics down our throats",
    "start": "2648880",
    "end": "2654940"
  },
  {
    "text": "actually the term socio-technical comes from a study of coal mining during World War II so this is a term that's been",
    "start": "2654940",
    "end": "2660819"
  },
  {
    "text": "around for a long time when you bring people and complex knowledge together it's important that those things work",
    "start": "2660819",
    "end": "2666339"
  },
  {
    "text": "together otherwise you know people get crushed in the coal mine we have to recognize that the amount of",
    "start": "2666339",
    "end": "2672220"
  },
  {
    "text": "software created by individuals is vanishingly rare that the keynote made that point this morning in fact I think",
    "start": "2672220",
    "end": "2677680"
  },
  {
    "text": "it's often greatly overstated how much software is created by individuals you",
    "start": "2677680",
    "end": "2682960"
  },
  {
    "text": "think about the Creator that looks kernel he created the Linux kernel really what",
    "start": "2682960",
    "end": "2688540"
  },
  {
    "text": "he did was great job of was pulling in a huge number of contributions from other people to create the Linux kernel",
    "start": "2688540",
    "end": "2696480"
  },
  {
    "text": "this is overstated the vast majority of useful software is created by groups of",
    "start": "2696480",
    "end": "2702460"
  },
  {
    "text": "people working together and if you want if given this truth it",
    "start": "2702460",
    "end": "2707740"
  },
  {
    "start": "2704000",
    "end": "2844000"
  },
  {
    "text": "is important therefore that we know and are able to communicate with each other because if you're having a conversation",
    "start": "2707740",
    "end": "2713319"
  },
  {
    "text": "about how to build a system and one of your colleagues says let's",
    "start": "2713319",
    "end": "2719740"
  },
  {
    "text": "make this asynchronous and you've got a different vision of your head of what that term means than",
    "start": "2719740",
    "end": "2725319"
  },
  {
    "text": "somebody else how well is that going to go for you especially in an environment where you",
    "start": "2725319",
    "end": "2731140"
  },
  {
    "text": "might be working in a more remote environment or you have maybe fewer interaction",
    "start": "2731140",
    "end": "2737020"
  },
  {
    "text": "points where definitions become even more important especially if you're working over different time zones",
    "start": "2737020",
    "end": "2744280"
  },
  {
    "text": "and we know this story don't we we know how important good communication is",
    "start": "2744280",
    "end": "2749740"
  },
  {
    "text": "it's in the Old Testament in the Old Testament we have the the story of the Tower of Babel it's",
    "start": "2749740",
    "end": "2756520"
  },
  {
    "text": "actually only three verses and they talk in this in this those three verses about the importance of",
    "start": "2756520",
    "end": "2761619"
  },
  {
    "text": "communication they also weirdly know three verses talk about the importance of having of new building practices that",
    "start": "2761619",
    "end": "2766780"
  },
  {
    "text": "enable them to build a tower at all we're going to talk about the fact they discover new ways of building buildings in there but it isn't there right but",
    "start": "2766780",
    "end": "2772839"
  },
  {
    "text": "what was happening is these people were building a big tall tower and the Old Testament God said no I",
    "start": "2772839",
    "end": "2778599"
  },
  {
    "text": "don't like that nope so he went down and they're all the reason they're able to build this tall",
    "start": "2778599",
    "end": "2783819"
  },
  {
    "text": "big tall tower is because you know they were all speaking of one language and so God said don't like it went down said",
    "start": "2783819",
    "end": "2789760"
  },
  {
    "text": "you're now speaking different languages now there's no actual explanation given in the Old Testament as to why the Old",
    "start": "2789760",
    "end": "2795940"
  },
  {
    "text": "Testament God did this um there's lots of kind of subsequent justification for this but fundamentally",
    "start": "2795940",
    "end": "2802960"
  },
  {
    "text": "we do have to accept if you read the Old Testament and the New Testament that the Old Testament God was a bit different to",
    "start": "2802960",
    "end": "2808660"
  },
  {
    "text": "the New Testament God he was a bit more firing Brimstone it's almost like an inverse Daenerys Targaryen character Arc",
    "start": "2808660",
    "end": "2814900"
  },
  {
    "text": "like halfway through like you've got different writers but anyway so it came in you you went in and you changed the",
    "start": "2814900",
    "end": "2822579"
  },
  {
    "text": "languages so they couldn't communicate and so the tower could not be built",
    "start": "2822579",
    "end": "2828359"
  },
  {
    "text": "and this is a problem we use the term asynchronous and",
    "start": "2828520",
    "end": "2834339"
  },
  {
    "text": "synchronous and we pass it around in the same context but we don't give it enough words around it so we can effectively",
    "start": "2834339",
    "end": "2841420"
  },
  {
    "text": "communicate its meaning so what concretely can we do about this",
    "start": "2841420",
    "end": "2847599"
  },
  {
    "start": "2844000",
    "end": "2909000"
  },
  {
    "text": "start by having a conversation about what is it your application needs",
    "start": "2847599",
    "end": "2852780"
  },
  {
    "text": "describe how you want that application to handle different situations",
    "start": "2852780",
    "end": "2858040"
  },
  {
    "text": "what do you want your application to do when the server is unreachable",
    "start": "2858040",
    "end": "2863560"
  },
  {
    "text": "how fast should your application be what should you do if in a service to",
    "start": "2863560",
    "end": "2871359"
  },
  {
    "text": "service based interaction does the client crashes how are you going to handle that situation",
    "start": "2871359",
    "end": "2877000"
  },
  {
    "text": "if available to you use the more explicit terms that we have blocking versus non-blocking",
    "start": "2877000",
    "end": "2883420"
  },
  {
    "text": "that's a great example say things like clients should wherever possible make use of non-blocking calls",
    "start": "2883420",
    "end": "2890800"
  },
  {
    "text": "We should strive to run operations in parallel where possible to reduce the overall latency of our systems we should",
    "start": "2890800",
    "end": "2898780"
  },
  {
    "text": "use I don't know broker X as an intermediary these are concrete terms we're putting",
    "start": "2898780",
    "end": "2903940"
  },
  {
    "text": "more words around these ideas therefore the meaning can become more clear",
    "start": "2903940",
    "end": "2910720"
  },
  {
    "start": "2909000",
    "end": "3145000"
  },
  {
    "text": "but do try and make it's not about just correcting somebody else's meaning and I've immediately contradicted myself",
    "start": "2910720",
    "end": "2916060"
  },
  {
    "text": "here because I did spend a lot of time kicking the reactive Manifesto which as far as I'm concerned it's more punching across and punching down but",
    "start": "2916060",
    "end": "2922900"
  },
  {
    "text": "and the only reason I'm able to do that is because the people who wrote the reactive Manifesto put hard work into creating it in the first place so they",
    "start": "2922900",
    "end": "2929500"
  },
  {
    "text": "have my apologies in advance but it was an easy target in the princess as bride",
    "start": "2929500",
    "end": "2935319"
  },
  {
    "text": "you know vinicus is corrected Montoya says you keep using that word",
    "start": "2935319",
    "end": "2941800"
  },
  {
    "text": "I do not think you it means what you think it means now in this context we all understand what the word actually",
    "start": "2941800",
    "end": "2949599"
  },
  {
    "text": "means and in Gary martyr is picking up vinegar to say actually your understanding is",
    "start": "2949599",
    "end": "2954640"
  },
  {
    "text": "different to the rest of society we can't do that with asynchronous",
    "start": "2954640",
    "end": "2960339"
  },
  {
    "text": "we don't get to say what asynchronous actually means because there is no widely accepted term or definition for",
    "start": "2960339",
    "end": "2967900"
  },
  {
    "text": "asynchronous in the context of inter-process communication in the way that we talk about it nowadays there",
    "start": "2967900",
    "end": "2973839"
  },
  {
    "text": "just isn't one I did check Tannenbaum right latest edition of tannerman's book he mentions",
    "start": "2973839",
    "end": "2980020"
  },
  {
    "text": "asynchronous I think six times in the whole book he realizes it's a silly term and he uses different terms instead",
    "start": "2980020",
    "end": "2985540"
  },
  {
    "text": "right so maybe just when you're in a situation when someone says we should make this",
    "start": "2985540",
    "end": "2992020"
  },
  {
    "text": "asynchronous just say to them what does that mean to you ask them what that what the meaning is",
    "start": "2992020",
    "end": "2998740"
  },
  {
    "text": "behind that word because what you find might shock you all right that's me I'm done I hope you",
    "start": "2998740",
    "end": "3004619"
  },
  {
    "text": "enjoy the rest of the conference I have probably got some time for questions I think I've got about six minutes for questions uh if you aren't going to hang",
    "start": "3004619",
    "end": "3010680"
  },
  {
    "text": "around I hope you have a fantastic rest of the conference I'm going to be flying off in about an hour and a half from now unfortunately time gets in the way but I",
    "start": "3010680",
    "end": "3018660"
  },
  {
    "text": "really thank you so much for coming out today and um yeah any questions for me",
    "start": "3018660",
    "end": "3024000"
  },
  {
    "text": "I'm going to seek anyone got a question No Hands no hands oh go ahead",
    "start": "3024000",
    "end": "3033859"
  },
  {
    "text": "so the question was Amazon Prime going away from microservices reduced cost by 90 it wasn't Amazon Prime it was one",
    "start": "3037380",
    "end": "3044099"
  },
  {
    "text": "small part of Amazon Prime and it was Amazon Prime moving away from Lambda functions for cost reasons and I see no",
    "start": "3044099",
    "end": "3051660"
  },
  {
    "text": "problem with that whatsoever people have P so I want to be really really clear people think oh I must be a real big Mike because there was this fan",
    "start": "3051660",
    "end": "3058440"
  },
  {
    "text": "boy anything everyone should use Michael services so the people in my workshop are all laughing right now right",
    "start": "3058440",
    "end": "3064260"
  },
  {
    "text": "um I I don't care if you use microservices or not right uh they're a means to an end I have I don't like I'm",
    "start": "3064260",
    "end": "3070260"
  },
  {
    "text": "not selling you a kubernetes cluster or trying to ship you know Lambda functions so if you don't use microservices that's",
    "start": "3070260",
    "end": "3076020"
  },
  {
    "text": "absolutely fine by me just just please buy my book though because I have got a mortgage to pay for I'd be really handy",
    "start": "3076020",
    "end": "3082920"
  },
  {
    "text": "um I do want just but it's not a discourse around that I thought was quite unfortunate and quite poisonous you had people criticizing the team for",
    "start": "3082920",
    "end": "3090000"
  },
  {
    "text": "even having the temerity to try using Lambda functions in the first place then they were criticized for making a",
    "start": "3090000",
    "end": "3095520"
  },
  {
    "text": "mistake and some people were saying you could have solved in about 25 different other ways you're not there you weren't",
    "start": "3095520",
    "end": "3101760"
  },
  {
    "text": "there you don't know their context and you don't know how they came up with that decision and the idea that when people change",
    "start": "3101760",
    "end": "3108119"
  },
  {
    "text": "their minds about how to solve a problem and then talk openly about that and share those experiences with you the",
    "start": "3108119",
    "end": "3114059"
  },
  {
    "text": "people then criticize them for that take a long hard look at yourself in the mirror if you're doing that because it's",
    "start": "3114059",
    "end": "3119099"
  },
  {
    "text": "Daft and all you're doing is ensuring that nobody else ever wants to talk about how they changed their mind either",
    "start": "3119099",
    "end": "3124940"
  },
  {
    "text": "so I have no problem with it I'm very thankful that they shared it any other questions",
    "start": "3124940",
    "end": "3132559"
  },
  {
    "text": "all right okay I'll probably hang around here for about five minutes or so but it will will be that short but thank you so much",
    "start": "3133020",
    "end": "3140460"
  },
  {
    "text": "my contact details are online enjoy the rest of the conference [Applause]",
    "start": "3140460",
    "end": "3146950"
  }
]