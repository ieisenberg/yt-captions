[
  {
    "text": "so yeah unfortunately we couldn't be there with you you know it's still a bit complicated to travel uh europe wide",
    "start": "8000",
    "end": "15200"
  },
  {
    "text": "and beyond uh but we are mit and i we're very happy to be uh there even if only",
    "start": "15200",
    "end": "20960"
  },
  {
    "text": "virtually with you to speak about choreography versus orchestration in um serverless",
    "start": "20960",
    "end": "27680"
  },
  {
    "text": "microservices or microservices in general so i'm kim laforge i'm a developer",
    "start": "27680",
    "end": "32719"
  },
  {
    "text": "advocate for google cloud and i'm based in paris and today i'm",
    "start": "32719",
    "end": "37760"
  },
  {
    "text": "with mete hi everyone my name is mata tamel i am also a developer advocate at google",
    "start": "37760",
    "end": "43520"
  },
  {
    "text": "based in london and as guillaume mentioned um we are sure that we are not there i mean nbc oslo is one of my favorite",
    "start": "43520",
    "end": "49840"
  },
  {
    "text": "conferences and i spoke there a few times uh but this time we couldn't make it there um but hopefully this will be good",
    "start": "49840",
    "end": "56559"
  },
  {
    "text": "enough and um if you have any questions uh please try to put them on a slido and i will be",
    "start": "56559",
    "end": "63440"
  },
  {
    "text": "monitoring that as we go along and i will try to answer them and also in the end we should have some time so we'll check it there as well",
    "start": "63440",
    "end": "69680"
  },
  {
    "text": "and i understand that there is also a chance to ask questions and why i might in the end um so maybe we'll do that in",
    "start": "69680",
    "end": "76640"
  },
  {
    "text": "the end as well depending on the time but yeah feel free to ask questions as we go along because we like this to be an interactive session so thanks very",
    "start": "76640",
    "end": "82960"
  },
  {
    "text": "much all right thank you um so yeah we'll be speaking about choreography versus",
    "start": "82960",
    "end": "88880"
  },
  {
    "text": "orchestration and we'll explain what those two approaches or concepts",
    "start": "88880",
    "end": "94079"
  },
  {
    "text": "uh are so of course that's not about that kind of choreography and orchestration",
    "start": "94079",
    "end": "100400"
  },
  {
    "text": "although there are some you know similar um or similitude let's say",
    "start": "100400",
    "end": "105840"
  },
  {
    "text": "uh we're going to so it's really two architectural uh approaches and",
    "start": "105840",
    "end": "112399"
  },
  {
    "text": "different ways of messaging uh and having microservices interact with each",
    "start": "112399",
    "end": "118079"
  },
  {
    "text": "other uh but what we are going to do um so we'll go through the different approaches uh but really uh",
    "start": "118079",
    "end": "126159"
  },
  {
    "text": "look i'm looking forward to the end where we speak about a concrete use case uh meter and i built an application uh",
    "start": "126159",
    "end": "133280"
  },
  {
    "text": "called the pico daily picture sharing application and uh this uh",
    "start": "133280",
    "end": "138879"
  },
  {
    "text": "talk is actually the um our learned experiences uh while we were building",
    "start": "138879",
    "end": "145280"
  },
  {
    "text": "and rewriting this uh application together so stay tuned especially till the end where we cover",
    "start": "145280",
    "end": "151840"
  },
  {
    "text": "uh our feedback uh that we learned along the way when building those applications",
    "start": "151840",
    "end": "157680"
  },
  {
    "text": "so um let's first have a look at a simple",
    "start": "157680",
    "end": "163120"
  },
  {
    "text": "e-commerce kind of uh transaction where you have multiple services and different technologies",
    "start": "163120",
    "end": "169519"
  },
  {
    "text": "here i've illustrated uh with a few icons from google cloud products but it",
    "start": "169519",
    "end": "174959"
  },
  {
    "text": "doesn't have to be about google cloud at all so imagine any technology that you prefer any",
    "start": "174959",
    "end": "181440"
  },
  {
    "text": "framework etc so we have a front-end application",
    "start": "181440",
    "end": "186480"
  },
  {
    "text": "that's going to receive some incoming requests from users we have a second service that's a",
    "start": "186480",
    "end": "193200"
  },
  {
    "text": "payment processor to to you know authorize and charge a credit card then we have a cheaper",
    "start": "193200",
    "end": "200400"
  },
  {
    "text": "service that's going to prepare and ship the items as well as a notification service that is going to notify our",
    "start": "200400",
    "end": "207440"
  },
  {
    "text": "users whether the transaction was successful with whether the uh the",
    "start": "207440",
    "end": "213120"
  },
  {
    "text": "parcels will be uh um you know delivered to to their address etc so one approach uh is to",
    "start": "213120",
    "end": "221280"
  },
  {
    "text": "potentially chain those micro services so the front end calls the payment processor when the pro the payment",
    "start": "221280",
    "end": "227840"
  },
  {
    "text": "processing is done the payment processor is going to call the shipper to prepare the the order and then once the the",
    "start": "227840",
    "end": "234480"
  },
  {
    "text": "order is ready uh perhaps this last cheaper service is going to call yet another",
    "start": "234480",
    "end": "240400"
  },
  {
    "text": "service so it's a it's a kind of a chain uh of services",
    "start": "240400",
    "end": "246080"
  },
  {
    "text": "so uh it's one approach but as you can see the services are pretty tightly coupled",
    "start": "246080",
    "end": "253120"
  },
  {
    "text": "as they invoke each other in a chain so if something fails in the middle what's going to happen right",
    "start": "253120",
    "end": "260000"
  },
  {
    "text": "so there are some pros and cons uh to this approach so if you look so let's",
    "start": "260000",
    "end": "265040"
  },
  {
    "text": "imagine we're using rest to have each service called each other",
    "start": "265040",
    "end": "271680"
  },
  {
    "text": "when you use a this approach usually we've already split",
    "start": "271680",
    "end": "276800"
  },
  {
    "text": "potentially a big monolith into smaller micro services so it's easier to work on",
    "start": "276800",
    "end": "282720"
  },
  {
    "text": "individual services because you can also have teams focus different teams focusing on different",
    "start": "282720",
    "end": "289120"
  },
  {
    "text": "services rather than having to you know ensure that the monolith is still in a consistent state",
    "start": "289120",
    "end": "296560"
  },
  {
    "text": "uh it's pretty easy to implement as well in the sense that services simply call each other uh beyond rest so it's pretty",
    "start": "296560",
    "end": "304400"
  },
  {
    "text": "straightforward to do however in terms of cons well there's indeed too much coupling between all the services",
    "start": "304400",
    "end": "311199"
  },
  {
    "text": "especially when one service fails uh what happens to the the overall uh",
    "start": "311199",
    "end": "317280"
  },
  {
    "text": "the the overall transaction uh also the other thing that might be tricky tricky is how",
    "start": "317280",
    "end": "324560"
  },
  {
    "text": "error reporting or retry and timeout logic works in this context because it's",
    "start": "324560",
    "end": "329680"
  },
  {
    "text": "really at the service invocation point where you have to handle this so you have to add some",
    "start": "329680",
    "end": "337600"
  },
  {
    "text": "technical or infrastructure related code at invocation site",
    "start": "337600",
    "end": "343520"
  },
  {
    "text": "and uh it's going to you know i some boilerplate code inside your",
    "start": "343520",
    "end": "348720"
  },
  {
    "text": "business code basically so it's not necessarily always super clean to to do it that way well depending on the",
    "start": "348720",
    "end": "354160"
  },
  {
    "text": "technology or framework you use things might be a better or or not",
    "start": "354160",
    "end": "359919"
  },
  {
    "text": "another an alternative approach would be to use a an even driven approach that's the choreography pattern basically where",
    "start": "359919",
    "end": "368080"
  },
  {
    "text": "uh instead of having a service called another studies which calls another service etc in chain here we're",
    "start": "368080",
    "end": "375120"
  },
  {
    "text": "going to use some kind of message broker so it can be some pub sub kind of",
    "start": "375120",
    "end": "380479"
  },
  {
    "text": "product with topics subscriptions etc so here the front end is going to send a",
    "start": "380479",
    "end": "385520"
  },
  {
    "text": "message through the broker saying hey i've got a new request then uh service",
    "start": "385520",
    "end": "391360"
  },
  {
    "text": "the payment processor is going to listen to a particular topic and oh yeah there's a an incoming payment processing",
    "start": "391360",
    "end": "398000"
  },
  {
    "text": "request okay i'm gonna handle it uh if the if i can charge this credit card",
    "start": "398000",
    "end": "403199"
  },
  {
    "text": "then i'm going to send another event another message then the shipper service might be interested in that particular",
    "start": "403199",
    "end": "409360"
  },
  {
    "text": "message etc the notifier might be interested in the shipping uh",
    "start": "409360",
    "end": "415680"
  },
  {
    "text": "messages as well etc so it's more loosely coupled uh there's no i mean",
    "start": "415680",
    "end": "420880"
  },
  {
    "text": "there's no responsibility for one service you know to call the other service",
    "start": "420880",
    "end": "426000"
  },
  {
    "text": "so things are also more usable so potentially let's say the cheaper service might be used by other",
    "start": "426000",
    "end": "431919"
  },
  {
    "text": "parts uh of your application or the notification which is more generic perhaps",
    "start": "431919",
    "end": "439199"
  },
  {
    "text": "and the uh it's easier as well to scale or reuse",
    "start": "439199",
    "end": "445759"
  },
  {
    "text": "those services and scale them potentially independently depending on how much one particular",
    "start": "445759",
    "end": "451440"
  },
  {
    "text": "service is used so if we look again at uh another but",
    "start": "451440",
    "end": "456800"
  },
  {
    "text": "slightly more complex example uh let's say here uh you've got",
    "start": "456800",
    "end": "462319"
  },
  {
    "text": "you you've got to check uh what's in the inventory perhaps you're going to call the inventory database",
    "start": "462319",
    "end": "468639"
  },
  {
    "text": "and have different branches so in one branch it's in the inventory so you can prepare",
    "start": "468639",
    "end": "474560"
  },
  {
    "text": "the order confirmation if it's out of stock then you might need to call a supplier api to uh replenish the stock",
    "start": "474560",
    "end": "483039"
  },
  {
    "text": "uh prepare some some messages etc then uh in either",
    "start": "483039",
    "end": "488160"
  },
  {
    "text": "path in either branch uh you also have to update the inventory prepare the order notify the customer depending",
    "start": "488160",
    "end": "494800"
  },
  {
    "text": "perhaps on the uh if it's big order perhaps you want to involve the sales rep or not so you might have different",
    "start": "494800",
    "end": "501840"
  },
  {
    "text": "branches so compared to the previous example where it was still chain of messages things were pretty much serial",
    "start": "501840",
    "end": "509120"
  },
  {
    "text": "here we see that for more complex business processes um message driven approach",
    "start": "509120",
    "end": "516240"
  },
  {
    "text": "still interesting but perhaps it's harder to make sense of the the flow of messages",
    "start": "516240",
    "end": "521839"
  },
  {
    "text": "that are you know flowing around in our system so pros and cons again um",
    "start": "521839",
    "end": "528880"
  },
  {
    "text": "so in terms of pros services are loosely coupled which which is nice which is a nice characteristic services can be",
    "start": "528880",
    "end": "536240"
  },
  {
    "text": "changed and scaled independently which is also a good thing there's no",
    "start": "536240",
    "end": "542720"
  },
  {
    "text": "single point of failure because even if a service goes down then well it'll pick up uh the the the",
    "start": "542720",
    "end": "550240"
  },
  {
    "text": "messages when it's ready again to serve uh those those messages",
    "start": "550240",
    "end": "555920"
  },
  {
    "text": "and uh another nice characteristic of this approach is that uh events are usually",
    "start": "555920",
    "end": "562320"
  },
  {
    "text": "easy to extend even eventing system are easy to extend in the sense that",
    "start": "562320",
    "end": "567440"
  },
  {
    "text": "potentially there's a new event that is going to be created",
    "start": "567440",
    "end": "572560"
  },
  {
    "text": "and new services or existing services might be interested in that new event or",
    "start": "572560",
    "end": "578480"
  },
  {
    "text": "if there's a new service interested in an existing event you can also add that service fairly easily without changing",
    "start": "578480",
    "end": "585279"
  },
  {
    "text": "the overall uh architecture et cetera so it's it's very easy to add new messages",
    "start": "585279",
    "end": "590640"
  },
  {
    "text": "new kind of events and uh new services in terms of uh cons",
    "start": "590640",
    "end": "596560"
  },
  {
    "text": "it's usually harder to monitor the whole system it's more complicated to figure out okay this particular message trigger",
    "start": "596560",
    "end": "603680"
  },
  {
    "text": "this flow of messages so you have to keep track of some correlation ids and",
    "start": "603680",
    "end": "609200"
  },
  {
    "text": "things like that to ensure that those messages are somewhat correlated",
    "start": "609200",
    "end": "615279"
  },
  {
    "text": "in terms of errors retries come out it's uh it's still complicated you might be",
    "start": "615279",
    "end": "621920"
  },
  {
    "text": "able to set some logic at the perhaps the pub sub system so for",
    "start": "621920",
    "end": "628320"
  },
  {
    "text": "this particular queue or topic of messages then you won't have retries and",
    "start": "628320",
    "end": "633360"
  },
  {
    "text": "that many retries but it might be pretty much global to that topic and not",
    "start": "633360",
    "end": "638560"
  },
  {
    "text": "on a per service usage perspective",
    "start": "638560",
    "end": "643760"
  },
  {
    "text": "the other downside i would say uh is the fact that the business floor is not really captured explicitly in the sense",
    "start": "643760",
    "end": "649920"
  },
  {
    "text": "that the uh the behavior of your application the behavior of your business process is",
    "start": "649920",
    "end": "657040"
  },
  {
    "text": "emerging out of the flow of messages of events but there's not a really a place where",
    "start": "657040",
    "end": "663600"
  },
  {
    "text": "you can look at and say okay so it should like in our flow chart basically you don't have a flowchart saying okay",
    "start": "663600",
    "end": "669680"
  },
  {
    "text": "it's going here and there it's going to call this other service because that even is going to trigger",
    "start": "669680",
    "end": "675440"
  },
  {
    "text": "that service etc so it's uh not easy to monitor track and thus also understand uh what's",
    "start": "675440",
    "end": "683200"
  },
  {
    "text": "going on uh with this flow of messages and events and also who ensures that the whole",
    "start": "683200",
    "end": "689839"
  },
  {
    "text": "transaction is successful um okay you've got messages flying around but you don't",
    "start": "689839",
    "end": "695440"
  },
  {
    "text": "necessarily have uh let's say a more global service that would ensure that",
    "start": "695440",
    "end": "701519"
  },
  {
    "text": "well all those messages led to the end of our workforce of our business process",
    "start": "701519",
    "end": "709760"
  },
  {
    "text": "um mete you want to say a few words about the uh orchestration approach a",
    "start": "709760",
    "end": "715279"
  },
  {
    "text": "different approach yes so let me share my screen and you can let me know",
    "start": "715279",
    "end": "720399"
  },
  {
    "text": "stop sharing this is your turn okay so you can see my screen",
    "start": "720399",
    "end": "727600"
  },
  {
    "text": "yes okay um and by the way someone mentioned in the in the questions uh to",
    "start": "728839",
    "end": "734720"
  },
  {
    "text": "try to zoom in in our um slides i'm sharing the full screen so i don't know how i can zoom in more uh but",
    "start": "734720",
    "end": "740399"
  },
  {
    "text": "oh yeah let's keep that in mind let's when we show calling later we'll try to zoom in as much as we can",
    "start": "740399",
    "end": "746000"
  },
  {
    "text": "okay um so as guillermo described so when we are designing an architecture we can have",
    "start": "746000",
    "end": "751279"
  },
  {
    "text": "services calling each other directly and that has these issues of tight coupling",
    "start": "751279",
    "end": "757200"
  },
  {
    "text": "and then we can go with a choreography or event driven approach where things are more loosely coupled but then all of",
    "start": "757200",
    "end": "763600"
  },
  {
    "text": "a sudden you have this mess with messages where you have all these different message types that are flying around and then it becomes really hard",
    "start": "763600",
    "end": "770320"
  },
  {
    "text": "to monitor your system and most importantly um [Music]",
    "start": "770320",
    "end": "775760"
  },
  {
    "text": "like there's nobody ensuring that the transaction is successful of course there are some patterns like saga pattern that you can use to kind of",
    "start": "775760",
    "end": "783360"
  },
  {
    "text": "make sure that transactions that are successful and then if something fails you can apply",
    "start": "783360",
    "end": "789279"
  },
  {
    "text": "compensation things um but there's no nothing like overall like uh watching",
    "start": "789279",
    "end": "794720"
  },
  {
    "text": "your your events and inventory system working correctly so you need to kind of think about that how you're going to do",
    "start": "794720",
    "end": "799760"
  },
  {
    "text": "that now another approach you can take it's called orchestration and in this approach instead of services",
    "start": "799760",
    "end": "806639"
  },
  {
    "text": "calling each other or instead of services sending messages indirectly to each other",
    "start": "806639",
    "end": "812079"
  },
  {
    "text": "you can have as an external service orchestrating the calls in the order that you want so if you go back to our",
    "start": "812079",
    "end": "818880"
  },
  {
    "text": "previous simple example or an e-commerce transaction in this case um you can have the",
    "start": "818880",
    "end": "825199"
  },
  {
    "text": "front-end receiving the request like before and then the front-end kicks off an",
    "start": "825199",
    "end": "831040"
  },
  {
    "text": "orchestration so there's an external orchestrator uh by the way this orchestrator it doesn't have to be",
    "start": "831040",
    "end": "837199"
  },
  {
    "text": "external per se like so for example you can have the front end kind of orchestrate things if you like",
    "start": "837199",
    "end": "842800"
  },
  {
    "text": "or you can have one of your services kind of orchestrating other services so it is possible to kind of do",
    "start": "842800",
    "end": "848480"
  },
  {
    "text": "orchestration um within your front end or or with maybe",
    "start": "848480",
    "end": "853839"
  },
  {
    "text": "in a service within your architecture but it is usually a better idea to have something external and we'll talk more",
    "start": "853839",
    "end": "858880"
  },
  {
    "text": "about this when we talk about workflows so typically this is an external service",
    "start": "858880",
    "end": "864639"
  },
  {
    "text": "that whose job is to really orchestrate your calls and what this orchestrator",
    "start": "864639",
    "end": "870000"
  },
  {
    "text": "can do is that it can first of all it has the rules um all your business logic so whatever you",
    "start": "870000",
    "end": "876480"
  },
  {
    "text": "want to do whatever services you want to call in in whatever form you kind of",
    "start": "876480",
    "end": "881839"
  },
  {
    "text": "um explain that in your orchestration and we'll get to this again when we talk",
    "start": "881839",
    "end": "886880"
  },
  {
    "text": "about uh workflows uh and then the orchestrator just follows those rules and then in this case it will call the payment processor and then the shipper",
    "start": "886880",
    "end": "893360"
  },
  {
    "text": "and the notifier so it will make those step calls to each service and since",
    "start": "893360",
    "end": "898720"
  },
  {
    "text": "orchestrator is the one calling these it can make sure that each step is successful so for example if something",
    "start": "898720",
    "end": "904160"
  },
  {
    "text": "happens with payment processor orchestrator can rewrite the call it can also take",
    "start": "904160",
    "end": "910240"
  },
  {
    "text": "results back so if payment processor returns something okay so it can take that result and it can pass that result",
    "start": "910240",
    "end": "916480"
  },
  {
    "text": "to the next uh service like the shipper for example so in this approach",
    "start": "916480",
    "end": "922000"
  },
  {
    "text": "of course there's a pros and cons the pros is that the business flow like how things should flow can be captured",
    "start": "922000",
    "end": "928160"
  },
  {
    "text": "centrally and since it can be captured centrally it can be source controlled and this is really really uh useful um",
    "start": "928160",
    "end": "935440"
  },
  {
    "text": "because you have this central place where you can say this is the this is how things are supposed to work you can",
    "start": "935440",
    "end": "942399"
  },
  {
    "text": "virgin that so you can have multiple versions and if something needs to change you can have a new version and",
    "start": "942399",
    "end": "948320"
  },
  {
    "text": "you can you can source control this so if someone comes to your system and they want to know how the system is supposed",
    "start": "948320",
    "end": "953680"
  },
  {
    "text": "to work there's a place you can they can go and look at it and they can see the history of it as well since you're versioning it",
    "start": "953680",
    "end": "960720"
  },
  {
    "text": "now each step can be monitored um in orchestration there's steps and if if a",
    "start": "960720",
    "end": "965759"
  },
  {
    "text": "step fails it it's very obvious like what failed uh again we'll look at this uh when we show our example",
    "start": "965759",
    "end": "973279"
  },
  {
    "text": "um these errors retries and timeouts that you need to think about they can be now centralized",
    "start": "973279",
    "end": "978800"
  },
  {
    "text": "because if you want to for example apply a central kind of error policy uh",
    "start": "978800",
    "end": "984720"
  },
  {
    "text": "you can apply that in each step in your orchestration rather than implementing",
    "start": "984720",
    "end": "990079"
  },
  {
    "text": "that error policy within each of your microservices so that allows your",
    "start": "990079",
    "end": "995199"
  },
  {
    "text": "services to be more simple they just do the the business logic but they don't really",
    "start": "995199",
    "end": "1000399"
  },
  {
    "text": "need to deal with the retry logic or the error logic that all microsources need to deal with usually",
    "start": "1000399",
    "end": "1008079"
  },
  {
    "text": "and the good news is that the services are still independent right there are still micro services that are deployed independently that can be scaled",
    "start": "1008079",
    "end": "1014320"
  },
  {
    "text": "independently uh but you are kind of bringing them together into what i call a temporary monolithic",
    "start": "1014320",
    "end": "1022000"
  },
  {
    "text": "application right like the orchestration if you think about it is kind of like bringing these uh services that are",
    "start": "1022000",
    "end": "1027760"
  },
  {
    "text": "independent into a temporary metamorph kind of situation so you are kind of getting the best of both worlds the",
    "start": "1027760",
    "end": "1033199"
  },
  {
    "text": "independence of microservices versus the the coupling that you get and the benefits that you get from the coupling",
    "start": "1033199",
    "end": "1039760"
  },
  {
    "text": "with an orchestration kind of like a monolith um but an orchestration service it's",
    "start": "1039760",
    "end": "1046240"
  },
  {
    "text": "something new to learn and maintain um and it's a different kind of paradigm than what you might be used to because",
    "start": "1046240",
    "end": "1053200"
  },
  {
    "text": "usually we're used to independent services calling each other or or events flying around but an orchestration is",
    "start": "1053200",
    "end": "1058720"
  },
  {
    "text": "basically an e a a new service that you need to configure and define how it's going to hold these",
    "start": "1058720",
    "end": "1066000"
  },
  {
    "text": "um services and then if you need to change something the orchestration needs to change as well so that's something uh",
    "start": "1066000",
    "end": "1072320"
  },
  {
    "text": "that you need to get used to orchestrator could be a single point of failure",
    "start": "1072320",
    "end": "1077919"
  },
  {
    "text": "because if orchestration source doesn't run then nothing gets run so you need to make sure that you're using something",
    "start": "1077919",
    "end": "1083280"
  },
  {
    "text": "resilient and redundant and you are losing the some flexibility",
    "start": "1083280",
    "end": "1089120"
  },
  {
    "text": "by choosing orchestration right because in eventing for example if you want to add a new",
    "start": "1089120",
    "end": "1095440"
  },
  {
    "text": "service um all you need to do is deploy the service and configure",
    "start": "1095440",
    "end": "1101360"
  },
  {
    "text": "what messages that service should receive right that's really it so the configuration is quite quite simple",
    "start": "1101360",
    "end": "1108080"
  },
  {
    "text": "whereas in orchestration you need to do more you need to deploy the service and you need to also change your orchestration and take that service",
    "start": "1108080",
    "end": "1115360"
  },
  {
    "text": "into account and you need to deploy your orchestration again usually right so that give that makes it a little bit",
    "start": "1115360",
    "end": "1121200"
  },
  {
    "text": "harder to extend your system and you're losing a little bit of flexibility there",
    "start": "1121200",
    "end": "1126559"
  },
  {
    "text": "and you still need to think about the the whole transaction",
    "start": "1126559",
    "end": "1132640"
  },
  {
    "text": "now the orchestrator is the thing that can watch your whole",
    "start": "1132640",
    "end": "1137919"
  },
  {
    "text": "flow so you can it can watch that all steps are successful so in that sense",
    "start": "1137919",
    "end": "1142960"
  },
  {
    "text": "we're doing better right like we're making sure that each step can be successful and if all the steps like worked",
    "start": "1142960",
    "end": "1148960"
  },
  {
    "text": "then your whole transaction is successful so in that sense it's better than eventing and i think it's easier",
    "start": "1148960",
    "end": "1154160"
  },
  {
    "text": "than inventing in terms of how to make sure the whole transaction is successful but you still need to worry about what",
    "start": "1154160",
    "end": "1161200"
  },
  {
    "text": "happens when a step fails in the middle right then you need to do what's called compensation steps right so if something",
    "start": "1161200",
    "end": "1167600"
  },
  {
    "text": "fails like let's say you charge the user and then you want to ship an item afterwards but shipping the item failed",
    "start": "1167600",
    "end": "1174160"
  },
  {
    "text": "or maybe you run out of stock or something like that now you need to go back and uncharge the user or maybe",
    "start": "1174160",
    "end": "1179679"
  },
  {
    "text": "remove the block from the credit card so you need to have this compensation step so you need to implement the saga",
    "start": "1179679",
    "end": "1185120"
  },
  {
    "text": "pattern again um but i guess it becomes a little bit easier to do the saga python because um",
    "start": "1185120",
    "end": "1192320"
  },
  {
    "text": "orchestration services they give you tools to kind of capture",
    "start": "1192320",
    "end": "1197520"
  },
  {
    "text": "the the errors and and add new steps to handle them um like do do kind of try",
    "start": "1197520",
    "end": "1203280"
  },
  {
    "text": "catches in your steps if you will all right so the question is like which",
    "start": "1203280",
    "end": "1208400"
  },
  {
    "text": "one is better choreography orchestration which one should i use um you know it depends as in every software",
    "start": "1208400",
    "end": "1214640"
  },
  {
    "text": "engineering question but there are certain um things that i look for uh when i'm",
    "start": "1214640",
    "end": "1220799"
  },
  {
    "text": "thinking about my architecture so if my services are not cluster related",
    "start": "1220799",
    "end": "1227440"
  },
  {
    "text": "meaning you know you have these services that are independent they don't really need to know about each other and they can",
    "start": "1227440",
    "end": "1233600"
  },
  {
    "text": "also exist in different kind of transactions then in that case",
    "start": "1233600",
    "end": "1238960"
  },
  {
    "text": "usually an event-driven system is better because these services",
    "start": "1238960",
    "end": "1245200"
  },
  {
    "text": "they can live in different contexts and it will be easier to plug them in",
    "start": "1245200",
    "end": "1250400"
  },
  {
    "text": "into those contexts if you're using eventing right so that's when i start thinking about event driven",
    "start": "1250400",
    "end": "1257120"
  },
  {
    "text": "but on the other hand if your services are closely related meaning they usually are deployed",
    "start": "1257120",
    "end": "1262720"
  },
  {
    "text": "together and they usually call each other in a certain order then that's when i start thinking",
    "start": "1262720",
    "end": "1268799"
  },
  {
    "text": "orchestration because if you if your services kind of act like a unit already then why bother with the eventing",
    "start": "1268799",
    "end": "1275840"
  },
  {
    "text": "flexibility you don't really need that flexibility also um if you can define your flow of your",
    "start": "1275840",
    "end": "1282960"
  },
  {
    "text": "services in a flowchart like the example that guillaume showed with that flowchart",
    "start": "1282960",
    "end": "1289200"
  },
  {
    "text": "then usually that's a good candidate for orchestration because that flow chart has a lot of useful information about",
    "start": "1289200",
    "end": "1295440"
  },
  {
    "text": "how your system should work and if you want to preserve that orchestration allows you to actually",
    "start": "1295440",
    "end": "1303200"
  },
  {
    "text": "quantify that well first of all orchestration allows you to kind of code that in orchestration and",
    "start": "1303200",
    "end": "1309039"
  },
  {
    "text": "then it also allows you to preserve that and version that so if that's important to you then orchestration is probably a",
    "start": "1309039",
    "end": "1314559"
  },
  {
    "text": "better option and of course um you can also take a hybrid approach",
    "start": "1314559",
    "end": "1319840"
  },
  {
    "text": "uh and i think this is what i usually see in real world kind of applications like you don't really go with",
    "start": "1319840",
    "end": "1327039"
  },
  {
    "text": "just event driven or you don't really go with just orchestration but you usually go with a mix of both when it makes",
    "start": "1327039",
    "end": "1333120"
  },
  {
    "text": "sense so what you can do is that you can orchestrate",
    "start": "1333120",
    "end": "1338159"
  },
  {
    "text": "what makes sense together so if there's a transaction with a multiple services that makes sense to go together all the",
    "start": "1338159",
    "end": "1343919"
  },
  {
    "text": "time then you orchestrate that but then at the end of the transaction you might want to um",
    "start": "1343919",
    "end": "1350960"
  },
  {
    "text": "signal other orchestrations with eventing because they don't really need to know about each other they just need",
    "start": "1350960",
    "end": "1356320"
  },
  {
    "text": "to be able to signal to each other right so for that you can use event driven similarly you can",
    "start": "1356320",
    "end": "1363039"
  },
  {
    "text": "have your orchestration be triggered by an event and for example a user saves an",
    "start": "1363039",
    "end": "1368320"
  },
  {
    "text": "image to a bucket and you want that event to trigger orchestration or image processing right so that's a perfect",
    "start": "1368320",
    "end": "1374799"
  },
  {
    "text": "candidate for an event triggered triggering the orchestration and then your orchestration taking over and doing the",
    "start": "1374799",
    "end": "1381280"
  },
  {
    "text": "work that it needs to do in a tightly coupled way with the services that you have",
    "start": "1381280",
    "end": "1386840"
  },
  {
    "text": "right okay um so that was a really quick summary of uh choreography orchestration",
    "start": "1386840",
    "end": "1392720"
  },
  {
    "text": "uh now guillaume will tell us what kind of services and tools exist in this landscape",
    "start": "1392720",
    "end": "1399200"
  },
  {
    "text": "and then after that we'll get back to orchestration and look at in more detail on google cloud workforce",
    "start": "1399200",
    "end": "1404400"
  },
  {
    "text": "yeah thank you mate and we actually have a question uh an interesting one if we have an error on some step and we need",
    "start": "1404400",
    "end": "1411280"
  },
  {
    "text": "to show it on the ui do we better notify ui directly or via orchestration",
    "start": "1411280",
    "end": "1419279"
  },
  {
    "text": "i guess it depends again a bit on the situation but for example on a recent",
    "start": "1419360",
    "end": "1425919"
  },
  {
    "text": "application that i built so i had a it was a small uh",
    "start": "1425919",
    "end": "1432880"
  },
  {
    "text": "well it was a demo it wasn't a real application but uh i created a an expense report application",
    "start": "1432880",
    "end": "1439919"
  },
  {
    "text": "and um um sometimes let's say you're sending some research that are not valid",
    "start": "1439919",
    "end": "1446400"
  },
  {
    "text": "or things like this uh or i wanted to see what was the",
    "start": "1446400",
    "end": "1451679"
  },
  {
    "text": "ongoing state or status of that particular",
    "start": "1451679",
    "end": "1456960"
  },
  {
    "text": "expense report uh so i was using um in that particular application at least",
    "start": "1456960",
    "end": "1462880"
  },
  {
    "text": "i was using the firestore realtime database to actually notify of status",
    "start": "1462880",
    "end": "1468640"
  },
  {
    "text": "changes so if there's an error i can notify you with that if there's uh you know if i'm just going to the next step i want to",
    "start": "1468640",
    "end": "1475120"
  },
  {
    "text": "update and say okay this is the uh uh we're currently in this but in this",
    "start": "1475120",
    "end": "1480640"
  },
  {
    "text": "particular step so i actually in my workflow definition i actually had steps",
    "start": "1480640",
    "end": "1485840"
  },
  {
    "text": "to update the the status basically so if i wanted to say okay the expense report was",
    "start": "1485840",
    "end": "1492960"
  },
  {
    "text": "submitted or the the receipts uh are not correct",
    "start": "1492960",
    "end": "1498080"
  },
  {
    "text": "i could just update the ui thanks to this real-time notification mechanism which was",
    "start": "1498080",
    "end": "1503919"
  },
  {
    "text": "because that's a real-time kind of database uh i was able from the front",
    "start": "1503919",
    "end": "1508960"
  },
  {
    "text": "end to check what was the the ongoing status basically so yeah we can we can",
    "start": "1508960",
    "end": "1514559"
  },
  {
    "text": "show it on the ui and it can be a step of the the actual uh orchestration of the the workflow",
    "start": "1514559",
    "end": "1521120"
  },
  {
    "text": "definition another um question could you combine choreographing on orchestration yes",
    "start": "1521120",
    "end": "1526720"
  },
  {
    "text": "that's what mette explained especially when you've got several bounded contacts uh you might have the",
    "start": "1526720",
    "end": "1534400"
  },
  {
    "text": "bigger picture might be actually a choreography of events but then for",
    "start": "1534400",
    "end": "1543200"
  },
  {
    "text": "well-defined bounded context kind of business processes then there it's a",
    "start": "1543200",
    "end": "1548480"
  },
  {
    "text": "great idea to use uh orchestration instead so you can combine the two and in bigger systems i think that would be",
    "start": "1548480",
    "end": "1556400"
  },
  {
    "text": "the norm to have several uh the two approaches together all right so let me share my screen",
    "start": "1556400",
    "end": "1563120"
  },
  {
    "text": "again share",
    "start": "1563120",
    "end": "1568960"
  },
  {
    "text": "okay all right so let me uh say a few words about the landscape",
    "start": "1568960",
    "end": "1575279"
  },
  {
    "text": "so for even driven systems for choreography i",
    "start": "1575279",
    "end": "1580880"
  },
  {
    "text": "mean all the uh cloud providers have well there are several solutions for for each cloud providers",
    "start": "1580880",
    "end": "1587360"
  },
  {
    "text": "for aws for azure for google cloud so for on google cloud you can use pub sub",
    "start": "1587360",
    "end": "1593520"
  },
  {
    "text": "or you can use even art or events but there are also uh",
    "start": "1593520",
    "end": "1599440"
  },
  {
    "text": "things we're seeing a lot in in the wild uh some some well-known open source projects",
    "start": "1599440",
    "end": "1605840"
  },
  {
    "text": "uh that are being used like kafka apache pulsar etc i'm often seeing kafka being",
    "start": "1605840",
    "end": "1612240"
  },
  {
    "text": "used for uh even driven systems and quite successfully",
    "start": "1612240",
    "end": "1617279"
  },
  {
    "text": "but yeah all the the big cloud providers either offer their own solutions or",
    "start": "1617279",
    "end": "1622640"
  },
  {
    "text": "some integration as well with those open source projects",
    "start": "1622640",
    "end": "1628960"
  },
  {
    "text": "in terms of orchestration same thing so for example uh unleaded aws you can combine lambda functions",
    "start": "1628960",
    "end": "1637360"
  },
  {
    "text": "with step functions on azure you've got logic apps on google cloud you've got cloud composer which is based on the",
    "start": "1637360",
    "end": "1643520"
  },
  {
    "text": "apache airflow open source project uh composer is more for or airflow is more",
    "start": "1643520",
    "end": "1648559"
  },
  {
    "text": "for data-driven kind of pipelines and business processes whereas workflows that's the project um and product will",
    "start": "1648559",
    "end": "1656159"
  },
  {
    "text": "be using uh in our demonstration uh workflow is more for uh yeah business",
    "start": "1656159",
    "end": "1662159"
  },
  {
    "text": "processes uh with you know some logic like branching and things",
    "start": "1662159",
    "end": "1667919"
  },
  {
    "text": "like that and not necessarily data driven with uh so i'm just going to show those",
    "start": "1667919",
    "end": "1673840"
  },
  {
    "text": "two screens very quickly we don't have to look into the details but we try to have a look at the orchestration",
    "start": "1673840",
    "end": "1681279"
  },
  {
    "text": "products so step functions uh logic apps and google cloud workflows",
    "start": "1681279",
    "end": "1687120"
  },
  {
    "text": "uh and basically those three products have more or less the same coverage",
    "start": "1687120",
    "end": "1692640"
  },
  {
    "text": "uh but we've been trying to keep track on some of the the features that are",
    "start": "1692640",
    "end": "1697840"
  },
  {
    "text": "available but yeah all things like branching logic var steps calling uh apis etc that's uh",
    "start": "1697840",
    "end": "1706799"
  },
  {
    "text": "the kind of steps you can usually either kind of actions you can usually do in those kind of",
    "start": "1706799",
    "end": "1712720"
  },
  {
    "text": "products and that's uh and will have yeah you wanted to add something yeah i just want to add a couple of",
    "start": "1712720",
    "end": "1719039"
  },
  {
    "text": "things here um so for when we did this research one theme",
    "start": "1719039",
    "end": "1724399"
  },
  {
    "text": "that emerges that the base features are there for most all club providers so the base kind",
    "start": "1724399",
    "end": "1731039"
  },
  {
    "text": "of orchestration is there but step functions it seems to be more geared towards um",
    "start": "1731039",
    "end": "1736799"
  },
  {
    "text": "aws ecosystem so you can orchestrate aws lambda and other aws services but",
    "start": "1736799",
    "end": "1744399"
  },
  {
    "text": "they don't really allow you to orchestrate external services and i think that's a serious limitation that you should be aware of um on the other",
    "start": "1744399",
    "end": "1750640"
  },
  {
    "text": "hand logic apps um seems to be the most um feature rich orchestrator per se they",
    "start": "1750640",
    "end": "1757919"
  },
  {
    "text": "let you orchestrate pretty much everything on azure and outside azure and they also have a really rich ecosystem of",
    "start": "1757919",
    "end": "1764320"
  },
  {
    "text": "external things that you can pull in um and nice features like you know",
    "start": "1764320",
    "end": "1770080"
  },
  {
    "text": "including um code in your steps that run quickly things like that um so",
    "start": "1770080",
    "end": "1776320"
  },
  {
    "text": "that seems to be the most fully feature-rich one workflows is close second with most of the main features",
    "start": "1776320",
    "end": "1782880"
  },
  {
    "text": "and the step functions is mostly for aws ecosystem yeah",
    "start": "1782880",
    "end": "1788320"
  },
  {
    "text": "and uh we have a few questions and i'll take them as we go so is it ideal and",
    "start": "1788320",
    "end": "1794240"
  },
  {
    "text": "feasible for an orchestrator to be simple enough that it can demand a hundred percent test coverage",
    "start": "1794240",
    "end": "1800640"
  },
  {
    "text": "um [Music] potentially yes uh uh",
    "start": "1800640",
    "end": "1806720"
  },
  {
    "text": "i mean that maybe so first of all when we use an orchestrator um",
    "start": "1806720",
    "end": "1812640"
  },
  {
    "text": "since it's a product that you use you don't necessarily have um uh",
    "start": "1812640",
    "end": "1818399"
  },
  {
    "text": "since it's a cloud-based here at least in the ones we're mentioning uh our",
    "start": "1818399",
    "end": "1823600"
  },
  {
    "text": "cloud-based uh it's complicated to do uh unit tests you really have to do",
    "start": "1823600",
    "end": "1829760"
  },
  {
    "text": "integration tests uh and depending on how complicated the workflow is so we've got if you've got",
    "start": "1829760",
    "end": "1837120"
  },
  {
    "text": "tons and tons of branches and conditions etc the combinatorial",
    "start": "1837120",
    "end": "1842799"
  },
  {
    "text": "explosion will might make it difficult and complicated to have a hundred percent",
    "start": "1842799",
    "end": "1848960"
  },
  {
    "text": "test coverage so i wouldn't necessarily go as far as requiring uh that high",
    "start": "1848960",
    "end": "1855120"
  },
  {
    "text": "level of coverage um do you agree mate",
    "start": "1855120",
    "end": "1860559"
  },
  {
    "text": "yeah i mean it's hard to unit test orchestrator at least at this stage um",
    "start": "1860559",
    "end": "1868240"
  },
  {
    "text": "but um but i think um yeah you basically have to do like some kind of integration",
    "start": "1868240",
    "end": "1874240"
  },
  {
    "text": "testing to test your full orchestration and that's the story today but that might change with these open source projects that guillaume is going to talk",
    "start": "1874240",
    "end": "1880640"
  },
  {
    "text": "about right now sorry yeah and by the way but someone asked if these slides are available yeah they're",
    "start": "1880640",
    "end": "1886240"
  },
  {
    "text": "already available actually i will put a link in as a question there so that people know where it is",
    "start": "1886240",
    "end": "1891600"
  },
  {
    "text": "thanks mitten yeah so another thing uh you might want to have a look at it's the the cncf uh",
    "start": "1891600",
    "end": "1898480"
  },
  {
    "text": "severalist workflow um it's it's actually a new um something",
    "start": "1898480",
    "end": "1903840"
  },
  {
    "text": "fairly new that that landed or it's still an incubation i think uh at the cncf uh so it's a specification uh",
    "start": "1903840",
    "end": "1913360"
  },
  {
    "text": "to um for defining uh workforce with a kind of dsl or domain-specific language",
    "start": "1913360",
    "end": "1920000"
  },
  {
    "text": "and also providing various sdks so that developers can call that workflow",
    "start": "1920000",
    "end": "1925679"
  },
  {
    "text": "um and but but then there are uh two things it's still fairly new and uh all the the",
    "start": "1925679",
    "end": "1932399"
  },
  {
    "text": "products we've mentioned as as far as i know at least no one currently implement that specification",
    "start": "1932399",
    "end": "1939840"
  },
  {
    "text": "uh so you know your mileage may it may vary but until at least one or more providers",
    "start": "1939840",
    "end": "1947360"
  },
  {
    "text": "or open source projects uh implement that specification it's not of much use",
    "start": "1947360",
    "end": "1953039"
  },
  {
    "text": "yet but the other interesting aspects of this this project",
    "start": "1953039",
    "end": "1959760"
  },
  {
    "text": "it's also that it's using the cloud events uh specification it's another specification that describes uh and",
    "start": "1959760",
    "end": "1966880"
  },
  {
    "text": "standardizes the format of events for um",
    "start": "1966880",
    "end": "1972320"
  },
  {
    "text": "even driven even payloads and another thing that it's",
    "start": "1972320",
    "end": "1978000"
  },
  {
    "text": "taking advantage of it's the the open api specification uh to describe your",
    "start": "1978000",
    "end": "1984240"
  },
  {
    "text": "services so the services you want to interact with within your servers workflow",
    "start": "1984240",
    "end": "1989279"
  },
  {
    "text": "have to be described with open api so they have to be uh rest and you have to",
    "start": "1989279",
    "end": "1996320"
  },
  {
    "text": "provide an open api description for them but it's uh interesting to keep an eye",
    "start": "1996320",
    "end": "2001840"
  },
  {
    "text": "on this and see how it evolves and if uh cloud providers uh adopt this this",
    "start": "2001840",
    "end": "2007840"
  },
  {
    "text": "standard this specification uh i'll zoom in uh i know that's a method that's going to zoom in on",
    "start": "2007840",
    "end": "2015200"
  },
  {
    "text": "one particular example which is google cloud workflows yes so let me",
    "start": "2015200",
    "end": "2022480"
  },
  {
    "text": "just get in there all right so now",
    "start": "2022960",
    "end": "2028480"
  },
  {
    "text": "in the rest of the time i want to talk about workflows and my point here is that i want to show you what you can",
    "start": "2028480",
    "end": "2034320"
  },
  {
    "text": "expect from an orchestrator and we are going to use google cloud workflows as an example because that's what we know but you can expect similar things from",
    "start": "2034320",
    "end": "2040960"
  },
  {
    "text": "logic apps and other step functions uh similar things uh just to give you an idea on what you can expect from",
    "start": "2040960",
    "end": "2046559"
  },
  {
    "text": "orchestrator and then we'll talk about our case study um at the end",
    "start": "2046559",
    "end": "2051839"
  },
  {
    "text": "to show you how we use these tools basically in an app that we wrote okay um",
    "start": "2051839",
    "end": "2057760"
  },
  {
    "text": "so what is workflows workflows it's a service to orchestrate and integrate other services basically and the things",
    "start": "2057760",
    "end": "2065358"
  },
  {
    "text": "that you can orchestrate is first of all your code running on google cloud and by the way it doesn't have to be serverless code so any code that you",
    "start": "2065359",
    "end": "2071839"
  },
  {
    "text": "have running that has that you can access from the cloud uh workflows can include in your",
    "start": "2071839",
    "end": "2077520"
  },
  {
    "text": "orchestration so this can be service functions service containers uh web applications with app engine or",
    "start": "2077520",
    "end": "2083280"
  },
  {
    "text": "even your app running on virtual machines as long as it can be accessible with http",
    "start": "2083280",
    "end": "2088960"
  },
  {
    "text": "okay so any code that you have any google api or google cloud api that you might want",
    "start": "2088960",
    "end": "2095118"
  },
  {
    "text": "to call and any external apis as well so this allows you to write orchestration",
    "start": "2095119",
    "end": "2100640"
  },
  {
    "text": "where you combine your code the apis of the cloud and also external apis like twitter api or",
    "start": "2100640",
    "end": "2108079"
  },
  {
    "text": "tooli or something like that that you might want to include in your orchestration and i like this because i",
    "start": "2108079",
    "end": "2113839"
  },
  {
    "text": "i think in a typical kind of workflow orchestration it's not just",
    "start": "2113839",
    "end": "2119119"
  },
  {
    "text": "about your code it's kind of a combination of many things right so this allows you to include those in your",
    "start": "2119119",
    "end": "2124880"
  },
  {
    "text": "orchestration now how do you define your workflow um well there is a workflow definition",
    "start": "2124880",
    "end": "2131680"
  },
  {
    "text": "language and this language can be in yaml or json uh by the way uh sorry for",
    "start": "2131680",
    "end": "2136880"
  },
  {
    "text": "the mode i don't think yaml is meant for this but this is what we have uh i think",
    "start": "2136880",
    "end": "2142079"
  },
  {
    "text": "we can blame kubernetes for all this yaml craziness but anyway so we have this um definition language and",
    "start": "2142079",
    "end": "2149839"
  },
  {
    "text": "in there you have this idea of steps so you you define and name your steps and you define what happens in steps and you",
    "start": "2149839",
    "end": "2156079"
  },
  {
    "text": "define inputs to your steps and output your steps and and and so on and so forth so if we look at our previous",
    "start": "2156079",
    "end": "2162640"
  },
  {
    "text": "example of these three services calling each other you would orchestrate this using",
    "start": "2162640",
    "end": "2168240"
  },
  {
    "text": "something like this where you define three steps and then in each step you define what",
    "start": "2168240",
    "end": "2173680"
  },
  {
    "text": "happens so here we are saying that we are called making an http post call to the url which is the url of the cloud",
    "start": "2173680",
    "end": "2180480"
  },
  {
    "text": "run service and then we are passing in the input or payment details that we received as a parameter so you receive",
    "start": "2180480",
    "end": "2187040"
  },
  {
    "text": "it from the previous step and then we pass it as an input to the to this step now once this is so this",
    "start": "2187040",
    "end": "2194240"
  },
  {
    "text": "call is going to be made by workflows and then once you have a result and you",
    "start": "2194240",
    "end": "2199440"
  },
  {
    "text": "can capture that in a in a variable called process result and then in the next step again you can",
    "start": "2199440",
    "end": "2204880"
  },
  {
    "text": "you can take this and you can parse it you do a little bit of json parsing and provide it as an input now to a cloud",
    "start": "2204880",
    "end": "2211440"
  },
  {
    "text": "function so you see how this works like defining the steps and passing the variables and passing it a little bit as",
    "start": "2211440",
    "end": "2217280"
  },
  {
    "text": "you go along so this step sequencing is what orchestration is about",
    "start": "2217280",
    "end": "2223920"
  },
  {
    "text": "uh you can do things like serverless pause so let's say you ship an item but you want to wait a little bit before you",
    "start": "2223920",
    "end": "2230000"
  },
  {
    "text": "notify the user so the orchestration can kind of add a timer and weight um and then as i mentioned you",
    "start": "2230000",
    "end": "2237920"
  },
  {
    "text": "you can pass parameters between your functions and you can kind of do a little bit of",
    "start": "2237920",
    "end": "2243280"
  },
  {
    "text": "json parsing um when once you receive a parameter you can pass what you need and just pass that part although i have to",
    "start": "2243280",
    "end": "2249680"
  },
  {
    "text": "warn you that this json parsing is very primitive so if you need to do something more complicated it's not there yet but",
    "start": "2249680",
    "end": "2256400"
  },
  {
    "text": "it allows like basic parsing now so that's steps um then on top of",
    "start": "2256400",
    "end": "2264480"
  },
  {
    "text": "that you can have errors error handling in workflows so for example if in payment processor",
    "start": "2264480",
    "end": "2272400"
  },
  {
    "text": "if you want to make sure that you retry a few times before you fail the step you can specify this maximum five times an",
    "start": "2272400",
    "end": "2280400"
  },
  {
    "text": "exponential back-off policy for that step and workflows will do that for you",
    "start": "2280400",
    "end": "2286000"
  },
  {
    "text": "um this is very useful it kind of takes out the error and recreate logic out of your",
    "start": "2286000",
    "end": "2292000"
  },
  {
    "text": "functions or containers and and make gives you a way to do it globally with",
    "start": "2292000",
    "end": "2297599"
  },
  {
    "text": "from the workflow also sometimes you know maybe you want to do different",
    "start": "2297599",
    "end": "2304320"
  },
  {
    "text": "things depending on the outcome of a function so if a function is successful",
    "start": "2304320",
    "end": "2309440"
  },
  {
    "text": "you might want to call do not fire service but the function is not successful you get an error",
    "start": "2309440",
    "end": "2314480"
  },
  {
    "text": "error and by success an error i mean the http code that you get back um but you can define that precisely",
    "start": "2314480",
    "end": "2321520"
  },
  {
    "text": "what it means to successful or error and then depending on that you can branch to another service and you can",
    "start": "2321520",
    "end": "2327200"
  },
  {
    "text": "maybe call the pager service so that kind of logic can can be part of your orchestration rather than trying to do",
    "start": "2327200",
    "end": "2333280"
  },
  {
    "text": "it in the code and um",
    "start": "2333280",
    "end": "2338560"
  },
  {
    "text": "this conditional sometimes you want to do something you want to read like say the database and check a value and",
    "start": "2338560",
    "end": "2344640"
  },
  {
    "text": "determine if if something is in stock out of stock and do different things depending on that right so that",
    "start": "2344640",
    "end": "2349680"
  },
  {
    "text": "conditional logic is very easy to do in workflows you have a switch statements",
    "start": "2349680",
    "end": "2355040"
  },
  {
    "text": "and you can basically switch switch and do different things and this",
    "start": "2355040",
    "end": "2360480"
  },
  {
    "text": "third-party api calls like let's say at some point you want to request something from a supplier um that can be part of",
    "start": "2360480",
    "end": "2367680"
  },
  {
    "text": "your orchestration as well uh that you don't need to kind of deploy code to do that",
    "start": "2367680",
    "end": "2372960"
  },
  {
    "text": "the workforce can call that for you and to wrap it up um there's some other",
    "start": "2372960",
    "end": "2378160"
  },
  {
    "text": "useful features like you can define sub workflows to encapsulate common reusable",
    "start": "2378160",
    "end": "2383760"
  },
  {
    "text": "workflows and use them from multiple places we have connectors to connect to google",
    "start": "2383760",
    "end": "2389040"
  },
  {
    "text": "cloud services um so this instead of trying to construct http call from your orchestration you",
    "start": "2389040",
    "end": "2396160"
  },
  {
    "text": "can use connectors and connectors make it easier to to call google cloud services and also have the",
    "start": "2396160",
    "end": "2403280"
  },
  {
    "text": "logic to retry things if something needs to be retried or wait for things",
    "start": "2403280",
    "end": "2408800"
  },
  {
    "text": "and there's the notion of iteration so in your workflow you can do for loops basically let's say you want to call it",
    "start": "2408800",
    "end": "2414640"
  },
  {
    "text": "twitter api get some tweets and then for each tweet do something so you want to do that in your for loop",
    "start": "2414640",
    "end": "2420560"
  },
  {
    "text": "you can do that we have callbacks which allows you to write orchestrations",
    "start": "2420560",
    "end": "2428560"
  },
  {
    "text": "with people in the loop so let's say you have some orchestration running and at some point someone needs to approve the",
    "start": "2428560",
    "end": "2434400"
  },
  {
    "text": "next step then you can have a callback that waits and the",
    "start": "2434400",
    "end": "2439520"
  },
  {
    "text": "an external user can send an http request to the callback to continue the rest of the orchestration so features",
    "start": "2439520",
    "end": "2446400"
  },
  {
    "text": "like this help a lot to build pretty sophisticated orchestrations",
    "start": "2446400",
    "end": "2452319"
  },
  {
    "text": "to deploy a workflow you can do it from command line so you define your yaml and deploy this deploys the workflow but it",
    "start": "2452319",
    "end": "2458400"
  },
  {
    "text": "doesn't execute it to execute it you run another command and then you can see the",
    "start": "2458400",
    "end": "2463599"
  },
  {
    "text": "execution by describing the workflow and all of this is also from the ui so",
    "start": "2463599",
    "end": "2470160"
  },
  {
    "text": "if you go to google cloud console um you can see the orchestration defined here",
    "start": "2470160",
    "end": "2475440"
  },
  {
    "text": "and you can see the visualization of the orchestration in here and i think if we have time we'll show you this uh in our",
    "start": "2475440",
    "end": "2481839"
  },
  {
    "text": "example but this visualization is really useful um to kind of visualize how things are supposed to flow in your",
    "start": "2481839",
    "end": "2487440"
  },
  {
    "text": "system and then you can execute it here you can see the logs here um if execute",
    "start": "2487440",
    "end": "2492720"
  },
  {
    "text": "and you can see the executions under here and if execution failed you can see what step failed things like that but",
    "start": "2492720",
    "end": "2498240"
  },
  {
    "text": "we'll take a look at this um let me show the application all right so let in the last 20 minutes",
    "start": "2498240",
    "end": "2504319"
  },
  {
    "text": "or so let's talk about our case study so i will hand over to guillaume to talk",
    "start": "2504319",
    "end": "2509359"
  },
  {
    "text": "about this app and the choreographer part of that app now thanks again thank you uh",
    "start": "2509359",
    "end": "2515920"
  },
  {
    "text": "and i'm going to share my screen",
    "start": "2515920",
    "end": "2521560"
  },
  {
    "text": "all right yeah and uh there are a couple of questions so let's uh have a quick look at them so there",
    "start": "2523200",
    "end": "2530079"
  },
  {
    "text": "was a a question about uh azure orchestration functions orchestration versus logic",
    "start": "2530079",
    "end": "2537200"
  },
  {
    "text": "apps so i'm not uh perhaps you've got uh some",
    "start": "2537200",
    "end": "2543359"
  },
  {
    "text": "more info on this method you looked at uh yeah so i think they mean as you're the",
    "start": "2543359",
    "end": "2549520"
  },
  {
    "text": "azure has drawable functions uh where it allows you to call other functions um so",
    "start": "2549520",
    "end": "2554960"
  },
  {
    "text": "in that sense it is an orchestrator but um from what i see in it's basically a",
    "start": "2554960",
    "end": "2561040"
  },
  {
    "text": "simple orchestrator i would say but logic apps on on the other hand it's more than that it's not just about",
    "start": "2561040",
    "end": "2566960"
  },
  {
    "text": "calling functions but it's about calling any http driven thing like not just functions but any",
    "start": "2566960",
    "end": "2573440"
  },
  {
    "text": "http service basically and it also has more than just calling functions but the logic basically that's why it's called",
    "start": "2573440",
    "end": "2579760"
  },
  {
    "text": "logic apps the logic to handle the calls to pass the results to pass to call the",
    "start": "2579760",
    "end": "2585119"
  },
  {
    "text": "next service so i would say logic apps encapsulates that and more but maybe in a simple kind of use case",
    "start": "2585119",
    "end": "2592079"
  },
  {
    "text": "where you just need to call some other functions maybe durable functions is the way to go yeah and",
    "start": "2592079",
    "end": "2597119"
  },
  {
    "text": "yeah that's it yeah also there was something about",
    "start": "2597119",
    "end": "2603040"
  },
  {
    "text": "actors which can be a good method for implementing an orchestrator",
    "start": "2603040",
    "end": "2608400"
  },
  {
    "text": "is that something you see match um so i've had a look at some platforms like",
    "start": "2608400",
    "end": "2615920"
  },
  {
    "text": "account and things like that so that's also another i would say valid",
    "start": "2615920",
    "end": "2621680"
  },
  {
    "text": "approach uh i don't have a personal experience with these systems so uh that's a bit complicated for me to uh",
    "start": "2621680",
    "end": "2629119"
  },
  {
    "text": "to contrast them and there was a question but i think that disappeared about um",
    "start": "2629119",
    "end": "2635920"
  },
  {
    "text": "monitoring etc so we're not really focusing on this aspect uh but for example on google cloud there are",
    "start": "2635920",
    "end": "2642000"
  },
  {
    "text": "various tools uh for logging for monitoring creating alerts etc so for example you see that",
    "start": "2642000",
    "end": "2648720"
  },
  {
    "text": "your workflow is failing um lots of times on career",
    "start": "2648720",
    "end": "2654319"
  },
  {
    "text": "workflows uh so you could create alerts uh create metrics and so on to track this and",
    "start": "2654319",
    "end": "2660800"
  },
  {
    "text": "create dashboards and so on but it's not only the the focus today",
    "start": "2660800",
    "end": "2665920"
  },
  {
    "text": "all right so um my screen is shared so let me tell you",
    "start": "2665920",
    "end": "2671040"
  },
  {
    "text": "about this uh picker daily uh application so pick a daily like",
    "start": "2671040",
    "end": "2676240"
  },
  {
    "text": "piccadilly circus in london but it's big daily in the sense we share a picture a",
    "start": "2676240",
    "end": "2681680"
  },
  {
    "text": "day for example so it's an application methane and i built um",
    "start": "2681680",
    "end": "2686720"
  },
  {
    "text": "a year or two ago actually before the start of the pandemic and that we",
    "start": "2686720",
    "end": "2691760"
  },
  {
    "text": "rewrote recently using an orchestration approach but initially we had created a",
    "start": "2691760",
    "end": "2696800"
  },
  {
    "text": "an even-driven approach a choreography of events",
    "start": "2696800",
    "end": "2704079"
  },
  {
    "text": "so it's uh this looks like this i'm going to to show you a demonstration now basically",
    "start": "2704079",
    "end": "2711440"
  },
  {
    "text": "it's a way to share pictures so anonymous users can upload pictures",
    "start": "2711440",
    "end": "2717440"
  },
  {
    "text": "we're using machine learning to analyze the pictures and to check also if it's a picture that",
    "start": "2717440",
    "end": "2723040"
  },
  {
    "text": "we are allowed to display to avoid showing bad things on screen",
    "start": "2723040",
    "end": "2728880"
  },
  {
    "text": "and let me show you uh here so you see my my app ripped yes uh so the app is here so",
    "start": "2728880",
    "end": "2737839"
  },
  {
    "text": "i've already uploaded a few pictures perhaps i can upload a new one",
    "start": "2737839",
    "end": "2743200"
  },
  {
    "text": "so let's uh pictures uh",
    "start": "2743200",
    "end": "2749200"
  },
  {
    "text": "let's say here i don't know which one i even uploaded yet so let's leave a point on this one",
    "start": "2749200",
    "end": "2755520"
  },
  {
    "text": "submit um so you can there's a page here uh for submitting pictures so",
    "start": "2755520",
    "end": "2761520"
  },
  {
    "text": "it's going to be processed but it's going to appear in a short moment there's a page uh where you can",
    "start": "2761520",
    "end": "2767520"
  },
  {
    "text": "see a collage of the four most recent pictures and the home page displays the older pictures but you can",
    "start": "2767520",
    "end": "2775359"
  },
  {
    "text": "see that there are some labels that's the machine learning api that we're calling the vision api that",
    "start": "2775359",
    "end": "2780960"
  },
  {
    "text": "analyzes pictures and finds uh the labels of what's recognized in the picture and there's also the colorful",
    "start": "2780960",
    "end": "2788079"
  },
  {
    "text": "border around the pictures because the the vision api also analyzes things like the the color color palette of the the",
    "start": "2788079",
    "end": "2795119"
  },
  {
    "text": "picture and uh if i hit reload once more yeah the new picture has been processed and",
    "start": "2795119",
    "end": "2801520"
  },
  {
    "text": "uploaded and i can see my uh pictures from the time where uh i i used to travel",
    "start": "2801520",
    "end": "2809760"
  },
  {
    "text": "uh in egypt that was a trip with my family so we created this application",
    "start": "2809760",
    "end": "2817359"
  },
  {
    "text": "and here's the what it looks like in terms of",
    "start": "2817359",
    "end": "2823440"
  },
  {
    "text": "architecture so here i don't know if it works when i zoom in do you see my my zoom",
    "start": "2823440",
    "end": "2829839"
  },
  {
    "text": "um no i will just see this line no okay well never mind so uh let me use this uh red pointer so a",
    "start": "2829839",
    "end": "2836720"
  },
  {
    "text": "user is going to upload a picture uh through the web front end here i'm",
    "start": "2836720",
    "end": "2841760"
  },
  {
    "text": "using app engine as my web frontend a picture is uploaded into a cloud",
    "start": "2841760",
    "end": "2848800"
  },
  {
    "text": "storage bucket and here uh it's going to trigger some events so when the picture lands into a",
    "start": "2848800",
    "end": "2857040"
  },
  {
    "text": "bucket it's going to trigger the image analysis",
    "start": "2857040",
    "end": "2862720"
  },
  {
    "text": "function which is going to call the cloud vision api and",
    "start": "2862720",
    "end": "2868559"
  },
  {
    "text": "once the vision api returns we're going to store some picture metadata here in the cloud firestore",
    "start": "2868559",
    "end": "2875520"
  },
  {
    "text": "nosql database things like the name of the picture the labels the color etc whether thumbnail",
    "start": "2875520",
    "end": "2883280"
  },
  {
    "text": "was created for the picture or not and also in parallel uh we're also creating",
    "start": "2883280",
    "end": "2889040"
  },
  {
    "text": "the nails of pictures so that's another service here uh this one was",
    "start": "2889040",
    "end": "2894240"
  },
  {
    "text": "a cloud function but this one is using cloud run so it's a way to containerize applications and run containers",
    "start": "2894240",
    "end": "2901680"
  },
  {
    "text": "serverlessly so this one is creating thumbnails and it's going to update the",
    "start": "2901680",
    "end": "2909440"
  },
  {
    "text": "database with saying whether the thumbnail was created generated or not and we're also going to",
    "start": "2909440",
    "end": "2916640"
  },
  {
    "text": "uh post or save in another bucket the thumbnail of",
    "start": "2916640",
    "end": "2922480"
  },
  {
    "text": "the picture uh what else on a regular interval of time thanks to cloud scheduler we're",
    "start": "2922480",
    "end": "2929119"
  },
  {
    "text": "going to create a collage of the pictures so if there are new pictures we're going to",
    "start": "2929119",
    "end": "2934319"
  },
  {
    "text": "update the collage with the latest uh stitched pictures together",
    "start": "2934319",
    "end": "2940000"
  },
  {
    "text": "we also created another service at the bottom here the the garbage collection service it's another cloud run uh",
    "start": "2940000",
    "end": "2947200"
  },
  {
    "text": "service you using you know a container again uh this uh service is gonna what's going",
    "start": "2947200",
    "end": "2952880"
  },
  {
    "text": "to happen is that uh if you're deleting the full size picture",
    "start": "2952880",
    "end": "2958319"
  },
  {
    "text": "we also want automatically to have the the thumbnail being deleted as well as",
    "start": "2958319",
    "end": "2964480"
  },
  {
    "text": "the metadata in the database so it's a some garbage collection to also clean",
    "start": "2964480",
    "end": "2971200"
  },
  {
    "text": "other things so you delete the big picture it's deleting the thumbnail and it's deleting uh the metadata so we had",
    "start": "2971200",
    "end": "2979200"
  },
  {
    "text": "um basically events flying around there are different ways to deal with",
    "start": "2979200",
    "end": "2985760"
  },
  {
    "text": "those events because we were using different products i think that's the yeah the next line so",
    "start": "2985760",
    "end": "2992079"
  },
  {
    "text": "for example for the so just showing a few lines of the the headers of uh those",
    "start": "2992079",
    "end": "2999200"
  },
  {
    "text": "services so for example here i was exporting um so we we implemented it",
    "start": "2999200",
    "end": "3004559"
  },
  {
    "text": "using node.js but we also have uh some implementations in c sharp and",
    "start": "3004559",
    "end": "3010720"
  },
  {
    "text": "java and some go as well in the uh open source code there",
    "start": "3010720",
    "end": "3015920"
  },
  {
    "text": "um so here we're using cloud functions cloud functions well you just receive an event and a",
    "start": "3015920",
    "end": "3023359"
  },
  {
    "text": "context about that event and the event contains like the name of the file of the the picture and the bucket in which",
    "start": "3023359",
    "end": "3030480"
  },
  {
    "text": "the file was stored but if you look at another service this time we're going to use the i think that's the thumbnail",
    "start": "3030480",
    "end": "3037040"
  },
  {
    "text": "creation service since we're using collaborant cloud 1 is a",
    "start": "3037040",
    "end": "3042079"
  },
  {
    "text": "container service that receives http request but here the events that are",
    "start": "3042079",
    "end": "3047520"
  },
  {
    "text": "flying around are actually cloud storage events so how do you pass such events to an",
    "start": "3047520",
    "end": "3054000"
  },
  {
    "text": "http an http based service like cloud run well",
    "start": "3054000",
    "end": "3059200"
  },
  {
    "text": "the thing is uh for cloudwork we have to uh wrap the uh well it's done automatically but",
    "start": "3059200",
    "end": "3065280"
  },
  {
    "text": "you have to do the unwrapping yourself in your service you you're receiving the cloud storage",
    "start": "3065280",
    "end": "3071200"
  },
  {
    "text": "even which is wrapped inside the pub sub message and the pub sub message is",
    "start": "3071200",
    "end": "3077040"
  },
  {
    "text": "wrapped into an http request so that they are it's like onions that you have to to peel one layer after another so",
    "start": "3077040",
    "end": "3084240"
  },
  {
    "text": "it's a different way of dealing with a needle and the third way that's for the",
    "start": "3084240",
    "end": "3091040"
  },
  {
    "text": "garbage collection service this service is using the event arc",
    "start": "3091040",
    "end": "3096240"
  },
  {
    "text": "product which is a way to direct uh events from one place to another so",
    "start": "3096240",
    "end": "3102720"
  },
  {
    "text": "there are different uh things and sources and things",
    "start": "3102720",
    "end": "3107839"
  },
  {
    "text": "you can have events flying in different directions and even the arc is using the cloud even",
    "start": "3107839",
    "end": "3113280"
  },
  {
    "text": "specification like the the sub os workflow specification uh what's nice with that is that you've got a",
    "start": "3113280",
    "end": "3119119"
  },
  {
    "text": "standardized um syntax for for events but then again",
    "start": "3119119",
    "end": "3125599"
  },
  {
    "text": "that's another way to unwrap the data within those events so you've got three different ways",
    "start": "3125599",
    "end": "3131920"
  },
  {
    "text": "uh of dealing with uh events in that particular choreography uh",
    "start": "3131920",
    "end": "3138800"
  },
  {
    "text": "orchestrated uh choreographing event driven system",
    "start": "3138800",
    "end": "3144319"
  },
  {
    "text": "and uh meta we reworked this application we rewrote it to use an orchestrated",
    "start": "3144319",
    "end": "3150839"
  },
  {
    "text": "approach right so i will describe that quickly",
    "start": "3150839",
    "end": "3156640"
  },
  {
    "text": "let me so let me stop presenting",
    "start": "3156640",
    "end": "3163119"
  },
  {
    "text": "okay so the event driven we the reason why we went event driven",
    "start": "3164079",
    "end": "3169200"
  },
  {
    "text": "is that you know someone uploads a picture and then that triggers an event so it kind of made sense to follow that",
    "start": "3169200",
    "end": "3174800"
  },
  {
    "text": "event um across different services right so that was our initial design",
    "start": "3174800",
    "end": "3180480"
  },
  {
    "text": "but the the problem that we were running into with that design is that even though it was a quite simple",
    "start": "3180480",
    "end": "3187040"
  },
  {
    "text": "um kind of service with with a few services not too many we were we were already getting problems with complexity",
    "start": "3187040",
    "end": "3194000"
  },
  {
    "text": "like first we had to deal with three different event types and how to price those event types and",
    "start": "3194000",
    "end": "3200000"
  },
  {
    "text": "you know how to deal with them and every time we had to update something we had to think about okay this is this service receiving this type of event you know so",
    "start": "3200000",
    "end": "3206000"
  },
  {
    "text": "there was already complexity there secondly when something failed let's say the user uploaded the picture",
    "start": "3206000",
    "end": "3212880"
  },
  {
    "text": "and it didn't show up in our ui like we didn't know why things failed like we always had to kind of guess and we had",
    "start": "3212880",
    "end": "3219280"
  },
  {
    "text": "to always look at okay let's look at the logs of this service do we say enter or no okay let's look at the next one you know and that's kind of the problem with",
    "start": "3219280",
    "end": "3225839"
  },
  {
    "text": "event driven systems is that it makes it hard to trace things uh of course you have things like error",
    "start": "3225839",
    "end": "3232079"
  },
  {
    "text": "reporting and you can do like correlation ids and kind of try to trace things but it's something you need to",
    "start": "3232079",
    "end": "3238800"
  },
  {
    "text": "think about and implement right it doesn't come out of the box so when workflows came along at the beginning of this year",
    "start": "3238800",
    "end": "3245920"
  },
  {
    "text": "we said okay let's just take this and try to orchestrate it because when you think about it",
    "start": "3245920",
    "end": "3252559"
  },
  {
    "text": "we don't need the flexibility of full eventing we want user to upload the picture and then it triggers an event",
    "start": "3252559",
    "end": "3258880"
  },
  {
    "text": "and then from then on what needs to happen is quite actually quite clear and it needs to happen in a certain order",
    "start": "3258880",
    "end": "3265200"
  },
  {
    "text": "so we did that we workflows and this is architecture that we came up with and when you first look at this it might",
    "start": "3265200",
    "end": "3271359"
  },
  {
    "text": "look a little bit uh more complicated but actually anything in these boxes it's one service it's workflows service",
    "start": "3271359",
    "end": "3278240"
  },
  {
    "text": "so if you think of this as one service then it's actually simpler and the way this works is that you know we have the user front at the front end",
    "start": "3278240",
    "end": "3285119"
  },
  {
    "text": "uploading the picture to the storage like before that triggers an event so in that sense it's still event driven",
    "start": "3285119",
    "end": "3291040"
  },
  {
    "text": "that goes to a cloud function and then from there the cloud function tree starts the orchestration so it starts",
    "start": "3291040",
    "end": "3297119"
  },
  {
    "text": "the orchestration that we defined in workflows now in this orchestration we check the event type is it a new",
    "start": "3297119",
    "end": "3303599"
  },
  {
    "text": "object creation or is it a new image deletion event if it's image deletion we",
    "start": "3303599",
    "end": "3309680"
  },
  {
    "text": "delete the image uh from storage and from firestore so this happens within workflows no new services",
    "start": "3309680",
    "end": "3316720"
  },
  {
    "text": "and if it's a new object we call the vision api from workflows we get the data from workflows and we need",
    "start": "3316720",
    "end": "3323200"
  },
  {
    "text": "to do json parsing so here we deploy a function to do that and we check the safety of the image within workflow",
    "start": "3323200",
    "end": "3328720"
  },
  {
    "text": "again and if it's safe we store in firestore and then if it's not safe we end the",
    "start": "3328720",
    "end": "3334559"
  },
  {
    "text": "orchestration and finally once the picture is safe we make calls to thumbnail service and collapse service",
    "start": "3334559",
    "end": "3340720"
  },
  {
    "text": "to create the thumbnail and collage of the picture so you can see that in this model we are",
    "start": "3340720",
    "end": "3346000"
  },
  {
    "text": "kind of combining couple of things like we are first it's event driven but at the end of the day that kicks on",
    "start": "3346000",
    "end": "3352079"
  },
  {
    "text": "orchestration secondly we are doing some of the work in workflows",
    "start": "3352079",
    "end": "3357280"
  },
  {
    "text": "and some of the work by calling services um if it's simple enough we do it in",
    "start": "3357280",
    "end": "3362720"
  },
  {
    "text": "workflows but if it requires more logic then we delegate to an external service uh so that's the approach that we came",
    "start": "3362720",
    "end": "3369359"
  },
  {
    "text": "up with um and i i think i can quickly show you here we are running out of time but i",
    "start": "3369359",
    "end": "3375280"
  },
  {
    "text": "just want to just quickly show you here if i go to google cloud workflows",
    "start": "3375280",
    "end": "3381200"
  },
  {
    "text": "let me make this as big as possible you can see that i have the workflow um",
    "start": "3381200",
    "end": "3386640"
  },
  {
    "text": "name and then we can we have the source here and",
    "start": "3386640",
    "end": "3391839"
  },
  {
    "text": "it's probably hard to see but here the workflow is defined and you can you can get this on github by the way uh but we",
    "start": "3391839",
    "end": "3397119"
  },
  {
    "text": "define all the steps what happens and then there's a visualization here that shows you",
    "start": "3397119",
    "end": "3402480"
  },
  {
    "text": "uh what should happen in different kind of scenarios so this makes it really easy to visualize what's happening",
    "start": "3402480",
    "end": "3408480"
  },
  {
    "text": "so that that's it uh with our workflows i'm not going to run it because we're almost out of time but we want to talk",
    "start": "3408480",
    "end": "3414160"
  },
  {
    "text": "about the lessons learned here um should i continue with this part or do",
    "start": "3414160",
    "end": "3419760"
  },
  {
    "text": "you want to take over yeah i was going to take over but okay well yeah let's",
    "start": "3419760",
    "end": "3425920"
  },
  {
    "text": "just finish it so we have this all the code is available on google",
    "start": "3425920",
    "end": "3431200"
  },
  {
    "text": "cloud platforms stabilized photo sharing workshop so if you want to have a look at the two approaches um be sure to check this this link out",
    "start": "3431200",
    "end": "3439280"
  },
  {
    "text": "yeah so in terms of lessons learned uh what was interesting was that as we rewrote this application it was",
    "start": "3439280",
    "end": "3446000"
  },
  {
    "text": "refreshing to get back to using uh simple rest calls instead of various",
    "start": "3446000",
    "end": "3451200"
  },
  {
    "text": "eventing formats that have to be had to be uh that we had to deal with we also",
    "start": "3451200",
    "end": "3456799"
  },
  {
    "text": "had less code to handle so no even parsing uh and also even some of our",
    "start": "3456799",
    "end": "3462799"
  },
  {
    "text": "services uh were going away because services that were just calling some",
    "start": "3462799",
    "end": "3467839"
  },
  {
    "text": "other services or apis they could just be done declaratively within the yaml workflow definition we",
    "start": "3467839",
    "end": "3475680"
  },
  {
    "text": "also had less setup because we didn't have to set up the pub sub topics we didn't have to set up the",
    "start": "3475680",
    "end": "3481599"
  },
  {
    "text": "the scheduler or even arc to create the the routes of",
    "start": "3481599",
    "end": "3486640"
  },
  {
    "text": "events in our system and it was also easier for error handling because the whole chain could stop on error and",
    "start": "3486640",
    "end": "3494720"
  },
  {
    "text": "we would know at which step it would stop and and so that was",
    "start": "3494720",
    "end": "3500000"
  },
  {
    "text": "easier to actually track errors and see that okay that was this particular image",
    "start": "3500000",
    "end": "3505359"
  },
  {
    "text": "that triggered that problem instead of having to go through the various messages and understand which one is",
    "start": "3505359",
    "end": "3511119"
  },
  {
    "text": "correlated to to the other and the",
    "start": "3511119",
    "end": "3516640"
  },
  {
    "text": "other things that we learned along the way so we we did the rewrite when uh the",
    "start": "3516640",
    "end": "3522079"
  },
  {
    "text": "workforce product wasn't yet uh ga so we there were a few quirks and limited",
    "start": "3522079",
    "end": "3529040"
  },
  {
    "text": "documentation but fortunately this has greatly improved uh in the past",
    "start": "3529040",
    "end": "3534559"
  },
  {
    "text": "month past year even the thing you have to be aware of is that",
    "start": "3534559",
    "end": "3539760"
  },
  {
    "text": "yaml is not a programming language okay and don't put too much in your workflow",
    "start": "3539760",
    "end": "3545520"
  },
  {
    "text": "definition what is a really a business rule with logic etc uh it's probably",
    "start": "3545520",
    "end": "3551520"
  },
  {
    "text": "better you know in a function in a service rather than uh in uh",
    "start": "3551520",
    "end": "3556880"
  },
  {
    "text": "yaml definition file and as well testing you can't really test yaml files right",
    "start": "3556880",
    "end": "3562559"
  },
  {
    "text": "uh so it's uh it's more complicated and uh if you're trying to build too much logic into your workflow instead of",
    "start": "3562559",
    "end": "3569760"
  },
  {
    "text": "simple checks and branching and so on uh you don't have the same support as",
    "start": "3569760",
    "end": "3575280"
  },
  {
    "text": "with your id for your programming language for example also potentially you might have some",
    "start": "3575280",
    "end": "3580799"
  },
  {
    "text": "less some well a bit less of parallelism or even thing flexibility in the sense that you",
    "start": "3580799",
    "end": "3587440"
  },
  {
    "text": "have to test the whole workflow again when there's a new event or something new happening whereas with eventing with",
    "start": "3587440",
    "end": "3594799"
  },
  {
    "text": "choreography uh usually it's really just adding an event or well it doesn't mean that you",
    "start": "3594799",
    "end": "3600720"
  },
  {
    "text": "shouldn't run tests but still it might be easier to add new things and when i say loss of",
    "start": "3600720",
    "end": "3605839"
  },
  {
    "text": "parallelism uh it's that we tend to write more sequentially in the workflow definition",
    "start": "3605839",
    "end": "3611599"
  },
  {
    "text": "but uh parallelism is a feature that is also coming to cloud workflows so uh we",
    "start": "3611599",
    "end": "3617920"
  },
  {
    "text": "don't necessarily lose uh polylision per se so that's about it we are out of time",
    "start": "3617920",
    "end": "3624079"
  },
  {
    "text": "here are a few links you might be interested in uh in looking at with some tips with some getting studied guides",
    "start": "3624079",
    "end": "3631359"
  },
  {
    "text": "and also some codelabs if you want to get your hands on uh those technologies",
    "start": "3631359",
    "end": "3636640"
  },
  {
    "text": "so don't hesitate to um to to ping us on twitter uh for further",
    "start": "3636640",
    "end": "3642720"
  },
  {
    "text": "questions as well and sorry for the font size which was too small uh for you will",
    "start": "3642720",
    "end": "3647760"
  },
  {
    "text": "have to update the slides accordingly yeah and uh there are a couple of questions i know we are out of time but",
    "start": "3647760",
    "end": "3653680"
  },
  {
    "text": "i'll try to answer them quickly here um so one question was someone mentioned that they're using",
    "start": "3653680",
    "end": "3659359"
  },
  {
    "text": "logic apps for orchestration and their experiences that they're hard to test automatically and manually because they",
    "start": "3659359",
    "end": "3665040"
  },
  {
    "text": "cannot run locally that's true that's true for workflows as well workflows is a service there's no",
    "start": "3665040",
    "end": "3670640"
  },
  {
    "text": "local workflows not not yet at least so yeah",
    "start": "3670640",
    "end": "3676160"
  },
  {
    "text": "writing unit tests for them or running them locally is a challenge we usually just run against",
    "start": "3676160",
    "end": "3682400"
  },
  {
    "text": "like the cloud and it's really quick so it doesn't really affect it as so much in that sense but it's something to be",
    "start": "3682400",
    "end": "3688400"
  },
  {
    "text": "aware or maybe a drawback or use orchestration services and the last question is in orchestration you",
    "start": "3688400",
    "end": "3695440"
  },
  {
    "text": "typically send events that something happened but when orchestrating you send commands and",
    "start": "3695440",
    "end": "3700720"
  },
  {
    "text": "async await for an event no i mean in orchestration you send http calls basically that's what it is um",
    "start": "3700720",
    "end": "3708240"
  },
  {
    "text": "and and you you wait for the result of that http call um you can also send events so for example workflows can send",
    "start": "3708240",
    "end": "3715760"
  },
  {
    "text": "a pops up message um that that's also possible but at the end",
    "start": "3715760",
    "end": "3720799"
  },
  {
    "text": "of the day just making http calls um that's how it is all right um",
    "start": "3720799",
    "end": "3726559"
  },
  {
    "text": "i think that's it um thanks everyone for coming and sorry that we were not there um hopefully this was useful to you",
    "start": "3726559",
    "end": "3733599"
  },
  {
    "text": "um if there's any other questions feel free to reach out on reach us on twitter and enjoy the rest of the conference",
    "start": "3733599",
    "end": "3739440"
  },
  {
    "text": "thanks very much thank you bye",
    "start": "3739440",
    "end": "3744200"
  }
]