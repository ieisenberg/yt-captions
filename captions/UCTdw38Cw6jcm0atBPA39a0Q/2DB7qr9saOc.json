[
  {
    "text": "yes good morning everyone it's a nice really really nice crowded",
    "start": "7440",
    "end": "13679"
  },
  {
    "text": "room but i'm going to change that when we start um who is here for micro services like",
    "start": "13679",
    "end": "19600"
  },
  {
    "text": "kubernetes auto scaling all of those things i hope no one",
    "start": "19600",
    "end": "25439"
  },
  {
    "text": "because that's not what this talk is going to be about the idea for this talk is to talk about",
    "start": "25439",
    "end": "30640"
  },
  {
    "text": "how we built jetbrains writer our ide uh coming from a model where everything is",
    "start": "30640",
    "end": "35920"
  },
  {
    "text": "in one process we run everything in one place to expanding that across multiple",
    "start": "35920",
    "end": "41120"
  },
  {
    "text": "processes and all of those things so if you're interested in that absolutely stay if this is for kubernetes and all",
    "start": "41120",
    "end": "47840"
  },
  {
    "text": "of those things uh there might be other talks here with that let's uh let's get started",
    "start": "47840",
    "end": "53440"
  },
  {
    "text": "so first of all who here is currently using writer a lot of people good thank you um for",
    "start": "53440",
    "end": "59600"
  },
  {
    "text": "those of you who are not yet and have no idea what it is it is a fullstack.net id",
    "start": "59600",
    "end": "64799"
  },
  {
    "text": "works cross-platform it is lightweight ish i'll call it that um to be honest",
    "start": "64799",
    "end": "71280"
  },
  {
    "text": "and it helps you to be more productive as a developer um slides are nice but i'll go and give you a really quick demo",
    "start": "71280",
    "end": "78320"
  },
  {
    "text": "so writer is an ide so what you expect from an ide you have a solution explorer",
    "start": "78320",
    "end": "83840"
  },
  {
    "text": "on the left where you can browse files and open files and all of that you see code opening up you can write",
    "start": "83840",
    "end": "89600"
  },
  {
    "text": "codes so for example i can create a new class called person let's say and in that class i can",
    "start": "89600",
    "end": "96799"
  },
  {
    "text": "start adding properties all of those things are in there",
    "start": "96799",
    "end": "102079"
  },
  {
    "text": "i can go in here there's uh refactorings and all of those things where you can change things into using",
    "start": "102079",
    "end": "107759"
  },
  {
    "text": "backing fields and all of that not only coding there is kit tooling",
    "start": "107759",
    "end": "112799"
  },
  {
    "text": "there is an endpoints view where you can actually see which endpoints are in your asp.net application for example there is",
    "start": "112799",
    "end": "119360"
  },
  {
    "text": "unit testing a terminal a really nice nuget client as well there is a database",
    "start": "119360",
    "end": "124560"
  },
  {
    "text": "tool window that i think a lot of people miss out on it is one tap on the right hand side but it's really good",
    "start": "124560",
    "end": "131039"
  },
  {
    "text": "to work with databases and all of that and yeah i think that's pretty much the quickest demo i've ever done about rider",
    "start": "131039",
    "end": "137840"
  },
  {
    "text": "but just to give you an idea it's an ide right cool",
    "start": "137840",
    "end": "144160"
  },
  {
    "text": "um before we dive into the technical side of things i want to give you a brief history about jetbrains and the id's",
    "start": "144160",
    "end": "150720"
  },
  {
    "text": "that we have been building so a long time ago 20 years ago we built this fantastic nicely designed",
    "start": "150720",
    "end": "157760"
  },
  {
    "text": "java application called intellij renamer that you could use to rename your",
    "start": "157760",
    "end": "162879"
  },
  {
    "text": "classes and files in java applications 20 years ago this was something novel something that didn't really exist in a",
    "start": "162879",
    "end": "169440"
  },
  {
    "text": "good way it allowed you to make changes to your codes without breaking the code making",
    "start": "169440",
    "end": "175120"
  },
  {
    "text": "sure that it kept compiling if you renamed the class all the references would be renamed and all of those things",
    "start": "175120",
    "end": "180319"
  },
  {
    "text": "now obviously this has evolved from this very simple tool to something more and",
    "start": "180319",
    "end": "185599"
  },
  {
    "text": "over the years we have been building more and more ids more and more products so we start with renamer became intellij",
    "start": "185599",
    "end": "192080"
  },
  {
    "text": "a full proper id a bit later on then in 2004 i think eclipse was released uh in the",
    "start": "192080",
    "end": "199040"
  },
  {
    "text": "java space so we decided okay let's not bet on one single horse that is intellij for the java space let's also come with",
    "start": "199040",
    "end": "205680"
  },
  {
    "text": "something for nets so i built resharper and by now we have 20 plus ids and all",
    "start": "205680",
    "end": "210959"
  },
  {
    "text": "of those things now resharper is interesting resharper actually also started as",
    "start": "210959",
    "end": "217040"
  },
  {
    "text": "something we did not know what it would become we thought okay should we build our own ide that is a competitor to",
    "start": "217040",
    "end": "222959"
  },
  {
    "text": "visual studio which is what you see here we actually built it in wind forms and it's",
    "start": "222959",
    "end": "228000"
  },
  {
    "text": "pretty amazing to see all of those things in the editor built in wind forms um so this was created but we did not yet",
    "start": "228000",
    "end": "234720"
  },
  {
    "text": "know whether we would ship this as a full-blown ide or go with a plug-in model that we would have a plug-in to",
    "start": "234720",
    "end": "240720"
  },
  {
    "text": "visual studio that you could then use in your in your favorite ide back then turns out that we did not ship this one",
    "start": "240720",
    "end": "248239"
  },
  {
    "text": "uh if you're interested i think you can still download it somewhere on the website it's it's horrible to use but",
    "start": "248239",
    "end": "253360"
  },
  {
    "text": "it's there but having that distinction between are we going to ship a full ide or are we",
    "start": "253360",
    "end": "260000"
  },
  {
    "text": "going to ship a plug-in mate actually forced us into making some choices in how we would build this ide",
    "start": "260000",
    "end": "266400"
  },
  {
    "text": "[Applause] the project was halted but not everything was removed so if you look at the screenshot here if you're using",
    "start": "266400",
    "end": "272960"
  },
  {
    "text": "writer today or resharper today this find usages dialogue is it's it's been modernized a little bit but it's still",
    "start": "272960",
    "end": "279520"
  },
  {
    "text": "pretty much what it was back then the fact that you have a solution modeling can look at all of those things that has",
    "start": "279520",
    "end": "285280"
  },
  {
    "text": "all been retained and is still in the plug-in that you today have in visual studio",
    "start": "285280",
    "end": "290960"
  },
  {
    "text": "so we decided to ship a plug-in for a visual studio but also keep this",
    "start": "290960",
    "end": "296160"
  },
  {
    "text": "distinction between all of those different models that you could use so that's why we also have for example the",
    "start": "296160",
    "end": "301280"
  },
  {
    "text": "resharper command line tools if you want to run code inspections and all of those things you can run those on the command",
    "start": "301280",
    "end": "307440"
  },
  {
    "text": "line it will spin up this essentially the same engine do the inspections look at your codes and see what is going on",
    "start": "307440",
    "end": "313600"
  },
  {
    "text": "in there so a lot of this architecture of this first ide that we built with resharper has been retained over the",
    "start": "313600",
    "end": "319840"
  },
  {
    "text": "years and is still there today now uh interesting is that over the years also a lot of people have been",
    "start": "319840",
    "end": "326479"
  },
  {
    "text": "asking like jetbrains it's nice that you have resharper as a plug-in but when will you build your own.net ide and",
    "start": "326479",
    "end": "333039"
  },
  {
    "text": "actually this is a ndc london boot where we had that question a lot in the past at different",
    "start": "333039",
    "end": "338800"
  },
  {
    "text": "boots but this question came about and also.net core came about in 2017",
    "start": "338800",
    "end": "346240"
  },
  {
    "text": "we got that question we saw that roslyn was coming visual studio was getting",
    "start": "346240",
    "end": "351440"
  },
  {
    "text": "a lot of memory pressure and so on because of its 32-bit architecture which by the way in vs 2022 is much much",
    "start": "351440",
    "end": "357840"
  },
  {
    "text": "better and and changes impacting resharper visual studio changing the product uh",
    "start": "357840",
    "end": "364080"
  },
  {
    "text": "the the plug-in model a little bit we we had some some issues with that and we were impacted by that.net core came",
    "start": "364080",
    "end": "370319"
  },
  {
    "text": "about as well there was no really good consistent cross-platform.net id so we thought okay",
    "start": "370319",
    "end": "376960"
  },
  {
    "text": "let's make the jump we have this experience we have these components let's see if we can actually make this come true build our own.net ide that is",
    "start": "376960",
    "end": "384000"
  },
  {
    "text": "cross-platform now cross-platform also means that you will need",
    "start": "384000",
    "end": "389280"
  },
  {
    "text": "a ui for your cross-platform application all of the resharper ui that sits in visual studio is all winforms or wpf",
    "start": "389280",
    "end": "397520"
  },
  {
    "text": "and that is non-existent on linux or mac for example so we had to think about okay can we leverage what we have there",
    "start": "397520",
    "end": "403919"
  },
  {
    "text": "can we take what we have there and convert this ui to be cross-platform so we started looking at can we run mono",
    "start": "403919",
    "end": "410160"
  },
  {
    "text": "and win forms maybe on linux and mac can we rewrite everything in qt for example and go with that as the",
    "start": "410160",
    "end": "416479"
  },
  {
    "text": "frontends turns out all of those were not really good ideas because they would",
    "start": "416479",
    "end": "422240"
  },
  {
    "text": "essentially require a full rewrite of everything that is the ui of resharper of this ide",
    "start": "422240",
    "end": "428960"
  },
  {
    "text": "but we started thinking we have intellij our java ide we built all of these other",
    "start": "428960",
    "end": "435199"
  },
  {
    "text": "ides on top it's already cross-platform can we maybe uh leverage this intellij",
    "start": "435199",
    "end": "440720"
  },
  {
    "text": "platform to build rider widths if you don't know all of our ides come",
    "start": "440720",
    "end": "445840"
  },
  {
    "text": "from the same platform the intellij platform that is open source if anyone here is doing android",
    "start": "445840",
    "end": "451360"
  },
  {
    "text": "development for example you will see that google actually took that intellij platform id and built android studio on",
    "start": "451360",
    "end": "458400"
  },
  {
    "text": "top of that there's a couple of other examples i think there's a perl id out there as well based on this one",
    "start": "458400",
    "end": "465039"
  },
  {
    "text": "there's comma ide i think that's actually the perl id as well there's a couple of ids built on top of",
    "start": "465039",
    "end": "470560"
  },
  {
    "text": "this if you want to build your own you can do this it is already cross-platform it comes",
    "start": "470560",
    "end": "476080"
  },
  {
    "text": "with a terminal with gits with a lot of the basics that you expect in an ide so if you want to build something",
    "start": "476080",
    "end": "482720"
  },
  {
    "text": "for your own custom language you can do that if you want um but we saw this and we thought okay",
    "start": "482720",
    "end": "488319"
  },
  {
    "text": "let's maybe see if we can reuse intellij with writer now intellij and resharper",
    "start": "488319",
    "end": "494639"
  },
  {
    "text": "are built in different technologies resharper is all.net based it runs dot nets all the inspections the",
    "start": "494639",
    "end": "502000"
  },
  {
    "text": "c-sharp language model all of those things are.net and intellij platform on the other hand is jvm it's java based",
    "start": "502000",
    "end": "509199"
  },
  {
    "text": "it's built in kotlin java and a couple of other things but it's not the same platform",
    "start": "509199",
    "end": "514800"
  },
  {
    "text": "so there was no way to take resharper and just run it in intellij because they are different",
    "start": "514800",
    "end": "521200"
  },
  {
    "text": "so we started thinking what can we do to solve this how can we bridge this gap between having this this.net code and",
    "start": "521200",
    "end": "527120"
  },
  {
    "text": "this java code on the frontends and being jetbrains we like playing with codes and we thought well let's maybe",
    "start": "527120",
    "end": "534000"
  },
  {
    "text": "create a tool that converts all of the c sharp code that we have in resharper into java so we can run everything in",
    "start": "534000",
    "end": "540880"
  },
  {
    "text": "intellij bad idea didn't really work out so that's definitely a no go",
    "start": "540880",
    "end": "546880"
  },
  {
    "text": "then we start thinking okay we have resharper running as a command line tool as well can we maybe use that",
    "start": "546880",
    "end": "553200"
  },
  {
    "text": "and then set up some mechanism to talk to this command line tool to get this information to get that project model",
    "start": "553200",
    "end": "558880"
  },
  {
    "text": "and plug ui on top in intellij should be simple right",
    "start": "558880",
    "end": "564160"
  },
  {
    "text": "well it is kind of simple uh having resharper as that back-end is fantastic",
    "start": "564160",
    "end": "569200"
  },
  {
    "text": "because.net runs cross-platform if you don't need the ui you can just run this on linux and mac os and all of that and",
    "start": "569200",
    "end": "576320"
  },
  {
    "text": "we could reuse our.net code in resharper writer is essentially 95 of the of the",
    "start": "576320",
    "end": "582320"
  },
  {
    "text": "resharper codebase plus some writer specifics intellij has a thin ui on top seemed",
    "start": "582320",
    "end": "588240"
  },
  {
    "text": "like a good idea as well we could just plug that on top of this.net process control the process maybe restart it",
    "start": "588240",
    "end": "594160"
  },
  {
    "text": "give it parameters to load a certain solution all of that so seemed feasible",
    "start": "594160",
    "end": "600000"
  },
  {
    "text": "well it was not that feasible actually intellij is not really a thin ui it is a",
    "start": "600000",
    "end": "606800"
  },
  {
    "text": "full ide that has git support and all of those things has its own editor has its own refactorings all of that",
    "start": "606800",
    "end": "613279"
  },
  {
    "text": "and we started thinking well we actually have two ids now that have to talk together and do things it's not just a",
    "start": "613279",
    "end": "619760"
  },
  {
    "text": "ui and a smart backend it's a smart front end and a smart back-end that we had to bridge",
    "start": "619760",
    "end": "626000"
  },
  {
    "text": "and if you look at writer you will see there's actually three sorts of features there's those that are handled completely by the ui by intellij if you",
    "start": "626000",
    "end": "633120"
  },
  {
    "text": "work with git for example look at the history of the git tool window that is going to be intellij",
    "start": "633120",
    "end": "639200"
  },
  {
    "text": "if you write codes that is going to be a combination of the two where intellij renders things resharper does things in",
    "start": "639200",
    "end": "645200"
  },
  {
    "text": "the back end gives you completion intellij can apply those things and all of that um but there's a couple of cases where",
    "start": "645200",
    "end": "651680"
  },
  {
    "text": "this really fits together if we could use the smart tools from both sides of the equation so let me give you a quick",
    "start": "651680",
    "end": "657920"
  },
  {
    "text": "idea of what i mean with that if you look at writer",
    "start": "657920",
    "end": "663839"
  },
  {
    "text": "and you open up let's say a html file in there",
    "start": "663839",
    "end": "669279"
  },
  {
    "text": "i'll go with a random file in this project i have no idea you will see that a typical html",
    "start": "669279",
    "end": "674399"
  },
  {
    "text": "document is actually multiple languages you have html",
    "start": "674399",
    "end": "679839"
  },
  {
    "text": "but you also have css that it has to understand if you want to navigate to this main css class you can jump there",
    "start": "679839",
    "end": "686720"
  },
  {
    "text": "and get that information so all of this is two languages in one documents",
    "start": "686720",
    "end": "692399"
  },
  {
    "text": "all of this is handled by the front end by intellij now things become more interesting if",
    "start": "692399",
    "end": "697519"
  },
  {
    "text": "you look at for example a razer file where you have let's open this one i",
    "start": "697519",
    "end": "703040"
  },
  {
    "text": "have no idea where you essentially have html you have css and all of the understanding of the",
    "start": "703040",
    "end": "708720"
  },
  {
    "text": "css that is going on there but you also have blocks with c sharp code in there or vb.net if you want to use vb.net",
    "start": "708720",
    "end": "715440"
  },
  {
    "text": "as you see things get more complex because the html here is all handled by front-end intellij smartness but the",
    "start": "715440",
    "end": "722800"
  },
  {
    "text": "c-sharp code is handled by resharper so you have to really be able to",
    "start": "722800",
    "end": "728160"
  },
  {
    "text": "essentially have small islands of c sharp code inside of documents that work in the front end right",
    "start": "728160",
    "end": "733760"
  },
  {
    "text": "um things get more interesting if you start adding javascript for example or with blazer where some of the blazer",
    "start": "733760",
    "end": "739120"
  },
  {
    "text": "stuff is resharper some of the blazer stuff is intellij so it gets complex really quickly",
    "start": "739120",
    "end": "745839"
  },
  {
    "text": "but the nice thing is if you have those islands of c-sharp codes um in documents",
    "start": "745839",
    "end": "750880"
  },
  {
    "text": "that intellij handles or you have islands of whatever language in the resharper stuff you can do really",
    "start": "750880",
    "end": "757360"
  },
  {
    "text": "cool things so for example if you look at one of the controllers here i set up a database connection to a",
    "start": "757360",
    "end": "764399"
  },
  {
    "text": "database somewhere and if you use entity framework and i should have a",
    "start": "764399",
    "end": "770399"
  },
  {
    "text": "query somewhere let's go with this one if you just write any sql string",
    "start": "770399",
    "end": "778079"
  },
  {
    "text": "let's say var sql sql equals something where we write select star",
    "start": "778560",
    "end": "783920"
  },
  {
    "text": "from whatever you get completion from the database this is really cool because i'm",
    "start": "783920",
    "end": "789440"
  },
  {
    "text": "editing a document in intellij frontends the c-sharp and all of that is handled by the resharper backends",
    "start": "789440",
    "end": "796160"
  },
  {
    "text": "the database connection is handled by the front-end again and you sort of have to bring all of those things into one",
    "start": "796160",
    "end": "801360"
  },
  {
    "text": "place where you can work with with this database based tooling for example and gets this completion",
    "start": "801360",
    "end": "808000"
  },
  {
    "text": "where you can also alt enter and see suggestions from resharper but also from the front end that say for",
    "start": "808000",
    "end": "814000"
  },
  {
    "text": "example you can run this query in the database tooling if you want to so things get really really complex really",
    "start": "814000",
    "end": "819519"
  },
  {
    "text": "quick if you start combining the two smart ids on both sides",
    "start": "819519",
    "end": "825600"
  },
  {
    "text": "which is where we started thinking how can we make the two ends talk how can we make this vision come true where we have",
    "start": "825920",
    "end": "831760"
  },
  {
    "text": "those two things working together so um if you look at just some examples if you look at",
    "start": "831760",
    "end": "838320"
  },
  {
    "text": "context actions where you alt enter and you get this nice pop-up where you can do actions typically you have intellij rendering",
    "start": "838320",
    "end": "845360"
  },
  {
    "text": "the texts the carrots that is there if you use multiple carrots you can do that as well the alt enter key binding is also",
    "start": "845360",
    "end": "851839"
  },
  {
    "text": "intellij and intellij also has a language infrastructure where if you are typing it will ask its model like what",
    "start": "851839",
    "end": "859600"
  },
  {
    "text": "language is this and what can i provides then we have resharper picking things up looking at the",
    "start": "859600",
    "end": "865839"
  },
  {
    "text": "language parsing everything making sure that we have inspections and actions available and then intellij renders",
    "start": "865839",
    "end": "871279"
  },
  {
    "text": "those sounds complex but if you start thinking about it the data that has to go over",
    "start": "871279",
    "end": "876399"
  },
  {
    "text": "the wire between the two processes is actually fairly simple you have a tree of items you want to",
    "start": "876399",
    "end": "882480"
  },
  {
    "text": "show in that menu maybe with a description an id a name icons whatever",
    "start": "882480",
    "end": "887680"
  },
  {
    "text": "you want to pass there no logic is needed if you just have an id for this renamed to option name for example you",
    "start": "887680",
    "end": "893760"
  },
  {
    "text": "can pass that id and if you click it we can pass that id back to resharper and execute that action if you want",
    "start": "893760",
    "end": "900560"
  },
  {
    "text": "same thing with inspections if you look at the codes a lot of stuff is handled by intellij a lot of stuff is handled by",
    "start": "900560",
    "end": "906240"
  },
  {
    "text": "resharper and the two talk together and there's a lot of things happening on both sides of the process but if you",
    "start": "906240",
    "end": "912560"
  },
  {
    "text": "look at the data it is really again just a set of names of the inspection",
    "start": "912560",
    "end": "918399"
  },
  {
    "text": "what is going on there what are suggested actions that you can take maybe with an id and an icon and a name",
    "start": "918399",
    "end": "923920"
  },
  {
    "text": "and the text range to which this specific suggestion applies right",
    "start": "923920",
    "end": "929759"
  },
  {
    "text": "what is interesting is the data is simple but the communication model is not simple you cannot really do rpc you",
    "start": "929759",
    "end": "936000"
  },
  {
    "text": "cannot type something send requests to resharper and then wait for them to come back to show something because you will",
    "start": "936000",
    "end": "942000"
  },
  {
    "text": "probably be faster than anything that we can do in terms of technology there so we have to make sure that the editor",
    "start": "942000",
    "end": "947759"
  },
  {
    "text": "keeps responding while you are typing while you are invoking things but the data itself the the context that you have to provide",
    "start": "947759",
    "end": "954160"
  },
  {
    "text": "to make something happen is not that complex if you think about it writing code actually is a more",
    "start": "954160",
    "end": "960720"
  },
  {
    "text": "interesting one because there can be multiple parties writing codes you as a human you are writing codes and you are",
    "start": "960720",
    "end": "966959"
  },
  {
    "text": "typing but maybe you are invoking a rename refactoring that takes 500 milliseconds to execute but you're",
    "start": "966959",
    "end": "973680"
  },
  {
    "text": "already typing while that rename refactoring is still going on and is being applied to your editor so you really have multiple parties",
    "start": "973680",
    "end": "981440"
  },
  {
    "text": "writing code in the editor it's difficult in terms of having this model of having multiple parties writing",
    "start": "981440",
    "end": "988399"
  },
  {
    "text": "code in this case but if you think about the data that has to go over the wire again it is fairly simple",
    "start": "988399",
    "end": "994320"
  },
  {
    "text": "it's a delta where you say in this documents on this line on this character position we change this into this please",
    "start": "994320",
    "end": "1001839"
  },
  {
    "text": "update this um in in the editor if you think about it so the data types are not that complex",
    "start": "1001839",
    "end": "1009199"
  },
  {
    "text": "and if you start breaking them down to these small these small generic samples of how you",
    "start": "1009199",
    "end": "1014880"
  },
  {
    "text": "can do inspections for example it is it actually becomes really easy to make all of the inspections work if you can get",
    "start": "1014880",
    "end": "1021199"
  },
  {
    "text": "one to work everything would work at some point as well then we started thinking which protocol",
    "start": "1021199",
    "end": "1027438"
  },
  {
    "text": "do we use how do we make these two processes talk we know what the data format could be but how do we actually",
    "start": "1027439",
    "end": "1033520"
  },
  {
    "text": "set up that connection how do we bridge this gap between the two processes",
    "start": "1033520",
    "end": "1038880"
  },
  {
    "text": "back then visual studio code was at that point i think three years old they implemented",
    "start": "1038880",
    "end": "1044160"
  },
  {
    "text": "the language server protocol lsp which is brilliant it does what it does for vs code but it is also very vs code",
    "start": "1044160",
    "end": "1050880"
  },
  {
    "text": "specific we looked into it and with the model that we have in our ids lsb would",
    "start": "1050880",
    "end": "1056559"
  },
  {
    "text": "either need a lot of extensions which would be kind of crazy because we would extend it",
    "start": "1056559",
    "end": "1062080"
  },
  {
    "text": "so much that that we were essentially building our own thing anyway so we decided okay let's not go with lsp",
    "start": "1062080",
    "end": "1068640"
  },
  {
    "text": "for our tools let's build something custom let's look into what we can do for the model that we have in both sides",
    "start": "1068640",
    "end": "1074240"
  },
  {
    "text": "of the ide so we experimented with lots of things very simple.net http server sitting in",
    "start": "1074240",
    "end": "1082160"
  },
  {
    "text": "resharper where we would send requests get responses and do something uh try json serializers protobuf custom binary",
    "start": "1082160",
    "end": "1089039"
  },
  {
    "text": "protocols all of those things but always in a request response style much like a language server protocol i would do as",
    "start": "1089039",
    "end": "1095600"
  },
  {
    "text": "well where we would send messages and get responses back and do something in the ide",
    "start": "1095600",
    "end": "1101120"
  },
  {
    "text": "well turns out that request response is not that optimized",
    "start": "1101120",
    "end": "1107120"
  },
  {
    "text": "in an ide where you have two sides of the ide that are providing features to the entire experience",
    "start": "1107120",
    "end": "1113039"
  },
  {
    "text": "we realized that having request response was actually blocking us how could we make this better where both",
    "start": "1113039",
    "end": "1120240"
  },
  {
    "text": "parties could at the same time do things to your code base to the model that we have from the code base",
    "start": "1120240",
    "end": "1125919"
  },
  {
    "text": "where we can share those things in memory and share whatever is going on there so we decided okay maybe request",
    "start": "1125919",
    "end": "1131840"
  },
  {
    "text": "response is not okay maybe we should look into model view view model",
    "start": "1131840",
    "end": "1137440"
  },
  {
    "text": "what you would have in mobile applications for example a lot of people are using this you have a model you subscribe to this",
    "start": "1137440",
    "end": "1144000"
  },
  {
    "text": "model you put push messages into this model can be from any site and you just update based on whatever is going on",
    "start": "1144000",
    "end": "1150720"
  },
  {
    "text": "there you have an observer pattern looking at new files being added for example where you can open up the editor",
    "start": "1150720",
    "end": "1157120"
  },
  {
    "text": "where you can start scanning the code parsing the code all of those things and essentially we decided okay it would",
    "start": "1157120",
    "end": "1162640"
  },
  {
    "text": "be nice if we have this model where you can just say you have a project project has files we add a new file with",
    "start": "1162640",
    "end": "1168799"
  },
  {
    "text": "contents or whatever for a specific file we have inspections we want to add a new one with the",
    "start": "1168799",
    "end": "1174320"
  },
  {
    "text": "description with the icon with the category and what the text range of those things would be and both the front",
    "start": "1174320",
    "end": "1180000"
  },
  {
    "text": "ends and the back end could subscribe to this and do something with it just react to whatever was going on",
    "start": "1180000",
    "end": "1186320"
  },
  {
    "text": "sounded interesting proved to be challenging as well but it works there is one big downside",
    "start": "1186320",
    "end": "1192640"
  },
  {
    "text": "though under this conflict resolution uh looking again at that refactoring example where you may be typing while",
    "start": "1192640",
    "end": "1199200"
  },
  {
    "text": "resharper is refactoring and applying that code change how do you solve conflicts if i rename my person class into",
    "start": "1199200",
    "end": "1206400"
  },
  {
    "text": "something else and then i start typing but then resharper updates that person class who should win my latest changes",
    "start": "1206400",
    "end": "1213039"
  },
  {
    "text": "that i was typing or this refactoring that i maybe executed two seconds ago what should win",
    "start": "1213039",
    "end": "1219600"
  },
  {
    "text": "so we started looking at how to solve this and the typical example there would be well we can just lock if you do a",
    "start": "1219600",
    "end": "1225679"
  },
  {
    "text": "refactoring we do this modally we wait for the refactoring to complete we lock",
    "start": "1225679",
    "end": "1231520"
  },
  {
    "text": "everything and then only then when that completes you can continue well not ideal because those locks may take a",
    "start": "1231520",
    "end": "1237919"
  },
  {
    "text": "second 500 milliseconds it's really noticeable if you are typing and it really gets in the way so we started",
    "start": "1237919",
    "end": "1243440"
  },
  {
    "text": "thinking can we simplify this and we came up with optimistic conflict resolution where every change in that view model",
    "start": "1243440",
    "end": "1251039"
  },
  {
    "text": "gets an internal version number and the latest version essentially wins",
    "start": "1251039",
    "end": "1256799"
  },
  {
    "text": "so if you start typing and resharper does a refactoring if the refactoring has a newer version",
    "start": "1256799",
    "end": "1263360"
  },
  {
    "text": "than the code you are writing then we apply the refactoring if you are typing those changes will have a newer version",
    "start": "1263360",
    "end": "1269440"
  },
  {
    "text": "so the refactoring will not go through so really just essentially the latest change wins",
    "start": "1269440",
    "end": "1276080"
  },
  {
    "text": "and this this turns out to be a really good model that works in this model",
    "start": "1276080",
    "end": "1281440"
  },
  {
    "text": "cool so let's talk about the protocol we talked about the concept so far let's talk about the protocol essentially what",
    "start": "1281440",
    "end": "1287440"
  },
  {
    "text": "we were trying to achieve was this where we have writer built on intellij platform on the jvm resharper on.net or",
    "start": "1287440",
    "end": "1294720"
  },
  {
    "text": "mono back then on um on mac os and linux and have something",
    "start": "1294720",
    "end": "1299840"
  },
  {
    "text": "sitting in between that does the communication between both parties one additional requirement though this model",
    "start": "1299840",
    "end": "1306960"
  },
  {
    "text": "um our developers should not all know all of the tiny little details of this model",
    "start": "1306960",
    "end": "1312320"
  },
  {
    "text": "ideally they would just go in there build a feature and not have to think about this conflict resolution for",
    "start": "1312320",
    "end": "1317919"
  },
  {
    "text": "example have all of those things in the protocol so they would not be confused or spending time on fixing those things",
    "start": "1317919",
    "end": "1325039"
  },
  {
    "text": "just create few models subscribe to them push data into them etc",
    "start": "1325039",
    "end": "1330159"
  },
  {
    "text": "so we came up with the writer protocol it's a reactive distributed communication framework that currently",
    "start": "1330159",
    "end": "1336720"
  },
  {
    "text": "runs in a lot of languages.net scotland javascript c plus plus it is open source and essentially the",
    "start": "1336720",
    "end": "1343039"
  },
  {
    "text": "idea there is that we have the entire protocol taking care of pretty much everything up until that",
    "start": "1343039",
    "end": "1349520"
  },
  {
    "text": "model definition dsl you as a developer write that model definition",
    "start": "1349520",
    "end": "1354720"
  },
  {
    "text": "generate code from it and you just work with it from kotlin or from.net or whatever you want to do and everything",
    "start": "1354720",
    "end": "1360799"
  },
  {
    "text": "in terms of primitive types in terms of conflict resolution in terms of actually having a socket connection between the",
    "start": "1360799",
    "end": "1366480"
  },
  {
    "text": "two processes is handled by the protocol so if you're interested definitely give",
    "start": "1366480",
    "end": "1371600"
  },
  {
    "text": "it a try it's it's very opinionated of course to our use case but it's kind of cool to work with um in in other things",
    "start": "1371600",
    "end": "1379600"
  },
  {
    "text": "so developers would only need to know about the data types and the model uh the codes would be generated based on",
    "start": "1379600",
    "end": "1385919"
  },
  {
    "text": "that model so you could work with that and you would not have to think about anything also nice thing about code",
    "start": "1385919",
    "end": "1391280"
  },
  {
    "text": "generation is that everything is generated it's already there so there's no json serialization deserialization",
    "start": "1391280",
    "end": "1397840"
  },
  {
    "text": "going on no reflection going on it's really hard coded to this is the model this is how it goes on the wire and this",
    "start": "1397840",
    "end": "1403679"
  },
  {
    "text": "is how it works the protocol also has hierarchies and",
    "start": "1403679",
    "end": "1409039"
  },
  {
    "text": "lifetimes and that deserves a little bit more explanation so you know what is going on but first of all let's look at",
    "start": "1409039",
    "end": "1414880"
  },
  {
    "text": "the primitives in the protocol if you want to communicate between two processes what you will need is",
    "start": "1414880",
    "end": "1421039"
  },
  {
    "text": "simple types where you have strings booleans lists maybe that you can add data into",
    "start": "1421039",
    "end": "1426400"
  },
  {
    "text": "you want to have signals where you can say look this is happening please respond to this you want to have properties where you",
    "start": "1426400",
    "end": "1432720"
  },
  {
    "text": "can make a change to a property and you get change notifications so you can update the ui or the back-end process",
    "start": "1432720",
    "end": "1438480"
  },
  {
    "text": "and all of those things the protocol model is built on top of those primitives so what you will see is",
    "start": "1438480",
    "end": "1445360"
  },
  {
    "text": "for example that you have this rd nuget host objects that extends the solution model",
    "start": "1445360",
    "end": "1451120"
  },
  {
    "text": "um where you see that we have an inner type that is a struct definition a structs",
    "start": "1451120",
    "end": "1457120"
  },
  {
    "text": "essentially it has two fields a timestamp and a texts and we model everything like this you describe what",
    "start": "1457120",
    "end": "1463520"
  },
  {
    "text": "you want on the wire what the view model should look like next thing that happens is we generate",
    "start": "1463520",
    "end": "1468640"
  },
  {
    "text": "code on that now all of those primitive types have fairly simple implementations uh the big",
    "start": "1468640",
    "end": "1475919"
  },
  {
    "text": "one that is in the rd protocol is signals where you have an event happening and you want to respond to",
    "start": "1475919",
    "end": "1481279"
  },
  {
    "text": "that and essentially what we have is an event source that can fire something has been changed for example and we have a",
    "start": "1481279",
    "end": "1488320"
  },
  {
    "text": "sync that can then listen to things advice on actions that should happen when something goes on there",
    "start": "1488320",
    "end": "1495440"
  },
  {
    "text": "the interesting thing you may see there is this lifetime parameter and that's the one of the next thing we will talk",
    "start": "1495440",
    "end": "1501120"
  },
  {
    "text": "about lifetimes are important in an ide you have multiple tool windows you have",
    "start": "1501120",
    "end": "1506880"
  },
  {
    "text": "multiple things going on all the time that all look at the same thing so it's really",
    "start": "1506880",
    "end": "1512240"
  },
  {
    "text": "difficult in an application like this to work with disposables to do proper memory management where you say okay i'm",
    "start": "1512240",
    "end": "1518559"
  },
  {
    "text": "using this file stream for example changing these documents because there's so many things looking at those",
    "start": "1518559",
    "end": "1523760"
  },
  {
    "text": "documents so instead we work with lifetimes so what happens is when you open up your projects or on the",
    "start": "1523760",
    "end": "1530000"
  },
  {
    "text": "resharper side you open up the solution we start a project lifetime everything that happens from that moment",
    "start": "1530000",
    "end": "1536640"
  },
  {
    "text": "on also subscribes to this project lifetime so if you open up the nuget tool window that subscribes to the",
    "start": "1536640",
    "end": "1542320"
  },
  {
    "text": "project lifetime but also comes with a nuget lifetime if you open up a new tab in the editor",
    "start": "1542320",
    "end": "1548240"
  },
  {
    "text": "well we subscribe to the lifetime of the project but also to a new lifetime that is specific to this editor tab",
    "start": "1548240",
    "end": "1554720"
  },
  {
    "text": "having those lifetime objects means that if something has to go out of memory we can say okay look everything that is",
    "start": "1554720",
    "end": "1561279"
  },
  {
    "text": "this editor tab and below dispose yourself same thing if you close the solution",
    "start": "1561279",
    "end": "1567440"
  },
  {
    "text": "what happens is the project lifetime will be disposed and everything underneath it will also be disposed and we get rid of all of",
    "start": "1567440",
    "end": "1574480"
  },
  {
    "text": "those things interesting thing here is that we have that lifetime on both sides on the resharper site and the intellij sites so",
    "start": "1574480",
    "end": "1581279"
  },
  {
    "text": "the protocol that you saw in this this signal on the slides is also taking care of those lifetimes",
    "start": "1581279",
    "end": "1587039"
  },
  {
    "text": "making sure that if you close the project in intellij that we also close the solution in resharper sites",
    "start": "1587039",
    "end": "1593840"
  },
  {
    "text": "and all of those things of course so the lifetimes it sounds complex but",
    "start": "1593840",
    "end": "1599120"
  },
  {
    "text": "it's actually fairly simple if you look at the the the base definition of the lifetime lifetime is essentially a",
    "start": "1599120",
    "end": "1605440"
  },
  {
    "text": "disposable of its own it has a stack of resources that it can dispose of at some",
    "start": "1605440",
    "end": "1610559"
  },
  {
    "text": "points and when you attach to it we just push an action on the stack that should happen when this gets disposed",
    "start": "1610559",
    "end": "1616799"
  },
  {
    "text": "and when it is disposed we just walk that stack and close everything that was hanging underneath",
    "start": "1616799",
    "end": "1622320"
  },
  {
    "text": "so fairly fairly straightforward i would say this is by the way its own separates",
    "start": "1622320",
    "end": "1627520"
  },
  {
    "text": "nougat package if you want to play with this in your own solution and not use typical disposables and then work with",
    "start": "1627520",
    "end": "1633600"
  },
  {
    "text": "this lifetimes approach we have open source this one it's really it's it's a bit more code than what is on the slides",
    "start": "1633600",
    "end": "1639440"
  },
  {
    "text": "but it's it's very simple actually cool so let's look at the protocol",
    "start": "1639440",
    "end": "1646158"
  },
  {
    "text": "where is my intellij all right so i have opened i think last week's",
    "start": "1646240",
    "end": "1652840"
  },
  {
    "text": "nightly 2021.3 version of rider branch and you will see that the solution that we have",
    "start": "1652840",
    "end": "1659120"
  },
  {
    "text": "is intellij based where we built the frontends but it is also resharper based so where",
    "start": "1659120",
    "end": "1665679"
  },
  {
    "text": "we built the back end so you will see both intellij and ryder working on kotlin code for the front end and",
    "start": "1665679",
    "end": "1671600"
  },
  {
    "text": "working on the netcode for the back end right cool so i was talking about this nuget",
    "start": "1671600",
    "end": "1677840"
  },
  {
    "text": "model let's maybe take that as an example so let's go back to using writer just",
    "start": "1677840",
    "end": "1683200"
  },
  {
    "text": "looking at what is going on if you go into the nugets tool window and you want to install for example a",
    "start": "1683200",
    "end": "1688799"
  },
  {
    "text": "new package or upgrade something you can do this and you will see that there is a",
    "start": "1688799",
    "end": "1695120"
  },
  {
    "text": "fine override it it's good you'll see there is a lock tab where lots of things are being emitted in",
    "start": "1695120",
    "end": "1701600"
  },
  {
    "text": "terms of what is going on in this nuget operation so let's look at how this log",
    "start": "1701600",
    "end": "1706880"
  },
  {
    "text": "was built in writer and in the protocol so to get this",
    "start": "1706880",
    "end": "1713279"
  },
  {
    "text": "we first of all needed to set up a model and i should take the right ide",
    "start": "1713279",
    "end": "1718799"
  },
  {
    "text": "so the model of our nuget host in writer is this this is the the model dsl that",
    "start": "1718799",
    "end": "1724159"
  },
  {
    "text": "we built we have a nuget hosts it has lots of things but it extends our",
    "start": "1724159",
    "end": "1729600"
  },
  {
    "text": "solution lifetime it hangs off of the solution we have different things like version",
    "start": "1729600",
    "end": "1735120"
  },
  {
    "text": "constraints all the things that you can set in terms of nuget there's a package identity that has an id field a version",
    "start": "1735120",
    "end": "1741200"
  },
  {
    "text": "field and so on and at some point in this file i will have a log message",
    "start": "1741200",
    "end": "1747120"
  },
  {
    "text": "the thing you just saw scrolling by in the ui log messages have a timestamp they have a context is it coming from",
    "start": "1747120",
    "end": "1753679"
  },
  {
    "text": "nuget from writer or from ms builds this is an enum definition in the protocol",
    "start": "1753679",
    "end": "1760240"
  },
  {
    "text": "it has a level another enum where we can distinguish between is this debug for bose information all of those things",
    "start": "1760240",
    "end": "1766799"
  },
  {
    "text": "and then the actual message that is a property called texts it is a field of",
    "start": "1766799",
    "end": "1771840"
  },
  {
    "text": "type string if i want to make this nullable for example i can add dot nullable and it will be nullable when we",
    "start": "1771840",
    "end": "1777760"
  },
  {
    "text": "regenerate this the code from the model here on the front-end side so intellij sites",
    "start": "1777760",
    "end": "1784640"
  },
  {
    "text": "this model is then compiled into coupling codes so what you will see is that our model",
    "start": "1784640",
    "end": "1791760"
  },
  {
    "text": "is really big generated codes and very it's actually pretty ugly if you look at it but what you will find is that there",
    "start": "1791760",
    "end": "1798559"
  },
  {
    "text": "is this log message class in kotlin based on what we designed in",
    "start": "1798559",
    "end": "1804159"
  },
  {
    "text": "our dsl model and it has a timestamp with a kotlin date property",
    "start": "1804159",
    "end": "1809360"
  },
  {
    "text": "it has a context with this log context enum that we also modeled in the protocol",
    "start": "1809360",
    "end": "1814559"
  },
  {
    "text": "and it also has texts which is of type string so",
    "start": "1814559",
    "end": "1819919"
  },
  {
    "text": "design the dsl model generate codes and then from then on you can just work with all of the classes and all of the fields",
    "start": "1819919",
    "end": "1826240"
  },
  {
    "text": "that are in here back in our model you'll also see that this rd nuget log",
    "start": "1826240",
    "end": "1832000"
  },
  {
    "text": "message is being used in a uh",
    "start": "1832000",
    "end": "1837039"
  },
  {
    "text": "where is it yes in a sync that is called log and that is a list of log messages so in",
    "start": "1837039",
    "end": "1844880"
  },
  {
    "text": "our model definition we say okay look we will have a collection of log messages you can write into it it should behave",
    "start": "1844880",
    "end": "1852000"
  },
  {
    "text": "like a list when you work with it again looking at the kotlin codes you will find that there is a log",
    "start": "1852000",
    "end": "1859760"
  },
  {
    "text": "where is it i can find it's perfect oh yeah there",
    "start": "1859760",
    "end": "1865840"
  },
  {
    "text": "it is so there is a log property that we named in our model and it is a list of",
    "start": "1865840",
    "end": "1870960"
  },
  {
    "text": "messages and we can just work with this log property and start adding messages to it and",
    "start": "1870960",
    "end": "1876240"
  },
  {
    "text": "ui can subscribe to it but also the backend can subscribe to it on the resharper side of things",
    "start": "1876240",
    "end": "1883200"
  },
  {
    "text": "the same thing happens this rd nuget host was also generated as a c-sharp",
    "start": "1883200",
    "end": "1888399"
  },
  {
    "text": "class file based on the model that we had we have this",
    "start": "1888399",
    "end": "1893760"
  },
  {
    "text": "log sync there as well that is a list of rd nuget log messages not kotlin already",
    "start": "1893760",
    "end": "1898960"
  },
  {
    "text": "nuget log messages but actual c sharp code where you also have a timestamp datetime property where you",
    "start": "1898960",
    "end": "1906080"
  },
  {
    "text": "also have this context enum that was generated and all of those things coming from the model again",
    "start": "1906080",
    "end": "1911840"
  },
  {
    "text": "everyone with me still good now how does this hook up well in writer",
    "start": "1911840",
    "end": "1917279"
  },
  {
    "text": "we make use of microsoft's nougats code as well and what we do to get log messages is we",
    "start": "1917279",
    "end": "1924640"
  },
  {
    "text": "implemented our own nuget logger extending the one coming from nuget proper",
    "start": "1924640",
    "end": "1930240"
  },
  {
    "text": "plugging it into nuget proper and whenever nuget itself locks something we",
    "start": "1930240",
    "end": "1935360"
  },
  {
    "text": "essentially call into our host in log we fire that's in our collection we want to",
    "start": "1935360",
    "end": "1940399"
  },
  {
    "text": "have a new nuget log message that is everything going on here essentially bridging microsoft's nougats with our",
    "start": "1940399",
    "end": "1946480"
  },
  {
    "text": "protocol we add messages to this list and on the front-end side let's go to",
    "start": "1946480",
    "end": "1953200"
  },
  {
    "text": "the front-end side again on the front-end side we have some ui where in that ui we listen for changes",
    "start": "1953200",
    "end": "1961279"
  },
  {
    "text": "to that list where is it nope",
    "start": "1961279",
    "end": "1967679"
  },
  {
    "text": "nope no where is it oh man",
    "start": "1967679",
    "end": "1973679"
  },
  {
    "text": "there have been some changes lately i'm in the sources panel that's of",
    "start": "1973679",
    "end": "1979200"
  },
  {
    "text": "course not the logging panel i should be in this one right so in the logging panel that we",
    "start": "1979200",
    "end": "1984720"
  },
  {
    "text": "have in ui you will see that whenever you open up the ui we first",
    "start": "1984720",
    "end": "1991039"
  },
  {
    "text": "check the full log of messages that are already there to make sure that we can populate something and we just add them",
    "start": "1991039",
    "end": "1997279"
  },
  {
    "text": "into the ui what we also do is that um at a later point in time when this panel",
    "start": "1997279",
    "end": "2004640"
  },
  {
    "text": "is created we also subscribe to this list so we subscribe to our log lists and whenever new messages come in we",
    "start": "2004640",
    "end": "2011679"
  },
  {
    "text": "also add them to the ui so this is a subscription to what is going on on the protocol and what is going on and",
    "start": "2011679",
    "end": "2017120"
  },
  {
    "text": "happening there again the lifetime pops up here so we only listen while your solution is open",
    "start": "2017120",
    "end": "2024000"
  },
  {
    "text": "while the 2 window is open and all of those things if one of those things gets disposed",
    "start": "2024000",
    "end": "2029279"
  },
  {
    "text": "this thing will call it this pose and we also remove all of the listeners listening to whatever is going on in the",
    "start": "2029279",
    "end": "2034480"
  },
  {
    "text": "protocol still with me good so this this was a",
    "start": "2034480",
    "end": "2040559"
  },
  {
    "text": "an easier example but as as you can see the idea is that you only have to care",
    "start": "2040559",
    "end": "2045600"
  },
  {
    "text": "about having this protocol writing the protocol model generating code and from then on it's",
    "start": "2045600",
    "end": "2051679"
  },
  {
    "text": "essentially working with the primitives that are there subscribing to something that is going on and passing along objects in",
    "start": "2051679",
    "end": "2058158"
  },
  {
    "text": "the language that you are used to working with you don't have to care about conflict resolution or serialization or whatever",
    "start": "2058159",
    "end": "2064240"
  },
  {
    "text": "is going on it is just there i'll show you another example later in",
    "start": "2064240",
    "end": "2069520"
  },
  {
    "text": "the talk as well right so writer protocol the good thing is the dsl that we have for defining",
    "start": "2069520",
    "end": "2076560"
  },
  {
    "text": "your model is all kotlin based which means that we have an ide for kotlin so you get completion for all of the",
    "start": "2076560",
    "end": "2082079"
  },
  {
    "text": "primitives that are in there it's also fairly simple for our devs to work with it update the model regenerate codes and",
    "start": "2082079",
    "end": "2088720"
  },
  {
    "text": "start working with it if you want it's very simple to find something in the generated c-sharp code for example and",
    "start": "2088720",
    "end": "2094800"
  },
  {
    "text": "trace it back to the model to see where where is this class or this object coming from lifetimes are there you",
    "start": "2094800",
    "end": "2100720"
  },
  {
    "text": "don't have to think about anything going on on the wire it's cross language cross platform so if",
    "start": "2100720",
    "end": "2105920"
  },
  {
    "text": "you define the model you can generate it towards scotland towards c plus plus to our javascript if you want so if you",
    "start": "2105920",
    "end": "2113200"
  },
  {
    "text": "if you want to build the ui on top of a writer that is browser-based i would not recommend doing it because you will have",
    "start": "2113200",
    "end": "2119119"
  },
  {
    "text": "to implement a lot of things but in theory you can do this you can generate this code and build something in",
    "start": "2119119",
    "end": "2124400"
  },
  {
    "text": "javascript if you want the downside of this entire model is",
    "start": "2124400",
    "end": "2129520"
  },
  {
    "text": "that there is some added complexity for anyone who wants to build a plug-in for rider and i've been building a couple of",
    "start": "2129520",
    "end": "2136079"
  },
  {
    "text": "those and it is indeed a bit more complex because you can either have a plug-in targeting just the front-ends just the",
    "start": "2136079",
    "end": "2142960"
  },
  {
    "text": "back ends or you have to dive into the protocol as well to get your plug-in components sitting in the front end and",
    "start": "2142960",
    "end": "2149040"
  },
  {
    "text": "the back ends to talk to each other so that's the the big downside there right",
    "start": "2149040",
    "end": "2154800"
  },
  {
    "text": "let's talk about what you came here for microservices",
    "start": "2154800",
    "end": "2159800"
  },
  {
    "text": "by definition writer is already an ide that is based on microservices because",
    "start": "2160240",
    "end": "2165280"
  },
  {
    "text": "you have two processes doing part of the work they communicate with each other and they do something so we have",
    "start": "2165280",
    "end": "2171280"
  },
  {
    "text": "front-end process back-end process really nice because they are isolated things can happen things can change and",
    "start": "2171280",
    "end": "2177440"
  },
  {
    "text": "they run independently they have their own memory space they have their own garbage collection which is also",
    "start": "2177440",
    "end": "2182800"
  },
  {
    "text": "interesting because the ui may be pausing while the back end is doing things but in theory shouldn't matter you have two processes running and you",
    "start": "2182800",
    "end": "2189440"
  },
  {
    "text": "have those separate things it's really nice on multi-core machines because front-end and back-end could in",
    "start": "2189440",
    "end": "2195119"
  },
  {
    "text": "theory run on different cores and all of those things and you can even start and stop both sides independently",
    "start": "2195119",
    "end": "2202160"
  },
  {
    "text": "actually if in writer you just imagine we just started writer you will see this",
    "start": "2202160",
    "end": "2207520"
  },
  {
    "text": "welcome screen of projects that are there and what you can do at this point",
    "start": "2207520",
    "end": "2212720"
  },
  {
    "text": "we essentially take what we learned from your environments show the project templates that are there",
    "start": "2212720",
    "end": "2218160"
  },
  {
    "text": "but at this point it's not guaranteed that resharper has already started when you start creating a project so we",
    "start": "2218160",
    "end": "2224480"
  },
  {
    "text": "launch them when needed",
    "start": "2224480",
    "end": "2228280"
  },
  {
    "text": "um debugging is another place where we have multiple processes running together you have writer which is intellij and",
    "start": "2230560",
    "end": "2237359"
  },
  {
    "text": "resharper again but we launched your application and we also launched a debugger process looking at what is",
    "start": "2237359",
    "end": "2243599"
  },
  {
    "text": "going on in your application we have the view model shared between intellij between resharper between the debugger",
    "start": "2243599",
    "end": "2251040"
  },
  {
    "text": "process and everything that we can gather from your project that you are running from that application so this um",
    "start": "2251040",
    "end": "2258240"
  },
  {
    "text": "this model can be shared between all of those processes and they can all contribute to",
    "start": "2258240",
    "end": "2263520"
  },
  {
    "text": "the information that is there by adding something to a list or sending a signal or doing something with what we just saw in",
    "start": "2263520",
    "end": "2270079"
  },
  {
    "text": "the protocol um that's also interesting having this approach of having multiple processes",
    "start": "2270079",
    "end": "2276400"
  },
  {
    "text": "and it it got us thinking can we do more than just those basic processes that are",
    "start": "2276400",
    "end": "2281520"
  },
  {
    "text": "front-end back-end and a debugger process and yes we started thinking can we maybe have",
    "start": "2281520",
    "end": "2287040"
  },
  {
    "text": "some features be their own process if you do wpf for example in writer you",
    "start": "2287040",
    "end": "2293200"
  },
  {
    "text": "will actually have yet another process running the preview that you see on the bottom",
    "start": "2293200",
    "end": "2298320"
  },
  {
    "text": "there that renders your wpf application is a separate process that is started",
    "start": "2298320",
    "end": "2303359"
  },
  {
    "text": "only when you have a wpf project open and you are working on some xaml codes",
    "start": "2303359",
    "end": "2308400"
  },
  {
    "text": "that is there pretty nice because uh that previewer can crash and we have lots of crashes",
    "start": "2308400",
    "end": "2314800"
  },
  {
    "text": "there because lots of components do really crazy things but it doesn't matter because we can simply restart it",
    "start": "2314800",
    "end": "2320880"
  },
  {
    "text": "and just hook up the protocol again and get the latest information from that process if it is needed",
    "start": "2320880",
    "end": "2327599"
  },
  {
    "text": "and it's nice because we can lower the memory footprint a little bit we you you don't always need that preview or running",
    "start": "2327599",
    "end": "2333680"
  },
  {
    "text": "but it's also nice that we can crash things independently where needed",
    "start": "2333680",
    "end": "2339200"
  },
  {
    "text": "having multiple view models and having multiple contributors to those view models is also interesting in case you",
    "start": "2339200",
    "end": "2345520"
  },
  {
    "text": "want to have other new features a lot of companies build their own",
    "start": "2345520",
    "end": "2350720"
  },
  {
    "text": "rustling analyzers for example microsoft chips a lot of rustling analyzers well resharper does not use roslyn it uses",
    "start": "2350720",
    "end": "2357920"
  },
  {
    "text": "its own engine but we still want to be able to support your custom analyzers your custom source generators maybe so",
    "start": "2357920",
    "end": "2364640"
  },
  {
    "text": "what we do is if we detect that you have an analyzer referenced we launch a rustling worker process the",
    "start": "2364640",
    "end": "2371119"
  },
  {
    "text": "wrestling worker process subscribes to the view model as well and we'll do exactly the same thing that resharper",
    "start": "2371119",
    "end": "2376640"
  },
  {
    "text": "does namely communicating with the list of inspections that is there for example and saying look there's this rustling",
    "start": "2376640",
    "end": "2382800"
  },
  {
    "text": "inspection that you should show with this icon this id this text range in the document and show it on screen if you",
    "start": "2382800",
    "end": "2388720"
  },
  {
    "text": "want if you actually look at rider you will see that the the rustling ones have a rustling icon in the light bulb there as",
    "start": "2388720",
    "end": "2395920"
  },
  {
    "text": "well and if you look at process explorer when you have some rustling analyzers you will see that you have writer",
    "start": "2395920",
    "end": "2401359"
  },
  {
    "text": "running writer is running the resharper host and the resharper host will have started at this point also a rustling",
    "start": "2401359",
    "end": "2407359"
  },
  {
    "text": "worker host that is analyzing your solution in roslyn in this case",
    "start": "2407359",
    "end": "2413440"
  },
  {
    "text": "we started thinking since the protocol is also socket based can we maybe split multiple processes over multiple",
    "start": "2414400",
    "end": "2420960"
  },
  {
    "text": "machines and we start looking into docker debugging and remote debugging where we would take our debugger process push it",
    "start": "2420960",
    "end": "2427920"
  },
  {
    "text": "into your container and just communicate over a socket with what is going on on your machine so the protocol can span",
    "start": "2427920",
    "end": "2434400"
  },
  {
    "text": "multiple machines if you want we actually have some examples remote debugging and docker debugging are one",
    "start": "2434400",
    "end": "2440079"
  },
  {
    "text": "of them but there's more coming the unity game engine is another really",
    "start": "2440079",
    "end": "2445359"
  },
  {
    "text": "nice example any game developers in the audience couple cool if you use unity 3d the",
    "start": "2445359",
    "end": "2452400"
  },
  {
    "text": "editor you will find that is great for designing and whatever is there but the coding is not as rich as what you would",
    "start": "2452400",
    "end": "2458800"
  },
  {
    "text": "have in a proper ide so what we did was build an extension to the unity editor hook up the protocol and we have the",
    "start": "2458800",
    "end": "2465839"
  },
  {
    "text": "unity editor from that plugin also communicating with writer to make sure that we have multiple processes",
    "start": "2465839",
    "end": "2471359"
  },
  {
    "text": "listening to the same thing doing the same thing which is actually really cool because this also means that you can do",
    "start": "2471359",
    "end": "2477760"
  },
  {
    "text": "things like this where you have and i know it's very small on the slides but i'll explain what you will be seeing",
    "start": "2477760",
    "end": "2483440"
  },
  {
    "text": "we can do things like find usages in writer find for example this",
    "start": "2483440",
    "end": "2489359"
  },
  {
    "text": "this button that is in the game this button in the game will be a button that is 3d designed and created in unity well",
    "start": "2489359",
    "end": "2496480"
  },
  {
    "text": "we can enrich our model with information from unity because the plugin lives there and we can do a find usages across",
    "start": "2496480",
    "end": "2502960"
  },
  {
    "text": "ids so what you will see is if you do find usages we find that button and jump into the unity editor because we know",
    "start": "2502960",
    "end": "2509440"
  },
  {
    "text": "that button exists there the protocol is subscribed and we can navigate back and forth between the ide because they both",
    "start": "2509440",
    "end": "2515839"
  },
  {
    "text": "subscribe to this model uh code with me anyone tried it i know",
    "start": "2515839",
    "end": "2520960"
  },
  {
    "text": "it's not yet in writer i'm sorry for that it's ironic code with me is",
    "start": "2520960",
    "end": "2527280"
  },
  {
    "text": "collaborative editing where you can do pair programming and things like that it is essentially built on top of this",
    "start": "2527280",
    "end": "2533920"
  },
  {
    "text": "writer protocol as well where you have the host exposing everything that is in in the host machine",
    "start": "2533920",
    "end": "2540240"
  },
  {
    "text": "into a view model and we have clients subscribing to that view model contributing to that view model and you",
    "start": "2540240",
    "end": "2545359"
  },
  {
    "text": "compare program the irony is that it not yet works for writer even though it was",
    "start": "2545359",
    "end": "2550720"
  },
  {
    "text": "built on the technology that powers writer because writer is more complex because",
    "start": "2550720",
    "end": "2556000"
  },
  {
    "text": "you always have multiple processes on the host you have resharper and intellij and the client kind of has to know about",
    "start": "2556000",
    "end": "2562000"
  },
  {
    "text": "that as well but it's it's coming remote development is another one since",
    "start": "2562000",
    "end": "2567119"
  },
  {
    "text": "this week same thing as code with me it has been built on this protocol the idea is you run a headless",
    "start": "2567119",
    "end": "2573119"
  },
  {
    "text": "ide on a server somewhere you connect to it and you can do things with that",
    "start": "2573119",
    "end": "2578640"
  },
  {
    "text": "i will give you a nice example of a hackathon project that we did this year so code with me built on top of the",
    "start": "2578640",
    "end": "2584640"
  },
  {
    "text": "writer protocol we decided okay since you already have this this setting where you have multiple parties working together can we",
    "start": "2584640",
    "end": "2591839"
  },
  {
    "text": "build a multiplayer game on top of this this protocol and work with that and actually you have a nice overlay where",
    "start": "2591839",
    "end": "2598480"
  },
  {
    "text": "you can play and shoot and play asteroids using using the code with me",
    "start": "2598480",
    "end": "2604160"
  },
  {
    "text": "infrastructure that is there so this is pretty nice with audio it's even nicer all those retro",
    "start": "2604160",
    "end": "2610640"
  },
  {
    "text": "retro sounds and all of that um the idea with this one and i'll actually show you the code of",
    "start": "2610640",
    "end": "2616640"
  },
  {
    "text": "this is we wanted to see if we could extend the code with me model same approach as",
    "start": "2616640",
    "end": "2622480"
  },
  {
    "text": "in writer you have in code with me there's an ide roots we",
    "start": "2622480",
    "end": "2628720"
  },
  {
    "text": "found that we could fake the ide roots to connect to it and add something on top of the view model and what we have",
    "start": "2628720",
    "end": "2635200"
  },
  {
    "text": "there is that we have a structure that is a position we have velocity we have the dimension of",
    "start": "2635200",
    "end": "2641280"
  },
  {
    "text": "everything that is in the game we have bullets that are there with their position how long they have been in the",
    "start": "2641280",
    "end": "2646720"
  },
  {
    "text": "game already we have ships that have a score that have a position rotation",
    "start": "2646720",
    "end": "2651760"
  },
  {
    "text": "whether they are giving power or not whether keys are pressed and all of that",
    "start": "2651760",
    "end": "2657280"
  },
  {
    "text": "this is in the model we generate that into kotlin codes so in our code we could work with display with",
    "start": "2657280",
    "end": "2664400"
  },
  {
    "text": "me model without having any information or whatsoever on the fact that we have this version conflict resolution",
    "start": "2664400",
    "end": "2669920"
  },
  {
    "text": "underneath and all of that we might actually release this at some",
    "start": "2669920",
    "end": "2675200"
  },
  {
    "text": "point as a kind of fun plug-in to your ide uh downside right now is that we we are",
    "start": "2675200",
    "end": "2681119"
  },
  {
    "text": "really bad at writing game loops apparently me and my colleague um so it's kind of slow if you have a",
    "start": "2681119",
    "end": "2686960"
  },
  {
    "text": "lot of players but it works it's nice",
    "start": "2686960",
    "end": "2691838"
  },
  {
    "text": "right there is some things that we can do in the future and there are some side effects we already saw some side effects",
    "start": "2692400",
    "end": "2699040"
  },
  {
    "text": "of coming up with this architecture for rider having this model code with me remote development all of those things",
    "start": "2699040",
    "end": "2704800"
  },
  {
    "text": "are already side effects but we have some other things we are thinking about that we can do with this protocol so",
    "start": "2704800",
    "end": "2710720"
  },
  {
    "text": "first of all having multiple machines remote development is already there we are toying with the idea of also",
    "start": "2710720",
    "end": "2718000"
  },
  {
    "text": "being able to host that wpf preview process for example on a windows machine",
    "start": "2718000",
    "end": "2723760"
  },
  {
    "text": "while you may be building xaml codes on a mac os x machine and just connect to it and have windows based wpf rendering",
    "start": "2723760",
    "end": "2731359"
  },
  {
    "text": "going on and piped into your ide that is sitting there so that's one of the ideas that we're toying with",
    "start": "2731359",
    "end": "2738400"
  },
  {
    "text": "another big idea really is having all of our id's support both being a frontend and a back",
    "start": "2738800",
    "end": "2745440"
  },
  {
    "text": "end on the protocol since for code with me we had to model everything in the id on the on the on the rd model as well we",
    "start": "2745440",
    "end": "2752720"
  },
  {
    "text": "now have essentially every ide capable of being both the host and the clients",
    "start": "2752720",
    "end": "2757839"
  },
  {
    "text": "so imagine um our webstorm our web tooling is kind of nice in writer",
    "start": "2757839",
    "end": "2763680"
  },
  {
    "text": "imagine if we could run webstorm as a backend for resharper in visual studio so we",
    "start": "2763680",
    "end": "2770480"
  },
  {
    "text": "could override everything that is html editing css editing in visual studio type it into webstorm and bring that",
    "start": "2770480",
    "end": "2776960"
  },
  {
    "text": "into the visual studio experience could be cool not saying this is ever going to happen but it's some thoughts that we",
    "start": "2776960",
    "end": "2783119"
  },
  {
    "text": "are doing some experiments that we are running and playing with modeling the view is another one",
    "start": "2783119",
    "end": "2789920"
  },
  {
    "text": "especially for resharper a lot of things are common between resharper and rider",
    "start": "2789920",
    "end": "2794960"
  },
  {
    "text": "so what if we could also extend our model to be able to render ui to",
    "start": "2794960",
    "end": "2800079"
  },
  {
    "text": "describe model a ui that has actions that has buttons that has things that happen when you click a",
    "start": "2800079",
    "end": "2805760"
  },
  {
    "text": "button the idea is that we can do that and we already have something there it's not ideal yet but a lot of the settings tool",
    "start": "2805760",
    "end": "2812960"
  },
  {
    "text": "windows for example a lot of the settings in resharper and writer are based on an experiment with this",
    "start": "2812960",
    "end": "2818960"
  },
  {
    "text": "where we have dsl where you can add headers at text boxes empty lines positioning all",
    "start": "2818960",
    "end": "2825200"
  },
  {
    "text": "of those things models in the model you can subscribe to it when something has to happen and then",
    "start": "2825200",
    "end": "2831359"
  },
  {
    "text": "we can render it in wpf but we can also render it in swing on the intellij sites and wherever we want to render this",
    "start": "2831359",
    "end": "2839520"
  },
  {
    "text": "so uh in summary i would say writer is an ide built on top of two other ids making it essentially three ids it's a",
    "start": "2839520",
    "end": "2846880"
  },
  {
    "text": "combination of the two it's built on two technology stacks we needed a very rich and flexible",
    "start": "2846880",
    "end": "2854319"
  },
  {
    "text": "programming model to communicate between the two which i think we managed to do and this model also gave rise to a lot",
    "start": "2854319",
    "end": "2861440"
  },
  {
    "text": "of things that we are releasing um five years after we released writer which is multiple processes remote development",
    "start": "2861440",
    "end": "2867839"
  },
  {
    "text": "code with me and all of those things so i'm not sure this will be of any practical use this talk so sorry for",
    "start": "2867839",
    "end": "2874640"
  },
  {
    "text": "that but i do hope it gave a bit of a view into the internal kitchen what is going on behind the scenes when you're",
    "start": "2874640",
    "end": "2880240"
  },
  {
    "text": "working in ryder thank you very much",
    "start": "2880240",
    "end": "2885480"
  },
  {
    "text": "and if there's any questions of course feel free yes",
    "start": "2891280",
    "end": "2896119"
  },
  {
    "text": "good question so the question was you mentioned running webstorm inside of rider is that also the basis for the",
    "start": "2902400",
    "end": "2908000"
  },
  {
    "text": "fleet id very complicated answer so for those of you are not aware",
    "start": "2908000",
    "end": "2913359"
  },
  {
    "text": "this week we also released a new experimental fleet ide which takes a lot of the learnings from 20 years of",
    "start": "2913359",
    "end": "2919440"
  },
  {
    "text": "building ids into a new one the idea there is indeed to work similar to how this all works",
    "start": "2919440",
    "end": "2925520"
  },
  {
    "text": "it's not the same but it's similar in terms of concepts where we have one ide where we can run",
    "start": "2925520",
    "end": "2930559"
  },
  {
    "text": "multiple back-ends whether it's a language server or full-blown webstorm or full-blown writer to power the",
    "start": "2930559",
    "end": "2936640"
  },
  {
    "text": "front-end experience that you may have in your code so it's similar but not the same hope that answers the question a",
    "start": "2936640",
    "end": "2943200"
  },
  {
    "text": "little bit cool anyone else really hard to see so just shout",
    "start": "2943200",
    "end": "2951760"
  },
  {
    "text": "uh yeah the so the question is when will a preview for a code with me be released for writer i really really hope um",
    "start": "2960240",
    "end": "2967200"
  },
  {
    "text": "it works it's not perfect yet so we have nightly builds that works i hope in the first quarter of next year",
    "start": "2967200",
    "end": "2972960"
  },
  {
    "text": "but this is not a promise unfortunately but i hope it will will come there",
    "start": "2972960",
    "end": "2979280"
  },
  {
    "text": "just shouts or otherwise we all go have coffees",
    "start": "2981680",
    "end": "2986800"
  },
  {
    "text": "thanks [Applause]",
    "start": "2988480",
    "end": "2993570"
  },
  {
    "text": "you",
    "start": "2999280",
    "end": "3001359"
  }
]