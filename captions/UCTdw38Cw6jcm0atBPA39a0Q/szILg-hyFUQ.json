[
  {
    "text": "thank you it's good to be here in Copenhagen at the first NDC Copenhagen",
    "start": "4560",
    "end": "10080"
  },
  {
    "text": "this is always a great conference so I hope that continues to grow so my name is Scott Allen I've been working with",
    "start": "10080",
    "end": "16020"
  },
  {
    "text": "asp.net core for at least 12 months and currently four months into a project",
    "start": "16020",
    "end": "21870"
  },
  {
    "text": "that's going to be in production hopefully in a couple months and at the end of 2016 2016 is what I call the good",
    "start": "21870",
    "end": "29070"
  },
  {
    "text": "old days now at the end of 2016 I was trying to put together a document that listed some opinions on how I wanted a",
    "start": "29070",
    "end": "35640"
  },
  {
    "text": "particular project to be worked on and I came up with the list of 56 things and then I thought well if I just remove a",
    "start": "35640",
    "end": "42269"
  },
  {
    "text": "few items and get to an even 50 that might make a nice conference talk where I could share all these opinions that I",
    "start": "42269",
    "end": "48390"
  },
  {
    "text": "formed over the last year on asp.net core and that's what I have to present to you today so I do assume that you",
    "start": "48390",
    "end": "55260"
  },
  {
    "text": "know a little bit about asp.net core already I'm not going to go into the fundamentals and just basically going to come talk about some ideas and opinions",
    "start": "55260",
    "end": "62760"
  },
  {
    "text": "and best practices for what I believe are the best way to structure your solutions and your projects how to lay",
    "start": "62760",
    "end": "69750"
  },
  {
    "text": "things out on the file system how to structure your startup code how to implement controllers with the MVC",
    "start": "69750",
    "end": "76680"
  },
  {
    "text": "framework how to apply client code and use client code frameworks like angular",
    "start": "76680",
    "end": "81930"
  },
  {
    "text": "and react and whatever else you want to do in JavaScript or typescript some tips",
    "start": "81930",
    "end": "87479"
  },
  {
    "text": "for the c-sharp code that you write for dotnet core some tips for views and writing unit tests or I take that back",
    "start": "87479",
    "end": "94950"
  },
  {
    "text": "writing test let's just say so we'll start off with what you would start from",
    "start": "94950",
    "end": "101159"
  },
  {
    "text": "day one which is how do i structure my solutions and my projects and lay out my file system and if you go out excuse me",
    "start": "101159",
    "end": "109109"
  },
  {
    "text": "and you look at how microsoft structures all of your open-source projects that",
    "start": "109109",
    "end": "114990"
  },
  {
    "text": "revolve around dotnet core and asp.net core they all follow a rather consistent convention which i think is quite useful",
    "start": "114990",
    "end": "121079"
  },
  {
    "text": "which is if you look at the top level of any github repository that Microsoft has there's always a top-level source folder",
    "start": "121079",
    "end": "127619"
  },
  {
    "text": "SRC there's always a top-level test folder there's always a solution file in the root of the github repository so as",
    "start": "127619",
    "end": "134580"
  },
  {
    "text": "soon as you you know where to go and click on something to open it if you're using Visual Studio and it's a nice pattern to",
    "start": "134580",
    "end": "141830"
  },
  {
    "text": "follow I think for our own business applications to follow also because it just is making sense and it's a",
    "start": "141830",
    "end": "148010"
  },
  {
    "text": "convention here in this new world of dotnet core and in addition to source and test folders which are always there",
    "start": "148010",
    "end": "154880"
  },
  {
    "text": "I usually always include a couple other folders in my business applications like a Doc's folder which might contain some",
    "start": "154880",
    "end": "161870"
  },
  {
    "text": "markdown files or HTML files or Word documents whatever you're using to implement coding guidelines and",
    "start": "161870",
    "end": "167810"
  },
  {
    "text": "architectural decisions a place where when the team gets together and makes a",
    "start": "167810",
    "end": "173180"
  },
  {
    "text": "decision on how to implement something or a direction to go we can at least record that and keep it in the project",
    "start": "173180",
    "end": "178640"
  },
  {
    "text": "and keep it under version control so you can see how things evolve over time I also typically keep samples in setup",
    "start": "178640",
    "end": "188390"
  },
  {
    "text": "level samples folder so if you're writing an application it might not make sense to have a sample folder but if",
    "start": "188390",
    "end": "193400"
  },
  {
    "text": "you're writing something that will build into a new get package that you're going to share with other members of the company or publishes an open source",
    "start": "193400",
    "end": "200090"
  },
  {
    "text": "project it's nice to have that top-level sample folder where people can clone the repository and open a working project",
    "start": "200090",
    "end": "206269"
  },
  {
    "text": "inside of there to see how to make use of whatever you put together something",
    "start": "206269",
    "end": "212630"
  },
  {
    "text": "else and it's Microsoft follow this example also so actually a lot of what I learned about some of the asp.net core",
    "start": "212630",
    "end": "220760"
  },
  {
    "text": "security features I learned by going into the security repository and going",
    "start": "220760",
    "end": "226160"
  },
  {
    "text": "into the samples folder and looking at some of the low-level samples that they provide and actually I've been saying",
    "start": "226160",
    "end": "232220"
  },
  {
    "text": "for the last year that one of the great things about Microsoft open-sourcing net core and asp.net core and all these",
    "start": "232220",
    "end": "238310"
  },
  {
    "text": "tools and technologies it's not that we have the source code we've always been able to get the source code somehow with",
    "start": "238310",
    "end": "243440"
  },
  {
    "text": "the D compiler what have you the great thing about this is we have access to little samples that they write to test",
    "start": "243440",
    "end": "248870"
  },
  {
    "text": "out ideas or to document things we have access to the unit tests which actually describe how things are supposed to work",
    "start": "248870",
    "end": "254959"
  },
  {
    "text": "at a low level and describe not just how things are supposed to work but how they're not supposed to work or things",
    "start": "254959",
    "end": "260390"
  },
  {
    "text": "that are supposed to fail so I've gotten a lot of information by going through the github repositories and looking at",
    "start": "260390",
    "end": "266060"
  },
  {
    "text": "tasks and looking at samples and I think there's a good patterns to follow in our own projects something",
    "start": "266060",
    "end": "272780"
  },
  {
    "text": "else I will keep around in my project is I typically have development a script",
    "start": "272780",
    "end": "278060"
  },
  {
    "text": "folder with development scripts so these days you might be using Visual Studio",
    "start": "278060",
    "end": "284600"
  },
  {
    "text": "code you might be using Visual Studio or sublime or whatever but chances are you're working with the command line",
    "start": "284600",
    "end": "289970"
  },
  {
    "text": "somehow somewhere either because you're running net or because you're running web path or some npm tool or you're",
    "start": "289970",
    "end": "297860"
  },
  {
    "text": "using dotnet anyone to implement database migrations what I'll do is create some bash scripts or command",
    "start": "297860",
    "end": "304070"
  },
  {
    "text": "files in a script folder that developers can run to do common things with the command line for this particular project",
    "start": "304070",
    "end": "309880"
  },
  {
    "text": "so for example in the early days of a project when you're still trying to prototype things and figure out your",
    "start": "309880",
    "end": "315889"
  },
  {
    "text": "design and you're using a database perhaps with the entity framework chances are you're creating a lot of",
    "start": "315889",
    "end": "321290"
  },
  {
    "text": "migrations you're applying there's migrations you're trying to drop and recreate the database so I'll have",
    "start": "321290",
    "end": "326690"
  },
  {
    "text": "scripts from the scripts folders so that developers can just say add migration foo and that will create a new migration",
    "start": "326690",
    "end": "333320"
  },
  {
    "text": "based on the current state of the code automatically applied to the database and there's nothing else they have to do",
    "start": "333320",
    "end": "339169"
  },
  {
    "text": "they don't have to remember to run a TF update database and then or and before",
    "start": "339169",
    "end": "344300"
  },
  {
    "text": "that dotnet EF migrations add and one of",
    "start": "344300",
    "end": "350720"
  },
  {
    "text": "those scripts might look like this go over to the data project add a migration to it update the database and then put",
    "start": "350720",
    "end": "357500"
  },
  {
    "text": "me back to the folder where I was push T and pop T I also like to add",
    "start": "357500",
    "end": "363190"
  },
  {
    "text": "deployment scripts so there's lots of techniques that you can use to deploy asp.net core applications there's lots",
    "start": "363190",
    "end": "369979"
  },
  {
    "text": "of environments where you can deploy asp.net core you can put it into local you can put it into IAF you can put it",
    "start": "369979",
    "end": "375289"
  },
  {
    "text": "an azure you might be behind engines on a Linux system wherever your produce",
    "start": "375289",
    "end": "380990"
  },
  {
    "text": "wherever you're publishing your code for staging for for QA for production I like",
    "start": "380990",
    "end": "388460"
  },
  {
    "text": "to have some scripts that will automate that and actually have them in source control so that developers can run them",
    "start": "388460",
    "end": "393560"
  },
  {
    "text": "and debug them and we can see how they change and so this is just a screenshot might be hard to see but it's a",
    "start": "393560",
    "end": "400159"
  },
  {
    "text": "this is inside of a resource group that was set up for a sure that will set up",
    "start": "400159",
    "end": "405800"
  },
  {
    "text": "the app service for the asp.net core application and set up the sequel server and the document DD and all of those",
    "start": "405800",
    "end": "412069"
  },
  {
    "text": "things that are needed for a single deployment and then after you can go and produce an automation script that will",
    "start": "412069",
    "end": "417830"
  },
  {
    "text": "give you a JSON file and a PowerShell file as well as c-sharp code and Ruby code whatever you want over here that",
    "start": "417830",
    "end": "426649"
  },
  {
    "text": "will recreate that environment using some parameters to change names so I like to go into Azure if they give me an",
    "start": "426649",
    "end": "432709"
  },
  {
    "text": "automation script and then check that in the source control also under a deployment folder so that I have all of",
    "start": "432709",
    "end": "438559"
  },
  {
    "text": "that available for me and of course there's lots of other tools that you can use to do this across Amazon and so",
    "start": "438559",
    "end": "444349"
  },
  {
    "text": "forth terraform being just one example making sense",
    "start": "444349",
    "end": "452499"
  },
  {
    "text": "there's also build scripts so I like to have a proper build script in the source",
    "start": "452979",
    "end": "458300"
  },
  {
    "text": "control as part of the project and this all depends on what your build environment is so there's a couple",
    "start": "458300",
    "end": "463879"
  },
  {
    "text": "projects that I have that will go out and use a player anyone use out there it's one of those services that will set",
    "start": "463879",
    "end": "469969"
  },
  {
    "text": "up behind the scenes of virtual machine for you and spin it up and build your source code and throw everything away",
    "start": "469969",
    "end": "475459"
  },
  {
    "text": "but they allow you to go into the app thayer website say I have this project",
    "start": "475459",
    "end": "481339"
  },
  {
    "text": "that's hosted on github please pull the latest code whenever there's a check-in and at the air will do a build and you",
    "start": "481339",
    "end": "487309"
  },
  {
    "text": "can configure the whole thing in the UI that's one way to do it but that UI will also let you export the yamo file and",
    "start": "487309",
    "end": "494089"
  },
  {
    "text": "put that check that yamo file into your github repository in the root and if a",
    "start": "494089",
    "end": "499729"
  },
  {
    "text": "player sees an app they mo file in the repository it will use the instructions",
    "start": "499729",
    "end": "505039"
  },
  {
    "text": "in that file and this just goes back to the principle that I believe anything that you can get under source control",
    "start": "505039",
    "end": "511309"
  },
  {
    "text": "you should put under source control so I don't want to leave my bill definition in the UI of a payer somewhere I would",
    "start": "511309",
    "end": "518180"
  },
  {
    "text": "rather export it as a gamma file check it into source control and now I have much better feeling for what's actually",
    "start": "518180",
    "end": "524240"
  },
  {
    "text": "happening behind the scenes much changing over time and even though developers can't necessarily use this",
    "start": "524240",
    "end": "529459"
  },
  {
    "text": "gamma file to do a local build to troubleshoot things it feels better to have this under",
    "start": "529459",
    "end": "535940"
  },
  {
    "text": "source control but and what we can do is when we actually do the build and up",
    "start": "535940",
    "end": "541700"
  },
  {
    "text": "there we can have a powershell script that we check into source control that a player uses that will do things like",
    "start": "541700",
    "end": "547880"
  },
  {
    "text": "okay for this project do it net restore do a dotnet build go into the test",
    "start": "547880",
    "end": "553310"
  },
  {
    "text": "folder and do execute the unit test net tab and then do a dotnet pack which will",
    "start": "553310",
    "end": "558710"
  },
  {
    "text": "package everything up into a new get package so that's something I can run locally and I can also give to a player",
    "start": "558710",
    "end": "563960"
  },
  {
    "text": "to run on the dome server and that way I have a consistent build environment this",
    "start": "563960",
    "end": "571880"
  },
  {
    "text": "also goes for visual studio what do they call it now visual studio team services",
    "start": "571880",
    "end": "577279"
  },
  {
    "text": "in the cloud visual studio team services online they allow you to set up a build",
    "start": "577279",
    "end": "582290"
  },
  {
    "text": "process graphically by adding these build steps that'll do net restore net",
    "start": "582290",
    "end": "587360"
  },
  {
    "text": "build and so forth and there was one project one project I'm currently working on where we have started down this path of creating build definitions",
    "start": "587360",
    "end": "594650"
  },
  {
    "text": "this way and that was fine for the first few weeks of the project but as soon as things started getting more complicated",
    "start": "594650",
    "end": "600529"
  },
  {
    "text": "I wanted to rip all of this out and just include there's a PowerShell script tasks that you can drop in as a build",
    "start": "600529",
    "end": "607160"
  },
  {
    "text": "step that basically says run this PowerShell script and then so I want all of the build things to happen like the",
    "start": "607160",
    "end": "613640"
  },
  {
    "text": "dotnet restore in the dotnet build I want all that to happen from PowerShell so I can run it locally and I can debug it and I can make changes and I can",
    "start": "613640",
    "end": "619970"
  },
  {
    "text": "check it in source control and I can see what changes over time and why something might have broken today if someone",
    "start": "619970",
    "end": "625610"
  },
  {
    "text": "changed something and there's all sorts of tasks in the STS on line including a",
    "start": "625610",
    "end": "632890"
  },
  {
    "text": "PowerShell and command line tasks or bash tasks that you can just write your end script to do your build cake and",
    "start": "632890",
    "end": "640790"
  },
  {
    "text": "peace sake are also available in Visual Studio online familiar with there's tools for building some people believe",
    "start": "640790",
    "end": "650120"
  },
  {
    "text": "that you should create as many projects as possible in a solution there's a lot",
    "start": "650120",
    "end": "656450"
  },
  {
    "text": "of people when they sit down to design an application they want to break things up to be very small and granular and say that okay these classes they're part of",
    "start": "656450",
    "end": "662839"
  },
  {
    "text": "this domain and they should never be accessible from the other part of the application whether it's data access project or what have",
    "start": "662839",
    "end": "669960"
  },
  {
    "text": "you but I've always been frustrated by the solutions that I open up that have 50 or 60 projects inside of them to me",
    "start": "669960",
    "end": "678060"
  },
  {
    "text": "creating a project in Visual Studio or wherever whatever whatever tool you're",
    "start": "678060",
    "end": "683910"
  },
  {
    "text": "using is more a function of how a particular piece of code should be deployed so the current project I'm on",
    "start": "683910",
    "end": "691020"
  },
  {
    "text": "now we're going to build two different web applications one is for external customers one is for internal people at",
    "start": "691020",
    "end": "697860"
  },
  {
    "text": "the company to use to manage the application since those are two different deployments that to me that's",
    "start": "697860",
    "end": "703560"
  },
  {
    "text": "an easy choice to make two different projects there's another project that has to be deployed as a Windows service so that's a third project there's a",
    "start": "703560",
    "end": "709980"
  },
  {
    "text": "project that has to be deployed as a web job and Azure so that's a fourth project but all those projects we decided on",
    "start": "709980",
    "end": "715530"
  },
  {
    "text": "because they were deployment units and then when it comes to other pieces of",
    "start": "715530",
    "end": "720930"
  },
  {
    "text": "infrastructure things like data access code and so forth I don't have a problem with let's say business logic and some",
    "start": "720930",
    "end": "727800"
  },
  {
    "text": "data access code inside of the same project and that freaks a lot of people out and they say how do you get a separation of concerns and I say as long",
    "start": "727800",
    "end": "734160"
  },
  {
    "text": "as you have a good development team that understands what they're doing it's not",
    "start": "734160",
    "end": "739590"
  },
  {
    "text": "a problem to have all that code mixed into the same project it's just it's how you use those different abstractions that you're",
    "start": "739590",
    "end": "745350"
  },
  {
    "text": "building startup code so asp.net core we",
    "start": "745350",
    "end": "752520"
  },
  {
    "text": "know there's a static main entry point we were basically writing a console mode application at this point and the web",
    "start": "752520",
    "end": "759570"
  },
  {
    "text": "host builder that you use inside of program dot C s will call into a startup code so how do we want to organize our",
    "start": "759570",
    "end": "765930"
  },
  {
    "text": "startup CS file that's the typical name for the startup file to me that file has three responsibilities and three",
    "start": "765930",
    "end": "771870"
  },
  {
    "text": "responsibilities only one responsibility is to set up the configuration sources",
    "start": "771870",
    "end": "777000"
  },
  {
    "text": "for your application and I believe that should happen inside of the constructor of that startup class before anything",
    "start": "777000",
    "end": "782700"
  },
  {
    "text": "else gets going because when you tell asp.net core that this is my startup",
    "start": "782700",
    "end": "790800"
  },
  {
    "text": "file the first thing it will do this instantiate that class then it's those invokes configure services then it",
    "start": "790800",
    "end": "795960"
  },
  {
    "text": "invokes the configure method so start up the constructor to me that's about setting up the configuration",
    "start": "795960",
    "end": "801090"
  },
  {
    "text": "sources configure services that is about configuring the inversion of control",
    "start": "801090",
    "end": "806100"
  },
  {
    "text": "container that asp.net core uses behind the scenes so what components am i using what are their lifetimes how are they",
    "start": "806100",
    "end": "812250"
  },
  {
    "text": "scoped are they scoped to an HTTP transaction or they Singleton's and so forth and then configure the method that",
    "start": "812250",
    "end": "819630"
  },
  {
    "text": "takes the I application builder that's all about configuring the HTTP processing pipeline what middleware do I",
    "start": "819630",
    "end": "825720"
  },
  {
    "text": "want in my application to process messages so the constructor typically",
    "start": "825720",
    "end": "831540"
  },
  {
    "text": "looks something like this use the configuration builder add some JSON files add some environment variables add some command line",
    "start": "831540",
    "end": "837750"
  },
  {
    "text": "arguments whatever you want I want to set up that configuration inside of the constructor can also so a lot of the",
    "start": "837750",
    "end": "843900"
  },
  {
    "text": "Microsoft templates when you do like file new project in Visual Studio they configure the logging inside of the",
    "start": "843900",
    "end": "850170"
  },
  {
    "text": "configure method which to me is irritating to me the configure method is",
    "start": "850170",
    "end": "855630"
  },
  {
    "text": "only about configuring the middleware configuring that HTTP processing pipeline so I like to rip that code out",
    "start": "855630",
    "end": "860970"
  },
  {
    "text": "of there any logger configuration I either want it in the startup constructor or you can actually take",
    "start": "860970",
    "end": "868230"
  },
  {
    "text": "this bit of code and put it into the static main entry point in program dot C F because at that point dotnet core has",
    "start": "868230",
    "end": "876630"
  },
  {
    "text": "already created an ilogger factory instance and will be available to pass that into your main method so you can",
    "start": "876630",
    "end": "881940"
  },
  {
    "text": "actually get a hold of the logger factory and start logging right from the beginning of the application when it",
    "start": "881940",
    "end": "887820"
  },
  {
    "text": "gets spun up you don't have to wait till startup but leave configure famila where only the other thing I like to do is",
    "start": "887820",
    "end": "894030"
  },
  {
    "text": "keep it clean so if you look inside of the typical application inside of configure services this is where you're",
    "start": "894030",
    "end": "899460"
  },
  {
    "text": "configuring the IFC container this is where you're configuring things like the MVC services that are used at",
    "start": "899460",
    "end": "905250"
  },
  {
    "text": "runtime things like the model binder the controller factory the serializers that",
    "start": "905250",
    "end": "912180"
  },
  {
    "text": "you use all of that stuff if you're building an application that is creating",
    "start": "912180",
    "end": "917610"
  },
  {
    "text": "custom model binders and adding additional serializers like an XML serializer it's really easy to write a",
    "start": "917610",
    "end": "922650"
  },
  {
    "text": "configure services method that has 5060 lines of code in it as you configure all these different options I like to look",
    "start": "922650",
    "end": "930090"
  },
  {
    "text": "into the startup ts file and just see a nice clean line by line description of what's going on",
    "start": "930090",
    "end": "935250"
  },
  {
    "text": "so add a customized version of NBC so we're going to customize some of the services add my security features that I",
    "start": "935250",
    "end": "941130"
  },
  {
    "text": "need add mediator which we'll talk about a little bit later add all my data stores with entity framework stuff or",
    "start": "941130",
    "end": "946770"
  },
  {
    "text": "document DB style for your repositories or what have you there so just simple one-liners inside of configure services",
    "start": "946770",
    "end": "952800"
  },
  {
    "text": "and then the actual implementation of these methods they're just extension methods for I service collection so over",
    "start": "952800",
    "end": "960300"
  },
  {
    "text": "in some other file that's where I would go to actually get the details ok what does it mean to add a customized MVC",
    "start": "960300",
    "end": "966660"
  },
  {
    "text": "well it just means we're going to add NBC but changed some of the options so change some of the view locations and",
    "start": "966660",
    "end": "972540"
  },
  {
    "text": "things like that for middleware again that configure",
    "start": "972540",
    "end": "978600"
  },
  {
    "text": "method I like to see that be ideally just a line by line description of what",
    "start": "978600",
    "end": "984270"
  },
  {
    "text": "middleware is installed ok developer exception page database error page browser link which people make fun of me",
    "start": "984270",
    "end": "990180"
  },
  {
    "text": "about that that appears there I don't actually use it but it just happened to be in the screenshot I think it is ok to",
    "start": "990180",
    "end": "996180"
  },
  {
    "text": "branch in other words have an if statement inside of your configure method because I do want to make it very",
    "start": "996180",
    "end": "1002029"
  },
  {
    "text": "obvious that ok if I'm in development on my local machine and the proper",
    "start": "1002029",
    "end": "1007790"
  },
  {
    "text": "environment variable is set to put asp.net core into development mode then I have a slightly different pipeline",
    "start": "1007790",
    "end": "1014300"
  },
  {
    "text": "than I do in production which is just using this exception handler which should produce some sort of friendly air page instead of dumping a stack trace to",
    "start": "1014300",
    "end": "1021800"
  },
  {
    "text": "the end user so I think that's ok but these again should be one-liners and if you have middleware that takes an",
    "start": "1021800",
    "end": "1027920"
  },
  {
    "text": "options object and you're setting up a whole bunch of objects I'd kind of like to extract that again into an extension",
    "start": "1027920",
    "end": "1033678"
  },
  {
    "text": "method somewhere for I application builder where I can say app dot use something custom and just have all that",
    "start": "1033679",
    "end": "1039740"
  },
  {
    "text": "complexity pushed somewhere else and just these simple one-liners inside of here something I started doing last year",
    "start": "1039740",
    "end": "1048890"
  },
  {
    "text": "with making use of my web application as an executable so again asp.net core",
    "start": "1048890",
    "end": "1059270"
  },
  {
    "text": "you will have a program that Cs your program that CS will be and that's just",
    "start": "1059270",
    "end": "1067190"
  },
  {
    "text": "a conventional name but somewhere you'll have a static void main entry point for your application so you can almost think",
    "start": "1067190",
    "end": "1072500"
  },
  {
    "text": "of your application as next cutable it's something that you can come ask pass command line arguments to and have it to",
    "start": "1072500",
    "end": "1078380"
  },
  {
    "text": "work on your behalf work that doesn't necessarily mean just listening for HTTP connections because",
    "start": "1078380",
    "end": "1085360"
  },
  {
    "text": "once you get through all this code with the web host builder and you reach this point right here after you've called",
    "start": "1085360",
    "end": "1090830"
  },
  {
    "text": "build you now have a fully configured environment that is aware of a lot of different details so it's aware of",
    "start": "1090830",
    "end": "1096950"
  },
  {
    "text": "different configuration sources and configuration files it has the ability to grab a database connection string it",
    "start": "1096950",
    "end": "1103070"
  },
  {
    "text": "knows exactly what little where's configured and how services are configured how your data access components or repositories or whatever",
    "start": "1103070",
    "end": "1110030"
  },
  {
    "text": "you're using how all of that stuff has been put together and now I want to take advantage of it sometimes or most of the",
    "start": "1110030",
    "end": "1116929"
  },
  {
    "text": "time I want the host to run and listen for HTTP connections and send HTML or",
    "start": "1116929",
    "end": "1122630"
  },
  {
    "text": "JSON back to people that are using it but there's some other situations where it's nice to use that fully configured",
    "start": "1122630",
    "end": "1129350"
  },
  {
    "text": "environment so for example when you have questions such as well let me go back",
    "start": "1129350",
    "end": "1134809"
  },
  {
    "text": "for a second so one of the common questions that comes up is how do i",
    "start": "1134809",
    "end": "1140050"
  },
  {
    "text": "automatically iran database migrations or how do I feed my database where do I put that code in previous versions of",
    "start": "1140050",
    "end": "1147740"
  },
  {
    "text": "asp.net we have the global de sá xes we had an application start of an it was very clear when the application was",
    "start": "1147740",
    "end": "1154100"
  },
  {
    "text": "starting and we could wedge code into there to go out and do things like oh let's check the database see if it has",
    "start": "1154100",
    "end": "1159860"
  },
  {
    "text": "any data if not we'll push data into it I like to do that now right from the entry point of the application I have",
    "start": "1159860",
    "end": "1166309"
  },
  {
    "text": "this process DD command method where I can pass in arguments so I can pass in",
    "start": "1166309",
    "end": "1172100"
  },
  {
    "text": "arguments actually let me show you the if I open up script file here there are",
    "start": "1172100",
    "end": "1179330"
  },
  {
    "text": "times when I just want to drop my database create a new database migrate it to the latest version feed it with",
    "start": "1179330",
    "end": "1185630"
  },
  {
    "text": "some data and then stop the application so it doesn't start listening for HTTP requests I just wanted to do that work",
    "start": "1185630",
    "end": "1191960"
  },
  {
    "text": "because again it has access to all the configuration and all the services that are needed to pull that off so these",
    "start": "1191960",
    "end": "1198070"
  },
  {
    "text": "commands drop DB migrate DB c DB and stop are all done from this process DB",
    "start": "1198070",
    "end": "1203710"
  },
  {
    "text": "commands method which and this is very brute force code but okay if there's a drop DB will drop the database by",
    "start": "1203710",
    "end": "1210520"
  },
  {
    "text": "getting a DB context and calling ensure deleted on it on the database then we",
    "start": "1210520",
    "end": "1216370"
  },
  {
    "text": "can run migrations we concede it with some initial data and would I ever do this in production no but I might do it",
    "start": "1216370",
    "end": "1223540"
  },
  {
    "text": "against the production database by logging into a server to a you know one instance where my application is running",
    "start": "1223540",
    "end": "1230080"
  },
  {
    "text": "and telling it to do something like this like migrate the database as part of our deployment script and some people put",
    "start": "1230080",
    "end": "1238690"
  },
  {
    "text": "this code like c DB again inside of the startup class inside of a method like configure which drives me nuts because",
    "start": "1238690",
    "end": "1244000"
  },
  {
    "text": "configure is just for middleware so at least don't put it in that location when",
    "start": "1244000",
    "end": "1250840"
  },
  {
    "text": "you do this there's one thing to be aware of and I'm going to flip away from the slide again and come back to visual studio just be careful if you are",
    "start": "1250840",
    "end": "1258630"
  },
  {
    "text": "locating a service outside of an HTTP request because if you pull out a",
    "start": "1258630",
    "end": "1264730"
  },
  {
    "text": "service from the service provider like so dear service provider please get me",
    "start": "1264730",
    "end": "1270880"
  },
  {
    "text": "this dbcontext typically you configure a DB context or something that uses the",
    "start": "1270880",
    "end": "1277390"
  },
  {
    "text": "database to be a have a lifetime of scoped scoped it to an HTTP transaction",
    "start": "1277390",
    "end": "1283530"
  },
  {
    "text": "which is perfect but if you pull out a service outside of a scope definition you can easily turn this into a",
    "start": "1283530",
    "end": "1290020"
  },
  {
    "text": "singleton which is very dangerous so so it's not net core what you do is you ask for a I service scope factory that will",
    "start": "1290020",
    "end": "1299350"
  },
  {
    "text": "give me back an object where I can call create scope that's a disposable object but anything I create in the scope any",
    "start": "1299350",
    "end": "1306160"
  },
  {
    "text": "services that I pull out when I dispose that scope they can all be thrown away and I don't have to worry about them",
    "start": "1306160",
    "end": "1311650"
  },
  {
    "text": "screwing up the lifetime their lifetime definitions",
    "start": "1311650",
    "end": "1317490"
  },
  {
    "text": "we have to move fast to get through 50 things forging ahead again adding",
    "start": "1318010",
    "end": "1323139"
  },
  {
    "text": "scripts to make the startup rain which is easy I already showed you that script where it can do a dotnet run drop DB",
    "start": "1323139",
    "end": "1328659"
  },
  {
    "text": "migrate DB c DB style logger recommendations i really fell in love",
    "start": "1328659",
    "end": "1334779"
  },
  {
    "text": "with sarah log last year anyone use it yes so it works with dotnet core it has",
    "start": "1334779",
    "end": "1341649"
  },
  {
    "text": "a huge number of syncs so you know in my application i want to be able to log",
    "start": "1341649",
    "end": "1346899"
  },
  {
    "text": "when i'm in development perhaps just to a local to the file system to a rolling log file but then when i push to",
    "start": "1346899",
    "end": "1354669"
  },
  {
    "text": "production I went to log to a database or the table storage theory log it's a logging framework and it has a huge",
    "start": "1354669",
    "end": "1361750"
  },
  {
    "text": "number of things available so it can go over WebSockets you can send stuff over UDP can write to files write to events",
    "start": "1361750",
    "end": "1368440"
  },
  {
    "text": "tours write to document TV rave and DB pretty much everything and it's really",
    "start": "1368440",
    "end": "1373600"
  },
  {
    "text": "cool because you can actually dump out objects you know structured logging so I can say processed position in this",
    "start": "1373600",
    "end": "1379179"
  },
  {
    "text": "number of milliseconds and sira log can look at this object and write out latitude 25 longitude 134 it's really",
    "start": "1379179",
    "end": "1386409"
  },
  {
    "text": "easy to configure into asp.net core you literally add one nougat package for the course server log then you'll add a",
    "start": "1386409",
    "end": "1392769"
  },
  {
    "text": "typically a NuGet package per sync where you want log events to be stored and you",
    "start": "1392769",
    "end": "1399340"
  },
  {
    "text": "can either configure it using code or configure it using JSON but this would be configuring a logger to be verbose to",
    "start": "1399340",
    "end": "1405100"
  },
  {
    "text": "write to a rolling file called log - whatever the data is jason and we're",
    "start": "1405100",
    "end": "1410679"
  },
  {
    "text": "often running there so this one I was",
    "start": "1410679",
    "end": "1417429"
  },
  {
    "text": "thinking about last year a lot the IRC container inside of asp.net core is quite capable it understands how to set",
    "start": "1417429",
    "end": "1425049"
  },
  {
    "text": "up lifetimes it understands how to work with open generics there's all sorts of things that it can do but of course we've had all these ifc containers",
    "start": "1425049",
    "end": "1431440"
  },
  {
    "text": "around in dotnet that are very mature things like structure structure map and inject and so forth and a lot of them",
    "start": "1431440",
    "end": "1437710"
  },
  {
    "text": "like structure mouth still have some features that are nice that go above and beyond what asp.net core provides for",
    "start": "1437710",
    "end": "1444700"
  },
  {
    "text": "example with structure map I can say yes for every every time you have to create",
    "start": "1444700",
    "end": "1450429"
  },
  {
    "text": "an eye widget creating instance of a widget that's a concrete class but I can also instruct your amount say things like for every eye",
    "start": "1450429",
    "end": "1456710"
  },
  {
    "text": "which you create make sure you decorate that concrete class with a widget holder so",
    "start": "1456710",
    "end": "1462290"
  },
  {
    "text": "instantiate that and it will pass in a widget to be the inner thing inside of widget holder those sorts of things are",
    "start": "1462290",
    "end": "1468620"
  },
  {
    "text": "still useful and this is just so you know if you love structure map or you need some additional features like that",
    "start": "1468620",
    "end": "1475820"
  },
  {
    "text": "it's really easy to plug structure map into asp.net core project structure I'm",
    "start": "1475820",
    "end": "1484790"
  },
  {
    "text": "a big fan of feature folders how many people have feature folders oh good quite a few so feature folders are",
    "start": "1484790",
    "end": "1491990"
  },
  {
    "text": "I have a really difficult time now looking at an MVC project and seeing the typical controllers models and views",
    "start": "1491990",
    "end": "1498500"
  },
  {
    "text": "folder we all know that controllers can live anywhere they've always been able to live in anywhere because I don't have",
    "start": "1498500",
    "end": "1504680"
  },
  {
    "text": "to put them in the controllers folder same thing with models these are a little bit trickier because they do have to live in the views folder unless I do",
    "start": "1504680",
    "end": "1510680"
  },
  {
    "text": "some configuration but I like to do away with all of that so in this application when I go to work on something I don't",
    "start": "1510680",
    "end": "1518750"
  },
  {
    "text": "work on a controller or a view I typically work on a feature so the manage users feature or the audit",
    "start": "1518750",
    "end": "1526820"
  },
  {
    "text": "account feature and when I go into my project I would like to go to that feature and actually have a bunch of the",
    "start": "1526820",
    "end": "1532850"
  },
  {
    "text": "abstractions related to that feature in one place for example the controller the view the view models that are specific",
    "start": "1532850",
    "end": "1539750"
  },
  {
    "text": "to that feature so here in this MVC application there's no controllers folder there's no views folder all of",
    "start": "1539750",
    "end": "1546320"
  },
  {
    "text": "those types of things are in a feature folder so if I want to look at something that related to accounts or let's say",
    "start": "1546320",
    "end": "1553580"
  },
  {
    "text": "admin then I even can have a hierarchy in here where I can say ok this is the admin section it has a controller in a",
    "start": "1553580",
    "end": "1560960"
  },
  {
    "text": "view I'm going to go in and manage a seat and that has a controller and two",
    "start": "1560960",
    "end": "1566210"
  },
  {
    "text": "views associated with them and just structure the project more like this because number one it it's a little bit",
    "start": "1566210",
    "end": "1572870"
  },
  {
    "text": "easier to scale up in terms of complexity in asp.net core obviously if",
    "start": "1572870",
    "end": "1578060"
  },
  {
    "text": "you try to put every controller from your application in a large application into the controllers folder",
    "start": "1578060",
    "end": "1583160"
  },
  {
    "text": "becomes overwhelming that's why we've had areas in HP net for quite a while but even areas I get irritated because",
    "start": "1583160",
    "end": "1590270"
  },
  {
    "text": "there's still controllers using models I'd much rather have the ability to organize in a hierarchy that kind of",
    "start": "1590270",
    "end": "1596510"
  },
  {
    "text": "mimics my user interface or how people think about the application and it's it's behaviors and then be able to find",
    "start": "1596510",
    "end": "1604490"
  },
  {
    "text": "everything I need inside of a single folder like this the view the view model commands depending on you know what sort",
    "start": "1604490",
    "end": "1612080"
  },
  {
    "text": "of Technology you're using commands and queries and so forth all of that some one place even actually I like to put so",
    "start": "1612080",
    "end": "1619790"
  },
  {
    "text": "this particular projects using react if there's a react component that is specific to that particular feature I",
    "start": "1619790",
    "end": "1625370"
  },
  {
    "text": "like to at least have a my type script or JavaScript file therefore that react",
    "start": "1625370",
    "end": "1631070"
  },
  {
    "text": "component in the same feature folder so it sort of gives me the entry point here for everything now yes and feature",
    "start": "1631070",
    "end": "1642380"
  },
  {
    "text": "folders are easy I created a new gate package if you want to use a simple",
    "start": "1642380",
    "end": "1647830"
  },
  {
    "text": "install package Oh decoded add feature folders and all you have to do and configure services to get that same",
    "start": "1647830",
    "end": "1653090"
  },
  {
    "text": "behaviour to say services that add NEC that add feature folders and that'll work you can just have a feature folder",
    "start": "1653090",
    "end": "1659180"
  },
  {
    "text": "and start putting everything underneath of it and that includes also just want to point this out that includes your",
    "start": "1659180",
    "end": "1667970"
  },
  {
    "text": "shared components shared layout shared views like the layout view all of that",
    "start": "1667970",
    "end": "1673370"
  },
  {
    "text": "still works I can have a shared folder under features things like view components that'll work and put your view components if they're used",
    "start": "1673370",
    "end": "1680180"
  },
  {
    "text": "everywhere under that shared folder everything just works like you would expect it's just a different way to",
    "start": "1680180",
    "end": "1686600"
  },
  {
    "text": "organize things controllers talk about controller code I'm a big fan of routing",
    "start": "1686600",
    "end": "1693350"
  },
  {
    "text": "using the route attribute now in fact I'll I'll try to get away in every MVC",
    "start": "1693350",
    "end": "1699740"
  },
  {
    "text": "project without using the decorative template advanced at all just used about attribute for one thing it's nice",
    "start": "1699740",
    "end": "1707860"
  },
  {
    "text": "developers will we're all kind of lazy right so if I have a default route that says the rad will be controller flash",
    "start": "1707860",
    "end": "1714890"
  },
  {
    "text": "action slash ID all of a sudden every parameter to every controller action that needs an ID is",
    "start": "1714890",
    "end": "1721039"
  },
  {
    "text": "just an ID right that's the name of the parameter and then when you look at a controller where one action might take",
    "start": "1721039",
    "end": "1727850"
  },
  {
    "text": "this an ID that represents this thing and an ID that represents another thing it becomes very confusing so one little",
    "start": "1727850",
    "end": "1734450"
  },
  {
    "text": "advantage to this always using the route attribute is I can force people to name",
    "start": "1734450",
    "end": "1739610"
  },
  {
    "text": "parameters a little bit better so this is a seasoned ID this is a matched set ID don't rely on just ID all the time",
    "start": "1739610",
    "end": "1747730"
  },
  {
    "text": "I'm also a standard mediator anyone using mediator heard of it just couple",
    "start": "1747730",
    "end": "1754809"
  },
  {
    "text": "it's like an in-memory service bus so to me controllers should really just be a",
    "start": "1754809",
    "end": "1761240"
  },
  {
    "text": "facade in the application they shouldn't do anything significant to me a controller is a component that should",
    "start": "1761240",
    "end": "1768080"
  },
  {
    "text": "receive an HTTP request and the model bundle the model binder in NBC will work",
    "start": "1768080",
    "end": "1775730"
  },
  {
    "text": "with that controller to test in some data to me so I receive an HTTP request and I have to produce some sort of data",
    "start": "1775730",
    "end": "1781639"
  },
  {
    "text": "structure that about how to respond to that request but everything in between all the data access work all the",
    "start": "1781639",
    "end": "1787309"
  },
  {
    "text": "authorization checks a lot of that stuff I want to be able to push out into other components in the application so the",
    "start": "1787309",
    "end": "1793249"
  },
  {
    "text": "controller's still stay very small and [Music]",
    "start": "1793249",
    "end": "1798610"
  },
  {
    "text": "one technique I like to use to do that is to simply so let me back up a second",
    "start": "1798610",
    "end": "1804889"
  },
  {
    "text": "mediator it is a I don't have a browser open",
    "start": "1804889",
    "end": "1811990"
  },
  {
    "text": "open-source project from Jimmy Bogart author of Auto Napper and various other famous things it's a really simple new",
    "start": "1816990",
    "end": "1824760"
  },
  {
    "text": "get install it's a really simple configuration you just have to add a",
    "start": "1824760",
    "end": "1830670"
  },
  {
    "text": "couple lines of code to your start up and now what you have is a component that you can inject into your",
    "start": "1830670",
    "end": "1836130"
  },
  {
    "text": "controllers a component that implements imediator and you can basically say dear mediator",
    "start": "1836130",
    "end": "1841950"
  },
  {
    "text": "please handle this thing for me that thing might be a query it might be a command you might just think of it as a",
    "start": "1841950",
    "end": "1848160"
  },
  {
    "text": "request but basically you put together a data structure with information that will be needed by the other components",
    "start": "1848160",
    "end": "1854370"
  },
  {
    "text": "to satisfy this request information like I went to query and find the user with",
    "start": "1854370",
    "end": "1859890"
  },
  {
    "text": "this ID the ID of three or I just need to know what the current season is for this golf year or football year whatever",
    "start": "1859890",
    "end": "1867450"
  },
  {
    "text": "you're writing an application about and send that thing of a mediator mediator will find the component that is designed",
    "start": "1867450",
    "end": "1875100"
  },
  {
    "text": "to respond to that particular query or command execute some code send back your",
    "start": "1875100",
    "end": "1880290"
  },
  {
    "text": "result which in this case might just be a simple view model or it might be a data structure that you send back using",
    "start": "1880290",
    "end": "1887490"
  },
  {
    "text": "an object result so it's content negotiated into JSON what have you but all of the Oliver Oliver logic here goes",
    "start": "1887490",
    "end": "1894510"
  },
  {
    "text": "behind mediator now I don't have to inject data access components or repositories or any of that stuff into this controller so an implementation of",
    "start": "1894510",
    "end": "1901500"
  },
  {
    "text": "that might look like this over here this is the current season summary query",
    "start": "1901500",
    "end": "1908429"
  },
  {
    "text": "handler that implements an interface provided by mediator and I async request handler that basically says I am here to",
    "start": "1908429",
    "end": "1915809"
  },
  {
    "text": "process a current season summary query and I will give you back a current season summary result and then it is",
    "start": "1915809",
    "end": "1922800"
  },
  {
    "text": "this component this is the magic of asp.net for dependency injection that's everywhere where this can take whatever",
    "start": "1922800",
    "end": "1930450"
  },
  {
    "text": "dependencies it needs on databases on data access components and it's going to do whatever it needs to handle that",
    "start": "1930450",
    "end": "1935970"
  },
  {
    "text": "particular request and implement a business logic or call the business components and put everything together",
    "start": "1935970",
    "end": "1941820"
  },
  {
    "text": "for me so my controllers become very small very thin they just delegate work to",
    "start": "1941820",
    "end": "1948409"
  },
  {
    "text": "something that is hiding behind mediator",
    "start": "1948409",
    "end": "1952690"
  },
  {
    "text": "throw it this is the hard one if you use asp.net identity and you say file new",
    "start": "1954249",
    "end": "1959419"
  },
  {
    "text": "project give me a project that implements authentication and authorization using individual user",
    "start": "1959419",
    "end": "1964820"
  },
  {
    "text": "accounts Visual Studio spits out this account controller and manage controller that does have like 500 lines of really",
    "start": "1964820",
    "end": "1971929"
  },
  {
    "text": "nasty looking code inside of them it's hard to throw all of that away because it works and maybe you'll never need to",
    "start": "1971929",
    "end": "1978470"
  },
  {
    "text": "touch it but if you're going to customize any of it if you ever have to touch that code I mean it can be a",
    "start": "1978470",
    "end": "1984740"
  },
  {
    "text": "couple days of work but I would I would throw all that stuff away and start over with it use it use it as a prototype to",
    "start": "1984740",
    "end": "1991100"
  },
  {
    "text": "write something better and maybe all you do is this maybe all you do is this is separate some of the responsibilities so",
    "start": "1991100",
    "end": "1997340"
  },
  {
    "text": "if you look at the account controller it's responsible for logging in and user and logging out the user and registering a user to me it would be nicer to have a",
    "start": "1997340",
    "end": "2004960"
  },
  {
    "text": "log off controller and a login controller and a register controller so maybe you just start by ripping out to",
    "start": "2004960",
    "end": "2011529"
  },
  {
    "text": "code and copying and pasting it into other controllers that make them a little bit easier to manage if you're",
    "start": "2011529",
    "end": "2017740"
  },
  {
    "text": "building an API application I've had a lot of people ask me this for whatever reason but a lot of people are building",
    "start": "2017740",
    "end": "2023409"
  },
  {
    "text": "API applications that still rely on cookies for authentication and anytime you're building an application that",
    "start": "2023409",
    "end": "2030009"
  },
  {
    "text": "relies on implicit authentication that is a scenario where the browser will implicitly send along some sort of",
    "start": "2030009",
    "end": "2036549"
  },
  {
    "text": "credentials or some sort of information about the user that will authenticate them and that includes like windows",
    "start": "2036549",
    "end": "2041799"
  },
  {
    "text": "authentication those are situations where you need to make sure when you accept an HTTP POST that that was",
    "start": "2041799",
    "end": "2048490"
  },
  {
    "text": "actually an HTTP POST that you intended the user intended to send you and it was",
    "start": "2048490",
    "end": "2054158"
  },
  {
    "text": "came from a form or from a service endpoint that you gave to the user and that means using anti forgery tokens so",
    "start": "2054159",
    "end": "2061540"
  },
  {
    "text": "how do you use anti forgery tokens when it comes to an API where there's no forum post with a hidden input that has",
    "start": "2061540",
    "end": "2066790"
  },
  {
    "text": "the other half of the anti forgery token well with asp.net core it's really simple to build a controller where you",
    "start": "2066790",
    "end": "2073210"
  },
  {
    "text": "inject a service that implements a anti forgery and that component the default component",
    "start": "2073210",
    "end": "2079200"
  },
  {
    "text": "that implements int forgery when you ask it to get in-store tokens it'll do two things the first thing that method will",
    "start": "2079200",
    "end": "2085289"
  },
  {
    "text": "do is issue a set cookie header to the client which contains the one-half of",
    "start": "2085289",
    "end": "2090628"
  },
  {
    "text": "the anti forgery token that a browser would need to send along and the second thing it will do is return a data",
    "start": "2090629",
    "end": "2097170"
  },
  {
    "text": "structure that includes a request token and a header name property the request",
    "start": "2097170",
    "end": "2102420"
  },
  {
    "text": "the request token is the value for an API call that you would make from JavaScript it's the value that you would",
    "start": "2102420",
    "end": "2109260"
  },
  {
    "text": "put in an HTTP header with that header name so that you can use that would be",
    "start": "2109260",
    "end": "2115079"
  },
  {
    "text": "anti forgery token on an API action and",
    "start": "2115079",
    "end": "2120109"
  },
  {
    "text": "asp.net core will look for that request token and look for the cookie and make sure everything matches up and if not",
    "start": "2120109",
    "end": "2125760"
  },
  {
    "text": "throw an exception that there was a possible forgery attempt in brain",
    "start": "2125760",
    "end": "2133020"
  },
  {
    "text": "security policies so one nice thing in asp.net core that they've done is they've really embraced claimed now what",
    "start": "2133020",
    "end": "2139170"
  },
  {
    "text": "they espied on that core so the claim can be it's really any key value pair like my name is Scott my email address",
    "start": "2139170",
    "end": "2146490"
  },
  {
    "text": "is this my role is this and this and this so claims or key value pairs and the way",
    "start": "2146490",
    "end": "2153450"
  },
  {
    "text": "you can take advantage of this is let's go - well actually any of these",
    "start": "2153450",
    "end": "2159809"
  },
  {
    "text": "controllers I got user is admin so there's two ways to express that I would",
    "start": "2159809",
    "end": "2166470"
  },
  {
    "text": "want only administrators coming into this controller I could use the authorized attribute of course that",
    "start": "2166470",
    "end": "2173670"
  },
  {
    "text": "would just force the user to be authenticated I probably need something a little bit more than that I can also pass in here a policy name",
    "start": "2173670",
    "end": "2181619"
  },
  {
    "text": "and say authorize based on this policy and we'll talk about what the policy is in just a second but I would prefer to",
    "start": "2181619",
    "end": "2186990"
  },
  {
    "text": "create a custom attribute the canta that will excuse me I have to slow down a second finally recovering from jet lag",
    "start": "2186990",
    "end": "2193230"
  },
  {
    "text": "when I get in front of people I would prefer to create an attribute that hides the specific policies that are being",
    "start": "2193230",
    "end": "2199829"
  },
  {
    "text": "applied into some other code to make this a little more flexible because there might be a day when we need to",
    "start": "2199829",
    "end": "2205260"
  },
  {
    "text": "allow different sorts of administrators and let's say where does this attribute come from it",
    "start": "2205260",
    "end": "2210940"
  },
  {
    "text": "comes from that was the wrong heated press just started the debugger hate",
    "start": "2210940",
    "end": "2217270"
  },
  {
    "text": "that I'm starting to press f12 and I've been missing that key all week so while",
    "start": "2217270",
    "end": "2225610"
  },
  {
    "text": "Visual Studio is crunching along trying to start the debugger I'll just point out that this is going very rapidly but",
    "start": "2225610",
    "end": "2232000"
  },
  {
    "text": "I'll give you my email address at the end of the presentation so if you have any questions about all of the Brambling that I have done here this morning you",
    "start": "2232000",
    "end": "2238570"
  },
  {
    "text": "are more than free to email me and ask me about what's what I was talking about let's stop the debugger now that it",
    "start": "2238570",
    "end": "2245740"
  },
  {
    "text": "finally got warmed up and this time I'll be very careful to press f12 all right",
    "start": "2245740",
    "end": "2254500"
  },
  {
    "text": "so users admin that's just a derivation from authorized attribute that's calling into the base class constructor and",
    "start": "2254500",
    "end": "2260200"
  },
  {
    "text": "saying the policy to use as the policy named is admin where does it admin come",
    "start": "2260200",
    "end": "2265960"
  },
  {
    "text": "from that comes from a policy that I dolt which you can do using the",
    "start": "2265960",
    "end": "2273990"
  },
  {
    "text": "authorization policy builder and asp.net core and I basically say that that",
    "start": "2273990",
    "end": "2280450"
  },
  {
    "text": "policy just requires a single claim the is admin key in the list of claims has",
    "start": "2280450",
    "end": "2286690"
  },
  {
    "text": "to have the value true and you can put multiple things here so I could require multiple claims different roles require",
    "start": "2286690",
    "end": "2294820"
  },
  {
    "text": "a username all sorts of things I can abstract into a policy and then apply it",
    "start": "2294820",
    "end": "2300610"
  },
  {
    "text": "through well named attributes throughout the application yes and if you've ever",
    "start": "2300610",
    "end": "2310830"
  },
  {
    "text": "wanted to figure out how do I create something that represents your user identity with asp.net core because maybe",
    "start": "2310830",
    "end": "2316720"
  },
  {
    "text": "you have a custom identity system or you need to read out your own database to figure out who a user is just be aware",
    "start": "2316720",
    "end": "2324610"
  },
  {
    "text": "that it's now it's about claims principles the claims principle has a claims identity it claims identity has a",
    "start": "2324610",
    "end": "2329950"
  },
  {
    "text": "series of claims there's some well-known claims like the email claim and the name claim type and that's how I can add",
    "start": "2329950",
    "end": "2336520"
  },
  {
    "text": "planes through a user to establish who they are and I can add my own custom to take just a key/value pair is headmen",
    "start": "2336520",
    "end": "2344010"
  },
  {
    "text": "true favorite color blue whatever claim you want create custom autopilot",
    "start": "2344010",
    "end": "2351210"
  },
  {
    "text": "attributes is what I just described to you I'm going to rapidly advance to that slide we'll talk about views for a minute avoid the HTML helpers there's a",
    "start": "2351210",
    "end": "2358440"
  },
  {
    "text": "new thing in asp.net core called tag helpers I never ever ever want to write",
    "start": "2358440",
    "end": "2363480"
  },
  {
    "text": "another HTML helper I always thought they were the worst feature of NBC tag helpers are much cleaner you can embrace",
    "start": "2363480",
    "end": "2369930"
  },
  {
    "text": "and extend them so an example of tag helpers if you haven't seen them tag helpers would be like ASP - anti forgery",
    "start": "2369930",
    "end": "2375930"
  },
  {
    "text": "equals true they're like HTML attributes but they are processed on the server by",
    "start": "2375930",
    "end": "2382260"
  },
  {
    "text": "the razor engine so they're not emitted into the source code ASP - validation - summary you can get intellisense for",
    "start": "2382260",
    "end": "2388920"
  },
  {
    "text": "these you can get checks to make sure you put the right values in here so for example ASP - 4 that is saying that I",
    "start": "2388920",
    "end": "2395610"
  },
  {
    "text": "want to label for the name property of my model and when things are set up appropriately and it's a sunny day and",
    "start": "2395610",
    "end": "2401760"
  },
  {
    "text": "everything is working that will turn red if name is not a property on your model so you know that you have a typo there",
    "start": "2401760",
    "end": "2408500"
  },
  {
    "text": "those are the HTML helpers much easier to use so it's relatively easy to write them - basically you write a class",
    "start": "2408500",
    "end": "2415860"
  },
  {
    "text": "derived from tag helper you tell asp.net cor the razor View engine what your",
    "start": "2415860",
    "end": "2421530"
  },
  {
    "text": "element or attribute what name it will have so this would be like my environment my - environment public",
    "start": "2421530",
    "end": "2428280"
  },
  {
    "text": "properties that you have on there will automatically read attributes with that name from the source code and set values",
    "start": "2428280",
    "end": "2435180"
  },
  {
    "text": "for you and then you implement a process method that's where things get a little bit tricky but there's an API there that",
    "start": "2435180",
    "end": "2441930"
  },
  {
    "text": "allows you to do anything to the HTML so you want to suppress the output and not output anything you can do that you're",
    "start": "2441930",
    "end": "2447780"
  },
  {
    "text": "going to change attributes add attributes remove attributes change the inner HTML whatever you want to do these",
    "start": "2447780",
    "end": "2455640"
  },
  {
    "text": "components are the new solution in asp.net core to replace basically HTML",
    "start": "2455640",
    "end": "2461790"
  },
  {
    "text": "that action which is you are familiar with that used to set up sort of a sub request inside of asp.net MVC that would",
    "start": "2461790",
    "end": "2468630"
  },
  {
    "text": "allow me to from a view set up a sub request that would call into another controller that could build its own",
    "start": "2468630",
    "end": "2474600"
  },
  {
    "text": "model two could render a partial view that would get tucked into the larger view that's kind of what gone away because it",
    "start": "2474600",
    "end": "2480330"
  },
  {
    "text": "was kind of an ugly hack and it created some problems in some scenarios we now have these things and ESP Dinoco are called view component and I would",
    "start": "2480330",
    "end": "2487110"
  },
  {
    "text": "encourage you to look at them to do things like I want to build a main menu and reuse it across various pieces the",
    "start": "2487110",
    "end": "2492570"
  },
  {
    "text": "application so let me write something a main menu view component that derives from a base view component class this",
    "start": "2492570",
    "end": "2498600"
  },
  {
    "text": "thing can have services injected whatever you need data access components anything you want it has one primary",
    "start": "2498600",
    "end": "2503970"
  },
  {
    "text": "method called invoke that will return an eye view component result of some sort so you can return a view but you can put",
    "start": "2503970",
    "end": "2510690"
  },
  {
    "text": "together it's isolated you can put together your own models your own data access whatever you need and produce a",
    "start": "2510690",
    "end": "2516270"
  },
  {
    "text": "view that will render HTML into a larger view and the way you use it is well used",
    "start": "2516270",
    "end": "2521490"
  },
  {
    "text": "to be the that you would use component in both async and named your view component you could",
    "start": "2521490",
    "end": "2528870"
  },
  {
    "text": "also pass along parameters there and you had to await it that was kind of ugly with 1.1 they introduced a tag helper BC",
    "start": "2528870",
    "end": "2536820"
  },
  {
    "text": "so you can invoke a view component without that ugly syntax so BC - main menu would go out and find this",
    "start": "2536820",
    "end": "2542340"
  },
  {
    "text": "component render it stick it in wherever that code appeared here what about",
    "start": "2542340",
    "end": "2548700"
  },
  {
    "text": "client code we're all writing stuff that involves JavaScript these days I have a couple opinions about that if you're",
    "start": "2548700",
    "end": "2554670"
  },
  {
    "text": "doing anything with like angular - typescript or raelia anything that requires compilation or transformation",
    "start": "2554670",
    "end": "2562670"
  },
  {
    "text": "my favorite go-to tool is still web pack there's a lot of good integration with",
    "start": "2562670",
    "end": "2568560"
  },
  {
    "text": "between web pack and asp.net dotnet core that I can show you in just a minute but",
    "start": "2568560",
    "end": "2573590"
  },
  {
    "text": "there are tons of tools out there they all do different things they all say they have different advantages to me web",
    "start": "2573590",
    "end": "2579630"
  },
  {
    "text": "pack has been the one tool that no matter what else I'm evaluating it's been the stable thing that's been the",
    "start": "2579630",
    "end": "2585600"
  },
  {
    "text": "most well used it's been the most well-documented and ok maybe it doesn't produce the most efficient code compared",
    "start": "2585600",
    "end": "2591300"
  },
  {
    "text": "to some of the other tools but it works well on it's easy and unless it's unless I'm getting like a 20% performance boost",
    "start": "2591300",
    "end": "2598440"
  },
  {
    "text": "from some other tool I'm not going to worry about all the pain involved in migrating to another tool for 2 percent",
    "start": "2598440",
    "end": "2604500"
  },
  {
    "text": "gain let's say anyone using webpack basically there's",
    "start": "2604500",
    "end": "2610590"
  },
  {
    "text": "so the story would be for like in this application I am using react components",
    "start": "2610590",
    "end": "2617160"
  },
  {
    "text": "and I'm writing I want to offer them in typescript so not only do I need to transpile from",
    "start": "2617160",
    "end": "2622710"
  },
  {
    "text": "typescript into JavaScript I also need to bundle up all these little individual files until a single javascript file",
    "start": "2622710",
    "end": "2628500"
  },
  {
    "text": "that I shipped down to the browser in an efficient manner to do that I'm using webpack web pack after you install it",
    "start": "2628500",
    "end": "2636630"
  },
  {
    "text": "with NPM because it runs on a junior you write a configuration file there's a lot",
    "start": "2636630",
    "end": "2643410"
  },
  {
    "text": "of complicated configuration files out there but here's the simplest part resolved that tells web pack what types",
    "start": "2643410",
    "end": "2649590"
  },
  {
    "text": "of files to look at here I'm saying look at j/s files this is because this",
    "start": "2649590",
    "end": "2657150"
  },
  {
    "text": "particular configuration file is just bundling code that is that doesn't need transpilation so it's already in jf the",
    "start": "2657150",
    "end": "2665520"
  },
  {
    "text": "entry will tell web pack I need an entry point known as bender and here's the",
    "start": "2665520",
    "end": "2672510"
  },
  {
    "text": "code that I want associated with a with the vendor so what you're listing here are the various entry points where web",
    "start": "2672510",
    "end": "2679800"
  },
  {
    "text": "pack will go and say oh you need react let me look at react and see if it has any other dependencies and basically",
    "start": "2679800",
    "end": "2685650"
  },
  {
    "text": "walk the dependencies pull all the code together and put all of this into a single file so everything from react",
    "start": "2685650",
    "end": "2691830"
  },
  {
    "text": "react Dom we have to bootstrap Axios from es6 promise we'll go into a single file called bender it will go into a",
    "start": "2691830",
    "end": "2698190"
  },
  {
    "text": "single path called bender because I have said the output of this should go into",
    "start": "2698190",
    "end": "2703440"
  },
  {
    "text": "my assets folder in WWE and the file name should be parameter placeholder",
    "start": "2703440",
    "end": "2708960"
  },
  {
    "text": "there yes but it will use this name vendor jf slightly more sophisticated example this is web pack config dot Jas",
    "start": "2708960",
    "end": "2716520"
  },
  {
    "text": "this is the one that actually has to crawl through my feature folders find all the typescript files and then output",
    "start": "2716520",
    "end": "2723660"
  },
  {
    "text": "a Java Script bundle for each feature file so there's a little more code in here yes web pack execute under nodejs",
    "start": "2723660",
    "end": "2731910"
  },
  {
    "text": "you can write imperative code inside of here if you want to go out and do things like glob up all the tsx files",
    "start": "2731910",
    "end": "2739650"
  },
  {
    "text": "but again it's resolved what is it resolved typescript JavaScript and TSX which is react plates",
    "start": "2739650",
    "end": "2748360"
  },
  {
    "text": "Krypton reactants a script what is it output output something with",
    "start": "2748360",
    "end": "2754450"
  },
  {
    "text": "name jf the name will be derived from the file that it's sound and the only",
    "start": "2754450",
    "end": "2759760"
  },
  {
    "text": "other thing we do for typescript is we say ok if you're actually loading a TS or TS s file use the typescript loader",
    "start": "2759760",
    "end": "2765370"
  },
  {
    "text": "which calls the typescript compiler web pack itself is actually a pretty dumb tool it relies on a bunch of plugins to",
    "start": "2765370",
    "end": "2771460"
  },
  {
    "text": "do actual work so web pack itself is really just about packing stuff taking javascript files building a single",
    "start": "2771460",
    "end": "2778450"
  },
  {
    "text": "bundle it relies on other tools like tight script to do things like compilation so you can have multiple web",
    "start": "2778450",
    "end": "2784210"
  },
  {
    "text": "pack configuration files as I demonstrated just there you can yes use",
    "start": "2784210",
    "end": "2791650"
  },
  {
    "text": "multiple configuration files there's one of the tip I wanted to give you which I think comes later so I'll come back to that JavaScript services anyone here the",
    "start": "2791650",
    "end": "2799320"
  },
  {
    "text": "fantastic project initiated by Steve Sanderson of Microsoft of usually guys",
    "start": "2799320",
    "end": "2805000"
  },
  {
    "text": "that implemented knockout jf might have used that in the past so here's the deal",
    "start": "2805000",
    "end": "2810820"
  },
  {
    "text": "typically in an asp.net core application that's using aralia or angular 2 you need a tool like web pack to help build",
    "start": "2810820",
    "end": "2817570"
  },
  {
    "text": "and bundle your JavaScript files so what you end up doing is you have a command line window open somewhere it's running",
    "start": "2817570",
    "end": "2823180"
  },
  {
    "text": "web pack so every time I say the typescript file I can see web pack running rebuilding my bundle putting",
    "start": "2823180",
    "end": "2829810"
  },
  {
    "text": "some output somewhere and then I refresh the browser and now I can test out the code that I just changed in tight script",
    "start": "2829810",
    "end": "2835240"
  },
  {
    "text": "what JavaScript services will do there's actually a whole slew of features that JavaScript services implement but in",
    "start": "2835240",
    "end": "2843130"
  },
  {
    "text": "this repository asp net javascript services it's a new get package that you would install and it includes some middleware which is quite interesting",
    "start": "2843130",
    "end": "2849190"
  },
  {
    "text": "one of the pieces of middleware that it includes that you could use during development is a piece of middleware",
    "start": "2849190",
    "end": "2854920"
  },
  {
    "text": "that integrates with the web pack in a way that you don't have to open the separate command line window to tell web",
    "start": "2854920",
    "end": "2860770"
  },
  {
    "text": "pack to run and it's a piece of middleware that will work with web pack to compile your typescript behind the",
    "start": "2860770",
    "end": "2867340"
  },
  {
    "text": "scenes when you save a file you don't have to explicitly start a tool used we'll just have to write the webpack configuration file and the other thing",
    "start": "2867340",
    "end": "2873910"
  },
  {
    "text": "it'll do is integrate with a web pack development server which is a tool that can push hot reloads into the browser as",
    "start": "2873910",
    "end": "2882130"
  },
  {
    "text": "you change files so in other words with JavaScript services in an asp.net core",
    "start": "2882130",
    "end": "2887440"
  },
  {
    "text": "project I can go in and save a type script file and I don't have to do anything that code will just come into",
    "start": "2887440",
    "end": "2893470"
  },
  {
    "text": "the browser and I can just start working in the browser again I don't have to refresh I don't have to build none of",
    "start": "2893470",
    "end": "2898480"
  },
  {
    "text": "that it's really quite nice and it would look like this I would say most",
    "start": "2898480",
    "end": "2904660"
  },
  {
    "text": "definitely in development only I want to use this web pack dev middleware and enable hot module replacement and so",
    "start": "2904660",
    "end": "2912069"
  },
  {
    "text": "those two lines on a web pack configuration file and your you'll be good to go using webpack I like to use",
    "start": "2912069",
    "end": "2918670"
  },
  {
    "text": "karma as a test runner so that's just a suggestion but I want to have tests from",
    "start": "2918670",
    "end": "2923710"
  },
  {
    "text": "my JavaScript code karma is a tool that will work in an asp.net core project I",
    "start": "2923710",
    "end": "2929890"
  },
  {
    "text": "mean it doesn't know anything about asp.net core room it'll work anywhere it'll work with any framework - it was",
    "start": "2929890",
    "end": "2935200"
  },
  {
    "text": "designed I believe by the angular team but it works with anything anyone used Khan EMU or commander yeah a few people",
    "start": "2935200",
    "end": "2942730"
  },
  {
    "text": "so when you start working with all these command line tools and you start running dotnet in one window and you're running",
    "start": "2942730",
    "end": "2948490"
  },
  {
    "text": "web pack continuously in another window the the built-in command prompt and windows starts to break down a little",
    "start": "2948490",
    "end": "2953980"
  },
  {
    "text": "bit and that's why I like to use Conny me or commander because one of the they're kind of like I term in Mac LF",
    "start": "2953980",
    "end": "2960809"
  },
  {
    "text": "you can open up multiple tabs notice down there at the bottom so I can have multiple tabs with different command",
    "start": "2960809",
    "end": "2966970"
  },
  {
    "text": "windows and I can even tell both of these tools which are you Google for",
    "start": "2966970",
    "end": "2972940"
  },
  {
    "text": "them you'll find the downloads for them to pre pain so I can have different things running in different panes so if",
    "start": "2972940",
    "end": "2978460"
  },
  {
    "text": "I'm running my unit test runner for javascript I can have that in one pane and web pack building my bundle files",
    "start": "2978460",
    "end": "2984220"
  },
  {
    "text": "and transpiling in another pane and in fact let me show you this one of the",
    "start": "2984220",
    "end": "2990819"
  },
  {
    "text": "scripts that I have checked into the project as a little script that I can use which will basically say we're going",
    "start": "2990819",
    "end": "2998319"
  },
  {
    "text": "to start con mu and in one window run NPM watch the watch",
    "start": "2998319",
    "end": "3004020"
  },
  {
    "text": "command another window run my test watch and by the way put that into a new console that is split horizontally this",
    "start": "3004020",
    "end": "3012000"
  },
  {
    "text": "is an ugly syntax icon EMU requires it has to be all on one line and then a",
    "start": "3012000",
    "end": "3017040"
  },
  {
    "text": "third window run karma and split that window vertically so when I come out and actually run that which would be scripts",
    "start": "3017040",
    "end": "3025160"
  },
  {
    "text": "jf what I'll get is this sort of setup which I can throw up on a second monitor",
    "start": "3025160",
    "end": "3030780"
  },
  {
    "text": "in any minute now webpack should kick off in one window and carmen should kick off in the other window and it's just",
    "start": "3030780",
    "end": "3036750"
  },
  {
    "text": "all everything I need is up and running so it's kind of neat I'm going to give",
    "start": "3036750",
    "end": "3042510"
  },
  {
    "text": "it five seconds to try to produce interesting output there we go so fascinating stuff right yes I can see",
    "start": "3042510",
    "end": "3051990"
  },
  {
    "text": "everyone's thrilled all right we'll kill that off and get back to the slides and",
    "start": "3051990",
    "end": "3058860"
  },
  {
    "text": "make sure we get through some content here in the last few minutes client code layout I pretty much described that I",
    "start": "3058860",
    "end": "3064560"
  },
  {
    "text": "like I like I like to have these feature folders and I like to put a component",
    "start": "3064560",
    "end": "3069630"
  },
  {
    "text": "that is specific to a given feature in the feature folder but what about the other JavaScript code that you have to write the stuff that represents your API",
    "start": "3069630",
    "end": "3077160"
  },
  {
    "text": "calls and infrastructure code and logging in your models and stuff like that I like to have a client folder",
    "start": "3077160",
    "end": "3082560"
  },
  {
    "text": "which is at the root of the project that contains the pieces of the application",
    "start": "3082560",
    "end": "3090030"
  },
  {
    "text": "to go to the client so CSS files script files my models and my services that are",
    "start": "3090030",
    "end": "3095820"
  },
  {
    "text": "implemented in typescript and the funny thing about this and then keep the feet thing specific to a feature over here",
    "start": "3095820",
    "end": "3102810"
  },
  {
    "text": "like a component to list golfers the funny thing about this when I tried to six months ago it was not possible the",
    "start": "3102810",
    "end": "3109650"
  },
  {
    "text": "JavaScript tools just were not flexible enough to give me the ability to do this",
    "start": "3109650",
    "end": "3114960"
  },
  {
    "text": "a lot has changed in the last six months a lot has changed both with web pack and with the typescript compiler but",
    "start": "3114960",
    "end": "3121290"
  },
  {
    "text": "especially with the typescript compiler one of the things I can do with typescript if I advanced just a slide",
    "start": "3121290",
    "end": "3128190"
  },
  {
    "text": "here excuse me one of the new features they",
    "start": "3128190",
    "end": "3133380"
  },
  {
    "text": "added is this ability to find your pass and pass basically tell the typescript compiler where do I look to find code so",
    "start": "3133380",
    "end": "3140160"
  },
  {
    "text": "when I'm writing typescript code in the es2015 style and I say import through",
    "start": "3140160",
    "end": "3145860"
  },
  {
    "text": "from bar typescript now if you're using at least version 2.0 it'll go and look",
    "start": "3145860",
    "end": "3151860"
  },
  {
    "text": "for a bar in the node modules folder it will also go look for a bar in the",
    "start": "3151860",
    "end": "3156960"
  },
  {
    "text": "client flash script folder because I've added that as a path and that just allows me to place my code anywhere not",
    "start": "3156960",
    "end": "3164250"
  },
  {
    "text": "have to use crazy relative paths or anything like that inside of my typescript files I can just have well-known modules the typescript goes",
    "start": "3164250",
    "end": "3170760"
  },
  {
    "text": "out and finds and backing up a few slides that allows me to have a client",
    "start": "3170760",
    "end": "3176280"
  },
  {
    "text": "folder and put my script wherever I want it and that's really nice the other thing I would suggest is use nougat as",
    "start": "3176280",
    "end": "3182730"
  },
  {
    "text": "your package manager for all things net use NPM as your package manager for all things JavaScript and that includes",
    "start": "3182730",
    "end": "3188820"
  },
  {
    "text": "front-end frameworks so it's actually I don't want to say it irritates me",
    "start": "3188820",
    "end": "3193950"
  },
  {
    "text": "there's bigger things in life to get irritated about but I find it crazy when people are still sticking to Bower it's",
    "start": "3193950",
    "end": "3200460"
  },
  {
    "text": "not that Bowers a bad tool but NPM has been able to do everything that I need recently so if I went to NPM install",
    "start": "3200460",
    "end": "3206250"
  },
  {
    "text": "bootstrap the CSS framework that's an NPM if I went to NPM install jQuery NPM",
    "start": "3206250",
    "end": "3212190"
  },
  {
    "text": "install Axios all these front-end frameworks and tools I only need NPM for that I don't need Bower so all of my dependencies",
    "start": "3212190",
    "end": "3218370"
  },
  {
    "text": "both server-side and client-side are stored in my NPM BOM so everything to do with JavaScript I just do that",
    "start": "3218370",
    "end": "3224760"
  },
  {
    "text": "with NPM and that includes by the way another thing that they introduced in",
    "start": "3224760",
    "end": "3231330"
  },
  {
    "text": "tight script which is you don't need if anyone who's using typescript if you",
    "start": "3231330",
    "end": "3237360"
  },
  {
    "text": "upgrade to 2.0 or 2.1 I forget the exact version number you don't need the TSD tool or the Taipings tool anymore",
    "start": "3237360",
    "end": "3243890"
  },
  {
    "text": "basically for typescript development if you want type definition files for a framework that you're using like react",
    "start": "3243890",
    "end": "3250740"
  },
  {
    "text": "those used to be available by installing them a PSD then they migrated to Taipings all of that is gone away all of",
    "start": "3250740",
    "end": "3257430"
  },
  {
    "text": "the typing files that you need are any types repository on NPM so now I can use",
    "start": "3257430",
    "end": "3263670"
  },
  {
    "text": "I am for everything I can npm install app types flash jasmine and i have type script definition files for the Jasmine",
    "start": "3263670",
    "end": "3270990"
  },
  {
    "text": "API and it just works it just magically works the only tool I need now is NPM",
    "start": "3270990",
    "end": "3276390"
  },
  {
    "text": "and I get and type script just works and I can use Visual Studio code off the type script and it's beautiful there's a",
    "start": "3276390",
    "end": "3283109"
  },
  {
    "text": "lot less setup setup in fact that's what I do in this project that we're looking",
    "start": "3283109",
    "end": "3288119"
  },
  {
    "text": "at now any USB done that core project that I use are typically use Visual Studio to edit on my c-sharp code",
    "start": "3288119",
    "end": "3294180"
  },
  {
    "text": "because I really like to use resharper but I'll turn to Visual Studio code to do anything with typescript or es2015",
    "start": "3294180",
    "end": "3299430"
  },
  {
    "text": "because it just understands that code a little bit better when it's very good",
    "start": "3299430",
    "end": "3304770"
  },
  {
    "text": "before and because you can point you can point Visual Studio to the same folder as your asp.net core project and because",
    "start": "3304770",
    "end": "3312619"
  },
  {
    "text": "asp.net core isn't tied to Visual Studio anymore and it's just a file system based project layout it just works",
    "start": "3312619",
    "end": "3318690"
  },
  {
    "text": "I consider www root is my bin folder for JavaScript so I don't want to have any",
    "start": "3318690",
    "end": "3324510"
  },
  {
    "text": "jf file that I see in WWE I believe should be safe to the lead I just want",
    "start": "3324510",
    "end": "3329549"
  },
  {
    "text": "to delete it every every Jas file or CS file but CSS file that appears inside of",
    "start": "3329549",
    "end": "3334829"
  },
  {
    "text": "here is something that's been built or minified or processed by some tool and it's been placed here as the output and",
    "start": "3334829",
    "end": "3340890"
  },
  {
    "text": "just like bin-debug and dotnet I'll come",
    "start": "3340890",
    "end": "3347549"
  },
  {
    "text": "back to that one or skip that one for right now because I want to talk about testing it's fine to have a single unit",
    "start": "3347549",
    "end": "3354750"
  },
  {
    "text": "testing project for multiple projects I believe if you look at how Microsoft",
    "start": "3354750",
    "end": "3360380"
  },
  {
    "text": "implements their unit testing project they typically have one unit testing project per project I think for an",
    "start": "3360380",
    "end": "3367140"
  },
  {
    "text": "application development is typically fine if I have a web project and a core project and a domain project I think",
    "start": "3367140",
    "end": "3373140"
  },
  {
    "text": "it's fine to have one unit testing project for all of that I believe unless things get really complex or too complex",
    "start": "3373140",
    "end": "3379290"
  },
  {
    "text": "I prefer to use X unit as my unit testing tool I hope you do too not going",
    "start": "3379290",
    "end": "3384720"
  },
  {
    "text": "to talk about it much but I think a lot of people already use it but I just think it's the best one out there I try",
    "start": "3384720",
    "end": "3390990"
  },
  {
    "text": "to avoid sorry I try to avoid mocks as hard as possible my philosophy into testing has changed a",
    "start": "3390990",
    "end": "3397800"
  },
  {
    "text": "lot over the last five years I started trying to do test-driven development in 2004 and I spent a lot of time with it",
    "start": "3397800",
    "end": "3403740"
  },
  {
    "text": "and I still believe that the best way to come up with a design in a domain that I",
    "start": "3403740",
    "end": "3410520"
  },
  {
    "text": "don't know anything about or with a problem that I don't know how to solve I truly believe the best way to approach",
    "start": "3410520",
    "end": "3415770"
  },
  {
    "text": "that sort of situation is using TDD and trying to unit tests and trying to isolate things however when it comes to",
    "start": "3415770",
    "end": "3422340"
  },
  {
    "text": "implementing an MVC controller I have a pretty a pretty good idea already of how that's going to work and so I'm not",
    "start": "3422340",
    "end": "3428700"
  },
  {
    "text": "interested in TDD my controllers in fact I've also completely lost interest in",
    "start": "3428700",
    "end": "3433890"
  },
  {
    "text": "writing a unit test that will isolate my controllers you might find that controversial we can talk about it or",
    "start": "3433890",
    "end": "3439320"
  },
  {
    "text": "whatever but a few years ago when I was on a project where we were heavily heavily isolating all of our controllers",
    "start": "3439320",
    "end": "3446000"
  },
  {
    "text": "where we shouldn't have a lot of logic anyway but we're trying to isolate them or writing all these marks we are still",
    "start": "3446000",
    "end": "3451740"
  },
  {
    "text": "getting so frustrated by all these stupid little bugs that were found because our unit tests we're not testing",
    "start": "3451740",
    "end": "3458490"
  },
  {
    "text": "the features of the system they were testing that the controller invoked the Maas with the right parameters right so",
    "start": "3458490",
    "end": "3464040"
  },
  {
    "text": "I said let's just throw all that away and write more integration tasks I want to actually invoke the controller and have the controller call a real service",
    "start": "3464040",
    "end": "3471180"
  },
  {
    "text": "to do something with maybe it will mock things out of the database level but as soon as we did that we drop 60% of our",
    "start": "3471180",
    "end": "3478260"
  },
  {
    "text": "test code and there were fewer bugs and so I thought that was a win how do I do",
    "start": "3478260",
    "end": "3484680"
  },
  {
    "text": "integration testing with asp.net core one way - one way to do integration testing is to use the asp.net core test",
    "start": "3484680",
    "end": "3490800"
  },
  {
    "text": "toast the test toast gives you the ability to walk up to your startup file",
    "start": "3490800",
    "end": "3496710"
  },
  {
    "text": "and say configure me a host that has the exact same middle where's my my code would have in production and now let me",
    "start": "3496710",
    "end": "3503760"
  },
  {
    "text": "fire off an HTTP request at it and see what kind of response I get back but it doesn't have to go over the tcp/ip",
    "start": "3503760",
    "end": "3509340"
  },
  {
    "text": "networking stack with the test toast everything can happen in memory and it's a great way to test things like middleware so you want to make sure that",
    "start": "3509340",
    "end": "3515820"
  },
  {
    "text": "the user is rejected an anonymous user is rejected access to such and such a controller action you can do that with",
    "start": "3515820",
    "end": "3522810"
  },
  {
    "text": "asp.net core test toast as you are set up in production the other thing I use when I'm using entity",
    "start": "3522810",
    "end": "3528600"
  },
  {
    "text": "framework is the entity framework in memory provider this is for testing purposes only they don't give you a",
    "start": "3528600",
    "end": "3534480"
  },
  {
    "text": "memory provider to use in production but what this allows me to do is set up a database in memory with the entity",
    "start": "3534480",
    "end": "3540540"
  },
  {
    "text": "framework and now I can write unit tests let's see that would look kind of like",
    "start": "3540540",
    "end": "3550190"
  },
  {
    "text": "this I'm going to actually create my",
    "start": "3550190",
    "end": "3555990"
  },
  {
    "text": "controller pass in a real mediator create a real command saying that I want to create a season and invoke a method",
    "start": "3555990",
    "end": "3563130"
  },
  {
    "text": "on that controller that will go the whole way through the system so it's going to use every real live production",
    "start": "3563130",
    "end": "3568350"
  },
  {
    "text": "component including the entity framework it's just going to write stuff in memory but now I can write assert that I got",
    "start": "3568350",
    "end": "3573750"
  },
  {
    "text": "back a redirect to action result if this is successful I can write an assert that will look in the in-memory database and",
    "start": "3573750",
    "end": "3579660"
  },
  {
    "text": "make sure there's a record there and then throw it all away before the next test so to me it's an integration test",
    "start": "3579660",
    "end": "3585410"
  },
  {
    "text": "but that little bit of code one two three four five six seven eight lines whatever it is more effective than",
    "start": "3585410",
    "end": "3592080"
  },
  {
    "text": "trying to isolate all these independent pieces and test them independently that's just my opinion you can differ if you'd like I have a",
    "start": "3592080",
    "end": "3601170"
  },
  {
    "text": "few setup tips on using the in-memory provider but I'll make the slides available basically I want to way more integration testing for your unit tests",
    "start": "3601170",
    "end": "3607920"
  },
  {
    "text": "at the asp.net core level real quick now so if you're going to write something that's going to be cross-platform and",
    "start": "3607920",
    "end": "3613500"
  },
  {
    "text": "c-sharp code a couple things to be aware of use environment new line don't hard-code /n or slash n /r use past",
    "start": "3613500",
    "end": "3619950"
  },
  {
    "text": "combine if you're trying to build up a path to a file because you don't know if you might be in an environment where there's forward slashes or back slashes",
    "start": "3619950",
    "end": "3626270"
  },
  {
    "text": "do be very careful of environment variables if you want to find out like the home profile for a user the name of",
    "start": "3626270",
    "end": "3632460"
  },
  {
    "text": "those environment variables would be different on different operating systems and I'm tired of the async suffix on",
    "start": "3632460",
    "end": "3639060"
  },
  {
    "text": "async methods so I don't use them anymore and that's my reason but you can",
    "start": "3639060",
    "end": "3644970"
  },
  {
    "text": "always get the slides and look up that reason thank you for coming I hope you enjoyed this that's my email address let",
    "start": "3644970",
    "end": "3649980"
  },
  {
    "text": "me know if you have questions you",
    "start": "3649980",
    "end": "3653510"
  }
]