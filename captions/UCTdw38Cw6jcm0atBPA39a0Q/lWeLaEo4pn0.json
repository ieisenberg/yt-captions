[
  {
    "text": "hello hello London have you had a good week yes are",
    "start": "6359",
    "end": "13599"
  },
  {
    "text": "you absolutely exhausted now hell yeah brain just melting down from Scott",
    "start": "13599",
    "end": "19680"
  },
  {
    "text": "talking to you about immutable State flowing through monads and whatever else Scott talks about uh so yes welcome to",
    "start": "19680",
    "end": "27679"
  },
  {
    "text": "the last Talk of the conference I I believe they now actually refer to this",
    "start": "27679",
    "end": "33800"
  },
  {
    "text": "as the renle slot um they they've always put me on in the last slot because I do",
    "start": "33800",
    "end": "39600"
  },
  {
    "text": "these talks that are not particularly intellectually demanding and I'm not trying to teach you anything I'm just",
    "start": "39600",
    "end": "44640"
  },
  {
    "text": "going of going oh look I found this it's cool um and eventually they got to the point of saying to you know not having",
    "start": "44640",
    "end": "51120"
  },
  {
    "text": "any other talks on at the same time and it became a deao keynote or lock note as they call it which is lovely so yes I'm",
    "start": "51120",
    "end": "57760"
  },
  {
    "text": "Mark renle uh very old and experienced software developer",
    "start": "57760",
    "end": "63879"
  },
  {
    "text": "and relatively new basist and I am going to talk to you about how JavaScript",
    "start": "63879",
    "end": "70960"
  },
  {
    "text": "happened and if from that title you want to infer and how can we stop it from",
    "start": "70960",
    "end": "78439"
  },
  {
    "text": "happening again that's fine but no it's we're going to look at",
    "start": "78439",
    "end": "86159"
  },
  {
    "text": "all the program or not all the programming languages that came before cuz that would be like a two-day workshop uh but no we're going to look",
    "start": "86159",
    "end": "92560"
  },
  {
    "text": "at where various things that we kind of take for granted in programming languages came from along the way and we",
    "start": "92560",
    "end": "100880"
  },
  {
    "text": "are not really we're not going to be mean about any of them and I'm not really going to be mean about JavaScript",
    "start": "100880",
    "end": "107200"
  },
  {
    "text": "um and as I was researching this talk I came across this quote which I think is",
    "start": "107200",
    "end": "112479"
  },
  {
    "text": "uh something we should all remember fla's Axiom there does not now nor will",
    "start": "112479",
    "end": "117799"
  },
  {
    "text": "there ever exist a programming Lang language in which it is the least bit hard to write bad programs over the",
    "start": "117799",
    "end": "125320"
  },
  {
    "text": "course of my career I think I have worked with probably 30 40 different programming",
    "start": "125320",
    "end": "131680"
  },
  {
    "text": "languages and fla's right I've written terrible code in all of them no so yes",
    "start": "131680",
    "end": "140200"
  },
  {
    "text": "so hard to believe though it is now there was a time when there were no",
    "start": "140200",
    "end": "145480"
  },
  {
    "text": "computers and no programming and we all had to have like proper jobs working in",
    "start": "145480",
    "end": "151200"
  },
  {
    "text": "fields and factories and horrible places and this went on for thousands and",
    "start": "151200",
    "end": "158040"
  },
  {
    "text": "thousands of years and then finally in the 19th century uh some people thought",
    "start": "158040",
    "end": "165120"
  },
  {
    "text": "oh I know wouldn't it be good if machines could do more of these things uh more of this thinking stuff for us",
    "start": "165120",
    "end": "172400"
  },
  {
    "text": "and so this person came along somebody has actually already done a talk at this",
    "start": "172400",
    "end": "177599"
  },
  {
    "text": "conference about this young lady uh and this is of course aah love and aah love",
    "start": "177599",
    "end": "184879"
  },
  {
    "text": "was the daughter of the Romantic poet and European syphilis",
    "start": "184879",
    "end": "192040"
  },
  {
    "text": "incubator Lord Byron and so a's mom thought what's the",
    "start": "192040",
    "end": "198840"
  },
  {
    "text": "best thing I can do for my daughter I'm going to keep her the hell away from her dad and so she got private tutors and",
    "start": "198840",
    "end": "207440"
  },
  {
    "text": "aah was educated by these people you all right there y yeah good okay um and she",
    "start": "207440",
    "end": "215519"
  },
  {
    "text": "learned maths and she learned languages and she became a very accomplished young lady and she went to salons in London",
    "start": "215519",
    "end": "223400"
  },
  {
    "text": "salons were places where clever people went to go and be clever at each other and discuss ideas and at one of these",
    "start": "223400",
    "end": "230480"
  },
  {
    "text": "salons she met Charles Babbage and Charles Babbage uh had was in the",
    "start": "230480",
    "end": "236519"
  },
  {
    "text": "process of building the Difference Engine but had gone back to Parliament and said oh I've got a much better idea",
    "start": "236519",
    "end": "243040"
  },
  {
    "text": "for a a new calculating engine which will be even more powerful and he built",
    "start": "243040",
    "end": "248280"
  },
  {
    "text": "a prototype of like one set of rotors of this and aah talked to him about it and",
    "start": "248280",
    "end": "253319"
  },
  {
    "text": "he explained how it would work and she understood it and then uh she was",
    "start": "253319",
    "end": "259280"
  },
  {
    "text": "translating a book written by an Italian about babage and his engines and in the",
    "start": "259280",
    "end": "266320"
  },
  {
    "text": "process of doing that she wrote a program for the calculating engine to",
    "start": "266320",
    "end": "271759"
  },
  {
    "text": "calculate boui numbers now boui numbers I haven't got the faintest idea um but",
    "start": "271759",
    "end": "279080"
  },
  {
    "text": "this is a program to calculate bli numbers and so this is essentially the first computer program the computer that",
    "start": "279080",
    "end": "284520"
  },
  {
    "text": "could run it was never actually built uh and aah died before uh any of this stuff",
    "start": "284520",
    "end": "290960"
  },
  {
    "text": "she died very young actually it's tragic um and then from the mid 19th century up",
    "start": "290960",
    "end": "297160"
  },
  {
    "text": "until uh the sort of end of the first half of the 20th century absolutely nothing happened at",
    "start": "297160",
    "end": "303800"
  },
  {
    "text": "all nothing nobody built anything interesting in that time and then we",
    "start": "303800",
    "end": "310160"
  },
  {
    "text": "thought ah we're bored let's have a war and so all of Europe went way and",
    "start": "310160",
    "end": "316280"
  },
  {
    "text": "started charging at each other in tanks and that sort of thing and the German the Nazis it's very important to say the",
    "start": "316280",
    "end": "323759"
  },
  {
    "text": "Nazis and not the Germans when you're doing this so edit Point um the Nazis",
    "start": "323759",
    "end": "329120"
  },
  {
    "text": "were very good at War and they were very organized and very good at uh sort of",
    "start": "329120",
    "end": "336280"
  },
  {
    "text": "planning things and so forth and they would share their plans using one of these this is the Enigma uh machine and",
    "start": "336280",
    "end": "343919"
  },
  {
    "text": "this they used this to encode messages and send messages around uh and uh we",
    "start": "343919",
    "end": "351000"
  },
  {
    "text": "just had no idea what they were talking about but a guy called Alan churing came along",
    "start": "351000",
    "end": "359280"
  },
  {
    "text": "and building on the work of some Polish Engineers he built this this is a bomb",
    "start": "359280",
    "end": "366160"
  },
  {
    "text": "and this can calculate or test multiple",
    "start": "366160",
    "end": "371319"
  },
  {
    "text": "uh combinations of Enigma machine dials all at the same time but it's not really",
    "start": "371319",
    "end": "376919"
  },
  {
    "text": "a computer it's just a machine that goes kachunk is that right kachunk is that",
    "start": "376919",
    "end": "382039"
  },
  {
    "text": "right and it's doing that on lots of dials all at the same time but uh it was",
    "start": "382039",
    "end": "387080"
  },
  {
    "text": "a machine you built it and you turn it on and it did something and then you",
    "start": "387080",
    "end": "392160"
  },
  {
    "text": "turned it off again so it was uh like a computer but not programmable and then the Germans came",
    "start": "392160",
    "end": "398880"
  },
  {
    "text": "up with this little bugger uh this is a loren Cipher incidentally fun point",
    "start": "398880",
    "end": "404160"
  },
  {
    "text": "about the um the Enigma machine so we cracked this using the bomb uh but there",
    "start": "404160",
    "end": "410160"
  },
  {
    "text": "was this whole thing about we can't let the Germans know we've cranked their code because they'll stop using it and",
    "start": "410160",
    "end": "415720"
  },
  {
    "text": "so we had to act as though we hadn't cracked it and we actually had to let",
    "start": "415720",
    "end": "421039"
  },
  {
    "text": "some terrible things happen because if we had stopped them from happening the Germans would have suspected that we",
    "start": "421039",
    "end": "426560"
  },
  {
    "text": "knew their codes and so forth that's not the interesting bit the interesting bit",
    "start": "426560",
    "end": "431639"
  },
  {
    "text": "is that we didn't tell our allies that we' cracked it either um I think the Americans knew but the Canadians and the",
    "start": "431639",
    "end": "437759"
  },
  {
    "text": "Australians and New Zealand and all our other allies we didn't tell any of them and then when the war finished and we'd",
    "start": "437759",
    "end": "443440"
  },
  {
    "text": "captured all the Enigma machines off the uots and everything else we went to all our allies and we said hey we should to",
    "start": "443440",
    "end": "449639"
  },
  {
    "text": "communicate using these it will keep stuff completely secret and then we spied on our",
    "start": "449639",
    "end": "455240"
  },
  {
    "text": "friends for like 40 years until the official Secrets act expired but yes",
    "start": "455240",
    "end": "460759"
  },
  {
    "text": "anyway the Germans switched to this thing this is the Loren Cipher and um",
    "start": "460759",
    "end": "465879"
  },
  {
    "text": "this is so much more complicated than the Enigma machine so the Enigma machine",
    "start": "465879",
    "end": "472520"
  },
  {
    "text": "has trillions of possible combinations the Loren Cipher has more possible",
    "start": "472520",
    "end": "477560"
  },
  {
    "text": "combinations than there are atoms in the observable universe it's a lot um and we",
    "start": "477560",
    "end": "485440"
  },
  {
    "text": "never captured one of these but just from uh studying the way it encrypted",
    "start": "485440",
    "end": "491479"
  },
  {
    "text": "studying the actual encrypted text uh British Crypt analysts were able to",
    "start": "491479",
    "end": "497000"
  },
  {
    "text": "deduce how the machine worked and they got it exactly right uh so yeah they",
    "start": "497000",
    "end": "502960"
  },
  {
    "text": "figured it out three years before they got their hands on one and then when they did they went ah yes but yeah this",
    "start": "502960",
    "end": "508520"
  },
  {
    "text": "was much more complicated and so we needed to build something more complicated to crank the code and so",
    "start": "508520",
    "end": "515200"
  },
  {
    "text": "Tommy flowers who was a man who worked for the post office on Telephone exchanges uh built this with uh Alan",
    "start": "515200",
    "end": "523560"
  },
  {
    "text": "churing and a bunch of other people and this was the first programmable computer this was Colossus and you could put",
    "start": "523560",
    "end": "529920"
  },
  {
    "text": "different programs in it and it would run them through it was still very much to kind of create the program connect",
    "start": "529920",
    "end": "536560"
  },
  {
    "text": "the machine up with the program wired in turn it on wait it does it and then turn it off again uh but it was",
    "start": "536560",
    "end": "543880"
  },
  {
    "text": "programmable um when the war finished we smashed all these to Pieces because they",
    "start": "543880",
    "end": "550480"
  },
  {
    "text": "were all covered by the official Secrets act and we didn't want anyone to know we had them and so that is why the",
    "start": "550480",
    "end": "556120"
  },
  {
    "text": "Americans think they invented computers um but they didn't but this was the",
    "start": "556120",
    "end": "561720"
  },
  {
    "text": "computer that the Americans invented aniac the electronic numerical",
    "start": "561720",
    "end": "566800"
  },
  {
    "text": "integrator and computer and it's important to remember that at this point",
    "start": "566800",
    "end": "572959"
  },
  {
    "text": "in history computer was still a job title computers worked at the Army and",
    "start": "572959",
    "end": "580440"
  },
  {
    "text": "Navy and Air Force calculating trajectories and all this sort of thing they worked at Nasa um and so yes and",
    "start": "580440",
    "end": "588519"
  },
  {
    "text": "most computers were women because who knew turns out women can do maths too",
    "start": "588519",
    "end": "595640"
  },
  {
    "text": "right wow um and so they need people to program the eniac and you can see three",
    "start": "595640",
    "end": "603160"
  },
  {
    "text": "people uh in this picture programming the eniac and programming the eniac meant patching cables from there to",
    "start": "603160",
    "end": "610959"
  },
  {
    "text": "there and from there to there and so on and so forth and so these are the eniac",
    "start": "610959",
    "end": "616839"
  },
  {
    "text": "programmers K mcnalty Betty Jennings Betty Snider Marilyn westoff Fran beus",
    "start": "616839",
    "end": "622079"
  },
  {
    "text": "and Ruth liman all women uh and the primary reason they were all women so they were",
    "start": "622079",
    "end": "627680"
  },
  {
    "text": "all good at maths and ALS also they had worked on Telephone exchanges during the war most of them and so they were very",
    "start": "627680",
    "end": "634040"
  },
  {
    "text": "good at this whole switching cables around and everything but there was no documentation for the ANC The Men Who",
    "start": "634040",
    "end": "639920"
  },
  {
    "text": "Built it hadn't bothered to say this is how it works and so the women had the kind of blueprints of the thing and they",
    "start": "639920",
    "end": "646959"
  },
  {
    "text": "worked out how to program it um and yes so that was the sort of state of things",
    "start": "646959",
    "end": "655000"
  },
  {
    "text": "for the 1940s late 40s early 50s and then then",
    "start": "655000",
    "end": "660320"
  },
  {
    "text": "IBM came along and IBM had been building essentially very big calculators for a",
    "start": "660320",
    "end": "666160"
  },
  {
    "text": "very long time but IBM came along and they built the 701 Mainframe and",
    "start": "666160",
    "end": "673200"
  },
  {
    "text": "uh you could use this to run complicated",
    "start": "673200",
    "end": "678680"
  },
  {
    "text": "mathematics formulas and you would program these in but this is the formula",
    "start": "678680",
    "end": "684560"
  },
  {
    "text": "for calculating trajectory so Y is X tan Theta uh minus GX 2 over 2 V 2 cine 2",
    "start": "684560",
    "end": "695320"
  },
  {
    "text": "Theta yeah see I don't even understand that I have no idea what's going on with that",
    "start": "695320",
    "end": "701760"
  },
  {
    "text": "but you couldn't just put that into the computer you had to C you had to convert this into machine code so you had to go",
    "start": "701760",
    "end": "709839"
  },
  {
    "text": "right so if I need to do a cosine operation then that's put this value in a register here and put this value in a",
    "start": "709839",
    "end": "716079"
  },
  {
    "text": "register here and then multiply those two things together and then put that back into memory and then get some and you had to be able to work out how to",
    "start": "716079",
    "end": "722320"
  },
  {
    "text": "break it down into all those steps and that was what programming was like in the mid",
    "start": "722320",
    "end": "729040"
  },
  {
    "text": "1950s and then this chap came along this is John bakus John bachus was uh just",
    "start": "729040",
    "end": "736760"
  },
  {
    "text": "wandering down the street in Manhattan one day and he passed IBM's offices and",
    "start": "736760",
    "end": "742519"
  },
  {
    "text": "he looked through the window and he saw the IBM 701 uh through the window and it had all",
    "start": "742519",
    "end": "748839"
  },
  {
    "text": "the flashing lights and everything on it and did you know by the way that the flashing lights on all those main frames",
    "start": "748839",
    "end": "755519"
  },
  {
    "text": "from the sort of ' 50s and 60s mainly marketing um they they did sort of",
    "start": "755519",
    "end": "762600"
  },
  {
    "text": "technically indicate some internal state of the computer but mainly they were there to flash on and off and uh make",
    "start": "762600",
    "end": "768360"
  },
  {
    "text": "the SE Suite think oh I want one of those um but so John Backer saw this and",
    "start": "768360",
    "end": "773959"
  },
  {
    "text": "went in through and said oh what's that thing you've got there and they said that's uh a Mainframe computer and he",
    "start": "773959",
    "end": "780480"
  },
  {
    "text": "went can I get a job working on it I really want to to work on that and they went uh yeah go up to the fifth floor",
    "start": "780480",
    "end": "787160"
  },
  {
    "text": "and do an interview and they did and he got the interview and then he started working at IBM as a programmer and then",
    "start": "787160",
    "end": "794360"
  },
  {
    "text": "they showed him all the machine code and everything else and he thought H there must be a better way and the",
    "start": "794360",
    "end": "802160"
  },
  {
    "text": "reason he thought that is because John bakus was essentially a lazy bastard he did not want to do the work",
    "start": "802160",
    "end": "809639"
  },
  {
    "text": "of figuring out how to translate the formula into machine code you know I've got an incredibly I got the most",
    "start": "809639",
    "end": "816199"
  },
  {
    "text": "powerful machine mankind has ever built here and so why can't I get that to do",
    "start": "816199",
    "end": "822920"
  },
  {
    "text": "the work of translating formulas into machine code for me and this is why lazy",
    "start": "822920",
    "end": "829120"
  },
  {
    "text": "people are such a valuable resource for Humanity because lazy people find the",
    "start": "829120",
    "end": "834440"
  },
  {
    "text": "easy way to do everything and I'm pretty sure that as software developers and",
    "start": "834440",
    "end": "841000"
  },
  {
    "text": "Engineers that's a pretty big part of our job title it's make stuff easy for",
    "start": "841000",
    "end": "846160"
  },
  {
    "text": "other people and the lazier we are the better we are at doing that and so John",
    "start": "846160",
    "end": "851759"
  },
  {
    "text": "bakus having just started at IBM hasn't been working there very long goes to his boss and says I want to write a piece of",
    "start": "851759",
    "end": "859720"
  },
  {
    "text": "software where we can just put in the formulas as like text and it will",
    "start": "859720",
    "end": "865240"
  },
  {
    "text": "automatically generate the uh the machine code for you and his boss went",
    "start": "865240",
    "end": "871880"
  },
  {
    "text": "yeah all right grab a team find an Office crack on because IBM in the 1950s",
    "start": "871880",
    "end": "878560"
  },
  {
    "text": "was apparently very different from IBM now uh cuz if you went to IBM now and I",
    "start": "878560",
    "end": "884920"
  },
  {
    "text": "want to build ah right well we'll schedule a meeting for",
    "start": "884920",
    "end": "891040"
  },
  {
    "text": "2026 so he got his team together this is part of his team reuniting at a at a",
    "start": "891040",
    "end": "896800"
  },
  {
    "text": "conference much much later and over the course of three four years moving around bouncing around offices and different",
    "start": "896800",
    "end": "903480"
  },
  {
    "text": "buildings and staying in hotels opposite offices and all this sort of stuff and they came up with a system that would",
    "start": "903480",
    "end": "911320"
  },
  {
    "text": "translate formulas it was a formula translator and in a fit of naming genius",
    "start": "911320",
    "end": "918120"
  },
  {
    "text": "they called it Fort Tran and it was released in 1957 and",
    "start": "918120",
    "end": "923360"
  },
  {
    "text": "this is fizzbuzz in Fortran um and so you can see here that",
    "start": "923360",
    "end": "930240"
  },
  {
    "text": "there's some stuff that we're already recognizing Okay so we've got uh we've",
    "start": "930240",
    "end": "936279"
  },
  {
    "text": "got a loop there we're not using four for Loops yet so we're saying do uh 40 I equal 1 comma 20 so that says",
    "start": "936279",
    "end": "945639"
  },
  {
    "text": "do everything down to line 40 um for the numbers 1 to 20 uh and put",
    "start": "945639",
    "end": "955880"
  },
  {
    "text": "those into the variable I why I because Fortran had two data types uh",
    "start": "955880",
    "end": "964160"
  },
  {
    "text": "integer and real or floating point and the way that you declared a variable as",
    "start": "964160",
    "end": "970639"
  },
  {
    "text": "being an integer variable was you made its name start with i j k l m or",
    "start": "970639",
    "end": "977360"
  },
  {
    "text": "n variable started with any other letter it was a float it was a real uh this",
    "start": "977360",
    "end": "983519"
  },
  {
    "text": "actually did change in uh fairly quickly you could specify the types of your",
    "start": "983519",
    "end": "989600"
  },
  {
    "text": "variables uh and there's a an old for Trend joke uh God is real unless",
    "start": "989600",
    "end": "995440"
  },
  {
    "text": "declared integer I didn't say it was a good",
    "start": "995440",
    "end": "1000720"
  },
  {
    "text": "joke so yes what this is doing is they're saying okay so start here we're the loop ends at",
    "start": "1000720",
    "end": "1007160"
  },
  {
    "text": "40 um and we're going to assign one thing uh and then we can say if mod I15",
    "start": "1007160",
    "end": "1013120"
  },
  {
    "text": "uh doesn't equal zero then go to 20 skip the next two otherwise print uh asterisk",
    "start": "1013120",
    "end": "1020600"
  },
  {
    "text": "comma 8h FS buuz so strings are prefixed with 8h anything after 8h will just be",
    "start": "1020600",
    "end": "1026160"
  },
  {
    "text": "taken as text um and then continue so go back up to the do uh otherwise we go to",
    "start": "1026160",
    "end": "1032038"
  },
  {
    "text": "20 and if it's five then uh if it's if it's not dividable by five then we go to",
    "start": "1032039",
    "end": "1037079"
  },
  {
    "text": "30 if it's not dividable by three then we go to 40 uh and then down at 40 we",
    "start": "1037079",
    "end": "1042678"
  },
  {
    "text": "just print whatever the number is and then end Loops us back up to the top of the do and so we have loops and we have",
    "start": "1042679",
    "end": "1049320"
  },
  {
    "text": "something like a for we have if statements and we have goto I I like goto uh I know everyone",
    "start": "1049320",
    "end": "1057559"
  },
  {
    "text": "goes oh no you mustn't use goto in your code but the fact is sometimes it is the",
    "start": "1057559",
    "end": "1062919"
  },
  {
    "text": "best way to exit yourself out of three or four levels of loop nested Loop um",
    "start": "1062919",
    "end": "1070280"
  },
  {
    "text": "and also if you compile your code and then let the jit compile your code and then look at the actual generated",
    "start": "1070280",
    "end": "1077600"
  },
  {
    "text": "machine code all your precious structured programming with your loops and your conditionals and everything",
    "start": "1077600",
    "end": "1083440"
  },
  {
    "text": "else you know what those compile to go to so I'm just a low-level",
    "start": "1083440",
    "end": "1091679"
  },
  {
    "text": "programmer so yes but so on this we have",
    "start": "1093159",
    "end": "1098600"
  },
  {
    "text": "um we have if statements uh we have this concept of Loops we have line numbers we have",
    "start": "1098600",
    "end": "1104159"
  },
  {
    "text": "go-tos uh and this this is the other interesting",
    "start": "1104159",
    "end": "1109600"
  },
  {
    "text": "one is the original version of Fortran before they got to the point of people trying to type programs in so they were",
    "start": "1109600",
    "end": "1115520"
  },
  {
    "text": "just writing the programs on Punch Cards across the top and then punching the relevant characters in uh when they got",
    "start": "1115520",
    "end": "1122679"
  },
  {
    "text": "to the point of typing these in on punch card typing machines uh they had been using the times symbol which is not an X",
    "start": "1122679",
    "end": "1130240"
  },
  {
    "text": "it is the times symbols got its own Unicode point now didn't then uh and the",
    "start": "1130240",
    "end": "1136520"
  },
  {
    "text": "machines that they were typing on didn't have a multiplication symbol they had slash for divide and they had plus and minus",
    "start": "1136520",
    "end": "1142840"
  },
  {
    "text": "but they didn't have times and so they went okay what's the nearest thing to",
    "start": "1142840",
    "end": "1148280"
  },
  {
    "text": "times that we've got on there and they decided it was the asterisk and so that",
    "start": "1148280",
    "end": "1153520"
  },
  {
    "text": "is why we still use the asterisk for multiplication and I just that that could have been anything that could they",
    "start": "1153520",
    "end": "1159960"
  },
  {
    "text": "could have made any choice at all and we'd be going oh yes no the at symbol is is what we use for multiplication and",
    "start": "1159960",
    "end": "1166840"
  },
  {
    "text": "then we'd all be using asterisks for Twitter handles so yes the X was replaced with",
    "start": "1166840",
    "end": "1173400"
  },
  {
    "text": "the asterisk and Fortran uh this is a Fortran statement card so",
    "start": "1173400",
    "end": "1182720"
  },
  {
    "text": "it's got 80 usable columns plus a few kind of error correction and everything else uh and every one of these cards was",
    "start": "1182720",
    "end": "1189520"
  },
  {
    "text": "a single line of code which of course meant that no line of code could exceed 80",
    "start": "1189520",
    "end": "1195200"
  },
  {
    "text": "characters and to this day a lot of editors will come with the word wrap set",
    "start": "1195200",
    "end": "1202240"
  },
  {
    "text": "at 80 characters and it still dates back to Punch Cards when they introduced",
    "start": "1202240",
    "end": "1207640"
  },
  {
    "text": "teletypes and and terminals with screens they were 80 characters wide because Punch Cards were 80 characters wide",
    "start": "1207640",
    "end": "1214120"
  },
  {
    "text": "completely arbitrary if Punch Cards had been an extra 40 columns wide then",
    "start": "1214120",
    "end": "1219480"
  },
  {
    "text": "everything would be 120 but no so Fortran the if statement",
    "start": "1219480",
    "end": "1225200"
  },
  {
    "text": "the asterisk for the multiplication operator and I as the iterator variable",
    "start": "1225200",
    "end": "1230960"
  },
  {
    "text": "because if the Only Rule you've got to follow is the variable name must start",
    "start": "1230960",
    "end": "1237159"
  },
  {
    "text": "with I then you immediately go I'm just going to call it I then fine we'll use I",
    "start": "1237159",
    "end": "1242360"
  },
  {
    "text": "so that's that's where we get that from and then this chap came along this is uh",
    "start": "1242360",
    "end": "1247720"
  },
  {
    "text": "Edgar JRA and um he said a lot of things",
    "start": "1247720",
    "end": "1253280"
  },
  {
    "text": "about programming over the course of his career the one that we're worried about here is goto considered harmful he did",
    "start": "1253280",
    "end": "1259840"
  },
  {
    "text": "not like all the go-tos he thought that was chaotic and you know he's got a point when it was the only way of doing",
    "start": "1259840",
    "end": "1266120"
  },
  {
    "text": "control flow not a plan it's just useful in a few occasions he also said some",
    "start": "1266120",
    "end": "1272039"
  },
  {
    "text": "other stuff that's brilliant uh if debugging is the process of removing bugs then programming must be the",
    "start": "1272039",
    "end": "1277320"
  },
  {
    "text": "process of putting them in there you go use that in your job",
    "start": "1277320",
    "end": "1282840"
  },
  {
    "text": "title um he also said something about basic causing irreparable brain damage",
    "start": "1282840",
    "end": "1289000"
  },
  {
    "text": "he did not think people should learn basic as a way of learning programming any VB people in the room nobody oh",
    "start": "1289000",
    "end": "1295760"
  },
  {
    "text": "there we go it's a perfectly cromulent language um so yes and he made this",
    "start": "1295760",
    "end": "1304600"
  },
  {
    "text": "first and said we need structure in our programs we need a way of of structuring them and and making them sane and so a",
    "start": "1304600",
    "end": "1311520"
  },
  {
    "text": "bunch of people got together and they created alol um and alol the first version of",
    "start": "1311520",
    "end": "1316679"
  },
  {
    "text": "alol came out in 1958 you cannot write fizzbuzz in alol 58 because the key",
    "start": "1316679",
    "end": "1325120"
  },
  {
    "text": "feature of fizzbuzz is that it must print Fizz Buzz fizzbuzz or a number and",
    "start": "1325120",
    "end": "1332960"
  },
  {
    "text": "the one thing that alol 58 did not have was",
    "start": "1332960",
    "end": "1338360"
  },
  {
    "text": "output so yes you run an alol program and then check the contents of the memory register at the end and that's",
    "start": "1339039",
    "end": "1344360"
  },
  {
    "text": "where your answer was didn't have a way of doing print alol 60 I think added it uh but so this this is uh Fs buuz in",
    "start": "1344360",
    "end": "1351679"
  },
  {
    "text": "alol 60 so we say begin and integer I and then for I colon equals 1 step one",
    "start": "1351679",
    "end": "1358919"
  },
  {
    "text": "until 100 uh it's actually it's very readable it's one of those languages where you can even non-programmers would",
    "start": "1358919",
    "end": "1365760"
  },
  {
    "text": "be able to come along and if you explained what percent asterisk did uh",
    "start": "1365760",
    "end": "1370799"
  },
  {
    "text": "which is obviously modulus um then that would work and then",
    "start": "1370799",
    "end": "1375840"
  },
  {
    "text": "you got this outst string thing there but you can see uh instead of for transends having the 8h before strings",
    "start": "1375840",
    "end": "1383120"
  },
  {
    "text": "to mark them as strings we put them in quotes uh so alol brings us that",
    "start": "1383120",
    "end": "1388880"
  },
  {
    "text": "idea um and we have four as our looping construct for the first time so we say",
    "start": "1388880",
    "end": "1395039"
  },
  {
    "text": "four each of these things do this thing here um and also semicolons at the end",
    "start": "1395039",
    "end": "1403120"
  },
  {
    "text": "of the statement lines and not at the end of the control flow Lin",
    "start": "1403120",
    "end": "1409840"
  },
  {
    "text": "so uh alol was created by a committee of people and uh John bachus was actually",
    "start": "1409840",
    "end": "1417679"
  },
  {
    "text": "on that committee and he came up with a way of",
    "start": "1417679",
    "end": "1423279"
  },
  {
    "text": "describing the um structure of a computer of a programming language and",
    "start": "1423279",
    "end": "1429480"
  },
  {
    "text": "he called it Backus normal form uh and it looks something like this BNF and we",
    "start": "1429480",
    "end": "1435360"
  },
  {
    "text": "still use this to this day nobody's really come up with people come up with other Alternatives but they are",
    "start": "1435360",
    "end": "1441880"
  },
  {
    "text": "essentially variations on this theme there was another guy on the committee who I forgotten his first name but he",
    "start": "1441880",
    "end": "1447279"
  },
  {
    "text": "was called no um and he suggested some modifications to it and so actually what",
    "start": "1447279",
    "end": "1453320"
  },
  {
    "text": "BNF stands for now is Backus no form uh because somebody said oh we should take the normal out and just have no instead",
    "start": "1453320",
    "end": "1460480"
  },
  {
    "text": "and then you can both have your name on it so yes but we still use this to this day uh there for loops and iteration",
    "start": "1460480",
    "end": "1467600"
  },
  {
    "text": "statements and everything else and so we get quite a lot from alol we get this idea of block structure begins and ends",
    "start": "1467600",
    "end": "1473600"
  },
  {
    "text": "and that sort of thing we get if then else so uh Fortran had if and then the",
    "start": "1473600",
    "end": "1480120"
  },
  {
    "text": "else was basically go to uh but alol had switch so switch",
    "start": "1480120",
    "end": "1486080"
  },
  {
    "text": "something Case Case Case Case Case it had for Loops it had functions it was the first thing with the semicolons at",
    "start": "1486080",
    "end": "1492799"
  },
  {
    "text": "the end and they created the grammar that we still use to describe uh",
    "start": "1492799",
    "end": "1498440"
  },
  {
    "text": "programming languages to this day it never ever took off nobody really liked alcohol nobody used it to build anything",
    "start": "1498440",
    "end": "1505240"
  },
  {
    "text": "of any significance uh all the mathematicians still liked Fortran and",
    "start": "1505240",
    "end": "1510360"
  },
  {
    "text": "we'll see what everybody else was playing with in a moment but just taking one brief detour into there were a lot",
    "start": "1510360",
    "end": "1517799"
  },
  {
    "text": "of alol variants there was a lot of research done in the alol space and one of those was Al W and alol W had records",
    "start": "1517799",
    "end": "1527919"
  },
  {
    "text": "or objects you know like structs an early version of of oop objects and once",
    "start": "1527919",
    "end": "1534960"
  },
  {
    "text": "you've got records you know if you've got numbers you say what what number goes in here it's one to 52 whatever it",
    "start": "1534960",
    "end": "1541799"
  },
  {
    "text": "is uh if you've got records and so you've got a person record and then",
    "start": "1541799",
    "end": "1548039"
  },
  {
    "text": "there's a spouse field in that person record and you're having an unmarried",
    "start": "1548039",
    "end": "1553559"
  },
  {
    "text": "person what do you put in the spouse field and they didn't know uh didn't have any better ideas and so Tony hore",
    "start": "1553559",
    "end": "1560640"
  },
  {
    "text": "invented null uh and yes we are still dealing",
    "start": "1560640",
    "end": "1566559"
  },
  {
    "text": "with that to this day so yes there you go there's some alow gold W there's a",
    "start": "1566559",
    "end": "1572279"
  },
  {
    "text": "record with three integers in it and a reference are and then we assign null to the reference the billion dooll mistake",
    "start": "1572279",
    "end": "1579440"
  },
  {
    "text": "and Counting what other people were doing over at MIT and places like that they",
    "start": "1579440",
    "end": "1586000"
  },
  {
    "text": "were working with lisp so lisp was created by John McCarthy and John",
    "start": "1586000",
    "end": "1591399"
  },
  {
    "text": "McCarthy was uh a student at MIT and then doing postgrad work at MIT and they",
    "start": "1591399",
    "end": "1598080"
  },
  {
    "text": "were dealing with they were looking at artificial intelligence they had very quickly come to the idea that computers",
    "start": "1598080",
    "end": "1603520"
  },
  {
    "text": "would be able to think just like people could think and their best approximation for how people think is that we have",
    "start": "1603520",
    "end": "1610760"
  },
  {
    "text": "lists of stuff and we work out correlations between lists of stuff and",
    "start": "1610760",
    "end": "1616360"
  },
  {
    "text": "that is how and so they modeled that in the programming language a list processing language or",
    "start": "1616360",
    "end": "1623279"
  },
  {
    "text": "lisp and this is fbus in lisp uh and",
    "start": "1623279",
    "end": "1629039"
  },
  {
    "text": "let's sort of I have do I have a pointy thing no never mind um so yes we Define a",
    "start": "1629039",
    "end": "1635320"
  },
  {
    "text": "function called fs buuz and then we say Loop for n from one below 101 do so",
    "start": "1635320",
    "end": "1643320"
  },
  {
    "text": "exclusive um and then we have a we declare another couple functions",
    "start": "1643320",
    "end": "1648880"
  },
  {
    "text": "divisible by three and divisible by five and then that returns true if uh the",
    "start": "1648880",
    "end": "1655279"
  },
  {
    "text": "result of the calculation is zero and then we put a cond in there which is lisps equivalent of a case statement and",
    "start": "1655279",
    "end": "1662159"
  },
  {
    "text": "then we say if there if it's both these things then we do FS buuz otherwise we write this otherwise we write that otherwise we format it like this and",
    "start": "1662159",
    "end": "1668919"
  },
  {
    "text": "then we close all our parentheses at the end does anyone ever actually written production code in lisp it's what",
    "start": "1668919",
    "end": "1675799"
  },
  {
    "text": "rainbow brackets was Bloody invented for just like putting in Brackets until you go it's red yes commit push to GitHub",
    "start": "1675799",
    "end": "1684519"
  },
  {
    "text": "run away before anyone does a code review um but yes lisp was basically the",
    "start": "1684519",
    "end": "1691200"
  },
  {
    "text": "first uh functional programming language it was the first thing where we threw functions around had first class",
    "start": "1691200",
    "end": "1696600"
  },
  {
    "text": "functions all this sort of thing um and another fun aside so those of you have",
    "start": "1696600",
    "end": "1702039"
  },
  {
    "text": "done lisp car and C",
    "start": "1702039",
    "end": "1708519"
  },
  {
    "text": "yeah really weird if you want the first item off a list it's car if you want the",
    "start": "1708519",
    "end": "1716679"
  },
  {
    "text": "rest of that list it's CA because in lisp lists are linked",
    "start": "1716679",
    "end": "1722480"
  },
  {
    "text": "lists um so yeah car and CA not head and tail or head and rest or you know",
    "start": "1722480",
    "end": "1729679"
  },
  {
    "text": "anything like that car and CA um still I think closure even uses supports using",
    "start": "1729679",
    "end": "1736399"
  },
  {
    "text": "car and CA to do this um and they just people go what does that stand for so",
    "start": "1736399",
    "end": "1743159"
  },
  {
    "text": "the IBM 704 which was what lisp was uh built on had 36 bit registers nobody had",
    "start": "1743159",
    "end": "1751919"
  },
  {
    "text": "kind of standardized on let's do multiples of eight or powers of two just kind of like how many bits seems",
    "start": "1751919",
    "end": "1757519"
  },
  {
    "text": "convenient let's do 36 um and you had an address register so",
    "start": "1757519",
    "end": "1764399"
  },
  {
    "text": "the second half of that was an address register the first bit was a register and then you had a couple of",
    "start": "1764399",
    "end": "1771159"
  },
  {
    "text": "spare bits here and there for some other things and so when you were making a linked list you put the value of it into",
    "start": "1771159",
    "end": "1780919"
  },
  {
    "text": "the address register and you put the pointer to the rest of the list into the",
    "start": "1780919",
    "end": "1786360"
  },
  {
    "text": "decrement register and so Kar and CA list people stands for content of",
    "start": "1786360",
    "end": "1792360"
  },
  {
    "text": "address register and content of decrement register and if there's ever",
    "start": "1792360",
    "end": "1798080"
  },
  {
    "text": "ever been a better example of an implementation detail leaking into the",
    "start": "1798080",
    "end": "1804600"
  },
  {
    "text": "user interface for something then I have yet to see it but lisp I",
    "start": "1804600",
    "end": "1811559"
  },
  {
    "text": "mean PE there are people who love lisp and there are variant of lisp going on",
    "start": "1811559",
    "end": "1817519"
  },
  {
    "text": "to this day it's it's an interesting language to learn uh and and worthwhile",
    "start": "1817519",
    "end": "1823679"
  },
  {
    "text": "it does teach you some interesting things but lisp gave us first class functions the idea of a function being",
    "start": "1823679",
    "end": "1829320"
  },
  {
    "text": "also an object that you can pass around and pass into other functions it also",
    "start": "1829320",
    "end": "1834399"
  },
  {
    "text": "was the first programming language with a heap because if you remember I just told you the decrement register",
    "start": "1834399",
    "end": "1840480"
  },
  {
    "text": "contained a pointer to the next item in the list and so that pointer is pointing",
    "start": "1840480",
    "end": "1847279"
  },
  {
    "text": "to a space on a heap and so Lis was the first language with a heap to allocate",
    "start": "1847279",
    "end": "1853080"
  },
  {
    "text": "variables on and once you've got a heap you need garbage collection and lisp",
    "start": "1853080",
    "end": "1858679"
  },
  {
    "text": "even back in 1958 lisp had a garbage collector count the references that were being held to something and if there",
    "start": "1858679",
    "end": "1865000"
  },
  {
    "text": "weren't any it would clear out the Heap um it even had a sort of primitive jit",
    "start": "1865000",
    "end": "1871080"
  },
  {
    "text": "uh so lisp was interpreted uh but it sort of they it was the first place where something",
    "start": "1871080",
    "end": "1877559"
  },
  {
    "text": "resembling a jit was included in a programming language it would do some optimization if it had the",
    "start": "1877559",
    "end": "1885519"
  },
  {
    "text": "opportunity Alo meanwhile uh",
    "start": "1886399",
    "end": "1891679"
  },
  {
    "text": "evolved um was the basis for simul and simular was the first objectoriented",
    "start": "1891679",
    "end": "1898240"
  },
  {
    "text": "programming language it was created at the uh University of nor elow or it was",
    "start": "1898240",
    "end": "1904440"
  },
  {
    "text": "in Norway anyway so very NDC relevant uh but yes simul was the first language to",
    "start": "1904440",
    "end": "1910120"
  },
  {
    "text": "introduce the idea of object orientation not small talk as people often think similar um so this is fsb's",
    "start": "1910120",
    "end": "1918559"
  },
  {
    "text": "written very badly in similar and you can see it's kind of Alo because we",
    "start": "1918559",
    "end": "1924039"
  },
  {
    "text": "still got colon equals for assignment we've got the semicolons at the end there outst string has become out text",
    "start": "1924039",
    "end": "1930240"
  },
  {
    "text": "but it's pretty much the same thing it's just now we've got new and inventive ways to make our code much more",
    "start": "1930240",
    "end": "1936600"
  },
  {
    "text": "complicated uh because we can put all the stuff inside there into a class printer and then we say ref printer p p",
    "start": "1936600",
    "end": "1943960"
  },
  {
    "text": "is a new printer with three Fizz five and Buzz uh and then we can just call p.",
    "start": "1943960",
    "end": "1949720"
  },
  {
    "text": "print and the advantage here obviously is that you're passing in the numbers and the words that go with those numbers",
    "start": "1949720",
    "end": "1956720"
  },
  {
    "text": "to the class and then they become part of that class's state and so you can change the behavior by constructing the",
    "start": "1956720",
    "end": "1963480"
  },
  {
    "text": "class differently so this is where object orientation reared its ugly head and",
    "start": "1963480",
    "end": "1971919"
  },
  {
    "text": "from simula we took classes and inheritance polymorphism so you could inherit one class could inherit another",
    "start": "1971919",
    "end": "1978880"
  },
  {
    "text": "class and then override some of its Behavior so we had polymorphism um and also the idea of scope for members of a",
    "start": "1978880",
    "end": "1986720"
  },
  {
    "text": "class so private public protected that sort of",
    "start": "1986720",
    "end": "1991960"
  },
  {
    "text": "thing um and then this this happened has anyone written code in",
    "start": "1991960",
    "end": "1997760"
  },
  {
    "text": "APL um or Q kql that's kind of uh",
    "start": "1997760",
    "end": "2003679"
  },
  {
    "text": "similar to APL um but yes APL was created Ed in",
    "start": "2003679",
    "end": "2009600"
  },
  {
    "text": "1967 by uh this chap um whose name completely eludes me all of a sudden yay",
    "start": "2009600",
    "end": "2017799"
  },
  {
    "text": "probably early on set Alzheimer's uh Kenneth Iverson that's it it's just written in squiggly text um and he",
    "start": "2017799",
    "end": "2024639"
  },
  {
    "text": "taught programming and he didn't want to teach programming using basic he didn't want to teach programming using Pascal",
    "start": "2024639",
    "end": "2030320"
  },
  {
    "text": "or algol or Fortran or whatever he wanted to reduce programming to Purity",
    "start": "2030320",
    "end": "2036880"
  },
  {
    "text": "the purity of communicating your thoughts and intentions to the machine and so he created his own",
    "start": "2036880",
    "end": "2045080"
  },
  {
    "text": "programming language which he called APL which stands for a programming",
    "start": "2045080",
    "end": "2053960"
  },
  {
    "text": "language love to meet his kids son and",
    "start": "2054879",
    "end": "2061839"
  },
  {
    "text": "daughter um so yes this is fizzbuzz in APL",
    "start": "2062440",
    "end": "2069720"
  },
  {
    "text": "I have no idea how that I did know how that worked when I when I actually made this slide I knew how it worked it's",
    "start": "2070720",
    "end": "2076919"
  },
  {
    "text": "gone it does not APL does not stay in my head the thing about APL though is that",
    "start": "2076919",
    "end": "2083000"
  },
  {
    "text": "it works on arrays like all at the same time so you don't have to say 4 I equals 1 to array.",
    "start": "2083000",
    "end": "2090200"
  },
  {
    "text": "length do something you just go do this to everything in that array and put the results of that into this array over",
    "start": "2090200",
    "end": "2096960"
  },
  {
    "text": "here and so what this this doesn't print anything I don't think um but it does take an array of numbers from one to 100",
    "start": "2096960",
    "end": "2105880"
  },
  {
    "text": "and then run a single operation which then has you have another array which",
    "start": "2105880",
    "end": "2111079"
  },
  {
    "text": "contains Fizz and Buzz and Fizz buzz and and numbers um and it's a single line of",
    "start": "2111079",
    "end": "2116520"
  },
  {
    "text": "code and you may notice some things in this that would",
    "start": "2116520",
    "end": "2122400"
  },
  {
    "text": "make it a little bit hard to type that's",
    "start": "2122400",
    "end": "2127480"
  },
  {
    "text": "not a lowercase w uh I don't know what that is there in front of those ones and those two",
    "start": "2127480",
    "end": "2134720"
  },
  {
    "text": "there's an oout that's lost its o which is just a",
    "start": "2134720",
    "end": "2140359"
  },
  {
    "text": "tragedy um but yes things that are not on a normal keyboard it had stopped the",
    "start": "2140359",
    "end": "2145800"
  },
  {
    "text": "Fortran people from using the multiplication table but it didn't stop Kenneth Iverson from using most of the",
    "start": "2145800",
    "end": "2152240"
  },
  {
    "text": "Greek alphabet and some ink splatters that he thought were a good idea and he threw them all in there and so if you",
    "start": "2152240",
    "end": "2158839"
  },
  {
    "text": "wanted to do Kenneth Iverson's course on programming you had to buy a keyboard",
    "start": "2158839",
    "end": "2165440"
  },
  {
    "text": "This is an APL keyboard and yes also no",
    "start": "2165440",
    "end": "2172880"
  },
  {
    "text": "um but yes you had to and today people actually um still write APL code uh and",
    "start": "2172880",
    "end": "2182000"
  },
  {
    "text": "there are sort of shortcut versions of the things but there are still people who have APL keyboards and are writing",
    "start": "2182000",
    "end": "2188960"
  },
  {
    "text": "useful code in them I mean you know that's fizzbuzz you think that's quite impressive",
    "start": "2188960",
    "end": "2195480"
  },
  {
    "text": "that is not what it's supposed to be I've copied and pasted a slide and Bug it up somewhere I've got",
    "start": "2195480",
    "end": "2203319"
  },
  {
    "text": "um Conway's Game of Life it's actually shorter it's it's just squiggles there's",
    "start": "2203319",
    "end": "2210440"
  },
  {
    "text": "nothing recognizable in there at all but it's the whole of Conway's Game of Life in a single line of APL uh that looks",
    "start": "2210440",
    "end": "2217960"
  },
  {
    "text": "like it would probably decrypt and translate into the location of Caesar's",
    "start": "2217960",
    "end": "2223560"
  },
  {
    "text": "tomb but APL had Dynamic types so that thing of having an array and putting",
    "start": "2223560",
    "end": "2229599"
  },
  {
    "text": "Fizz and Buzz and numbers into it it didn't have the concept of uh variables",
    "start": "2229599",
    "end": "2235880"
  },
  {
    "text": "having a type so you could have it was an array of things and you could put numbers in there you could put strings",
    "start": "2235880",
    "end": "2240920"
  },
  {
    "text": "in there you could put booleans in there you could do whatever you like and so we have APL to thank for dynamic typing",
    "start": "2240920",
    "end": "2249480"
  },
  {
    "text": "over in the sort of more sane part of the world and throughout the 1960s we had B and bcpl batch Control",
    "start": "2249480",
    "end": "2258319"
  },
  {
    "text": "process language and Control process language um and so these were sort of iterating on alol and trying to turn it",
    "start": "2258319",
    "end": "2265960"
  },
  {
    "text": "into something usable and so this is uh FS buuz written in B and you can see at",
    "start": "2265960",
    "end": "2274280"
  },
  {
    "text": "the top there it's starting to look quite a lot like C at this point uh we've got get lib header so that's",
    "start": "2274280",
    "end": "2280480"
  },
  {
    "text": "like an import thing at the top there um and then we say let's start B because",
    "start": "2280480",
    "end": "2286160"
  },
  {
    "text": "how it that's a lovely way to define a function let this be something it's like",
    "start": "2286160",
    "end": "2292880"
  },
  {
    "text": "very John lenon or possibly Captain bicard um so we let start be this",
    "start": "2292880",
    "end": "2299119"
  },
  {
    "text": "function uh and then we essentially have uh something resembling although some",
    "start": "2299119",
    "end": "2305240"
  },
  {
    "text": "we've decided no let's not use if let's use test instead that's a much better way of wasting two extra characters on",
    "start": "2305240",
    "end": "2313280"
  },
  {
    "text": "every line this is still at a time when those two extra characters it's like when a bit of memory a bit of memory",
    "start": "2313280",
    "end": "2319599"
  },
  {
    "text": "cost like 10 cents um so yes they obviously had money to burn over at Bell",
    "start": "2319599",
    "end": "2325680"
  },
  {
    "text": "Labs but other than that looks pretty much like alol all that sort of thing uh we have right s to write a string and",
    "start": "2325680",
    "end": "2332319"
  },
  {
    "text": "write n to write a number we've got rid of the semicolons at this point we don't like the semicolons",
    "start": "2332319",
    "end": "2338160"
  },
  {
    "text": "um but the other fun thing so remember the times symbol wasn't on the keyboard",
    "start": "2338160",
    "end": "2344480"
  },
  {
    "text": "uh curly braces also were not in the 7bit asy um standard that existed at the",
    "start": "2344480",
    "end": "2352160"
  },
  {
    "text": "time that this was created uh it was added in fairly quickly um after this but it did not",
    "start": "2352160",
    "end": "2359240"
  },
  {
    "text": "have curly braces and so if you were working with that pre sort of Proto aski",
    "start": "2359240",
    "end": "2364560"
  },
  {
    "text": "that didn't have them then you could just use dollar uh and normal parentheses instead it meant the same",
    "start": "2364560",
    "end": "2372480"
  },
  {
    "text": "thing so bcpl gave us curly braces even though most people at the time couldn't",
    "start": "2372480",
    "end": "2378560"
  },
  {
    "text": "use the curly braces because it wasn't in the character set that they were working with but they had them",
    "start": "2378560",
    "end": "2385880"
  },
  {
    "text": "anyway and of course bcpl eventually in 1972 became C the first uh and last",
    "start": "2385880",
    "end": "2396800"
  },
  {
    "text": "language that anybody ever needed so C was created uh to build",
    "start": "2396800",
    "end": "2403839"
  },
  {
    "text": "Unix uh which was a joke operating system so the people who made Unix had",
    "start": "2403839",
    "end": "2409200"
  },
  {
    "text": "been working on something called multics which was an absolute disaster one of those famously disastrous software",
    "start": "2409200",
    "end": "2415400"
  },
  {
    "text": "project uh and they went let's make a a sort of simpler version of this and we'll call it Unix and it's just a bit",
    "start": "2415400",
    "end": "2421240"
  },
  {
    "text": "of a joke and they what language are we going to write it in and I'm pretty sure they went oh let's make a j joke",
    "start": "2421240",
    "end": "2427560"
  },
  {
    "text": "language and we'll call it c um where approximately 50% of the things that you",
    "start": "2427560",
    "end": "2433240"
  },
  {
    "text": "can type cause undefined behavior and then we'll write all about",
    "start": "2433240",
    "end": "2439440"
  },
  {
    "text": "it in this book which I learned programming from and the C programming language by kernigan and Richie who",
    "start": "2439440",
    "end": "2447240"
  },
  {
    "text": "worked on the language itself and on Unix uh was the first place that in",
    "start": "2447240",
    "end": "2453200"
  },
  {
    "text": "teaching you to program the first thing it taught you was hello world they",
    "start": "2453200",
    "end": "2458800"
  },
  {
    "text": "invented the idea of hello world without the exclamation mark with the comma",
    "start": "2458800",
    "end": "2464880"
  },
  {
    "text": "without the exclamation mark so people who add the exclamation mark to hello world are exactly as sick as I has",
    "start": "2464880",
    "end": "2472599"
  },
  {
    "text": "always thought they were so yes this is FS buuz Inc in main",
    "start": "2472599",
    "end": "2479920"
  },
  {
    "text": "void got include up at the top there and I don't really need to explain this because I'm pretty sure the majority of",
    "start": "2479920",
    "end": "2485839"
  },
  {
    "text": "people are used to working with C like languages and that's what we call them",
    "start": "2485839",
    "end": "2491319"
  },
  {
    "text": "we call them C like C style syntax curly braces semicolons that's a c style",
    "start": "2491319",
    "end": "2497400"
  },
  {
    "text": "language uh so yes but we have our for Loop this is where we get our for loop with the three sections and the I equals",
    "start": "2497400",
    "end": "2505160"
  },
  {
    "text": "1 and I is less than 100 and i++ um and actually still today a lot of",
    "start": "2505160",
    "end": "2511520"
  },
  {
    "text": "people what they don't realize is that that's that's the simplest form of a for",
    "start": "2511520",
    "end": "2517000"
  },
  {
    "text": "Loop you can put as many initializations as you like before that first semicolon you",
    "start": "2517000",
    "end": "2523400"
  },
  {
    "text": "can say IAL 1 JAL 2 p equals 7 um and then you can put insanely complicated",
    "start": "2523400",
    "end": "2529800"
  },
  {
    "text": "conditions because that thing in the second section just has to be a condition that resolves to a Boolean and",
    "start": "2529800",
    "end": "2536760"
  },
  {
    "text": "then you can do whatever you like in that last bit as well you don't just have to add one to I you can read a",
    "start": "2536760",
    "end": "2543240"
  },
  {
    "text": "record from a database um I've written some truly horrendous for Loops I once",
    "start": "2543240",
    "end": "2548440"
  },
  {
    "text": "wrote an ISBN number validator for a friend of mine uh who was asking for",
    "start": "2548440",
    "end": "2554920"
  },
  {
    "text": "help with their C++ homework and so I wrote them the proper version of it and then I reduced it to a for loop with a",
    "start": "2554920",
    "end": "2561040"
  },
  {
    "text": "semicolon at the end and they showed it to their teacher who said never ask him",
    "start": "2561040",
    "end": "2567119"
  },
  {
    "text": "for help with your homework again um cuz that's the great thing",
    "start": "2567119",
    "end": "2572720"
  },
  {
    "text": "about C is yeah you can write nice clean clear code like this to do fizzbuzz or",
    "start": "2572720",
    "end": "2579119"
  },
  {
    "text": "you can do this uh which that's fizzbuzz doesn't",
    "start": "2579119",
    "end": "2584920"
  },
  {
    "text": "have you that you can't find fuzz Fizz or Buzz or or anything in there but that",
    "start": "2584920",
    "end": "2592280"
  },
  {
    "text": "is fizzbuzz in sea and there's a there's a competition",
    "start": "2592280",
    "end": "2599559"
  },
  {
    "text": "every year the international obfuscated sea contest where people compete to see who can write the most obscure",
    "start": "2599559",
    "end": "2607480"
  },
  {
    "text": "uh C code and it's people draw pictures and asky art that compiles and coins and",
    "start": "2607480",
    "end": "2613119"
  },
  {
    "text": "all sorts of mad stuff and other programming languages obviously some are",
    "start": "2613119",
    "end": "2618640"
  },
  {
    "text": "better at this than others uh but JavaScript that's valid JavaScript um",
    "start": "2618640",
    "end": "2624960"
  },
  {
    "text": "Dylan Bey has a talk where he can explain why uh and I I beg you please go",
    "start": "2624960",
    "end": "2631119"
  },
  {
    "text": "and see that talk because I can't explain why but it's something to do with the type coercion and so you can",
    "start": "2631119",
    "end": "2639000"
  },
  {
    "text": "get like the o b j e c and T out of the word object and then put them it's all very very complicated but that is",
    "start": "2639000",
    "end": "2645920"
  },
  {
    "text": "apparently I I did run it in a console um and it does print the numbers from one to",
    "start": "2645920",
    "end": "2651880"
  },
  {
    "text": "100 but from C we got uh what we now call C style uh we got hello world as",
    "start": "2651880",
    "end": "2658440"
  },
  {
    "text": "your first thing uh and we got the idea of truthiness as well so truthiness was",
    "start": "2658440",
    "end": "2664400"
  },
  {
    "text": "the first one C was the first language where you say if Boolean do something it",
    "start": "2664400",
    "end": "2669680"
  },
  {
    "text": "would go yep if number and it would go oh well if the number is zero then we'll",
    "start": "2669680",
    "end": "2676480"
  },
  {
    "text": "call that false every other number in existence we will call true the concept",
    "start": "2676480",
    "end": "2681800"
  },
  {
    "text": "of truthiness which is why you could write while C equals getar when you're reading from standard input or from a",
    "start": "2681800",
    "end": "2687800"
  },
  {
    "text": "file uh so it would do the assignment and then say ah the value of that assignment was not zero and so we will",
    "start": "2687800",
    "end": "2693880"
  },
  {
    "text": "carry on so thank you C for truthiness thank you you for uh giving that and",
    "start": "2693880",
    "end": "2699440"
  },
  {
    "text": "obis skating code the whole idea of obis skating code came from C uh simula meanwhile had evolved 10",
    "start": "2699440",
    "end": "2707520"
  },
  {
    "text": "years later into small talk Small Talk was created at the paloalto research center uh also known as Xerox Park and",
    "start": "2707520",
    "end": "2716559"
  },
  {
    "text": "Xerox were building the future of computing they really were as well they were building graphical user interfaces",
    "start": "2716559",
    "end": "2723920"
  },
  {
    "text": "they were building a machine it actually did have the the green layout was pretty much A4 or I think what the Americans",
    "start": "2723920",
    "end": "2730040"
  },
  {
    "text": "call letter because you're typing a document what you see is what you get and it makes sense to have it that way",
    "start": "2730040",
    "end": "2736839"
  },
  {
    "text": "round don't know how we switch back to going oh let's just keep making screens wider and wider um but yes and so the",
    "start": "2736839",
    "end": "2744680"
  },
  {
    "text": "idea obviously windows are objects buttons are objects so it makes sense to use an objectoriented system for",
    "start": "2744680",
    "end": "2752200"
  },
  {
    "text": "building uh a graphical user interface and also we need a way to because we're",
    "start": "2752200",
    "end": "2757480"
  },
  {
    "text": "no longer sort of giving the user a choice and then waiting for them to make it and then uh reacting to that choice",
    "start": "2757480",
    "end": "2765800"
  },
  {
    "text": "we're basically giving the user a page and saying you can do whatever you like you can click this you can click that",
    "start": "2765800",
    "end": "2771240"
  },
  {
    "text": "you can put the cursor here and you can type and so suddenly we're responding to",
    "start": "2771240",
    "end": "2776280"
  },
  {
    "text": "any one of an array an array of available inputs um and so small talk introduced",
    "start": "2776280",
    "end": "2783319"
  },
  {
    "text": "the idea of message passing the idea that you could trigger functional ity in an object by sending a message from",
    "start": "2783319",
    "end": "2789520"
  },
  {
    "text": "another object like the mouse uh or the operating system or whatever it might be",
    "start": "2789520",
    "end": "2795319"
  },
  {
    "text": "uh so this is fizzbuzz in small talk um again not really going to dig",
    "start": "2795319",
    "end": "2803800"
  },
  {
    "text": "into that too much uh but there is a um we have a we're extending the integer",
    "start": "2803800",
    "end": "2810599"
  },
  {
    "text": "class so small talk enabled this idea of monkey patching if you've ever worked on Ruby Code Monkey patching is the thing",
    "start": "2810599",
    "end": "2818119"
  },
  {
    "text": "that probably made you want to kill somebody um so yes we are adding a fizzbuzz function to integer and then we",
    "start": "2818119",
    "end": "2827000"
  },
  {
    "text": "take in uh the FB bit here and then we do something and I don't know and to 100",
    "start": "2827000",
    "end": "2835640"
  },
  {
    "text": "and so forth but this then becomes a static FS buuz uh function on the integer",
    "start": "2835640",
    "end": "2841559"
  },
  {
    "text": "class um now uh you have a sort of been in a",
    "start": "2841559",
    "end": "2847359"
  },
  {
    "text": "JavaScript class or read a JavaScript tutorial book and it it talks about this idea of everything is an object",
    "start": "2847359",
    "end": "2852880"
  },
  {
    "text": "everything is an object Nan that's an object type of Nan object um actually no",
    "start": "2852880",
    "end": "2858440"
  },
  {
    "text": "type of Nan is number isn't it anyway but yeah so this is from the uh",
    "start": "2858440",
    "end": "2864839"
  },
  {
    "text": "the Wikipedia entry since all values are objects classes are also objects each class is an instance of the meta class",
    "start": "2864839",
    "end": "2870200"
  },
  {
    "text": "of that class meta classes are in turn also objects and are all instances of a",
    "start": "2870200",
    "end": "2875720"
  },
  {
    "text": "class called meta class which is an object code blocks small talks way of",
    "start": "2875720",
    "end": "2881280"
  },
  {
    "text": "expressing Anonymous functions are also objects so yes this idea of everything being an object that JavaScript has uh",
    "start": "2881280",
    "end": "2888680"
  },
  {
    "text": "came from small talk but so did reflection Small Talk was the first language where you could uh reflect on",
    "start": "2888680",
    "end": "2894200"
  },
  {
    "text": "the code the type system and everything at runtime and change your behavior and pick up missing methods and that sort of",
    "start": "2894200",
    "end": "2900280"
  },
  {
    "text": "thing uh it was the first language that had a console for writing debug output",
    "start": "2900280",
    "end": "2905680"
  },
  {
    "text": "to that would go to a separate window on the uh graphical user interface um it",
    "start": "2905680",
    "end": "2912000"
  },
  {
    "text": "was the first system that had a virtual machine so you could reimplement the small talk virtual machine for a",
    "start": "2912000",
    "end": "2917480"
  },
  {
    "text": "different CPU architecture and then run your small talk code on that virtual",
    "start": "2917480",
    "end": "2923800"
  },
  {
    "text": "machine uh it was the first thing that had a proper jit um although technically",
    "start": "2923800",
    "end": "2929920"
  },
  {
    "text": "still not so we had a sort of jit in the very early version of lisp and then 19",
    "start": "2929920",
    "end": "2937880"
  },
  {
    "text": "uh wherever we are with small talk I forget the date 72 1972 with small talk we have a",
    "start": "2937880",
    "end": "2946160"
  },
  {
    "text": "jit but actually there had already been a jit implemented uh 3 years previously",
    "start": "2946160",
    "end": "2953000"
  },
  {
    "text": "to Small Talk guess what the first jit uh was was made for it's regular",
    "start": "2953000",
    "end": "2961440"
  },
  {
    "text": "Expressions so yes somebody implementing regular expressions and when these are slow I'm going to compile this to",
    "start": "2961440",
    "end": "2967720"
  },
  {
    "text": "machine code um and everything being an object came from small talk as",
    "start": "2967720",
    "end": "2973000"
  },
  {
    "text": "well um honestly not entirely clear what that",
    "start": "2973000",
    "end": "2979760"
  },
  {
    "text": "is uh and I have no notes on my slide yeah no notes that's just a",
    "start": "2979760",
    "end": "2986000"
  },
  {
    "text": "mystery slide never mind okay lisp functional programming had evolved into",
    "start": "2986000",
    "end": "2992920"
  },
  {
    "text": "ml at this point and we still have ml with us today m l became camel became o",
    "start": "2992920",
    "end": "2998119"
  },
  {
    "text": "camel became FP and uh you can trace a direct line through those and you can",
    "start": "2998119",
    "end": "3004040"
  },
  {
    "text": "sort of see that coming here uh we have a fun uh FB stru takes a takes a value",
    "start": "3004040",
    "end": "3011920"
  },
  {
    "text": "and then there's a case against it does this structural pattern matching that we've got here which um as we all know C",
    "start": "3011920",
    "end": "3020040"
  },
  {
    "text": "invented quite recently Isaac in the room um",
    "start": "3020040",
    "end": "3027599"
  },
  {
    "text": "and uh and we have the uh equals greater than the the Lambda syntax this was the",
    "start": "3027599",
    "end": "3034079"
  },
  {
    "text": "first language to use that equals greater than as a kind of goes to thing",
    "start": "3034079",
    "end": "3040240"
  },
  {
    "text": "uh that we still use for Lambda syntax today um so yes ml gave us the arrow",
    "start": "3040240",
    "end": "3047720"
  },
  {
    "text": "function syntax and uh I it did give us pattern matching as well so pattern",
    "start": "3047720",
    "end": "3053400"
  },
  {
    "text": "matching came from ml it doesn't get mentioned because JavaScript doesn't do it uh and we're only talking about",
    "start": "3053400",
    "end": "3060079"
  },
  {
    "text": "that's also why Cobalt isn't in here I'm going to do a whole other talk about the dead end languages like Cobalt that was",
    "start": "3060079",
    "end": "3066599"
  },
  {
    "text": "such a bad idea that JavaScript even JavaScript hasn't taken anything from",
    "start": "3066599",
    "end": "3073720"
  },
  {
    "text": "Cobalt apart from maybe angular um the other thing that came out of lisp",
    "start": "3073720",
    "end": "3080960"
  },
  {
    "text": "was scheme which was a very very simplified version of lisp uh which AEL and susman uh created to teach their uh",
    "start": "3080960",
    "end": "3090079"
  },
  {
    "text": "introduction to computer programming 601 at MIT and you can still to this you can",
    "start": "3090079",
    "end": "3095720"
  },
  {
    "text": "download for free off the internet structure and interpretation of computer",
    "start": "3095720",
    "end": "3101720"
  },
  {
    "text": "programs which is starting from absolute first principles using scheme as the programming language and it will teach",
    "start": "3101720",
    "end": "3108200"
  },
  {
    "text": "you Loops iteration recursion all this sort of stuff doesn't even in invoke the",
    "start": "3108200",
    "end": "3114319"
  },
  {
    "text": "idea of mutable State and till chapter 7 objects so later on in the book but yes",
    "start": "3114319",
    "end": "3121119"
  },
  {
    "text": "so scheme it's it's lisp it's just a a simplified version of lisp someone says",
    "start": "3121119",
    "end": "3126920"
  },
  {
    "text": "Implement a programming language uh as quickly as possible Implement a scheme",
    "start": "3126920",
    "end": "3132280"
  },
  {
    "text": "it's very very quick it's just you know the passer is also lisp programs and",
    "start": "3132280",
    "end": "3138079"
  },
  {
    "text": "scheme programs are also just lists so the syntax is also the data structure is",
    "start": "3138079",
    "end": "3143480"
  },
  {
    "text": "it's very very simple to build one of these things um and so actually what we get from lisp",
    "start": "3143480",
    "end": "3150599"
  },
  {
    "text": "and scheme but scheme in particular is the idea of being a scheme because when",
    "start": "3150599",
    "end": "3156880"
  },
  {
    "text": "they went to Brendan Ike and said write a language in 10 days he went write scheme and and he built it and it was he",
    "start": "3156880",
    "end": "3163599"
  },
  {
    "text": "built he integrated scheme into the browser and then he took it to the the",
    "start": "3163599",
    "end": "3168960"
  },
  {
    "text": "suits and they went well no cuz we're competing with Java so could you make it look more like Java because obviously if",
    "start": "3168960",
    "end": "3175680"
  },
  {
    "text": "you want to compete with something you have to look like it and so he went and he made his scheme look like Java even",
    "start": "3175680",
    "end": "3182599"
  },
  {
    "text": "though under the covers it was still basically scheme um up in the top sort of",
    "start": "3182599",
    "end": "3188480"
  },
  {
    "text": "structured part of the world C uh and simul came together in an Unholy",
    "start": "3188480",
    "end": "3194079"
  },
  {
    "text": "Alliance and formed C++ and I've taken the branch there from simula rather than",
    "start": "3194079",
    "end": "3199240"
  },
  {
    "text": "small talk because small talk did objectoriented programming right and C++",
    "start": "3199240",
    "end": "3204400"
  },
  {
    "text": "did objectoriented programming and and everything else wrong and is insanely",
    "start": "3204400",
    "end": "3209480"
  },
  {
    "text": "popular to this day this is the man who created it and this is what he himself said about it C makes it easy to shoot",
    "start": "3209480",
    "end": "3215960"
  },
  {
    "text": "yourself in the foot C++ makes it harder but when you do it blows your whole leg",
    "start": "3215960",
    "end": "3222559"
  },
  {
    "text": "off hands up anyone who's ever blown their own leg off with C++ yeah com interrup in C++ that won't",
    "start": "3222559",
    "end": "3232000"
  },
  {
    "text": "just blow your leg off that'll take out the whole floor underneath you as",
    "start": "3232000",
    "end": "3237880"
  },
  {
    "text": "well this is fizzbuzz in C++ this is the weirdest thing I I will",
    "start": "3237880",
    "end": "3244119"
  },
  {
    "text": "never when I sort of picked up the book having knowing C and being able to write",
    "start": "3244119",
    "end": "3250200"
  },
  {
    "text": "sort of Fairly complicated things in C and it's kind of like C++ he's just going to have added some stuff no no now",
    "start": "3250200",
    "end": "3256920"
  },
  {
    "text": "we no longer have print F and just pass some values to it no we have this less",
    "start": "3256920",
    "end": "3262359"
  },
  {
    "text": "than less than what is see out less than less than fbus how is I don't I just don't even so anyway I'm",
    "start": "3262359",
    "end": "3270359"
  },
  {
    "text": "going to move on but yes so from C++ uh we actually get the idea of",
    "start": "3270359",
    "end": "3276400"
  },
  {
    "text": "exceptions so C++ was the first language with exceptions and try and catch to do exception handling and that sort of",
    "start": "3276400",
    "end": "3281720"
  },
  {
    "text": "thing um and so therefore we also get throw from there as well so try catch",
    "start": "3281720",
    "end": "3288079"
  },
  {
    "text": "throw those were introduced in C++ to make it easier to deal with errors",
    "start": "3288079",
    "end": "3293680"
  },
  {
    "text": "because in C uh you returned a value from a function and generally you would",
    "start": "3293680",
    "end": "3300200"
  },
  {
    "text": "return like a sentinel value like minus one to indicate that the function had failed or you would return something and",
    "start": "3300200",
    "end": "3307920"
  },
  {
    "text": "then there'd be like a global variable set somewhere telling you what the error had actually",
    "start": "3307920",
    "end": "3313599"
  },
  {
    "text": "been um so then the whole chart reorganized itself because I created it",
    "start": "3313599",
    "end": "3319319"
  },
  {
    "text": "with D2 and it just lays it out the best it can because I can't use Graphics",
    "start": "3319319",
    "end": "3324760"
  },
  {
    "text": "programs to do this sort of thing and so now apl's suddenly up at the top and small talks gone there has anyone ever",
    "start": "3324760",
    "end": "3330680"
  },
  {
    "text": "even heard of a programming language called self bluehead dude at the front",
    "start": "3330680",
    "end": "3335760"
  },
  {
    "text": "not surprised uh but apart from that no no I'd never ever heard of self self was",
    "start": "3335760",
    "end": "3341799"
  },
  {
    "text": "kind of it inherited some stuff from small talk it inherited some stuff from APL it was very very weird uh this is uh",
    "start": "3341799",
    "end": "3351119"
  },
  {
    "text": "what it looked like so it was designed and built entirely to run in goo on uh",
    "start": "3351119",
    "end": "3357839"
  },
  {
    "text": "not Xerox machines but you know apple and and that sort of thing um and uh this is self doing",
    "start": "3357839",
    "end": "3365960"
  },
  {
    "text": "objectoriented programming so we have an animal which is just the empty object and dog which is well it parents to",
    "start": "3365960",
    "end": "3372839"
  },
  {
    "text": "animal and we can add some additional stuff to it and these are not classes so this is object-oriented programming but",
    "start": "3372839",
    "end": "3378240"
  },
  {
    "text": "these are not classes they are prototypes and so animal equals this and then you can create an instance of",
    "start": "3378240",
    "end": "3385079"
  },
  {
    "text": "animal and it's basic basically just taking a copy of whatever's an animal and so it's this the alternative way of",
    "start": "3385079",
    "end": "3390839"
  },
  {
    "text": "doing object-oriented programming prototypal object-oriented programming",
    "start": "3390839",
    "end": "3396079"
  },
  {
    "text": "which interestingly if you want to do object-oriented programming in scheme is",
    "start": "3396079",
    "end": "3401520"
  },
  {
    "text": "the only way to do it uh and so self uses this prototypal approach so that is",
    "start": "3401520",
    "end": "3408160"
  },
  {
    "text": "where we get prototype based oop from then down at the bottom here we've",
    "start": "3408160",
    "end": "3413720"
  },
  {
    "text": "got C++ 10 years later that becomes Java uh this is fiz Buzz in",
    "start": "3413720",
    "end": "3421000"
  },
  {
    "text": "Java you're welcome uh Java I think we can agree",
    "start": "3422680",
    "end": "3429079"
  },
  {
    "text": "that Java hasn't introduced anything useful to the world at all um and and we",
    "start": "3429079",
    "end": "3435760"
  },
  {
    "text": "should destroy it with fire uh so yes the main thing that Java has has donated",
    "start": "3435760",
    "end": "3442440"
  },
  {
    "text": "to JavaScript was make it look like Java it's like any other language please well",
    "start": "3442440",
    "end": "3448119"
  },
  {
    "text": "maybe not basic but um yes and then all of these things",
    "start": "3448119",
    "end": "3453359"
  },
  {
    "text": "together essentially you get scheme and you get self with its prototypal inheritance and so forth and you get",
    "start": "3453359",
    "end": "3460200"
  },
  {
    "text": "Java with its just generally looking a bit like C++ syntax and all these things",
    "start": "3460200",
    "end": "3466119"
  },
  {
    "text": "come together to make JavaScript so and you trace this through and there's",
    "start": "3466119",
    "end": "3471200"
  },
  {
    "text": "things in JavaScript that go all the way back to the very first programming language Fortran incidentally most of",
    "start": "3471200",
    "end": "3477720"
  },
  {
    "text": "these languages that we've passed along this route are no longer in common use",
    "start": "3477720",
    "end": "3483880"
  },
  {
    "text": "Fortran try and prize Fortran out of the hands of mathematicians and physicists",
    "start": "3483880",
    "end": "3490720"
  },
  {
    "text": "who need to build complex models of like chaos theory and that sort of stuff",
    "start": "3490720",
    "end": "3497200"
  },
  {
    "text": "still nobody has come up with something that they've been able to say don't use for Tren use this they go no for",
    "start": "3497200",
    "end": "3503720"
  },
  {
    "text": "Tren um every every time Intel release a new CPU architecture with new CPU",
    "start": "3503720",
    "end": "3509200"
  },
  {
    "text": "instructions the first language to get access to those is the Intel",
    "start": "3509200",
    "end": "3514440"
  },
  {
    "text": "implementation of Fortran so SS and simd and all these kind of massively parallel",
    "start": "3514440",
    "end": "3520799"
  },
  {
    "text": "operations and so forth they were in Fortran a long time before they were in GCC or llvm or Microsoft C++ or any of",
    "start": "3520799",
    "end": "3529119"
  },
  {
    "text": "those sorts of things um but of course languages didn't stop evolving in 1995",
    "start": "3529119",
    "end": "3536160"
  },
  {
    "text": "fortunately CU otherwise we'd just be stuck with JavaScript and other languages have been released since then",
    "start": "3536160",
    "end": "3542119"
  },
  {
    "text": "and uh languages which JavaScript has taken ideas from and obviously the the",
    "start": "3542119",
    "end": "3548240"
  },
  {
    "text": "key one of those would be C which came out in 1999 and was derived from C++ and",
    "start": "3548240",
    "end": "3555200"
  },
  {
    "text": "not",
    "start": "3555200",
    "end": "3557400"
  },
  {
    "text": "Java I did this talk in Copenhagen at the developer Festival last year and mad's talk",
    "start": "3561319",
    "end": "3566760"
  },
  {
    "text": "in the audience and he roared at that um but no cuz yeah you can tell that c is",
    "start": "3566760",
    "end": "3573599"
  },
  {
    "text": "is the successor to C++ because it's c+++ plus and you put two of the pluses under the other two pluses and it makes",
    "start": "3573599",
    "end": "3579319"
  },
  {
    "text": "the sharp symbol that's why it's called CP F's just copying because there's no",
    "start": "3579319",
    "end": "3585160"
  },
  {
    "text": "f++ as far as I know but yes and so C introduced this idea of async and await",
    "start": "3585160",
    "end": "3591480"
  },
  {
    "text": "and task-based programming which became promise-based programming but these keywords that you can actually put into",
    "start": "3591480",
    "end": "3597280"
  },
  {
    "text": "your code um and so there are still Innovations happening in programming",
    "start": "3597280",
    "end": "3603280"
  },
  {
    "text": "language design and we can only hope that more of those in Innovations make",
    "start": "3603280",
    "end": "3609039"
  },
  {
    "text": "their way into JavaScript like you know static types wouldn't it be nice if if",
    "start": "3609039",
    "end": "3614400"
  },
  {
    "text": "typescript actually I don't really want JavaScript to be typescript because you seem to need a degree in category Theory",
    "start": "3614400",
    "end": "3620559"
  },
  {
    "text": "to understand some of what the type system in typescript is doing these days but it would be very nice to be able in",
    "start": "3620559",
    "end": "3627400"
  },
  {
    "text": "the actual language itself to say hey function only take strings rather than having to start",
    "start": "3627400",
    "end": "3634319"
  },
  {
    "text": "every function body with if type of thing is equals string otherwise throw an invalid operation exception but yes",
    "start": "3634319",
    "end": "3641359"
  },
  {
    "text": "so there you go lovely people I hope that wasn't too taxing I hope you may",
    "start": "3641359",
    "end": "3646400"
  },
  {
    "text": "inadvertently have learned one or two things even if it's just a kind of Coffee Pub conversation did you",
    "start": "3646400",
    "end": "3653599"
  },
  {
    "text": "know um but that's my little talk to finish off the conference I hope you've",
    "start": "3653599",
    "end": "3659559"
  },
  {
    "text": "all had a fantastic time and I hope you will all come back next year and we can do it all again take care of yourselves",
    "start": "3659559",
    "end": "3666880"
  },
  {
    "text": "look after each other [Applause]",
    "start": "3666880",
    "end": "3679170"
  },
  {
    "text": "bye-bye for",
    "start": "3684920",
    "end": "3688880"
  }
]