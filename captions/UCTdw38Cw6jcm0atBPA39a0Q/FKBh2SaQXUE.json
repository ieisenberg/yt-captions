[
  {
    "text": "well it's officially 40 after uh but I have this policy which I like to wait for",
    "start": "5299",
    "end": "11040"
  },
  {
    "text": "you know the minute and 59 seconds that way I can start on time but that person",
    "start": "11040",
    "end": "16859"
  },
  {
    "text": "that walks in at the last minute can still be on time and usually when I say that someone walks in at the last minute but uh I",
    "start": "16859",
    "end": "24359"
  },
  {
    "text": "don't see anyone in there there you are thank you for walking in at the last minute thank you for Von being volunteled to be",
    "start": "24359",
    "end": "31560"
  },
  {
    "text": "the butt of my joke so how's everyone doing today yeah did you learn lots and lots and",
    "start": "31560",
    "end": "37440"
  },
  {
    "text": "lots of crap that you hoped to get to use someday welcome to another talk where you learn",
    "start": "37440",
    "end": "42780"
  },
  {
    "text": "lots and lots of stuff that you hope to get to use I I this this joke is going to be apropos",
    "start": "42780",
    "end": "48000"
  },
  {
    "text": "have nothing to do with my talk but it's a fun joke that I like to start talks out with sometimes I haven't used in a couple years uh but uh it's a simple",
    "start": "48000",
    "end": "55500"
  },
  {
    "text": "joke what is a pirate's favorite programming language",
    "start": "55500",
    "end": "61038"
  },
  {
    "text": "I you might think it'd be R M80 but his first love be the C",
    "start": "61699",
    "end": "67040"
  },
  {
    "text": "that was actually a joke that my son told me when he was like eight years old it's like what's a pirate's favorite letter of the alphabet",
    "start": "70020",
    "end": "76920"
  },
  {
    "text": "and he told me that and I'm like you know those are both programming languages",
    "start": "76920",
    "end": "81799"
  },
  {
    "text": "geek dad so so welcome everyone uh to dungeons dragons and graph databases",
    "start": "82020",
    "end": "87900"
  },
  {
    "text": "my name is Guy Royce I'm a developer Advocate at redis uh there are three",
    "start": "87900",
    "end": "92939"
  },
  {
    "text": "things on this slide that matter one of the matters to my boss",
    "start": "92939",
    "end": "99320"
  },
  {
    "text": "right there one of them matters to me that'd be the Twitter account",
    "start": "100680",
    "end": "106200"
  },
  {
    "text": "and one of them matters to you which is the GitHub URL the GitHub URL uh matters",
    "start": "106200",
    "end": "111659"
  },
  {
    "text": "because I have sample code and the slides and all that stuff and it's all out on GitHub under at github.comrice so",
    "start": "111659",
    "end": "118500"
  },
  {
    "text": "those are the three things that matter on that slide there's the logo follow me on Twitter please and hey",
    "start": "118500",
    "end": "124799"
  },
  {
    "text": "here's code that you can actually play with to use to play with this stuff so I'm a developer Advocate this means what",
    "start": "124799",
    "end": "130140"
  },
  {
    "text": "I'm doing right now is part of my job which honestly is kind of a kick-ass job but in addition to being a developer",
    "start": "130140",
    "end": "136680"
  },
  {
    "text": "advocate I play a lot of Dungeons and Dragons I know that might come as a shock",
    "start": "136680",
    "end": "143580"
  },
  {
    "text": "I totally don't look like like I should be playing dungeons dragons I totally look like I should be running the game",
    "start": "143580",
    "end": "150300"
  },
  {
    "text": "I do that too um but so I thought I'd include my character sheet here there's a bunch of details on here but the only thing that",
    "start": "150300",
    "end": "155879"
  },
  {
    "text": "really matters is down here in the bottom right corner my ability scores see I've got an intelligence eight and a",
    "start": "155879",
    "end": "161760"
  },
  {
    "text": "wisdom of eight and a Charisma of 16. that tells you everything you need to know about this talk",
    "start": "161760",
    "end": "168060"
  },
  {
    "text": "it's going to all Sizzle no steak and as a player of Dungeons and Dragons",
    "start": "168060",
    "end": "175260"
  },
  {
    "text": "I have a problem you know I need to level up my character so I can take on bigger challenges and defeat bigger and",
    "start": "175260",
    "end": "181200"
  },
  {
    "text": "more powerful monsters get better treasure to buy better gear and the cycle repeats and the only place to do",
    "start": "181200",
    "end": "187080"
  },
  {
    "text": "that is a dungeon you got to go to the dungeon to kill the monsters so you need to find the rooms",
    "start": "187080",
    "end": "192300"
  },
  {
    "text": "in the dungeons that are the best rooms to explore you've got to find the best monsters",
    "start": "192300",
    "end": "197340"
  },
  {
    "text": "that are the appropriate challenge that I can overcome them and Max my experience but not so much that we have a tpk",
    "start": "197340",
    "end": "203760"
  },
  {
    "text": "and of course you need to find the room to have all the gold and so this is a problem all of us Gamers have",
    "start": "203760",
    "end": "210659"
  },
  {
    "text": "this problem and but since I'm also a developer I thought well I could build a database I",
    "start": "210659",
    "end": "217440"
  },
  {
    "text": "could put all the rooms and all the monsters and all the treasure in the database and I could query it and I could figure out which rooms I could go",
    "start": "217440",
    "end": "223560"
  },
  {
    "text": "to first I could optimize my gaming experience and of course my first thought was I",
    "start": "223560",
    "end": "228659"
  },
  {
    "text": "could use a relational database right that's like your default what kind of database do we need probably a",
    "start": "228659",
    "end": "233700"
  },
  {
    "text": "relational one but um there's another cool kind of database called a graph database",
    "start": "233700",
    "end": "240000"
  },
  {
    "text": "and so we could use a graph database and so what we're going to do is we're going to explore what it would look like to solve this problem with a relational",
    "start": "240000",
    "end": "246060"
  },
  {
    "text": "database with SQL how many people here know SQL that should be everyone right yeah",
    "start": "246060",
    "end": "251640"
  },
  {
    "text": "how many people here have used graph databases before probably a couple of yeah a few yeah",
    "start": "251640",
    "end": "257579"
  },
  {
    "text": "um and we're going to use a graph database so I'll compare and contrast these and",
    "start": "257579",
    "end": "263460"
  },
  {
    "text": "so the first question that a lot of you probably have is what the hexagraph database",
    "start": "263460",
    "end": "269820"
  },
  {
    "text": "I can tell you one thing it's not is this comes up a lot is people hear graph and they think it's graphql",
    "start": "269820",
    "end": "276240"
  },
  {
    "text": "graph database is not graphql although it plays nicely with a graph database because they're using the same metaphor",
    "start": "276240",
    "end": "281340"
  },
  {
    "text": "graph database is a database it's a database it's a way of storing things not a way of querying things of course",
    "start": "281340",
    "end": "287400"
  },
  {
    "text": "you do need to query your databases so that's going to come up but the question before this is really",
    "start": "287400",
    "end": "294120"
  },
  {
    "text": "you know before I can answer what's a graph database I have to ask what's a graph now many of you have probably taken math",
    "start": "294120",
    "end": "300180"
  },
  {
    "text": "and done some graph Theory I have not so if you are one of those people you know more than me congratulations",
    "start": "300180",
    "end": "308220"
  },
  {
    "text": "but we'll sort of give a five or ten minute Layman's introduction to graph",
    "start": "308220",
    "end": "313380"
  },
  {
    "text": "Theory and then we'll go into graph databases so a graph is well it's a series of",
    "start": "313380",
    "end": "318479"
  },
  {
    "text": "nodes or vertices connected by edges or relationships",
    "start": "318479",
    "end": "323780"
  },
  {
    "text": "they can represent all sorts of things mathematically this 20-sided die right here is a graph",
    "start": "323780",
    "end": "330780"
  },
  {
    "text": "the points are the vertices and the edges are well the edges",
    "start": "330780",
    "end": "337020"
  },
  {
    "text": "and so this graph its main purpose in life would be to represent a platonic solid a 20-sided die roll for initiative",
    "start": "337020",
    "end": "346440"
  },
  {
    "text": "um and but they don't have to just be platonic solids they don't have to be it",
    "start": "346440",
    "end": "351660"
  },
  {
    "text": "doesn't have to be geometry you can represent all sorts of things with a graph perhaps the simplest graph",
    "start": "351660",
    "end": "357780"
  },
  {
    "text": "is really boring it's a null graph that's a graph with no nodes no edges",
    "start": "357780",
    "end": "363960"
  },
  {
    "text": "mm-hmm and uh some mathematicians debate whether a null graph is a real graph or",
    "start": "363960",
    "end": "369900"
  },
  {
    "text": "not um it's kind of like saying is null and undefined the same thing in JavaScript I",
    "start": "369900",
    "end": "376080"
  },
  {
    "text": "don't know um why do we have null and undefined in JavaScript anyhow but null graphs are",
    "start": "376080",
    "end": "382199"
  },
  {
    "text": "from a graph database point of view an empty database and so they're not very interesting so we're not going to talk about it anymore",
    "start": "382199",
    "end": "387780"
  },
  {
    "text": "let's put some nodes to our graph so now we've got a simple graph this is",
    "start": "387780",
    "end": "394740"
  },
  {
    "text": "technically a graph there's no relationships here there's no edges connecting these nodes but they're just kind of points floating out in space so",
    "start": "394740",
    "end": "402000"
  },
  {
    "text": "we've got a collection of nodes we don't know a lot about them it's almost like a set like you could represent a set using",
    "start": "402000",
    "end": "408180"
  },
  {
    "text": "a graph without relationships probably not the most efficient way to do it but you could do it",
    "start": "408180",
    "end": "414740"
  },
  {
    "text": "and this is perfectly valid you do not have to have relationships in a graph for it to be a graph it's not a very",
    "start": "415080",
    "end": "420539"
  },
  {
    "text": "useful graph so let's add some relationships so now our graph is growing a little bit",
    "start": "420539",
    "end": "426360"
  },
  {
    "text": "it's got some uh we can see that node e is hanging out there by itself nodes a C G and D are sort of clustered there in",
    "start": "426360",
    "end": "433199"
  },
  {
    "text": "the middle together and B and F are best friends forever there in the bottom right corner",
    "start": "433199",
    "end": "440819"
  },
  {
    "text": "and so this is kind of looking like what you would think of when you think of a graph portions of this graph are isolated",
    "start": "440819",
    "end": "448680"
  },
  {
    "text": "so e is out there all by its Lonesome it's not connected to anything it's an isolated sub graph",
    "start": "448680",
    "end": "455460"
  },
  {
    "text": "B and F are also an isolated subgraph because they're not connected to the",
    "start": "455460",
    "end": "460500"
  },
  {
    "text": "larger graph and in fact the big part of the graph in the middle is also isolated from all the other parts in the graph so",
    "start": "460500",
    "end": "466020"
  },
  {
    "text": "we can refer to parts of a graph as being isolated if they're not connected to other parts of the graph they're just little Islands",
    "start": "466020",
    "end": "473539"
  },
  {
    "text": "if uh no part of your graph is isolated like this graph here if every node is",
    "start": "475500",
    "end": "481979"
  },
  {
    "text": "connected by way of another node to another node then it's considered to be connected so",
    "start": "481979",
    "end": "488220"
  },
  {
    "text": "we have an isolated subgraphs this is a connected graph every node has a path to",
    "start": "488220",
    "end": "493500"
  },
  {
    "text": "any other node not directly necessarily but there's a path so D connects to C by",
    "start": "493500",
    "end": "498780"
  },
  {
    "text": "way of a or a and b so connected graphs",
    "start": "498780",
    "end": "505039"
  },
  {
    "text": "a fully connected graph is when every node connects to every node and",
    "start": "505680",
    "end": "511740"
  },
  {
    "text": "this little subgraph here A B and C they're fully connected because a connects to all the other nodes in the",
    "start": "511740",
    "end": "516959"
  },
  {
    "text": "graph this um this is best described by a network diagram you've ever seen that",
    "start": "516959",
    "end": "522599"
  },
  {
    "text": "that circle with all the nodes in a network and then you've got chords going across it to make like a you know a star",
    "start": "522599",
    "end": "527640"
  },
  {
    "text": "and everything connects that is a fully connected graph we've we've seen these before",
    "start": "527640",
    "end": "533339"
  },
  {
    "text": "um I just did this one because it looks prettier with the rest of my slides so a fully connected graph is where all",
    "start": "533339",
    "end": "539940"
  },
  {
    "text": "the nodes are connected these graphs that I've been showing you are undirected",
    "start": "539940",
    "end": "546240"
  },
  {
    "text": "an undirected graph is where the relationships don't well they don't have",
    "start": "546240",
    "end": "551580"
  },
  {
    "text": "a direction um a is connected to b b is connected to a they're related there's a vertic",
    "start": "551580",
    "end": "557040"
  },
  {
    "text": "Vertex there's a Vertex connecting them but there's no sense of",
    "start": "557040",
    "end": "562560"
  },
  {
    "text": "I don't know any other word than direction to describe directionality but there's no additional information",
    "start": "562560",
    "end": "569519"
  },
  {
    "text": "you can make graphs be directed and that gives extra information in the relationship so now we know that a is",
    "start": "569519",
    "end": "576420"
  },
  {
    "text": "connected to B and it's it has a natural Direction in the case of an undirected graph that might be like friends on",
    "start": "576420",
    "end": "583200"
  },
  {
    "text": "Facebook like if you were you and I are friends on Facebook because we are right absolutely yeah",
    "start": "583200",
    "end": "588540"
  },
  {
    "text": "um then that's a mutual thing and so it's an undirected relationship but um if I follow you on Twitter and",
    "start": "588540",
    "end": "596279"
  },
  {
    "text": "you don't follow me back that's a directed relationship another example might be uh my my",
    "start": "596279",
    "end": "602100"
  },
  {
    "text": "siblings they're all my siblings there's there's not a direction to that relationship it's just my sister is my sister and I'm",
    "start": "602100",
    "end": "609120"
  },
  {
    "text": "her brother and that's just an undirected relationship but my mother there's a natural direction to that",
    "start": "609120",
    "end": "614760"
  },
  {
    "text": "relationship my mother big at me I did not beget her right",
    "start": "614760",
    "end": "620300"
  },
  {
    "text": "and so directed and undirected when we're talking about these graphs",
    "start": "621120",
    "end": "626160"
  },
  {
    "text": "and we can talk about an idea of degrees the nodes of a graph have degrees",
    "start": "626160",
    "end": "632399"
  },
  {
    "text": "a degree is simply the number of edges it has coming in and out",
    "start": "632399",
    "end": "637620"
  },
  {
    "text": "so node a here has three relationships three edges three vertices and so it has a degree of three",
    "start": "637620",
    "end": "644700"
  },
  {
    "text": "if we have a directed graph it can have an out degree and an in degree which is the number of",
    "start": "644700",
    "end": "650760"
  },
  {
    "text": "relationships coming out and in respectively and probably the uh the the most",
    "start": "650760",
    "end": "658200"
  },
  {
    "text": "important thing is is that there really aren't a lot of rules about how things connect in a graph this is neat and tidy because it fits on a flat piece of paper",
    "start": "658200",
    "end": "665700"
  },
  {
    "text": "but it doesn't have to be two-dimensional it doesn't care about dimensionality at all anything can",
    "start": "665700",
    "end": "671040"
  },
  {
    "text": "connect to anything nodes can connect more more than once to each other with different properties so here we've got a",
    "start": "671040",
    "end": "677760"
  },
  {
    "text": "and C connecting to each other mutually in a direct graph a connects to itself so you can connect these nodes and edges",
    "start": "677760",
    "end": "684779"
  },
  {
    "text": "any way you want there's no rules yeah you're unlike Ghostbusters you're",
    "start": "684779",
    "end": "691200"
  },
  {
    "text": "allowed to cross the streams so that's my like five minute graph",
    "start": "691200",
    "end": "697920"
  },
  {
    "text": "Theory some total of all my knowledge uh a graph database is then when you",
    "start": "697920",
    "end": "704760"
  },
  {
    "text": "take this graph model and you you represent it digitally and you lay data",
    "start": "704760",
    "end": "709980"
  },
  {
    "text": "over top of it so then the nodes become things that you care about and then you can put data on those nodes",
    "start": "709980",
    "end": "716160"
  },
  {
    "text": "so these nodes represent rooms of a dungeon and properties on those rooms in the dungeon and they represent the",
    "start": "716160",
    "end": "721680"
  },
  {
    "text": "monsters of a dungeon and the the treasure in a dungeon and so here we'll like we have a monster",
    "start": "721680",
    "end": "727440"
  },
  {
    "text": "Alice the elf and another monster Bob the ogre they've got properties fun fact",
    "start": "727440",
    "end": "732779"
  },
  {
    "text": "actually my grandparents names are Alice and Bob or well were I suppose",
    "start": "732779",
    "end": "738600"
  },
  {
    "text": "they've been gone a long time um and so I suppose my grandmother was a bit Elfin my grandfather was certainly",
    "start": "738600",
    "end": "745260"
  },
  {
    "text": "not an ogre he was a very nice old man um but I've always found it kind of funny",
    "start": "745260",
    "end": "750360"
  },
  {
    "text": "that you know the sort of stereotypical like the classic elements oh it's always Alice and Bob was like I was using it",
    "start": "750360",
    "end": "756300"
  },
  {
    "text": "for years and I realized one day oh crap those are my grandparents names but uh so you add these uh these nodes",
    "start": "756300",
    "end": "763019"
  },
  {
    "text": "now have properties you can think of them as rows in a database almost and then the relationships uh can have",
    "start": "763019",
    "end": "770700"
  },
  {
    "text": "uh Types on them to tell you what type they are and we can also have properties so you lay data on top of this graph",
    "start": "770700",
    "end": "777000"
  },
  {
    "text": "structure and you get yourself a database worthy of Mordor",
    "start": "777000",
    "end": "782120"
  },
  {
    "text": "a couple notes um about nodes in relationships the nodes in a graph represent items I tend",
    "start": "783360",
    "end": "789779"
  },
  {
    "text": "to use them for nouns and the relationships represent those connections between those nodes I tend",
    "start": "789779",
    "end": "796380"
  },
  {
    "text": "to use this for verbs and so uh the nodes can have a label for what they are they have more than one label so it",
    "start": "796380",
    "end": "802800"
  },
  {
    "text": "could be a room but you could also have like a chamber or a corridor it might be a type of room",
    "start": "802800",
    "end": "808500"
  },
  {
    "text": "and they could be both of those things and they can have art attributes with strings and booleans and numbers and",
    "start": "808500",
    "end": "814800"
  },
  {
    "text": "stuff in them and a node can just Sand by itself it doesn't need relationships to exist it can just be out there and",
    "start": "814800",
    "end": "820920"
  },
  {
    "text": "you can query it a node can certainly be an island it can be isolated",
    "start": "820920",
    "end": "826740"
  },
  {
    "text": "the relationships are a connection between two nodes they have a type as opposed to a label they can only have",
    "start": "826740",
    "end": "832560"
  },
  {
    "text": "one type if you want to have a different type of relationship you create a second relationship uh they have a Direction",
    "start": "832560",
    "end": "838740"
  },
  {
    "text": "and they can have attributes as well as well so like leads2 might have an attribute of a distance if you were",
    "start": "838740",
    "end": "845100"
  },
  {
    "text": "doing some sort of pathing algorithm to find the best path through a dungeon knowing the distance might be useful because you could find the shorter path",
    "start": "845100",
    "end": "850980"
  },
  {
    "text": "based on the the weights or the the distance that's represented in that that edge",
    "start": "850980",
    "end": "856440"
  },
  {
    "text": "and and this is important if you're using a graph database the relationships cannot exist without a node so if you",
    "start": "856440",
    "end": "863519"
  },
  {
    "text": "remove a node from your graph the relationships go away they delete it automatically",
    "start": "863519",
    "end": "869279"
  },
  {
    "text": "um so if you've got data in there that you care about no you don't",
    "start": "869279",
    "end": "875420"
  },
  {
    "text": "I find that if I'm doing it right it reads like a sentence where you've got a direct object",
    "start": "877800",
    "end": "884880"
  },
  {
    "text": "or a a subject a transitive verb and a direct object so the room contains a",
    "start": "884880",
    "end": "890519"
  },
  {
    "text": "monster so I've got a room node it's got a contains relationship to a monster node",
    "start": "890519",
    "end": "897019"
  },
  {
    "text": "so thank you for attending my TED Talk",
    "start": "897420",
    "end": "902300"
  },
  {
    "text": "that's all the theory and just the concepts around this let's get into the real meat of how to do this",
    "start": "903360",
    "end": "909180"
  },
  {
    "text": "because we've we've still got a problem well I've got a problem anyhow uh and I uh you know I want to optimize my uh",
    "start": "909180",
    "end": "915240"
  },
  {
    "text": "dungeon runs my dungeon crawls and um I haven't decided how I'm going to solve it yet am I going to use a relational",
    "start": "915240",
    "end": "920760"
  },
  {
    "text": "database with the tables and the columns and the rows and the and the the foreign keys or",
    "start": "920760",
    "end": "927300"
  },
  {
    "text": "am I going to use a graph database with the nodes in the relationships spoiler alert it's going to be graph",
    "start": "927300",
    "end": "934639"
  },
  {
    "text": "and so uh when we go to talk to a relational database we use SQL or SQL which one's the right one",
    "start": "934680",
    "end": "943860"
  },
  {
    "text": "quick show of hand says SQL SQL",
    "start": "943860",
    "end": "949380"
  },
  {
    "text": "excellent I guess he writes both ways so",
    "start": "949380",
    "end": "954600"
  },
  {
    "text": "is it gif or Jeff yeah well yeah but now I'm gonna get all the",
    "start": "954600",
    "end": "959940"
  },
  {
    "text": "red cards yeah so when we talk to a relational database we use SQL",
    "start": "959940",
    "end": "965639"
  },
  {
    "text": "uh we we all know SQL it's it's the only language that I learned in college back in the early 90s that I still use on",
    "start": "965639",
    "end": "972899"
  },
  {
    "text": "occasion don't use any others I still use SQL uh and you know you're selecting from",
    "start": "972899",
    "end": "978540"
  },
  {
    "text": "the tables you're joining on foreign Keys getting the fields back filtering with where Clause right we all know this",
    "start": "978540",
    "end": "984899"
  },
  {
    "text": "stuff we've all used this a lot in our career the equivalent or an equivalent for graph databases and the graph database",
    "start": "984899",
    "end": "991260"
  },
  {
    "text": "uh we're looking at today is going to be redisgraph redis graph uses Cipher",
    "start": "991260",
    "end": "997500"
  },
  {
    "text": "and Cipher uses this matching syntax to find things and it's actually kind of cool because",
    "start": "997500",
    "end": "1003440"
  },
  {
    "text": "if you look at it it's kind of like ASCII art it looks like the right it looks like",
    "start": "1003440",
    "end": "1010639"
  },
  {
    "text": "the graph that I want to query that I want to match against and that matchers is really kind of the",
    "start": "1010639",
    "end": "1015980"
  },
  {
    "text": "cool part if we zoom in on that we've got this the room contains the monster",
    "start": "1015980",
    "end": "1022160"
  },
  {
    "text": "right that matches a room node",
    "start": "1022160",
    "end": "1027918"
  },
  {
    "text": "colon room means match any node in the graph that has a label of room",
    "start": "1027919",
    "end": "1033558"
  },
  {
    "text": "the R means assign it to the variable R so I can use it later in my query",
    "start": "1033559",
    "end": "1038959"
  },
  {
    "text": "the parentheses make it a node and so it's like round right it's like it's like I drew a",
    "start": "1038959",
    "end": "1044600"
  },
  {
    "text": "circle around it same thing for Monster here this finds",
    "start": "1044600",
    "end": "1049880"
  },
  {
    "text": "any node in the graph with a label of monster and assigns it to the variable m",
    "start": "1049880",
    "end": "1056600"
  },
  {
    "text": "and then in the middle here we have a relationship that matches any",
    "start": "1056600",
    "end": "1062720"
  },
  {
    "text": "um any relationship with a type of contains and you'll notice right there",
    "start": "1062720",
    "end": "1067880"
  },
  {
    "text": "that there's an arrow on it so we actually hang on there we go all right you got",
    "start": "1067880",
    "end": "1072919"
  },
  {
    "text": "that little arrow right there it's actually a line with a label on it so you've got like circles and lines",
    "start": "1072919",
    "end": "1078020"
  },
  {
    "text": "connecting them together so it looks kind of like the thing that we want to query which I think is kind of neat",
    "start": "1078020",
    "end": "1083240"
  },
  {
    "text": "and this is at the heart of it and so this says find any room that contains a",
    "start": "1083240",
    "end": "1088400"
  },
  {
    "text": "monster match that pattern in the entire graph",
    "start": "1088400",
    "end": "1094240"
  },
  {
    "text": "you can imagine that if you have a really big graph and really poor queries this could be slow",
    "start": "1094700",
    "end": "1101320"
  },
  {
    "text": "you can optimize that don't worry um so to explore",
    "start": "1102080",
    "end": "1107260"
  },
  {
    "text": "Cipher a little bit deeper I'm going to go through our classic crud operations create read update and delete and I'm",
    "start": "1107260",
    "end": "1114380"
  },
  {
    "text": "going to show how we would do this in SQL which we should all know already and if you don't know that's okay I",
    "start": "1114380",
    "end": "1119419"
  },
  {
    "text": "didn't know once too and I'm going to show how we could do the same thing with Cipher and this is going to just create nodes we're not",
    "start": "1119419",
    "end": "1124520"
  },
  {
    "text": "going to do relationships yet we'll do that in it in a bit so if we want insert into a room a we",
    "start": "1124520",
    "end": "1132559"
  },
  {
    "text": "need to have a room table created already and so we're assuming we have a room table and we say insert into room with our",
    "start": "1132559",
    "end": "1138440"
  },
  {
    "text": "field names and then the values for those fields to do it with Cipher",
    "start": "1138440",
    "end": "1144620"
  },
  {
    "text": "we call create and we give it a pattern and this pattern defines",
    "start": "1144620",
    "end": "1149780"
  },
  {
    "text": "that node so we're saying create a node with a label of room assign it to",
    "start": "1149780",
    "end": "1155240"
  },
  {
    "text": "variable R for a use later and then we call set and then we start",
    "start": "1155240",
    "end": "1160460"
  },
  {
    "text": "setting properties on that node now one thing that's very important to note here is is that in the SQL our ID",
    "start": "1160460",
    "end": "1167419"
  },
  {
    "text": "and name are baked into the table right we have a schema the graph node does not have a schema",
    "start": "1167419",
    "end": "1174919"
  },
  {
    "text": "and so we've decided that we want to have two properties on here but we could add any properties we want now or later",
    "start": "1174919",
    "end": "1182480"
  },
  {
    "text": "so we create it and we set a couple properties but it's schema-less so we can change our minds do what we",
    "start": "1182480",
    "end": "1187760"
  },
  {
    "text": "want make a mess if we want so this is the create syntax it's fairly",
    "start": "1187760",
    "end": "1193460"
  },
  {
    "text": "straightforward to read our room with SQL this is the first thing we",
    "start": "1193460",
    "end": "1200660"
  },
  {
    "text": "learn select star from users where clue greater than zero",
    "start": "1200660",
    "end": "1206500"
  },
  {
    "text": "to query a graph database we use the match keyword we'll say match our colon room again",
    "start": "1207500",
    "end": "1214720"
  },
  {
    "text": "that matches all nodes that are of type of room with it with a label of room assigns those to",
    "start": "1214720",
    "end": "1221480"
  },
  {
    "text": "the variable R we add a where Clause to filter our mount so where are the ideas one and we return",
    "start": "1221480",
    "end": "1227240"
  },
  {
    "text": "it so far so good when it's time to update a room",
    "start": "1227240",
    "end": "1235419"
  },
  {
    "text": "we use an update statement in SQL which I've always thought was kind of I've always thought these were kind of",
    "start": "1235820",
    "end": "1241220"
  },
  {
    "text": "heavy like you got to set your individual fields and everything it's kind of weird um",
    "start": "1241220",
    "end": "1246919"
  },
  {
    "text": "I suppose you have to always just specify the fields you want to set but so update room set name equals statue Hall the statue room is getting more",
    "start": "1246919",
    "end": "1253039"
  },
  {
    "text": "statues it's getting an upgrade my my Grandma will be pleased",
    "start": "1253039",
    "end": "1259400"
  },
  {
    "text": "to do this in Cipher I think this is actually pretty interesting because in the previous one",
    "start": "1259400",
    "end": "1265880"
  },
  {
    "text": "we were saying match room where ID we're doing that again but in the query",
    "start": "1265880",
    "end": "1272120"
  },
  {
    "text": "we returned it and here we're going to set properties on it so whereas before it was match",
    "start": "1272120",
    "end": "1277880"
  },
  {
    "text": "room where ID equals one return this is matchroom where ID and then start setting properties on it",
    "start": "1277880",
    "end": "1285440"
  },
  {
    "text": "um what's kind of neat here too is that because there's no schema we could add properties later so if their property",
    "start": "1285440",
    "end": "1291320"
  },
  {
    "text": "wasn't there we could add a new property as well which would be very hard to do with a relational database just because",
    "start": "1291320",
    "end": "1296360"
  },
  {
    "text": "it's schemeless and so here we're setting the name statue Hall we could also say like rdot",
    "start": "1296360",
    "end": "1301580"
  },
  {
    "text": "is trapped equals true or something like that whatever we want to do",
    "start": "1301580",
    "end": "1307039"
  },
  {
    "text": "and then to delete a room deletion is my favorite command",
    "start": "1307039",
    "end": "1314419"
  },
  {
    "text": "uh we can delete from rooms where ID is equal to one we've all done this make sure you put that where ID equals",
    "start": "1314419",
    "end": "1320539"
  },
  {
    "text": "one or you're going to have a bad day and maybe be updating your resume",
    "start": "1320539",
    "end": "1328419"
  },
  {
    "text": "to do this in Cipher it's the same again it's match wear and then instead of returning or instead",
    "start": "1330679",
    "end": "1336679"
  },
  {
    "text": "of setting properties we just delete the node and if there's any relationships those relationships go away with it",
    "start": "1336679",
    "end": "1343840"
  },
  {
    "text": "so we're at that that point of the uh of of um",
    "start": "1344840",
    "end": "1350299"
  },
  {
    "text": "of learning where we think we know things but we don't know them as well as we think we know them like this is easy I could do this I'm ready to use this",
    "start": "1350299",
    "end": "1356419"
  },
  {
    "text": "now no you know wait there's more",
    "start": "1356419",
    "end": "1360940"
  },
  {
    "text": "it's the dunning-kruger effect that was the word I was looking for um there's an I want to make a note here",
    "start": "1361940",
    "end": "1367520"
  },
  {
    "text": "on the syntax I've been doing that match where but you can actually um I've been using",
    "start": "1367520",
    "end": "1372980"
  },
  {
    "text": "the Syntax for match room where ID equals whatever you can also embed that into the match",
    "start": "1372980",
    "end": "1379400"
  },
  {
    "text": "so this is a little more of a concise syntax you're saying match the pattern of a room",
    "start": "1379400",
    "end": "1385520"
  },
  {
    "text": "where the idea is one where it's got a property of one and you can put multiple properties on there so you could say I",
    "start": "1385520",
    "end": "1390980"
  },
  {
    "text": "want all rooms have an idea of one and a name of you know um statue Hall",
    "start": "1390980",
    "end": "1397580"
  },
  {
    "text": "uh and it's inside those curly braces it's just like uh it's Java syntax or JavaScript syntax it's just",
    "start": "1397580",
    "end": "1404360"
  },
  {
    "text": "key colon value comma key colon value comma key colon value if it's a Boolean used true or false if it's a number you",
    "start": "1404360",
    "end": "1410120"
  },
  {
    "text": "just use a number if it's a string you put it in quotes so it's a familiar syntax but this is a a more convenient way to",
    "start": "1410120",
    "end": "1417140"
  },
  {
    "text": "match things sometimes and this works with create as well where here I'm creating a room",
    "start": "1417140",
    "end": "1423620"
  },
  {
    "text": "and then I'm setting properties on the room after I create it I can also just create a room with the curly braces and",
    "start": "1423620",
    "end": "1429260"
  },
  {
    "text": "the properties I want and you'll notice that I don't assign room to a variable here I just do colon",
    "start": "1429260",
    "end": "1435679"
  },
  {
    "text": "room and that's not a typo that's because I don't need to refer to the room because I've created it and I'm done",
    "start": "1435679",
    "end": "1441980"
  },
  {
    "text": "so there's some other syntax you can use here to make this a little more terse",
    "start": "1441980",
    "end": "1447620"
  },
  {
    "text": "and you can see this here when we go to create monsters I'm creating a monster in the bottom right there I don't assign",
    "start": "1447620",
    "end": "1453440"
  },
  {
    "text": "monster to M and I just give all the properties",
    "start": "1453440",
    "end": "1457720"
  },
  {
    "text": "and when I'm creating treasure here you can see that you can mix and match these so you can create a node with properties",
    "start": "1459260",
    "end": "1465559"
  },
  {
    "text": "assign it to a variable and then add even more properties if you want to live your life that way",
    "start": "1465559",
    "end": "1472419"
  },
  {
    "text": "so so far our relational database we've got three tables they've got some property",
    "start": "1473000",
    "end": "1479539"
  },
  {
    "text": "they've got some rows in them we've got three rooms in our graph are in our dungeon we've got two Treasures",
    "start": "1479539",
    "end": "1485539"
  },
  {
    "text": "two monsters our graph is just a bunch of nodes floating out there in space they're not",
    "start": "1485539",
    "end": "1492140"
  },
  {
    "text": "related to each other at all other than by the fact that they have a a label of room or a label of monster or a label of",
    "start": "1492140",
    "end": "1497840"
  },
  {
    "text": "treasure so the next interesting thing that we need to do",
    "start": "1497840",
    "end": "1503179"
  },
  {
    "text": "is we need to put a monster in a room so how do we do this with a relational",
    "start": "1503179",
    "end": "1508520"
  },
  {
    "text": "database foreign key",
    "start": "1508520",
    "end": "1513340"
  },
  {
    "text": "so we have to alter our table and then update that table to put those",
    "start": "1513559",
    "end": "1519080"
  },
  {
    "text": "monsters in a room so now Alice the elf is in room one which is the statue room which was recently upgraded to the",
    "start": "1519080",
    "end": "1525020"
  },
  {
    "text": "Statue Hall and Bob the ogre grandpa is in the armory",
    "start": "1525020",
    "end": "1530240"
  },
  {
    "text": "this makes sense to me um so in a relational database we'd have to",
    "start": "1530240",
    "end": "1537080"
  },
  {
    "text": "alter our schema and then make some updates how do we put a monster in a room with a graph database",
    "start": "1537080",
    "end": "1544179"
  },
  {
    "text": "well we need to create a relationship and to do that we need to match a couple of nodes so here we're matching a room",
    "start": "1544820",
    "end": "1551900"
  },
  {
    "text": "with an idea of one monster with an ID of four so this gets uh the the statue Hall and Alice the elf",
    "start": "1551900",
    "end": "1560000"
  },
  {
    "text": "and then we call create and we can reference those variables we used earlier",
    "start": "1560000",
    "end": "1566659"
  },
  {
    "text": "without creating them and then Define the relationship between them say create a contains the relationship between them",
    "start": "1566659",
    "end": "1572059"
  },
  {
    "text": "so this will then put that monster in a room it'll create a relationship where the the room contains a monster",
    "start": "1572059",
    "end": "1579519"
  },
  {
    "text": "putting treasure in a room is the same deal I'm a little bit of a completionist and I could not make these slides",
    "start": "1582320",
    "end": "1588200"
  },
  {
    "text": "so but it's the same deal we're doing a foreign key we're updating the relationship",
    "start": "1588200",
    "end": "1596140"
  },
  {
    "text": "and so now our relational database is this is a really common pattern with the relational database right we've got we've got a root table and with a",
    "start": "1597260",
    "end": "1604220"
  },
  {
    "text": "one-to-many relationship to Rooms To monsters and treasures our graph uh is starting to look a little more",
    "start": "1604220",
    "end": "1610940"
  },
  {
    "text": "graphy uh the rooms now contain things they have contains relationships you still",
    "start": "1610940",
    "end": "1616580"
  },
  {
    "text": "got these nodes kind of floating out there but there's a few relationships connecting them together and we actually have enough that we can",
    "start": "1616580",
    "end": "1622760"
  },
  {
    "text": "do some interesting queries so I say it's munchkin time",
    "start": "1622760",
    "end": "1628580"
  },
  {
    "text": "anyone play munchkin everyone it should be everyone come on",
    "start": "1628580",
    "end": "1634460"
  },
  {
    "text": "we're going to loot the room yeah or look for trouble one of the other so um we can query what rooms have",
    "start": "1634460",
    "end": "1642919"
  },
  {
    "text": "monsters and what rooms have treasure in a useful way and if we were to do this say to farm",
    "start": "1642919",
    "end": "1650000"
  },
  {
    "text": "all the XP I want to find the room that's got the biggest monster or get a list of monsters by experience points to",
    "start": "1650000",
    "end": "1656900"
  },
  {
    "text": "do that with a relational database we do a basic join so select from a couple tables where the",
    "start": "1656900",
    "end": "1662659"
  },
  {
    "text": "IDS match and Order descending",
    "start": "1662659",
    "end": "1667360"
  },
  {
    "text": "to do that with uh a graph database using Cipher",
    "start": "1668659",
    "end": "1674559"
  },
  {
    "text": "we need to match a pattern a pattern of the room contains a monster so every room",
    "start": "1674779",
    "end": "1680900"
  },
  {
    "text": "that contains a monster is going to result give us a row of results and then we're going to return the ID",
    "start": "1680900",
    "end": "1687380"
  },
  {
    "text": "the name and the experience points for those rows if a room does not contain a monster it's not going to return anything",
    "start": "1687380",
    "end": "1695059"
  },
  {
    "text": "if room contains only a treasure it won't return anything if it contains more than one monster we'll get multiple the same room will be there multiple",
    "start": "1695059",
    "end": "1700400"
  },
  {
    "text": "times and then we're just going to order it descending by the experience points so the the biggest experience points flow",
    "start": "1700400",
    "end": "1706159"
  },
  {
    "text": "through the top so this is actually doing exactly the same thing that we're doing with the relational database so far we haven't done anything with graph",
    "start": "1706159",
    "end": "1712400"
  },
  {
    "text": "that we can't do with SQL and vice versa we could do the same thing to get all",
    "start": "1712400",
    "end": "1717860"
  },
  {
    "text": "the gold uh it's the same basic join but we want to find the room that has",
    "start": "1717860",
    "end": "1723740"
  },
  {
    "text": "the most gold and here we're going to find rooms that contain treasure we don't know if they have monsters or not but they can contain treasure we could",
    "start": "1723740",
    "end": "1730279"
  },
  {
    "text": "query rooms that contain both monsters and treasure by sticking some stuff on the other side",
    "start": "1730279",
    "end": "1736400"
  },
  {
    "text": "of that that query so we have an arrow pointing back the other day way but here we're just doing Treasures",
    "start": "1736400",
    "end": "1743179"
  },
  {
    "text": "and this is the same query as before just with treasures instead of monsters so this is kind of cool but",
    "start": "1743179",
    "end": "1750559"
  },
  {
    "text": "so what this is just like relational databases with extra steps right",
    "start": "1750559",
    "end": "1758240"
  },
  {
    "text": "well it gets interesting when you start connecting your rooms together this is where graph databases start really",
    "start": "1758240",
    "end": "1764419"
  },
  {
    "text": "differentiating from a relational database how would we connect a room to a room in",
    "start": "1764419",
    "end": "1771440"
  },
  {
    "text": "a relational database how would we connect a room to a room in a graph database in a relational database",
    "start": "1771440",
    "end": "1778399"
  },
  {
    "text": "we need to create a new table and that table is going to have IDs for the room that's going from and two",
    "start": "1778399",
    "end": "1786020"
  },
  {
    "text": "so we insert into that table that's a you know row two in that table",
    "start": "1786020",
    "end": "1792919"
  },
  {
    "text": "says that room one the statue room leads to room two the barracks",
    "start": "1792919",
    "end": "1799220"
  },
  {
    "text": "and then this table gets really big and querying this table gets kind of hairy because you're because it's recursive",
    "start": "1799220",
    "end": "1805340"
  },
  {
    "text": "right there's ways to do it I always forget the name of the way to do this in in I",
    "start": "1805340",
    "end": "1811100"
  },
  {
    "text": "think in SQL Server I know there's a word for it I always forget the name of it and then someone in the audience always reminds me",
    "start": "1811100",
    "end": "1818600"
  },
  {
    "text": "yeah ctes yeah that's it uh so you can use CTS to do this I haven't used them I",
    "start": "1818600",
    "end": "1824240"
  },
  {
    "text": "hear they're a pain in the ass so I don't want to um but you can do that so this is how you",
    "start": "1824240",
    "end": "1830840"
  },
  {
    "text": "would model what you're really doing here actually is you're modeling the graph using a relational database",
    "start": "1830840",
    "end": "1837200"
  },
  {
    "text": "because you're saying well this is a node and this is how they connect ing rooms and graph",
    "start": "1837200",
    "end": "1845059"
  },
  {
    "text": "is familiar because instead of connecting a room to",
    "start": "1845059",
    "end": "1850580"
  },
  {
    "text": "a monster a room contains a monster or a room contains a treasure we just say a room leads to another room and so we",
    "start": "1850580",
    "end": "1856880"
  },
  {
    "text": "match room one we match room two and then we create the relationship between them because the",
    "start": "1856880",
    "end": "1862940"
  },
  {
    "text": "relationship between the rooms is exactly the same in its nature as the relationship from any node to any node",
    "start": "1862940",
    "end": "1868880"
  },
  {
    "text": "and so this allows us to create a very natural sort of semantic structure it it",
    "start": "1868880",
    "end": "1875419"
  },
  {
    "text": "matches how you think about the problem this room just connects to this room whereas with a you know relational",
    "start": "1875419",
    "end": "1881120"
  },
  {
    "text": "database that you've got this table it's hard to reason about and so our graph database here for this",
    "start": "1881120",
    "end": "1886820"
  },
  {
    "text": "relatively small problem our relational database here uh is um kind of kind of",
    "start": "1886820",
    "end": "1892220"
  },
  {
    "text": "complicated um this big blue connections table over here is going to get big",
    "start": "1892220",
    "end": "1898760"
  },
  {
    "text": "our graph database kind of looks like what it is I mean I put this over top of a map of a",
    "start": "1898760",
    "end": "1904340"
  },
  {
    "text": "dungeon on purpose because it kind of looks like a dungeon you can look at it and get a sense of it's like a subway",
    "start": "1904340",
    "end": "1910159"
  },
  {
    "text": "map right and so I think it's a tidier way to represent these sorts of problems",
    "start": "1910159",
    "end": "1916640"
  },
  {
    "text": "and with our graph database here we should be able to do some interesting queries",
    "start": "1916640",
    "end": "1922100"
  },
  {
    "text": "um but I just I just remembered an aside so I did the same talk um a couple months ago at NDC London and",
    "start": "1922100",
    "end": "1927980"
  },
  {
    "text": "they put a video of it up on YouTube and the guy who did the uh the the map that I'm using the background Dyson logos",
    "start": "1927980",
    "end": "1935120"
  },
  {
    "text": "he watched the video and tweeted at me the coolest thing ever I've been look consuming his maps for like five years",
    "start": "1935120",
    "end": "1941659"
  },
  {
    "text": "and it's kind of a fun moment um so if you're watching Dyson thanks for all the awesome Maps",
    "start": "1941659",
    "end": "1948640"
  },
  {
    "text": "so we can do some more interesting queries now that we have these rooms connected to rooms",
    "start": "1949820",
    "end": "1956720"
  },
  {
    "text": "um and so we're going to do some of these and one of the syntaxes that allow us to do the interesting queries is these",
    "start": "1956720",
    "end": "1963080"
  },
  {
    "text": "variable length relationships so we've got a match down here it's got a little star there we haven't seen the",
    "start": "1963080",
    "end": "1969020"
  },
  {
    "text": "little star before what does this little star mean well this matches a room",
    "start": "1969020",
    "end": "1974779"
  },
  {
    "text": "and that matches a room matches a couple nodes the star says Match multiple Hops and so this would",
    "start": "1974779",
    "end": "1982580"
  },
  {
    "text": "match a room that leads to a room a room that leads to a room that leads to a room or room that leads to a room",
    "start": "1982580",
    "end": "1989120"
  },
  {
    "text": "that leads to a room that leads to a room that leads to a room that leads to a room to you guys leave when I say that too many times",
    "start": "1989120",
    "end": "1995360"
  },
  {
    "text": "and so it can match multiple paths now if you just do a query and match this and return it against the graph",
    "start": "1995360",
    "end": "2001720"
  },
  {
    "text": "that's going to be a lot of paths right so don't do that that's a good way to get a timeout",
    "start": "2001720",
    "end": "2008440"
  },
  {
    "text": "um but this is a query that you can do and you can also",
    "start": "2008440",
    "end": "2014980"
  },
  {
    "text": "give us some limits so here we're saying it needs to be at least one half away",
    "start": "2014980",
    "end": "2020500"
  },
  {
    "text": "but not more than three so this would match up you know a room leads to room that leaves a room that",
    "start": "2020500",
    "end": "2025899"
  },
  {
    "text": "leaves the room leaves through the room but no more um and so you can put boundaries around",
    "start": "2025899",
    "end": "2032260"
  },
  {
    "text": "it and so this lets us build interesting queries like hey uh I'm in the dungeon",
    "start": "2032260",
    "end": "2037779"
  },
  {
    "text": "I'm in a room what are some nearby rooms that I could go to well we could say I assuming I'm in room",
    "start": "2037779",
    "end": "2045399"
  },
  {
    "text": "number one I can match room one leads to one or two",
    "start": "2045399",
    "end": "2050980"
  },
  {
    "text": "rooms away another room and then I could return the idea name of those rooms that are nearby so this",
    "start": "2050980",
    "end": "2058060"
  },
  {
    "text": "finds nearby rooms this would be kind of like uh if you were doing Facebook you could do a query and say give me a list",
    "start": "2058060",
    "end": "2064780"
  },
  {
    "text": "of all the people that are the friend my friends and their friends which you can guarantee Facebook does",
    "start": "2064780",
    "end": "2073320"
  },
  {
    "text": "it's that sort of query I think that could be useful",
    "start": "2073540",
    "end": "2077760"
  },
  {
    "text": "let's add a little bit more to it let's find the nearby room with the most gold so here we have a little more complex of",
    "start": "2079179",
    "end": "2085000"
  },
  {
    "text": "query we've got a room that we're in leads to one or two hops away",
    "start": "2085000",
    "end": "2090158"
  },
  {
    "text": "that room must contain treasure we'll return the name of that room and",
    "start": "2090159",
    "end": "2096760"
  },
  {
    "text": "the ID and the gold piece value of that treasure order that's descending so the most",
    "start": "2096760",
    "end": "2102880"
  },
  {
    "text": "expensive the biggest item goes to the top and then limit it to one now I know which room I want to go to",
    "start": "2102880",
    "end": "2108339"
  },
  {
    "text": "next the room that's two hops away or one hop away with the most gold nearby because I'm lazy valuable because",
    "start": "2108339",
    "end": "2115060"
  },
  {
    "text": "I want to be rich you could query the longest path through",
    "start": "2115060",
    "end": "2121720"
  },
  {
    "text": "the dungeon you want to hit every room this query will do that",
    "start": "2121720",
    "end": "2127420"
  },
  {
    "text": "and the way it does it is it does that room leads to a room with a star so it finds all the paths in that graph every",
    "start": "2127420",
    "end": "2133300"
  },
  {
    "text": "single one of them every room to every room and all the paths that can get to that room",
    "start": "2133300",
    "end": "2138339"
  },
  {
    "text": "not just the shortest path all of them and here we assign that to the variable",
    "start": "2138339",
    "end": "2143859"
  },
  {
    "text": "p in our match that's the path once we have that path we can ask",
    "start": "2143859",
    "end": "2149079"
  },
  {
    "text": "questions of it so here we're going to find all the rooms and all the paths to all the rooms sign up the p",
    "start": "2149079",
    "end": "2155079"
  },
  {
    "text": "and then we'll return the nodes that are in that path and the length of that path in hops",
    "start": "2155079",
    "end": "2161740"
  },
  {
    "text": "and then we can order that by that length descending limit one and that'll give us the longest path between any",
    "start": "2161740",
    "end": "2166839"
  },
  {
    "text": "room to any room should give us the longest path through the dungeon",
    "start": "2166839",
    "end": "2172020"
  },
  {
    "text": "sort of the traveling salesman problem for Dungeons and Dragons aficionados",
    "start": "2173980",
    "end": "2179200"
  },
  {
    "text": "we can do the room with the biggest treasure here's some other syntax here we're",
    "start": "2179200",
    "end": "2184839"
  },
  {
    "text": "using a a grouping function here so we're going to match all the treasure",
    "start": "2184839",
    "end": "2190359"
  },
  {
    "text": "nodes and then we're going to take those treasure nodes and say Max of a",
    "start": "2190359",
    "end": "2195640"
  },
  {
    "text": "particular value on that node so this is going to get the the most valuable the value of the biggest treasure in the entire dungeon and we're gonna give it a",
    "start": "2195640",
    "end": "2202660"
  },
  {
    "text": "name of Max GP then we can look for all the rooms that contain treasure where the gold piece",
    "start": "2202660",
    "end": "2209380"
  },
  {
    "text": "value is equal to that Max gold piece value so this will find the room with the biggest treasure or if there's two",
    "start": "2209380",
    "end": "2216520"
  },
  {
    "text": "the ties will give you two rooms back and then we return them",
    "start": "2216520",
    "end": "2221579"
  },
  {
    "text": "and you can actually combine all of these together so here we're matching for Treasure and",
    "start": "2222640",
    "end": "2228099"
  },
  {
    "text": "getting the max gold piece value and then we use that to match the room that would contain it make that the",
    "start": "2228099",
    "end": "2234640"
  },
  {
    "text": "destination and then we get the path from the room we're in to the room we want to go to which is",
    "start": "2234640",
    "end": "2240460"
  },
  {
    "text": "the destination then we get the nodes the link and we get the link the nodes in that path the",
    "start": "2240460",
    "end": "2246579"
  },
  {
    "text": "length of that path and sort it by length ascending which will give us the shortest path to the",
    "start": "2246579",
    "end": "2251680"
  },
  {
    "text": "room with the most goal now this is not the most efficient way to do this",
    "start": "2251680",
    "end": "2258520"
  },
  {
    "text": "because it ends up having to query every path in the dungeon to get there there's actually a shortest path algorithm that",
    "start": "2258520",
    "end": "2264640"
  },
  {
    "text": "we can use instead so this does a very similar thing but instead of",
    "start": "2264640",
    "end": "2269680"
  },
  {
    "text": "just filtering our data we're actually going to call it shortest path algorithm in redis graph to",
    "start": "2269680",
    "end": "2275619"
  },
  {
    "text": "say from start to stop give me the shortest path there and this runs about an order of",
    "start": "2275619",
    "end": "2281920"
  },
  {
    "text": "magnitude faster cool I hope the answer is yes",
    "start": "2281920",
    "end": "2288220"
  },
  {
    "text": "otherwise I'm going to go back to America and cry let's demo this I think we've got time",
    "start": "2288220",
    "end": "2293859"
  },
  {
    "text": "for demo I actually I blew through that a little quicker than I normally do so that's a good thing",
    "start": "2293859",
    "end": "2300539"
  },
  {
    "text": "so I've got some demos here can we see my screen I think we can no this is the War Room yeah",
    "start": "2302380",
    "end": "2311160"
  },
  {
    "text": "so I've got a couple little demos here one thing I've done is I've built a random dungeon generator",
    "start": "2311800",
    "end": "2318400"
  },
  {
    "text": "and it will just generate a random dungeon and shove it into redis graph I create random names and everything I'm",
    "start": "2318400",
    "end": "2324400"
  },
  {
    "text": "not going to go into the code of the random dungeon generator because it's mostly about generating random names and random rooms that kind of stuff but it",
    "start": "2324400",
    "end": "2331300"
  },
  {
    "text": "does write to redis graph whenever it makes these changes and I'm going to go ahead and run this just do npm is my",
    "start": "2331300",
    "end": "2337420"
  },
  {
    "text": "font big enough or do I need to hit command plus about five times everyone in the back read it",
    "start": "2337420",
    "end": "2344940"
  },
  {
    "text": "that's probably way too big isn't it screw it go big or go home right",
    "start": "2347800",
    "end": "2355119"
  },
  {
    "text": "if you ain't first your last shake and bake um so I'm just going to do npm start that's",
    "start": "2355119",
    "end": "2361180"
  },
  {
    "text": "going to run server.js it's done I now have a generated dungeon isn't",
    "start": "2361180",
    "end": "2367839"
  },
  {
    "text": "that an impressive demo everyone okay",
    "start": "2367839",
    "end": "2372760"
  },
  {
    "text": "um let's go ahead and look in the graph so I've got this tool here redis insights which is a little GUI for redis",
    "start": "2373119",
    "end": "2380560"
  },
  {
    "text": "you can get it at I think I have a link to it in the end it's redis.com redisinsight I think",
    "start": "2380560",
    "end": "2386920"
  },
  {
    "text": "um and I'm going to go to this little workbench here and I'm going to query",
    "start": "2386920",
    "end": "2392200"
  },
  {
    "text": "the graph database so I'm going to say graph dot query and the the graph I created slightly",
    "start": "2392200",
    "end": "2398560"
  },
  {
    "text": "different from one of my slides I have a dungeon node which has a name for the whole dungeon and it has entrances and exits but then it has rooms and monsters",
    "start": "2398560",
    "end": "2404740"
  },
  {
    "text": "and stuff and the IDS work a little bit differently but this will show that this stuff is real so query dungeon",
    "start": "2404740",
    "end": "2411940"
  },
  {
    "text": "and we'll go into here we'll let's see let's say we'll do uh the select start.star select star from",
    "start": "2411940",
    "end": "2419440"
  },
  {
    "text": "query for graph first and let me begin that a bit too so I'm",
    "start": "2419440",
    "end": "2424960"
  },
  {
    "text": "just saying match node I don't care about this label just match in give me any node give me",
    "start": "2424960",
    "end": "2430540"
  },
  {
    "text": "all the nodes and return them so this is like select star this is just dump the entire graph out",
    "start": "2430540",
    "end": "2437520"
  },
  {
    "text": "and so this tool has a really cool uh visual representation here we can go",
    "start": "2438280",
    "end": "2444460"
  },
  {
    "text": "for the text response here if we want all right it just shows you all the nodes",
    "start": "2444460",
    "end": "2449740"
  },
  {
    "text": "that's not nearly as cool so we're going to go with the the graphical response here and watch everything Bounce Around",
    "start": "2449740",
    "end": "2456760"
  },
  {
    "text": "see if I can get that to you know it's a little tight but so here we have",
    "start": "2456760",
    "end": "2462880"
  },
  {
    "text": "a random monster I have no idea how to pronounce that",
    "start": "2462880",
    "end": "2468240"
  },
  {
    "text": "genith The Wraith six Rays if I and the cool thing here with this particular tool is if I double",
    "start": "2468839",
    "end": "2474880"
  },
  {
    "text": "click on that it should give me all the relations let's find a room",
    "start": "2474880",
    "end": "2482040"
  },
  {
    "text": "now here's the dungeon the Forgotten Fortress of all Superior uh",
    "start": "2482140",
    "end": "2488920"
  },
  {
    "text": "but if I double click on that it's totally worked",
    "start": "2488920",
    "end": "2494640"
  },
  {
    "text": "and normally if you double click on this I think it's my trackpad if you double click on it would show you",
    "start": "2497800",
    "end": "2503619"
  },
  {
    "text": "all the nodes this demo is totally failing",
    "start": "2503619",
    "end": "2509220"
  },
  {
    "text": "let's let's do this let's match let's match the dungeon so that node is of type dungeon there's only one of them",
    "start": "2509440",
    "end": "2515560"
  },
  {
    "text": "we say match D colon dungeon return d",
    "start": "2515560",
    "end": "2522059"
  },
  {
    "text": "so there we go there's the dungeon the Forgotten Fortress",
    "start": "2522880",
    "end": "2529119"
  },
  {
    "text": "there we go and so here's all the rooms right this is kind of cool and there's the has",
    "start": "2529119",
    "end": "2534160"
  },
  {
    "text": "entrance has exit here's the damp Hall as there's seven semi-precious stones",
    "start": "2534160",
    "end": "2541000"
  },
  {
    "text": "nine gems no monsters maybe there's some monsters in the big chasm",
    "start": "2541000",
    "end": "2546040"
  },
  {
    "text": "not seen any wait there's a monster three Orcs six wraiths so we can sort of using this",
    "start": "2546040",
    "end": "2553599"
  },
  {
    "text": "tool browse the graph somewhat awkwardly at this resolution if you had a big monitor it'd be really",
    "start": "2553599",
    "end": "2559720"
  },
  {
    "text": "nice um and you can also get just like the text out of it",
    "start": "2559720",
    "end": "2566320"
  },
  {
    "text": "and so some of these queries I was showing you earlier we could we could run here I've got them in",
    "start": "2566320",
    "end": "2571960"
  },
  {
    "text": "a little queries.text here so I go down to like um",
    "start": "2571960",
    "end": "2577660"
  },
  {
    "text": "let's go to the shortest path to the most gold the hard way",
    "start": "2577660",
    "end": "2582819"
  },
  {
    "text": "this is that shortest path to most gold without using the the function",
    "start": "2582819",
    "end": "2588838"
  },
  {
    "text": "if I go up here say graph dot query dungeon",
    "start": "2590380",
    "end": "2597780"
  },
  {
    "text": "ah I did it wrong",
    "start": "2603700",
    "end": "2607020"
  },
  {
    "text": "yeah it's got indentation in it I've changed the version that I've used to do this particular aspect of the demo",
    "start": "2611500",
    "end": "2617020"
  },
  {
    "text": "here and I have I clearly I didn't rehearse this so let's add some spaces here",
    "start": "2617020",
    "end": "2624160"
  },
  {
    "text": "put a quote there oh no I've lost it all anyhow",
    "start": "2624160",
    "end": "2629960"
  },
  {
    "text": "[Laughter] I've got a better idea let's do it from code",
    "start": "2629960",
    "end": "2637240"
  },
  {
    "text": "so I've got in here just a little demo that shows you how you can query this",
    "start": "2637240",
    "end": "2643000"
  },
  {
    "text": "using JavaScript I use JavaScript because because I hate myself",
    "start": "2643000",
    "end": "2649119"
  },
  {
    "text": "it means I go home at night and I Cry so here I'm just using node redis which",
    "start": "2649119",
    "end": "2655300"
  },
  {
    "text": "is uh the the officially supported redis client for uh for node",
    "start": "2655300",
    "end": "2661619"
  },
  {
    "text": "I'm creating a client I'm connecting I'm handling any errors",
    "start": "2661619",
    "end": "2666700"
  },
  {
    "text": "and then I call client.graph.query give it the key name my graph is in a key in redis as dungeon and then I give it a",
    "start": "2666700",
    "end": "2673960"
  },
  {
    "text": "query and so this is this simple query here is just going to match the dungeon return Dia's name and the ID",
    "start": "2673960",
    "end": "2679660"
  },
  {
    "text": "and if I run this",
    "start": "2679660",
    "end": "2682740"
  },
  {
    "text": "we can see that we get very hard to read Json out so let's",
    "start": "2685240",
    "end": "2692280"
  },
  {
    "text": "do this the dash dash silent will get rid of the the node demo.js stuff and then I'm",
    "start": "2693760",
    "end": "2700660"
  },
  {
    "text": "piping into a command line tool called JQ which is kind of like said for for JavaScript for Json which is fantastic",
    "start": "2700660",
    "end": "2707040"
  },
  {
    "text": "it's great tool and the main thing it's being used to do here is make my output pretty so here we got",
    "start": "2707040",
    "end": "2714220"
  },
  {
    "text": "our dungeon name the Forgotten Fortress of all pirar uh",
    "start": "2714220",
    "end": "2719380"
  },
  {
    "text": "if we run the uh generation again and run this command again we'll get another dungeon name",
    "start": "2719380",
    "end": "2724420"
  },
  {
    "text": "the dim caves of bungo let's do one more just for just for",
    "start": "2724420",
    "end": "2730540"
  },
  {
    "text": "just for the hell of it one of these days I'm getting something that's just horribly inappropriate",
    "start": "2730540",
    "end": "2737140"
  },
  {
    "text": "the fabled castle of hergbog I'm going to use that in my next d d",
    "start": "2737140",
    "end": "2742540"
  },
  {
    "text": "game um but what we can do is we can take some of these queries I was showing you",
    "start": "2742540",
    "end": "2748240"
  },
  {
    "text": "earlier and we can just swap them out here in the code so we'll go to this query here",
    "start": "2748240",
    "end": "2755079"
  },
  {
    "text": "go into demo.js because I'm using",
    "start": "2755079",
    "end": "2763020"
  },
  {
    "text": "back ticks that will work",
    "start": "2764140",
    "end": "2768240"
  },
  {
    "text": "so that ran in about 900 milliseconds which isn't bad",
    "start": "2772540",
    "end": "2777640"
  },
  {
    "text": "it's slow by Reddit standards but it's not bad and um this is the longest path",
    "start": "2777640",
    "end": "2783099"
  },
  {
    "text": "through the dungeon these are the nodes and that is the length of that path so there's three edges between those nodes",
    "start": "2783099",
    "end": "2790720"
  },
  {
    "text": "if we do the other query",
    "start": "2790720",
    "end": "2795760"
  },
  {
    "text": "down here which uses the shortest path algorithm we should see a significant Improvement",
    "start": "2795760",
    "end": "2803680"
  },
  {
    "text": "I actually haven't demoed that comparison live so you're going to find out with me how much of an improvement it is I know I said order of magnitude",
    "start": "2803680",
    "end": "2810819"
  },
  {
    "text": "earlier in the talk I may have been making that up on the Fly",
    "start": "2810819",
    "end": "2815760"
  },
  {
    "text": "let's run that eight milliseconds it's two orders of magnitude I was totally making that up",
    "start": "2818260",
    "end": "2824740"
  },
  {
    "text": "on the Fly I meant to say I didn't want to exaggerate you know",
    "start": "2824740",
    "end": "2830800"
  },
  {
    "text": "but yeah so clearly that's a lot faster right and uh and it should have gotten me the same results",
    "start": "2830800",
    "end": "2836200"
  },
  {
    "text": "it actually gave me a different result result for the longest path the shortest path through the dungeon",
    "start": "2836200",
    "end": "2841359"
  },
  {
    "text": "um oh no no no this is the this is these are the nodes",
    "start": "2841359",
    "end": "2846460"
  },
  {
    "text": "these are the edges node Edge node Edge so so they both have they both have the",
    "start": "2846460",
    "end": "2851740"
  },
  {
    "text": "length of three so it's the same path so cool that's the demo it's",
    "start": "2851740",
    "end": "2859420"
  },
  {
    "text": "it actually works it actually works yeah",
    "start": "2859420",
    "end": "2864059"
  },
  {
    "text": "so let's go ahead get back to the slides",
    "start": "2864520",
    "end": "2870040"
  },
  {
    "text": "there we go you all see that I can't see the screens that you see so",
    "start": "2870040",
    "end": "2875380"
  },
  {
    "text": "so this has been fun and kind of a impractical exercise right but there are actually practical applications for",
    "start": "2875380",
    "end": "2881440"
  },
  {
    "text": "graph databases I hinted at some earlier as we were friends on Facebook but you don't follow me on Twitter because I",
    "start": "2881440",
    "end": "2887020"
  },
  {
    "text": "know that's how you are thank you for letting me pick on you by the way practical applications obviously",
    "start": "2887020",
    "end": "2893980"
  },
  {
    "text": "social networks social graph is an obvious super obvious application Twitter Facebook you got a social graph",
    "start": "2893980",
    "end": "2899560"
  },
  {
    "text": "friends of friends of friends you can query a graph database and say well give me all my friends of friends and then",
    "start": "2899560",
    "end": "2904839"
  },
  {
    "text": "their friends and then you can do like intersections of those sets and say this is probably a friend that you should know you probably know this person",
    "start": "2904839",
    "end": "2910240"
  },
  {
    "text": "because you have these all these people in common graph databases are excellent for that kind of stuff",
    "start": "2910240",
    "end": "2916560"
  },
  {
    "text": "genealogy this is just social networks extruded over time",
    "start": "2916619",
    "end": "2922420"
  },
  {
    "text": "right um you know so you've got parents and children and siblings and spouses and",
    "start": "2922420",
    "end": "2928119"
  },
  {
    "text": "all that kind of stuff another natural problem to solve with the graph database",
    "start": "2928119",
    "end": "2934260"
  },
  {
    "text": "Transportation Networks all of your intersections are obvious nodes",
    "start": "2934260",
    "end": "2939520"
  },
  {
    "text": "your roads are the edges bus stops train stations",
    "start": "2939520",
    "end": "2944579"
  },
  {
    "text": "taxi pickups those would all be part nodes on the transportation Network and then you could query that Network and",
    "start": "2944579",
    "end": "2950020"
  },
  {
    "text": "find the shortest path you could weight those edges based on traffic conditions and find the best path given the traffic",
    "start": "2950020",
    "end": "2956500"
  },
  {
    "text": "conditions and Logistics networks so if you want to figure out",
    "start": "2956500",
    "end": "2962160"
  },
  {
    "text": "I had a boss who like to use an example of uh poison spinach",
    "start": "2962160",
    "end": "2967420"
  },
  {
    "text": "it's like anti-pop eye but um the uh where you had we had some",
    "start": "2967420",
    "end": "2972880"
  },
  {
    "text": "problems in the US few years ago with spinach that had been contaminated with E coli and it's like well we figured out",
    "start": "2972880",
    "end": "2979300"
  },
  {
    "text": "that it's in these stores where they bought it and we could query the logistics network of the stores and the",
    "start": "2979300",
    "end": "2985240"
  },
  {
    "text": "warehouses and the trucks and the farms and figure out which Farms it could have come from",
    "start": "2985240",
    "end": "2990760"
  },
  {
    "text": "um you know I suppose I don't have this example here but of course epidemiology is an obvious scenario for this as well",
    "start": "2990760",
    "end": "2995920"
  },
  {
    "text": "so but too soon [Laughter]",
    "start": "2995920",
    "end": "3002339"
  },
  {
    "text": "so so lots of practical applications I actually think there's an even more application for uh redis graph which is",
    "start": "3002339",
    "end": "3008280"
  },
  {
    "text": "honestly it really would work for any database a lot of your problems that you could",
    "start": "3008280",
    "end": "3015119"
  },
  {
    "text": "solve with a relational database can be modeled neatly in a graph database almost in a more I shut her almost to say this an",
    "start": "3015119",
    "end": "3021900"
  },
  {
    "text": "object-oriented way like object-oriented programming in my brain has always been programming around nouns whereas like",
    "start": "3021900",
    "end": "3027780"
  },
  {
    "text": "functional programming is programming around verbs or procedurals programming on verbs and this feels in a way similar",
    "start": "3027780",
    "end": "3033540"
  },
  {
    "text": "it's like I could easily map all of my uh graph entities to an object graph in",
    "start": "3033540",
    "end": "3039240"
  },
  {
    "text": "memory and so I feel like there's a good Synergy there so really any problem you",
    "start": "3039240",
    "end": "3044280"
  },
  {
    "text": "could model like a policy system with a graph database and you've got policy nodes and you've got customer nodes and",
    "start": "3044280",
    "end": "3049380"
  },
  {
    "text": "you've got writer nodes and just all the things that you would have like on an insurance policy",
    "start": "3049380",
    "end": "3054660"
  },
  {
    "text": "but if you want to play with these any of these practical or impractical operate options with",
    "start": "3054660",
    "end": "3060300"
  },
  {
    "text": "um graph databases the easiest way to do that is to use Reddit stack redistack is well it's just redis",
    "start": "3060300",
    "end": "3068359"
  },
  {
    "text": "but redis with plugins so redis has this capability to",
    "start": "3068359",
    "end": "3074339"
  },
  {
    "text": "add modules to it you can add Json redis Json so you can have a Json type you can add search so you can search those Json",
    "start": "3074339",
    "end": "3080940"
  },
  {
    "text": "documents you can add graph databases which is what we've been talking about today so you can use redis graph as part",
    "start": "3080940",
    "end": "3087599"
  },
  {
    "text": "of Reddit stack uh there's a Time series mechanism in there as well and redis blue meds probabilistic data",
    "start": "3087599",
    "end": "3094500"
  },
  {
    "text": "structures if anyone that was in Steve's talked yesterday on probabilistic data structures he was using redisplume",
    "start": "3094500",
    "end": "3101400"
  },
  {
    "text": "you want to get rid of Stack go to redis.io Doc slash stack and there'll be a nice Docker command that you can copy",
    "start": "3101400",
    "end": "3108119"
  },
  {
    "text": "and paste and you'll be up and running before you know it so and um while we're talking about all the",
    "start": "3108119",
    "end": "3115079"
  },
  {
    "text": "paying the bills here I've been working for redis for one die four minus one years",
    "start": "3115079",
    "end": "3120599"
  },
  {
    "text": "uh we have a Discord server I'm often on it many of my co-workers are on that as well so if you are a Discord user and",
    "start": "3120599",
    "end": "3127500"
  },
  {
    "text": "you want to use these toys and play with them and do cool stuff and you have questions you can post them on Discord discord.gg redis we got about I think",
    "start": "3127500",
    "end": "3135119"
  },
  {
    "text": "we've got about 6 000 people on there now or so or seven thousand it's growing quite nicely",
    "start": "3135119",
    "end": "3140339"
  },
  {
    "text": "um the client I use to talk to redisgraph and just to redis in general is called redis insights if you do read",
    "start": "3140339",
    "end": "3146099"
  },
  {
    "text": "a stack it comes automatically with it you can install it separately at redis.com redisinsight",
    "start": "3146099",
    "end": "3152819"
  },
  {
    "text": "and um if you want to uh you don't want to install redis on your machine you just want to use a cloud thing there's",
    "start": "3152819",
    "end": "3158579"
  },
  {
    "text": "free Cloud instances out there at redis.com try free and if you could use code stack 200 then you will get 200 in",
    "start": "3158579",
    "end": "3164940"
  },
  {
    "text": "free credits and my boss will know that you attended my talk",
    "start": "3164940",
    "end": "3169280"
  },
  {
    "text": "all the slides are up on GitHub all the code is up on GitHub so you can you can QR code this link it will never give you",
    "start": "3171000",
    "end": "3177660"
  },
  {
    "text": "up nor let you down or take you to some site that it's not supposed to",
    "start": "3177660",
    "end": "3182880"
  },
  {
    "text": "everyone's like oh [ __ ] uh that's my talk I've actually got time",
    "start": "3182880",
    "end": "3188460"
  },
  {
    "text": "for a couple questions if anyone has any so yeah we got about seven minutes or",
    "start": "3188460",
    "end": "3193859"
  },
  {
    "text": "does everyone just want to go start drinking [Laughter]",
    "start": "3193859",
    "end": "3198720"
  },
  {
    "text": "so yeah so the question was is uh you've got referential Integrity uh in a",
    "start": "3212240",
    "end": "3217680"
  },
  {
    "text": "relational database and uh that keeps you from putting a monster say in two rooms and how do you",
    "start": "3217680",
    "end": "3223920"
  },
  {
    "text": "keep that from happening in graph the answer is you don't a graph doesn't provide that that is",
    "start": "3223920",
    "end": "3229980"
  },
  {
    "text": "something you'll have to do in your code so graph doesn't know the schema you could put you could you could say a room",
    "start": "3229980",
    "end": "3235440"
  },
  {
    "text": "contains a room you could say a monster is contained is in multiple rooms you could totally do that now semantically",
    "start": "3235440",
    "end": "3242220"
  },
  {
    "text": "that doesn't make any sense but the graph doesn't care you can connect anything to anything yes sir",
    "start": "3242220",
    "end": "3249260"
  },
  {
    "text": "um no actually I'm not but uh my father is Bigfoot",
    "start": "3250980",
    "end": "3257359"
  },
  {
    "text": "I haven't seen him in years he's hard to find yeah he went out one day for milk and cigarettes and never came back",
    "start": "3257940",
    "end": "3263370"
  },
  {
    "text": "[Laughter] yes sir",
    "start": "3263370",
    "end": "3268760"
  },
  {
    "text": "performance difference between preparing notes I just weren't there like gold safely you know I don't honestly I don't",
    "start": "3273020",
    "end": "3279059"
  },
  {
    "text": "know um I can't imagine that the question was is querying against the edges versus the",
    "start": "3279059",
    "end": "3284400"
  },
  {
    "text": "nodes more performant than one way or the other I don't think there's a big difference um there's probably some algorithms",
    "start": "3284400",
    "end": "3291240"
  },
  {
    "text": "where this matters some of the building algorithms like the shortest path algorithm you can you can use weights on the edges if you tried doing that",
    "start": "3291240",
    "end": "3298440"
  },
  {
    "text": "another way you wouldn't have access to that algorithm so there's certain things it kind of just it works that way",
    "start": "3298440",
    "end": "3303660"
  },
  {
    "text": "um I wouldn't imagine there'd be a huge difference but I don't know I find in general I tend to if I",
    "start": "3303660",
    "end": "3309359"
  },
  {
    "text": "lots of times if I find myself wanting to put properties on my edges that means I actually have a node that I didn't",
    "start": "3309359",
    "end": "3314819"
  },
  {
    "text": "realize I had so like I tried modeling a uh whoever who all ever played muds the multi-user",
    "start": "3314819",
    "end": "3320640"
  },
  {
    "text": "dungeons text-based things okay you're all over 40. um",
    "start": "3320640",
    "end": "3326339"
  },
  {
    "text": "in their I tried building one of those using redis graph as a back end because it was",
    "start": "3326339",
    "end": "3331800"
  },
  {
    "text": "a very natural metaphor right and it would be fun for this talk and what I ended up doing was I created",
    "start": "3331800",
    "end": "3338280"
  },
  {
    "text": "connections between the rooms to be the corridors and I quickly realized that the the edges were actually door nodes",
    "start": "3338280",
    "end": "3346800"
  },
  {
    "text": "and then the doors were in rooms and connected to other rooms because I had a bunch of properties that were on those",
    "start": "3346800",
    "end": "3352440"
  },
  {
    "text": "and so uh that's the that's just my sort of back of the envelope experience and so I think if you find what you're",
    "start": "3352440",
    "end": "3358500"
  },
  {
    "text": "asking is I want to load up my edges with data you probably have nodes that you don't know you have but that's just sort of armchair",
    "start": "3358500",
    "end": "3364859"
  },
  {
    "text": "architecting any other questions I see one back there",
    "start": "3364859",
    "end": "3370160"
  },
  {
    "text": "that's a great question so he asked he noticed that I had a node that connected back to itself and uh when you query",
    "start": "3381920",
    "end": "3388619"
  },
  {
    "text": "that will it go forever can you create an endless loop in a query because there certainly are if you",
    "start": "3388619",
    "end": "3395819"
  },
  {
    "text": "go path to path what are all the paths through some of these graphs well sometimes they're infinite it will stop",
    "start": "3395819",
    "end": "3400920"
  },
  {
    "text": "the graph detects this I I don't know how it does internally but it does do that it won't uh run forever so great",
    "start": "3400920",
    "end": "3408000"
  },
  {
    "text": "question I meant to bring that up in my talk and I forgot so thank you for filling in my gaps it's all another hand",
    "start": "3408000",
    "end": "3413160"
  },
  {
    "text": "up there right there and then there's one back there",
    "start": "3413160",
    "end": "3416660"
  },
  {
    "text": "yeah so the question is how's the scaling graph databases are pretty memory heavy um it's actually pretty good redis has",
    "start": "3420660",
    "end": "3427140"
  },
  {
    "text": "some limitations because the graph is stored in a key uh the graphs are limited to about 195",
    "start": "3427140",
    "end": "3433440"
  },
  {
    "text": "megabytes for a single key if you are doing a lot of modifications because it's in a single key",
    "start": "3433440",
    "end": "3441359"
  },
  {
    "text": "um you can't scale it horizontally because redis has to have that key in a particular Shard and it lives there now",
    "start": "3441359",
    "end": "3446760"
  },
  {
    "text": "if you need to read and you're just you're if you get a read heavy graph which I think is often the case",
    "start": "3446760",
    "end": "3452520"
  },
  {
    "text": "um then you can replicate that key to other nodes to other shards and then you can scale that out very nicely horizontally",
    "start": "3452520",
    "end": "3458940"
  },
  {
    "text": "um as far as just performance internally they can be Memory hungry there's",
    "start": "3458940",
    "end": "3464700"
  },
  {
    "text": "there's two ways in memory to represent a graph I don't have a slide for it I almost almost put the slide in but I didn't one way is that you can have a",
    "start": "3464700",
    "end": "3471720"
  },
  {
    "text": "bunch of linked lists and so a linked list has a node and then it's all the nodes it has relationships to it or in",
    "start": "3471720",
    "end": "3477000"
  },
  {
    "text": "that linked list and then you got a linked list for each node in the graph that's nice and compact it does it's",
    "start": "3477000",
    "end": "3483780"
  },
  {
    "text": "memory efficient but it's a lot of O of n operations across lists right linked lists you guys you got to walk the list",
    "start": "3483780",
    "end": "3490200"
  },
  {
    "text": "the other way that you can store a graph in memory is you can use a matrix and that Matrix then is all the nodes",
    "start": "3490200",
    "end": "3496559"
  },
  {
    "text": "and all the nodes and then there's a number representing a particular type of",
    "start": "3496559",
    "end": "3503400"
  },
  {
    "text": "edge between those two nodes and then you've got a it takes has a space complexity of O of",
    "start": "3503400",
    "end": "3511500"
  },
  {
    "text": "N squared that's the problem with that approach you know if you've got a million nodes and you've got a million by million Matrix that's big and that's",
    "start": "3511500",
    "end": "3518760"
  },
  {
    "text": "where it starts to blow up memory redis actually kind of splits the difference and we use a library called graph blast",
    "start": "3518760",
    "end": "3525420"
  },
  {
    "text": "and so it uses a sparse Matrix maestrocities to store that which basically means it doesn't store the",
    "start": "3525420",
    "end": "3530460"
  },
  {
    "text": "zeros and then it's it's a very performant API against those sorts of matrices and then",
    "start": "3530460",
    "end": "3536160"
  },
  {
    "text": "all your queries are just linear algebra problems and so it actually performs very good at",
    "start": "3536160",
    "end": "3541500"
  },
  {
    "text": "scale uh the bigger limitation is just you can only shove so much into a individual key in redis",
    "start": "3541500",
    "end": "3547380"
  },
  {
    "text": "um but yeah that's a good question uh I saw another question back there",
    "start": "3547380",
    "end": "3553460"
  },
  {
    "text": "how would I choose between a relational graph database so if I was doing real work",
    "start": "3555859",
    "end": "3561540"
  },
  {
    "text": "I would probably choose to use a relational database until I I couldn't um",
    "start": "3561540",
    "end": "3566880"
  },
  {
    "text": "honestly um the graph database well I'm clearly the only answer is",
    "start": "3566880",
    "end": "3573359"
  },
  {
    "text": "redis [Laughter]",
    "start": "3573359",
    "end": "3578819"
  },
  {
    "text": "that's really the differentiator for graph database I mean it's it's it actually is a good metaphor for the kinds of problems you would want to",
    "start": "3578819",
    "end": "3584040"
  },
  {
    "text": "solve but the thing that really differentiates it is the pathing queries so if I've got nodes and I want to do",
    "start": "3584040",
    "end": "3589440"
  },
  {
    "text": "solve pathing problems between things that that's really it's it's super power",
    "start": "3589440",
    "end": "3595280"
  },
  {
    "text": "so for social graphs it's great because it lets you find friends of friends and find intersections of those structures",
    "start": "3595280",
    "end": "3601680"
  },
  {
    "text": "for net Transportation stuff it lets you find paths through Transportation grid but there's lots of things that are",
    "start": "3601680",
    "end": "3606720"
  },
  {
    "text": "passing problems that you need to solve so that's where it shines and so if I had those sorts of problems I would be",
    "start": "3606720",
    "end": "3612059"
  },
  {
    "text": "looking at graph databases if I didn't have those sorts of problems I'd probably use something a little simpler I would use redis",
    "start": "3612059",
    "end": "3620180"
  },
  {
    "text": "yes what's the licensing on Reddit stack Retta stack is under the redis source",
    "start": "3621059",
    "end": "3628020"
  },
  {
    "text": "available license which is a I'm going to say it's a very generous license it basically says you can use it all you",
    "start": "3628020",
    "end": "3633960"
  },
  {
    "text": "want and if you want to manage it infrastructure yourself you don't have to pass the dime unless you're going to",
    "start": "3633960",
    "end": "3639540"
  },
  {
    "text": "resell it as like a competitive product so you can't take redisgraph as a module put on a redis and say hi we're",
    "start": "3639540",
    "end": "3645720"
  },
  {
    "text": "releasing this new graph product yeah if you want to do that you'll have to pass some money right",
    "start": "3645720",
    "end": "3651839"
  },
  {
    "text": "uh but otherwise if you're like you know like if you're an auto manufacturer and you want to use a graph database for some reason and you want to use redis",
    "start": "3651839",
    "end": "3658319"
  },
  {
    "text": "graph and you want to manage the infrastructure yourself have fun it's perfectly fine",
    "start": "3658319",
    "end": "3664079"
  },
  {
    "text": "any other questions I think I don't know if I have till 40 or 50. I think I think I'm done ain't I",
    "start": "3664079",
    "end": "3670799"
  },
  {
    "text": "I've lost track yeah we're done we're a minute over so thanks a lot everyone",
    "start": "3670799",
    "end": "3678020"
  }
]