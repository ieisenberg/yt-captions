[
  {
    "start": "0",
    "end": "100000"
  },
  {
    "text": "okay welcome to this talk about clojurescript the very last session on nbc2 2021",
    "start": "7440",
    "end": "15200"
  },
  {
    "text": "so thank you for showing up and for tuning in if you're tuning in online",
    "start": "15200",
    "end": "21039"
  },
  {
    "text": "so this talk will be i'll show you uh the closure script",
    "start": "21039",
    "end": "26400"
  },
  {
    "text": "programming language and what it's like developing with it so",
    "start": "26400",
    "end": "31599"
  },
  {
    "text": "it's a closed grip is a functional programming language that compiles to javascript and it has a bunch of really excellent",
    "start": "31599",
    "end": "38160"
  },
  {
    "text": "tools for front-end web development and it has a quite unique development",
    "start": "38160",
    "end": "45120"
  },
  {
    "text": "um development environment that's very very dynamic and interactive",
    "start": "45120",
    "end": "50480"
  },
  {
    "text": "and the goal this talk is to show you what it's like working with us so i don't have any slides i just have",
    "start": "50480",
    "end": "57280"
  },
  {
    "text": "my text editor you see on screen now so i'll be writing some code trying to explain some basic features of the",
    "start": "57280",
    "end": "63199"
  },
  {
    "text": "language and show you the tools that you have available to work with",
    "start": "63199",
    "end": "68720"
  },
  {
    "text": "yes my name is christine johnson i work for cool markers as a consultancy here",
    "start": "68880",
    "end": "75200"
  },
  {
    "text": "in town and for the past four years i've worked full time with clojurescript and clojure",
    "start": "75200",
    "end": "81040"
  },
  {
    "text": "and then i've done a lot of closure script also prior to that all the way back to 2013.",
    "start": "81040",
    "end": "88920"
  },
  {
    "text": "so let's get started so i'll start by just taking a quick look at the language and the best way to",
    "start": "89280",
    "end": "95680"
  },
  {
    "text": "introduce the language i find is to look at its data structures so it compiles the javascript and it",
    "start": "95680",
    "end": "101920"
  },
  {
    "start": "100000",
    "end": "167000"
  },
  {
    "text": "runs in a javascript environment and so it uses",
    "start": "101920",
    "end": "107040"
  },
  {
    "text": "it uses javascript where it can so numbers in cloud descript are javascript numbers there's nothing special about",
    "start": "107040",
    "end": "113360"
  },
  {
    "text": "them same thing with strings strings are also just javascript strings",
    "start": "113360",
    "end": "120000"
  },
  {
    "text": "things start to look different when you want to call functions so in like in javascript you could",
    "start": "120000",
    "end": "125360"
  },
  {
    "text": "imagine doing something like this you call inc to increment the number and in closure script this looks very",
    "start": "125360",
    "end": "130879"
  },
  {
    "text": "different because the parentheses goes from the beginning and closed could actually does this for a",
    "start": "130879",
    "end": "137120"
  },
  {
    "text": "very very good reason that i will explain shortly but i can evaluate this so anytime you see this on the screen",
    "start": "137120",
    "end": "144959"
  },
  {
    "text": "the arrow pointing that's me eval evaluating the code and getting an answer back so ink increments the number",
    "start": "144959",
    "end": "151360"
  },
  {
    "text": "by one cool i can call functions on strings as well",
    "start": "151360",
    "end": "156640"
  },
  {
    "text": "so let's see we can do repeat three and if i evaluate that i get a list of",
    "start": "156640",
    "end": "162720"
  },
  {
    "text": "three strings repeated one after another okay there are more data types here if we",
    "start": "162720",
    "end": "169040"
  },
  {
    "start": "167000",
    "end": "282000"
  },
  {
    "text": "have booleans of course and then we have this thing here which looks like in",
    "start": "169040",
    "end": "174879"
  },
  {
    "text": "javascript array except it's called a vector enclosure script but it works the same way it's an indexed data structure",
    "start": "174879",
    "end": "181120"
  },
  {
    "text": "you can add things to the end of it and then we of course saw let me just",
    "start": "181120",
    "end": "186159"
  },
  {
    "text": "copy this one we saw this other kind of list that we got before",
    "start": "186159",
    "end": "191920"
  },
  {
    "text": "and you have sets which are unordered sets of collections of items that",
    "start": "191920",
    "end": "197360"
  },
  {
    "text": "enforces unique entries inside and then i will show you two more things",
    "start": "197360",
    "end": "204239"
  },
  {
    "text": "so this thing here is called a keyword and a keyword is much like a string except",
    "start": "204239",
    "end": "210799"
  },
  {
    "text": "you would use it typically in technical context so if you want to use it for a",
    "start": "210799",
    "end": "215840"
  },
  {
    "text": "key in a map wherever you use strings in your code basically including use",
    "start": "215840",
    "end": "221440"
  },
  {
    "text": "keywords instead so let's make a map then",
    "start": "221440",
    "end": "227040"
  },
  {
    "text": "this is a map has key value pairs and you typically use you can use",
    "start": "227040",
    "end": "232319"
  },
  {
    "text": "strings for you can you use any value for keys and maps but typically you use keywords",
    "start": "232319",
    "end": "237360"
  },
  {
    "text": "so these are roughly most of the data types that this language has for you to work with",
    "start": "237360",
    "end": "242959"
  },
  {
    "text": "and there are a few interesting things that we need to discuss here before we move on and the first one is that all of these",
    "start": "242959",
    "end": "249120"
  },
  {
    "text": "data types are immutable which means that they cannot change so we already",
    "start": "249120",
    "end": "255040"
  },
  {
    "text": "know this is true from strings right so if i have a string here and i call",
    "start": "255040",
    "end": "261919"
  },
  {
    "text": "to lowercase on it then that gives me a new string it",
    "start": "261919",
    "end": "267520"
  },
  {
    "text": "doesn't ruin my old string right the old one is still the uppercase string and the new one is the lowercase strings so",
    "start": "267520",
    "end": "274960"
  },
  {
    "text": "colorscape does the same for all these data types so if i call this structure here",
    "start": "274960",
    "end": "280840"
  },
  {
    "text": "numbers i have the numbers and i can do conj which",
    "start": "280840",
    "end": "286400"
  },
  {
    "text": "adds to the end of the list now i have a list of one two three four five six but the old list still only has",
    "start": "286400",
    "end": "293199"
  },
  {
    "text": "one two three four five so this enables us to write functional code",
    "start": "293199",
    "end": "299600"
  },
  {
    "text": "all these data types are immutable okay very good another thing that's interesting",
    "start": "299840",
    "end": "305680"
  },
  {
    "text": "is that if you take a look at this list here this has the exact same appearance as",
    "start": "305680",
    "end": "311680"
  },
  {
    "text": "the function call that created it right and the reason for this is that",
    "start": "311680",
    "end": "317600"
  },
  {
    "text": "clojurescript code which this is is cladoscript data so the language is built up of its own",
    "start": "317600",
    "end": "324720"
  },
  {
    "text": "data structures and in fact all the syntax in the language",
    "start": "324720",
    "end": "329919"
  },
  {
    "text": "or roughly all of it maybe 95 are already covered on this slide this is all the syntax the language has",
    "start": "329919",
    "end": "336800"
  },
  {
    "text": "it just uses these data types in different orderings to create other structures so if i want to do an if",
    "start": "336800",
    "end": "342320"
  },
  {
    "text": "that's a parenthesis it's a list and then you have an expression here",
    "start": "342320",
    "end": "348638"
  },
  {
    "text": "and then you have the true part and the false part and what about this one is that an operator no it's not an operator",
    "start": "348720",
    "end": "355280"
  },
  {
    "text": "it's a function so anything that typically in other languages are operators are functions",
    "start": "355280",
    "end": "362319"
  },
  {
    "text": "okay but how come this is a function call and this is data",
    "start": "362400",
    "end": "367919"
  },
  {
    "text": "well that just it's up to how you evaluate it so when",
    "start": "367919",
    "end": "374479"
  },
  {
    "text": "you evaluate it in the context of a program clone descript expects the first thing in the list to be a function that",
    "start": "374479",
    "end": "380400"
  },
  {
    "text": "it calls with the other arguments so if i try to evaluate this one i get the list but if i evaluate this one i",
    "start": "380400",
    "end": "387360"
  },
  {
    "text": "get an error because strings are not functions so i can't call it",
    "start": "387360",
    "end": "393680"
  },
  {
    "text": "but if i put a quotation mark in front of it i can evaluate it as literal data and you can do the same thing",
    "start": "393680",
    "end": "400479"
  },
  {
    "text": "with code so now i just get a list back with a symbol a number and a string and",
    "start": "400479",
    "end": "406560"
  },
  {
    "text": "you can you can even manipulate the code as if it were data so i could say filter",
    "start": "406560",
    "end": "411680"
  },
  {
    "text": "number and then i get back all the pieces of code that was a number this is pretty cool and",
    "start": "411680",
    "end": "418639"
  },
  {
    "text": "this is what you use to create macros which is code that generates code i'm not going to talk a lot about that today",
    "start": "418639",
    "end": "424160"
  },
  {
    "text": "but it's an interesting aspect of the language a more practical aspect of this is that",
    "start": "424160",
    "end": "430479"
  },
  {
    "text": "because all the code is data we can approach it when we work with it in a little bit different",
    "start": "430479",
    "end": "436240"
  },
  {
    "text": "manner so i'll show you this by creating a function i'll call it magnify",
    "start": "436240",
    "end": "441440"
  },
  {
    "text": "and it's going to magnify a number into on the undefined manner okay",
    "start": "441440",
    "end": "446720"
  },
  {
    "text": "so i can call this now this way and it doubles the number so again we have just a bunch of data so",
    "start": "446720",
    "end": "453280"
  },
  {
    "text": "you can look at the code as a tree basically and my editor can then use",
    "start": "453280",
    "end": "459599"
  },
  {
    "text": "structural commands to navigate the code so now if i hit down i go into the list",
    "start": "459599",
    "end": "465440"
  },
  {
    "text": "and i can go forward forward forward or back and then down again to go into this list",
    "start": "465440",
    "end": "471680"
  },
  {
    "text": "and you can really think about your code in a much more structured manner than you are probably used to and if i go up",
    "start": "471680",
    "end": "479360"
  },
  {
    "text": "up i get back up to the top so that's navigation but editing is even more interesting so let's say that i",
    "start": "479360",
    "end": "485120"
  },
  {
    "text": "want to treat negative numbers differently well i will have need to have an if",
    "start": "485120",
    "end": "490800"
  },
  {
    "text": "and then i say if it's positive oh sorry if it's positive now i want this thing",
    "start": "490800",
    "end": "496080"
  },
  {
    "text": "to be my if part and something else would be the else part i could cop it and move it to the right",
    "start": "496080",
    "end": "501680"
  },
  {
    "text": "place or i could just use the command slurp which moves the next expression into the",
    "start": "501680",
    "end": "507039"
  },
  {
    "text": "one i'm inside and then we could have a separate case for negative numbers this is obviously",
    "start": "507039",
    "end": "514080"
  },
  {
    "text": "just a silly function [Music] yeah there we go and then maybe i regret",
    "start": "514080",
    "end": "519919"
  },
  {
    "text": "this and i just want i only need this in my implementation then i can perform the command raise",
    "start": "519919",
    "end": "526320"
  },
  {
    "text": "which makes this expression take the place of its surrounding expression right so it's inside an expression and i lift",
    "start": "526320",
    "end": "533200"
  },
  {
    "text": "it up and this is actually very very useful when you edit code",
    "start": "533200",
    "end": "538320"
  },
  {
    "text": "so in this mode of editing it's also impossible to delete characters that would unbalance your tree so i this i'm",
    "start": "538320",
    "end": "545519"
  },
  {
    "text": "hitting backspace here now i cannot delete these parentheses because it does not make any sense",
    "start": "545519",
    "end": "551440"
  },
  {
    "text": "i can only delete them when i delete the entire expression okay",
    "start": "551440",
    "end": "557040"
  },
  {
    "text": "so i've been evaluating this and running this and i said that closures group compiles to javascript so where",
    "start": "557040",
    "end": "563040"
  },
  {
    "text": "is this running it needs to run in a javascript environment right well right now it's running inside emacs",
    "start": "563040",
    "end": "569360"
  },
  {
    "text": "but emacs is talking to the outsold side world to make this happen so",
    "start": "569360",
    "end": "574720"
  },
  {
    "start": "574000",
    "end": "878000"
  },
  {
    "text": "let's see if i do js slash i can access the javascript global namespace so anything that's available in javascript",
    "start": "574720",
    "end": "583120"
  },
  {
    "text": "is available on the jslash so if i type alert i can say hello",
    "start": "583120",
    "end": "589120"
  },
  {
    "text": "and now firefox starts jumping because there's an alert box over in my browser here",
    "start": "589120",
    "end": "595279"
  },
  {
    "text": "and you can even see my exception from before over in the dev tools here",
    "start": "595279",
    "end": "601200"
  },
  {
    "text": "so this is the browser that's running my code and this browser we will work with for the rest of this presentation so let",
    "start": "601200",
    "end": "608480"
  },
  {
    "text": "me just do this is is it readable",
    "start": "608480",
    "end": "614720"
  },
  {
    "text": "fonts not the browser uh",
    "start": "614720",
    "end": "620720"
  },
  {
    "text": "yeah cool okay so",
    "start": "621120",
    "end": "626560"
  },
  {
    "text": "we have the browser and we have a live environment inside our editor let's start to build something",
    "start": "626560",
    "end": "632399"
  },
  {
    "text": "so the code that we did before i'm going to stick inside something called a comment which looks like this",
    "start": "632399",
    "end": "638640"
  },
  {
    "text": "and what this does is that it allows me to keep the code here if i",
    "start": "638640",
    "end": "645040"
  },
  {
    "text": "want to evaluate it to test things out but when closing compiles this file it's",
    "start": "645040",
    "end": "650079"
  },
  {
    "text": "just going to remove the whole thing so if you load this file in the browser nothing's going to happen but i have it",
    "start": "650079",
    "end": "655839"
  },
  {
    "text": "available to play around with if i want to test functions in my namespace or whatever",
    "start": "655839",
    "end": "661600"
  },
  {
    "text": "so we'll just keep that here and now to render something on screen i will pull down a library",
    "start": "661600",
    "end": "668240"
  },
  {
    "text": "which is called dum-dum and dum-dum is a component library that",
    "start": "668240",
    "end": "675120"
  },
  {
    "text": "works similar to how react works you can define uh components that define",
    "start": "675120",
    "end": "680880"
  },
  {
    "text": "the markup of your page and the library makes sure that the dom has the same structure",
    "start": "680880",
    "end": "686560"
  },
  {
    "text": "and it does so in an efficient manner and because colorscript has immutable data structures it can really make that",
    "start": "686560",
    "end": "692399"
  },
  {
    "text": "diffing operation very efficiently so uh dim dome um",
    "start": "692399",
    "end": "699920"
  },
  {
    "text": "by the way i don't don't know if you can see the bottom of my screen but towards the bottom here i get uh",
    "start": "699920",
    "end": "706480"
  },
  {
    "text": "you see the uh the signature of the function to help me",
    "start": "706480",
    "end": "711519"
  },
  {
    "text": "work with it so the render takes a component and an element to put it inside of so the",
    "start": "711519",
    "end": "716800"
  },
  {
    "text": "element i can get because i prepared it before this talk so it's called get element by id",
    "start": "716800",
    "end": "722959"
  },
  {
    "text": "app and to make sure that i remember correctly i can evaluate this and yes that's a development",
    "start": "722959",
    "end": "731040"
  },
  {
    "text": "and then the smallest component i can make looks like this",
    "start": "731040",
    "end": "736000"
  },
  {
    "text": "so if i evaluate this now i get some text on screen over here so what's this",
    "start": "736720",
    "end": "743440"
  },
  {
    "text": "again this is just closer script data right it's just a vector with a keyword and a string",
    "start": "743440",
    "end": "748720"
  },
  {
    "text": "so it's all data the code is data the markup is data everything's data",
    "start": "748720",
    "end": "754160"
  },
  {
    "text": "in the clojure enclosure script community this kind of data is colloquially referred to as hiccup",
    "start": "754160",
    "end": "760160"
  },
  {
    "text": "but it's really just vectors with keywords and strings inside if i put a dot i can add a class name to",
    "start": "760160",
    "end": "766399"
  },
  {
    "text": "it which will trigger my pre-made css which makes the text a little bit bigger",
    "start": "766399",
    "end": "772800"
  },
  {
    "text": "you can add attributes style color red",
    "start": "772800",
    "end": "778720"
  },
  {
    "text": "and then it turns red okay so i'm going to now",
    "start": "778720",
    "end": "784320"
  },
  {
    "text": "try to build something a little bit bigger so we need to have some data and then we need to have um",
    "start": "784320",
    "end": "792399"
  },
  {
    "text": "i need to put this in a function okay render it will take some data in",
    "start": "792399",
    "end": "798079"
  },
  {
    "text": "and we'll take a look at this later okay so our data",
    "start": "798079",
    "end": "803360"
  },
  {
    "text": "so um i prepared a small example to build and",
    "start": "803360",
    "end": "809200"
  },
  {
    "text": "then i figured uh the most common example to build is like a to-do list and i figured i'll i'm",
    "start": "809200",
    "end": "815279"
  },
  {
    "text": "gonna in be very creative so i created a shopping list instead",
    "start": "815279",
    "end": "821230"
  },
  {
    "text": "[Applause] uh i yeah i could have chosen something more fun i guess but i wanted an example",
    "start": "821230",
    "end": "826720"
  },
  {
    "text": "that it's correct likely manipulated because it's similar to what we you typically do in our day jobs so",
    "start": "826720",
    "end": "833760"
  },
  {
    "text": "that's why i chose that anyway so i'll define a store the store is my global",
    "start": "833760",
    "end": "840320"
  },
  {
    "text": "storage of data in the whole application that i'll have in the browser and",
    "start": "840320",
    "end": "845839"
  },
  {
    "text": "in my first attempt it's going to be a map and inside i will have a shopping list",
    "start": "845839",
    "end": "851600"
  },
  {
    "text": "let's just imagine that we navigated to a specific list and it will be for a specific week and",
    "start": "851600",
    "end": "858320"
  },
  {
    "text": "it will have some groceries on it which is a vector of items of i'll just",
    "start": "858320",
    "end": "866160"
  },
  {
    "text": "say text um text",
    "start": "866160",
    "end": "871680"
  },
  {
    "text": "orange and then of course we also need to have a kovit 19 test",
    "start": "871680",
    "end": "878720"
  },
  {
    "start": "878000",
    "end": "998000"
  },
  {
    "text": "now because this map is immutable it's not very suited for the global storage",
    "start": "878720",
    "end": "884000"
  },
  {
    "text": "because i i can't update it right so my global source needs to be something that can update",
    "start": "884000",
    "end": "889920"
  },
  {
    "text": "so typically what we do is that we wrap this in something called an atom and an atom is like an object that only stores",
    "start": "889920",
    "end": "896399"
  },
  {
    "text": "one one value so typically you take an immutable value and store it in an atom and then you can",
    "start": "896399",
    "end": "902880"
  },
  {
    "text": "exchange the value over time but the advantage of this process is",
    "start": "902880",
    "end": "908000"
  },
  {
    "text": "that 95 of my code will see this immutable value inside and will be functional call",
    "start": "908000",
    "end": "914320"
  },
  {
    "text": "working on immutable values and then just the very top layer will know anything about this mutable atom",
    "start": "914320",
    "end": "920320"
  },
  {
    "text": "that's on top and then finally i'm going to change from a depth to a def once because when",
    "start": "920320",
    "end": "927199"
  },
  {
    "text": "the browser reloads my code i don't want to reload the data",
    "start": "927199",
    "end": "932399"
  },
  {
    "text": "so that's my data and then we can take a look at the",
    "start": "932399",
    "end": "938880"
  },
  {
    "text": "so i'm going to call this machinery so i'm going to have a few pieces of code here that would naturally go in",
    "start": "938880",
    "end": "945040"
  },
  {
    "text": "different files in production i'm just going to annotate them with comments and keep them in the same place for now",
    "start": "945040",
    "end": "951759"
  },
  {
    "text": "so we need ui components so now we are going to uh so previously",
    "start": "951759",
    "end": "959199"
  },
  {
    "text": "i created some hiccup markup just in line in the render call now i want to create a reusable component",
    "start": "959199",
    "end": "965120"
  },
  {
    "text": "and oh to do that we're going to prefer something called a def component",
    "start": "965120",
    "end": "972160"
  },
  {
    "text": "which just allows me to define a component that i can use over and over again so we'll call list page component",
    "start": "973199",
    "end": "979920"
  },
  {
    "text": "and it will receive some kind of data and i'll move this markup into the component here",
    "start": "979920",
    "end": "986480"
  },
  {
    "text": "and then inside the render function we'll call this component with the data that's being passed to render",
    "start": "986480",
    "end": "992639"
  },
  {
    "text": "and then finally i'll have a small boot up section to the bottom here where we call the render once",
    "start": "992639",
    "end": "999600"
  },
  {
    "start": "998000",
    "end": "1068000"
  },
  {
    "text": "with the contents of the store so this app picks out the map that's inside the store",
    "start": "999600",
    "end": "1005680"
  },
  {
    "text": "and then i can add a watch to the store",
    "start": "1005680",
    "end": "1011199"
  },
  {
    "text": "that will call this function every time the contents change so i don't really have time to explain",
    "start": "1011199",
    "end": "1016800"
  },
  {
    "text": "all the arguments all the details of this but uh so this is a subscription for changes to the store and it will",
    "start": "1016800",
    "end": "1022959"
  },
  {
    "text": "call render as well so with that i have my little world up and",
    "start": "1022959",
    "end": "1028720"
  },
  {
    "text": "going so no changes on the screen because the component still just does",
    "start": "1028720",
    "end": "1034959"
  },
  {
    "text": "static data so let's use some of the data we're getting in here to render now inside this component this is a ui",
    "start": "1034959",
    "end": "1042000"
  },
  {
    "text": "component i don't really want the ui component to be talking about shopping lists and groceries and weeks",
    "start": "1042000",
    "end": "1047839"
  },
  {
    "text": "i would much rather just said title and then someone else is going to have",
    "start": "1047839",
    "end": "1053520"
  },
  {
    "text": "to prepare that for me so the reason for this i will explain in a little moment but for now i'm going to put a function",
    "start": "1053520",
    "end": "1061200"
  },
  {
    "text": "that is called prepare ui data that we will create",
    "start": "1061200",
    "end": "1067840"
  },
  {
    "start": "1068000",
    "end": "1124000"
  },
  {
    "text": "and its job is to not be machinery but to be something much more important this",
    "start": "1068960",
    "end": "1074320"
  },
  {
    "text": "is our business logic so the business logic is responsible for taking our",
    "start": "1074320",
    "end": "1080960"
  },
  {
    "text": "business domain data and turning it into ui data so by making this very clear separation",
    "start": "1080960",
    "end": "1087360"
  },
  {
    "text": "i can have all my important testable logic in just pure functions that take immutable data in and return immutable",
    "start": "1087360",
    "end": "1094240"
  },
  {
    "text": "data out and this way i can write lots of tests for the important bits and i don't have",
    "start": "1094240",
    "end": "1099360"
  },
  {
    "text": "to write tests that trigger the ui specifically i'll show another way to test the ui specifically in a little bit",
    "start": "1099360",
    "end": "1107520"
  },
  {
    "text": "anyway it's going to generate a title that it's just going to be string week and then",
    "start": "1107520",
    "end": "1113520"
  },
  {
    "text": "the week number uh let's just say this week okay",
    "start": "1113520",
    "end": "1120480"
  },
  {
    "text": "i'm going to call this not data but state these are words that i made up that i",
    "start": "1120480",
    "end": "1126400"
  },
  {
    "start": "1124000",
    "end": "1258000"
  },
  {
    "text": "use in my daily work so we call like the main store is the store that's the mutable thing that contains the data",
    "start": "1126400",
    "end": "1132960"
  },
  {
    "text": "and the thing that's inside it the the snapshot that's the state",
    "start": "1132960",
    "end": "1138799"
  },
  {
    "text": "and then the components work on just uh ui data of some sort",
    "start": "1138880",
    "end": "1144480"
  },
  {
    "text": "okay so this functional receives the state and returns a title and then it says weeks something and",
    "start": "1144480",
    "end": "1150720"
  },
  {
    "text": "then there's no week because i have to get the week from the shopping",
    "start": "1150720",
    "end": "1156080"
  },
  {
    "text": "list so state shopping list week this is week 45. let's get rid of that",
    "start": "1156080",
    "end": "1162799"
  },
  {
    "text": "red color okay and then i also just to make it put",
    "start": "1162799",
    "end": "1168720"
  },
  {
    "text": "some colors on screen i prepared another component that we can use which is called a list icon",
    "start": "1168720",
    "end": "1175840"
  },
  {
    "text": "and we have to import it and that looks like that's a very very big list icon",
    "start": "1175840",
    "end": "1181039"
  },
  {
    "text": "um okay i can theme it to pink and then we can put it inside",
    "start": "1181039",
    "end": "1186720"
  },
  {
    "text": "something that makes it a little bit smaller 64 pixels is about right",
    "start": "1186720",
    "end": "1193600"
  },
  {
    "text": "and then we can put some styles here we can say display flex",
    "start": "1193600",
    "end": "1199520"
  },
  {
    "text": "uh that should put them on side by side and then it's align something items maybe i don't know center",
    "start": "1199520",
    "end": "1206640"
  },
  {
    "text": "and then we can put some margins on it and you can see that the browser just keeps updating as i save my file",
    "start": "1206640",
    "end": "1213280"
  },
  {
    "text": "so previously i was going around evaluating a lot of code but now i'm just saving file and having it auto",
    "start": "1213280",
    "end": "1219760"
  },
  {
    "text": "update so the good thing about the saving part is that it will evaluate all the code at once but sometimes you only want to",
    "start": "1219760",
    "end": "1226240"
  },
  {
    "text": "evaluate a little bit but you have the option to choose which one fits in a given situation",
    "start": "1226240",
    "end": "1232559"
  },
  {
    "text": "okay uh i put a mod mar gin and then we want to space that header a",
    "start": "1232559",
    "end": "1239600"
  },
  {
    "text": "little bit so we'll give it a left margin as well 20",
    "start": "1239600",
    "end": "1244960"
  },
  {
    "text": "okay and now we have a nice header then i'm going to create a",
    "start": "1244960",
    "end": "1250080"
  },
  {
    "text": "some more margins 20 and then inside here we will have our",
    "start": "1250240",
    "end": "1255360"
  },
  {
    "text": "list and okay so now i can use i'm going to",
    "start": "1255360",
    "end": "1260799"
  },
  {
    "start": "1258000",
    "end": "1346000"
  },
  {
    "text": "use a for loop which loops through all the items of a collection but then i have to have a collection which i don't",
    "start": "1260799",
    "end": "1266240"
  },
  {
    "text": "at this point so my prepare function needs to prepare more data",
    "start": "1266240",
    "end": "1272720"
  },
  {
    "text": "items so sufficiently meaningless term",
    "start": "1272720",
    "end": "1278240"
  },
  {
    "text": "so we'll grab the state shopping list groceries and that's a list if you",
    "start": "1278240",
    "end": "1284080"
  },
  {
    "text": "remember of things with text which is sufficiently good for the ui",
    "start": "1284080",
    "end": "1289440"
  },
  {
    "text": "i just want to avoid mainly that i have ui or sorry domain concepts inside my ui",
    "start": "1289440",
    "end": "1296080"
  },
  {
    "text": "components because that really makes them not so reusable for different contexts",
    "start": "1296080",
    "end": "1301760"
  },
  {
    "text": "so i didn't finish the code here and that's what the compiler telling me over here so we have",
    "start": "1301760",
    "end": "1308240"
  },
  {
    "text": "i can destructure the text from the items",
    "start": "1308240",
    "end": "1313600"
  },
  {
    "text": "in my ui data li text so this is going a little bit",
    "start": "1313600",
    "end": "1319120"
  },
  {
    "text": "okay i'm doing this quickly but my goal as i said is to give you the",
    "start": "1319120",
    "end": "1324320"
  },
  {
    "text": "feel of this environment so i don't want the items in my flex over here",
    "start": "1324320",
    "end": "1330080"
  },
  {
    "text": "so again i'll create a div here and i'll do slurp to move everything inside it",
    "start": "1330080",
    "end": "1335200"
  },
  {
    "text": "and i'll go into this one and i can spit out the last element that i did not want in my header",
    "start": "1335200",
    "end": "1341520"
  },
  {
    "text": "then i get it positioned here okay so",
    "start": "1341520",
    "end": "1347200"
  },
  {
    "start": "1346000",
    "end": "1442000"
  },
  {
    "text": "now we're about to get to something interesting because now i want to create my um",
    "start": "1347200",
    "end": "1352480"
  },
  {
    "text": "input field where i can type new things to add to the list and since this is a shopping list i'll",
    "start": "1352480",
    "end": "1357760"
  },
  {
    "text": "be typing the same things in here week after week would be very good to have some sort of",
    "start": "1357760",
    "end": "1363679"
  },
  {
    "text": "completion help type completion right so i want to create a somewhat",
    "start": "1363679",
    "end": "1369600"
  },
  {
    "text": "intelligent thing at the top here that can complete things for me so i'll",
    "start": "1369600",
    "end": "1375120"
  },
  {
    "text": "create that as a separate component def component and i'll call it completion input",
    "start": "1375120",
    "end": "1383679"
  },
  {
    "text": "and my first version of this is just going to be the input element with the input class",
    "start": "1384480",
    "end": "1391120"
  },
  {
    "text": "and then let's see i can go",
    "start": "1391120",
    "end": "1396080"
  },
  {
    "text": "we'll okay lots of margin 20 and then we'll put it here completion input and some data i",
    "start": "1397120",
    "end": "1403440"
  },
  {
    "text": "don't know what the data is yet that gives me an input but it doesn't do anything",
    "start": "1403440",
    "end": "1409759"
  },
  {
    "text": "so let's think about the different cases we have for this i when there's nothing here i want to have",
    "start": "1410480",
    "end": "1417120"
  },
  {
    "text": "a placeholder of some sort and then if there's text inside i want the text to be brighter than the placeholder and if",
    "start": "1417120",
    "end": "1423120"
  },
  {
    "text": "you're typing and we have good suggestions we want to display them somehow that means that this ui control can have",
    "start": "1423120",
    "end": "1429039"
  },
  {
    "text": "many visual states but you can only ever see one at a time so",
    "start": "1429039",
    "end": "1434400"
  },
  {
    "text": "to solve this problem i will use a tool called dev cards",
    "start": "1434400",
    "end": "1439520"
  },
  {
    "text": "which looks like this so i created one example up front which just renders that list icon a bunch of",
    "start": "1439520",
    "end": "1446400"
  },
  {
    "start": "1442000",
    "end": "1529000"
  },
  {
    "text": "times to test out different color pallets so what this thing here does is it",
    "start": "1446400",
    "end": "1452159"
  },
  {
    "text": "actually doesn't do a lot it just enables you to render out a component many times with different data",
    "start": "1452159",
    "end": "1458320"
  },
  {
    "text": "such as you can see many versions in one go it's kind of like unit tests for your",
    "start": "1458320",
    "end": "1465760"
  },
  {
    "text": "visual design except they're not automated because it's hard to automate visual",
    "start": "1465760",
    "end": "1471440"
  },
  {
    "text": "properties so i'll put this in a separate file for now we'll call it a completion",
    "start": "1471440",
    "end": "1478320"
  },
  {
    "text": "input and then we're going to create okay",
    "start": "1478320",
    "end": "1483679"
  },
  {
    "text": "require um [Music]",
    "start": "1483679",
    "end": "1489380"
  },
  {
    "text": "and then dev cars is a separate library but it's it comes with built-in support for react components so dum dum has a",
    "start": "1491360",
    "end": "1498159"
  },
  {
    "text": "wrapper for it that teaches it to understand its components",
    "start": "1498159",
    "end": "1504480"
  },
  {
    "text": "and it has a thing called def card so the way it works is like this you create",
    "start": "1504640",
    "end": "1509840"
  },
  {
    "text": "an example of using your component so i can say basic input is looks like this",
    "start": "1509840",
    "end": "1517120"
  },
  {
    "text": "and now i will just have to put this on the list of available dev cards which i",
    "start": "1517120",
    "end": "1522799"
  },
  {
    "text": "have here and then we'll go here",
    "start": "1522799",
    "end": "1528400"
  },
  {
    "text": "okay so here we go i have now have one example of using this component",
    "start": "1528400",
    "end": "1534480"
  },
  {
    "start": "1529000",
    "end": "1593000"
  },
  {
    "text": "now i can add some more examples let's say i want to have an input with placeholder",
    "start": "1534480",
    "end": "1541279"
  },
  {
    "text": "so that means that i'll pass in the placeholder type something",
    "start": "1541279",
    "end": "1547919"
  },
  {
    "text": "basically this is like test driven development except for just the visual part of the wrap so",
    "start": "1547919",
    "end": "1553919"
  },
  {
    "text": "this looks exactly the same because i'm not really doing anything in this component here so let's",
    "start": "1553919",
    "end": "1559360"
  },
  {
    "text": "destructure the data that's coming in and then we'll pass it on",
    "start": "1559360",
    "end": "1565520"
  },
  {
    "text": "and now i have a placeholder okay it looks good let's create another example",
    "start": "1567520",
    "end": "1572799"
  },
  {
    "text": "with value perhaps value banana",
    "start": "1572799",
    "end": "1580000"
  },
  {
    "text": "and then it still just shows the placeholder because i'm not using the value for anything",
    "start": "1580000",
    "end": "1586000"
  },
  {
    "text": "i could also just pass the data down to the input but i have a feeling that we'll",
    "start": "1586000",
    "end": "1591039"
  },
  {
    "text": "not want to pass everything along so okay banana good and then if i focus it it looks a little",
    "start": "1591039",
    "end": "1597520"
  },
  {
    "start": "1593000",
    "end": "1743000"
  },
  {
    "text": "bit different i could have made a card that auto put automatically put the focus on but you still have to have",
    "start": "1597520",
    "end": "1603440"
  },
  {
    "text": "focus on the browser window so it's not of that much help but anyway i've increased my my",
    "start": "1603440",
    "end": "1610240"
  },
  {
    "text": "bandwidth now because i can see three versions of the component in one go and i don't have to think about",
    "start": "1610240",
    "end": "1615440"
  },
  {
    "text": "what my app is doing to create it so let's hash out the completion bit",
    "start": "1615440",
    "end": "1622880"
  },
  {
    "text": "so now i want to have an input with a completion so",
    "start": "1622880",
    "end": "1628640"
  },
  {
    "text": "scratch the placeholder and then i say completion i need to have a partial word here",
    "start": "1628640",
    "end": "1634240"
  },
  {
    "text": "i have another word or and then it says orange",
    "start": "1634240",
    "end": "1639760"
  },
  {
    "text": "so now i want this to kind of fill out in the back background so that you can hit",
    "start": "1639760",
    "end": "1646240"
  },
  {
    "text": "tab or whatever to complete it one way to do this is to render two",
    "start": "1646240",
    "end": "1651840"
  },
  {
    "text": "separate input fields so let's do that so now we have a completion here or",
    "start": "1651840",
    "end": "1657200"
  },
  {
    "text": "rather we may have a completion so",
    "start": "1657200",
    "end": "1662559"
  },
  {
    "text": "i'll create a wrapper element and then i'll say when there is a completion render another input",
    "start": "1662559",
    "end": "1669760"
  },
  {
    "text": "and its value will be the completion",
    "start": "1669760",
    "end": "1675360"
  },
  {
    "text": "okay now i have two inputs if i want them to look like they're completing each other they need to be on",
    "start": "1675760",
    "end": "1681440"
  },
  {
    "text": "top of each other so let's put some relative positioning on the outer",
    "start": "1681440",
    "end": "1688240"
  },
  {
    "text": "element position position relative",
    "start": "1688240",
    "end": "1693679"
  },
  {
    "text": "and now if i do style position",
    "start": "1693679",
    "end": "1699039"
  },
  {
    "text": "absolute on this one something ridiculous is going to happen",
    "start": "1699039",
    "end": "1705120"
  },
  {
    "text": "so now my final element looks closer to what i want but all the others collapsed",
    "start": "1705120",
    "end": "1710880"
  },
  {
    "text": "because when this is absolutely positioned then the div will collapse if it doesn't",
    "start": "1710880",
    "end": "1716640"
  },
  {
    "text": "have any other content so that means that i'm going to put this",
    "start": "1716640",
    "end": "1723279"
  },
  {
    "text": "here and then we're only going to do this when we have a completion",
    "start": "1723279",
    "end": "1728960"
  },
  {
    "text": "okay so now you can see that in my completion card the field is to the right here so i want",
    "start": "1730159",
    "end": "1736559"
  },
  {
    "text": "it to sit on top and the way to do that is just to glue it to all the sides",
    "start": "1736559",
    "end": "1743600"
  },
  {
    "text": "and this is going to work because the two elements are the exact same element",
    "start": "1743600",
    "end": "1749279"
  },
  {
    "text": "and the div is now going to be shaped like this one so if i position the other one to all",
    "start": "1749279",
    "end": "1754480"
  },
  {
    "text": "the edges it's going to perfectly overlap the underlying input but now it's also covering it up so i",
    "start": "1754480",
    "end": "1761760"
  },
  {
    "text": "can't see it but that can be easily fixed by setting the background on the",
    "start": "1761760",
    "end": "1768000"
  },
  {
    "text": "top input field to transparent",
    "start": "1768000",
    "end": "1772480"
  },
  {
    "text": "and then boom it looks like i have a suggestion right",
    "start": "1773919",
    "end": "1779679"
  },
  {
    "text": "so this is just a visual part i still have to figure out like where does the completions come from and how do i get",
    "start": "1779679",
    "end": "1785360"
  },
  {
    "text": "them into my app and and so on and so forth but now i'm focusing on the front-end bit",
    "start": "1785360",
    "end": "1792080"
  },
  {
    "text": "i want to create one more example and i want i want to see how this what this feel like if the suggestion is",
    "start": "1792080",
    "end": "1798960"
  },
  {
    "text": "popping up as i type so to do that",
    "start": "1798960",
    "end": "1804159"
  },
  {
    "text": "i will have a input with live completion so if i pass a function instead of a",
    "start": "1804159",
    "end": "1810320"
  },
  {
    "text": "component to this def card thing then it's going to create an atom for me",
    "start": "1810320",
    "end": "1816240"
  },
  {
    "text": "and pass it to the function and i can read from the atom to render and i can use an event handler to update the item",
    "start": "1816240",
    "end": "1822799"
  },
  {
    "text": "and then dev carts will re-render the card so okay i'll pick out the value from the",
    "start": "1822799",
    "end": "1829200"
  },
  {
    "text": "store and then we don't have any completions for now and if i want i can also feed it some",
    "start": "1829200",
    "end": "1835840"
  },
  {
    "text": "initial data so i could say the initial value is i don't know pizza",
    "start": "1835840",
    "end": "1842880"
  },
  {
    "text": "and then maybe we also need to have some completions to pick from later so bandana",
    "start": "1842880",
    "end": "1850559"
  },
  {
    "text": "bazooka and bajunga okay",
    "start": "1850559",
    "end": "1855760"
  },
  {
    "text": "new car at the bottom it renders with pizza because i said that was the initial value",
    "start": "1856720",
    "end": "1861840"
  },
  {
    "text": "but really i want now as i type to update the store",
    "start": "1861840",
    "end": "1867120"
  },
  {
    "text": "so that means we need an event handler on input which will receive an event",
    "start": "1867120",
    "end": "1873679"
  },
  {
    "text": "and then i can update the atom by calling swap associate",
    "start": "1873679",
    "end": "1879919"
  },
  {
    "text": "value and i'll explain this in a moment target value",
    "start": "1879919",
    "end": "1886720"
  },
  {
    "start": "1886000",
    "end": "2048000"
  },
  {
    "text": "okay so this last thing here dot dot just means perform operations on this thing",
    "start": "1886720",
    "end": "1893440"
  },
  {
    "text": "so this is the event get the target and get the value from that",
    "start": "1893440",
    "end": "1898799"
  },
  {
    "text": "and the other stuff here swap swaps out the contents of the store",
    "start": "1898799",
    "end": "1904240"
  },
  {
    "text": "and really give you can give it a function it will pass the value into the function and then you can do stuff with",
    "start": "1904240",
    "end": "1910080"
  },
  {
    "text": "it and then it has a shorthand for let me just show you",
    "start": "1910080",
    "end": "1915600"
  },
  {
    "text": "swap store fn state assoc state",
    "start": "1915600",
    "end": "1922559"
  },
  {
    "text": "so these two are the same so this is just a uh impenetrable shortcut if you don't know",
    "start": "1922559",
    "end": "1929120"
  },
  {
    "text": "the language from before but trust me this does what it says it does",
    "start": "1929120",
    "end": "1934480"
  },
  {
    "text": "so at least now as i type i should be able to update the text",
    "start": "1934480",
    "end": "1940559"
  },
  {
    "text": "field because we're setting the value now i can choose a completion",
    "start": "1940559",
    "end": "1947519"
  },
  {
    "text": "by looking at completions in store and then i can filter them",
    "start": "1947519",
    "end": "1954080"
  },
  {
    "text": "so i'll pass the completions to filter completion uh screw that we're going to",
    "start": "1954080",
    "end": "1961200"
  },
  {
    "text": "do inline and then i'll say starts",
    "start": "1961200",
    "end": "1966399"
  },
  {
    "text": "with and then this is the argument that's being passed the filter and then",
    "start": "1966399",
    "end": "1973518"
  },
  {
    "text": "this is the value [Music] i'll try to save a little bit of space",
    "start": "1973760",
    "end": "1981600"
  },
  {
    "text": "okay so if the completion starts with the string that i'm typing and then i want the first one",
    "start": "1981600",
    "end": "1990279"
  },
  {
    "text": "so nothing happens okay we'll figure out why",
    "start": "1990960",
    "end": "1997600"
  },
  {
    "text": "anyway um let's take a look what's going on here so we have",
    "start": "1997600",
    "end": "2003120"
  },
  {
    "text": "our completions and yeah okay so what's going on is that we have this input handler here that's",
    "start": "2003120",
    "end": "2009840"
  },
  {
    "text": "not being used at all by our component so nothing is going on",
    "start": "2009840",
    "end": "2015760"
  },
  {
    "text": "um so we need to take it in here and then just pass it along to the input field",
    "start": "2016240",
    "end": "2023360"
  },
  {
    "text": "and now i can try it again we type and then it suggests something and now you kind of get the feeling of getting",
    "start": "2024000",
    "end": "2030000"
  },
  {
    "text": "suggestions and i immediately said it's making suggestions when it's empty which is not",
    "start": "2030000",
    "end": "2035200"
  },
  {
    "text": "really good but that's not inside the ui component so it's not really that big of a problem but i can do one not empty",
    "start": "2035200",
    "end": "2042399"
  },
  {
    "text": "v that way i don't get suggestions for empty text",
    "start": "2042399",
    "end": "2048720"
  },
  {
    "start": "2048000",
    "end": "2182000"
  },
  {
    "text": "okay so now i have hashed out all the visual states of my component",
    "start": "2048720",
    "end": "2053760"
  },
  {
    "text": "i can go back to my application and render it and then later i can figure out where is",
    "start": "2053760",
    "end": "2060079"
  },
  {
    "text": "this data going to come from when will i have to contact the server to get it that's a separate concern",
    "start": "2060079",
    "end": "2066960"
  },
  {
    "text": "um yeah and then i need to comment something because now i'm putting what is basically a bunch of tests into my",
    "start": "2067280",
    "end": "2073839"
  },
  {
    "text": "implementation would you do this in production you could and here's the reason so def card here",
    "start": "2073839",
    "end": "2082398"
  },
  {
    "text": "is a macro and it has a configuration option that you can flip when you compile",
    "start": "2082399",
    "end": "2088720"
  },
  {
    "text": "and if you turn it off it just gets compiled right out so you can compile for production and",
    "start": "2088720",
    "end": "2093919"
  },
  {
    "text": "still keep the card in your source file or if you don't like it you can put it in a separate file and just don't",
    "start": "2093919",
    "end": "2100240"
  },
  {
    "text": "include it in the build at all so that's a bit of comes down to your preferences but for",
    "start": "2100240",
    "end": "2108400"
  },
  {
    "text": "demonstration purposes it's very helpful to have them in the same file",
    "start": "2108400",
    "end": "2113440"
  },
  {
    "text": "yes okay let's try and go and get back to our app",
    "start": "2113440",
    "end": "2119200"
  },
  {
    "text": "and then um i don't need to have that here because we have created in a separate file",
    "start": "2119200",
    "end": "2127440"
  },
  {
    "text": "and uh we need some parameters to send to it okay",
    "start": "2127839",
    "end": "2134880"
  },
  {
    "text": "and so here we need to prepare some data to",
    "start": "2135520",
    "end": "2140720"
  },
  {
    "text": "pass to our completion input so what will we pass well i have a",
    "start": "2140720",
    "end": "2146160"
  },
  {
    "text": "placeholder ingredient or whatever",
    "start": "2146160",
    "end": "2152079"
  },
  {
    "text": "grocery then i may have to update here",
    "start": "2152079",
    "end": "2157599"
  },
  {
    "text": "and then nothing is happening still because i'm not sending",
    "start": "2157599",
    "end": "2163200"
  },
  {
    "text": "input ui data here okay so the placeholder now says",
    "start": "2163200",
    "end": "2168240"
  },
  {
    "text": "ingredient just ignore that but",
    "start": "2168240",
    "end": "2174320"
  },
  {
    "text": "i now needed to update the current value so i know what the user is typing because we will need that to find good",
    "start": "2174320",
    "end": "2181200"
  },
  {
    "text": "suggestions and to do that as you might remember from",
    "start": "2181200",
    "end": "2186400"
  },
  {
    "text": "the card i need to pass on input but ah-ha i don't want to put a function inside my",
    "start": "2186400",
    "end": "2193520"
  },
  {
    "text": "ui data i want the ui data to be serializable simple data because then i",
    "start": "2193520",
    "end": "2200400"
  },
  {
    "text": "can i can get the data prepared directly from the server or i can store it on",
    "start": "2200400",
    "end": "2206640"
  },
  {
    "text": "disk and use it for regression tests you can do so much",
    "start": "2206640",
    "end": "2211760"
  },
  {
    "text": "things if you just have pure data so this functionality really poisons the entire idea so i don't want to do that",
    "start": "2211760",
    "end": "2218880"
  },
  {
    "text": "but luckily i can put data on the event handler as well",
    "start": "2218880",
    "end": "2223920"
  },
  {
    "text": "if you do you can tell dum how to dispatch events global instead",
    "start": "2223920",
    "end": "2231520"
  },
  {
    "text": "so i'll say handle event here and then it'll pass me the event and",
    "start": "2231520",
    "end": "2236720"
  },
  {
    "text": "whatever data came from your event handler so this allows me to bypass needing a",
    "start": "2236720",
    "end": "2243119"
  },
  {
    "text": "function at this point and i can get it down here instead and then what we want to do is to handle",
    "start": "2243119",
    "end": "2249280"
  },
  {
    "text": "action is what i'm going to call this and this function belongs close to my",
    "start": "2249280",
    "end": "2255359"
  },
  {
    "text": "data because actions are about manipulating the data we have in store",
    "start": "2255359",
    "end": "2263440"
  },
  {
    "text": "event data and my first implementation will just print the action that's coming in and then",
    "start": "2263680",
    "end": "2270720"
  },
  {
    "text": "here we have to figure out what is this going to look like and doomdum only passes the",
    "start": "2270720",
    "end": "2276800"
  },
  {
    "text": "data through it doesn't care what it is you can put whatever you want in here but i'm going to put a keyword that is",
    "start": "2276800",
    "end": "2283359"
  },
  {
    "text": "the name of an action which is to save in store and i want to save it in this key",
    "start": "2283359",
    "end": "2290480"
  },
  {
    "text": "and then i would really like the value of the input field here",
    "start": "2290480",
    "end": "2296800"
  },
  {
    "text": "but i would have to get that from the event object which i don't have access to here okay",
    "start": "2296800",
    "end": "2302800"
  },
  {
    "text": "i don't that's not possible but i can put a placeholder so i could say uh event",
    "start": "2302800",
    "end": "2309040"
  },
  {
    "text": "of target value this is also just a keyword the slasher just makes it a namespace",
    "start": "2309040",
    "end": "2316560"
  },
  {
    "text": "keyword but right now it's just a placeholder so we'll have to figure out what to do with this later",
    "start": "2316560",
    "end": "2322400"
  },
  {
    "text": "if i save it now we should be able to type here and then see the browser logging that",
    "start": "2322400",
    "end": "2329599"
  },
  {
    "text": "it's it's triggering this action right so at least we know that it's working",
    "start": "2329599",
    "end": "2336480"
  },
  {
    "text": "um in my handle action function i have",
    "start": "2336480",
    "end": "2341599"
  },
  {
    "text": "again the same thing that we did before i have the value that you want",
    "start": "2341599",
    "end": "2347920"
  },
  {
    "text": "so let's see this again the value is here right so i need to put it inside here somewhere",
    "start": "2347920",
    "end": "2354480"
  },
  {
    "text": "so i'm going to show you a very cool feature that ships are that ships with the standard library enclosures",
    "start": "2354480",
    "end": "2360320"
  },
  {
    "text": "clojure script which is called walk post walk",
    "start": "2360320",
    "end": "2366880"
  },
  {
    "text": "so you can pass a data and a function to it and then it's going to call this",
    "start": "2366880",
    "end": "2372480"
  },
  {
    "text": "function for every thing inside this data it's just going to walk the whole tree",
    "start": "2372480",
    "end": "2378240"
  },
  {
    "text": "and then give you each and every item from it goes depth first and then if",
    "start": "2378240",
    "end": "2385359"
  },
  {
    "text": "if you want you can return something else from the function and that will be replaced in the structure so basically if x is this keyword",
    "start": "2385359",
    "end": "2394560"
  },
  {
    "text": "then i want this value otherwise i'll just take the x that was there from before",
    "start": "2394560",
    "end": "2401839"
  },
  {
    "text": "so now we can print this instead and it should look a little bit more relevant",
    "start": "2401839",
    "end": "2408319"
  },
  {
    "text": "um it says save and store current ban",
    "start": "2409119",
    "end": "2414880"
  },
  {
    "text": "ah cool so now i can access the value and i did it all just completely data",
    "start": "2414880",
    "end": "2421040"
  },
  {
    "text": "driven there's no functions in here which makes me happy okay",
    "start": "2421040",
    "end": "2427599"
  },
  {
    "text": "so let's say let action is this and i probably still want to print it",
    "start": "2427599",
    "end": "2434800"
  },
  {
    "text": "just so we can see it for later and then we can case on first action which will be this keyword",
    "start": "2434800",
    "end": "2442160"
  },
  {
    "text": "here and then we can have i can implement multiple kinds of actions eventually",
    "start": "2442160",
    "end": "2449200"
  },
  {
    "text": "and this one will be implemented using swap just like we did before swap",
    "start": "2449200",
    "end": "2456319"
  },
  {
    "text": "on the store that's up here the store now becomes like it does become",
    "start": "2456319",
    "end": "2462240"
  },
  {
    "text": "a global thing i could have passed it into this function as well but i'll let it pass",
    "start": "2462240",
    "end": "2468079"
  },
  {
    "text": "for now so what do i want to pass i want to pass as search and then i want the rest of",
    "start": "2468079",
    "end": "2473599"
  },
  {
    "text": "the arguments from here and i can do that by just doing apply and then doing",
    "start": "2473599",
    "end": "2479839"
  },
  {
    "text": "rest action which skips the first one and just gives you the rest",
    "start": "2479839",
    "end": "2485520"
  },
  {
    "text": "as a list okay oh i deleted my logging",
    "start": "2485520",
    "end": "2492319"
  },
  {
    "text": "feature so how can we know if this is working",
    "start": "2492319",
    "end": "2498160"
  },
  {
    "start": "2497000",
    "end": "2958000"
  },
  {
    "text": "well i have two options the first one is simply to just go into my comment block",
    "start": "2498160",
    "end": "2503200"
  },
  {
    "text": "here and then i can de-rough my store and just look at it",
    "start": "2503200",
    "end": "2508480"
  },
  {
    "text": "yeah looks like it's working pretty good you could even do things like i could just look it up directly",
    "start": "2508480",
    "end": "2515839"
  },
  {
    "text": "and yeah work with it however i want so this is very useful but also",
    "start": "2515839",
    "end": "2521680"
  },
  {
    "text": "just being able to look at everything in the store is quite useful so i'll introduce yet",
    "start": "2521680",
    "end": "2527119"
  },
  {
    "text": "another library for this this is more of a development tool that you typically wouldn't put in production",
    "start": "2527119",
    "end": "2533680"
  },
  {
    "text": "code but so it's called gadget inspector",
    "start": "2533680",
    "end": "2539119"
  },
  {
    "text": "and as the name implies it inspects stuff so",
    "start": "2539119",
    "end": "2544160"
  },
  {
    "text": "in our boot up sequence to the bottom here we'll call gadget inspect",
    "start": "2544160",
    "end": "2550720"
  },
  {
    "text": "store and just pass it to store now this library has a companion browser",
    "start": "2550720",
    "end": "2558400"
  },
  {
    "text": "extension that i can find over here gadget and",
    "start": "2558400",
    "end": "2565280"
  },
  {
    "text": "i'm sorry this text is very tiny i'm not sure i can yeah it doesn't really respond to my",
    "start": "2565280",
    "end": "2571440"
  },
  {
    "text": "keyboard either but trust me you can see the data in here if you're close enough to the screen and",
    "start": "2571440",
    "end": "2577200"
  },
  {
    "text": "not only can you see but you can click around and navigate into the data and this handles all kinds of data and",
    "start": "2577200",
    "end": "2584000"
  },
  {
    "text": "it's very easy to you can add code to let it navigate your custom data",
    "start": "2584000",
    "end": "2590319"
  },
  {
    "text": "structures and and whatever you want so having this app on the side is very useful",
    "start": "2590319",
    "end": "2596400"
  },
  {
    "text": "but we can make it even more useful if we do it one more time so",
    "start": "2596400",
    "end": "2601440"
  },
  {
    "text": "in here we convert our store to ui data i would be interested in having a look",
    "start": "2601440",
    "end": "2607760"
  },
  {
    "text": "at what that looks like as well so we can go here and i can do",
    "start": "2607760",
    "end": "2613599"
  },
  {
    "text": "ui data and then like so and just before we render",
    "start": "2613599",
    "end": "2620800"
  },
  {
    "text": "gadget inspect ui data",
    "start": "2620800",
    "end": "2626319"
  },
  {
    "text": "so now i have the store on top i'm sorry this font is so small",
    "start": "2627520",
    "end": "2633040"
  },
  {
    "text": "and then i you have ui data below and now every time i type here i can see how",
    "start": "2633040",
    "end": "2638720"
  },
  {
    "text": "things are changing so it gets live updated over here in the store but nothing is happening in the ui",
    "start": "2638720",
    "end": "2644640"
  },
  {
    "text": "data so that means that we have to go into this business logic here and put a value that reads the current",
    "start": "2644640",
    "end": "2651599"
  },
  {
    "text": "from store",
    "start": "2651599",
    "end": "2654640"
  },
  {
    "text": "and then if we click input here it still says value nil",
    "start": "2658240",
    "end": "2664880"
  },
  {
    "text": "yes because it's called state not store",
    "start": "2664960",
    "end": "2670640"
  },
  {
    "text": "so now it says banana down here um cool",
    "start": "2670640",
    "end": "2676800"
  },
  {
    "text": "so let's stick [Music]",
    "start": "2676800",
    "end": "2683520"
  },
  {
    "text": "okay let's do this i'll just do swap store search and then completion so we'll just",
    "start": "2683520",
    "end": "2690160"
  },
  {
    "text": "put some completions into into the store and then we'll take the ones from here",
    "start": "2690160",
    "end": "2697280"
  },
  {
    "text": "sorry but i don't have time to implement the full server fetch right now so we'll just work with some test data",
    "start": "2697280",
    "end": "2703359"
  },
  {
    "text": "but now we can see over here or here if you will",
    "start": "2703359",
    "end": "2708880"
  },
  {
    "text": "that we have some completions in the store now so in my business logic here",
    "start": "2710720",
    "end": "2718400"
  },
  {
    "text": "we can look for a completion find completion and then i'll pass in",
    "start": "2718400",
    "end": "2724960"
  },
  {
    "text": "the completions that are in state and my current",
    "start": "2724960",
    "end": "2730839"
  },
  {
    "text": "value and find completion",
    "start": "2730839",
    "end": "2736318"
  },
  {
    "text": "takes completions and value and then we're just going to rob the code from our test here from before",
    "start": "2737440",
    "end": "2745520"
  },
  {
    "text": "this is very simplistic but hopefully you kind of get the point",
    "start": "2745520",
    "end": "2751040"
  },
  {
    "text": "okay completions so let's move this a little bit and then",
    "start": "2751040",
    "end": "2757760"
  },
  {
    "text": "if i type b and now it's just banana to me and then you can keep working on it make",
    "start": "2757760",
    "end": "2763040"
  },
  {
    "text": "it more intelligent and this is just data it's just data in data out you can write tests for it you can do all sorts",
    "start": "2763040",
    "end": "2769520"
  },
  {
    "text": "of things and if you want to work on the ui of side of things you can go over here",
    "start": "2769520",
    "end": "2775119"
  },
  {
    "text": "and focus solely on the ui so now you have this really nice workflow that's very it's very interactive",
    "start": "2775119",
    "end": "2781359"
  },
  {
    "text": "and you have tight focus on your ui components and you have tight focus on your business logic and you can separate",
    "start": "2781359",
    "end": "2786560"
  },
  {
    "text": "them very clearly and even the actions that we talked about up here like this one only puts stuff in the store but",
    "start": "2786560",
    "end": "2793520"
  },
  {
    "text": "other actions will inevitably be more involved and then you can test them as well",
    "start": "2793520",
    "end": "2799520"
  },
  {
    "text": "so i just want to show you one more thing before i close up and that's",
    "start": "2799520",
    "end": "2804640"
  },
  {
    "text": "one more example of such a dev card is what we have here and this one i created before i came",
    "start": "2804640",
    "end": "2811680"
  },
  {
    "text": "and for the items in the list it would be very nice if you could use like swipe gestures to",
    "start": "2811680",
    "end": "2818880"
  },
  {
    "text": "get rid of them and that's something that's quite",
    "start": "2818880",
    "end": "2824400"
  },
  {
    "text": "uh quite picky stuff to to create because you",
    "start": "2824400",
    "end": "2830720"
  },
  {
    "text": "have to put lots of uh event handlers on it there's lots of tedious maths and",
    "start": "2830720",
    "end": "2837359"
  },
  {
    "text": "you gotta find the right thresholds like you want if you're gonna swipe it you don't want it to slide too easily you",
    "start": "2837359",
    "end": "2842880"
  },
  {
    "text": "want to swipe just right so being able to just focus on the individual behaviors like here",
    "start": "2842880",
    "end": "2849839"
  },
  {
    "text": "is just insanely useful and not having to worry about my login",
    "start": "2849839",
    "end": "2854960"
  },
  {
    "text": "session timing out or being in the right place in the app or whatever and here we can just create all the ludicrous",
    "start": "2854960",
    "end": "2862000"
  },
  {
    "text": "situations as you can imagine and see them all in one go",
    "start": "2862000",
    "end": "2867200"
  },
  {
    "text": "so you can see here this one for instance can be dragged like uh left and it can be and it snaps",
    "start": "2867200",
    "end": "2875280"
  },
  {
    "text": "and it can snap back you can drag to the right but you cannot drag it to the right and then to the",
    "start": "2875280",
    "end": "2881040"
  },
  {
    "text": "left lots of like tiny details just really only about the visual part of the",
    "start": "2881040",
    "end": "2886720"
  },
  {
    "text": "application and then the final example here i have a big red one that covers",
    "start": "2886720",
    "end": "2892400"
  },
  {
    "text": "the entire item if i click it you can see that it has a nice transition on it",
    "start": "2892400",
    "end": "2897440"
  },
  {
    "text": "and then we can put this under the draggable and make sure that when it hits a certain threshold we can trigger",
    "start": "2897440",
    "end": "2903680"
  },
  {
    "text": "the transition and if you do that it can look like this so you can see that once it gets",
    "start": "2903680",
    "end": "2910480"
  },
  {
    "text": "revealed it kind of pops into view and if i drag it out to the side",
    "start": "2910480",
    "end": "2916400"
  },
  {
    "text": "it goes away and then it comes back so i can try it again so you can keep iterating on it",
    "start": "2916400",
    "end": "2922559"
  },
  {
    "text": "so this kind of tight feedback is just incredibly useful so",
    "start": "2922559",
    "end": "2929920"
  },
  {
    "text": "yeah so we didn't get so far in this app but you know it's 10 past five and a",
    "start": "2929920",
    "end": "2935119"
  },
  {
    "text": "friday afternoon this is about what i have prepared i hope you found it useful or at least",
    "start": "2935119",
    "end": "2940640"
  },
  {
    "text": "inspiring in some way and want to give it a shot it's great fun working with",
    "start": "2940640",
    "end": "2946640"
  },
  {
    "text": "so yeah thank you for listening",
    "start": "2946640",
    "end": "2951000"
  },
  {
    "text": "you",
    "start": "2958720",
    "end": "2960800"
  }
]