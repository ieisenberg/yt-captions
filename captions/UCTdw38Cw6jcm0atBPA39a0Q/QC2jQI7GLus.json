[
  {
    "start": "0",
    "end": "305000"
  },
  {
    "text": "so it's works okay so welcome everyone I'm Alana Devon",
    "start": "79",
    "end": "5850"
  },
  {
    "text": "Thomas and I work as a security researcher at the NASA cure where we use frida for an automat emitted analysis of",
    "start": "5850",
    "end": "15480"
  },
  {
    "text": "mobile apps but the reason I'm here to talk about three days well where did this all came from it was as a developer",
    "start": "15480",
    "end": "24240"
  },
  {
    "text": "I've done a lot of well I tried to develop interoperable software for Linux",
    "start": "24240",
    "end": "29660"
  },
  {
    "text": "train drop with closed source proprietary protocols how closed proprietary protocols and then I had to",
    "start": "29660",
    "end": "39239"
  },
  {
    "text": "do some reverse engineering and as I did this I found myself needing tools for",
    "start": "39239",
    "end": "45480"
  },
  {
    "text": "this but before we go into that I'm just going to show you what we're going to do today so we'll have the debugger on the",
    "start": "45480",
    "end": "52980"
  },
  {
    "text": "right which is the target process that we want to analyze and on the left that's us where the debugger and using",
    "start": "52980",
    "end": "60149"
  },
  {
    "text": "frida it's going to allocate a bootstrapper create a bootstrapper some code inside that other process that's",
    "start": "60149",
    "end": "67049"
  },
  {
    "text": "hidden behind the scenes so I don't need to think about it but I'm just going to show you like visually what's happening and then we create a thread frida",
    "start": "67049",
    "end": "74610"
  },
  {
    "text": "creates a thread in that other process and that executes the boots wrapper which then loads a like a shared library",
    "start": "74610",
    "end": "81320"
  },
  {
    "text": "which is our agent and then it establishes the communication channel back to us and across this community",
    "start": "81320",
    "end": "88470"
  },
  {
    "text": "communications channel we can tell it to do things like so we have a a JavaScript",
    "start": "88470",
    "end": "94680"
  },
  {
    "text": "interpreter inside here so we can expose a set of API and make it do things and I",
    "start": "94680",
    "end": "105270"
  },
  {
    "text": "want to spoil too much some work and talk about what things but basically the motivation behind this is that when",
    "start": "105270",
    "end": "112110"
  },
  {
    "text": "you're doing reverse engineering at least my experience you create tools because every target is different so you",
    "start": "112110",
    "end": "119280"
  },
  {
    "text": "can't just create one tool to to reverse-engineer any software because software it's different every time they",
    "start": "119280",
    "end": "128280"
  },
  {
    "text": "have some commonalities but usually you want to create a tool because you know you figure out what kind of API",
    "start": "128280",
    "end": "133800"
  },
  {
    "text": "using internally and then you want to spy on those api's and that's where",
    "start": "133800",
    "end": "138930"
  },
  {
    "text": "Freda comes in so it's also an important thing to be able to do this across",
    "start": "138930",
    "end": "144210"
  },
  {
    "text": "platforms without having to create a to relearn everything or to write something",
    "start": "144210",
    "end": "150360"
  },
  {
    "text": "perfect every time and as your reverse engineering you temp",
    "start": "150360",
    "end": "156330"
  },
  {
    "text": "to discover something and then you adapt your tooling and then discover something",
    "start": "156330",
    "end": "161850"
  },
  {
    "text": "else and then you keep adapting so yeah it's like a short feedback loop so if you have to continuously adapt it's",
    "start": "161850",
    "end": "170460"
  },
  {
    "text": "important that that loop is short so you don't run out of patience and I'll",
    "start": "170460",
    "end": "177270"
  },
  {
    "text": "actually I'm back in the day I created a Windows tool for this kind of reverse engineering was kind of like Wireshark",
    "start": "177270",
    "end": "183260"
  },
  {
    "text": "but at the API level so it could show you the socket communications but also",
    "start": "183260",
    "end": "188820"
  },
  {
    "text": "the encrypted stuff so it would inject codes into the target process and set between the application and the crypto",
    "start": "188820",
    "end": "196290"
  },
  {
    "text": "libraries and intercept those calls and show to you decrypted depends on the",
    "start": "196290",
    "end": "207030"
  },
  {
    "text": "antivirus because yeah I Pro uses some things that might some techniques that",
    "start": "207030",
    "end": "212220"
  },
  {
    "text": "might set off antivirus but right yep",
    "start": "212220",
    "end": "221720"
  },
  {
    "text": "but it has you have there's several ways you can use Frieda you can also load it",
    "start": "221720",
    "end": "226920"
  },
  {
    "text": "with LD preload or similar mechanism we can if you have the source code of the application you can also modify the",
    "start": "226920",
    "end": "231959"
  },
  {
    "text": "application to load the library that you are the agent well it's called a gadget in case but so yeah that's what Frieda",
    "start": "231959",
    "end": "239700"
  },
  {
    "text": "is technically dynamic invitations will kit just means it's a scriptable",
    "start": "239700",
    "end": "245730"
  },
  {
    "text": "debugger kind of but unlike a debugger the code is running inside the target",
    "start": "245730",
    "end": "251250"
  },
  {
    "text": "process so you're not sitting on the outside you're sitting on the insights or in the context of the process you can do anything that process can do which",
    "start": "251250",
    "end": "258000"
  },
  {
    "text": "simplifies a lot of things and it's scriptable but you don't have to you can also use this for c c++ because it's",
    "start": "258000",
    "end": "265770"
  },
  {
    "text": "highly modular and the high-level API that we're going to use today it's just a composition of the",
    "start": "265770",
    "end": "272819"
  },
  {
    "text": "different components that you can use in isolation and it's open source and it works on the major platforms and that's",
    "start": "272819",
    "end": "280009"
  },
  {
    "text": "continuously expanded expanding so qnx was not done by me for example and so",
    "start": "280009",
    "end": "288180"
  },
  {
    "text": "the mips support was not either so basically a you would use for reverse",
    "start": "288180",
    "end": "294599"
  },
  {
    "text": "engineering for Grandma would be working and so on but the key here is that it should be should allow you for rapid",
    "start": "294599",
    "end": "302190"
  },
  {
    "text": "development of new tools the short feedback loop so I think we've talked",
    "start": "302190",
    "end": "307289"
  },
  {
    "start": "305000",
    "end": "698000"
  },
  {
    "text": "enough we should show actually show it so to do that we're just gonna create a",
    "start": "307289",
    "end": "314219"
  },
  {
    "text": "really tiny dummy hello world",
    "start": "314219",
    "end": "319770"
  },
  {
    "text": "application and yeah so what we're going",
    "start": "319770",
    "end": "332520"
  },
  {
    "text": "to do is that we're going to have this",
    "start": "332520",
    "end": "337889"
  },
  {
    "text": "program offices readable oops",
    "start": "337889",
    "end": "344180"
  },
  {
    "text": "it's going to to have a variable n it's",
    "start": "344180",
    "end": "350159"
  },
  {
    "text": "gonna name that loop that calls a function f with an incrementing and it's",
    "start": "350159",
    "end": "355800"
  },
  {
    "text": "going to delay by one second between each call and then we're going to create",
    "start": "355800",
    "end": "363120"
  },
  {
    "text": "this function and it's going to just",
    "start": "363120",
    "end": "369960"
  },
  {
    "text": "print off the number that you gave it in and and we're also going to tell you",
    "start": "369960",
    "end": "379550"
  },
  {
    "text": "that F is at this memory address we assumed that is not in line for this",
    "start": "379550",
    "end": "386580"
  },
  {
    "text": "example so we're really in tight control here we just want to - easily to see",
    "start": "386580",
    "end": "393900"
  },
  {
    "text": "what's going on without starting with a really complex application so that's why we're writing this now",
    "start": "393900",
    "end": "400940"
  },
  {
    "text": "[Music] University for sleep okay okay so we",
    "start": "401580",
    "end": "419219"
  },
  {
    "text": "have this program it's running and it's calling that function every second with",
    "start": "419219",
    "end": "424560"
  },
  {
    "text": "an increment incrementing integer as the argument okay so now let's use frida so",
    "start": "424560",
    "end": "431849"
  },
  {
    "text": "we will use the frida Python bindings there's bindings for several languages but for here we're just going to demo it",
    "start": "431849",
    "end": "438270"
  },
  {
    "text": "with the bindings that the Python bindings they look the same pretty much just adapted to local conventions like camel case in Java or",
    "start": "438270",
    "end": "447050"
  },
  {
    "text": "snake case in Python so yeah okay so",
    "start": "447050",
    "end": "453569"
  },
  {
    "text": "session frita attach can you get a pit",
    "start": "453569",
    "end": "458580"
  },
  {
    "text": "or a process name yeah we'll use a process name hello so then we get a session and across on this session we",
    "start": "458580",
    "end": "465060"
  },
  {
    "text": "can create a script session create script and here we give",
    "start": "465060",
    "end": "470339"
  },
  {
    "text": "it some JavaScript to run okay and then we're going to load the script and then",
    "start": "470339",
    "end": "478349"
  },
  {
    "text": "we should just block so we don't terminate if we do we it will undo",
    "start": "478349",
    "end": "483719"
  },
  {
    "text": "everything so okay yeah we always delete load the script as well yes sorry I'm",
    "start": "483719",
    "end": "506069"
  },
  {
    "text": "here we load from a file okay and then",
    "start": "506069",
    "end": "512399"
  },
  {
    "text": "we're going to create this agent that we're going to run inside this other process and we know that this function",
    "start": "512399",
    "end": "520948"
  },
  {
    "text": "is at this address a SLR may might make it end up in a different address so that's why we're printing it out we can",
    "start": "520949",
    "end": "527699"
  },
  {
    "text": "also use the bug symbols or it was exported we look it up that way so but here we're just going to use the address so",
    "start": "527699",
    "end": "534770"
  },
  {
    "text": "interceptor is an API in Frieda that you where you can allowing you to intercept function calls so give it the address of",
    "start": "534770",
    "end": "546860"
  },
  {
    "text": "the function that we want to intercept calls to and then we define a handler",
    "start": "546860",
    "end": "552140"
  },
  {
    "text": "for an enter when it's called give us a call define one for on leave when it's",
    "start": "552140",
    "end": "557180"
  },
  {
    "text": "returning but we won't need that and here we have access to the argument list",
    "start": "557180",
    "end": "565630"
  },
  {
    "text": "while assuming that it has a default call Convention and and there's some assumptions there but you can also",
    "start": "567430",
    "end": "573230"
  },
  {
    "text": "access to registers but I'm jumping ahead of myself so we can do console.log here F called with M equals arcs 0 2 in",
    "start": "573230",
    "end": "583700"
  },
  {
    "text": "32 okay so we have written an agent that",
    "start": "583700",
    "end": "590200"
  },
  {
    "text": "attaches the probe so to speak to this function so whenever it's called this",
    "start": "590200",
    "end": "595220"
  },
  {
    "text": "line of code here gets executed synchronously and it's just gonna log the first argument and all right that",
    "start": "595220",
    "end": "617240"
  },
  {
    "text": "depends on the platforms on Linux currently we hijack a running thread and",
    "start": "617240",
    "end": "622640"
  },
  {
    "text": "make it called pthread create to create our own thread and that calls dl open",
    "start": "622640",
    "end": "628600"
  },
  {
    "text": "but on on mac OS on iOS and I have written a dynamic linker where we can do",
    "start": "628600",
    "end": "633800"
  },
  {
    "text": "it from the outside of the process and just map our library into the process without it having file system access so",
    "start": "633800",
    "end": "639110"
  },
  {
    "text": "in case of sandbox processes on Windows yeah exactly",
    "start": "639110",
    "end": "644600"
  },
  {
    "text": "but for Windows there's yeah we want to",
    "start": "644600",
    "end": "649670"
  },
  {
    "text": "have more mechanisms so ok so so we have written a parking program here that just",
    "start": "649670",
    "end": "656080"
  },
  {
    "text": "attaches to this process loads this agent and runs it in there hopefully it",
    "start": "656080",
    "end": "662060"
  },
  {
    "text": "will work let's try it okay so we'll just do",
    "start": "662060",
    "end": "675130"
  },
  {
    "text": "Python explore the pie and if you pay",
    "start": "675130",
    "end": "680170"
  },
  {
    "text": "attention on the right hopefully yeah so you can see that our probe is getting",
    "start": "680170",
    "end": "687550"
  },
  {
    "text": "hit and it's logging the argument so we see you see that they're in sync it's",
    "start": "687550",
    "end": "693100"
  },
  {
    "text": "getting it's happening in real-time so",
    "start": "693100",
    "end": "697410"
  },
  {
    "text": "yeah now we know what n is the argument to this function but actually we did",
    "start": "698610",
    "end": "704260"
  },
  {
    "text": "write some boilerplate code here and that was just to show you how you can use to read s bindings you don't have to",
    "start": "704260",
    "end": "711760"
  },
  {
    "text": "do the right that's kind of boilerplate wherever a use case but this is just to show you how you would do it so so you",
    "start": "711760",
    "end": "719950"
  },
  {
    "text": "could use Frida's rebel so you do frida a name of the process and ll - L for",
    "start": "719950",
    "end": "728770"
  },
  {
    "text": "load and the agent and there we go that's much simpler I should have set up",
    "start": "728770",
    "end": "743880"
  },
  {
    "text": "okay so we have that and I just want to",
    "start": "743880",
    "end": "749920"
  },
  {
    "text": "show you one thing we can actually change this and save if you pay",
    "start": "749920",
    "end": "758770"
  },
  {
    "text": "attention now so it reloads the file so",
    "start": "758770",
    "end": "764050"
  },
  {
    "text": "text monitors this the repple will monitor this file and whenever it changes it will reload the script so",
    "start": "764050",
    "end": "770500"
  },
  {
    "text": "that means you have a short feedback loop you can adapt your instrumentation and instantly see the results if this",
    "start": "770500",
    "end": "779140"
  },
  {
    "text": "code readable by the way okay so the",
    "start": "779140",
    "end": "784720"
  },
  {
    "start": "783000",
    "end": "863000"
  },
  {
    "text": "next thing you might want to do is modify our an argument coming into the function so what you could do here is",
    "start": "784720",
    "end": "792130"
  },
  {
    "text": "that you can do args 0 equals and take existing value and add",
    "start": "792130",
    "end": "798190"
  },
  {
    "text": "in thousand to it if I save this actually we can you'll see here that",
    "start": "798190",
    "end": "806370"
  },
  {
    "text": "yeah the function is seeing a different argument now and and this happens at the",
    "start": "806370",
    "end": "815110"
  },
  {
    "text": "edge of the batter of the function so we don't actually change em in the parents go just to be clear yeah so we don't",
    "start": "815110",
    "end": "843790"
  },
  {
    "text": "change n here because now if I if I stop the ripple and you pay attention on the right it's back to normal so that the",
    "start": "843790",
    "end": "851500"
  },
  {
    "text": "instrumentation is reverted so this goes away the the agent running inside will",
    "start": "851500",
    "end": "857770"
  },
  {
    "text": "detect it and will revert everything",
    "start": "857770",
    "end": "862380"
  },
  {
    "text": "okay so we know this program pretty well",
    "start": "863940",
    "end": "869650"
  },
  {
    "text": "so how about speeding up time for example so we know that it's calling",
    "start": "869650",
    "end": "874840"
  },
  {
    "text": "sleep and that's what is using to drive its clock so to speak so what we could",
    "start": "874840",
    "end": "881980"
  },
  {
    "text": "do let's just load the agent again is",
    "start": "881980",
    "end": "887200"
  },
  {
    "text": "that we could I'll just remove this code",
    "start": "887200",
    "end": "892230"
  },
  {
    "text": "we could do intercept or replace to entirely replace the implementation so",
    "start": "892230",
    "end": "899050"
  },
  {
    "text": "again and now we need the implementation existing implementation to replace so we'll do module find export by name and",
    "start": "899050",
    "end": "905370"
  },
  {
    "text": "we know is using sleep so we'll look that up and then ask the replacement",
    "start": "905370",
    "end": "911760"
  },
  {
    "text": "will create a native callback so we give",
    "start": "911760",
    "end": "918280"
  },
  {
    "text": "it a function it's given a duration to sleep that's",
    "start": "918280",
    "end": "923690"
  },
  {
    "text": "the first argument I will do something here and then the return type is void that's probably in two actually oh yeah",
    "start": "923690",
    "end": "935030"
  },
  {
    "text": "that's its a UN and the UN okay",
    "start": "935030",
    "end": "940690"
  },
  {
    "text": "let's accept some event and then here we",
    "start": "940690",
    "end": "947660"
  },
  {
    "text": "could use Frida's thread sleep to just sleep for say 50 milliseconds so if I",
    "start": "947660",
    "end": "953140"
  },
  {
    "text": "save this and you pay attention on the right it's it speeds up now I patched",
    "start": "953140",
    "end": "964850"
  },
  {
    "text": "the implementation the beginning of the implementation with the jump so yeah in line hooking busy yeah and we",
    "start": "964850",
    "end": "975260"
  },
  {
    "text": "can revert it again and it's back to normal",
    "start": "975260",
    "end": "980110"
  },
  {
    "start": "981000",
    "end": "1046000"
  },
  {
    "text": "another thing you might want to do is to call that function yourself that could",
    "start": "982790",
    "end": "987800"
  },
  {
    "text": "be useful for fasting for example of finding bugs but also to if there's a",
    "start": "987800",
    "end": "993830"
  },
  {
    "text": "custom and decryption function internally you could call it to decrypt something so do new native function we",
    "start": "993830",
    "end": "1006700"
  },
  {
    "text": "need the address of this function that we want to call and that's here and we",
    "start": "1006700",
    "end": "1017440"
  },
  {
    "text": "know it returns the return type is void and the argument type is int 1 in and",
    "start": "1017440",
    "end": "1023260"
  },
  {
    "text": "here did create a loop okay so if we run",
    "start": "1023260",
    "end": "1032439"
  },
  {
    "text": "this agent you should if you pay attention now here we called five times if I reload the script again just by",
    "start": "1032440",
    "end": "1039670"
  },
  {
    "text": "saving it and we'll happily get so now we have a way to to call functions",
    "start": "1039670",
    "end": "1044829"
  },
  {
    "text": "that's how you do that and these scripts or these agents that",
    "start": "1044830",
    "end": "1051800"
  },
  {
    "start": "1046000",
    "end": "1174000"
  },
  {
    "text": "you create that run inside target processes they can also communicate you",
    "start": "1051800",
    "end": "1057200"
  },
  {
    "text": "can also communicate with them so they can send and receive messages so I'm",
    "start": "1057200",
    "end": "1062750"
  },
  {
    "text": "just going to show that quickly here so you can do RPC exports equals and then",
    "start": "1062750",
    "end": "1068960"
  },
  {
    "text": "for example call well just F give it the",
    "start": "1068960",
    "end": "1080720"
  },
  {
    "text": "argument and and it just calls F with the end you get okay and now if we go",
    "start": "1080720",
    "end": "1087950"
  },
  {
    "text": "back to our Python program after we load",
    "start": "1087950",
    "end": "1093200"
  },
  {
    "text": "the script we can do script exports that's a magical object so whatever you",
    "start": "1093200",
    "end": "1101480"
  },
  {
    "text": "access on it it will be a function a generator function so you can do agent dot F on or for I in range 10 call it",
    "start": "1101480",
    "end": "1113510"
  },
  {
    "text": "with I and then block actually we don't",
    "start": "1113510",
    "end": "1119930"
  },
  {
    "text": "need to do that here",
    "start": "1119930",
    "end": "1123100"
  },
  {
    "text": "[Music] okay so have this script it declares a",
    "start": "1126330",
    "end": "1134790"
  },
  {
    "text": "native function to call this function in the process memory address space and",
    "start": "1134790",
    "end": "1141930"
  },
  {
    "text": "then we export a function f and then on the Python side we just on the script we",
    "start": "1141930",
    "end": "1147450"
  },
  {
    "text": "do exports dot F to call the function so",
    "start": "1147450",
    "end": "1154260"
  },
  {
    "text": "if you try that and you pay attention on the right it's called ten times so you",
    "start": "1154260",
    "end": "1160170"
  },
  {
    "text": "could that way you can expose API s-- and call them from python or another language so you turn your existing",
    "start": "1160170",
    "end": "1169080"
  },
  {
    "text": "processes into services if you want to like play with them okay so now we've",
    "start": "1169080",
    "end": "1178470"
  },
  {
    "text": "covered the basics of how to use Freida but freya also has some tools that you",
    "start": "1178470",
    "end": "1187140"
  },
  {
    "text": "can use I showed you briefly the rectal here you can also look can just show it",
    "start": "1187140",
    "end": "1193710"
  },
  {
    "text": "again so you can do things like this and",
    "start": "1193710",
    "end": "1203550"
  },
  {
    "text": "the ref bow as well just paste it in and if you want to call this function here just yeah you can play around and here",
    "start": "1203550",
    "end": "1216060"
  },
  {
    "text": "you have a completion for a code completion for the Frida's api so one",
    "start": "1216060",
    "end": "1222810"
  },
  {
    "text": "thing you might want to do now okay we're now done with our own program we'll can switch to some existing",
    "start": "1222810",
    "end": "1228540"
  },
  {
    "text": "software so say we have a telegram on Mac OS we might want to know what kind",
    "start": "1228540",
    "end": "1236760"
  },
  {
    "text": "of files this program opens so we could use Frida Trace",
    "start": "1236760",
    "end": "1243170"
  },
  {
    "text": "and we can say telegram - I open so",
    "start": "1248570",
    "end": "1254279"
  },
  {
    "text": "we'll include we'll trace all functions that are named open in the telegram process okay and now if I switch to",
    "start": "1254279",
    "end": "1262830"
  },
  {
    "text": "telegram and I tap or click around see",
    "start": "1262830",
    "end": "1269700"
  },
  {
    "text": "it's actually calling open and the colors here are depending on the thread",
    "start": "1269700",
    "end": "1275070"
  },
  {
    "text": "which thread is calling the function so you can get a sense of how this",
    "start": "1275070",
    "end": "1280320"
  },
  {
    "text": "application is designed threading and",
    "start": "1280320",
    "end": "1288408"
  },
  {
    "text": "yeah one thing you might want to do is interact with objective-c api's but I'm",
    "start": "1290779",
    "end": "1302490"
  },
  {
    "text": "gonna show you one thing first so this free to trace program here when",
    "start": "1302490",
    "end": "1307769"
  },
  {
    "text": "you run it like this - I opened include a function in open yours Globes it will",
    "start": "1307769",
    "end": "1314220"
  },
  {
    "text": "generate a directory call handlers on the file system on each library that it",
    "start": "1314220",
    "end": "1321059"
  },
  {
    "text": "matches the function inside will get a directory and each function will get a script so you can actually go and edit",
    "start": "1321059",
    "end": "1328049"
  },
  {
    "text": "these scripts so here I've edited the open the Jas or I have and we can say",
    "start": "1328049",
    "end": "1333799"
  },
  {
    "text": "hello NDC open and they find now just go here and trigger some activity inside",
    "start": "1333799",
    "end": "1341399"
  },
  {
    "text": "library loads - so you can adapt this instrumentation as it's running and to",
    "start": "1341399",
    "end": "1351240"
  },
  {
    "text": "save time I'm going to cheat a little bit here because I want to show you that",
    "start": "1351240",
    "end": "1358649"
  },
  {
    "text": "it can actually call functions on Objective C api's as well not just",
    "start": "1358649",
    "end": "1364440"
  },
  {
    "text": "native api's this Frida has an objective-c integration that is built on top of these things that you already saw",
    "start": "1364440",
    "end": "1369990"
  },
  {
    "text": "Nate a function native callback so on to give you a dynamically generated language binding so it will use for",
    "start": "1369990",
    "end": "1377700"
  },
  {
    "text": "those familiar with a javascript use we use proxy objects to dynamically generate things or look things up when you ask",
    "start": "1377700",
    "end": "1384950"
  },
  {
    "text": "for them so I'm afraid I can use obviously the classes dot and the name of the class and you get a dynamically",
    "start": "1384950",
    "end": "1391220"
  },
  {
    "text": "generated binding okay so actually let's",
    "start": "1391220",
    "end": "1399530"
  },
  {
    "text": "just write an agent here so we'll attach",
    "start": "1399530",
    "end": "1407090"
  },
  {
    "text": "to the open function okay so whenever I",
    "start": "1407090",
    "end": "1418400"
  },
  {
    "text": "open this cold will do open path equals and then we can create a variable for",
    "start": "1418400",
    "end": "1423830"
  },
  {
    "text": "the path so mem and we can do memory read utf-8 string to dereference the",
    "start": "1423830",
    "end": "1429620"
  },
  {
    "text": "pointer is in the first argument that's a pointer to a string and logged out and",
    "start": "1429620",
    "end": "1439350"
  },
  {
    "text": "[Music] so if we freed a telegram used to raffle",
    "start": "1439350",
    "end": "1446000"
  },
  {
    "text": "again and load the script here into that process and tap around yeah see it's",
    "start": "1446000",
    "end": "1454970"
  },
  {
    "text": "working and now you could to show you that you can integrate with objective-c",
    "start": "1454970",
    "end": "1460010"
  },
  {
    "text": "api's let's play with let's try apples speech synthesizer",
    "start": "1460010",
    "end": "1465560"
  },
  {
    "text": "which is available as an API so we'll just do obsequious NS speech",
    "start": "1465560",
    "end": "1472940"
  },
  {
    "text": "synthesizers and a variable and then",
    "start": "1472940",
    "end": "1479800"
  },
  {
    "text": "we're going to create an NS auto-release pool i which is a requirement for using this idea or using such api's we're",
    "start": "1479800",
    "end": "1486770"
  },
  {
    "text": "going to instantiate a speech synthesizer we're going to pick your voice and then we're going to set the",
    "start": "1486770",
    "end": "1494840"
  },
  {
    "text": "voice and we release the autorelease pool but we have this synth here as a variable and then in the in line hook",
    "start": "1494840",
    "end": "1503470"
  },
  {
    "text": "instead in addition to logging will also make it speech that will have a last",
    "start": "1506730",
    "end": "1518890"
  },
  {
    "text": "speak so it doesn't do right limited a bit let's try to fit it on there okay",
    "start": "1518890",
    "end": "1535860"
  },
  {
    "text": "let's turn up the volume and try this slash users slash o le AV r slash",
    "start": "1540570",
    "end": "1548830"
  },
  {
    "text": "library slash group content slash users slash user slash youth slash",
    "start": "1548830",
    "end": "1554080"
  },
  {
    "text": "user slash var slash TV slash nsurl sto RA gev slashed officer data doc been",
    "start": "1554080",
    "end": "1562020"
  },
  {
    "text": "very useful the point is just to show you that you can use objective-c api's",
    "start": "1562020",
    "end": "1568060"
  },
  {
    "text": "that already exists and you're running in the context of the application so you can combine things okay",
    "start": "1568060",
    "end": "1574600"
  },
  {
    "text": "look whenever when the application calls a certain function you can do something else using an existing API yeah and I",
    "start": "1574600",
    "end": "1589740"
  },
  {
    "start": "1585000",
    "end": "1791000"
  },
  {
    "text": "was showing this on a Mac but to prove that freedom runs on multiple platforms I'm going to show it on iOS too",
    "start": "1589740",
    "end": "1598320"
  },
  {
    "text": "so here I have a jailbroken phone but you don't need jailbroken phone to use free like you can still repackage the",
    "start": "1614990",
    "end": "1620669"
  },
  {
    "text": "app and add free data to the yeah same with Android so fire QuickTime Player",
    "start": "1620669",
    "end": "1628410"
  },
  {
    "text": "flee I'll be able to stream the screen or share the screen live",
    "start": "1628410",
    "end": "1633650"
  },
  {
    "text": "okay cool so there's a command called",
    "start": "1654590",
    "end": "1663149"
  },
  {
    "text": "freed up PS oh yeah I forgot to say if you pip install free - tools you'll get",
    "start": "1663149",
    "end": "1670529"
  },
  {
    "text": "these command line tools people still Frida you just get the API that we used before yeah so we can use Frida PS and we can",
    "start": "1670529",
    "end": "1679440"
  },
  {
    "text": "say just no arguments it will list the processes running on this local machine",
    "start": "1679440",
    "end": "1685039"
  },
  {
    "text": "but you can also use well if you look at trader LS devices you can see what kind of device is freed and I was about so",
    "start": "1685039",
    "end": "1690990"
  },
  {
    "text": "it's local system the iPhone is connected and then you can use free IPS",
    "start": "1690990",
    "end": "1697159"
  },
  {
    "text": "- you to just pick the first USB device or you can use - D and the ID you're",
    "start": "1697159",
    "end": "1703019"
  },
  {
    "text": "here to pick a certain one and run this you'll see the processes running on my",
    "start": "1703019",
    "end": "1709169"
  },
  {
    "text": "phone here and you can use - a - list",
    "start": "1709169",
    "end": "1715830"
  },
  {
    "text": "applications and I for installed so not just the ones that are running and here you have all the process the process is",
    "start": "1715830",
    "end": "1722190"
  },
  {
    "text": "running at the top and the apps installed okay so I should have a",
    "start": "1722190",
    "end": "1727230"
  },
  {
    "text": "telegram app installed on my phone here so we can use free a trace - you USB - F",
    "start": "1727230",
    "end": "1738299"
  },
  {
    "text": "just like spawn a program instead of attaching you can either either gave it like pin LS or you could give it the",
    "start": "1738299",
    "end": "1745049"
  },
  {
    "text": "without starting with a slash it means it's an application so it's the application ID so here telegram and will",
    "start": "1745049",
    "end": "1753690"
  },
  {
    "text": "include open run this launches the app and you can see course to open",
    "start": "1753690",
    "end": "1763490"
  },
  {
    "text": "and yeah it can again you can edit the",
    "start": "1764630",
    "end": "1775970"
  },
  {
    "text": "handlers here and change it hello NDC from iOS and if I tap around",
    "start": "1775970",
    "end": "1785600"
  },
  {
    "text": "here yeah let's reloaded so the next question you",
    "start": "1785600",
    "end": "1794870"
  },
  {
    "text": "might have is okay now we know that certain someone is calling open but who is calling open so we can add some code",
    "start": "1794870",
    "end": "1805820"
  },
  {
    "text": "here called from new line tap say thread",
    "start": "1805820",
    "end": "1813080"
  },
  {
    "text": "back trace this context that gives us an",
    "start": "1813080",
    "end": "1818090"
  },
  {
    "text": "array of return addresses and then we can do map on each and we can do debug",
    "start": "1818090",
    "end": "1827120"
  },
  {
    "text": "symbol from address and we'll can join that that turns each one in the array",
    "start": "1827120",
    "end": "1834140"
  },
  {
    "text": "into a debug symbols if it's available or a placeholder if not and then we join",
    "start": "1834140",
    "end": "1839210"
  },
  {
    "text": "these with new learning tap if I run this I'll save this and go here and tap",
    "start": "1839210",
    "end": "1845840"
  },
  {
    "text": "a bit yeah so you see hello and if R is called from the back trace okay",
    "start": "1845840",
    "end": "1860320"
  },
  {
    "start": "1860000",
    "end": "1916000"
  },
  {
    "text": "I'm just gonna cut jumps slightly ahead",
    "start": "1865180",
    "end": "1870310"
  },
  {
    "text": "and show you what that might look like with a different app I know I'm gonna do",
    "start": "1870310",
    "end": "1880220"
  },
  {
    "text": "that next so run it again",
    "start": "1880220",
    "end": "1889899"
  },
  {
    "text": "and here you see that yeah there you'll",
    "start": "1891160",
    "end": "1900620"
  },
  {
    "text": "also notice other you don't know Objective C API statically in the back trace and then that might give you a",
    "start": "1900620",
    "end": "1905900"
  },
  {
    "text": "hint where you should be tracing next so you can go and go and trace those ap ice",
    "start": "1905900",
    "end": "1911360"
  },
  {
    "text": "and and learn more and more now about the application another thing you can do",
    "start": "1911360",
    "end": "1918410"
  },
  {
    "start": "1916000",
    "end": "2183000"
  },
  {
    "text": "is to look at registers so if this",
    "start": "1918410",
    "end": "1925280"
  },
  {
    "text": "function has a very weird calling convention can I look at any of the",
    "start": "1925280",
    "end": "1930650"
  },
  {
    "text": "registers so so you can do like this context X to 0 for example to access the",
    "start": "1930650",
    "end": "1937640"
  },
  {
    "text": "X 0 register alarm 64 here go and if I",
    "start": "1937640",
    "end": "1947800"
  },
  {
    "text": "just dump the whole object with this context you'll see all the registers",
    "start": "1947800",
    "end": "1955850"
  },
  {
    "text": "that you have access to so that means",
    "start": "1955850",
    "end": "1960980"
  },
  {
    "text": "you can deal with also weird calling conventions or if the compiler came up with a colleague dimensional zone",
    "start": "1960980",
    "end": "1966380"
  },
  {
    "text": "because of the noise agents still look at registers ok so let's look at another",
    "start": "1966380",
    "end": "1974200"
  },
  {
    "text": "commercial application",
    "start": "1974200",
    "end": "1978250"
  },
  {
    "text": "so snapchat uses encrypted communications so let's free the trace",
    "start": "1985710",
    "end": "1991000"
  },
  {
    "text": "that and I know it's using SSL readin",
    "start": "1991000",
    "end": "1996130"
  },
  {
    "text": "SSL right those are part of the security framework on iOS that's how it what it uses under",
    "start": "1996130",
    "end": "2003360"
  },
  {
    "text": "the hood for my encryption and decryption yeah it's calling it and what",
    "start": "2003360",
    "end": "2015690"
  },
  {
    "text": "you might have noticed earlier is that the generated handler actually did it",
    "start": "2015690",
    "end": "2023310"
  },
  {
    "text": "log to things for you like the argument to open you didn't actually have to write the code that's because there's a",
    "start": "2023310",
    "end": "2028800"
  },
  {
    "text": "really ugly hack there that tries with man to look up the man page and then",
    "start": "2028800",
    "end": "2034020"
  },
  {
    "text": "there's a red X to find the signature and generate some code based on that it's not pretty but that's in frida",
    "start": "2034020",
    "end": "2041130"
  },
  {
    "text": "tools so free de três is just a I mean nine hundred line or something Python",
    "start": "2041130",
    "end": "2046680"
  },
  {
    "text": "program it's pretty small really primitive and it has like a poor man's",
    "start": "2046680",
    "end": "2052010"
  },
  {
    "text": "API look up there with man pages so that doesn't work with SSL read here but if",
    "start": "2052010",
    "end": "2058408"
  },
  {
    "text": "we go and look up the docs which we won't have time for we learned about the",
    "start": "2058409",
    "end": "2064740"
  },
  {
    "text": "signature we could also reverse engineer did what if it wasn't already document",
    "start": "2064740",
    "end": "2070250"
  },
  {
    "text": "so I've already written this it's the",
    "start": "2070250",
    "end": "2081330"
  },
  {
    "text": "same we rewrite this beginning with the jump or a branch and then if we can't",
    "start": "2081330",
    "end": "2087840"
  },
  {
    "text": "allocate code near enough we'll jump through a header nearby like find an elf or p.m. echo header trampoline through",
    "start": "2087840",
    "end": "2095179"
  },
  {
    "text": "so I have a handler here for SSL read we",
    "start": "2095179",
    "end": "2100920"
  },
  {
    "text": "get it gets the pointer to the buffer to to read into as the second argument and",
    "start": "2100920",
    "end": "2109550"
  },
  {
    "text": "it has an outer argument in the fourth and then returns if it's successful we can rate",
    "start": "2109550",
    "end": "2118040"
  },
  {
    "text": "as much as its returned in the process argument that was processed and we can dump that with hex dump there should",
    "start": "2118040",
    "end": "2130170"
  },
  {
    "text": "also do the same for SSL right yeah so I",
    "start": "2130170",
    "end": "2144329"
  },
  {
    "text": "find out tap around a bit in the UI here [Music]",
    "start": "2144329",
    "end": "2151219"
  },
  {
    "text": "yeah something like that yeah so you can see it's calling a cell",
    "start": "2152000",
    "end": "2158579"
  },
  {
    "text": "rate this is the decrypted the thing they got from the server so you could do",
    "start": "2158579",
    "end": "2165750"
  },
  {
    "text": "the same with the open SSL api's and if the process has statically linked open",
    "start": "2165750",
    "end": "2171630"
  },
  {
    "text": "SSL that's a bit harder because you need to find in functions but you can use do that you can use static analysis tools",
    "start": "2171630",
    "end": "2178710"
  },
  {
    "text": "to find figure such things out okay so",
    "start": "2178710",
    "end": "2186569"
  },
  {
    "start": "2183000",
    "end": "2249000"
  },
  {
    "text": "another thing that's quite common is jailbreak detection in mobile apps so",
    "start": "2186569",
    "end": "2194849"
  },
  {
    "text": "say Deutsche Bank's for app for example it's a random example does this and",
    "start": "2194849",
    "end": "2204450"
  },
  {
    "text": "usually these jailbreak detection schemes are using L stat indirectly to",
    "start": "2204450",
    "end": "2211290"
  },
  {
    "text": "look for a file the presence of certain files and here you you can see it's",
    "start": "2211290",
    "end": "2223859"
  },
  {
    "text": "looking for bin bash user S Pen sshd et Cie apps etc so and it's showing us a",
    "start": "2223859",
    "end": "2231180"
  },
  {
    "text": "jailbreak destroys the security layers designed to protect your personal data on your eyes devices other so this app",
    "start": "2231180",
    "end": "2236730"
  },
  {
    "text": "detected that there's a jailbreak at the system is running on is jailbroken and now we could use Frida to bypass their",
    "start": "2236730",
    "end": "2244940"
  },
  {
    "text": "apology jailbreak scheme",
    "start": "2244940",
    "end": "2248808"
  },
  {
    "start": "2249000",
    "end": "2269000"
  },
  {
    "text": "and usually then you start by looking at the back-trace where else that is called from then you'll find their function",
    "start": "2251370",
    "end": "2257340"
  },
  {
    "text": "that calls that's doing all the checks and you can just replace the whole function with a return true if if it's",
    "start": "2257340",
    "end": "2263610"
  },
  {
    "text": "like it's jailbroken and show you that",
    "start": "2263610",
    "end": "2273450"
  },
  {
    "start": "2269000",
    "end": "2303000"
  },
  {
    "text": "you can also instrument Android a Java API on Android so that will look like this you do Java perform to attach this",
    "start": "2273450",
    "end": "2280800"
  },
  {
    "text": "thread to the VM and then you can use Java use and the class name and you get",
    "start": "2280800",
    "end": "2286020"
  },
  {
    "text": "a wrapper for that and you can do a name of a method implementation equals on the function or plate and then you replace",
    "start": "2286020",
    "end": "2292350"
  },
  {
    "text": "the whole implementation of that you have a method so that's how you would do hooking on android with java api s-- but",
    "start": "2292350",
    "end": "2298290"
  },
  {
    "text": "you could also use the Interceptor that I already show you showed you for native API so one cool use case is injecting",
    "start": "2298290",
    "end": "2306210"
  },
  {
    "start": "2303000",
    "end": "2404000"
  },
  {
    "text": "errors into applications fault injection and so you could do like this is not",
    "start": "2306210",
    "end": "2315360"
  },
  {
    "text": "very readable just copy",
    "start": "2315360",
    "end": "2320390"
  },
  {
    "text": "so this example iterates over connecting connecting Oh counsel there's two versions of connected on 32-bit or Mac",
    "start": "2334120",
    "end": "2341360"
  },
  {
    "text": "OS and then it's defining a native function can for connect so you can call",
    "start": "2341360",
    "end": "2347960"
  },
  {
    "text": "connect itself and then it replaces the existing implementation connect and then in the replacement here it will look at",
    "start": "2347960",
    "end": "2356500"
  },
  {
    "text": "well the first argument is stockist next is the address and the third is to address length so it rates out the",
    "start": "2356500",
    "end": "2362660"
  },
  {
    "text": "address family from the the address and then if it's ina iron it's six or inside",
    "start": "2362660",
    "end": "2367760"
  },
  {
    "text": "the port and if it's one of these ports then it said does this or no is econ",
    "start": "2367760",
    "end": "2374480"
  },
  {
    "text": "refused I return minus one and that's so it just returns right away however if",
    "start": "2374480",
    "end": "2380480"
  },
  {
    "text": "it's not then it's going to call through to the original connect and that way you",
    "start": "2380480",
    "end": "2386150"
  },
  {
    "text": "can create like a software firewall inside the processes that you want to debug to make them think they're firewall in certain ways and to trigger",
    "start": "2386150",
    "end": "2393920"
  },
  {
    "text": "interesting code paths and this is also great for testing or not reverse",
    "start": "2393920",
    "end": "2399260"
  },
  {
    "text": "engineering but for testing another",
    "start": "2399260",
    "end": "2406010"
  },
  {
    "start": "2404000",
    "end": "2509000"
  },
  {
    "text": "thing that's interesting is there's a there's an application that's calling receive it's receiving data from the",
    "start": "2406010",
    "end": "2413930"
  },
  {
    "text": "network and after its received the data it might be processing it and then",
    "start": "2413930",
    "end": "2419330"
  },
  {
    "text": "calling receive again so it might be it depends on the architecture of the application obviously but that's a",
    "start": "2419330",
    "end": "2425480"
  },
  {
    "text": "simple one that won't be what's happening so you might want to know what's happening between two successive",
    "start": "2425480",
    "end": "2431000"
  },
  {
    "text": "receive calls and I have an example here where that's done so here we combine two",
    "start": "2431000",
    "end": "2438410"
  },
  {
    "text": "different freed API interceptor that you saw earlier so whenever a receive is called we use a",
    "start": "2438410",
    "end": "2444170"
  },
  {
    "text": "stalker API to start tracing this thread and then when receive is called again",
    "start": "2444170",
    "end": "2450380"
  },
  {
    "text": "we stopped racing it and then we have an execution trace and here I have just",
    "start": "2450380",
    "end": "2455450"
  },
  {
    "text": "visually visualized that what this this is the agent and the the",
    "start": "2455450",
    "end": "2463570"
  },
  {
    "text": "other side that's controlling it so you can can also build car code coverage",
    "start": "2463570",
    "end": "2469090"
  },
  {
    "text": "tools this way but what's interesting here is that you could like correlated with what you actually receive from the",
    "start": "2469090",
    "end": "2475510"
  },
  {
    "text": "network so you receive a one packet you record the execution trace and you see",
    "start": "2475510",
    "end": "2481750"
  },
  {
    "text": "the different packets record it and then you can diff to and see where they diverge and then you know that okay here",
    "start": "2481750",
    "end": "2487840"
  },
  {
    "text": "in the code it's parsing that part of the packet so you might want to go there",
    "start": "2487840",
    "end": "2493300"
  },
  {
    "text": "and look at that parsing logic to understand the protocol or to find out how you can if you're building a fasting",
    "start": "2493300",
    "end": "2500410"
  },
  {
    "text": "tool you could use to do guided the faster to to have as much coverage as possible and I just want to show you a",
    "start": "2500410",
    "end": "2511450"
  },
  {
    "start": "2509000",
    "end": "2737000"
  },
  {
    "text": "proof of concept I've did some years back so here yeah this is a compliment",
    "start": "2511450",
    "end": "2524619"
  },
  {
    "text": "of mine we were sitting on a plane practically like come up with a fun way to show Freda and so we took the the",
    "start": "2524619",
    "end": "2533200"
  },
  {
    "text": "globe thing from the Google arts team and put you right here on top we're",
    "start": "2533200",
    "end": "2541960"
  },
  {
    "text": "using the free to API and showing you",
    "start": "2541960",
    "end": "2547300"
  },
  {
    "text": "the data socket communications and also the different file descriptors it knows",
    "start": "2547300",
    "end": "2552430"
  },
  {
    "text": "about and the cut types of sockets etc but what's it what we also did is",
    "start": "2552430",
    "end": "2558540"
  },
  {
    "text": "whenever there's an IP address of serve",
    "start": "2558540",
    "end": "2563560"
  },
  {
    "text": "and we'll do a geo IP lookup and plot it on the globe so you could actually get a",
    "start": "2563560",
    "end": "2568590"
  },
  {
    "text": "visualization of where the communication is happening so this is with a Spotify",
    "start": "2568590",
    "end": "2575410"
  },
  {
    "text": "back in the days when they were peer-to-peer I don't know if they are still but so now if I go and play music",
    "start": "2575410",
    "end": "2580690"
  },
  {
    "text": "here if you pay attention to do the globe here it lights up it starts making",
    "start": "2580690",
    "end": "2588369"
  },
  {
    "text": "connections all over Europe",
    "start": "2588369",
    "end": "2591660"
  },
  {
    "text": "yeah this is an example of a thumb tool you could build or a useful tool and",
    "start": "2593809",
    "end": "2599729"
  },
  {
    "text": "then there's another one called crypto shark it has nothing to do with crypto",
    "start": "2599729",
    "end": "2605219"
  },
  {
    "text": "but it can come up with a good name so it's stuck so it's a cute app written using qml",
    "start": "2605219",
    "end": "2612589"
  },
  {
    "text": "using free SQL bindings so it has a process selector here these items come",
    "start": "2612589",
    "end": "2618209"
  },
  {
    "text": "from free data API that works on iOS too so here you have the list of threads",
    "start": "2618209",
    "end": "2626209"
  },
  {
    "text": "that are in this running in this application in this case it's chrome and",
    "start": "2626209",
    "end": "2632609"
  },
  {
    "text": "this - for now these threads are tagged",
    "start": "2632609",
    "end": "2638039"
  },
  {
    "text": "dynamically based on the api's they're using so if thread is observed with",
    "start": "2638039",
    "end": "2643289"
  },
  {
    "text": "interceptors we saw earlier to call a file i/o API then it's tagged with file",
    "start": "2643289",
    "end": "2648599"
  },
  {
    "text": "the called observed achill with an Africa API then it's tagged with net so",
    "start": "2648599",
    "end": "2654089"
  },
  {
    "text": "this way you get a sense of what the different threads are doing and then you can use the code tracing API that I",
    "start": "2654089",
    "end": "2659609"
  },
  {
    "text": "showed you quickly with the all calls between two calls earlier to actually",
    "start": "2659609",
    "end": "2664679"
  },
  {
    "text": "follow the thread and here you see the functions that are called and how many",
    "start": "2664679",
    "end": "2669689"
  },
  {
    "text": "times and these are not exported these are just internal functions in this",
    "start": "2669689",
    "end": "2675209"
  },
  {
    "text": "program and it's classifying them as functions just because they were the",
    "start": "2675209",
    "end": "2681179"
  },
  {
    "text": "target of a call instruction on x86 and then you can click around here and look",
    "start": "2681179",
    "end": "2686880"
  },
  {
    "text": "at the disassembly of the functions that is calling and you can also do add probe like I did here",
    "start": "2686880",
    "end": "2693299"
  },
  {
    "text": "and you see logging whenever it's called and you can tap click on that and you",
    "start": "2693299",
    "end": "2700199"
  },
  {
    "text": "can edit the login code and it's updated live so the idea is that you can look at",
    "start": "2700199",
    "end": "2706259"
  },
  {
    "text": "the internal another application what kind of functions are called you can maybe interact with the UI and see what new functions are crawled and this could",
    "start": "2706259",
    "end": "2714239"
  },
  {
    "text": "be taken further and it could have heuristics that will look at arguments and try to guess and say it's so an MPEG",
    "start": "2714239",
    "end": "2721140"
  },
  {
    "text": "header a pointer to something it looks like an MPEG header maybe it can show you a there's a media stream happening here in this process maybe you",
    "start": "2721140",
    "end": "2728340"
  },
  {
    "text": "want to look at here at this point there's many things you could build to",
    "start": "2728340",
    "end": "2735780"
  },
  {
    "text": "help you reverse engineer so yeah I think I'm out of time so any questions",
    "start": "2735780",
    "end": "2744260"
  },
  {
    "start": "2737000",
    "end": "3092000"
  },
  {
    "text": "it was originally free either because",
    "start": "2749750",
    "end": "2755040"
  },
  {
    "text": "iodized a static analysis tool with Canada ambitions were like I will have",
    "start": "2755040",
    "end": "2760770"
  },
  {
    "text": "static analysis but I started implementing dynamic analysis first and",
    "start": "2760770",
    "end": "2767070"
  },
  {
    "text": "static never happened and later I'm glad I didn't because there's a friend of",
    "start": "2767070",
    "end": "2773070"
  },
  {
    "text": "mine a co-worker actually who's working on radar which is a static analysis tool competing with either open source so we",
    "start": "2773070",
    "end": "2780930"
  },
  {
    "text": "have our true freedom I oh that's a combined a plug-in for radar where just gives you freedom inside so I can",
    "start": "2780930",
    "end": "2787230"
  },
  {
    "text": "combine static and dynamic analysis so yeah that's where it comes from and it's",
    "start": "2787230",
    "end": "2792859"
  },
  {
    "text": "yeah with also a pun on EDA the stock",
    "start": "2792859",
    "end": "2800460"
  },
  {
    "text": "analysis tool it has a vision female name and Frieda the sister so they were like complement",
    "start": "2800460",
    "end": "2807480"
  },
  {
    "text": "each other because when a static one is dynamic yeah",
    "start": "2807480",
    "end": "2812930"
  },
  {
    "text": "yep yeah that works too",
    "start": "2817349",
    "end": "2827699"
  },
  {
    "text": "same way with the Interceptor that you saw on thanks oh I should show you",
    "start": "2827699",
    "end": "2837479"
  },
  {
    "text": "there's a website co-chair the free data re where people are encouraged to share",
    "start": "2837479",
    "end": "2843479"
  },
  {
    "text": "their creations and there's already a lot there that you can learn from",
    "start": "2843479",
    "end": "2848599"
  },
  {
    "text": "Universal Android SSL pending bypass iOS",
    "start": "2848599",
    "end": "2853829"
  },
  {
    "text": "data protection look at that free to empty route IES info it's a lot there",
    "start": "2853829",
    "end": "2860039"
  },
  {
    "text": "already but that's a great place to learn yeah co-chair dr. freda re and the",
    "start": "2860039",
    "end": "2871170"
  },
  {
    "text": "API I was using is on the website on Docs and then API reference JavaScript",
    "start": "2871170",
    "end": "2877170"
  },
  {
    "text": "API and I recommend the modes of operation here it shows you they can use",
    "start": "2877170",
    "end": "2884609"
  },
  {
    "text": "for your different ways like injected as we did before or embedded in an app or LD preload or different mechanisms I",
    "start": "2884609",
    "end": "2903509"
  },
  {
    "text": "wouldn't worry about this because if I mean you need to have you need to be",
    "start": "2903509",
    "end": "2908519"
  },
  {
    "text": "able to actually code on the machine so I mean this is but this is just like gdb",
    "start": "2908519",
    "end": "2925499"
  },
  {
    "text": "it's a debugger you could use it for nefarious things if you want to but it's still need someone to run it on the host",
    "start": "2925499",
    "end": "2932599"
  },
  {
    "text": "if he's right yeah you if yous",
    "start": "2943210",
    "end": "2950450"
  },
  {
    "text": "interceptor it will be visible but if you stalk her it will not because then",
    "start": "2950450",
    "end": "2955460"
  },
  {
    "text": "it will actually not touch the original code then it will be just in time compiling the code that it would have",
    "start": "2955460",
    "end": "2961250"
  },
  {
    "text": "been running and pretending that it's running that code so that's for it just to make it hard to detect that I did",
    "start": "2961250",
    "end": "2968570"
  },
  {
    "text": "that because it was I was reverse engineering some Apple stuff and that they had yeah some anti instrumentation",
    "start": "2968570",
    "end": "2978620"
  },
  {
    "text": "stuff but so yeah it depends but you can there's a lot of I was seeing that",
    "start": "2978620",
    "end": "2985010"
  },
  {
    "text": "mobile apps are starting to implement anti-freedom now some games have it so",
    "start": "2985010",
    "end": "2991180"
  },
  {
    "text": "but the good thing is that your instrumentation code runs before the applications code always so you can",
    "start": "2991180",
    "end": "2996320"
  },
  {
    "text": "always counter when they look for free that you can use instrumentation to actually make it look like free that's",
    "start": "2996320",
    "end": "3002320"
  },
  {
    "text": "not there so",
    "start": "3002320",
    "end": "3005430"
  },
  {
    "text": "that's one way but that won't work in Mac and iOS because we have dynamic linker there but they might connect the",
    "start": "3009799",
    "end": "3016170"
  },
  {
    "text": "localhost to a certain port which is if you deploy on android or iOS this could be listening there by default you can",
    "start": "3016170",
    "end": "3021359"
  },
  {
    "text": "change the port or they might try to connect all ports and try to send the",
    "start": "3021359",
    "end": "3026999"
  },
  {
    "text": "hello and see if they get a response yeah it's futile I think it's a waste of",
    "start": "3026999",
    "end": "3033359"
  },
  {
    "text": "time which is true because yeah not a long story okay any final questions no",
    "start": "3033359",
    "end": "3055369"
  },
  {
    "text": "it's also used by fortune 500 companies that but sadly not all of them are",
    "start": "3055369",
    "end": "3063900"
  },
  {
    "text": "allowed to contribute because they think it's a hacking tool but it's not a hacking tool it's dynamic",
    "start": "3063900",
    "end": "3069839"
  },
  {
    "text": "instrumentation framework or toolkit so but yeah so and no legal trouble so far",
    "start": "3069839",
    "end": "3076230"
  },
  {
    "text": "yeah I mean yeah but it's there's nothing illegal about it in my opinion",
    "start": "3076230",
    "end": "3081390"
  },
  {
    "text": "so okay thank you",
    "start": "3081390",
    "end": "3086820"
  },
  {
    "text": "[Applause]",
    "start": "3086820",
    "end": "3093959"
  }
]