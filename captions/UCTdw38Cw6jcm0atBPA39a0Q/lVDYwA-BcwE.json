[
  {
    "start": "0",
    "end": "365000"
  },
  {
    "text": "thanks for coming back and joining us we're not up to much ado about nothing at 2:00 we're in our heroes put the plan",
    "start": "5410",
    "end": "13459"
  },
  {
    "text": "into action and make the world safe for new and existing c-sharp applications let's hear it is anyone here wasn't here",
    "start": "13459",
    "end": "19400"
  },
  {
    "text": "for the previous hour that's a few that's actually quite a few so let's we should reintroduce ourselves yes we",
    "start": "19400",
    "end": "26270"
  },
  {
    "text": "should yes you are I'm master Gerson and I am the lead designer for c-sharp and I'm",
    "start": "26270",
    "end": "32840"
  },
  {
    "text": "bill Wagner I create most of the documentation for c-sharp on Doc's at Microsoft comm to explain the wonderful",
    "start": "32840",
    "end": "39170"
  },
  {
    "text": "things Mads and his teammates and I did get a one more Shakespeare plan while we were on break John told me to tell you",
    "start": "39170",
    "end": "46220"
  },
  {
    "text": "that there's nothing writing in the state of Denmark oh thank you so so we",
    "start": "46220",
    "end": "52760"
  },
  {
    "text": "did it that going so the things we're trying to do say nance talks through a lot of the design and the justification",
    "start": "52760",
    "end": "58460"
  },
  {
    "text": "of how this feature is being put into practice what was the path to decide we",
    "start": "58460",
    "end": "63829"
  },
  {
    "text": "really do need to fix this nullable reference problem we really do need to introduce code and introduce idioms that",
    "start": "63829",
    "end": "69950"
  },
  {
    "text": "we can use in our c-sharp code from an existing language in order to move",
    "start": "69950",
    "end": "75560"
  },
  {
    "text": "forward and be able to express our design intent for null so the idea",
    "start": "75560",
    "end": "80719"
  },
  {
    "text": "behind it is not that nulls are always always bad but rather that it should be",
    "start": "80719",
    "end": "85850"
  },
  {
    "text": "an expression of our design does this thing never have null or should it",
    "start": "85850",
    "end": "91249"
  },
  {
    "text": "sometimes be null and missing so other things that we want to do as we're",
    "start": "91249",
    "end": "97399"
  },
  {
    "text": "trying to write brand-new code there's two parts to the demos that we're going to do here is I want to start a new app",
    "start": "97399",
    "end": "103759"
  },
  {
    "text": "from scratch and start to add features to it and discuss through what my design",
    "start": "103759",
    "end": "109099"
  },
  {
    "text": "would be now that we have normal reference types so that I can explicitly",
    "start": "109099",
    "end": "114229"
  },
  {
    "text": "say what did I mean by this and express that in code so developers who come",
    "start": "114229",
    "end": "120049"
  },
  {
    "text": "after me can go okay this thing probably sometimes is missing it might not be",
    "start": "120049",
    "end": "125060"
  },
  {
    "text": "there there this thing should always have a real value that I can use so I",
    "start": "125060",
    "end": "131690"
  },
  {
    "text": "want to ask myself two questions anytime I'm designing and creating classes should this variable be no",
    "start": "131690",
    "end": "138020"
  },
  {
    "text": "or should this variable never be null and that leads to some implementation details then the compiler is going to",
    "start": "138020",
    "end": "145490"
  },
  {
    "text": "force the enforce assignment if I say they should never be no it's going to do that kind of flow analysis that Mads",
    "start": "145490",
    "end": "151280"
  },
  {
    "text": "talked about where if I create this variable from the time it is constructed until the time it's disposed of there's",
    "start": "151280",
    "end": "160010"
  },
  {
    "text": "no way it can be known at least observe it really know almost no way almost no",
    "start": "160010",
    "end": "165020"
  },
  {
    "text": "way except if you fall into one of the holes we talked about right so try to avoid those holes mm-hmm if however my",
    "start": "165020",
    "end": "172610"
  },
  {
    "text": "design says this variable sometimes is missing and sometimes is null then what",
    "start": "172610",
    "end": "181760"
  },
  {
    "text": "the compiler should tell me is anytime I want to dereference that value yeah your design says there should be null or",
    "start": "181760",
    "end": "188090"
  },
  {
    "text": "could be at all therefore before you dereference it you have to somehow",
    "start": "188090",
    "end": "193130"
  },
  {
    "text": "conditionally check either with pattern matching to construct it into a new variable some kind of if then some kind",
    "start": "193130",
    "end": "200300"
  },
  {
    "text": "of other null check to ensure that it's not null and with this green field",
    "start": "200300",
    "end": "206120"
  },
  {
    "text": "development I like John's questions earlier when we talked about the bank operator to say the compiler thinks this",
    "start": "206120",
    "end": "212120"
  },
  {
    "text": "might be no but I know better and John asked should I feel bad if I'm using it",
    "start": "212120",
    "end": "218900"
  },
  {
    "text": "in this application where I'm doing brand-new development I think I should feel bad if I'm using it I should be",
    "start": "218900",
    "end": "225980"
  },
  {
    "text": "able to construct my algorithms and Express null correctly so that I'm using",
    "start": "225980",
    "end": "232010"
  },
  {
    "text": "the new constructs in the language that helps support me and I should never have to convince the compiler I know better",
    "start": "232010",
    "end": "239120"
  },
  {
    "text": "than it does I think I should have idioms that I can work without that it's that a good way I think to approach this",
    "start": "239120",
    "end": "244160"
  },
  {
    "text": "new yeah you should definitely try harder when you're in a green field you",
    "start": "244160",
    "end": "251240"
  },
  {
    "text": "should consider it a serious smell if you have to use the the morning suppression operator all the time yeah",
    "start": "251240",
    "end": "258220"
  },
  {
    "text": "okay I'd agree with that all right so that's what we're gonna try to do we're going to try to create this new app take",
    "start": "258220",
    "end": "264530"
  },
  {
    "text": "about half of the time we have put this employee and see what we come up with",
    "start": "264530",
    "end": "270970"
  },
  {
    "text": "so what we're going to build is basically a simulation of a survey so",
    "start": "271420",
    "end": "276440"
  },
  {
    "text": "we're going to try to get some data back from people by asking them a series of questions and then you know different kinds of questions logging their answers",
    "start": "276440",
    "end": "283700"
  },
  {
    "text": "and in order to get a good survey what we want to do is make sure that we reach enough people to get a reasonably large",
    "start": "283700",
    "end": "291800"
  },
  {
    "text": "sample set now some of the things that are in our design we can already just",
    "start": "291800",
    "end": "297350"
  },
  {
    "text": "start to talk about and say I don't expect they would ever be null if I'm going to ask people questions those",
    "start": "297350",
    "end": "303050"
  },
  {
    "text": "questions should never be null because clearly if I'm asked them a question there should be some content there and",
    "start": "303050",
    "end": "310130"
  },
  {
    "text": "now let's start to think about the respondents in order to be able to analyze the data correctly",
    "start": "310130",
    "end": "315950"
  },
  {
    "text": "I want to know which people have said no I refuse to answer any of the questions",
    "start": "315950",
    "end": "321160"
  },
  {
    "text": "or which for which questions someone may have said I don't want to answer that so",
    "start": "321160",
    "end": "330110"
  },
  {
    "text": "I want to keep track of those missing values that come back that sounds like",
    "start": "330110",
    "end": "335390"
  },
  {
    "text": "no that sounds like something could be missing here so let's start to but think about how I would put this together so",
    "start": "335390",
    "end": "343040"
  },
  {
    "text": "the practices we're gonna adapt if it's one of those types where I said or one",
    "start": "343040",
    "end": "348590"
  },
  {
    "text": "of those variables where I've said you know what I don't think this does really ought to be null",
    "start": "348590",
    "end": "354940"
  },
  {
    "text": "okay I'm gonna put that question mark anytime it could be missing and I want",
    "start": "354940",
    "end": "360530"
  },
  {
    "text": "to make sure that this compiles cleanly without any of the warnings all right so I've put in some of the code that isn't",
    "start": "360530",
    "end": "367190"
  },
  {
    "start": "365000",
    "end": "498000"
  },
  {
    "text": "related to the null stuff in so that this takes a little less time but we're",
    "start": "367190",
    "end": "372230"
  },
  {
    "text": "gonna put together we're start with a survey question I have a question I need to do some things with it well one of",
    "start": "372230",
    "end": "377900"
  },
  {
    "text": "the things I'm going to have to ask about in a question is did you - yeah",
    "start": "377900",
    "end": "389890"
  },
  {
    "text": "sure being the wrong wrong demo so watching me type is pretty",
    "start": "389890",
    "end": "396440"
  },
  {
    "text": "no all right that one so my question is",
    "start": "396440",
    "end": "403370"
  },
  {
    "text": "gonna have just a couple different things I've got this question type it's a yes/no question it's going to be a number or it's going to be some text",
    "start": "403370",
    "end": "410360"
  },
  {
    "text": "okay so that's a value type so I have no problem there",
    "start": "410360",
    "end": "415600"
  },
  {
    "text": "now I'll just say type of question",
    "start": "422730",
    "end": "426530"
  },
  {
    "text": "and then I'm also going to want to have that string that is the question and",
    "start": "431300",
    "end": "442250"
  },
  {
    "text": "there's always going to be a question here otherwise there's a really weird is written to avoid so I'm gonna now put",
    "start": "442250",
    "end": "447740"
  },
  {
    "text": "together then a constructor for this well I need to type yeah",
    "start": "447740",
    "end": "457930"
  },
  {
    "text": "so can I ask you a question do you have Jim the novel rough types feature turned on right now do I have it turned on yes I believe I",
    "start": "461500",
    "end": "467980"
  },
  {
    "text": "already turned that uh-huh so right now one of the first things I did when I did file a new project is to go under my",
    "start": "467980",
    "end": "478230"
  },
  {
    "text": "build tab and we're going to set that to all configurations and if I hit I",
    "start": "478230",
    "end": "487720"
  },
  {
    "text": "actually can't do it here I have to do I do I have selected C sharp 8 beta mm-hmm",
    "start": "487720",
    "end": "494039"
  },
  {
    "text": "and when we hit this my project you have in Haley yes inaudible context options",
    "start": "494820",
    "end": "501640"
  },
  {
    "start": "498000",
    "end": "586000"
  },
  {
    "text": "right so one problem with the doc I wrote the doc that this tutorial is related to with preview 1 the switch was",
    "start": "501640",
    "end": "508570"
  },
  {
    "text": "a little different I will update that later this week knowable context option enabled everything's turned on yes so",
    "start": "508570",
    "end": "515469"
  },
  {
    "text": "we've got that there and I I think that when we ship for real that's going to be",
    "start": "515469",
    "end": "521349"
  },
  {
    "text": "the default for new projects that this I mean we want you to use novel reference types and we're gonna subtly pressure",
    "start": "521349",
    "end": "530110"
  },
  {
    "text": "you to do so by having it on by default and one of the thing because this is",
    "start": "530110",
    "end": "535480"
  },
  {
    "text": "preview note I had to select 8.0 I couldn't leave it as default even though I've got 8 on this machine since it's in",
    "start": "535480",
    "end": "542500"
  },
  {
    "text": "preview the default which is latest major version would still be 7 because",
    "start": "542500",
    "end": "547570"
  },
  {
    "text": "this is preview and latest minor version would be 7.3 this being preview so I have to actually opt into 8 right so I",
    "start": "547570",
    "end": "555040"
  },
  {
    "text": "do have that 8.0 set there for that we do have a I mean it's a nice gesture if you use one of the new features in",
    "start": "555040",
    "end": "560950"
  },
  {
    "text": "syntax instead of just saying I don't understand what that means it'll say hey looks like you're using a c-sharp a doe",
    "start": "560950",
    "end": "566820"
  },
  {
    "text": "feature do you want to upgrade to the beta in it and it's written will do it for you",
    "start": "566820",
    "end": "573330"
  },
  {
    "text": "it will be on by default you mean as in if I knew create a new project that tag",
    "start": "574640",
    "end": "580130"
  },
  {
    "text": "will be in there by default it's not yes it will default to enabled if I don't have the tag at all",
    "start": "580130",
    "end": "586460"
  },
  {
    "text": "I believe it's that the tag what what John is saying for the benefit of the of",
    "start": "586460",
    "end": "592250"
  },
  {
    "text": "the recording of and the people in the back is clarifying that not having that",
    "start": "592250",
    "end": "597950"
  },
  {
    "text": "if you have if you don't have the tag that'll continue to mean that it's not",
    "start": "597950",
    "end": "603560"
  },
  {
    "text": "on we're not going to change the default meaning of the program but we will put the tag in and we'll make it enabled in",
    "start": "603560",
    "end": "610580"
  },
  {
    "text": "the template for new projects you can go and remove it or disable it or whatever and and that will still mean the old",
    "start": "610580",
    "end": "617240"
  },
  {
    "text": "thing right so you have either file a new project in Visual Studio or dotnet new you know from the command line we",
    "start": "617240",
    "end": "625040"
  },
  {
    "text": "currently think there's no good reason not to have this feature on in new code right why would you not want to be told",
    "start": "625040",
    "end": "631700"
  },
  {
    "text": "about where you're about to make a mistake honestly so so we're going to bullish lis turn it on for new projects",
    "start": "631700",
    "end": "638630"
  },
  {
    "text": "but we do realize that it's work with existing code so that has to be something you opt into so I have a",
    "start": "638630",
    "end": "648440"
  },
  {
    "text": "similar constructor there I'm just I always like this feature just with to make it simple just using tuple",
    "start": "648440",
    "end": "654230"
  },
  {
    "text": "deconstruction and assignment to assign both fields at once I say that I did realize when I was when I was going",
    "start": "654230",
    "end": "661220"
  },
  {
    "text": "through my demo this morning and trying out different things that the warnings don't always come up right when you use",
    "start": "661220",
    "end": "667130"
  },
  {
    "text": "that the tuple assignment the the nullable warnings don't actually work right with touble yet in the preview so",
    "start": "667130",
    "end": "673250"
  },
  {
    "text": "so eventually they will but you you might not you might miss out on warnings",
    "start": "673250",
    "end": "678770"
  },
  {
    "text": "if you use that right but other than that I'm a fan of it too now well this is a small app so right now it's just as",
    "start": "678770",
    "end": "684080"
  },
  {
    "text": "one project imagine this were a library that I was going to let other people use so I'm a ship this is a nougat package I",
    "start": "684080",
    "end": "691490"
  },
  {
    "text": "may do some things to make it you know so that other other groups other",
    "start": "691490",
    "end": "697120"
  },
  {
    "text": "applications can can plug this library in so that means even though I've turned on enable nullable context and I'm gonna",
    "start": "697120",
    "end": "705380"
  },
  {
    "text": "get warnings and errors and the compilers going to enforce that nothing in this project creates a survey question where the question is null I can't",
    "start": "705380",
    "end": "713790"
  },
  {
    "text": "guarantee that every user of my nougat package is going to turn this on they may have some existing code they may be pulling it into a c-sharp 7 app so you",
    "start": "713790",
    "end": "722910"
  },
  {
    "text": "know even though the compiler is going to help me I'm still going to do some tests I'm going to say you know if",
    "start": "722910",
    "end": "730819"
  },
  {
    "text": "straining dot is an all or whitespace because we know string already has that",
    "start": "730819",
    "end": "737910"
  },
  {
    "text": "kind of extra null thing which I wouldn't like anyway of question well",
    "start": "737910",
    "end": "747059"
  },
  {
    "text": "then I'm going to next parenthesis throw",
    "start": "747059",
    "end": "753959"
  },
  {
    "text": "a new argument null exception you know",
    "start": "753959",
    "end": "759779"
  },
  {
    "text": "in the interest of time I won't type all the extra parameters to make a nice message and everything but this is an",
    "start": "759779",
    "end": "764819"
  },
  {
    "text": "important thing I think is I'm writing new code I know I'm I'm using c-sharp 8 I'm really happy I like it but the world",
    "start": "764819",
    "end": "771899"
  },
  {
    "text": "isn't safe yet not everyone's turned it on and we know that for our customers and for your customers a lot of people",
    "start": "771899",
    "end": "779220"
  },
  {
    "text": "are going to turn it on over time as they get to be able to use it so even though you're turning it on especially",
    "start": "779220",
    "end": "785160"
  },
  {
    "text": "in public methods I would really consider keeping the verifications in place even though the compiler is",
    "start": "785160",
    "end": "791399"
  },
  {
    "text": "helping you it's obvious with string because we could have someone passed the empty string which is another way to say",
    "start": "791399",
    "end": "797009"
  },
  {
    "text": "no which would still be an error in this case because I'm still asking people nothing but even with other types I",
    "start": "797009",
    "end": "803160"
  },
  {
    "text": "would put an appropriate check in place when you're initializing things at the public API level would you agree I think",
    "start": "803160",
    "end": "809040"
  },
  {
    "text": "I'm doing ok so far yeah I mean we if you're if you don't know that you're",
    "start": "809040",
    "end": "814619"
  },
  {
    "start": "812000",
    "end": "908000"
  },
  {
    "text": "consumers are going to be try not have this feature turned on then you have to trust but verify right if you",
    "start": "814619",
    "end": "822600"
  },
  {
    "text": "communicate it to them that you didn't want knows but they may not have known that they may between in a language version that didn't pick up on that or",
    "start": "822600",
    "end": "829499"
  },
  {
    "text": "they may not have yet switched it on themselves so look all the other cultures I'm gonna quickly just grab the",
    "start": "829499",
    "end": "835769"
  },
  {
    "text": "variable names from here to make sure I get to the same names otherwise I'm gonna have to redo all kinds of stuff so that's a pretty simple",
    "start": "835769",
    "end": "846720"
  },
  {
    "text": "type and once again I'm now very simply enforcing that result if I tried to do something the compiler would say",
    "start": "846720",
    "end": "853680"
  },
  {
    "text": "something is wrong I could simply if I say you know question equals null yep",
    "start": "853680",
    "end": "860790"
  },
  {
    "text": "yep I really did turn it on I'm getting I'm getting that warning there hmm okay if I try to sneak it in some other",
    "start": "860790",
    "end": "868650"
  },
  {
    "text": "way ah you're smart okay all right so",
    "start": "868650",
    "end": "881280"
  },
  {
    "text": "we've got our question type in place and so now the next thing I would need to build up on top of that is they need to",
    "start": "881280",
    "end": "886650"
  },
  {
    "text": "build a full survey which is a list of questions okay so that's kind of in in a",
    "start": "886650",
    "end": "894960"
  },
  {
    "text": "survey run so that's gonna have a bunch of questions a bunch of things and then what it's going to have to do is start",
    "start": "894960",
    "end": "902130"
  },
  {
    "text": "getting respondents and then try to start asking them do you want to do this do you want to make this stuff happen is",
    "start": "902130",
    "end": "908640"
  },
  {
    "start": "908000",
    "end": "1133000"
  },
  {
    "text": "it confusing to you that you have no question marks in your question type yes just a little bit all right so start",
    "start": "908640",
    "end": "916350"
  },
  {
    "text": "rolling through now once we've got that we're going to put some things into the survey run again I'm just going to save",
    "start": "916350",
    "end": "921900"
  },
  {
    "text": "some time typing it's the easy bake up in here",
    "start": "921900",
    "end": "926210"
  },
  {
    "text": "doesn't want to store a list of questions okay my questions could never be known so I didn't make it",
    "start": "929709",
    "end": "935889"
  },
  {
    "text": "question question mark and then I'm going to be able to add a question to it and I've got a couple different",
    "start": "935889",
    "end": "941629"
  },
  {
    "text": "constructors here either using the type and the question is two different eye",
    "start": "941629",
    "end": "948189"
  },
  {
    "text": "elements or just passing in that survey question object right so now I can add some things to it again I haven't hit",
    "start": "948189",
    "end": "954919"
  },
  {
    "text": "ran into where I want nulls yet because this run everything should be not null I feel like I'm I'm doing okay I feel like",
    "start": "954919",
    "end": "962269"
  },
  {
    "text": "this is easy good stuff does not know I like that all right",
    "start": "962269",
    "end": "968230"
  },
  {
    "text": "what else we got all right so I put that in now let's go ahead and add a few questions so take this off",
    "start": "968439",
    "end": "978429"
  },
  {
    "text": "and if we had some people doing this so I've got a couple different questions here I've got it yes no question as your",
    "start": "981220",
    "end": "987080"
  },
  {
    "text": "code ever throwing an acceptance exception you know how many times does that happened and then for the third",
    "start": "987080",
    "end": "993860"
  },
  {
    "text": "question of course we have what is your favorite color nobody so the number is",
    "start": "993860",
    "end": "999200"
  },
  {
    "text": "that is that tight too long it's probably in yet hopefully people have",
    "start": "999200",
    "end": "1004720"
  },
  {
    "text": "learned over time but if I were to try to add a question",
    "start": "1004720",
    "end": "1010740"
  },
  {
    "text": "we should be able compilers should be telling me that I'm misusing that API cool I've got the little green squiggles",
    "start": "1021260",
    "end": "1026870"
  },
  {
    "text": "there I've got stuff underneath it all right anyway I sneak this in I should be",
    "start": "1026870",
    "end": "1032839"
  },
  {
    "text": "able to get something there that says no no you can't do that okay nice so now",
    "start": "1032840",
    "end": "1040010"
  },
  {
    "text": "I've got some questions now what I want to do is I need to build up in terms of that to fill some respondents make some",
    "start": "1040010",
    "end": "1047390"
  },
  {
    "text": "things going into play into place so I'm going to grab a bunch of other code and",
    "start": "1047390",
    "end": "1053060"
  },
  {
    "text": "now let's square this one by one because there's something slightly more interesting here if I get into my survey",
    "start": "1053060",
    "end": "1059570"
  },
  {
    "text": "responses I've got some things that are",
    "start": "1059570",
    "end": "1066710"
  },
  {
    "text": "made using a random number generator because for a simulation I'm just going to generate random answers but just to",
    "start": "1066710",
    "end": "1072230"
  },
  {
    "text": "get my answers I'm going to make it dictionary and each respondent I'm going to give them an ID so I'm going to have",
    "start": "1072230",
    "end": "1079460"
  },
  {
    "text": "it int for an ID and I'm gonna make it as a to",
    "start": "1079460",
    "end": "1088490"
  },
  {
    "text": "a strength for the set of questions to",
    "start": "1088490",
    "end": "1093560"
  },
  {
    "text": "answer it and now this is going to be an honorable dictionary because if a respondent says I don't want to answer",
    "start": "1093560",
    "end": "1099800"
  },
  {
    "text": "any of your questions at all this collection is going to be null they didn't answer any other questions okay",
    "start": "1099800",
    "end": "1106179"
  },
  {
    "text": "and since this might be no I'm just gonna leave it uninitialized because that's that's a handy handy default",
    "start": "1112419",
    "end": "1118880"
  },
  {
    "text": "value so if someone decides I don't want to respond there we go their collection",
    "start": "1118880",
    "end": "1124100"
  },
  {
    "text": "of the index enter the answer and an answer is gonna be like cool and so",
    "start": "1124100",
    "end": "1133880"
  },
  {
    "start": "1133000",
    "end": "1327000"
  },
  {
    "text": "unlike what people used to with events today where they have to remember to check for null to see if if there is a",
    "start": "1133880",
    "end": "1141500"
  },
  {
    "text": "collection there here there will be told if they forget right so now I'm going to",
    "start": "1141500",
    "end": "1147049"
  },
  {
    "text": "uncomment this to generate an answer this is that simulation that's just going to return some defaults and note",
    "start": "1147049",
    "end": "1156410"
  },
  {
    "text": "that that generate answer now that does return a string question mark so if we ask them the question they go nope I'm",
    "start": "1156410",
    "end": "1161960"
  },
  {
    "text": "I'm not going to tell you my favorite color I can default and say no I'm not",
    "start": "1161960",
    "end": "1168140"
  },
  {
    "text": "gonna do not gonna do anything there okay so right",
    "start": "1168140",
    "end": "1180140"
  },
  {
    "text": "Coulson I've got those in place now let's look at the stuff that builds and cheats to answer a survey did you do do",
    "start": "1180140",
    "end": "1191740"
  },
  {
    "text": "it's now the answer survey I'm gonna pass in for the respondent here's all my questions so once again that's going to",
    "start": "1203980",
    "end": "1210580"
  },
  {
    "text": "be ienumerable the sequence of questions there's no question marks here because I",
    "start": "1210580",
    "end": "1216790"
  },
  {
    "text": "don't want any nulls coming and those are those questions that can't be null that would be good I'm gonna ask if they",
    "start": "1216790",
    "end": "1222280"
  },
  {
    "text": "can sent to the survey so do you want to take this survey at all or are you gonna say nope nope not at this time and if",
    "start": "1222280",
    "end": "1228130"
  },
  {
    "text": "they say no well I can simply just return and now if they do decide they",
    "start": "1228130",
    "end": "1235720"
  },
  {
    "text": "want to answer I'm going to say all right so now I'm going to create that new dictionary for this person's answer and for every question I'm going to",
    "start": "1235720",
    "end": "1242440"
  },
  {
    "text": "generate a response and then put it in place into the answers okay",
    "start": "1242440",
    "end": "1247570"
  },
  {
    "text": "so again I've decided my design says you can either participate to the survey and",
    "start": "1247570",
    "end": "1253540"
  },
  {
    "text": "at this point the implementation is is such that you would answer every question they don't have it returning",
    "start": "1253540",
    "end": "1258640"
  },
  {
    "text": "nulls there but the API says we could extend it that way to say nope I'm not answering that question and if I if we",
    "start": "1258640",
    "end": "1266560"
  },
  {
    "text": "reach a person or don't reach them at all and we say nope I don't want them to answer any other questions at all I",
    "start": "1266560",
    "end": "1272230"
  },
  {
    "text": "don't participate I'm not doing this I'm slamming the phone down we're done okay so we got that going all right so once",
    "start": "1272230",
    "end": "1279010"
  },
  {
    "text": "again I've got this set up it's gonna get pulled in life is good I feel pretty",
    "start": "1279010",
    "end": "1285730"
  },
  {
    "text": "good I do have to check when I generate an answer notice that could return a",
    "start": "1285730",
    "end": "1291670"
  },
  {
    "text": "nullable strength all right yep so I have before I add it I check to see if",
    "start": "1291670",
    "end": "1296860"
  },
  {
    "text": "that's there right if I and so if you didn't do that yeah if I take this null",
    "start": "1296860",
    "end": "1303610"
  },
  {
    "text": "check away uh-huh now you get a warning saying hey I've said I'm only gonna put",
    "start": "1303610",
    "end": "1310570"
  },
  {
    "text": "it in my dictionary which is why I chose a dictionary instead of a list I'm only gonna put it in there if they answered the question if they didn't answer the",
    "start": "1310570",
    "end": "1317440"
  },
  {
    "text": "question don't put it all in there okay cool",
    "start": "1317440",
    "end": "1324549"
  },
  {
    "text": "alright so we got that it looked like you were the feature was helping you",
    "start": "1324549",
    "end": "1330219"
  },
  {
    "start": "1327000",
    "end": "1735000"
  },
  {
    "text": "here again features helping me again I put this in place if I'm gonna type it that way it's not going to do it all",
    "start": "1330219",
    "end": "1336669"
  },
  {
    "text": "right so I don't so the compiler is helping me guiding me to make sure that I'm enforcing my design all right what else we got what else we",
    "start": "1336669",
    "end": "1344709"
  },
  {
    "text": "need to do here yeah let's perform the survey to you so when I run a survey",
    "start": "1344709",
    "end": "1357629"
  },
  {
    "text": "right",
    "start": "1362630",
    "end": "1365320"
  },
  {
    "text": "okay so my list of respondents that's gonna be once again it could be no",
    "start": "1375250",
    "end": "1380590"
  },
  {
    "text": "because we don't actually do anything until later after constructing this object and working with it then I'm",
    "start": "1380590",
    "end": "1386230"
  },
  {
    "text": "going to construct the list of respondents once I actually run the survey so it's going to start out as null and then eventually we'll do the",
    "start": "1386230",
    "end": "1393309"
  },
  {
    "text": "run and make it happen so I'm going to let that allow that thing to be null and then here's the part that I find where",
    "start": "1393309",
    "end": "1400179"
  },
  {
    "text": "once again it's helping me I'm going to get it get a respondent and if they answer the question I'm going to add",
    "start": "1400179",
    "end": "1405580"
  },
  {
    "text": "them into the list because this respondent ID if they answer the survey",
    "start": "1405580",
    "end": "1412210"
  },
  {
    "text": "we're definitely put in place but I'm gonna add those respondents which is a real object now even if they said no",
    "start": "1412210",
    "end": "1417840"
  },
  {
    "text": "their answers are null but because I want to track how many people answer did",
    "start": "1417840",
    "end": "1424000"
  },
  {
    "text": "they answer I want that to be non null this may be in future versions as we",
    "start": "1424000",
    "end": "1430059"
  },
  {
    "text": "start adding more features to this I'm keeping track of demographics for the people that did and didn't participate I",
    "start": "1430059",
    "end": "1436030"
  },
  {
    "text": "want to make sure there's no bias in here so I do want to track who said no at least some information about them",
    "start": "1436030",
    "end": "1442570"
  },
  {
    "text": "rather than just saying nope nope they didn't answer and you know we got 12 out of 100 people answering the survey so I",
    "start": "1442570",
    "end": "1449409"
  },
  {
    "text": "want to make sure I track that and put a bit of a connection to this morning's keynote isn't there like a bit",
    "start": "1449409",
    "end": "1455200"
  },
  {
    "text": "we're tracking everything we know about people who opted not to be tracked now",
    "start": "1455200",
    "end": "1462100"
  },
  {
    "text": "when you put it that way it sounds mean but I'm only doing it for good that's",
    "start": "1462100",
    "end": "1467620"
  },
  {
    "text": "right this is obviously so we will assume that if you were considered to be contacted at some point hmm to work with",
    "start": "1467620",
    "end": "1474370"
  },
  {
    "text": "this at least would be yes would be interested in in in some way to do this all right",
    "start": "1474370",
    "end": "1479679"
  },
  {
    "text": "so what we have here now what I've built does we work back on this as I put",
    "start": "1479679",
    "end": "1485890"
  },
  {
    "text": "together this question okay and I said all right there's no way I should ever ask nothing so the question everything is not",
    "start": "1485890",
    "end": "1492549"
  },
  {
    "text": "knowable one thing I like that you went over earlier this round is this code",
    "start": "1492549",
    "end": "1498130"
  },
  {
    "text": "looks like normal pre C sharp eight code yeah I don't see anything weird and different",
    "start": "1498130",
    "end": "1504700"
  },
  {
    "text": "in my syntax I could have written this years ago that's exactly right I mean you're free to use pattern matching and",
    "start": "1504700",
    "end": "1511150"
  },
  {
    "text": "fancy stuff for this if you want but we're tracking through the normal flow",
    "start": "1511150",
    "end": "1518260"
  },
  {
    "text": "of code we're tracking whether we think things can be known so that you don't have to write things differently and now here this is this is good you",
    "start": "1518260",
    "end": "1525820"
  },
  {
    "text": "know and when I look at the member variables that they added here I can I can see some of those question marks in",
    "start": "1525820",
    "end": "1531580"
  },
  {
    "text": "there you know they kind of stand out to me it makes me think that all right so",
    "start": "1531580",
    "end": "1537540"
  },
  {
    "text": "this is something different you're now making me express something that before",
    "start": "1537540",
    "end": "1542740"
  },
  {
    "text": "I'd have to look at everything inside the code and decide what did I expect what was the design here so if I look at",
    "start": "1542740",
    "end": "1550030"
  },
  {
    "text": "this when I say you know that survey responses that's how we're going to track whether they did this or not I",
    "start": "1550030",
    "end": "1555640"
  },
  {
    "text": "don't have to have an extra boolean variable to say oh you know they didn't respond and this is here and and so on",
    "start": "1555640",
    "end": "1561850"
  },
  {
    "text": "but I but I have a single place where I'm expressing that design intent and then all the way through the rest of",
    "start": "1561850",
    "end": "1568690"
  },
  {
    "text": "this it's like okay so we know that someone may decide they don't want to do this they may not want to respond at all",
    "start": "1568690",
    "end": "1573970"
  },
  {
    "text": "so I should be forced to check and see did we get is there something there so I",
    "start": "1573970",
    "end": "1581380"
  },
  {
    "text": "feel pretty good about this I like that nice okay and now if I walk through this",
    "start": "1581380",
    "end": "1587050"
  },
  {
    "text": "I'm saying once again all right so my questions have to be real that's good I'm adding questions okay that's good my",
    "start": "1587050",
    "end": "1593200"
  },
  {
    "text": "respondents I'm building the survey long before I actually execute the survey so",
    "start": "1593200",
    "end": "1598420"
  },
  {
    "text": "my list of respondents starts out as null but at some point during the lifetime of this object I'll run the",
    "start": "1598420",
    "end": "1604240"
  },
  {
    "text": "survey generate a lot of results and only after that point in time would that",
    "start": "1604240",
    "end": "1609460"
  },
  {
    "text": "member variable not be null so it's only after that point in time that I can say yep this should definitely be true all",
    "start": "1609460",
    "end": "1616330"
  },
  {
    "text": "right and in fact I'm going to use that same same idiom there where if this is null that means we haven't run the",
    "start": "1616330",
    "end": "1621460"
  },
  {
    "text": "survey yet I could still add questions to it once that's not null have already",
    "start": "1621460",
    "end": "1626770"
  },
  {
    "text": "asked all the questions it would probably be mathematically wrong and wrong from a data point to add questions",
    "start": "1626770",
    "end": "1633360"
  },
  {
    "text": "so if I were to expand this into more of a production code these two add question",
    "start": "1633360",
    "end": "1638710"
  },
  {
    "text": "overloads I should check and see I actually want the respondents to be null right because",
    "start": "1638710",
    "end": "1644840"
  },
  {
    "text": "I haven't run the survey yet so it's we're still in that mode where we're building the survey so it's expressing that intent better I don't just do that",
    "start": "1644840",
    "end": "1652429"
  },
  {
    "text": "so so I would be if respondents doesn't",
    "start": "1652429",
    "end": "1665870"
  },
  {
    "text": "equal mall I'd probably be an invalid",
    "start": "1665870",
    "end": "1673580"
  },
  {
    "text": "operation exception because at this point I shouldn't be doing that because",
    "start": "1673580",
    "end": "1678710"
  },
  {
    "text": "I've already I've already asked the questions I can't modify the survey now we're not politicians or anything sorry",
    "start": "1678710",
    "end": "1687910"
  },
  {
    "text": "okay",
    "start": "1687910",
    "end": "1690910"
  },
  {
    "text": "so even just having the design idioms helps we look at the code and go you know I'm this a different kind of error",
    "start": "1693649",
    "end": "1699749"
  },
  {
    "text": "there because I'm using null to check the state here I'm not actually checking all there but the fact that if it is",
    "start": "1699749",
    "end": "1704909"
  },
  {
    "text": "null thank you you have an invalid invalid operation yes I do good thanks",
    "start": "1704909",
    "end": "1713220"
  },
  {
    "text": "all right so you know but even that the idiom of being able to force myself to",
    "start": "1713220",
    "end": "1718320"
  },
  {
    "text": "say I know what null means and in it and I gave null a meeting to that field in",
    "start": "1718320",
    "end": "1723509"
  },
  {
    "text": "this in this class that now says if I should be checking for this or not",
    "start": "1723509",
    "end": "1729059"
  },
  {
    "text": "checking for it there's some reason in my design that says it should be there so I feel pretty good I like this yeah",
    "start": "1729059",
    "end": "1735749"
  },
  {
    "text": "so this goes a little beyond what just the annotation forces you to write it's just if you put it in there and you made",
    "start": "1735749",
    "end": "1741389"
  },
  {
    "text": "the intent clear that this can be null and now when you read it later you can see oh there was an intention here right",
    "start": "1741389",
    "end": "1747840"
  },
  {
    "text": "there was an attention because it was supposed to be an all I should check all right I feel good great yes so right so John just asked",
    "start": "1747840",
    "end": "1767730"
  },
  {
    "text": "now if I see this if my design and if one of my overall design goals is I'd like to avoid null in a lot of places",
    "start": "1767730",
    "end": "1773570"
  },
  {
    "text": "would this make me look and think this might be a code smell and maybe what I should do is I should split this into",
    "start": "1773570",
    "end": "1779580"
  },
  {
    "text": "two classes one of which is a survey design and now once it's complete pass",
    "start": "1779580",
    "end": "1784799"
  },
  {
    "text": "that off to run a survey and get the responses and put it into different objects that's also a valid design that",
    "start": "1784799",
    "end": "1790919"
  },
  {
    "text": "we just don't have time for but but it does it and and again I think one of the",
    "start": "1790919",
    "end": "1796559"
  },
  {
    "text": "big keys in everything we're trying to do with the language and and what Madison esteems does is when I write",
    "start": "1796559",
    "end": "1804330"
  },
  {
    "text": "code I want that to be as expressive as possible and to explain to everyone who reads my code later this is what I",
    "start": "1804330",
    "end": "1811259"
  },
  {
    "text": "intended from this and from that this does help us possibly even continue to improve it and then continue to see ways",
    "start": "1811259",
    "end": "1817769"
  },
  {
    "text": "where this design might not be exactly what you want there were some shortcuts here it was 3:00 in the morning I just",
    "start": "1817769",
    "end": "1823769"
  },
  {
    "text": "hit bang whatever it was and you can see that the language and the tools hopefully helps",
    "start": "1823769",
    "end": "1830350"
  },
  {
    "text": "to guide us to better code and certainly helps to guide us to code that when others read it it's obvious what we were",
    "start": "1830350",
    "end": "1837519"
  },
  {
    "text": "thinking we're not thinking the question",
    "start": "1837519",
    "end": "1847990"
  },
  {
    "text": "is do it do I feel bad if I put the question mark as I've been using this I",
    "start": "1847990",
    "end": "1853360"
  },
  {
    "text": "don't feel bad if I put the question mark if I thought about it if I thought about why it should be an all in the",
    "start": "1853360",
    "end": "1858940"
  },
  {
    "text": "same way and a good analogy here is with nullable value types there are times",
    "start": "1858940",
    "end": "1864279"
  },
  {
    "text": "when I yeah I would say the overwhelming amount of time I use the value type it's",
    "start": "1864279",
    "end": "1869740"
  },
  {
    "text": "not a nullable value type but when my design says this value might be missing",
    "start": "1869740",
    "end": "1875499"
  },
  {
    "text": "and I'm explicit that this value might be missing and I put the question mark there and it does make everything else",
    "start": "1875499",
    "end": "1881710"
  },
  {
    "text": "flow much more smoothly you know as matt said kind of in the first thing and this is where I think I'm starting to get I'm",
    "start": "1881710",
    "end": "1887200"
  },
  {
    "text": "sorry get the hang of this I feel good now that if I don't want to redesign a",
    "start": "1887200",
    "end": "1893619"
  },
  {
    "text": "missing feature right if you go back to and if we try to think of like I've got integers how do i express there is no",
    "start": "1893619",
    "end": "1900730"
  },
  {
    "text": "value well zero but what if zero was a valid value well it's got to be a",
    "start": "1900730",
    "end": "1907450"
  },
  {
    "text": "nullable int or I have to carry a long and extra bool or something to say this wasn't initialized and it's real so if",
    "start": "1907450",
    "end": "1915039"
  },
  {
    "text": "my design really does mean this value might be missing and that's what I meant",
    "start": "1915039",
    "end": "1920980"
  },
  {
    "text": "click masses example with the middle name or this example here with we haven't run the survey yet so it's a",
    "start": "1920980",
    "end": "1928149"
  },
  {
    "text": "very valid state for this object to be in I don't feel bad at all putting the question mark there as long as I thought",
    "start": "1928149",
    "end": "1934570"
  },
  {
    "text": "about it and I said yes this is what I meant and I think that what I meant expressing my design correctly I feel",
    "start": "1934570",
    "end": "1940929"
  },
  {
    "text": "pretty good if anything you should feel better about depending on null now than",
    "start": "1940929",
    "end": "1946090"
  },
  {
    "start": "1942000",
    "end": "2125000"
  },
  {
    "text": "before because before you whenever you depend on all dependent on null and your",
    "start": "1946090",
    "end": "1951190"
  },
  {
    "text": "semantics you risk other people not realizing that that was part of this and they forget to check right right so",
    "start": "1951190",
    "end": "1970200"
  },
  {
    "text": "now let's look at what would say farm J yeah so it it held essentially the point",
    "start": "1970200",
    "end": "1978179"
  },
  {
    "text": "is it helps you express the model better and it actually makes you feel better",
    "start": "1978179",
    "end": "1983250"
  },
  {
    "text": "about the null as well right that you're not tripping somebody else up we do call",
    "start": "1983250",
    "end": "1992970"
  },
  {
    "text": "the feature nullable reference types we don't call it not inaudible reference types yeah all right so n in terms of",
    "start": "1992970",
    "end": "2002270"
  },
  {
    "text": "that let's look at as we start to add on to this so now I want to try to add the",
    "start": "2002270",
    "end": "2007549"
  },
  {
    "text": "code so that I could run these surveys generate a bunch of a bunch of answers",
    "start": "2007549",
    "end": "2013789"
  },
  {
    "text": "and then print that value out so if I look at there's a couple things now I'm going to use null just as my logic",
    "start": "2013789",
    "end": "2020090"
  },
  {
    "text": "because like I said I I said I know what I wanted to do I expressly then I can",
    "start": "2020090",
    "end": "2026390"
  },
  {
    "text": "add this boolean property answered the survey and I'll just implement that by",
    "start": "2026390",
    "end": "2032000"
  },
  {
    "text": "saying the survey responses doesn't equal null cool because I want that to",
    "start": "2032000",
    "end": "2037730"
  },
  {
    "text": "say all right so did I answer this or not cool I can get an answer for any",
    "start": "2037730",
    "end": "2046220"
  },
  {
    "text": "particular question and here I didn't want to redefine null but I want to be",
    "start": "2046220",
    "end": "2052158"
  },
  {
    "text": "able to print out that someone didn't answer the question so I didn't make that a string question mark because you",
    "start": "2052159",
    "end": "2058790"
  },
  {
    "text": "know things were doing an enterprise that was I'm kind of layering this would be something I would intend to print out",
    "start": "2058790",
    "end": "2063919"
  },
  {
    "text": "or to display and I want to explicitly go this person refused to answer this question so I didn't want to just leave",
    "start": "2063919",
    "end": "2069980"
  },
  {
    "text": "it blank but I used get value or restore default on that dictionary because my",
    "start": "2069980",
    "end": "2077570"
  },
  {
    "text": "dictionary class int strain would return null if I pass in an integer that where",
    "start": "2077570",
    "end": "2083089"
  },
  {
    "text": "there's no answer so if they didn't answer that question my default would be null I said I don't want to return that",
    "start": "2083089",
    "end": "2088310"
  },
  {
    "text": "so now I'm forced to say this would be no answer now this is",
    "start": "2088310",
    "end": "2094010"
  },
  {
    "text": "a question I want to ask you especially as we get further into this and we start working with migrating an existing",
    "start": "2094010",
    "end": "2099740"
  },
  {
    "text": "application this dictionary class that's in in our basic library and there's no",
    "start": "2099740",
    "end": "2108140"
  },
  {
    "text": "annotations there right so if I just put you know get value or default here you",
    "start": "2108140",
    "end": "2114440"
  },
  {
    "text": "know that says that returns a string but the default there that that actually",
    "start": "2114440",
    "end": "2120980"
  },
  {
    "text": "could be returning null and it's in our framework stuff yes you know I'm not gonna help right now",
    "start": "2120980",
    "end": "2126620"
  },
  {
    "start": "2125000",
    "end": "2322000"
  },
  {
    "text": "right so this there's a whole thing about what about existing code out there",
    "start": "2126620",
    "end": "2133550"
  },
  {
    "text": "what about existing code that was not annotated and so on so we're we decided",
    "start": "2133550",
    "end": "2139250"
  },
  {
    "text": "we're not going to go look at somebody else's code and reinterpret it to mean",
    "start": "2139250",
    "end": "2144650"
  },
  {
    "text": "oh it's all none all right that would be wrong they just they didn't omit the question marks because it was all none",
    "start": "2144650",
    "end": "2150890"
  },
  {
    "text": "null they omitted the question marks because they couldn't put them in right it wasn't in their language when they wrote it and so we have to distinguish",
    "start": "2150890",
    "end": "2157820"
  },
  {
    "text": "between assemblies that were intentionally leaving out or the modules",
    "start": "2157820",
    "end": "2165830"
  },
  {
    "text": "or whatever they were intentionally leaving out question marks versus ones that didn't that couldn't express null",
    "start": "2165830",
    "end": "2172400"
  },
  {
    "text": "ability and the way we distinguish it is that if you have the feature on we put",
    "start": "2172400",
    "end": "2177710"
  },
  {
    "text": "an extra attribute in there saying all emitted question marks are none no like it's an extra attribute we can recognize",
    "start": "2177710",
    "end": "2183110"
  },
  {
    "text": "okay those are compiled by a newer compiler and they intended for all these to be none no and so when when we use an",
    "start": "2183110",
    "end": "2190070"
  },
  {
    "text": "old library or something that doesn't have it in then we we don't produce",
    "start": "2190070",
    "end": "2195110"
  },
  {
    "text": "warnings out of that because we didn't know what the intent was so we kind of just go with the flow and say for suma",
    "start": "2195110",
    "end": "2202340"
  },
  {
    "text": "bleah I'm using it right it's not worse than before right they just because if we try to guess",
    "start": "2202340",
    "end": "2207860"
  },
  {
    "text": "about their intent which the compiler tried to guess about it it will be wrong right so so it's almost like you know",
    "start": "2207860",
    "end": "2213620"
  },
  {
    "text": "it's almost like you're oblivious yes and we do use the term oblivious null",
    "start": "2213620",
    "end": "2218840"
  },
  {
    "text": "oblivious for that for that kind of pre null ability code and and so the right now and in the",
    "start": "2218840",
    "end": "2226130"
  },
  {
    "text": "preview the the core libraries are oblivious we haven't annotated them yet this we will one way or another I mean",
    "start": "2226130",
    "end": "2234319"
  },
  {
    "text": "this we might just go and fix up the whole codebase but we are actually",
    "start": "2234319",
    "end": "2239930"
  },
  {
    "text": "talking about another way of doing it so you don't always have access to the code base or you know you're not always the",
    "start": "2239930",
    "end": "2249980"
  },
  {
    "text": "person who owns the code base but you want nullable annotations so we're thinking about a format where you can",
    "start": "2249980",
    "end": "2255079"
  },
  {
    "text": "sort of put annotations on the side like a little sidecar file format then you can put give annotations for for",
    "start": "2255079",
    "end": "2261020"
  },
  {
    "text": "somebody else's library the one way or another we will so from my standpoint as",
    "start": "2261020",
    "end": "2266210"
  },
  {
    "text": "a developer starting to use this I think what I'm hearing is certainly experiment with the preview and I'm getting excited",
    "start": "2266210",
    "end": "2272630"
  },
  {
    "text": "I like this and when this comes out I'll have annotations on dotnet core app and",
    "start": "2272630",
    "end": "2280190"
  },
  {
    "text": "framework and and our stuff that's the plan yeah I also use a lot of nougat packages",
    "start": "2280190",
    "end": "2285589"
  },
  {
    "text": "some of those I'm hoping are gonna move forward and release close to and sushar",
    "start": "2285589",
    "end": "2291349"
  },
  {
    "text": "bait releases and have those packages with it but for those that don't if I",
    "start": "2291349",
    "end": "2296960"
  },
  {
    "text": "know what the semantics are supposed to be in how I'm using it I can create some text file on the side and and then",
    "start": "2296960",
    "end": "2302349"
  },
  {
    "text": "something like this where get Val your default could be could be returning a",
    "start": "2302349",
    "end": "2307549"
  },
  {
    "text": "string or I mean it could be returning a null null I would probably have to do something like I did here just even",
    "start": "2307549",
    "end": "2313700"
  },
  {
    "text": "though I don't get the warning I put the bang there right because this library right now it's not annotated so it could",
    "start": "2313700",
    "end": "2320329"
  },
  {
    "text": "have been returning at all yeah so you right now it's not making you put the bang right well you so yeah and you're",
    "start": "2320329",
    "end": "2326240"
  },
  {
    "text": "probably yeah right and then once I've",
    "start": "2326240",
    "end": "2331369"
  },
  {
    "text": "annotated that I'll get a warning here or I shouldn't get a warning because it's no longer oblivious it would actually know what's going on it's",
    "start": "2331369",
    "end": "2337700"
  },
  {
    "text": "happening awesome and I take value wonderful because",
    "start": "2337700",
    "end": "2343850"
  },
  {
    "text": "that's gonna return it T value wages if T value is an honorable perfectly it's",
    "start": "2343850",
    "end": "2350480"
  },
  {
    "text": "gonna return over T question Marcus yeah",
    "start": "2350480",
    "end": "2356750"
  },
  {
    "start": "2356000",
    "end": "2392000"
  },
  {
    "text": "so he's so he's asking what what could get value or default actually do how would it be annotated and it's one of",
    "start": "2356750",
    "end": "2363470"
  },
  {
    "text": "those places where having one of the",
    "start": "2363470",
    "end": "2368840"
  },
  {
    "text": "special attributes that we would like to provide for four methods that have special null behavior would apply again",
    "start": "2368840",
    "end": "2376690"
  },
  {
    "text": "get value or default would be annotated as a method that might return null even",
    "start": "2376690",
    "end": "2384200"
  },
  {
    "text": "if the element type is an unknowable element type the return type would be T",
    "start": "2384200",
    "end": "2393260"
  },
  {
    "start": "2392000",
    "end": "2442000"
  },
  {
    "text": "but the compiler would also be able to see the attribute and say oh in this case here where you where the you've",
    "start": "2393260",
    "end": "2400640"
  },
  {
    "text": "instantiated it was string the return type would be string question mark we",
    "start": "2400640",
    "end": "2405710"
  },
  {
    "text": "can say oh they you know add null ability even if it wasn't there right so",
    "start": "2405710",
    "end": "2412730"
  },
  {
    "text": "I'm good right there",
    "start": "2412730",
    "end": "2422120"
  },
  {
    "text": "no I specifically wanted a string because I said on get value default I provided and not in L default so right",
    "start": "2422120",
    "end": "2430040"
  },
  {
    "text": "so I want I wanted to print out no answer no no that's a good question and this is one of those things where the compiler can't tell for sure because the",
    "start": "2430040",
    "end": "2436910"
  },
  {
    "text": "signature as Madison John we're just kind of going on the signature of the method says this could be no well",
    "start": "2436910",
    "end": "2442220"
  },
  {
    "start": "2442000",
    "end": "2510000"
  },
  {
    "text": "actually you're using the overload where you provide the default right so this one would just return string but the one",
    "start": "2442220",
    "end": "2448100"
  },
  {
    "text": "that doesn't have the second argument that one would be special and and return",
    "start": "2448100",
    "end": "2453350"
  },
  {
    "text": "a nullable string even on a on a dictionary of non null strings all right",
    "start": "2453350",
    "end": "2459950"
  },
  {
    "text": "so then if we uh-huh back in here nope so babies yes",
    "start": "2459950",
    "end": "2479169"
  },
  {
    "text": "good point I should be getting an error right there [Music]",
    "start": "2484839",
    "end": "2490779"
  },
  {
    "text": "he's saying why don't you have two that is a good question",
    "start": "2490779",
    "end": "2495859"
  },
  {
    "text": "I doubt it into my survey responses and I'm not getting a warning there yeah is",
    "start": "2495859",
    "end": "2506119"
  },
  {
    "text": "it an extension method oh yeah it is oh yes it's an extension method and and",
    "start": "2506119",
    "end": "2513279"
  },
  {
    "text": "it's in an assembly that's not annotated so it's not giving you the warning that",
    "start": "2513279",
    "end": "2519019"
  },
  {
    "text": "it otherwise would very good catch that's it does get a little confusing",
    "start": "2519019",
    "end": "2526039"
  },
  {
    "text": "when you in this mixed world and some of the code has you know post null ability",
    "start": "2526039",
    "end": "2531649"
  },
  {
    "text": "semantics and some has pre null ability semantics you're like why didn't I get a warning why did I get a warning but yeah",
    "start": "2531649",
    "end": "2538699"
  },
  {
    "text": "hopefully hopefully we'll all be in the in the post nullable world in a couple",
    "start": "2538699",
    "end": "2545479"
  },
  {
    "text": "years time right indeed all right so make sure we get to migrate some co2 so",
    "start": "2545479",
    "end": "2553219"
  },
  {
    "text": "add these in got a couple small quick methods I just add that assembly there",
    "start": "2553219",
    "end": "2560569"
  },
  {
    "text": "we go so and here I can use the semantics of",
    "start": "2560569",
    "end": "2568369"
  },
  {
    "text": "notice then if I want to hide it in my API so if I want to get all participants of the survey I can do respondents",
    "start": "2568369",
    "end": "2576319"
  },
  {
    "text": "question mark question mark or a new bull innumerable empty so I can instead of returning null I can return the empty",
    "start": "2576319",
    "end": "2582979"
  },
  {
    "text": "sequence so if someone could iterate over this without crashing and if",
    "start": "2582979",
    "end": "2587989"
  },
  {
    "text": "there's nothing there there's nothing there right question question is another one of those null related operators",
    "start": "2587989",
    "end": "2595429"
  },
  {
    "start": "2590000",
    "end": "2680000"
  },
  {
    "text": "that's correct by construction right um it will always give you if you",
    "start": "2595429",
    "end": "2602720"
  },
  {
    "text": "have an an unknowable value on the right hand side it will always give you an unknowable and take that off and then to",
    "start": "2602720",
    "end": "2612650"
  },
  {
    "text": "run the survey and then go through after I've added the questions I just look at",
    "start": "2612650",
    "end": "2617960"
  },
  {
    "text": "all the participants and I'll say perform surveys so I want to run this",
    "start": "2617960",
    "end": "2623809"
  },
  {
    "text": "until I get 30 people that's 50 people that said yes and that code simply walks",
    "start": "2623809",
    "end": "2629150"
  },
  {
    "text": "through here and just keeps going wallets less than the number of people I wanted to keep asking for more so the",
    "start": "2629150",
    "end": "2635180"
  },
  {
    "text": "dictionary may have more than 50 in it but I got 50 people say yes and then we",
    "start": "2635180",
    "end": "2641480"
  },
  {
    "text": "can go through and we can answer any other questions and if they chose not to we get no response okay okay I feel like this is well small this did give me a",
    "start": "2641480",
    "end": "2649160"
  },
  {
    "text": "good feel for writing in this new world I think so the ultimate test would be to actually run it and see if you got no",
    "start": "2649160",
    "end": "2655249"
  },
  {
    "text": "reference exceptions and if not then then they work for you I feel pretty good as we try",
    "start": "2655249",
    "end": "2666309"
  },
  {
    "text": "oh here we go hey hey so far cement yeah",
    "start": "2670450",
    "end": "2677230"
  },
  {
    "text": "all right there you go no errors all right so so essentially you would take",
    "start": "2677230",
    "end": "2682329"
  },
  {
    "text": "away is that when this is just part of your toolbox then it's it's not invasive",
    "start": "2682329",
    "end": "2687490"
  },
  {
    "text": "and it's not unnatural to just embrace annotating things and and handling the",
    "start": "2687490",
    "end": "2693849"
  },
  {
    "text": "warnings you get right and when I started writing something if I if I forget to say oh I intend this to be",
    "start": "2693849",
    "end": "2699490"
  },
  {
    "text": "null and I forget the question mark I start giving some warnings and I have to declare what I meant I think that's pretty good so now let's look at",
    "start": "2699490",
    "end": "2705880"
  },
  {
    "text": "something different I want to go and look at a project that already existed don't and now this is is small we only",
    "start": "2705880",
    "end": "2714760"
  },
  {
    "text": "have about 15 minutes left so I'm going to sort of we're gonna pretend a little bit this is actually a reasonably small",
    "start": "2714760",
    "end": "2721150"
  },
  {
    "text": "asp.net web app with some tests goes to it you can feed it in our assessed feed",
    "start": "2721150",
    "end": "2728470"
  },
  {
    "text": "and it's going to show you the headline of a lot of recent recent articles on",
    "start": "2728470",
    "end": "2735220"
  },
  {
    "text": "that blog and right now if I edit its project file I don't have any of this",
    "start": "2735220",
    "end": "2744910"
  },
  {
    "text": "stuff in here so I'm going to turn on c-sharp aid",
    "start": "2744910",
    "end": "2748588"
  },
  {
    "text": "and what I would probably do when I first started migrating don't know why I",
    "start": "2756519",
    "end": "2762049"
  },
  {
    "text": "did that twice but okay I really wanted those new features put that enable",
    "start": "2762049",
    "end": "2771910"
  },
  {
    "text": "context option right yeah something like that",
    "start": "2773589",
    "end": "2780130"
  },
  {
    "text": "you have no idea we just changed it I gotta look it up and yeah it's itching",
    "start": "2780609",
    "end": "2786739"
  },
  {
    "text": "options with NS did you get that nope I probably every single one that really",
    "start": "2786739",
    "end": "2793309"
  },
  {
    "text": "needs to be an ID gesture for this yes here we go and then I would do a build",
    "start": "2793309",
    "end": "2800440"
  },
  {
    "text": "and then I would probably get a number of errors this one again smaller small ish program in part because I will be",
    "start": "2805890",
    "end": "2813270"
  },
  {
    "text": "using this for a tutorial to walk through how would I go about doing this on an existing app and I'm gonna get a",
    "start": "2813270",
    "end": "2823110"
  },
  {
    "text": "set of warnings something this size I'd probably just leave those warnings on and just fix it because it would to go",
    "start": "2823110",
    "end": "2829050"
  },
  {
    "text": "through all of these it's probably gonna take me a couple hours but I think",
    "start": "2829050",
    "end": "2834270"
  },
  {
    "text": "what's important to learn is you don't have to do that because I am sure your production code bases are bigger than",
    "start": "2834270",
    "end": "2839670"
  },
  {
    "text": "the symbol right so I'm just going to turn that off right now but what I know I want to do is I want to look at some",
    "start": "2839670",
    "end": "2847590"
  },
  {
    "text": "of the things that I've created and say you know I think it's worthwhile to look",
    "start": "2847590",
    "end": "2852900"
  },
  {
    "text": "at some of these and say what would I do so let's start just right here I've got",
    "start": "2852900",
    "end": "2858480"
  },
  {
    "text": "this view model I would like to make this a non-null thing well I feel awful",
    "start": "2858480",
    "end": "2867000"
  },
  {
    "text": "think I want to start with it differently I start with my service what",
    "start": "2867000",
    "end": "2876570"
  },
  {
    "text": "did they want to start with is there a -",
    "start": "2876570",
    "end": "2882510"
  },
  {
    "text": "I really want to make sure we showed yes I'm gonna start with my air model",
    "start": "2882510",
    "end": "2890210"
  },
  {
    "text": "I've no idea I went ahead and ran it Thanks fine okay actually works",
    "start": "2901610",
    "end": "2907610"
  },
  {
    "text": "yeah well all good then all right so again so if you look at this what we see",
    "start": "2907610",
    "end": "2914810"
  },
  {
    "text": "is I've got this air model and I've got a show request ID and I've got some",
    "start": "2914810",
    "end": "2920330"
  },
  {
    "text": "isn't all empty there so I want to just turn on and this is still nullable enable Wow there we go so I turn this on",
    "start": "2920330",
    "end": "2931970"
  },
  {
    "text": "I now get about three or four warnings so I can do this in a file by file or class-by-class basis we haven't shown",
    "start": "2931970",
    "end": "2939050"
  },
  {
    "start": "2938000",
    "end": "3033000"
  },
  {
    "text": "this for this a directive you can put in your file and turn it on for just as much of your source code as you want to",
    "start": "2939050",
    "end": "2944600"
  },
  {
    "text": "right if I had multiple classes here I could put the directive on right here",
    "start": "2944600",
    "end": "2951369"
  },
  {
    "text": "and then I could turn it off again here",
    "start": "2952660",
    "end": "2957549"
  },
  {
    "text": "all right so I can just scope it just to what I want so I'm just working on this",
    "start": "2958840",
    "end": "2964030"
  },
  {
    "text": "most of our samples don't have two or three different classes in one but I have it here okay so this is good so",
    "start": "2964030",
    "end": "2969320"
  },
  {
    "text": "I've got these things now if I look at this I'm going alright so you're getting",
    "start": "2969320",
    "end": "2974990"
  },
  {
    "text": "a warning I'm getting some warnings and now if I look at this class because it's small I can see that there's a semantics",
    "start": "2974990",
    "end": "2981470"
  },
  {
    "text": "to it that says it looks like they were trying to do nala both things in kind of",
    "start": "2981470",
    "end": "2988910"
  },
  {
    "text": "a different way I've got this show request ID which says if this request ID",
    "start": "2988910",
    "end": "2994340"
  },
  {
    "text": "which is a string if that's not or empty that should return false otherwise do",
    "start": "2994340",
    "end": "3003070"
  },
  {
    "text": "this well I mean that feels like null belongs here yeah so it's like it that",
    "start": "3003070",
    "end": "3013600"
  },
  {
    "text": "could be no that could be no so I think I should do this right just to be clear what the warning what was the warning what the warning was well okay you can",
    "start": "3013600",
    "end": "3021850"
  },
  {
    "text": "hover on it when it shows up again yeah on the class on the class itself nah",
    "start": "3021850",
    "end": "3030760"
  },
  {
    "text": "knowable property requests ideas uninitialized yes so that's the same warning we saw in the constructor before",
    "start": "3030760",
    "end": "3036549"
  },
  {
    "start": "3033000",
    "end": "3059000"
  },
  {
    "text": "but this one has a default constructor so there's no way out of place it so it goes on my class and stay cool",
    "start": "3036549",
    "end": "3043109"
  },
  {
    "text": "okay so now I want to look at another one so this one here I definitely would just make a go bang now everything's",
    "start": "3043109",
    "end": "3050230"
  },
  {
    "text": "good that's pretty much what I want there because it looks like we've got some other semantics to test for an all or empty right I want to redefine all a",
    "start": "3050230",
    "end": "3056349"
  },
  {
    "text": "force empty string or something in there cuz they just if you're not getting any warnings when you put the question mark on so apparently your logic here is good",
    "start": "3056349",
    "end": "3063609"
  },
  {
    "start": "3059000",
    "end": "3248000"
  },
  {
    "text": "yep arrow Texas ooh but you might have wanting to show up elsewhere but you would sort of like then just turn you",
    "start": "3063609",
    "end": "3068950"
  },
  {
    "text": "know work through them and deal with the warnings that you get from now consuming the thing that is now known now let's",
    "start": "3068950",
    "end": "3077260"
  },
  {
    "text": "look in one of our others the other one I really wanted to look at because we",
    "start": "3077260",
    "end": "3082269"
  },
  {
    "text": "get a few fun bits is did you do do do do ya",
    "start": "3082269",
    "end": "3090058"
  },
  {
    "text": "if I look at my view model that comes back with my new story here I actually",
    "start": "3092650",
    "end": "3100150"
  },
  {
    "text": "have to look at a few interesting bits to do something different so if I turn it on here",
    "start": "3100150",
    "end": "3106109"
  },
  {
    "text": "okay so now I'm starting to get those same warning so if this uninitialized stuff here mm-hmm I think I feel bad",
    "start": "3116270",
    "end": "3123480"
  },
  {
    "text": "about this because right now if I what I know about this this program is this",
    "start": "3123480",
    "end": "3129000"
  },
  {
    "text": "view model is gonna get passed to a page and then it's going to display those things so it probably shouldn't be null",
    "start": "3129000",
    "end": "3134190"
  },
  {
    "text": "right so maybe I want to do something to do something different but if I look at where it's initialized is in my service",
    "start": "3134190",
    "end": "3143540"
  },
  {
    "text": "that initializes these stories here's something kind of interesting I'm using",
    "start": "3143540",
    "end": "3149190"
  },
  {
    "text": "Auto mapper which is a nougat package that can initialize these objects by setting properties of the same name from",
    "start": "3149190",
    "end": "3155690"
  },
  {
    "text": "the structure that comes in between the two objects so I'm going to get in this ice indication item ID which is",
    "start": "3155690",
    "end": "3162359"
  },
  {
    "text": "something that I'm gonna read and and deconstruct from the XML that comes back from an RSS feed and amazingly enough",
    "start": "3162359",
    "end": "3170000"
  },
  {
    "text": "because autumn works reasonably well these property names map to the things",
    "start": "3170000",
    "end": "3178650"
  },
  {
    "text": "that come in here except for the URI so I have the auto map or set something up",
    "start": "3178650",
    "end": "3184650"
  },
  {
    "text": "to change this okay so now what I know because if I look above from the new",
    "start": "3184650",
    "end": "3191130"
  },
  {
    "text": "service where I'm going to actually instantiate this and make it work is when I go get a new story and I create",
    "start": "3191130",
    "end": "3199109"
  },
  {
    "text": "one my new story is going to be created by mapping the item I got back from XML",
    "start": "3199109",
    "end": "3204900"
  },
  {
    "text": "into this structure so by looking at some other places in my design I can",
    "start": "3204900",
    "end": "3211290"
  },
  {
    "text": "make a really quick fix so that I could turn on nullable everywhere and say this",
    "start": "3211290",
    "end": "3216690"
  },
  {
    "text": "whole project is now safe but I'm gonna have to do something that is John put",
    "start": "3216690",
    "end": "3221760"
  },
  {
    "text": "I'm going to feel slightly dirty about is I'm gonna say this equals null bang",
    "start": "3221760",
    "end": "3227480"
  },
  {
    "text": "I'm gonna say this equals no but that",
    "start": "3227480",
    "end": "3233369"
  },
  {
    "text": "one is a value type first so I don't need to do that one you actually don't get to",
    "start": "3233369",
    "end": "3239280"
  },
  {
    "text": "and this equals no way you have to remove the semi-colon as well I'm sorry",
    "start": "3239280",
    "end": "3245590"
  },
  {
    "text": "in the first one thank you so essentially you saying well these things so this is a case we talked about",
    "start": "3245590",
    "end": "3252550"
  },
  {
    "text": "a little these things are initialized by other means and the only way currently",
    "start": "3252550",
    "end": "3257950"
  },
  {
    "text": "in the prototype and feature as envisioned that you can express that is",
    "start": "3257950",
    "end": "3264670"
  },
  {
    "text": "to explicitly initialize them to no bang which says don't don't warn make them",
    "start": "3264670",
    "end": "3272560"
  },
  {
    "text": "null but don't but don't warn and we're still sort of like wondering whether",
    "start": "3272560",
    "end": "3278800"
  },
  {
    "text": "that's the right thing to do but so the recommendation is whenever you put in a",
    "start": "3278800",
    "end": "3284140"
  },
  {
    "text": "bang you should put in a comment saying why that bang is there and you just did now with more time because we've only",
    "start": "3284140",
    "end": "3291820"
  },
  {
    "text": "got five minutes left I could change the auto map or mapping to call a constructor make this a read-only model",
    "start": "3291820",
    "end": "3299140"
  },
  {
    "text": "and do that which is exactly what I would do yes I do not yeah so that's a quick fix here and if the actual face",
    "start": "3299140",
    "end": "3305950"
  },
  {
    "text": "but there's a couple different things in that one depending on how deeply ingrained in your code some of this is",
    "start": "3305950",
    "end": "3311550"
  },
  {
    "text": "this may be the right thing for some migration because there are instances where I may go you know I do know better",
    "start": "3311550",
    "end": "3318780"
  },
  {
    "text": "but I really ought to be able to justify it and here once again if I had another 20 minutes of demo and nobody wanted",
    "start": "3318780",
    "end": "3325300"
  },
  {
    "text": "lunch I would write that extra code but since I don't I'm gonna do this right now and say you know to do fix this know",
    "start": "3325300",
    "end": "3337960"
  },
  {
    "text": "check it in we're good yes yeah but brackets not only fix this so you",
    "start": "3337960",
    "end": "3344870"
  },
  {
    "text": "can find them really easily that is a very good idea to do and no ball so I",
    "start": "3344870",
    "end": "3351260"
  },
  {
    "text": "can find those and I can make uh slightly better fix depending on how big of the scope the problem is and again if",
    "start": "3351260",
    "end": "3358040"
  },
  {
    "text": "I'm looking at this from the standpoint of what code would I write today I would not do this I would start by writing this as an immutable type I would start",
    "start": "3358040",
    "end": "3366290"
  },
  {
    "text": "by creating the Auto mapper to do it the other way using a constructor and mapping of the constructor arguments I",
    "start": "3366290",
    "end": "3372820"
  },
  {
    "text": "don't have that right now I mean I already have this code that was written before these features were available as",
    "start": "3372820",
    "end": "3379310"
  },
  {
    "text": "matt said in the the first part we didn't have correct by construction",
    "start": "3379310",
    "end": "3384500"
  },
  {
    "text": "everywhere through the language for everything we did so we used other idioms to express yes this is going to",
    "start": "3384500",
    "end": "3390200"
  },
  {
    "text": "be known but only for a little while and then it's fine so now we're going to express it explicitly here to say yes I",
    "start": "3390200",
    "end": "3397730"
  },
  {
    "text": "know this is null but only for a little bit let's not worry about it because we know we've tested this and we know",
    "start": "3397730",
    "end": "3403130"
  },
  {
    "text": "there's other means around it so I have a way to move forward which I feel good about and now I can continue to convert",
    "start": "3403130",
    "end": "3408920"
  },
  {
    "text": "more of my code I can add more and eventually I would reach this point where I would turn on that nullable",
    "start": "3408920",
    "end": "3415910"
  },
  {
    "text": "context enable switch everywhere and say now I should feel clean and I should",
    "start": "3415910",
    "end": "3421130"
  },
  {
    "text": "stay that way and then even with this where these two news might still be here anyway I now do go ahead and fix this I",
    "start": "3421130",
    "end": "3428240"
  },
  {
    "text": "would then say all right when I fix this I have to leave the nullable context on and make sure that I fix it in a way",
    "start": "3428240",
    "end": "3434840"
  },
  {
    "text": "that that continues so I can do this in multiple steps depending the size of my codebase and depending on how",
    "start": "3434840",
    "end": "3440570"
  },
  {
    "text": "far-reaching any of the problems are there's actually a little trick here if you so you said nullable enable on top",
    "start": "3440570",
    "end": "3447380"
  },
  {
    "text": "and then you said nullable disabled at the bottom right and if you accidentally leave some of those in then even though",
    "start": "3447380",
    "end": "3452990"
  },
  {
    "text": "you turn it on project why the nullable disabled is going to turn it off and so",
    "start": "3452990",
    "end": "3458180"
  },
  {
    "text": "what you can say instead is nullable restore no and then it'll return it to project settings and then once you flip",
    "start": "3458180",
    "end": "3464150"
  },
  {
    "text": "it on for the whole project that's just gonna be a no op and both are they're gonna be a no op that's a great check",
    "start": "3464150",
    "end": "3470450"
  },
  {
    "text": "yes and then another one that has a similar one that I believe is in that's it was a",
    "start": "3470450",
    "end": "3478560"
  },
  {
    "text": "quick question down here so you so you",
    "start": "3478560",
    "end": "3511230"
  },
  {
    "text": "mean this these found multiple things I",
    "start": "3511230",
    "end": "3522650"
  },
  {
    "text": "think answer so if I want to try this and see if I want to fix something now without turning this on I can't you see",
    "start": "3522650",
    "end": "3531599"
  },
  {
    "text": "sharp aliens that ship something right now but I want to get told when I'm doing something that could be wrong well",
    "start": "3531599",
    "end": "3539540"
  },
  {
    "text": "I think what you're getting toward is wanting to do something like that right",
    "start": "3548600",
    "end": "3556480"
  },
  {
    "text": "yeah so they've I'm sorry I didn't quite hear but that's definitely yes right",
    "start": "3562360",
    "end": "3573740"
  },
  {
    "text": "yeah yes so that's a yeah so it is a problem that you yeah I think we're trying to",
    "start": "3573740",
    "end": "3581240"
  },
  {
    "text": "we're trying to also ship the SDK in a preview version that also embraces the",
    "start": "3581240",
    "end": "3590000"
  },
  {
    "text": "new language features did we just do that or I think we did so you can",
    "start": "3590000",
    "end": "3597020"
  },
  {
    "text": "actually this actually and the SDK also has the ability to run the seizure baito features now the preview SDK can run the",
    "start": "3597020",
    "end": "3604400"
  },
  {
    "text": "preview language features it can compile against that so if you're willing to adopt the preview SDK into your tool",
    "start": "3604400",
    "end": "3610880"
  },
  {
    "text": "chain you can do it otherwise there's no way right I mean you're using an old compiler against the syntax it doesn't",
    "start": "3610880",
    "end": "3617210"
  },
  {
    "text": "know so that's the best we can do mm-hmm and you know for CI build you could set",
    "start": "3617210",
    "end": "3622940"
  },
  {
    "text": "up a separate CI server just to check for these errors that you don't put into production I realize that's not a great",
    "start": "3622940",
    "end": "3629390"
  },
  {
    "text": "answer well this problem is kind of have syntax in there that the production but",
    "start": "3629390",
    "end": "3634640"
  },
  {
    "text": "now if I turn on just warnings right well you're still going to have question marks and stuff right and so okay the",
    "start": "3634640",
    "end": "3642710"
  },
  {
    "text": "warnings mode just turn on the checks",
    "start": "3642710",
    "end": "3647530"
  },
  {
    "text": "right right is that that's possible yeah",
    "start": "3661079",
    "end": "3672369"
  },
  {
    "text": "that there's like a subset of things you could already fix as long as you don't need to put question marks in your code",
    "start": "3672369",
    "end": "3677769"
  },
  {
    "text": "or something that that you could actually discover some seminal ability errors even ahead of time yeah right",
    "start": "3677769",
    "end": "3684880"
  },
  {
    "text": "that's a good point and there was one other one that I wanted to spot quick",
    "start": "3684880",
    "end": "3691109"
  },
  {
    "text": "where over time and they're hungry ah yes so I will skip that so we did that",
    "start": "3691829",
    "end": "3701369"
  },
  {
    "text": "big things we don't want to look at as terms of the kinds of things that we're looking at when you turn it on an existing code base these are probably",
    "start": "3701369",
    "end": "3707619"
  },
  {
    "text": "the most common errors that your warnings that you're gonna see right converting a null literal to a not",
    "start": "3707619",
    "end": "3713529"
  },
  {
    "text": "nullable you can't do that Nullah will not initialize this was one of the ones that we saw reference assignment",
    "start": "3713529",
    "end": "3720039"
  },
  {
    "text": "reference receiver it would mean this could be null in a method call in all",
    "start": "3720039",
    "end": "3726009"
  },
  {
    "text": "reference return I'm returning null when I shouldn't no reference argument those are the most common ones you get you're",
    "start": "3726009",
    "end": "3731469"
  },
  {
    "text": "going to see some others as well and the big things that we want to get out of trying to work with this that in terms",
    "start": "3731469",
    "end": "3737890"
  },
  {
    "text": "of converting code is turned out on small blocks class at a time method at a",
    "start": "3737890",
    "end": "3743019"
  },
  {
    "text": "time and so on depending on the scope of different things and and look for the design intent and when you fix them you",
    "start": "3743019",
    "end": "3749919"
  },
  {
    "text": "know as matt said in the first session don't redefine null to be some other value like the empty string absolutely",
    "start": "3749919",
    "end": "3756880"
  },
  {
    "text": "think about it and go yeah this nulls okay here and put in the question marks or nulls not okay try to refactor the",
    "start": "3756880",
    "end": "3764709"
  },
  {
    "text": "code such that it never can have the value null so when all the others are",
    "start": "3764709",
    "end": "3770439"
  },
  {
    "text": "part of your design intent that's good designer tends obscured try to change",
    "start": "3770439",
    "end": "3775449"
  },
  {
    "text": "what happens right right now interestingly var declarations will always default to not nullable so if I",
    "start": "3775449",
    "end": "3781390"
  },
  {
    "text": "do var pass equals some text that's going to be an unknowable string once you're in",
    "start": "3781390",
    "end": "3788440"
  },
  {
    "text": "c-sharp aid and the boundaries with code generation and older libraries we can of alluded to that there will be a sidecar",
    "start": "3788440",
    "end": "3793990"
  },
  {
    "text": "format there will be something where as any of the libraries that you depend on",
    "start": "3793990",
    "end": "3799990"
  },
  {
    "text": "get converted or get the sidecar format at it the semantics should be there with",
    "start": "3799990",
    "end": "3806859"
  },
  {
    "text": "this last demo I'm going to be looking at a tutorial for docs that should go live within a week or so where I'll go",
    "start": "3806859",
    "end": "3812920"
  },
  {
    "text": "through more the examples in terms of what we did migrating and there will go",
    "start": "3812920",
    "end": "3819220"
  },
  {
    "text": "I think that is most of it last little bit since everyone here is interested in",
    "start": "3819220",
    "end": "3825880"
  },
  {
    "text": "c-sharp the.net foundation has now become an open membership organization",
    "start": "3825880",
    "end": "3831490"
  },
  {
    "text": "we want the community members to feel a strong stake in the future of dotnet so",
    "start": "3831490",
    "end": "3838150"
  },
  {
    "text": "if you look at that net foundation at org slash become a member this is a hopefully good justification to join the",
    "start": "3838150",
    "end": "3846249"
  },
  {
    "text": "dotnet foundation and if so then there's a link to the forum to say you know have you contributed anything to any dotnet",
    "start": "3846249",
    "end": "3855430"
  },
  {
    "text": "or Creepo so whether that's our Doc's roselyn's c-sharp lang pull requests enough issues great",
    "start": "3855430",
    "end": "3862779"
  },
  {
    "text": "discussion whatever and we'll look at that and if you are interested in becoming a member as an individual or as",
    "start": "3862779",
    "end": "3869109"
  },
  {
    "text": "corporations we're actually encouraging that and as part of that what you'll",
    "start": "3869109",
    "end": "3875200"
  },
  {
    "text": "find on this page is everything about what we intend members participation will look like and Louise the things",
    "start": "3875200",
    "end": "3881349"
  },
  {
    "text": "that we're driving toward for that question and with that I think we're done we can",
    "start": "3881349",
    "end": "3888730"
  },
  {
    "text": "have lunch have a quick have a quick suggestion you all want to go and get lunch and maybe you have questions but",
    "start": "3888730",
    "end": "3895989"
  },
  {
    "text": "if you hang back here everyone else will get lunch first before you why don't you and I go to the second floor second",
    "start": "3895989",
    "end": "3903430"
  },
  {
    "text": "floor and hang out there and then once you've got your lunch if you have any questions come and find us there and",
    "start": "3903430",
    "end": "3908619"
  },
  {
    "text": "come and have a chat and try to be at one of the round tables we'll hang around and sort of the open area there",
    "start": "3908619",
    "end": "3914050"
  },
  {
    "text": "and take questions there all right thank you thank you",
    "start": "3914050",
    "end": "3919950"
  }
]