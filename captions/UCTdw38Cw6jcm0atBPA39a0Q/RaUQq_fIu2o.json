[
  {
    "text": "hello everyone this is uh this is the first time I've given a talk that has a soundtrack in the background so we're",
    "start": "9200",
    "end": "14320"
  },
  {
    "text": "going to have maths and Jazz apparently um and this is a a surprising turnout for a really hard math talk like a",
    "start": "14320",
    "end": "20760"
  },
  {
    "text": "abstract math talk uh right after a very absorbing kot I'm surprised that people are here and not off to go and write",
    "start": "20760",
    "end": "26640"
  },
  {
    "text": "Rockstar so I'm very flattered um so yeah my name is El I and I am here today to talk to you about the math that",
    "start": "26640",
    "end": "33320"
  },
  {
    "text": "powers uh our encryption how we keep our data safe when we're um sending it over the web and things like that I've been",
    "start": "33320",
    "end": "39840"
  },
  {
    "text": "in tech for about eight nine years now um I studied math at University which is",
    "start": "39840",
    "end": "45079"
  },
  {
    "text": "where a lot of my love for this subject has sort of I I I I love this subject and some of the things that I did I",
    "start": "45079",
    "end": "50800"
  },
  {
    "text": "studied at University um and yeah I'm going to talk to you about how isometric",
    "start": "50800",
    "end": "56559"
  },
  {
    "text": "cryptography works the actual math behind it I've got some worked examples and why precisely Quantum Computing is",
    "start": "56559",
    "end": "63199"
  },
  {
    "text": "going to change things and why Quantum resilient cryptography is needed so",
    "start": "63199",
    "end": "68560"
  },
  {
    "text": "agenda for today I'm going to give a very I mean very brief history of um",
    "start": "68560",
    "end": "73600"
  },
  {
    "text": "cryptography up until the first asymmetric crypto systems um I'm going to talk about RSA encryption take you",
    "start": "73600",
    "end": "80200"
  },
  {
    "text": "through a worked example to show how it works and then we'll talk a little bit about the actual sort of um group Theory",
    "start": "80200",
    "end": "85439"
  },
  {
    "text": "essentially I'm going to teach you um how elliptic curve cryptography works also with some group Theory involved um",
    "start": "85439",
    "end": "91799"
  },
  {
    "text": "unfortunately we don't have doors here that I can lock so that you are forced to stay for this part um so you are free",
    "start": "91799",
    "end": "97240"
  },
  {
    "text": "to leave um but I hope I hope it will be interesting to you this is the heaviest math section of the talk um and there is",
    "start": "97240",
    "end": "103640"
  },
  {
    "text": "a worked example of the elliptic curve digital signing algorithm at the end of the talk which I don't go through live but if you want to come talk to me about",
    "start": "103640",
    "end": "109640"
  },
  {
    "text": "it afterwards please do um and then we're going to talk about Quantum Computing and Shaw's algorithm and what",
    "start": "109640",
    "end": "115119"
  },
  {
    "text": "that means for the world of cryptography I see a worked example of how it breaks RS say encryption and then finally wrap",
    "start": "115119",
    "end": "122360"
  },
  {
    "text": "up with talking about what the world of cryptography is going to look like in the future or what I hope it will look like in the future so a brief history of",
    "start": "122360",
    "end": "129959"
  },
  {
    "text": "cryptography uh people have wanted to send hidden messages to each other for basically as long as we've been talking to each other especially since we",
    "start": "129959",
    "end": "136640"
  },
  {
    "text": "started having things like armies and spies so this is a very natural need that we have to try and send information",
    "start": "136640",
    "end": "143000"
  },
  {
    "text": "to each other without somebody unwanted being able to obtain that information and a very basic crypto system um",
    "start": "143000",
    "end": "150319"
  },
  {
    "text": "something called a Cesar Cipher works like this um where you take letters of the alphabet and you just map them um",
    "start": "150319",
    "end": "157519"
  },
  {
    "text": "onto other letters of the alphabet and you might do this by simply offsetting them by a certain number so I would say",
    "start": "157519",
    "end": "162720"
  },
  {
    "text": "NDC is great and I use this mapping here and I get something out of the other end",
    "start": "162720",
    "end": "167800"
  },
  {
    "text": "and if you don't know how I did that mapping it might be hard to um reverse it right what we're doing here is we're",
    "start": "167800",
    "end": "174200"
  },
  {
    "text": "essentially translating letters of the alphabet into numbers performing a mathematical operation on those numbers",
    "start": "174200",
    "end": "180599"
  },
  {
    "text": "translating them back now this is a very easy Cipher to break this is a Caesar Cipher we are using adding six to our",
    "start": "180599",
    "end": "188120"
  },
  {
    "text": "numbers every single time you can break this very trivially with letter anal uh frequency analysis right this is this is",
    "start": "188120",
    "end": "194840"
  },
  {
    "text": "um very very easy to break very insecure however at one time this was military",
    "start": "194840",
    "end": "199879"
  },
  {
    "text": "grade encryption because this is it was used by the Roman military so or at least um apocryphally it was um but we",
    "start": "199879",
    "end": "207239"
  },
  {
    "text": "can extend this idea and instead of adding the number to each letter every single time we can do something where we",
    "start": "207239",
    "end": "213799"
  },
  {
    "text": "take each letter we turn it into a number we take another message text something that's not known to outside",
    "start": "213799",
    "end": "220280"
  },
  {
    "text": "people and we take turn that into numbers and then we add both sets",
    "start": "220280",
    "end": "225319"
  },
  {
    "text": "together and turn that sorry add both sets together take the modular of 26 because that's how many characters we're",
    "start": "225319",
    "end": "231120"
  },
  {
    "text": "playing with here turn that back into some text and this is an example of using a a private key this is actually",
    "start": "231120",
    "end": "238680"
  },
  {
    "text": "what a lot of modern cryption users because if you use a large enough private key that is not known to an",
    "start": "238680",
    "end": "244200"
  },
  {
    "text": "outside reader this is very very hard to break uh because letter frequen analysis doesn't work on it um of course once the",
    "start": "244200",
    "end": "251879"
  },
  {
    "text": "private key if you had a private key that was very very short it becomes easier and easy to break um and the drawback of this is",
    "start": "251879",
    "end": "261120"
  },
  {
    "text": "that in order to use this mechanism you both need to know the string private key right you can't actually just I can't",
    "start": "261120",
    "end": "268160"
  },
  {
    "text": "send you what's on the bottom and have you understand it without knowing what I did to get there so this is not",
    "start": "268160",
    "end": "273720"
  },
  {
    "text": "asymmetric cryptography this is symmetric symmetric cryptography where both parties share knowledge they have a",
    "start": "273720",
    "end": "280120"
  },
  {
    "text": "symmetric amount of information they have the same information um and so in order to communicate privately with",
    "start": "280120",
    "end": "285960"
  },
  {
    "text": "somebody using this mechanism you need to have already set up a shared secret and this is hard to do and this is why",
    "start": "285960",
    "end": "293120"
  },
  {
    "text": "we have a symmetric craphy because of this requirement for symmetric craphy um",
    "start": "293120",
    "end": "299080"
  },
  {
    "text": "this is once we have a shared secret this is very very fast to do and very very secure so the bulk of web traic is",
    "start": "299080",
    "end": "306280"
  },
  {
    "text": "actually encrypted with symetric cryptography um but in order to get to a stage where we can even do that we need",
    "start": "306280",
    "end": "312440"
  },
  {
    "text": "something else to establish that shared key um and if you want to know more about this you should look up how the TLs handshake works so before I started",
    "start": "312440",
    "end": "319919"
  },
  {
    "text": "I should have probably asked some level setting questions who here has a math background okay yeah um who here has not",
    "start": "319919",
    "end": "328160"
  },
  {
    "text": "doesn't know how the TLs hand shap flow works okay that's okay only a couple so",
    "start": "328160",
    "end": "333479"
  },
  {
    "text": "yeah go look that up if you want to know more about the interplay between symmetric cryptography and asymmetric cryptography but the the sort of the",
    "start": "333479",
    "end": "340319"
  },
  {
    "text": "spark notes Here is that in order to do secure web traffic we need both right or secure and performant web traffic we",
    "start": "340319",
    "end": "346160"
  },
  {
    "text": "need both um and this is where yeah we start to need asymmetric craphy which is",
    "start": "346160",
    "end": "352360"
  },
  {
    "text": "what you can use in order to establish a shared secret establishing um a private line of communication and the first um",
    "start": "352360",
    "end": "360120"
  },
  {
    "text": "asymmetric cryptography system is RSA so has anyone here not heard of",
    "start": "360120",
    "end": "365479"
  },
  {
    "text": "RSA cool Grand so we've got like I think all hand there um brief facts for context it was officially published in",
    "start": "365479",
    "end": "372880"
  },
  {
    "text": "199 1977 um and it was groundbreaking at the time and what RSA sort of it was uh RSA",
    "start": "372880",
    "end": "380160"
  },
  {
    "text": "stands for rivest CH Adelman the three people who officially published it um Diffy and Helman had published uh their",
    "start": "380160",
    "end": "386639"
  },
  {
    "text": "key exchange mechanism in 1976 and it inspired a whole like wave of interest",
    "start": "386639",
    "end": "392280"
  },
  {
    "text": "in the idea of asymmetric hypography and the ability to communicate privately um",
    "start": "392280",
    "end": "398400"
  },
  {
    "text": "funny enough there was also a guy called Clifford Cox in the UK who had basically discovered it a few years before um and",
    "start": "398400",
    "end": "406039"
  },
  {
    "text": "gchq had gone that's cool but we don't know how it would possibly ever be useful so let's just shove it in a state",
    "start": "406039",
    "end": "411199"
  },
  {
    "text": "Secrets file somewhere um and it never saw the light of day for gchq and it s came out afterwards that he'd actually",
    "start": "411199",
    "end": "416960"
  },
  {
    "text": "also independently come up with this cryptography system system and what it does is it is um it's Security based on",
    "start": "416960",
    "end": "424360"
  },
  {
    "text": "the fact that it's very hard to factor prime numbers or factor big numbers into their prime factors all asymmetric",
    "start": "424360",
    "end": "431479"
  },
  {
    "text": "hotography is based on certain math problems being very very hard to solve with classical computers essentially um",
    "start": "431479",
    "end": "438520"
  },
  {
    "text": "and in the case of RSA what we're talking about is the factoring problem integer factorization being very very hard if I give you a big number and tell",
    "start": "438520",
    "end": "445680"
  },
  {
    "text": "you quickly tell me it's prime factors that is a computationally very very expensive thing and when we get to big",
    "start": "445680",
    "end": "451560"
  },
  {
    "text": "enough numbers it becomes computationally infeasible um to show you what I mean we're going to do a worked example we're",
    "start": "451560",
    "end": "458400"
  },
  {
    "text": "going to use the very very large and computationally difficult number of 323 um so that it fits in our heads",
    "start": "458400",
    "end": "465599"
  },
  {
    "text": "um so I'm going to do this to show you that the math isn't witchcraft this is something you can actually understand",
    "start": "465599",
    "end": "471720"
  },
  {
    "text": "and fit in your head um this is a bad example for a bunch of reasons obviously the number is very very small but also",
    "start": "471720",
    "end": "478840"
  },
  {
    "text": "because 17 and 19 are very close together in practice if you're using RSA",
    "start": "478840",
    "end": "484720"
  },
  {
    "text": "um although it's now becoming more and more obsolete um in practice if you're using it you want the prime numbers to be quite different in size um right",
    "start": "484720",
    "end": "494919"
  },
  {
    "text": "so I want so first of all modular arithmetic going to be very useful during this worked example um so we have",
    "start": "494919",
    "end": "501159"
  },
  {
    "text": "this notation a is equivalent to B modn when you have they differ by some",
    "start": "501159",
    "end": "506319"
  },
  {
    "text": "multiple of n so what we need to know in order to set up this cryptog cryptography system",
    "start": "506319",
    "end": "513399"
  },
  {
    "text": "we need some secrets we need some secrets to do with our big number and the secret that we want to we want to",
    "start": "513399",
    "end": "518719"
  },
  {
    "text": "find out that we want to calculate that is um our that is going to help us do cryptography is something called Lambda",
    "start": "518719",
    "end": "524200"
  },
  {
    "text": "n um this is also called the car Michel totient sometimes um and what this is is",
    "start": "524200",
    "end": "532360"
  },
  {
    "text": "we need to know if I have any number in the world and I raise it to the power of this number Lambda n then what that",
    "start": "532360",
    "end": "539880"
  },
  {
    "text": "means is I have a remainder of one um when you divide by n for any number",
    "start": "539880",
    "end": "546320"
  },
  {
    "text": "as long as that number shares no factors with n and the only factors of n are tr3 is 17 and 19 and we can work this out",
    "start": "546320",
    "end": "554399"
  },
  {
    "text": "computationally if we know the factorization of our big number um and in this case it's 144 and the reason we",
    "start": "554399",
    "end": "560720"
  },
  {
    "text": "need to know the the computation we sorry we need to know the factorization um is because of is this",
    "start": "560720",
    "end": "566200"
  },
  {
    "text": "bit here we need to know what p and Q are and P and C of these two here 17 and 19 so the point here is that this number",
    "start": "566200",
    "end": "574640"
  },
  {
    "text": "is very hard to know if you don't know 17 and 19 of the factors you can't get this number easily from 323 without",
    "start": "574640",
    "end": "581440"
  },
  {
    "text": "knowing its factorization so this is a secret that you you only have if you know the factorization of your numbers",
    "start": "581440",
    "end": "586920"
  },
  {
    "text": "it's very hard for an attacker to know it um and this number the fact that if I",
    "start": "586920",
    "end": "592880"
  },
  {
    "text": "raise anything to the power of 144 it's going to have a remainder of one mod 323",
    "start": "592880",
    "end": "598240"
  },
  {
    "text": "is useful later and that's why we want to find this number and it's very useful it's very nice that this number depends",
    "start": "598240",
    "end": "604160"
  },
  {
    "text": "on a secret that only we know um and also then is useful for",
    "start": "604160",
    "end": "609399"
  },
  {
    "text": "cryptography so the next thing we need to do in order to set up a crypto system with RSA is we need to choose some small",
    "start": "609399",
    "end": "615200"
  },
  {
    "text": "number that doesn't share any factors with 323 um we choose we're going to pick five um it would be easier to pick",
    "start": "615200",
    "end": "622480"
  },
  {
    "text": "three but um for various reasons that makes the crypto system even easier to break you actually don't want this to be",
    "start": "622480",
    "end": "627600"
  },
  {
    "text": "too small but again we are doing a small example um so in reality five would be",
    "start": "627600",
    "end": "632920"
  },
  {
    "text": "way way way too small and I can show you why that is later in this example so what we've done here is we have set up",
    "start": "632920",
    "end": "640639"
  },
  {
    "text": "um we've got some variables that are going to Define our cryptography system these are our public key and our private",
    "start": "640639",
    "end": "646920"
  },
  {
    "text": "key and the private key we derive from using that 144 Lambda n um and what what",
    "start": "646920",
    "end": "654399"
  },
  {
    "text": "we need to do is we need to find we've got e which is five we need to find a number that we can multip five by to get",
    "start": "654399",
    "end": "661320"
  },
  {
    "text": "something that is one mod 144 um for our case this is 29 29 * 5",
    "start": "661320",
    "end": "668760"
  },
  {
    "text": "145 and the important thing here is that you can't find D easily without knowing",
    "start": "668760",
    "end": "674680"
  },
  {
    "text": "Lambda n and you can't have Lambda n without knowing the factorization of your big number so this is also very",
    "start": "674680",
    "end": "682360"
  },
  {
    "text": "very hard to find unless you know that 17 and 19 are the factors everyone with me so far cool I",
    "start": "682360",
    "end": "690519"
  },
  {
    "text": "will take I will take quiet nods for you know 10 10:00 a.m. on the first day of the conference so we have now set up uh",
    "start": "690519",
    "end": "697800"
  },
  {
    "text": "a crypto system we have now given we've got our public key and our private key our public key is what we need to hand",
    "start": "697800",
    "end": "703279"
  },
  {
    "text": "out to anyone who wants to send us a secure message and that is our big number 323 and our number e which is",
    "start": "703279",
    "end": "709720"
  },
  {
    "text": "five and we know 29 is the n the private key that corresponds to five and we can",
    "start": "709720",
    "end": "716519"
  },
  {
    "text": "only know that because we know the factorization of our big number now if I want to send a message let me try and",
    "start": "716519",
    "end": "722519"
  },
  {
    "text": "send the message 1443 without loss of generality we can say that all messages are numbers",
    "start": "722519",
    "end": "728079"
  },
  {
    "text": "essentially because we can just translate things either through their asky numbers or binary or",
    "start": "728079",
    "end": "733959"
  },
  {
    "text": "whatever um and I want to send the message 1443 which is NDC in uh you know",
    "start": "733959",
    "end": "740079"
  },
  {
    "text": "that's the letters that's the Alphabet letter of the alphabet that it is um to",
    "start": "740079",
    "end": "745800"
  },
  {
    "text": "encrypt a number if I wanted to send you this message and I know that your private your public key is 323 and five",
    "start": "745800",
    "end": "753839"
  },
  {
    "text": "what I do is I raise it to that power e to the five I raise it to all each of those numbers to the fifth power that's",
    "start": "753839",
    "end": "760279"
  },
  {
    "text": "e um and I get some big numbers out and then I take the modulus um of",
    "start": "760279",
    "end": "767680"
  },
  {
    "text": "your big number so I've used both pieces of information I've raised my my message to that power and then I've taken the",
    "start": "767680",
    "end": "772920"
  },
  {
    "text": "modulus of the other number 323 your n and then I can send this to you",
    "start": "772920",
    "end": "779560"
  },
  {
    "text": "um and if you receive this message and you know that you've got so you've you've you've given someone out your",
    "start": "779560",
    "end": "785399"
  },
  {
    "text": "private key 323 and and E and five and they've sent you this how do you recover",
    "start": "785399",
    "end": "790440"
  },
  {
    "text": "that initial message well what you do is you sort of do the a very similar thing",
    "start": "790440",
    "end": "795560"
  },
  {
    "text": "but in Reverse you raise everything to the power of D and take the modulus um and you're going to have to",
    "start": "795560",
    "end": "802279"
  },
  {
    "text": "take my word for it that when you raise 243 to the 29th power you get three mod",
    "start": "802279",
    "end": "808040"
  },
  {
    "text": "N I did do this W from alpha um computationally this is not actually that expensive um uh to do it with pen",
    "start": "808040",
    "end": "815760"
  },
  {
    "text": "and paper I don't recommend it um and you actually magically that original",
    "start": "815760",
    "end": "821160"
  },
  {
    "text": "message falls out and you're only able to do this because you have the private key d right um and one thing I want to",
    "start": "821160",
    "end": "828880"
  },
  {
    "text": "point out here is that if I was an attacker listening on this message and I know that your public key is e is five",
    "start": "828880",
    "end": "836120"
  },
  {
    "text": "what I might do is I might go through that LE that message trying to see if there are any fifth powers that I can",
    "start": "836120",
    "end": "842199"
  },
  {
    "text": "determine um because what happens is if your if your public key e is not very big um maybe when you raise a number to",
    "start": "842199",
    "end": "849519"
  },
  {
    "text": "that power it won't get big enough for the modulo of your big n to kick in and that's what's happened with 243 here I",
    "start": "849519",
    "end": "856120"
  },
  {
    "text": "could look at that and go well I know that's 3 to the 5ifth power so probably what the person originally sent is three",
    "start": "856120",
    "end": "862880"
  },
  {
    "text": "um and this is why you want your private your public key to actually not be the smallest possible thing you can do even",
    "start": "862880",
    "end": "867920"
  },
  {
    "text": "though it makes the process encrypting messages cheaper because you're raising to a smaller power it also makes them",
    "start": "867920",
    "end": "873759"
  },
  {
    "text": "less secure so it's a bit of a balancing act there right so somebody has sent me",
    "start": "873759",
    "end": "879279"
  },
  {
    "text": "a message I have now decrypted it why does this work well this works because of that",
    "start": "879279",
    "end": "885519"
  },
  {
    "text": "definition of Lambda n r 144 that we started out with in the beginning the secret that you can only know if you",
    "start": "885519",
    "end": "892320"
  },
  {
    "text": "have the factorization of your your big number um when you raise something to that power you get one every single time",
    "start": "892320",
    "end": "899639"
  },
  {
    "text": "that means if you raise something to that power plus one you get it back right I've just multiplied both sides of",
    "start": "899639",
    "end": "906079"
  },
  {
    "text": "that equation by a and that's exactly what we do when something is originally raised to the fifth power and then again",
    "start": "906079",
    "end": "912880"
  },
  {
    "text": "to the 29th power because the definition of d was that if you multiplied it by E",
    "start": "912880",
    "end": "918240"
  },
  {
    "text": "you got one more than Lambda n right the we got 29 from it being something we",
    "start": "918240",
    "end": "925199"
  },
  {
    "text": "could multiply five by to get 15 14 5 and anything to the 145 is itself mod",
    "start": "925199",
    "end": "935519"
  },
  {
    "text": "323 everyone with me right it's cool that's really really cool um and that's how RSA Works essentially um limitations",
    "start": "935519",
    "end": "944079"
  },
  {
    "text": "and considerations it requires large prime numbers these can be very expensive to",
    "start": "944079",
    "end": "949800"
  },
  {
    "text": "find there are lots of lots of people who' put lots of considerable time energy um computational Power into this",
    "start": "949800",
    "end": "956560"
  },
  {
    "text": "there are things called primality tests which you do with large numbers to um prove whether or not they're Prime even",
    "start": "956560",
    "end": "963040"
  },
  {
    "text": "though if you know they're not it doesn't mean you know their factors um lots of things like this um but if you",
    "start": "963040",
    "end": "970160"
  },
  {
    "text": "if you have a if you're using a big number for RSA you want to make sure that it's not known to anyone else",
    "start": "970160",
    "end": "975639"
  },
  {
    "text": "because then they could put in the time and effort to try and find those factors or it's not something that's already in use um sorry that's not actually true uh",
    "start": "975639",
    "end": "982399"
  },
  {
    "text": "you want to have big numbers that are difficult to crack if a big number that is commonly used in RSA has its prime",
    "start": "982399",
    "end": "988240"
  },
  {
    "text": "factors discovered and made public you're going to have to pick a new one and start all over again um this we already talked about if",
    "start": "988240",
    "end": "995160"
  },
  {
    "text": "you the public key that you publish is small you want it to be small enough that encrypting message to you is cheap",
    "start": "995160",
    "end": "1001000"
  },
  {
    "text": "you don't want people have to have to be raising things to the 29th power if they could be raising them to the fifth however if again as we talked about if",
    "start": "1001000",
    "end": "1008120"
  },
  {
    "text": "it's small enough that you raise something to that power and it does not get big enough to for that modular of",
    "start": "1008120",
    "end": "1013920"
  },
  {
    "text": "your big number to kick in if when I raise something to the fifth par it's not bigger than 323 somebody can just",
    "start": "1013920",
    "end": "1019680"
  },
  {
    "text": "take the fifth root of my number the of the of the public message and recover part of the original",
    "start": "1019680",
    "end": "1025400"
  },
  {
    "text": "message um right without padding uh messages can be vulnerable to chosen",
    "start": "1025400",
    "end": "1031918"
  },
  {
    "text": "plain text attacks um and what padding is is it's it's a bit like putting salt into a password hash um essentially if I",
    "start": "1031919",
    "end": "1039918"
  },
  {
    "text": "wanted to know if you had sent the message NDC to me I'm I'm an attacker and I want to know if this particular",
    "start": "1039919",
    "end": "1045280"
  },
  {
    "text": "phrase is being used in your messages between each other I can simply encp it myself and then look out for those",
    "start": "1045280",
    "end": "1050360"
  },
  {
    "text": "numbers that I get out cuz I have your public key and I can say well if somebody was sending NDC to this person",
    "start": "1050360",
    "end": "1056760"
  },
  {
    "text": "what would it look like and that's what a plain text attack is essentially and because of the mathematical structures",
    "start": "1056760",
    "end": "1062120"
  },
  {
    "text": "of what what makes RSA tick there's sort of very sophisticated attacks that you can do where you take s of chunks of",
    "start": "1062120",
    "end": "1068440"
  },
  {
    "text": "plain text and it basically not not of time to go into it and I don't understand it all fully but there are",
    "start": "1068440",
    "end": "1073640"
  },
  {
    "text": "lots of different plain text attacks you can do with RSA um and one of the ways we get around this is with padding um so",
    "start": "1073640",
    "end": "1080600"
  },
  {
    "text": "fun history anecdote here this is before RSA right but this is um a message that",
    "start": "1080600",
    "end": "1086559"
  },
  {
    "text": "was sent to Admiral bull Hy um and this is this is just plain text in pink we have padding that is sent to just is",
    "start": "1086559",
    "end": "1094919"
  },
  {
    "text": "sort of like um obfuscation essentially and then we have delimits so GG and then",
    "start": "1094919",
    "end": "1100720"
  },
  {
    "text": "RR sort of like the open and close brackets of here's the actual main text that I want you to read and then at the",
    "start": "1100720",
    "end": "1107520"
  },
  {
    "text": "end again we have more more text uh more more padding text right and Admiral buol",
    "start": "1107520",
    "end": "1113640"
  },
  {
    "text": "was an American na Admiral and the operator who decrypted this message misinterpreted the padding right so this",
    "start": "1113640",
    "end": "1120280"
  },
  {
    "text": "might have been encrypted with you knowah Caesar Cipher of some kind he misinterpreted the padding he missed that last delimiter that RR and so",
    "start": "1120280",
    "end": "1127440"
  },
  {
    "text": "instead of saying where is the task force 34 he passed the message on along as where is Task Force 34 the world",
    "start": "1127440",
    "end": "1134919"
  },
  {
    "text": "wonders and Admiral buy interpreted this as a sort of passive aggressive where is Task Force 34 the world is wondering",
    "start": "1134919",
    "end": "1142559"
  },
  {
    "text": "instead of it being just you know nonsense text that was put in to sort of uh sisc um and he locked himself in his",
    "start": "1142559",
    "end": "1148880"
  },
  {
    "text": "room and had a tantrum um so you know uh not not particular it's not asymmetric",
    "start": "1148880",
    "end": "1154919"
  },
  {
    "text": "encryption but I think that's quite a funny example of of padding going wrong um but padding is a Technique we can use",
    "start": "1154919",
    "end": "1161559"
  },
  {
    "text": "in order to reduce the effectiveness or availability of plain test attacks essentially",
    "start": "1161559",
    "end": "1169360"
  },
  {
    "text": "for example if I know that every message that you're going to send to me I mean you're not actually going to send to me",
    "start": "1169360",
    "end": "1174760"
  },
  {
    "text": "NDC you're going to send like N1 D3 C5 or something and you're adding odd",
    "start": "1174760",
    "end": "1180440"
  },
  {
    "text": "numbers in between each one I know to Discount each each second character that would be a form of padding um but",
    "start": "1180440",
    "end": "1186760"
  },
  {
    "text": "somebody but an attacker doesn't know that however in order to get to that situation you need to have some shared",
    "start": "1186760",
    "end": "1192520"
  },
  {
    "text": "understanding of what the padding is going to look like so we're back to the symmetric cryption uh encryption problem okay we are now on on to the",
    "start": "1192520",
    "end": "1199520"
  },
  {
    "text": "group theory part of the talk who here has studied group theory in any like formal",
    "start": "1199520",
    "end": "1204720"
  },
  {
    "text": "capacity okay okay um the rest of you are you're some one of today's lucky",
    "start": "1204720",
    "end": "1209760"
  },
  {
    "text": "10,000 um so we've been talking about modulus arithmetic and modulus arithmetic is one of the easiest ways to",
    "start": "1209760",
    "end": "1216120"
  },
  {
    "text": "understand group Theory um what's going on under the hood when we do this is essentially we've said okay let's say",
    "start": "1216120",
    "end": "1222720"
  },
  {
    "text": "we're working in modulus 11 we're considering any number that is um differ by a multiple of 11 to be the same thing",
    "start": "1222720",
    "end": "1229120"
  },
  {
    "text": "we've essentially said okay there's now there's not Infinity numbers there's only 11 numbers there's zero up to 10",
    "start": "1229120",
    "end": "1235280"
  },
  {
    "text": "right and what we do the way that we operate in this is that when you get back to the top and you want to do 12",
    "start": "1235280",
    "end": "1241360"
  },
  {
    "text": "you just loot back around and you get one and this is quite intuitive we all understand this this is how clocks work",
    "start": "1241360",
    "end": "1247760"
  },
  {
    "text": "um we've got a bit of a misshaping clock here because it's only 11 elements instead of 12 but this task really nice",
    "start": "1247760",
    "end": "1253000"
  },
  {
    "text": "mathematical properties if you do it with prime numbers so this is a group",
    "start": "1253000",
    "end": "1258760"
  },
  {
    "text": "and a group is a set of objects that has four proper F satisfies four conditions",
    "start": "1258760",
    "end": "1263799"
  },
  {
    "text": "one there's got to be some integer there's got to be some element sorry not",
    "start": "1263799",
    "end": "1269000"
  },
  {
    "text": "there's got to be some element that does nothing to all the other ones and if we're looking at addition that's zero when you add zero to something nothing",
    "start": "1269000",
    "end": "1275200"
  },
  {
    "text": "changes when you add something to zero nothing changes right um so we are",
    "start": "1275200",
    "end": "1280279"
  },
  {
    "text": "working with these numbers and the uh the addition operation a group is a set",
    "start": "1280279",
    "end": "1285440"
  },
  {
    "text": "of stuff and a thing that you can do to combine two of those things",
    "start": "1285440",
    "end": "1290520"
  },
  {
    "text": "anytime that you can you've got to be able to combine two elements to get back",
    "start": "1290880",
    "end": "1295960"
  },
  {
    "text": "to zero um for any element in this group there's got to be something you can add to it that takes it back to the identity",
    "start": "1295960",
    "end": "1303000"
  },
  {
    "text": "element so in this case it would be for example four and seven when you add one",
    "start": "1303000",
    "end": "1308720"
  },
  {
    "text": "when you add four to seven you get back to 11 which is the same thing as zero right um and in our case what you end up",
    "start": "1308720",
    "end": "1315080"
  },
  {
    "text": "with is every element is opposite its inverse on the ring when you combine three elements",
    "start": "1315080",
    "end": "1322480"
  },
  {
    "text": "this is called associativity it doesn't matter which order you do the operations and luckily we get this for free with",
    "start": "1322480",
    "end": "1327799"
  },
  {
    "text": "addition but it's not true of something like subtraction for example it matters which order you do those operations and",
    "start": "1327799",
    "end": "1334240"
  },
  {
    "text": "this is why we end up with things like bid mass or bod Mass uh pmas things like that those rules about like which order",
    "start": "1334240",
    "end": "1340320"
  },
  {
    "text": "do you do things in um because this stuff can get messy when you're dealing with more than one operation fortunately addition and multiplication this is just",
    "start": "1340320",
    "end": "1347640"
  },
  {
    "text": "true when you you add three things together or you multiply three things together it doesn't matter if you do one",
    "start": "1347640",
    "end": "1353240"
  },
  {
    "text": "of those operations first or the other you get the same answer and every group has to satisfy that as well and the last",
    "start": "1353240",
    "end": "1360000"
  },
  {
    "text": "thing is if I've got two elements and I add them together I get what I get out of the other end is also a member of",
    "start": "1360000",
    "end": "1365760"
  },
  {
    "text": "that group so these are the four things that you need in order for a group in order for a set of objects and an",
    "start": "1365760",
    "end": "1371279"
  },
  {
    "text": "operation to be a group and once you know that something is a group you can do all sorts of nice Theory with it and",
    "start": "1371279",
    "end": "1376919"
  },
  {
    "text": "you can do all start proving all sorts of things so we've been talking about",
    "start": "1376919",
    "end": "1381960"
  },
  {
    "text": "addition for this group which is the group operation here um but we also have",
    "start": "1381960",
    "end": "1387760"
  },
  {
    "text": "in regular maths we have a shorthand for if you add something to itself repeatedly we call that multiplication",
    "start": "1387760",
    "end": "1392880"
  },
  {
    "text": "right let's say we add four to itself 13 times we could write 4 plus 4 plus 4",
    "start": "1392880",
    "end": "1397960"
  },
  {
    "text": "plus 4 or we could write 4 * 13 is and then we get the number 52 right and what",
    "start": "1397960",
    "end": "1405520"
  },
  {
    "text": "I want to make clear here is that the four we're talking about is the four that lives within this group but we've",
    "start": "1405520",
    "end": "1410640"
  },
  {
    "text": "added itself to it we've added it to itself 13 times and that's a thing you can just do under this group law but",
    "start": "1410640",
    "end": "1416120"
  },
  {
    "text": "when we start using that short hand of multiplication we're not talking this 13 isn't a member of the group what we're",
    "start": "1416120",
    "end": "1422000"
  },
  {
    "text": "talking about is having added four to itself 13 times this is shorthand this is just notation we're not doing",
    "start": "1422000",
    "end": "1427760"
  },
  {
    "text": "multiplication within our group we're doing lots and lots of addition everyone with me and what we get out is a number",
    "start": "1427760",
    "end": "1434120"
  },
  {
    "text": "that's also not part of the group but we can do modular 11 to it and get a number back and if you add four to itself 13",
    "start": "1434120",
    "end": "1440559"
  },
  {
    "text": "times you go around the ring a bunch of times you do end up at eight so what we can do here is we can use this Shand of",
    "start": "1440559",
    "end": "1448039"
  },
  {
    "text": "not of m u multiplication that we are no and familiar with um to sort of briefly operate outside the group and then come",
    "start": "1448039",
    "end": "1454600"
  },
  {
    "text": "back into it as it were um so we have the idea of adding an element to a group",
    "start": "1454600",
    "end": "1460640"
  },
  {
    "text": "combining it with itself multiple times and using the multiplication shorthand to represent that",
    "start": "1460640",
    "end": "1465880"
  },
  {
    "text": "right um but it doesn't mean that 13 is an element of group for example what if",
    "start": "1465880",
    "end": "1471039"
  },
  {
    "text": "we changed all of these elements to not be numbers anymore but simply symbols that have the same relationship to each other as the numbers did you know",
    "start": "1471039",
    "end": "1478440"
  },
  {
    "text": "startimes 13 is is club symbol this doesn't this it makes it more obvious",
    "start": "1478440",
    "end": "1483559"
  },
  {
    "text": "that what we're doing is we're not talking about regular math here we're using this short hand of notation to talk about combining things with each",
    "start": "1483559",
    "end": "1489600"
  },
  {
    "text": "other multiple times right um another example of a group that you might be familiar with is all the ways that you",
    "start": "1489600",
    "end": "1495880"
  },
  {
    "text": "can rotate a cube right if I do one rot like oh I'm going to move the cube like this and then I move the cube like that",
    "start": "1495880",
    "end": "1502399"
  },
  {
    "text": "what you get out is a thing that you could have gone like this to do that's that's pretty abstract but you you know",
    "start": "1502399",
    "end": "1509159"
  },
  {
    "text": "if I it yeah um if you want to know more about group Theory and things this is like a really cool example to start with",
    "start": "1509159",
    "end": "1514840"
  },
  {
    "text": "because it sort of makes it clear it's it's another example that is not based on numbers because the ones that are",
    "start": "1514840",
    "end": "1520799"
  },
  {
    "text": "based on numbers can sometimes Lead You astray with how similar they look to the maths that you're familiar with um right",
    "start": "1520799",
    "end": "1529520"
  },
  {
    "text": "so what we have is we have a a group definition we've got a bunch of things and we've got a thing and we've got an",
    "start": "1529520",
    "end": "1535720"
  },
  {
    "text": "operation we can use to combine two of them get something else that's also part of the group and so on so forth with all",
    "start": "1535720",
    "end": "1540760"
  },
  {
    "text": "of these different laws and obviously modular arithmetic satisfies this and you can explain how RSA Works in terms",
    "start": "1540760",
    "end": "1547880"
  },
  {
    "text": "of some of the group Theory that's involved we are now going to talk about elliptic curve cryptography which also",
    "start": "1547880",
    "end": "1553399"
  },
  {
    "text": "relies on groups and so that's where a lot of what I've just been talking about is going to become you'll see why I've been laboring some points so elliptic",
    "start": "1553399",
    "end": "1560559"
  },
  {
    "text": "curve cryptography is what has essentially in large part superseded RSA as uh a public key cryptography system",
    "start": "1560559",
    "end": "1568799"
  },
  {
    "text": "um for a few reasons it is faster to do you can have smaller key sizes um and",
    "start": "1568799",
    "end": "1574679"
  },
  {
    "text": "sort of various various nice cryptographic properties essentially and how it works is it also uses groups but",
    "start": "1574679",
    "end": "1582000"
  },
  {
    "text": "the group isn't numbers like RSA is it's something a bit more abstract so an",
    "start": "1582000",
    "end": "1587200"
  },
  {
    "text": "elliptic curve is a function of the form y^2 is X cubed plus some multiple of X",
    "start": "1587200",
    "end": "1594000"
  },
  {
    "text": "plus some constant um and depending on how you change those a the a and the B there you",
    "start": "1594000",
    "end": "1600559"
  },
  {
    "text": "get lots of sort of different shapes and some of them have points and some of them are disconnected from each other and things like this the ones that we're",
    "start": "1600559",
    "end": "1607039"
  },
  {
    "text": "interested in here are sort of of this shape where they've got this sort of almost horseshoe thing and then on both",
    "start": "1607039",
    "end": "1613760"
  },
  {
    "text": "sides what they do is they they they continue on up and they never quite become vertical but they become ASM totic to the",
    "start": "1613760",
    "end": "1619760"
  },
  {
    "text": "vertical and we what we do is we try and solve this equation but specifically",
    "start": "1619760",
    "end": "1626399"
  },
  {
    "text": "only for modular arithmetic so all of the solutions that I care about for this",
    "start": "1626399",
    "end": "1632080"
  },
  {
    "text": "equation are the ones that live in let's say the numbers between zero and 10 and we're always working modular",
    "start": "1632080",
    "end": "1638640"
  },
  {
    "text": "11 um so we're not working over the field of like real numbers we don't have like fractions we don't have square",
    "start": "1638640",
    "end": "1644840"
  },
  {
    "text": "roots we don't have any of that we just have whole numbers and the way that they relate to each other we always we're",
    "start": "1644840",
    "end": "1650039"
  },
  {
    "text": "always working in module 11 and what that's called is that's called Zed which is the integers and then that little p",
    "start": "1650039",
    "end": "1656799"
  },
  {
    "text": "underneath means we're working mod P um and this forms what's called in maths a field um for our purposes we only really",
    "start": "1656799",
    "end": "1663080"
  },
  {
    "text": "need to care that it's also a group and the group combination law so",
    "start": "1663080",
    "end": "1669640"
  },
  {
    "text": "we're we're taking these points and we're saying okay we've got this group we've got this set of objects right these um these blobs that correspond to",
    "start": "1669640",
    "end": "1676080"
  },
  {
    "text": "Solutions and we want to be able to combine them we want to get be able to give them a combination operation that",
    "start": "1676080",
    "end": "1681480"
  },
  {
    "text": "satisfies all those group laws so we can start doing nice group Theory with them and the group law that we come up with",
    "start": "1681480",
    "end": "1687919"
  },
  {
    "text": "is okay if I combine any two any three points I can I if if I draw um a line",
    "start": "1687919",
    "end": "1695640"
  },
  {
    "text": "between let's say these two points it will intersect the curve again unless it's a tangent to the curve it will",
    "start": "1695640",
    "end": "1701440"
  },
  {
    "text": "intersect the curve again and this gives me three points right and those three points sum to Z Z the identity element",
    "start": "1701440",
    "end": "1709320"
  },
  {
    "text": "which is we say it's the the element at Infinity um which is a bit of mathematical cheating that allows us to",
    "start": "1709320",
    "end": "1715200"
  },
  {
    "text": "have an identity element essentially it's saying okay infinity and infinity if Y and X are both Infinity it's",
    "start": "1715200",
    "end": "1722159"
  },
  {
    "text": "Infinity equals infinity so that's the solution right and technically our curve kind of gets there right because it it",
    "start": "1722159",
    "end": "1728480"
  },
  {
    "text": "stretches off into Infinity um so it's a bit of a cheat because",
    "start": "1728480",
    "end": "1733559"
  },
  {
    "text": "Infinity is not between Z and 11 um but we say that this is the identity element",
    "start": "1733559",
    "end": "1739320"
  },
  {
    "text": "and the way that we add things essentially is by this group law so this",
    "start": "1739320",
    "end": "1745320"
  },
  {
    "text": "and this is minus this element because you can so if do I have a better",
    "start": "1745320",
    "end": "1751919"
  },
  {
    "text": "illustration of this yeah here we go I've got three points on my curve and I said okay these three points sum to zero",
    "start": "1751919",
    "end": "1759360"
  },
  {
    "text": "essentially the identity element which means that this point here C is the",
    "start": "1759360",
    "end": "1765440"
  },
  {
    "text": "identity minus a plus b and minus a plus b is the inverse of a plus b because",
    "start": "1765440",
    "end": "1772360"
  },
  {
    "text": "everything has an inverse in a group I'm getting confused looks which bit am I where am I losing",
    "start": "1772360",
    "end": "1777840"
  },
  {
    "text": "you yeah no it is not and that's why I'm",
    "start": "1777840",
    "end": "1783399"
  },
  {
    "text": "trying to use this is not actually a zero in the thing it's it's the capital o yeah it's the identity element yes z0",
    "start": "1783399",
    "end": "1790760"
  },
  {
    "text": "is not going to be a solution to the curve unless both a unless B is zero in that equation yes yeah thank you for cl",
    "start": "1790760",
    "end": "1798039"
  },
  {
    "text": "clarifying that 0 0 is not interesting to us yeah I'm talking about the identity Infinity the Infinity Point so",
    "start": "1798039",
    "end": "1804159"
  },
  {
    "text": "I'll call it the Infinity Point now so we've got this rule a plus b plus C is the Infinity Point and we can move stuff",
    "start": "1804159",
    "end": "1811320"
  },
  {
    "text": "around on this equation because we have the idea of of um inverses of things which we can use the Shand of um",
    "start": "1811320",
    "end": "1817519"
  },
  {
    "text": "subtraction to denote so C is the identity element plus the inverse of a",
    "start": "1817519",
    "end": "1824640"
  },
  {
    "text": "plus b so what we do is we have now a group law that says if I have a plus",
    "start": "1824640",
    "end": "1831200"
  },
  {
    "text": "b what I have then is oh nope what I have is that c is minus a",
    "start": "1831200",
    "end": "1840440"
  },
  {
    "text": "plus b so a plus b is minus C we have a we have a group addition law now to take",
    "start": "1840440",
    "end": "1846880"
  },
  {
    "text": "two points and we combine them and we get another point on the curve you don't have to understand this fully my main",
    "start": "1846880",
    "end": "1852919"
  },
  {
    "text": "point is and um for what it's worth the inverse of C is the mirror point below",
    "start": "1852919",
    "end": "1858120"
  },
  {
    "text": "the x-axis um what we've done is we've defined a law that um a way to combine",
    "start": "1858120",
    "end": "1865039"
  },
  {
    "text": "two elements and get a third that happens to obey all of those group properties we talked about we've defined a group over these",
    "start": "1865039",
    "end": "1871519"
  },
  {
    "text": "points um now there are ways that you can confuse yourself essentially or not",
    "start": "1871519",
    "end": "1877120"
  },
  {
    "text": "confus that that how how what happens if you do the same you do you draw two lines you draw a line between two points",
    "start": "1877120",
    "end": "1882799"
  },
  {
    "text": "but that line is vertical right it never intersects the curve again um so so how",
    "start": "1882799",
    "end": "1888200"
  },
  {
    "text": "can we know what c is well we just say that when we add those two things together um what we're getting is the",
    "start": "1888200",
    "end": "1894159"
  },
  {
    "text": "Infinity Point and that means that A and B are inverses of each",
    "start": "1894159",
    "end": "1899200"
  },
  {
    "text": "other we say that this line intersects the curve again at Infinity that our",
    "start": "1899200",
    "end": "1904240"
  },
  {
    "text": "Infinity Point so we can just cancel those two things out and say a plus b or",
    "start": "1904240",
    "end": "1910320"
  },
  {
    "text": "we this this the entire definition of the infinity point is that when you add it to something it does nothing right so",
    "start": "1910320",
    "end": "1916639"
  },
  {
    "text": "actually a plus b is the Infinity Point and therefore a is minus B so this is how we get our inverses in this group",
    "start": "1916639",
    "end": "1922840"
  },
  {
    "text": "plot right okay enough of the more abstract stuff here is an actual elliptic curve which I did I wrote by",
    "start": "1922840",
    "end": "1929679"
  },
  {
    "text": "hand if you want to come and see my messy handwriting notes about this you can um so I chose a I chose a formula I",
    "start": "1929679",
    "end": "1936000"
  },
  {
    "text": "chose I chose a graph uh and I solved it for all of the solution points in modulo",
    "start": "1936000",
    "end": "1941360"
  },
  {
    "text": "11 right um yeah uh this this is an actual curve",
    "start": "1941360",
    "end": "1949120"
  },
  {
    "text": "right and one of the nice things about this curve in particular is that it has 10 Solutions in it and then you get the",
    "start": "1949120",
    "end": "1956279"
  },
  {
    "text": "point at Infinity so you're working modular 11 and you actually have 11 Solutions um you might you might not get",
    "start": "1956279",
    "end": "1963200"
  },
  {
    "text": "all you might not you might get a smaller number of solutions but when you're working in a a prime field modulo",
    "start": "1963200",
    "end": "1969000"
  },
  {
    "text": "something you actually want as many solutions the most you can have is 11 for 11 things including the point at",
    "start": "1969000",
    "end": "1974960"
  },
  {
    "text": "Infinity um and this is preferred for elliptic curve so this is if you're working modu 11 which is not don't do",
    "start": "1974960",
    "end": "1981039"
  },
  {
    "text": "this in production um this is actually a very nice example of that so I was quite proud of myself um and when you do",
    "start": "1981039",
    "end": "1988240"
  },
  {
    "text": "elliptic curve cryptography you have p a public key that you need to publish right and just like with RSA this is",
    "start": "1988240",
    "end": "1994679"
  },
  {
    "text": "formed up of a bunch of parameters to do with your the system that you've chosen",
    "start": "1994679",
    "end": "1999960"
  },
  {
    "text": "so like we chose 323 17 * 19 I have",
    "start": "1999960",
    "end": "2005000"
  },
  {
    "text": "chosen this um elliptic curve that's the same it's so similar thing I choose a big number or I choose a curve and a",
    "start": "2005000",
    "end": "2011840"
  },
  {
    "text": "prime field to work over um what we publish is a bunch of information about",
    "start": "2011840",
    "end": "2017159"
  },
  {
    "text": "our elliptic curve um so the first thing is so it's it's called um by convention",
    "start": "2017159",
    "end": "2022440"
  },
  {
    "text": "this is the notation you use T is is the thing that you publish so the first thing you need to know is the integer",
    "start": "2022440",
    "end": "2029000"
  },
  {
    "text": "that you're working modulo and in our case this is 11 right the next thing is",
    "start": "2029000",
    "end": "2034159"
  },
  {
    "text": "a and b which Define our curve um our after that we have a graph",
    "start": "2034159",
    "end": "2040519"
  },
  {
    "text": "point a point on our curve one of those blobs we choose a special one of those blobs and we publish it as our public",
    "start": "2040519",
    "end": "2046960"
  },
  {
    "text": "curve Point um the next thing we have is these two these next two are pretty",
    "start": "2046960",
    "end": "2052839"
  },
  {
    "text": "abstract and you don't need to worry about them too much the N is how many times when I add my special curve point",
    "start": "2052839",
    "end": "2059398"
  },
  {
    "text": "to itself how many times does it take to get back to the identity you know um and",
    "start": "2059399",
    "end": "2065280"
  },
  {
    "text": "so we hope that that is well um if you think about the clock how many times does it take to add one to itself before",
    "start": "2065280",
    "end": "2071919"
  },
  {
    "text": "you get back to 11 well 11 how many times does it take three it is actually also 11 but if we were working with a",
    "start": "2071919",
    "end": "2078000"
  },
  {
    "text": "regular clock face you would only have to add four to itself three times to get back to 12 we're talking about um a",
    "start": "2078000",
    "end": "2085079"
  },
  {
    "text": "regular 12 like 12 hour clock face um so the order of four in that system would",
    "start": "2085079",
    "end": "2090480"
  },
  {
    "text": "be three but when we're working with prime numbers that number is like number is always that prime number um just yeah",
    "start": "2090480",
    "end": "2099320"
  },
  {
    "text": "um and then the last thing is very abstract you don't need to know it but um the main thing is that you like it to",
    "start": "2099320",
    "end": "2105920"
  },
  {
    "text": "be one um wait hang",
    "start": "2105920",
    "end": "2111960"
  },
  {
    "text": "on yeah you like it to be one um and you don't need to know much",
    "start": "2111960",
    "end": "2117400"
  },
  {
    "text": "about that is what I was talking about when I was saying you want there to be as many points that are solutions within your field as possible it's nice that I",
    "start": "2117400",
    "end": "2123520"
  },
  {
    "text": "had 11 Solutions that's that that's what that means um yeah uh for all the group Theory nerds",
    "start": "2123520",
    "end": "2130720"
  },
  {
    "text": "we're not talking actually about G we're talking about the orbit of G but yeah um yes all right we've come back to our",
    "start": "2130720",
    "end": "2138839"
  },
  {
    "text": "Point our curve and so I'm going to illustrate what each of those those those in those um parameters are so p is",
    "start": "2138839",
    "end": "2145640"
  },
  {
    "text": "11 because we're working in module 11 A and B are one and five G is i' I have chosen a special point on the curve I",
    "start": "2145640",
    "end": "2152720"
  },
  {
    "text": "like this one the best it's my favorite um and that we publish as our public curve point this is a equivalent to e we",
    "start": "2152720",
    "end": "2158760"
  },
  {
    "text": "just pick a number and we and we publish it um and in RSA you needed your e to be",
    "start": "2158760",
    "end": "2164880"
  },
  {
    "text": "co-prime to your big number here we need this to be some point on the curve that's not the identity element",
    "start": "2164880",
    "end": "2172240"
  },
  {
    "text": "right um and then n and H are 11 and one um and those will always multiply to the",
    "start": "2172240",
    "end": "2178680"
  },
  {
    "text": "the the field that you're working in right um which means that they have to be 11 and one if that's if if it means",
    "start": "2178680",
    "end": "2185280"
  },
  {
    "text": "that they have to be if you're working in a prime you're not always f curve cryptography um but for for our purposes",
    "start": "2185280",
    "end": "2191079"
  },
  {
    "text": "we can assume they are um right in previous versions of this talk I did a worked example here of the elliptic",
    "start": "2191079",
    "end": "2197040"
  },
  {
    "text": "curved digital signing algorithm I learned that it doesn't it doesn't work as a a live thing um because if you",
    "start": "2197040",
    "end": "2203359"
  },
  {
    "text": "think that you've been zoning out so far trust me you would you would be zoning out a lot more during this if you do want to see it and go through it come to",
    "start": "2203359",
    "end": "2209839"
  },
  {
    "text": "me afterwards it's at the end of the slides um the main thing that I want to get across about an elliptic curve right",
    "start": "2209839",
    "end": "2217760"
  },
  {
    "text": "is we've got our special little Point here and when you add it to itself you get another point on the curve because",
    "start": "2217760",
    "end": "2223599"
  },
  {
    "text": "we can do our group a group alocation law when you add a point to itself you know it was like oh we've got to draw a",
    "start": "2223599",
    "end": "2228760"
  },
  {
    "text": "line between two points what you do to add a point to itself is you draw the tangent line to the curve at that point",
    "start": "2228760",
    "end": "2234920"
  },
  {
    "text": "um there's also algebraic ways of doing it like I can I can work directly with the fact that it's 04 and um go to the",
    "start": "2234920",
    "end": "2242119"
  },
  {
    "text": "Wikipedia page to know if you if you want to know about the um the algebra that I actually did to to get all of these but in the abstract terms it's you",
    "start": "2242119",
    "end": "2249040"
  },
  {
    "text": "draw the tangent point to the curve and where does that intersect the curve again um so when you add 04 to itself",
    "start": "2249040",
    "end": "2254440"
  },
  {
    "text": "our special point when when you've got two lots of it we get this this point",
    "start": "2254440",
    "end": "2259520"
  },
  {
    "text": "and if we do it three times we get this one and so on and so forth and what you",
    "start": "2259520",
    "end": "2264599"
  },
  {
    "text": "get is you end up looping through all of the other points so what we've got here is our numbering is just a bit mangled",
    "start": "2264599",
    "end": "2271720"
  },
  {
    "text": "right we've got the same thing we've got one two three four and eventually we'll",
    "start": "2271720",
    "end": "2279040"
  },
  {
    "text": "cycle around all of them we'll get back to the identity which is zero which is which is equivalent to zero so we've got",
    "start": "2279040",
    "end": "2284400"
  },
  {
    "text": "exactly the same structure that we did with that um modul 11 numbering right",
    "start": "2284400",
    "end": "2290400"
  },
  {
    "text": "but we've just defined this to be one and we've got a different way of adding it to each other",
    "start": "2290400",
    "end": "2295440"
  },
  {
    "text": "itself but the way that we combine it means that we can basically use a lot of the same notation it behaves a lot of",
    "start": "2295440",
    "end": "2301720"
  },
  {
    "text": "the same ways um so what you end up with is you end up with this elliptic curve having this structure if we say okay I'm",
    "start": "2301720",
    "end": "2308480"
  },
  {
    "text": "going to choose this to be my special point we can Define all of the other points in terms of that and when we add it to itself 11 times we get back to we",
    "start": "2308480",
    "end": "2315119"
  },
  {
    "text": "get to the identity point at the Infinity Point um and we've got inverses because do you remember how inverses",
    "start": "2315119",
    "end": "2321800"
  },
  {
    "text": "were the um mirror below the x- axis four and seven are mirrors below the",
    "start": "2321800",
    "end": "2327160"
  },
  {
    "text": "x-axis so even like with the number ring you add four and seven together four lots of my special point and seven lots",
    "start": "2327160",
    "end": "2333160"
  },
  {
    "text": "of my special point you get back to the infinity so it really has that exact same structure essentially we've got back to our",
    "start": "2333160",
    "end": "2339640"
  },
  {
    "text": "numbering um and the main point that I want to make here is that we've got this sort of really abstract mathematical",
    "start": "2339640",
    "end": "2345960"
  },
  {
    "text": "object and using this one instead of numbers gives us certain properties like",
    "start": "2345960",
    "end": "2352800"
  },
  {
    "text": "it has a smaller key size per security um and smaller payload size so you need",
    "start": "2352800",
    "end": "2358520"
  },
  {
    "text": "to have smaller secrets and you can send messages that have smaller that are smaller to send um and it's also very",
    "start": "2358520",
    "end": "2366280"
  },
  {
    "text": "fast to do the computation s for curve addition on an elliptic curve it's faster than it is to do raising things",
    "start": "2366280",
    "end": "2372880"
  },
  {
    "text": "to the power for example but they're very very similar mathematically under",
    "start": "2372880",
    "end": "2378200"
  },
  {
    "text": "the surface there's how RSA is based on it being very hard to factor Prime big",
    "start": "2378200",
    "end": "2384000"
  },
  {
    "text": "numbers into their prime factors elliptic curves um using them for cryptography is based on the fact that",
    "start": "2384000",
    "end": "2389480"
  },
  {
    "text": "if I have two points on an elliptic curve it's very hard for somebody who doesn't already have all of the curve",
    "start": "2389480",
    "end": "2395000"
  },
  {
    "text": "like doesn't all already know everything about the Curve to figure out how many times you had to multiply one to get to",
    "start": "2395000",
    "end": "2401440"
  },
  {
    "text": "the other it's very hard to it's it's easy to go okay I've got a special point and I'm going to multiply it by seven",
    "start": "2401440",
    "end": "2406680"
  },
  {
    "text": "and send you that point it's very hard for somebody given those two points to reverse engineer that operation",
    "start": "2406680",
    "end": "2413760"
  },
  {
    "text": "essentially um and that's called the um elliptic curve subgroup I think it's",
    "start": "2413760",
    "end": "2420560"
  },
  {
    "text": "later in the slides um so this is great right we've got this shiny new um better thing most people are using elliptic",
    "start": "2420560",
    "end": "2426520"
  },
  {
    "text": "curves um smaller payloads faster computation this is great it has superseded RSA in almost every scenario",
    "start": "2426520",
    "end": "2433359"
  },
  {
    "text": "great right um not so great because we keep inventing new things and one of the",
    "start": "2433359",
    "end": "2438480"
  },
  {
    "text": "things we invented is quantum Computing and Quantum Computing breaks everything that I've just showed you um here is why",
    "start": "2438480",
    "end": "2445480"
  },
  {
    "text": "so we're talking about hard math problems the in factorization problem is what powers RSA it's very hard to find",
    "start": "2445480",
    "end": "2451319"
  },
  {
    "text": "factors of big prime numbers then we have the discrete logarithm problem that's the word I was that's the words I was looking for earlier which is",
    "start": "2451319",
    "end": "2458040"
  },
  {
    "text": "essentially um it's it's abstract to ex explain um",
    "start": "2458040",
    "end": "2464520"
  },
  {
    "text": "but it's essentially and the cor the similar one which is the elliptic curve specific one maybe easier to explain",
    "start": "2464520",
    "end": "2470280"
  },
  {
    "text": "because I've just been talking about them if G generates a subgroup or the entire group of an elliptic curve so our",
    "start": "2470280",
    "end": "2476200"
  },
  {
    "text": "special point when we multiplied it by lots of stuff it gave us the whole group back right we had that so G generates",
    "start": "2476200",
    "end": "2483760"
  },
  {
    "text": "some some group right and by generating it means can you add it to it what do you get when you add it to itself lots of times um and I have some other point",
    "start": "2483760",
    "end": "2491800"
  },
  {
    "text": "that is generated by let's say multiplying my special Point by seven it's really hard um to",
    "start": "2491800",
    "end": "2499000"
  },
  {
    "text": "find yeah it's really hard to get seven back out of that essentially um that's again it's it's a",
    "start": "2499000",
    "end": "2505560"
  },
  {
    "text": "it's a something which is really easy to do in one way multiplying two numbers to get a bigger number and really difficult",
    "start": "2505560",
    "end": "2511359"
  },
  {
    "text": "to do the other way factorizing that number back again so an analogous problems right and these are the these",
    "start": "2511359",
    "end": "2518119"
  },
  {
    "text": "are the problems that power RSA and elliptic curve cryptography now in 1994",
    "start": "2518119",
    "end": "2523480"
  },
  {
    "text": "year I was born a guy called Shaw wrote some algorithms or published some algorithms designed for quantum",
    "start": "2523480",
    "end": "2529839"
  },
  {
    "text": "computers to R there weren't quantum computers then hadn't built them yet but he knew they were going to exist and he had some idea of how they would work and",
    "start": "2529839",
    "end": "2535680"
  },
  {
    "text": "he wrote some algorithms um and the one we care about today is Shaw's order finding algorithm and what it does is it",
    "start": "2535680",
    "end": "2543000"
  },
  {
    "text": "says okay this is a thing that's hard to do on a classical computer but on a quantum computer you can do this in",
    "start": "2543000",
    "end": "2548440"
  },
  {
    "text": "reasonable time for any given number n any number at all we can find um and any",
    "start": "2548440",
    "end": "2555880"
  },
  {
    "text": "number that we have in between one and that number we can find the smallest",
    "start": "2555880",
    "end": "2561079"
  },
  {
    "text": "number such that raising our our second number to that power gives us one mod n",
    "start": "2561079",
    "end": "2567800"
  },
  {
    "text": "right basically if I have a and N I can find the smallest R to make this true",
    "start": "2567800",
    "end": "2574520"
  },
  {
    "text": "this is really hard to do classically but quantum computers can simply just do it right so if we go back to our um our",
    "start": "2574520",
    "end": "2582640"
  },
  {
    "text": "example of RSA n equals 323 we'll choose an a that's in between",
    "start": "2582640",
    "end": "2588680"
  },
  {
    "text": "them so we have our two things A and N Shaw's algorithm gives us for free that",
    "start": "2588680",
    "end": "2594400"
  },
  {
    "text": "if I raise 11 to the 48 I get one mod 323 I didn't use the qu computer for",
    "start": "2594400",
    "end": "2600359"
  },
  {
    "text": "this I typed it into will from alpha for like 15 minutes but this is true um and",
    "start": "2600359",
    "end": "2605440"
  },
  {
    "text": "Shaw's algorithm just gives us this for free and in a production scenario I",
    "start": "2605440",
    "end": "2610800"
  },
  {
    "text": "would not be able to just type this into wolf from alpha I would need a quantum computer to do this but because this is a small example it works um and the way",
    "start": "2610800",
    "end": "2619040"
  },
  {
    "text": "that we can use this to factor 323 we can solve the inter integer factorization problem works like this so",
    "start": "2619040",
    "end": "2625640"
  },
  {
    "text": "I know that 11 to the 48 is 1 1323 and we have um the difference of",
    "start": "2625640",
    "end": "2631359"
  },
  {
    "text": "two squares rulle so 11 48 minus 1 must divide by 323 and we can do the",
    "start": "2631359",
    "end": "2637119"
  },
  {
    "text": "difference of two squares and we can say okay so 11 24 - 1 or 11 24 + 1 both one",
    "start": "2637119",
    "end": "2645960"
  },
  {
    "text": "of those must one or both of those must divide 323 right we know 323 doesn't",
    "start": "2645960",
    "end": "2652240"
  },
  {
    "text": "divide into 1124 11 24 minus 1 because we know that 48 is the smallest R for",
    "start": "2652240",
    "end": "2658040"
  },
  {
    "text": "which this is true and if 11 24 - one was divisible by 323 24 would be the",
    "start": "2658040",
    "end": "2664119"
  },
  {
    "text": "small would be smaller uh a smaller number that made this true which is not so we know that some of the factors of",
    "start": "2664119",
    "end": "2672839"
  },
  {
    "text": "323 must also divide this number here and if we're unlucky then all of them do",
    "start": "2672839",
    "end": "2679280"
  },
  {
    "text": "and this simply divides by 323 and if that's true then we pick a different a and start again but it's better than 50%",
    "start": "2679280",
    "end": "2686280"
  },
  {
    "text": "odds that this is true um that that sorry that um that only some of the",
    "start": "2686280",
    "end": "2692040"
  },
  {
    "text": "factors and not all of the factors divide this number so at at least one of",
    "start": "2692040",
    "end": "2697480"
  },
  {
    "text": "the facts of 323 must also divide 11 to 24+ 1 and we can pick a to make this",
    "start": "2697480",
    "end": "2703079"
  },
  {
    "text": "true with a few a few attempts will be basically pretty much guarantee that we can find this",
    "start": "2703079",
    "end": "2708359"
  },
  {
    "text": "scenario um we can calculate the greatest common divisor and this is cheap to do computationally on a",
    "start": "2708359",
    "end": "2713680"
  },
  {
    "text": "classical computer and we find that there is a greatest common diviser of this and it's not 323 not both of the",
    "start": "2713680",
    "end": "2719800"
  },
  {
    "text": "factors only one of the factors so we found one of the factors of 323 um by using that shaes algorithm",
    "start": "2719800",
    "end": "2727440"
  },
  {
    "text": "giving us this power that we can raise a number to and get 1 1323 um we find that 17 divides 323 also",
    "start": "2727440",
    "end": "2735800"
  },
  {
    "text": "very very easy to check um and therefore we have factorized 323 um using Shaw's algorithm and I've",
    "start": "2735800",
    "end": "2743000"
  },
  {
    "text": "I've cheated a little bit here because because of this bit um in the sense that",
    "start": "2743000",
    "end": "2748760"
  },
  {
    "text": "I I I I got lucky I didn't have to do this multiple times um but it is possible there's two there's two ways",
    "start": "2748760",
    "end": "2754599"
  },
  {
    "text": "that this can not work on the first attempt one is that 323 itself divides this and you've learned nothing the",
    "start": "2754599",
    "end": "2761040"
  },
  {
    "text": "other is that this number 48 this bit only works because that's even right um",
    "start": "2761040",
    "end": "2767480"
  },
  {
    "text": "it's only a square because 48 is even I could have found that actually I picked a different a and I got 23 out and that",
    "start": "2767480",
    "end": "2774640"
  },
  {
    "text": "would have been really annoying and I would had to start again and pick a different a but we have like 300 odd",
    "start": "2774640",
    "end": "2780040"
  },
  {
    "text": "possible values of a that we can play with and all of this is computationally cheap if we're using quantum computer so",
    "start": "2780040",
    "end": "2785880"
  },
  {
    "text": "that is how Shaw's algorithm Shaw's order finding algorithm breaks the integer factorization problem and therefore breaks RSA right um so yeah",
    "start": "2785880",
    "end": "2794359"
  },
  {
    "text": "integer factorization problem boom gone RSA can't use it quantum computer is going to break it um quantum computers",
    "start": "2794359",
    "end": "2800160"
  },
  {
    "text": "have now been used to do the integer like factorize I think they factorize 15",
    "start": "2800160",
    "end": "2805440"
  },
  {
    "text": "into three and five which is very cute um but they use TOS algorithm to do it um as it happens sha wrote some other",
    "start": "2805440",
    "end": "2812040"
  },
  {
    "text": "algorithms that also kill off the discrete logarithm problem for both regular numbers and for elliptic C",
    "start": "2812040",
    "end": "2817440"
  },
  {
    "text": "so ecsa elliptic curve cryptography boom gone can't use it anymore so what do we",
    "start": "2817440",
    "end": "2822520"
  },
  {
    "text": "do next um and the answer is postquantum cryptography so everything is powered by",
    "start": "2822520",
    "end": "2827760"
  },
  {
    "text": "hard problems it so happens that Shaw's algorithms kill some of kill the hard problems we have been using it doesn't",
    "start": "2827760",
    "end": "2833720"
  },
  {
    "text": "do that for every problem that there is so we need to find different hard math problems to power New Quantum uh",
    "start": "2833720",
    "end": "2839960"
  },
  {
    "text": "encryption schemes um there is one called the isogeny finding problem um",
    "start": "2839960",
    "end": "2845400"
  },
  {
    "text": "and I'm just going to read this out really quick uh this was first proposed in 1997 so only three years after Shaw",
    "start": "2845400",
    "end": "2850440"
  },
  {
    "text": "um publishes algorithms it described a non-interactive key exchange protocol where the space of public Keys equals a set of fq isomorphism classes of",
    "start": "2850440",
    "end": "2856960"
  },
  {
    "text": "ordinary elliptic curves over fq whose endomorphism ring is a given order o in an imaginary quadratic field and whose",
    "start": "2856960",
    "end": "2862000"
  },
  {
    "text": "trace of fenius has a prescribed value so take that back to your workplaces and say you got value out of this conference",
    "start": "2862000",
    "end": "2868599"
  },
  {
    "text": "um basically um it's a hard math problem that people use to try and make new",
    "start": "2868599",
    "end": "2874280"
  },
  {
    "text": "crypto systems in the same way that we've used hard math problems to do RSA analytic curve cryptography it gave rise",
    "start": "2874280",
    "end": "2879680"
  },
  {
    "text": "to a couple of C crypto systems called psych and Seed which are now considered insecure also one called Seaside um",
    "start": "2879680",
    "end": "2887000"
  },
  {
    "text": "commutative super singular isogeny Diffy Helman um this work on this crypto system was started well close to a",
    "start": "2887000",
    "end": "2893280"
  },
  {
    "text": "well-known body of water and that's why they call it Seaside this paper actually so there's um oh this isn't the paper",
    "start": "2893280",
    "end": "2899880"
  },
  {
    "text": "there was one that was like she Sea sves by the seaside or something which is very funny if you're a cryptographer um",
    "start": "2899880",
    "end": "2905760"
  },
  {
    "text": "they love their puns but this was also shown to be not as secure as it should have been for given key size um so seide",
    "start": "2905760",
    "end": "2912640"
  },
  {
    "text": "is also considered insecure now and I don't know what work is being done if any on using this hard Mass problem to",
    "start": "2912640",
    "end": "2919599"
  },
  {
    "text": "create uh crypto systems um however there are others the learning with",
    "start": "2919599",
    "end": "2924640"
  },
  {
    "text": "errors problem which is essentially introducing noise into the into the process of cryptography now I understand",
    "start": "2924640",
    "end": "2930799"
  },
  {
    "text": "some maths like I have an undergrad in it this is witchcraft this stuff it's absolutely incredible um the learning",
    "start": "2930799",
    "end": "2937079"
  },
  {
    "text": "with eror problem um is essentially yeah introducing noise into your encodings and doing some kind of incredible",
    "start": "2937079",
    "end": "2942440"
  },
  {
    "text": "probability stuff at the other end to recover the original message and this is what has given rise to the next",
    "start": "2942440",
    "end": "2948359"
  },
  {
    "text": "generation of um nist has said that these n these are the nist's candidates for postquantum resilient uh",
    "start": "2948359",
    "end": "2954520"
  },
  {
    "text": "cryptography systems and you can use these today um so crystals kyber and crystals D lithium so Star Wars names",
    "start": "2954520",
    "end": "2961160"
  },
  {
    "text": "and kyber does key encapsulation which is what I was talking about at the beginning where asymmetric encryption is",
    "start": "2961160",
    "end": "2967160"
  },
  {
    "text": "used to set up a shared secret so we can do symmetric cryptography which is very efficient and very hard to break um kyba",
    "start": "2967160",
    "end": "2975079"
  },
  {
    "text": "is what lets us do that in a way that's not vulnerable to Quantum Computing attacks and dilithium is what lets us do",
    "start": "2975079",
    "end": "2981520"
  },
  {
    "text": "digital signatures in the same way the ellip of Cur digital signing algorithm does today um and so what people are",
    "start": "2981520",
    "end": "2988760"
  },
  {
    "text": "doing at the moment is they're combining traditional elliptic curve cryptography with these new Quantum resilient ones",
    "start": "2988760",
    "end": "2995920"
  },
  {
    "text": "that are based on the with erors problem and this means if one is broken the other one is still there um which is",
    "start": "2995920",
    "end": "3002880"
  },
  {
    "text": "pretty pretty reasonable honestly um uh one of the difficulties of getting this",
    "start": "3002880",
    "end": "3008559"
  },
  {
    "text": "D lithium algorithm this is the key this is a signature algorithm um one one thing we really like in insecurity we",
    "start": "3008559",
    "end": "3015359"
  },
  {
    "text": "like having Hardware tokens um for all the reasons you know they're they're very hard they're very assistant to fishing I have a whole talk about why",
    "start": "3015359",
    "end": "3021440"
  },
  {
    "text": "they're really cool um but getting the algorithm small enough to run on these Hardware tokens um and I think they",
    "start": "3021440",
    "end": "3026920"
  },
  {
    "text": "actually ended up using rust to get the the algorithm small enough um to actually be able to run on the hardware tokens but um Quantum resilient Hardware",
    "start": "3026920",
    "end": "3034040"
  },
  {
    "text": "tokens I don't think are are being manufactured yet um and the scheme has not been fully uh adopted by the pho",
    "start": "3034040",
    "end": "3040880"
  },
  {
    "text": "Alliance hopefully sometime soon we'll see that um so uh digital signatures um",
    "start": "3040880",
    "end": "3046640"
  },
  {
    "text": "we do have Quantum resistant digital signatures as long as the learning with erors problem isn't solved by some other kind of quantum Computing that comes out",
    "start": "3046640",
    "end": "3053839"
  },
  {
    "text": "um similarly with um key encapsulation uh in Chrome you can enable uh X2 25519",
    "start": "3053839",
    "end": "3060799"
  },
  {
    "text": "kaiber 67 768 which is a combination of um traditional x25519 certificates or um",
    "start": "3060799",
    "end": "3068760"
  },
  {
    "text": "sign um key encapsulation stuff and also some stuff done by kaiber so you do 32",
    "start": "3068760",
    "end": "3074440"
  },
  {
    "text": "bits of each and then if one is broken the other is still not compromised although you now only have 32 bits of security so it's a nice way of like",
    "start": "3074440",
    "end": "3081119"
  },
  {
    "text": "hedging the bets um and Cloud flare does this as well if you have if you use cloud flare Cloud flare will talk to",
    "start": "3081119",
    "end": "3087079"
  },
  {
    "text": "origin servers in Quantum uh resilient crypto systems cryptography um",
    "start": "3087079",
    "end": "3093480"
  },
  {
    "text": "if you have that enabled which is really cool um cool place to go and learn more about what's at The Cutting Edge here is",
    "start": "3093480",
    "end": "3099640"
  },
  {
    "text": "open Quantum safe which is a sort of open Collective of people who are working on this stuff I was very tempted",
    "start": "3099640",
    "end": "3105000"
  },
  {
    "text": "to get back into writing C so that I could go and like contribute to some of the libraries um and so where I hope",
    "start": "3105000",
    "end": "3110920"
  },
  {
    "text": "this is all going to go next is I would hope to see more diverse um algorithms",
    "start": "3110920",
    "end": "3117960"
  },
  {
    "text": "so at the moment we've got kyber and D lithium that are based on the learning with errors problem that's one problem",
    "start": "3117960",
    "end": "3124760"
  },
  {
    "text": "if we have if we find that this problem is solvable even by classical computers um probably not but um by some Quantum",
    "start": "3124760",
    "end": "3131599"
  },
  {
    "text": "Computing algorithm that hasn't yet been written um these go bye-by just like ecdsa and RSA did and that would be bad",
    "start": "3131599",
    "end": "3139040"
  },
  {
    "text": "this is unlikely because they have had so much attention like if you manage to break Kyro and dilithium today that's",
    "start": "3139040",
    "end": "3145720"
  },
  {
    "text": "instant like Fame in the cryptography community so there's lots of people who are trying to do this it took the the",
    "start": "3145720",
    "end": "3151200"
  },
  {
    "text": "isogen finding ones um psych and seed and seaside it took them a little bit longer to be broken like they went",
    "start": "3151200",
    "end": "3158599"
  },
  {
    "text": "through a couple rounds of reviews before they were eventually broken and they were broken by classical Computing not even Quantum Computing but they",
    "start": "3158599",
    "end": "3165240"
  },
  {
    "text": "didn't get as much hype um there were much Nicha use cases due to some of their computational properties um so I",
    "start": "3165240",
    "end": "3172079"
  },
  {
    "text": "think it's very unlikely that kyri andium will be broken um in the same way the RSA and ecdsa are",
    "start": "3172079",
    "end": "3180599"
  },
  {
    "text": "hi sorry oh sorry yes so kaiber is the key",
    "start": "3181559",
    "end": "3188440"
  },
  {
    "text": "encapsulation mechanism and that is used during a TLS handshake um to so the key",
    "start": "3188440",
    "end": "3194359"
  },
  {
    "text": "encapsulation here means it's um it's encapsulating a share a key that is supposed to be shared between two people",
    "start": "3194359",
    "end": "3201240"
  },
  {
    "text": "so that you can do symmetric cryptography which is what the bulk of web traffic is is encrypted with um so",
    "start": "3201240",
    "end": "3207920"
  },
  {
    "text": "yeah the thing to look up for Kaiba is key encapsulation mechanism and that that's what that does and then dilithium",
    "start": "3207920",
    "end": "3213280"
  },
  {
    "text": "is for generating signatures in much the same way as elliptic curve digital signing algorithm does does that answer",
    "start": "3213280",
    "end": "3218680"
  },
  {
    "text": "your question cool um please come and talk to me afterwards um yes um so I would like",
    "start": "3218680",
    "end": "3225040"
  },
  {
    "text": "to see more algorithms based on other math problems just to give us a little bit more security a little bit more",
    "start": "3225040",
    "end": "3230640"
  },
  {
    "text": "diversity of tactics as it were um plus I think it's cool there are people doing this there are other hard m problems",
    "start": "3230640",
    "end": "3236880"
  },
  {
    "text": "where people are trying to develop crypto systems but a lot of the attention right now is probably going to hardening Kyra and and um diiia making",
    "start": "3236880",
    "end": "3244440"
  },
  {
    "text": "making extra sure that those are um reliable because we're trying to roll",
    "start": "3244440",
    "end": "3249520"
  },
  {
    "text": "them out to more and more web infrastructure um I'd love to see Quantum resilient Hardware tokens I think Hardware tokens are the bees needs",
    "start": "3249520",
    "end": "3255240"
  },
  {
    "text": "I think they're really really cool um and I'd like to see the cool shiny new algorithms running on them I think we",
    "start": "3255240",
    "end": "3260319"
  },
  {
    "text": "should see this in the next few years um it just needs a bit more sort of standardization like for various",
    "start": "3260319",
    "end": "3265559"
  },
  {
    "text": "standards body to agree on things and for things to sort of get a bit more formalized and settled um and I would",
    "start": "3265559",
    "end": "3271520"
  },
  {
    "text": "like to see wider accessibility and roll out of the availability of these um",
    "start": "3271520",
    "end": "3277040"
  },
  {
    "text": "these new uh cryptography systems so one of the issues with this for example is that during the TLs handshake so that",
    "start": "3277040",
    "end": "3284359"
  },
  {
    "text": "there's a thing called client hello that gets sent um from the client to the server as part of the setup and with",
    "start": "3284359",
    "end": "3291520"
  },
  {
    "text": "elliptic curve cryptography that usually fits within one packet that that encrypted",
    "start": "3291520",
    "end": "3297079"
  },
  {
    "text": "if you're using this hybrid algorithm where you're using part elliptic curve part new kyber um that actually doesn't",
    "start": "3297079",
    "end": "3304160"
  },
  {
    "text": "so you have to split up the client hell between two different packets and some software that's that should be fine per",
    "start": "3304160",
    "end": "3309880"
  },
  {
    "text": "the TLs spec you are allowed to do that but a lot of software has made the assumption that it will never happen",
    "start": "3309880",
    "end": "3315079"
  },
  {
    "text": "because it hasn't been happening right and that's how things go so um we have this called it's um I forget what the",
    "start": "3315079",
    "end": "3321559"
  },
  {
    "text": "exact terminology is but it's something like um protocol osificante or something",
    "start": "3321559",
    "end": "3326839"
  },
  {
    "text": "where this is how things kind of have been even though they don't have to be and it becomes a de facto standard even",
    "start": "3326839",
    "end": "3332480"
  },
  {
    "text": "though it was never supposed to be so that's things like that really annoying obscure things like that are getting in",
    "start": "3332480",
    "end": "3338400"
  },
  {
    "text": "the way of us just being able to roll this all out immediately um and there's various ways that we can approach that particular problem and similar problems",
    "start": "3338400",
    "end": "3344559"
  },
  {
    "text": "that arise um so that work is just ongoing I'm I'm I'm hoping to see more of it happen and for us to be able to",
    "start": "3344559",
    "end": "3350960"
  },
  {
    "text": "just be using these Quantum resilient algorithms in our everyday um something I haven't touched on at all is why",
    "start": "3350960",
    "end": "3356400"
  },
  {
    "text": "should even care right people don't have quantum computers today to be looking at our traffic and and looking at your bank",
    "start": "3356400",
    "end": "3361720"
  },
  {
    "text": "details or whatever and I'm not a state actor so I'm I'm I'm not that worried but the thing is that it's very cheap to",
    "start": "3361720",
    "end": "3367599"
  },
  {
    "text": "store data and if I'm sending stuff that's only encrypted with elliptic curve cryptography today um somebody",
    "start": "3367599",
    "end": "3373599"
  },
  {
    "text": "could be storing that and then when they do have a quantum computer because in the 50 years quantum computers will be",
    "start": "3373599",
    "end": "3378720"
  },
  {
    "text": "cheap and we'll all have them in our phones or whatever then they could decrypt it and depending on who I am",
    "start": "3378720",
    "end": "3383880"
  },
  {
    "text": "what I'm saying today might still be relevant 50 years from now and again this is more something that you need to worry about if you are a state actor if",
    "start": "3383880",
    "end": "3389680"
  },
  {
    "text": "you're a government or so on um but it is true the sort of um Harvest now decrypt later uh sort of idea um and",
    "start": "3389680",
    "end": "3397880"
  },
  {
    "text": "that's why people should be using Quantum resilient algorithms today I would like to see more of them um and I",
    "start": "3397880",
    "end": "3403480"
  },
  {
    "text": "would like to see them become more accessible easy one click and we can just do it um but yeah that wraps me up",
    "start": "3403480",
    "end": "3410200"
  },
  {
    "text": "essentially um what we've learned is how we got to where we are today um we've learned about symmetric cypography we've",
    "start": "3410200",
    "end": "3415520"
  },
  {
    "text": "learned about RS and ecdsa um lotss of abstract maths thank you very much for staying with me through it uh lots of",
    "start": "3415520",
    "end": "3421559"
  },
  {
    "text": "colorful blobs and curves um we've talked about Quantum encryption or Quantum um mechanics Shaw's algorithm",
    "start": "3421559",
    "end": "3427640"
  },
  {
    "text": "you've seen directly how Shaw's a defining algorithm can break RSA um and",
    "start": "3427640",
    "end": "3432920"
  },
  {
    "text": "we've talked about what's next um thank you very much for your time and attention um I hope you've enjoyed it",
    "start": "3432920",
    "end": "3438760"
  },
  {
    "text": "and I hope you enjoy the rest of this conference it's going to be really really good thank you",
    "start": "3438760",
    "end": "3444960"
  }
]