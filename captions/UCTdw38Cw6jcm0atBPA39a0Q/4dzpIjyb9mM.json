[
  {
    "text": "uh hey everyone um yeah this is a bit of a different nec from regularly i think and i think every speaker has probably",
    "start": "560",
    "end": "6960"
  },
  {
    "text": "mentioned that before um the one thing that i do want to mention is that i truly miss being at ndc and i",
    "start": "6960",
    "end": "13360"
  },
  {
    "text": "miss the floating stages they have in oslo so to make up for that i have a big monitor and i mounted my webcam",
    "start": "13360",
    "end": "19359"
  },
  {
    "text": "on top and if i shake my desk a little bit you can see the wobbly of the stage as well so",
    "start": "19359",
    "end": "24400"
  },
  {
    "text": "just to get the ndc feel a little bit anyway welcome and um i see that i have a",
    "start": "24400",
    "end": "30000"
  },
  {
    "text": "reminder as well so let's join this meeting that's fine and let's start talking about microservices for building an id",
    "start": "30000",
    "end": "36800"
  },
  {
    "text": "in writer now it's very hard to do a show of hands especially with a lot of webcams disabled apparently",
    "start": "36800",
    "end": "43520"
  },
  {
    "text": "but just before we start i would love to learn how many of you are using resharper or ryder are",
    "start": "43520",
    "end": "49360"
  },
  {
    "text": "currently and pop up in the chats throw some some some responses there",
    "start": "49360",
    "end": "55120"
  },
  {
    "text": "say i or no writer yes i see a couple of people",
    "start": "55120",
    "end": "60320"
  },
  {
    "text": "great so a couple of people are actually using writer and resharper there's also a couple of people who are",
    "start": "60320",
    "end": "65600"
  },
  {
    "text": "saying no so that means that i prepared well and i have a small demo to start with",
    "start": "65600",
    "end": "71040"
  },
  {
    "text": "on what rider is and i'm not trying to sell you of course i work at jetbrains i'm not trying to sell you",
    "start": "71040",
    "end": "76479"
  },
  {
    "text": "just want to give you a couple of insights into things that we will see later on during this talk and how they are",
    "start": "76479",
    "end": "81600"
  },
  {
    "text": "implemented there so writer for those of you who don't know or those of you who only know resharper",
    "start": "81600",
    "end": "87759"
  },
  {
    "text": "rider is an ide that comes with resharper inside of the ide so it is really resharper with its own ui",
    "start": "87759",
    "end": "94479"
  },
  {
    "text": "its own functionality and so on and it has everything you expect from an ide there's a solution explorer on the left",
    "start": "94479",
    "end": "100079"
  },
  {
    "text": "here there's a database view on the right there is a database changes window that you can open there's git integration",
    "start": "100079",
    "end": "107119"
  },
  {
    "text": "you can look at your unit tests i don't have any in this solution but still you can see them if you have them",
    "start": "107119",
    "end": "112479"
  },
  {
    "text": "there's a nugets tool window of course there's an editor as well there's all of the post fix templates from resharper for example so",
    "start": "112479",
    "end": "119759"
  },
  {
    "text": "if you do a for each you get that thing you can start writing for each person you can say",
    "start": "119759",
    "end": "124960"
  },
  {
    "text": "dot at ndc.switch for example and have that expand and then from there",
    "start": "124960",
    "end": "130319"
  },
  {
    "text": "you can generate all of those switch labels so all of the things that you see in resharper are also in writer plus",
    "start": "130319",
    "end": "136879"
  },
  {
    "text": "also if you are used to intellij or any other ide from jetbrains you will already recognize the ui as",
    "start": "136879",
    "end": "143680"
  },
  {
    "text": "well because that's the same ui that we reuse here so it's really the best of both worlds but again i told you i'm not here to",
    "start": "143680",
    "end": "150000"
  },
  {
    "text": "make a commercial break about writer just to give you a little bit of an idea of what is in the ui and that there's a",
    "start": "150000",
    "end": "157440"
  },
  {
    "text": "very rich editor that you can work with for c-sharp for vb.net for f-sharp and so on right with that this is my",
    "start": "157440",
    "end": "165200"
  },
  {
    "text": "sales pitch if you're interested to do a trial go to writerid.net martin and give it a try",
    "start": "165200",
    "end": "171599"
  },
  {
    "text": "a couple of things that i do want to mention here as well is it is cross-platform it works with any net version so full",
    "start": "171599",
    "end": "178959"
  },
  {
    "text": "framework mono or net core and it even supports winforms and wpf if you're using windows",
    "start": "178959",
    "end": "186800"
  },
  {
    "text": "we also have a writer for c plus plus in preview and as you may know as a resharper user there's resharper for",
    "start": "186800",
    "end": "192159"
  },
  {
    "text": "cpus plus so we're now essentially bringing that into rider as well so that you can use all the refactorings that you're used to",
    "start": "192159",
    "end": "198560"
  },
  {
    "text": "from resharper for c plus plus in greater as well all of that is quite lightweight there's",
    "start": "198560",
    "end": "203840"
  },
  {
    "text": "of course an ide running and there's of course a resharper running in the back and it's a full id built on intellij and",
    "start": "203840",
    "end": "210000"
  },
  {
    "text": "resharper and as i mentioned you get the best of both worlds there right now before we dive into the",
    "start": "210000",
    "end": "216720"
  },
  {
    "text": "technical things i quickly want to give you a little bit of history about where jetbrains comes from and how ryder came",
    "start": "216720",
    "end": "222080"
  },
  {
    "text": "about also to get a little bit of a feel about why we made some technical choices later on while building",
    "start": "222080",
    "end": "228159"
  },
  {
    "text": "rider so this is the first product that jetbrains released",
    "start": "228159",
    "end": "233439"
  },
  {
    "text": "actually jetbrains was called intellij back then and it's called intellij renamer intellij renamer was literally nothing",
    "start": "233439",
    "end": "240319"
  },
  {
    "text": "more than something that could look at your file system open up a java project and see which",
    "start": "240319",
    "end": "245439"
  },
  {
    "text": "classes were used where and renaming classes so that was all we had back then and i actually had to",
    "start": "245439",
    "end": "252239"
  },
  {
    "text": "search quite a bit for to find these very old screenshots but still i managed to find them and it's uh it's kind of cool to",
    "start": "252239",
    "end": "257680"
  },
  {
    "text": "see that that happened in 2000s jetbrains founded in prague",
    "start": "257680",
    "end": "263199"
  },
  {
    "text": "came about with intellij renamer and quite quickly approximately a year after we decided to",
    "start": "263199",
    "end": "268960"
  },
  {
    "text": "ship intellij as a full ide where you could do anything and really write your java code as well now",
    "start": "268960",
    "end": "275680"
  },
  {
    "text": "in 2004 we came about with resharper and the main reason for that was to have like a",
    "start": "275680",
    "end": "281120"
  },
  {
    "text": "second product in the company uh intellij was there but also in 2004 2003 2004 eclipse started happening",
    "start": "281120",
    "end": "289520"
  },
  {
    "text": "and that's of course an open source ide that people can use and it's free as well",
    "start": "289520",
    "end": "294639"
  },
  {
    "text": "so we decided okay let's make sure that we can stay alive and also come up with a resharper a nets",
    "start": "294639",
    "end": "302000"
  },
  {
    "text": "ide or a.net plug-in we didn't know at the time and i'll cover that in bits but we came about with resharper then as",
    "start": "302000",
    "end": "307919"
  },
  {
    "text": "well over the course of the years up till now there's 20 plus ids that we",
    "start": "307919",
    "end": "313280"
  },
  {
    "text": "have and other development tools there's even a programming language kotlin that you can use so it's grown quite a bit since uh since",
    "start": "313280",
    "end": "320960"
  },
  {
    "text": "the beginning there now resharper i mentioned when we started building that thing we did not",
    "start": "320960",
    "end": "326479"
  },
  {
    "text": "yet know whether it was going to be a plugin to visual studio or if it was going to be",
    "start": "326479",
    "end": "331600"
  },
  {
    "text": "its own ide so what we did back then was basically start building a code base that could",
    "start": "331600",
    "end": "338080"
  },
  {
    "text": "work both ways that could be an ide by itself or it could be a plug-in to visual studio",
    "start": "338080",
    "end": "343840"
  },
  {
    "text": "so this is the resharper ide we never shipped this thing but some people may have seen screenshots",
    "start": "343840",
    "end": "349520"
  },
  {
    "text": "because i think we released some nightly builds back then but what you see is a winforms based ide",
    "start": "349520",
    "end": "355759"
  },
  {
    "text": "that has a solution explorer an editor that can render inline comments and this is actually a funny",
    "start": "355759",
    "end": "361440"
  },
  {
    "text": "thing the comments that you've seen on screen here those comments are now also rendered",
    "start": "361440",
    "end": "367120"
  },
  {
    "text": "like this in intellij so almost 20 years later we finally gone full circle and have them",
    "start": "367120",
    "end": "372720"
  },
  {
    "text": "in there as well in the editor but it's actually quite amazing that all of this was done in wind forms and since we decided",
    "start": "372720",
    "end": "380240"
  },
  {
    "text": "well we didn't decide actually what this was going to be its own id or a plugin we had a code base that was loosely",
    "start": "380240",
    "end": "387039"
  },
  {
    "text": "enough to to build either product we wanted to do",
    "start": "387039",
    "end": "392800"
  },
  {
    "text": "so the resharper ide didn't come about in the end so we shipped resharper as a plugin to visual studio",
    "start": "392800",
    "end": "398960"
  },
  {
    "text": "but all of the functionality that we built like this test runner or the usages we know that you see and the fact that you have",
    "start": "398960",
    "end": "405759"
  },
  {
    "text": "an abstract syntax tree on top of the editor and everything you type in in the editor has not gone to waste",
    "start": "405759",
    "end": "412560"
  },
  {
    "text": "it was reused inside of visual studio as the plugin and we kept all of that functionality",
    "start": "412560",
    "end": "418080"
  },
  {
    "text": "separately the nice thing about that is that we were also able to use those things to",
    "start": "418080",
    "end": "424479"
  },
  {
    "text": "accommodate not only the latest visual studio but every single visual studio version since 2010",
    "start": "424479",
    "end": "430479"
  },
  {
    "text": "and actually i think if you install the latest resharper into visual studio 2013 that should still work we support all of",
    "start": "430479",
    "end": "438080"
  },
  {
    "text": "those versions thanks to the fact that those things were loosely coupled or at least loosely coupled between visual studio",
    "start": "438080",
    "end": "443919"
  },
  {
    "text": "versions because they're not really loosely coupled from visual studio too much um we also",
    "start": "443919",
    "end": "449360"
  },
  {
    "text": "shipped the resharper command line tools where we basically took the code analysis engine and ship it as a command line tool",
    "start": "449360",
    "end": "455039"
  },
  {
    "text": "that you can run using a netclient tool and basically run the analyzers on top of your code base so all of those things",
    "start": "455039",
    "end": "461840"
  },
  {
    "text": "came about thanks to the fact that back then we didn't know whether to ship an ide or a plug-in to visual studio",
    "start": "461840",
    "end": "468560"
  },
  {
    "text": "right now at nbc this is actually ndc london i think we very often have boots where people",
    "start": "468560",
    "end": "475039"
  },
  {
    "text": "can come and ask us questions and one of the questions that came about a couple of years ago",
    "start": "475039",
    "end": "480479"
  },
  {
    "text": "was when will jetbrains come with its own.net ide you have this resharper thing why not",
    "start": "480479",
    "end": "485520"
  },
  {
    "text": "make your own ide and we've always been saying no up until 2016 i think or 2015",
    "start": "485520",
    "end": "492400"
  },
  {
    "text": "where we decided well maybe we should come up with our own ide um the question came about a lot of",
    "start": "492400",
    "end": "498400"
  },
  {
    "text": "people were asking for this resharper was getting performance issue thanks to the fact that visual studio is",
    "start": "498400",
    "end": "504720"
  },
  {
    "text": "a 32-bit process and that's a very long discussion i'm not going to go into that but suffice to say that both microsoft",
    "start": "504720",
    "end": "512159"
  },
  {
    "text": "and us and other plugins and extensions are basically fighting for memory inside of visual studio",
    "start": "512159",
    "end": "517919"
  },
  {
    "text": "and the garbage collector is doing overtime inside of the ide there also the fact that new features come up",
    "start": "517919",
    "end": "524720"
  },
  {
    "text": "in visual studio and very often show up late in the product development cycle means that resharper would also be a",
    "start": "524720",
    "end": "531279"
  },
  {
    "text": "little bit behind on implementing some things that visual studio did not yet ship in their nightlys so that also made it difficult",
    "start": "531279",
    "end": "538320"
  },
  {
    "text": "and we decided okay with.net core coming with all of those things that we realized over the years maybe it",
    "start": "538320",
    "end": "546000"
  },
  {
    "text": "would be good to come up with our own ide and if we come up with our own with our own ide there's no idea for",
    "start": "546000",
    "end": "552720"
  },
  {
    "text": "net core yet back then definitely not one that was good and consistent",
    "start": "552720",
    "end": "557760"
  },
  {
    "text": "cross-platform so let's build this thing so we decided let's build a cross-platform ide",
    "start": "557760",
    "end": "563279"
  },
  {
    "text": "cross-platform means that you also need a cross-platform ui toolkit and as you remember from the screenshot",
    "start": "563279",
    "end": "569600"
  },
  {
    "text": "from the resharper ide you will have seen that the resharper ui was built with winforms and wpf",
    "start": "569600",
    "end": "576320"
  },
  {
    "text": "and it's kind of hard to get that running on linux or mac os x so we decided okay let's look at the",
    "start": "576320",
    "end": "582320"
  },
  {
    "text": "existing resharper ui what can we do there what if we would build our own ide on top of resharper would we use",
    "start": "582320",
    "end": "589200"
  },
  {
    "text": "winforms that kind of works on mono uh would we use gtq sharp or qt or something like",
    "start": "589200",
    "end": "595680"
  },
  {
    "text": "that so that it can run cross-platform we decided it's basically rebuilding all of the all",
    "start": "595680",
    "end": "601839"
  },
  {
    "text": "of the uis maybe not the best idea it's it's one of those big rewrite kind of projects and",
    "start": "601839",
    "end": "607839"
  },
  {
    "text": "it's hard to do and it basically takes a long time before you actually finish it if you manage to finish it over time we",
    "start": "607839",
    "end": "614720"
  },
  {
    "text": "started thinking we have this intellij ide and actually intellij as an ide is also an open source project",
    "start": "614720",
    "end": "621680"
  },
  {
    "text": "i'll cover that in a bit we have this intellij ide that is already cross-platform",
    "start": "621680",
    "end": "626880"
  },
  {
    "text": "we built all of the other ides on top of that so why not try to build resharper for intellij",
    "start": "626880",
    "end": "633120"
  },
  {
    "text": "so that we have that cross-platform ui framework and we only have to care about integrating all of the editor",
    "start": "633120",
    "end": "639920"
  },
  {
    "text": "actions and refactorings and code analysis and so on so we decided let's go with that",
    "start": "639920",
    "end": "646320"
  },
  {
    "text": "intellij as a platform not as an ide is the foundation for all of the ides we",
    "start": "646320",
    "end": "651360"
  },
  {
    "text": "have uh it has a project view there's code completion there there's editors in there there's a ui toolkit that you can use so",
    "start": "651360",
    "end": "657920"
  },
  {
    "text": "for example if you want to render a dialogue that thing is going to be in the intellij platform and typically when we ship an ide we",
    "start": "657920",
    "end": "664640"
  },
  {
    "text": "take that platform we bundle some of the plugins that we have like version control like",
    "start": "664640",
    "end": "669760"
  },
  {
    "text": "terminal like yep a lot of other things docker integration for example",
    "start": "669760",
    "end": "675279"
  },
  {
    "text": "and then we add all of the specific functionality to a certain language so if you take for example webstorm",
    "start": "675279",
    "end": "681040"
  },
  {
    "text": "that's going to be the intellij platform with all of those plugins and javascript type scripts and other",
    "start": "681040",
    "end": "687680"
  },
  {
    "text": "language support in there intellij platform is an open source project and if you want to build your",
    "start": "687680",
    "end": "693519"
  },
  {
    "text": "own ide you can use it to build your own there's comma ide for example that did that i saw",
    "start": "693519",
    "end": "699360"
  },
  {
    "text": "pearl ide at some point as well and android studio if you're an android developer android studio",
    "start": "699360",
    "end": "704640"
  },
  {
    "text": "is actually a ie created by google but they are using the intellij platform as",
    "start": "704640",
    "end": "709920"
  },
  {
    "text": "their foundation as the open source projects so it is there it works on windows linux and mac",
    "start": "709920",
    "end": "715760"
  },
  {
    "text": "it's already cross-platform thanks to the java virtual machine because intellij is java based the jvm is",
    "start": "715760",
    "end": "721680"
  },
  {
    "text": "running this thing now jvm that's an interesting one intellij on one hand",
    "start": "721680",
    "end": "727440"
  },
  {
    "text": "has the jvm and it's a good foundation works cross-platform the editor is there and so on",
    "start": "727440",
    "end": "733040"
  },
  {
    "text": "and we had resharper on the other hand where we wanted to bring resharper into that ide but",
    "start": "733040",
    "end": "739040"
  },
  {
    "text": "resharper is built-in.net all of the language features in there are built on.net so it's really",
    "start": "739040",
    "end": "745200"
  },
  {
    "text": "a.net code base so you have jvm and.net how do you combine them so we started",
    "start": "745200",
    "end": "751839"
  },
  {
    "text": "looking at options one option was to rewrite resharper in java so that we could just plug in the c",
    "start": "751839",
    "end": "757839"
  },
  {
    "text": "sharp code inspections inside of intellij by rewriting resharper in java",
    "start": "757839",
    "end": "763040"
  },
  {
    "text": "now imagine i mentioned a big rewrite for the ui imagine rebuilding 16 years of",
    "start": "763040",
    "end": "768639"
  },
  {
    "text": "development on the resharper code base and redoing that in java that's probably not going to work",
    "start": "768639",
    "end": "774399"
  },
  {
    "text": "also if you would have a jvm version of resharper and a c sharp version you would have two implementations how do you make sure",
    "start": "774399",
    "end": "781760"
  },
  {
    "text": "that all of the same bugs exist on either side how you make sure that the same features exist on either either side and how do you keep them in",
    "start": "781760",
    "end": "788720"
  },
  {
    "text": "sync at all times we have been thinking about an automatic conversion because c sharp",
    "start": "788720",
    "end": "794240"
  },
  {
    "text": "kind of looks like java but we decided to not go with that on the other hand thanks to having that",
    "start": "794240",
    "end": "801360"
  },
  {
    "text": "resharper id back in the days and thanks to having that command line resharper we already knew that we could run",
    "start": "801360",
    "end": "807600"
  },
  {
    "text": "resharper without the ui we could run resharper as a command line process looking at your c",
    "start": "807600",
    "end": "813519"
  },
  {
    "text": "code base and so on and just build our own ui on top and i'm saying just build our own ui on top",
    "start": "813519",
    "end": "818959"
  },
  {
    "text": "because that has its own interesting aspects there so a headless resharper as",
    "start": "818959",
    "end": "826000"
  },
  {
    "text": "a language server would be cool and we could make that cross-platform because you have.net on windows and",
    "start": "826000",
    "end": "831440"
  },
  {
    "text": "netcore on mac os and linux and actually in the future we're also going to run resharper inside of rider on top of.net",
    "start": "831440",
    "end": "838399"
  },
  {
    "text": "core but that's not yet the case there's no constraints we're not inside of a hosts uh where we have to respect",
    "start": "838399",
    "end": "844959"
  },
  {
    "text": "the memory space and so on we're inside our own host so we can use 64 bits allocate as much memory as we",
    "start": "844959",
    "end": "850880"
  },
  {
    "text": "want and do pretty much anything we want and the cool thing is also that it is resharper",
    "start": "850880",
    "end": "856800"
  },
  {
    "text": "so if you would build writer on top of that headless resharper it's the same product it's the same code",
    "start": "856800",
    "end": "862240"
  },
  {
    "text": "base so if we create a new inspection in resharper it would show up in writer if we would create a new analyzer in",
    "start": "862240",
    "end": "869440"
  },
  {
    "text": "writer it would show up in resharper so that's a very nice side aspect of that and then on top of that headless",
    "start": "869440",
    "end": "875600"
  },
  {
    "text": "resharper we would put intellij as a very thin ui now",
    "start": "875600",
    "end": "881519"
  },
  {
    "text": "intellij as a thin ui is an interesting choice it would control the resharper process",
    "start": "881519",
    "end": "887440"
  },
  {
    "text": "but intellij itself itself is not really a thin ui intellij itself",
    "start": "887440",
    "end": "892720"
  },
  {
    "text": "is an ide it has an editor it has refactorings it has inspections for xml",
    "start": "892720",
    "end": "898959"
  },
  {
    "text": "and all of those things and we would plug resharper underneath and resharper would come with its own",
    "start": "898959",
    "end": "904880"
  },
  {
    "text": "sets of features very often for similar languages because resharper also obviously supports xml and for example",
    "start": "904880",
    "end": "912160"
  },
  {
    "text": "html and css so intellij was not really a thin ui it was a full ide with a new ide",
    "start": "912160",
    "end": "920720"
  },
  {
    "text": "underneath we looked at that and we thought okay this is probably going to be challenging",
    "start": "920720",
    "end": "926560"
  },
  {
    "text": "but it might actually make sense to do this and combine two ideas together into a new product because there are cases where intellij",
    "start": "926560",
    "end": "934160"
  },
  {
    "text": "can do its own thing on the front end and resharper in the back is not really needed there are also cases where resharper can",
    "start": "934160",
    "end": "940560"
  },
  {
    "text": "do everything and intellij is not really needed so for example scanning your entire codebase uh your entire c-sharp code base doesn't",
    "start": "940560",
    "end": "948160"
  },
  {
    "text": "really matter if uh if intellij doesn't do anything at that point because it's all c-sharp based right",
    "start": "948160",
    "end": "954000"
  },
  {
    "text": "but what with features that we could combine what if there could be a interesting feature where we could",
    "start": "954000",
    "end": "960160"
  },
  {
    "text": "combine something that happens in resharper with something that happens in intellij and that's where",
    "start": "960160",
    "end": "965360"
  },
  {
    "text": "we came up with the decision to combine the two ids and i'm going to quickly show a couple of places where this happens",
    "start": "965360",
    "end": "973519"
  },
  {
    "text": "so i have this project and already showed you the editor and we have an html file in this project",
    "start": "973519",
    "end": "979600"
  },
  {
    "text": "as well now this is writer and all of the html syntax highlighting and so on the fact",
    "start": "979600",
    "end": "985360"
  },
  {
    "text": "that you can preview the color here the fact that you can um invoke new actions on that thing and",
    "start": "985360",
    "end": "991680"
  },
  {
    "text": "rename attack to for example style 2 or something like that all of these things come from the intellij sides",
    "start": "991680",
    "end": "998480"
  },
  {
    "text": "of writer there's no resharper involved in this thing other than the fact that resharper knows this file exists so that",
    "start": "998480",
    "end": "1004800"
  },
  {
    "text": "it can reference it if needed but it doesn't do a thing here with suggesting any of the things that you",
    "start": "1004800",
    "end": "1010399"
  },
  {
    "text": "have here so all of the code completion you would do if you would write a new div or if you would use",
    "start": "1010399",
    "end": "1015680"
  },
  {
    "text": "emit for example if you do something like this makes no sense at all but all of this is",
    "start": "1015680",
    "end": "1021839"
  },
  {
    "text": "powered by intellij there's also cases where both of the ids",
    "start": "1021839",
    "end": "1027199"
  },
  {
    "text": "are actually working so html is typically powered by intellij what if you have a razer page razer is a",
    "start": "1027199",
    "end": "1033918"
  },
  {
    "text": "combination of typically html there's some c-sharp in there as well",
    "start": "1033919",
    "end": "1039280"
  },
  {
    "text": "and there can be css javascript and probably some other things in there as well so how do you do this",
    "start": "1039280",
    "end": "1044640"
  },
  {
    "text": "well this thing is basically intellij providing all of the html",
    "start": "1044640",
    "end": "1050240"
  },
  {
    "text": "syntax highlighting whereas resharper is making sure that when i'm in a razer context i can",
    "start": "1050240",
    "end": "1055760"
  },
  {
    "text": "actually get code completion and refactoring on those things so it's really combining the two ides",
    "start": "1055760",
    "end": "1061919"
  },
  {
    "text": "another thing that we can combine is the fact that we can have a controller",
    "start": "1061919",
    "end": "1067120"
  },
  {
    "text": "if we make a database connection that is completely on the intellij side of things what we could do is detect that in our c",
    "start": "1067120",
    "end": "1074160"
  },
  {
    "text": "sharp codebase we have a string and inside of that string we can start completing based on your database so we",
    "start": "1074160",
    "end": "1082400"
  },
  {
    "text": "can use we can we can look at columns or we can get the id from person or something like",
    "start": "1082400",
    "end": "1089360"
  },
  {
    "text": "that so you get all of that completion inside of that string so this is really cool because all of this",
    "start": "1089360",
    "end": "1096320"
  },
  {
    "text": "is handled by resharper apart from this string because that string is handled by the",
    "start": "1096320",
    "end": "1101600"
  },
  {
    "text": "intellij side of things so it's really two ids contributing to the same thing as well",
    "start": "1101600",
    "end": "1107200"
  },
  {
    "text": "i see a feature question in the chat does writer support blazer as well yes it does but it's not yet on par with",
    "start": "1107200",
    "end": "1114160"
  },
  {
    "text": "what you would expect and the next feature or the next release is going to contain more of that because that's one of those",
    "start": "1114160",
    "end": "1120320"
  },
  {
    "text": "cases where we have to rework a couple of things but it's coming right one plus one equals three so",
    "start": "1120320",
    "end": "1127440"
  },
  {
    "text": "that's uh that's right now if you think of two ides and you",
    "start": "1127440",
    "end": "1132799"
  },
  {
    "text": "think of two ids that have their own functionality that is even similar how do you make those two talk together",
    "start": "1132799",
    "end": "1138799"
  },
  {
    "text": "well we have been looking at several options for inter-process communication",
    "start": "1138799",
    "end": "1144640"
  },
  {
    "text": "but before we did so we started looking at the typical actions that you could do in the ide",
    "start": "1144640",
    "end": "1150080"
  },
  {
    "text": "so imagine a context action you press alt enter when there's a light bulb and you see that menu drop down with all of the",
    "start": "1150080",
    "end": "1156640"
  },
  {
    "text": "options that are there what you see on this screenshot is a lot of things coming from a lot of sites intellij brings you the",
    "start": "1156640",
    "end": "1164240"
  },
  {
    "text": "text editor the fact that you can have a carrot in there and do your typing the fact that you can press alt enter",
    "start": "1164240",
    "end": "1170160"
  },
  {
    "text": "and the fact that the document is tied to a language so if we press alt enter what",
    "start": "1170160",
    "end": "1176000"
  },
  {
    "text": "will happen is that intellij will ask the current documents what's your language are you",
    "start": "1176000",
    "end": "1181360"
  },
  {
    "text": "html javascript css or whatever and in this case because it's c sharp",
    "start": "1181360",
    "end": "1186960"
  },
  {
    "text": "codes we have plugged in a facade that says i'm c-sharp",
    "start": "1186960",
    "end": "1192720"
  },
  {
    "text": "what that facade is going to do is communicate with resharper run the inspection see whatever is",
    "start": "1192720",
    "end": "1198000"
  },
  {
    "text": "possible there and resharp is going to report back all of the things that should be visible in that drop-down that opens",
    "start": "1198000",
    "end": "1204080"
  },
  {
    "text": "when you press alt enter and intellij will then render those things and if we invoke them intel j",
    "start": "1204080",
    "end": "1209200"
  },
  {
    "text": "will of course invoke them and maybe communicate back to resharper that we have renamed something or executed a refactoring",
    "start": "1209200",
    "end": "1217520"
  },
  {
    "text": "sounds complicated but if you look at it it's really the data going over the wire between",
    "start": "1217520",
    "end": "1222640"
  },
  {
    "text": "intellij and writer is going to be a tree a tree of action ids what can we do a tree of names so that",
    "start": "1222640",
    "end": "1229840"
  },
  {
    "text": "we have something to show in the ui and icons that's everything that is going over the wire",
    "start": "1229840",
    "end": "1235360"
  },
  {
    "text": "both sides can do their own intelligence on top of this and they will probably keep track of where we are in the documents",
    "start": "1235360",
    "end": "1241760"
  },
  {
    "text": "but everything going over the wire or that has to go over the wire is a very simple tree of nodes that",
    "start": "1241760",
    "end": "1247520"
  },
  {
    "text": "provides whatever is in this menu and if we invoke an action we have the id so we can call back into",
    "start": "1247520",
    "end": "1253280"
  },
  {
    "text": "resharp and say look executes this id on these documents",
    "start": "1253280",
    "end": "1258480"
  },
  {
    "text": "writing codes is another interesting one writing code is bidirectional you can be typing and",
    "start": "1258480",
    "end": "1265200"
  },
  {
    "text": "if you type such a postfix template where you say i have this collection not for each for example",
    "start": "1265200",
    "end": "1271679"
  },
  {
    "text": "what will happen is that resharper will expand all of that into a for each loop you're still typing in intellij",
    "start": "1271679",
    "end": "1279520"
  },
  {
    "text": "at the same time resharper is typing in intellij by expanding that's that's postfix",
    "start": "1279520",
    "end": "1284880"
  },
  {
    "text": "templates so that's uh that's quite interesting there's also more complex refactorings if you do a rename",
    "start": "1284880",
    "end": "1290480"
  },
  {
    "text": "that may touch all every single document that you have in your solution you're typing in intellij resharper is",
    "start": "1290480",
    "end": "1297120"
  },
  {
    "text": "doing its thing on the back end and yeah those things have to happen together",
    "start": "1297120",
    "end": "1302559"
  },
  {
    "text": "you could think of a solution to implement all of this with deltas like this range in the document has changed",
    "start": "1302559",
    "end": "1308559"
  },
  {
    "text": "and we're updating the other range and so on and that's actually what we are doing intellij pushes the delta to resharper",
    "start": "1308559",
    "end": "1314880"
  },
  {
    "text": "and back and forth so it's really not the entire document going over the wire but just the things that are being",
    "start": "1314880",
    "end": "1320240"
  },
  {
    "text": "changed still begs the question how do you handle concurrency how do you handle the fact",
    "start": "1320240",
    "end": "1325440"
  },
  {
    "text": "that you may still be typing in intellij but resharper is injecting something into the text that you have been typing",
    "start": "1325440",
    "end": "1331679"
  },
  {
    "text": "i'll cover that in a bit but essentially writing code is sending deltas over the",
    "start": "1331679",
    "end": "1337039"
  },
  {
    "text": "wire from intellij to resharper and back and forth saying what line are we",
    "start": "1337039",
    "end": "1342480"
  },
  {
    "text": "at what column are we at in the documents what's the end of the thing that we are typing or refactoring and the text that",
    "start": "1342480",
    "end": "1348880"
  },
  {
    "text": "should replace it that's pretty much everything going over the wire so if you look at the data types they're",
    "start": "1348880",
    "end": "1354880"
  },
  {
    "text": "not really that complex for those context actions we had an id name and an icon for inspections it would be very similar",
    "start": "1354880",
    "end": "1362000"
  },
  {
    "text": "you would have an id a name an icon maybe the severity so we know which color of squiggle to show",
    "start": "1362000",
    "end": "1367360"
  },
  {
    "text": "underneath your codes and that's pretty much it so very simple messages and if we could make one",
    "start": "1367360",
    "end": "1373360"
  },
  {
    "text": "inspection work if we could make one inspection work in resharper and contribute to intellij we could make",
    "start": "1373360",
    "end": "1379440"
  },
  {
    "text": "them all work because it's the same type of data that we could uh generalize this into",
    "start": "1379440",
    "end": "1385919"
  },
  {
    "text": "then we started thinking okay we know which data has to be communicated how can we do this which protocol are we going to use how",
    "start": "1385919",
    "end": "1392320"
  },
  {
    "text": "do we make the actual connection happen between the two products and back then also",
    "start": "1392320",
    "end": "1397360"
  },
  {
    "text": "visual studio came about and the language server protocol came about lsp that vs code is using and that's a",
    "start": "1397360",
    "end": "1404799"
  },
  {
    "text": "really interesting protocol because it was built for ids the language server protocol has a",
    "start": "1404799",
    "end": "1410559"
  },
  {
    "text": "notion about languages it has a notion about diagnostics and inspections that you can send back",
    "start": "1410559",
    "end": "1416000"
  },
  {
    "text": "and forth there's the concept of documents there's a lot of similarity between what we do",
    "start": "1416000",
    "end": "1421760"
  },
  {
    "text": "and what lsp could provide although lsp was too limited for us",
    "start": "1421760",
    "end": "1427600"
  },
  {
    "text": "resharper would at some point have to contribute a view or ui if you do a refactoring we",
    "start": "1427600",
    "end": "1433279"
  },
  {
    "text": "would have to contribute ui to intellij and that is not part of lsp",
    "start": "1433279",
    "end": "1440080"
  },
  {
    "text": "now lsp is extensible enough that we could build or we could have built our own extensions on top of lsb",
    "start": "1440080",
    "end": "1446640"
  },
  {
    "text": "but the downside of that is that we would have had to build a lot of extensions and essentially it",
    "start": "1446640",
    "end": "1452159"
  },
  {
    "text": "would boil down to shoe horning our own extensions on top of lsp where the fraction of lsp that we would",
    "start": "1452159",
    "end": "1459440"
  },
  {
    "text": "be usually really using in our products would not be ideal so we decided to",
    "start": "1459440",
    "end": "1464880"
  },
  {
    "text": "abandon lsb and go with something else and we decided to try all sorts of things we've had",
    "start": "1464880",
    "end": "1471440"
  },
  {
    "text": "a rest kind of protocol that did json which was slow we did protobuf which had all kinds of serialization issues",
    "start": "1471440",
    "end": "1478400"
  },
  {
    "text": "if you would have nightly builds and the front end in the back end would be a different version we tried rpc we tried request response",
    "start": "1478400",
    "end": "1485520"
  },
  {
    "text": "style just like you would have a web api so we tried literally everything that is available and we",
    "start": "1485520",
    "end": "1490799"
  },
  {
    "text": "found all of that um yeah annoying because both lsb and those custom protocols that",
    "start": "1490799",
    "end": "1497919"
  },
  {
    "text": "we came up with are mostly request response rpc i make a call from",
    "start": "1497919",
    "end": "1503120"
  },
  {
    "text": "intellij to resharper or resharper makes a call from from resharper to intellij and gets a",
    "start": "1503120",
    "end": "1509120"
  },
  {
    "text": "response back that means that if you do those rpc calls you would also have to send context which solution are we in",
    "start": "1509120",
    "end": "1516320"
  },
  {
    "text": "which project are we in which file is open what does the location encode if you have multiple cursors or multiple",
    "start": "1516320",
    "end": "1522080"
  },
  {
    "text": "selection what bits are selected and so on so a lot of additional context would have to go with",
    "start": "1522080",
    "end": "1527120"
  },
  {
    "text": "every request and response cycle which means that the protocol would be very very high bandwidth or bandwidth",
    "start": "1527120",
    "end": "1533200"
  },
  {
    "text": "intensive so we started realizing that requests doing something and then returning a",
    "start": "1533200",
    "end": "1538720"
  },
  {
    "text": "response would probably not be the best id idea in this case because",
    "start": "1538720",
    "end": "1543919"
  },
  {
    "text": "all of that context or at least most of that context could be reused on subsequent calls",
    "start": "1543919",
    "end": "1549520"
  },
  {
    "text": "if you're still in the same project why send all of the solution information together with",
    "start": "1549520",
    "end": "1554640"
  },
  {
    "text": "with the requests if you could also keep it somewhere else because it doesn't change that often typically",
    "start": "1554640",
    "end": "1562240"
  },
  {
    "text": "since both ids share a similar model in architecture they come from the same vendor so they were built",
    "start": "1562240",
    "end": "1569200"
  },
  {
    "text": "along the same lines since those things are the same what if we could come up with something",
    "start": "1569200",
    "end": "1574480"
  },
  {
    "text": "that is not rpc but um has context has states and that just communicates between",
    "start": "1574480",
    "end": "1580720"
  },
  {
    "text": "the same type of components on both sides or if it's not the same what if we could do something that is a",
    "start": "1580720",
    "end": "1586080"
  },
  {
    "text": "very thin wrapper around it so it looks the same to the protocol and that's where mvvm model view",
    "start": "1586080",
    "end": "1591679"
  },
  {
    "text": "controller comes in we decided intellij is going to be our view resharper will provide the model",
    "start": "1591679",
    "end": "1598320"
  },
  {
    "text": "and our view model will be where ryder lives so writer in its core is really just a view model",
    "start": "1598320",
    "end": "1605520"
  },
  {
    "text": "and resharper is contributing to it intellij is using it and contributing to it and it's it's all shared",
    "start": "1605520",
    "end": "1612080"
  },
  {
    "text": "between both sides if you have such a view model you can have something like a project object and that project object can have",
    "start": "1612080",
    "end": "1618799"
  },
  {
    "text": "a files collection and you can add a file called foo.cs into that files collection",
    "start": "1618799",
    "end": "1624000"
  },
  {
    "text": "both sites would look at the same view model and both sides would all of a sudden know that food.cs was added to the",
    "start": "1624000",
    "end": "1630799"
  },
  {
    "text": "projects if there's a new inspection to be added from the resharper site or from the",
    "start": "1630799",
    "end": "1636000"
  },
  {
    "text": "intellij site if you have that kind of mixed language editor well find the file in the project",
    "start": "1636000",
    "end": "1642320"
  },
  {
    "text": "view model add an inspection to the collection and say what its severities what the line and column in the code is and show it",
    "start": "1642320",
    "end": "1648799"
  },
  {
    "text": "there both processes can subscribe to this view model and react to every change",
    "start": "1648799",
    "end": "1654000"
  },
  {
    "text": "that happens there whether it's resharper pushing something in there or intellij doing something at the view model both are subscribed to every",
    "start": "1654000",
    "end": "1660559"
  },
  {
    "text": "collection and every single objects others in that model",
    "start": "1660559",
    "end": "1665600"
  },
  {
    "text": "there's still the question of conflict resolution and we did a lot of over engineering on that",
    "start": "1665600",
    "end": "1671279"
  },
  {
    "text": "before we decided that it's actually pretty simple if you make changes in intellij and",
    "start": "1671279",
    "end": "1676480"
  },
  {
    "text": "you're typing and resharper pushes the refactoring's results into intellij but you've changed the",
    "start": "1676480",
    "end": "1681760"
  },
  {
    "text": "documents the last one will win so that's what we do every single call to the protocol gets a",
    "start": "1681760",
    "end": "1687279"
  },
  {
    "text": "message a message version and based on the version we basically pick the latest version to make sure that we have",
    "start": "1687279",
    "end": "1694000"
  },
  {
    "text": "a convention in place to discard changes that are not required in the view model",
    "start": "1694000",
    "end": "1701840"
  },
  {
    "text": "right meets the writer protocol so that's what we're actually uh here",
    "start": "1702000",
    "end": "1707520"
  },
  {
    "text": "for so uh i have a nice diagram and it's always nice if diagrams contain a word",
    "start": "1707520",
    "end": "1713120"
  },
  {
    "text": "magic because that's what we wanted this protocol to look like for our developers yes we have both sites",
    "start": "1713120",
    "end": "1718640"
  },
  {
    "text": "each uses a different type of platform and language even we wanted to have that protocol and our",
    "start": "1718640",
    "end": "1724640"
  },
  {
    "text": "developers should not really care about the protocol too much they would not have to know about",
    "start": "1724640",
    "end": "1730640"
  },
  {
    "text": "conflict resolution about the types that it supports about the fact that the connection may break or resharper may crash or intellij may",
    "start": "1730640",
    "end": "1737360"
  },
  {
    "text": "crash while the other project process is still running the protocol should handle all of those cases",
    "start": "1737360",
    "end": "1742480"
  },
  {
    "text": "in a magic style so the developer should not know to do that we built our own writer",
    "start": "1742480",
    "end": "1748159"
  },
  {
    "text": "protocol it's actually open source there's not a lot of documentation unfortunately but it is open source and you can look at it",
    "start": "1748159",
    "end": "1754960"
  },
  {
    "text": "and it comes with uh bindings4.net for kotlin for javascript and c plus plus and as you can imagine for",
    "start": "1754960",
    "end": "1762480"
  },
  {
    "text": "nets that's there because we have resharper for kotlin is because that's the jvm language and we have the intellij side",
    "start": "1762480",
    "end": "1768559"
  },
  {
    "text": "of things for c plus plus is because we have that writer c plus coming so we're gradually adding new languages there",
    "start": "1768559",
    "end": "1775760"
  },
  {
    "text": "whenever we need them if you look at the protocol you will see various different layers",
    "start": "1775760",
    "end": "1781840"
  },
  {
    "text": "you will have sockets the fact that you can have batching there's a binary wire protocol that is being generated",
    "start": "1781840",
    "end": "1787360"
  },
  {
    "text": "there's that conflict resolution and so on on top of those things you have types like strings booleans lists and so on on top of that",
    "start": "1787360",
    "end": "1795279"
  },
  {
    "text": "we have a model definition and on top of that there's code generation that the developer can use and i'll actually show you some",
    "start": "1795279",
    "end": "1801520"
  },
  {
    "text": "some examples later on but the idea is that if you're a developer on the resharper team or on the writer team",
    "start": "1801520",
    "end": "1808240"
  },
  {
    "text": "what you will have to do is include the protocol libraries if they're not there yet write a view",
    "start": "1808240",
    "end": "1813840"
  },
  {
    "text": "model in that model definition dsl the main specific language layer based on that generate codes and",
    "start": "1813840",
    "end": "1820960"
  },
  {
    "text": "on each side of the fence work with that generated code so if you create that dsl language",
    "start": "1820960",
    "end": "1826240"
  },
  {
    "text": "you're actually writing that in a kotlin-like dsl you generate a code if you're on the.net",
    "start": "1826240",
    "end": "1832399"
  },
  {
    "text": "side of things and you have a collection it will show up as a list if you're on the coupling side it may show up as a",
    "start": "1832399",
    "end": "1837919"
  },
  {
    "text": "map or something else based on what is being generated and you can just work with the",
    "start": "1837919",
    "end": "1843039"
  },
  {
    "text": "standard types there's no need to use any custom types it's all just kotlin or just.net or just c plus",
    "start": "1843039",
    "end": "1850640"
  },
  {
    "text": "red as a developer you would only need to know about the data types that are in there how you",
    "start": "1850640",
    "end": "1855679"
  },
  {
    "text": "can write your model and you should not know about conflict resolution the wire protocol and everything that is underneath there",
    "start": "1855679",
    "end": "1863200"
  },
  {
    "text": "also the fact that code is generated based on that view model means that there's no reflection or",
    "start": "1863200",
    "end": "1869360"
  },
  {
    "text": "introspection on the java side of things happening at runtime it's really static code it's being generated",
    "start": "1869360",
    "end": "1875360"
  },
  {
    "text": "compiled and that's the code that is going over the wire or handling the the wire connection so no",
    "start": "1875360",
    "end": "1881120"
  },
  {
    "text": "reflection needed to make sure that everything is parsed uh the writer protocol is also",
    "start": "1881120",
    "end": "1886399"
  },
  {
    "text": "hierarchical and supports lifetimes and that sounds complex and i'll show you that uh in a little bit",
    "start": "1886399",
    "end": "1893039"
  },
  {
    "text": "it's basically the way ids work you have a hierarchy of components on both sides and when you close a window for example",
    "start": "1893039",
    "end": "1900080"
  },
  {
    "text": "you want to make sure that everything that is attached to that window also gets this posts so you don't have",
    "start": "1900080",
    "end": "1905679"
  },
  {
    "text": "any memory leaks and so on in terms of primitives in the protocol you have things like",
    "start": "1905679",
    "end": "1911919"
  },
  {
    "text": "lists there's fields there's bytes shorts ins all of the different types that you would expect in",
    "start": "1911919",
    "end": "1918240"
  },
  {
    "text": "any language and there's two special types or actually three signals properties and calls slash",
    "start": "1918240",
    "end": "1924960"
  },
  {
    "text": "callbacks calls and callbacks are for the cases where you still need an rpc",
    "start": "1924960",
    "end": "1930159"
  },
  {
    "text": "call to happen and do a blocking request response kind of thing we try to avoid them but sometimes you",
    "start": "1930159",
    "end": "1936880"
  },
  {
    "text": "need them signal and property are the main constructs of everything that happens",
    "start": "1936880",
    "end": "1941919"
  },
  {
    "text": "in in the protocol because a property is an observable you can subscribe on either side to a property and see",
    "start": "1941919",
    "end": "1948640"
  },
  {
    "text": "what value changes and what the value looks like after it changed and there's signals that is basically",
    "start": "1948640",
    "end": "1954720"
  },
  {
    "text": "events being emitted so if there's a signal from the front end to the back end saying the file system has been updated for",
    "start": "1954720",
    "end": "1961200"
  },
  {
    "text": "example the back-end or the front-end can reload certain files or certain directories if needed what do they look like",
    "start": "1961200",
    "end": "1969760"
  },
  {
    "text": "in c-sharp codes well you have your event sources or your signals and they",
    "start": "1969760",
    "end": "1975200"
  },
  {
    "text": "can fire which means i emits an events or they can advise subscribe to something and invoke",
    "start": "1975200",
    "end": "1982240"
  },
  {
    "text": "a handler whenever something happens and a property or signal is nothing more",
    "start": "1982240",
    "end": "1987360"
  },
  {
    "text": "than something that combines boats and that can fire an event but also listen to changes happening",
    "start": "1987360",
    "end": "1992880"
  },
  {
    "text": "also note the fact that there's that lifetime lifetime variable or parameter in that",
    "start": "1992880",
    "end": "1999600"
  },
  {
    "text": "sync i mentioned everything is hierarchical and has lifetimes which means if you subscribe to parts of",
    "start": "1999600",
    "end": "2006080"
  },
  {
    "text": "the view model but that view model part is no longer needed it will be disposed and what will",
    "start": "2006080",
    "end": "2011440"
  },
  {
    "text": "happen is that that lifetime will also get disposed and all of the handlers all of the subscriptions will follow",
    "start": "2011440",
    "end": "2016720"
  },
  {
    "text": "along so you don't have to manually go in and remove all of the uh all of the subscriptions there",
    "start": "2016720",
    "end": "2023600"
  },
  {
    "text": "right a property is nothing more than a combination of both sides plus the value that it holds",
    "start": "2023600",
    "end": "2029360"
  },
  {
    "text": "the current value that it holds so nothing special there now in hierarchies on the intellij",
    "start": "2029360",
    "end": "2036000"
  },
  {
    "text": "side you have a project on the resharper side you have a solution and we have lifetimes on both sides of",
    "start": "2036000",
    "end": "2042080"
  },
  {
    "text": "the equation so for example if you have a project open and you have three editor tabs well all",
    "start": "2042080",
    "end": "2047200"
  },
  {
    "text": "of that is going to be loaded in intellij it's also going to be loaded in resharper when you close a project you",
    "start": "2047200",
    "end": "2054560"
  },
  {
    "text": "want all of those editor tabs to disappear from memory as well now since you are in this split brain",
    "start": "2054560",
    "end": "2060720"
  },
  {
    "text": "kind of situation where you have intellij and resharper if you close a project",
    "start": "2060720",
    "end": "2066079"
  },
  {
    "text": "on the intellij site you want to propagate that entire lifetime to the resharper side of things as well so that",
    "start": "2066079",
    "end": "2072720"
  },
  {
    "text": "you close the solution there so that's why the protocol also comes with these lifetimes embedded",
    "start": "2072720",
    "end": "2079040"
  },
  {
    "text": "basically making sure that if you close something on one end or dispose something on one end it will also disappear on the other side",
    "start": "2079040",
    "end": "2085760"
  },
  {
    "text": "and that works both ways what does that look like in codes well a lifetime is actually very very simple",
    "start": "2085760",
    "end": "2092800"
  },
  {
    "text": "constructs you have a stack of actions that will be executed when you dispose the lifetime",
    "start": "2092800",
    "end": "2098240"
  },
  {
    "text": "you can attach things to a lifetime so if you have a project that opens a tap the project has a project lifetime the",
    "start": "2098240",
    "end": "2105359"
  },
  {
    "text": "new editor tab will subscribe to the project lifetime and basically attached to it",
    "start": "2105359",
    "end": "2110480"
  },
  {
    "text": "whenever the project closes it calls this post walks its entire internal stack and disposes all of the child",
    "start": "2110480",
    "end": "2116560"
  },
  {
    "text": "resources there so it's not super complex it's really just making sure that",
    "start": "2116560",
    "end": "2122880"
  },
  {
    "text": "instead of having to litter your entire code base with using statements and making sure you have disposables being passed around",
    "start": "2122880",
    "end": "2130000"
  },
  {
    "text": "this is the inverse where everything subscribes to a main disposable much like you would subscribe to a",
    "start": "2130000",
    "end": "2135680"
  },
  {
    "text": "cancellation token in c sharp and whenever that thing fires you",
    "start": "2135680",
    "end": "2140800"
  },
  {
    "text": "continue propagating the chain of disposables right let's look at some codes because i",
    "start": "2140800",
    "end": "2148000"
  },
  {
    "text": "know this is very theoretical and let's look at some codes so this is again writer and if we look at",
    "start": "2148000",
    "end": "2155200"
  },
  {
    "text": "the nuget tool window in there you can see packages and you can install and uninstall packages",
    "start": "2155200",
    "end": "2160720"
  },
  {
    "text": "and there's also a log tab now this log tab lists all kinds of log messages so for",
    "start": "2160720",
    "end": "2166880"
  },
  {
    "text": "example it tells you how it's authenticating with the current nuget feeds it tells you when it's restoring",
    "start": "2166880",
    "end": "2172240"
  },
  {
    "text": "packages and so on now if you look at it the ui is all intellij",
    "start": "2172240",
    "end": "2177280"
  },
  {
    "text": "whereas this data is all coming from the net site we're actually using nugets under the hoods",
    "start": "2177280",
    "end": "2182800"
  },
  {
    "text": "making sure that this propagates into that into that tool window and that we can see those log files",
    "start": "2182800",
    "end": "2188880"
  },
  {
    "text": "so let's see how this is built in the protocol and how both the intellij site as well as the",
    "start": "2188880",
    "end": "2194160"
  },
  {
    "text": "resharper sites look at this thing so if you look at the intellij sites and",
    "start": "2194160",
    "end": "2200720"
  },
  {
    "text": "i mentioned both ids look the same they really look the same because it's all intellij so intellij",
    "start": "2200720",
    "end": "2206880"
  },
  {
    "text": "look at the icon that's where you see the difference or the languages",
    "start": "2206880",
    "end": "2211920"
  },
  {
    "text": "in intellij in the intellij side of writer we wrote a dsl object called the rd",
    "start": "2211920",
    "end": "2219680"
  },
  {
    "text": "nougat hosts we prefix everything with rd when it's something that lives in the view model or something that is going to",
    "start": "2219680",
    "end": "2225839"
  },
  {
    "text": "be the viewmodel and we'll have a nuget host in there we're extending an existing object in the protocol",
    "start": "2225839",
    "end": "2232400"
  },
  {
    "text": "namely the solution and we're calling our extension nuget hosts",
    "start": "2232400",
    "end": "2237520"
  },
  {
    "text": "inside of that thing we can start describing our entire protocol so for example we can see that",
    "start": "2237520",
    "end": "2242640"
  },
  {
    "text": "a nuget package identity has an id and a version both are fields of the string type and",
    "start": "2242640",
    "end": "2249440"
  },
  {
    "text": "that's a structure definition in the protocol there's a nougat framework there's a package",
    "start": "2249440",
    "end": "2254640"
  },
  {
    "text": "dependency all kinds of things and at some point there also should be a log message and a log message can have a",
    "start": "2254640",
    "end": "2261599"
  },
  {
    "text": "timestamp can have a context which is going to be an enum can have a level which is also",
    "start": "2261599",
    "end": "2266800"
  },
  {
    "text": "going to be an enum that is the level and a message that will be written",
    "start": "2266800",
    "end": "2271920"
  },
  {
    "text": "also further down there should be a sync called log and that is an immutable list",
    "start": "2271920",
    "end": "2278800"
  },
  {
    "text": "of those nuget log messages so in our protocol definition we are writing using the",
    "start": "2278800",
    "end": "2284160"
  },
  {
    "text": "protocol constructs to define the objects that we have all using types that we can use and the",
    "start": "2284160",
    "end": "2290400"
  },
  {
    "text": "nice thing is that because all of this is also kotlin based we can invoke refactorings on top of this so for",
    "start": "2290400",
    "end": "2296800"
  },
  {
    "text": "example if you want to make this a signal if you want to make this an rpc call we can easily rename that and change the",
    "start": "2296800",
    "end": "2302560"
  },
  {
    "text": "protocol to do that now bear with me we have that rd nuget log message which is that structure with",
    "start": "2302560",
    "end": "2309119"
  },
  {
    "text": "the text with the severity and so on and we have a sink called log",
    "start": "2309119",
    "end": "2314880"
  },
  {
    "text": "what will happen after we defines the model is that we generate codes using an action that we have in",
    "start": "2314880",
    "end": "2320079"
  },
  {
    "text": "the ide and we get back a pre-generated coupling file that is the kotlin",
    "start": "2320079",
    "end": "2325680"
  },
  {
    "text": "version of the model that we just created so if you would look at our log message",
    "start": "2325680",
    "end": "2332320"
  },
  {
    "text": "you will actually see that we have that log sync that we just defined in the",
    "start": "2332320",
    "end": "2337599"
  },
  {
    "text": "protocol which is going to be a signal that listens to a list of rd you get log",
    "start": "2337599",
    "end": "2343040"
  },
  {
    "text": "messages all using types that exist on the cut inside of things if you now switch to the resharper code",
    "start": "2343040",
    "end": "2349920"
  },
  {
    "text": "base you will see that that same thing is generated but this time as c-sharp and also on this side you will",
    "start": "2349920",
    "end": "2356800"
  },
  {
    "text": "see that there's something called log oh wait there's something called log",
    "start": "2356800",
    "end": "2362560"
  },
  {
    "text": "that is a list of rd nuget log messages in c sharp and that can fire whenever it",
    "start": "2362560",
    "end": "2368079"
  },
  {
    "text": "changes so that's what we did in a protocol define those types and the protocol",
    "start": "2368079",
    "end": "2374320"
  },
  {
    "text": "really translates everything in something into something that can be used in the actual language that we are",
    "start": "2374320",
    "end": "2379520"
  },
  {
    "text": "using so for uh c sharp you will see a nice c sharp based rd and you get log message",
    "start": "2379520",
    "end": "2385760"
  },
  {
    "text": "now what will happen is when we fire up your project when we start your project we will subscribe to",
    "start": "2385760",
    "end": "2391920"
  },
  {
    "text": "everything that is happening including nougat restores and to do so we have implemented a new",
    "start": "2391920",
    "end": "2397599"
  },
  {
    "text": "get native logger that we plug into the dot net runtime in the nuked clients that is",
    "start": "2397599",
    "end": "2402720"
  },
  {
    "text": "coming from the nets and whenever that thing emits unlock message we actually forward it to our hosts log",
    "start": "2402720",
    "end": "2410000"
  },
  {
    "text": "fire a new message with the contents that we have so this is how we essentially subscribe",
    "start": "2410000",
    "end": "2417520"
  },
  {
    "text": "the nugets.com dll to our protocol and whenever new kid emits a message",
    "start": "2417520",
    "end": "2422560"
  },
  {
    "text": "we basically pipe it into the protocol and fire new events now these events are fired we can",
    "start": "2422560",
    "end": "2429200"
  },
  {
    "text": "subscribe to them on the resharper site if you want to but we can also subscribe to them",
    "start": "2429200",
    "end": "2434400"
  },
  {
    "text": "on the intellij site again so on the intellij sites we have that nuget lock panel and in",
    "start": "2434400",
    "end": "2441280"
  },
  {
    "text": "that lock panel we also subscribe to our uh where is it",
    "start": "2441280",
    "end": "2446880"
  },
  {
    "text": "to our log and we actually renamed it full log in here because it's wired up somewhere but anyway bear with me",
    "start": "2446880",
    "end": "2452720"
  },
  {
    "text": "this is that log property that comes from the protocol whenever it fires we get a message and we simply add it to",
    "start": "2452720",
    "end": "2459119"
  },
  {
    "text": "a ui that's everything we do here we subscribe to the protocol nugets on their c-sharp site fire",
    "start": "2459119",
    "end": "2465760"
  },
  {
    "text": "something into this into these events we get a message and we add it to the console",
    "start": "2465760",
    "end": "2472160"
  },
  {
    "text": "nothing more than that uh one additional thing that i quickly want to show you is",
    "start": "2472160",
    "end": "2477599"
  },
  {
    "text": "this concept of lifetimes also on nugets you can have authenticated feeds on mygit on",
    "start": "2477599",
    "end": "2484160"
  },
  {
    "text": "azure devops or whatever you are using and to do that we can also plug in credential",
    "start": "2484160",
    "end": "2490079"
  },
  {
    "text": "providers so that when you consume for example azure devops we will trigger an oauth flow maybe ask",
    "start": "2490079",
    "end": "2495760"
  },
  {
    "text": "you to log in so that you can consume the packages that you have on your uh nuget feed there",
    "start": "2495760",
    "end": "2501280"
  },
  {
    "text": "now all of that is solution specific if you open up one solution well what you get in our new credential",
    "start": "2501280",
    "end": "2507680"
  },
  {
    "text": "provider host is the lifetime of our solution and to that lifetime we can subscribe",
    "start": "2507680",
    "end": "2514079"
  },
  {
    "text": "when the lifetime terminates we say that we also want to remove our credential service from memory",
    "start": "2514079",
    "end": "2519920"
  },
  {
    "text": "and clean up that entire credential service also um if any one of you experienced a",
    "start": "2519920",
    "end": "2525920"
  },
  {
    "text": "nougats issue in i think it was rider 2018.24.3",
    "start": "2525920",
    "end": "2531599"
  },
  {
    "text": "we had a small memory leak in one of the minor versions that was because i forgot this specific line of codes",
    "start": "2531599",
    "end": "2537839"
  },
  {
    "text": "and we kept that credential service in memory forever and if you did not close the writer it would be in memory forever",
    "start": "2537839",
    "end": "2543440"
  },
  {
    "text": "so it's really important to subscribe to those lifetimes once we do that",
    "start": "2543440",
    "end": "2548880"
  },
  {
    "text": "we clean up that credential service there's a couple of other examples in the code base so you can",
    "start": "2548880",
    "end": "2554480"
  },
  {
    "text": "subscribe a disposable but if you have an action that has to be executed when you",
    "start": "2554480",
    "end": "2559760"
  },
  {
    "text": "close or terminate the lifetime you can also write some custom codes linking methods do whatever you want",
    "start": "2559760",
    "end": "2565200"
  },
  {
    "text": "whenever that lifetime closes like for example cleaning up temporary files or whatever you want to do with it",
    "start": "2565200",
    "end": "2572960"
  },
  {
    "text": "right and i think that's that's a quick rough overview of how the protocol works and what it does so let's go back to",
    "start": "2573040",
    "end": "2580400"
  },
  {
    "text": "slides right so in summary of that protocol it's a kotlin-based dsl",
    "start": "2580400",
    "end": "2586800"
  },
  {
    "text": "easy to work with for our devs they update the view model regenerate code and simply work with the codes on both",
    "start": "2586800",
    "end": "2592640"
  },
  {
    "text": "sides whether it's in the intellij code base or the resharper code base they don't have to think about the facts",
    "start": "2592640",
    "end": "2598480"
  },
  {
    "text": "that there is this multiple processes thing running they don't have to think about states about",
    "start": "2598480",
    "end": "2603599"
  },
  {
    "text": "conflict resolution all of that is already in the protocol it's cross-platform and also",
    "start": "2603599",
    "end": "2609040"
  },
  {
    "text": "cross-language so if you want to create a react client on top of the resharper",
    "start": "2609040",
    "end": "2614560"
  },
  {
    "text": "code base probably not the best idea but if you would want to do this you can do so",
    "start": "2614560",
    "end": "2619760"
  },
  {
    "text": "if you want there's one downside to having this protocol and that is that the plug-in model for",
    "start": "2619760",
    "end": "2625280"
  },
  {
    "text": "writer is more complex than the one for intellij or resharper separately because it means",
    "start": "2625280",
    "end": "2630640"
  },
  {
    "text": "that you as a plug-in developer also may have to extend the protocol and may have to build",
    "start": "2630640",
    "end": "2635760"
  },
  {
    "text": "something that sits inside of intellij and on the resharper side so that's why which our writer plugins are",
    "start": "2635760",
    "end": "2642319"
  },
  {
    "text": "slightly more complex we have fsharp support open source if you want to see how",
    "start": "2642319",
    "end": "2647440"
  },
  {
    "text": "that's done the resharper and unity integration is also open source and there we actually have",
    "start": "2647440",
    "end": "2652480"
  },
  {
    "text": "a protocol extension into the unity editor as well and the azure tools for intel for rider",
    "start": "2652480",
    "end": "2659920"
  },
  {
    "text": "i'm actually working on that with with a colleague and we are in process of porting parts of",
    "start": "2659920",
    "end": "2665520"
  },
  {
    "text": "what we did on the front ends we're now also making sure that that runs on the resharper site so we can do more",
    "start": "2665520",
    "end": "2671440"
  },
  {
    "text": "interesting things with the codes you do in in functions for example but it's all open source if you want to",
    "start": "2671440",
    "end": "2677520"
  },
  {
    "text": "have a look at how it works how the protocol is generated uh that's all in there right we are 44 minutes in and i",
    "start": "2677520",
    "end": "2685280"
  },
  {
    "text": "mentioned in the talk title that this was going to be about microservices and 44 minutes later",
    "start": "2685280",
    "end": "2690319"
  },
  {
    "text": "we're done with the introduction here are the microservices",
    "start": "2690319",
    "end": "2695119"
  },
  {
    "text": "we already have microservices based on the fact that we have two processes we have intellij running we have",
    "start": "2695680",
    "end": "2701359"
  },
  {
    "text": "resharper running they communicate together and writer is the product that combines both",
    "start": "2701359",
    "end": "2706880"
  },
  {
    "text": "the nice thing about having those two processes is the fact that they each have their own 64 bits",
    "start": "2706880",
    "end": "2712160"
  },
  {
    "text": "memory space which means that intellij can use 64 bits resharper can do so and they can",
    "start": "2712160",
    "end": "2718960"
  },
  {
    "text": "garbage collect whenever they want independent from each other so if intellij has to ground garbage",
    "start": "2718960",
    "end": "2724000"
  },
  {
    "text": "collection be my guest you can do so if resharper wants to do so that can happen at any",
    "start": "2724000",
    "end": "2729200"
  },
  {
    "text": "point in time as well also brings a couple of complexities in terms of making sure that the protocol",
    "start": "2729200",
    "end": "2734319"
  },
  {
    "text": "can respond and doesn't time out but again that's something that the protocol handles for you so you don't have to",
    "start": "2734319",
    "end": "2739440"
  },
  {
    "text": "care the fact that these things are their own process also means that in theory they can run",
    "start": "2739440",
    "end": "2746160"
  },
  {
    "text": "on multiple cores if you have a multi-car machine which a lot of people have nowadays",
    "start": "2746160",
    "end": "2751200"
  },
  {
    "text": "so that means that one core can run resharper and one core can run intellij",
    "start": "2751200",
    "end": "2756400"
  },
  {
    "text": "both processes can start and stop independently and actually if you open up writer and you see the welcome screen",
    "start": "2756400",
    "end": "2762079"
  },
  {
    "text": "in there at that point in time only the intellij side of things has started it's only",
    "start": "2762079",
    "end": "2767680"
  },
  {
    "text": "when you start opening a solution or looking at the new item or new project templates",
    "start": "2767680",
    "end": "2772720"
  },
  {
    "text": "that we spin up the resharper host to make sure that we can provide that data to the front ends if you're debugging in",
    "start": "2772720",
    "end": "2780160"
  },
  {
    "text": "writer we're already at four processes you have intellij and resharper but also",
    "start": "2780160",
    "end": "2785280"
  },
  {
    "text": "your application that is running and to attach to your application we actually launch a third process that sits in between",
    "start": "2785280",
    "end": "2791920"
  },
  {
    "text": "resharper and your application so we can look at what is happening in the application pipe that into resharper",
    "start": "2791920",
    "end": "2797599"
  },
  {
    "text": "and resharper pipes it into the intellij side of things gets more interesting",
    "start": "2797599",
    "end": "2803440"
  },
  {
    "text": "we were thinking if our debugger already uses this thing and our debugger can contribute to the view model that",
    "start": "2803440",
    "end": "2809599"
  },
  {
    "text": "intellij and resharper share what if we could push more things into",
    "start": "2809599",
    "end": "2814880"
  },
  {
    "text": "that model what if more processes could subscribe to that model or maybe even contribute to that mod",
    "start": "2814880",
    "end": "2821359"
  },
  {
    "text": "and that's what we did with our wpf preview so if you're doing wpf in writer you get",
    "start": "2821359",
    "end": "2827920"
  },
  {
    "text": "saml editing you get refactoring in xaml and so on but you also get a xaml preview",
    "start": "2827920",
    "end": "2833200"
  },
  {
    "text": "the preview window is its own process whenever you open up a xaml window in",
    "start": "2833200",
    "end": "2839599"
  },
  {
    "text": "in writer and you open up that preview tab we actually launch a preview process that thing will read the xaml from the",
    "start": "2839599",
    "end": "2847680"
  },
  {
    "text": "current view model render everything as a bitmap push that back into the viewmodel and then writer",
    "start": "2847680",
    "end": "2852800"
  },
  {
    "text": "can show it there so we have something there this also means that if you're not using wpf or not doing anything wpf related",
    "start": "2852800",
    "end": "2860640"
  },
  {
    "text": "we also don't have to launch that entire process all we have to know is that there's xaml and when we open up xaml",
    "start": "2860640",
    "end": "2867520"
  },
  {
    "text": "and the preview we know we have to start that process and subscribe to the model",
    "start": "2867520",
    "end": "2872960"
  },
  {
    "text": "the view model is shared or can be shared across processes which means that if you have a solution",
    "start": "2872960",
    "end": "2880400"
  },
  {
    "text": "that contains rustling analyzers and a lot of people write their own analyzers in roslyn",
    "start": "2880400",
    "end": "2886079"
  },
  {
    "text": "writer is resharper based which means we don't use ruslin we have our own inspections and code analysis and code",
    "start": "2886079",
    "end": "2892000"
  },
  {
    "text": "completion and so on but still we wanted to be able to support custom extensions or custom",
    "start": "2892000",
    "end": "2897200"
  },
  {
    "text": "analyzers that people may have written so what we do is we look at the references of your projects",
    "start": "2897200",
    "end": "2902800"
  },
  {
    "text": "if we see there's ruslin analyzers in there we spin up a wrestling host the wrestling host also gets access to",
    "start": "2902800",
    "end": "2909359"
  },
  {
    "text": "that entire view model can subscribe to it but also contribute to it and when your wrestling analyzer has an",
    "start": "2909359",
    "end": "2915040"
  },
  {
    "text": "inspection to reports what it can do is simply again contribute an id name icon severity to the view model and",
    "start": "2915040",
    "end": "2922079"
  },
  {
    "text": "we can render it in writer same thing when you invoke it it shows up in the list you invoke that id",
    "start": "2922079",
    "end": "2928400"
  },
  {
    "text": "resharper knows it's not one of its own ids so it pipes it into the view model again and the rustling host can subscribe to",
    "start": "2928400",
    "end": "2934800"
  },
  {
    "text": "that event and do its thing with with the code base and do the exact same dance",
    "start": "2934800",
    "end": "2940400"
  },
  {
    "text": "so you can actually see this if you have a russell inspection and you open up a process monitor",
    "start": "2940400",
    "end": "2946160"
  },
  {
    "text": "you will see that a jetbrains.resharper.ruslan worker is being started and when you don't have those things",
    "start": "2946160",
    "end": "2952240"
  },
  {
    "text": "that thing will not be started so it really depends on what you have in the projects",
    "start": "2952240",
    "end": "2958160"
  },
  {
    "text": "right we have that protocol we can share view models it's all socket based which also means",
    "start": "2958160",
    "end": "2964160"
  },
  {
    "text": "that in theory we can run across network boundaries on multiple machines and actually",
    "start": "2964160",
    "end": "2970000"
  },
  {
    "text": "if you do docker debugging or remote debugging that is what is happening we ship the debugger process into your",
    "start": "2970000",
    "end": "2975760"
  },
  {
    "text": "docker vm we attach to your application running in docker and that thing is all communicating using the same view",
    "start": "2975760",
    "end": "2982480"
  },
  {
    "text": "model and reporting everything back to uh to the writer ide so that's kind of cool unity",
    "start": "2982480",
    "end": "2988960"
  },
  {
    "text": "same thing unity is probably our most insane implementation of how we use",
    "start": "2988960",
    "end": "2994480"
  },
  {
    "text": "the protocol because you have writer we have a unity plugin to writer but we also have a",
    "start": "2994480",
    "end": "3001040"
  },
  {
    "text": "unity plugin to the unity editor which is not from jetbrains but we have to plug in there to get certain information so what",
    "start": "3001040",
    "end": "3007520"
  },
  {
    "text": "we do is we have a shared view model with that unity editor we also have a shared view model with",
    "start": "3007520",
    "end": "3014559"
  },
  {
    "text": "the game that you are developing in the unity editor we also have a debugger process",
    "start": "3014559",
    "end": "3020400"
  },
  {
    "text": "listening to that application but also listening to resharper so it's really view model shared across many many",
    "start": "3020400",
    "end": "3026400"
  },
  {
    "text": "microservices now the cool thing about doing this and again this is open source if you want to look into how this was done",
    "start": "3026400",
    "end": "3033119"
  },
  {
    "text": "the cool thing about this is that none of these things have to know about request response they just subscribe to",
    "start": "3033119",
    "end": "3039839"
  },
  {
    "text": "the view model and again you don't have to be aware of everything that goes on under the covers if you are developing",
    "start": "3039839",
    "end": "3046640"
  },
  {
    "text": "for this plugin nice thing is we can do some very cool things like for example this is writer",
    "start": "3046640",
    "end": "3052720"
  },
  {
    "text": "and what we do is we are doing a find usages on a button click handler",
    "start": "3052720",
    "end": "3058000"
  },
  {
    "text": "now this is all on the c-sharp side of things but that button itself will be a visual elements that you may",
    "start": "3058000",
    "end": "3064240"
  },
  {
    "text": "have in your unity3d game so what we can do by having that view model by sharing all of this data",
    "start": "3064240",
    "end": "3070880"
  },
  {
    "text": "through that view model is that when we find usages of that button click handler and i'll play the video so you can see",
    "start": "3070880",
    "end": "3077119"
  },
  {
    "text": "it what will happen is if we do a find usages we jump to the unity editor and we immediately highlight that button that",
    "start": "3077119",
    "end": "3083599"
  },
  {
    "text": "you subscribe this thing to in the game engine that's uh that's one of the really",
    "start": "3083599",
    "end": "3089680"
  },
  {
    "text": "nice ways i think of of using this protocol right so let's talk a little bit about",
    "start": "3089680",
    "end": "3096880"
  },
  {
    "text": "the future we've seen what is in there now um the fact that we have this protocol also made us think about",
    "start": "3096880",
    "end": "3102960"
  },
  {
    "text": "certain things that we could do in the future some of the things that i'm about to show you",
    "start": "3102960",
    "end": "3108240"
  },
  {
    "text": "are in writer partially in writer others may never see the light of day so",
    "start": "3108240",
    "end": "3113440"
  },
  {
    "text": "be advised this is all um partially playing with the protocol partially",
    "start": "3113440",
    "end": "3118480"
  },
  {
    "text": "actually implementation in the product but also partial just thinking what we can do with it right",
    "start": "3118480",
    "end": "3125760"
  },
  {
    "text": "we are thinking about and actually already using this one modeling views i mentioned that we have resharper and",
    "start": "3125760",
    "end": "3132079"
  },
  {
    "text": "in resharper we may have a c-sharp interactive settings tool window well we want to",
    "start": "3132079",
    "end": "3137200"
  },
  {
    "text": "have that in writer and in resharper so why would we have to build this ui in swing on the java site and in wpf on",
    "start": "3137200",
    "end": "3145599"
  },
  {
    "text": "the resharper side what if we could have a code generator for that ui that we can simply pipe headers uh",
    "start": "3145599",
    "end": "3153599"
  },
  {
    "text": "lines string options boolean options ss radio buttons and so on on that protocol",
    "start": "3153599",
    "end": "3158880"
  },
  {
    "text": "and render that regardless of which ui is rendering it and we're actually using this already so that's uh that's a cool",
    "start": "3158880",
    "end": "3165760"
  },
  {
    "text": "addition that we made there the multiple machine story is also interesting this is pure speculation",
    "start": "3165760",
    "end": "3172880"
  },
  {
    "text": "but what if you were developing on a mac but you had a windows vm somewhere or an",
    "start": "3172880",
    "end": "3179760"
  },
  {
    "text": "actual windows machine somewhere what if we could run that wpf renderer process on a",
    "start": "3179760",
    "end": "3185280"
  },
  {
    "text": "different machine and just pipe that bitmap as a preview to your mac os x machine that would be really nice",
    "start": "3185280",
    "end": "3192079"
  },
  {
    "text": "because that would mean you could build windows desktop applications in writer on your mac get a preview from windows",
    "start": "3192079",
    "end": "3199599"
  },
  {
    "text": "but still develop everything on your mac another idea that we may or may not be",
    "start": "3199599",
    "end": "3205680"
  },
  {
    "text": "working on is having the front end on one machine and the back end on another",
    "start": "3205680",
    "end": "3210800"
  },
  {
    "text": "what if there could be a very beefy machine in your home network or in a cloud",
    "start": "3210800",
    "end": "3216240"
  },
  {
    "text": "somewhere that could run your entire resharper backends and you have intellij subscribing to the view model that that",
    "start": "3216240",
    "end": "3222319"
  },
  {
    "text": "thing exposes so that's also something that may happen or may not happen",
    "start": "3222319",
    "end": "3228160"
  },
  {
    "text": "this is one of the crazier ideas and this is definitely one that we're not pursuing one of the ideas that we had",
    "start": "3228160",
    "end": "3234559"
  },
  {
    "text": "was what if we extend all of our ids with this process or with this protocol and make every ide",
    "start": "3234559",
    "end": "3240880"
  },
  {
    "text": "both the client and the server and expose the view model and subscribe to that view model",
    "start": "3240880",
    "end": "3247440"
  },
  {
    "text": "a couple of interesting scenarios there could be that if you have visual studio with the resharper plugin resharper",
    "start": "3247440",
    "end": "3254319"
  },
  {
    "text": "could launch webstorm in the backgrounds subscribe to the view model and sync everything that is required with",
    "start": "3254319",
    "end": "3260400"
  },
  {
    "text": "webstorm and pipe all of that back into visual studio what if webstorm also could subscribe to",
    "start": "3260400",
    "end": "3267920"
  },
  {
    "text": "everything that is in resharper and maybe handle the occasional razer templates while you have visual studio running and",
    "start": "3267920",
    "end": "3274400"
  },
  {
    "text": "resharper in there so every ide has a client and a server we actually did some experiments with this",
    "start": "3274400",
    "end": "3280799"
  },
  {
    "text": "um actually saw an internal demo at some point where we had webstorm subscribed to the writer protocol and",
    "start": "3280799",
    "end": "3288240"
  },
  {
    "text": "have syntax highlighting and refactorings for 4c sharp inside of webstorm",
    "start": "3288240",
    "end": "3294000"
  },
  {
    "text": "we didn't ship it reason for that is it's way too complex to maintain across all of the ids but still it was a very",
    "start": "3294000",
    "end": "3299920"
  },
  {
    "text": "cool tech demo and there was something in this idea but i don't think this is going to happen in",
    "start": "3299920",
    "end": "3305119"
  },
  {
    "text": "the end but it's still nice right so uh in summary of this entire talk um i",
    "start": "3305119",
    "end": "3312000"
  },
  {
    "text": "know a lot of this is not gonna be a practical use what i wanted to do was give you a bit of background on",
    "start": "3312000",
    "end": "3317920"
  },
  {
    "text": "what rider is and how it is built and that it's really two ideas communicating together across two",
    "start": "3317920",
    "end": "3323680"
  },
  {
    "text": "different technology stacks as a side effect we have that protocol now and we started thinking about what",
    "start": "3323680",
    "end": "3329680"
  },
  {
    "text": "we can do with that protocol which additional processes can we spin up on demand and share that protocol to contribute to",
    "start": "3329680",
    "end": "3336880"
  },
  {
    "text": "either side of the ide and maybe even build micro uis on top",
    "start": "3336880",
    "end": "3342319"
  },
  {
    "text": "if there's anything you take away from this talk try writer if you want it because there's a lot of technical stuff happening on the",
    "start": "3342319",
    "end": "3348960"
  },
  {
    "text": "background and it's really interesting to uh know and learn a little bit about that as well with that",
    "start": "3348960",
    "end": "3354880"
  },
  {
    "text": "thank you and i'll i'll see the questions in slack and on webex now",
    "start": "3354880",
    "end": "3363838"
  },
  {
    "text": "right there is one question about um 50 projects in our solution and resharper",
    "start": "3365280",
    "end": "3370559"
  },
  {
    "text": "in there and resharper is slowing down the development process inside of visual studio so",
    "start": "3370559",
    "end": "3375920"
  },
  {
    "text": "is writer the answer writer is an answer i would say so definitely give it a try",
    "start": "3375920",
    "end": "3381440"
  },
  {
    "text": "if you want to try it the downside is it's a different ide you have muscle memory maybe you",
    "start": "3381440",
    "end": "3387280"
  },
  {
    "text": "have to relearn how you use your ide so if you're interested in that try writer if not",
    "start": "3387280",
    "end": "3394000"
  },
  {
    "text": "being me and i'll actually post a link in slack later on we have a unconventional way of adding a",
    "start": "3394000",
    "end": "3401559"
  },
  {
    "text": "directory.builds.targets file next to your solution where we disable parts of what visual studio is",
    "start": "3401559",
    "end": "3407280"
  },
  {
    "text": "doing and give resharper a little bit more memory may work for you may not work for you so",
    "start": "3407280",
    "end": "3412799"
  },
  {
    "text": "why there is an answer maybe not the answer you'll have to see",
    "start": "3412799",
    "end": "3419839"
  },
  {
    "text": "any other questions see a couple people are typing",
    "start": "3420240",
    "end": "3433838"
  },
  {
    "text": "and the moment i say they are typing the typing mark disappears of course",
    "start": "3434720",
    "end": "3440799"
  },
  {
    "text": "yeah could i just ask you what's the idea of trying to make it",
    "start": "3440960",
    "end": "3446240"
  },
  {
    "text": "so that you can use the different processes across the internet or on a network",
    "start": "3446240",
    "end": "3452400"
  },
  {
    "text": "do you want to connect several people to the same editor at once or is it just a because you can is",
    "start": "3452559",
    "end": "3460559"
  },
  {
    "text": "is this a trick question to ask if something like life share is coming from later",
    "start": "3460559",
    "end": "3466079"
  },
  {
    "text": "maybe then the answer is maybe yeah well anyway it's it seems very",
    "start": "3466079",
    "end": "3474000"
  },
  {
    "text": "cool and nobody's ever done this before uh to my knowledge so they're breaking",
    "start": "3474000",
    "end": "3480079"
  },
  {
    "text": "the ground here yeah so um taking on to that previous question about resharper",
    "start": "3480079",
    "end": "3485520"
  },
  {
    "text": "um i mentioned the start that one of the reasons that resharper and visual studio are having",
    "start": "3485520",
    "end": "3490559"
  },
  {
    "text": "issues together depending on size and so on is that there's limited memory space available and you see that microsoft is",
    "start": "3490559",
    "end": "3497200"
  },
  {
    "text": "moving processes out of process and we are doing the same so essentially we are rebuilding right",
    "start": "3497200",
    "end": "3502559"
  },
  {
    "text": "or now inside of resharper so that we can have uh resharper run out of processing visual studio as well",
    "start": "3502559",
    "end": "3509119"
  },
  {
    "text": "that's uh that's taking longer than we anticipated because there's lots of things with com interrupt and so on that we have to",
    "start": "3509119",
    "end": "3515520"
  },
  {
    "text": "bridge there so that's uh maybe an idea for an ndc next year or the year thereafter",
    "start": "3515520",
    "end": "3523359"
  }
]