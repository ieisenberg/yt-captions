[
  {
    "text": "hi everybody my mic is on how is everyone today asleep after lunch whoa a bit of energy",
    "start": "3020",
    "end": "10130"
  },
  {
    "text": "yes have you had some of that coffee that they're serving from the cart Wow",
    "start": "10130",
    "end": "16309"
  },
  {
    "text": "Walter's gonna go really quickly thank you all for coming along I hope you've",
    "start": "16309",
    "end": "22580"
  },
  {
    "text": "been having a good time day and a half a one and a half days into in DC Oslo for 2018 some quick introductions my name is",
    "start": "22580",
    "end": "30589"
  },
  {
    "text": "Matt Barrett I'm a co-founder of adaptive adaptive consulting my name is bhavish and I had UI adaptive so we're",
    "start": "30589",
    "end": "37670"
  },
  {
    "text": "going to do a talk in two parts I'm gonna spend the first 20 25 minutes talking about real-time streaming you",
    "start": "37670",
    "end": "44870"
  },
  {
    "text": "eyes and why they're relevant for our business domain which I'll get into in a minute and hopefully we'll convince you why",
    "start": "44870",
    "end": "50960"
  },
  {
    "text": "they will become relevant for your business domain and the apps you were building a new for you or for the",
    "start": "50960",
    "end": "56000"
  },
  {
    "text": "companies you're working for at the moment and embeds gonna take over it's been the last 20 25 minutes talking",
    "start": "56000",
    "end": "61310"
  },
  {
    "text": "about the UI architecture we use to manage the complexity of all these real-time streaming things so they don't",
    "start": "61310",
    "end": "68329"
  },
  {
    "text": "get too too complicated so adaptive is a finite consultancy working in financial",
    "start": "68329",
    "end": "75320"
  },
  {
    "text": "services capital and commodity trading markets so we focus on real-time trading I'll talk about what that is in a minute",
    "start": "75320",
    "end": "82009"
  },
  {
    "text": "we think that what we're doing in terms of how we put together you eyes is pretty state-of-the-art for the domain",
    "start": "82009",
    "end": "88460"
  },
  {
    "text": "we work in and we would love to chat more and of course I would be remiss to say to not say while I'm on stage and",
    "start": "88460",
    "end": "94939"
  },
  {
    "text": "have you or your attention we're hiring so this is really cool come and have a chat so what is real-time trading well",
    "start": "94939",
    "end": "104749"
  },
  {
    "text": "trading when we say trading we mean the buying and selling of goods I have some",
    "start": "104749",
    "end": "109850"
  },
  {
    "text": "grain you have some money we exchange I have some euros you have some kronor we",
    "start": "109850",
    "end": "115939"
  },
  {
    "text": "exchange that's that that used to happen with people coming to one place a market place and physically being near each",
    "start": "115939",
    "end": "122450"
  },
  {
    "text": "other and those contracts were entered into verbally and in real time you would look the other person in the eye shake",
    "start": "122450",
    "end": "128509"
  },
  {
    "text": "their hand and exchange it was quite reputationally based if you got a reputation for going to the marketplace",
    "start": "128509",
    "end": "134210"
  },
  {
    "text": "and surfing on the deals you amazing people would stop trading you but as we move all of trading and it",
    "start": "134210",
    "end": "140580"
  },
  {
    "text": "becomes electronic we still have to provide that same real-time guarantee once you click a button and you buy and",
    "start": "140580",
    "end": "148170"
  },
  {
    "text": "sell and the contract is entered into based on whether you get a confirmation or a rejection that's legally binding",
    "start": "148170",
    "end": "153390"
  },
  {
    "text": "this is quite different from most online e-commerce this is very different from Amazon you can go to Amazon decide that",
    "start": "153390",
    "end": "160620"
  },
  {
    "text": "you want to buy some new skis for the winter season click buy on your favorite pier and two days later they send you an",
    "start": "160620",
    "end": "166230"
  },
  {
    "text": "email saying we're really sorry we don't have those skis in stock anymore would you like some buy some others it's a",
    "start": "166230",
    "end": "171690"
  },
  {
    "text": "very different thing that goes on when you trade for Efex or equities or when",
    "start": "171690",
    "end": "177360"
  },
  {
    "text": "you go and stand in a marketplace and buy and sell and exchange right there and then so when you need to provide",
    "start": "177360",
    "end": "182610"
  },
  {
    "text": "those sorts of what we call real time transactional guarantees you take very",
    "start": "182610",
    "end": "188370"
  },
  {
    "text": "different engineering approaches and that's what we're going to talk about but why a whole business so this is",
    "start": "188370",
    "end": "195630"
  },
  {
    "text": "adaptive belief we believe that market forces and real-time trading technology are fundamentally changing the way",
    "start": "195630",
    "end": "200970"
  },
  {
    "text": "business is conducted within financial services capital and commodity markets that's what we do as a consultancy but I",
    "start": "200970",
    "end": "207240"
  },
  {
    "text": "think this is going to happen everywhere I think more and more commerce will",
    "start": "207240",
    "end": "212760"
  },
  {
    "text": "happen online and people will demand that it happens in a real-time fashion that you get a guarantee when you click",
    "start": "212760",
    "end": "218700"
  },
  {
    "text": "a button and by not oh I'm sorry it's a bit difficult to figure out how much",
    "start": "218700",
    "end": "223709"
  },
  {
    "text": "stock is there is in the warehouse right now so we're just going to sell you something and hope this some and fulfill the order later on there's a very",
    "start": "223709",
    "end": "229020"
  },
  {
    "text": "different thing when we build these sorts of applications though that manage it so and to solve these problems these",
    "start": "229020",
    "end": "236760"
  },
  {
    "text": "sort of real-time guarantees we deal a lot with streams we have streams of prices streams of interactivity streams",
    "start": "236760",
    "end": "242730"
  },
  {
    "text": "of lots of different complies and dealing with all those streams can be quite difficult and bringing all those",
    "start": "242730",
    "end": "248310"
  },
  {
    "text": "streams together they can be composed in different ways those streams can go really fast those streams can go really",
    "start": "248310",
    "end": "253500"
  },
  {
    "text": "slow but all of them add complexity and they also have quite an impact on performance so what we're going to talk",
    "start": "253500",
    "end": "261480"
  },
  {
    "text": "about today is real-time streaming web applications the talk was called event-driven you eyes until someone",
    "start": "261480",
    "end": "268050"
  },
  {
    "text": "pointed out to me quite rightly but pretty much soon user interfaces were being built in software that they were of increment",
    "start": "268050",
    "end": "274320"
  },
  {
    "text": "that you click a button and event is raised your code handles it so what we really mean is you is with lots and lots",
    "start": "274320",
    "end": "279960"
  },
  {
    "text": "of data being streamed to them from the back end and we've got a demo coming up in a minute so we're gonna talk through one of those",
    "start": "279960",
    "end": "286140"
  },
  {
    "text": "we're gonna talk about or beds going to talk about embracing streams and coming",
    "start": "286140",
    "end": "291480"
  },
  {
    "text": "to deal with the fact that once you see a stream and understand how to work with it really elegantly you see streams all around you and then managing the",
    "start": "291480",
    "end": "298080"
  },
  {
    "text": "complexity of those in your application we're also going to talk about the fact that when you have a stream of events",
    "start": "298080",
    "end": "303330"
  },
  {
    "text": "they have a temporal component they have a frequency that varies over time and that's something that's really",
    "start": "303330",
    "end": "309090"
  },
  {
    "text": "interesting and important and needs to be dealt with explicitly we're also going to talk about performance and then we'll wrap up with some questions at the",
    "start": "309090",
    "end": "315540"
  },
  {
    "text": "end so a demo so we have built an",
    "start": "315540",
    "end": "323670"
  },
  {
    "text": "application this is reactive trader",
    "start": "323670",
    "end": "328740"
  },
  {
    "text": "cloud this is an open source application that we've built to show people the sort of things that we do for our clients",
    "start": "328740",
    "end": "334650"
  },
  {
    "text": "most of the client most of the applications we build are either internal applications for our clients or",
    "start": "334650",
    "end": "340280"
  },
  {
    "text": "they are client facing public but we're not legally allowed to say that we built it which is a bit of a shame that means",
    "start": "340280",
    "end": "346590"
  },
  {
    "text": "we don't get to come to conferences and talk about the cool stuff we build so so that we had something to say we built this this is open source it's on github",
    "start": "346590",
    "end": "353730"
  },
  {
    "text": "the URL was on the previous slide and we'll make sure you get the URL towards the end but this is a very simple ethics",
    "start": "353730",
    "end": "361500"
  },
  {
    "text": "or foreign exchange single dealer platform so what's foreign exchange if",
    "start": "361500",
    "end": "367380"
  },
  {
    "text": "it's foreign exchange is the act of doing what I did on Tuesday night when I flew out from from London of taking my",
    "start": "367380",
    "end": "374790"
  },
  {
    "text": "British pounds and buying some kroner so that I have some money to spend on beer while I was over here that really small",
    "start": "374790",
    "end": "381360"
  },
  {
    "text": "effects transaction gets added together with other people at the airport doing the same gets added together with other",
    "start": "381360",
    "end": "387660"
  },
  {
    "text": "companies small medium large doing the same for the various reasons they have to do it gets added together with governments doing the same sort of thing",
    "start": "387660",
    "end": "394260"
  },
  {
    "text": "to manage the effects transactions and all of that adds up to quite a lot per day the last time there was a survey",
    "start": "394260",
    "end": "401190"
  },
  {
    "text": "done on had the volume of trades being done in the FX market was in 2016 it's done",
    "start": "401190",
    "end": "407870"
  },
  {
    "text": "every three years and it was five trillion US dollars a day five trillion",
    "start": "407870",
    "end": "414800"
  },
  {
    "text": "a day that's massive scale no matter which way you cut it I mean Google and Facebook have huge scale five trillion",
    "start": "414800",
    "end": "422120"
  },
  {
    "text": "dollars a day is also quite a bit of scale so these FX SDPs there's lots of them",
    "start": "422120",
    "end": "427850"
  },
  {
    "text": "around market participants big investment banks are smaller firms big",
    "start": "427850",
    "end": "433310"
  },
  {
    "text": "firms that have that have very complex cash flows like say Apple for example have variants of this that they use to",
    "start": "433310",
    "end": "438710"
  },
  {
    "text": "do achieve different things and they all look and sound although those sound they",
    "start": "438710",
    "end": "443840"
  },
  {
    "text": "all look sort of similar they have four key components that you can see here and",
    "start": "443840",
    "end": "449360"
  },
  {
    "text": "the top left is pricing so these are streams of prices coming into the UI",
    "start": "449360",
    "end": "454810"
  },
  {
    "text": "that are updated multiple times a second sometimes and can be updated far more",
    "start": "454810",
    "end": "460100"
  },
  {
    "text": "than that they can also stop being updated which is an interesting problem we'll come back to in a minute but the whole thing here the whole architecture",
    "start": "460100",
    "end": "466880"
  },
  {
    "text": "of this application is based on top of streams there's no rest API behind this it's just a WebSocket that we connect to",
    "start": "466880",
    "end": "472760"
  },
  {
    "text": "and we get streamed all these different bits of data we can have prices streams",
    "start": "472760",
    "end": "479240"
  },
  {
    "text": "to the UI we can decide that we want to trade 10 million euros we can sell we",
    "start": "479240",
    "end": "489470"
  },
  {
    "text": "get trade appearing in what is down the bottom here called a blotter this is",
    "start": "489470",
    "end": "494750"
  },
  {
    "text": "just a record of all the previous trades that have been done I'll show you that again so we can buy we see the traders",
    "start": "494750",
    "end": "500510"
  },
  {
    "text": "executing while we wait for the response to come back from the server then we get the confirmation giving us the final details of what happened",
    "start": "500510",
    "end": "506450"
  },
  {
    "text": "so that's prices being streamed to the UI and us clicking about and sending off another event and listening to another",
    "start": "506450",
    "end": "513050"
  },
  {
    "text": "stream of trade results coming back into the UI we have the blotter down the bottom which shows everything we've done",
    "start": "513050",
    "end": "519800"
  },
  {
    "text": "in the past and then on the right-hand side we've got analytics analytics panel",
    "start": "519800",
    "end": "524840"
  },
  {
    "text": "talking about the profit and loss so since I started I'm up fifteen million u.s. dollars if that was true I wouldn't",
    "start": "524840",
    "end": "531620"
  },
  {
    "text": "be here but these are none of these prices are real just toy you that URL is live you can go",
    "start": "531620",
    "end": "539630"
  },
  {
    "text": "to that on your phone if you and it's all connected to the backend so if you went to that on your phone and did a",
    "start": "539630",
    "end": "544700"
  },
  {
    "text": "trade in the blotter we would see the trades you're doing so it's all connected to a single backing none of this is happening just like within the",
    "start": "544700",
    "end": "551120"
  },
  {
    "text": "browser or faked or anything like that what's interesting about this UI is that",
    "start": "551120",
    "end": "556850"
  },
  {
    "text": "the three or four different functionalities that I talked about that we can that we can break apart by",
    "start": "556850",
    "end": "562010"
  },
  {
    "text": "pulling out bits of the UI and pulling",
    "start": "562010",
    "end": "567110"
  },
  {
    "text": "out the analytics panel pulling out the",
    "start": "567110",
    "end": "573320"
  },
  {
    "text": "blotter excuse me as I",
    "start": "573320",
    "end": "580690"
  },
  {
    "text": "have all these different bits of the UI these will map to different back-end services micro services which will come",
    "start": "585980",
    "end": "591470"
  },
  {
    "text": "back and talk about in a minute but they also map to the different parts of the organization so in any large financial",
    "start": "591470",
    "end": "597019"
  },
  {
    "text": "organization you some people are doing trades very cool you will have a big",
    "start": "597019",
    "end": "603529"
  },
  {
    "text": "group of the organization responsible for the prices getting the prices onto the UI and a big bank they could be four",
    "start": "603529",
    "end": "610189"
  },
  {
    "text": "or five hundred people responsible just for that little bit of functionality when you click the button and trade there's a another organization that's",
    "start": "610189",
    "end": "617269"
  },
  {
    "text": "responsible for making sure that when you do a trade you have the appropriate amount of credit that you're not making",
    "start": "617269",
    "end": "622850"
  },
  {
    "text": "the bank lose too much money just like in gambling the house always wins the and making sure that you",
    "start": "622850",
    "end": "629049"
  },
  {
    "text": "unknown to the bank and whole bunch of other things the blotter that we can see filling up with all these people trading",
    "start": "629049",
    "end": "634639"
  },
  {
    "text": "which is really cool we will be another two three hundred people providing functionality and services around what",
    "start": "634639",
    "end": "641269"
  },
  {
    "text": "you can do once a trade has been done and then on the right hand side we have analytics another two three hundred",
    "start": "641269",
    "end": "648350"
  },
  {
    "text": "people providing research news commentary analysis all sorts of things to either make you trade more or just to",
    "start": "648350",
    "end": "653929"
  },
  {
    "text": "give if you're a big corporate give you an insight into which way the market might be moving to tell you whether or",
    "start": "653929",
    "end": "658970"
  },
  {
    "text": "not you should buy yourself today or hold off a month so the backend architecture maps to the business and",
    "start": "658970",
    "end": "665629"
  },
  {
    "text": "the front-end architecture match the backend architecture which is which is quite nice but what we really want to",
    "start": "665629",
    "end": "673189"
  },
  {
    "text": "kind of highlight here is that all these things as I mentioned a streaming let's",
    "start": "673189",
    "end": "678470"
  },
  {
    "text": "pop all this back in so that I can do what I need to do all these different",
    "start": "678470",
    "end": "685480"
  },
  {
    "text": "parts of the UI all the bits of data flowing into the UI are streaming and some aspects of those streams are really",
    "start": "685480",
    "end": "692600"
  },
  {
    "text": "interesting so every now and then you'll see and now that I mention it probably won't happen you'll see one of these",
    "start": "692600",
    "end": "697999"
  },
  {
    "text": "pricing tiles flash red that means that the price is stale",
    "start": "697999",
    "end": "703069"
  },
  {
    "text": "what does stale mean well in our world we expect those prices to be to be",
    "start": "703069",
    "end": "708980"
  },
  {
    "text": "refreshed every four seconds there we go one of them just flashed red we expect those prices to be refreshed every four",
    "start": "708980",
    "end": "714499"
  },
  {
    "text": "seconds and if it hasn't been that probably means that there's something gone wrong and then if you tried to",
    "start": "714499",
    "end": "719509"
  },
  {
    "text": "trade on that price the bank would reject you so instead of letting you do something that",
    "start": "719509",
    "end": "724520"
  },
  {
    "text": "we think might fail we stopped you from trading and then when the new price comes through we pull down the red error",
    "start": "724520",
    "end": "730490"
  },
  {
    "text": "and and show you the right behavior now if we is it GPB JPY whoops",
    "start": "730490",
    "end": "740270"
  },
  {
    "text": "do you know what price it was its where the Japanese Euro JPY",
    "start": "740270",
    "end": "745640"
  },
  {
    "text": "so when we click a button and try to trade it's pretty obvious that that is",
    "start": "745640",
    "end": "751520"
  },
  {
    "text": "really important here we're doing a million see what happens if we do 50",
    "start": "751520",
    "end": "758030"
  },
  {
    "text": "million when I click a button and try to buy or sell 50 million dollars 50",
    "start": "758030",
    "end": "763460"
  },
  {
    "text": "million euros worth of anything I really want the system to tell me what's going on with that it's not okay for it just",
    "start": "763460",
    "end": "768650"
  },
  {
    "text": "to timeout you go silent for me to have to refresh my browser I would be very very concerned especially if the markets",
    "start": "768650",
    "end": "775190"
  },
  {
    "text": "moving really quickly people are yelling and screaming at me I would if the system failed on me I would probably",
    "start": "775190",
    "end": "780770"
  },
  {
    "text": "stop using it the next day because I just was made so stressed and so unhappy so what sort of that's that's part of",
    "start": "780770",
    "end": "787460"
  },
  {
    "text": "the business domain and how does that reflect on the technology that we build well when we do a trade we usually get really quick response",
    "start": "787460",
    "end": "794120"
  },
  {
    "text": "from the server which you can see when we do a trade on gbp/jpy we get rejected straight away but here",
    "start": "794120",
    "end": "799780"
  },
  {
    "text": "we break for SLA for how quickly sorry about that how quickly the trade should be should",
    "start": "799780",
    "end": "806990"
  },
  {
    "text": "be done we should get a response from the server in four seconds to tell us if the trade was accepted or if the trade",
    "start": "806990",
    "end": "812840"
  },
  {
    "text": "was rejected but we don't in this case we get it I think it's after seven seconds so the UI tells us we're",
    "start": "812840",
    "end": "818960"
  },
  {
    "text": "executing tells us that's why is it taken too long to respond and then we get the response and we just go and tell",
    "start": "818960",
    "end": "824480"
  },
  {
    "text": "the user that the trade is actually completed acceptable now that's all",
    "start": "824480",
    "end": "829670"
  },
  {
    "text": "events and streaming and we're gonna talk about how we manage all that complexity in the UI a little bit later",
    "start": "829670",
    "end": "835100"
  },
  {
    "text": "on but just think about how much bookkeeping you would need to do in normal procedural code written in",
    "start": "835100",
    "end": "842030"
  },
  {
    "text": "JavaScript to keep track of all those timers make sure that you didn't have any bugs make sure that you could test",
    "start": "842030",
    "end": "847100"
  },
  {
    "text": "it that it was doing the right thing before you put her into production and found out that it was all going wrong the other thing I wanted to highlight",
    "start": "847100",
    "end": "853100"
  },
  {
    "text": "well I have you all here on the demo is this little thing down the bottom ah hopefully you can see that is wow that",
    "start": "853100",
    "end": "863360"
  },
  {
    "text": "is a that is the health of all the",
    "start": "863360",
    "end": "868370"
  },
  {
    "text": "different back-end services that we talked about so there's a pricing instance reference instance blotter",
    "start": "868370",
    "end": "873470"
  },
  {
    "text": "execution analytics I just talked about what all those are and we have one instance of those each running if later",
    "start": "873470",
    "end": "881509"
  },
  {
    "text": "on when Bevers playing around with how we do resiliency and failure you'll see those change so we'll come back to this",
    "start": "881509",
    "end": "887980"
  },
  {
    "text": "[Music] but given that we've just showed you that it's probably useful to show you",
    "start": "887980",
    "end": "895190"
  },
  {
    "text": "the overall architecture so here we see the high level architecture of of",
    "start": "895190",
    "end": "901370"
  },
  {
    "text": "reactive trader cloud and I don't want to talk about this too much because we really want to focus on the UI and how we build how we handle the complexity in",
    "start": "901370",
    "end": "907339"
  },
  {
    "text": "the UI but the overall architecture remember this is all open source this isn't for sale this is free you get to",
    "start": "907339",
    "end": "912800"
  },
  {
    "text": "go home and play around with us and we really would love you to and give us feedback we have an html5 UI written in",
    "start": "912800",
    "end": "918199"
  },
  {
    "text": "react Redux with our XJS which we're about to talk about in a lot more detail we have a WebSocket broker then we have",
    "start": "918199",
    "end": "924529"
  },
  {
    "text": "a bunch of dot beckoned micro services each responsible for a single bit of functionality in the application they",
    "start": "924529",
    "end": "931850"
  },
  {
    "text": "are written in the open source code you'll find they're written in dotnet running on dotnet core packaged within",
    "start": "931850",
    "end": "940009"
  },
  {
    "text": "docker containers and the web version that you're all playing with at the moment is running on Google container",
    "start": "940009",
    "end": "946759"
  },
  {
    "text": "services and four possessed for persistence we have events tour so that's events tour is a event sourced",
    "start": "946759",
    "end": "953180"
  },
  {
    "text": "style database and it's an open source product and the point to make here is",
    "start": "953180",
    "end": "958880"
  },
  {
    "text": "that this whole architecture is reactive and streaming and event driven into end we don't really put the data we don't",
    "start": "958880",
    "end": "965959"
  },
  {
    "text": "really put any of the data into a database and then poll see if it's changed or anything like that the whole thing just kind of streams all",
    "start": "965959",
    "end": "972350"
  },
  {
    "text": "the way around so that's what we do",
    "start": "972350",
    "end": "978829"
  },
  {
    "text": "today but it's not always been that that easy and inverted",
    "start": "978829",
    "end": "985340"
  },
  {
    "text": "back in the early 2000s too late 2008 2010 period when we were building things",
    "start": "985340",
    "end": "992180"
  },
  {
    "text": "with with this sort of technology stack it was really really painful to do anything with streaming and getting it",
    "start": "992180",
    "end": "998840"
  },
  {
    "text": "working was your primary concern you didn't worry too much about whether it was elegant or whether it was",
    "start": "998840",
    "end": "1004779"
  },
  {
    "text": "maintainable whether it looked good you just wanted it to work because this was really enabling participants in the",
    "start": "1004779",
    "end": "1013420"
  },
  {
    "text": "market to trade with their customers electronically something which they hadn't been able to do up until about the mid to late 90s it was a really",
    "start": "1013420",
    "end": "1019839"
  },
  {
    "text": "really new novel part of their business this is this sort of technology charts the rise of internet e-commerce overall",
    "start": "1019839",
    "end": "1026699"
  },
  {
    "text": "you had a separation typically between the streaming parts of your application and the non streaming parts of your",
    "start": "1026699",
    "end": "1032860"
  },
  {
    "text": "application and that separation made the architectures really brittle with very strange failure modes where different",
    "start": "1032860",
    "end": "1038530"
  },
  {
    "text": "bits would come up and go down it would be really hard to understand what was going on once people got sick of",
    "start": "1038530",
    "end": "1046990"
  },
  {
    "text": "battling HTML to do something that really wasn't meant to at that period of time the rich Internet application era",
    "start": "1046990",
    "end": "1053260"
  },
  {
    "text": "started so I'm sure people remember Silverlight I hope a trysts well and",
    "start": "1053260",
    "end": "1059770"
  },
  {
    "text": "Adobe flex as well any Silverlight and flex developers in here I used to do a bit of Silverlight back in the day we go",
    "start": "1059770",
    "end": "1066520"
  },
  {
    "text": "those were some good times at the same time that these technologies came out",
    "start": "1066520",
    "end": "1072250"
  },
  {
    "text": "the way we built applications changed as well it went from being just kissing it working because the technology was a bit",
    "start": "1072250",
    "end": "1078730"
  },
  {
    "text": "a bit crap to trying to make the experiences far more user experience led make them look good I can functional",
    "start": "1078730",
    "end": "1085179"
  },
  {
    "text": "make them easy for the users to understand and what banks were trying to",
    "start": "1085179",
    "end": "1091600"
  },
  {
    "text": "do was deliver over the web and ability to elect trade electronically with their clients but today we use of the projects",
    "start": "1091600",
    "end": "1100720"
  },
  {
    "text": "we build we see a split of about 20% anger 80% react and we don't think we",
    "start": "1100720",
    "end": "1107590"
  },
  {
    "text": "don't we don't really have a preference when we when we engage with our clients about which is better both have their their pros and their cons but the thing",
    "start": "1107590",
    "end": "1113920"
  },
  {
    "text": "about them that is both that is really interesting compared to those earlier UI technologies that we talked about is that their support for",
    "start": "1113920",
    "end": "1120250"
  },
  {
    "text": "streaming use cases is going from good and starting to move towards great so",
    "start": "1120250",
    "end": "1126309"
  },
  {
    "text": "ten years ago the the UI frameworks you used were not good at it and you had to",
    "start": "1126309",
    "end": "1131470"
  },
  {
    "text": "have old a whole different tech stack to do streaming but now with these frameworks you can put streaming use",
    "start": "1131470",
    "end": "1137200"
  },
  {
    "text": "cases alongside non streaming use cases in your application without having to invent and maintain a completely",
    "start": "1137200",
    "end": "1142510"
  },
  {
    "text": "different text app which is which is fantastic but just picking angular or react when you want to do real-time",
    "start": "1142510",
    "end": "1148120"
  },
  {
    "text": "streaming isn't either one will work but what will kill you is the architectural",
    "start": "1148120",
    "end": "1155080"
  },
  {
    "text": "decisions you'll make quite or later on which is what Bev is going to go over so",
    "start": "1155080",
    "end": "1160750"
  },
  {
    "text": "complexity everyone I'm sure it's only",
    "start": "1160750",
    "end": "1165880"
  },
  {
    "text": "naive naivety I guess to certainly look at someone else's business domain and say that it's not conflict because everything looks simple when you don't",
    "start": "1165880",
    "end": "1171730"
  },
  {
    "text": "understand it but trading applications are quite complex for me because",
    "start": "1171730",
    "end": "1176830"
  },
  {
    "text": "unfortunately I do have to understand them lots of different ways that complexly comes in there's lots of different things that are traded so if",
    "start": "1176830",
    "end": "1183400"
  },
  {
    "text": "it's is what we just talked about equities everyone understands what that is fixed income it's like interest physical commodities",
    "start": "1183400",
    "end": "1189990"
  },
  {
    "text": "interesting ly enough and in Asia there is just gone online at a new digital marketplace for you to trade in real",
    "start": "1189990",
    "end": "1196510"
  },
  {
    "text": "time vanilla pods who knew there was such a demand huh and energy as well so",
    "start": "1196510",
    "end": "1201850"
  },
  {
    "text": "guess electricity all of these things are traded in real time the way you can package them up is different you can you",
    "start": "1201850",
    "end": "1208510"
  },
  {
    "text": "can package them in different ways spots forward swaps options and then of course you can actually trade in different ways",
    "start": "1208510",
    "end": "1214600"
  },
  {
    "text": "so request for interested I owe I indication of interest orders executable streaming prices of all of those",
    "start": "1214600",
    "end": "1221159"
  },
  {
    "text": "reactive trader cloud is an example of a platform doing executable streaming",
    "start": "1221159",
    "end": "1226480"
  },
  {
    "text": "prices and if you're interested to come and chat to me afterwards about that what you'll have seen though is that",
    "start": "1226480",
    "end": "1232000"
  },
  {
    "text": "they have a large amount of information on screen lots of that information is changing in real time and therefore we",
    "start": "1232000",
    "end": "1237730"
  },
  {
    "text": "need to stream it to the UI because it wouldn't be okay for every pricing tile on our UI to be polling multiple times a",
    "start": "1237730",
    "end": "1245320"
  },
  {
    "text": "second to make sure that had the latest price we have 20 prices i think there's 12 pricing tiles prices are displayed on",
    "start": "1245320",
    "end": "1252190"
  },
  {
    "text": "reactor cloud the blotter would also need to be polling the analytics panel would need to be polling I know that people poll",
    "start": "1252190",
    "end": "1259300"
  },
  {
    "text": "often when it's just the easy thing to do but when your whole application would need to be polling it will kill your",
    "start": "1259300",
    "end": "1265000"
  },
  {
    "text": "server your app and then you scale out to tens fifties hundreds of thousands of users the whole thing starts working so",
    "start": "1265000",
    "end": "1270340"
  },
  {
    "text": "you need to flip it on its head and and instead take a streaming approach to the entire architecture things are also very",
    "start": "1270340",
    "end": "1277120"
  },
  {
    "text": "time-sensitive and so if you have Hughes or licensees in your system be a back-end front-end or on the network",
    "start": "1277120",
    "end": "1283060"
  },
  {
    "text": "you're gonna have real business problems there are lots of people in the market who dis probably want you to go out of",
    "start": "1283060",
    "end": "1289060"
  },
  {
    "text": "business and if they see you allow if you allow them to trade with you on old or stale prices that you can't properly",
    "start": "1289060",
    "end": "1294820"
  },
  {
    "text": "manage the risk of you will quickly get a reputation for being a very easy mark and you will go to the wall very very",
    "start": "1294820",
    "end": "1300040"
  },
  {
    "text": "quickly a few years ago that happened to someone called Knight Capital in New York they had a slightly different",
    "start": "1300040",
    "end": "1306010"
  },
  {
    "text": "problem but it's the same thing it's a very very competitive marketplace and mistakes will put you out of business so",
    "start": "1306010",
    "end": "1313540"
  },
  {
    "text": "this is what we hunt the cliff of complexity is what as we joked about it you start on a project and you are",
    "start": "1313540",
    "end": "1320950"
  },
  {
    "text": "rapidly delivering functionality everything's going really really well you take a little bit of time to pick up speed as you get the team together and",
    "start": "1320950",
    "end": "1328090"
  },
  {
    "text": "figure out how to work with each other then you have the good times where you rapidly deliver a new functionality to",
    "start": "1328090",
    "end": "1333820"
  },
  {
    "text": "the business rapidly your velocity is really really high you're tuning through stories and everyone's having the time of their lives then things start to tail",
    "start": "1333820",
    "end": "1340810"
  },
  {
    "text": "off the complexity that you've introduced in managing all the streams all the business domain models all the",
    "start": "1340810",
    "end": "1346210"
  },
  {
    "text": "other complexity starts to weigh you down and then a little while later because you've not shown any progress",
    "start": "1346210",
    "end": "1351280"
  },
  {
    "text": "for a while the project gets cancelled you'll need to go find new jobs it's not much fun and actually it's really",
    "start": "1351280",
    "end": "1357190"
  },
  {
    "text": "problematic because you need to be able to keep that that those good times going for as long as possible to deliver the",
    "start": "1357190",
    "end": "1362560"
  },
  {
    "text": "overall functionality that you need to deliver so that's the complexity that is",
    "start": "1362560",
    "end": "1370420"
  },
  {
    "text": "inherent in the applications and the domain that we work in and Babs now going to talk about managing that",
    "start": "1370420",
    "end": "1375940"
  },
  {
    "text": "complexity with streams in the UI overview Beth",
    "start": "1375940",
    "end": "1380550"
  },
  {
    "text": "yeah okay so I'm gonna actually talk about",
    "start": "1385340",
    "end": "1390779"
  },
  {
    "text": "how we build these things on the UI once I can find my mouse cursor okay okay",
    "start": "1390779",
    "end": "1400260"
  },
  {
    "text": "cool so let's start here so these applications are very complex so let's",
    "start": "1400260",
    "end": "1405690"
  },
  {
    "text": "not make them any harder trying to avoid to use traditional client-side MVC",
    "start": "1405690",
    "end": "1410820"
  },
  {
    "text": "architectures that's a broad brush because I know there's lots of forms of NVC but anything where your state is",
    "start": "1410820",
    "end": "1417659"
  },
  {
    "text": "spread across multiple locations in your app and where you have a two-way data flow it can make it really hard to",
    "start": "1417659",
    "end": "1423960"
  },
  {
    "text": "reason about your application and see the causes and effect of certain actions and events so let's just use something",
    "start": "1423960",
    "end": "1433350"
  },
  {
    "text": "simple for state management so Redux will do I like Redux on my state management you have all of your state in",
    "start": "1433350",
    "end": "1440880"
  },
  {
    "text": "one place data flows in one direction there's only one way to update the state and it's very well known I think if",
    "start": "1440880",
    "end": "1447570"
  },
  {
    "text": "you've been doing any sorts of UI development either in angular or react you will come across a flux or a Reta",
    "start": "1447570",
    "end": "1454380"
  },
  {
    "text": "Redux type pattern the thing I like about this most is a simple programming",
    "start": "1454380",
    "end": "1459690"
  },
  {
    "text": "model and if we have a complex domain it's good to have a simple programming model so I'm not gonna drill too much",
    "start": "1459690",
    "end": "1465720"
  },
  {
    "text": "into Redux but I just want to start with the my mental model of how I build applications using it and then we're",
    "start": "1465720",
    "end": "1471809"
  },
  {
    "text": "getting to the more fun stuff so I start with a template a view I will knock it",
    "start": "1471809",
    "end": "1477210"
  },
  {
    "text": "up in my angular templating language or my react templating language then I'll",
    "start": "1477210",
    "end": "1482669"
  },
  {
    "text": "start thinking about the store the state so I start thinking okay well I'm showing some prices I'll put that in a",
    "start": "1482669",
    "end": "1488429"
  },
  {
    "text": "dictionary I have a historic record of all the trades I need to do let me put that an array and then this mistake for",
    "start": "1488429",
    "end": "1495149"
  },
  {
    "text": "things that expanded or contracted on the UI so so far very simple I then",
    "start": "1495149",
    "end": "1502169"
  },
  {
    "text": "start thinking about ways in which I can change the state of my application and I",
    "start": "1502169",
    "end": "1507269"
  },
  {
    "text": "create some well-defined actions so here you can see if a trade is executed it",
    "start": "1507269",
    "end": "1512760"
  },
  {
    "text": "will update the historic trades and store or if a new price comes in we'll",
    "start": "1512760",
    "end": "1518340"
  },
  {
    "text": "update that dictionary and this is really simple and it's a nice closed loop and I think UI development is kind",
    "start": "1518340",
    "end": "1525930"
  },
  {
    "text": "of move towards a submit model in general and then if you look at the",
    "start": "1525930",
    "end": "1531270"
  },
  {
    "text": "function their new state is previous state plus action that's how you think about pretty much any kind of UI update",
    "start": "1531270",
    "end": "1538530"
  },
  {
    "text": "so that's nice and easy at some point",
    "start": "1538530",
    "end": "1544890"
  },
  {
    "text": "though you have to actually go out to the network you have to do something that is asynchronous and at that point",
    "start": "1544890",
    "end": "1551130"
  },
  {
    "text": "that's all we start talking about this concept of middleware and middleware is where you take an action do something",
    "start": "1551130",
    "end": "1559110"
  },
  {
    "text": "asynchronously go to the network and some other actions happen as a result so",
    "start": "1559110",
    "end": "1564300"
  },
  {
    "text": "a very simple example would be this you execute a trade it goes out to the",
    "start": "1564300",
    "end": "1569880"
  },
  {
    "text": "network and it could either pass or fail and then it will give you another action back and that's really simple and if",
    "start": "1569880",
    "end": "1576600"
  },
  {
    "text": "your applications are simple you can just write this with a function or a promise or async/await",
    "start": "1576600",
    "end": "1582780"
  },
  {
    "text": "you don't need anything more complex than that for us though it's a bit more",
    "start": "1582780",
    "end": "1588840"
  },
  {
    "text": "complicated when we we will send an action to our middleware something like subscribe to prices and we will get",
    "start": "1588840",
    "end": "1595260"
  },
  {
    "text": "stream of updates coming back and then you multiply this out by how many streams there are in application and",
    "start": "1595260",
    "end": "1601680"
  },
  {
    "text": "then you have to manage merge and manipulate all these streams so our middleware is actually very advanced",
    "start": "1601680",
    "end": "1606840"
  },
  {
    "text": "compared to some of the other apps out there the what so we use rxjs to manage",
    "start": "1606840",
    "end": "1615360"
  },
  {
    "text": "screams we find that's the best way to do it and I'm going to show you a few practical use cases of how we do that",
    "start": "1615360",
    "end": "1621860"
  },
  {
    "text": "but the guys over in Netflix who also deal with a lot of streams made",
    "start": "1621860",
    "end": "1627030"
  },
  {
    "text": "something called Redux observable so this lets us use rxjs to write our",
    "start": "1627030",
    "end": "1632820"
  },
  {
    "text": "middle-way rxjs is a library that helps",
    "start": "1632820",
    "end": "1639060"
  },
  {
    "text": "us deal with streams it helps us compose them and create a it's a well-suited to the financial",
    "start": "1639060",
    "end": "1644850"
  },
  {
    "text": "domain cool so this is a diagram I'm going to",
    "start": "1644850",
    "end": "1653489"
  },
  {
    "text": "keep coming back to but this is how we manage the complexity in the application we keep the Redux part of the",
    "start": "1653489",
    "end": "1659909"
  },
  {
    "text": "application as slim and as simple as possible we don't make complicated reducers we",
    "start": "1659909",
    "end": "1665879"
  },
  {
    "text": "don't make complicated actions we just keep that part simple and then if you have junior developers they can work on",
    "start": "1665879",
    "end": "1671820"
  },
  {
    "text": "that part for a little while and it's easy to reason about and then what we do",
    "start": "1671820",
    "end": "1677909"
  },
  {
    "text": "is we create this other part which is what I like to call our stream management layer and this is where we do all the more difficult stuff and I'm",
    "start": "1677909",
    "end": "1684690"
  },
  {
    "text": "going to show you a couple of things we do in this layer but this layer here is the thing that's talking to all those",
    "start": "1684690",
    "end": "1690389"
  },
  {
    "text": "different micro-services and they're all coming in in different shapes and forms and speeds so okay so this is something",
    "start": "1690389",
    "end": "1700919"
  },
  {
    "text": "very basic we might do in that layer we go and get some reference data when the application starts up that will tell us",
    "start": "1700919",
    "end": "1707489"
  },
  {
    "text": "about what currency pairs we're entitled to use or trade on and then we'll go and subscribe to prices for each of those",
    "start": "1707489",
    "end": "1713700"
  },
  {
    "text": "that's a very simple thing we can do in that layer here's something more",
    "start": "1713700",
    "end": "1720269"
  },
  {
    "text": "complicated that we do so when we get that price stream there's a couple of things we have to do to it one thing is",
    "start": "1720269",
    "end": "1728070"
  },
  {
    "text": "if that price stream for any reason fails we have to retry it we have to try and Reese absque Ribe if necessary so",
    "start": "1728070",
    "end": "1736169"
  },
  {
    "text": "here you can see where this retry win is if that stream goes down we'll just try",
    "start": "1736169",
    "end": "1741179"
  },
  {
    "text": "again in two seconds continuously until we get another one we do a little bit of massaging in this map here so that when",
    "start": "1741179",
    "end": "1748859"
  },
  {
    "text": "we eventually pass the data to redux you don't have to do any transformation there so the reducers become very simple",
    "start": "1748859",
    "end": "1755539"
  },
  {
    "text": "a more interesting case is this scan here so this is so if you if you look at",
    "start": "1755539",
    "end": "1761700"
  },
  {
    "text": "the pricing tile here you'll see in a green arrow that goes up and down and what we want to do is work out where",
    "start": "1761700",
    "end": "1768719"
  },
  {
    "text": "will you show the up or the down or no arrow before it hits the redux door so we just do that here and then another",
    "start": "1768719",
    "end": "1775440"
  },
  {
    "text": "thing we do is if we haven't had a price for a few seconds we",
    "start": "1775440",
    "end": "1781010"
  },
  {
    "text": "mark that prices being stale and then finally we see the share operator that",
    "start": "1781010",
    "end": "1787340"
  },
  {
    "text": "turns it hot so that means if there are multiple areas in the application that need to use this stream we use the same",
    "start": "1787340",
    "end": "1793670"
  },
  {
    "text": "one so all this is done declaratively and all in rxjs",
    "start": "1793670",
    "end": "1799360"
  },
  {
    "text": "and it's pretty easy to read trying to do this imperatively or trying to do",
    "start": "1799360",
    "end": "1805040"
  },
  {
    "text": "this in redux without rxjs is very hard so these are the and all this again is",
    "start": "1805040",
    "end": "1811400"
  },
  {
    "text": "happening here in the stream management layer so we that's where we put the complexity and we keep everything else",
    "start": "1811400",
    "end": "1817880"
  },
  {
    "text": "very simple cool right all right so Matt",
    "start": "1817880",
    "end": "1826670"
  },
  {
    "text": "showed you earlier on our high-level architecture we have some micro services running on the backend now I'm going to",
    "start": "1826670",
    "end": "1834050"
  },
  {
    "text": "do so that's the live application I'm",
    "start": "1834050",
    "end": "1843800"
  },
  {
    "text": "gonna pull up the app in demo mode so this is running locally on my machine I've docker in all the different",
    "start": "1843800",
    "end": "1850130"
  },
  {
    "text": "instances running here no I'm going to do so now I'm gonna none of all the",
    "start": "1850130",
    "end": "1856940"
  },
  {
    "text": "services are down right now and I'm just going to bring them all up so hopefully the demo gods are with us we should just",
    "start": "1856940",
    "end": "1866480"
  },
  {
    "text": "start to come to life yeah okay coming here you go okay cool off my analytic",
    "start": "1866480",
    "end": "1877400"
  },
  {
    "text": "service that doesn't seem to be agreeing with me let me just",
    "start": "1877400",
    "end": "1881200"
  },
  {
    "text": "you go okay so there what happened to us so our applications have to be resilient",
    "start": "1892400",
    "end": "1898100"
  },
  {
    "text": "so if any of those micro services on the back end go down we don't we don't want to take the whole UI down do I actually",
    "start": "1898100",
    "end": "1904810"
  },
  {
    "text": "knows all the different instances of all the services that are running on the back end and can this Auto recover and",
    "start": "1904810",
    "end": "1910520"
  },
  {
    "text": "load balance straight under GUI and drag that console window up so they can see them that's a good point",
    "start": "1910520",
    "end": "1918890"
  },
  {
    "text": "okay so here this is so here I'm interacting with the backend so I can do things like I can kill the blotter",
    "start": "1918890",
    "end": "1927490"
  },
  {
    "text": "that's taking the blotter micro service down and I can kill the analytics and I",
    "start": "1927490",
    "end": "1933560"
  },
  {
    "text": "can kill execution and I can kill pricing so I can just start taking part",
    "start": "1933560",
    "end": "1946670"
  },
  {
    "text": "of the application out and then and just draw attention to the oh yeah the pen",
    "start": "1946670",
    "end": "1952640"
  },
  {
    "text": "all down the bottom right which I can't see but if you look at the panel down here you can see that all those nodes",
    "start": "1952640",
    "end": "1958040"
  },
  {
    "text": "have been taken down and then the GUI is just reacted to it the important part is that only parts of the application get shot down and not the whole thing okay",
    "start": "1958040",
    "end": "1972500"
  },
  {
    "text": "then let me bring it up again",
    "start": "1972500",
    "end": "1975670"
  },
  {
    "text": "and there you go so all that everything just comes back up again and actually",
    "start": "1982940",
    "end": "1989149"
  },
  {
    "text": "here my execution I've actually stopped the execution so I can't actually trade prices right now because the execution",
    "start": "1989149",
    "end": "1995210"
  },
  {
    "text": "service is down and the GUI it won't let me I should have put a notification they're telling the trader he caught trade he'd probably very angry if this",
    "start": "1995210",
    "end": "2001809"
  },
  {
    "text": "happened but you can see that's that's off now and where's my terminal here you",
    "start": "2001809",
    "end": "2009309"
  },
  {
    "text": "go I start the execution service my",
    "start": "2009309",
    "end": "2017109"
  },
  {
    "text": "trading is now back on line so I can start trading okay and again all of this",
    "start": "2017109",
    "end": "2026129"
  },
  {
    "text": "is done in that same layer it's all done in that kind of Rx layer and redux",
    "start": "2026129",
    "end": "2032470"
  },
  {
    "text": "doesn't need to know about any of this or stuff so we have highly resilient you eyes and the way it does that is this so",
    "start": "2032470",
    "end": "2042129"
  },
  {
    "text": "when the application starts up we subscribe to a known channel which is the status stream and that just",
    "start": "2042129",
    "end": "2048010"
  },
  {
    "text": "heartbeats each micro serve so it tells us what's up and what's down if we we",
    "start": "2048010",
    "end": "2053950"
  },
  {
    "text": "then so you can see the different colors here represent the different services we then split that stream and we start",
    "start": "2053950",
    "end": "2060878"
  },
  {
    "text": "waiting for a scenario where we haven't heard from one of those streams for a few seconds and then if we haven't heard",
    "start": "2060879",
    "end": "2066069"
  },
  {
    "text": "from it we error the stream and that's what you see in the UI over there if",
    "start": "2066069",
    "end": "2071919"
  },
  {
    "text": "there are multiple nodes up it will just retry another stream so this thing is like on all the time and it's pretty",
    "start": "2071919",
    "end": "2077829"
  },
  {
    "text": "solid and again we we do that in the RX layer that's just like a small example",
    "start": "2077829",
    "end": "2086079"
  },
  {
    "text": "of the complexity we have it actually we have more streams we have streams or streams and streams and it gets quite complicated but if you anticipate the",
    "start": "2086079",
    "end": "2093250"
  },
  {
    "text": "complexity early and you bound it into that layer and where it's nice and testable you can scale these",
    "start": "2093250",
    "end": "2099160"
  },
  {
    "text": "applications up quite well alright so",
    "start": "2099160",
    "end": "2105160"
  },
  {
    "text": "that's a one form of problem so that's to do with high order streams and creating streams of streams the other",
    "start": "2105160",
    "end": "2111490"
  },
  {
    "text": "thing we come across in financial services a concept of back pressure now back for",
    "start": "2111490",
    "end": "2117010"
  },
  {
    "text": "is where we have a high-speed producer so maybe the servers are sending updates",
    "start": "2117010",
    "end": "2122230"
  },
  {
    "text": "to us way too fast and we have a slow consumer so this can be in two forms",
    "start": "2122230",
    "end": "2128560"
  },
  {
    "text": "this can be literally the speed at which I as the user can process the number of data ticks I can't process like 100 a",
    "start": "2128560",
    "end": "2135040"
  },
  {
    "text": "second it's not very useful or it can be in terms of performance that the browser's actually can't render the data",
    "start": "2135040",
    "end": "2140380"
  },
  {
    "text": "moving that fast so we have to slow it down sometimes if possible we try and slow it down in the",
    "start": "2140380",
    "end": "2146920"
  },
  {
    "text": "server though there's two forms there's lossy where it's okay to lose a value",
    "start": "2146920",
    "end": "2155220"
  },
  {
    "text": "along the way and there's lossless where you have to actually process every single update so an example of lossy but",
    "start": "2155220",
    "end": "2164800"
  },
  {
    "text": "back pressure is where we do things like throttling and sampling so for those price tiles it's actually okay to miss a",
    "start": "2164800",
    "end": "2171250"
  },
  {
    "text": "price like if you're sending lots of lots of prices down we just sample them so in a given time window we just take",
    "start": "2171250",
    "end": "2178180"
  },
  {
    "text": "the last one it's different to throttling but subtly so throttling will",
    "start": "2178180",
    "end": "2184180"
  },
  {
    "text": "take the first one in the window the sampling will take the last the only reason I put that up there to show you that when you're using rx you've got to",
    "start": "2184180",
    "end": "2190180"
  },
  {
    "text": "be careful about the subtlety of the different operators that one's done oh",
    "start": "2190180",
    "end": "2198510"
  },
  {
    "text": "the most important thing here is that you have to have predictable latency if",
    "start": "2198510",
    "end": "2204160"
  },
  {
    "text": "it's okay to lose the prices but as long as you know that it's going to be no older than a certain amount of time what",
    "start": "2204160",
    "end": "2210609"
  },
  {
    "text": "you really don't want is like a unpredictable lady try and process everything but everything is going to slow so you're actually getting old",
    "start": "2210609",
    "end": "2216280"
  },
  {
    "text": "prices you don't want to do stuff like that then there's lossless back pressure so",
    "start": "2216280",
    "end": "2224560"
  },
  {
    "text": "that's where you have something like the trade blotter and the pattern we have then a lot of people use this in their",
    "start": "2224560",
    "end": "2230020"
  },
  {
    "text": "applications you do an initial state of the world you get a large data set down there's gonna be thousands of rows then",
    "start": "2230020",
    "end": "2236530"
  },
  {
    "text": "incrementally the server is going to send you deltas row updated row remove etc and what you have to be careful",
    "start": "2236530",
    "end": "2243730"
  },
  {
    "text": "about is you have to process every single one of these ticks because otherwise the data is wrong but that could kill your browser if it's trying",
    "start": "2243730",
    "end": "2249490"
  },
  {
    "text": "to redraw the grid every single time one of these dicks is coming down in that case we use buffering so there's",
    "start": "2249490",
    "end": "2258880"
  },
  {
    "text": "different forms of buffering you can buffer with time you can buffer with count you can buffer with time and count",
    "start": "2258880",
    "end": "2264550"
  },
  {
    "text": "and there are more elaborate ways as well but the general pattern here is you just take package of updates you batch",
    "start": "2264550",
    "end": "2271510"
  },
  {
    "text": "them up and then you can process them either at a later point or if you've got",
    "start": "2271510",
    "end": "2276760"
  },
  {
    "text": "some sort of complex sorting filtering and pivoting in your grid you can kick",
    "start": "2276760",
    "end": "2282010"
  },
  {
    "text": "that off to something like a web worker so it doesn't hurt the main thread and things stay performant that's another method we use so we use",
    "start": "2282010",
    "end": "2294190"
  },
  {
    "text": "our XJS to do all of this some advice I could give from writing a lot of this is",
    "start": "2294190",
    "end": "2299590"
  },
  {
    "text": "use typescript trying to do our X without typescript is very difficult and if you come back to your code six months",
    "start": "2299590",
    "end": "2306220"
  },
  {
    "text": "later even harder Rx has a high learning curve it's it's you have to make sure",
    "start": "2306220",
    "end": "2312820"
  },
  {
    "text": "you're willing to upskill yourself and your team to actually use it and subtle teasing the operators can actually cause",
    "start": "2312820",
    "end": "2318490"
  },
  {
    "text": "havoc so you have to be a little bit careful there so don't use it unless your middleware is actually quite",
    "start": "2318490",
    "end": "2325330"
  },
  {
    "text": "complicated Rx is great because even on",
    "start": "2325330",
    "end": "2330340"
  },
  {
    "text": "the server side you're seeing more of it nowadays server and client so you can talk the same language as your back-end",
    "start": "2330340",
    "end": "2335560"
  },
  {
    "text": "developers and your front-end developers so if I talk about things like flat mapping or publish people know what it means try not to pick try not to nix",
    "start": "2335560",
    "end": "2346270"
  },
  {
    "text": "pull and push motors like if you're going observable in streams make everything an observable in a stream even if you think it's something as",
    "start": "2346270",
    "end": "2351820"
  },
  {
    "text": "simple as just a promise you you make that a stream of one it's very important and rx is useless if no one can read it",
    "start": "2351820",
    "end": "2359530"
  },
  {
    "text": "I see lots of projects using rx where you write very complex are extremes and they're incomprehensible so split them",
    "start": "2359530",
    "end": "2366070"
  },
  {
    "text": "up a bit label them a bit and think if you could actually read them I'm guilty of doing this myself by the way alright",
    "start": "2366070",
    "end": "2374610"
  },
  {
    "text": "and again I know I keep coming back to this layer but I really do believe that like keep Redux simple and caught all",
    "start": "2374610",
    "end": "2381850"
  },
  {
    "text": "the complexity in your kind of rx layer and the nice thing about this is well if all your complexity is sitting away and",
    "start": "2381850",
    "end": "2387789"
  },
  {
    "text": "this nice Rx layer you can actually change your framework you could actually go from a react to an angular or a view or whatever's cool tomorrow so that's",
    "start": "2387789",
    "end": "2394599"
  },
  {
    "text": "useful as well and then to finish office",
    "start": "2394599",
    "end": "2401529"
  },
  {
    "text": "I want to just talk about performance and some of the performance problems we have in these sort of apps so there's a",
    "start": "2401529",
    "end": "2408789"
  },
  {
    "text": "number of different ways you can think about performance or areas there's things like the critical rendering path this is where our I need to show my page",
    "start": "2408789",
    "end": "2416049"
  },
  {
    "text": "in a split second it's not that important to us it is important I would like to let things to load fast but that",
    "start": "2416049",
    "end": "2421960"
  },
  {
    "text": "initial loading of the app isn't as needed to us as probably other apps",
    "start": "2421960",
    "end": "2429930"
  },
  {
    "text": "there's things like JavaScript execution so this is like optimizing how you have",
    "start": "2429930",
    "end": "2435339"
  },
  {
    "text": "a script execute things like watching how making sure it's like v8 friendly",
    "start": "2435339",
    "end": "2441039"
  },
  {
    "text": "object pooling using the right algorithms we do we do this stuff but it's mainly for data visualization it's",
    "start": "2441039",
    "end": "2447849"
  },
  {
    "text": "not something I do too much Network performance if you can stop your server sending too many updates and you can do",
    "start": "2447849",
    "end": "2453999"
  },
  {
    "text": "some of the work up there that's possible and don't send soap down the wire that's no good but the - I want to",
    "start": "2453999",
    "end": "2460420"
  },
  {
    "text": "focus on is rendering performance and memory management if you've done any",
    "start": "2460420",
    "end": "2466059"
  },
  {
    "text": "sort of animation in the browser this this probably looks familiar to you so browsers render frames roughly 60 a",
    "start": "2466059",
    "end": "2473289"
  },
  {
    "text": "second depending on your screen the Hertz on your screen and this is like a",
    "start": "2473289",
    "end": "2478479"
  },
  {
    "text": "normal healthy looking kind of frame rate you see that the browser's doing some style calculation and it's doing",
    "start": "2478479",
    "end": "2485170"
  },
  {
    "text": "some painting and then every now and then it's handling a bit of JavaScript which is the yellow when the user",
    "start": "2485170",
    "end": "2491739"
  },
  {
    "text": "interacts with it and and this is this is quite normal remember this is only on",
    "start": "2491739",
    "end": "2497380"
  },
  {
    "text": "one thread the browser has one thread you can use web workers but at the moment this is on the main thread when",
    "start": "2497380",
    "end": "2504999"
  },
  {
    "text": "you've got ticking and streaming data coming in all the time it can really skew your frame rate if you if you start",
    "start": "2504999",
    "end": "2510670"
  },
  {
    "text": "processing a tick towards the end of a frame it can push the painting and the",
    "start": "2510670",
    "end": "2516430"
  },
  {
    "text": "style calculations off the next frame you can start missing frames and when you do this this is when your computer",
    "start": "2516430",
    "end": "2522010"
  },
  {
    "text": "starts becoming very janky and this would manifest itself so a trader will",
    "start": "2522010",
    "end": "2527770"
  },
  {
    "text": "be trying to type in 10 million and it's just slowing down he presses zero twice and then it three zeros come up you",
    "start": "2527770",
    "end": "2534520"
  },
  {
    "text": "don't want that so what you want to do",
    "start": "2534520",
    "end": "2540940"
  },
  {
    "text": "is you do things like this this use requestanimationframe this is very common technique if you do a lot of UI",
    "start": "2540940",
    "end": "2547240"
  },
  {
    "text": "programming and this is all about when to schedule work so here we do it at the",
    "start": "2547240",
    "end": "2553540"
  },
  {
    "text": "beginning of the next frame and you can get some improvement here again don't try and do too much processing on the",
    "start": "2553540",
    "end": "2559930"
  },
  {
    "text": "main thread when the ticks come down like a little bit is okay but if it gets to a scenario where you're you're you're",
    "start": "2559930",
    "end": "2565270"
  },
  {
    "text": "pushing the frames out you might want to think about kicking it off to a web worker again so we don't actually write",
    "start": "2565270",
    "end": "2572470"
  },
  {
    "text": "requestanimationframe everywhere what we do is we use rxjs schedulers there's a",
    "start": "2572470",
    "end": "2577990"
  },
  {
    "text": "great talk by this guy Jarrod sands on how you use schedulers in JavaScript but",
    "start": "2577990",
    "end": "2583290"
  },
  {
    "text": "basically this is all in our operators when the prices come down we can select exactly when that piece of work is going",
    "start": "2583290",
    "end": "2589360"
  },
  {
    "text": "to be done there's this table shows you the plain jazz equivalent so it can be",
    "start": "2589360",
    "end": "2594910"
  },
  {
    "text": "done synchronously then and they will block the event loop it can be done in a SAP I think it's micro tasks so that's",
    "start": "2594910",
    "end": "2603130"
  },
  {
    "text": "when a promise resolve so that will do it when the next stack after the stacks cleared you can do in a set timeout so",
    "start": "2603130",
    "end": "2609190"
  },
  {
    "text": "that's when the event loop is free or you can actually just do an requestanimationframe so that's just",
    "start": "2609190",
    "end": "2614590"
  },
  {
    "text": "when the next frame is about to be painted and if you play with these when your RX operators you can you can you",
    "start": "2614590",
    "end": "2622390"
  },
  {
    "text": "can really fine-tune the performance and",
    "start": "2622390",
    "end": "2628170"
  },
  {
    "text": "then that brings us to the last one which is just memory leaks what you don't want to happen is if a trader is",
    "start": "2628170",
    "end": "2634600"
  },
  {
    "text": "on his desk he's going getting his lunch well they don't really get lunch but it gets brought in ok and he's he gets a",
    "start": "2634600",
    "end": "2640930"
  },
  {
    "text": "phone call he's about to do something important and the app just doesn't work and that's because there was a slow",
    "start": "2640930",
    "end": "2646390"
  },
  {
    "text": "memory leak happening all day every time a price change every time something was moved around so check",
    "start": "2646390",
    "end": "2651970"
  },
  {
    "text": "your profiler look at the Sawtooth on your memory profiler and make sure when",
    "start": "2651970",
    "end": "2657670"
  },
  {
    "text": "a garbage collection happens it returns to its baseline so this translates is",
    "start": "2657670",
    "end": "2662680"
  },
  {
    "text": "just look at your unmount methods or your ng destroying methods if you're using those frameworks and make sure you're always cleaning up anything that",
    "start": "2662680",
    "end": "2669700"
  },
  {
    "text": "causes a memory leak and rxjs as well can you can have things like unbounded",
    "start": "2669700",
    "end": "2676119"
  },
  {
    "text": "buffers so if you use the wrong operator you can sometimes great and they're really clear should be careful there as well so that's about it for me I think",
    "start": "2676119",
    "end": "2684400"
  },
  {
    "text": "that's some words left but in general just stay on top of the complexity",
    "start": "2684400",
    "end": "2690330"
  },
  {
    "text": "anticipate streams and just embrace the nature of a streaming application and",
    "start": "2690330",
    "end": "2695560"
  },
  {
    "text": "you can this stuff becomes quite easy and enjoyable to work with so only a",
    "start": "2695560",
    "end": "2704430"
  },
  {
    "text": "little couple more things to say we'll wrap up really quickly I just wanted to",
    "start": "2704430",
    "end": "2710140"
  },
  {
    "text": "come back to the slide we spend our days doing this but we really think that the",
    "start": "2710140",
    "end": "2715599"
  },
  {
    "text": "time now is is right as they say for you guys to start playing around with tools",
    "start": "2715599",
    "end": "2721300"
  },
  {
    "text": "and techniques to make your app real-time and streaming you don't have to invent another tech stack to live",
    "start": "2721300",
    "end": "2727420"
  },
  {
    "text": "alongside the current app you have if you're using angular or react it'll play really nicely some of the ways that they",
    "start": "2727420",
    "end": "2733150"
  },
  {
    "text": "have talked about managing the complexity will keep it out of your core business domain as well so that you won't suddenly collapse and not be able",
    "start": "2733150",
    "end": "2739660"
  },
  {
    "text": "to add normal non streaming features to your app because you've got so much bundled up complexity that you can't move through the codebase anymore",
    "start": "2739660",
    "end": "2746670"
  },
  {
    "text": "apart from the fact that we think business forces are moving us moving our",
    "start": "2746670",
    "end": "2753640"
  },
  {
    "text": "part of the world this way we think that it's really going to make for better user experience as well so putting aside",
    "start": "2753640",
    "end": "2760300"
  },
  {
    "text": "the fact that businesses want to trade this way and people want to trade this way just engaging with an application",
    "start": "2760300",
    "end": "2766630"
  },
  {
    "text": "that is as responsive and as reactive as what we showed you here is really really enjoyable it's it's amazing how much fun",
    "start": "2766630",
    "end": "2773260"
  },
  {
    "text": "it is playing with an application that's snappy and responsive just like a native desktop application but that's working",
    "start": "2773260",
    "end": "2778599"
  },
  {
    "text": "over the web that's pushing things at you it makes you really feel like it's you're in control it's usually",
    "start": "2778599",
    "end": "2784089"
  },
  {
    "text": "compelling and I have a massive Buy I just think it's really really cool as well so that was all thank you very much",
    "start": "2784089",
    "end": "2790750"
  },
  {
    "text": "enjoy the risk the conference will be around for as long as we need to to chat you guys thanks very much everyone",
    "start": "2790750",
    "end": "2797670"
  },
  {
    "text": "[Applause]",
    "start": "2797670",
    "end": "2803699"
  }
]