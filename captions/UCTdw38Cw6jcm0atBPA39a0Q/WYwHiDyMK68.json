[
  {
    "text": "so um hi U I'll start with my talk um I'm you sper I'll be talking about",
    "start": "6520",
    "end": "12799"
  },
  {
    "text": "building a lightning fast firewall in Java and DPF and I'll be mostly talking",
    "start": "12799",
    "end": "17960"
  },
  {
    "text": "about ebf um I work at a little known company called sap and I'm anary K",
    "start": "17960",
    "end": "23680"
  },
  {
    "text": "developer but more end um so um consider we have a simple B application on my",
    "start": "23680",
    "end": "30320"
  },
  {
    "text": "case um I work on JK so I developed a small web page where you can see the jfi",
    "start": "30320",
    "end": "35360"
  },
  {
    "text": "events like profiling events and consider now um this page gets popular I",
    "start": "35360",
    "end": "40719"
  },
  {
    "text": "don't know why maybe first place and Hecker news I don't know and we have a problem we get a DS attack so too many",
    "start": "40719",
    "end": "47879"
  },
  {
    "text": "users on the system that's not great um consider now that we've written the",
    "start": "47879",
    "end": "53000"
  },
  {
    "text": "server in Java also other language but I'm choosing Java here because that's in the ti in the talk title so what's the",
    "start": "53000",
    "end": "59559"
  },
  {
    "text": "name for way of solving this is um very simple you just have your web",
    "start": "59559",
    "end": "67799"
  },
  {
    "text": "application you have your web server and essentially to block specific IP addresses you just hook into the the",
    "start": "67799",
    "end": "75240"
  },
  {
    "text": "method that accepts your connections and it's like oh should I block this IP address just looks it up in in hashmap",
    "start": "75240",
    "end": "81560"
  },
  {
    "text": "and that's fine and blocks it the only problems is that where are we blocking so the incoming packes go through the",
    "start": "81560",
    "end": "88360"
  },
  {
    "text": "physical Network into your Network code and then up your tcbp deck up into your",
    "start": "88360",
    "end": "94000"
  },
  {
    "text": "sockets whatever and then up into your Java Network deck and then to your application and then you're there saying",
    "start": "94000",
    "end": "99960"
  },
  {
    "text": "oh I actually don't want this packet anymore and that sounds kind of wasteful because we're like um checking these",
    "start": "99960",
    "end": "107200"
  },
  {
    "text": "packages just at the lastar point where we could even check them um and they probably used up some memory some CPU",
    "start": "107200",
    "end": "114159"
  },
  {
    "text": "ter and that's not great so the alternative is we use a firewall and we",
    "start": "114159",
    "end": "119479"
  },
  {
    "text": "could some implement the firewall kind of implement the firewall here we just call IP tables because why not call it",
    "start": "119479",
    "end": "126600"
  },
  {
    "text": "in Java we could have written bash but I'm a Java programmer so so we call bash in Java anyway uh and",
    "start": "126600",
    "end": "134720"
  },
  {
    "text": "we could do this but how can we add more logic and improve the speed at the same",
    "start": "134720",
    "end": "140959"
  },
  {
    "text": "time because that doesn't look that nice if I'm honest and if we had numerales we",
    "start": "140959",
    "end": "146640"
  },
  {
    "text": "just calling out tables we probably could have written some nice Java apis",
    "start": "146640",
    "end": "151760"
  },
  {
    "text": "around it but we won't do this here um if you look at at the graphics um",
    "start": "151760",
    "end": "157319"
  },
  {
    "text": "essentially that's from from cloud flare that benchmarked this in 2018 with uh",
    "start": "157319",
    "end": "162599"
  },
  {
    "text": "with a moderately sized system so what they got was like with the IP table stuff they got like they dropped like",
    "start": "162599",
    "end": "170120"
  },
  {
    "text": "1.8 million um packets per second and",
    "start": "170120",
    "end": "175319"
  },
  {
    "text": "simil theas attack and that was quite fine that's far better than like a as you see here dropping it in application",
    "start": "175319",
    "end": "181920"
  },
  {
    "text": "where you probably get like in a a few hundred thousand drop packages per per second if you're lucky um but you saw in",
    "start": "181920",
    "end": "189799"
  },
  {
    "text": "the keynote earlier in this day that you want to become a rockstar developer and so we want to become a 10x firewall",
    "start": "189799",
    "end": "196480"
  },
  {
    "text": "because everyone is a 10x developer now but no one has a 10x F so you use um You",
    "start": "196480",
    "end": "202480"
  },
  {
    "text": "probably guess that this craft goes a little bit on on the xaxis go a little",
    "start": "202480",
    "end": "207799"
  },
  {
    "text": "bit further and if we look further we see this we see we can get some speed",
    "start": "207799",
    "end": "213200"
  },
  {
    "text": "ups and some Hefty speed UPS some almost 10 times speed up or 10 times more",
    "start": "213200",
    "end": "219200"
  },
  {
    "text": "pictures dropped so with a more ready size system we can drop like 10 million",
    "start": "219200",
    "end": "225040"
  },
  {
    "text": "pictures percent keep in mind that like a package is around a kilobyte size at",
    "start": "225040",
    "end": "230640"
  },
  {
    "text": "least like with the normal IP package as we have so you're quite literally",
    "start": "230640",
    "end": "235760"
  },
  {
    "text": "saturating um a 10 gigabyte uh a 10 Gab input um stream here and that's pretty",
    "start": "235760",
    "end": "242720"
  },
  {
    "text": "awesome so we can drop uh packages at the rate at which they're coming in um",
    "start": "242720",
    "end": "248640"
  },
  {
    "text": "so have almost no overhead which is nice so if someone saturates your incoming",
    "start": "248640",
    "end": "253760"
  },
  {
    "text": "connection he can send you more packages because otherwise your whole system like is blocked so the question is what's the",
    "start": "253760",
    "end": "260560"
  },
  {
    "text": "difference between so um on um down there you see IP tables that's still as",
    "start": "260560",
    "end": "267000"
  },
  {
    "text": "we saw pretty fast compared to drawing it in up application but there's xtp and that stands for extensible data plane",
    "start": "267000",
    "end": "275120"
  },
  {
    "text": "and the idea is simply that we drop it far far earlier um and we can do this",
    "start": "275120",
    "end": "280880"
  },
  {
    "text": "even faster if you're offloading so modern Network CS that you have in like large service they have the ability to",
    "start": "280880",
    "end": "287960"
  },
  {
    "text": "offload all the blocking onto a network card so it's off your CPU which is pretty awesome because the CPU doesn't",
    "start": "287960",
    "end": "294759"
  },
  {
    "text": "have to do anything so the idea is here that we get as close to the physical Network as possible and drop them there",
    "start": "294759",
    "end": "302160"
  },
  {
    "text": "um and the main issue is why we want to do this is that allocations are pretty",
    "start": "302160",
    "end": "307479"
  },
  {
    "text": "pretty expensive and so when the network package first comes in into your",
    "start": "307479",
    "end": "312840"
  },
  {
    "text": "Hardware um then it's picked up once it's copied from your Hardware's uh",
    "start": "312840",
    "end": "318400"
  },
  {
    "text": "memory from the network uh card memory into the C memory once and that's fine",
    "start": "318400",
    "end": "325240"
  },
  {
    "text": "we need one allocation because we can't directly properly access the network C memory but then there's after uh it",
    "start": "325240",
    "end": "332800"
  },
  {
    "text": "enters into your network de there's another allocations and allocations are terrible and I'm saying this as someone",
    "start": "332800",
    "end": "338680"
  },
  {
    "text": "who works with TR we do this all the time but uh allocations are terrible when you're um working with performance",
    "start": "338680",
    "end": "345160"
  },
  {
    "text": "critical code and so that's the issue here um and the idea here is um we have",
    "start": "345160",
    "end": "350400"
  },
  {
    "text": "essentially two options on how to drop it that early we can either change the",
    "start": "350400",
    "end": "355639"
  },
  {
    "text": "col which is probably a good idea because we all want to read colal developer are we could add a Col module",
    "start": "355639",
    "end": "362160"
  },
  {
    "text": "the only problem is API stability so to quote Greg hman um who wrote an article",
    "start": "362160",
    "end": "370000"
  },
  {
    "text": "on this topic he he wrote you think you want a stable col interface but you really do not and you don't even know it",
    "start": "370000",
    "end": "377280"
  },
  {
    "text": "and he's kind of right and in his article um I'll link it later um you can easily find out why the main issue is",
    "start": "377280",
    "end": "384400"
  },
  {
    "text": "that he he points out that for example for the USB interface they changed it three times with every new USB version",
    "start": "384400",
    "end": "391840"
  },
  {
    "text": "they had to change it so the colur is inherently unstable and it's okay",
    "start": "391840",
    "end": "397120"
  },
  {
    "text": "because you just want to have the fastest Cur um but it's not that great when you're developing applications for",
    "start": "397120",
    "end": "403240"
  },
  {
    "text": "it so traditional ways we probably won't do it because we don't want to maintain",
    "start": "403240",
    "end": "409880"
  },
  {
    "text": "this so what about a third option the third option is already in the title of this talk it's ebpf um it's a b because",
    "start": "409880",
    "end": "417720"
  },
  {
    "text": "it's ebpf and it's it's real nice to even have a children's book on it so it's pretty accessible and doesn't rise",
    "start": "417720",
    "end": "425280"
  },
  {
    "text": "your Suns because you're fixing bags um anyway um so the idea with ebpf is that",
    "start": "425280",
    "end": "431440"
  },
  {
    "text": "you essentially say oh we we essentially are only interested in like a subset of",
    "start": "431440",
    "end": "436720"
  },
  {
    "text": "the functionality of the C only want to modify a subset of it and it's enough for example for Network packages to say",
    "start": "436720",
    "end": "444080"
  },
  {
    "text": "oh I want to drop this package or want to pass it I want to have some small code there and the idea is here that we",
    "start": "444080",
    "end": "451479"
  },
  {
    "text": "write this code in a language because we need to and that's compiled on down and",
    "start": "451479",
    "end": "457000"
  },
  {
    "text": "um this whole runtime system is called ebpf so the idea is that ebpf is making the Linux colnel programmable at Native",
    "start": "457000",
    "end": "464479"
  },
  {
    "text": "execution speed and that's pretty awesome um uh you can essentially hook",
    "start": "464479",
    "end": "469599"
  },
  {
    "text": "it in like you do with your UI Frameworks where you're like when this button is clicked execute this code and",
    "start": "469599",
    "end": "477080"
  },
  {
    "text": "yeah that's the same thing what we're doing here but this package comes in execute the hook just that it all runs",
    "start": "477080",
    "end": "483280"
  },
  {
    "text": "in a Col um which has it own struggles um to quote Brandon GRE who is one of",
    "start": "483280",
    "end": "489840"
  },
  {
    "text": "the main proponents for technology and he's only known and he's also best known",
    "start": "489840",
    "end": "495240"
  },
  {
    "text": "for shouting at hard drives in the data center if you want to find it out the link is below um and he sometimes look",
    "start": "495240",
    "end": "503199"
  },
  {
    "text": "this but he's more sincere he he wrote ebpf is a crazy technology it's like",
    "start": "503199",
    "end": "508360"
  },
  {
    "text": "putting JavaScript in the colel don't feel put off by the term JavaScript I think he Meed as a compliment um the",
    "start": "508360",
    "end": "515560"
  },
  {
    "text": "idea of the whole EF run time is essentially um that you take your source",
    "start": "515560",
    "end": "521560"
  },
  {
    "text": "code and you write it in some language that you like um for language that has a framework on this and you then compile",
    "start": "521560",
    "end": "529360"
  },
  {
    "text": "it um because you compile down to BU code like you do with net like you do",
    "start": "529360",
    "end": "534519"
  },
  {
    "text": "with Java and this ebpf program is then transferred into the L kernel of course",
    "start": "534519",
    "end": "540480"
  },
  {
    "text": "you need root privileges because you're modifying kind of the kernel Behavior so you need special privileges but",
    "start": "540480",
    "end": "546240"
  },
  {
    "text": "essentially you pull it into the Curel and this in this kernel um there's a VM",
    "start": "546240",
    "end": "552000"
  },
  {
    "text": "like your net runtime like your Java runtime um that executes this the only problem",
    "start": "552000",
    "end": "557360"
  },
  {
    "text": "is any any does anyone see a problem with like running arbitrary code in your",
    "start": "557360",
    "end": "562480"
  },
  {
    "text": "kernel even if it's trusted any any problems any problems with like out of",
    "start": "562480",
    "end": "569800"
  },
  {
    "text": "bounds exceptions in the colel it's probably not a problem it probably didn't hold",
    "start": "569800",
    "end": "576200"
  },
  {
    "text": "like all air traffic for like a whole day in the recent weeks it's probably not a problem so anyway they thought",
    "start": "576200",
    "end": "583560"
  },
  {
    "text": "about this so um they have a verify and the idea of the rarify is essentially simple um you take your program and",
    "start": "583560",
    "end": "590160"
  },
  {
    "text": "that's written in like a high level language you compile down and the rarify is like oh you you really want to check",
    "start": "590160",
    "end": "597279"
  },
  {
    "text": "this pointer and it checks folks some when a point it could be now like oh you checked it that it is surely not null",
    "start": "597279",
    "end": "604000"
  },
  {
    "text": "and it prevents you from doing outof bounds exceptions and it even ensures that your program terminates because you",
    "start": "604000",
    "end": "609880"
  },
  {
    "text": "don't want to have a program that in curent that accidentally doesn't terminate because then your system is",
    "start": "609880",
    "end": "615519"
  },
  {
    "text": "broken for those computer scientists in the room um the room is not full but",
    "start": "615519",
    "end": "620839"
  },
  {
    "text": "maybe there is one or two there um of course usually for two incomplete languages it's not possible to prove any",
    "start": "620839",
    "end": "628440"
  },
  {
    "text": "sufficiently compli at the property let alone that the program terminates um it's called the halting problem in in in",
    "start": "628440",
    "end": "636160"
  },
  {
    "text": "computer science but the idea is that the rifar restricts the amount of restricts the the code that we can run",
    "start": "636160",
    "end": "643279"
  },
  {
    "text": "so drastically that it's pretty easy to prove not pretty easy but it's like simple enough so the idea is essentially",
    "start": "643279",
    "end": "649639"
  },
  {
    "text": "that we disallow things like unbounded Loops because unbounded Loops a recipe for disaster uh they can be",
    "start": "649639",
    "end": "657720"
  },
  {
    "text": "unbounded as the name suggest and also um it prevents recursion from being too",
    "start": "657720",
    "end": "662760"
  },
  {
    "text": "deep so sadly no hle program in Connell that's not but who programs H I don't",
    "start": "662760",
    "end": "669519"
  },
  {
    "text": "know but uh you can't do this in col because your recursion can only be like 31 steps down um the interesting thing",
    "start": "669519",
    "end": "677480"
  },
  {
    "text": "is the more ebpf is used the more col develops improve the verifier and ensure",
    "start": "677480",
    "end": "682639"
  },
  {
    "text": "that you can do more so in the beginning you could have only like executed 4,000",
    "start": "682639",
    "end": "687800"
  },
  {
    "text": "uh program instructions which is that much but nowadays it's like at a million",
    "start": "687800",
    "end": "693040"
  },
  {
    "text": "so it increases ever more and IDE is then when it's verified you can be pretty sure that the program isn't like",
    "start": "693040",
    "end": "699440"
  },
  {
    "text": "crushing your whole colel except you can probably still write ebpf code that does",
    "start": "699440",
    "end": "704480"
  },
  {
    "text": "this so they orally found buxs where it's like when you put certain constants in the code and then multiply it you can",
    "start": "704480",
    "end": "711000"
  },
  {
    "text": "still have buxs but that's another issue uh be in mind that you don't want to have anyone that you don't trust run EPF",
    "start": "711000",
    "end": "718959"
  },
  {
    "text": "coding in your color because it can do interesting stuff we see it later so but then we have this buy code we could just",
    "start": "718959",
    "end": "725519"
  },
  {
    "text": "run it in an in a loop you probably if you saw the keynote uh this morning you",
    "start": "725519",
    "end": "731160"
  },
  {
    "text": "can run it like in in a simple interpreter like the esoteric languages but that's pretty slow so what we have",
    "start": "731160",
    "end": "737839"
  },
  {
    "text": "in the Curel is actually a jit compiler and we have this compiler that compiles it down to Native uh code it's for all",
    "start": "737839",
    "end": "744800"
  },
  {
    "text": "major platforms that people use daily like x86 arm and F 390 for those of you",
    "start": "744800",
    "end": "751120"
  },
  {
    "text": "who want to work with mainframes that's really cool and they also get this enforced and what you then take you take",
    "start": "751120",
    "end": "757959"
  },
  {
    "text": "this program then it's verified it's compiled and then it's attached to CIS call for example and you can attach it",
    "start": "757959",
    "end": "764199"
  },
  {
    "text": "to different things like network interfaces but essentially the idea is whenever an event happens this is called",
    "start": "764199",
    "end": "770959"
  },
  {
    "text": "and that's that's pretty cool in my opinion it means your colal bit gets to",
    "start": "770959",
    "end": "776279"
  },
  {
    "text": "be scriptable um and the main um Advantage here is that for one it's it",
    "start": "776279",
    "end": "782079"
  },
  {
    "text": "has safety advantages because we're verifying the whole thing before we're running it so no C St issues um then in",
    "start": "782079",
    "end": "790040"
  },
  {
    "text": "the end then we can ensure continuous delivery because we can like continuous deploy it if we every time have to run a",
    "start": "790040",
    "end": "797240"
  },
  {
    "text": "new col we can't do this but we can after program is already running and I show you in a minute how this works um",
    "start": "797240",
    "end": "804079"
  },
  {
    "text": "is running we can continuously update our programs and it's also pretty cool for the development um and then it's",
    "start": "804079",
    "end": "810880"
  },
  {
    "text": "efficient because we have a j compiler in there so it's uh pretty cool I'm a",
    "start": "810880",
    "end": "815959"
  },
  {
    "text": "compiler engineer working the open JK team at sap so I'm I'm always happy when someone uses a jet and it's standardized",
    "start": "815959",
    "end": "823079"
  },
  {
    "text": "so it's not something it's like standardized it's stable it's stable so you can with some modern techniques you",
    "start": "823079",
    "end": "829920"
  },
  {
    "text": "can even run it on like old you can run um a program that you vot for you",
    "start": "829920",
    "end": "835920"
  },
  {
    "text": "curently can run it on all the machines or the other way around and that's pretty awesome um but the the main",
    "start": "835920",
    "end": "841600"
  },
  {
    "text": "problem that we have here you you saw before that um we can attach Hooks and",
    "start": "841600",
    "end": "846639"
  },
  {
    "text": "everything but it's really pointless if the hooks can't share data with our main",
    "start": "846639",
    "end": "851680"
  },
  {
    "text": "processes here uh with our userland processes because we want to get data in and out um and commonly when when we",
    "start": "851680",
    "end": "859959"
  },
  {
    "text": "have normal programs and you probably all right there are two options to share data between two processes because in",
    "start": "859959",
    "end": "867560"
  },
  {
    "text": "effect these are two like two separate programs we have a user L program and we have a Col L program and typically what",
    "start": "867560",
    "end": "874240"
  },
  {
    "text": "we do we either use socket so essentially program a says to program B hey um here's a message and program B",
    "start": "874240",
    "end": "881000"
  },
  {
    "text": "can take it asynchronously which is pretty nice on one hand because yeah it's asynchronously um it's program B",
    "start": "881000",
    "end": "888040"
  },
  {
    "text": "doesn't have to program a doesn't have to rate to program e runs but it's probably not that efficient and the more",
    "start": "888040",
    "end": "894720"
  },
  {
    "text": "efficient way is bio shap memory the IDE is that um both both processes share",
    "start": "894720",
    "end": "900639"
  },
  {
    "text": "share some memory and they set and get from it and you have to do some synchronization work but any ideas why",
    "start": "900639",
    "end": "907959"
  },
  {
    "text": "this why both approaches aren't really good in kernel any ideas",
    "start": "907959",
    "end": "913480"
  },
  {
    "text": "here why we don't want to have it as a communication between like a user Lear process and and something that runs in",
    "start": "913480",
    "end": "922160"
  },
  {
    "text": "kernel yes it's it's all about isolation um the main problem is we don't we want",
    "start": "923000",
    "end": "929800"
  },
  {
    "text": "the the colel wants to really control what's happening with this with the communication because um consider",
    "start": "929800",
    "end": "935560"
  },
  {
    "text": "someone put some some consider some someone put some some bogus stuff in",
    "start": "935560",
    "end": "941199"
  },
  {
    "text": "there um it shouldn't crash our c um and the C wants to control what you put in",
    "start": "941199",
    "end": "947000"
  },
  {
    "text": "and want to do things like bounce checks because we saw before the verify is really an really an important part of",
    "start": "947000",
    "end": "953639"
  },
  {
    "text": "this whole Endeavor and when we just access some random memory the verify can't do anything but with these apis",
    "start": "953639",
    "end": "960160"
  },
  {
    "text": "the verifier knows oh this data structure should behave this way you can",
    "start": "960160",
    "end": "965560"
  },
  {
    "text": "put these amount you can put this uh large animal elements in there in your",
    "start": "965560",
    "end": "972360"
  },
  {
    "text": "data structure and so that's pretty cool and so that's something that the um that",
    "start": "972360",
    "end": "978720"
  },
  {
    "text": "the col provides us with um and it's called the BPS map um and it uses as",
    "start": "978720",
    "end": "985279"
  },
  {
    "text": "calls to communicate so the main idea is that you have like process is there and they then use system calls itself of",
    "start": "985279",
    "end": "992560"
  },
  {
    "text": "course to communicate with these maps and the ebpf programs they can use maps",
    "start": "992560",
    "end": "997800"
  },
  {
    "text": "to hold state to and even in I find this kind of interesting some parts of the ebpf programs are itself Maps so when",
    "start": "997800",
    "end": "1005279"
  },
  {
    "text": "you have for example Global variables they implicitly parted of a map and that makes it interesting um because you can",
    "start": "1005279",
    "end": "1012240"
  },
  {
    "text": "query all state so there are multiple different Maps there for example there hash tables simple as you know from from",
    "start": "1012240",
    "end": "1020079"
  },
  {
    "text": "all languages you like like JavaScript and PHP um you have arrays you have P",
    "start": "1020079",
    "end": "1025918"
  },
  {
    "text": "ring buffers or ring buffer is essentially um a circular buffer like boner buffer where you can write data on",
    "start": "1025919",
    "end": "1032199"
  },
  {
    "text": "one end in um and read data on another point and the idea is that you can do",
    "start": "1032199",
    "end": "1037438"
  },
  {
    "text": "something like asynchronous communication with it because you for example uh when you loog from EA program",
    "start": "1037439",
    "end": "1044600"
  },
  {
    "text": "you lock something in the ring buffer your um user land program can then",
    "start": "1044600",
    "end": "1050320"
  },
  {
    "text": "asynchronously get the data and that's pretty decent then you have um the whole",
    "start": "1050320",
    "end": "1055520"
  },
  {
    "text": "thing of um last recent least recently use maps and that's pretty cool because",
    "start": "1055520",
    "end": "1060760"
  },
  {
    "text": "you can essentially have maps that implemented in a way that when the map is full it doesn't fatal but the oldest",
    "start": "1060760",
    "end": "1066799"
  },
  {
    "text": "entry is removed and then you also have stack race maps and Q and everything and there are every data I think that like",
    "start": "1066799",
    "end": "1074320"
  },
  {
    "text": "they adding like every day a few of these so it's growing and growing and growing and the Space is really active",
    "start": "1074320",
    "end": "1081240"
  },
  {
    "text": "here um so uh you should definitely follow it so the idea with networking um",
    "start": "1081240",
    "end": "1087480"
  },
  {
    "text": "is that um as we see here you can um hook at every part of the networking",
    "start": "1087480",
    "end": "1093880"
  },
  {
    "text": "Journey you saw before that we can hook at the xtp pur so we can hook at like",
    "start": "1093880",
    "end": "1099720"
  },
  {
    "text": "almost as close as you can as the hardware level even offloaded to the hardware then we can um hook it at like",
    "start": "1099720",
    "end": "1106840"
  },
  {
    "text": "the TCP I level and even like at the socket level so the top end of your network stck and then of course it's",
    "start": "1106840",
    "end": "1113600"
  },
  {
    "text": "this call and other levels and it's and that's pretty awesome because um it allows you to um choose what you want so",
    "start": "1113600",
    "end": "1121679"
  },
  {
    "text": "the more up you get in the network sector the more information you get and the more pre-processed the data is but",
    "start": "1121679",
    "end": "1128200"
  },
  {
    "text": "it's also less performant and it's the other way around because consider when uh when a packet leaves your application",
    "start": "1128200",
    "end": "1134360"
  },
  {
    "text": "you also want to drop it as fast as possible you also so you probably want to drop it at the top of the network s",
    "start": "1134360",
    "end": "1141360"
  },
  {
    "text": "and that's pretty cool so there are so many use cases I can't count it here because in the last few years it's s",
    "start": "1141360",
    "end": "1148360"
  },
  {
    "text": "like in 2016 but nowadays it exploded um the cool thing is for ebpf almost",
    "start": "1148360",
    "end": "1153840"
  },
  {
    "text": "everything is visible so you have um so you have cross plat so you have cross",
    "start": "1153840",
    "end": "1159559"
  },
  {
    "text": "system visibility of almost everything of all the sockets of all the volumes of",
    "start": "1159559",
    "end": "1165200"
  },
  {
    "text": "all the data and that's pretty pretty cool uh because a lot because it allows you for example to do uh cross language",
    "start": "1165200",
    "end": "1172480"
  },
  {
    "text": "profiling because you have a profile that can deal with like Java processes with go processes at the same time and",
    "start": "1172480",
    "end": "1178960"
  },
  {
    "text": "sees all of them on the system and that's really what many people use it for they use it for observability and",
    "start": "1178960",
    "end": "1185400"
  },
  {
    "text": "for monitoring but they also use it for for security control um because you can hook into different hooks uh from the",
    "start": "1185400",
    "end": "1192480"
  },
  {
    "text": "lenux security module and you can essentially prevent file accesses um and",
    "start": "1192480",
    "end": "1198360"
  },
  {
    "text": "other things and the cool thing is because you can hook it and write it in",
    "start": "1198360",
    "end": "1203400"
  },
  {
    "text": "and and and write these programs properly you can extend it without relying on the Kernel calling all the",
    "start": "1203400",
    "end": "1209840"
  },
  {
    "text": "time back to your application which is pretty slow we don't like slow because it's usually commonly used on on server",
    "start": "1209840",
    "end": "1216640"
  },
  {
    "text": "platforms um where performance really matters um and I mentioned it before um",
    "start": "1216640",
    "end": "1224400"
  },
  {
    "text": "you can for example what Crouch like did if I remember correctly they",
    "start": "1224400",
    "end": "1229600"
  },
  {
    "text": "had their call module in Windows and that was not a good idea and then they had I think the issue was what the layer",
    "start": "1229600",
    "end": "1235440"
  },
  {
    "text": "found on was like an um out of bounds access and the cool thing is with ebpf",
    "start": "1235440",
    "end": "1241440"
  },
  {
    "text": "the verifier reminds you that hey um you didn't check like the bounds and that's",
    "start": "1241440",
    "end": "1246679"
  },
  {
    "text": "pretty cool so you don't have these issues and currently at at Microsoft apparently regarding to some new sources",
    "start": "1246679",
    "end": "1253720"
  },
  {
    "text": "new sources they are trying to get ebpf in which is pretty nice and they already",
    "start": "1253720",
    "end": "1258960"
  },
  {
    "text": "approaches and I think evf will grow not on the Mac system you're seeing here them running a Mac they have different",
    "start": "1258960",
    "end": "1265520"
  },
  {
    "text": "systems but um on vs and Linux is is it's pretty hot these days but of course",
    "start": "1265520",
    "end": "1272000"
  },
  {
    "text": "ebf has bugs too so um you all write software hopefully um but you you",
    "start": "1272000",
    "end": "1278559"
  },
  {
    "text": "probably know that your software has bugs as good as you test it will always have bugs and um and you find like 10 of",
    "start": "1278559",
    "end": "1286120"
  },
  {
    "text": "these uh in the official cve databases and they are mostly related to the rier",
    "start": "1286120",
    "end": "1292360"
  },
  {
    "text": "because um when the r fire fails and the r fire can't find an issue in the code",
    "start": "1292360",
    "end": "1298799"
  },
  {
    "text": "then it can run and can crush your system um that's not great but remember",
    "start": "1298799",
    "end": "1304000"
  },
  {
    "text": "you should only um one EF programs from sources that you trust because they run",
    "start": "1304000",
    "end": "1310440"
  },
  {
    "text": "with Cur privileges um so um let's consider the EP EPF ecosystem after I",
    "start": "1310440",
    "end": "1316559"
  },
  {
    "text": "told you how great it all is um you have on the lower level you have the L Channel nothing fancy here I told you",
    "start": "1316559",
    "end": "1323400"
  },
  {
    "text": "already with the verifier the jit and some apis that help you develop it then you have on top you have the user space",
    "start": "1323400",
    "end": "1330200"
  },
  {
    "text": "but you usually don't use just the system call and be like fine because that's really hard so they libraries for",
    "start": "1330200",
    "end": "1337000"
  },
  {
    "text": "many languages like go C++ and rust um and then on top they like Frameworks that like end users use um like celum",
    "start": "1337000",
    "end": "1345720"
  },
  {
    "text": "Falon something and other profiles there and anything missing here in this",
    "start": "1345720",
    "end": "1351159"
  },
  {
    "text": "runtime any language missing here was a trick",
    "start": "1351159",
    "end": "1358039"
  },
  {
    "text": "question anyone which language yes",
    "start": "1358039",
    "end": "1365120"
  },
  {
    "text": "Java so of course there's Java missing and so um I I thought about doing some",
    "start": "1365120",
    "end": "1370760"
  },
  {
    "text": "EF last year and I was like oh um there's no Java library for this that's not good because I work at sub machine",
    "start": "1370760",
    "end": "1377640"
  },
  {
    "text": "we like the third biggest contribut to JK work on like Java profiling and it's",
    "start": "1377640",
    "end": "1382960"
  },
  {
    "text": "cool um yeah so I thought maybe let's change that and you know when you're",
    "start": "1382960",
    "end": "1388640"
  },
  {
    "text": "like going into the state of rers and be like how hard could it be and like eight",
    "start": "1388640",
    "end": "1393720"
  },
  {
    "text": "months later I'm here um and it's the first presentation in a conference I'll me giving out the topic oh gosh um and",
    "start": "1393720",
    "end": "1401799"
  },
  {
    "text": "you know the point where like what have I done how did I end up here and that's",
    "start": "1401799",
    "end": "1407720"
  },
  {
    "text": "the point where I'm here so um I I hope you like this all because um I like Java",
    "start": "1407720",
    "end": "1413200"
  },
  {
    "text": "kind of yes I know it's a many of you develop. net but still Java is the OG",
    "start": "1413200",
    "end": "1418279"
  },
  {
    "text": "good language um and the net came later anyway um to to again quote pron NE um",
    "start": "1418279",
    "end": "1424559"
  },
  {
    "text": "EF is a crazy technology it's like putting JavaScript in the Linux C but",
    "start": "1424559",
    "end": "1429600"
  },
  {
    "text": "you know what's also related to JavaScript Java no um kidding I was once at a conference where someone um uh",
    "start": "1429600",
    "end": "1436919"
  },
  {
    "text": "didn't know what I was doing so she introduced me as a JavaScript developer and it was",
    "start": "1436919",
    "end": "1442720"
  },
  {
    "text": "like no it was it was really terrible um I",
    "start": "1442720",
    "end": "1448640"
  },
  {
    "text": "don't have anything against JavaScript but I think a language that's R like two two days um it's probably not the best",
    "start": "1448640",
    "end": "1454799"
  },
  {
    "text": "language to PO thing and you should definitely not run it in the colonel I much rather write Rockstar in the colel",
    "start": "1454799",
    "end": "1460760"
  },
  {
    "text": "than JavaScript anyway um there's no JavaScript runtime in the kernel yet but if you have any free time and enough",
    "start": "1460760",
    "end": "1467960"
  },
  {
    "text": "beers uh probably you start one yourself how wrong could it be anyway um uh for",
    "start": "1467960",
    "end": "1474039"
  },
  {
    "text": "all of you that that for the all people in room uh you might seen this reference",
    "start": "1474039",
    "end": "1479720"
  },
  {
    "text": "um that I want to use a programming language which doesn't only run on userland um uh it's from a trailer of",
    "start": "1479720",
    "end": "1487000"
  },
  {
    "text": "java so and I can really recommend it um so um Mya was like Java is one of the most used languages nowadays so you use",
    "start": "1487000",
    "end": "1494840"
  },
  {
    "text": "it on on service it's mostly uses also for like and try to develop mobile apps",
    "start": "1494840",
    "end": "1500600"
  },
  {
    "text": "but it doesn't have any integration with ebpf isn't this like not good I don't",
    "start": "1500600",
    "end": "1506159"
  },
  {
    "text": "know but it started working and that's the result it's hello ebpf it's the first and only um Java library for ebpf",
    "start": "1506159",
    "end": "1513520"
  },
  {
    "text": "um you can check it out uh all of you have I have the resoures at the end as a",
    "start": "1513520",
    "end": "1518679"
  },
  {
    "text": "QR code so you don't have to scan all the resources now um and it's a work of progress I worked on it for like eight",
    "start": "1518679",
    "end": "1525240"
  },
  {
    "text": "months now um I do this like as a Friday evening project at work and then spend too many weekends on it uh but you know",
    "start": "1525240",
    "end": "1532840"
  },
  {
    "text": "German Winters can be cold and Summers can be hot so know how it goes it's a",
    "start": "1532840",
    "end": "1538360"
  },
  {
    "text": "nice time there and I worked on firewalls because um finally I finished",
    "start": "1538360",
    "end": "1544399"
  },
  {
    "text": "this demo this morning but anyway um that's how it goes um it's the idea that",
    "start": "1544399",
    "end": "1549679"
  },
  {
    "text": "um now we show you how like a broad demo works so that you can see that you can actually write the Lightning Fast",
    "start": "1549679",
    "end": "1555960"
  },
  {
    "text": "firewall directly in Java and then I'll later show you the building blocks so that's the part um where it's getting",
    "start": "1555960",
    "end": "1562320"
  },
  {
    "text": "like to a demo so wish me luck uh let's start this thing um I've written it with",
    "start": "1562320",
    "end": "1569320"
  },
  {
    "text": "spring um I didn't know whether you know spring is like one of the most used uh web frame works out there in the Java",
    "start": "1569320",
    "end": "1575360"
  },
  {
    "text": "world and uh I used it and hopefully Works um let's",
    "start": "1575360",
    "end": "1581200"
  },
  {
    "text": "see so there it is I just make it a bit larger so the ideas with this are that",
    "start": "1581200",
    "end": "1589000"
  },
  {
    "text": "when we have an ebf um library for Java we can integrate it directly in your",
    "start": "1589000",
    "end": "1594399"
  },
  {
    "text": "Java libraries like you can do it with spring or can use other libraries and the cool thing here is that we can um",
    "start": "1594399",
    "end": "1600919"
  },
  {
    "text": "that uh in the colite we have an Rule and the rule is pretty simple you can define a rule by hey saying oh this is",
    "start": "1600919",
    "end": "1607360"
  },
  {
    "text": "the IP address of an incoming packet please ignore like these many low bindes",
    "start": "1607360",
    "end": "1612840"
  },
  {
    "text": "um just so you can say oh please essentially um just catch all of ke",
    "start": "1612840",
    "end": "1618480"
  },
  {
    "text": "addresses then you can write the source port for example we want to drop every package that comes in from the htps port",
    "start": "1618480",
    "end": "1626640"
  },
  {
    "text": "um and we and we don't care about the destination Port so we don't care about the port that's like coming in on on our",
    "start": "1626640",
    "end": "1633720"
  },
  {
    "text": "system cool thing is when we now press send Jason and it hopefully",
    "start": "1633720",
    "end": "1639720"
  },
  {
    "text": "works and it hopefully works it hopefully works let we know run",
    "start": "1639720",
    "end": "1647000"
  },
  {
    "text": "Jason",
    "start": "1647000",
    "end": "1650000"
  },
  {
    "text": "then that's the problem with life damage um just assume that it",
    "start": "1656039",
    "end": "1663159"
  },
  {
    "text": "works okay I restart the thing so the cool thing is um oh so so one of the",
    "start": "1663360",
    "end": "1669240"
  },
  {
    "text": "problems when you ever do this kind of development Happ uh quite often is that",
    "start": "1669240",
    "end": "1674559"
  },
  {
    "text": "um limo VM which I'm using to run this on my Mac because makes a far easier for presentations it sometimes just stops",
    "start": "1674559",
    "end": "1682080"
  },
  {
    "text": "working um and so I just restart it um and the cool",
    "start": "1682080",
    "end": "1690120"
  },
  {
    "text": "thing with this labr while S I can tell you about this that you can quite you can quite easily",
    "start": "1690120",
    "end": "1696679"
  },
  {
    "text": "integrate it",
    "start": "1696679",
    "end": "1701760"
  },
  {
    "text": "go you can C easily integrated into applic okay gosh",
    "start": "1701760",
    "end": "1709278"
  },
  {
    "text": "I'll start uh some more information so um what we doing then after we start is",
    "start": "1721279",
    "end": "1726679"
  },
  {
    "text": "we're doing some live coding so you see how you can actually write some simple programs that run in the",
    "start": "1726679",
    "end": "1732960"
  },
  {
    "text": "call go and of course you have to run it via",
    "start": "1732960",
    "end": "1739240"
  },
  {
    "text": "Pudo because you modifying the col um",
    "start": "1739240",
    "end": "1745080"
  },
  {
    "text": "and the thing is what what it does in the beginning it it starts your spring application but it also starts up the",
    "start": "1748039",
    "end": "1754519"
  },
  {
    "text": "firewall so what my application does it does all the bite code compiling at run",
    "start": "1754519",
    "end": "1759600"
  },
  {
    "text": "at at build time so it's usually pretty fast to build up but what you see when you develop some EPF applications they",
    "start": "1759600",
    "end": "1766799"
  },
  {
    "text": "takes the Cal some some seconds to actually do the verification because it does quite a lot of work but apparently",
    "start": "1766799",
    "end": "1773960"
  },
  {
    "text": "it work now so we can sent a Chason it worked thank god um and the use this",
    "start": "1773960",
    "end": "1779760"
  },
  {
    "text": "this object is directly put into the cuddle um think what you want about putting things from the network",
    "start": "1779760",
    "end": "1787120"
  },
  {
    "text": "unchecked directly in col but it's put in the col he does the col does its thing and then when we trigger request",
    "start": "1787120",
    "end": "1793039"
  },
  {
    "text": "on the server for example we we allow to Ser request on a web page AG GP web page",
    "start": "1793039",
    "end": "1800360"
  },
  {
    "text": "um it's blocked and we should in a second see here that it's blocked",
    "start": "1800360",
    "end": "1808200"
  },
  {
    "text": "and and you should see appearer things here um B um you know JavaScript",
    "start": "1812320",
    "end": "1818399"
  },
  {
    "text": "development start but um you you see here that we opening but we don't",
    "start": "1818399",
    "end": "1823679"
  },
  {
    "text": "getting anything back and now um we're going to the live coding part um um I",
    "start": "1823679",
    "end": "1829200"
  },
  {
    "text": "would call it having fun with ebpf and we still have like 15 20 minutes left so",
    "start": "1829200",
    "end": "1835039"
  },
  {
    "text": "um that's what we're doing now um so for simple H World um I hope you can see can",
    "start": "1835039",
    "end": "1841120"
  },
  {
    "text": "you all see it cool um for simple help world it's pretty simple with malari you",
    "start": "1841120",
    "end": "1846760"
  },
  {
    "text": "just sell it um at BPF just sell hey that's an BPF application by the way you",
    "start": "1846760",
    "end": "1852679"
  },
  {
    "text": "usually want to give it a license because um the L Cel is GP license and",
    "start": "1852679",
    "end": "1858000"
  },
  {
    "text": "and only some parts can be accessed with non GPL code so you tell which license",
    "start": "1858000",
    "end": "1863720"
  },
  {
    "text": "you have here you also tell like hey that's a BPF program that's fine and what we also want to do we in this case",
    "start": "1863720",
    "end": "1870600"
  },
  {
    "text": "we want to um get hooked um at a hook",
    "start": "1870600",
    "end": "1876159"
  },
  {
    "text": "whenever a file is open so we use the system call hooks uh that we have",
    "start": "1876159",
    "end": "1882000"
  },
  {
    "text": "here um and um now we can just",
    "start": "1882000",
    "end": "1889880"
  },
  {
    "text": "use we can now just Implement something for example we can use the open ad",
    "start": "1889880",
    "end": "1895559"
  },
  {
    "text": "method open at to that's used by many programs like cat or anything to to work",
    "start": "1895559",
    "end": "1902919"
  },
  {
    "text": "um and it's an interface so we have to write Implement so um the cool thing is",
    "start": "1902919",
    "end": "1908039"
  },
  {
    "text": "that's called whenever Falls open so whenever system uses this and for example what we can do we can just use",
    "start": "1908039",
    "end": "1914840"
  },
  {
    "text": "BPF Trace printk that's kind of the print F debugging that we usually do in",
    "start": "1914840",
    "end": "1920840"
  },
  {
    "text": "some languages um and what we can do here we can just print the F which is",
    "start": "1920840",
    "end": "1926919"
  },
  {
    "text": "yeah opening we can just say opening the file",
    "start": "1926919",
    "end": "1932880"
  },
  {
    "text": "name and what we then have to do we we have to of course attach it somewhere so",
    "start": "1932880",
    "end": "1938240"
  },
  {
    "text": "um we write our main method um if you don't know Java you always need like public say what main method but the cool",
    "start": "1938240",
    "end": "1945120"
  },
  {
    "text": "thing is we we can just say um uh we we can just get our",
    "start": "1945120",
    "end": "1951880"
  },
  {
    "text": "program and loaded so let's let's load the program sample that",
    "start": "1951880",
    "end": "1958320"
  },
  {
    "text": "class and what we of course have to do we have to attach it so we can tell please please attach me everything you",
    "start": "1958320",
    "end": "1964399"
  },
  {
    "text": "know how to do it and then just say it hey please print and the cool thing here",
    "start": "1964399",
    "end": "1969639"
  },
  {
    "text": "is that the part here this this runs in the call that's compiled down to see",
    "start": "1969639",
    "end": "1975039"
  },
  {
    "text": "show you in soon how it works but this run runs in colel this runs in usland",
    "start": "1975039",
    "end": "1980639"
  },
  {
    "text": "and they communicate seamlessly so let's try it out um we just have to use Maven",
    "start": "1980639",
    "end": "1987039"
  },
  {
    "text": "it's like in jav world is like one of the most used P um bolt systems and this then runs it and",
    "start": "1987039",
    "end": "1994919"
  },
  {
    "text": "compiles it down and when we load it here it's loaded in the C and you don't have to do anything so let's see how it",
    "start": "1994919",
    "end": "2001639"
  },
  {
    "text": "works",
    "start": "2001639",
    "end": "2004639"
  },
  {
    "text": "and now it's it's pretty simple we just use our run script it just runs it",
    "start": "2009399",
    "end": "2014600"
  },
  {
    "text": "directly um and you see here these are all the files that are opened um these",
    "start": "2014600",
    "end": "2019880"
  },
  {
    "text": "are these are all the files that are opened on your system and the cool thing is that that actually you see here it's the same string that that actually runs",
    "start": "2019880",
    "end": "2026519"
  },
  {
    "text": "in a call and I find it pretty awesome because you can even do more things so um an interesting thing with this is",
    "start": "2026519",
    "end": "2035200"
  },
  {
    "text": "um you can do nasty things with it so uh we all want to do interesting po I I",
    "start": "2035200",
    "end": "2041039"
  },
  {
    "text": "believe um what you can do with this is file name is essentially in the C code",
    "start": "2041039",
    "end": "2046720"
  },
  {
    "text": "that we have is essentially just a pointer and it's a point in user space so does anyone have an idea what we",
    "start": "2046720",
    "end": "2054280"
  },
  {
    "text": "could do interesting stuff with could we could we modify",
    "start": "2054280",
    "end": "2061280"
  },
  {
    "text": "it anyone wants to modify this thing to hide some f so yeah that's essentially",
    "start": "2061280",
    "end": "2066919"
  },
  {
    "text": "what we can do um and it also shows you the power of likef so what we here we",
    "start": "2066919",
    "end": "2072118"
  },
  {
    "text": "have a method that's pretty simple it's called is file forbidden that also is compiled out it runs in the col that",
    "start": "2072119",
    "end": "2078919"
  },
  {
    "text": "just checks is this the file SL tm/ forit um this year we need to have B",
    "start": "2078919",
    "end": "2085320"
  },
  {
    "text": "Loops because we want it to terminate but how enter open now works is we just",
    "start": "2085320",
    "end": "2092079"
  },
  {
    "text": "we first read because it's in user space memory we first have to read the file",
    "start": "2092079",
    "end": "2097359"
  },
  {
    "text": "name um and then we check how is this file forbidden and if yes what we do we write",
    "start": "2097359",
    "end": "2103880"
  },
  {
    "text": "user space because we cannot only like read user space memory but we can write it too so what we do we just write um",
    "start": "2103880",
    "end": "2111839"
  },
  {
    "text": "the empty string in which is pretty nice because we essentially highing this file from",
    "start": "2111839",
    "end": "2117680"
  },
  {
    "text": "excess with this so I can show you how this works so we have the demo F in",
    "start": "2117680",
    "end": "2124760"
  },
  {
    "text": "file here and what now do is I open the different shell um so he can just see so",
    "start": "2124760",
    "end": "2133440"
  },
  {
    "text": "what we can do here we can try to we we can try to touch the file let's",
    "start": "2133440",
    "end": "2140838"
  },
  {
    "text": "see you see the issue it's like down there um it tells us cannot touch the",
    "start": "2141079",
    "end": "2147400"
  },
  {
    "text": "empty file name yes because we modified it and of course thing is that runs all",
    "start": "2147400",
    "end": "2152880"
  },
  {
    "text": "in col and then modifies it and that essentially hides it of course we can do things where with um with symbolic links",
    "start": "2152880",
    "end": "2160760"
  },
  {
    "text": "and everything to like to to to work around this but the cool thing is we can easily like hide it from the from the",
    "start": "2160760",
    "end": "2167960"
  },
  {
    "text": "obvious unlocker um I think that's that's pretty interesting so be aware",
    "start": "2167960",
    "end": "2173079"
  },
  {
    "text": "that people can do bad things with ebpf um but this could also help to to for",
    "start": "2173079",
    "end": "2178640"
  },
  {
    "text": "example hide files that you don't want others to see so",
    "start": "2178640",
    "end": "2183960"
  },
  {
    "text": "yes um and why didn't I do this before with like the BPF trans pin K because",
    "start": "2183960",
    "end": "2190400"
  },
  {
    "text": "these help me St special they do manic things but the main problem is this",
    "start": "2190400",
    "end": "2195560"
  },
  {
    "text": "points into user space but we're currently in kernel space so s that we",
    "start": "2195560",
    "end": "2200720"
  },
  {
    "text": "tell our Colonel please read this piece of um this this string and the string",
    "start": "2200720",
    "end": "2206839"
  },
  {
    "text": "has a certain size with specif here please um copy the string in from the",
    "start": "2206839",
    "end": "2212520"
  },
  {
    "text": "user space and the same thing is when we're in col when we want to read colal memory we cannot directly access it and",
    "start": "2212520",
    "end": "2219280"
  },
  {
    "text": "that's for good reasons because the colel can do any can do tricks and also the verifier knows of the behavi of this",
    "start": "2219280",
    "end": "2226240"
  },
  {
    "text": "if you just had a mem copy that wouldn't be that easy so that's the whole thing",
    "start": "2226240",
    "end": "2231680"
  },
  {
    "text": "that that code is in is in user space that memory we have to read it",
    "start": "2231680",
    "end": "2238880"
  },
  {
    "text": "directly and that's like one of the problems when you're like at the boundary between userland and kernel",
    "start": "2238880",
    "end": "2244920"
  },
  {
    "text": "land and when your system callers like in between so it deals with it runs in a",
    "start": "2244920",
    "end": "2250200"
  },
  {
    "text": "colal space the implementation but it gets all its arguments from the um from",
    "start": "2250200",
    "end": "2255560"
  },
  {
    "text": "the userland any more questions good and that's a cool thing",
    "start": "2255560",
    "end": "2261560"
  },
  {
    "text": "we we can just write simple programs here um you're allowed to do a subset of java you're allowed to do loops you're",
    "start": "2261560",
    "end": "2267480"
  },
  {
    "text": "allowed to do things and that makes it pretty easy to to try things out uh now back to to",
    "start": "2267480",
    "end": "2274440"
  },
  {
    "text": "xtp the idea as we as we saw before is that xtp essentially allows us to um hook into",
    "start": "2274440",
    "end": "2282920"
  },
  {
    "text": "the network card like at at the bottom of your network stack and check whether packages poers or should be dropped so",
    "start": "2282920",
    "end": "2290560"
  },
  {
    "text": "um essentially your packet comes in from the internet uh goes in goes like at the",
    "start": "2290560",
    "end": "2295720"
  },
  {
    "text": "start of your network driver infrastructure and then it asks like hey EF program should I let it po or should",
    "start": "2295720",
    "end": "2301200"
  },
  {
    "text": "I let it drop and if it should pass then it gets further through the network stack um and to your applications and",
    "start": "2301200",
    "end": "2308160"
  },
  {
    "text": "the cool thing is that your ebf program can communicate in two ways so um you",
    "start": "2308160",
    "end": "2313480"
  },
  {
    "text": "can get data from your in my case Java EPF application for example it can set",
    "start": "2313480",
    "end": "2318760"
  },
  {
    "text": "the block IPS as we've seen before you can set the rules and you can set back you can send",
    "start": "2318760",
    "end": "2324960"
  },
  {
    "text": "back information like statistics and other information and that's pretty cool because it allows us",
    "start": "2324960",
    "end": "2331000"
  },
  {
    "text": "to to build versatile applications with this important here is that you learn a",
    "start": "2331000",
    "end": "2337280"
  },
  {
    "text": "lot lot about things like kernel because you quite literally sometimes have to",
    "start": "2337280",
    "end": "2342520"
  },
  {
    "text": "look in the kernel how things implemented but also you learn a lot about here in this case about how",
    "start": "2342520",
    "end": "2348200"
  },
  {
    "text": "networks packages work because what xtp gives you and I show you in a minute it",
    "start": "2348200",
    "end": "2353720"
  },
  {
    "text": "just gives you hey here's a memory space Here's like the memory space where this package lies I don't know whether it's a",
    "start": "2353720",
    "end": "2360319"
  },
  {
    "text": "TCP packet because I don't care that the process hasn't processed it yet so your",
    "start": "2360319",
    "end": "2365920"
  },
  {
    "text": "Linux doesn't know oh is it an IP V4 is an IP V6 it just knows that's an eut",
    "start": "2365920",
    "end": "2372640"
  },
  {
    "text": "package of like size 1 kilobyte so um just a heads up for you um that's how",
    "start": "2372640",
    "end": "2380079"
  },
  {
    "text": "packages look like so a package on the network first has some ethernet information um and from the ethernet",
    "start": "2380079",
    "end": "2386319"
  },
  {
    "text": "information from the ethernet headers you get for example information is this an ipv4 IPv6 package then your ipv4",
    "start": "2386319",
    "end": "2393880"
  },
  {
    "text": "package knows the protocol like is it TCP UDP or more and has some addresses",
    "start": "2393880",
    "end": "2399240"
  },
  {
    "text": "like your incoming and your external um IP addresses and then there's um the TCP",
    "start": "2399240",
    "end": "2406079"
  },
  {
    "text": "layer essentially it contains the PS and it reps like the HTTP package um and",
    "start": "2406079",
    "end": "2416200"
  },
  {
    "text": "now now we're here again and cool thing is how how do we implement this it's",
    "start": "2416200",
    "end": "2423240"
  },
  {
    "text": "very simple there's an interface for this it's called XP hook and so um what",
    "start": "2423240",
    "end": "2429000"
  },
  {
    "text": "you can just do is there's an xtp handle packet and it's like with every Handler",
    "start": "2429000",
    "end": "2434960"
  },
  {
    "text": "that different before um you get some information in um what do you see here um on that's Java code that it generated",
    "start": "2434960",
    "end": "2442640"
  },
  {
    "text": "to back um the the Linux code is you can see here that we're getting data on the data end and we can also get the network",
    "start": "2442640",
    "end": "2450240"
  },
  {
    "text": "interfaces that are packages incoming and outgoing which is pretty neat to know um you know then is it coming VI",
    "start": "2450240",
    "end": "2458640"
  },
  {
    "text": "your your internal devices or is it coming via the Wi-Fi um but essentially",
    "start": "2458640",
    "end": "2464240"
  },
  {
    "text": "we have the packet and a pretty easy way would be we we just return enum we could drop everything but dropping every",
    "start": "2464240",
    "end": "2471480"
  },
  {
    "text": "package is not in great because yeah we essentially block any communication with the system but what we can easily do we",
    "start": "2471480",
    "end": "2478079"
  },
  {
    "text": "can use Global variables and for example what we can do here is we can create a",
    "start": "2478079",
    "end": "2483119"
  },
  {
    "text": "global variable that's an unsigned integer um and we can call it count and",
    "start": "2483119",
    "end": "2490400"
  },
  {
    "text": "can all guess what this does every time we get in package in we say count",
    "start": "2490400",
    "end": "2497680"
  },
  {
    "text": "is the count + one that's simple to write the cool thing is here that we can",
    "start": "2497680",
    "end": "2503000"
  },
  {
    "text": "then say Oh by the way if count. get mly for example to to drop",
    "start": "2503000",
    "end": "2510200"
  },
  {
    "text": "every third package is like zero then we just drop the package I'll SP Po and",
    "start": "2510200",
    "end": "2516599"
  },
  {
    "text": "that's a simple it's not a firewall because it just randomly drops every third package but that's code that",
    "start": "2516599",
    "end": "2522400"
  },
  {
    "text": "actually drops your packages at high speed every third of them every third",
    "start": "2522400",
    "end": "2527599"
  },
  {
    "text": "incoming and that's pretty cool um to to attach it here we have to attach it to",
    "start": "2527599",
    "end": "2533160"
  },
  {
    "text": "um to uh to our network interfaces and the cool thing is here you you see here",
    "start": "2533160",
    "end": "2538520"
  },
  {
    "text": "that we have a global variable how cool would it be if we could just read the global variable from from the Newland",
    "start": "2538520",
    "end": "2544640"
  },
  {
    "text": "and we can so for example uh we can just",
    "start": "2544640",
    "end": "2550519"
  },
  {
    "text": "um every like 500 milliseconds we can just print us so um count",
    "start": "2550599",
    "end": "2558880"
  },
  {
    "text": "it and we can just access it as before we can use in most cases like the",
    "start": "2560160",
    "end": "2565680"
  },
  {
    "text": "similar methods that we used in evf but um and that's Java so we have checked",
    "start": "2565680",
    "end": "2571640"
  },
  {
    "text": "exceptions um and that's all that drops every",
    "start": "2571640",
    "end": "2577359"
  },
  {
    "text": "package coming into your system let's give it a spin and hope I code it",
    "start": "2577359",
    "end": "2583119"
  },
  {
    "text": "correctly",
    "start": "2583119",
    "end": "2586119"
  },
  {
    "text": "um and you see sometimes oh uh yes um it has to be final because my code would be",
    "start": "2596760",
    "end": "2603160"
  },
  {
    "text": "terribly confused if you reassign count because under the hood that's it's quite some effort to make it working um and",
    "start": "2603160",
    "end": "2611480"
  },
  {
    "text": "you see here how to write how to integrate an application that's written in Java with with ef code um and that",
    "start": "2611480",
    "end": "2619760"
  },
  {
    "text": "should now work",
    "start": "2619760",
    "end": "2623319"
  },
  {
    "text": "um",
    "start": "2625240",
    "end": "2628240"
  },
  {
    "text": "so good and now we're running it um",
    "start": "2632280",
    "end": "2638800"
  },
  {
    "text": "and then comes packages and every third is dropped you see here um like",
    "start": "2639680",
    "end": "2645079"
  },
  {
    "text": "everything the temps and when we for example when we get the Google",
    "start": "2645079",
    "end": "2651720"
  },
  {
    "text": "homepage the count increases um and I can tell you web servers don't like it",
    "start": "2652079",
    "end": "2657680"
  },
  {
    "text": "if you drop every third package because it also means like acknowledgements and TCP level all drop but the cool thing is",
    "start": "2657680",
    "end": "2664119"
  },
  {
    "text": "using this and also doing similar stuff with you can easily test your application whether it's really BRS for",
    "start": "2664119",
    "end": "2670839"
  },
  {
    "text": "example but it BRS when your network connection is really horrible um and that's pretty cool and you can even like",
    "start": "2670839",
    "end": "2678040"
  },
  {
    "text": "if you want to do you can even extend this to implement um uh more complex",
    "start": "2678040",
    "end": "2684000"
  },
  {
    "text": "stuffs for example you could do here pseud random number generator that just like sud sudo randomly drops these",
    "start": "2684000",
    "end": "2690960"
  },
  {
    "text": "packages and that's I think pretty awesome and to to cot clock to quot",
    "start": "2690960",
    "end": "2696599"
  },
  {
    "text": "clock thir thir law any sufficiently Advanced Technologies in distinguish from maging and I think when when you",
    "start": "2696599",
    "end": "2702680"
  },
  {
    "text": "see this I feel it sometimes like I can run Java code in the col how cool and",
    "start": "2702680",
    "end": "2708880"
  },
  {
    "text": "sometimes mad it is and cool thing is with Java um how I got today is that",
    "start": "2708880",
    "end": "2715160"
  },
  {
    "text": "Java in like the recent versions got project Panama which essentially allows us to easily interact with Native",
    "start": "2715160",
    "end": "2721520"
  },
  {
    "text": "libraries um and to easily allocate memory and to easily interact with libraries bus C and C++ um and this is",
    "start": "2721520",
    "end": "2729280"
  },
  {
    "text": "the thing that makes it possible because in the end I'm relying on the lip BPF I'm relying on the well designed Library",
    "start": "2729280",
    "end": "2735760"
  },
  {
    "text": "under the H and how it works technically so for for all the people that want to",
    "start": "2735760",
    "end": "2741200"
  },
  {
    "text": "know here is that essentially we take our program and we've seen this program before um in this case we have a method",
    "start": "2741200",
    "end": "2748000"
  },
  {
    "text": "sh drop because you can of course as we've seen before Define methods and it's first then pre-processed and all",
    "start": "2748000",
    "end": "2754480"
  },
  {
    "text": "the data structures are resolved and then I take the abstract synx tree and",
    "start": "2754480",
    "end": "2759599"
  },
  {
    "text": "then transform it to to C code and then compile it down and the ebpf code for",
    "start": "2759599",
    "end": "2765960"
  },
  {
    "text": "something like sh drop that just checks whether the count model 3 is one um",
    "start": "2765960",
    "end": "2771720"
  },
  {
    "text": "that's how it looks like it's it's not hard it's it's a pretty simple machine",
    "start": "2771720",
    "end": "2777440"
  },
  {
    "text": "um but it's powerful enough to write proper programs and the cool thing is it's close enough to mod than machines",
    "start": "2777440",
    "end": "2784480"
  },
  {
    "text": "that you can easily compile down um and if you're interested in more um I'm",
    "start": "2784480",
    "end": "2789640"
  },
  {
    "text": "writing a blog post every other week since January um you can follow the the",
    "start": "2789640",
    "end": "2795520"
  },
  {
    "text": "whole journey um all the things that were hard are documented here I wrote",
    "start": "2795520",
    "end": "2801000"
  },
  {
    "text": "the last block post yesterday on the train here from from my hometown of cure to to Copenhagen so I can definitely so",
    "start": "2801000",
    "end": "2809200"
  },
  {
    "text": "there you find more information on how the firewall is implemented and I want to say thank you to my team here because",
    "start": "2809200",
    "end": "2815800"
  },
  {
    "text": "I work at sub machine and they allow me to do this here and to present you how",
    "start": "2815800",
    "end": "2821240"
  },
  {
    "text": "cool stuff you can do with Java especially with the modern versions and as a glimpse into the",
    "start": "2821240",
    "end": "2827520"
  },
  {
    "text": "future I hope that Java will become a first class language for this at least for like demo applications as you seen",
    "start": "2827520",
    "end": "2834440"
  },
  {
    "text": "here so that also non go and non rust developers can try working on EF maybe",
    "start": "2834440",
    "end": "2841400"
  },
  {
    "text": "someone wants to do this for every language uh for for for any other language which is cool and ENT what",
    "start": "2841400",
    "end": "2847160"
  },
  {
    "text": "we're doing we're moving towards a micro kernel with this whole thing so we putting functionality out of the kernel",
    "start": "2847160",
    "end": "2853680"
  },
  {
    "text": "and letting users write them kind of externally and just attach it and that's pretty cool because we can then modify",
    "start": "2853680",
    "end": "2860720"
  },
  {
    "text": "the colonels to suit what we want to do for example um Facebook uses ebpf and",
    "start": "2860720",
    "end": "2867280"
  },
  {
    "text": "uses the xtp stuff to do the load balancing because it's far easier than Implement col modules um and the cool",
    "start": "2867280",
    "end": "2875359"
  },
  {
    "text": "thing is also we can do colal fix fix and fixes for other stuff here and hopefully fingers crossed sometime in",
    "start": "2875359",
    "end": "2883200"
  },
  {
    "text": "the future we can even write schedulers um in ebpf there's currently uh project",
    "start": "2883200",
    "end": "2889400"
  },
  {
    "text": "called sedex and they're trying to get it in um so you can write your own schedules in Java if you're interested",
    "start": "2889400",
    "end": "2895559"
  },
  {
    "text": "in more uh you can come to my talk and you can visit my talk at the EPF Summit",
    "start": "2895559",
    "end": "2901040"
  },
  {
    "text": "in in in two weeks it's an online talk we tell you all about this and I hope and I hope it works because it's really",
    "start": "2901040",
    "end": "2907599"
  },
  {
    "text": "cool you can do so much things for EF we're looking for it so it it was a",
    "start": "2907599",
    "end": "2913280"
  },
  {
    "text": "great experience developing this I can tell you developing trying to to write",
    "start": "2913280",
    "end": "2918480"
  },
  {
    "text": "the Cally C code in Java is interesting but also because with these projects you",
    "start": "2918480",
    "end": "2923680"
  },
  {
    "text": "learn so much not only about technology but only about but also about yourself",
    "start": "2923680",
    "end": "2929280"
  },
  {
    "text": "because essentially I I struggled so much getting this working because in the beginning I didn't know anything about",
    "start": "2929280",
    "end": "2934760"
  },
  {
    "text": "EF and you can follow this in my block post I started this to learn EF and that's why the project is called hello",
    "start": "2934760",
    "end": "2941040"
  },
  {
    "text": "EF it's like hello EF hello Java I don't know what I'm doing but I'm doing this anyway um so I'm I'm glad to be able to",
    "start": "2941040",
    "end": "2949160"
  },
  {
    "text": "present it here um and I want to say thank you to to of course my team um it wasn't possible without them also to",
    "start": "2949160",
    "end": "2956240"
  },
  {
    "text": "Dylan Rymer he's uh a really nice guy who is like you know when you're like",
    "start": "2956240",
    "end": "2961720"
  },
  {
    "text": "asking Google I instead ask Dyan Rama and it's fter and the respondes are much more accurate but it's like my chat gbt",
    "start": "2961720",
    "end": "2968760"
  },
  {
    "text": "version just it the the responses are like short and good and doesn't",
    "start": "2968760",
    "end": "2974680"
  },
  {
    "text": "hallucinate that much anyway um when you want to read about the resources watch",
    "start": "2974680",
    "end": "2979920"
  },
  {
    "text": "the videos that are referenced um just go to this link um or see someone shouting at hard drive to to check",
    "start": "2979920",
    "end": "2986319"
  },
  {
    "text": "monitoring applications you can find myself on my blog mostly noce where you probably see a blog post like every two",
    "start": "2986319",
    "end": "2992440"
  },
  {
    "text": "weeks so uh the next is is coming out um next week on how to write a schu um",
    "start": "2992440",
    "end": "2999520"
  },
  {
    "text": "let's see where it works um it's always work in progress you can follow me on Twitter or on masterdon and if you have",
    "start": "2999520",
    "end": "3005200"
  },
  {
    "text": "any questions um we probably have like uh a few minutes left and after this um",
    "start": "3005200",
    "end": "3012000"
  },
  {
    "text": "I'm here the conference um you can just ask me and if you want a stickers of of my call team um just just pick them here",
    "start": "3012000",
    "end": "3020000"
  },
  {
    "text": "in front and thank you for your patience and for for coming with me on this journey to see how we can actually use",
    "start": "3020000",
    "end": "3026839"
  },
  {
    "text": "Java to to write stuff in the",
    "start": "3026839",
    "end": "3031040"
  },
  {
    "text": "colonel any",
    "start": "3037079",
    "end": "3040400"
  },
  {
    "text": "questions far better so the thing is that's that that's currently a research project I'm",
    "start": "3046359",
    "end": "3052480"
  },
  {
    "text": "currently at a level where it's like a proof of concept where it can show you demo applications and where you could",
    "start": "3052480",
    "end": "3058040"
  },
  {
    "text": "Rite simple programs in it but of course uh behind the go and uh rustom they",
    "start": "3058040",
    "end": "3064359"
  },
  {
    "text": "large companies there are multiple people not just me so I I would hope",
    "start": "3064359",
    "end": "3070000"
  },
  {
    "text": "that in a future time um there the Java Library would be on par but of course",
    "start": "3070000",
    "end": "3076440"
  },
  {
    "text": "it's it's in its only steps but it has many cool and interesting features that make you that make it easy to ride you",
    "start": "3076440",
    "end": "3084119"
  },
  {
    "text": "applications of course it has still bar but I'm but I'm working on it I'm",
    "start": "3084119",
    "end": "3089520"
  },
  {
    "text": "spending uh too much time on it to fixing this so I think it's good for for",
    "start": "3089520",
    "end": "3094760"
  },
  {
    "text": "getting to know ebf and then if you want to do more serious projects then you probably gained enough knowledge that",
    "start": "3094760",
    "end": "3100520"
  },
  {
    "text": "it's quite easy to to move over to like the go library or to the r library",
    "start": "3100520",
    "end": "3105920"
  },
  {
    "text": "because the apis the apis aren't that the similar so it's a good thing to try",
    "start": "3105920",
    "end": "3111520"
  },
  {
    "text": "it out because it's easy though you just have to download it and it should hopefully work here um but of course",
    "start": "3111520",
    "end": "3118760"
  },
  {
    "text": "don't use this in production any other",
    "start": "3118760",
    "end": "3124280"
  },
  {
    "text": "questions um so the question was um what's the state with Windows because I",
    "start": "3131200",
    "end": "3136920"
  },
  {
    "text": "mentioned it so um there's limited support as far as I understand for running EF there but it's currently an",
    "start": "3136920",
    "end": "3144200"
  },
  {
    "text": "ongoing effort so uh it it it's currently totally in flocks but I would",
    "start": "3144200",
    "end": "3149640"
  },
  {
    "text": "expect like I don't know poly next year so to see some unnown me there were Al",
    "start": "3149640",
    "end": "3154799"
  },
  {
    "text": "there were already announcement of like preliminary features and um if you want",
    "start": "3154799",
    "end": "3160160"
  },
  {
    "text": "to follow this there's the ebpf newsletter that I can really recommend just go to ef. and register and la and",
    "start": "3160160",
    "end": "3168359"
  },
  {
    "text": "yesterday there came something out about like using it on windows so just look there it's in its early steps of course",
    "start": "3168359",
    "end": "3176200"
  },
  {
    "text": "um because this was designed for Linux and still on Linux they adding so so many",
    "start": "3176200",
    "end": "3181799"
  },
  {
    "text": "more features but I think uh you should definitely follow this space because it will get bigger in the next following",
    "start": "3181799",
    "end": "3188359"
  },
  {
    "text": "years as especially after crowd strike um which like uh probably burn some",
    "start": "3188359",
    "end": "3196079"
  },
  {
    "text": "people hard so uh yes",
    "start": "3196079",
    "end": "3202480"
  },
  {
    "text": "the question is essentially regarding the attx surface um of course there's an argument and is to to quote the col ofel",
    "start": "3223280",
    "end": "3230240"
  },
  {
    "text": "play he was like oh you're essentially opening Pandora's Box yes you're doing but the alternative is the that everyone",
    "start": "3230240",
    "end": "3236920"
  },
  {
    "text": "RS Linux car modules and that's far worse because you don't have any checks",
    "start": "3236920",
    "end": "3241960"
  },
  {
    "text": "on you write this in C++ which is like interesting regarding memory safety so",
    "start": "3241960",
    "end": "3248040"
  },
  {
    "text": "yes it Ops Pandora box but we see so many benefits we see it for deas",
    "start": "3248040",
    "end": "3253160"
  },
  {
    "text": "protection for L Bing for security for think the the potential outweighs the",
    "start": "3253160",
    "end": "3258920"
  },
  {
    "text": "risks",
    "start": "3258920",
    "end": "3261920"
  },
  {
    "text": "I'm if I'm honest I'm not I I'm using a Mac but I don't know that much but I",
    "start": "3266760",
    "end": "3271920"
  },
  {
    "text": "think they have different um ways to do all the security stuff um and it's",
    "start": "3271920",
    "end": "3277040"
  },
  {
    "text": "important to note that like most performance critical systems they don't run on Mac system so usually also when",
    "start": "3277040",
    "end": "3283680"
  },
  {
    "text": "when I'm focusing on on profiling I'm focusing on service systems and they usually just run run Linux so load Bings",
    "start": "3283680",
    "end": "3292000"
  },
  {
    "text": "on the mech system doesn't make that much sense so there there other mechanisms there but if I'm honest I",
    "start": "3292000",
    "end": "3298359"
  },
  {
    "text": "don't know uh if you have any if you find anything out send it to me um I'm",
    "start": "3298359",
    "end": "3304040"
  },
  {
    "text": "always having fun your knowledge as you probably are because you're at this awesome conference",
    "start": "3304040",
    "end": "3310240"
  },
  {
    "text": "yes so um there are two ways so for ex so for one um you have to verify that",
    "start": "3316319",
    "end": "3321559"
  },
  {
    "text": "check's like oh everything is fine so in the most common case nothing should happen and if if it crashes yes it might",
    "start": "3321559",
    "end": "3328799"
  },
  {
    "text": "it might of course cause a colonel Panic um because it runs in the colonel so um",
    "start": "3328799",
    "end": "3334119"
  },
  {
    "text": "if you see here if we skip back at the beginning and have a minute time again",
    "start": "3334119",
    "end": "3340160"
  },
  {
    "text": "so if you look here um uh here for example",
    "start": "3340160",
    "end": "3347799"
  },
  {
    "text": "um there are other bad things that can if you if you if I just read out the cve",
    "start": "3347799",
    "end": "3353680"
  },
  {
    "text": "uh 500 a floor was found in unrestricted EV PF usage with BPF BTF load leading to",
    "start": "3353680",
    "end": "3359160"
  },
  {
    "text": "a possible out of Bones mmory right in the Linux Kels BPF subsystem due to the way a user loads BTF like BTF is like",
    "start": "3359160",
    "end": "3366440"
  },
  {
    "text": "type information type information this FL allows the user to crash or escalate the pares on the",
    "start": "3366440",
    "end": "3373000"
  },
  {
    "text": "system um yes on S sp90 a local attacker with special user prives can circumvent",
    "start": "3373000",
    "end": "3379240"
  },
  {
    "text": "to verify and M Le to confidential confidentiality problems so yes the",
    "start": "3379240",
    "end": "3384440"
  },
  {
    "text": "problems exist um don't use BPF from unknown sources that's a terrible idea",
    "start": "3384440",
    "end": "3391440"
  },
  {
    "text": "and don't use it from people like me use on your production systems they are Engineers that are working on this and",
    "start": "3391440",
    "end": "3399319"
  },
  {
    "text": "they know what they're doing I like to play with it but there are people that also testing this and testing is hard",
    "start": "3399319",
    "end": "3406240"
  },
  {
    "text": "but you should definitely do it um it's with every system it's with every especially safety critical system so",
    "start": "3406240",
    "end": "3412799"
  },
  {
    "text": "don't just download it from the internet uh and then also when you're doing some",
    "start": "3412799",
    "end": "3417960"
  },
  {
    "text": "test stuff I'm running it for good reason in BMS so try this way uh don't",
    "start": "3417960",
    "end": "3424440"
  },
  {
    "text": "try on your mission critical system that powers I don't know nuclear",
    "start": "3424440",
    "end": "3429480"
  },
  {
    "text": "submarines anyway um I think we're we're that the we we're off of the time um I'm",
    "start": "3429480",
    "end": "3436520"
  },
  {
    "text": "happy that I spoke in front of so many people it's just 10 but that's good",
    "start": "3436520",
    "end": "3442440"
  },
  {
    "text": "enough eight um but anyway um if you have any more questions just come over",
    "start": "3442440",
    "end": "3448720"
  },
  {
    "text": "later um after this talk or re me reach me while LinkedIn as such I'm happy to",
    "start": "3448720",
    "end": "3453880"
  },
  {
    "text": "answer your questions and maybe you try it out and have a nice day and have a",
    "start": "3453880",
    "end": "3459760"
  },
  {
    "text": "nice confence thank [Applause]",
    "start": "3459760",
    "end": "3467139"
  },
  {
    "text": "you for",
    "start": "3475119",
    "end": "3479160"
  }
]