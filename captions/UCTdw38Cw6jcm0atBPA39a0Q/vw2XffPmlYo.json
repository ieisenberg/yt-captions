[
  {
    "text": "I guess we should probably kick off there we go I have a microphone how wonderful",
    "start": "179",
    "end": "6060"
  },
  {
    "text": "well thank you for all coming this is frankly kind of terrifying actually nice nice big room for a new talk which is",
    "start": "6060",
    "end": "12960"
  },
  {
    "text": "the scary place for me personally um so this is something that I've been",
    "start": "12960",
    "end": "18600"
  },
  {
    "text": "putting together for about the last uh 26 years I think I think about 26 years",
    "start": "18600",
    "end": "23820"
  },
  {
    "text": "of this talk um or exactly one week depending on how you internalize it so the easy thing",
    "start": "23820",
    "end": "30420"
  },
  {
    "text": "about doing talks about things you've done is that you can just show stuff and people can't really argue with talks",
    "start": "30420",
    "end": "36960"
  },
  {
    "text": "where you just show things that you've done this is a talk about how I feel and we're all going to try and feel",
    "start": "36960",
    "end": "42840"
  },
  {
    "text": "something here together and maybe you'll all disagree with me but I hope you don't so I guess most of the people in this",
    "start": "42840",
    "end": "49260"
  },
  {
    "text": "room work in software of some kind and you know that presiding feeling that everything is just a bit broken all the",
    "start": "49260",
    "end": "56699"
  },
  {
    "text": "time and everything is just a little bit wrong and everything hurts a little bit too much and there's a bit too much",
    "start": "56699",
    "end": "62520"
  },
  {
    "text": "friction and everything doesn't feel right and I think I worked out why",
    "start": "62520",
    "end": "69240"
  },
  {
    "text": "Maybe um so so my name's David and I spend far",
    "start": "69240",
    "end": "75840"
  },
  {
    "text": "too much time thinking about software design it's basically kind of my toxic personality trait",
    "start": "75840",
    "end": "81900"
  },
  {
    "text": "um I have a ridiculous job title I'm the distinguished engineer comes with a monocle",
    "start": "81900",
    "end": "87600"
  },
  {
    "text": "um a head of architecture for a company called New Day Out of London um I spent about a decade as an",
    "start": "87600",
    "end": "93360"
  },
  {
    "text": "independent consultant but I'm really here to talk to you about why design is important and and really why everything matters",
    "start": "93360",
    "end": "102479"
  },
  {
    "text": "so I'm a programmer and basically you're going to pry my keyboard out my cold dead hands regardless of the job title",
    "start": "102479",
    "end": "108540"
  },
  {
    "text": "you stick on top of it um that said there's not going to be a lot of code in this talk I really want",
    "start": "108540",
    "end": "113820"
  },
  {
    "text": "you to come on this journey and think with me and we're going to think about design now",
    "start": "113820",
    "end": "120119"
  },
  {
    "text": "recently I did a bit of a small viral tweet I'm used to the screen being here but it's kind of here",
    "start": "120119",
    "end": "125759"
  },
  {
    "text": "and I was trying to fix an objectively really terrible code base",
    "start": "125759",
    "end": "130860"
  },
  {
    "text": "and the thing that raised my heckles was this kind of goddamn awful organizational pattern and you know this",
    "start": "130860",
    "end": "137700"
  },
  {
    "text": "is kind of ostensibly a.net conference and I think this is a thing that plagues so many.net code bases so I sat there",
    "start": "137700",
    "end": "143940"
  },
  {
    "text": "and I rage tweeted into the void directly I remember thinking like oh God",
    "start": "143940",
    "end": "149099"
  },
  {
    "text": "this is like a damning indictment of the state of a lot of application design that this stuff is everywhere these",
    "start": "149099",
    "end": "155879"
  },
  {
    "text": "stupid folders now obviously Twitter mostly agrees with me otherwise I wouldn't put it in the conference talk",
    "start": "155879",
    "end": "161040"
  },
  {
    "text": "but the thing that really jumped out to me of this particularly shitty code base was how thoughtless it all was like",
    "start": "161040",
    "end": "167700"
  },
  {
    "text": "completely mundanely thoughtless you know organizing code by",
    "start": "167700",
    "end": "173220"
  },
  {
    "text": "architectural feature is way up up there on the list of shitty things you can do to your software with no real meaning",
    "start": "173220",
    "end": "179640"
  },
  {
    "text": "no meaning to it precisely because there is no answer to the question like why is this like this why would anyone do this",
    "start": "179640",
    "end": "186540"
  },
  {
    "text": "their software hopefully throughout the session we're going to try and cover ways that you can answer the question why in your software",
    "start": "186540",
    "end": "193440"
  },
  {
    "text": "because that's what design is all about you know as the joke goes organizing",
    "start": "193440",
    "end": "198480"
  },
  {
    "text": "your code by architectural concept is like getting a classic car collection smashing it to pieces and organizing it",
    "start": "198480",
    "end": "204599"
  },
  {
    "text": "by Wheels windscreen wipers and seats it it ceases to look like anything",
    "start": "204599",
    "end": "210300"
  },
  {
    "text": "certainly not cars when you do that now so much talk about design in code",
    "start": "210300",
    "end": "217500"
  },
  {
    "text": "always ends up getting dragged back to the work done in the 90s about design patterns mostly and this isn't a talk",
    "start": "217500",
    "end": "225120"
  },
  {
    "text": "about design patterns at all but I want to pay them a little bit of lip service and a little bit of due",
    "start": "225120",
    "end": "230280"
  },
  {
    "text": "respect before we get going because perhaps it might be easy to misinterpret what I'm about to say as a tirade against design",
    "start": "230280",
    "end": "237900"
  },
  {
    "text": "patterns and about design itself or a rallying cry against standards but it really really isn't there",
    "start": "237900",
    "end": "244680"
  },
  {
    "text": "so design patterns what they did is they originated in the work of a man called Christopher Alexandra now he was an",
    "start": "244680",
    "end": "251280"
  },
  {
    "text": "actual real-life building architect originally and he wrote this book called",
    "start": "251280",
    "end": "256320"
  },
  {
    "text": "notes on the synthesis of form which sounds like a 70s prog metal album I think mostly and it was consumed by",
    "start": "256320",
    "end": "263580"
  },
  {
    "text": "computer science students around and throughout the 70s and early 80s and where where that kind of that process",
    "start": "263580",
    "end": "269820"
  },
  {
    "text": "ended up was Kemp Beckham Ward Cunningham in the late 80s he started to writing about pattern languages as as a",
    "start": "269820",
    "end": "276479"
  },
  {
    "text": "thing now the gang of four book is the book that everyone will have heard of when you hear about design patterns so it",
    "start": "276479",
    "end": "282180"
  },
  {
    "text": "came out in 1994 so that's a clear kind of 15 20 year difference and when all this work was done and it's probably the",
    "start": "282180",
    "end": "288479"
  },
  {
    "text": "foundational text around design patterns that you will have seen and what it really did is it attempted to lay out a series of structural",
    "start": "288479",
    "end": "295259"
  },
  {
    "text": "creational and behavioral patterns observed in common software of the era now one of the core mistakes people make",
    "start": "295259",
    "end": "301500"
  },
  {
    "text": "is they thought this was these people telling you how to structure your applications and all they were really saying is here are some things we have",
    "start": "301500",
    "end": "307560"
  },
  {
    "text": "seen a couple of times now there's a bunch of noteworthy books",
    "start": "307560",
    "end": "313139"
  },
  {
    "text": "that followed this when you're thinking about design patterns from people like Kent Beck you know Small Talk best",
    "start": "313139",
    "end": "318240"
  },
  {
    "text": "practices and patterns I think was the book he wrote um and people like Martin Fowler with the you know the classics like patterns",
    "start": "318240",
    "end": "323880"
  },
  {
    "text": "of Enterprise architecture But ultimately the intention of all these books was good but it was kind of",
    "start": "323880",
    "end": "329639"
  },
  {
    "text": "targeting one thing which was to provide concrete guidance and descriptions of",
    "start": "329639",
    "end": "334979"
  },
  {
    "text": "common solutions to common problems that have been seen in the market that's all they were trying to do",
    "start": "334979",
    "end": "340979"
  },
  {
    "text": "and and that's what they really are they're names to model answers to common questions and when you give things names",
    "start": "340979",
    "end": "346860"
  },
  {
    "text": "we give things language you Empower them and you let people talk about them and I have nothing but respect for the",
    "start": "346860",
    "end": "352500"
  },
  {
    "text": "foundational work that people did to try and give language around software when we really had nothing because we're basically a teenage industry",
    "start": "352500",
    "end": "359820"
  },
  {
    "text": "so this isn't a talk about design patterns but cool um patterns try and make categories of problems look the same",
    "start": "359820",
    "end": "366900"
  },
  {
    "text": "this is about all the things that don't look the same all the things that are different all the things that are about your code",
    "start": "366900",
    "end": "374060"
  },
  {
    "text": "now I suppose I just kind of lament the fact that most of the talk of design and software turns into talk about design",
    "start": "374220",
    "end": "381539"
  },
  {
    "text": "patterns because they're kind of the least interesting part if design patterns are all about the parts of the system that are familiar",
    "start": "381539",
    "end": "387860"
  },
  {
    "text": "familiar answers have familiar questions but with the acceptance of that we kind of pushed programming languages",
    "start": "387860",
    "end": "394500"
  },
  {
    "text": "to innovate and to make some of those patterns obsolete over time anyway so it kind of feels like we forgot to",
    "start": "394500",
    "end": "400620"
  },
  {
    "text": "talk about everything that wasn't predictable or everything that wasn't common and because that's where real",
    "start": "400620",
    "end": "406139"
  },
  {
    "text": "design starts where where the talk of patterns end and you're just left trying to find form out of something that's",
    "start": "406139",
    "end": "412380"
  },
  {
    "text": "meant to give you function for the rest of your software now on the other end of the spectrum",
    "start": "412380",
    "end": "417780"
  },
  {
    "text": "from all the design pattern talk we've got a large scale architectural conversations about design and then you",
    "start": "417780",
    "end": "425280"
  },
  {
    "text": "see all The Usual Suspects but if I ask people to like name application architectures you would just get like",
    "start": "425280",
    "end": "430560"
  },
  {
    "text": "well enter hexagonal architecture maybe 12 Factor apps have come up but",
    "start": "430560",
    "end": "436199"
  },
  {
    "text": "that's kind of all people really talk about and what they do is they all try and offer prescriptive rules around the form",
    "start": "436199",
    "end": "442080"
  },
  {
    "text": "of an application how it looks how it's organized but I think software design has more",
    "start": "442080",
    "end": "447300"
  },
  {
    "text": "axes than just functional patterns and kind of large-scale organizational patterns I think the most interesting aspects of",
    "start": "447300",
    "end": "454020"
  },
  {
    "text": "design are the ones that affect the way most programmers interact with the system and they exist in the Gulf",
    "start": "454020",
    "end": "459660"
  },
  {
    "text": "between those two ends of the spectrum so it sounds a bit weird but back in the",
    "start": "459660",
    "end": "466440"
  },
  {
    "text": "depths of time I was a relatively mediocre art student",
    "start": "466440",
    "end": "471960"
  },
  {
    "text": "right and you know and I literally studied literature and painting and",
    "start": "471960",
    "end": "477000"
  },
  {
    "text": "pottery and you know this was in the 90s kind of in high school and you know while I was",
    "start": "477000",
    "end": "484020"
  },
  {
    "text": "specializing in literature and politics what I really want to be as a programmer because programming seemed like magic to",
    "start": "484020",
    "end": "489060"
  },
  {
    "text": "me it was like this untangible thing that no one could really teach at the time and no one could explain",
    "start": "489060",
    "end": "494699"
  },
  {
    "text": "so for the first half of my career I really struggled to reconcile this kind of sense of artistic aesthetic",
    "start": "494699",
    "end": "500759"
  },
  {
    "text": "Sensibility and Design you know I started programming in the",
    "start": "500759",
    "end": "506580"
  },
  {
    "text": "mid to late 90s and all of those works that I previously mentioned they were kind of the the books that you read if",
    "start": "506580",
    "end": "512159"
  },
  {
    "text": "you were learning about design they were kind of just the de facto standard now yeah I did a computer science degree",
    "start": "512159",
    "end": "518279"
  },
  {
    "text": "which I hated and during the first year of my compsight degree of struggling to",
    "start": "518279",
    "end": "523620"
  },
  {
    "text": "kind of remember how to do maths like all first-year concise students I still I stumbled across the works of",
    "start": "523620",
    "end": "530220"
  },
  {
    "text": "Donald news who had written this book called literate programming",
    "start": "530220",
    "end": "536040"
  },
  {
    "text": "now this was written in 1984 it was basically an ancient book by the time I got to University and computer terms",
    "start": "536040",
    "end": "542480"
  },
  {
    "text": "literally the year I was born so so much for new ideas",
    "start": "542480",
    "end": "547699"
  },
  {
    "text": "um so newford tried to get Traction in the space around software design with the idea that software should be written",
    "start": "548040",
    "end": "553980"
  },
  {
    "text": "by combining what he called a documentation language with a with a programming language",
    "start": "553980",
    "end": "559620"
  },
  {
    "text": "and the idea that the union of the two things would produce a comprehensible and maintainable code base and that was",
    "start": "559620",
    "end": "564720"
  },
  {
    "text": "kind of his theory now this is kind of consistent with the rest of Donald newt's output if you don't",
    "start": "564720",
    "end": "570899"
  },
  {
    "text": "know this is the man that wanted to write a book so I spent a decade writing a text editor and then wrote a book so",
    "start": "570899",
    "end": "576600"
  },
  {
    "text": "it's it's no surprise that that's kind of the place he came from um and the book was about a fictional",
    "start": "576600",
    "end": "581640"
  },
  {
    "text": "computer and a fictional programming language but you know what I I thought",
    "start": "581640",
    "end": "587040"
  },
  {
    "text": "actually if you think about it the languages that were popular in the 1970s When Donald knuth was writing about this",
    "start": "587040",
    "end": "592440"
  },
  {
    "text": "stuff um didn't really look like the languages we have today they looked more like old",
    "start": "592440",
    "end": "598680"
  },
  {
    "text": "assembly languages and you know kind of our goals and very very early programming languages and if you kind of think about where we are today with",
    "start": "598680",
    "end": "604920"
  },
  {
    "text": "modern programming languages he was kind of right in the languages we are we have today",
    "start": "604920",
    "end": "610019"
  },
  {
    "text": "are far more literate they're far more expressive and um you know they're far more pliable like an order of magnitude",
    "start": "610019",
    "end": "616620"
  },
  {
    "text": "more pliable because of that so yeah he was right and languages actually did Trend more towards literate over time",
    "start": "616620",
    "end": "623100"
  },
  {
    "text": "and a lot of the things he was thinking around programming languages and documentation being this kind of Union",
    "start": "623100",
    "end": "628200"
  },
  {
    "text": "of two things that formed the program I mean you could argue building dsls was the The Natural Evolution of that kind",
    "start": "628200",
    "end": "635100"
  },
  {
    "text": "of concept so at the core of this idea really resonated with me that software is the same as literature",
    "start": "635100",
    "end": "642180"
  },
  {
    "text": "now this was like a bit of a revelation for me when I was kind of a baby Dev like it changes it changes the way you",
    "start": "642180",
    "end": "648360"
  },
  {
    "text": "start to see your software when you think of it like a book um and a book is only good if we design",
    "start": "648360",
    "end": "655620"
  },
  {
    "text": "the text of the the language in our program with that in mind if you start optimizing for a reader and actually",
    "start": "655620",
    "end": "661920"
  },
  {
    "text": "thinking about how your software is observed so over the years I come back to this really really precise definition of what",
    "start": "661920",
    "end": "668220"
  },
  {
    "text": "software really is like when you strip everything away like what on Earth is software software is a constrained form of",
    "start": "668220",
    "end": "674640"
  },
  {
    "text": "communication between programmer and programmer that describes Concepts or problems that happens to run on a",
    "start": "674640",
    "end": "680700"
  },
  {
    "text": "machine almost by mistake the fact that it runs on a machine is kind of the least interesting thing about it and the more",
    "start": "680700",
    "end": "687600"
  },
  {
    "text": "you think about it the more it starts to make sense you spend a much larger portion of your time of your working day",
    "start": "687600",
    "end": "693000"
  },
  {
    "text": "reading code than you do writing it and code that exists in a context often",
    "start": "693000",
    "end": "699240"
  },
  {
    "text": "has subtext it has authorial intent much like any other written language and actually often like if you think about",
    "start": "699240",
    "end": "705420"
  },
  {
    "text": "the way defects happen in software most of it is just like a horrible distance between what the author intended the",
    "start": "705420",
    "end": "710700"
  },
  {
    "text": "software to do what their intention really was and how they managed to capture it just like it is in written",
    "start": "710700",
    "end": "716220"
  },
  {
    "text": "language and you start thinking about it more you realize actually you know what like all the the naval gazing conversations about",
    "start": "716220",
    "end": "723240"
  },
  {
    "text": "kind of linting and format is all actually really about flow and form and Rhythm like any other writing so",
    "start": "723240",
    "end": "729660"
  },
  {
    "text": "code has a rhythm it has a form just like writing it has intent it means",
    "start": "729660",
    "end": "734820"
  },
  {
    "text": "something and you use that Rhythm and that flow in that form to transmit your intent to say something",
    "start": "734820",
    "end": "741720"
  },
  {
    "text": "your code has intent do this one if this was in the talk I",
    "start": "741720",
    "end": "747720"
  },
  {
    "text": "did last year and it still stands true with this topic um just earn all the copies of clean code every single one of them we don't",
    "start": "747720",
    "end": "754800"
  },
  {
    "text": "we don't with that anymore it's aged poorly um it's not very good",
    "start": "754800",
    "end": "760140"
  },
  {
    "text": "but the worst thing about it is it has cast this long Shadow over",
    "start": "760140",
    "end": "765779"
  },
  {
    "text": "conversations of design and software to the point where we think design is what you name your variables",
    "start": "765779",
    "end": "771839"
  },
  {
    "text": "right like it really it throws out all meaningful thoughtful discussion and",
    "start": "771839",
    "end": "777180"
  },
  {
    "text": "leaves us in a place where we're you know we obsess over things like the solid principles I was having a",
    "start": "777180",
    "end": "783120"
  },
  {
    "text": "conversation with someone the other night who made the Casual observation you know the list of substitution principle only got into a solid just so",
    "start": "783120",
    "end": "789660"
  },
  {
    "text": "it could make a word right like that's not how you work out what good designers so thoughtless Dogma",
    "start": "789660",
    "end": "796740"
  },
  {
    "text": "throw it all out heresy heresy you cry heresy you can",
    "start": "796740",
    "end": "803279"
  },
  {
    "text": "queue up with the pitchforks at the door and I'll give you a stab on the way out um you can't say that about clean code I",
    "start": "803279",
    "end": "809519"
  },
  {
    "text": "love writing clean code I mean there was a point in my career where I too thought rules around basic",
    "start": "809519",
    "end": "814680"
  },
  {
    "text": "hygiene were enough but like I say I've been working on this for 25 years really in the last five",
    "start": "814680",
    "end": "821220"
  },
  {
    "text": "years I've come to Value this idea of intentionality in the software that we write above any sense of kind of",
    "start": "821220",
    "end": "827700"
  },
  {
    "text": "syntactic cleanliness what does that mean um what it means is every Character",
    "start": "827700",
    "end": "834060"
  },
  {
    "text": "Matters every single thing I want you to approach the work as if every single thing you type is important",
    "start": "834060",
    "end": "841200"
  },
  {
    "text": "it's intrinsically part of the work the white space matters the rhythm of",
    "start": "841200",
    "end": "846240"
  },
  {
    "text": "your code matters naming matters form matters and function matters",
    "start": "846240",
    "end": "851459"
  },
  {
    "text": "code written with thoughtfulness and intentionality is code that survives that humans can comprehend and that's",
    "start": "851459",
    "end": "858300"
  },
  {
    "text": "what makes software fundamentally good",
    "start": "858300",
    "end": "863240"
  },
  {
    "text": "now thinking of your software as literature lets you value different ways of",
    "start": "864360",
    "end": "870600"
  },
  {
    "text": "communicating in code so we can communicate on the macro scale with organizational patterns and",
    "start": "870600",
    "end": "876360"
  },
  {
    "text": "application architectures take for example MVC MVC is an organizational pattern it's a very very",
    "start": "876360",
    "end": "883440"
  },
  {
    "text": "common one it dictates how you split up your code and in all of its common implementations",
    "start": "883440",
    "end": "888660"
  },
  {
    "text": "what it really is trying to do is tell you how to organize your application but the subtext of that pattern shows you",
    "start": "888660",
    "end": "894180"
  },
  {
    "text": "how an application works and is executed people are familiar with it and they understand the flow of control that's",
    "start": "894180",
    "end": "900600"
  },
  {
    "text": "why the MVC pattern was important you know I I've had a love-hate relationship with that pattern as an",
    "start": "900600",
    "end": "907199"
  },
  {
    "text": "organizational pattern for quite a long time because the other unfortunate side effects you've got to remember everything is a trade-off",
    "start": "907199",
    "end": "913500"
  },
  {
    "text": "is that the MVC pattern obscures the intent of the software so all you see",
    "start": "913500",
    "end": "918720"
  },
  {
    "text": "when you look at a code base that's organizing an MVC pattern is that it's a website probably",
    "start": "918720",
    "end": "924000"
  },
  {
    "text": "right and every website basically looks the same and until you start peeling back the layers you don't really know",
    "start": "924000",
    "end": "929399"
  },
  {
    "text": "what's in there so the form of the application does not reflect its function it reflects the implementation",
    "start": "929399",
    "end": "936420"
  },
  {
    "text": "now I actually find the micro scale more interesting because that's the way you",
    "start": "936420",
    "end": "942839"
  },
  {
    "text": "form code on a function to function method to Method level to Telegraph intent now we use form and flow in our code to",
    "start": "942839",
    "end": "950339"
  },
  {
    "text": "increase cohesion as a general case now",
    "start": "950339",
    "end": "956940"
  },
  {
    "text": "there's a big horrible block of code so by way of example when I say use form",
    "start": "956940",
    "end": "962339"
  },
  {
    "text": "and flow to increase cohesion on this micro scale",
    "start": "962339",
    "end": "967620"
  },
  {
    "text": "I'm going to show you two screenshots of actually that same code base that I table flipped about when I got angry at",
    "start": "967620",
    "end": "973019"
  },
  {
    "text": "first now this is a pretty ugly function it does some HTTP related stuff it's completely unremarkable but it's really",
    "start": "973019",
    "end": "980040"
  },
  {
    "text": "difficult to read and it's really difficult to read because there is no flow or rhythm in",
    "start": "980040",
    "end": "985199"
  },
  {
    "text": "this code at all you see all that kind of all the white space what it really does it forces you",
    "start": "985199",
    "end": "990899"
  },
  {
    "text": "to comprehend everything statement by statement without giving you a message or a cohesive whole now if I was writing",
    "start": "990899",
    "end": "997380"
  },
  {
    "text": "in English essay I would use paragraphs and text to capture intent to collate common Concepts",
    "start": "997380",
    "end": "1004279"
  },
  {
    "text": "now code is really just the same now lines mean something and if you use them everywhere or nowhere you're removing a",
    "start": "1004279",
    "end": "1011060"
  },
  {
    "text": "form of expression now in this incredibly small scale example you know it kind of does a great",
    "start": "1011060",
    "end": "1016699"
  },
  {
    "text": "Injustice to the effect of code with good form um you know code with great form is like poetry it leads the eye at the reader it",
    "start": "1016699",
    "end": "1023899"
  },
  {
    "text": "telegram it telegraphs how you're meant to read the program because a reader kind of goes through this head Computing",
    "start": "1023899",
    "end": "1030079"
  },
  {
    "text": "exercise of following the flow of a program as written and all we really did was just delete a",
    "start": "1030079",
    "end": "1035900"
  },
  {
    "text": "few spaces right we deleted a few spaces and made it more important and you know the fluid and the form of your code is",
    "start": "1035900",
    "end": "1041900"
  },
  {
    "text": "something you use to communicate intent form is intent it's important it's",
    "start": "1041900",
    "end": "1047540"
  },
  {
    "text": "design it matters so when I say everything matters on the smallest possible level even that was important",
    "start": "1047540",
    "end": "1054200"
  },
  {
    "text": "to me foreign now the more I started thinking about software through this lens of literature",
    "start": "1054200",
    "end": "1061460"
  },
  {
    "text": "through this lens of intent the more it became apparent to me that I was really reacting to what the inherent complexity",
    "start": "1061460",
    "end": "1067400"
  },
  {
    "text": "looks like in a lot of modern software design and I was kind of craving this clear communication of well-written prose of",
    "start": "1067400",
    "end": "1074000"
  },
  {
    "text": "thoughtful code and that it was really a grander design problem now",
    "start": "1074000",
    "end": "1079640"
  },
  {
    "text": "this sounds ridiculous I've been working on a sentence recently sentence who works on sentences",
    "start": "1079640",
    "end": "1085940"
  },
  {
    "text": "Psychopaths the complexity of your application should be at most as complex as the",
    "start": "1085940",
    "end": "1092480"
  },
  {
    "text": "problem space within the habits and no greater every poorly designed piece of software",
    "start": "1092480",
    "end": "1098240"
  },
  {
    "text": "I had ever seen exists where the technical solution dwarfs the scope of the problem",
    "start": "1098240",
    "end": "1104120"
  },
  {
    "text": "that's bad you're making the world a worse place you're making things harder macro and Micro Design are the tools we",
    "start": "1104120",
    "end": "1110720"
  },
  {
    "text": "have to meet this goal that's kind of the point so so many systems just straight out",
    "start": "1110720",
    "end": "1116179"
  },
  {
    "text": "fail this test you know like they lose themselves under infrastructure code under build systems under deployment and",
    "start": "1116179",
    "end": "1122419"
  },
  {
    "text": "modules and pipelines and reuse and all these Grand ideas about their eventual destination Without Really",
    "start": "1122419",
    "end": "1129440"
  },
  {
    "text": "focusing on what the correct form to express the solutions of the problem they have right now is",
    "start": "1129440",
    "end": "1135799"
  },
  {
    "text": "it buries systems this is like canonically over design it buries systems and it makes working in these",
    "start": "1135799",
    "end": "1141320"
  },
  {
    "text": "kind of code bases like swimming through treacle it's like we forgot how to build small",
    "start": "1141320",
    "end": "1146419"
  },
  {
    "text": "systems you know we forgot how to build small things while being Swept Away fantasizing about building the next Mega",
    "start": "1146419",
    "end": "1153440"
  },
  {
    "text": "scale social metaverse monstrosity that was you know pliable for Change and was",
    "start": "1153440",
    "end": "1158480"
  },
  {
    "text": "going to grow was going to be the next unicorn we just kind of forgot what made Small Things beautiful",
    "start": "1158480",
    "end": "1164320"
  },
  {
    "text": "and the interesting thing about making about thinking about software design is even the use of the word design becomes",
    "start": "1165559",
    "end": "1171500"
  },
  {
    "text": "a little bit contentious because design means a lot of things to a lot of different people",
    "start": "1171500",
    "end": "1176539"
  },
  {
    "text": "designs exist to solve problems so communicating tent using the form and their function",
    "start": "1176539",
    "end": "1182000"
  },
  {
    "text": "it's the same reason that design and art had a contentious relationship design is also temporal in nature though",
    "start": "1182000",
    "end": "1189260"
  },
  {
    "text": "so with many designs you know they only really make sense in their context in their place and time",
    "start": "1189260",
    "end": "1194840"
  },
  {
    "text": "even when you look outside of software great designs and these are two great designs everybody kind of knows what",
    "start": "1194840",
    "end": "1200360"
  },
  {
    "text": "they are through history um but they're both deeply contextual you know there are plenty of examples of",
    "start": "1200360",
    "end": "1205400"
  },
  {
    "text": "products with great period design that are nonsense now like both of those",
    "start": "1205400",
    "end": "1210620"
  },
  {
    "text": "things complete nonsense and a lot of our Legacy expressions of software design are suffering similar",
    "start": "1210620",
    "end": "1216260"
  },
  {
    "text": "death in real time in that we have all these Legacy Notions of what good design looks like that don't really fit to the",
    "start": "1216260",
    "end": "1221720"
  },
  {
    "text": "context of the systems that we're building today now",
    "start": "1221720",
    "end": "1227120"
  },
  {
    "text": "there's also this really interesting observation that taking these two iconic designs as an example",
    "start": "1227120",
    "end": "1232460"
  },
  {
    "text": "these are not obsolete these were not the last of their line right these two designs",
    "start": "1232460",
    "end": "1237559"
  },
  {
    "text": "benefited from the fact that design is entirely iterative as a process phones didn't cease to exist and vanish",
    "start": "1237559",
    "end": "1246200"
  },
  {
    "text": "right they were iterated out to touch phones and mobile phones walk Commons didn't cease to exist they",
    "start": "1246200",
    "end": "1252380"
  },
  {
    "text": "became disc ones and iPods the irony here of course is that these two designs actually converged over time",
    "start": "1252380",
    "end": "1259940"
  },
  {
    "text": "because they realized they were solving the same core problem which was transmitting audio",
    "start": "1259940",
    "end": "1265340"
  },
  {
    "text": "it wasn't about music it wasn't making phone calls they would they were both transmitting",
    "start": "1265340",
    "end": "1270440"
  },
  {
    "text": "audio so in fact the the inherent evolutionary process that underpins great design",
    "start": "1270440",
    "end": "1277340"
  },
  {
    "text": "is exactly the same reason people struggle with disciplines like tdd it's exactly why when you take say something",
    "start": "1277340",
    "end": "1283580"
  },
  {
    "text": "like tdd and cast it as a design process that it's both accurate but not",
    "start": "1283580",
    "end": "1288799"
  },
  {
    "text": "particularly well understood now I'm sure you'll have seen probably the rising tide of people kind of",
    "start": "1288799",
    "end": "1293900"
  },
  {
    "text": "criticizing tdd on the internet despite clearly having never practiced it right and if you've ever done it you read all",
    "start": "1293900",
    "end": "1299840"
  },
  {
    "text": "these critiques and you're like that doesn't sound like the thing that I do and you realize the commonality in all",
    "start": "1299840",
    "end": "1305900"
  },
  {
    "text": "of them is they don't iterate on their design so a lot of people that think tdd became useless",
    "start": "1305900",
    "end": "1311179"
  },
  {
    "text": "wrote a test wrote some code did nothing the fact that you iterate gives your",
    "start": "1311179",
    "end": "1316700"
  },
  {
    "text": "designs a better quality and the reason that it's really important and some of the things I'm absolutely certain of",
    "start": "1316700",
    "end": "1322280"
  },
  {
    "text": "is that the the the reason the designs that work through that process become",
    "start": "1322280",
    "end": "1327320"
  },
  {
    "text": "better because there are whole categories of things that you only understand once you can see them and",
    "start": "1327320",
    "end": "1333320"
  },
  {
    "text": "once you can feel them so the folks that think more upfront design",
    "start": "1333320",
    "end": "1339500"
  },
  {
    "text": "processes yield better results they're coming from this place where they they think really hard and they think they",
    "start": "1339500",
    "end": "1345020"
  },
  {
    "text": "know how something is going to work when it gets there and they hope they get it right the power in an iterative design process",
    "start": "1345020",
    "end": "1351440"
  },
  {
    "text": "like most real world design is you get to go again and again and again based on real people's interaction with the thing",
    "start": "1351440",
    "end": "1357020"
  },
  {
    "text": "and make the thing better that's built into the tdd workflow and it helped and that's why it's great as a design",
    "start": "1357020",
    "end": "1363200"
  },
  {
    "text": "process right and people miss that really easily and you know I think that's just people missing out on an",
    "start": "1363200",
    "end": "1368419"
  },
  {
    "text": "entire category of signals now I appreciate the irony here is a lot",
    "start": "1368419",
    "end": "1373760"
  },
  {
    "text": "of programmers kind of come from this Trope of not thinking they're particularly visual people but it's precisely those visuals that",
    "start": "1373760",
    "end": "1380960"
  },
  {
    "text": "turn you on and off code when you look at it you know that ick you feel you open something up everyone's done this and you look at it you're like oh God",
    "start": "1380960",
    "end": "1387500"
  },
  {
    "text": "what is what is this that that is you responding to visual signal very very quickly you might not know",
    "start": "1387500",
    "end": "1393980"
  },
  {
    "text": "what you're responding to but it's it's learn expressions or patterns you have seen that give you this kind of gut",
    "start": "1393980",
    "end": "1399740"
  },
  {
    "text": "feeling of like oh this is going to be messy I hate this and that's you responding to design",
    "start": "1399740",
    "end": "1406039"
  },
  {
    "text": "so if we look at this framing device if we look at software design as design",
    "start": "1406039",
    "end": "1411860"
  },
  {
    "text": "it's probably worth us thinking about the the context that modern software exists in and how that might change the",
    "start": "1411860",
    "end": "1417440"
  },
  {
    "text": "way that we do our design it's kind of worth us reevaluating our organizational patterns for a modern software context",
    "start": "1417440",
    "end": "1423559"
  },
  {
    "text": "where we don't build Mainframe software and we don't build desktop software and",
    "start": "1423559",
    "end": "1429320"
  },
  {
    "text": "the the programming languages we have today have made categories of design completely irrelevant",
    "start": "1429320",
    "end": "1434960"
  },
  {
    "text": "because design is contextual now",
    "start": "1434960",
    "end": "1441799"
  },
  {
    "text": "I'll tell you what the 10th Generation clean architecture folks absolutely hate this",
    "start": "1441799",
    "end": "1449600"
  },
  {
    "text": "most of the things that you think of as best practice are probably just overblown structural design patterns",
    "start": "1449600",
    "end": "1455419"
  },
  {
    "text": "sorry um and they kind of look as ridiculous as the kind of Comedy organization by",
    "start": "1455419",
    "end": "1462320"
  },
  {
    "text": "architectural concept pattern that we opened up with on that first slide you know I see a lot of systems designed",
    "start": "1462320",
    "end": "1468500"
  },
  {
    "text": "these days that have been fragmented into micro Services especially and who am I kidding they're not micro Services",
    "start": "1468500",
    "end": "1474740"
  },
  {
    "text": "what they really really are are like 80 distributed monoliths with a bunch of messaging glued in between so you can't",
    "start": "1474740",
    "end": "1480500"
  },
  {
    "text": "see the flow control through your system right that's what we mostly have",
    "start": "1480500",
    "end": "1485960"
  },
  {
    "text": "and all of those moving Parts get extrapolated out and have best practice of practice practice apply to them and",
    "start": "1485960",
    "end": "1493159"
  },
  {
    "text": "then what you end up with is these big monstrous machines where the intent of the code the thing that it does",
    "start": "1493159",
    "end": "1499159"
  },
  {
    "text": "is like 15 of the work and how it orchestrates and does it is all the",
    "start": "1499159",
    "end": "1504320"
  },
  {
    "text": "things people waste their days doing you know and the truth is at that point the overall picture looks fine until you",
    "start": "1504320",
    "end": "1511820"
  },
  {
    "text": "actually look and see and I'm going to prove this with a bit of an example I'm going to show",
    "start": "1511820",
    "end": "1517280"
  },
  {
    "text": "you an application I was helping work a team through recently which really like",
    "start": "1517280",
    "end": "1522440"
  },
  {
    "text": "rammed this home for me now here's a horrible class diagram you don't need to be able to read don't",
    "start": "1522440",
    "end": "1528200"
  },
  {
    "text": "worry it's just the shape of it you're meant to see and this was following air quotes a",
    "start": "1528200",
    "end": "1534020"
  },
  {
    "text": "clean architecture pattern that was exceptionally prescriptive and structural but all I see here are the",
    "start": "1534020",
    "end": "1540860"
  },
  {
    "text": "telltale signs of thoughtlessness of the fact someone handed someone an answer as to how to design something and",
    "start": "1540860",
    "end": "1546620"
  },
  {
    "text": "they just poured it all on like kerosene and set it on fire so this system was being recomposed back",
    "start": "1546620",
    "end": "1553520"
  },
  {
    "text": "into a single logical application right that was the journey we're on and it was divided into a huge number of",
    "start": "1553520",
    "end": "1558679"
  },
  {
    "text": "modules all of which were further sub um subdivided down into architectural features",
    "start": "1558679",
    "end": "1564500"
  },
  {
    "text": "so we had web and we had middle tier and services and controllers and all sorts of stuff each part of the application",
    "start": "1564500",
    "end": "1570799"
  },
  {
    "text": "was its own web application that depended on linearly a subsequent module below which contained all the logic like",
    "start": "1570799",
    "end": "1577220"
  },
  {
    "text": "the stuff where things happened and then it was all coupled together with a bunch of shared stuff underneath and I bet if I said put your hand up in",
    "start": "1577220",
    "end": "1584000"
  },
  {
    "text": "this room about 60 or 70 of people would be like yes that's the system that I maintain I have seen this because we've",
    "start": "1584000",
    "end": "1590299"
  },
  {
    "text": "all built these it's fine like I'm not throwing rocks with it but the problem is these designs just bring you like total",
    "start": "1590299",
    "end": "1597020"
  },
  {
    "text": "cognitive overload where to comprehend this entire thing you have to be able to comprehend all of the moving Parts in",
    "start": "1597020",
    "end": "1603440"
  },
  {
    "text": "unison to understand the effects that change have on this thing and you know really what we saw is a",
    "start": "1603440",
    "end": "1609620"
  },
  {
    "text": "huge explosion in the surface area of the software which leads to an explosion in the surface area of complexity and it",
    "start": "1609620",
    "end": "1616340"
  },
  {
    "text": "was all maintained by a single team so all of this subdivision and pipeline bloat and component blow didn't actually",
    "start": "1616340",
    "end": "1622760"
  },
  {
    "text": "give us any other qualities of scalability the irony is for all that macro design",
    "start": "1622760",
    "end": "1628460"
  },
  {
    "text": "when we finished it the the diff on the left was what the Micro Design looked like and it was all basically a steaming",
    "start": "1628460",
    "end": "1634880"
  },
  {
    "text": "pile of repetitive crap but well organized crap right and everyone would Zoom back and go oh this is well",
    "start": "1634880",
    "end": "1639919"
  },
  {
    "text": "designed until you open the code base so you know it was a classic case of",
    "start": "1639919",
    "end": "1645080"
  },
  {
    "text": "people focusing on macro structural design and just yoloing the rest of the thing",
    "start": "1645080",
    "end": "1651380"
  },
  {
    "text": "so how do we spot this and fix it well we did a first round to trim the complexity down collapsing all the",
    "start": "1651380",
    "end": "1657740"
  },
  {
    "text": "families of modules where there were only linear Direct dependencies into each other we literally cut and",
    "start": "1657740",
    "end": "1662960"
  },
  {
    "text": "pasted the code back into the thing that used it and then rather than having this kind of complex dependency graph we could just",
    "start": "1662960",
    "end": "1669559"
  },
  {
    "text": "move the code around freely and then once we rationalize the code base down into just one bit for every web app we",
    "start": "1669559",
    "end": "1675980"
  },
  {
    "text": "realized they were all one logical web application that we were just shipping eight times and we just put them all back together and shipped one",
    "start": "1675980",
    "end": "1682340"
  },
  {
    "text": "application and deleted something like 37 Bill pipelines and all the all the",
    "start": "1682340",
    "end": "1687740"
  },
  {
    "text": "stuff around it and all of a sudden the productivity of the team increased because they could reason about their code again",
    "start": "1687740",
    "end": "1693559"
  },
  {
    "text": "uh the that's what it looked like when we when we finished we just deleted all the stuff it was great",
    "start": "1693559",
    "end": "1699440"
  },
  {
    "text": "build smaller things please so let's talk about known good designs",
    "start": "1699440",
    "end": "1708100"
  },
  {
    "text": "so there are obviously certain problem spaces where there are known good structural architectural patterns like",
    "start": "1708860",
    "end": "1714919"
  },
  {
    "text": "the design patterns people weren't wrong like I say nothing but respect so the most glaringly obvious example is",
    "start": "1714919",
    "end": "1720500"
  },
  {
    "text": "kind of rpc's style systems like you know HTTP apis they often map really",
    "start": "1720500",
    "end": "1725600"
  },
  {
    "text": "neatly to kind of command query patterns like we've seen this stuff all the time but in those systems where you're using",
    "start": "1725600",
    "end": "1731659"
  },
  {
    "text": "a known good structural pattern to organize your code actually the form and the flow of the",
    "start": "1731659",
    "end": "1736880"
  },
  {
    "text": "application matter even more than ever because you have to make sure the shape of the code itself overwhelms the",
    "start": "1736880",
    "end": "1742039"
  },
  {
    "text": "structural pattern in order for the application to be comprehensible to the reader so I suppose what I'm I'm reaching for",
    "start": "1742039",
    "end": "1748580"
  },
  {
    "text": "here if I was to reach back to my literary references it's not just what you say it's how you say it you know",
    "start": "1748580",
    "end": "1753679"
  },
  {
    "text": "that's the point and it matters because when your macro level design is comfortable",
    "start": "1753679",
    "end": "1759080"
  },
  {
    "text": "you risk code blindness so as a reader you start to skim and you stop seeing the differences and that's",
    "start": "1759080",
    "end": "1764779"
  },
  {
    "text": "how bugs happen right when the programmer doesn't comprehend the complexity of the thing they're looking at",
    "start": "1764779",
    "end": "1771020"
  },
  {
    "text": "you know the the intent is missed the program needs to scream at you what it does",
    "start": "1771020",
    "end": "1776299"
  },
  {
    "text": "so in fact one of the the core problems with known good reference design is that",
    "start": "1776299",
    "end": "1782299"
  },
  {
    "text": "it's easy to learn a design pattern or two and decide that everything in software needs to look the same",
    "start": "1782299",
    "end": "1787760"
  },
  {
    "text": "right and I've suffered from less Affliction at various points of my career like I I screwed up to this was me",
    "start": "1787760",
    "end": "1793340"
  },
  {
    "text": "you know maybe you'll recognize some of these situations I learned about MVC and thought everything was a controller that",
    "start": "1793340",
    "end": "1799220"
  },
  {
    "text": "was me and I first learned about aspect oriented programming and thought all I could see was a chain of interceptors",
    "start": "1799220",
    "end": "1805100"
  },
  {
    "text": "everywhere um when I was told the controllers were only ever meant to be about HTTP I",
    "start": "1805100",
    "end": "1811100"
  },
  {
    "text": "thought everything became an application service right so the word service was everywhere and that's all I could see",
    "start": "1811100",
    "end": "1817100"
  },
  {
    "text": "um when microservice design first got popular I thought everything had to be decomposed I have made all of these mistakes so",
    "start": "1817100",
    "end": "1824299"
  },
  {
    "text": "don't feel bad because we all have and it takes some time to learn honestly",
    "start": "1824299",
    "end": "1829820"
  },
  {
    "text": "that that uniformity is the opposite of expressiveness",
    "start": "1829820",
    "end": "1834919"
  },
  {
    "text": "right it's important that when different parts of your software do something different that their form reflects their function",
    "start": "1834919",
    "end": "1841700"
  },
  {
    "text": "and they don't look the same as everything else in your code base otherwise you'll never know that there's difference in there",
    "start": "1841700",
    "end": "1848480"
  },
  {
    "text": "visual variation leads the eye it encourages reading instead of skimming language blocks that look identical it's",
    "start": "1848480",
    "end": "1855380"
  },
  {
    "text": "the same as reading signs you know it's the same thing so intentionality",
    "start": "1855380",
    "end": "1863059"
  },
  {
    "text": "is the opposite of complexity there's my there's my big flag on the stage right",
    "start": "1863059",
    "end": "1868640"
  },
  {
    "text": "stop doing things just because stop cargo culting design decisions stop just copying predictable boring application",
    "start": "1868640",
    "end": "1875240"
  },
  {
    "text": "structures think if you don't understand why you're doing",
    "start": "1875240",
    "end": "1880279"
  },
  {
    "text": "something stop doing it now this seems like really really obvious stuff but you",
    "start": "1880279",
    "end": "1885919"
  },
  {
    "text": "look around actual software and um not so sure you know if you can't justify additional",
    "start": "1885919",
    "end": "1892640"
  },
  {
    "text": "complexity always stop and unfortunately because so much of software is context sensitive there are",
    "start": "1892640",
    "end": "1899240"
  },
  {
    "text": "so many times where blindly applying design patterns makes software so much more difficult to reason about and you",
    "start": "1899240",
    "end": "1905179"
  },
  {
    "text": "just increase the cognitive load of your system at every leap a job when we're designing software is",
    "start": "1905179",
    "end": "1910640"
  },
  {
    "text": "fundamentally a war with complexity so when I talk to people about complexity",
    "start": "1910640",
    "end": "1917360"
  },
  {
    "text": "I'm often a little bit shocked at the kind of things that people don't recognize as complexity",
    "start": "1917360",
    "end": "1922520"
  },
  {
    "text": "so I love this quote there's this great book that I've been reading recently from a book called a philosophy of",
    "start": "1922520",
    "end": "1928039"
  },
  {
    "text": "software design by John K I hope I get his surname right",
    "start": "1928039",
    "end": "1933520"
  },
  {
    "text": "um it's really really good and I think it really gets to the heart of why complexity is a problem in software I'd",
    "start": "1934159",
    "end": "1939380"
  },
  {
    "text": "really recommend the book and specifically its second chapter about complexity and design I'll put the links",
    "start": "1939380",
    "end": "1945440"
  },
  {
    "text": "up later but the central theme of the chapter is this the complexity isn't caused by a single catastrophic error",
    "start": "1945440",
    "end": "1953120"
  },
  {
    "text": "tiny paper cuts that accumulate over time it's kind of like depression and mental health right it's not a big thing",
    "start": "1953120",
    "end": "1959000"
  },
  {
    "text": "it's the little things that get you so from the collection of dependencies and obscurities and idiosyncrasies at",
    "start": "1959000",
    "end": "1966440"
  },
  {
    "text": "work that's that's the stuff that you're being subjected to so ustahoe describes complexity as the thing that leads to",
    "start": "1966440",
    "end": "1972140"
  },
  {
    "text": "change amplification High cognitive load and unknown unknowns",
    "start": "1972140",
    "end": "1978380"
  },
  {
    "text": "complexity is anything related to the structure of a software system that makes it hard to understand and modify",
    "start": "1978380",
    "end": "1985399"
  },
  {
    "text": "building on that definition I think intentional thoughtful design is like a cell for this creeping wave of",
    "start": "1985399",
    "end": "1992059"
  },
  {
    "text": "almost slept walked complexity into our applications now there's this kind of distressing",
    "start": "1992059",
    "end": "1998779"
  },
  {
    "text": "realization when you reach these lines of thinking and that's the design patterns are precisely so popular because it gives people a way to reach",
    "start": "1998779",
    "end": "2005799"
  },
  {
    "text": "towards something where the feel is good they like the answer that they seem to have reached a definite conclusion a",
    "start": "2005799",
    "end": "2012940"
  },
  {
    "text": "place to go without having to actually think about how you got there like that's their magic trick almost like here's an easy answer go with it",
    "start": "2012940",
    "end": "2020380"
  },
  {
    "text": "but once you've seen enough code bases enough languages you kind of realize that most of the arbitrary stylistic",
    "start": "2020380",
    "end": "2025720"
  },
  {
    "text": "qualities of code that people focus on like tabs versus spaces and brace style are basically mostly irrelevant like all",
    "start": "2025720",
    "end": "2032019"
  },
  {
    "text": "that stuff is total noise and instead there are a couple of like non-negotiable qualities you look to in",
    "start": "2032019",
    "end": "2037179"
  },
  {
    "text": "a code base that are far less regimented than your average like JavaScript style guide you know good code is code that's",
    "start": "2037179",
    "end": "2043419"
  },
  {
    "text": "easy for someone with minimal domain context to read good code focuses on the developer",
    "start": "2043419",
    "end": "2048460"
  },
  {
    "text": "experience debuggability and usability good code where the intent takes up more",
    "start": "2048460",
    "end": "2053560"
  },
  {
    "text": "visual space than the language syntax where you highlight what you're doing not how you're doing it",
    "start": "2053560",
    "end": "2059560"
  },
  {
    "text": "regardless of language or style or intent all programmers interact with code bases in the same way",
    "start": "2059560",
    "end": "2065020"
  },
  {
    "text": "you know you glance at it to understand what it does and then you read intently to understand how it does it",
    "start": "2065020",
    "end": "2070480"
  },
  {
    "text": "good code regardless of style makes that that task easy",
    "start": "2070480",
    "end": "2075760"
  },
  {
    "text": "now and at a meta level all code is kind of constructed from this idea of abstractions and",
    "start": "2075760",
    "end": "2082300"
  },
  {
    "text": "encapsulation like everything we do glues together those core things and regardless of programming language and",
    "start": "2082300",
    "end": "2087820"
  },
  {
    "text": "regardless of ERA this has always been true so the programming languages runtimes and Frameworks which we write higher",
    "start": "2087820",
    "end": "2094060"
  },
  {
    "text": "level code go through this like enormous amount of compilation and translation interpretation to execute but actually",
    "start": "2094060",
    "end": "2100540"
  },
  {
    "text": "the programming languages themselves are really just common abstractions over operating system apis and Hardware",
    "start": "2100540",
    "end": "2108160"
  },
  {
    "text": "and and really this trend just continues upwards into the functions you write and the types that you define and the",
    "start": "2108160",
    "end": "2113800"
  },
  {
    "text": "classes and files that you create these are all examples of encapsulation abstraction",
    "start": "2113800",
    "end": "2118900"
  },
  {
    "text": "now for the most part we're kind of blissfully unaware of the huge amount of complexity living before our applications",
    "start": "2118900",
    "end": "2125260"
  },
  {
    "text": "um and actually the nice thing is the reason these abstractions work is the benefit of programming against",
    "start": "2125260",
    "end": "2131140"
  },
  {
    "text": "operating systems and apis rather than the raw machine is that the the abstractions provided far outweigh",
    "start": "2131140",
    "end": "2137560"
  },
  {
    "text": "actually having to know any of that stuff right the value of learning them is greater so as you implement your own software",
    "start": "2137560",
    "end": "2143560"
  },
  {
    "text": "like sadly it's not a truth that all the abstractions that you will build will reduce cognitive load",
    "start": "2143560",
    "end": "2149800"
  },
  {
    "text": "and this is how we fight complexity it's often a very subtle process to understand what doesn't doesn't make",
    "start": "2149800",
    "end": "2155020"
  },
  {
    "text": "code easier to work with I'm going to borrow a little bit more terminology from that book",
    "start": "2155020",
    "end": "2160540"
  },
  {
    "text": "when I want us to think about an example of did I just move on yes I did I skipped a slide sorry",
    "start": "2160540",
    "end": "2167320"
  },
  {
    "text": "um I wanted to talk about a specific example which is um the the file open API in basically",
    "start": "2167320",
    "end": "2173619"
  },
  {
    "text": "every programming language now the file open API is like a perfect example of an abstraction because underneath it",
    "start": "2173619",
    "end": "2179800"
  },
  {
    "text": "there's a whole extra domain of various file systems across various operating systems the entire analogy of files and",
    "start": "2179800",
    "end": "2188200"
  },
  {
    "text": "folders block access of disks physical spinning disks SSD all this stuff lives",
    "start": "2188200",
    "end": "2194140"
  },
  {
    "text": "in the abstractions underneath the file API which relies on operating systems and apis which have strapped the",
    "start": "2194140",
    "end": "2199540"
  },
  {
    "text": "hardware which are a provided functionality to by device drivers right you're on a massive stack of complexity",
    "start": "2199540",
    "end": "2205599"
  },
  {
    "text": "but not one person when they go and open a file is concerned with allocating blocks on",
    "start": "2205599",
    "end": "2210700"
  },
  {
    "text": "an SSD or like the trim operation being run correctly so we don't damage our",
    "start": "2210700",
    "end": "2216160"
  },
  {
    "text": "Hardware right it's a good abstraction it works um",
    "start": "2216160",
    "end": "2221800"
  },
  {
    "text": "and if you think about any module in a piece of software this could be like a package a class or um or a binary the",
    "start": "2221800",
    "end": "2229000"
  },
  {
    "text": "you know the interface represents the complexity so file open offers you an interface which represents the complexity that the",
    "start": "2229000",
    "end": "2236260"
  },
  {
    "text": "module imposes on the program that consumes it like simple as that so by the by that",
    "start": "2236260",
    "end": "2243400"
  },
  {
    "text": "description you can think of some modules as being deep modules that",
    "start": "2243400",
    "end": "2248440"
  },
  {
    "text": "represent a lot of complexity downwards and some modules being shallow where they only encapsulate a tiny amount of",
    "start": "2248440",
    "end": "2254440"
  },
  {
    "text": "complexity now deep modules are good for your software because they stop you having to",
    "start": "2254440",
    "end": "2260320"
  },
  {
    "text": "think about a whole category of problems shallow modules in your own API designs bleed their concerns out and increase",
    "start": "2260320",
    "end": "2266619"
  },
  {
    "text": "the cognitive load of the system so you know it's really important that when you're making functions like it's",
    "start": "2266619",
    "end": "2273880"
  },
  {
    "text": "you know the classic clean code thing of like functions with lots of parameters are bad why is that or functions with",
    "start": "2273880",
    "end": "2280119"
  },
  {
    "text": "lots of parameters are bad is because they believe their complexity out into the consuming application code they make your software harder to work with rather",
    "start": "2280119",
    "end": "2286540"
  },
  {
    "text": "than less difficult to work with so as much a factor of avoiding the",
    "start": "2286540",
    "end": "2291820"
  },
  {
    "text": "wrong abstractions you know we really should be focused on finding the right ones and it may seem like painfully",
    "start": "2291820",
    "end": "2297880"
  },
  {
    "text": "obvious advice but abstractions and generally any other module of code that you find should contain the problems a",
    "start": "2297880",
    "end": "2305140"
  },
  {
    "text": "single problem space entirely now this means that abstractions that include things like pass-through methods",
    "start": "2305140",
    "end": "2310960"
  },
  {
    "text": "anyone seen code with loads of pass-through methods bad code right and the reason is you've",
    "start": "2310960",
    "end": "2316180"
  },
  {
    "text": "introduced an abstraction without actually abstracting anything and the pass-through method is the smell",
    "start": "2316180",
    "end": "2322780"
  },
  {
    "text": "or classes that include in their interface definition the data types that they operate on internally",
    "start": "2322780",
    "end": "2329680"
  },
  {
    "text": "you should always be expressing something that your implementation does in a higher level higher order",
    "start": "2329680",
    "end": "2334960"
  },
  {
    "text": "abstraction or again you're not abstracting anything you're just adding extra complexities of the calling code",
    "start": "2334960",
    "end": "2342520"
  },
  {
    "text": "you know in the first example you add nothing with a pass-through method in the latter you just leak all the details",
    "start": "2342520",
    "end": "2348760"
  },
  {
    "text": "so our software is riddled with these kind of thoughtless abstractions and poor communication and every time a",
    "start": "2348760",
    "end": "2355839"
  },
  {
    "text": "design decision like that is made it decreases the reason the module exists at all",
    "start": "2355839",
    "end": "2361900"
  },
  {
    "text": "and it makes the software worse so anything that adds a large amount of boilerplate to your code at all is",
    "start": "2361900",
    "end": "2368740"
  },
  {
    "text": "probably bad right that's the stuff that's bad and it's funny when you talk about that because everybody knows that like that's",
    "start": "2368740",
    "end": "2375220"
  },
  {
    "text": "the way you feel you get the ick when you see boilerplate code you open it you're like oh God what is all this stuff",
    "start": "2375220",
    "end": "2381160"
  },
  {
    "text": "but that's the reason it's because you're being forced to reason with the implementation of the abstractions that",
    "start": "2381160",
    "end": "2386500"
  },
  {
    "text": "you're trying to use that's why you feel that way it's why you feel sad",
    "start": "2386500",
    "end": "2391560"
  },
  {
    "text": "so you get to this certain point where you realize that all talk about design",
    "start": "2397260",
    "end": "2404040"
  },
  {
    "text": "mostly dissolves into kind of discussions of dogma and absolutism and it's because here's an absolute",
    "start": "2404040",
    "end": "2410200"
  },
  {
    "text": "truth for you ironically um any design when stretched to its logical absolute extreme becomes",
    "start": "2410200",
    "end": "2416980"
  },
  {
    "text": "nonsense right and I think you know designing software with intentions software that survives isn't",
    "start": "2416980",
    "end": "2424000"
  },
  {
    "text": "always an exercise in compromise and trade-offs and you work long enough and you know that it's why everyone with any experience in",
    "start": "2424000",
    "end": "2431079"
  },
  {
    "text": "software and especially software that's been used by real people or the public pretty much says it depends to every design",
    "start": "2431079",
    "end": "2438700"
  },
  {
    "text": "challenge ever posed them I should have just called this talk it depends probably",
    "start": "2438700",
    "end": "2444579"
  },
  {
    "text": "um you know and and it really does depend to every design challenge until the layers of details appeal back",
    "start": "2444579",
    "end": "2451900"
  },
  {
    "text": "you know in fact a lot of the poor trade-offs I see in software often involves people actively not",
    "start": "2451900",
    "end": "2457240"
  },
  {
    "text": "understanding the sources of complexity and weird design in the software that they already have you know doing things",
    "start": "2457240",
    "end": "2463599"
  },
  {
    "text": "like taking additional dependencies packages or services for a single use cases",
    "start": "2463599",
    "end": "2470200"
  },
  {
    "text": "um you know there's a lot to be said about the the wonderful lower risk of just maintaining 30 or 100 lines of code",
    "start": "2470200",
    "end": "2477640"
  },
  {
    "text": "for something that you could have otherwise just installed as a package for free just to avoid the dependency hell",
    "start": "2477640",
    "end": "2483820"
  },
  {
    "text": "if you don't need it don't use it and that's because all dependencies have surface areas",
    "start": "2483820",
    "end": "2489940"
  },
  {
    "text": "and actually you know the surface area of a dependency is an amplica an amplifying factor to complexity because",
    "start": "2489940",
    "end": "2496660"
  },
  {
    "text": "if you introduce a dependency somewhere in your system you could use any part of its API",
    "start": "2496660",
    "end": "2503160"
  },
  {
    "text": "it's interesting because it's kind of an uneasy bed fellow with this idea that every line of code you write is actually",
    "start": "2503380",
    "end": "2508839"
  },
  {
    "text": "a burden and is cost right so in in one sense you're trying to minimize the",
    "start": "2508839",
    "end": "2513880"
  },
  {
    "text": "amount of code that you write yourself because that comes with a maintenance cost but with another I'm standing here saying oh but watch out just adding",
    "start": "2513880",
    "end": "2520060"
  },
  {
    "text": "random packages with it because that increases the complexity and that's a a perfect example of where this kind of",
    "start": "2520060",
    "end": "2525700"
  },
  {
    "text": "tension and trade-off really comes in with real systems something more constrained with a",
    "start": "2525700",
    "end": "2531400"
  },
  {
    "text": "smaller surface area though pushes less complexity into your application and that's really the thing like the",
    "start": "2531400",
    "end": "2537520"
  },
  {
    "text": "available potential surface area of your code is where the complexity actually flows",
    "start": "2537520",
    "end": "2543040"
  },
  {
    "text": "from in your application the number of things you could use I'll give you a practical example",
    "start": "2543040",
    "end": "2548320"
  },
  {
    "text": "because I know this is all very philosophical um I recently wrote a 200 line of code program instead of using a static site",
    "start": "2548320",
    "end": "2555520"
  },
  {
    "text": "generator to build a website because I didn't believe that the stability of",
    "start": "2555520",
    "end": "2560980"
  },
  {
    "text": "tools available in the open source ecosystem with these generators was stable enough that I wouldn't have to",
    "start": "2560980",
    "end": "2566619"
  },
  {
    "text": "change it whereas writing 200 lines of code took me an hour I contain that complexity I can change",
    "start": "2566619",
    "end": "2573700"
  },
  {
    "text": "it it's my maintenance burden but my gamble is it's less big than the inverse",
    "start": "2573700",
    "end": "2579280"
  },
  {
    "text": "of having to chase the dependency upgrade nightmare every time a minor version changed in the tool I weighed up",
    "start": "2579280",
    "end": "2586720"
  },
  {
    "text": "the choices and there was less risk to me all your designs should really be an",
    "start": "2586720",
    "end": "2592480"
  },
  {
    "text": "expression of these kinds of trade-offs and compromises and gentle balance rather than one single idea layout or",
    "start": "2592480",
    "end": "2600700"
  },
  {
    "text": "concept dragged to its natural position of absurdity like everything has to be a",
    "start": "2600700",
    "end": "2607000"
  },
  {
    "text": "controller we only use things called services all classes end with this name",
    "start": "2607000",
    "end": "2613060"
  },
  {
    "text": "all of that stuff is absurd it's taking ideas to a place without really understanding why",
    "start": "2613060",
    "end": "2619920"
  },
  {
    "text": "and in fact once you stop considering things as this kind of continual trade-off what you realize is instead of rules",
    "start": "2621760",
    "end": "2628060"
  },
  {
    "text": "around system design you end up with tests and I don't mean like tests that we write in software",
    "start": "2628060",
    "end": "2633400"
  },
  {
    "text": "I mean tests which will evaluate the qualities of the designs that you make I want to take you through a couple of",
    "start": "2633400",
    "end": "2639339"
  },
  {
    "text": "tests I use to evaluate designs and intentionality and code bases so hopefully you can look at your choices",
    "start": "2639339",
    "end": "2645940"
  },
  {
    "text": "from a slightly different perspective this is my favorite could you do this",
    "start": "2645940",
    "end": "2651579"
  },
  {
    "text": "with less moving parts you know a solution with less moving parts and less systems has less",
    "start": "2651579",
    "end": "2657940"
  },
  {
    "text": "cognitive load it's easier to rationalize has less build dependencies there's just less",
    "start": "2657940",
    "end": "2664180"
  },
  {
    "text": "stuff and I'm stupid and I got a small brain none of it fits in give me something small",
    "start": "2664180",
    "end": "2670780"
  },
  {
    "text": "there are many places you know in in most people's ecosystems where ballooning complexity makes working with",
    "start": "2670780",
    "end": "2676960"
  },
  {
    "text": "other systems more complex than it should be you have to realize that extracting things out comes with",
    "start": "2676960",
    "end": "2682660"
  },
  {
    "text": "inherent cost so think about it before you do it",
    "start": "2682660",
    "end": "2688079"
  },
  {
    "text": "the Golden Rule here is to only break up systems into individual components when they need to ship scale or deploy",
    "start": "2689140",
    "end": "2695319"
  },
  {
    "text": "independently anything else probably not worth it",
    "start": "2695319",
    "end": "2700599"
  },
  {
    "text": "is this operable in a production environment so software systems that are hard to",
    "start": "2700599",
    "end": "2706599"
  },
  {
    "text": "observe deploy and manage or automate slow the pace of change and this thing is like a multiplication",
    "start": "2706599",
    "end": "2713380"
  },
  {
    "text": "Factor through your system because if you slow the pace of change for one team that you have soon enough you'll be",
    "start": "2713380",
    "end": "2718599"
  },
  {
    "text": "blocking all the other teams what what you need to do is build software that reduces operational",
    "start": "2718599",
    "end": "2723700"
  },
  {
    "text": "burdens where the design is you know places where the design is difficult to configure or deploy",
    "start": "2723700",
    "end": "2729640"
  },
  {
    "text": "becomes impossible to maintain and modify which means people stop pushing changes through it which means the",
    "start": "2729640",
    "end": "2735099"
  },
  {
    "text": "system rots away is it easy to change the best quality of",
    "start": "2735099",
    "end": "2741940"
  },
  {
    "text": "all software um software Libs for about five to nine years unless it's written for some",
    "start": "2741940",
    "end": "2748359"
  },
  {
    "text": "massive old Mainframe you know it's kind of a funny observation that most software that you use you end up in",
    "start": "2748359",
    "end": "2755079"
  },
  {
    "text": "debates around like picking Frameworks and how they're going to version and what the changes are going to be most software is kept up to date in the",
    "start": "2755079",
    "end": "2761260"
  },
  {
    "text": "initial part of its development and then keeping it up to date becomes too difficult and then it's killed and",
    "start": "2761260",
    "end": "2766780"
  },
  {
    "text": "Rewritten and replaced with something else because the context changes kind of a truism and that was kind of",
    "start": "2766780",
    "end": "2772240"
  },
  {
    "text": "that part of that foundational microservice kind of thinking where you know you're meant to build things that you can throw away and replace with",
    "start": "2772240",
    "end": "2778359"
  },
  {
    "text": "other things to do the job minimize the cost so software that is easy to change",
    "start": "2778359",
    "end": "2783400"
  },
  {
    "text": "is great you know we should avoid over design and focus on Simplicity first",
    "start": "2783400",
    "end": "2790740"
  },
  {
    "text": "so what I'm really talking about is just putting the design back into software I know it sounds silly to say that design",
    "start": "2792460",
    "end": "2798640"
  },
  {
    "text": "patterns aren't designed but I want people to you know I want to plead with you all like desperately just just kind",
    "start": "2798640",
    "end": "2806200"
  },
  {
    "text": "of think about things before you do them and there's the whole talk I could have just come up on stage and said that and",
    "start": "2806200",
    "end": "2811599"
  },
  {
    "text": "let you all get out of the HotBox um I want you to think about the design of your software I want you to think",
    "start": "2811599",
    "end": "2816819"
  },
  {
    "text": "about the reader I want you to think about the flow and the form of your application and what it tells people",
    "start": "2816819",
    "end": "2822099"
  },
  {
    "text": "I want you to use all the forms of expression available to you in your code base to communicate meaning and intent",
    "start": "2822099",
    "end": "2828520"
  },
  {
    "text": "different problem spaces and different solutions require different aesthetic viewpoints we should embrace that",
    "start": "2828520",
    "end": "2835000"
  },
  {
    "text": "lest we damn ourselves to either everything is a jumble of components and HTTP calls great architecture or",
    "start": "2835000",
    "end": "2841599"
  },
  {
    "text": "everything is an MBC app the the you know the two architectures",
    "start": "2841599",
    "end": "2847000"
  },
  {
    "text": "um I don't it doesn't have to be this way it really doesn't and and where you use form and designed to Telegraph intent the work becomes better because",
    "start": "2847000",
    "end": "2854560"
  },
  {
    "text": "your care shows and I can I see it I can see it when I open people's code I can",
    "start": "2854560",
    "end": "2859599"
  },
  {
    "text": "see when they 've given a about it honestly like it's obvious now I was on a podcast a couple of years",
    "start": "2859599",
    "end": "2866380"
  },
  {
    "text": "back and they asked me this really horrible question to be put on the spot on asked which is what advice would you",
    "start": "2866380",
    "end": "2871480"
  },
  {
    "text": "give to yourself at the start of your career I was like oh God don't make my decisions I don't know",
    "start": "2871480",
    "end": "2876760"
  },
  {
    "text": "um just spend more time and it sounds really silly but I know",
    "start": "2876760",
    "end": "2883599"
  },
  {
    "text": "this is the truth I just all the best work I've ever done comes from me giving about 20 extra time to the thing I think",
    "start": "2883599",
    "end": "2890260"
  },
  {
    "text": "is finished just sitting there and looking at it and working out how it makes me feel and",
    "start": "2890260",
    "end": "2895660"
  },
  {
    "text": "then when I feel something trying to understand why I feel that way it sounds like really trite advice but",
    "start": "2895660",
    "end": "2901540"
  },
  {
    "text": "like never stop asking why is this like this why have I made this choice",
    "start": "2901540",
    "end": "2908339"
  },
  {
    "text": "I want to leave you with a few reading recommendations as well partially because I really don't think there are many good books about this topic at all",
    "start": "2909220",
    "end": "2916000"
  },
  {
    "text": "I don't think people think about it so much but there have been a couple recently so um the one that I quoted",
    "start": "2916000",
    "end": "2921880"
  },
  {
    "text": "from earlier was a philosophy of software design by John oosterhaut",
    "start": "2921880",
    "end": "2926920"
  },
  {
    "text": "um it's brilliant the other one is a little bit old your code is a crime scene by Adam Thornhill",
    "start": "2926920",
    "end": "2933180"
  },
  {
    "text": "he really affected the way I started thinking about this about a decade ago with this book where he looks at",
    "start": "2933180",
    "end": "2938859"
  },
  {
    "text": "software by its other qualities like change frequency and hot spots and coupling between people",
    "start": "2938859",
    "end": "2945180"
  },
  {
    "text": "and recently Mark Seaman put out a book called code that fits in your head which",
    "start": "2945180",
    "end": "2950200"
  },
  {
    "text": "touches on a few of these similar kind of topics of like understanding really why we make choices in software all",
    "start": "2950200",
    "end": "2956079"
  },
  {
    "text": "three of those books are far more exhaustive with examples than any conference talk could be so if you want to pour across code examples those are",
    "start": "2956079",
    "end": "2962380"
  },
  {
    "text": "probably the places to start support the authors in your community buy books Keepers and jobs",
    "start": "2962380",
    "end": "2968500"
  },
  {
    "text": "and uh yeah ever seen a full talk that could be described as just it it depends",
    "start": "2968500",
    "end": "2975339"
  },
  {
    "text": "hi um you have now I like talking about design and the use of literature and",
    "start": "2975339",
    "end": "2981640"
  },
  {
    "text": "intentionality when I talk about software because you know words mean things that's the truth words mean",
    "start": "2981640",
    "end": "2986740"
  },
  {
    "text": "things and the only way we're ever going to get better at building smaller more precise more beautiful software is if we",
    "start": "2986740",
    "end": "2993220"
  },
  {
    "text": "can communicate with each other in language that means things so I hope this was interesting",
    "start": "2993220",
    "end": "2998560"
  },
  {
    "text": "I hope it gave you some new lenses to look at your designs through I know it's all very theoretical please don't hate",
    "start": "2998560",
    "end": "3004200"
  },
  {
    "text": "tweet me I don't want to argue with you on the internet but follow me on social media I'd love to chat about it so thank",
    "start": "3004200",
    "end": "3010680"
  },
  {
    "text": "you all for coming I really really do appreciate it [Applause]",
    "start": "3010680",
    "end": "3017650"
  }
]