[
  {
    "text": "hello good morning everybody no wait good afternoon everybody start",
    "start": "4870",
    "end": "12309"
  },
  {
    "text": "that over thanks for coming out to the last session of the day I hope you're having a good conference are you oh that",
    "start": "12309",
    "end": "19119"
  },
  {
    "text": "was enthusiastic good so while ago I did the series of code",
    "start": "19119",
    "end": "26320"
  },
  {
    "text": "reviews won a number of services and applications that I was helping to build with a company and was taking some notes",
    "start": "26320",
    "end": "31720"
  },
  {
    "text": "about things that I liked and things that I didn't like and I came up with a list of 68 items to review with the team",
    "start": "31720",
    "end": "36970"
  },
  {
    "text": "and I thought well maybe I could make a conference talk out of this and cut out some of the smaller issues or company",
    "start": "36970",
    "end": "43510"
  },
  {
    "text": "specific issues and that's what I want to come to share with you today so talking about building asp.net core",
    "start": "43510",
    "end": "49840"
  },
  {
    "text": "applications I assume you already have some familiarity with asp.net core so I just",
    "start": "49840",
    "end": "56920"
  },
  {
    "text": "have a series of tips that I want to walk through opinion so I'm not talking about best practices I'm just talking",
    "start": "56920",
    "end": "62590"
  },
  {
    "text": "about the things that I like to see when I'm in a project and the tips I have are broken up into solutions and projects",
    "start": "62590",
    "end": "69429"
  },
  {
    "text": "startup code writing controllers writing client code writing c-sharp code views and testing let's talk first about",
    "start": "69429",
    "end": "78250"
  },
  {
    "text": "setting up solutions and projects one of the interesting things well there's several interesting things that happen",
    "start": "78250",
    "end": "83920"
  },
  {
    "text": "when Microsoft decided to go open-source with asp.net core and dotnet core one of",
    "start": "83920",
    "end": "89770"
  },
  {
    "text": "the interesting things is that is that is not that we could get to the source code because we could always get to the",
    "start": "89770",
    "end": "94869"
  },
  {
    "text": "source code for stuff in dotnet we could use some sort of D compiler so what was really interesting was the ability to go",
    "start": "94869",
    "end": "100780"
  },
  {
    "text": "into a github repository and see first of all how Microsoft would structure a solution and how they would structure",
    "start": "100780",
    "end": "106959"
  },
  {
    "text": "their repositories and how they would lay things out on the filesystem and it was also interesting to read through the",
    "start": "106959",
    "end": "112780"
  },
  {
    "text": "samples and experiments that they would check in alongside of the production code and it's also very interesting to",
    "start": "112780",
    "end": "118330"
  },
  {
    "text": "me to read through their unit tests particularly if I'm trying to understand how something works so there is a",
    "start": "118330",
    "end": "125440"
  },
  {
    "text": "consistency in the Microsoft repositories when you look at them across all of asp.net core and dotnet",
    "start": "125440",
    "end": "132069"
  },
  {
    "text": "core and how they structure things and I quite like that consistency and I quite like the model",
    "start": "132069",
    "end": "137610"
  },
  {
    "text": "that they use so first of all you go to any Microsoft source code repository and in the root of the rap pop within the",
    "start": "137610",
    "end": "144060"
  },
  {
    "text": "root of that repository which is not present on this screen but what you would see is first of all the solution",
    "start": "144060",
    "end": "149760"
  },
  {
    "text": "files in the top level set anyone who is using Visual Studio can clone the repository and I'll be blinking up there",
    "start": "149760",
    "end": "156930"
  },
  {
    "text": "also yes",
    "start": "156930",
    "end": "162890"
  },
  {
    "text": "no still blinking I touched it",
    "start": "162890",
    "end": "169130"
  },
  {
    "text": "alright don't breathe now I'll keep",
    "start": "171320",
    "end": "178260"
  },
  {
    "text": "talking while someone figures something out just try not to look too hard to the screen and become nauseous where was I",
    "start": "178260",
    "end": "187260"
  },
  {
    "text": "yeah there's so there's a dot SLN file in the root of the repository so Visual Studio developer can just get clone the",
    "start": "187260",
    "end": "193530"
  },
  {
    "text": "repository double click on the solution file and they can you know start working with the code but what you also see",
    "start": "193530",
    "end": "198540"
  },
  {
    "text": "inside of every repository is there's always a source repository folder in the top level of the repository SRC that'll",
    "start": "198540",
    "end": "206310"
  },
  {
    "text": "contain the production source code there's a test folder so all the unit tests are in one place under that folder typically there's a samples folder so if",
    "start": "206310",
    "end": "213930"
  },
  {
    "text": "the repository is a repository for anything like a framework that's going to build a new kit package or something",
    "start": "213930",
    "end": "220110"
  },
  {
    "text": "that provides an API that people are going to consume then inside of that samples folder you will quite often find",
    "start": "220110",
    "end": "226500"
  },
  {
    "text": "some very interesting applications of this particular technology so when I was trying to figure out how authentic ation",
    "start": "226500",
    "end": "232950"
  },
  {
    "text": "and authorization worked in asp.net core one of the places that I found most useful much more so than the",
    "start": "232950",
    "end": "238950"
  },
  {
    "text": "documentation was the samples folder that's in the asp.net slash security github repository because that they",
    "start": "238950",
    "end": "245489"
  },
  {
    "text": "would just write some low-level code demonstrating how a specific feature would work at a very low level alright",
    "start": "245489",
    "end": "252090"
  },
  {
    "text": "we're gonna try some duct tape okay so I'll talk about some of the",
    "start": "252090",
    "end": "262270"
  },
  {
    "text": "other photos that you typically find at the top level one of the things I like to include is a documentation folder so",
    "start": "262270",
    "end": "268000"
  },
  {
    "text": "there's a picture of a solution that actually has a folder in it called Docs and with our team members we can check",
    "start": "268000",
    "end": "273760"
  },
  {
    "text": "in information and documentation that people might need to run this project or",
    "start": "273760",
    "end": "279130"
  },
  {
    "text": "to understand the architecture to understand the components now the trick to this as you probably know the visual",
    "start": "279130",
    "end": "285520"
  },
  {
    "text": "studio solution Explorer window that is pictured there tells a total lie it does",
    "start": "285520",
    "end": "290830"
  },
  {
    "text": "not give you a faithful representation of the file system behind this project",
    "start": "290830",
    "end": "296020"
  },
  {
    "text": "so when you try to right-click a solution and say add a new folder you're not adding a folder on the file system you're adding a virtual solution folder",
    "start": "296020",
    "end": "303490"
  },
  {
    "text": "and when you put stuff inside of there it doesn't exist in that folder on the",
    "start": "303490",
    "end": "308919"
  },
  {
    "text": "file system so the trick is in Visual Studio 2017 and some people might know this there's this little icon in the",
    "start": "308919",
    "end": "314710"
  },
  {
    "text": "action bar for solution Explorer the toggles between the solution view and the folder view and we switch over into",
    "start": "314710",
    "end": "320590"
  },
  {
    "text": "the folder view you do lose some capabilities but you also get a faithful",
    "start": "320590",
    "end": "326680"
  },
  {
    "text": "rest faithful representation of the file system so click on this and now when I'm",
    "start": "326680",
    "end": "331780"
  },
  {
    "text": "trying to make sure that files I place on the file system are in the correct",
    "start": "331780",
    "end": "337090"
  },
  {
    "text": "place and I right-click and say things like add folder I know that's actually gonna happen on the file system what I",
    "start": "337090",
    "end": "345070"
  },
  {
    "text": "lose that upsets some people when you right click on a folder you don't get",
    "start": "345070",
    "end": "350530"
  },
  {
    "text": "the ability to do things like manage NuGet packages but to me that's okay because it's simple to toggle back in",
    "start": "350530",
    "end": "356590"
  },
  {
    "text": "here or just do it through the CS proj file some of the other things I like to",
    "start": "356590",
    "end": "364180"
  },
  {
    "text": "check in are in addition to samples any tools that you might use during development on a frequent basis so",
    "start": "364180",
    "end": "370419"
  },
  {
    "text": "command-line tools and scripts in fact scripts or something I like to check in and this is just a picture of the",
    "start": "370419",
    "end": "376840"
  },
  {
    "text": "asp.net security github repository with their samples folder so if you want to look at something at a low level like",
    "start": "376840",
    "end": "383440"
  },
  {
    "text": "how cookies work that cookie sample is great because otherwise you're trying to figure out things while working through",
    "start": "383440",
    "end": "390070"
  },
  {
    "text": "asp.net identity framework or working through an OID C piece of middleware and the services a cookie sample is just",
    "start": "390070",
    "end": "397000"
  },
  {
    "text": "straight-up app doc run middleware that shows you the two most important lines of codes work with cookie samples the",
    "start": "397000",
    "end": "403690"
  },
  {
    "text": "first line of code is creating a claims principle and the second line of code is calling HTTP context sign and async and",
    "start": "403690",
    "end": "409539"
  },
  {
    "text": "passing that principle in with the cookie scheme and just running that",
    "start": "409539",
    "end": "414610"
  },
  {
    "text": "sample and seeing quick cookies being issued is everything you need to know so hopefully this is making sense I also",
    "start": "414610",
    "end": "420250"
  },
  {
    "text": "like to check in development scripts so now that dotnet who were has command-line tools and command-line",
    "start": "420250",
    "end": "427060"
  },
  {
    "text": "utilities that provide a lot of useful features then the more that developers",
    "start": "427060",
    "end": "434080"
  },
  {
    "text": "can do use command line scripts to automate tasks in a repeatable manner",
    "start": "434080",
    "end": "440169"
  },
  {
    "text": "the better off we are so I like to check in scripts that developers will use on the project on a regular basis so if",
    "start": "440169",
    "end": "446919"
  },
  {
    "text": "you're using entity framework and you want to add a migration and you want to make sure it happens in the consistent manner then maybe add an add migration",
    "start": "446919",
    "end": "453610"
  },
  {
    "text": "script that will do dotnet DF migrations ad and dotnet DF database update if you",
    "start": "453610",
    "end": "462969"
  },
  {
    "text": "are working in some sort of cloud environment I'm also a big fan of checking in either scripts or templates",
    "start": "462969",
    "end": "469690"
  },
  {
    "text": "or some something something that codifies and automates the provisioning",
    "start": "469690",
    "end": "475210"
  },
  {
    "text": "of resources because ideally what I want to happen is a new developers on the team they'll do a clone of the",
    "start": "475210",
    "end": "480969"
  },
  {
    "text": "repository they'll go in and maybe fill out a few parameters maybe just enter their developer name and then when a",
    "start": "480969",
    "end": "486520"
  },
  {
    "text": "script and poof something inside of azure appears there's an app service there's a key vault there's a sequel",
    "start": "486520",
    "end": "492400"
  },
  {
    "text": "database oh that's just provisioned and all the correct settings are there to start working in development and it's",
    "start": "492400",
    "end": "497650"
  },
  {
    "text": "the same scripts that you can param are sized to set up the QA environment and the production environment and the load",
    "start": "497650",
    "end": "503530"
  },
  {
    "text": "testing environments everything is consistent for sorry for",
    "start": "503530",
    "end": "512219"
  },
  {
    "text": "for as your visual studio has the concept of a resource group project",
    "start": "512840",
    "end": "518000"
  },
  {
    "text": "which is where you can add arm templates with which are the JSON files that contain all the properties of a",
    "start": "518000",
    "end": "524779"
  },
  {
    "text": "particular Asha resource they can be a bit frustrating to work with in my experience sometimes it's easier to use",
    "start": "524779",
    "end": "530390"
  },
  {
    "text": "the azure CLI and just write imperative code to say go out and create this app service and then add these three app",
    "start": "530390",
    "end": "536630"
  },
  {
    "text": "settings sometimes that's a lot easier when it comes to online builds there's",
    "start": "536630",
    "end": "543020"
  },
  {
    "text": "two build systems that I'm familiar with one is using app fair and one is using visual studio team services both of",
    "start": "543020",
    "end": "549050"
  },
  {
    "text": "those systems try to be very helpful by giving you a UI where you can describe your build so for example without there",
    "start": "549050",
    "end": "555200"
  },
  {
    "text": "I can log in I can say here's my source code and I went to run this task in this task and bsts is the same you",
    "start": "555200",
    "end": "560750"
  },
  {
    "text": "drag-and-drop tasks into a UI to describe how you want to do a build the thing that drives me nuts though is",
    "start": "560750",
    "end": "566900"
  },
  {
    "text": "when this builds don't work when you're trying to troubleshoot something when there's a NPM install command that's",
    "start": "566900",
    "end": "572510"
  },
  {
    "text": "being executed during the build and it's happening in the wrong directory it's really difficult to figure out why that is fortunately both of those systems",
    "start": "572510",
    "end": "580339"
  },
  {
    "text": "also allow you to get away from the UI and codify your build so for example",
    "start": "580339",
    "end": "586760"
  },
  {
    "text": "without there if I don't want to use their UI if I want to have more control I can just check in and out they yamo",
    "start": "586760",
    "end": "593780"
  },
  {
    "text": "file into the root of the directory and inside of that app Ferragamo file now I have all the settings for my build the",
    "start": "593780",
    "end": "600110"
  },
  {
    "text": "top-level settings and now their source controlled and I can see when someone changes something and it changes the",
    "start": "600110",
    "end": "605630"
  },
  {
    "text": "behavior of the build or changes the artifacts that are produced and as part of that mo file you can tell out there",
    "start": "605630",
    "end": "612380"
  },
  {
    "text": "what build script you want to execute so perhaps a PowerShell script dotnet builds are typically pretty easy I mean",
    "start": "612380",
    "end": "618380"
  },
  {
    "text": "there's a lot of ceremony here but basically you do dotnet restore net build on that test and dotnet Patt and",
    "start": "618380",
    "end": "623750"
  },
  {
    "text": "there might be some other things you need to add there with NPM and so forth",
    "start": "623750",
    "end": "628880"
  },
  {
    "text": "but that's that's the essence of it same thing for visual studio team services they want to give you a UI where you",
    "start": "628880",
    "end": "634940"
  },
  {
    "text": "drag and drop things but it's the same steps we just solved on a build on and test on a publish and then place my",
    "start": "634940",
    "end": "640910"
  },
  {
    "text": "artifacts somewhere I would much rather go into the task catalog and add tasks for executing a command line",
    "start": "640910",
    "end": "648200"
  },
  {
    "text": "script or axe executing a shell script or using something like a cake build or a piece sake build that I actually check",
    "start": "648200",
    "end": "655100"
  },
  {
    "text": "into source control and then I can run those builds locally and troubleshoot them and tweak them as well as run them",
    "start": "655100",
    "end": "662029"
  },
  {
    "text": "in the cloud inside a VST I saw out there something like that and it just saves time and and I like having the",
    "start": "662029",
    "end": "668779"
  },
  {
    "text": "configuration for the build in in source control all right let's talk about",
    "start": "668779",
    "end": "675110"
  },
  {
    "text": "startup code so the interesting thing I noticed is when asp.net developers came to asp.net core they were looking for",
    "start": "675110",
    "end": "681470"
  },
  {
    "text": "that place that allows you to write startup code so in asp.net we had the global ASAS file we had the application",
    "start": "681470",
    "end": "689000"
  },
  {
    "text": "start event and that was logically the place to put startup logic that's where I wanted to put stuff that might have to",
    "start": "689000",
    "end": "695120"
  },
  {
    "text": "prep the file system or migrate my database or run entity framework migrations those sorts of things then",
    "start": "695120",
    "end": "703430"
  },
  {
    "text": "when developers came to asp.net core I think they saw startup Nazi s and I've just seen some of the most bizarre",
    "start": "703430",
    "end": "708470"
  },
  {
    "text": "things happen inside of startup CS everything from file system manipulations and database seeding and",
    "start": "708470",
    "end": "715970"
  },
  {
    "text": "so forth to me startup is really just these days about two responsibilities",
    "start": "715970",
    "end": "721880"
  },
  {
    "text": "the first responsibility is configure configure services and the second responsibility is writing configures and",
    "start": "721880",
    "end": "728120"
  },
  {
    "text": "one is configuring the ioc container or the service provider and asp.net core the second one is about configuring the",
    "start": "728120",
    "end": "734660"
  },
  {
    "text": "middleware that you want to use a lot of people who started with asp.net core in",
    "start": "734660",
    "end": "740330"
  },
  {
    "text": "1.0 are also used to seeing a constructor for your startup class where",
    "start": "740330",
    "end": "745640"
  },
  {
    "text": "the constructor can have some services injected and inside of the constructor you would set up things like configuration and your logger and so",
    "start": "745640",
    "end": "751970"
  },
  {
    "text": "forth ideally I would like to take that code out of startup Nazi s put it into",
    "start": "751970",
    "end": "757100"
  },
  {
    "text": "program dot C S which is where the static main entry point is for asp.net",
    "start": "757100",
    "end": "762320"
  },
  {
    "text": "and set up your configuration sources and your logging as soon as possible so",
    "start": "762320",
    "end": "768140"
  },
  {
    "text": "even rip that stuff out of startup which leaves you with just configure services",
    "start": "768140",
    "end": "773240"
  },
  {
    "text": "and configure so I've also been on projects where you go and to configure services to try to figure out why the",
    "start": "773240",
    "end": "778790"
  },
  {
    "text": "application it's behaving a certain way or see what services are rendered and configure services can easily grow to a couple",
    "start": "778790",
    "end": "785040"
  },
  {
    "text": "hundred lines of code because once you start adding the MVC framework and adding some customizations for it and",
    "start": "785040",
    "end": "791220"
  },
  {
    "text": "you configure your open ID connect services the authentication services and add some configuration for everything",
    "start": "791220",
    "end": "798000"
  },
  {
    "text": "just grows and grows and grows what I like to do is come in to configure services and just see a flat series of",
    "start": "798000",
    "end": "804090"
  },
  {
    "text": "method calls that are extension methods that developers have implemented to add the services and all the customizations",
    "start": "804090",
    "end": "810300"
  },
  {
    "text": "that they need so I can see at a top level oh we're using MVC we're using security we're secure we're using a thing called",
    "start": "810300",
    "end": "817950"
  },
  {
    "text": "mediator I'll talk about later we're adding some sort of data stores and to me it's a lot easier than to figure out",
    "start": "817950",
    "end": "823320"
  },
  {
    "text": "where I want to go just by putting the cursor there and pressing f12 and digging into one of those things than it",
    "start": "823320",
    "end": "828480"
  },
  {
    "text": "is trying to dig through four or five sections of blocks of code like this once you're just trying to configure the",
    "start": "828480",
    "end": "834810"
  },
  {
    "text": "MVC framework same thing goes for the configure method when you're adding middleware to the application although I",
    "start": "834810",
    "end": "843480"
  },
  {
    "text": "think to me it's okay to allow configure to branch so I want to be very I want it",
    "start": "843480",
    "end": "848700"
  },
  {
    "text": "to be very explicit what middleware is installed during development like browser link in a way that's there and",
    "start": "848700",
    "end": "855210"
  },
  {
    "text": "what little where is installed during production the production exception handler to me that's important to see",
    "start": "855210",
    "end": "861210"
  },
  {
    "text": "the difference between those two environments and how the application will behave but in other cases if you're",
    "start": "861210",
    "end": "866460"
  },
  {
    "text": "passing in option objects into these methods and those option objects are sort of garbling up the clarity of",
    "start": "866460",
    "end": "872690"
  },
  {
    "text": "configure again I would like to write in a custom extension method to say use MV",
    "start": "872690",
    "end": "879090"
  },
  {
    "text": "use MVC with custom options that sort of thing and pack that stuff away somewhere else",
    "start": "879090",
    "end": "885650"
  },
  {
    "text": "and then one of the beautiful things about asp.net core is your night you're not just writing something that is a dll",
    "start": "885650",
    "end": "892080"
  },
  {
    "text": "that has to get hosted somewhere you can if you think of the application that you're building as a standalone console",
    "start": "892080",
    "end": "898140"
  },
  {
    "text": "application there's some interesting things that come out of that I think so going back to that discussion of where",
    "start": "898140",
    "end": "906390"
  },
  {
    "text": "do we actually put startup code if it's not inside of startup dot CS well",
    "start": "906390",
    "end": "911850"
  },
  {
    "text": "program dot CS with a static void main entry point that ideally is where I would like to see",
    "start": "911850",
    "end": "917790"
  },
  {
    "text": "startup code and there's this really interesting point in time which is right about here which is in between the time",
    "start": "917790",
    "end": "925080"
  },
  {
    "text": "when I've created a web host builder and I've told it what it's going to use and what the startup class is between that",
    "start": "925080",
    "end": "931170"
  },
  {
    "text": "point in time when I build it and when I start running and listening for HTTP messages this is a point in time that's",
    "start": "931170",
    "end": "937560"
  },
  {
    "text": "unique in applications for dotnet because at this point in time I can do things and I know my connection strings",
    "start": "937560",
    "end": "944550"
  },
  {
    "text": "I know my configuration sources I know my logging everything's been set up for me there's a service provider there's a",
    "start": "944550",
    "end": "950760"
  },
  {
    "text": "container that's ready to fetch services for me that have been configured for production so it's at this point in time",
    "start": "950760",
    "end": "956880"
  },
  {
    "text": "where I like to do some of the interesting things that might have to happen before the application actually starts listening for HTTP messages so",
    "start": "956880",
    "end": "963000"
  },
  {
    "text": "for example if someone runs this with dotnet run and says dotnet run drop DB",
    "start": "963000",
    "end": "968910"
  },
  {
    "text": "exit what the application can do is come in and get an instance in this case for",
    "start": "968910",
    "end": "974250"
  },
  {
    "text": "this project get an instance of the DB context that the entity framework will manage for the database and can drop the",
    "start": "974250",
    "end": "980100"
  },
  {
    "text": "database and then perhaps run D migrations that are in the project and perhaps seed the database with some of",
    "start": "980100",
    "end": "987000"
  },
  {
    "text": "the sample data or the the lookup data that has to be in place for the application to run and then in fact we",
    "start": "987000",
    "end": "992460"
  },
  {
    "text": "could even stop the application so it doesn't continue to listen for messages because that's all we wanted to do we just wanted to get the environment",
    "start": "992460",
    "end": "998310"
  },
  {
    "text": "configured and make use of this application as an executable and when",
    "start": "998310",
    "end": "1005150"
  },
  {
    "text": "you do this yeah instead of showing this code I just want to point out that if",
    "start": "1005150",
    "end": "1011090"
  },
  {
    "text": "you're ever working with the host dot services and you're pulling a service out you're trying to use it to resolve a",
    "start": "1011090",
    "end": "1016460"
  },
  {
    "text": "service particularly if you're outside of an HTTP transaction you want to make",
    "start": "1016460",
    "end": "1021620"
  },
  {
    "text": "sure that you go through and I serve a scope factory scope factory is something that can create a scope that's",
    "start": "1021620",
    "end": "1026810"
  },
  {
    "text": "disposable so when you're using the scope to resolve services like so give",
    "start": "1026810",
    "end": "1033560"
  },
  {
    "text": "me a service you can make sure that you're not doing something like accidentally creating a singleton out of",
    "start": "1033560",
    "end": "1038870"
  },
  {
    "text": "something that was supposed to be transient because everything will get cleaned up properly when that's done",
    "start": "1038870",
    "end": "1045250"
  },
  {
    "text": "and this is another script that could be checked into the scripts folder for the",
    "start": "1046569",
    "end": "1052520"
  },
  {
    "text": "project so a developer can just do a get pull in the morning then run recreate DB",
    "start": "1052520",
    "end": "1058040"
  },
  {
    "text": "and this will do a dot run drop the database migrated seeded stop and they're ready to start working with any changes that were checked in the",
    "start": "1058040",
    "end": "1064190"
  },
  {
    "text": "previous day project structure before I",
    "start": "1064190",
    "end": "1070370"
  },
  {
    "text": "talk about feature folders how many people know about feature folders by the way a few I think let me give you a",
    "start": "1070370",
    "end": "1079070"
  },
  {
    "text": "scenario so I'm gonna flip over to UM web applications seven and eight very",
    "start": "1079070",
    "end": "1085190"
  },
  {
    "text": "popular applications we're gonna go far so well I'll tell you this web applications seven was created by saying",
    "start": "1085190",
    "end": "1091850"
  },
  {
    "text": "file new project give me an NB C application that uses asp.net identity to allow users to",
    "start": "1091850",
    "end": "1099470"
  },
  {
    "text": "register and login to my site and when you do that with asp.net core 2.0 at",
    "start": "1099470",
    "end": "1104840"
  },
  {
    "text": "least what Visual Studio what that template will do is generate the all the controllers and all the views and all",
    "start": "1104840",
    "end": "1111650"
  },
  {
    "text": "the models that you need to register users and to do two-factor authentication and reset passwords all",
    "start": "1111650",
    "end": "1117799"
  },
  {
    "text": "of that stuff is here on the file system I also did web application eight also",
    "start": "1117799",
    "end": "1123440"
  },
  {
    "text": "with asp.net identity but I did it with something called razor pages so I just",
    "start": "1123440",
    "end": "1129169"
  },
  {
    "text": "want to compare these two for a specific scenario so let's say someone comes to me and says Scott the user is trying to",
    "start": "1129169",
    "end": "1137480"
  },
  {
    "text": "reset their password and there's some sort of bug we don't know what's going on can you take a look at that feature",
    "start": "1137480",
    "end": "1142610"
  },
  {
    "text": "right I want to think in terms of features primarily so I want to think about a reset password what do I need to",
    "start": "1142610",
    "end": "1149179"
  },
  {
    "text": "do to work on that I want to get all the files open so I can look at this I'm guessing that might be an account",
    "start": "1149179",
    "end": "1155390"
  },
  {
    "text": "controller the users gonna reset a password they're doing something with their account so let's go in here and",
    "start": "1155390",
    "end": "1161360"
  },
  {
    "text": "start scrolling down looking for reset well there's log in there's register",
    "start": "1161360",
    "end": "1168460"
  },
  {
    "text": "we've been through three hundred lines of code it's not there yet confirm email forgot password ah reset",
    "start": "1168460",
    "end": "1176190"
  },
  {
    "text": "password there's the get and there's the post ok I'm one third of the way there I found the controller code that I need to",
    "start": "1176190",
    "end": "1182550"
  },
  {
    "text": "look at now maybe I need to look at the views let me go into the views folder I'm assuming this will be an account",
    "start": "1182550",
    "end": "1188970"
  },
  {
    "text": "there's reset password there open that file out now I want to find the models",
    "start": "1188970",
    "end": "1194340"
  },
  {
    "text": "for this particular feature so let me find your reset view model that the controller uses and now finally I have",
    "start": "1194340",
    "end": "1200460"
  },
  {
    "text": "found the three primary pieces of the three primary abstractions that they",
    "start": "1200460",
    "end": "1206310"
  },
  {
    "text": "need to look at to work with this feature so what irritates me about this today is that the model-view-controller design pattern is about a separation of",
    "start": "1206310",
    "end": "1214350"
  },
  {
    "text": "concerns so that the controller only knows about the HTTP requests or some external stimulus it builds a model the",
    "start": "1214350",
    "end": "1220920"
  },
  {
    "text": "bottle model doesn't know about each EDP it doesn't know about the controller the controller sends the model over to the",
    "start": "1220920",
    "end": "1226290"
  },
  {
    "text": "view so there's this nice testable flexible abstraction but the MVC design pattern ever said that there had to be a",
    "start": "1226290",
    "end": "1232350"
  },
  {
    "text": "separation of these abstractions so that they're in three different directories all over the place right I have a really",
    "start": "1232350",
    "end": "1238770"
  },
  {
    "text": "actually difficult time working on MVC projects these days that use the conventional controllers are over here",
    "start": "1238770",
    "end": "1244710"
  },
  {
    "text": "and these are over there set up so previously before asp.net core 2.0 came",
    "start": "1244710",
    "end": "1251400"
  },
  {
    "text": "along I was really into feature folders so the idea of feature folders was instead of putting controllers and views",
    "start": "1251400",
    "end": "1257610"
  },
  {
    "text": "and models in separate places you would instead organize these UI layer",
    "start": "1257610",
    "end": "1262800"
  },
  {
    "text": "abstractions into folders that to me the way I like to work with it these folders kind of represented the",
    "start": "1262800",
    "end": "1269280"
  },
  {
    "text": "hierarchy of your UI so if you have an admin menu that someone clicks on and then they click on a button to manage a",
    "start": "1269280",
    "end": "1275640"
  },
  {
    "text": "season or manage invoices whatever it is everything about that particular feature",
    "start": "1275640",
    "end": "1280910"
  },
  {
    "text": "would be inside of here so there's the controller manage season controller there's a couple of years in here that",
    "start": "1280910",
    "end": "1287190"
  },
  {
    "text": "the controller might render and there's a couple models that the controller works with so when someone goes to work on that feature they have one folder to",
    "start": "1287190",
    "end": "1293370"
  },
  {
    "text": "go to and everything's there one day I hope it's possible that I can actually",
    "start": "1293370",
    "end": "1299370"
  },
  {
    "text": "place my unit tasks inside of that same folder for the future and actually have unit tests in the same project as",
    "start": "1299370",
    "end": "1305670"
  },
  {
    "text": "the production code but you know have some way to magically remove things or unlink them if I'm not going to do run",
    "start": "1305670",
    "end": "1312990"
  },
  {
    "text": "unit tests but then everything's in one place so for previously before asp.net course we point out I would use feature",
    "start": "1312990",
    "end": "1319679"
  },
  {
    "text": "folders and actually built a little nougat package if you want to if you wanted to install it all you had to do",
    "start": "1319679",
    "end": "1325980"
  },
  {
    "text": "is install the package and then say services not heavy atom you see add feature folders and now you can start",
    "start": "1325980",
    "end": "1331260"
  },
  {
    "text": "putting views under the features folders but then something interesting came around in asp.net core 2.0 which was",
    "start": "1331260",
    "end": "1336840"
  },
  {
    "text": "razor pages so the second project web application eats is built with razor",
    "start": "1336840",
    "end": "1343770"
  },
  {
    "text": "pages instead of controllers and views so same scenario me the developer wants",
    "start": "1343770",
    "end": "1349500"
  },
  {
    "text": "to work on reset password' so let me come into the pages folder and I'm guessing again this is under account and",
    "start": "1349500",
    "end": "1355290"
  },
  {
    "text": "oh there it is reset password that's the feature I want to look at so let me open the view there's also the code behind",
    "start": "1355290",
    "end": "1363540"
  },
  {
    "text": "file which has the model embedded inside of it but just two clicks and I now have",
    "start": "1363540",
    "end": "1371160"
  },
  {
    "text": "everything that I need to work on that feature so with razor pages there's not",
    "start": "1371160",
    "end": "1376620"
  },
  {
    "text": "this artificial separation of here's the thing that is sort of like the controller and here's the view and they have to live apart they're right there",
    "start": "1376620",
    "end": "1382559"
  },
  {
    "text": "together which is kind of nice and just to give you a few words about razor pages in case you haven't looked at them",
    "start": "1382559",
    "end": "1388290"
  },
  {
    "text": "yet I do enjoy them they are the real deal you're still writing razor so the razor",
    "start": "1388290",
    "end": "1394290"
  },
  {
    "text": "views aren't all that interesting they're you know the same as any razor view really that you would render from a",
    "start": "1394290",
    "end": "1399450"
  },
  {
    "text": "controller for the most part except it has an app page directive but then a lot of people think of this as the this code",
    "start": "1399450",
    "end": "1404490"
  },
  {
    "text": "behind file and say oh Lord is there view state two and the answer is no there's no view state there's no",
    "start": "1404490",
    "end": "1409590"
  },
  {
    "text": "artificial synthetic click events nothing like that if I open up the page model for that particular view this is",
    "start": "1409590",
    "end": "1416669"
  },
  {
    "text": "very much like a controller so you have dependency injection so you can see there's a constructor where we're asking for a service to manage users yes they",
    "start": "1416669",
    "end": "1424980"
  },
  {
    "text": "define some of their models as nested classes inside of the page model which I'm not a big fan of but that's okay I",
    "start": "1424980",
    "end": "1430470"
  },
  {
    "text": "mean personally if it was up to me I would probably put that in a separate file and I would actually create a folder called register",
    "start": "1430470",
    "end": "1436999"
  },
  {
    "text": "or a reset password' and tuck the reset stuff into there so it's even a little more granular than just dumping",
    "start": "1436999",
    "end": "1442429"
  },
  {
    "text": "everything into this one folder but this is how I'm going to bind things when the",
    "start": "1442429",
    "end": "1448189"
  },
  {
    "text": "user post a form back is going to bind to this input model I can also use that input model when I'm a binding stuff in",
    "start": "1448189",
    "end": "1457189"
  },
  {
    "text": "the UI to display or binding inputs and it responds to an HTTP GET request and",
    "start": "1457189",
    "end": "1463729"
  },
  {
    "text": "it responds to an HTTP POST request so really it's not that much different than a controller and in fact in some ways",
    "start": "1463729",
    "end": "1470449"
  },
  {
    "text": "it's a little bit better this post request you'll notice there's no toke",
    "start": "1470449",
    "end": "1475789"
  },
  {
    "text": "there's no attribute here to validate the anti forgery token that's because razor pages just assume you're going to",
    "start": "1475789",
    "end": "1481279"
  },
  {
    "text": "be working with HTML forms and every post operation should validate in anti",
    "start": "1481279",
    "end": "1486829"
  },
  {
    "text": "forgery token so it just is taken care of for you you don't have to worry about developers accidentally missing that so",
    "start": "1486829",
    "end": "1493909"
  },
  {
    "text": "if you haven't looked at razor pages give them a try I think they're awesome to work with if you're building HTML applications but to",
    "start": "1493909",
    "end": "1501679"
  },
  {
    "text": "me if you're building API so you use controllers but if you're building an application that primarily does server-side HTML rendering I don't want",
    "start": "1501679",
    "end": "1508759"
  },
  {
    "text": "to use controllers for that I want to use razor pages razor pages for HTML and then when it comes to controllers please",
    "start": "1508759",
    "end": "1517819"
  },
  {
    "text": "don't allow developers to use temp app dot use MVC middleware with a route",
    "start": "1517819",
    "end": "1524179"
  },
  {
    "text": "builder to define templated routes some of the worst api designs have i've seen",
    "start": "1524179",
    "end": "1530179"
  },
  {
    "text": "have happened when developers use the route builder to define template to route so I've seen api's where there's a",
    "start": "1530179",
    "end": "1536749"
  },
  {
    "text": "method that takes an ID parameter and you actually look and that ID parameter is something like an invoice date and",
    "start": "1536749",
    "end": "1544099"
  },
  {
    "text": "you ask the developer why are you passing invoice date is ID well that's what the template said it said controller action ID the third thing",
    "start": "1544099",
    "end": "1550129"
  },
  {
    "text": "always has to be named ID no but so the solution to that is not to use any don't",
    "start": "1550129",
    "end": "1558199"
  },
  {
    "text": "use the route builder at all just use routing attributes because now URLs are looking developers in the face so they",
    "start": "1558199",
    "end": "1563509"
  },
  {
    "text": "have to think about the URLs that they're actually putting together when they're writing controllers so if this",
    "start": "1563509",
    "end": "1568759"
  },
  {
    "text": "controller should be part of a collection of controllers that manage admin type resources than is really easy",
    "start": "1568759",
    "end": "1576320"
  },
  {
    "text": "to say yeah let's tuck this in to admin and to do that I don't have to go into some nest and some ugly route builder",
    "start": "1576320",
    "end": "1584000"
  },
  {
    "text": "code and fight with other people that are adding adding templates at routes there so the other thing I can do is",
    "start": "1584000",
    "end": "1590510"
  },
  {
    "text": "it's really easy to change my parameter name so I don't have to not everything has to be ID anymore so this one there's",
    "start": "1590510",
    "end": "1597380"
  },
  {
    "text": "a season ID this one there's a match set ID so it's I think the route attributes are the best way to go because they",
    "start": "1597380",
    "end": "1603080"
  },
  {
    "text": "again forced developers to think about the URL so the clients are going to use to consume the API which is good and you",
    "start": "1603080",
    "end": "1610549"
  },
  {
    "text": "can actually start thinking about resources and especially you can think about the relationship between resources",
    "start": "1610549",
    "end": "1615950"
  },
  {
    "text": "you know how are they nested should something be underneath of something else",
    "start": "1615950",
    "end": "1621880"
  },
  {
    "text": "oh this was yeah I wanted to change that actually I forgot anyone used mediator",
    "start": "1623090",
    "end": "1628970"
  },
  {
    "text": "no no but it is a few people I'll just say think about mediator",
    "start": "1628970",
    "end": "1635210"
  },
  {
    "text": "because it's not something everyone should use it's really useful in some cases and but let me explain what it is",
    "start": "1635210",
    "end": "1640760"
  },
  {
    "text": "it's basically an in-memory service boss Jimmy Bogaerts the author of the mediator library it's an in-memory service boss so what",
    "start": "1640760",
    "end": "1647450"
  },
  {
    "text": "you can do is when a controller receives some input from the user or some requests it can translate that request",
    "start": "1647450",
    "end": "1655309"
  },
  {
    "text": "into a message that is put into mediator and set off over the service boss to find something that will process that",
    "start": "1655309",
    "end": "1661880"
  },
  {
    "text": "query or process that command to produce a result so what it adds like any",
    "start": "1661880",
    "end": "1666919"
  },
  {
    "text": "messaging system it Ladd's a layer of indirection between your controller and the the the code the business code the",
    "start": "1666919",
    "end": "1674120"
  },
  {
    "text": "logic that's actually going to satisfy that request for the user so all the queries and algorithms whatever has to",
    "start": "1674120",
    "end": "1679520"
  },
  {
    "text": "happen so the good news is it adds a layer of indirection the bad news is it adds a layer of indirection so some",
    "start": "1679520",
    "end": "1685760"
  },
  {
    "text": "projects you don't need an additional layer of indirection and in fact it's really quite annoying to go into an MVC action",
    "start": "1685760",
    "end": "1691700"
  },
  {
    "text": "and see Oh mediator about send async now I have to go find where that happens but",
    "start": "1691700",
    "end": "1698029"
  },
  {
    "text": "if you're in an application where you need this decoupling perhaps you're inducing logic that might not be",
    "start": "1698029",
    "end": "1705139"
  },
  {
    "text": "in the same project or you have to reuse some of the logic between the controllers mediator can be a great way",
    "start": "1705139",
    "end": "1711019"
  },
  {
    "text": "to make your controllers very skinny so they're not going to be initiating any",
    "start": "1711019",
    "end": "1716480"
  },
  {
    "text": "database queries or they're not going to be doing any web service calls all of that is going to be in code that has",
    "start": "1716480",
    "end": "1722480"
  },
  {
    "text": "eventually reached when you send a request to mediator and if you're",
    "start": "1722480",
    "end": "1729019"
  },
  {
    "text": "building an API a lot of people still build API controllers inside of projects that use cookie authentication so just",
    "start": "1729019",
    "end": "1735470"
  },
  {
    "text": "remember if you have cookies to authenticate users you have to have to",
    "start": "1735470",
    "end": "1741320"
  },
  {
    "text": "have to check for and validate anti for tree tokens and that goes for API controllers also so then the question",
    "start": "1741320",
    "end": "1748429"
  },
  {
    "text": "becomes when I'm doing a post to my API is from JavaScript how do I get an anti",
    "start": "1748429",
    "end": "1756260"
  },
  {
    "text": "forgery token that JavaScript can use when it sends something to my API so we can validate everything and this is just",
    "start": "1756260",
    "end": "1762980"
  },
  {
    "text": "an example of a cross-site request forgery token controller that someone can just do a get request",
    "start": "1762980",
    "end": "1768980"
  },
  {
    "text": "to slash API slash C surf token and this will use the high answer i anteye for",
    "start": "1768980",
    "end": "1775159"
  },
  {
    "text": "jury service in asp.net core to get and store tokens so there's two operations",
    "start": "1775159",
    "end": "1780860"
  },
  {
    "text": "happening the one is very obvious the one operation that's happening is getting store tokens will return a data",
    "start": "1780860",
    "end": "1786260"
  },
  {
    "text": "structure that we can serialize down to JavaScript to say here's the token that",
    "start": "1786260",
    "end": "1791450"
  },
  {
    "text": "you have to place into every request or at least every post and post and put in",
    "start": "1791450",
    "end": "1798169"
  },
  {
    "text": "delete requests when we need to validate a token that's the token value and this",
    "start": "1798169",
    "end": "1803360"
  },
  {
    "text": "is the name of the header that you should place it into because asp.net cor if you put validate anti for three token",
    "start": "1803360",
    "end": "1808940"
  },
  {
    "text": "and put that attribute on an API controller that receives a request that'll look in the header also as well",
    "start": "1808940",
    "end": "1814730"
  },
  {
    "text": "as for a hidden form input but if you're doing from body it'll look in a header and the other thing it does it's not",
    "start": "1814730",
    "end": "1820940"
  },
  {
    "text": "quite as obvious is the store bit which is if the C serve token cookie hasn't been issued as yet that will that will",
    "start": "1820940",
    "end": "1827649"
  },
  {
    "text": "initiate a set cookie to send the cookie down to the browser that is compare to the token to make sure we don't have",
    "start": "1827649",
    "end": "1834600"
  },
  {
    "text": "a cross-site request forgery so it allows JavaScript to work with that",
    "start": "1834600",
    "end": "1839720"
  },
  {
    "text": "something else in asp.net course to embrace security policies it was really",
    "start": "1839720",
    "end": "1844830"
  },
  {
    "text": "difficult for me to understand what was happening in asp.net core security until",
    "start": "1844830",
    "end": "1849960"
  },
  {
    "text": "I went into that security repo and started working with some of the samples in there we could do a whole session on",
    "start": "1849960",
    "end": "1856320"
  },
  {
    "text": "asp.net core security but it basically revolves around very simple things there's claims a collection of claims",
    "start": "1856320",
    "end": "1862080"
  },
  {
    "text": "represents a user so the claims you probably know like key value pairs it could be first name as Scott is admin",
    "start": "1862080",
    "end": "1868830"
  },
  {
    "text": "equals true last name is Allan that would be the claims that are issued by some identity provider and then when I",
    "start": "1868830",
    "end": "1875730"
  },
  {
    "text": "went to and permissions could be claims too so I could have something like can edit invoice true that could be a claim",
    "start": "1875730",
    "end": "1882559"
  },
  {
    "text": "then I have policies policies one of the things you can do is have requirements",
    "start": "1882559",
    "end": "1887850"
  },
  {
    "text": "that check those claims so what I like to do inside of applications is when you",
    "start": "1887850",
    "end": "1894390"
  },
  {
    "text": "we still use the authorized attribute in asp.net core but when you're trying to work in an application that has",
    "start": "1894390",
    "end": "1900630"
  },
  {
    "text": "fine-grained permissions I like to build policies which are very simple so this",
    "start": "1900630",
    "end": "1905640"
  },
  {
    "text": "is going to create a policy named is admin and the policy will require a",
    "start": "1905640",
    "end": "1911040"
  },
  {
    "text": "claim for a user that is admin equals true so I now have a policy that I could",
    "start": "1911040",
    "end": "1916770"
  },
  {
    "text": "apply using the either using the authorized attribute and specifying policy equals is admin or building my",
    "start": "1916770",
    "end": "1923970"
  },
  {
    "text": "own custom attribute user is admin which derives from authorized and specifies the policy name so now developer just",
    "start": "1923970",
    "end": "1932610"
  },
  {
    "text": "has to swap user is admin on a controller when only administrators are supposed to be able to get into that",
    "start": "1932610",
    "end": "1938220"
  },
  {
    "text": "controller talk about views if you're",
    "start": "1938220",
    "end": "1945300"
  },
  {
    "text": "coming to asp.net corne you're still you to seeing HTML helpers try to wean yourself off of them they're actually",
    "start": "1945300",
    "end": "1950880"
  },
  {
    "text": "the worst feature of asp.net MVC I always thought and there's still some",
    "start": "1950880",
    "end": "1957090"
  },
  {
    "text": "that you have to use but for the most part anyplace where you're using things like HTML DUP again for more HTML text",
    "start": "1957090",
    "end": "1963870"
  },
  {
    "text": "box or HTML that input get rid of that stuff because they're really ugly they don't blend it into the",
    "start": "1963870",
    "end": "1969400"
  },
  {
    "text": "HTML so use tag helpers wherever you can so ASP - 4 that's a tag helper that's",
    "start": "1969400",
    "end": "1976270"
  },
  {
    "text": "useful in a variety of scenarios you can use it for labels so it'll pull out the display name for a particular model",
    "start": "1976270",
    "end": "1983350"
  },
  {
    "text": "property like name you can use it for input so it works the same as an HTML helper it just blends into the HTML",
    "start": "1983350",
    "end": "1989080"
  },
  {
    "text": "better but it uses the metadata provider to go out and find information about this property it knows its type it knows",
    "start": "1989080",
    "end": "1995500"
  },
  {
    "text": "its name can set the type of the input it can add the validation attributes there for client-side validation so HTML",
    "start": "1995500",
    "end": "2002880"
  },
  {
    "text": "helpers are good you can write your own HTML helpers it's not too difficult how",
    "start": "2002880",
    "end": "2008190"
  },
  {
    "text": "difficult could it be you just derive from a base class called tag helper and there's a process method that you",
    "start": "2008190",
    "end": "2014790"
  },
  {
    "text": "override so you can build your own tag helpers that are processed server-side to do interesting things custom things",
    "start": "2014790",
    "end": "2021660"
  },
  {
    "text": "for your application which is also the case for view components I like view components very much particularly in",
    "start": "2021660",
    "end": "2027210"
  },
  {
    "text": "those applications where you might be rendering a server-side HTML and you",
    "start": "2027210",
    "end": "2032309"
  },
  {
    "text": "might be building a page that is composed of pieces from different microservices so you might have one of",
    "start": "2032309",
    "end": "2038010"
  },
  {
    "text": "those pages where there's four things on the screen and they all come from completely different units of the business and inside of your application",
    "start": "2038010",
    "end": "2044309"
  },
  {
    "text": "kind of like the some of the Amazon screens where they're pulling stuff for today's deals and the things that you",
    "start": "2044309",
    "end": "2050610"
  },
  {
    "text": "like and things that are in your shopping cart but if you haven't looked a few components any asp.net core",
    "start": "2050610",
    "end": "2056040"
  },
  {
    "text": "they're very simple they they are very much like controllers in the sense that you have this is called a main menu view",
    "start": "2056040",
    "end": "2063960"
  },
  {
    "text": "component so the name of the component I would think of it as main menu just like a the home controller is the home",
    "start": "2063960",
    "end": "2070230"
  },
  {
    "text": "controller it derives from a base view component the difference between view components and controllers is that",
    "start": "2070230",
    "end": "2076398"
  },
  {
    "text": "controller view components never get invoked via a URL so they are only",
    "start": "2076399",
    "end": "2081929"
  },
  {
    "text": "rendered when someone else tells them to render as part of a view so they have one method invoke and then it can be",
    "start": "2081929",
    "end": "2088710"
  },
  {
    "text": "invoked async also and return a task dependency injection work so there could be a constructor here asking for",
    "start": "2088710",
    "end": "2094740"
  },
  {
    "text": "services data access services other API services building we're turning of you and you can render",
    "start": "2094740",
    "end": "2101770"
  },
  {
    "text": "them not with that syntax that's ugly you can render something like that with this tag helper syntax actually if you",
    "start": "2101770",
    "end": "2108520"
  },
  {
    "text": "component : main - menu so it could it gets kebab cased where capital letters",
    "start": "2108520",
    "end": "2115120"
  },
  {
    "text": "they all become lower case and there's dashes between the capital letters but if you components our nice way to build",
    "start": "2115120",
    "end": "2121030"
  },
  {
    "text": "the compartmentalised UI so you can have for independent of view components on that page that renders four different",
    "start": "2121030",
    "end": "2126820"
  },
  {
    "text": "things and none of them know about each other they all do their own thing and they can't even do their own thing in parallel which is kind of nice",
    "start": "2126820",
    "end": "2133530"
  },
  {
    "text": "let's talk about client code when I say use webpack I think what I'm really saying is if you haven't jumped on to my",
    "start": "2133530",
    "end": "2141910"
  },
  {
    "text": "script 2015 and above or typescript it's really time to do that unless you're not writing on unless you're writing a",
    "start": "2141910",
    "end": "2147940"
  },
  {
    "text": "trivial amount of JavaScript but to me webpack and equi script 2015 features",
    "start": "2147940",
    "end": "2153550"
  },
  {
    "text": "when they came along the ability to write modular JavaScript and be able to say things like import foo from bar was",
    "start": "2153550",
    "end": "2161620"
  },
  {
    "text": "wonderful web pack does have a little bit of a learning curve I think it's gotten better and the documentation certainly",
    "start": "2161620",
    "end": "2167170"
  },
  {
    "text": "has gotten better over the years this is example this is an example of a web pack configuration file or I'm",
    "start": "2167170",
    "end": "2173410"
  },
  {
    "text": "basically saying I went to build an entry so I went to the or I went to build a file called vendor that consists",
    "start": "2173410",
    "end": "2179860"
  },
  {
    "text": "of all the modules for third-party code that I use react and react Dom and react",
    "start": "2179860",
    "end": "2185560"
  },
  {
    "text": "bootstrap and Axios and exs yeah es6 promise and what web pack will do is go",
    "start": "2185560",
    "end": "2192550"
  },
  {
    "text": "into the top level of each of these and study the import statements and keep gobbling up modules and producing a",
    "start": "2192550",
    "end": "2198610"
  },
  {
    "text": "single output j/s file because it's also run all the stuff through our trains power if need be and then there's",
    "start": "2198610",
    "end": "2205660"
  },
  {
    "text": "plugins to do things like minification and these days you can even strip out",
    "start": "2205660",
    "end": "2211930"
  },
  {
    "text": "dead code and so forth one of the other things to keep in mind if you write web pack configuration files is you're not",
    "start": "2211930",
    "end": "2218080"
  },
  {
    "text": "writing a configuration file in the sense that it's just static data it's not a JSON file when you write a web",
    "start": "2218080",
    "end": "2223960"
  },
  {
    "text": "pack configuration file it has a dot JSX tension because it's actually code that's going to execute inside of nodejs",
    "start": "2223960",
    "end": "2229600"
  },
  {
    "text": "so if you have complicated things going on in your build process that webpack needs",
    "start": "2229600",
    "end": "2235430"
  },
  {
    "text": "to handle you can write code to do things like let's go out and blob up all the files that have the extension dot",
    "start": "2235430",
    "end": "2242540"
  },
  {
    "text": "specs TS and put that into a collection and then concatenate all the specs from",
    "start": "2242540",
    "end": "2248930"
  },
  {
    "text": "a different folder and then run some really ugly regular expression which I can't even remember what that does",
    "start": "2248930",
    "end": "2254240"
  },
  {
    "text": "anymore but I'm sure it's significant I'm gonna skip this slide for right now",
    "start": "2254240",
    "end": "2260990"
  },
  {
    "text": "but well now let's talk about it so Steve Sanderson one of the things he did before he started working on blazer was",
    "start": "2260990",
    "end": "2266870"
  },
  {
    "text": "implement this project called JavaScript services one of so if you're using webpack and typescript and you're doing",
    "start": "2266870",
    "end": "2273020"
  },
  {
    "text": "all these things you typically have a lot of command prompts open to do your",
    "start": "2273020",
    "end": "2278090"
  },
  {
    "text": "transpiling and run your unit tests so javascript sanderson's project javascript services if you take a look",
    "start": "2278090",
    "end": "2284420"
  },
  {
    "text": "at that github repo has some interesting little where that you can add into your pipeline when you're inside of",
    "start": "2284420",
    "end": "2290270"
  },
  {
    "text": "development to sort of hide webpack behind the scenes and what this allows you to do is instead of opening up",
    "start": "2290270",
    "end": "2296450"
  },
  {
    "text": "command prompts and telling web pack to run and getting all this stuff set up you just have your configuration files",
    "start": "2296450",
    "end": "2301640"
  },
  {
    "text": "out there you put this middleware in there and one the first request to the website this piece of middleware will",
    "start": "2301640",
    "end": "2307730"
  },
  {
    "text": "communicate with web pack and start web pack up to start watching your files and transpiling your files and when I go",
    "start": "2307730",
    "end": "2314150"
  },
  {
    "text": "into a file and save it web pack will transpile it and load it right into the",
    "start": "2314150",
    "end": "2320270"
  },
  {
    "text": "browser for me so it's just a nice way to work with JavaScript these days when",
    "start": "2320270",
    "end": "2325430"
  },
  {
    "text": "you need module bundling from web pack because it hides a lot of ugliness that goes on behind the scenes requires less",
    "start": "2325430",
    "end": "2332150"
  },
  {
    "text": "setup I'm a big fan of con emu or commander anyone else use those no good",
    "start": "2332150",
    "end": "2338870"
  },
  {
    "text": "a fair number so once you start doing a lot of things from the command line you'll discover that the built-in Windows command line isn't really that",
    "start": "2338870",
    "end": "2345260"
  },
  {
    "text": "great so this is Connie me you can do a Google search for that or sorry this is",
    "start": "2345260",
    "end": "2350750"
  },
  {
    "text": "commander which one do I have installed I always get them confused commander you",
    "start": "2350750",
    "end": "2356180"
  },
  {
    "text": "can do a search for it and find it download one of the things I",
    "start": "2356180",
    "end": "2361570"
  },
  {
    "text": "can do that's quite useful for me is I often have multiple contexts that I'm working in so I kind of open up multiple",
    "start": "2361570",
    "end": "2368650"
  },
  {
    "text": "tabs in this window and do different operations from different areas so",
    "start": "2368650",
    "end": "2374440"
  },
  {
    "text": "that's happening over here and on this tab something else is happening over here so maybe an example would be like",
    "start": "2374440",
    "end": "2380050"
  },
  {
    "text": "this where in one pane I'm running webpack to transpile my files and watch",
    "start": "2380050",
    "end": "2387190"
  },
  {
    "text": "as things change up here I'm running a tool to run JavaScript unit tests and",
    "start": "2387190",
    "end": "2392980"
  },
  {
    "text": "down here or integration tests that are running so they're all on three panes and one screen and I'll just point out",
    "start": "2392980",
    "end": "2399580"
  },
  {
    "text": "that these tools are awesome because watch this you can right-click this you know this is a developer that wrote this",
    "start": "2399580",
    "end": "2404740"
  },
  {
    "text": "for developers right if you go into the settings dialog there's just hundreds and hundreds of settings I only know",
    "start": "2404740",
    "end": "2410500"
  },
  {
    "text": "what about six of them do but there's a lot of power there if you take advantage of that this screen by the way is set up",
    "start": "2410500",
    "end": "2417220"
  },
  {
    "text": "using this command so this is a way of saying yeah Conny news let's start",
    "start": "2417220",
    "end": "2422410"
  },
  {
    "text": "Connie new and do an NPM run run watch in this new instance but then I want to",
    "start": "2422410",
    "end": "2427990"
  },
  {
    "text": "open up something else with NPM run my test watcher but put that in a new console that split horizontally and then",
    "start": "2427990",
    "end": "2434310"
  },
  {
    "text": "run my karma integration test and another console that is split vertically and that's how we end up with those",
    "start": "2434310",
    "end": "2440020"
  },
  {
    "text": "whoops three screens that you saw on the previous slide that way I also like when",
    "start": "2440020",
    "end": "2450849"
  },
  {
    "text": "I when it comes to things like feature folders I also be able I also like if I'm working with something like angular",
    "start": "2450849",
    "end": "2456339"
  },
  {
    "text": "which I haven't actually in a while or react which is what I've been using lately but not much let other people",
    "start": "2456339",
    "end": "2462460"
  },
  {
    "text": "worry about it I like to put components that are associated with a specific feature in the future folder so what we",
    "start": "2462460",
    "end": "2469810"
  },
  {
    "text": "might be looking at here yeah what we're looking at here is a client folder where common stuff goes so common models",
    "start": "2469810",
    "end": "2475570"
  },
  {
    "text": "common services common components that use throughout the application like a toggle button",
    "start": "2475570",
    "end": "2482020"
  },
  {
    "text": "but over here inside of a feature folder there's a controller there's a view that",
    "start": "2482020",
    "end": "2488230"
  },
  {
    "text": "renders some HTML and there's a component that is specific to that particular feature so it's this isn't a",
    "start": "2488230",
    "end": "2494410"
  },
  {
    "text": "spa it's one of those applications where you enhance certain pages by adding",
    "start": "2494410",
    "end": "2499660"
  },
  {
    "text": "react components or what have you and like I say if I could put the unit test in here also I would love to do",
    "start": "2499660",
    "end": "2506500"
  },
  {
    "text": "that my c-sharp unit tests just have everything together if you're still",
    "start": "2506500",
    "end": "2512380"
  },
  {
    "text": "using Bower or some of these other things this slide is really it took me a while to convince people look use just",
    "start": "2512380",
    "end": "2518980"
  },
  {
    "text": "nougat for dotnet code that part was easy but what I mean by that is don't use nougat to install jQuery or things",
    "start": "2518980",
    "end": "2525010"
  },
  {
    "text": "like that anymore and then just use NPM or perhaps yarn because that's that's",
    "start": "2525010",
    "end": "2530140"
  },
  {
    "text": "the newest thing to manage all of your JavaScript and typescript packages so",
    "start": "2530140",
    "end": "2535960"
  },
  {
    "text": "years ago there was NPM for nodejs stuff and then there was other package",
    "start": "2535960",
    "end": "2542320"
  },
  {
    "text": "managers like Bower for the front end stuff these days all the front-end libraries like bootstrap and jQuery and",
    "start": "2542320",
    "end": "2548230"
  },
  {
    "text": "angular and react they have everything inside of NPM so that's the only package",
    "start": "2548230",
    "end": "2553750"
  },
  {
    "text": "manager that I need to install anything that I need javascript DS so I can use that to install the typescript compiler",
    "start": "2553750",
    "end": "2558820"
  },
  {
    "text": "and I can also use it to install bootstrap and jQuery and typescript for",
    "start": "2558820",
    "end": "2564520"
  },
  {
    "text": "years I avoided typescript because it just didn't feel right it felt like the Microsoft way of working with JavaScript",
    "start": "2564520",
    "end": "2570390"
  },
  {
    "text": "but when they started working with the angular team there was a number of wonderful things that came out of that and today I try to encourage people to",
    "start": "2570390",
    "end": "2577840"
  },
  {
    "text": "start using typescript because it actually plays well in the environment a couple examples would be things like this module resolution two years ago",
    "start": "2577840",
    "end": "2585640"
  },
  {
    "text": "with typescript it was very difficult to encourage or convince typescript to work",
    "start": "2585640",
    "end": "2592030"
  },
  {
    "text": "the way you wanted so you could place the files your files where you wanted to place your files you had to have them in",
    "start": "2592030",
    "end": "2598000"
  },
  {
    "text": "a specific locations when they introduced module resolution that you could set it to node all of a sudden",
    "start": "2598000",
    "end": "2603460"
  },
  {
    "text": "that would allow you to do things like NPM install something and then inside of types inside of a type scripts file say",
    "start": "2603460",
    "end": "2609790"
  },
  {
    "text": "import foo from bar and typescript would actually use the node module resolution strategy to",
    "start": "2609790",
    "end": "2614840"
  },
  {
    "text": "look for bar and find that module and it would look inside of new modules which was great so it's all of a sudden",
    "start": "2614840",
    "end": "2620570"
  },
  {
    "text": "typescript became a lot easier to use and then there's this path setting so this is a TS config file in case you",
    "start": "2620570",
    "end": "2627110"
  },
  {
    "text": "didn't know that controls the typescript compiler this is what a place where I",
    "start": "2627110",
    "end": "2632150"
  },
  {
    "text": "can say when someone says import food from bar yeah you can look in node modules but I also want you to look over",
    "start": "2632150",
    "end": "2637970"
  },
  {
    "text": "here client script look for that bar module inside of there too so now I can completely control my environment and I",
    "start": "2637970",
    "end": "2644750"
  },
  {
    "text": "can layout files the way I went to layout files and it's much easier to use",
    "start": "2644750",
    "end": "2650240"
  },
  {
    "text": "now unless you're using Visual Studio so when I work on a project that has a lot",
    "start": "2650240",
    "end": "2656000"
  },
  {
    "text": "of JavaScript I have the project open in two editors Visual Studio code",
    "start": "2656000",
    "end": "2661880"
  },
  {
    "text": "definitely for the JavaScript and then Visual Studio code is also a great editor for c-sharp but if there's things",
    "start": "2661880",
    "end": "2667880"
  },
  {
    "text": "that you like in Visual Studio you can have the project open both editors but I definitely do all my JavaScript inside",
    "start": "2667880",
    "end": "2673430"
  },
  {
    "text": "of Visual Studio code and typescript also there's not as many false positives for one and then I consider www is the",
    "start": "2673430",
    "end": "2680360"
  },
  {
    "text": "bin folder so when web pack does its module bundling and minification and it spits out a build or spits out my JavaScript",
    "start": "2680360",
    "end": "2686720"
  },
  {
    "text": "that's going to go somewhere inside of dub-dub-dub root testing so let me tell",
    "start": "2686720",
    "end": "2694190"
  },
  {
    "text": "you a little story about four years ago I was working on an",
    "start": "2694190",
    "end": "2700400"
  },
  {
    "text": "angularjs project so this is angularjs 1.0 and I had come from a background",
    "start": "2700400",
    "end": "2705890"
  },
  {
    "text": "where I started trying to do test-driven development in 2004 that's when I started and you know from 2004 to 2014 I",
    "start": "2705890",
    "end": "2713390"
  },
  {
    "text": "kept trying to do TDD and unit testing and learning I'm learning things all the time and I have to say I think TDD is a",
    "start": "2713390",
    "end": "2722420"
  },
  {
    "text": "great way to learn unit testing and TDD is a great way it's a great way to",
    "start": "2722420",
    "end": "2727580"
  },
  {
    "text": "design things so if I'm entering into a domain that I don't understand what the solution is going to be I still UI love",
    "start": "2727580",
    "end": "2734750"
  },
  {
    "text": "to using TDD to figure out a solution to a problem and what I mean by that is if I'm writing an asp.net",
    "start": "2734750",
    "end": "2740930"
  },
  {
    "text": "core controller I'm not going to TDD the design of the controller just not much benefit to that but I",
    "start": "2740930",
    "end": "2747779"
  },
  {
    "text": "might unit test the controller so up until to 2014 I would sell a unit test the controller",
    "start": "2747779",
    "end": "2753029"
  },
  {
    "text": "so coming into this angular project I approach it like any large asp.net project I had done this is the largest",
    "start": "2753029",
    "end": "2759809"
  },
  {
    "text": "angular project I'd ever worked on I went it to unit test every controller and when I unit tested an angular",
    "start": "2759809",
    "end": "2765750"
  },
  {
    "text": "controller I wanted to isolate it because that was one of the principles that I always followed we isolate things that way you",
    "start": "2765750",
    "end": "2772529"
  },
  {
    "text": "know someone checks in some bad code to a little oval component it doesn't break all the tests it should only break the",
    "start": "2772529",
    "end": "2778589"
  },
  {
    "text": "tests related to that component everything is kind of isolated so unit",
    "start": "2778589",
    "end": "2785220"
  },
  {
    "text": "testing these angular controllers involved let's skip that writing a lot",
    "start": "2785220",
    "end": "2790349"
  },
  {
    "text": "of let me skip that mocks and fakes and",
    "start": "2790349",
    "end": "2797190"
  },
  {
    "text": "stalls so every service that is passed into that angular controller I would fake something up in a unit test and I",
    "start": "2797190",
    "end": "2804029"
  },
  {
    "text": "would test just just trying to isolate the controller me and three other people and what we discovered after a few",
    "start": "2804029",
    "end": "2809789"
  },
  {
    "text": "months of this is that we were still getting a lot of bugs in production because things were breaking these unit tests we were writing piles of code and",
    "start": "2809789",
    "end": "2817470"
  },
  {
    "text": "they were just not being as effective as we wanted them to be so I decided to try",
    "start": "2817470",
    "end": "2823109"
  },
  {
    "text": "something different I said let's not fake or stub anything let's write test",
    "start": "2823109",
    "end": "2828869"
  },
  {
    "text": "code and there was a big debate about this is a unit test or an integration test I don't care it's just test code",
    "start": "2828869",
    "end": "2834119"
  },
  {
    "text": "and not fake anything in angularjs there was this interesting ability to cut",
    "start": "2834119",
    "end": "2840480"
  },
  {
    "text": "things off at the HTTP layer so you could you could write a unit you could write a test that an instantiated a",
    "start": "2840480",
    "end": "2847799"
  },
  {
    "text": "controller invoked a method it would use all the little services so the controller would call service a service",
    "start": "2847799",
    "end": "2853470"
  },
  {
    "text": "a would call service B service B would call service C and then service C uses",
    "start": "2853470",
    "end": "2858480"
  },
  {
    "text": "the HTTP service to try to call an API well there was a fake HTTP back-end that",
    "start": "2858480",
    "end": "2865019"
  },
  {
    "text": "you could use an angular to say okay if someone makes a request to slash API slash invoices or turn this Jason so we",
    "start": "2865019",
    "end": "2874230"
  },
  {
    "text": "started testing all the controllers that way and what I discovered we were writing probably 10% of the test",
    "start": "2874230",
    "end": "2882540"
  },
  {
    "text": "code that we were writing before and all of a sudden the test code became very effective like we were actually finding",
    "start": "2882540",
    "end": "2887940"
  },
  {
    "text": "problems when someone changed the behavior of a service and there was a complete revelation to me it's like oh",
    "start": "2887940",
    "end": "2894600"
  },
  {
    "text": "all of a sudden I'm writing a lot less test code and I feel like I'm getting a more bang for the buck and yes there's the situations where someone checks",
    "start": "2894600",
    "end": "2900630"
  },
  {
    "text": "something in that is just so wrong or you know I do something when I'm developing that it's just so wrong and",
    "start": "2900630",
    "end": "2906300"
  },
  {
    "text": "breaks every test but that's okay I'll figure out what the problem is I don't need tests to tell me how to debug",
    "start": "2906300",
    "end": "2913080"
  },
  {
    "text": "something so fast forward you know I come off that project and I'm starting",
    "start": "2913080",
    "end": "2918360"
  },
  {
    "text": "to look at asp.net core and work with asp.net core and I'm starting to think about hmm these controllers do I really",
    "start": "2918360",
    "end": "2924720"
  },
  {
    "text": "want to isolate them when I test them it's always such a pain well there's two",
    "start": "2924720",
    "end": "2930420"
  },
  {
    "text": "things in asp.net core that I found interesting one is the asp.net core test host so if you go into the Microsoft",
    "start": "2930420",
    "end": "2936690"
  },
  {
    "text": "github repositories when Microsoft wants to test their middleware or juice on",
    "start": "2936690",
    "end": "2941700"
  },
  {
    "text": "what's called an integration level type testing they have a new get package that they install into the unit testing",
    "start": "2941700",
    "end": "2947250"
  },
  {
    "text": "project called Microsoft by asp net court éstos and it basically allows you to spin up your application and run it",
    "start": "2947250",
    "end": "2953370"
  },
  {
    "text": "in memory and fire off requests at your application without anything ever actually going over a network socket so",
    "start": "2953370",
    "end": "2959190"
  },
  {
    "text": "this little bit of code is just a way well there's some encapsulation here like it's not just as easy as saying",
    "start": "2959190",
    "end": "2965280"
  },
  {
    "text": "create server but create server behind-the-scenes uses some abstractions from test toast just a few lines of code",
    "start": "2965280",
    "end": "2970740"
  },
  {
    "text": "to create a server that will have an application inside of it and now I can start sending off requests and I can",
    "start": "2970740",
    "end": "2976640"
  },
  {
    "text": "write a search based on the HTTP message that comes back from that request here's",
    "start": "2976640",
    "end": "2983130"
  },
  {
    "text": "another example create a server send off a request to slash normal I want to get",
    "start": "2983130",
    "end": "2988410"
  },
  {
    "text": "a 200 status code back to me that was very interesting particularly combined",
    "start": "2988410",
    "end": "2995820"
  },
  {
    "text": "with the fact that in with HTTP clients it's relatively easy to use delegating",
    "start": "2995820",
    "end": "3001250"
  },
  {
    "text": "handlers or message handlers or basically to have an in-memory HTTP client and if you're using entity",
    "start": "3001250",
    "end": "3007610"
  },
  {
    "text": "framework entity framework core has an in-memory in other words just like I did with angular there's ways an asp.net core to",
    "start": "3007610",
    "end": "3014519"
  },
  {
    "text": "sort of cut things off right at the data layer and really focus on state based testing writing unit tests that are more",
    "start": "3014519",
    "end": "3021690"
  },
  {
    "text": "of integration tests that sort of flow through the whole application and just reach in this case perhaps a fake",
    "start": "3021690",
    "end": "3027809"
  },
  {
    "text": "database that's in memory so the test executes really fast so the EF core we",
    "start": "3027809",
    "end": "3032940"
  },
  {
    "text": "could debate whether it's still a great technology or not but the in memory of a provider for the applications that I've",
    "start": "3032940",
    "end": "3039420"
  },
  {
    "text": "worked on they use it that UCF core has been very beneficial it's very easy to set up the entity framework and",
    "start": "3039420",
    "end": "3045720"
  },
  {
    "text": "basically tell it using a memory database so is it like sequel server no because I can't remember specifically if",
    "start": "3045720",
    "end": "3053220"
  },
  {
    "text": "it if for enforces things like non null primary Keys I mean you can do things",
    "start": "3053220",
    "end": "3059670"
  },
  {
    "text": "with the in-memory provider that you cannot do with a real sequel server so it doesn't catch everything like foreign key violations but it's close enough and",
    "start": "3059670",
    "end": "3066809"
  },
  {
    "text": "allows me to do state-based testing and I can write tests like this so this is a",
    "start": "3066809",
    "end": "3072599"
  },
  {
    "text": "test it's just going to instantiate a controller pass in some input that the user probably filled out in a form and",
    "start": "3072599",
    "end": "3079200"
  },
  {
    "text": "we're just going to run through the whole thing all the regular services it uses and just make sure it produces the right",
    "start": "3079200",
    "end": "3085140"
  },
  {
    "text": "result and to me that's a beautiful test because there's not a lot of code there it's easy to read and even better I can",
    "start": "3085140",
    "end": "3092099"
  },
  {
    "text": "go into the system and refactor things all I want change services around and move things all over the place and the",
    "start": "3092099",
    "end": "3098039"
  },
  {
    "text": "chances are I won't break that test and I won't have to change or I won't have",
    "start": "3098039",
    "end": "3103289"
  },
  {
    "text": "to change this code right I won't have to go in and change a bunch of mocks and fakes and subs that I've implemented so",
    "start": "3103289",
    "end": "3110160"
  },
  {
    "text": "for me these days I'm more big on integration tasks not at the UI layer but things that test multiple components",
    "start": "3110160",
    "end": "3115950"
  },
  {
    "text": "at once and get the most bang for my buck for the for my testing code let's",
    "start": "3115950",
    "end": "3121259"
  },
  {
    "text": "talk about c-sharp code a lot of people are getting into dotnet core because they want to be able to write web applications in their favorite editor",
    "start": "3121259",
    "end": "3128489"
  },
  {
    "text": "and favorite operating system but then host it in the cheapest possible operating system so quite often those",
    "start": "3128489",
    "end": "3134099"
  },
  {
    "text": "two things are different as you're writing on Windows and pulling into Linux so these are just a couple things",
    "start": "3134099",
    "end": "3139170"
  },
  {
    "text": "that we ran into so I do want to also say that if you're in that scenario you should strongly consider docker",
    "start": "3139170",
    "end": "3144510"
  },
  {
    "text": "because then you can be working in your Windows environment but actually working",
    "start": "3144510",
    "end": "3150630"
  },
  {
    "text": "in an application that's running on a Linux docker container on your machine you can catch code you can catch",
    "start": "3150630",
    "end": "3155670"
  },
  {
    "text": "problems early in but you want to make sure when you're writing c-sharp code that you're not making assumptions about",
    "start": "3155670",
    "end": "3161340"
  },
  {
    "text": "the operating system so we had people getting caught with some hard coding slash R's and slash are slash ends",
    "start": "3161340",
    "end": "3168000"
  },
  {
    "text": "inside of source code you want to use environment new line because that will return the properly line character for",
    "start": "3168000",
    "end": "3173610"
  },
  {
    "text": "the operating system that you're on another big one was developers doing some directory plus slash tech file dot",
    "start": "3173610",
    "end": "3181830"
  },
  {
    "text": "txt and combining strings together themselves to build a path where there's instead you should use path combine to",
    "start": "3181830",
    "end": "3188820"
  },
  {
    "text": "make sure you get the the correct folder separator directory character in fact",
    "start": "3188820",
    "end": "3194070"
  },
  {
    "text": "the directory class and dotnet has a separator char property that you can use that will return the proper separator",
    "start": "3194070",
    "end": "3201120"
  },
  {
    "text": "for the operating system that you're on and just also if you're using environment variables to discover things",
    "start": "3201120",
    "end": "3206580"
  },
  {
    "text": "about the operating system like the the home home folder for the profile or the",
    "start": "3206580",
    "end": "3212520"
  },
  {
    "text": "service identity that you're running under those can be different too so sometimes you have to use expressions like this to make sure you get both",
    "start": "3212520",
    "end": "3218430"
  },
  {
    "text": "Windows and Linux and then something else I've been railing against that against another opinion about writing",
    "start": "3218430",
    "end": "3226560"
  },
  {
    "text": "c-sharp I don't like the async suffix anymore so when I write code that is",
    "start": "3226560",
    "end": "3231660"
  },
  {
    "text": "going when I write an async method I will call it sign out tenant user and of",
    "start": "3231660",
    "end": "3237600"
  },
  {
    "text": "course when I invoke the api's that Microsoft provides I still have to have that async keyword there but to me it's",
    "start": "3237600",
    "end": "3243390"
  },
  {
    "text": "enough to have the async keyword here there's already a sink and a weight and there's a sink and when you have async code bases as you probably know just",
    "start": "3243390",
    "end": "3249870"
  },
  {
    "text": "there's a sink just ripples up and down the place it's all over the place and I felt bad about this for a while",
    "start": "3249870",
    "end": "3255270"
  },
  {
    "text": "because it made people irritable that I was going against the coding conventions",
    "start": "3255270",
    "end": "3260280"
  },
  {
    "text": "that everyone else is using but then I read this interesting interview or with the orange juice trope who said",
    "start": "3260280",
    "end": "3265830"
  },
  {
    "text": "basically whenever there's a new feature added to a language programming language people want loud explicit syntax and I",
    "start": "3265830",
    "end": "3272550"
  },
  {
    "text": "think that's what happened with async when Microsoft introduced a single weight it's it's dangerous is that",
    "start": "3272550",
    "end": "3278070"
  },
  {
    "text": "creating a thread I don't know but it could cause problem so let's make it loud and make it put it in people's",
    "start": "3278070",
    "end": "3283080"
  },
  {
    "text": "faces that this is a sink but now we're kind of used to it and we want to turn or at least I want a terse notation so",
    "start": "3283080",
    "end": "3289290"
  },
  {
    "text": "you know if C sharp version nine just assume if there was some flag on the compiler where you could say look just",
    "start": "3289290",
    "end": "3295530"
  },
  {
    "text": "assume everything is async and they can get rid of all these keywords and that would be great for me anyways that's my",
    "start": "3295530",
    "end": "3303300"
  },
  {
    "text": "email address if you have questions or you want access to the slides or things like that and have a good evening",
    "start": "3303300",
    "end": "3310880"
  },
  {
    "text": "[Applause]",
    "start": "3310880",
    "end": "3316738"
  }
]