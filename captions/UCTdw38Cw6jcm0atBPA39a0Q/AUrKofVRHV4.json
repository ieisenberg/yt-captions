[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "hello everyone good afternoon yes afternoon my name is Jimmy Bogart you",
    "start": "3470",
    "end": "11400"
  },
  {
    "text": "can find me on Twitter at add J Bogart everything you see today code and slides all that stuff will be on my github",
    "start": "11400",
    "end": "16500"
  },
  {
    "text": "github.com /j Bogart you'll see a bunch of repositories there and I'll give you the link to these at the end I blog",
    "start": "16500",
    "end": "23130"
  },
  {
    "text": "about this topic and quite a few other things on my blog at Jimmy Bogart calm there's a bunch of other junk about me",
    "start": "23130",
    "end": "30060"
  },
  {
    "text": "at the bottom but today I want to talk about the exciting topic of distributed transactions everyone's favorite",
    "start": "30060",
    "end": "37050"
  },
  {
    "text": "afternoon talk right this is a very long title I could have just summarized it as cloud is hard because that's really what",
    "start": "37050",
    "end": "44789"
  },
  {
    "text": "I'm talking about here's some of the things that we ran into moving from very simple systems where everything is like",
    "start": "44789",
    "end": "50730"
  },
  {
    "text": "nice and easy to reason about to go into the cloud we're like everything is everywhere and I can't really reason",
    "start": "50730",
    "end": "56520"
  },
  {
    "text": "about anything so most of my career I was in a much simpler time in space",
    "start": "56520",
    "end": "62460"
  },
  {
    "text": "where I had this like very simple system where I had the app and the database and",
    "start": "62460",
    "end": "68430"
  },
  {
    "text": "one or two when I wanted to interact with the database which by the way I've actually had clients who just have the",
    "start": "68430",
    "end": "74010"
  },
  {
    "text": "database that's still a thing out there when I wanted to interact with the database I just like through some secret",
    "start": "74010",
    "end": "79439"
  },
  {
    "text": "it and everything worked fine I want to have some ecommerce system where I want to update the status of an order so I'm",
    "start": "79439",
    "end": "85560"
  },
  {
    "text": "like update the orders were status is three where I equals one two three and everything would work just fine when I",
    "start": "85560",
    "end": "91950"
  },
  {
    "text": "wanted to get the information back out I would say get that status back out of the orders where that order is that and",
    "start": "91950",
    "end": "98030"
  },
  {
    "text": "everything was good dodged it actually as I supposed to put a picture there but I couldn't find an appropriate so just",
    "start": "98030",
    "end": "103649"
  },
  {
    "text": "everything was good I write some information to the database it comes back out and everything is as I expect",
    "start": "103649",
    "end": "109829"
  },
  {
    "text": "now sometimes things will get a little bit more complicated and have to do multiple things with the database so in",
    "start": "109829",
    "end": "116759"
  },
  {
    "text": "this case I'm not only updating the order status but I'm also updating some inventory information inside of the",
    "start": "116759",
    "end": "122939"
  },
  {
    "text": "database so I'm updating the status of an order but also decrementing some of the quantity of the stock because well",
    "start": "122939",
    "end": "129539"
  },
  {
    "text": "we don't want to sell something we don't actually have an inventory so of course we want to do those two things together someone to buy something I'm reserving",
    "start": "129539",
    "end": "135310"
  },
  {
    "text": "that stock from someone else so I want to do these two things together now when I read that information back out ideally",
    "start": "135310",
    "end": "142360"
  },
  {
    "text": "the information that I just wrote is exactly what I expected and again normally this is all okay but you still",
    "start": "142360",
    "end": "148569"
  },
  {
    "text": "to do something special to make sure that those two things both happen together and what I want to have these two things happen together if something",
    "start": "148569",
    "end": "155379"
  },
  {
    "text": "fails with Kalinda's operations then I need to wrap it in something to make sure that either all succeeds or all",
    "start": "155379",
    "end": "162040"
  },
  {
    "text": "fails and that thing I wrap everything around in is really the fundamental building block of the database which is",
    "start": "162040",
    "end": "168970"
  },
  {
    "text": "a transaction it either all succeeds or all fails in fact there's an acronym",
    "start": "168970",
    "end": "174340"
  },
  {
    "text": "around this acid right atomic cute no interesting dynamic",
    "start": "174340",
    "end": "181299"
  },
  {
    "text": "something like that I know it just means like if I do this kind of thing where I write multiple things to the database and I wrap it either at all succeeds or",
    "start": "181299",
    "end": "189010"
  },
  {
    "text": "it all fails and if something goes wrong with one of these operations then everything gets rolled back to the",
    "start": "189010",
    "end": "194349"
  },
  {
    "text": "original state so for most of my career I lived in this kind of easy world where the most I'd have to do with any kind of",
    "start": "194349",
    "end": "201370"
  },
  {
    "text": "system I was dealing with it's just like just make sure you wrap everything in a transaction and everything was okay when",
    "start": "201370",
    "end": "207430"
  },
  {
    "text": "I would review my co-workers code it's like oh you forgot to wrap that in transaction you're doing multiple writes",
    "start": "207430",
    "end": "212889"
  },
  {
    "text": "make sure you do this otherwise it'll partially succeed or partially fail now early on my career like this all",
    "start": "212889",
    "end": "219609"
  },
  {
    "text": "works really well but sometimes I'd run into these slight wrinkles when it wasn't so simple that it had just a",
    "start": "219609",
    "end": "225970"
  },
  {
    "text": "single application in a single database sometimes it wasn't just the database sometimes there were two databases and",
    "start": "225970",
    "end": "233440"
  },
  {
    "text": "so in this case they'd have something like a sales database in a shipping database because maybe sales got too big",
    "start": "233440",
    "end": "239769"
  },
  {
    "text": "for the one single database way to split it out into its own thing and so what I'm trying to do now is split an",
    "start": "239769",
    "end": "245290"
  },
  {
    "text": "operation into these two different databases I'd say first update the first database with the order status and the",
    "start": "245290",
    "end": "251829"
  },
  {
    "text": "next update the inventory on the shipping database with a second quantity",
    "start": "251829",
    "end": "256989"
  },
  {
    "text": "piece and then I'd wrap that whole thing in a transaction and everything works right well no it doesn't work because if",
    "start": "256989",
    "end": "264909"
  },
  {
    "text": "you try to do this without configuring anything you this like really horrible error message that has like some horrible sequel error",
    "start": "264909",
    "end": "272040"
  },
  {
    "text": "code that's like zero three eight nine seven two you know like that's super helpful let me go look it up and then",
    "start": "272040",
    "end": "277410"
  },
  {
    "text": "you go look it up on Stack Overflow and you get a bunch of answers that are really disconcerting like okay something",
    "start": "277410",
    "end": "283530"
  },
  {
    "text": "about a distributed transaction unable to begin okay that looks like a good one but the next one is what is the distributed transaction like oh oh when",
    "start": "283530",
    "end": "290940"
  },
  {
    "text": "the second answer is what is this thing that's not a good that's not a good that's not a good sign here then we have",
    "start": "290940",
    "end": "297030"
  },
  {
    "text": "okay now we need to detect whether in a distributed transaction and the final one at the end that's when you know it",
    "start": "297030",
    "end": "302160"
  },
  {
    "text": "really picked a bad thing to search on Stack Overflow if the fourth answer talks about soap you're in a really",
    "start": "302160",
    "end": "308430"
  },
  {
    "text": "really bad place so look at this this is again very early mid-career are just trying to open a transaction between two",
    "start": "308430",
    "end": "314880"
  },
  {
    "text": "sequel databases seem like so it seems like a very reasonable thing to do they're both sequel the both databases can't you just like figure out how to",
    "start": "314880",
    "end": "320760"
  },
  {
    "text": "make this all work but no it's not that simple because the transactions are just around each individual database and so I",
    "start": "320760",
    "end": "326910"
  },
  {
    "start": "326000",
    "end": "354000"
  },
  {
    "text": "have to do this thing of a distributed transaction so what is this distributed",
    "start": "326910",
    "end": "332100"
  },
  {
    "text": "transaction this is the this is the general term for a more specific protocol we'll talk about in a second",
    "start": "332100",
    "end": "337650"
  },
  {
    "text": "but it's distributed transaction is a is a transaction in which two or more network hosts are involved so basically",
    "start": "337650",
    "end": "345120"
  },
  {
    "text": "I'm trying to create a transaction about and within one not just one thing but more than one thing that doesn't fit",
    "start": "345120",
    "end": "350820"
  },
  {
    "text": "into the one transaction of that one thing the most common way that people try to do this is with the two-phase",
    "start": "350820",
    "end": "357240"
  },
  {
    "start": "354000",
    "end": "706000"
  },
  {
    "text": "commit protocol the general idea is that the transaction boundary around one single database has a very well-defined",
    "start": "357240",
    "end": "363660"
  },
  {
    "text": "way of working but as soon as I try to go to more than one resource or one server or one service whatever it might",
    "start": "363660",
    "end": "369540"
  },
  {
    "text": "be then I have to have something to try to coordinate these two pieces now the",
    "start": "369540",
    "end": "374610"
  },
  {
    "text": "way the two-phase commit protocol works is with well two phases the first is to do your basic normal database",
    "start": "374610",
    "end": "381060"
  },
  {
    "text": "transaction II stuff which is to say first I'm going to ask each of the resources or databases can you do this",
    "start": "381060",
    "end": "388620"
  },
  {
    "text": "thing and go ahead and reserve it to say I'm going to try to do this thing so that'd be the first step to say go ahead",
    "start": "388620",
    "end": "395190"
  },
  {
    "text": "and prepare the transaction for this commit step then each resource will tell me can I",
    "start": "395190",
    "end": "400790"
  },
  {
    "text": "do this or not yes or no yes I can do this thing or no I cannot and the final",
    "start": "400790",
    "end": "406400"
  },
  {
    "text": "piece is then to then say okay now go ahead and commit each of those pieces for each of the resources you notice I",
    "start": "406400",
    "end": "413210"
  },
  {
    "text": "have to have this third piece in the middle here this this coordinator that is coordinating these activities between",
    "start": "413210",
    "end": "418400"
  },
  {
    "text": "these two different resources something has to be the arbiter of these two different resources to coordinate the",
    "start": "418400",
    "end": "424580"
  },
  {
    "text": "activity to say it either all happens or it doesn't happen all together but in",
    "start": "424580",
    "end": "430340"
  },
  {
    "text": "production we notice there is actually a problem because there are cases in which this protocol can fail in that second",
    "start": "430340",
    "end": "436970"
  },
  {
    "text": "part of the phase the second the to phase the second phase of the two-phase commit if something happens to interrupt",
    "start": "436970",
    "end": "443510"
  },
  {
    "text": "the communication with the second part or how many parts there are if something interrupts that piece right there at the",
    "start": "443510",
    "end": "449300"
  },
  {
    "text": "bottom then it's in this unknown middle state because the first part is actually finished committing and the second part",
    "start": "449300",
    "end": "455510"
  },
  {
    "text": "has not finished committing so if you're going to do this you have to make sure that these lines never have any",
    "start": "455510",
    "end": "461270"
  },
  {
    "text": "explosions in them basically so how do you make sure that there are no explosions in my lines you make sure",
    "start": "461270",
    "end": "467870"
  },
  {
    "text": "that those lines are really robust and you make sure that they're really close to each other so I don't have to go very",
    "start": "467870",
    "end": "473210"
  },
  {
    "text": "far away in order to do these things so this kind of thing works if for example",
    "start": "473210",
    "end": "478280"
  },
  {
    "text": "both databases exist on the same server if they exist on the same server there's no network to hop and potentially",
    "start": "478280",
    "end": "485540"
  },
  {
    "text": "something go down there or it gets low and everything's like right next to each other then everything should work okay",
    "start": "485540",
    "end": "490550"
  },
  {
    "text": "but as if anyone here is dealt with a juror you know that things go down like",
    "start": "490550",
    "end": "495590"
  },
  {
    "text": "all the time and so these blinds aren't solid they're more like a dotted line",
    "start": "495590",
    "end": "500810"
  },
  {
    "text": "between these different things and so you can't assume that these lines will be very close to each other nor can you",
    "start": "500810",
    "end": "506300"
  },
  {
    "text": "assume that they'll be solid all the time we have to assume that there are going to be up or down at any given point time so that means that this kind",
    "start": "506300",
    "end": "513440"
  },
  {
    "text": "of picture just just plain doesn't work in the cloud but it does work in a lot of scenarios so it can work if i have",
    "start": "513440",
    "end": "520700"
  },
  {
    "text": "two different sequel server databases that works okay and we'll introduce this thing in the middle that actually does a",
    "start": "520700",
    "end": "526640"
  },
  {
    "text": "coordination this is the Microsoft distributed transaction coordinator by the way if you mention that to your operations person or network person they",
    "start": "526640",
    "end": "533690"
  },
  {
    "text": "will punch you in the face because they do not like to have to deal with that thing by the way that only works if you have",
    "start": "533690",
    "end": "540260"
  },
  {
    "text": "all the different correct ports open the security rules like Italy they like takes a week to get those two arrows to",
    "start": "540260",
    "end": "547040"
  },
  {
    "text": "actually work for two different databases assuming they're in the same machine if you actually physically separate it then it's just almost",
    "start": "547040",
    "end": "552260"
  },
  {
    "text": "impossible you just you just give up um it also doesn't work if you happen to flip the most expensive checkbox and",
    "start": "552260",
    "end": "558830"
  },
  {
    "text": "sequel server the always on checkbox which like increases the that the spin",
    "start": "558830",
    "end": "564740"
  },
  {
    "text": "on sequels are from like reasonable to like bugatti level like it's just absolutely insane so once you turn on",
    "start": "564740",
    "end": "570500"
  },
  {
    "text": "always-on it doesn't support distributed transactions and now you can't coordinate between these two different",
    "start": "570500",
    "end": "575600"
  },
  {
    "text": "databases or of course if you're in azor azor explicitly says we will never ever",
    "start": "575600",
    "end": "582050"
  },
  {
    "text": "ever do any kind of distributed transaction protocol so just figure it",
    "start": "582050",
    "end": "587089"
  },
  {
    "text": "out for yourself we're not gonna do it for you now there are some legacy",
    "start": "587089",
    "end": "592190"
  },
  {
    "text": "technologies inside of Microsoft that can coordinate with each other so for a good deal of my career I was using a",
    "start": "592190",
    "end": "598250"
  },
  {
    "text": "messaging technology that was built into every single operating system since I think in t4 which was MSM Q Microsoft",
    "start": "598250",
    "end": "605360"
  },
  {
    "text": "messaging queuing actually does support distributed transactions so it could have a single transaction that both",
    "start": "605360",
    "end": "611990"
  },
  {
    "text": "wrote a message to a queue and wrote to the database and have those two things either succeed or fail at the same time",
    "start": "611990",
    "end": "619690"
  },
  {
    "text": "however like nobody uses omit some queue these days and probably shouldn't either because that's state that's a queue that",
    "start": "619690",
    "end": "626630"
  },
  {
    "text": "actually lives on an individual machine and we don't want that typically people go towards more of a broker style model",
    "start": "626630",
    "end": "632690"
  },
  {
    "text": "where I have a central place where all my messages are stored and have one single place that I have to worry about backups for stores availability things",
    "start": "632690",
    "end": "639800"
  },
  {
    "text": "like that and so a really popular one is rabbitmq which does not support any kind",
    "start": "639800",
    "end": "645020"
  },
  {
    "text": "of distributed transactions so if I want to have some kind of operation that",
    "start": "645020",
    "end": "650420"
  },
  {
    "text": "writes to a database and produces a message I cannot coordinate those activities with any kind of",
    "start": "650420",
    "end": "656420"
  },
  {
    "text": "transactional support and one of my clients they found out the hard way that some of the more fun databases the no",
    "start": "656420",
    "end": "663800"
  },
  {
    "text": "sequel databases of the world they don't even support transactions within their own single database the only sports are Tran",
    "start": "663800",
    "end": "670190"
  },
  {
    "text": "track transactions for one single record or entity or item at a time so it's kind",
    "start": "670190",
    "end": "675950"
  },
  {
    "text": "of a rude awakening we're like okay I'll just write to this record write to that record and assume they both happen or don't happen but with something like",
    "start": "675950",
    "end": "682310"
  },
  {
    "text": "MongoDB it doesn't work that way you either write to one record at a time or",
    "start": "682310",
    "end": "687380"
  },
  {
    "text": "you have to worry about what happens when things fail so for most of the",
    "start": "687380",
    "end": "692899"
  },
  {
    "text": "systems that I'd worked with until things got interesting I only had like one app one database and everything",
    "start": "692899",
    "end": "699440"
  },
  {
    "text": "worked great as soon as I started to make the jump into this distributed transaction world I found out things",
    "start": "699440",
    "end": "704690"
  },
  {
    "text": "were a lot harder so with this two-phase came in just to summarize transactions within a single",
    "start": "704690",
    "end": "710810"
  },
  {
    "start": "706000",
    "end": "831000"
  },
  {
    "text": "resource yes that can work so if I have transactions inside a database inside a record that should work great if I have",
    "start": "710810",
    "end": "717440"
  },
  {
    "text": "transactions across identical resources like if I if I bribe the operations and",
    "start": "717440",
    "end": "722660"
  },
  {
    "text": "network people enough maybe it could work they open the ports for me but generally it won't work if I try to",
    "start": "722660",
    "end": "728120"
  },
  {
    "text": "transact across disparate resources like message brokers message queues logs",
    "start": "728120",
    "end": "733510"
  },
  {
    "text": "streams and a database that will not work and then friendly transactions",
    "start": "733510",
    "end": "738800"
  },
  {
    "text": "across multiple items that's either a yes or no yes if I'm using sequel or know if I'm doing no sequel so with this",
    "start": "738800",
    "end": "747290"
  },
  {
    "text": "picture most of the time when I'm seeing people build systems they're assuming that the answer is always yes",
    "start": "747290",
    "end": "753230"
  },
  {
    "text": "like transactions will always work I don't don't worry about things going down but in reality things do go down",
    "start": "753230",
    "end": "758810"
  },
  {
    "text": "all the time especially if we're working on Kyle providers that just like things just go down as they do so when I first",
    "start": "758810",
    "end": "767959"
  },
  {
    "text": "ran into this not just in a way that I could just kind of spackle over it with opening ports was a project that was on",
    "start": "767959",
    "end": "775150"
  },
  {
    "text": "MongoDB and RabbitMQ now the reason why they chose MongoDB is because they were",
    "start": "775150",
    "end": "780200"
  },
  {
    "text": "going microservices and the DBAs didn't like micro services so they said we'll",
    "start": "780200",
    "end": "785660"
  },
  {
    "text": "go MongoDB because then we don't the talk to the DBA s anymore but then they had this problem that okay now we don't",
    "start": "785660",
    "end": "790970"
  },
  {
    "text": "have this ability to support transactions between multiple documents multiple resources so for them they were",
    "start": "790970",
    "end": "797120"
  },
  {
    "text": "trying to have a single operation a single request that would write to multiple documents and be able to produce",
    "start": "797120",
    "end": "804410"
  },
  {
    "text": "messages on RabbitMQ and all their code just assumed that this would all succeed for them though they were a global",
    "start": "804410",
    "end": "811160"
  },
  {
    "text": "manufacturing company I mean you imagine like the people that build iPhones like that sort of level of scale and they",
    "start": "811160",
    "end": "817010"
  },
  {
    "text": "just like oh do all the stuff that just assume yes I can just write all this stuff to Mungo write all the stuff to rabbitmq but",
    "start": "817010",
    "end": "823160"
  },
  {
    "text": "there's nothing that is that really took an account that those lines are not solid lines that are actually dyed and",
    "start": "823160",
    "end": "828290"
  },
  {
    "text": "lines things can actually fail so this dealt with order fulfillment it was",
    "start": "828290",
    "end": "833570"
  },
  {
    "text": "consuming messages via RabbitMQ so it was actually reading from a queue during",
    "start": "833570",
    "end": "838880"
  },
  {
    "text": "that operation it would write out to  data my Adibi doing multiple writes it was also producing messages via",
    "start": "838880",
    "end": "845690"
  },
  {
    "text": "RabbitMQ all within all within a single assumed transactional activity that is",
    "start": "845690",
    "end": "851180"
  },
  {
    "text": "they would have a single block of code that did all these sort of things and they just assumed like it either all succeeded it all failed but as we've",
    "start": "851180",
    "end": "857839"
  },
  {
    "text": "seen like we can't make that assumption there's nothing inside the different resources or like anything that we could",
    "start": "857839",
    "end": "864410"
  },
  {
    "text": "we could just pull off the shelf that you could make all these things succeed or all fail so we'll dig into the code a",
    "start": "864410",
    "end": "871700"
  },
  {
    "text": "little bit more but it looks something like this in which they had that in this case that we're dealing with MongoDB but",
    "start": "871700",
    "end": "878029"
  },
  {
    "text": "they had some wrappers and they do things where they would first update a single item inside of MongoDB they would",
    "start": "878029",
    "end": "884720"
  },
  {
    "text": "loop through all the items and the order request and go ahead and update the quantity for each individual stock item",
    "start": "884720",
    "end": "891230"
  },
  {
    "text": "and then finally they would notify downstream systems by publishing at an event saying yes this orders have been",
    "start": "891230",
    "end": "897200"
  },
  {
    "text": "approved because all the stock looks good so go ahead and notify downstream systems we can actually ship this order",
    "start": "897200",
    "end": "902480"
  },
  {
    "text": "but there was no like transactional block around any of this and so when I",
    "start": "902480",
    "end": "907700"
  },
  {
    "text": "pointed out to them like by the way something can fail right here and now I",
    "start": "907700",
    "end": "912920"
  },
  {
    "text": "have decremented stock but I have not notified any downstream customers like your customers are gonna be pretty upset",
    "start": "912920",
    "end": "917959"
  },
  {
    "text": "that this has happened okay that's great well let's fix it okay well how do we",
    "start": "917959",
    "end": "923180"
  },
  {
    "text": "fix it how do we get around that there is no transaction around each of these things and that was the first thing at",
    "start": "923180",
    "end": "928610"
  },
  {
    "text": "Google by those like MongoDB distributed transaction and basically the stack overflow answers or just laughs like",
    "start": "928610",
    "end": "935030"
  },
  {
    "text": "haha no you can't do that or even ma even rabbitmq it does have a concept of",
    "start": "935030",
    "end": "941360"
  },
  {
    "text": "transactional reads and transactional writes but I can't I can't tie that into whether or not MongoDB passed or failed",
    "start": "941360",
    "end": "947870"
  },
  {
    "text": "there's no unifying protocol or anything that tries to tie all these things together and there really shouldn't",
    "start": "947870",
    "end": "953540"
  },
  {
    "text": "because it's it's such a hard problem to solve that we really can't solve it with just something like a protocol or something like that so when you google",
    "start": "953540",
    "end": "960590"
  },
  {
    "text": "this and you say like how do people actually solve this in the wild I actually ran across a paper from Pat",
    "start": "960590",
    "end": "966950"
  },
  {
    "start": "966000",
    "end": "1024000"
  },
  {
    "text": "Helland who is a I think right now he does work for Salesforce at the time he wrote this",
    "start": "966950",
    "end": "972890"
  },
  {
    "text": "he worked for amazon.com he used to work for Microsoft he actually wrote a big",
    "start": "972890",
    "end": "977990"
  },
  {
    "text": "part of the Microsoft distributed transaction coordinator as well as my",
    "start": "977990",
    "end": "983390"
  },
  {
    "text": "sequel server has some kind of message queue underneath it covers or something so he was part of that as well so he was",
    "start": "983390",
    "end": "988820"
  },
  {
    "text": "very big for a very long time into like making the database the thing that everything flowed through and then he",
    "start": "988820",
    "end": "994820"
  },
  {
    "text": "just like throw more transactions at this thing and it all worked but once they went to a cloud-based environment he found that that doesn't",
    "start": "994820",
    "end": "1001630"
  },
  {
    "text": "actually scale it doesn't actually work when I start to move all my resources off this single box and start to",
    "start": "1001630",
    "end": "1007390"
  },
  {
    "text": "distribute them throughout different data centers so I wrote this paper and this is the basis of the title this talk",
    "start": "1007390",
    "end": "1013330"
  },
  {
    "text": "would just probably should have prefaced that life beyond distributed transactions an apostates opinion and",
    "start": "1013330",
    "end": "1020710"
  },
  {
    "text": "apostate by the way I think will define it later but part of the epiphanies from this is whenever you're building systems",
    "start": "1020710",
    "end": "1028150"
  },
  {
    "start": "1024000",
    "end": "1141000"
  },
  {
    "text": "is is if you want to ever get this to any kind of scale that gets off a single box then you have to assume that the",
    "start": "1028150",
    "end": "1034300"
  },
  {
    "text": "transactional boundary of your system can only be a single item that is either one table one row it really depends on",
    "start": "1034300",
    "end": "1042819"
  },
  {
    "text": "what you're trying to write to it could be a message as well but your transactional boundary can only be that one thing so whatever you do to it be",
    "start": "1042820",
    "end": "1050380"
  },
  {
    "text": "able to coordinate your action with other things you can only were of reason about a transaction without one",
    "start": "1050380",
    "end": "1056290"
  },
  {
    "text": "individual item and he describes a means of being able to do so he says well what",
    "start": "1056290",
    "end": "1062830"
  },
  {
    "text": "you the way you solve this problem is instead of you trying to write to two different entity",
    "start": "1062830",
    "end": "1068130"
  },
  {
    "text": "items at the same time instead you start to use some kind of messaging with your",
    "start": "1068130",
    "end": "1073500"
  },
  {
    "text": "item so that you can communicate from one item to the other and the trick is to store your messages of that item from",
    "start": "1073500",
    "end": "1081660"
  },
  {
    "text": "one item to the next inside the transactional boundary of that first item so when I'm wanting to",
    "start": "1081660",
    "end": "1087480"
  },
  {
    "text": "communicate from this entity to the other my transactional boundary includes whatever business data I have as far as",
    "start": "1087480",
    "end": "1094680"
  },
  {
    "text": "that part that first entity and any kind of communication I'll have to the outside world when I want to actually",
    "start": "1094680",
    "end": "1102330"
  },
  {
    "text": "consume these messages that is communicate from one entity to the next and what we'll do is have some kind of",
    "start": "1102330",
    "end": "1109290"
  },
  {
    "text": "way to keep track of what messages I've received so that I know like this met this thing is tried to communicate with",
    "start": "1109290",
    "end": "1115740"
  },
  {
    "text": "me before but have I done it yet or not so I start to keep track of the different messages this entity's",
    "start": "1115740",
    "end": "1120780"
  },
  {
    "text": "received to make sure that I don't accidentally process that message multiple times and eventually get to",
    "start": "1120780",
    "end": "1126330"
  },
  {
    "text": "this more complex picture of why I'm keeping track of conversations from different entities from one entity to",
    "start": "1126330",
    "end": "1131610"
  },
  {
    "text": "the next and these messages are always stored within the same transactional boundary of that original entity so we",
    "start": "1131610",
    "end": "1139230"
  },
  {
    "text": "saw this like great we're gonna do that but there's a problem there was no code with this it was only",
    "start": "1139230",
    "end": "1146160"
  },
  {
    "text": "pictures of things like we'll just have circles and squares and boxes and letters but like nothing to tell me like",
    "start": "1146160",
    "end": "1152670"
  },
  {
    "text": "I'm on and I'm on rabbitmq how do I actually translate that into a real",
    "start": "1152670",
    "end": "1158520"
  },
  {
    "text": "implementation something real behind the scenes so we had to take that and say",
    "start": "1158520",
    "end": "1163530"
  },
  {
    "text": "well what does this mean inside of the current system we're working with we do have messaging we have rabbitmq we do",
    "start": "1163530",
    "end": "1170580"
  },
  {
    "text": "have something like entities but they're documents inside MongoDB so how does this translate into that picture so it",
    "start": "1170580",
    "end": "1177900"
  },
  {
    "text": "looks something like this we would have each individual document that represents",
    "start": "1177900",
    "end": "1183390"
  },
  {
    "text": "the transactional boundary of MongoDB so that represents the the things that can write within one atomic operation that",
    "start": "1183390",
    "end": "1190530"
  },
  {
    "text": "can only be inside one single document now I know if you go actually google MongoDB transactions that there's a lot",
    "start": "1190530",
    "end": "1196470"
  },
  {
    "text": "of like marketing stuff that says they can do transactions but read the operational support and like",
    "start": "1196470",
    "end": "1201769"
  },
  {
    "text": "actually don't use this yet because we haven't actually proven an out real in production so for us we said okay that's",
    "start": "1201769",
    "end": "1206839"
  },
  {
    "text": "still like further down the line so our transactional boundary then we can reason about is going to be one single",
    "start": "1206839",
    "end": "1212659"
  },
  {
    "text": "document at a time this will of course have the real business data associated with what we're doing so we'd have all",
    "start": "1212659",
    "end": "1219589"
  },
  {
    "text": "the JSON junk associated with that individual document but as part of this would also include communication to the",
    "start": "1219589",
    "end": "1225799"
  },
  {
    "text": "outside world or to other interested parties so when I wanted to communicate with another document the head its own",
    "start": "1225799",
    "end": "1232039"
  },
  {
    "text": "business data they don't have to have some kind of messaging structure to communicate to the other piece and we",
    "start": "1232039",
    "end": "1238549"
  },
  {
    "text": "called it the outbox in my head I like literally picture people as these",
    "start": "1238549",
    "end": "1244609"
  },
  {
    "text": "documents that have their own workspace and when they want to communicate to other people with other things they want to have",
    "start": "1244609",
    "end": "1250579"
  },
  {
    "text": "happen then they have like a something on their desk that has a piece of set of stack of papers that says I want to do",
    "start": "1250579",
    "end": "1256700"
  },
  {
    "text": "something with someone else so here's my outbox something else can go shuttle on to the other people and every single",
    "start": "1256700",
    "end": "1262249"
  },
  {
    "text": "interested party that's involved in a system has their own individual outbox that is within their own transactional",
    "start": "1262249",
    "end": "1267649"
  },
  {
    "text": "boundary so what what I want to communicate to other people other items or resources that I will place items in",
    "start": "1267649",
    "end": "1274789"
  },
  {
    "text": "my outbox and then something would then go deliver them to the other side I do have to keep",
    "start": "1274789",
    "end": "1279889"
  },
  {
    "text": "track of these individual items so each individual document has to have their own inbox to keep track of things that's",
    "start": "1279889",
    "end": "1286879"
  },
  {
    "text": "received to know whether or not anything's been processed before alright",
    "start": "1286879",
    "end": "1292009"
  },
  {
    "start": "1291000",
    "end": "1449000"
  },
  {
    "text": "so I'm gonna switch actually to a code example to show how this might look in",
    "start": "1292009",
    "end": "1297289"
  },
  {
    "text": "real life now this example that I'll be",
    "start": "1297289",
    "end": "1303769"
  },
  {
    "text": "showing is using Azure cosmos DB because",
    "start": "1303769",
    "end": "1309159"
  },
  {
    "text": "really doesn't really work that great locally and so cosmos TVs seem like a good thing to do and I like",
    "start": "1309159",
    "end": "1314809"
  },
  {
    "text": "Microsoft centric conference so cosmos DB I am still using RabbitMQ because there's no way to run Azure service bus",
    "start": "1314809",
    "end": "1321889"
  },
  {
    "text": "locally maybe you can work something else out you cannot",
    "start": "1321889",
    "end": "1327270"
  },
  {
    "text": "you cannot so it's using RabbitMQ for messaging but as your cosmos DB went",
    "start": "1327270",
    "end": "1333150"
  },
  {
    "text": "through a local emulator for my documents so the first thing I'll show is how do I actually signify an",
    "start": "1333150",
    "end": "1340440"
  },
  {
    "text": "individual message so in this case I just have a very simple interface an I",
    "start": "1340440",
    "end": "1345660"
  },
  {
    "text": "document message and the only thing it has on it is an ID because there I have to have some way to distinguish this",
    "start": "1345660",
    "end": "1352380"
  },
  {
    "text": "message to sent to someone else versus this other message over here so in that case I'll have an i document message and",
    "start": "1352380",
    "end": "1360780"
  },
  {
    "text": "then top of that I need to have that container for the inbox and the outbox so I'll have a a base class that",
    "start": "1360780",
    "end": "1368570"
  },
  {
    "text": "includes an outbox in an inbox and the",
    "start": "1368570",
    "end": "1374100"
  },
  {
    "text": "outbox and inbox are just a hash set of document messages I hash it because I",
    "start": "1374100",
    "end": "1379230"
  },
  {
    "text": "want to make sure that if I get two messages with the same ID I only store that message once and if anyone wants to",
    "start": "1379230",
    "end": "1385740"
  },
  {
    "text": "interact with this document then they'll need to work through these these inboxes on the out boxes and because the inbox",
    "start": "1385740",
    "end": "1392790"
  },
  {
    "text": "in the outbox lives on the same base document as everything else then this",
    "start": "1392790",
    "end": "1397920"
  },
  {
    "text": "all gets saved automatically each time I write this document to Ashur cosmos TV",
    "start": "1397920",
    "end": "1405470"
  },
  {
    "text": "so with this primitive of having a base document with inbox and outbox I can",
    "start": "1405470",
    "end": "1413400"
  },
  {
    "text": "start to build more interesting things for example my order request is",
    "start": "1413400",
    "end": "1418760"
  },
  {
    "text": "inheriting from document base and anytime I want to interact with anything else then it will go through operations",
    "start": "1418760",
    "end": "1425550"
  },
  {
    "text": "in that document to be able to actually persist eventually okay so now I have a",
    "start": "1425550",
    "end": "1433980"
  },
  {
    "text": "way to actually store messages received and messages sent now I want to be able",
    "start": "1433980",
    "end": "1440760"
  },
  {
    "text": "to actually do something interesting with my application because yes it's it's fun to like save messages but let's actually do something more fun",
    "start": "1440760",
    "end": "1449840"
  },
  {
    "start": "1449000",
    "end": "1551000"
  },
  {
    "text": "so I have this this this order request object that can be able to store",
    "start": "1452250",
    "end": "1458230"
  },
  {
    "text": "messages needing to be able to sent to someone else but I have to have something that actually takes those",
    "start": "1458230",
    "end": "1464110"
  },
  {
    "text": "messages out of one document and sends them on to something else and to do so I",
    "start": "1464110",
    "end": "1469270"
  },
  {
    "text": "will have something that takes messages out and sends them along with the dispatcher now the way this dispatch",
    "start": "1469270",
    "end": "1476890"
  },
  {
    "text": "will work is first the first operation just do something inside the business object or the document so as part of",
    "start": "1476890",
    "end": "1483580"
  },
  {
    "text": "that operation it will write some kind of business data to the document and then store messages inside the document",
    "start": "1483580",
    "end": "1488770"
  },
  {
    "text": "inside its outbox now the next step is to be able to take those messages out of",
    "start": "1488770",
    "end": "1494260"
  },
  {
    "text": "the outbox and be able to train them and transfer them out to the other dot",
    "start": "1494260",
    "end": "1499270"
  },
  {
    "text": "interested documents now again my transactional boundary is the individual document so each point have to say like",
    "start": "1499270",
    "end": "1504790"
  },
  {
    "text": "make sure I have a checkpoint as I go to make sure that everything for that one single boundary can either succeed or",
    "start": "1504790",
    "end": "1510700"
  },
  {
    "text": "fail the dispatcher reads messages out of the outbox it figures out who can actually",
    "start": "1510700",
    "end": "1517870"
  },
  {
    "text": "process those messages and then finally passes them long to any interested",
    "start": "1517870",
    "end": "1523180"
  },
  {
    "text": "document and any interested document then can then do whatever needs to do to process information which can be reading",
    "start": "1523180",
    "end": "1530230"
  },
  {
    "text": "some information as well as storing that message in its own individual inbox the",
    "start": "1530230",
    "end": "1536050"
  },
  {
    "text": "transactional boundary is going to be is going to be each individual document so as I'm processing information it's",
    "start": "1536050",
    "end": "1542530"
  },
  {
    "text": "changing the business data as well as keeping traffic track of that message in its own individual inbox all right so",
    "start": "1542530",
    "end": "1552160"
  },
  {
    "start": "1551000",
    "end": "1917000"
  },
  {
    "text": "let's look at an example of this",
    "start": "1552160",
    "end": "1555540"
  },
  {
    "text": "all right",
    "start": "1564470",
    "end": "1567650"
  },
  {
    "text": "alright so in this example what I've done is created an order request which is like me clicking the button on the",
    "start": "1572980",
    "end": "1578930"
  },
  {
    "text": "website to say place order and then as part of that I take in a shopping cart so the general idea is I'm trying to",
    "start": "1578930",
    "end": "1584840"
  },
  {
    "text": "convert my shopping cart into an actual order but in order to actually process the order I'm having to interact with",
    "start": "1584840",
    "end": "1590990"
  },
  {
    "text": "things like stock items and fulfillment so I can't do that all in one single operation so what I'll do is whenever",
    "start": "1590990",
    "end": "1597080"
  },
  {
    "text": "you create the order from the shopping carts I will save all of my own internal",
    "start": "1597080",
    "end": "1602090"
  },
  {
    "text": "data which is the ID the customer and the actual items that you purchased I will set my status to new because I'm a",
    "start": "1602090",
    "end": "1609170"
  },
  {
    "text": "new order and then finally instead of me actually telling the stock items to go ahead and decrement the quantity instead",
    "start": "1609170",
    "end": "1615650"
  },
  {
    "text": "I'm going to send a message to them and this sin is going to create not an",
    "start": "1615650",
    "end": "1621290"
  },
  {
    "text": "actual message on a queue anywhere but this is going to create a new message in the in on the out box of this document",
    "start": "1621290",
    "end": "1627309"
  },
  {
    "text": "with this information this order created information it says my order created ID",
    "start": "1627309",
    "end": "1633050"
  },
  {
    "text": "order created ID for this message is a just new ID the order ID in which this order created message is referring to is",
    "start": "1633050",
    "end": "1640429"
  },
  {
    "text": "my own ID and then finally I'll also make sure also include the line item",
    "start": "1640429",
    "end": "1647929"
  },
  {
    "text": "information so that downstream systems when they receive this information know exactly what is on the order itself so",
    "start": "1647929",
    "end": "1655280"
  },
  {
    "text": "this sim method is that actually like sending a message to anyone really all",
    "start": "1655280",
    "end": "1660620"
  },
  {
    "text": "it's doing is just recording this information on my document base class up",
    "start": "1660620",
    "end": "1666890"
  },
  {
    "text": "here and just adding that message to the",
    "start": "1666890",
    "end": "1672800"
  },
  {
    "text": "outbox and that's it so when I actually process do this",
    "start": "1672800",
    "end": "1678080"
  },
  {
    "text": "operation of creating a new order request I'm not actually communicating to any other documents I'm just",
    "start": "1678080",
    "end": "1683809"
  },
  {
    "text": "recording the intent to interact those documents be an outbox that is stored on",
    "start": "1683809",
    "end": "1688850"
  },
  {
    "text": "this exact same document itself so looking back and where this actually",
    "start": "1688850",
    "end": "1695210"
  },
  {
    "text": "gets called this order request this gets called on the button click of you",
    "start": "1695210",
    "end": "1701300"
  },
  {
    "text": "placing an order so the only thing I'm going to do is create the order best save it to the Asscher cosmos",
    "start": "1701300",
    "end": "1708990"
  },
  {
    "text": "database and that's it it's like I'm just creating the item saving it to cosmos DB and then something else is",
    "start": "1708990",
    "end": "1716309"
  },
  {
    "text": "going to take take that piece and then deliver it to the other side and so that piece is going to be the dispatcher that",
    "start": "1716309",
    "end": "1723120"
  },
  {
    "text": "takes that information out of my order request document and somehow passes it",
    "start": "1723120",
    "end": "1729149"
  },
  {
    "text": "to the other side so that's the next piece we're going to see is the dispatcher the dispatcher is going to",
    "start": "1729149",
    "end": "1739740"
  },
  {
    "text": "take information out of those documents the outbox and figure out how to pass it",
    "start": "1739740",
    "end": "1745710"
  },
  {
    "text": "to the whatever documents would be interested in receiving that message so",
    "start": "1745710",
    "end": "1750720"
  },
  {
    "text": "there's a bunch of Cosmos DB junk in here but the most interesting thing is it receives a document it will loop",
    "start": "1750720",
    "end": "1756840"
  },
  {
    "text": "through all of the items in its outbox and for each items in the outbox it will",
    "start": "1756840",
    "end": "1763019"
  },
  {
    "text": "find something that can handle that outbox message that's going to be this",
    "start": "1763019",
    "end": "1768029"
  },
  {
    "text": "piece here it will pass that message to that other interested party and then",
    "start": "1768029",
    "end": "1774000"
  },
  {
    "text": "finally when it's done it'll go ahead and remove that message from its own individual outbox so the one example we",
    "start": "1774000",
    "end": "1781470"
  },
  {
    "text": "had here was a order created message so",
    "start": "1781470",
    "end": "1787260"
  },
  {
    "text": "something is actually interested in this document message and so the other piece is going to be nope",
    "start": "1787260",
    "end": "1797480"
  },
  {
    "text": "it's going to be",
    "start": "1797480",
    "end": "1800990"
  },
  {
    "text": "I don't think that's the one either it's going to be oh this is the one this is a",
    "start": "1804130",
    "end": "1816250"
  },
  {
    "text": "document message handler for that individual message type so for this message I've pulled off of my document I",
    "start": "1816250",
    "end": "1824440"
  },
  {
    "text": "have to find who can actually handle it I find that there is a actually there's a handler that can handle this and so",
    "start": "1824440",
    "end": "1829990"
  },
  {
    "text": "from here what I have to do is translate that message into some other document that can actually handle the information",
    "start": "1829990",
    "end": "1835299"
  },
  {
    "text": "so what I'm not doing is like like doing kind of like explicit routing between",
    "start": "1835299",
    "end": "1840580"
  },
  {
    "text": "this document in the other I have some kind of indirection that says well I just have these document messages I",
    "start": "1840580",
    "end": "1846549"
  },
  {
    "text": "don't know exactly what you're going to do with them so we'll just create this interface it says anyone that cares",
    "start": "1846549",
    "end": "1852250"
  },
  {
    "text": "about document messages of this type then you have some kind of handle method to go ahead and go handle that whatever",
    "start": "1852250",
    "end": "1858070"
  },
  {
    "text": "that thing it is you want to do so for this one I'll pull that order created message off of the documents and then do",
    "start": "1858070",
    "end": "1864340"
  },
  {
    "text": "whatever I need to do for fulfillment to actually process that information so what fulfilment is going to be doing",
    "start": "1864340",
    "end": "1870549"
  },
  {
    "text": "is loading up the information from that",
    "start": "1870549",
    "end": "1875740"
  },
  {
    "text": "message and then creating a fulfillment that is going to include the stock information about how is going to",
    "start": "1875740",
    "end": "1881500"
  },
  {
    "text": "actually fulfill this order so in this case what I'm doing is creating a new order fulfillments creating that item",
    "start": "1881500",
    "end": "1889179"
  },
  {
    "text": "and then finally delegating out to the individual order fulfillment document",
    "start": "1889179",
    "end": "1894760"
  },
  {
    "text": "itself to actually handle that message all right so I'll stop here and",
    "start": "1894760",
    "end": "1900210"
  },
  {
    "text": "transition back to some of the ways things can go wrong with this picture to see how we can handle this through each",
    "start": "1900210",
    "end": "1906850"
  },
  {
    "text": "step in this process",
    "start": "1906850",
    "end": "1910049"
  },
  {
    "start": "1917000",
    "end": "2011000"
  },
  {
    "text": "okay so I'll put at this points I'm really just still assuming that everything can basically succeed I'm I'm",
    "start": "1919080",
    "end": "1926050"
  },
  {
    "text": "having a lot of indirection around here to say well I can't write two two documents at the same time so I'll just",
    "start": "1926050",
    "end": "1931750"
  },
  {
    "text": "use these kind of messages to to be able to coordinate these activities but that still doesn't help me when things can",
    "start": "1931750",
    "end": "1936880"
  },
  {
    "text": "potentially go wrong with that picture now remember in MongoDB my transactional boundary and comest cosmos DB is one",
    "start": "1936880",
    "end": "1943780"
  },
  {
    "text": "single document at a time so I have to assume that every time I write to cosmos",
    "start": "1943780",
    "end": "1949150"
  },
  {
    "text": "DB that something can fail immediately afterwards every time you see like create item or update item I have to",
    "start": "1949150",
    "end": "1955060"
  },
  {
    "text": "assume that something will fail immediately afterwards so in this picture I'm like halfway through the",
    "start": "1955060",
    "end": "1961660"
  },
  {
    "text": "process now I've pulled something off of my original document and have now passed it to the first document and now it",
    "start": "1961660",
    "end": "1968200"
  },
  {
    "text": "succeeded but as I pass it to the second one something goes wrong what goes wrong",
    "start": "1968200",
    "end": "1974500"
  },
  {
    "text": "I don't know it could be an exception from a bug someone wrote in the system it could be that someone pulled a plug",
    "start": "1974500",
    "end": "1981340"
  },
  {
    "text": "on the operation it could be that communication was interrupted with Azure or it could just be I'm in the middle of",
    "start": "1981340",
    "end": "1986890"
  },
  {
    "text": "deployment and I'm just trying to update my software to get rid of the bugs whatever it might be something can go",
    "start": "1986890",
    "end": "1992350"
  },
  {
    "text": "wrong with that second part of the operation and so I have to be able to recover from this picture so in our case",
    "start": "1992350",
    "end": "1998140"
  },
  {
    "text": "what we'll do is have some way of retrying this operation and something has to do this how do i how do I get",
    "start": "1998140",
    "end": "2004440"
  },
  {
    "text": "halfway through this operation and make sure that something can go ahead and pick it up and go on from there so",
    "start": "2004440",
    "end": "2012030"
  },
  {
    "start": "2011000",
    "end": "2485000"
  },
  {
    "text": "thanks this gets into retries I have to be able to take at any point in that those arrows going between each document",
    "start": "2012030",
    "end": "2018060"
  },
  {
    "text": "that that can fail and have to be able to recover from that failure in order to be able to make sure that everything",
    "start": "2018060",
    "end": "2023880"
  },
  {
    "text": "actually still succeed at some point in the future so we'll do is have some kind of notification that something went",
    "start": "2023880",
    "end": "2030720"
  },
  {
    "text": "wrong in this case I'm introducing a message queue to say something needs to be something went wrong go ahead and try",
    "start": "2030720",
    "end": "2036900"
  },
  {
    "text": "to retry this operation and so when I retry this operation I'll do that whole thing all over again that is I'll read a",
    "start": "2036900",
    "end": "2042390"
  },
  {
    "text": "message from the outbox of the original document then I'll dispatch it to that",
    "start": "2042390",
    "end": "2047790"
  },
  {
    "text": "first document but I've already processed first message so I don't need to do it",
    "start": "2047790",
    "end": "2054158"
  },
  {
    "text": "again so this one just says it nothing to do I've already done this so I don't",
    "start": "2054159",
    "end": "2059470"
  },
  {
    "text": "have to be able to I don't have to redo this operation the second one hasn't processed this message yet so it",
    "start": "2059470",
    "end": "2065740"
  },
  {
    "text": "actually will do whatever operation needs to do to be able to process that data so it processes the information and",
    "start": "2065740",
    "end": "2071290"
  },
  {
    "text": "then says yep everything's good to go and so finally when we're done everything says it's it's successful so",
    "start": "2071290",
    "end": "2078280"
  },
  {
    "text": "we remove that document the original message from the first originating document now everything is successful",
    "start": "2078280",
    "end": "2085030"
  },
  {
    "text": "and so this entire operation is complete the only way this can work properly is",
    "start": "2085030",
    "end": "2090850"
  },
  {
    "text": "if I make sure that within each arrow I'm able to check to see how I done this thing before and if I've not done this",
    "start": "2090850",
    "end": "2097330"
  },
  {
    "text": "thing before go ahead and do the thing otherwise I have to check to see and",
    "start": "2097330",
    "end": "2102880"
  },
  {
    "text": "then actually do the operation underneath it covers so let's go back to",
    "start": "2102880",
    "end": "2108760"
  },
  {
    "text": "our code to see how does it actually keep track and make sure I haven't processed each of these things before by",
    "start": "2108760",
    "end": "2117640"
  },
  {
    "text": "the way if if everyone just goes wants to go back to the world of a single app in a single database like I get it like",
    "start": "2117640",
    "end": "2122859"
  },
  {
    "text": "I do - I missed those days when everything was so simple it all just fit in a single transaction and all was good",
    "start": "2122859",
    "end": "2130500"
  },
  {
    "text": "okay so in our first original operation",
    "start": "2131940",
    "end": "2137859"
  },
  {
    "text": "in which I was creating the order",
    "start": "2137859",
    "end": "2142049"
  },
  {
    "text": "and the order requests oh gosh yes I was",
    "start": "2148380",
    "end": "2154589"
  },
  {
    "text": "totally doing that purpose here we go so this is the initial button click handling the initial request to go ahead",
    "start": "2154589",
    "end": "2161400"
  },
  {
    "text": "and save the item in the database so I basically go line by line like what is gonna touch a database and what can fail",
    "start": "2161400",
    "end": "2166499"
  },
  {
    "text": "so this originates from a web request which I don't have a transaction around",
    "start": "2166499",
    "end": "2171869"
  },
  {
    "text": "like no one implements transactions in Chrome right it's not a thing people do I hope not so there is some point where",
    "start": "2171869",
    "end": "2177869"
  },
  {
    "text": "I don't really have that transactional support so I assume that this entire thing someone could click the button twice and then have to be able to handle",
    "start": "2177869",
    "end": "2183630"
  },
  {
    "text": "that so at this point once I'm done in this level I have to assume that this can happen more than one time so at this",
    "start": "2183630",
    "end": "2190619"
  },
  {
    "text": "point I go ahead and create the item I in stage two the order request I create",
    "start": "2190619",
    "end": "2195630"
  },
  {
    "text": "the item at this point this is my transactional boundary so at this point things are good but everything after",
    "start": "2195630",
    "end": "2202859"
  },
  {
    "text": "this can possibly fail so I could potentially screw up my carts I could",
    "start": "2202859",
    "end": "2208859"
  },
  {
    "text": "potentially not return the response but I have to assume like this this this by itself can either succeed or fail and",
    "start": "2208859",
    "end": "2215549"
  },
  {
    "text": "that's it now once I've actually created them them the items with their outbox at",
    "start": "2215549",
    "end": "2223200"
  },
  {
    "text": "this point something is taking over and that's my dispatcher so let's go to our dispatcher to see how that thing can",
    "start": "2223200",
    "end": "2229680"
  },
  {
    "text": "fail my dispatcher is finding items that",
    "start": "2229680",
    "end": "2236099"
  },
  {
    "text": "have individual items in their outbox to process and for each item in their",
    "start": "2236099",
    "end": "2241469"
  },
  {
    "text": "outbox it is saying go ahead and find the handler call the handler and then process the document message this",
    "start": "2241469",
    "end": "2248249"
  },
  {
    "text": "handler can be writing to the document database so this is doing transactional",
    "start": "2248249",
    "end": "2253680"
  },
  {
    "text": "stuff so this can succeed but this may fail so I have to be able to process",
    "start": "2253680",
    "end": "2259559"
  },
  {
    "text": "this all over again this handler may have may execute twice I don't know that so each time I actually handle the",
    "start": "2259559",
    "end": "2266369"
  },
  {
    "text": "document message I have to make sure that can handle that this thing could potentially be processed twice so behind",
    "start": "2266369",
    "end": "2272190"
  },
  {
    "text": "the scenes what you eventually get down to the individual documents that process the messages what they'll do is",
    "start": "2272190",
    "end": "2281640"
  },
  {
    "text": "inside the order fulfillment document and won't just do all that stuff by itself instead it wraps everything in",
    "start": "2281640",
    "end": "2287430"
  },
  {
    "text": "this process and says I'm going to process this message this is the actual work that will be done but what we'll do",
    "start": "2287430",
    "end": "2295200"
  },
  {
    "text": "is each time I process a message I'll check if I've already processed this",
    "start": "2295200",
    "end": "2301200"
  },
  {
    "text": "message before then just return nothing to do if I haven't processed this",
    "start": "2301200",
    "end": "2308640"
  },
  {
    "text": "message before go ahead and do the thing that you told me you wanted to do and then once you're done I will add this",
    "start": "2308640",
    "end": "2315119"
  },
  {
    "text": "message to my inbox so that every time I process a message I'm not only doing the business action that you are wanting to",
    "start": "2315119",
    "end": "2321990"
  },
  {
    "text": "do but also keep track of that thing that you asked me to do so that the next",
    "start": "2321990",
    "end": "2327660"
  },
  {
    "text": "time in if something happens and it goes wrong I won't accidentally perform the same operation twice I'll always check",
    "start": "2327660",
    "end": "2333480"
  },
  {
    "text": "how my receive this message before and if I've received this message before then just return do nothing what that",
    "start": "2333480",
    "end": "2341910"
  },
  {
    "text": "does is it gives me the safety to say that I can I can process stock information and fulfillment information",
    "start": "2341910",
    "end": "2348089"
  },
  {
    "text": "multiple times without worrying about it accidentally like doubles doing stock in the fulfillment place or accidentally",
    "start": "2348089",
    "end": "2355079"
  },
  {
    "text": "charging a customer twice every single time I'm processing something I'm checking to see if I've already done",
    "start": "2355079",
    "end": "2360960"
  },
  {
    "text": "this before now this one actually",
    "start": "2360960",
    "end": "2366779"
  },
  {
    "text": "generates more messages so as part of this processing the order fulfilment I need to actually go out into the",
    "start": "2366779",
    "end": "2373049"
  },
  {
    "text": "inventory to make sure that all the different stock items actually have stock information or have the",
    "start": "2373049",
    "end": "2378569"
  },
  {
    "text": "appropriate quantity of where I'm trying to do but each stock item is yet another MongoDB document or cosmos TV document",
    "start": "2378569",
    "end": "2386160"
  },
  {
    "text": "that is in its own individual transaction boundaries so I can't just like if stock item is greater than",
    "start": "2386160",
    "end": "2391529"
  },
  {
    "text": "hundred do the thing know I actually have to say well I I don't know if it has enough stock so I'll go ahead and",
    "start": "2391529",
    "end": "2396990"
  },
  {
    "text": "stand to send a stock request to each of the different stock items and then ask them do you have enough stock to be able",
    "start": "2396990",
    "end": "2403859"
  },
  {
    "text": "to fulfill this item and let me know if you do or don't so again I'm never",
    "start": "2403859",
    "end": "2410759"
  },
  {
    "text": "trying to have more than one document in the same transaction because I can't I can't do that so I had to split",
    "start": "2410759",
    "end": "2417359"
  },
  {
    "text": "everything into this communication to these other documents back in by",
    "start": "2417359",
    "end": "2424650"
  },
  {
    "text": "dispatcher after that individual document is been handled appropriately",
    "start": "2424650",
    "end": "2430140"
  },
  {
    "text": "that is everything seems to have succeeded from that point then I'll call process document message on the",
    "start": "2430140",
    "end": "2435630"
  },
  {
    "text": "originating document and what this will do is just simply remove that document from the outbox so it's effectively d",
    "start": "2435630",
    "end": "2442499"
  },
  {
    "text": "queuing the message but I don't have a queue I just have a single document boundary and so it's just removing that",
    "start": "2442499",
    "end": "2448019"
  },
  {
    "text": "message from that documents and then finally saving that original document again this could fail someone could trip",
    "start": "2448019",
    "end": "2457049"
  },
  {
    "text": "over the plug a juror could blip somewhere so by having that inbox that",
    "start": "2457049",
    "end": "2462299"
  },
  {
    "text": "keeps track of whatever messages I've sent to individual documents I ensure that this whole thing can be retried every single time okay so that's still",
    "start": "2462299",
    "end": "2476099"
  },
  {
    "text": "like the general happy path and the the like the easy sad path but there are yet",
    "start": "2476099",
    "end": "2482999"
  },
  {
    "text": "more sad paths that I have to worry about there's oh there's one less piece",
    "start": "2482999",
    "end": "2489960"
  },
  {
    "text": "so I just showed this dispatcher but I didn't show the code that actually calls it so something has to actually know",
    "start": "2489960",
    "end": "2495210"
  },
  {
    "text": "that these things are going on with documents and actually know to say this message that this document has things",
    "start": "2495210",
    "end": "2500969"
  },
  {
    "text": "that needs to communicate so go ahead and communicate to the outside world so",
    "start": "2500969",
    "end": "2506069"
  },
  {
    "text": "if I have a single document that has to coordinate by the way if your pictures ever this complicated like revisit your",
    "start": "2506069",
    "end": "2511680"
  },
  {
    "text": "architecture it should not only like be like maybe one or two things not like ten that we see here anyway as a request",
    "start": "2511680",
    "end": "2519900"
  },
  {
    "text": "happens what I will do is register each of the documents into a unit of work and what that unit of work is just keeping",
    "start": "2519900",
    "end": "2526589"
  },
  {
    "text": "track of what things have gone on with this request so then at the end of the request I go it can go ahead and least",
    "start": "2526589",
    "end": "2532410"
  },
  {
    "text": "try to dispatch each of those i h of those messages to their outbox so the",
    "start": "2532410",
    "end": "2537989"
  },
  {
    "text": "unit of work is the thing that's calling the dispatcher that says okay i did the first document that thing succeeded I",
    "start": "2537989",
    "end": "2543719"
  },
  {
    "text": "wrote appropriate okay now it needs to go to the second documents to say let's do those things and finally keeps going and going",
    "start": "2543719",
    "end": "2550810"
  },
  {
    "text": "eventually something may fail and so what we'll do is create a message against you try to retry that individual",
    "start": "2550810",
    "end": "2557260"
  },
  {
    "text": "document so at least it partially partially succeeded but maybe not completely succeeded when it retries you",
    "start": "2557260",
    "end": "2565240"
  },
  {
    "text": "can go ahead and start from the top and say it'll go and retry this overall operation and because each of these documents has kept track of what it's",
    "start": "2565240",
    "end": "2571780"
  },
  {
    "text": "done it in boxes then each operation will just do it no op until it gets to",
    "start": "2571780",
    "end": "2576940"
  },
  {
    "text": "that final document that says okay now something has actually gone wrong we haven't actually processed this",
    "start": "2576940",
    "end": "2582490"
  },
  {
    "text": "message yet and so let's go ahead and do whatever operation that it said it's going to do okay",
    "start": "2582490",
    "end": "2588340"
  },
  {
    "start": "2586000",
    "end": "2842000"
  },
  {
    "text": "so I'll show this with our last piece which is a unit of work in a repository",
    "start": "2588340",
    "end": "2594510"
  },
  {
    "text": "all right still not duplicating here we go okay so",
    "start": "2601590",
    "end": "2611410"
  },
  {
    "text": "I said something was actually calling dispatch to dispatch these messages and that is going to be our unit of work our",
    "start": "2611410",
    "end": "2618850"
  },
  {
    "text": "unit of work is just an object that keeps track of what things have been happening during this request if you're",
    "start": "2618850",
    "end": "2625660"
  },
  {
    "text": "like in Happyland where you're just using any framework you don't worry about this pattern like it just keeps track of stuff that has happened and",
    "start": "2625660",
    "end": "2631810"
  },
  {
    "text": "knows to go ahead and commit that transaction at the end well we don't live in happy land we live in sad cosmos",
    "start": "2631810",
    "end": "2636970"
  },
  {
    "text": "TV land we don't have that our disposal so we have to invent or not invent we have to implement these patters ourselves so",
    "start": "2636970",
    "end": "2642700"
  },
  {
    "text": "we're going to implement the unit of work pattern that has its own internal identity map which just keeps track of",
    "start": "2642700",
    "end": "2648940"
  },
  {
    "text": "what documents have been worked with during this request and then as things happen inside my request they will get",
    "start": "2648940",
    "end": "2655540"
  },
  {
    "text": "registered with my identity map so I could have one document that gets registered or maybe multiple documents",
    "start": "2655540",
    "end": "2661180"
  },
  {
    "text": "are gonna get registered and then when I complete the request for whatever that means this is like the commit part of a",
    "start": "2661180",
    "end": "2667570"
  },
  {
    "text": "transaction then all this is doing is looping through my set of documents I've worked with find any messages with the",
    "start": "2667570",
    "end": "2674410"
  },
  {
    "text": "have any finding any documents with messages in their outbox and then go",
    "start": "2674410",
    "end": "2679480"
  },
  {
    "text": "ahead and calling the dispatcher for each and document so this ensures that when I click the button on the webpage at least",
    "start": "2679480",
    "end": "2685480"
  },
  {
    "text": "makes it a good attempt to try to process every single message of the outbox of any documents I've worked with",
    "start": "2685480",
    "end": "2691560"
  },
  {
    "text": "but if something goes wrong something happens then it will go ahead and say go",
    "start": "2691560",
    "end": "2697780"
  },
  {
    "text": "ahead and dispatch that message that individual document offline so this could flag the record for reprocessing",
    "start": "2697780",
    "end": "2704680"
  },
  {
    "text": "it could drop a message in a queue this is just like hey something went wrong like go process this sometime later in",
    "start": "2704680",
    "end": "2711670"
  },
  {
    "text": "the future and so this gets called in this case I think it's gets part of a a",
    "start": "2711670",
    "end": "2717600"
  },
  {
    "text": "filter that just says ok around each request when I'm doing some operation go",
    "start": "2717600",
    "end": "2724450"
  },
  {
    "text": "ahead and do the thing ifs and then when I'm done with the thing you're supposed to do go ahead and complete the unit of work and this will go ahead and try to",
    "start": "2724450",
    "end": "2730690"
  },
  {
    "text": "dispatch everything out into my individual documents so they'd have like at least when I click the button it will",
    "start": "2730690",
    "end": "2735730"
  },
  {
    "text": "try to go ahead and dispatch all those messages to all the documents when I'm",
    "start": "2735730",
    "end": "2743230"
  },
  {
    "text": "loading things up that was part of this register that I had over here if I want",
    "start": "2743230",
    "end": "2748450"
  },
  {
    "text": "to try to load a document from the database then I actually do have a repository pattern like one of the few",
    "start": "2748450",
    "end": "2754210"
  },
  {
    "text": "times that actually I'm okay with this repository pattern because it will go ahead and check my overall you need to",
    "start": "2754210",
    "end": "2760930"
  },
  {
    "text": "work to say do you already have this thing and if you don't have this thing then we'll go ahead and register the thing after I load it out of Cosmos TV",
    "start": "2760930",
    "end": "2768340"
  },
  {
    "text": "and if you do have the thing then I will just return that back out because you've already asked for it this is the stuff",
    "start": "2768340",
    "end": "2774970"
  },
  {
    "text": "that again like entity framework and other ORM just do for you you don't even know that they do for you but if you",
    "start": "2774970",
    "end": "2780100"
  },
  {
    "text": "want to try to have a multi multi resource operation these are the kind of patterns you have to start implementing",
    "start": "2780100",
    "end": "2785830"
  },
  {
    "text": "yourself by the way there's like way more things that can go wrong with this",
    "start": "2785830",
    "end": "2792570"
  },
  {
    "text": "so just don't just take this and run in production there's a lot more things you",
    "start": "2792570",
    "end": "2797680"
  },
  {
    "text": "have to worry about in the gist registering and finding here okay so with that in place I've got a way to",
    "start": "2797680",
    "end": "2805680"
  },
  {
    "text": "take messages from one document process them with another via the dispatcher if",
    "start": "2805680",
    "end": "2810820"
  },
  {
    "text": "I'm doing more than one thing as part of a then I have a unit of work that is keeping track of everything that",
    "start": "2810820",
    "end": "2816470"
  },
  {
    "text": "everything that's happening to note a disk to try to dispatch everything and then finally if something goes wrong",
    "start": "2816470",
    "end": "2821540"
  },
  {
    "text": "then I have some way to say oops something went wrong and go ahead and just try to dispatch that message",
    "start": "2821540",
    "end": "2827360"
  },
  {
    "text": "offline okay so this last piece is the one I want to show that it's like what happens when things go really really",
    "start": "2827360",
    "end": "2833120"
  },
  {
    "text": "wrong with this picture all right so",
    "start": "2833120",
    "end": "2844940"
  },
  {
    "start": "2842000",
    "end": "2934000"
  },
  {
    "text": "what happens when something goes like SuperDuper wrong that is I've got this like multi document coordinated activity",
    "start": "2844940",
    "end": "2851390"
  },
  {
    "text": "that I'm trying to have as part of like a lockstep I cated very much like a",
    "start": "2851390",
    "end": "2857360"
  },
  {
    "text": "canal lock sort of behavior where I have one document of time cording with others but then I have this this this poor",
    "start": "2857360",
    "end": "2863390"
  },
  {
    "text": "document at the end that fails and so we had like we need a way to be able to get notified that that thing failed and we",
    "start": "2863390",
    "end": "2869510"
  },
  {
    "text": "want to retry that one individual document but what happens when like the unit of work fails and then it had those",
    "start": "2869510",
    "end": "2876170"
  },
  {
    "text": "in-memory documents and it can't retry it at that point then something has to know to retry these documents in the",
    "start": "2876170",
    "end": "2882920"
  },
  {
    "text": "future now there's a number of ways you can do this and really depends on what tools are at your disposal for whatever",
    "start": "2882920",
    "end": "2889580"
  },
  {
    "text": "database you're working with but one way we do with cosmos TV and MongoDB was via",
    "start": "2889580",
    "end": "2895700"
  },
  {
    "text": "a trigger they don't call them triggers in cosmos TV because right nobody",
    "start": "2895700",
    "end": "2901160"
  },
  {
    "text": "actually wants to develop triggers on a database it's like a bad thing to do so they're called something else but that general idea is that when something",
    "start": "2901160",
    "end": "2906920"
  },
  {
    "text": "updates a document you can have a piece of code that executes based on whatever",
    "start": "2906920",
    "end": "2912320"
  },
  {
    "text": "actually happened with that original document so what this trigger is listening for are updates to documents",
    "start": "2912320",
    "end": "2918950"
  },
  {
    "text": "that have messages in their outbox so what I can do is have something listening for changes happening and as",
    "start": "2918950",
    "end": "2925910"
  },
  {
    "text": "changes are happening see if anything needs processing and everything these processing they go ahead and for that on",
    "start": "2925910",
    "end": "2931640"
  },
  {
    "text": "to the retry cue alright so let's look",
    "start": "2931640",
    "end": "2936890"
  },
  {
    "start": "2934000",
    "end": "3445000"
  },
  {
    "text": "at demo for that",
    "start": "2936890",
    "end": "2939640"
  },
  {
    "text": "okay so the piece we have there is what happens when something fails between",
    "start": "2945990",
    "end": "2952270"
  },
  {
    "text": "here and here so this is a this is like a proactive attempt to try to notify my",
    "start": "2952270",
    "end": "2960370"
  },
  {
    "text": "background processing like something went wrong during this operation like try to just process this via via offline",
    "start": "2960370",
    "end": "2967630"
  },
  {
    "text": "processing and this behind the scenes will drop a message onto a broker or a queue to say go ahead and process this",
    "start": "2967630",
    "end": "2973990"
  },
  {
    "text": "thing but if something fails like right before there then how do we recover from",
    "start": "2973990",
    "end": "2979330"
  },
  {
    "text": "this failure so what we're going to be using our triggers inside of Cosmos DB to be able to be notified that something",
    "start": "2979330",
    "end": "2985060"
  },
  {
    "text": "went wrong so cosmos DB calls these document feed observers and I could be",
    "start": "2985060",
    "end": "2992410"
  },
  {
    "text": "the implement this interface I change feed observer and the general idea is that for any an individual collection",
    "start": "2992410",
    "end": "2999340"
  },
  {
    "text": "you want to be notified for certain things that have happened so like when something changes for example like",
    "start": "2999340",
    "end": "3006390"
  },
  {
    "text": "something happens with it then you have a set of code that gets called based on that it passes you a list of documents",
    "start": "3006390",
    "end": "3012960"
  },
  {
    "text": "that have changed since the last time it's checked and what we would do is just basically loop through these documents find anything that has items",
    "start": "3012960",
    "end": "3021240"
  },
  {
    "text": "to process in its outbox and if it has things to process in its outbox then I'm what I'm gonna do",
    "start": "3021240",
    "end": "3026430"
  },
  {
    "text": "instead of me trying to process immediately I will immediately get into some kind of durable format to say",
    "start": "3026430",
    "end": "3031500"
  },
  {
    "text": "process this document and so that's what this last piece is it just says I'm gonna create a durable message that goes",
    "start": "3031500",
    "end": "3037290"
  },
  {
    "text": "on to a real actual cue and go ahead and process this meant this these documents",
    "start": "3037290",
    "end": "3042750"
  },
  {
    "text": "immediately behind the scenes what this will do for us is really just call the",
    "start": "3042750",
    "end": "3049770"
  },
  {
    "text": "dispatcher for that individual document and then eventually like with a bunch of",
    "start": "3049770",
    "end": "3056040"
  },
  {
    "text": "generic stuff it will do the same we'd think we did before loop through the outbox find the handler for each individual document document message",
    "start": "3056040",
    "end": "3062880"
  },
  {
    "text": "call the handler process the document message which means take it off of the outbox and then finally save the",
    "start": "3062880",
    "end": "3069390"
  },
  {
    "text": "original document so it's the exact same thing we were doing before except now this is part of a back processing trigger to be able to say",
    "start": "3069390",
    "end": "3075729"
  },
  {
    "text": "when things get updated to go ahead and have something that can kind of catch up if things go wrong now I have this",
    "start": "3075729",
    "end": "3084489"
  },
  {
    "text": "configured I think yeah this is a bunch of crazy config code but eventually I",
    "start": "3084489",
    "end": "3090839"
  },
  {
    "text": "have different change feed processors and what I'll do is I'll delay it by",
    "start": "3090839",
    "end": "3096609"
  },
  {
    "text": "some amount of time like 15 seconds so cosmos DB normally it will just like call your trigger immediately not really",
    "start": "3096609",
    "end": "3103029"
  },
  {
    "text": "well I don't want it to do that I only want to do that if something went wrong so I said well like if just wait a",
    "start": "3103029",
    "end": "3108729"
  },
  {
    "text": "little bit and then go ahead and check just make sure everything went through okay and then you can go ahead and try",
    "start": "3108729",
    "end": "3113890"
  },
  {
    "text": "to process everything so this works on a 15 second delay that after I've made any change to a document check to see if it",
    "start": "3113890",
    "end": "3119829"
  },
  {
    "text": "has any messages in its outbox and if it does then go ahead and fire message on to as your service bus or RabbitMQ to",
    "start": "3119829",
    "end": "3126640"
  },
  {
    "text": "say like process this message and all of its stuff inside of something that can be more easily managed now there are",
    "start": "3126640",
    "end": "3134499"
  },
  {
    "text": "other ways I've done this like you could have triggers on a database table you can have just like a nightly batch",
    "start": "3134499",
    "end": "3140049"
  },
  {
    "text": "process once a night look for anything that has messages in its outbox and go ahead and process these things depending",
    "start": "3140049",
    "end": "3146529"
  },
  {
    "text": "on like how quickly you need to be able to dispatch those messages between documents that's basically what I try to",
    "start": "3146529",
    "end": "3152259"
  },
  {
    "text": "do based on this for this customer in particular was a manufacturing company",
    "start": "3152259",
    "end": "3157479"
  },
  {
    "text": "and so we just like we calculated how long it would take from one Operator to walk from one station to the other and",
    "start": "3157479",
    "end": "3163809"
  },
  {
    "text": "get upset or pissed off at something there's about 15 seconds from them to walk from one station the other and they",
    "start": "3163809",
    "end": "3169359"
  },
  {
    "text": "say oh and I actually went through ok they go ahead and walk back everything's ok so that's how we figure it out that's SLA is just measuring someone's speed of",
    "start": "3169359",
    "end": "3177009"
  },
  {
    "text": "walking and how know what they'd get ok",
    "start": "3177009",
    "end": "3182109"
  },
  {
    "text": "so with this background processing I've got I've got my change feed going I've",
    "start": "3182109",
    "end": "3188079"
  },
  {
    "text": "got document messages going from one place to the next let's actually run this to make sure I am you've got",
    "start": "3188079",
    "end": "3194019"
  },
  {
    "text": "everything working ok so this example is using Azure cosmos DB for my data",
    "start": "3194019",
    "end": "3201729"
  },
  {
    "text": "storage it's using RabbitMQ to shuttle the messages between different components",
    "start": "3201729",
    "end": "3207200"
  },
  {
    "text": "and then it's just a really ugly asp net core front-end that i think i just took",
    "start": "3207200",
    "end": "3213319"
  },
  {
    "text": "from one of microsoft's examples because that's the easiest thing to do animation",
    "start": "3213319",
    "end": "3224089"
  },
  {
    "text": "I made sure and restored all my new J packages before I came here because the the Wi-Fi here is not that great so it",
    "start": "3224089",
    "end": "3230479"
  },
  {
    "text": "should run okay here Oh bill failed what did I do",
    "start": "3230479",
    "end": "3235239"
  },
  {
    "text": "it actually did fail restoring so what I'll do is I'll so if we can just run it",
    "start": "3244460",
    "end": "3251640"
  },
  {
    "text": "without restoring packages",
    "start": "3251640",
    "end": "3256849"
  },
  {
    "text": "okay I think what I did was I need to let's",
    "start": "3265570",
    "end": "3279140"
  },
  {
    "text": "try now",
    "start": "3279140",
    "end": "3281410"
  },
  {
    "text": "okay so clearly I just need the Internet's to make this work all right let's do this",
    "start": "3288010",
    "end": "3297350"
  },
  {
    "text": "I wish I could run the last running",
    "start": "3297350",
    "end": "3302600"
  },
  {
    "text": "instance do you know how to do that Seth no okay hmm oh I'm on some other junk",
    "start": "3302600",
    "end": "3316490"
  },
  {
    "text": "wife I already know your password it's",
    "start": "3316490",
    "end": "3324260"
  },
  {
    "text": "fine okay well if this was working Wow",
    "start": "3324260",
    "end": "3332780"
  },
  {
    "text": "what we would see is a web UI in which I",
    "start": "3332780",
    "end": "3337960"
  },
  {
    "text": "start the start the interaction by adding some items to my carts and when I",
    "start": "3337960",
    "end": "3343070"
  },
  {
    "text": "check out it will I'm gonna try to get this Wi-Fi working that's annoying",
    "start": "3343070",
    "end": "3351099"
  },
  {
    "text": "now",
    "start": "3355160",
    "end": "3358089"
  },
  {
    "text": "well that's not a good sign endless gifts okay that's fine",
    "start": "3361719",
    "end": "3372579"
  },
  {
    "text": "no no it's funny I like everything local to make sure it works and of course this happens so anyway with all this these",
    "start": "3372579",
    "end": "3382219"
  },
  {
    "text": "components in place that is a user interface that only assumes that one individual transaction succeeds or fails",
    "start": "3382219",
    "end": "3387289"
  },
  {
    "text": "with each individual documents and then I have document messages to be able to coronate between individual resources",
    "start": "3387289",
    "end": "3393499"
  },
  {
    "text": "that I can't put inside one single transaction and then having a background processor they can catch up when things",
    "start": "3393499",
    "end": "3399229"
  },
  {
    "text": "go wrong means that I can safely have operations that can interact with multiple transactional resources and",
    "start": "3399229",
    "end": "3404749"
  },
  {
    "text": "still have everything all kind of succeed or kind of fail now in this case because of using cosmos DB or MongoDB I",
    "start": "3404749",
    "end": "3411739"
  },
  {
    "text": "don't have the ability to have multi document transactions but there are some cases in which we do have the ability to",
    "start": "3411739",
    "end": "3418130"
  },
  {
    "text": "have like transactions just beyond just that one single document so for the last",
    "start": "3418130",
    "end": "3424069"
  },
  {
    "text": "part I'm going to talk about some of the like more I guess some more normal scenarios that have run into on a daily",
    "start": "3424069",
    "end": "3430219"
  },
  {
    "text": "basis because most of my clients don't",
    "start": "3430219",
    "end": "3435890"
  },
  {
    "text": "actually use document databases you know they're not that I don't know they're",
    "start": "3435890",
    "end": "3442130"
  },
  {
    "text": "not that brave to be able to run these kinds of things in production almost the time they've got like they just got",
    "start": "3442130",
    "end": "3447769"
  },
  {
    "start": "3445000",
    "end": "3540000"
  },
  {
    "text": "regular databases and regular applications but they still can't do these coordinated transactions so some",
    "start": "3447769",
    "end": "3453950"
  },
  {
    "text": "of the things I typically run into in a production kind of scenario I'm not using MongoDB I'm using sequel server",
    "start": "3453950",
    "end": "3460369"
  },
  {
    "text": "but I am using some kind of broker or message queue that doesn't support",
    "start": "3460369",
    "end": "3465920"
  },
  {
    "text": "transactions between those two things so how do I approach these scenarios when I",
    "start": "3465920",
    "end": "3471650"
  },
  {
    "text": "have these two things that I really like they're normal things that everyone works with but I can't put these two",
    "start": "3471650",
    "end": "3477049"
  },
  {
    "text": "things in a transaction so how do I approach it using these patterns as we saw earlier well the first thing I do is",
    "start": "3477049",
    "end": "3482390"
  },
  {
    "text": "I try to find what are my transactional boundaries what are the things that I can absolutely guarantee can either succeed or fail for each of the",
    "start": "3482390",
    "end": "3489079"
  },
  {
    "text": "resources I'm dealing with so in MongoDB the transactional boundaries each individual documents but for sequel",
    "start": "3489079",
    "end": "3496910"
  },
  {
    "text": "server its it's the whole database right want to make a connection open a transaction I can write to multiple",
    "start": "3496910",
    "end": "3502849"
  },
  {
    "text": "tables multiple rows and see of a single transaction and that can also cedar from hit or fail but I can't coordinate that",
    "start": "3502849",
    "end": "3509480"
  },
  {
    "text": "sequel server with that RabbitMQ queue so what I have to do is introduce that outbox pattern to be able to coordinate",
    "start": "3509480",
    "end": "3515570"
  },
  {
    "text": "those activities between writing something to the database and writing something to a queue so what we'll do is",
    "start": "3515570",
    "end": "3522050"
  },
  {
    "text": "introduce an outbox table and instead of having each document have its own inbox",
    "start": "3522050",
    "end": "3527270"
  },
  {
    "text": "and outbox I'll just create tables inside a sequel server for those inboxes and for those ad boxes so my train might",
    "start": "3527270",
    "end": "3534020"
  },
  {
    "text": "whatever my transactional boundary is is the scope in which I put my inbox and my",
    "start": "3534020",
    "end": "3539240"
  },
  {
    "text": "outbox what about micro-services right because",
    "start": "3539240",
    "end": "3544580"
  },
  {
    "start": "3540000",
    "end": "3600000"
  },
  {
    "text": "we're all doing that today right everyone's doing micro-services in those I have boundaries around each of my each",
    "start": "3544580",
    "end": "3551000"
  },
  {
    "text": "of my service boundaries and so each service owns its own sequel or whatever data store it has so for each of those",
    "start": "3551000",
    "end": "3557780"
  },
  {
    "text": "I'll have its own individual outbox then a to dispatch messages to external",
    "start": "3557780",
    "end": "3562970"
  },
  {
    "text": "services so my dispatcher will read messages out of that outbox of whatever that outbox is and need to forward that",
    "start": "3562970",
    "end": "3570230"
  },
  {
    "text": "message on to some kind of broker but what we don't want to do is just directly expose those internal like see",
    "start": "3570230",
    "end": "3576230"
  },
  {
    "text": "Sharpie messages from my own internal store to the outside world so we'll have some kind of translator that translates",
    "start": "3576230",
    "end": "3582170"
  },
  {
    "text": "those internal messages into what I want to actually expose to other services other interested parties so those",
    "start": "3582170",
    "end": "3588680"
  },
  {
    "text": "messages will eventually be consumed by my other service the other service will receive those messages from the outside",
    "start": "3588680",
    "end": "3595580"
  },
  {
    "text": "world pass them on through a dispatcher and then that own dispatcher will have whatever it means to have its own inbox",
    "start": "3595580",
    "end": "3601099"
  },
  {
    "text": "whatever it's doing buying the scenes so in this picture and maybe to sequel server databases but it could be one",
    "start": "3601099",
    "end": "3607820"
  },
  {
    "text": "Kaiser cosmos TV database one sequel database it could be neo4j n1n and I",
    "start": "3607820",
    "end": "3615380"
  },
  {
    "text": "don't know Cassandra on the other but the general idea is that I will have to have some way of keeping track of who",
    "start": "3615380",
    "end": "3621680"
  },
  {
    "text": "I've told what in order to make sure that when I receive communication how I",
    "start": "3621680",
    "end": "3626950"
  },
  {
    "text": "I then done this operation before so our overall lessons from here distributor",
    "start": "3626950",
    "end": "3633520"
  },
  {
    "text": "transactions are super easy when there is no network like you can turn on all the services on your box then",
    "start": "3633520",
    "end": "3638920"
  },
  {
    "text": "everything's gonna work great but as soon as you go to production that's when things get hard so when do you when you start to actually",
    "start": "3638920",
    "end": "3644710"
  },
  {
    "text": "distribute resources distributed transactions or hard or in a lot of cases just plain impossible so in order",
    "start": "3644710",
    "end": "3651640"
  },
  {
    "text": "to work a way around this we have to find what is the transactional boundary but behind each of those resources and",
    "start": "3651640",
    "end": "3657220"
  },
  {
    "text": "introduce an out box in each of those resources to be able to facilitate communication between each of those",
    "start": "3657220",
    "end": "3663550"
  },
  {
    "text": "transactional boundaries so that was finding life beyond distributed",
    "start": "3663550",
    "end": "3670780"
  },
  {
    "text": "transactions and apostates actual implementation with real code that does work if I'm not actually on the network",
    "start": "3670780",
    "end": "3676119"
  },
  {
    "text": "I guess so if you want more information about this I've got a whole blog series about each of these patterns one step at",
    "start": "3676119",
    "end": "3682210"
  },
  {
    "text": "a time on my blog otherwise you can find the actual working example out of my github.com /j bogart otherwise i hope",
    "start": "3682210",
    "end": "3689440"
  },
  {
    "text": "you enjoyed it I hope you have a great rest of the conference thank you [Applause]",
    "start": "3689440",
    "end": "3701419"
  }
]