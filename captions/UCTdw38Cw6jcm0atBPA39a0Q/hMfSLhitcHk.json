[
  {
    "text": "right are we ready to start okay welcome everybody this",
    "start": "6759",
    "end": "12080"
  },
  {
    "text": "session is about audio programming uh in sear uh it's a topic that I'm uh very",
    "start": "12080",
    "end": "18880"
  },
  {
    "text": "interested in uh it's a real privilege to be able to speak about it today just quickly introduce myself uh my name is",
    "start": "18880",
    "end": "26119"
  },
  {
    "text": "Mark Heath uh I'm a plural site author I've created over 20 courses on plural site three of them are about audio um",
    "start": "26119",
    "end": "34719"
  },
  {
    "text": "nobody watches those but most of them most the other ones are about Azure and microservices and that kind of thing um",
    "start": "34719",
    "end": "42160"
  },
  {
    "text": "because my day job is working um with Azure um building software for the",
    "start": "42160",
    "end": "48399"
  },
  {
    "text": "police and um the re probably the most relevant thing for today's talk is that",
    "start": "48399",
    "end": "53520"
  },
  {
    "text": "I'm the author of An Open Source Library called n audio which attempts to enable you to do audio programming on The NET",
    "start": "53520",
    "end": "60680"
  },
  {
    "text": "Framework and so this talk is kind of a bit of a story really of how I came to",
    "start": "60680",
    "end": "66200"
  },
  {
    "text": "create an audio and some of the challenges that I faced along the way so we'll talk a bit about some of the c um",
    "start": "66200",
    "end": "74360"
  },
  {
    "text": "aspects of it and I'm hoping I might even at the very end have a time for a very short demo um so let's dive in",
    "start": "74360",
    "end": "82079"
  },
  {
    "text": "because there's quite a lot to cover and the story starts actually in the last",
    "start": "82079",
    "end": "87119"
  },
  {
    "text": "Millennium how many of you are old enough that your career started in the last Millennium and back back in the day",
    "start": "87119",
    "end": "95000"
  },
  {
    "text": "we would typically use a variety of languages so I was doing C C++",
    "start": "95000",
    "end": "100360"
  },
  {
    "text": "programming but I was also using things like Python and Visual Basic and the idea was that each",
    "start": "100360",
    "end": "107040"
  },
  {
    "text": "language was good at different types of thing and of course um C is a compiled",
    "start": "107040",
    "end": "114000"
  },
  {
    "text": "language that means you compile it into machine code whereas some of these other languages are what's called interpreted",
    "start": "114000",
    "end": "119479"
  },
  {
    "text": "language languages and that means that as you're running your program it's being your source code is being",
    "start": "119479",
    "end": "125759"
  },
  {
    "text": "converted into machine code on the Fly and so the general understanding was that if you wanted fast and often with",
    "start": "125759",
    "end": "132760"
  },
  {
    "text": "audio programming you want your code to run very fast then you should be in the world of c and",
    "start": "132760",
    "end": "139920"
  },
  {
    "text": "C++ also if you want it to go low level if you want it to call um Windows uh",
    "start": "139920",
    "end": "146239"
  },
  {
    "text": "apis or if you wanted to communicate with uh devices you would want to be in the world of c um but of course the",
    "start": "146239",
    "end": "154599"
  },
  {
    "text": "downside of c and C++ was it gives you many ways to shoot yourself in the foot",
    "start": "154599",
    "end": "159920"
  },
  {
    "text": "and so often we would do as much as we could in the interpreted languages um because",
    "start": "159920",
    "end": "166239"
  },
  {
    "text": "they did nice things like abstract the operating system away and allow us to do what we called rad rapid application",
    "start": "166239",
    "end": "173920"
  },
  {
    "text": "development but it was about this time that I stumbled across Java sort of the very end of the 90s and Java was",
    "start": "173920",
    "end": "180720"
  },
  {
    "text": "interesting because it didn't fit very neatly into either of these two worlds um Java basically you compile into bike",
    "start": "180720",
    "end": "188519"
  },
  {
    "text": "code which those how many people here are net developers so you'll be familiar",
    "start": "188519",
    "end": "194040"
  },
  {
    "text": "with Intermediate Language it's a it's a similar basically the same concept really and you compile your code into",
    "start": "194040",
    "end": "199879"
  },
  {
    "text": "bik code and then a virtual machine in this case the Java virtual machine and the Java runtime environments we run",
    "start": "199879",
    "end": "206360"
  },
  {
    "text": "that by making use of the Just in Time compiler so it's actually compiling your",
    "start": "206360",
    "end": "211599"
  },
  {
    "text": "code as it runs but it's doing it in a more efficient way than typically the interpreted ones will do because once",
    "start": "211599",
    "end": "217200"
  },
  {
    "text": "you've compiled um part of your code you don't need to re recompile it to run it",
    "start": "217200",
    "end": "222680"
  },
  {
    "text": "again it also came with a slightly different approach to garbage collection or to memory management using the",
    "start": "222680",
    "end": "229400"
  },
  {
    "text": "garbage collector and that's going to be very relevant to us later on and so I started using Java and in my mind it was",
    "start": "229400",
    "end": "237680"
  },
  {
    "text": "kind of still in the slow category you wouldn't dream of doing audio programming in Java and then I came",
    "start": "237680",
    "end": "244799"
  },
  {
    "text": "across this project called Java layer and what Java layer is is a fully",
    "start": "244799",
    "end": "250360"
  },
  {
    "text": "written in Java decoder for MP3 files of course this was the late '90s so all of",
    "start": "250360",
    "end": "255760"
  },
  {
    "text": "us were ripping our CD collections to mp3s and playing them on Winamp and so",
    "start": "255760",
    "end": "261799"
  },
  {
    "text": "MP3 was all the rage and what really impressed me with this project was not only could it decode MP3s to PCM but it",
    "start": "261799",
    "end": "269880"
  },
  {
    "text": "included a player so it could play them in real time um and Java had got the",
    "start": "269880",
    "end": "275160"
  },
  {
    "text": "rappers in a package called Java x. audio that could write to the sound card",
    "start": "275160",
    "end": "281120"
  },
  {
    "text": "and so this kind of blew my mind I was not expecting um Java to be able to do this and actually this project is one of",
    "start": "281120",
    "end": "288720"
  },
  {
    "text": "the first ones I converted to net um and it's available um on GitHub if you want",
    "start": "288720",
    "end": "295000"
  },
  {
    "text": "a fully managed MP3 decoder I've Rewritten it um well it's been Rewritten three times time since I initially did",
    "start": "295000",
    "end": "301240"
  },
  {
    "text": "it um but it's available at n layer on GitHub and of course not much later net",
    "start": "301240",
    "end": "309639"
  },
  {
    "text": "came out and the thing I liked about net was it was a much more windows friendly",
    "start": "309639",
    "end": "315120"
  },
  {
    "text": "um development environment than Java um Java was very much",
    "start": "315120",
    "end": "320960"
  },
  {
    "text": "um very much more in the Linux world and when you built an application it didn't even look like a Windows application so",
    "start": "320960",
    "end": "327520"
  },
  {
    "text": "I was very interested in um in net and it came with multiple",
    "start": "327520",
    "end": "333440"
  },
  {
    "text": "languages it came with v you could program in vb.net which um was similar",
    "start": "333440",
    "end": "338560"
  },
  {
    "text": "to VB but all the VB6 programmers hated it uh you could program it actually in Java in visual jsh did anyone use that",
    "start": "338560",
    "end": "346759"
  },
  {
    "text": "I'm probably the only person I I actually converted that Java layer um to",
    "start": "346759",
    "end": "352639"
  },
  {
    "text": "net using visual J but Microsoft kind of got in legal trouble and that died there was also managed C++ where you could",
    "start": "352639",
    "end": "359560"
  },
  {
    "text": "write um net applications in C++ and in theory get the best of both worlds but I",
    "start": "359560",
    "end": "367000"
  },
  {
    "text": "I found it felt more like the worst of Both Worlds I I found it confusing to use but of course C has become the",
    "start": "367000",
    "end": "374039"
  },
  {
    "text": "flagship um language of net and when net first came out um you could download it",
    "start": "374039",
    "end": "381479"
  },
  {
    "text": "but you could also fill in a form for Microsoft to post you the net um beta uh",
    "start": "381479",
    "end": "387720"
  },
  {
    "text": "on CD and because I didn't have a very fast modem I opted to be posted the net",
    "start": "387720",
    "end": "393120"
  },
  {
    "text": "beta and the first thing I look for is where is the audio support where is the net equivalent to Java x. audio and to",
    "start": "393120",
    "end": "401479"
  },
  {
    "text": "my disappointment there was absolutely nothing no audio support and I thought maybe Microsoft would uh Rectify that",
    "start": "401479",
    "end": "409120"
  },
  {
    "text": "but basically they've they have never really done it maybe not until uh 2016",
    "start": "409120",
    "end": "416199"
  },
  {
    "text": "actually so I decided I'm going to start my own um open source project it's going",
    "start": "416199",
    "end": "422560"
  },
  {
    "text": "to be called n audio and my goal is going to be to make rappers a two goals",
    "start": "422560",
    "end": "427720"
  },
  {
    "text": "really one to make rappers for any um audio capabilities in Windows so",
    "start": "427720",
    "end": "433120"
  },
  {
    "text": "anything that windows can do with audio I wanted you to be able to do it in net and I also wanted to create building",
    "start": "433120",
    "end": "440080"
  },
  {
    "text": "blocks so common useful classes that if you're building a audio application in",
    "start": "440080",
    "end": "445360"
  },
  {
    "text": "net you'd be able to piece them together and make your application so my evenings",
    "start": "445360",
    "end": "450720"
  },
  {
    "text": "I got started and I worked my way through some initial features like audio",
    "start": "450720",
    "end": "456000"
  },
  {
    "text": "playback and recording I got working I gave it the ability to read and write",
    "start": "456000",
    "end": "461919"
  },
  {
    "text": "some of the most common audio file formats so the WAV file format some of you all know about in the midi file",
    "start": "461919",
    "end": "467120"
  },
  {
    "text": "format if any of you musicians um I had read and write support for those and I also really",
    "start": "467120",
    "end": "474680"
  },
  {
    "text": "wanted as I said to be able to play mp3s because that's what everybody's music collection ction was",
    "start": "474680",
    "end": "480919"
  },
  {
    "text": "in um but a couple of years after that I got a new job um started working for a",
    "start": "480919",
    "end": "486440"
  },
  {
    "text": "company called nice um I'm still there um almost 20 years later so I think that",
    "start": "486440",
    "end": "491879"
  },
  {
    "text": "says it is actually quite a nice place to work but nice were actually about to",
    "start": "491879",
    "end": "497039"
  },
  {
    "text": "embark on creating a brand new application called nice in form which was an incident reconstruction",
    "start": "497039",
    "end": "503479"
  },
  {
    "text": "application for use in public safety so for example the police might have lots",
    "start": "503479",
    "end": "509039"
  },
  {
    "text": "of recordings of 999 calls and recordings of police um radio",
    "start": "509039",
    "end": "516560"
  },
  {
    "text": "conversations as well as things like um dash cam videos and they wanted to piece it all together on on a timeline and to",
    "start": "516560",
    "end": "524320"
  },
  {
    "text": "play it back all in synchronization and it occurred to me this was this was the",
    "start": "524320",
    "end": "531160"
  },
  {
    "text": "moment for n audio and so I volunteered let me be the one to make the audio playback engine for this application and",
    "start": "531160",
    "end": "539320"
  },
  {
    "text": "although my vision for n audio had always been about music that was kind of my passion and my hobby I love doing a",
    "start": "539320",
    "end": "545440"
  },
  {
    "text": "bit of home studio recording and I wanted an audio to enable people musicians to write code um actually a",
    "start": "545440",
    "end": "552480"
  },
  {
    "text": "lot of the things I needed for this voice-based application were very similar to what you might need in a",
    "start": "552480",
    "end": "558760"
  },
  {
    "text": "digital audio workstation so I had to implement things like variable speed playback um there was some basic effects",
    "start": "558760",
    "end": "566079"
  },
  {
    "text": "like automatic gain control so if somebody's talking too quietly you boost the level um I had to be able",
    "start": "566079",
    "end": "572680"
  },
  {
    "text": "to cope with the fact that the Audio I was playing wasn't fully downloaded so it was downloading while you were",
    "start": "572680",
    "end": "578560"
  },
  {
    "text": "playing so you had to kind of automatically pause and resume I had to deal with audio and",
    "start": "578560",
    "end": "585480"
  },
  {
    "text": "video synchronization which is absolutely horrible um I don't know if anybody has tried to sync two just two",
    "start": "585480",
    "end": "591920"
  },
  {
    "text": "video players when you ask them to reposition they don't go to where you ask them they just go somewhere roughly",
    "start": "591920",
    "end": "598519"
  },
  {
    "text": "close and so you spend all your time then after repositioning trying to get them back to where they should be audio",
    "start": "598519",
    "end": "605560"
  },
  {
    "text": "actually is much easier to mix because with audio what you do is you don't if you've got three things to play you",
    "start": "605560",
    "end": "611880"
  },
  {
    "text": "don't open three instances of the sound card you basically mix it first so you've got perfect sample",
    "start": "611880",
    "end": "619079"
  },
  {
    "text": "synchronization and then you send that audio to the sound card and so n audio",
    "start": "619079",
    "end": "624560"
  },
  {
    "text": "has a 32-bit mixing engine and those of you who've done a a programming will",
    "start": "624560",
    "end": "630040"
  },
  {
    "text": "know that when you're mixing audio you want to be using floating Point numbers so you convert your audio to ia uh",
    "start": "630040",
    "end": "637920"
  },
  {
    "text": "floating Point um numbers and then you can mix them together it means you've got lots of headro you won't clip and",
    "start": "637920",
    "end": "644399"
  },
  {
    "text": "you can um reduce the volume if you've gone over before sending it to the sound card the sample rate was actually very",
    "start": "644399",
    "end": "651120"
  },
  {
    "text": "low if any of you are into music recording you'll know that you normally operate at much higher sample rates but",
    "start": "651120",
    "end": "657800"
  },
  {
    "text": "for telef and voice recording you often use very low sample rates because it reduces the bandwidth and human voice is",
    "start": "657800",
    "end": "664959"
  },
  {
    "text": "perfectly intelligible at quite um low sampling",
    "start": "664959",
    "end": "670959"
  },
  {
    "text": "rates um and I also had to do a bit of audio visualization drawing wave forms I've open sourced all of that you can",
    "start": "670959",
    "end": "677360"
  },
  {
    "text": "find that on GitHub um I did it both for Windows forms and for WPF because they",
    "start": "677360",
    "end": "683800"
  },
  {
    "text": "wanted to redact um bits of audio if it was going to court and perhaps one of",
    "start": "683800",
    "end": "689399"
  },
  {
    "text": "the most interesting things that this uh application was used for um was the investigation into the landing of the",
    "start": "689399",
    "end": "696600"
  },
  {
    "text": "plane on the Hudson River so they took all of the air traffic control recordings and the um blackbox",
    "start": "696600",
    "end": "702560"
  },
  {
    "text": "recordings and they pieced it all together in this program and used the the net audio engine to work out what",
    "start": "702560",
    "end": "708920"
  },
  {
    "text": "had happened and whether this um pilot had done the right thing or not I won't",
    "start": "708920",
    "end": "714760"
  },
  {
    "text": "spoil the movie for anyone who's not watched it now one thing um to just rewind slightly that I",
    "start": "714760",
    "end": "721240"
  },
  {
    "text": "realized when I offered to put my n audio code into a commercial program was",
    "start": "721240",
    "end": "727880"
  },
  {
    "text": "that um in most of us I don't has anyone actually read their contract of",
    "start": "727880",
    "end": "733440"
  },
  {
    "text": "employment so lot well done if you have but somewhere in there it probably says something like any code that you write",
    "start": "733440",
    "end": "740760"
  },
  {
    "text": "uh we think about while you're working for us belongs entirely to us and I realized that um this could be a problem",
    "start": "740760",
    "end": "748320"
  },
  {
    "text": "if I just stuck all of the N audio code and although n audio in my mind was an open source application because I had a",
    "start": "748320",
    "end": "756160"
  },
  {
    "text": "um Source Forge page for it and I couldn't work out how to use CVS at all",
    "start": "756160",
    "end": "761360"
  },
  {
    "text": "that completely confused me but occasionally I uploaded um zip files of builds I'd done I realized it needed to",
    "start": "761360",
    "end": "768680"
  },
  {
    "text": "be a bit more of a proper project and fortunately Microsoft had come out with codeplex now sadly dead which was an",
    "start": "768680",
    "end": "777079"
  },
  {
    "text": "open source hosting platform that Windows programmers could actually understand how to use which was nice um",
    "start": "777079",
    "end": "783240"
  },
  {
    "text": "and so I put an audio onto coplex and I gave it a license Microsoft decided that",
    "start": "783240",
    "end": "789040"
  },
  {
    "text": "none of the open source licenses were good enough and they would make up their own and so I gave it the Microsoft",
    "start": "789040",
    "end": "795800"
  },
  {
    "text": "public license which is a commercially friendly license and so that meant it could be taken into a closed Source um",
    "start": "795800",
    "end": "803160"
  },
  {
    "text": "commercial project it's I've now moved to GitHub and MIT licensing for it",
    "start": "803160",
    "end": "809279"
  },
  {
    "text": "so that's let me just check how we're doing for time that's a bit of a story about how the N audio project came to be",
    "start": "809279",
    "end": "816399"
  },
  {
    "text": "by the way going on to coplex was one of the best things that happened because it started to give the project more visibility and I got some really cool",
    "start": "816399",
    "end": "823360"
  },
  {
    "text": "contributions I'll hopefully have a chance uh to mention a couple of them but let's uh shift gears a bit now",
    "start": "823360",
    "end": "830000"
  },
  {
    "text": "and start talking about what it's like to do audio programming in c and onlet",
    "start": "830000",
    "end": "836120"
  },
  {
    "text": "and what are some of the challenges and the first first thing that I had to do tons and tons of was platform invoke so",
    "start": "836120",
    "end": "845560"
  },
  {
    "text": "basically reading C++ header files for all of the windows apis and working out",
    "start": "845560",
    "end": "851720"
  },
  {
    "text": "how to call them in net have any of you done any P invoke okay well done it's",
    "start": "851720",
    "end": "858800"
  },
  {
    "text": "it's can be quite painful but for those of you who've never done it before what you do is you basically tell net there",
    "start": "858800",
    "end": "865519"
  },
  {
    "text": "is a native implementation of this function so this example exle is wave in",
    "start": "865519",
    "end": "870839"
  },
  {
    "text": "get Dev caps so I'm asking what are the capabilities of this recording device and I use the extern keyword to",
    "start": "870839",
    "end": "878759"
  },
  {
    "text": "say it's in an external Library the dll import attribute is saying that it's in the win mm dll and then for all of the",
    "start": "878759",
    "end": "886959"
  },
  {
    "text": "parameters and return types you have to basically work out what is the equivalent net type that matches this",
    "start": "886959",
    "end": "894720"
  },
  {
    "text": "and so often in C they're they're using multiple layers of um hash defines so",
    "start": "894720",
    "end": "901360"
  },
  {
    "text": "you have to say well what is a w param or an L param or a dword eventually you work out how many bytes it is and you",
    "start": "901360",
    "end": "908279"
  },
  {
    "text": "put ins um for four bite um four bite integers um one of the mistakes I made",
    "start": "908279",
    "end": "915600"
  },
  {
    "text": "early on is that I I was quite lazy with interchanging int pointer with int",
    "start": "915600",
    "end": "920680"
  },
  {
    "text": "because everything was 32 bit back then of course when 64-bit Windows became a",
    "start": "920680",
    "end": "925720"
  },
  {
    "text": "thing everything broke and I had to make sure I was using in pointer correctly uh",
    "start": "925720",
    "end": "931480"
  },
  {
    "text": "everywhere um but often you have structures so C programmers love their",
    "start": "931480",
    "end": "936800"
  },
  {
    "text": "structures and so um you have to create your own equivalent uh structure so here",
    "start": "936800",
    "end": "942560"
  },
  {
    "text": "we've got a wave in caps structure and what you can do you can",
    "start": "942560",
    "end": "948399"
  },
  {
    "text": "actually use structs or classes in C they'll both work um but you have to lay",
    "start": "948399",
    "end": "954480"
  },
  {
    "text": "out your structure exactly as the c um structure is laid out and in fact this",
    "start": "954480",
    "end": "960759"
  },
  {
    "text": "attribute which is struck layout sequential is telling net you can't mess",
    "start": "960759",
    "end": "966600"
  },
  {
    "text": "with how you store this in memory it has to be exactly like this because native code is going to be reading out of it",
    "start": "966600",
    "end": "973000"
  },
  {
    "text": "and possibly even writing into it so it's got to be laid out exactly right",
    "start": "973000",
    "end": "978639"
  },
  {
    "text": "also if there's any c C++ programmers around here you'll know that there's many ways of dealing with strings and so",
    "start": "978639",
    "end": "986000"
  },
  {
    "text": "whenever you've got a string there's often an extra attribute you have to fill in to say this is how this string",
    "start": "986000",
    "end": "991959"
  },
  {
    "text": "is going to be passed around is it a pointer to a string is it a wide string um is it just a block of bites um that",
    "start": "991959",
    "end": "999959"
  },
  {
    "text": "the string is allowed to be in and might not even have an old Terminator um that kind of",
    "start": "999959",
    "end": "1005279"
  },
  {
    "text": "thing so I did tons and tons of that the next big challenge um is",
    "start": "1005279",
    "end": "1011800"
  },
  {
    "text": "garbage collection and on the whole I've only got good things to say about garbage collection",
    "start": "1011800",
    "end": "1018000"
  },
  {
    "text": "inet it just works it's really fast it's uses a very clever algorithm called a",
    "start": "1018000",
    "end": "1023480"
  },
  {
    "text": "generational Mark and sweep algorithm but it introduces two big problems for",
    "start": "1023480",
    "end": "1029079"
  },
  {
    "text": "audio programming and the first problem is the way that the garbage collector",
    "start": "1029079",
    "end": "1034160"
  },
  {
    "text": "Works in net is that every now and then not under your control it will decide to stop your application and by stop I mean",
    "start": "1034160",
    "end": "1041959"
  },
  {
    "text": "all of your thread stop so none of your code is running then it will look at all of the memory that's been allocated and",
    "start": "1041959",
    "end": "1048600"
  },
  {
    "text": "it will decide if any of it can be freed it will free it and then it's also allowed to move stuff around so it can",
    "start": "1048600",
    "end": "1055240"
  },
  {
    "text": "compact things and as I say it's very efficient and fast it doesn't always do a full collection sometimes it just like",
    "start": "1055240",
    "end": "1062440"
  },
  {
    "text": "a partial collection to make it quick um but the problem is if you want to do low",
    "start": "1062440",
    "end": "1069080"
  },
  {
    "text": "latency audio this can be a real pain and by low latency um what I mean is",
    "start": "1069080",
    "end": "1076039"
  },
  {
    "text": "Imagine I've got my midi keyboard here and I want to press press a note I want to immediately hear a sound I don't want",
    "start": "1076039",
    "end": "1082080"
  },
  {
    "text": "to push down the note and then half a second later I hear a sound that would make it almost impossible to play and",
    "start": "1082080",
    "end": "1088520"
  },
  {
    "text": "the way that low latency is achieved basically you give small buffers of audio to the sound card very regularly",
    "start": "1088520",
    "end": "1095200"
  },
  {
    "text": "so maybe 10 milliseconds sometimes it's smaller than that um but you might give the sound cards here's 10 milliseconds",
    "start": "1095200",
    "end": "1101640"
  },
  {
    "text": "of audio to play and while it's playing it you make the next 10 millisecond buffer and if you ever Miss",
    "start": "1101640",
    "end": "1109000"
  },
  {
    "text": "giving it a buffer you'll hear popping or crackling sounds in the audio and you certainly don't want that in live",
    "start": "1109000",
    "end": "1115559"
  },
  {
    "text": "performance so the fact that the garbage collector might get in and steal some of",
    "start": "1115559",
    "end": "1121320"
  },
  {
    "text": "your 10 milliseconds is a really big deal if you want to achieve low latency",
    "start": "1121320",
    "end": "1126440"
  },
  {
    "text": "um of course not every application does need low latency there's some applications where it's it's not a big",
    "start": "1126440",
    "end": "1131799"
  },
  {
    "text": "deal to have let's say half a second of of latency so it's not always a problem the other problem is the",
    "start": "1131799",
    "end": "1139200"
  },
  {
    "text": "compaction if I've given some native code a pointer to a memory address and",
    "start": "1139200",
    "end": "1144480"
  },
  {
    "text": "then that Mo the garbage color moves it you're going to get a very nasty crash um so what are the solutions to these",
    "start": "1144480",
    "end": "1151080"
  },
  {
    "text": "problems um the solution to the pauses you can't really stop the the garbage",
    "start": "1151080",
    "end": "1157280"
  },
  {
    "text": "collector from working but what you can do is do your best to write allocation free code so if you're using buffers in",
    "start": "1157280",
    "end": "1164840"
  },
  {
    "text": "particular pre-allocate your buffers don't create a new buffer every time but have a few buffers that you've",
    "start": "1164840",
    "end": "1170760"
  },
  {
    "text": "pre-allocated you fill them and then you reuse them as the sound card gives it back to",
    "start": "1170760",
    "end": "1176039"
  },
  {
    "text": "you of course if you've got a user interface on your application that it's kind of tough luck um win forms WPF",
    "start": "1176039",
    "end": "1183159"
  },
  {
    "text": "they're allocating memory all the time um so there will be uh garbage collections happening um in terms of the",
    "start": "1183159",
    "end": "1191240"
  },
  {
    "text": "um compaction there's two ways that you can do it one is you can um pin managed",
    "start": "1191240",
    "end": "1197880"
  },
  {
    "text": "objects you can tell the garbage collector you are not allowed to move this object and it won't move it um or",
    "start": "1197880",
    "end": "1204120"
  },
  {
    "text": "you can just decide you know what I'm not even going to ask um net to give me this memory I'm going to ask the",
    "start": "1204120",
    "end": "1209880"
  },
  {
    "text": "operating system so you can you can use native memory so just to quickly show",
    "start": "1209880",
    "end": "1215080"
  },
  {
    "text": "you a couple of techniques that you can use for pinning um things first um C is",
    "start": "1215080",
    "end": "1222039"
  },
  {
    "text": "actually got two very rarely used keywords the unsafe and fixed keywords",
    "start": "1222039",
    "end": "1227280"
  },
  {
    "text": "unsafe does a very good job of scaring most programmers away from using it but if you use an unsafe key keyword you can",
    "start": "1227280",
    "end": "1233480"
  },
  {
    "text": "have a fixed block where you actually get a pointer to a bite array and then",
    "start": "1233480",
    "end": "1238679"
  },
  {
    "text": "it will not move in memory but you can also do um casting which is very useful",
    "start": "1238679",
    "end": "1245200"
  },
  {
    "text": "and hopefully we'll talk about it again shortly um but fix the fixed block isn't",
    "start": "1245200",
    "end": "1250960"
  },
  {
    "text": "always suitable sometimes you need something to be pinned for even longer and so you can use the GC handle class",
    "start": "1250960",
    "end": "1257799"
  },
  {
    "text": "to add allocate a pinned handle and that basically tells the garbage collector you're not allowed to move this until I",
    "start": "1257799",
    "end": "1263840"
  },
  {
    "text": "free it later if you want to do use native",
    "start": "1263840",
    "end": "1269520"
  },
  {
    "text": "memory then the Marshall class in net is really useful it's got lots of helpful",
    "start": "1269520",
    "end": "1275720"
  },
  {
    "text": "methods you can basically allocate some memory from the operating system and just get a pointer to it and then you",
    "start": "1275720",
    "end": "1281919"
  },
  {
    "text": "can use methods like structure to pointer and there's also pointer to structure where you can copy from from a",
    "start": "1281919",
    "end": "1288320"
  },
  {
    "text": "c structure into a native pointer and vice versa and so that is another way of",
    "start": "1288320",
    "end": "1295080"
  },
  {
    "text": "getting pointers to things that are not going to move of course if you do that",
    "start": "1295080",
    "end": "1300159"
  },
  {
    "text": "you must remember to free memory just like if you're a c or C++ programmer otherwise you'll get memory leaks in",
    "start": "1300159",
    "end": "1306240"
  },
  {
    "text": "your application okay another interesting",
    "start": "1306240",
    "end": "1312159"
  },
  {
    "text": "question that came up several times in N audio was whether I should try to Port",
    "start": "1312159",
    "end": "1319000"
  },
  {
    "text": "um code from other languages to C or whether I should just write interop and",
    "start": "1319000",
    "end": "1325080"
  },
  {
    "text": "that particularly is the case when you're thinking about digital signal processing maybe some complicated",
    "start": "1325080",
    "end": "1330799"
  },
  {
    "text": "algorithms like Fast fer transforms um but also especially with",
    "start": "1330799",
    "end": "1336240"
  },
  {
    "text": "codecs so MP3 encoding and decoding AAC um all of these different codecs there's",
    "start": "1336240",
    "end": "1342360"
  },
  {
    "text": "often absolutely tons of code and complexity involved in implementing the",
    "start": "1342360",
    "end": "1347480"
  },
  {
    "text": "codec so I certainly wasn't going to do it myself and the choice is whether as I",
    "start": "1347480",
    "end": "1354200"
  },
  {
    "text": "say whether you do interrup to a dll that's got it something like lib faac or",
    "start": "1354200",
    "end": "1360679"
  },
  {
    "text": "um even FFM Peg or something like that or whether you try and get all of the code into c one of the advantages of the interrupt",
    "start": "1360679",
    "end": "1368320"
  },
  {
    "text": "approach is it's typically a lot less work the amount of code you have to write is way",
    "start": "1368320",
    "end": "1373520"
  },
  {
    "text": "less um theoretically maybe it runs FAS I'm not sure this isn't necessarily true",
    "start": "1373520",
    "end": "1379320"
  },
  {
    "text": "anymore but at least the dll that you've been given has been optimized to a high",
    "start": "1379320",
    "end": "1384880"
  },
  {
    "text": "degree and so you've only got the marshalling overhead of actually calling into it um it's much much easier to keep",
    "start": "1384880",
    "end": "1392960"
  },
  {
    "text": "up to date so if you take the trouble to Port a code base to C and then the next",
    "start": "1392960",
    "end": "1398400"
  },
  {
    "text": "week they do surprise is a new version um having to P all of the changes is a",
    "start": "1398400",
    "end": "1404320"
  },
  {
    "text": "real pain in the neck um and and it also helps you just",
    "start": "1404320",
    "end": "1410120"
  },
  {
    "text": "avoid porting bugs I've spent far more time than I wished I had in my career",
    "start": "1410120",
    "end": "1416000"
  },
  {
    "text": "porting code between different languages and you often find very subtle bugs can",
    "start": "1416000",
    "end": "1421360"
  },
  {
    "text": "get in particularly with things like bit bit shifting bit manipulation um the",
    "start": "1421360",
    "end": "1426799"
  },
  {
    "text": "syntax can be exactly the same between two languages but the implementation can be different like what happens to the",
    "start": "1426799",
    "end": "1432919"
  },
  {
    "text": "sign bit as you move things across um so it's nice to just avoid that but of",
    "start": "1432919",
    "end": "1438520"
  },
  {
    "text": "course the big downside is it can't run everywhere it can only run on the platforms that support that you've got a",
    "start": "1438520",
    "end": "1445320"
  },
  {
    "text": "binary for and so the advantage the big advantage of porting an algorithm is",
    "start": "1445320",
    "end": "1450960"
  },
  {
    "text": "that you've got fully managed code that is portable it can run on any operating system um back in the early days I I",
    "start": "1450960",
    "end": "1459200"
  },
  {
    "text": "used silver light a lot I thought Silver light was great and I could use the bits of n audio that didn't use P invoke in",
    "start": "1459200",
    "end": "1465799"
  },
  {
    "text": "silver light also found a number of people using an audio using Unity which I've never built anything in but they're",
    "start": "1465799",
    "end": "1472799"
  },
  {
    "text": "targeting IOS and Android and so they can't use anything um that I've just",
    "start": "1472799",
    "end": "1478440"
  },
  {
    "text": "done rappers for Windows apis so again having things native is really",
    "start": "1478440",
    "end": "1484600"
  },
  {
    "text": "useful and just as an example I needed resampling in N audio for a number of",
    "start": "1484600",
    "end": "1490960"
  },
  {
    "text": "problems where you're converting audio from one sample rate to another and at first I thought I could just do my own",
    "start": "1490960",
    "end": "1497240"
  },
  {
    "text": "algorithm um that turned out to be a mistake you actually need to know a bit about digital signal processing to do it well",
    "start": "1497240",
    "end": "1504880"
  },
  {
    "text": "um so I started making wrappers Windows has got several apis that let you um",
    "start": "1504880",
    "end": "1511720"
  },
  {
    "text": "wrap that let you do resampling the audio compression manager direct Tex and managed objects media Foundation",
    "start": "1511720",
    "end": "1518240"
  },
  {
    "text": "transforms so I did all of those um because different skools of Windows like",
    "start": "1518240",
    "end": "1523279"
  },
  {
    "text": "Windows Server will have one but not the other and windows um I don't support",
    "start": "1523279",
    "end": "1529159"
  },
  {
    "text": "Windows XP anymore but you know I supported many versions of Windows over the years",
    "start": "1529159",
    "end": "1536320"
  },
  {
    "text": "um but then I started to think well maybe I can Port somebody else's algorithm and the big trouble that you",
    "start": "1536320",
    "end": "1542440"
  },
  {
    "text": "run into is licensing almost all of the good audio code out there on the internet is GPL or lgpl which is not",
    "start": "1542440",
    "end": "1550679"
  },
  {
    "text": "compatible with the N audio license eventually I found um a resampler by a",
    "start": "1550679",
    "end": "1557120"
  },
  {
    "text": "company called cockos who make the reaper digital audio workstation which is the one I use and I got in touch with",
    "start": "1557120",
    "end": "1563600"
  },
  {
    "text": "them and they were okay with me porting it so I had a fully managed resampler in the",
    "start": "1563600",
    "end": "1570520"
  },
  {
    "text": "end okay let's talk about Windows audio apis I kind of feel like I know way more",
    "start": "1570720",
    "end": "1577760"
  },
  {
    "text": "than I wish I did about all the windows audio apis but Microsoft have many apis for audio the first one",
    "start": "1577760",
    "end": "1586760"
  },
  {
    "text": "is whenn m M and wimm has been in Windows since the very early days was in",
    "start": "1586760",
    "end": "1592720"
  },
  {
    "text": "there since 1991 and if you've seen any of the apis that begin with wave in wave out and",
    "start": "1592720",
    "end": "1599919"
  },
  {
    "text": "there's some midi ones there's mixer ones um they're they've they've all been been in there for ages they're all still",
    "start": "1599919",
    "end": "1606120"
  },
  {
    "text": "supported you can still use them they work absolutely fine uh they are unfortunately High latency so you're not",
    "start": "1606120",
    "end": "1613360"
  },
  {
    "text": "going to be able to do live music performances with them you you can't really get below 50 milliseconds at at",
    "start": "1613360",
    "end": "1620600"
  },
  {
    "text": "the lowest with them um but those were the first ones I did and actually",
    "start": "1620600",
    "end": "1626440"
  },
  {
    "text": "probably the wrappers I've made for those are still the widest used um I did",
    "start": "1626440",
    "end": "1631480"
  },
  {
    "text": "run into a number of problems that it gives you a choice of callback methods so when the sound card tells you that",
    "start": "1631480",
    "end": "1637559"
  },
  {
    "text": "it's finished playing a buffer of audio you can choose for it to directly call a",
    "start": "1637559",
    "end": "1643120"
  },
  {
    "text": "function um which sounded a great idea but I realized that you've got to be super careful what you do in that",
    "start": "1643120",
    "end": "1648919"
  },
  {
    "text": "function or you'll get a deadlock um and you can get posted a Windows message",
    "start": "1648919",
    "end": "1654600"
  },
  {
    "text": "which was much more reliable but then it forced everyone to take a dependency on Wind forms which not everyone liked um",
    "start": "1654600",
    "end": "1661600"
  },
  {
    "text": "but you can also use mutexes so you can wait on a mutex and that's actually the",
    "start": "1661600",
    "end": "1666919"
  },
  {
    "text": "best way and the way that I recommend people use an audio but then in 2007 Microsoft decided",
    "start": "1666919",
    "end": "1674600"
  },
  {
    "text": "to break everything and reinvent everything with Windows uh with Vista to",
    "start": "1674600",
    "end": "1679840"
  },
  {
    "text": "um Windows Vista and there was a complete refresh of the audio stack so I",
    "start": "1679840",
    "end": "1685559"
  },
  {
    "text": "think waspp is the Windows audio subsystem API and it was a it's a",
    "start": "1685559",
    "end": "1691200"
  },
  {
    "text": "massive sprawling API it's got hundreds of things in it I haven't I still haven't finished writing rappers for all",
    "start": "1691200",
    "end": "1698159"
  },
  {
    "text": "of it uh it's also a com based API which brings some interesting",
    "start": "1698159",
    "end": "1704240"
  },
  {
    "text": "headaches of its own particularly about threading if you create an object on one thread and then try and use it on",
    "start": "1704240",
    "end": "1709320"
  },
  {
    "text": "another thread depending on what type of object it is it will not work um but it",
    "start": "1709320",
    "end": "1716279"
  },
  {
    "text": "had the the concept of exclusive mode or shared mode so when I'm playing audio I can say I either want to share the sound",
    "start": "1716279",
    "end": "1723919"
  },
  {
    "text": "code sound card with other um other programs or I want exclusive access and",
    "start": "1723919",
    "end": "1730320"
  },
  {
    "text": "if I've got exclusive access then I can have much lower latency it also had um it also basically",
    "start": "1730320",
    "end": "1738399"
  },
  {
    "text": "when it initially came out you had to give it audio as floating Point samples and you had to give it audio at whatever",
    "start": "1738399",
    "end": "1745200"
  },
  {
    "text": "the sample rate the sound card happened to be at so if somebody had just watched a DVD you had to give it 48 khz audio",
    "start": "1745200",
    "end": "1753000"
  },
  {
    "text": "and if they just played a CD you had to give it 44.1 and that was really annoying because um it had no resampler",
    "start": "1753000",
    "end": "1760880"
  },
  {
    "text": "it does have a resampler now but that's why I needed a resampler for n audio to",
    "start": "1760880",
    "end": "1765960"
  },
  {
    "text": "cope with this um it's also got some other nice features like loot back capture so you",
    "start": "1765960",
    "end": "1771919"
  },
  {
    "text": "can record the audio that's being played by your system while it's being played",
    "start": "1771919",
    "end": "1777279"
  },
  {
    "text": "um and so was zappi actually is probably now the way I recommend that you you use",
    "start": "1777279",
    "end": "1783640"
  },
  {
    "text": "uh n audio but it's only recently really that it's become better choice for most",
    "start": "1783640",
    "end": "1789000"
  },
  {
    "text": "people than win mm then in 2016 Microsoft decided to",
    "start": "1789000",
    "end": "1794440"
  },
  {
    "text": "make yet another audio API and this was for the universal windows platform it's",
    "start": "1794440",
    "end": "1799840"
  },
  {
    "text": "called audiograph and what's cool about this one is it's already allnet um objects so you can directly",
    "start": "1799840",
    "end": "1808080"
  },
  {
    "text": "without having to do wrapper layer you can use audiograph in",
    "start": "1808080",
    "end": "1813600"
  },
  {
    "text": "net and I was quite excited about this I made a plural site course about it that um I thought was really good but",
    "start": "1813600",
    "end": "1819559"
  },
  {
    "text": "absolutely nobody watched it and um it's got a graph-based",
    "start": "1819559",
    "end": "1824799"
  },
  {
    "text": "API um and I actually think that's the best way to design an API for audio",
    "start": "1824799",
    "end": "1830559"
  },
  {
    "text": "programming the concept of a graph where you're connecting things together",
    "start": "1830559",
    "end": "1836120"
  },
  {
    "text": "um I would say it's the best I it had potential to replace in audio because",
    "start": "1836120",
    "end": "1842559"
  },
  {
    "text": "many of the things in audio can do audiograph can do it has one fatal",
    "start": "1842559",
    "end": "1847640"
  },
  {
    "text": "limitation and that is you cannot make a node that transforms",
    "start": "1847640",
    "end": "1852760"
  },
  {
    "text": "audio that um does an effect the only way you can do an effect is you have you have to make a a com object separate",
    "start": "1852760",
    "end": "1859840"
  },
  {
    "text": "project Implement a com object and then load that into your other program which is just a pain in the neck so I really",
    "start": "1859840",
    "end": "1867159"
  },
  {
    "text": "hope they fix that at some point um but I'm not using it because of that",
    "start": "1867159",
    "end": "1873120"
  },
  {
    "text": "limitation the final one I want to mention is not a Microsoft One um and",
    "start": "1873120",
    "end": "1878279"
  },
  {
    "text": "that's asio anybody familiar with that maybe if you do music recording you will",
    "start": "1878279",
    "end": "1883440"
  },
  {
    "text": "know that anyone who is um doing large music or music recording will not use",
    "start": "1883440",
    "end": "1889960"
  },
  {
    "text": "any of the windows apis because they're all unreliable and dodgy and this um",
    "start": "1889960",
    "end": "1895960"
  },
  {
    "text": "interface created by Steinberg in 97 is the best for absolute super low",
    "start": "1895960",
    "end": "1902679"
  },
  {
    "text": "latency if you want to get the minimal latency and you've bought a nice sound card um AIO is great for that and one of",
    "start": "1902679",
    "end": "1910399"
  },
  {
    "text": "the cool things about being an open source project is every now and then someone will contribute something that's really good and somebody contributed a",
    "start": "1910399",
    "end": "1917480"
  },
  {
    "text": "wrau AO into an audio which I think is brilliant um it's a little bit um",
    "start": "1917480",
    "end": "1924080"
  },
  {
    "text": "different the way it works in that record and Playback are together in AO",
    "start": "1924080",
    "end": "1929360"
  },
  {
    "text": "so um they're not treated as separate devices and that's actually good if you're recording because you want to",
    "start": "1929360",
    "end": "1935639"
  },
  {
    "text": "synchronize you want to know that th this um while I was listening to the backing track and I played this on my",
    "start": "1935639",
    "end": "1942120"
  },
  {
    "text": "guitar It lines up exactly here so AIO works really well for that",
    "start": "1942120",
    "end": "1949080"
  },
  {
    "text": "okay so I talked about um when I mentioned the audio graph that that is I think a",
    "start": "1950240",
    "end": "1956279"
  },
  {
    "text": "good way of doing um an audio API um but what is the um fundamental way that we",
    "start": "1956279",
    "end": "1963840"
  },
  {
    "text": "should design audio apis and I've already hinted at this that with audio",
    "start": "1963840",
    "end": "1969120"
  },
  {
    "text": "we're often connecting things together into signal chains we've got a guitar that produces some sound we plug it into",
    "start": "1969120",
    "end": "1975480"
  },
  {
    "text": "one effect we plug that into another we go to our amplifier and in audio",
    "start": "1975480",
    "end": "1981039"
  },
  {
    "text": "programming it can actually be more complicated than that we might have multiple things that are producing sound",
    "start": "1981039",
    "end": "1986159"
  },
  {
    "text": "so I might have a microphone and I might also have a pre-recorded file I might",
    "start": "1986159",
    "end": "1992080"
  },
  {
    "text": "put an effect on the microphone so actually transforming the sound as it passes through like Reverb or I might",
    "start": "1992080",
    "end": "1998399"
  },
  {
    "text": "not be transforming it I might be doing visualization so I might want to draw a volume meter or a",
    "start": "1998399",
    "end": "2004240"
  },
  {
    "text": "waveform um but then we want to mix our audio together um and then you might",
    "start": "2004240",
    "end": "2009360"
  },
  {
    "text": "actually send it to multiple outputs so you might send it to a sound card and you might also write it to a file you",
    "start": "2009360",
    "end": "2016200"
  },
  {
    "text": "might send it over the network stream it or something um and so n audio tries to enable you to do this and we won't have",
    "start": "2016200",
    "end": "2023880"
  },
  {
    "text": "time to go into all of the um API of n audio but probably the two most important interfaces to understand the",
    "start": "2023880",
    "end": "2031360"
  },
  {
    "text": "audio graph are the I wave provider and the I sample provider now now iWave provider is",
    "start": "2031360",
    "end": "2038279"
  },
  {
    "text": "basically saying I can give you audio data and so I need two things if you can",
    "start": "2038279",
    "end": "2043960"
  },
  {
    "text": "give me audio data I need to know what format your audio is in is it mono or stereo what sample rate is it are you",
    "start": "2043960",
    "end": "2050638"
  },
  {
    "text": "using integer bit uh samples are you using um floating point maybe you're",
    "start": "2050639",
    "end": "2055839"
  },
  {
    "text": "still compressed maybe it's like an AAC file so that's what the wave format property is for but then the read method",
    "start": "2055839",
    "end": "2062679"
  },
  {
    "text": "is just saying I want to read a number of btes of audio out of the Stream into my buffer and I'm sure if your net",
    "start": "2062679",
    "end": "2070240"
  },
  {
    "text": "programmers you all have used streams and this is exactly how streams work a file stream a network stream any stream",
    "start": "2070240",
    "end": "2077878"
  },
  {
    "text": "um can you has a read method that lets you read into a buffer so it's essentially taking the same",
    "start": "2077879",
    "end": "2085200"
  },
  {
    "text": "idea however if you've done any audio programming you'll know you don't really want bite eras you want to get at the",
    "start": "2085200",
    "end": "2092638"
  },
  {
    "text": "samples and samples can be in they can be 16bit they can 24 bits sometimes um but really if you",
    "start": "2092639",
    "end": "2101119"
  },
  {
    "text": "want to do digital signal processing or mixing you want floating Point samples and so I sample provider is exactly the",
    "start": "2101119",
    "end": "2108599"
  },
  {
    "text": "same thing but you've get you're getting floating Point samples and so that makes",
    "start": "2108599",
    "end": "2113800"
  },
  {
    "text": "it much easier for you to um work on them so my recommendation with n audio is to get a sample provider as fast as",
    "start": "2113800",
    "end": "2121560"
  },
  {
    "text": "you can and then do all of your processing um that you need to do and N audio tries to help help you with this",
    "start": "2121560",
    "end": "2127400"
  },
  {
    "text": "there's a number of classes that kind of try and get you pretty much straight",
    "start": "2127400",
    "end": "2132960"
  },
  {
    "text": "there now one of the Troubles of going from a biter rate to a um floater rate",
    "start": "2132960",
    "end": "2139200"
  },
  {
    "text": "is that casting and this is very difficult in CP so if I have a bite",
    "start": "2139200",
    "end": "2145359"
  },
  {
    "text": "array that's got some audio in it and actually I know that really in that bite array are floating Point numbers you",
    "start": "2145359",
    "end": "2152480"
  },
  {
    "text": "cannot just cast it to a floating a float array that will not compile and so I was looking for a solution for",
    "start": "2152480",
    "end": "2159720"
  },
  {
    "text": "this for an audio because I wanted to cast because that's fast but Net's not",
    "start": "2159720",
    "end": "2165400"
  },
  {
    "text": "going to let me do it so one of the options is to use that unsafe and fixed keyword so that is how I initially did",
    "start": "2165400",
    "end": "2172000"
  },
  {
    "text": "it it does work but it puts off a lot of programmers a lot of people don't feel",
    "start": "2172000",
    "end": "2177599"
  },
  {
    "text": "confident doing that in their code and understanding how to do it so I was also looking for other ways you can um copy",
    "start": "2177599",
    "end": "2185560"
  },
  {
    "text": "things around so you can say okay I've got a bite array and I'm going to move everything over into float array of",
    "start": "2185560",
    "end": "2190680"
  },
  {
    "text": "course that's a performance problem you don't really want to do that and then came another genius slightly mad genius",
    "start": "2190680",
    "end": "2199440"
  },
  {
    "text": "um contribution to n audio which was what's called The Wave buffer and the wave buffer",
    "start": "2199440",
    "end": "2206520"
  },
  {
    "text": "basically uses a trick in net that is designed for when you're using unions uh",
    "start": "2206520",
    "end": "2213640"
  },
  {
    "text": "where you're doing interrupt to unions and C++ is anyone familiar with what a union is so in C++ it's very common in",
    "start": "2213640",
    "end": "2222000"
  },
  {
    "text": "your structure to say at this memory address there might be one of these or there might be one of those or there might be something else and the way that",
    "start": "2222000",
    "end": "2228760"
  },
  {
    "text": "you represent that in net is you say that I've got an explicit structure and",
    "start": "2228760",
    "end": "2234040"
  },
  {
    "text": "that I'm going to tell you the exact address or the exact offset in the structure of every member and what you",
    "start": "2234040",
    "end": "2240920"
  },
  {
    "text": "can do is therefore you can put several things at the same offset so you can tell net that at the same offset in my",
    "start": "2240920",
    "end": "2246960"
  },
  {
    "text": "structure same memory address there's a bite array and a float array and a short array it turns out if you do this you",
    "start": "2246960",
    "end": "2254000"
  },
  {
    "text": "can write into the bite array and you can read out of the float array and I",
    "start": "2254000",
    "end": "2259359"
  },
  {
    "text": "was a bit scared I did not believe this is going to work it has worked flawlessly for 20 years um and basically",
    "start": "2259359",
    "end": "2267079"
  },
  {
    "text": "it gives me casting um there's one weird Quirk that if you ask if you try and ask",
    "start": "2267079",
    "end": "2272520"
  },
  {
    "text": "the float array how long you are it won't it'll be confused about how long it is so but apart from that it it",
    "start": "2272520",
    "end": "2279800"
  },
  {
    "text": "works and so n audio is based on this little trick that saves us copying",
    "start": "2279800",
    "end": "2285200"
  },
  {
    "text": "memory or having to always go to fixed blocks however if only there was",
    "start": "2285200",
    "end": "2291280"
  },
  {
    "text": "something called span if only this had existed a long time ago have any of you used span of T um this is I can't",
    "start": "2291280",
    "end": "2300800"
  },
  {
    "text": "remember when it came in it was in fairly early in net core but 3.1 yeah",
    "start": "2300800",
    "end": "2307040"
  },
  {
    "text": "and this is this is perfect this is what we've needed forever basically I could",
    "start": "2307040",
    "end": "2312240"
  },
  {
    "text": "have I could change my wave provider and Sample provider to just say read into a",
    "start": "2312240",
    "end": "2317640"
  },
  {
    "text": "span of bite and what a span is basically it's saying I don't care",
    "start": "2317640",
    "end": "2324079"
  },
  {
    "text": "whether the the actual memory backing this is managed memory from um net or",
    "start": "2324079",
    "end": "2329720"
  },
  {
    "text": "native memory from the operating system I just want to be able to read in and out of it like it's an an array it's",
    "start": "2329720",
    "end": "2336800"
  },
  {
    "text": "also got length built in which is really convenient and you can slice them so you",
    "start": "2336800",
    "end": "2341960"
  },
  {
    "text": "don't have to have pass around all those length and offset parameters that you have to with",
    "start": "2341960",
    "end": "2347599"
  },
  {
    "text": "streams and it supports casting which is absolutely brilliant so I can be given a span of btes and I can say actually I",
    "start": "2347599",
    "end": "2354680"
  },
  {
    "text": "know that this has got floating Point numbers in it so you can using the memory marshall. cast you can um cast it",
    "start": "2354680",
    "end": "2363359"
  },
  {
    "text": "so that's brilliant I actually created in the N audio GitHub repository there is a branch where I've converted n audio",
    "start": "2363359",
    "end": "2371480"
  },
  {
    "text": "to span uh I did it a number of years back and I kind of put it out there to",
    "start": "2371480",
    "end": "2377440"
  },
  {
    "text": "the community what do you think and the vb.net people said oh we can't use span",
    "start": "2377440",
    "end": "2382800"
  },
  {
    "text": "um which surprised me I kind of imagined that you could do everything in in vb.net that you could in C but it kind",
    "start": "2382800",
    "end": "2389000"
  },
  {
    "text": "of ended up getting parked a little bit it would be quite a big breaking change but if I were ever to kind of do a n",
    "start": "2389000",
    "end": "2395560"
  },
  {
    "text": "audio version three I think um span would make much more sense and in fact",
    "start": "2395560",
    "end": "2402119"
  },
  {
    "text": "um net has made many strides forward since the early days when I started on NET Framework we now have net core which",
    "start": "2402119",
    "end": "2409160"
  },
  {
    "text": "is now just net um I love the fact that there's so much focus on performance it",
    "start": "2409160",
    "end": "2414560"
  },
  {
    "text": "is much faster and therefore it's becoming a much better platform for audio programming um and also the fact",
    "start": "2414560",
    "end": "2421000"
  },
  {
    "text": "that it's crossplatform so you can use n audio on Linux just don't try and call Windows apis because they're not there",
    "start": "2421000",
    "end": "2427960"
  },
  {
    "text": "um there's also much better support for things like function pointers you've got control over the actual Intermediate",
    "start": "2427960",
    "end": "2435560"
  },
  {
    "text": "Language that you emit which is really useful if you're doing some com interop",
    "start": "2435560",
    "end": "2440599"
  },
  {
    "text": "and the ilil that it emits isn't quite what you want um and we're also starting",
    "start": "2440599",
    "end": "2446200"
  },
  {
    "text": "to see a lot of code generation approaches to platform invoke um so there's a new library import attribute",
    "start": "2446200",
    "end": "2452119"
  },
  {
    "text": "that replaces dll import and will code gen the marshalling code for you",
    "start": "2452119",
    "end": "2457160"
  },
  {
    "text": "um and there's a library that Microsoft are maintaining of interrupt rappers although in some ways I kind of prefer",
    "start": "2457160",
    "end": "2464280"
  },
  {
    "text": "my handrolled interrupt rappers because you can choose the types that are most make most sense for your use case so",
    "start": "2464280",
    "end": "2471280"
  },
  {
    "text": "sometimes the Cen ones aren't actually very helpful so can you use let me just check",
    "start": "2471280",
    "end": "2478920"
  },
  {
    "text": "how much how we're doing for time we're okay can you use uh net for audio absolutely yes you can um I've shown you",
    "start": "2478920",
    "end": "2487160"
  },
  {
    "text": "my n audio project which I've used to build a lot of things but I also had contact with lots of other people who",
    "start": "2487160",
    "end": "2493480"
  },
  {
    "text": "built all kinds of stuff um I've got a fully managed MP3 decoder I've built one",
    "start": "2493480",
    "end": "2499920"
  },
  {
    "text": "of the things I made was a Skype voice changer that would intercept the audio and Skype calls and change your voice uh",
    "start": "2499920",
    "end": "2506119"
  },
  {
    "text": "put silly effects on sadly it doesn't work anymore but that is open source um I made a midi file mapping tool that if",
    "start": "2506119",
    "end": "2513680"
  },
  {
    "text": "you've got drum beats that are designed for one sample it converts them over to another sampler um I've actually built",
    "start": "2513680",
    "end": "2520280"
  },
  {
    "text": "several commercial products for voice and telep recording using net",
    "start": "2520280",
    "end": "2527960"
  },
  {
    "text": "um but maybe the slightly sad ending to this talk is the fact that um I started",
    "start": "2527960",
    "end": "2535079"
  },
  {
    "text": "n audio over 2002 how many years ago is that over 20 years ago and it was a fun",
    "start": "2535079",
    "end": "2542960"
  },
  {
    "text": "hobby project I was enjoying it I was I was doing it for fun but you know life circumstances change and I think a",
    "start": "2542960",
    "end": "2548760"
  },
  {
    "text": "number of Open Source projects in the net Community are going through this um situation where maybe their original",
    "start": "2548760",
    "end": "2555079"
  },
  {
    "text": "maintainers haven't got the time to work on them anymore and certainly I found that although I'm still doing audio",
    "start": "2555079",
    "end": "2561160"
  },
  {
    "text": "programming um I'm not typically doing it in net as much as I was I'm doing it in other languages dsls for audio",
    "start": "2561160",
    "end": "2568680"
  },
  {
    "text": "programming or JavaScript and so on and so I haven't actually had the need to",
    "start": "2568680",
    "end": "2574160"
  },
  {
    "text": "work on na audio as much so I would say that n audio is no longer under active development I do fix bugs I do accept",
    "start": "2574160",
    "end": "2581599"
  },
  {
    "text": "PRS I do answer questions almost every day but I'm not really working a lot on",
    "start": "2581599",
    "end": "2587480"
  },
  {
    "text": "adding new features to it and so it is open to new maintainers so if that's something that does interest you I'd be",
    "start": "2587480",
    "end": "2594280"
  },
  {
    "text": "very happy to have a chat but I think we have time for a very short",
    "start": "2594280",
    "end": "2601880"
  },
  {
    "text": "demo so let me unplug",
    "start": "2601880",
    "end": "2609440"
  },
  {
    "text": "this",
    "start": "2612720",
    "end": "2615720"
  },
  {
    "text": "and okay so let me just check what you can",
    "start": "2625960",
    "end": "2632520"
  },
  {
    "text": "see you see visual studio um don't worry about not being able to see the code basically this",
    "start": "2632520",
    "end": "2642039"
  },
  {
    "text": "program um what it does is it's first of all it's asking what audio devices have",
    "start": "2642400",
    "end": "2648119"
  },
  {
    "text": "I got and I'm actually using this Roland Groove box as a sound card and so I'm",
    "start": "2648119",
    "end": "2654200"
  },
  {
    "text": "going to pick that and then it's also going to ask what midi devices have I got and",
    "start": "2654200",
    "end": "2659839"
  },
  {
    "text": "I've got this little mini midi keyboard so it's going to listen to U midi messages that are being sent from this",
    "start": "2659839",
    "end": "2666079"
  },
  {
    "text": "midi device and um what it will do is that when I press a key on here it will",
    "start": "2666079",
    "end": "2672680"
  },
  {
    "text": "receive a midi message it will then use a synthesizer entirely written in um C",
    "start": "2672680",
    "end": "2679680"
  },
  {
    "text": "to synthesize a sound based on a file format called a sound font um this the",
    "start": "2679680",
    "end": "2685079"
  },
  {
    "text": "synthesizer isn't my work it's somebody else's project called melty synth that integrates really nicely within audio",
    "start": "2685079",
    "end": "2691880"
  },
  {
    "text": "and so if I press the key on here hopefully we will hear",
    "start": "2691880",
    "end": "2696960"
  },
  {
    "text": "some sounds if I press these drum pads they're sending messages on",
    "start": "2696960",
    "end": "2703800"
  },
  {
    "text": "um on channel 10 which in MIDI convention means they're going to be drum sounds rather than Note sounds and",
    "start": "2703800",
    "end": "2710920"
  },
  {
    "text": "I can even play MIDI files so if I press a key here oh yeah you're seeing",
    "start": "2710920",
    "end": "2716760"
  },
  {
    "text": "hopefully you're seeing it's reporting the midi messages that it's receiving as we're getting them if I press the space",
    "start": "2716760",
    "end": "2722599"
  },
  {
    "text": "bar it will actually load a midi file and it will play the midi file through",
    "start": "2722599",
    "end": "2728240"
  },
  {
    "text": "the C sequencer so let's start that up make sure it's not too",
    "start": "2728240",
    "end": "2735599"
  },
  {
    "text": "[Music]",
    "start": "2736030",
    "end": "2740039"
  },
  {
    "text": "loud okay so that is that is my talk on um",
    "start": "2741680",
    "end": "2749319"
  },
  {
    "text": "audio programming Inn net um it's something I'm quite passionate about so i' be very glad to chat with any of you",
    "start": "2749319",
    "end": "2755880"
  },
  {
    "text": "further but did anyone want to take ask any questions I don't know how much time we got left yep let me",
    "start": "2755880",
    "end": "2764359"
  },
  {
    "text": "just yeah",
    "start": "2768760",
    "end": "2775760"
  },
  {
    "text": "yeah you could so you could take you know",
    "start": "2784800",
    "end": "2791160"
  },
  {
    "text": "obviously none of the P invoke stuff would make any sense but you could take",
    "start": "2791160",
    "end": "2796559"
  },
  {
    "text": "the um you know the classes in N audio that deal with file formats and deal with um",
    "start": "2796559",
    "end": "2804359"
  },
  {
    "text": "resampling and various codecs that are fully managed and you could call them",
    "start": "2804359",
    "end": "2809440"
  },
  {
    "text": "the only thing I say is like what exactly would be the point because actually the J the browser audio is",
    "start": "2809440",
    "end": "2815200"
  },
  {
    "text": "really quite good um you can find a lot of um I've been playing a lot with the",
    "start": "2815200",
    "end": "2821200"
  },
  {
    "text": "um web audio things like tone JS do what n audio can do and a lot more um with",
    "start": "2821200",
    "end": "2828040"
  },
  {
    "text": "wasm um if any of you have used V VST plugins and synthesizers you can",
    "start": "2828040",
    "end": "2834119"
  },
  {
    "text": "actually compile those to um wasm and load them in the browser and there's",
    "start": "2834119",
    "end": "2839240"
  },
  {
    "text": "some amazing demos of that and so I think um audio in the browser is really going places um but I don't really see",
    "start": "2839240",
    "end": "2847359"
  },
  {
    "text": "that n AIO contributes an awful lot unless you love C and you want to be always in the world of c um but yeah",
    "start": "2847359",
    "end": "2855240"
  },
  {
    "text": "there's I can recommend the audio developers conference you can get an online ticket for that fairly cheaply",
    "start": "2855240",
    "end": "2860400"
  },
  {
    "text": "it's happening later this year and um lots of really exciting stuff happening in the audio space in",
    "start": "2860400",
    "end": "2868680"
  },
  {
    "text": "WM yeah net Maui okay so I haven't done a",
    "start": "2868680",
    "end": "2875760"
  },
  {
    "text": "lot of Mary Carl Franklin who's here and I think he's talking about Mari has",
    "start": "2875760",
    "end": "2880960"
  },
  {
    "text": "tried to do some audio stuff in Mary and he was he got in touch with me and he was like oh can we can we kind of use it",
    "start": "2880960",
    "end": "2886599"
  },
  {
    "text": "an audio with Mari and what you find often in these apis is that the the",
    "start": "2886599",
    "end": "2892920"
  },
  {
    "text": "audio playback support is play this file and if you want to produce your own",
    "start": "2892920",
    "end": "2898480"
  },
  {
    "text": "samples and give it to it that isn't isn't good enough and when I looked into",
    "start": "2898480",
    "end": "2904079"
  },
  {
    "text": "it not too long ago we did not let you just give give it samples you had to give it a file stream and so",
    "start": "2904079",
    "end": "2912280"
  },
  {
    "text": "unfortunately again you could use bits of an audio in Mari um but you can't do",
    "start": "2912280",
    "end": "2918040"
  },
  {
    "text": "the really fun stuff like I just showed there you couldn't do that because it doesn't give you the ability to inject",
    "start": "2918040",
    "end": "2924440"
  },
  {
    "text": "your own samples to directly to the sound",
    "start": "2924440",
    "end": "2928720"
  },
  {
    "text": "card",
    "start": "2934599",
    "end": "2937599"
  },
  {
    "text": "yeah I mean n Audia has got interfaces it's got an iWave player and it's got an",
    "start": "2959599",
    "end": "2964839"
  },
  {
    "text": "iWave in so you can Implement those for other platforms I don't I think some people have actually done that but",
    "start": "2964839",
    "end": "2970720"
  },
  {
    "text": "they're not part of n audio itself um but on Mari I don't even know how you would do it because it's it's just",
    "start": "2970720",
    "end": "2979960"
  },
  {
    "text": "not okay yeah that's a good idea yeah yes so you kind of make a shim for",
    "start": "2986760",
    "end": "2993319"
  },
  {
    "text": "an audio to send audio out through the web audio API yeah that's a good idea",
    "start": "2993319",
    "end": "2998480"
  },
  {
    "text": "great any other questions if not thank you very",
    "start": "2998480",
    "end": "3003550"
  },
  {
    "text": "[Applause]",
    "start": "3003550",
    "end": "3008640"
  },
  {
    "text": "much",
    "start": "3008640",
    "end": "3011640"
  }
]