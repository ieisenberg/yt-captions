[
  {
    "text": "all right let's start then good morning everyone um it's a pleasure to be here",
    "start": "6919",
    "end": "13040"
  },
  {
    "text": "kicking off day two of NDC and I'm sure this is going to be an exciting day full",
    "start": "13040",
    "end": "18119"
  },
  {
    "text": "of uh talks of from lots of amazing speakers I'm Ashish and I'm here to talk",
    "start": "18119",
    "end": "23199"
  },
  {
    "text": "to you all about fine grain authorization for modern applications it is a very critical topic but um might I",
    "start": "23199",
    "end": "30320"
  },
  {
    "text": "say that it is a little bit underappreciated like it's fairly new not many people know about it but you",
    "start": "30320",
    "end": "37600"
  },
  {
    "text": "might be thinking that why are we talking about authorization at 9: in the morning that's how we are starting our",
    "start": "37600",
    "end": "43120"
  },
  {
    "text": "day but trust me on that when you decided to walk into this building today you were already logged into",
    "start": "43120",
    "end": "49280"
  },
  {
    "text": "authorization when you checked which floors you had access to which rooms you have access to basically you were",
    "start": "49280",
    "end": "55680"
  },
  {
    "text": "checking out where were you authorized to go in this whole building so yeah you we you were doing authorization the",
    "start": "55680",
    "end": "62120"
  },
  {
    "text": "moment you walked in so with that in mind let's",
    "start": "62120",
    "end": "66839"
  },
  {
    "text": "start okay just a we bit about myself before I start with the talk so I'm currently working as a Solutions",
    "start": "67200",
    "end": "73400"
  },
  {
    "text": "engineer at OCTA India and I've been here for a couple of years but before joining OCTA I was a freelancer for",
    "start": "73400",
    "end": "79799"
  },
  {
    "text": "almost 7even years and during that time I used to primarily work in conversational AI building apps for",
    "start": "79799",
    "end": "87200"
  },
  {
    "text": "smart speakers like Amazon Alexa Google Assistant and Bigby things like that and",
    "start": "87200",
    "end": "92479"
  },
  {
    "text": "I also used to host a lot of meetups webinars workshops for Amazon Alexa across my country and sometimes online",
    "start": "92479",
    "end": "99320"
  },
  {
    "text": "created courses with oi other providers as well and for all those efforts Amazon",
    "start": "99320",
    "end": "105399"
  },
  {
    "text": "did recognize me as an Alexa Champion but last two years back I decided to",
    "start": "105399",
    "end": "111240"
  },
  {
    "text": "Pivot my career because I spent I felt like I spent a lot of time building Bots",
    "start": "111240",
    "end": "116560"
  },
  {
    "text": "I decided to come into identity and I joined now I help businesses solve their",
    "start": "116560",
    "end": "122960"
  },
  {
    "text": "customer identity related issues at OCTA as a Solutions engineer other than work",
    "start": "122960",
    "end": "128479"
  },
  {
    "text": "I love playing chess so if anyone is interested please find me at the booth later on for a game and I also love",
    "start": "128479",
    "end": "134760"
  },
  {
    "text": "watching dystopian movies I love learning new languages and I love traveling I've been to 22 countries so",
    "start": "134760",
    "end": "142239"
  },
  {
    "text": "far and with a lot left to go and yeah if you are curious about the last point",
    "start": "142239",
    "end": "148160"
  },
  {
    "text": "and the something about monkeys so one of my apps actually helped save a little",
    "start": "148160",
    "end": "153280"
  },
  {
    "text": "girl from monkeys which had invaded her house I know that sounds wild but if you want to learn more about this story",
    "start": "153280",
    "end": "159519"
  },
  {
    "text": "again find me at our booth it's just below this floor right by the stairs you won't miss me all",
    "start": "159519",
    "end": "167200"
  },
  {
    "text": "right okay with that in mind let's talk about something that happened to me very",
    "start": "167400",
    "end": "172599"
  },
  {
    "text": "recently which will set up the tone for this talk like I mentioned I love traveling so this is my first time in",
    "start": "172599",
    "end": "178680"
  },
  {
    "text": "the UK and I thought before coming to London I should do a bit of touristy things so over the last weekend I went",
    "start": "178680",
    "end": "184799"
  },
  {
    "text": "to a small city called as York about 2 hours from here pretty quaint quite a",
    "start": "184799",
    "end": "189959"
  },
  {
    "text": "historic City and I loved my time there now when I was planning my itary my",
    "start": "189959",
    "end": "195040"
  },
  {
    "text": "friends told me if you are visiting York and since you are going to be there on a Sunday you can't miss eating a Sunday",
    "start": "195040",
    "end": "201680"
  },
  {
    "text": "roast I thought yeah I love traveling I love food I'm definitely going to hit one of the pubs for a Sunday roast now",
    "start": "201680",
    "end": "209239"
  },
  {
    "text": "to tell you something in India we don't usually do reservations there are a lot of places so we just walk into the",
    "start": "209239",
    "end": "215000"
  },
  {
    "text": "restaurants and usually find a place and keeping that in mind I didn't bother to",
    "start": "215000",
    "end": "220159"
  },
  {
    "text": "make a reservation at any place so when I was in York I just researched which is",
    "start": "220159",
    "end": "225360"
  },
  {
    "text": "the best place to find a roast and I just went to the first place that showed up on Reddit like any tourist would do",
    "start": "225360",
    "end": "232599"
  },
  {
    "text": "and as soon as I entered the pub I asked them can I get a roast and they are like sorry we are fully booked we can't help",
    "start": "232599",
    "end": "238519"
  },
  {
    "text": "you I was disappointed but then what will I do I just researched the second",
    "start": "238519",
    "end": "243799"
  },
  {
    "text": "place and I went to the second Pub and there again I asked same question again",
    "start": "243799",
    "end": "249239"
  },
  {
    "text": "I got the same response no we are fully booked third Pub same story fourth Pub",
    "start": "249239",
    "end": "255760"
  },
  {
    "text": "sorry can't help you mate I was pretty disappointed at that point but you see",
    "start": "255760",
    "end": "260799"
  },
  {
    "text": "what is happening here an interesting thing in all the four pubs that I visited I was allowed to get inside the",
    "start": "260799",
    "end": "266759"
  },
  {
    "text": "pub I was no one asked me for my ID because I definitely l look more than 25 and I was able to talk to the bartender",
    "start": "266759",
    "end": "273840"
  },
  {
    "text": "maybe even order a pint but I was able while I was able to authenticate inside",
    "start": "273840",
    "end": "279479"
  },
  {
    "text": "the pubs no one was ready to serve me a roast basically I was not authorized to",
    "start": "279479",
    "end": "285320"
  },
  {
    "text": "get a roast so with that analogy I would like to set up today's talk that just",
    "start": "285320",
    "end": "291720"
  },
  {
    "text": "like the pubs you can give access to anyone to your application or your",
    "start": "291720",
    "end": "297240"
  },
  {
    "text": "website but you don't want want them to access certain areas that's where authorization comes in you can have",
    "start": "297240",
    "end": "304680"
  },
  {
    "text": "anyone visit your website but you won't want any random stranger or a tourist on your website to access the admin",
    "start": "304680",
    "end": "310720"
  },
  {
    "text": "capabilities or access other user sensitive information things that they are not supposed to access so yeah",
    "start": "310720",
    "end": "317440"
  },
  {
    "text": "that's what happened to me me in New York but thankfully uh nice Pub finally",
    "start": "317440",
    "end": "325039"
  },
  {
    "text": "took me served me a Sunday roast and trust me it was worth the wait I enjoyed",
    "start": "325039",
    "end": "330360"
  },
  {
    "text": "it and yeah uh but um you can't be that liberal when you are building your",
    "start": "330360",
    "end": "335720"
  },
  {
    "text": "applications you cannot depend on the kindness of strangers and you have to make sure the authorization is always",
    "start": "335720",
    "end": "342319"
  },
  {
    "text": "right whenever you build it cool all right so that was the informal",
    "start": "342319",
    "end": "350319"
  },
  {
    "text": "introduction now let me just set up the talk formally so today we are going to talk about why is authorization",
    "start": "350319",
    "end": "356199"
  },
  {
    "text": "important and then we will move on to how have we been been doing authorization so far we will talk about",
    "start": "356199",
    "end": "363280"
  },
  {
    "text": "how Access Control has evolved over the past few years and what are the different methodologies we have",
    "start": "363280",
    "end": "368680"
  },
  {
    "text": "implemented to do it then I will introduce you to an open source tool called open fga which is going to be the",
    "start": "368680",
    "end": "376680"
  },
  {
    "text": "tool that we are going to implement fine grain authorization with open fga was built by my company OCTA and donated to",
    "start": "376680",
    "end": "384120"
  },
  {
    "text": "Cloud native Computing foundation so it's being uh run by them now and then I",
    "start": "384120",
    "end": "389240"
  },
  {
    "text": "will talk about fga playground which is another free software you don't need to sign up for that you can just use it to",
    "start": "389240",
    "end": "395400"
  },
  {
    "text": "play around with open fga models we'll see a short demo of that and lastly I will leave you with some tools and",
    "start": "395400",
    "end": "401360"
  },
  {
    "text": "resources for you to further build upon your knowledge of fine grain",
    "start": "401360",
    "end": "406360"
  },
  {
    "text": "authorization all right yeah let's talk about authentication and authorization I already said the tone but let's revisit",
    "start": "406639",
    "end": "413880"
  },
  {
    "text": "it a bit formally okay so what is authentication and how do does it differ from",
    "start": "413880",
    "end": "420319"
  },
  {
    "text": "authorization authentication is essentially who are you and authorization is can you do that so the",
    "start": "420319",
    "end": "426039"
  },
  {
    "text": "moment I walked down the front door they just validated this they checked my ID",
    "start": "426039",
    "end": "431840"
  },
  {
    "text": "today morning am I really Ashish am I supposed to be a speaker here and once they validated that I am Ashish they",
    "start": "431840",
    "end": "438360"
  },
  {
    "text": "gave me a speaker tag now with the speaker tag I can access all these talk rooms but I can also access the speaker",
    "start": "438360",
    "end": "444840"
  },
  {
    "text": "room so I'm authorized to access uh another room which a general attendee might not not have access to so that's",
    "start": "444840",
    "end": "451560"
  },
  {
    "text": "how authorization will Define your access to different resources and while",
    "start": "451560",
    "end": "456720"
  },
  {
    "text": "authentication just confirms you who you are authorization actually gives you permissions to access different",
    "start": "456720",
    "end": "462879"
  },
  {
    "text": "resources in your application the website and we can see some examples of how these permissions",
    "start": "462879",
    "end": "469680"
  },
  {
    "text": "differ so permissions are actions that a user or entity can do with her resource",
    "start": "469680",
    "end": "475280"
  },
  {
    "text": "and it could be as simple as entering a hotel room if I have a if I have paid for a room I get an access card now I",
    "start": "475280",
    "end": "482680"
  },
  {
    "text": "can access a room but it has to be just my specific room I cannot use that card for any other rooms permissions can also",
    "start": "482680",
    "end": "489199"
  },
  {
    "text": "be given to edit view share a file like in Google Drive how if we want to share",
    "start": "489199",
    "end": "495120"
  },
  {
    "text": "the access with someone we give them permissions like you can be an editor or you can be a viewer or you can just be a commentor so we can Define what kind of",
    "start": "495120",
    "end": "502319"
  },
  {
    "text": "permission people will have now if I pass my bar exam I have a permission to practice as a lawyer but if I don't pass",
    "start": "502319",
    "end": "509000"
  },
  {
    "text": "the exam I cannot represent anyone and simply you define access controls for your application as well whether someone",
    "start": "509000",
    "end": "515760"
  },
  {
    "text": "is an admin they will have access to specific features which are not available to regular users in your",
    "start": "515760",
    "end": "523120"
  },
  {
    "text": "application now why is authorization important the main reason why",
    "start": "524600",
    "end": "530399"
  },
  {
    "text": "authorization is important because oasp did a research in 2021 where they figure",
    "start": "530399",
    "end": "535720"
  },
  {
    "text": "out what are the top 10 most common web application security risks and you as",
    "start": "535720",
    "end": "541839"
  },
  {
    "text": "you can guess the number one on that list was broken access control which essentially means that the authorization",
    "start": "541839",
    "end": "547560"
  },
  {
    "text": "on the websites have severe flaws which means unintended people are getting",
    "start": "547560",
    "end": "552839"
  },
  {
    "text": "access to resources that are not meant for them so bro it's it's a time",
    "start": "552839",
    "end": "557880"
  },
  {
    "text": "sensitive problem so we cannot let anyone access all the areas of our website so we have to figure out how to",
    "start": "557880",
    "end": "564200"
  },
  {
    "text": "fix this access control issue and that's why authorization is important now there are other places where authorization can",
    "start": "564200",
    "end": "571279"
  },
  {
    "text": "affect your business and the first one I already talked about it is Access Control where you give and Define which",
    "start": "571279",
    "end": "577760"
  },
  {
    "text": "users have permission to which resources what level of permissions they have how many days they have permission for what",
    "start": "577760",
    "end": "584600"
  },
  {
    "text": "other contextual things like where exactly do they have permission for like someone can have access to a website",
    "start": "584600",
    "end": "590640"
  },
  {
    "text": "only when they are in the company's intranet but not when they are working from home so you can Define the",
    "start": "590640",
    "end": "596399"
  },
  {
    "text": "granularity of what access someone has also authorization is important when it",
    "start": "596399",
    "end": "601680"
  },
  {
    "text": "comes to access provisioning let's say you work in an organization which has 500 different employees and all of them",
    "start": "601680",
    "end": "609279"
  },
  {
    "text": "need to have access to a bunch of different application 200 different application that they might need to do",
    "start": "609279",
    "end": "614880"
  },
  {
    "text": "their day-to-day jobs Gmail slack Asana Zoom Salesforce and number of jobs and",
    "start": "614880",
    "end": "621240"
  },
  {
    "text": "even within Salesforce let's say if I'm on the sales team I will have different level of access versus if I'm on the",
    "start": "621240",
    "end": "627440"
  },
  {
    "text": "marketing team I might have a different level of access access so to configure all these different types of access and",
    "start": "627440",
    "end": "634680"
  },
  {
    "text": "provision them when a new employeer signs up with the company you need to have some sort of formal authorization",
    "start": "634680",
    "end": "641440"
  },
  {
    "text": "mechanism so that you are not giving away unintentional access to someone like if I'm a developer and I don't have",
    "start": "641440",
    "end": "648519"
  },
  {
    "text": "anything to do with the Salesforce accounts data then I should not have access to it maybe I won't do anything",
    "start": "648519",
    "end": "654120"
  },
  {
    "text": "malicious to it but who knows by mistake I Can Do Anything by I just poking around and maybe changing some marking a",
    "start": "654120",
    "end": "661760"
  },
  {
    "text": "deal as closed when even though it's still in the stages things can happen so rather than leaving things to chance you",
    "start": "661760",
    "end": "669440"
  },
  {
    "text": "just don't want people to have access the principle of least access should be there also another important thing is",
    "start": "669440",
    "end": "677360"
  },
  {
    "text": "when you offboard an employee from your roster how do you ensure that he no longer has access to every application",
    "start": "677360",
    "end": "684600"
  },
  {
    "text": "that you provisioned him for that's again another thing you need to take care of because",
    "start": "684600",
    "end": "690279"
  },
  {
    "text": "if you ended up on good terms all good but let's say you didn't end up on good terms and he still has access to",
    "start": "690279",
    "end": "696800"
  },
  {
    "text": "valuable resources then things might go Haywire I I was a freelancer there were",
    "start": "696800",
    "end": "702240"
  },
  {
    "text": "times when I didn't get paid for my work and I still had access and you can imagine what I",
    "start": "702240",
    "end": "708959"
  },
  {
    "text": "did so things can happen so you have to be careful around",
    "start": "708959",
    "end": "714320"
  },
  {
    "text": "that all right security when it comes to security it's again the same thing thing",
    "start": "714320",
    "end": "719560"
  },
  {
    "text": "that you make sure that people who have access to the sensitive data only have",
    "start": "719560",
    "end": "725920"
  },
  {
    "text": "access to the data that they are intended for they are not looking into other customers data or other users data",
    "start": "725920",
    "end": "732360"
  },
  {
    "text": "and essentially you just decrease the surface area from where breaches can happen or misuse can happen or let's say",
    "start": "732360",
    "end": "739480"
  },
  {
    "text": "Insider threats are taken care of it's just all about authorization is all",
    "start": "739480",
    "end": "744760"
  },
  {
    "text": "about making sure there are less chances to mess up things internally or by",
    "start": "744760",
    "end": "750120"
  },
  {
    "text": "mistake and in doing that you improve your overall security",
    "start": "750120",
    "end": "756120"
  },
  {
    "text": "posture the next one is privacy and compliance if you are going through some",
    "start": "756959",
    "end": "762120"
  },
  {
    "text": "to meet some sort of compliance PCI DSS Hippa sotu things like that then you",
    "start": "762120",
    "end": "767920"
  },
  {
    "text": "need to be very careful about how you handle the users private data how you store them who has access to them all",
    "start": "767920",
    "end": "775120"
  },
  {
    "text": "these things will need to be in order if you are going to meet the compliance there will will be audits which there",
    "start": "775120",
    "end": "781079"
  },
  {
    "text": "will be reports in which you need to tell which people have access to what and and this also helps like you with",
    "start": "781079",
    "end": "789519"
  },
  {
    "text": "tracking when there is unintentional violation of any policies or what what",
    "start": "789519",
    "end": "795240"
  },
  {
    "text": "who did something which was not supposed to happen if you have a centralized authent authorization mechanism then you",
    "start": "795240",
    "end": "800959"
  },
  {
    "text": "can figure out where things actually started going wrong and then you can walk back to the source of the issue and",
    "start": "800959",
    "end": "807880"
  },
  {
    "text": "rectify that so so privacy and compliance are again dependent on",
    "start": "807880",
    "end": "814480"
  },
  {
    "text": "authorization and lastly scalability scalability essentially means that you are helping your",
    "start": "815040",
    "end": "821000"
  },
  {
    "text": "developers save time and making sure that they spend their time and efforts",
    "start": "821000",
    "end": "826399"
  },
  {
    "text": "on building the features which are core to your product like your main business use cases rather than spending time on",
    "start": "826399",
    "end": "832800"
  },
  {
    "text": "figuring out access control or resolving issues around who has a authorization to",
    "start": "832800",
    "end": "838000"
  },
  {
    "text": "do what plus if you look at the traditional ways of doing authorization people just do everything inside the",
    "start": "838000",
    "end": "844880"
  },
  {
    "text": "application code on the application layer itself where it is gets very difficult to maintain or improve the",
    "start": "844880",
    "end": "850920"
  },
  {
    "text": "situation improve the current standards so your developers are busy fixing authorization issues rather than solving",
    "start": "850920",
    "end": "857800"
  },
  {
    "text": "or launching new features working on them so scalability efficiency decreases if the authorization is not handled",
    "start": "857800",
    "end": "866480"
  },
  {
    "text": "properly all right now since authorization is that important it affects different aspects",
    "start": "867759",
    "end": "873519"
  },
  {
    "text": "of your business and if it's not done properly it makes you lose Revenue then why don't people do authorization why",
    "start": "873519",
    "end": "880040"
  },
  {
    "text": "don't they focus on that to get started the main reason is that authorization is very complex to implement and what makes",
    "start": "880040",
    "end": "886959"
  },
  {
    "text": "it complex because you have to think from the big picture like there are number of users let's take the same",
    "start": "886959",
    "end": "894279"
  },
  {
    "text": "example there is a company 500 employees so 500 different users now these 500",
    "start": "894279",
    "end": "899639"
  },
  {
    "text": "users will have multiple roles some can be admin roles some can be regular",
    "start": "899639",
    "end": "904720"
  },
  {
    "text": "members some can be super users some can be analysts some can be Finance",
    "start": "904720",
    "end": "909839"
  },
  {
    "text": "different kinds of roles now each roles will also depend on what type of team they are belonging on so groups of users",
    "start": "909839",
    "end": "915720"
  },
  {
    "text": "will be there there can be product team there can be engineering there can be it admin there can be a variety of",
    "start": "915720",
    "end": "922040"
  },
  {
    "text": "different teams or groups of users next there will be a bunch of resources they",
    "start": "922040",
    "end": "927120"
  },
  {
    "text": "have access to now some people will have access to team Asana some people will have access to the team's GitHub some",
    "start": "927120",
    "end": "934440"
  },
  {
    "text": "people will have access to the team Salesforce HubSpot and even within them",
    "start": "934440",
    "end": "939720"
  },
  {
    "text": "not all developers will have access to all the repositories in the GitHub organization of the team they will have",
    "start": "939720",
    "end": "945480"
  },
  {
    "text": "access to different repositories some sales people will have access to different deals in Salesforce they won't",
    "start": "945480",
    "end": "951199"
  },
  {
    "text": "have the same level of access for even the same resources and and then the",
    "start": "951199",
    "end": "956279"
  },
  {
    "text": "permissions might also differ some developers will be an org admin for a repo but some developers will only be",
    "start": "956279",
    "end": "962839"
  },
  {
    "text": "just contributors so the permissions can differ again so 500 people different groups different permission different",
    "start": "962839",
    "end": "969959"
  },
  {
    "text": "resources it all adds up to on an exponential rate plus let's say a",
    "start": "969959",
    "end": "976040"
  },
  {
    "text": "developer decides to leave the team then you need to be dynamic enough that you take away access rather than using a",
    "start": "976040",
    "end": "982800"
  },
  {
    "text": "long- lived access from my previous example so the rate of change will also affect how you design that authorization",
    "start": "982800",
    "end": "990399"
  },
  {
    "text": "part it has to be dynamic it has to scale",
    "start": "990399",
    "end": "995199"
  },
  {
    "text": "well so let's look at how people have tried to solve the authorization problem over the last few years we will talk",
    "start": "996319",
    "end": "1003199"
  },
  {
    "text": "about the different access control methods well the first one was back in the 80s I think they tried to do just um",
    "start": "1003199",
    "end": "1011040"
  },
  {
    "text": "read write execute Access Control where you were just uh talking about do I have",
    "start": "1011040",
    "end": "1017880"
  },
  {
    "text": "read access to certain resource do I have right access to a certain resource and that's how they started uh building",
    "start": "1017880",
    "end": "1025160"
  },
  {
    "text": "access control methods but later they moved on to other ways like role based Access Control attribute based Access",
    "start": "1025160",
    "end": "1031839"
  },
  {
    "text": "Control we'll start talking about these so to talk about this I would like",
    "start": "1031839",
    "end": "1038760"
  },
  {
    "text": "to share an example with you and we will use this example as we go through the",
    "start": "1038760",
    "end": "1044520"
  },
  {
    "text": "different uh authorization mechanisms and we will build up on this example so",
    "start": "1044520",
    "end": "1049679"
  },
  {
    "text": "this is a sample API pseudo code that returns documents and in the code there",
    "start": "1049679",
    "end": "1055480"
  },
  {
    "text": "is just a couple of lines in the line number three we are just using a database to find a document",
    "start": "1055480",
    "end": "1061760"
  },
  {
    "text": "based on a ID that we receive from the API so it's a get request and then we return back the document now this is",
    "start": "1061760",
    "end": "1068880"
  },
  {
    "text": "just an API call for the document let's see how we add authorization layer to it where only people who have access to it",
    "start": "1068880",
    "end": "1076240"
  },
  {
    "text": "can actually retrieve and use the document the first way to do it is with",
    "start": "1076240",
    "end": "1082440"
  },
  {
    "text": "arbac arbac stands for rule-based Access Control this is the most common way people Implement authorization in their",
    "start": "1082440",
    "end": "1089919"
  },
  {
    "text": "websites their application and when we use rback for authorization we are",
    "start": "1089919",
    "end": "1095600"
  },
  {
    "text": "essentially checking for roles whether the user has a certain role then they can access the document if they don't",
    "start": "1095600",
    "end": "1101880"
  },
  {
    "text": "have access to that role then they won't be allowed to access it they will get a 4 or3 forbidden error like that so in",
    "start": "1101880",
    "end": "1109240"
  },
  {
    "text": "line number four we are again finding the roles of the user and then we are",
    "start": "1109240",
    "end": "1114600"
  },
  {
    "text": "checking if the roles include employee or manager then if the rules don't",
    "start": "1114600",
    "end": "1120039"
  },
  {
    "text": "include employer or manager then throw an error if the roles include that then proceed forward and line number nine is",
    "start": "1120039",
    "end": "1126640"
  },
  {
    "text": "the same as before where you are retrieving the document and returning it back now what are the downsides to",
    "start": "1126640",
    "end": "1132200"
  },
  {
    "text": "implementing authorization with a role based access control the biggest downside is that it doesn't scale well",
    "start": "1132200",
    "end": "1138159"
  },
  {
    "text": "when there are many roles just imagine there are like 50 different roles in my organization and then I will have to",
    "start": "1138159",
    "end": "1144679"
  },
  {
    "text": "write if roles not includes employee manager accountant developer engineer",
    "start": "1144679",
    "end": "1151480"
  },
  {
    "text": "product manager it will be a long list of IFL statements so that's where role",
    "start": "1151480",
    "end": "1157120"
  },
  {
    "text": "based Access Control doesn't scale well let's say I need to modify a role later on I need to add a new role then I need",
    "start": "1157120",
    "end": "1163799"
  },
  {
    "text": "to look at all the places where I have a check like this and then add a role there",
    "start": "1163799",
    "end": "1169440"
  },
  {
    "text": "it might lead to inconsistencies that I might miss adding it somewhere and then I will spend my time debugging it so it",
    "start": "1169440",
    "end": "1176159"
  },
  {
    "text": "doesn't scale well when you have multiple roles but if you are just running with like a couple of roles and solving a basic use case you can just",
    "start": "1176159",
    "end": "1182440"
  },
  {
    "text": "run ahead with RB so whatever I'm talking about today there is not a right",
    "start": "1182440",
    "end": "1187799"
  },
  {
    "text": "way or wrong way to do things there are different ways to do different things so",
    "start": "1187799",
    "end": "1192840"
  },
  {
    "text": "just keep that in mind another way to do rbac is with",
    "start": "1192840",
    "end": "1199679"
  },
  {
    "text": "permissions where you are using rbac but uh you are using permissions that you",
    "start": "1199679",
    "end": "1205600"
  },
  {
    "text": "get from the JWT token instead of predefined rules and here you are not",
    "start": "1205600",
    "end": "1211000"
  },
  {
    "text": "checking you don't have a big if statement where you are checking against all the rules that you have but rather",
    "start": "1211000",
    "end": "1216159"
  },
  {
    "text": "you just validate the permission that you are getting from the token and then see if the permissions include that",
    "start": "1216159",
    "end": "1221919"
  },
  {
    "text": "specific one then you give them access like in line number four you are checking retrieving the permissions and",
    "start": "1221919",
    "end": "1227679"
  },
  {
    "text": "then checking if the per permissions include documents view if the permissions don't include documents view throw an error if it includes give them",
    "start": "1227679",
    "end": "1234320"
  },
  {
    "text": "access to the document downsides to this how do you grant access to a single",
    "start": "1234320",
    "end": "1239440"
  },
  {
    "text": "document because still we are incl the permission we are including is a blanket permission it will give access to 50",
    "start": "1239440",
    "end": "1246159"
  },
  {
    "text": "different documents if there are 50 documents in the folder and if you want it to give like",
    "start": "1246159",
    "end": "1251880"
  },
  {
    "text": "access to only one document then you might have to create like 50 different permissions which again goes back to the",
    "start": "1251880",
    "end": "1258320"
  },
  {
    "text": "previous point doesn't scale well but if you change need to change access to just one document you have to make that",
    "start": "1258320",
    "end": "1264720"
  },
  {
    "text": "change at every place in your code base and another problem with using JWT based",
    "start": "1264720",
    "end": "1270200"
  },
  {
    "text": "permission is that how do you revoke the permission because JWT will be active until it expires so it could be 5",
    "start": "1270200",
    "end": "1277240"
  },
  {
    "text": "minutes it could be 1 hour depending on how much time you set up and even though you don't want the user to access the",
    "start": "1277240",
    "end": "1282919"
  },
  {
    "text": "resource after the time has expired because the JWT is still active they can",
    "start": "1282919",
    "end": "1288000"
  },
  {
    "text": "still continue to access those resources so that's another downside and lastly token",
    "start": "1288000",
    "end": "1294799"
  },
  {
    "text": "bloating if you add a lot of different permissions to your access token it will",
    "start": "1294799",
    "end": "1300559"
  },
  {
    "text": "increase the size of the token and if the token size is too much it might cause issues with some proxies when they",
    "start": "1300559",
    "end": "1306320"
  },
  {
    "text": "try to retrieve the token so again if you there are multiple rules or multiple",
    "start": "1306320",
    "end": "1311919"
  },
  {
    "text": "permissions not a good idea to build with it",
    "start": "1311919",
    "end": "1317880"
  },
  {
    "text": "so what's a better way to do authorization let me introduce you to",
    "start": "1319559",
    "end": "1324919"
  },
  {
    "text": "ABAC ABAC stands for attribute based Access Control this is where we are",
    "start": "1324919",
    "end": "1330039"
  },
  {
    "text": "trying to move from course grained authorization methods to fine",
    "start": "1330039",
    "end": "1335600"
  },
  {
    "text": "grain authorization methods where we are having more intricate ways more granularity of how we give permissions",
    "start": "1335600",
    "end": "1342679"
  },
  {
    "text": "check for permissions attribute based Access Control depends on attributes it",
    "start": "1342679",
    "end": "1347960"
  },
  {
    "text": "checks access access based on the different attributes a resource can have or the user can have some examples of it",
    "start": "1347960",
    "end": "1354360"
  },
  {
    "text": "could be does the user belong in the product department does the user belong",
    "start": "1354360",
    "end": "1359520"
  },
  {
    "text": "in the marketing department or are they accessing this resource from inside the",
    "start": "1359520",
    "end": "1366200"
  },
  {
    "text": "office in Internet what is the time of the day are they accessing this resource are they",
    "start": "1366200",
    "end": "1372039"
  },
  {
    "text": "accessing it during their office hours or are they accessing it outside of it it could also be based on the Source",
    "start": "1372039",
    "end": "1378799"
  },
  {
    "text": "like there is a document is the document inside the product road map folder or is it not within the folder so attribute",
    "start": "1378799",
    "end": "1386400"
  },
  {
    "text": "can be time place IP address anything that can associate with be that",
    "start": "1386400",
    "end": "1394320"
  },
  {
    "text": "resource all right from this example um this is an example of where you have a",
    "start": "1394360",
    "end": "1399559"
  },
  {
    "text": "document which is inside a parent folder and that folder is within another folder",
    "start": "1399559",
    "end": "1404600"
  },
  {
    "text": "attribute miixed access control works by checking access on all the different levels it will check whether the user",
    "start": "1404600",
    "end": "1411159"
  },
  {
    "text": "has access to the top level folder then it will check whether the user has access to the folder within it then it",
    "start": "1411159",
    "end": "1416760"
  },
  {
    "text": "will check whether the user has access to the document there the the problem that starts with ABAC is for such a use",
    "start": "1416760",
    "end": "1423279"
  },
  {
    "text": "case you need to recursively check access at multiple different levels and then you need to calculate whether the",
    "start": "1423279",
    "end": "1429640"
  },
  {
    "text": "user has access to the first step the Second Step the third step and then once you have finally done that then finally",
    "start": "1429640",
    "end": "1435600"
  },
  {
    "text": "you can check it against the document am I supposed to be accessing this document",
    "start": "1435600",
    "end": "1441039"
  },
  {
    "text": "and then if you find that the answer is no then all the effort goes down the drain and while you are checking all",
    "start": "1441039",
    "end": "1448520"
  },
  {
    "text": "these attributes you are also interacting with the product database itself so that may lead to latency on",
    "start": "1448520",
    "end": "1455240"
  },
  {
    "text": "when you are hitting your databases because attribute based access control is again done at the application",
    "start": "1455240",
    "end": "1463519"
  },
  {
    "text": "Level so with that in mind let's see what is the solution to all these problems because the traditional methods",
    "start": "1464919",
    "end": "1471880"
  },
  {
    "text": "of authorization aren't quite cutting it majorly because of three main problems the first one being the complexity",
    "start": "1471880",
    "end": "1478760"
  },
  {
    "text": "complexity of implementing it when there are more than one roles or there are multiple permissions when you want to",
    "start": "1478760",
    "end": "1484840"
  },
  {
    "text": "give access to a specific resource then that's a problem it is inefficient because it leads to uh massive",
    "start": "1484840",
    "end": "1491919"
  },
  {
    "text": "development effort when you want to make a change it leads to inconsistencies when you take away provisioning take",
    "start": "1491919",
    "end": "1498760"
  },
  {
    "text": "away the access from a specific resource and you are not too sure whether you have taken away access from all the",
    "start": "1498760",
    "end": "1505039"
  },
  {
    "text": "different places where you are having authorization checks and it creates like a security and compliance related risk",
    "start": "1505039",
    "end": "1511039"
  },
  {
    "text": "as well because by mistake you might miss something and that means you are not meeting your compliance you are",
    "start": "1511039",
    "end": "1517039"
  },
  {
    "text": "leaking away some data which is not supposed to be seen by everyone it could potentially cause breaches and that will",
    "start": "1517039",
    "end": "1523039"
  },
  {
    "text": "definitely not end up well so with that in mind fine uh let me",
    "start": "1523039",
    "end": "1528960"
  },
  {
    "text": "introduce you to relationship based Access Control also called reback and reback solves a few of these problems I",
    "start": "1528960",
    "end": "1535840"
  },
  {
    "text": "talked about while uh explaining a back R back the first one being that when you",
    "start": "1535840",
    "end": "1541799"
  },
  {
    "text": "are building using reback you don't need to specify all the variety of different",
    "start": "1541799",
    "end": "1547000"
  },
  {
    "text": "roles and responsibilities you just need to have some sort of one toone relation between one object and another object so",
    "start": "1547000",
    "end": "1554440"
  },
  {
    "text": "users and object can have one relation and the rest of the relation can be inherited and the system can figure it",
    "start": "1554440",
    "end": "1559960"
  },
  {
    "text": "out so from our previous example we just want user Kate to have access to a document road map now there are a few",
    "start": "1559960",
    "end": "1567679"
  },
  {
    "text": "ways of doing it you can directly assign user Kate to the document road map but in this example we are just giving user",
    "start": "1567679",
    "end": "1574559"
  },
  {
    "text": "Kate access to the folder product now the folder product contains the document road map nowhere we have assigned uh",
    "start": "1574559",
    "end": "1581799"
  },
  {
    "text": "user Kate direct access to road map but since folder has uh folder product has",
    "start": "1581799",
    "end": "1587279"
  },
  {
    "text": "document road map and user Kate has access to folder product she has inherited the viewer relation and now",
    "start": "1587279",
    "end": "1594000"
  },
  {
    "text": "she can read the document road map directly without us specifying whether she has access to it or not the way this",
    "start": "1594000",
    "end": "1601039"
  },
  {
    "text": "improves things is now I don't have to give her access to specific documents we just have to specify one folder name we",
    "start": "1601039",
    "end": "1608320"
  },
  {
    "text": "can take away access easily and we can go even fine grain if uh we don't want a user to have access to the fold the",
    "start": "1608320",
    "end": "1615880"
  },
  {
    "text": "complete folder and the direct document we can just Define another relation user Pete can read document road map and we",
    "start": "1615880",
    "end": "1622200"
  },
  {
    "text": "will be sorted now it might seem very similar to how Google Drive functions or",
    "start": "1622200",
    "end": "1628120"
  },
  {
    "text": "Google Docs function essentially they work on the same idea so the whole open",
    "start": "1628120",
    "end": "1633440"
  },
  {
    "text": "fga tool that I'm going to talk about is based on Google Zanzibar it's a paper Google released which talks about",
    "start": "1633440",
    "end": "1638919"
  },
  {
    "text": "relationship based access control and that's the technology they use in building their own software Google Drive",
    "start": "1638919",
    "end": "1645000"
  },
  {
    "text": "and Google Talks all right to sum up the access control",
    "start": "1645000",
    "end": "1651039"
  },
  {
    "text": "discussion I have the slide so it all started with being as basic as does",
    "start": "1651039",
    "end": "1656480"
  },
  {
    "text": "Skate have read access to this file which was the most primitive way of implementing access control then we move",
    "start": "1656480",
    "end": "1662919"
  },
  {
    "text": "to role based Access Control where we are checking based on roles is Kate in the product manager role if she is then",
    "start": "1662919",
    "end": "1669279"
  },
  {
    "text": "she can access the document these are examples of course gain authorization where we are just leveraging like one",
    "start": "1669279",
    "end": "1675480"
  },
  {
    "text": "attribute does the role match all good you have access if the role doesn't match you don't have access then we look",
    "start": "1675480",
    "end": "1681679"
  },
  {
    "text": "into attribute based Access Control where things start getting a little bit fine grain we checking based on",
    "start": "1681679",
    "end": "1687159"
  },
  {
    "text": "attributes like what's Kate's Department if it's product all good is it working",
    "start": "1687159",
    "end": "1692240"
  },
  {
    "text": "hours for Kate yes it is working hours so we check two attributes and we can even combine the attributes if both of",
    "start": "1692240",
    "end": "1698559"
  },
  {
    "text": "them are yes then Kate has access otherwise she doesn't have access lastly we come across",
    "start": "1698559",
    "end": "1705000"
  },
  {
    "text": "relationship based Access Control we are it's a similar to AAC but it's an",
    "start": "1705000",
    "end": "1710320"
  },
  {
    "text": "extension of that so we are checking is gate is in the product Department we check the attribute then we check the",
    "start": "1710320",
    "end": "1716720"
  },
  {
    "text": "document is the document in the product folder all good now we are checking does the product Department have viewer",
    "start": "1716720",
    "end": "1722919"
  },
  {
    "text": "access permission to this document which it does but nowhere we checked whether Kate has access to the um document we we",
    "start": "1722919",
    "end": "1730840"
  },
  {
    "text": "don't have a direct relationship but it was inherited from the diagram I showed earlier that Kate has access to the",
    "start": "1730840",
    "end": "1736720"
  },
  {
    "text": "document and that gives power to F grain authorization where we combine multiple",
    "start": "1736720",
    "end": "1742080"
  },
  {
    "text": "attributes to reach an authorization",
    "start": "1742080",
    "end": "1745799"
  },
  {
    "text": "decision okay now let's talk about how we Implement fine grain authorization in",
    "start": "1747200",
    "end": "1753240"
  },
  {
    "text": "your applications so we will be talking about a open source software called as open",
    "start": "1753240",
    "end": "1760120"
  },
  {
    "text": "fga now this open source solution is owned by Cloud native Computing foundation and maintained by my company",
    "start": "1760360",
    "end": "1767600"
  },
  {
    "text": "OCTA and there are a lot of Open Source contributors from other organizations as well who contribute to this project and",
    "start": "1767600",
    "end": "1773720"
  },
  {
    "text": "it is also used as the core of OCTA FG which is like a managed offering that we provide OCTA fga has a Dynamo DB backend",
    "start": "1773720",
    "end": "1781640"
  },
  {
    "text": "whereas open fga can be run on your server by yourself using postgress MySQL",
    "start": "1781640",
    "end": "1786799"
  },
  {
    "text": "sqlite and it was inspired by Google's Zanzibar paper which describes how all",
    "start": "1786799",
    "end": "1792279"
  },
  {
    "text": "authorization for Google's resources was built and the best thing about about",
    "start": "1792279",
    "end": "1798200"
  },
  {
    "text": "OMFG is it allows you to Grant access to individual resources in your system at",
    "start": "1798200",
    "end": "1803240"
  },
  {
    "text": "different levels so you can have different permissions for different users you can control the level of",
    "start": "1803240",
    "end": "1808320"
  },
  {
    "text": "access for every user and it's not hardcoded so it's not in your",
    "start": "1808320",
    "end": "1813519"
  },
  {
    "text": "application Level so as you grow you can iterate making Access Control more granular so if you find something that",
    "start": "1813519",
    "end": "1819760"
  },
  {
    "text": "you need to change it's much easier to change where your authorization layer is not built inside your application layer",
    "start": "1819760",
    "end": "1827200"
  },
  {
    "text": "so as you your product rows you can make Access Control more granular so where does the authorization",
    "start": "1827200",
    "end": "1834320"
  },
  {
    "text": "layer lie if it's not inside the application layer so this is an architecture of how a normal",
    "start": "1834320",
    "end": "1840159"
  },
  {
    "text": "application's authentication layer will look like so user will log in to their",
    "start": "1840159",
    "end": "1845440"
  },
  {
    "text": "application using any identity provider it could be any open source provider um open source library or any vendors like",
    "start": "1845440",
    "end": "1851640"
  },
  {
    "text": "odd zero clerk workquest there are a bunch of them you can use anyone here once the user authenticates successfully",
    "start": "1851640",
    "end": "1858279"
  },
  {
    "text": "then they get an access token and that access token can be used to call apis services in the application layer and",
    "start": "1858279",
    "end": "1865200"
  },
  {
    "text": "here you have like some validation or authoriz rback based aack based authorization can be happening on the",
    "start": "1865200",
    "end": "1871320"
  },
  {
    "text": "application layer but once you implement fga then the first part Remains the Same",
    "start": "1871320",
    "end": "1878039"
  },
  {
    "text": "the user is logging into the application using an identity provider they get an",
    "start": "1878039",
    "end": "1883440"
  },
  {
    "text": "access token they have access to the application but once they h hit the API",
    "start": "1883440",
    "end": "1888519"
  },
  {
    "text": "before they hit the API they can call an authorization check to an external API",
    "start": "1888519",
    "end": "1894279"
  },
  {
    "text": "before they hit the main uh resource that they want to access it will be the authorization check that will happen",
    "start": "1894279",
    "end": "1900320"
  },
  {
    "text": "with a tool like open fga where you are checking uh user with user ID does they",
    "start": "1900320",
    "end": "1906080"
  },
  {
    "text": "have access to a specific resource does Kate have access read access to on",
    "start": "1906080",
    "end": "1911960"
  },
  {
    "text": "document call road map you can check things like that just before you uh get access your main API so once you run",
    "start": "1911960",
    "end": "1919159"
  },
  {
    "text": "that check you will get an answer does Kate have access yes if she has access then you can proceed further and call",
    "start": "1919159",
    "end": "1925480"
  },
  {
    "text": "your API if she doesn't have access you can just return no at that point and through a forbidden error at that same",
    "start": "1925480",
    "end": "1932880"
  },
  {
    "text": "stage this way your authorization is separate from your architecture if and you can maintain it separately it will",
    "start": "1932880",
    "end": "1939639"
  },
  {
    "text": "be a separate database where you are writing all the relationships and all the Tes and let's talk about that next",
    "start": "1939639",
    "end": "1946679"
  },
  {
    "text": "next how do you implement open fga so as I mentioned it's it's",
    "start": "1946679",
    "end": "1952279"
  },
  {
    "text": "centralized way of authentication authorization where you keep the authorization layer separate from your",
    "start": "1952279",
    "end": "1958080"
  },
  {
    "text": "application code and if you have multiple applications you have a website you have a mobile app you don't need to",
    "start": "1958080",
    "end": "1963880"
  },
  {
    "text": "write code in both of them separately you can maintain it separately at one place and then both your website and",
    "start": "1963880",
    "end": "1970880"
  },
  {
    "text": "your mobile app can talk to the same authorization API and that's how you will standardize it across all the",
    "start": "1970880",
    "end": "1977039"
  },
  {
    "text": "products in your company and it also helps with auditing and logging because again you are just looking at a central",
    "start": "1977039",
    "end": "1983480"
  },
  {
    "text": "place for all the logs you can see where the authorization policies were violated and amend them as needed and Implement",
    "start": "1983480",
    "end": "1990960"
  },
  {
    "text": "new features accordingly okay so the steps to use open fga the first step that you need to",
    "start": "1990960",
    "end": "1998440"
  },
  {
    "text": "do while implementing fga is defining the authorization model in this step we",
    "start": "1998440",
    "end": "2003679"
  },
  {
    "text": "talk about how we add different elements to our model then we add some authorization data which is adding",
    "start": "2003679",
    "end": "2010320"
  },
  {
    "text": "different types of relationships then we write assertions to check whether our model works and finally we connect to",
    "start": "2010320",
    "end": "2016039"
  },
  {
    "text": "our application let's look at the steps one by one okay the three let's look at",
    "start": "2016039",
    "end": "2022679"
  },
  {
    "text": "authorization model relationship tles and checks these are the three key elements when you implement fine grain",
    "start": "2022679",
    "end": "2028519"
  },
  {
    "text": "authorization so the first one authorization model it looks something like this so the model has a schema you",
    "start": "2028519",
    "end": "2035720"
  },
  {
    "text": "start with defining which are the core components of your model like from our",
    "start": "2035720",
    "end": "2041760"
  },
  {
    "text": "example that we are running with we have a user we have a document and we have a",
    "start": "2041760",
    "end": "2046919"
  },
  {
    "text": "folder these three elements are the key components of our",
    "start": "2046919",
    "end": "2051960"
  },
  {
    "text": "model and then we Define like relationship tles what are the relationships between these different",
    "start": "2052599",
    "end": "2058679"
  },
  {
    "text": "elements and lastly we Define the access control checks where we are just validating does our model work does it",
    "start": "2058679",
    "end": "2064560"
  },
  {
    "text": "work according to the relationship so for the first one authorization model we start with defining the elements we",
    "start": "2064560",
    "end": "2071320"
  },
  {
    "text": "Define user then we Define document and inside document we have to Define",
    "start": "2071320",
    "end": "2076480"
  },
  {
    "text": "relations what kind of relations can this document object have with other elements like folder or user the first",
    "start": "2076480",
    "end": "2083839"
  },
  {
    "text": "one is parent relationship so we Define that a folder can be a parent of a",
    "start": "2083839",
    "end": "2090118"
  },
  {
    "text": "document the next one is owner relationship who owns a document a",
    "start": "2090119",
    "end": "2095320"
  },
  {
    "text": "user then we Define who can be a viewer of the document it could be a user like",
    "start": "2095320",
    "end": "2101160"
  },
  {
    "text": "the user who owns it can obviously view the document as well or it could be an owner so the owner can be can view the",
    "start": "2101160",
    "end": "2109440"
  },
  {
    "text": "document or user can be someone who is directly assigned as a viewer or the",
    "start": "2109440",
    "end": "2114520"
  },
  {
    "text": "third one is interesting it could be a viewer from parent so if there is a parent parent is a folder if there is a",
    "start": "2114520",
    "end": "2121640"
  },
  {
    "text": "user with uh if there is a folder and it has a viewer relationship it can inside",
    "start": "2121640",
    "end": "2127800"
  },
  {
    "text": "of it it can also be a viewer for a document so for the third type folder we",
    "start": "2127800",
    "end": "2134240"
  },
  {
    "text": "Define a viewer so if user Kate is a viewer of a folder product then and if",
    "start": "2134240",
    "end": "2140560"
  },
  {
    "text": "the folder product has a document road map then user Kate is also a viewer for",
    "start": "2140560",
    "end": "2146800"
  },
  {
    "text": "the document road map because we have defined the third relation that a viewer from parent can also be a viewer for the",
    "start": "2146800",
    "end": "2155400"
  },
  {
    "text": "document all right and how do we Define all these data we Define that is in the",
    "start": "2155960",
    "end": "2161000"
  },
  {
    "text": "relationship tles so authorization model is where we Define the basic schema of",
    "start": "2161000",
    "end": "2166040"
  },
  {
    "text": "how things are going to run in our database and relationship tles is where we actually provide the data to",
    "start": "2166040",
    "end": "2172440"
  },
  {
    "text": "instantiate our authorization models data with so the first one user Kate has",
    "start": "2172440",
    "end": "2179160"
  },
  {
    "text": "a relation of viewer with the object folder product so we are just specifying",
    "start": "2179160",
    "end": "2184520"
  },
  {
    "text": "that Kate is a viewer of product folder because that's in our authorization",
    "start": "2184520",
    "end": "2189560"
  },
  {
    "text": "model so we can Define this relationship tle like this the next one that we are defining",
    "start": "2189560",
    "end": "2195040"
  },
  {
    "text": "is that folder product is a parent of the document road",
    "start": "2195040",
    "end": "2201078"
  },
  {
    "text": "map the next relationship is user John is a viewer of document road map now",
    "start": "2201359",
    "end": "2207319"
  },
  {
    "text": "user John doesn't have any access to the folder product he's directly assigned to the road map",
    "start": "2207319",
    "end": "2212839"
  },
  {
    "text": "document whereas Kate doesn't have direct access to road map she's assigned uh to the folder",
    "start": "2212839",
    "end": "2220200"
  },
  {
    "text": "instead now once we have defined our relationships the next thing we need to do is check whether these relationships",
    "start": "2220200",
    "end": "2227280"
  },
  {
    "text": "work and we can do that by writing some assertions and our first assumtion is is",
    "start": "2227280",
    "end": "2233319"
  },
  {
    "text": "user David a viewer of document road map so fga will go to the authorization",
    "start": "2233319",
    "end": "2239359"
  },
  {
    "text": "model it will check the relationship viewer it will see that a viewer can be a directly assigned user but we don't",
    "start": "2239359",
    "end": "2246720"
  },
  {
    "text": "have David as directly assigned anywhere to the document road map we only have John and we have Kate who have access to",
    "start": "2246720",
    "end": "2253680"
  },
  {
    "text": "road map document so the assertion will be false because David doesn't have any access to",
    "start": "2253680",
    "end": "2260880"
  },
  {
    "text": "it for the next check we are checking is John a viewer of road map document now",
    "start": "2260880",
    "end": "2266319"
  },
  {
    "text": "this assertion will be true because we have directly specified it in our relationship tle that John has access to",
    "start": "2266319",
    "end": "2272720"
  },
  {
    "text": "the document the third one uh is does user Kate have access as a viewer to the road",
    "start": "2272720",
    "end": "2279720"
  },
  {
    "text": "map document now this one will make use of two different tles to figure out that",
    "start": "2279720",
    "end": "2284839"
  },
  {
    "text": "yes gate has access to document road map because she has access to folder product and folder product is the parent of",
    "start": "2284839",
    "end": "2291640"
  },
  {
    "text": "document road map so Kate indirectly has access to",
    "start": "2291640",
    "end": "2296920"
  },
  {
    "text": "it so now when we implement reback we think from a different perspective we no",
    "start": "2296920",
    "end": "2302720"
  },
  {
    "text": "longer directly check like can a user you perform an action in object o like",
    "start": "2302720",
    "end": "2308280"
  },
  {
    "text": "can Kate view the document we don't directly think in terms of actions we think like does Kate have viewer",
    "start": "2308280",
    "end": "2314440"
  },
  {
    "text": "relation with document road map that relation can be inherited either directly or through a series of nested",
    "start": "2314440",
    "end": "2321079"
  },
  {
    "text": "steps from a big hierarchical graph rather than having direct access so when",
    "start": "2321079",
    "end": "2326599"
  },
  {
    "text": "we build our model we have to start thinking about in the second way think about the relations between one object",
    "start": "2326599",
    "end": "2332240"
  },
  {
    "text": "and the other object",
    "start": "2332240",
    "end": "2335760"
  },
  {
    "text": "cool uh I think that was a lot of talking now I will like to show you uh a bit of fga demo and for my demo I'm",
    "start": "2337960",
    "end": "2345599"
  },
  {
    "text": "going to be using the open FG playground it is another tool built by OCTA but",
    "start": "2345599",
    "end": "2350640"
  },
  {
    "text": "it's free to sign up you you don't have to provide your details or anything you can just go to the website and start",
    "start": "2350640",
    "end": "2356520"
  },
  {
    "text": "playing around with it it has some pre-built models and you can also create your own authorization model to play",
    "start": "2356520",
    "end": "2362240"
  },
  {
    "text": "around with it on that and it's mainly for learning purposes uh we don't recommend to use it production because",
    "start": "2362240",
    "end": "2368800"
  },
  {
    "text": "the data is only stored locally in the browser so yeah let's take a look at",
    "start": "2368800",
    "end": "2376280"
  },
  {
    "text": "that just",
    "start": "2377040",
    "end": "2383680"
  },
  {
    "text": "okay is the screen visible at the back the at the corner can you guys see the",
    "start": "2385240",
    "end": "2391720"
  },
  {
    "text": "schema okay if not okay this is basically the same model that I explained in the previous",
    "start": "2391720",
    "end": "2397960"
  },
  {
    "text": "previous slides it looks similar to this yeah it's the same thing where you have like three different elements user",
    "start": "2397960",
    "end": "2405240"
  },
  {
    "text": "document folder and the document object has different relations like parent",
    "start": "2405240",
    "end": "2411200"
  },
  {
    "text": "owner viewer so you can specify the schema here and then you can write the tles",
    "start": "2411200",
    "end": "2418000"
  },
  {
    "text": "like I showed in the example and then you can also write assertions in this tool to check now once you have run all",
    "start": "2418000",
    "end": "2425040"
  },
  {
    "text": "these things either you can just uh run the stions here which will show you how",
    "start": "2425040",
    "end": "2430680"
  },
  {
    "text": "things work or you can go to this query part where you can write queries in",
    "start": "2430680",
    "end": "2437280"
  },
  {
    "text": "plain English and it will show a whole graph of how decision was achieved so",
    "start": "2437280",
    "end": "2442920"
  },
  {
    "text": "let's try something is user",
    "start": "2442920",
    "end": "2449680"
  },
  {
    "text": "gate related to document road map as owner I don't think she's let's just try",
    "start": "2449680",
    "end": "2455280"
  },
  {
    "text": "out the viewer part first",
    "start": "2455280",
    "end": "2459240"
  },
  {
    "text": "so one second so the answer is yes and what",
    "start": "2460400",
    "end": "2467480"
  },
  {
    "text": "open fga does it goes through a whole tree of how it uh access the how it made",
    "start": "2467480",
    "end": "2475319"
  },
  {
    "text": "the authorization decision for that specific user it looks through the different possibilities like who are the",
    "start": "2475319",
    "end": "2480520"
  },
  {
    "text": "viewers for document road map it's it started with the direct user there is",
    "start": "2480520",
    "end": "2486359"
  },
  {
    "text": "one direct user user John who is the road map uh document viewer then there",
    "start": "2486359",
    "end": "2491960"
  },
  {
    "text": "is U related from the same object people who are owner of the document will have viewer access and then it figures out",
    "start": "2491960",
    "end": "2498880"
  },
  {
    "text": "through a tree that user Kate also has access because she is a direct user of folder product and folder product is a",
    "start": "2498880",
    "end": "2506480"
  },
  {
    "text": "viewer of the document road map so that's how the authorization decision was achieved and if we just look at user",
    "start": "2506480",
    "end": "2515720"
  },
  {
    "text": "John now for this the tree is as simple as that he's directly assigned it worked",
    "start": "2515720",
    "end": "2521520"
  },
  {
    "text": "out but if we check out for another user it doesn't work because user Pete is not",
    "start": "2521520",
    "end": "2528200"
  },
  {
    "text": "related to the document as viewer so there is no access for user Pete and",
    "start": "2528200",
    "end": "2533400"
  },
  {
    "text": "none of the paths matched how Pete will have access so you can use fga",
    "start": "2533400",
    "end": "2538640"
  },
  {
    "text": "playground for to play around with different authorization models and there",
    "start": "2538640",
    "end": "2543839"
  },
  {
    "text": "are a bunch of different pre-built examples like there is an expense related example where the use case is",
    "start": "2543839",
    "end": "2551680"
  },
  {
    "text": "essentially how you can submit expenses uh let me see if I have it here",
    "start": "2551680",
    "end": "2558240"
  },
  {
    "text": "yeah this is the authorization model where there is an employee and a report and employe can submit an expense report",
    "start": "2558240",
    "end": "2565240"
  },
  {
    "text": "and their manager can approve the report or their manager's manager can approve the report so Define can manage relation",
    "start": "2565240",
    "end": "2573319"
  },
  {
    "text": "specifies that an employer can have an employee can be managed by",
    "start": "2573319",
    "end": "2578440"
  },
  {
    "text": "either their manager or the next one up in the hierarchical order and then there is the second type which is type report",
    "start": "2578440",
    "end": "2585640"
  },
  {
    "text": "where there is an approver approver is usually their manager from the submitter",
    "start": "2585640",
    "end": "2591839"
  },
  {
    "text": "can manage from submitter and submitter is essentially the employee who submits the report so let's take an example that",
    "start": "2591839",
    "end": "2598160"
  },
  {
    "text": "there is there are four people Emily manages Sam Sam manages Matt and Matt",
    "start": "2598160",
    "end": "2604000"
  },
  {
    "text": "manages Daniel and I have have written a few um there are a few tles here already",
    "start": "2604000",
    "end": "2612240"
  },
  {
    "text": "employ Matt is a manager of Daniel Sam is a manager of Matt Emily manages Sam",
    "start": "2612240",
    "end": "2617920"
  },
  {
    "text": "and Daniel submits the a report uh which is called Daniel chair one Sam also",
    "start": "2617920",
    "end": "2623680"
  },
  {
    "text": "submits a report Sam chair one and now let's",
    "start": "2623680",
    "end": "2629520"
  },
  {
    "text": "see who has access to approve uh let's say Sam's report so I have again some",
    "start": "2629520",
    "end": "2636280"
  },
  {
    "text": "assertions here can employ Matt manage employer Daniel",
    "start": "2636280",
    "end": "2641520"
  },
  {
    "text": "so if we just check our tree yeah employe Matt can manage Daniel because",
    "start": "2641520",
    "end": "2646760"
  },
  {
    "text": "Matt is an manager and then we see can Emily approve Daniel's report because",
    "start": "2646760",
    "end": "2652920"
  },
  {
    "text": "Emily at the top of the hierarchy she can approve it even though they don't have a direct relations to it so let's",
    "start": "2652920",
    "end": "2661079"
  },
  {
    "text": "just try that one out",
    "start": "2661079",
    "end": "2664960"
  },
  {
    "text": "this is just a playground so it's a bit panicky all right so this is the decision tree which was built to figure",
    "start": "2675319",
    "end": "2682839"
  },
  {
    "text": "out can Emily manage it and it's yeah oh all right so essentially um",
    "start": "2682839",
    "end": "2691559"
  },
  {
    "text": "I'm not good with the touchpad so yeah this is the decision tree that was made which figured out can",
    "start": "2691559",
    "end": "2698480"
  },
  {
    "text": "manage Sam to manage Daniel to approve their",
    "start": "2698480",
    "end": "2704079"
  },
  {
    "text": "reports so you can play around with the playground here and there are a bunch of different models there are even more complex models like how Google Drive",
    "start": "2704079",
    "end": "2711839"
  },
  {
    "text": "functions so there are documents you can Define multiple relations like who can",
    "start": "2711839",
    "end": "2717160"
  },
  {
    "text": "be uh I showed a very simple version of it it in my demo but there can be a folder there can be document there can",
    "start": "2717160",
    "end": "2723960"
  },
  {
    "text": "be create file groups user different things and there is another example which is quite cool which is",
    "start": "2723960",
    "end": "2730559"
  },
  {
    "text": "GitHub GitHub model can have organizations where there is repo admin",
    "start": "2730559",
    "end": "2736319"
  },
  {
    "text": "repo reader there can be repos repos will have admins maintainers owners rer",
    "start": "2736319",
    "end": "2743200"
  },
  {
    "text": "writer different roles and relations so do check out this playground and you don't even need to",
    "start": "2743200",
    "end": "2749920"
  },
  {
    "text": "sign up it's free to use you can just build your own model with it if you want to build your own model you just have to",
    "start": "2749920",
    "end": "2756359"
  },
  {
    "text": "go to towards the side one second yeah you can build a new store",
    "start": "2756359",
    "end": "2762960"
  },
  {
    "text": "and you can start with building your own authorization model write your own relationship tles to it write your assertion checks and there is an API",
    "start": "2762960",
    "end": "2769880"
  },
  {
    "text": "available as well so if you want to query this model you just need to get the model IDs and you can just U hit",
    "start": "2769880",
    "end": "2776800"
  },
  {
    "text": "them with from the open fga apis all right back to the slideshow",
    "start": "2776800",
    "end": "2785359"
  },
  {
    "text": "okay so now I would like to just share some tools and resources that you can leverage further to build upon your fine",
    "start": "2788480",
    "end": "2794280"
  },
  {
    "text": "grain authorization knowledge uh the first thing that I would like to briefly talk about is we",
    "start": "2794280",
    "end": "2799920"
  },
  {
    "text": "also offer we are talked to also offer a managed version of fine grain authorization and if it's suitable for",
    "start": "2799920",
    "end": "2805839"
  },
  {
    "text": "your business you can always take a look at that the open fga product is free to use and our managed version is built on",
    "start": "2805839",
    "end": "2812319"
  },
  {
    "text": "top of it and the the main things that it offers is high availability slas if",
    "start": "2812319",
    "end": "2818400"
  },
  {
    "text": "for meeting compliance there is low latency and you can deploy in like public Cloud private Cloud it leverages",
    "start": "2818400",
    "end": "2824319"
  },
  {
    "text": "Dynamo DB and replication all the good stuff AWS provides but if you want to",
    "start": "2824319",
    "end": "2829480"
  },
  {
    "text": "deploy your own open FG server you can connect it to your postra system my SQL sqlite and this manag version ensures",
    "start": "2829480",
    "end": "2836760"
  },
  {
    "text": "that you are in compliant and it's available in a variety of different region that AWS",
    "start": "2836760",
    "end": "2843359"
  },
  {
    "text": "has all good okay other than that we do have some high quality tooling and",
    "start": "2843359",
    "end": "2848720"
  },
  {
    "text": "developer experience resources like there is a vs code extension that you can use while writing your models which",
    "start": "2848720",
    "end": "2854720"
  },
  {
    "text": "will tell you if you are making any mistakes there are sdks for open fga in",
    "start": "2854720",
    "end": "2860000"
  },
  {
    "text": "all the common languages JavaScript python Donnet you can use the GitHub",
    "start": "2860000",
    "end": "2865599"
  },
  {
    "text": "action to deploy your models and for testing it there is a CLI available as well to um run the model checks write",
    "start": "2865599",
    "end": "2873319"
  },
  {
    "text": "queries add assertions all these different things can be done through the CLI if you want to live in the",
    "start": "2873319",
    "end": "2880640"
  },
  {
    "text": "terminal and for every feature that I talked about like uh updating the model",
    "start": "2881160",
    "end": "2886599"
  },
  {
    "text": "writing relationship tles updating assertions executing the checks where",
    "start": "2886599",
    "end": "2891800"
  },
  {
    "text": "you are validating we have apis exposed for all the different features so whatever can be done through playground",
    "start": "2891800",
    "end": "2898400"
  },
  {
    "text": "or our manage version you can just go to the apis and uh this is the API",
    "start": "2898400",
    "end": "2904000"
  },
  {
    "text": "documentation link and you can just leverage apis for them or the sdks whatever you",
    "start": "2904000",
    "end": "2910640"
  },
  {
    "text": "prefer the API implementation looks somewhat similar to this where there is a this is a post request example of the",
    "start": "2911119",
    "end": "2918640"
  },
  {
    "text": "check API request where you just call the fga client. check method and you",
    "start": "2918640",
    "end": "2923839"
  },
  {
    "text": "pass in the user ID relation and object so everything in fga comes down to the",
    "start": "2923839",
    "end": "2929680"
  },
  {
    "text": "user type the relation and the object and you are just validating is user 8168",
    "start": "2929680",
    "end": "2937839"
  },
  {
    "text": "uh does the user 816 set have uh can view relation to the document road map",
    "start": "2937839",
    "end": "2943000"
  },
  {
    "text": "if it it does have the relation the result is true and then you can go ahead with the rest of your business logic if",
    "start": "2943000",
    "end": "2948799"
  },
  {
    "text": "the result is false you can just throw the Forbidden error that there and",
    "start": "2948799",
    "end": "2954040"
  },
  {
    "text": "then and just again this the example of how you implement it in the code if it",
    "start": "2954040",
    "end": "2959280"
  },
  {
    "text": "gives a result of allowed is true then go ahead with the sending the document",
    "start": "2959280",
    "end": "2964480"
  },
  {
    "text": "return the document if allowed is false then just throw an error and end the logic right",
    "start": "2964480",
    "end": "2970359"
  },
  {
    "text": "there another API example is this right example where you can Leverage The Open",
    "start": "2970359",
    "end": "2975839"
  },
  {
    "text": "FG API to write the relationship tles and um you just specify the user",
    "start": "2975839",
    "end": "2982240"
  },
  {
    "text": "relation and object and and all these relationship tles will be uploaded you",
    "start": "2982240",
    "end": "2988160"
  },
  {
    "text": "can also delete the tles using the apis and just make sure that whichever model you are using once you are hitting the",
    "start": "2988160",
    "end": "2994760"
  },
  {
    "text": "aps you specify the correct model ID because because every time you update your authorization model a new version",
    "start": "2994760",
    "end": "3000440"
  },
  {
    "text": "is generated tles relationship tles can",
    "start": "3000440",
    "end": "3005640"
  },
  {
    "text": "exist okay okay another um just an API implementation example there is a create",
    "start": "3005640",
    "end": "3011240"
  },
  {
    "text": "document function you first check whether the user is authorized to create a document using the check API if the",
    "start": "3011240",
    "end": "3017880"
  },
  {
    "text": "user is not authorized throw the error if the user is authorized then you can um allow the user to write some new tles",
    "start": "3017880",
    "end": "3025760"
  },
  {
    "text": "in the database so it can be a user relation owner mechanism",
    "start": "3025760",
    "end": "3033160"
  },
  {
    "text": "again all right that pretty much brings me to the end of our conversation today",
    "start": "3034440",
    "end": "3039960"
  },
  {
    "text": "and I would like to end this with talking about how you should decide is fga the",
    "start": "3039960",
    "end": "3046720"
  },
  {
    "text": "right product for you now this thing will pretty much depend on five main features the first one being granularity",
    "start": "3046720",
    "end": "3055480"
  },
  {
    "text": "if you want your your customers to have if you want your users to have granular",
    "start": "3055480",
    "end": "3061040"
  },
  {
    "text": "permissions to access different resources within your application your system different resources different",
    "start": "3061040",
    "end": "3067400"
  },
  {
    "text": "authorization checks which are also Dynamic and based on a bunch of different attributes if granularity is",
    "start": "3067400",
    "end": "3074240"
  },
  {
    "text": "your requirement FG is the absolute best tool for you if you want to improve the developer",
    "start": "3074240",
    "end": "3080920"
  },
  {
    "text": "efficiency by making sure that authorization is separate from your application layer so your de velers have",
    "start": "3080920",
    "end": "3087079"
  },
  {
    "text": "to spend less time figuring out Access Control issues again fga will fit the bill there if you want to have like",
    "start": "3087079",
    "end": "3095119"
  },
  {
    "text": "efficient if you want to have efficient compliance and auditing related capabilities you want to meet different",
    "start": "3095119",
    "end": "3101000"
  },
  {
    "text": "compliance you want to check the audit logs frequently for any violations or raise alarms when things go Haywire then",
    "start": "3101000",
    "end": "3108359"
  },
  {
    "text": "again fga can fit be a good fit for you and yeah you improve your overall",
    "start": "3108359",
    "end": "3114440"
  },
  {
    "text": "security posture because when authorized ation is implemented inside the code it has a tendency to lead to inconsistent",
    "start": "3114440",
    "end": "3121599"
  },
  {
    "text": "implementation throughout the application layer but when authorization is implemented centrally then you just",
    "start": "3121599",
    "end": "3127200"
  },
  {
    "text": "have one place to check where things can might go wrong so the surface area for",
    "start": "3127200",
    "end": "3133319"
  },
  {
    "text": "malicious actors to attack your application reduces when you implement it centrally and lastly",
    "start": "3133319",
    "end": "3140599"
  },
  {
    "text": "complexity customers usually don't have a single pain glass of view when they are looking at Access Control",
    "start": "3140599",
    "end": "3147319"
  },
  {
    "text": "when it is implemented through traditional ways but with the centralized authorization mechanism you just have one place where everything is",
    "start": "3147319",
    "end": "3155040"
  },
  {
    "text": "implemented the complexity surely comes down to that and with that if these things work out well then you can",
    "start": "3155040",
    "end": "3161680"
  },
  {
    "text": "efficiently scale your business as well so you don't as you get more users more",
    "start": "3161680",
    "end": "3166960"
  },
  {
    "text": "resources you can just modify that Central layer with new relationship coules you can change the authorization",
    "start": "3166960",
    "end": "3173480"
  },
  {
    "text": "model you can take away permissions like there is an owner relation which used to",
    "start": "3173480",
    "end": "3179359"
  },
  {
    "text": "have viewer relation as well but you can take away viewer relation and you don't need to change the whole database you",
    "start": "3179359",
    "end": "3185240"
  },
  {
    "text": "just need to modify your model rather than all the relationship tles the relation name can still be the same but the permissions are reduced so with",
    "start": "3185240",
    "end": "3192920"
  },
  {
    "text": "these things in mind if they work out fga is the tool for you how can you explore open fga further",
    "start": "3192920",
    "end": "3200760"
  },
  {
    "text": "these are some links that you can take a picture of um we have a open source repo there the Twitter is also quite active",
    "start": "3200760",
    "end": "3207520"
  },
  {
    "text": "we have a YouTube channel as well which you can go and if any of you are on the cncf slack we have a dedicated open fgs",
    "start": "3207520",
    "end": "3215119"
  },
  {
    "text": "Slack there where people from the community and also people from OCTA hangout answer questions I think we do",
    "start": "3215119",
    "end": "3221319"
  },
  {
    "text": "office hours every Monday or if I'm not wrong and there's ozero Community as",
    "start": "3221319",
    "end": "3226720"
  },
  {
    "text": "well which is free to use you can come there ask questions around FG documentation and yeah the playground",
    "start": "3226720",
    "end": "3232799"
  },
  {
    "text": "what I showed you Plus thank you so much for being with me",
    "start": "3232799",
    "end": "3239200"
  },
  {
    "text": "at 9:00 a.m. I know it was an early start for everyone and if you have further questions or if you want to",
    "start": "3239200",
    "end": "3245200"
  },
  {
    "text": "brainstorm some FG models you can come by our booth it's just below this floor",
    "start": "3245200",
    "end": "3250480"
  },
  {
    "text": "and right by the stairs and we will be happy to help you out we have a couple of FG experts sitting there waiting to",
    "start": "3250480",
    "end": "3255799"
  },
  {
    "text": "answer your questions as well thank you [Applause]",
    "start": "3255799",
    "end": "3266190"
  }
]