[
  {
    "start": "0",
    "end": "184000"
  },
  {
    "text": "so my name is Jimmy Bogart you can find me on twitter @jrfromptc",
    "start": "3649",
    "end": "9580"
  },
  {
    "text": "so you were here some some y'all's dropped every now and again but so for my day job I work with clients to build",
    "start": "23300",
    "end": "30619"
  },
  {
    "text": "complex custom systems and so this this presentation is the story of one of our",
    "start": "30619",
    "end": "37309"
  },
  {
    "text": "clients who moved from sequel server originally to MongoDB but eventually to",
    "start": "37309",
    "end": "43129"
  },
  {
    "text": "Azure cosmos DB now why do people move from sequel to MongoDB like it's the",
    "start": "43129",
    "end": "49699"
  },
  {
    "text": "cool thing to do right it's something else to put in your resume resume driven development so for them it was a little",
    "start": "49699",
    "end": "57260"
  },
  {
    "text": "bit more complicated so they had a it was a very large manufacturing clients and their existing system was built on",
    "start": "57260",
    "end": "63440"
  },
  {
    "text": "top of sequel server to actually run the manufacturing floor and they purchased a",
    "start": "63440",
    "end": "68930"
  },
  {
    "text": "new company who had a completely different manufacturing process that meant that had to go change the existing",
    "start": "68930",
    "end": "74480"
  },
  {
    "text": "system but they found out that it was going to be very very difficult to change their existing system so they said right let's go micro services right",
    "start": "74480",
    "end": "80990"
  },
  {
    "text": "that's what you do so they built an entirely new manufacturing product to the side to help run this new kind of",
    "start": "80990",
    "end": "87080"
  },
  {
    "text": "manufacturing line but the DBA is got ahold of it or got wind of this that",
    "start": "87080",
    "end": "92210"
  },
  {
    "text": "they were building a new system that was using a different database than what their their single canonical model they",
    "start": "92210",
    "end": "98240"
  },
  {
    "text": "said wait a second that's duplicate data get to put that data inside sequel server so like twelve months of back and",
    "start": "98240",
    "end": "104030"
  },
  {
    "text": "forth trying to fight to get these two models to go together it didn't work but the DBAs wouldn't let them go any",
    "start": "104030",
    "end": "109040"
  },
  {
    "text": "farther so what do they do they cut the DBAs out of the conversation and said right we're going MongoDB",
    "start": "109040",
    "end": "114310"
  },
  {
    "text": "so I'm gonna say that's a very good reason to go MongoDB to say like we host don't want to talk to the DBAs anymore",
    "start": "114310",
    "end": "120680"
  },
  {
    "text": "so we just want use the database but it worked for them so they got about six",
    "start": "120680",
    "end": "126530"
  },
  {
    "text": "months down the line building this new product on top of MongoDB getting ready to go to production and like wait a minute we need resiliency we need",
    "start": "126530",
    "end": "132950"
  },
  {
    "text": "they'll have like actual backups of this thing and and replication things like that so what they found out though was going",
    "start": "132950",
    "end": "138700"
  },
  {
    "text": "from MongoDB the free version to MongoDB the enterprise version is a very very expensive thing to do and so what they",
    "start": "138700",
    "end": "146290"
  },
  {
    "text": "were gonna wind up having to do is deploy both a very expensive sequel server license and also a very expensive",
    "start": "146290",
    "end": "151420"
  },
  {
    "text": "MongoDB license so they're really freaked out so they looked at Azure cosmos DB as a means to get off of the",
    "start": "151420",
    "end": "158710"
  },
  {
    "text": "very expensive MongoDB license and instead have their database in the cloud so we're talked about in this",
    "start": "158710",
    "end": "165460"
  },
  {
    "text": "presentation a little bit about what cosmos DB is about why you may want to use it some of the things that you'll",
    "start": "165460",
    "end": "170800"
  },
  {
    "text": "run into going from a sequel database and not just the model that's there but",
    "start": "170800",
    "end": "175810"
  },
  {
    "text": "just some of the other kind of application and system level things that you see there and then what's the",
    "start": "175810",
    "end": "181480"
  },
  {
    "text": "different things you'll see in Azure cosmos DB so first what is Azure cosmos",
    "start": "181480",
    "end": "186730"
  },
  {
    "start": "184000",
    "end": "407000"
  },
  {
    "text": "DB well it used to be called document DB that could just do basically document",
    "start": "186730",
    "end": "191920"
  },
  {
    "text": "database in the cloud and that's really how was marketed as it turns out how they built the infrastructure of Cosmos",
    "start": "191920",
    "end": "197709"
  },
  {
    "text": "DB meant that they could not just store documents in the cloud but they could store a lot of different kinds of things in this one single kind of globally",
    "start": "197709",
    "end": "205209"
  },
  {
    "text": "distributed database and so that's what Azure cosmos DB is it's a globally distributed multi model database service",
    "start": "205209",
    "end": "211750"
  },
  {
    "text": "and what do I mean by multi model so some of the things they have up there they've got key value stores column",
    "start": "211750",
    "end": "219400"
  },
  {
    "text": "their family stores documents which that's what we were using and a graph as well and so what the multi model means",
    "start": "219400",
    "end": "227170"
  },
  {
    "text": "is you have different querying api's over your databases now one thing that we found out very early on with moving",
    "start": "227170",
    "end": "233980"
  },
  {
    "text": "from sequel to cosmos DB is that you have to actually decide what kind of models you're going to be storing in",
    "start": "233980",
    "end": "239230"
  },
  {
    "text": "your database you can't just pick like well these are gonna be documents over here and this is gonna be graph over here you have to decide upfront what",
    "start": "239230",
    "end": "246550"
  },
  {
    "text": "your model is going to be inside of Cosmos DB and really what you're doing is selecting an API surface for how to",
    "start": "246550",
    "end": "253269"
  },
  {
    "text": "both query and get in both query information and update information inside that document database or what",
    "start": "253269",
    "end": "261010"
  },
  {
    "text": "yes cosmos database really so some of the API is available for you if you want",
    "start": "261010",
    "end": "266410"
  },
  {
    "text": "sequel over JSON which I know is a little bit weird but it's a thing you choose the sequel and save a very sequel like syntax for",
    "start": "266410",
    "end": "273170"
  },
  {
    "text": "querying over your documents if you want a just kind of plain old document database you don't just pick document",
    "start": "273170",
    "end": "278180"
  },
  {
    "text": "you say I wanted to use documents but also use the DP API so what that",
    "start": "278180",
    "end": "283340"
  },
  {
    "text": "means though is that when you pick MongoDB you can just use regular off-the-shelf MongoDB clients to talk to",
    "start": "283340",
    "end": "290060"
  },
  {
    "text": "as your cosmos DB which is really great for our client because basically they just changed the connection string to go",
    "start": "290060",
    "end": "295940"
  },
  {
    "text": "from database locally the very expensive one to then point to the cloud I don't think it was gonna be that easy",
    "start": "295940",
    "end": "302000"
  },
  {
    "text": "bid for MongoDB it actually was now some of the other ones you have columnar so you could use the Cassandra API table I",
    "start": "302000",
    "end": "308690"
  },
  {
    "text": "don't know why you do that but there it is Azure table stores to go against the Azure table API and it forced the graph",
    "start": "308690",
    "end": "313820"
  },
  {
    "text": "database you could use that wacky querying language with gremlin now there are some gotchas with some of these",
    "start": "313820",
    "end": "320060"
  },
  {
    "text": "querying api's not all the query API support all of the features of the",
    "start": "320060",
    "end": "325850"
  },
  {
    "text": "underlying actual full query set so you can't necessarily take your local neo4j",
    "start": "325850",
    "end": "332060"
  },
  {
    "text": "database and just say I'm gonna point to eyes our cosmos T because it might not support all those different kinds of",
    "start": "332060",
    "end": "338120"
  },
  {
    "text": "queries that are available and the full product full feature set so and another clients we were running a neo4j instance",
    "start": "338120",
    "end": "345080"
  },
  {
    "text": "which is a graph database in a virtual machine which is like the stupidest thing to do in Azure because it's like the most expensive thing and a thing",
    "start": "345080",
    "end": "351500"
  },
  {
    "text": "they really don't want to do they're trying to push you towards platform-as-a-service so that right let's go to this horrible VM the with",
    "start": "351500",
    "end": "357620"
  },
  {
    "text": "domain to maintain and just point it now at Azure cosmos DB but like half our queries didn't work because it didn't",
    "start": "357620",
    "end": "363860"
  },
  {
    "text": "support those specific things so just something to keep in mind it's not necessarily gonna be as easy as pointing",
    "start": "363860",
    "end": "369170"
  },
  {
    "text": "from one database up to the cloud but for MongoDB because it's been a while on the longest that one had the most rich",
    "start": "369170",
    "end": "375080"
  },
  {
    "text": "the richest feature set available for us and on their website they're like yes",
    "start": "375080",
    "end": "380240"
  },
  {
    "text": "and also more to come I don't know what else you could possibly store in here like bananas I don't know I have no idea",
    "start": "380240",
    "end": "385340"
  },
  {
    "text": "what else besides this but because it's a very flexible storage structure underneath the covers they're able to",
    "start": "385340",
    "end": "390800"
  },
  {
    "text": "support all these different models just through different querying api's so like I said it came from as your document DB",
    "start": "390800",
    "end": "397810"
  },
  {
    "text": "so that's that's what you probably used to have heard it called but now it's",
    "start": "397810",
    "end": "403340"
  },
  {
    "text": "cosmos DB because the world or something I don't know so why should we use it to annoy the DBAs",
    "start": "403340",
    "end": "411689"
  },
  {
    "start": "407000",
    "end": "549000"
  },
  {
    "text": "that's one reason I guess but the other big reason is just the different data structure is now available to us that",
    "start": "411689",
    "end": "417839"
  },
  {
    "text": "are pretty difficult to do inside a sequel server so to represent these different kinds of data structures it's",
    "start": "417839",
    "end": "423479"
  },
  {
    "text": "like possible ish but it's still pretty difficult and the underlying sequel doesn't actually support some of the",
    "start": "423479",
    "end": "429809"
  },
  {
    "text": "complex query capabilities and ap is that to do these different kind of models as well now the other big thing",
    "start": "429809",
    "end": "436800"
  },
  {
    "text": "of course is the globally distributed parts so they've built cosmos DB to be a globally available cloud scale whatever",
    "start": "436800",
    "end": "444809"
  },
  {
    "text": "kind of cloud buzzword you want to put on top of it so it allows it to be geo replicated across the entire world know",
    "start": "444809",
    "end": "452309"
  },
  {
    "text": "our clients didn't really need this because it's another ones like expensive check boxes and Azure that you had to be",
    "start": "452309",
    "end": "457649"
  },
  {
    "text": "really careful about so they didn't really need this but they knew that if ever wanted to be able to push out like inventory system globally it was fairly",
    "start": "457649",
    "end": "464369"
  },
  {
    "text": "straightforward for them to do so now it also can replace some of the existing",
    "start": "464369",
    "end": "471990"
  },
  {
    "text": "already no sequel data stores out there so while these all exist and they're really they're really great and well at",
    "start": "471990",
    "end": "479639"
  },
  {
    "text": "least three of them are great I don't know they're they're very robust",
    "start": "479639",
    "end": "485430"
  },
  {
    "text": "that they're very been around for a very long time but to run these in Azure is",
    "start": "485430",
    "end": "491129"
  },
  {
    "text": "actually pretty difficult so you can go to like the azure as your resource",
    "start": "491129",
    "end": "497899"
  },
  {
    "text": "manager and say I want to deploy a new neo4j instance but what that's doing",
    "start": "497899",
    "end": "503550"
  },
  {
    "text": "behind the scenes is really just spinning up a virtual machine and some other resources for neo4j so you set and",
    "start": "503550",
    "end": "509069"
  },
  {
    "text": "it's still not really doing like platformers of service where it's just I just want a database in the cloud I don't to care about it you're still",
    "start": "509069",
    "end": "515550"
  },
  {
    "text": "provisioning a virtual machine and things like that but if you're not on Azure I'd say that if you're on AWS they",
    "start": "515550",
    "end": "521909"
  },
  {
    "text": "need it's much easier to run these things in those in those different cloud environments so if you're going to Asher",
    "start": "521909",
    "end": "528269"
  },
  {
    "text": "then any one of these things I would say look at cosmos to be instead of like managing your own database instance now",
    "start": "528269",
    "end": "536430"
  },
  {
    "text": "one of the first big things that our client ran into when going from sequel to Azure",
    "start": "536430",
    "end": "541980"
  },
  {
    "text": "cosmos TV or MongoDB first was just modeling schema-less data and they try",
    "start": "541980",
    "end": "548310"
  },
  {
    "text": "to do this in sequel server originally and you've probably done this as well right does anyone have like a table with a",
    "start": "548310",
    "end": "554129"
  },
  {
    "start": "549000",
    "end": "715000"
  },
  {
    "text": "byte array column it's just like don't junk in there and then you have to deserialize it on the way out so you can",
    "start": "554129",
    "end": "559740"
  },
  {
    "text": "do like schema-less ish things and sequel but it's not that it's not that pretty but turnout sequel server itself",
    "start": "559740",
    "end": "565949"
  },
  {
    "text": "has supported some kind of schema less data for quite a long time so you could do things like XML columns all right",
    "start": "565949",
    "end": "574249"
  },
  {
    "text": "well it's better than storing XML in your database or you can actually output data as XML so you could say yes I have",
    "start": "574249",
    "end": "581430"
  },
  {
    "text": "this structured query with this very specific projection but just go ahead and expose it out as XML and I think",
    "start": "581430",
    "end": "587759"
  },
  {
    "text": "people would do like one step further which is directly expose these as soap web services I wouldn't suggest doing",
    "start": "587759",
    "end": "593339"
  },
  {
    "text": "that but that's the thing people have done but new in sequel server 2012 ish",
    "start": "593339",
    "end": "598920"
  },
  {
    "text": "timeline was the ability to manage JSON data directly inside the database and so",
    "start": "598920",
    "end": "604529"
  },
  {
    "text": "they had special functions and data types to be able to do so so you could do something like this where you had a",
    "start": "604529",
    "end": "610050"
  },
  {
    "text": "projection that would project out into adjacent document with all this kind of weird querying weird API to be able to",
    "start": "610050",
    "end": "617759"
  },
  {
    "text": "do so so again it's like possible in sequel server to do JSON based documents",
    "start": "617759",
    "end": "623910"
  },
  {
    "text": "but the syntax is pretty ugly and it's nowhere near as robust as other sequel",
    "start": "623910",
    "end": "629339"
  },
  {
    "text": "servers like Postgres which has really really great support for JSON inside the database so looked at this and said",
    "start": "629339",
    "end": "635759"
  },
  {
    "text": "writes if we do this the DBS are still gonna hate us so even though sequel server like supports it it doesn't",
    "start": "635759",
    "end": "642059"
  },
  {
    "text": "achieve our goal of like never talking to the DBAs ever again so that's not what they want up going with like I",
    "start": "642059",
    "end": "650220"
  },
  {
    "text": "mentioned before when they went to production they had the problem of just figure out how to how to how to make",
    "start": "650220",
    "end": "657179"
  },
  {
    "text": "sure they had resiliency with their  database so a sequel server does have this ability to have fail overs and",
    "start": "657179",
    "end": "663779"
  },
  {
    "text": "things like that so this is like this is the always-on capability of sequel",
    "start": "663779",
    "end": "669600"
  },
  {
    "text": "server that's again like one of the really expensive checkbox is that you can check inside sequel server like when you check that suddenly",
    "start": "669600",
    "end": "675480"
  },
  {
    "text": "your bank accounts goes nuts - nothing procurement starts to yell you because it's a very expensive feature inside a",
    "start": "675480",
    "end": "680790"
  },
  {
    "text": "sequel server but the idea here is that if one of your nodes goes down you can automatically fail automatically be",
    "start": "680790",
    "end": "687240"
  },
  {
    "text": "switched over to one of the other running instances it's a very expensive thing to do when you're hosting your own sequel server databases as they were it",
    "start": "687240",
    "end": "696720"
  },
  {
    "text": "is becoming more available in different sequel server editions but again for them they didn't want to talk to the",
    "start": "696720",
    "end": "703050"
  },
  {
    "text": "DBAs so even though they had this they this already super expensive sequel instance with the like the most",
    "start": "703050",
    "end": "708480"
  },
  {
    "text": "expensive yeses and those columns it just wasn't going to work for them to build a new product so just",
    "start": "708480",
    "end": "717930"
  },
  {
    "start": "715000",
    "end": "1167000"
  },
  {
    "text": "transitioning from sequel they had a really difficult transition just modeling their information so in typical",
    "start": "717930",
    "end": "725430"
  },
  {
    "text": "sequel server modeling you're you're figuring out what are your what are your nouns and what are those relationships",
    "start": "725430",
    "end": "731430"
  },
  {
    "text": "so what are the entities and the relationships you start to build diagrams like this where you have like well I have a product and a product has",
    "start": "731430",
    "end": "737310"
  },
  {
    "text": "many items and product and there's categories and things like that so you have this very structured view of the",
    "start": "737310",
    "end": "743190"
  },
  {
    "text": "world this also gives you some very flexible querying capability so you can kind of start from any direction and go",
    "start": "743190",
    "end": "748920"
  },
  {
    "text": "any which way you want but in cosmos DB you're not modeling with entities and",
    "start": "748920",
    "end": "755370"
  },
  {
    "text": "relationships instead you're modeling documents as a whole so something like this where I have like a product has",
    "start": "755370",
    "end": "761610"
  },
  {
    "text": "many what else is on here model and description oh good lord that's a lot of",
    "start": "761610",
    "end": "768090"
  },
  {
    "text": "junk in there so to go from this to to be able to model individual documents",
    "start": "768090",
    "end": "774300"
  },
  {
    "text": "it's pretty difficult where do you draw the lines here what belongs in a document this document versus other",
    "start": "774300",
    "end": "779370"
  },
  {
    "text": "documents you can't just join inside a document DB or cosmos TV you have to get one",
    "start": "779370",
    "end": "784740"
  },
  {
    "text": "document and then get the other so you every single document has to be very self-contained of the information that it has so they can't just take their",
    "start": "784740",
    "end": "792150"
  },
  {
    "text": "existing modeling tools and existing modeling their ghostly modeling capabilities and just say we're going to",
    "start": "792150",
    "end": "798210"
  },
  {
    "text": "do that inside a document DB and so they're building documents to look a little bit like this so this is",
    "start": "798210",
    "end": "805100"
  },
  {
    "text": "representation of an order so an order has a status and has a customer and has",
    "start": "805100",
    "end": "810560"
  },
  {
    "text": "some line items and as well as a total but what you see here is that the entire order information is stored in one",
    "start": "810560",
    "end": "816830"
  },
  {
    "text": "single record so everything I need to be able to reason about that order",
    "start": "816830",
    "end": "821840"
  },
  {
    "text": "whether it's or what data do I need to read or what data do I need to do to keep track Evan writes everything is",
    "start": "821840",
    "end": "827510"
  },
  {
    "text": "going to be stored inside this one record we can have complex structures so with sequel if you want to have if",
    "start": "827510",
    "end": "835160"
  },
  {
    "text": "you want to go from the normalized relationships into complex object",
    "start": "835160",
    "end": "840320"
  },
  {
    "text": "graphed you have to typically use an ORM to be able to take that one single set",
    "start": "840320",
    "end": "845510"
  },
  {
    "text": "of records that comes back that's just like a flat set of records and then unwind that into a complex graph but",
    "start": "845510",
    "end": "851540"
  },
  {
    "text": "here I can have a complex object that includes something like a customer object and be able to support that both",
    "start": "851540",
    "end": "857420"
  },
  {
    "text": "directly in my object model as well as just stored directly into cosmos TV so I",
    "start": "857420",
    "end": "862580"
  },
  {
    "text": "don't have that I don't have that infinite smidge match between how the relational database sees the world and",
    "start": "862580",
    "end": "869150"
  },
  {
    "text": "how my object models work so typically when you're working with cosmos TV there's no such thing as an ORM because",
    "start": "869150",
    "end": "875360"
  },
  {
    "text": "there's no ARS and there's no ARS there so it's just basically take the thing",
    "start": "875360",
    "end": "880520"
  },
  {
    "text": "out of cosmos DB D sterilize it from JSON and store it in your document so",
    "start": "880520",
    "end": "885890"
  },
  {
    "text": "basically whatever you can do with Newton stops at JSON which is a lot you can do with your cosmos DB documents for",
    "start": "885890",
    "end": "894260"
  },
  {
    "text": "example you can do a race we have arrays directly support it inside of JSON net",
    "start": "894260",
    "end": "899660"
  },
  {
    "text": "and so it could of course be able to be stored directly inside the database as well now you may have noticed one thing",
    "start": "899660",
    "end": "906530"
  },
  {
    "text": "here is that there's there's something that kind of looks like a foreign key which is the Product ID so in this case",
    "start": "906530",
    "end": "912110"
  },
  {
    "text": "I'm storing line items for an order and I need to know which product you're purchasing so for us to be able to",
    "start": "912110",
    "end": "920560"
  },
  {
    "text": "figure out all the different product details maybe I'm an order page where it shows like the images and everything well then I still need some way to be",
    "start": "920560",
    "end": "927380"
  },
  {
    "text": "able to get that information so what I do is I store the keys for other external entities directly on my objects",
    "start": "927380",
    "end": "934490"
  },
  {
    "text": "themselves now that doesn't mean that you can join like even if two databases inside cosmos - you can't",
    "start": "934490",
    "end": "941449"
  },
  {
    "text": "join those two collections you have to be pretty careful about what you decide to store in your documents versus what",
    "start": "941449",
    "end": "946699"
  },
  {
    "text": "you keep in other places so in this case I noticed that on my orders page I kept we kept showing the same",
    "start": "946699",
    "end": "953089"
  },
  {
    "text": "information over and over again so in this case what we're doing is we're storing the product name and list price",
    "start": "953089",
    "end": "958819"
  },
  {
    "text": "directly on our line items as opposed to going back over to the sequel server",
    "start": "958819",
    "end": "963949"
  },
  {
    "text": "database where the product information was actually stored this is again one the places where the DBAs be like oh my",
    "start": "963949",
    "end": "969619"
  },
  {
    "text": "god don't do that that's duplication of data you're not normalized anymore but well we found out that not all",
    "start": "969619",
    "end": "975649"
  },
  {
    "text": "duplication not all duplicate data is necessarily evil so something like product name like does that ever change",
    "start": "975649",
    "end": "982609"
  },
  {
    "text": "really and if it changes should that update my order probably not so it",
    "start": "982609",
    "end": "989419"
  },
  {
    "text": "should be okay if that information doesn't change and my order is never going to change an information then it",
    "start": "989419",
    "end": "994879"
  },
  {
    "text": "should be okay then just keep kind of keeping a local copy of the state over here the other example you had was the",
    "start": "994879",
    "end": "1001089"
  },
  {
    "text": "price one of the things we found is just because we have data being stored over",
    "start": "1001089",
    "end": "1006699"
  },
  {
    "text": "here doesn't necessarily mean it is a quote unquote duplicate of the data being stored in our overall catalog",
    "start": "1006699",
    "end": "1012579"
  },
  {
    "text": "database so we drew it out this is one of the ways we're able to actually convince the DBA s at some point that",
    "start": "1012579",
    "end": "1017619"
  },
  {
    "text": "it's okay to do things like this once they finally got on board with going with the document DB route so we mapped",
    "start": "1017619",
    "end": "1024339"
  },
  {
    "text": "out the customer journey that said if you look at a customer journey there's four basic steps there's them looking at",
    "start": "1024339",
    "end": "1030339"
  },
  {
    "text": "the product pages saying oh that looks like a good thing to do I want to buy that thing they click Add to Cart",
    "start": "1030339",
    "end": "1035909"
  },
  {
    "text": "so they see that they see the product price on the catalog page yep so I'm",
    "start": "1035909",
    "end": "1040990"
  },
  {
    "text": "going to buy that thing that's a ok price I guess so they click Add to Cart and so they need now they see the",
    "start": "1040990",
    "end": "1046240"
  },
  {
    "text": "product price on their carts say ok now I'm going to go ahead and place my order so they see the pricing information on",
    "start": "1046240",
    "end": "1052779"
  },
  {
    "text": "the order page and then finally when it comes time to actually build a customer then there's a there's in the actual",
    "start": "1052779",
    "end": "1058990"
  },
  {
    "text": "amount that comes off their credit card I guess so we posed the question to the DBA s like what happens when the product",
    "start": "1058990",
    "end": "1067029"
  },
  {
    "text": "price changes in the catalog should that updates all the different prices through all the",
    "start": "1067029",
    "end": "1073780"
  },
  {
    "text": "different steps the customer's gone through I don't think so I could be",
    "start": "1073780",
    "end": "1079060"
  },
  {
    "text": "pretty weird to say the product price is now 25 49 so let's go ahead and update what we build you like three months ago",
    "start": "1079060",
    "end": "1086020"
  },
  {
    "text": "there's nobody make any sense so in this case what we found is that even though the data may move around may",
    "start": "1086020",
    "end": "1092500"
  },
  {
    "text": "be copied around and our different data structures just because it moves around doesn't mean it represents that exact",
    "start": "1092500",
    "end": "1097810"
  },
  {
    "text": "same information even the quote that actual data value may not change ever in the future it doesn't necessarily mean",
    "start": "1097810",
    "end": "1104530"
  },
  {
    "text": "it represents the same concept so in this picture instead of us having like a single product price that was globally a",
    "start": "1104530",
    "end": "1111190"
  },
  {
    "text": "pride applied and we had to do like weird date magic to figure out what was the move of the product price as of the",
    "start": "1111190",
    "end": "1117310"
  },
  {
    "text": "time they put it in the cart instead what we did was just simply copy that data through as necessary and say now",
    "start": "1117310",
    "end": "1122650"
  },
  {
    "text": "it's actually representing different things so we had a catalog price a cart price an order price and a fulfillment",
    "start": "1122650",
    "end": "1129130"
  },
  {
    "text": "price and these all represented different things and things those prices actually could change but for reasons",
    "start": "1129130",
    "end": "1134470"
  },
  {
    "text": "that were more specific to that specific step in the process like going to fulfillment and they find out that they",
    "start": "1134470",
    "end": "1141070"
  },
  {
    "text": "don't have enough quantities so they say well we can give you we can give you",
    "start": "1141070",
    "end": "1146410"
  },
  {
    "text": "this as a discount and we'll just have to ship it a month from now so that actual fulfillment price would be lower",
    "start": "1146410",
    "end": "1151570"
  },
  {
    "text": "there so they could have different reasons for these different data to change it doesn't necessarily mean that it's a quote unquote duplicate of the",
    "start": "1151570",
    "end": "1158260"
  },
  {
    "text": "data as it goes through the next really",
    "start": "1158260",
    "end": "1163570"
  },
  {
    "text": "big thing we ran into and this was the this was we'll spend the bulk of our time in our demo was transitioning from",
    "start": "1163570",
    "end": "1169570"
  },
  {
    "start": "1167000",
    "end": "1172000"
  },
  {
    "text": "transactional and sequel because one of the things you have in sequel is acid",
    "start": "1169570",
    "end": "1174750"
  },
  {
    "start": "1172000",
    "end": "1204000"
  },
  {
    "text": "well that's not that kind of acid but this kind of acid where you can go ahead and create some table begin a",
    "start": "1174750",
    "end": "1181450"
  },
  {
    "text": "transaction and you can do multiple operations within that one single transaction and so something goes wrong",
    "start": "1181450",
    "end": "1187840"
  },
  {
    "text": "the transaction can roll back and all those different operations will roll back themselves so we looked at I look",
    "start": "1187840",
    "end": "1195940"
  },
  {
    "text": "to this and said okay I'm sure that's going to be a little bit different going to the cloud so you just Google things",
    "start": "1195940",
    "end": "1201460"
  },
  {
    "text": "like cosmos DB transaction supports to get with something like this oh it",
    "start": "1201460",
    "end": "1206920"
  },
  {
    "start": "1204000",
    "end": "1382000"
  },
  {
    "text": "says yes it does support transactions yes yes the sequel a P I I know the",
    "start": "1206920",
    "end": "1212650"
  },
  {
    "text": "other if you guys do supports across the second document transactions if you use JavaScript store procedures and triggers",
    "start": "1212650",
    "end": "1220710"
  },
  {
    "text": "so I was like okay wait a second so if I",
    "start": "1220710",
    "end": "1225940"
  },
  {
    "text": "ever want to do updates to two documents at once and I want to have those as the same transaction I must use a JavaScript",
    "start": "1225940",
    "end": "1232720"
  },
  {
    "text": "store procedure now I would show one of these things but it would be really small and basically stretched down to the floor because the the database the",
    "start": "1232720",
    "end": "1239950"
  },
  {
    "text": "transaction script the transaction syntax is a little bit verbose so I won't show it on our client why not",
    "start": "1239950",
    "end": "1246430"
  },
  {
    "text": "doing it why not not doing it anyway but it is important to know this feature does exist and the reason why you would",
    "start": "1246430",
    "end": "1252490"
  },
  {
    "text": "want to do this is because you want to have two things be able to be in the same transaction and either both update",
    "start": "1252490",
    "end": "1258220"
  },
  {
    "text": "or neither update now when you goo when you Google MongoDB transactions there's",
    "start": "1258220",
    "end": "1264010"
  },
  {
    "text": "nothing like this there's no there's no kind of support for any kind of database level transactions when you're right now",
    "start": "1264010",
    "end": "1270370"
  },
  {
    "text": "down on the metal instead there's like this well you have like a fake two-phase commit thingy and a bunch of try caches",
    "start": "1270370",
    "end": "1277840"
  },
  {
    "text": "to try to make it all work so we saw that and so there's nothing gonna be it's not gonna work for us either but I",
    "start": "1277840",
    "end": "1283450"
  },
  {
    "text": "would say I wouldn't scare you away from using JavaScript store procedures the reason why you'd want reason why that's a good idea",
    "start": "1283450",
    "end": "1288790"
  },
  {
    "text": "is because the documents themselves are JSON so you'd want to have your stored procedure in the same language as the ER",
    "start": "1288790",
    "end": "1295930"
  },
  {
    "text": "as your data is so JSON data javascript stored procedure and of course as a",
    "start": "1295930",
    "end": "1301780"
  },
  {
    "text": "stored procedure it means that you have this have this code that's running on the server itself which means they can",
    "start": "1301780",
    "end": "1307630"
  },
  {
    "text": "still have those globally distributed cloud scale guarantees because your code",
    "start": "1307630",
    "end": "1314050"
  },
  {
    "text": "is running like literally on their server so that's the only way that they could really support these kinds of",
    "start": "1314050",
    "end": "1319150"
  },
  {
    "text": "transactional guarantees is if your code runs on the server itself so yeah you",
    "start": "1319150",
    "end": "1324400"
  },
  {
    "text": "see there's like a store procedures and triggers but it's the best way to support this kind of thing if you need",
    "start": "1324400",
    "end": "1330370"
  },
  {
    "text": "to have two things happen at the same time but when we looked at a lot of the operations in which they were trying to",
    "start": "1330370",
    "end": "1336460"
  },
  {
    "text": "have two things happen at the same time we found that it wasn't Sara Lee that they actually needed to",
    "start": "1336460",
    "end": "1341499"
  },
  {
    "text": "have these two things update at the exact same time is more like either like one that one thing was the primary thing",
    "start": "1341499",
    "end": "1346869"
  },
  {
    "text": "they were doing and the other thing was kind of a secondary thing so the secondary thing wasn't the like as important to have as part of the overall",
    "start": "1346869",
    "end": "1352779"
  },
  {
    "text": "transaction and so we asked ourselves like well what do we do then if like if the other thing fails do I have some",
    "start": "1352779",
    "end": "1359019"
  },
  {
    "text": "sort of like compensating rollback action for the previous thing I started to get really complicated so again I",
    "start": "1359019",
    "end": "1364149"
  },
  {
    "text": "started googling like well how do people do distributed transactions in the cloud and of course they don't like people",
    "start": "1364149",
    "end": "1369549"
  },
  {
    "text": "don't do multi resource transactions in the cloud it's a really horrible idea it performs absolutely horribly unless",
    "start": "1369549",
    "end": "1376479"
  },
  {
    "text": "you're running code directly on the server it started googling like what do people do with transactions distributed",
    "start": "1376479",
    "end": "1382570"
  },
  {
    "start": "1382000",
    "end": "1425000"
  },
  {
    "text": "transactions and of course I usually come up with some kind of academic paper with a lot of words and some pictures",
    "start": "1382570",
    "end": "1388809"
  },
  {
    "text": "but like no code which is like ok so how do we actually do this sort of thing and",
    "start": "1388809",
    "end": "1394119"
  },
  {
    "text": "so this guy Pat Helen who who who was the one of the lead designers and",
    "start": "1394119",
    "end": "1400239"
  },
  {
    "text": "developers of the distributed transaction coordinator and he had this paper of like how do you not do that because it doesn't work in the cloud",
    "start": "1400239",
    "end": "1406179"
  },
  {
    "text": "because he works at Amazon or Salesforce where of areas now so like it doesn't always you can't you can't do this kind",
    "start": "1406179",
    "end": "1411309"
  },
  {
    "text": "of thing in the cloud so what do you do instead so what he described was a way of coordinating actions between",
    "start": "1411309",
    "end": "1417879"
  },
  {
    "text": "different entities or different resources and sort of not probably not surprisingly use some form of messaging",
    "start": "1417879",
    "end": "1424179"
  },
  {
    "text": "to be able to talk from one resource to another slate a picture like this where I have like a single trend like a single",
    "start": "1424179",
    "end": "1430749"
  },
  {
    "text": "entity that has a single transaction bound around that one single entity was",
    "start": "1430749",
    "end": "1436179"
  },
  {
    "text": "it just like cosmos DB cosmos DB transactions when you're just doing API calls or for one document at a time well",
    "start": "1436179",
    "end": "1443379"
  },
  {
    "text": "let's say I want to have something happen with some other entities some other resource I need to have some way",
    "start": "1443379",
    "end": "1448629"
  },
  {
    "text": "to affect that other resource but not necessarily have it update right at this point in time so what we'll do is have",
    "start": "1448629",
    "end": "1454749"
  },
  {
    "text": "some way to instead of us trying to do that action immediately we'll record an intent to do something",
    "start": "1454749",
    "end": "1460899"
  },
  {
    "text": "over there and record that intent as a message and that message will be stored in the exact same entity as all of our",
    "start": "1460899",
    "end": "1467950"
  },
  {
    "text": "other business data so when I want to have more than one thing happens",
    "start": "1467950",
    "end": "1474490"
  },
  {
    "text": "then those messages kind of pile up and then as something needs to go ahead and activate the other entity and then pass",
    "start": "1474490",
    "end": "1481190"
  },
  {
    "text": "that message to that other entity now on the receiving side I need to know if",
    "start": "1481190",
    "end": "1488960"
  },
  {
    "text": "I've received this this other entities message or not and so what happens is our entities actually store the history",
    "start": "1488960",
    "end": "1496220"
  },
  {
    "text": "of communication from other entities as well so we'll know that we've we receive this message to perform some action we",
    "start": "1496220",
    "end": "1503180"
  },
  {
    "text": "go ahead and look at our local our local list of messages and say have already done this thing before and if I have",
    "start": "1503180",
    "end": "1508520"
  },
  {
    "text": "done this thing before then nothing to do so when I'm looking at a series of",
    "start": "1508520",
    "end": "1515900"
  },
  {
    "text": "entities talking to each other they're using messages as a means to have that communication but those messages are",
    "start": "1515900",
    "end": "1522050"
  },
  {
    "text": "stored inside each of the entities so that I still have just one single transaction for both my business data",
    "start": "1522050",
    "end": "1528530"
  },
  {
    "text": "and the communication I need have to there's other entities now you could look at this say why do I want to store",
    "start": "1528530",
    "end": "1535130"
  },
  {
    "text": "my messages inside my entities what do I do I use like one of the other 18",
    "start": "1535130",
    "end": "1540800"
  },
  {
    "text": "different ways to do messaging inside of azure why not as your service bus or event hubs or the other event things",
    "start": "1540800",
    "end": "1547400"
  },
  {
    "text": "they got going on event grids or Azure queues like why not use one of those other things but the prom you run into",
    "start": "1547400",
    "end": "1553670"
  },
  {
    "text": "is that if I make some kind of update to a document inside of Cosmos DB and then",
    "start": "1553670",
    "end": "1560150"
  },
  {
    "text": "send a message while sending that message is not also part of the same transaction as my document update so",
    "start": "1560150",
    "end": "1565640"
  },
  {
    "text": "that means that sending the message could also fail and if that fails then I don't necessarily want my update to fail",
    "start": "1565640",
    "end": "1572210"
  },
  {
    "text": "because it's already happened so I still needed some way to coordinate the sending of a message to someone else with my business update of the data I",
    "start": "1572210",
    "end": "1579650"
  },
  {
    "text": "have inside my my document so our solution we looked at this is like okay",
    "start": "1579650",
    "end": "1585380"
  },
  {
    "text": "great no one did no one had any code for anything like this but it looks awfully",
    "start": "1585380",
    "end": "1590390"
  },
  {
    "text": "familiar to some existing patterns that arose out of the domain driven design community so if you're doing something",
    "start": "1590390",
    "end": "1596990"
  },
  {
    "text": "like event sourcing for example event sourced entities have these events that",
    "start": "1596990",
    "end": "1602510"
  },
  {
    "text": "are stored on the entities themselves and in fact they hydrate state this client was not going to go far they had a bad experience with",
    "start": "1602510",
    "end": "1608710"
  },
  {
    "text": "events or things or like we don't wanna do that but they did wind up go when going with domain events domain events",
    "start": "1608710",
    "end": "1615970"
  },
  {
    "start": "1610000",
    "end": "1748000"
  },
  {
    "text": "are similar to event sourcing and except instead of events making up the state of",
    "start": "1615970",
    "end": "1621610"
  },
  {
    "text": "my object domain events are really just a way for me to store events related to",
    "start": "1621610",
    "end": "1626649"
  },
  {
    "text": "my entity but not necessarily have them be the state of my entity so in this case and I walk through the code example",
    "start": "1626649",
    "end": "1633700"
  },
  {
    "text": "what this looks like my overall entity my overall document not only has the business date",
    "start": "1633700",
    "end": "1639610"
  },
  {
    "text": "associated with it but also includes an inbox in an outbox and yeah like in my",
    "start": "1639610",
    "end": "1644620"
  },
  {
    "text": "head actually picturing like a human with an inbox and outbox to go ahead and do this work and so the inbox is for",
    "start": "1644620",
    "end": "1651130"
  },
  {
    "text": "incoming messages from other entities so if some other entity wants to talk to me they send a message to my inbox and if I",
    "start": "1651130",
    "end": "1658480"
  },
  {
    "text": "want to talk to other entities then I put a message in my outbox and the transactional boundary again is around",
    "start": "1658480",
    "end": "1664389"
  },
  {
    "text": "this one single document so communication occurring from other entities happens through these like",
    "start": "1664389",
    "end": "1669700"
  },
  {
    "text": "little message queues that I'm storing on my overall document itself one one",
    "start": "1669700",
    "end": "1677289"
  },
  {
    "text": "eventual problem we did run into is that like the inbox would get cluttered if you will so we looked at do we really",
    "start": "1677289",
    "end": "1683080"
  },
  {
    "text": "want to store entity messages forever so we didn't have like a kind of a garbage",
    "start": "1683080",
    "end": "1688690"
  },
  {
    "text": "collection that said well I don't want to I don't want to store my like my inbox messages till the heat death of",
    "start": "1688690",
    "end": "1694510"
  },
  {
    "text": "the universe so maybe just I need to keep like feel like a month worth of inbox messages and the whole reasoning",
    "start": "1694510",
    "end": "1699580"
  },
  {
    "text": "behind this is that when I receive a message receiving the message from",
    "start": "1699580",
    "end": "1706570"
  },
  {
    "text": "another entity and then making an update well when I want to make an update I'm",
    "start": "1706570",
    "end": "1712690"
  },
  {
    "text": "storing the message in my inbox and then updating my business data but then I also need to remove that message from",
    "start": "1712690",
    "end": "1718450"
  },
  {
    "text": "the outbox of the original entity well that's another transaction so that's why we have a separate inbox to keep track",
    "start": "1718450",
    "end": "1724090"
  },
  {
    "text": "of messages received that way if I receive the same message multiple times I only processed the actual side effects",
    "start": "1724090",
    "end": "1730269"
  },
  {
    "text": "once now even beyond this was the",
    "start": "1730269",
    "end": "1737080"
  },
  {
    "text": "different isolation levels we found between sequel server and cosmos TV so well this is all great and",
    "start": "1737080",
    "end": "1743260"
  },
  {
    "text": "grand even just a transaction around a single document was more complicated so",
    "start": "1743260",
    "end": "1749950"
  },
  {
    "start": "1748000",
    "end": "1816000"
  },
  {
    "text": "sequel server and all sequel databases had this concept of acid and then they have different isolation levels to have",
    "start": "1749950",
    "end": "1756309"
  },
  {
    "text": "different levels if we are in T's so the most the highest level of guarantee is",
    "start": "1756309",
    "end": "1761740"
  },
  {
    "text": "at the bottom serializable so if you're running serializable isolation level that's when you're actually doing acid",
    "start": "1761740",
    "end": "1767890"
  },
  {
    "text": "and sequel server everything else is a more relaxed transactional isolation level for doing work and so most people",
    "start": "1767890",
    "end": "1774789"
  },
  {
    "text": "don't actually use serializable and in fact there was a paper from Peter Bayliss looking at what do all of the",
    "start": "1774789",
    "end": "1780280"
  },
  {
    "text": "database sequel databases actually supports and then what do they actually ship with what sort what their default",
    "start": "1780280",
    "end": "1786610"
  },
  {
    "text": "and so really only a couple databases acting in ingress which I've never heard of and volt DB which I have oh I guess",
    "start": "1786610",
    "end": "1793720"
  },
  {
    "text": "Oracle Berkeley DB those are the ones that both ship with serializable and have the default is serializable if",
    "start": "1793720",
    "end": "1800679"
  },
  {
    "text": "anyone here is just try to run serializable in production all the time it's like impossible you start to have all sorts of contentions and all sorts",
    "start": "1800679",
    "end": "1806890"
  },
  {
    "text": "of deadlocks and things like that you're like oh maybe maybe serializable is not something i want all the time so usually",
    "start": "1806890",
    "end": "1811900"
  },
  {
    "text": "people just choose repeatable read well these options don't exist in cosmos DB instead they have kind of a sliding",
    "start": "1811900",
    "end": "1818470"
  },
  {
    "start": "1816000",
    "end": "1901000"
  },
  {
    "text": "scale of guarantees that you get to pick from you have the very strong level",
    "start": "1818470",
    "end": "1823690"
  },
  {
    "text": "consistency on the left yes the left which means that I am guaranteed to have",
    "start": "1823690",
    "end": "1830860"
  },
  {
    "text": "what's known as linear Eliza linearize ability which means I'm always",
    "start": "1830860",
    "end": "1836440"
  },
  {
    "text": "guaranteed to have the most recent version of an item and no one can update the document underneath the covers for",
    "start": "1836440",
    "end": "1842289"
  },
  {
    "text": "me and then from there starts to have more relaxed to guarantees where I guess the most probably the most popular one is",
    "start": "1842289",
    "end": "1852220"
  },
  {
    "text": "the third one of session which is somewhat equivalent to snapshot isolation in a sequel server so and that",
    "start": "1852220",
    "end": "1859900"
  },
  {
    "text": "one was session you basically within the context of a single session you're guaranteed to have your game to you to",
    "start": "1859900",
    "end": "1867309"
  },
  {
    "text": "be able to read the things you've written you're guaranteed that writes will follow your reads that you've done as well as monotonic reads and",
    "start": "1867309",
    "end": "1874390"
  },
  {
    "text": "ih wits I'm sure means something to someone in the audience but not me sorry so anyway that's the one that that's the",
    "start": "1874390",
    "end": "1881020"
  },
  {
    "text": "one that that most matches the kind of default that we see in sequel server which is the repeatable read so with all",
    "start": "1881020",
    "end": "1889450"
  },
  {
    "text": "these things put together the different modeling constraints the different transactional guarantees even their different transaction isolation levels",
    "start": "1889450",
    "end": "1895720"
  },
  {
    "text": "it was a pretty big jump from for them to go from sequel server eventually to cosmos DB so what I wanted to do is show",
    "start": "1895720",
    "end": "1903430"
  },
  {
    "text": "a demo of an application actually using cosmos TV I was a little freaked out",
    "start": "1903430",
    "end": "1908740"
  },
  {
    "text": "about doing this because I don't like to do a juror has your demos connected to conference Wi-Fi but things are looking",
    "start": "1908740",
    "end": "1913750"
  },
  {
    "text": "ok so like no one checked Twitter please right now I want to make sure my connection stays good alright so I'm",
    "start": "1913750",
    "end": "1922600"
  },
  {
    "text": "gonna switch over my screen here so bear with me one second ok so what I've built",
    "start": "1922600",
    "end": "1937870"
  },
  {
    "text": "is an e-commerce application because I'm just not that creative and trying to do",
    "start": "1937870",
    "end": "1944260"
  },
  {
    "text": "the manufacturing route would have too much explanation into the domain of the domain of manufacturing which is",
    "start": "1944260",
    "end": "1949990"
  },
  {
    "text": "surprisingly complex so I did the are tried-and-true adventure works example",
    "start": "1949990",
    "end": "1955600"
  },
  {
    "text": "so in this case they already have an existing sequel server so what I've done is pulled in their existing sequel",
    "start": "1955600",
    "end": "1960730"
  },
  {
    "text": "database for the catalog model and you can see that over here let's see yes so",
    "start": "1960730",
    "end": "1968430"
  },
  {
    "text": "just like dump of entity framework dbcontext with all the junk of with all",
    "start": "1968430",
    "end": "1975340"
  },
  {
    "text": "the different entities that exist inside of in adventureworks I'm only only pulling excuse me only pulling out a few",
    "start": "1975340",
    "end": "1981010"
  },
  {
    "text": "of these to able to show orders and then my application is a very simple",
    "start": "1981010",
    "end": "1986590"
  },
  {
    "text": "application to view the catalog drill down add things to your cart and then",
    "start": "1986590",
    "end": "1991600"
  },
  {
    "text": "eventually checkout so let's go ahead and run this to see it in action",
    "start": "1991600",
    "end": "1997080"
  },
  {
    "start": "2000000",
    "end": "2075000"
  },
  {
    "text": "so for this one the the sequel database is just on my local my local machine but",
    "start": "2007419",
    "end": "2013220"
  },
  {
    "text": "the cosmos TV of course is going to be in the cloud now one of the things we can't I could have done is to run an",
    "start": "2013220",
    "end": "2019070"
  },
  {
    "text": "emulator so they have a couple different emulator options so you won't have to always connect to the cloud to be able",
    "start": "2019070",
    "end": "2024169"
  },
  {
    "text": "to do local developments so to do that you can install the azure cosmos DB",
    "start": "2024169",
    "end": "2029210"
  },
  {
    "text": "emulator which is a just an application that runs or what they also have if your docker savvy is there's a docker",
    "start": "2029210",
    "end": "2036049"
  },
  {
    "text": "container that you can run as well they need to say docker run this cosmos DB instance and it'll run the azure cosmos",
    "start": "2036049",
    "end": "2044240"
  },
  {
    "text": "DB emulator on your local machine but I wanted to demonstrate some of the transactional things with Hydra cosmos",
    "start": "2044240",
    "end": "2051050"
  },
  {
    "text": "DB and the emulator does not support all the things all the transactional things you can do in the cloud so that's why",
    "start": "2051050",
    "end": "2057530"
  },
  {
    "text": "I'm running against the actual real version here so up at the top here let",
    "start": "2057530",
    "end": "2063020"
  },
  {
    "text": "me zoom in a little bit up at the top I have I'm never good at web design so",
    "start": "2063020",
    "end": "2068240"
  },
  {
    "text": "this is about the best I can do so here's the here's the list of the top-level categories in my catalog so I",
    "start": "2068240",
    "end": "2075138"
  },
  {
    "start": "2075000",
    "end": "2106000"
  },
  {
    "text": "can drill down and say show me all the bikes okay here's the first level I've got mountain bikes road bikes and",
    "start": "2075139",
    "end": "2081108"
  },
  {
    "text": "touring bikes so let me dig down one more level in the catalog and now I have a list of all the products and yes I",
    "start": "2081109",
    "end": "2086929"
  },
  {
    "text": "know it's ugly but this is the best I can do it's like a look at the details like oh yes this is the top-of-the-line",
    "start": "2086929",
    "end": "2092560"
  },
  {
    "text": "competition mountain bike I think there's supposed to be an image but I was too lazy to put it in it's got an HL",
    "start": "2092560",
    "end": "2097700"
  },
  {
    "text": "frame okay that sounds great and traction for all terrain that sounds awesome so let's go ahead and add this to our cart and then cart update it and",
    "start": "2097700",
    "end": "2106640"
  },
  {
    "start": "2106000",
    "end": "2137000"
  },
  {
    "text": "we go and view the carts and check out",
    "start": "2106640",
    "end": "2112029"
  },
  {
    "text": "so when we check out we go to our order our we go to our district order details",
    "start": "2112570",
    "end": "2118040"
  },
  {
    "text": "page and at this point we've transitioned from the sequel world over to the cosmos DB world I this is also",
    "start": "2118040",
    "end": "2125869"
  },
  {
    "text": "like the admin interface so I can also approve my order so I hit approve and now my order status goes from new",
    "start": "2125869",
    "end": "2134510"
  },
  {
    "text": "- approved so let's look at the code of what's going on behind the scenes here go ahead and stop",
    "start": "2134510",
    "end": "2141820"
  },
  {
    "start": "2137000",
    "end": "2494000"
  },
  {
    "text": "so the original product details page showing the the different product",
    "start": "2141820",
    "end": "2148040"
  },
  {
    "text": "information that was going through just different razor pages so in this case I've got the index page that is using",
    "start": "2148040",
    "end": "2155480"
  },
  {
    "text": "the dbcontext to go pull some stuff out so this is just as fairly short yeah of course stuff like this shouldn't be that",
    "start": "2155480",
    "end": "2161869"
  },
  {
    "text": "exciting or interesting is that big enough for everyone this is kind of a short room yes okay listing information",
    "start": "2161869",
    "end": "2170480"
  },
  {
    "text": "again this is just more EF core junk more MORE EF core joke okay so it is",
    "start": "2170480",
    "end": "2175550"
  },
  {
    "text": "using an actual database for all the product information but there is a transition when it hits Add to Cart so",
    "start": "2175550",
    "end": "2182210"
  },
  {
    "text": "when I when I actually do the cart piece the cart is actually just putting stuff",
    "start": "2182210",
    "end": "2188690"
  },
  {
    "text": "inside of session so I could have put done something even more Azeri but this",
    "start": "2188690",
    "end": "2193700"
  },
  {
    "text": "is not a general like if I probably use like like as your Redis or something like that I'm just using HP session",
    "start": "2193700",
    "end": "2198910"
  },
  {
    "text": "instead so using session to be able to store the card information and then",
    "start": "2198910",
    "end": "2204590"
  },
  {
    "text": "finally when I check out this is the code to actually check outs I get the",
    "start": "2204590",
    "end": "2210080"
  },
  {
    "text": "card information so just getting this shot this the shopping cart at a session if we look at this this is something",
    "start": "2210080",
    "end": "2216140"
  },
  {
    "text": "that is actually stored inside of session state so it can be like more complicated looking but this is just",
    "start": "2216140",
    "end": "2221690"
  },
  {
    "text": "serialized and stored in in session so you can do I have the line items as part",
    "start": "2221690",
    "end": "2228200"
  },
  {
    "text": "of this the line items including the product information the product name the",
    "start": "2228200",
    "end": "2234109"
  },
  {
    "text": "ID the price oops the quantity and the subtotal but that's just all stored in",
    "start": "2234109",
    "end": "2241010"
  },
  {
    "text": "session when it actually comes down to cosmos DB I'm transitioning from the",
    "start": "2241010",
    "end": "2247640"
  },
  {
    "text": "stuff I stored in sequel the stuff I stored in session and now I need to build that document that's going to be stored inside of Azure Kosmos TB and so",
    "start": "2247640",
    "end": "2254930"
  },
  {
    "text": "that's what we have right here in order request the reason why quite a called an",
    "start": "2254930",
    "end": "2260450"
  },
  {
    "text": "order request is because I'm not literally creating an order in the backend system for this one it has to be",
    "start": "2260450",
    "end": "2265460"
  },
  {
    "text": "approved so this is an order request because someone has prove this order for it actually to be then pushed on into fulfillment so this",
    "start": "2265460",
    "end": "2276109"
  },
  {
    "text": "order request is just a regular C sharp object but you can already see that there are some more there's some more",
    "start": "2276109",
    "end": "2281930"
  },
  {
    "text": "interesting things going on like I can have a complex customer object that has the first name and the last name I have",
    "start": "2281930",
    "end": "2287960"
  },
  {
    "text": "the set of items that includes building out the line items from the cart item so I'm building in the product ID the",
    "start": "2287960",
    "end": "2294440"
  },
  {
    "text": "quantity the list price and the product name and again I'm pulling over the product ID because we'll need it here",
    "start": "2294440",
    "end": "2300799"
  },
  {
    "text": "sometime in the future and I know that that's not going to change like product IDs don't change but I can't join from",
    "start": "2300799",
    "end": "2307009"
  },
  {
    "text": "that to be able to I can't join from that to go see the product details",
    "start": "2307009",
    "end": "2313460"
  },
  {
    "text": "so in that case I'll have the product name stored directly on it so when I'm showing the product when I",
    "start": "2313460",
    "end": "2321079"
  },
  {
    "text": "go back to the Oh I close the screen of course I did so when I'm showing the",
    "start": "2321079",
    "end": "2335660"
  },
  {
    "text": "order details I don't want to have to go back to the sequel database to go get information so what I'll do instead is",
    "start": "2335660",
    "end": "2342619"
  },
  {
    "text": "just store that information temporarily inside of my I'll just cash that or",
    "start": "2342619",
    "end": "2349759"
  },
  {
    "text": "duplicate that information inside of my my order request object all right so I",
    "start": "2349759",
    "end": "2356839"
  },
  {
    "text": "just have the in this case I'm just showing the order total with the status and the name but if I wanted to show the",
    "start": "2356839",
    "end": "2362720"
  },
  {
    "text": "product information let's go to my order detail or my short order page all right",
    "start": "2362720",
    "end": "2370359"
  },
  {
    "text": "let's do a for each in model dots order",
    "start": "2371829",
    "end": "2379249"
  },
  {
    "text": "dots items we wanted to display the",
    "start": "2379249",
    "end": "2384289"
  },
  {
    "text": "information here just to appiy and show",
    "start": "2384289",
    "end": "2391279"
  },
  {
    "text": "order item that's product name sure so I'm on the",
    "start": "2391279",
    "end": "2401380"
  },
  {
    "text": "product information are per the order details page and so if I wanted to show the product name I have a choice here I",
    "start": "2401380",
    "end": "2408220"
  },
  {
    "text": "do I for each over the the product IDs and then go out to the the catalog",
    "start": "2408220",
    "end": "2414250"
  },
  {
    "text": "system to go get the product name do I make the product catalog service or API",
    "start": "2414250",
    "end": "2419740"
  },
  {
    "text": "or whatever be able to take like a just an array of product IDs they can give me a back product names or dye just say",
    "start": "2419740",
    "end": "2426280"
  },
  {
    "text": "forget it let's just go ahead and and store that information directly on our document itself and that's what we wind",
    "start": "2426280",
    "end": "2432609"
  },
  {
    "text": "up doing is saying let's you know this information doesn't change I don't care if the product name changes and the",
    "start": "2432609",
    "end": "2438640"
  },
  {
    "text": "overall catalog because that really shouldn't have any bearing on the overall on the order I'm looking at itself so there's very often times when",
    "start": "2438640",
    "end": "2447460"
  },
  {
    "text": "we go ahead and pull that information forward if we know that information is not going to change in the future",
    "start": "2447460",
    "end": "2453660"
  },
  {
    "text": "so I should see and this one hopefully oh there we go so there's my mountain",
    "start": "2455549",
    "end": "2462520"
  },
  {
    "text": "bike down there I don't have to go back to the sequel database to do so in fact I can't you can't join between cosmos DB",
    "start": "2462520",
    "end": "2468460"
  },
  {
    "text": "and sequel server and even if you I think if you could I'm not sure that'd be a really great idea trying to do that",
    "start": "2468460",
    "end": "2473799"
  },
  {
    "text": "kind of thing even if these were two cosmos TV collections or cosmos TV databases you can't perform these kind",
    "start": "2473799",
    "end": "2479020"
  },
  {
    "text": "of joints you have to be you have to be very explicit about what information you store in your model if you're very very",
    "start": "2479020",
    "end": "2485319"
  },
  {
    "text": "careful about what you decide put in there versus other places now one of the",
    "start": "2485319",
    "end": "2490990"
  },
  {
    "text": "really nice things about actually let me show this documents inside of the data Explorer so this right here is the data",
    "start": "2490990",
    "end": "2497260"
  },
  {
    "start": "2494000",
    "end": "2534000"
  },
  {
    "text": "Explorer for cosmos DB I can go ahead and just do a sequel query select star",
    "start": "2497260",
    "end": "2504160"
  },
  {
    "text": "from seed now you can see the list of my orders here of which there are I'd zoom",
    "start": "2504160",
    "end": "2509200"
  },
  {
    "text": "in but the Azure website as well let's see does it zoom in good this is where",
    "start": "2509200",
    "end": "2516369"
  },
  {
    "text": "you get the lovely right scrolling homage er yes so I have all of my orders",
    "start": "2516369",
    "end": "2523500"
  },
  {
    "text": "as individual document so I can have something more interesting so I know that's the",
    "start": "2523500",
    "end": "2528940"
  },
  {
    "text": "i D of my order is this so I can actually do a kind of a sequel where query just say slick start from see",
    "start": "2528940",
    "end": "2537520"
  },
  {
    "text": "where ID equals that oops I think it's",
    "start": "2537520",
    "end": "2543490"
  },
  {
    "text": "by ad or is it oh yes see dots ID",
    "start": "2543490",
    "end": "2552510"
  },
  {
    "text": "nothing okay lowercase ID yeah we get there",
    "start": "2553020",
    "end": "2560770"
  },
  {
    "text": "eventually okay so remember I chose in this case I when I was building outs",
    "start": "2560770",
    "end": "2567210"
  },
  {
    "text": "when I was building out this demo I had a choice to make what kind of database what I need what I",
    "start": "2567210",
    "end": "2572260"
  },
  {
    "text": "want to create how would I want to actually query that database do I want to use the clients or do I want to",
    "start": "2572260",
    "end": "2578050"
  },
  {
    "text": "use the sequel client now I wasn't using it I wasn't building out a graph so I wasn't gonna use the Grim on API that's",
    "start": "2578050",
    "end": "2583480"
  },
  {
    "text": "really what happened what would she do here whenever you say go ahead and creat a cosmos DB like the very first thing",
    "start": "2583480",
    "end": "2590829"
  },
  {
    "text": "you have to do is pick out well the second thing I guess the ID and then the API it to pick one of these sayings at",
    "start": "2590829",
    "end": "2596290"
  },
  {
    "text": "the very very beginning so I went with just the sequel one for this demo of course our client went with MongoDB to",
    "start": "2596290",
    "end": "2603970"
  },
  {
    "text": "do their stuff go back to my okay so yes",
    "start": "2603970",
    "end": "2615069"
  },
  {
    "text": "are you go ahead and do this query again select star from see where it's sniffing",
    "start": "2615069",
    "end": "2621670"
  },
  {
    "text": "it right this time see that ID equals that execute okay so and when I look at",
    "start": "2621670",
    "end": "2628660"
  },
  {
    "text": "the items down here the overall document I can see that it's stored in the items",
    "start": "2628660",
    "end": "2634060"
  },
  {
    "text": "as an array it has a status of zero and where does that status come from it",
    "start": "2634060",
    "end": "2640450"
  },
  {
    "text": "comes from my order status the order status is an actual enum new submitted",
    "start": "2640450",
    "end": "2647050"
  },
  {
    "start": "2642000",
    "end": "2744000"
  },
  {
    "text": "and approved so you can have enums because jason dinettes support these kinds of things as well I've got the",
    "start": "2647050",
    "end": "2654400"
  },
  {
    "text": "total information as a as a as a I guess a decimal no no that's my whatever as a",
    "start": "2654400",
    "end": "2660430"
  },
  {
    "text": "number here and of course the the complex customer information as well so customer dot first name customer dot",
    "start": "2660430",
    "end": "2666460"
  },
  {
    "text": "last name so one of the things you can do and because this is this is scheme",
    "start": "2666460",
    "end": "2673510"
  },
  {
    "text": "Alice is I can add new information on the fly to these different documents so let's say I want to add on my customer a",
    "start": "2673510",
    "end": "2682119"
  },
  {
    "text": "middle name so I'll just have middle name and then",
    "start": "2682119",
    "end": "2688720"
  },
  {
    "text": "whenever I go to my carts and I check out Jane and her mill name is Mary sure",
    "start": "2688720",
    "end": "2699180"
  },
  {
    "text": "Jane Mary Doe the boring is boring its name ever so ok imagine doing this in",
    "start": "2699180",
    "end": "2707230"
  },
  {
    "text": "sequel server well you'd have to add a column to the database but how do you add that column we have to do some kind",
    "start": "2707230",
    "end": "2713230"
  },
  {
    "text": "of schema change so maybe if do some some data migrations or schema irrigations now you're using something like DB up or",
    "start": "2713230",
    "end": "2720579"
  },
  {
    "text": "using ready roll from Red Gate or using Roundhouse or using EF migrations you have to actually migrate that schema in",
    "start": "2720579",
    "end": "2726910"
  },
  {
    "text": "the database to include that new information but here I can just simply add it as a new field and now that",
    "start": "2726910",
    "end": "2734079"
  },
  {
    "text": "information gonna be added and the O in the database so now when I check out",
    "start": "2734079",
    "end": "2745270"
  },
  {
    "start": "2744000",
    "end": "2782000"
  },
  {
    "text": "it's gonna have that new the new middle name there and it's just that easy",
    "start": "2745270",
    "end": "2755640"
  },
  {
    "text": "not exactly though because even though even though we're able to update our schema on the fly I still have existing",
    "start": "2755640",
    "end": "2762730"
  },
  {
    "text": "documents with that old schema the old the old information in there so their",
    "start": "2762730",
    "end": "2767859"
  },
  {
    "text": "existing documents don't have a middle name so what do I do with those existing",
    "start": "2767859",
    "end": "2772960"
  },
  {
    "text": "documents without a middle name this",
    "start": "2772960",
    "end": "2778390"
  },
  {
    "text": "page if I show the middle name what should happen well for existing probably",
    "start": "2778390",
    "end": "2786940"
  },
  {
    "start": "2782000",
    "end": "2888000"
  },
  {
    "text": "for existing documents I should be resilient to the fact that for old for",
    "start": "2786940",
    "end": "2792490"
  },
  {
    "text": "existing documents they won't necessarily have that information so if displaying that middle name on the screen maybe I'd make it an optional",
    "start": "2792490",
    "end": "2799330"
  },
  {
    "text": "thing because all the existing documents don't have it but what if it's a radical",
    "start": "2799330",
    "end": "2804940"
  },
  {
    "text": "change in the overall document structure how do i how do i migrate that document structure for existing documents over to",
    "start": "2804940",
    "end": "2811660"
  },
  {
    "text": "the new structure well the answer is a lot of custom code and fortunately there's no migration utilities for",
    "start": "2811660",
    "end": "2818200"
  },
  {
    "text": "document databases like there's no there's no round house or DB up or EF migrations for MongoDB nor is there for",
    "start": "2818200",
    "end": "2824980"
  },
  {
    "text": "cosmos DB as well so again even though it is schema less the schema actually exists but it's in your application as",
    "start": "2824980",
    "end": "2830380"
  },
  {
    "text": "opposed to in the database so just be very judicious with changing this the",
    "start": "2830380",
    "end": "2836560"
  },
  {
    "text": "overall schema structure and if you have this thing we're like you're you're radically changing the overall structure of your documents then you're better off",
    "start": "2836560",
    "end": "2843610"
  },
  {
    "text": "just go ahead and creating a new collection and then migrating those documents one at a time over the new collection versus just having this",
    "start": "2843610",
    "end": "2849820"
  },
  {
    "text": "mismatch of junk and this overall collections with different schemas and different structures at different points",
    "start": "2849820",
    "end": "2855370"
  },
  {
    "text": "in time so that wasn't one of the other like big gotchas like after three months of development like this is easy just",
    "start": "2855370",
    "end": "2861340"
  },
  {
    "text": "adding a single property that's an optional property but what if I'm radically changing the structure well",
    "start": "2861340",
    "end": "2867250"
  },
  {
    "text": "they just had to have a bunch of custom code to go ahead and migrate the documents from one structure to the next",
    "start": "2867250",
    "end": "2872760"
  },
  {
    "text": "don't have a great answer for you it's just like nothing's nothing's free in this world so that's another thing that we we had",
    "start": "2872760",
    "end": "2879190"
  },
  {
    "text": "to just write custom code to is to migrate documents or just be ok with the document structure that was not perfect",
    "start": "2879190",
    "end": "2886920"
  },
  {
    "start": "2888000",
    "end": "2971000"
  },
  {
    "text": "so the next big piece they ran into were transactions so let's go ahead and look at our our order approve logic that's",
    "start": "2889230",
    "end": "2897550"
  },
  {
    "text": "over my order controller and this is",
    "start": "2897550",
    "end": "2903430"
  },
  {
    "text": "where we can see it's actually doing a couple things so when I approve an order",
    "start": "2903430",
    "end": "2908530"
  },
  {
    "text": "the first thing it needs to do is mark the status as approved so that's what this set of code is right here so it's",
    "start": "2908530",
    "end": "2914830"
  },
  {
    "text": "getting the information out of Cosmos DB it's actually look at that why don't we",
    "start": "2914830",
    "end": "2920700"
  },
  {
    "text": "I'm using a document clients which is the sequel client for Doc Iser document",
    "start": "2923480",
    "end": "2929869"
  },
  {
    "text": "as your cosmos TV and that's just pulled in via a nougat package or new J if you",
    "start": "2929869",
    "end": "2935210"
  },
  {
    "text": "like that so that's clients is what we",
    "start": "2935210",
    "end": "2941090"
  },
  {
    "text": "see right here so pulling that in gets us the ability to have that different API if I was using MongoDB then I could",
    "start": "2941090",
    "end": "2947869"
  },
  {
    "text": "just directly use a MongoDB client as opposed to an azure client you don't have to even reference a sure if you're",
    "start": "2947869",
    "end": "2953450"
  },
  {
    "text": "doing one of those other API you can just use the other client IP client api's directly but this one is the",
    "start": "2953450",
    "end": "2959420"
  },
  {
    "text": "sequel one which doesn't exist as a thing any other any and really any other open source no sequel database so they",
    "start": "2959420",
    "end": "2967340"
  },
  {
    "text": "have a querying API through this packages this package here so I need to",
    "start": "2967340",
    "end": "2975680"
  },
  {
    "start": "2971000",
    "end": "3177000"
  },
  {
    "text": "approve and order so I go ahead and say order request that status equals approved I go ahead and update the item",
    "start": "2975680",
    "end": "2982210"
  },
  {
    "text": "the next part of code is then dealing with there the rest of the things that are supposed to happen with an order so",
    "start": "2982210",
    "end": "2989630"
  },
  {
    "text": "for this domain whenever someone approves an order that means they're going to go ahead and reserve that stock",
    "start": "2989630",
    "end": "2995990"
  },
  {
    "text": "and so I need to make sure that I reduce the stock quantity in my in my my let's",
    "start": "2995990",
    "end": "3002830"
  },
  {
    "text": "see this would be my inventory system or my inventory collection so the rest of the part is updating the inventory for",
    "start": "3002830",
    "end": "3009850"
  },
  {
    "text": "that stock item so I go ahead for all my items in the order request I find the",
    "start": "3009850",
    "end": "3016690"
  },
  {
    "text": "different stock items based on that product ID and because I'm using a",
    "start": "3016690",
    "end": "3026260"
  },
  {
    "text": "sequel API I can do things like using link expressions to be able to query information out of there so that was",
    "start": "3026260",
    "end": "3033100"
  },
  {
    "text": "kind of cool I can because it's a because it's the the sequel API it can use syntax that looks very similar to",
    "start": "3033100",
    "end": "3040050"
  },
  {
    "text": "very similar to entity framework where you can have expression based filtering",
    "start": "3040050",
    "end": "3045100"
  },
  {
    "text": "capabilities strongly type stuff and all that sort of junk now I didn't preload",
    "start": "3045100",
    "end": "3050170"
  },
  {
    "text": "on my stock so basically if the stock isn't found it just preloads it with some dummy data so in this case I'm if",
    "start": "3050170",
    "end": "3056230"
  },
  {
    "text": "it's not found I create new stock item with a product ID of that and the quantity available of",
    "start": "3056230",
    "end": "3062080"
  },
  {
    "text": "100 just making something up so this is like the I was lazy my demo part right",
    "start": "3062080",
    "end": "3067450"
  },
  {
    "text": "there so just ignore that but the interesting part down here is once I find the stock item then a route then I",
    "start": "3067450",
    "end": "3074500"
  },
  {
    "text": "deduct the quantity available based on the quantity that you're ordering so as",
    "start": "3074500",
    "end": "3081280"
  },
  {
    "text": "more people order different stock items I should see the quantity available go down and then it finally it goes ahead",
    "start": "3081280",
    "end": "3087520"
  },
  {
    "text": "and updates each individual stock item so I can go to my data explorer and we",
    "start": "3087520",
    "end": "3094180"
  },
  {
    "text": "can see my stock items new sequel query",
    "start": "3094180",
    "end": "3105130"
  },
  {
    "text": "go okay so here's my you see this for",
    "start": "3105130",
    "end": "3110830"
  },
  {
    "text": "this individual Product ID I keep buying the same thing over and over again it started at 90 it started at a hundred",
    "start": "3110830",
    "end": "3115930"
  },
  {
    "text": "but now it's 97 so as I order more items let's actually order like five bikes",
    "start": "3115930",
    "end": "3125100"
  },
  {
    "text": "oops that I stopped running of course I did",
    "start": "3125910",
    "end": "3130799"
  },
  {
    "text": "if I ordered five bikes then we should see that quantity reduced by five so add",
    "start": "3135170",
    "end": "3143540"
  },
  {
    "text": "two carts Add to Cart add two carts out of carts out of carts very very",
    "start": "3143540",
    "end": "3149930"
  },
  {
    "text": "expensive purchase for these bikes so I have a quantity five I check out and at",
    "start": "3149930",
    "end": "3162050"
  },
  {
    "text": "this point my quantity should still be 97 however one a I prove this then the",
    "start": "3162050",
    "end": "3171140"
  },
  {
    "text": "kiwanis she quantity should go down by five so this point there we go and went down",
    "start": "3171140",
    "end": "3176510"
  },
  {
    "text": "by five now this is the code that I saw with our client when they were before",
    "start": "3176510",
    "end": "3181580"
  },
  {
    "start": "3177000",
    "end": "3225000"
  },
  {
    "text": "they brought me on using using MongoDB and eventually cosmos DB and I pointed",
    "start": "3181580",
    "end": "3187010"
  },
  {
    "text": "out a very very big problem here which is this update over here could succeed",
    "start": "3187010",
    "end": "3194290"
  },
  {
    "text": "but if this update fails or any any code fails any exception happens here then",
    "start": "3194290",
    "end": "3200390"
  },
  {
    "text": "I'm then in this half-finished state where I'm not quite finished getting all the stock items out so this is where we",
    "start": "3200390",
    "end": "3208550"
  },
  {
    "text": "transition to using domain events so right now I'm trying to do these two operations at the exact same time what I",
    "start": "3208550",
    "end": "3214730"
  },
  {
    "text": "want to do is instead have the stock updates happen in sort of a different transaction just a different a different",
    "start": "3214730",
    "end": "3221120"
  },
  {
    "text": "set altogether but using domain events as a means to communicate to those so",
    "start": "3221120",
    "end": "3226880"
  },
  {
    "text": "right now I'm just saying order status equals approve what I really want to do is do order request dot approve this",
    "start": "3226880",
    "end": "3237110"
  },
  {
    "text": "method doesn't exist but what I'll be doing is moving that status update inside this method okay so now instead",
    "start": "3237110",
    "end": "3248480"
  },
  {
    "text": "of someone setting that status directly I'm encapsulating that operation inside of here and the next thing I want to do",
    "start": "3248480",
    "end": "3253760"
  },
  {
    "text": "is actually raise a domain event so I'll",
    "start": "3253760",
    "end": "3259010"
  },
  {
    "text": "say publish and now I have to define my domain events now in in defining my",
    "start": "3259010",
    "end": "3264290"
  },
  {
    "text": "domain event what I'm trying to decide is how should this entity communicate the other entity and the way I look at",
    "start": "3264290",
    "end": "3270860"
  },
  {
    "text": "that is what is the information that is being used over here to be able to do that update and what I see is it's using",
    "start": "3270860",
    "end": "3277580"
  },
  {
    "text": "the product ID and the quantity available right here are the quantity as",
    "start": "3277580",
    "end": "3283670"
  },
  {
    "text": "the information from the order in order to be able to do the sort of update so",
    "start": "3283670",
    "end": "3290120"
  },
  {
    "start": "3289000",
    "end": "3600000"
  },
  {
    "text": "inside of here what I'll do is off for each over my items and then publish a",
    "start": "3290120",
    "end": "3297020"
  },
  {
    "text": "domain event it would be let's just go ahead and create it here I don't think I",
    "start": "3297020",
    "end": "3302030"
  },
  {
    "text": "have it yet no class item purchased",
    "start": "3302030",
    "end": "3307900"
  },
  {
    "text": "would be my domain events it's one of",
    "start": "3307900",
    "end": "3313820"
  },
  {
    "text": "these things and as as part of it I'll have the product ID and oops and the",
    "start": "3313820",
    "end": "3326450"
  },
  {
    "text": "quantity okay there's one other thing I",
    "start": "3326450",
    "end": "3334370"
  },
  {
    "text": "need to have which is this ID this is the way that I'll be able to tell if",
    "start": "3334370",
    "end": "3339860"
  },
  {
    "text": "this domain event has been processed before it's just by looking at the ID of the domain event so whenever I publish",
    "start": "3339860",
    "end": "3345170"
  },
  {
    "text": "them over here I'll say publish new item purchased and as part of that I'll have",
    "start": "3345170",
    "end": "3353480"
  },
  {
    "text": "the product ID equals line item dot product ID and then the quantity is",
    "start": "3353480",
    "end": "3360800"
  },
  {
    "text": "going to be the line item quantity and then finally the ID is going to be just",
    "start": "3360800",
    "end": "3366140"
  },
  {
    "text": "gooood new gooood sorry I'm not I don't recycle my goods they're all 100%",
    "start": "3366140",
    "end": "3372280"
  },
  {
    "text": "bespoke goods okay so what does this is doing underneath the covers to publish a",
    "start": "3372280",
    "end": "3378590"
  },
  {
    "text": "domain events well publishing a domain of it for me is literally just storing",
    "start": "3378590",
    "end": "3383900"
  },
  {
    "text": "those domain events on a collection so I actually built this aggregate base class that has my inbox on my outbox as just",
    "start": "3383900",
    "end": "3392630"
  },
  {
    "text": "two collections of domain events so the outbox is a hash set of domain events it's a hash set to make sure I don't",
    "start": "3392630",
    "end": "3399230"
  },
  {
    "text": "have duplicate domain events as part of that collection in my inbox is another hash seto domain events",
    "start": "3399230",
    "end": "3404810"
  },
  {
    "text": "they're just another collection of domain events and then publishing is",
    "start": "3404810",
    "end": "3410330"
  },
  {
    "text": "just literally like adding the domain event to the outbox",
    "start": "3410330",
    "end": "3417160"
  },
  {
    "text": "so now when I when I'm doing this operation or you just remove inside the",
    "start": "3417340",
    "end": "3425060"
  },
  {
    "text": "order controller so now when I when I'm approving the order request that's the",
    "start": "3425060",
    "end": "3430520"
  },
  {
    "text": "only thing I need to do I say approve update item and then I'm done so this part to actually do the the for each",
    "start": "3430520",
    "end": "3436730"
  },
  {
    "text": "that's no longer needed anymore because I'm using using a domain event to be able to accomplish that operation so to",
    "start": "3436730",
    "end": "3443870"
  },
  {
    "text": "actually process that domain events then I'll need to have another set of code and I'll just put it in my stock so",
    "start": "3443870",
    "end": "3459290"
  },
  {
    "text": "right now the stock is kind of a dumb data object but I want to actually process this domain events so what I'll create is a handle method",
    "start": "3459290",
    "end": "3467560"
  },
  {
    "text": "public void handle for that domain event and that domain event was item purchased",
    "start": "3467560",
    "end": "3475550"
  },
  {
    "text": "yes event and so what I needed to do as",
    "start": "3475550",
    "end": "3482240"
  },
  {
    "text": "part of this is perform the actual logic to handle the domain event now I said before that I want to make sure that it",
    "start": "3482240",
    "end": "3488390"
  },
  {
    "text": "only process each domain event once so I need to have a way to check to see if I process before this before so I've",
    "start": "3488390",
    "end": "3494540"
  },
  {
    "text": "actually created a method on the base class to process domain events so over here there's a process so let's say",
    "start": "3494540",
    "end": "3500410"
  },
  {
    "text": "process the domain event passing in the event oh",
    "start": "3500410",
    "end": "3507890"
  },
  {
    "text": "let me let me just call it tomato event that's probably better than event",
    "start": "3507890",
    "end": "3512559"
  },
  {
    "text": "process domain event and then the action to actually perform so like he goes to",
    "start": "3513700",
    "end": "3522620"
  },
  {
    "text": "and what is this code actually going to do well it's going to do what I was doing before and the order controller so",
    "start": "3522620",
    "end": "3529550"
  },
  {
    "text": "taking basically this part out right here and then doing that",
    "start": "3529550",
    "end": "3536380"
  },
  {
    "text": "inside this action so quantity available - equals e dot quantity and so that's",
    "start": "3536380",
    "end": "3546670"
  },
  {
    "text": "how I can handle this individual domain event now there's another set of code that I I won't show because I don't have",
    "start": "3546670",
    "end": "3553269"
  },
  {
    "text": "quite enough time which is how do I link up the domain event that got put in the",
    "start": "3553269",
    "end": "3559900"
  },
  {
    "text": "out box to the inbox of the other side and so there's gonna be some infrastructure code to basically be able",
    "start": "3559900",
    "end": "3566410"
  },
  {
    "text": "to pluck items out of the out box find the code that should load up the correct entity for how it should be processed",
    "start": "3566410",
    "end": "3572680"
  },
  {
    "text": "and then finally dispatching it to that entity itself so that all that code is actually over here in the infrastructure",
    "start": "3572680",
    "end": "3578650"
  },
  {
    "text": "it's very exhaustive of all the junk that it's as part of it but what it gives for me as someone",
    "start": "3578650",
    "end": "3584230"
  },
  {
    "text": "that's building this kind of code is I can now separate my updates from different documents by using domain",
    "start": "3584230",
    "end": "3589990"
  },
  {
    "text": "events as the means to communicate between these different these different aggregate routes are these different",
    "start": "3589990",
    "end": "3595569"
  },
  {
    "text": "documents inside of instead of Cosmos dB so this now goes down to just the main",
    "start": "3595569",
    "end": "3604359"
  },
  {
    "text": "update all that goes away and by my",
    "start": "3604359",
    "end": "3610450"
  },
  {
    "text": "overall approval it's just the bare minimum to actually approve the order request and the only other side effects",
    "start": "3610450",
    "end": "3617049"
  },
  {
    "text": "they need to happen as part of that are then achieved now through these domain events communicating inside each",
    "start": "3617049",
    "end": "3622839"
  },
  {
    "text": "individual aggregate dispatched to the other entities so it was a lot of it was",
    "start": "3622839",
    "end": "3629019"
  },
  {
    "text": "a bit of infrastructure code to set this up this is all to avoid this is all to",
    "start": "3629019",
    "end": "3634390"
  },
  {
    "text": "avoid us writing this code inside of JavaScript store procedures which I like me I like this better like like that",
    "start": "3634390",
    "end": "3640329"
  },
  {
    "text": "looks better to me and that looks better to me then Java sips for procedure plus",
    "start": "3640329",
    "end": "3646930"
  },
  {
    "text": "for this action those two things didn't actually need to happen in the exact same transaction so going as far to use",
    "start": "3646930",
    "end": "3653829"
  },
  {
    "text": "a transaction would have been complete overkill because updating stock didn't even need to happen at the same time as",
    "start": "3653829",
    "end": "3659400"
  },
  {
    "text": "marking the status as approved so if you",
    "start": "3659400",
    "end": "3664539"
  },
  {
    "text": "want to see the full example of this it's on my github dock my github github that coms last J Bogart slash presentation",
    "start": "3664539",
    "end": "3672058"
  },
  {
    "text": "do I hope you didn't crash sometimes it happens so if you want to see a full",
    "start": "3674680",
    "end": "3681560"
  },
  {
    "text": "example go to my github get up now calm /je bugger it slice presentations you'll see a from sequel to Azure DB and all",
    "start": "3681560",
    "end": "3686960"
  },
  {
    "text": "the code to actually perform all the all the domain of an goodness is inside of there and that's the way you can escape",
    "start": "3686960",
    "end": "3692810"
  },
  {
    "text": "the the escape the JavaScript store procedures of azure cosmos TV so that",
    "start": "3692810",
    "end": "3699410"
  },
  {
    "text": "was our customer journey for our manufacturing client going from sequel to Azure cosmos TV it was a wild success",
    "start": "3699410",
    "end": "3705350"
  },
  {
    "text": "for them they were able to not use MongoDB in a virtual machine which would've been horrible and instead use the power of the cloud from Azure to",
    "start": "3705350",
    "end": "3712100"
  },
  {
    "text": "power their manufacturing tools so thank you very much if you have any more questions I'll be hanging around outside",
    "start": "3712100",
    "end": "3717290"
  },
  {
    "text": "afterwards otherwise I hope you have a great rest of the conference thank you [Applause]",
    "start": "3717290",
    "end": "3726119"
  }
]