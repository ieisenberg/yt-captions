[
  {
    "text": "hi everyone welcome to 2018 the year of web components before we kick off and I",
    "start": "4009",
    "end": "11330"
  },
  {
    "text": "hope this stage really stays because it's shaking and so if you don't see me move much that's mainly because I'm",
    "start": "11330",
    "end": "17000"
  },
  {
    "text": "afraid that this stage drops down let's start with a question and I might might see your hands I might not um hopefully",
    "start": "17000",
    "end": "24490"
  },
  {
    "text": "so hands up if you at any point in your career had to write front-end code cool",
    "start": "24490",
    "end": "31910"
  },
  {
    "text": "that's pretty much everyone I expected that but keep your hands up if at that point you had to write a date picker or",
    "start": "31910",
    "end": "38659"
  },
  {
    "text": "custom select box at one point all right that's also pretty much everyone for the people who are watching",
    "start": "38659",
    "end": "45649"
  },
  {
    "text": "on the overflow room and you know that's the problem right there like I've done",
    "start": "45649",
    "end": "51289"
  },
  {
    "text": "the same thing and in fact if you search on NPM there's over a thousand modules that solve date pickers and there's",
    "start": "51289",
    "end": "57829"
  },
  {
    "text": "everything from generic date pickers to date pickers for react and date pickers for view j/s and there's not just one",
    "start": "57829",
    "end": "65119"
  },
  {
    "text": "date picker for react but a million date pickers for react and that's just really",
    "start": "65119",
    "end": "71750"
  },
  {
    "text": "complicated and you have like a big amount of fragmentation because first of all date picker implement implementing",
    "start": "71750",
    "end": "77900"
  },
  {
    "text": "date pickers isn't easy so why don't we have a way to just use a date picker",
    "start": "77900",
    "end": "83420"
  },
  {
    "text": "like we use any other element that is native to the browser like a video tag or an input input tag like like a tag",
    "start": "83420",
    "end": "92780"
  },
  {
    "text": "textbox and this is pretty much where web components come into play and the ideas that we can use a UI concept like",
    "start": "92780",
    "end": "101330"
  },
  {
    "text": "date pickers just like that and over the next hour I would love to talk to you",
    "start": "101330",
    "end": "107000"
  },
  {
    "text": "about why I believe that 2018 is sort of where we want to look into web components more and where they're really",
    "start": "107000",
    "end": "113330"
  },
  {
    "text": "going to take off and if you've been around the web development community for a while you might have heard the same",
    "start": "113330",
    "end": "118820"
  },
  {
    "text": "statement in 2013 or even in 2011 when the web components idea was initially announced however I really think that",
    "start": "118820",
    "end": "126350"
  },
  {
    "text": "2018 is really the moment where we want to start looking at it and hopefully by",
    "start": "126350",
    "end": "131780"
  },
  {
    "text": "the end of the talk you're as excited about them as I am but before we get started let me quickly introduce myself",
    "start": "131780",
    "end": "137930"
  },
  {
    "text": "I'm Dominic I live in Berlin and I work as a developer evangelist for a company called Twilio where a cloud",
    "start": "137930",
    "end": "144349"
  },
  {
    "text": "communications platform so we have different API for developers to sort of different communication problems such as",
    "start": "144349",
    "end": "150439"
  },
  {
    "text": "sending SMS making phone calls chat video etc if you want to talk more about",
    "start": "150439",
    "end": "155599"
  },
  {
    "text": "that we actually have a booth downstairs so you can come by later ask me any questions about the talk or also about",
    "start": "155599",
    "end": "162200"
  },
  {
    "text": "Twitter in general so I've been developing for the web for a while now and at every point in time so if we have",
    "start": "162200",
    "end": "169609"
  },
  {
    "text": "the same problem and that was how do we share UI come UI concepts and in general",
    "start": "169609",
    "end": "174950"
  },
  {
    "text": "like UI solutions between projects and",
    "start": "174950",
    "end": "180169"
  },
  {
    "text": "there were different approaches developed over this time one of them I call the bootstrap approach so that's",
    "start": "180169",
    "end": "187370"
  },
  {
    "text": "basically you take a bunch of CSS and HTML script that is typically hosted",
    "start": "187370",
    "end": "193489"
  },
  {
    "text": "somewhere on some CDN you blindly copy paste that from the documentation because you're like I think I need all",
    "start": "193489",
    "end": "199730"
  },
  {
    "text": "of them even though they say optional but I'm not really sure which ones are optional so I'm just gonna copy all of them and once you have done that then",
    "start": "199730",
    "end": "207769"
  },
  {
    "text": "you go back to the documentation you pick out your favorite component you want to take and then you copy paste",
    "start": "207769",
    "end": "213199"
  },
  {
    "text": "that code and then the puzzling stores so you want to have an alert box cool your copy paste this but now the",
    "start": "213199",
    "end": "220189"
  },
  {
    "text": "question is so which ones of these are styling related which ones are mandatory",
    "start": "220189",
    "end": "225260"
  },
  {
    "text": "which ones are optional which ones are semantical which ones help you with accessibility you know like and which",
    "start": "225260",
    "end": "231859"
  },
  {
    "text": "ones do I have to keep up-to-date at which point you know is it do I have to have the HR in there",
    "start": "231859",
    "end": "238489"
  },
  {
    "text": "or will the entire thing flip a table if I remove it what's mb0 you know like if you don't",
    "start": "238489",
    "end": "245479"
  },
  {
    "text": "spend a lot of time with that you have no idea what that does where it's like alert heading that seems sort of",
    "start": "245479",
    "end": "251030"
  },
  {
    "text": "reasonable but does that have to be an age for can it be an age five because in that contents their contact context",
    "start": "251030",
    "end": "258440"
  },
  {
    "text": "there is already an age four and I don't want to I still want to have semantically HTML so there's a lot of",
    "start": "258440",
    "end": "263630"
  },
  {
    "text": "these things that are kind of really unsure and you shouldn't really have to bother with so there's another approach",
    "start": "263630",
    "end": "269630"
  },
  {
    "text": "which is more the JavaScript API is DK approach so in this approach we load some global JavaScript and then in",
    "start": "269630",
    "end": "277610"
  },
  {
    "text": "this case the Google Maps API and then we specify some way that it B is being",
    "start": "277610",
    "end": "284210"
  },
  {
    "text": "triggered so in this case we declare a global function that is automatically being triggered when the script has been",
    "start": "284210",
    "end": "289910"
  },
  {
    "text": "fetched and then in there we use a some global SDK where we specify a Dom",
    "start": "289910",
    "end": "296240"
  },
  {
    "text": "element that has to be already present which sort of acts like a container and then pass some options in and magically",
    "start": "296240",
    "end": "304130"
  },
  {
    "text": "the SDK places a bunch of stuff in there that we can configure while this is a cool approach because it abstracts away",
    "start": "304130",
    "end": "310700"
  },
  {
    "text": "the things that we don't have to care about there's a lot of things going on here that are not really compatible with",
    "start": "310700",
    "end": "316460"
  },
  {
    "text": "modern web development how we do it so first of all this requires Dom access that's something that libraries like",
    "start": "316460",
    "end": "323030"
  },
  {
    "text": "react or angular really don't encourage you to do because this will be very",
    "start": "323030",
    "end": "328250"
  },
  {
    "text": "difficult with server-side rendering for example the other thing is global functions we shouldn't really use that",
    "start": "328250",
    "end": "333700"
  },
  {
    "text": "and all of these concepts really don't create a nice user experience here and",
    "start": "333700",
    "end": "340010"
  },
  {
    "text": "then there's another alternative approach which is sort of like the share button approach from Facebook and it's a",
    "start": "340010",
    "end": "346640"
  },
  {
    "text": "mixture of loading some global JavaScript and this just looks really",
    "start": "346640",
    "end": "351670"
  },
  {
    "text": "confusing because they do asynchronous JavaScript loading without using the",
    "start": "351670",
    "end": "356930"
  },
  {
    "text": "async and the defer attribute but I kind of like just injecting the script manually and one that once that actually",
    "start": "356930",
    "end": "364670"
  },
  {
    "text": "happened then you have to play somewhere on your page some HTML that has to have",
    "start": "364670",
    "end": "371000"
  },
  {
    "text": "a specific shape so similar to the bootstrap one by having a class in this case FB share buttons so the SDK knows",
    "start": "371000",
    "end": "376970"
  },
  {
    "text": "what to look for and then you specify a bunch of data attributes that then will be read by the SDK and magically place",
    "start": "376970",
    "end": "383660"
  },
  {
    "text": "in this button the cool thing about this is that we can have a fallback in this case so if the SDK isn't being loaded in",
    "start": "383660",
    "end": "389960"
  },
  {
    "text": "this case we can put an a tag there and that will just work however we also see",
    "start": "389960",
    "end": "396260"
  },
  {
    "text": "here that there's at this point we already have duplicate code because we have twice the same URL that we need to",
    "start": "396260",
    "end": "402950"
  },
  {
    "text": "keep in sync and it's very easy kind of like overlook this so overall",
    "start": "402950",
    "end": "407999"
  },
  {
    "text": "all of these approaches what pretty well if you're right playing JavaScript but you quickly end up with a poor developer",
    "start": "407999",
    "end": "414719"
  },
  {
    "text": "experience when it comes to combining this with frameworks like angular react view pretty much all of them because it",
    "start": "414719",
    "end": "420899"
  },
  {
    "text": "requires you to access the Dom in a lot of cases which is actively discouraged",
    "start": "420899",
    "end": "427429"
  },
  {
    "text": "and/or it requires you to load in a bunch of copy-paste a bunch of stuff so",
    "start": "427429",
    "end": "433499"
  },
  {
    "text": "we quickly hand up writing wrapper components around these things however these wrapper components are",
    "start": "433499",
    "end": "438539"
  },
  {
    "text": "always kind of bound to the respective framework where we want to use them and",
    "start": "438539",
    "end": "444449"
  },
  {
    "text": "that quickly kind of creates a fragmentation in the way that we have things that are out of sync different",
    "start": "444449",
    "end": "451199"
  },
  {
    "text": "features are in different different wrapper components so if we look at something like MDL which is material",
    "start": "451199",
    "end": "456839"
  },
  {
    "text": "design light so you can imagine that like the bootstrap equivalent for a material design so it has some global",
    "start": "456839",
    "end": "464579"
  },
  {
    "text": "style sheets and it has a global JavaScript and people wrote wrapper components around this and there's one",
    "start": "464579",
    "end": "470399"
  },
  {
    "text": "for pre-act there's one for react but for some of these two even though they're relying on the same boots like",
    "start": "470399",
    "end": "476489"
  },
  {
    "text": "bootstrap style library they have completely different features they have not only different syntax but like they",
    "start": "476489",
    "end": "482339"
  },
  {
    "text": "have completely different feature coverage same time for view and stuff and what if they kind of go out of sync",
    "start": "482339",
    "end": "488279"
  },
  {
    "text": "because like one of them is keeping up to date with these security patches the other one is not being used anymore",
    "start": "488279",
    "end": "493669"
  },
  {
    "text": "because it's driven by someone from the community and they don't really care about this anymore because they moved on",
    "start": "493669",
    "end": "499079"
  },
  {
    "text": "to another project so all of these kind of really create a port developer",
    "start": "499079",
    "end": "505499"
  },
  {
    "text": "experience so what if we could instead use custom like use elements and",
    "start": "505499",
    "end": "512279"
  },
  {
    "text": "components as if they are just native to the browser you know what if we can",
    "start": "512279",
    "end": "518039"
  },
  {
    "text": "actually extend them from the built-in HTML element and this is where web components come into play and web",
    "start": "518039",
    "end": "523888"
  },
  {
    "text": "components contrary choose like a popular belief it's just it's not just one spec it's actually a serious of",
    "start": "523889",
    "end": "530250"
  },
  {
    "text": "specs so it's a series of four specs the first one is called custom elements and it's probably the thing that most people",
    "start": "530250",
    "end": "536910"
  },
  {
    "text": "associate with web component so custom elements is this concept of allowing you to extend the eight",
    "start": "536910",
    "end": "543810"
  },
  {
    "text": "built-in HTML element to declare your own elements on HTML tags and when I'm",
    "start": "543810",
    "end": "549960"
  },
  {
    "text": "talking about extending the HTML element I might I mean that quite literally so you would define a new years 2015 class",
    "start": "549960",
    "end": "557340"
  },
  {
    "text": "it has to be an es 2015 class you can't do the prototypal inheritance with functions here and then inside the",
    "start": "557340",
    "end": "564750"
  },
  {
    "text": "constructor you can then kind of make your own magic and kind of place things into that attribute and start rendering",
    "start": "564750",
    "end": "570930"
  },
  {
    "text": "things and then later you just call custom elements that define specify a tag name and specify this class and the",
    "start": "570930",
    "end": "578190"
  },
  {
    "text": "browser will register this for you so you can use it the cool thing is you can also extend other built-in elements so",
    "start": "578190",
    "end": "584160"
  },
  {
    "text": "if you would want to extend the input element instead you could do that you would instead extend from that class and",
    "start": "584160",
    "end": "591120"
  },
  {
    "text": "then you would specify an attribute called extends input to the custom",
    "start": "591120",
    "end": "596250"
  },
  {
    "text": "elements and both of these can be used the same way you can use them as declarative as you're used to via HTML",
    "start": "596250",
    "end": "603180"
  },
  {
    "text": "so you just use either if it's a normal web normal custom element you just use the HTML tag that you define and",
    "start": "603180",
    "end": "610650"
  },
  {
    "text": "otherwise if it's an extending one you use that base tag and you write is equals and then the name that you",
    "start": "610650",
    "end": "616470"
  },
  {
    "text": "defined and then you can also use them imperative leave via JavaScript so you can just use document or create element",
    "start": "616470",
    "end": "622440"
  },
  {
    "text": "and this is really cool because things like the video memory act and pre act like just called document or create",
    "start": "622440",
    "end": "627990"
  },
  {
    "text": "element under the hood and all of these sort of libraries do so because they",
    "start": "627990",
    "end": "633180"
  },
  {
    "text": "anyways have to deal with things like input and video and stuff like that so there is no additional magic here that",
    "start": "633180",
    "end": "638610"
  },
  {
    "text": "it just works if we talk about custom elements one thing you should keep in",
    "start": "638610",
    "end": "643710"
  },
  {
    "text": "mind when you're building them is a difference between attributes and properties if you're not familiar with",
    "start": "643710",
    "end": "649140"
  },
  {
    "text": "the difference basically an attribute in HT is the ones that you define in HTML",
    "start": "649140",
    "end": "655890"
  },
  {
    "text": "and these can allow you to pass information into a component but they",
    "start": "655890",
    "end": "661350"
  },
  {
    "text": "only support simple data so that means we can pass on some things like string or we can check if the property is",
    "start": "661350",
    "end": "666960"
  },
  {
    "text": "generally available we could sort of stringify data and then place it in but since we would",
    "start": "666960",
    "end": "673319"
  },
  {
    "text": "constantly have to parse it that's not really performance so typically you rely on basic data here and then there is",
    "start": "673319",
    "end": "679889"
  },
  {
    "text": "properties and properties are really the properties on an instance of this class",
    "start": "679889",
    "end": "685279"
  },
  {
    "text": "so for example the value here the equivalent would be a proper the",
    "start": "685279",
    "end": "690539"
  },
  {
    "text": "equivalent property would just be like we grab out the element out of the Dom and then call it value similarly for",
    "start": "690539",
    "end": "696299"
  },
  {
    "text": "like disabled but we could also pass more complex data like an array for",
    "start": "696299",
    "end": "701789"
  },
  {
    "text": "example and the thing here is that these two are not directly connected we can connect them and we can make these",
    "start": "701789",
    "end": "709769"
  },
  {
    "text": "reflect reflect these changes and that's what you would typically see with built-in built-in elements but you have",
    "start": "709769",
    "end": "716639"
  },
  {
    "text": "to do it manually so it would look similar to this where you would define instead of just a plain property you would define a setter",
    "start": "716639",
    "end": "723419"
  },
  {
    "text": "and getter and then these would sort of take care of reflecting that change back into the attribute",
    "start": "723419",
    "end": "729209"
  },
  {
    "text": "there's also lifecycle hooks in the HTML element base class like attribute",
    "start": "729209",
    "end": "734309"
  },
  {
    "text": "changed callback so you can have listen on when attributes changed and then have reflect that back into properties or",
    "start": "734309",
    "end": "741059"
  },
  {
    "text": "handle events on this and stuff like that the next spec is HTML templates so that",
    "start": "741059",
    "end": "748259"
  },
  {
    "text": "allows you to create HTML that is very easily easily and very performant Lea",
    "start": "748259",
    "end": "754669"
  },
  {
    "text": "duplicatable so you would use the HTML template tag and then inside there you",
    "start": "754669",
    "end": "761429"
  },
  {
    "text": "can specify a bunch of different HTML and CSS and things and they won't be",
    "start": "761429",
    "end": "767039"
  },
  {
    "text": "rendered so you don't have to worry about that but the nice thing is you can grab this by the query selector or",
    "start": "767039",
    "end": "772339"
  },
  {
    "text": "document or get element by ID and then you can clone these nodes very",
    "start": "772339",
    "end": "777509"
  },
  {
    "text": "efficiently so we do that by grabbing the content and then calling clone node on this and in this case we're doing a",
    "start": "777509",
    "end": "784169"
  },
  {
    "text": "deep clone and then we can kind of really easily stamp out new instances in a very performant manner this is the",
    "start": "784169",
    "end": "790470"
  },
  {
    "text": "most performant way to duplicate the same thing again and again into the into",
    "start": "790470",
    "end": "796499"
  },
  {
    "text": "the Dom because it's directly powered by the browser",
    "start": "796499",
    "end": "801679"
  },
  {
    "text": "and one thing you see here is a slot attribute and we'll cover that later but",
    "start": "801960",
    "end": "807060"
  },
  {
    "text": "this is one thing that you can use in templates as well so then there's the",
    "start": "807060",
    "end": "813210"
  },
  {
    "text": "shadow Dom and the shadow Dom is allows you to hide underlying implementation of",
    "start": "813210",
    "end": "818310"
  },
  {
    "text": "your custom element for example and scope styling so a good example for this will be the HTML video tag or really",
    "start": "818310",
    "end": "825450"
  },
  {
    "text": "like any of the built-in elements that are not that are doing some styling to it right because we want to make sure",
    "start": "825450",
    "end": "831720"
  },
  {
    "text": "that for example if you're overriding the styles for every button the play",
    "start": "831720",
    "end": "837510"
  },
  {
    "text": "button on a video at the video player shouldn't directly be influenced by this and this is what the shadow Dom kind of",
    "start": "837510",
    "end": "844200"
  },
  {
    "text": "ensures the way you use it is you use it in the constructor of a of your custom",
    "start": "844200",
    "end": "850500"
  },
  {
    "text": "element and you just call this dot attach shadow you in this case we're using the open",
    "start": "850500",
    "end": "856800"
  },
  {
    "text": "mode and you will see later how that looks like and then we append just the content in this case from the from the",
    "start": "856800",
    "end": "863520"
  },
  {
    "text": "template that we grabbed earlier we just then clone that into the into the shadow root and then that sort of appears like",
    "start": "863520",
    "end": "872580"
  },
  {
    "text": "this on in in the dev tools so the top one is how we would write in a code",
    "start": "872580",
    "end": "877800"
  },
  {
    "text": "we'll create a date picker we could pass in some child component and then once",
    "start": "877800",
    "end": "884010"
  },
  {
    "text": "that's rendered we actually have these like the content that we pass in as a",
    "start": "884010",
    "end": "889410"
  },
  {
    "text": "child appear in the slot and it's not going to be actually placed in there but it's gonna appear at that position and",
    "start": "889410",
    "end": "896790"
  },
  {
    "text": "we again we're gonna see later in an example how this looks like in case this is a bit too abstract for you right now",
    "start": "896790",
    "end": "902660"
  },
  {
    "text": "and then there's the fourth one and that's HTML imports and that's the one I'm not really gonna dive into because",
    "start": "902660",
    "end": "909330"
  },
  {
    "text": "it's essentially declared dead the idea here was to find a way to include all of",
    "start": "909330",
    "end": "915180"
  },
  {
    "text": "these things like HTML HTML templates and and JavaScript and stuff like that",
    "start": "915180",
    "end": "921330"
  },
  {
    "text": "and and CSS all of that into into another web site in an easy way and the",
    "start": "921330",
    "end": "928770"
  },
  {
    "text": "idea was well HTML already understands all of these things so why don't we just do a way to import HTML",
    "start": "928770",
    "end": "936120"
  },
  {
    "text": "in the meantime we didn't really see adoption for that in the community so as",
    "start": "936120",
    "end": "941370"
  },
  {
    "text": "a result the team working on it kind of like declared it dead and instead right now everyone is focusing on JavaScript",
    "start": "941370",
    "end": "947760"
  },
  {
    "text": "modules there is the discussion around HTML modules but they're still in a very early stage so we're not going to cover",
    "start": "947760",
    "end": "954300"
  },
  {
    "text": "those so how does the support look like so the support is pretty good if you use",
    "start": "954300",
    "end": "960930"
  },
  {
    "text": "polyfill so most of the things that I talked about like HTML templates and yes modules are actually in every evergreen",
    "start": "960930",
    "end": "967350"
  },
  {
    "text": "browser these days custom elements can be actually really well polyfilled",
    "start": "967350",
    "end": "973700"
  },
  {
    "text": "shadow Dom is the more tricky one so there is a polyfill called shady CSS which will kind of try to do this",
    "start": "973700",
    "end": "981000"
  },
  {
    "text": "scoping of the styles but it there there's just certain things that are just not polyfill abble there so you",
    "start": "981000",
    "end": "988800"
  },
  {
    "text": "still have to kind of write very good CSS there until until shadow Dom support",
    "start": "988800",
    "end": "995910"
  },
  {
    "text": "is there however the polyfill certainly help you to on board this quickly so that once",
    "start": "995910",
    "end": "1001790"
  },
  {
    "text": "the browser's finish the implementation your component just works so why should you care why should I care why should",
    "start": "1001790",
    "end": "1008600"
  },
  {
    "text": "anyone really care about this so if you develop a UI component web components is",
    "start": "1008600",
    "end": "1014950"
  },
  {
    "text": "definitely the best way for you to get larger adoption if you're writing your component for react only you're",
    "start": "1014950",
    "end": "1022310"
  },
  {
    "text": "excluding a large user base of view and angular users and really anyone who builds a static website there are still",
    "start": "1022310",
    "end": "1029030"
  },
  {
    "text": "a lot of use cases for static websites especially in things like marketing etc and even if you don't write UI",
    "start": "1029030",
    "end": "1037428"
  },
  {
    "text": "components for the world out there it allows you to provide share the same",
    "start": "1037429",
    "end": "1042740"
  },
  {
    "text": "tools the same components among your teams in your company so if if you're working on sort of like",
    "start": "1042740",
    "end": "1049040"
  },
  {
    "text": "the brand guidelines and stuff like I used to work at Microsoft and everyone in the office org kind of implemented",
    "start": "1049040",
    "end": "1055070"
  },
  {
    "text": "their own version of the very same button and this is sort of a lot of",
    "start": "1055070",
    "end": "1060350"
  },
  {
    "text": "redundant code and you kind of continue doing that again and again every time there's new brand can the guidelines",
    "start": "1060350",
    "end": "1065809"
  },
  {
    "text": "like on every department sort of use the same button and even if you don't fall in that",
    "start": "1065809",
    "end": "1072809"
  },
  {
    "text": "category like other people developing web components and onboarding to web",
    "start": "1072809",
    "end": "1078090"
  },
  {
    "text": "components just creates a better development experience for you as well because every framework knows how to",
    "start": "1078090",
    "end": "1083129"
  },
  {
    "text": "handle native elements and therefore that's always something that has a good",
    "start": "1083129",
    "end": "1088710"
  },
  {
    "text": "developer experience in every framework to show you a good example of web",
    "start": "1088710",
    "end": "1093840"
  },
  {
    "text": "components I want to talk about a frame so if you're not familiar with a frame I'm not sure how many of you heard of a",
    "start": "1093840",
    "end": "1100080"
  },
  {
    "text": "frame all right that's not too many so a frame is an abstraction layer around",
    "start": "1100080",
    "end": "1105210"
  },
  {
    "text": "three json WebGL and it's there to enable you to build really easily web VR",
    "start": "1105210",
    "end": "1112309"
  },
  {
    "text": "experiences using simple HTML markup hmm",
    "start": "1112309",
    "end": "1118019"
  },
  {
    "text": "I'm gonna quickly show you a demo here to show you where why this is really",
    "start": "1118019",
    "end": "1123330"
  },
  {
    "text": "useful so this is this is an A Frame example it's some glitch and the link is",
    "start": "1123330",
    "end": "1130379"
  },
  {
    "text": "in the slide so I'm gonna share that later if you want to play around with us but we can do these things like walk around and stuff and it's really cool",
    "start": "1130379",
    "end": "1137330"
  },
  {
    "text": "but writing this code in WebGL would be",
    "start": "1137330",
    "end": "1142340"
  },
  {
    "text": "incredibly complex writing this code in three.js is still a lot of code and very",
    "start": "1142340",
    "end": "1148200"
  },
  {
    "text": "complex however we looked at the code here we see already there's a license file a",
    "start": "1148200",
    "end": "1153269"
  },
  {
    "text": "readme file and then just an index.html there's no JavaScript there's no package JSON there's no build pipeline there's",
    "start": "1153269",
    "end": "1159509"
  },
  {
    "text": "nothing like that this is all the code for what we see and it's readable like I can even if I'm not an expert on what VR",
    "start": "1159509",
    "end": "1166499"
  },
  {
    "text": "I know how to use this and I can go like all right there's like Hello a frame",
    "start": "1166499",
    "end": "1171600"
  },
  {
    "text": "here so if I look back here it says it there so I should be able to just go here and say hello let me see Oslo and we can change the",
    "start": "1171600",
    "end": "1179999"
  },
  {
    "text": "color here some let's I don't know make this bright green so",
    "start": "1179999",
    "end": "1186980"
  },
  {
    "text": "stays like this and up loading",
    "start": "1191470",
    "end": "1198220"
  },
  {
    "text": "Oh anyways let's just keep this there we",
    "start": "1198220",
    "end": "1203650"
  },
  {
    "text": "go oh it was there Internet it's loading",
    "start": "1203650",
    "end": "1212669"
  },
  {
    "text": "so it has to fetch the the other resources let's try this again anyways",
    "start": "1212669",
    "end": "1219039"
  },
  {
    "text": "but it's it's really easy to to kind of understand how how all of these things play into each other and even if you're",
    "start": "1219039",
    "end": "1228700"
  },
  {
    "text": "not an expert on this you're able to play around with this another thing",
    "start": "1228700",
    "end": "1236530"
  },
  {
    "text": "another good example is a web component my colleague Phil Nash Road which is",
    "start": "1236530",
    "end": "1241750"
  },
  {
    "text": "about the web share API and it's a progressive component and I think in highlights and really nice concept so",
    "start": "1241750",
    "end": "1250000"
  },
  {
    "text": "this is how you would use his web component and it uses the web share API",
    "start": "1250000",
    "end": "1255400"
  },
  {
    "text": "which is an API designed to make sharing things on the web easier especially if you're on mobile and things like that so",
    "start": "1255400",
    "end": "1261940"
  },
  {
    "text": "you can just click a button it opens the have shared dialogue that you're used to from from native apps and you can",
    "start": "1261940",
    "end": "1268120"
  },
  {
    "text": "specify a bunch of properties here but then he also allows you to specify child",
    "start": "1268120",
    "end": "1273400"
  },
  {
    "text": "components and in case web components are not supported at all it will just drop back to those child components",
    "start": "1273400",
    "end": "1279520"
  },
  {
    "text": "because the browser will just treat the web component as a as a div as a div tag",
    "start": "1279520",
    "end": "1285250"
  },
  {
    "text": "so it's gonna ignore all of that but if it does support web components and it",
    "start": "1285250",
    "end": "1291010"
  },
  {
    "text": "does support the web share API then we will get an even better experience for the user because they can actually get",
    "start": "1291010",
    "end": "1297970"
  },
  {
    "text": "the native share dialog so if web components are great why why",
    "start": "1297970",
    "end": "1304210"
  },
  {
    "text": "and we've been talking about them so long why didn't they take off yet and there are multiple reasons first of all",
    "start": "1304210",
    "end": "1310510"
  },
  {
    "text": "browser support so it took a long time until the spec was sort of finalized and",
    "start": "1310510",
    "end": "1315580"
  },
  {
    "text": "then the browser started implementing it but it took a very long time like the v-0 spec was around for a long time and",
    "start": "1315580",
    "end": "1322870"
  },
  {
    "text": "now we finally have a V once Baghdatis be implemented by more browsers than just chrome and then the other thing is it's",
    "start": "1322870",
    "end": "1330280"
  },
  {
    "text": "a very low level API similar to WebGL those were API that typically you",
    "start": "1330280",
    "end": "1335680"
  },
  {
    "text": "wouldn't want to write have the code manually for because like I showed you",
    "start": "1335680",
    "end": "1342700"
  },
  {
    "text": "the example of how to keep attributes and properties and sync and that's just for one imagine you have to write this",
    "start": "1342700",
    "end": "1348310"
  },
  {
    "text": "for every other property of your web component but the reason why we have a low-level API has to do with something",
    "start": "1348310",
    "end": "1354310"
  },
  {
    "text": "called the extensible web manifesto and that's a manifesto that is was created",
    "start": "1354310",
    "end": "1359470"
  },
  {
    "text": "by the all the browser vendors to kind of agree on how they spec new features for the browser and there are two",
    "start": "1359470",
    "end": "1366820"
  },
  {
    "text": "particular things in there that explain why we work with low-level API so these days the first thing is that they agree",
    "start": "1366820",
    "end": "1372910"
  },
  {
    "text": "on that they should focus on adding new late low-level capabilities so that they",
    "start": "1372910",
    "end": "1378130"
  },
  {
    "text": "can create secure and efficient api's because if they would focus on backing a",
    "start": "1378130",
    "end": "1383410"
  },
  {
    "text": "date picker and then ship that date picker everyone would just complain about like that's not the date picker we want it to have you know like if you",
    "start": "1383410",
    "end": "1389740"
  },
  {
    "text": "like a good examples of select box how many of you try to style the actual build and select box it's not that easy",
    "start": "1389740",
    "end": "1395950"
  },
  {
    "text": "it's not what we wanted so instead we end up writing our own anyways and then",
    "start": "1395950",
    "end": "1401350"
  },
  {
    "text": "these low-level low-level capability should explain an existing feature such",
    "start": "1401350",
    "end": "1406750"
  },
  {
    "text": "as HTML or CSS and they should allow the authors to understand and replicate them",
    "start": "1406750",
    "end": "1412650"
  },
  {
    "text": "and that's exactly what we see with specs like WebGL which basically it was like the accessing access to the",
    "start": "1412650",
    "end": "1419560"
  },
  {
    "text": "renderer or things like the the web components API is which literally just explain how every custom how every",
    "start": "1419560",
    "end": "1426550"
  },
  {
    "text": "native element is built like it's the same way as how input tags how video",
    "start": "1426550",
    "end": "1431710"
  },
  {
    "text": "tags are built is how web components are being built if you want to learn more about that and why II like the specs of",
    "start": "1431710",
    "end": "1438190"
  },
  {
    "text": "the web components took so long that's an entire talk by Monica that is really great it's called how the web sausage",
    "start": "1438190",
    "end": "1443950"
  },
  {
    "text": "gets made so I highly recommend you check that one out because I don't have time to cover all of that and she did a",
    "start": "1443950",
    "end": "1449470"
  },
  {
    "text": "way better job that so if it's a low-level API we want",
    "start": "1449470",
    "end": "1454840"
  },
  {
    "text": "to have great tooling because there's a reason why we write tools around things like WebGL so there should be great",
    "start": "1454840",
    "end": "1461950"
  },
  {
    "text": "tools around web components as well and in the past this your options look pretty much like this you wrote native",
    "start": "1461950",
    "end": "1468759"
  },
  {
    "text": "web components or you use polymer and that was pretty much it a polymer was the only thing really",
    "start": "1468759",
    "end": "1475509"
  },
  {
    "text": "driving for the adoption of web components but the landscape these days looks completely different so those are",
    "start": "1475509",
    "end": "1480820"
  },
  {
    "text": "just a few options and only some of the options that actually have logos so this",
    "start": "1480820",
    "end": "1486549"
  },
  {
    "text": "is you can pick between things like web components and polymer still polymer is now in version 3 and drastically changed",
    "start": "1486549",
    "end": "1492729"
  },
  {
    "text": "from what they look like in version 1 and 2 and there their goal is to be",
    "start": "1492729",
    "end": "1498759"
  },
  {
    "text": "redundant at one point they just want to drive the adoption of web components so don't get confused something there they",
    "start": "1498759",
    "end": "1505059"
  },
  {
    "text": "just really want you to drive for getting like building all your apps on",
    "start": "1505059",
    "end": "1510099"
  },
  {
    "text": "polymer they just really want you to build web components but you can also use things like glimmer which is the",
    "start": "1510099",
    "end": "1516249"
  },
  {
    "text": "rendering engine inside Ember so that's the logo on the top right you can use",
    "start": "1516249",
    "end": "1522639"
  },
  {
    "text": "something like skate which is the bottom left one it supports different rendering engines from pre-act to hyper HTML etc",
    "start": "1522639",
    "end": "1530309"
  },
  {
    "text": "you can take your since the latest version of angular you can start experimenting with taking an angular",
    "start": "1530309",
    "end": "1537340"
  },
  {
    "text": "module and then turning that into a web component so you can take multiple of your angular components stack them",
    "start": "1537340",
    "end": "1543489"
  },
  {
    "text": "together and then expose that as a custom element view does the same thing",
    "start": "1543489",
    "end": "1548710"
  },
  {
    "text": "there projects for react pre-act and stuff looking into this there's also the new kit around the block called stencil",
    "start": "1548710",
    "end": "1554950"
  },
  {
    "text": "which kind of made a lot of fuzz it's built by the ionic team and there's a",
    "start": "1554950",
    "end": "1561909"
  },
  {
    "text": "bunch of these things and the the goal here really is to allow you to pick your",
    "start": "1561909",
    "end": "1567220"
  },
  {
    "text": "favorite way of writing these things and then sharing them with others so that they can pick their favorite tools this",
    "start": "1567220",
    "end": "1573700"
  },
  {
    "text": "is not meant to replace angular and react and view and stuff like that they all have their use cases and they're",
    "start": "1573700",
    "end": "1580539"
  },
  {
    "text": "made for you to build complex applications but they're not really designed to share UI concepts with",
    "start": "1580539",
    "end": "1586840"
  },
  {
    "text": "others and that's really where web components come into play and with that",
    "start": "1586840",
    "end": "1593049"
  },
  {
    "text": "let's stop talking theory and actually start building the last date picker here",
    "start": "1593049",
    "end": "1598090"
  },
  {
    "text": "on stage to write a bit of history or if I look at my time we might actually not have enough time for that so instead",
    "start": "1598090",
    "end": "1604600"
  },
  {
    "text": "let's build a rating component because I feel confident enough to do that right",
    "start": "1604600",
    "end": "1610539"
  },
  {
    "text": "now and before we start I need to give you a bit of background if you if you've",
    "start": "1610539",
    "end": "1616509"
  },
  {
    "text": "seen my Twitter profile you might have seen this picture so I'm part of a group called one zjs we're just a bunch of",
    "start": "1616509",
    "end": "1621909"
  },
  {
    "text": "JavaScript developers who love the community and also love wearing onesies at events I didn't bring mine this time",
    "start": "1621909",
    "end": "1628299"
  },
  {
    "text": "but I'm typically wearing a panda onesie so I figured I want to get your feedback",
    "start": "1628299",
    "end": "1633340"
  },
  {
    "text": "about the talk later so we're gonna build a rating component that you can rage how many pandas were worth was this",
    "start": "1633340",
    "end": "1639340"
  },
  {
    "text": "talk and or pretty much any emoji so we're gonna call it emoji rating and in",
    "start": "1639340",
    "end": "1646419"
  },
  {
    "text": "order to build this we're gonna use a tool called lit element so little element is still pretty new around the",
    "start": "1646419",
    "end": "1652600"
  },
  {
    "text": "blog and is still in active development but it's written by the polymer team and",
    "start": "1652600",
    "end": "1658029"
  },
  {
    "text": "it's just a simple base class for for creating custom elements that is powered",
    "start": "1658029",
    "end": "1663519"
  },
  {
    "text": "by ledee HTML and I'm gonna talk about that in a second but it's one of these",
    "start": "1663519",
    "end": "1669580"
  },
  {
    "text": "things that the polymer team is working on to make the adoption of web components easier without actually having to dive into polymer it uses web",
    "start": "1669580",
    "end": "1678429"
  },
  {
    "text": "standards which means we don't have to compile anything we will use module bundling but that's simply because we're",
    "start": "1678429",
    "end": "1685090"
  },
  {
    "text": "using we're using base where you say I",
    "start": "1685090",
    "end": "1691509"
  },
  {
    "text": "forgot how they're called but the normal module syntax that you used to use to from note and things like that instead",
    "start": "1691509",
    "end": "1698230"
  },
  {
    "text": "of actually specifying fall paths if you're not familiar with lid HTML it's",
    "start": "1698230",
    "end": "1703659"
  },
  {
    "text": "powered by tag templates so string templates from JavaScript and it's",
    "start": "1703659",
    "end": "1709840"
  },
  {
    "text": "powered using HTML templates so that means it's very efficient in re rendering and creating multiple",
    "start": "1709840",
    "end": "1716409"
  },
  {
    "text": "instances if you want to check it out that's the github repository and again I'm sharing the slides later so you can",
    "start": "1716409",
    "end": "1722350"
  },
  {
    "text": "check out all of these things but that's actually start building this thing instead all right by the way just load",
    "start": "1722350",
    "end": "1732430"
  },
  {
    "text": "it again but reset the code um so let's ignore this ah cool so that's the wrong",
    "start": "1732430",
    "end": "1740230"
  },
  {
    "text": "project nope it's also not the one this is the one so I already have some code",
    "start": "1740230",
    "end": "1748240"
  },
  {
    "text": "but it's it's very much boilerplate code so what I what I installed is I I",
    "start": "1748240",
    "end": "1755880"
  },
  {
    "text": "created a basic HTML here and what I'm loading in here is the web components",
    "start": "1755880",
    "end": "1761620"
  },
  {
    "text": "jeaious bundle which is just all the polyfills that we might need and then a",
    "start": "1761620",
    "end": "1766810"
  },
  {
    "text": "side of that I don't have anything in here yet and I'm using partial to kind of to bundle this during development so",
    "start": "1766810",
    "end": "1774940"
  },
  {
    "text": "we can easily test this so if I run NPM start here it's gonna kick off parcel as",
    "start": "1774940",
    "end": "1780940"
  },
  {
    "text": "you can see here and start a development server so we can click on this I'll",
    "start": "1780940",
    "end": "1788110"
  },
  {
    "text": "click there we go and there's nothing on there yet because we didn't create anything so if you develop with parcel",
    "start": "1788110",
    "end": "1796000"
  },
  {
    "text": "before or if you've watched Stefan's talk yesterday you will know that you",
    "start": "1796000",
    "end": "1803710"
  },
  {
    "text": "can simply load any script here and it's going to start the bundling for this so that's what we're gonna do and if we",
    "start": "1803710",
    "end": "1811210"
  },
  {
    "text": "look into emoji rating it's been completely empty files so let's start with actually creating a class so we're",
    "start": "1811210",
    "end": "1817510"
  },
  {
    "text": "gonna create one called emoji rating and we need to extend this from something",
    "start": "1817510",
    "end": "1823750"
  },
  {
    "text": "since I said we're not using HTML element directly but we're using lit HTML I'm gonna import this from the",
    "start": "1823750",
    "end": "1831970"
  },
  {
    "text": "polymer lit element module that I already installed because I didn't want to rely on the internet for this and",
    "start": "1831970",
    "end": "1839400"
  },
  {
    "text": "then we simply extend this from that and the lead element expo has a sort of",
    "start": "1839400",
    "end": "1845290"
  },
  {
    "text": "interface you want to implement and one of these is the underscore render",
    "start": "1845290",
    "end": "1850720"
  },
  {
    "text": "function so anything that's with underscore in an inlet element will",
    "start": "1850720",
    "end": "1856240"
  },
  {
    "text": "be internal kind of functions and everything that you add as without an",
    "start": "1856240",
    "end": "1862360"
  },
  {
    "text": "underscore will actually turn into a method on the custom element later and in here we're gonna return lit HTML",
    "start": "1862360",
    "end": "1870510"
  },
  {
    "text": "templates so the way that works is we just write HTML here I'm gonna import",
    "start": "1870510",
    "end": "1876279"
  },
  {
    "text": "that from the tellement and then in here we just write HTML and I actually have a",
    "start": "1876279",
    "end": "1881399"
  },
  {
    "text": "visual studio code extension installed so I get full autocomplete here and",
    "start": "1881399",
    "end": "1886480"
  },
  {
    "text": "everything so you don't have to worry about that but the difference compared to JSX is that there's nothing here that needs",
    "start": "1886480",
    "end": "1893590"
  },
  {
    "text": "to be converted later this would just run if I would specify here instead the path to the actual bundle I wouldn't",
    "start": "1893590",
    "end": "1900669"
  },
  {
    "text": "even have to bundle this it would just run because it's using web technology so",
    "start": "1900669",
    "end": "1906429"
  },
  {
    "text": "I said we're creating a rating so we're gonna create a roll range here let's add",
    "start": "1906429",
    "end": "1912130"
  },
  {
    "text": "a class called rating and for now let's just write something like hello here to",
    "start": "1912130",
    "end": "1918580"
  },
  {
    "text": "see if it works and then we go back into the index.html and we can start using this so emoji rating safe this switch",
    "start": "1918580",
    "end": "1927370"
  },
  {
    "text": "back and oh so I created the class but",
    "start": "1927370",
    "end": "1932500"
  },
  {
    "text": "obviously I didn't tell like you tell the browser about this so we want to do custom elements that define specify that",
    "start": "1932500",
    "end": "1939370"
  },
  {
    "text": "it's called emoji rating and then pass in which class should be instantiated",
    "start": "1939370",
    "end": "1944710"
  },
  {
    "text": "and now we have two hello here so far so good now we want to have some properties",
    "start": "1944710",
    "end": "1952120"
  },
  {
    "text": "so we can customize this and the nice thing about little iment and one reason",
    "start": "1952120",
    "end": "1957429"
  },
  {
    "text": "why i like using it is because that element does the connection between attributes and and properties for you",
    "start": "1957429",
    "end": "1965409"
  },
  {
    "text": "automatically and all you have to do is define a setter called a getter called properties and return an object here",
    "start": "1965409",
    "end": "1972850"
  },
  {
    "text": "that specifies which values of available in what type they are so we want to have a min value a max value want to have a",
    "start": "1972850",
    "end": "1980760"
  },
  {
    "text": "value and then an emoji would be nice so we can modify which emoji it is so that's",
    "start": "1980760",
    "end": "1988190"
  },
  {
    "text": "of type string and we want to have some",
    "start": "1988190",
    "end": "1994039"
  },
  {
    "text": "default values and that's what we do in the constructor so we create a constructor here need to call su persons",
    "start": "1994039",
    "end": "2000609"
  },
  {
    "text": "we're inheriting and then all I do here is really set this to men there's max",
    "start": "2000609",
    "end": "2007210"
  },
  {
    "text": "choose five value to zero and because we're gonna use pandas by default it's",
    "start": "2007210",
    "end": "2014470"
  },
  {
    "text": "panda here and now we have all of these available in the render or we could just",
    "start": "2014470",
    "end": "2019629"
  },
  {
    "text": "call this dot on them but the render method is also nice enough to pass all",
    "start": "2019629",
    "end": "2024879"
  },
  {
    "text": "of these in here so we can just grab them and for now what we get just gonna",
    "start": "2024879",
    "end": "2030220"
  },
  {
    "text": "do here is put in the emoji here so we're just using string interpolation",
    "start": "2030220",
    "end": "2035379"
  },
  {
    "text": "like any other string template would do in JavaScript and now we have the Panda",
    "start": "2035379",
    "end": "2043269"
  },
  {
    "text": "emoji here so if we go back actually change that here so if we open the dev",
    "start": "2043269",
    "end": "2048608"
  },
  {
    "text": "tools and we click on this this is how",
    "start": "2048609",
    "end": "2054040"
  },
  {
    "text": "it looks like right now so we see here the shadow root because we're using the shadow DOM and then in here is the HTML",
    "start": "2054040",
    "end": "2059408"
  },
  {
    "text": "we wrote and we see the Panda here if I select this and I open the console down here we have access to that so let's",
    "start": "2059409",
    "end": "2066460"
  },
  {
    "text": "store that as dollar zero and then we can set the emoji for example two hard",
    "start": "2066460",
    "end": "2073358"
  },
  {
    "text": "toys for example and that updates automatically you can see it doesn't",
    "start": "2073359",
    "end": "2079270"
  },
  {
    "text": "actually set it as an attribute because right now it's only doing the reflection",
    "start": "2079270",
    "end": "2084490"
  },
  {
    "text": "in one way because that's typically what you wanted to anyways but you can kind",
    "start": "2084490",
    "end": "2089648"
  },
  {
    "text": "of enable that as well if you want to cool so we have that let's actually",
    "start": "2089649",
    "end": "2096250"
  },
  {
    "text": "built this as a rating tool so one thing we need is we need a list of emojis and",
    "start": "2096250",
    "end": "2104490"
  },
  {
    "text": "I'm just going to do a small trick here so this way we just get a the exact",
    "start": "2104760",
    "end": "2112869"
  },
  {
    "text": "number of emojis that we want and then I'm using since we're using lit HTML it has a",
    "start": "2112869",
    "end": "2119830"
  },
  {
    "text": "couple of helper library helper tools that we can use one of them is called repeat which is just really good and officially re-rendering a list and we",
    "start": "2119830",
    "end": "2128680"
  },
  {
    "text": "can pull that in from the lead HTML module it's actually in its own path so",
    "start": "2128680",
    "end": "2135870"
  },
  {
    "text": "that you're like they really want to make sure it's a like small memory footprint so you need to manually pull",
    "start": "2135870",
    "end": "2142330"
  },
  {
    "text": "these things in and then we're gonna repeat here over the emoji list and",
    "start": "2142330",
    "end": "2149070"
  },
  {
    "text": "we're gonna have to declare a function here that works similar to if you",
    "start": "2149070",
    "end": "2155950"
  },
  {
    "text": "develop with react the keys for example since ours is anyway it's just a list that doesn't have like any good property",
    "start": "2155950",
    "end": "2162910"
  },
  {
    "text": "that we can figure out on which values changed just gonna listen on the index and then I'm gonna pass in a function",
    "start": "2162910",
    "end": "2168790"
  },
  {
    "text": "here to render emoji I'm gonna bind to this and then we need to define this so",
    "start": "2168790",
    "end": "2177690"
  },
  {
    "text": "call render emoji I'm just gonna get an emoji and an index and then in here we",
    "start": "2177690",
    "end": "2186310"
  },
  {
    "text": "can return again some HTML template here we're gonna call it emoji put an emoji",
    "start": "2186310",
    "end": "2194890"
  },
  {
    "text": "in here save this and now we should have",
    "start": "2194890",
    "end": "2205049"
  },
  {
    "text": "what did I break see to open this",
    "start": "2206650",
    "end": "2213630"
  },
  {
    "text": "nothing here oh yeah you should repeat max and not value because will you zero",
    "start": "2213630",
    "end": "2219970"
  },
  {
    "text": "there we go now we have five pandas but we want to obviously make this a proper",
    "start": "2219970",
    "end": "2225970"
  },
  {
    "text": "rating component so one thing we need is a style just like a CSS class active and",
    "start": "2225970",
    "end": "2233260"
  },
  {
    "text": "what we're doing here is if the index is less than the value then we're gonna do",
    "start": "2233260",
    "end": "2239110"
  },
  {
    "text": "the active otherwise we're just going to keep our class and we can just use here string interpolation again and we're",
    "start": "2239110",
    "end": "2246400"
  },
  {
    "text": "just going to write active and we're also going to keep the index property",
    "start": "2246400",
    "end": "2253450"
  },
  {
    "text": "here for later and if we refresh this we",
    "start": "2253450",
    "end": "2262660"
  },
  {
    "text": "see that right now they all have only emoji because none of them is active but",
    "start": "2262660",
    "end": "2269890"
  },
  {
    "text": "let's actually start having some style here so I'm not gonna write that and CSS",
    "start": "2269890",
    "end": "2280270"
  },
  {
    "text": "right now format this and this looks",
    "start": "2280270",
    "end": "2285850"
  },
  {
    "text": "already way more like a rating component if we select this and we now do something like value for exam we can set",
    "start": "2285850",
    "end": "2292090"
  },
  {
    "text": "it to four and we see we have four for pandas but you don't want to ask your users to open the dev tools and play",
    "start": "2292090",
    "end": "2298840"
  },
  {
    "text": "around with this to want to listen on click events and the way we do that is",
    "start": "2298840",
    "end": "2304440"
  },
  {
    "text": "by and this is again similar to things like react and stuff we can just listen",
    "start": "2304440",
    "end": "2310480"
  },
  {
    "text": "on the on click and then we do a template here and in here we just write",
    "start": "2310480",
    "end": "2316510"
  },
  {
    "text": "like this and click we're gonna bind it again and then we need to implement it",
    "start": "2316510",
    "end": "2324870"
  },
  {
    "text": "and we're going to get an event here and our new value is going to be parsing the",
    "start": "2324870",
    "end": "2333280"
  },
  {
    "text": "event or target data set index which is exactly the value we're setting here and",
    "start": "2333280",
    "end": "2339030"
  },
  {
    "text": "then we're just going to to it and one thing I just want to do for simplicity so you can also give me",
    "start": "2339030",
    "end": "2345760"
  },
  {
    "text": "zero Pender's if you want to I would be sad about that but I want to give you",
    "start": "2345760",
    "end": "2351579"
  },
  {
    "text": "the option if it's the same value I'm just gonna set value to zero and otherwise I'm gonna set the value to",
    "start": "2351579",
    "end": "2358569"
  },
  {
    "text": "value save this refresh and now we can start clicking here and all of that",
    "start": "2358569",
    "end": "2364390"
  },
  {
    "text": "works the thing though is that you also want it like in a normal input element",
    "start": "2364390",
    "end": "2371920"
  },
  {
    "text": "you would be able to listen on something like one change so ideally we should be",
    "start": "2371920",
    "end": "2377559"
  },
  {
    "text": "able to go here create a script tag and say hey I want to grab the emoji rating",
    "start": "2377559",
    "end": "2388780"
  },
  {
    "text": "and then I want to add an event listener for change and what I want to do here is",
    "start": "2388780",
    "end": "2394210"
  },
  {
    "text": "I'm grabbing the event and in console logging event or target value so this",
    "start": "2394210",
    "end": "2400210"
  },
  {
    "text": "will work with an input element so why shouldn't work with our rating component so how do we implement that all we have",
    "start": "2400210",
    "end": "2409180"
  },
  {
    "text": "to do is I'm gonna turn this into an async function because I want to wait until the component has been rear-ended",
    "start": "2409180",
    "end": "2416049"
  },
  {
    "text": "and lit element actually gives you render complete promise that always",
    "start": "2416049",
    "end": "2421240"
  },
  {
    "text": "resumes when the rendering has full is always fulfilled when the rendering has",
    "start": "2421240",
    "end": "2426309"
  },
  {
    "text": "been finished and then afterwards I'm gonna dispatch an event I'm gonna just",
    "start": "2426309",
    "end": "2432220"
  },
  {
    "text": "use a built in custom event called change and then I need to specify some",
    "start": "2432220",
    "end": "2437680"
  },
  {
    "text": "detail and that's just gonna be our value and I always put a semicolon there",
    "start": "2437680",
    "end": "2443710"
  },
  {
    "text": "for whatever reason we refresh this and now we see it's actually console logging",
    "start": "2443710",
    "end": "2448869"
  },
  {
    "text": "the values that we specify whenever we click here and the nice thing here now",
    "start": "2448869",
    "end": "2457390"
  },
  {
    "text": "is with this component we can for example specify all the additional how",
    "start": "2457390",
    "end": "2463690"
  },
  {
    "text": "are your tags for example to make this properly accessible and then the people who use it never actually have to worry",
    "start": "2463690",
    "end": "2469839"
  },
  {
    "text": "about this like adding accessibility to it it just works out of the just like and first on one input element",
    "start": "2469839",
    "end": "2477740"
  },
  {
    "text": "would work out of the box what if I want to style this so I'm using in here the",
    "start": "2477740",
    "end": "2484990"
  },
  {
    "text": "CSS custom properties or you might know them as CSS variables and this allows me",
    "start": "2484990",
    "end": "2490610"
  },
  {
    "text": "to define a very clear set of things that I should I like an API almost that",
    "start": "2490610",
    "end": "2496460"
  },
  {
    "text": "I allow the user to modify like I don't want you to modify the entire alignment",
    "start": "2496460",
    "end": "2501500"
  },
  {
    "text": "and stuff like that I just want to be able to allow you to modify how this",
    "start": "2501500",
    "end": "2507130"
  },
  {
    "text": "background looks like so we could for something to give us a class called red",
    "start": "2507130",
    "end": "2512240"
  },
  {
    "text": "and then in here we can create a red and all we do is we set emoji rating",
    "start": "2512240",
    "end": "2518620"
  },
  {
    "text": "unselected color that's the name I gave it to rent we save this and now you can",
    "start": "2518620",
    "end": "2526790"
  },
  {
    "text": "see it's actually red for all the emojis that are unselected and therefore",
    "start": "2526790",
    "end": "2532970"
  },
  {
    "text": "therefore we can expose kind of like a direct thing and this is really nice for teams like a brand team that maybe maybe",
    "start": "2532970",
    "end": "2540080"
  },
  {
    "text": "you want to expose how big a botanist but you just want to do that via CSS and",
    "start": "2540080",
    "end": "2546410"
  },
  {
    "text": "instead of like specifying it in in the HTML or you want to just allow you to",
    "start": "2546410",
    "end": "2552230"
  },
  {
    "text": "like change the color but nothing else this will allow you to do that",
    "start": "2552230",
    "end": "2558490"
  },
  {
    "text": "cool so we have this I actually rolled this up and published it to NPM so we can use it later in an example but I",
    "start": "2558490",
    "end": "2566600"
  },
  {
    "text": "want to talk about something else that a lot of people always keep on asking questions what about stencil so if",
    "start": "2566600",
    "end": "2573950"
  },
  {
    "text": "you're not familiar with stands were never heard of it Stenson was written by the ionic team and the ionic team basically creates a",
    "start": "2573950",
    "end": "2582260"
  },
  {
    "text": "bunch of UI tools for building hybrid apps and they build stencil as a",
    "start": "2582260",
    "end": "2590360"
  },
  {
    "text": "compiler that generates web components so that means contrary to what I just showed you a little element they have",
    "start": "2590360",
    "end": "2596450"
  },
  {
    "text": "their own syntax they have their own bill tool that you need to run this through but then it will generate web",
    "start": "2596450",
    "end": "2601610"
  },
  {
    "text": "components and it's built by the ionic team to bring ionic to more than just the angular",
    "start": "2601610",
    "end": "2606920"
  },
  {
    "text": "because that was their initial vision and then they started building everything in angular and kind of got stuck in there and now they want to bet",
    "start": "2606920",
    "end": "2613520"
  },
  {
    "text": "on web components to allow you to build a hybrid app and to react to and still",
    "start": "2613520",
    "end": "2618530"
  },
  {
    "text": "use their tools for example and it's heavily inspired by things from",
    "start": "2618530",
    "end": "2624200"
  },
  {
    "text": "different frameworks you know they took some things from angular they like they took some things from react like JSX",
    "start": "2624200",
    "end": "2629630"
  },
  {
    "text": "that they liked and therefore it uses typescript it uses decorators it uses",
    "start": "2629630",
    "end": "2635329"
  },
  {
    "text": "JSX if you want to check it out go to stencil J's calm but I figured I'm also",
    "start": "2635329",
    "end": "2640430"
  },
  {
    "text": "just gonna give you a quick demo here so we're going back close these two so what",
    "start": "2640430",
    "end": "2651829"
  },
  {
    "text": "I did is I literally just followed the getting started instructions which is",
    "start": "2651829",
    "end": "2657020"
  },
  {
    "text": "get clone the following project and remove the thing and then let's close",
    "start": "2657020",
    "end": "2664069"
  },
  {
    "text": "the disc for derp and then this is how you how your structure looks like so you get a default component here get an",
    "start": "2664069",
    "end": "2670130"
  },
  {
    "text": "index and HTML we're gonna NPM start this to start the dev server it's gonna",
    "start": "2670130",
    "end": "2675950"
  },
  {
    "text": "do the first build and this is what we see and if we look at the index.html",
    "start": "2675950",
    "end": "2681230"
  },
  {
    "text": "from this this is this is the component we're using and the values and if we",
    "start": "2681230",
    "end": "2689359"
  },
  {
    "text": "inspect the component this is how a component in stencil would look like we",
    "start": "2689359",
    "end": "2696170"
  },
  {
    "text": "have decorators which are still being expect but they're heavily used by things like angular and stencil and",
    "start": "2696170",
    "end": "2702410"
  },
  {
    "text": "stuff so they likely gonna not change too much anymore and then down here we",
    "start": "2702410",
    "end": "2707809"
  },
  {
    "text": "have a render function so similar to what we did with lit lit element but here we're returning JSX so it's a",
    "start": "2707809",
    "end": "2716420"
  },
  {
    "text": "slightly different syntax so let's turn this actually into my alert box because",
    "start": "2716420",
    "end": "2721970"
  },
  {
    "text": "we were talking about alert boxes earlier we're gonna again do be a nice citizen here of the web and actually",
    "start": "2721970",
    "end": "2729170"
  },
  {
    "text": "specify the role of this and we're gonna create a title here you know have an",
    "start": "2729170",
    "end": "2737150"
  },
  {
    "text": "alert title we can give it a default value like alert and then pass it in here and then",
    "start": "2737150",
    "end": "2747769"
  },
  {
    "text": "I'm gonna use the because we're using the shadow Dom here we can use the slot attribute I'm gonna keep this and let's",
    "start": "2747769",
    "end": "2755900"
  },
  {
    "text": "add a paragraph before saying something like hey something went wrong and also",
    "start": "2755900",
    "end": "2762799"
  },
  {
    "text": "add a footer like let's solve this and",
    "start": "2762799",
    "end": "2768049"
  },
  {
    "text": "then you'll be able to kind of prove whenever you use this component you'll be able to provide the details in",
    "start": "2768049",
    "end": "2773809"
  },
  {
    "text": "between these two if we go back into the index.html we obviously need to change",
    "start": "2773809",
    "end": "2779660"
  },
  {
    "text": "this completely it's called my alert now and then in here we can now give",
    "start": "2779660",
    "end": "2785779"
  },
  {
    "text": "information so we could put a div tag in here and then inside we could put a paragraph and say or let's do this like",
    "start": "2785779",
    "end": "2792710"
  },
  {
    "text": "a detail and then we write like Hello here save this now we actually have this",
    "start": "2792710",
    "end": "2803150"
  },
  {
    "text": "details thing here and then in there we have the hello and so far so good but",
    "start": "2803150",
    "end": "2809890"
  },
  {
    "text": "how does this look like now if we inspect this we see the shadow root here",
    "start": "2809890",
    "end": "2815869"
  },
  {
    "text": "and we see the details thing that we used right underneath it but then if we open this entire thing we see the slot",
    "start": "2815869",
    "end": "2822829"
  },
  {
    "text": "and if we open the slot we see it actually refers back to this property",
    "start": "2822829",
    "end": "2827930"
  },
  {
    "text": "here so why why is the browser showing it this way why doesn't it just throw this in there that's the way the shadow",
    "start": "2827930",
    "end": "2834710"
  },
  {
    "text": "Dom works and the reason why this works that is that way is if we create now a",
    "start": "2834710",
    "end": "2841130"
  },
  {
    "text": "global style here and we say for example we want to use cursive font and we safe",
    "start": "2841130",
    "end": "2850549"
  },
  {
    "text": "this will see that the paragraph that we wrote in our own page suddenly has this",
    "start": "2850549",
    "end": "2857210"
  },
  {
    "text": "cursive fond but everything else stays the same it's not being touched and this works the other way around as well so if",
    "start": "2857210",
    "end": "2863299"
  },
  {
    "text": "we go into the my components CSS and we say here as like hey every paragraph should really be a fun weight of 800",
    "start": "2863299",
    "end": "2871260"
  },
  {
    "text": "it should be of color orange and we save this we see again the other thing is not",
    "start": "2871260",
    "end": "2878760"
  },
  {
    "text": "being touched either so we have a full encapsulation of the styles here and that's that's the really powerful part",
    "start": "2878760",
    "end": "2885390"
  },
  {
    "text": "of the shadow Dom meaning you can provide as a an author of a component you can provide like these are the",
    "start": "2885390",
    "end": "2891300"
  },
  {
    "text": "places that you can play around with everything else I'm controlling so you can have multiple slots and name them so",
    "start": "2891300",
    "end": "2897450"
  },
  {
    "text": "that people can get a better idea of like hey this is where I'm placing whatever and therefore we then therefore",
    "start": "2897450",
    "end": "2906990"
  },
  {
    "text": "not rely on like oh I have to put the things in the right order and things like that cool so we have that one thing",
    "start": "2906990",
    "end": "2915060"
  },
  {
    "text": "I wanted wanted to show you is similar to lead element there's a way to reflect",
    "start": "2915060",
    "end": "2922260"
  },
  {
    "text": "back the attributes so we can do here true and now what this will do is it",
    "start": "2922260",
    "end": "2928110"
  },
  {
    "text": "will not only reflect attributes to properties that will also do it the other way around so if we grab the",
    "start": "2928110",
    "end": "2935220"
  },
  {
    "text": "component here and then do alert title to like something",
    "start": "2935220",
    "end": "2940710"
  },
  {
    "text": "oh no we actually see that it's been updated here as well instead of just in the Dom cool that was the that was the",
    "start": "2940710",
    "end": "2950280"
  },
  {
    "text": "stencil demo now as a last thing I figure we should actually use a web",
    "start": "2950280",
    "end": "2955740"
  },
  {
    "text": "component and in order to use it I built this thing to vote on my talk later and",
    "start": "2955740",
    "end": "2964080"
  },
  {
    "text": "it's not fully done so this is the deployed version but it doesn't actually allow you to deploy it like vote",
    "start": "2964080",
    "end": "2969660"
  },
  {
    "text": "actually on my talk so we're going to change that so the project is written in angular it's just a default out of the",
    "start": "2969660",
    "end": "2978090"
  },
  {
    "text": "box ng CLI project so I didn't do any magic there I will show you two things that I",
    "start": "2978090",
    "end": "2984900"
  },
  {
    "text": "did did you so this is the project we're gonna start it off in the meantime so I",
    "start": "2984900",
    "end": "2990120"
  },
  {
    "text": "can start compiling two things I did on the one hand I went into the TS config",
    "start": "2990120",
    "end": "2995960"
  },
  {
    "text": "where is it and I changed the target to es2015 and the reason for that is that",
    "start": "2995960",
    "end": "3003260"
  },
  {
    "text": "types that web components require you to do es2015 class inheritance you can't you can't do",
    "start": "3003260",
    "end": "3010490"
  },
  {
    "text": "prototypal inheritance you have to do this because those are built in native",
    "start": "3010490",
    "end": "3015500"
  },
  {
    "text": "classes and not functions and therefore you have to do this there is an adapter",
    "start": "3015500",
    "end": "3020900"
  },
  {
    "text": "if you actually still rely on down transpiring to es5 there is a an adapter",
    "start": "3020900",
    "end": "3026030"
  },
  {
    "text": "that you can use but I wanted to show you the like proper way that ideally we can start doing this and then the other",
    "start": "3026030",
    "end": "3033829"
  },
  {
    "text": "thing that I did is in the index.html I'm including again the polyfill and I",
    "start": "3033829",
    "end": "3040160"
  },
  {
    "text": "npm installed my component that I used that I published which is the same code",
    "start": "3040160",
    "end": "3046339"
  },
  {
    "text": "like you can check it out on github if you don't believe me it's the same it's the same code so if",
    "start": "3046339",
    "end": "3052220"
  },
  {
    "text": "we go into app component module this is where we want to do the first changes so its first look if the app deployed so",
    "start": "3052220",
    "end": "3063170"
  },
  {
    "text": "here we go and open the dev tools and",
    "start": "3063170",
    "end": "3068180"
  },
  {
    "text": "enjoy dancing panda yeah so the first thing we need to do is we need to tell",
    "start": "3068180",
    "end": "3074150"
  },
  {
    "text": "angular hey there's custom elements around because angular will try to verify that every component you're using",
    "start": "3074150",
    "end": "3080119"
  },
  {
    "text": "is indeed a component that exists so for that they use custom they use schemas so",
    "start": "3080119",
    "end": "3086270"
  },
  {
    "text": "we can import the custom elements schema which comes with a core library of angular and then we just say hey",
    "start": "3086270",
    "end": "3092270"
  },
  {
    "text": "actually use this so from that point on angular is not gonna bother trying to verify that every component is an",
    "start": "3092270",
    "end": "3098450"
  },
  {
    "text": "angular component they might see like hey there's one I don't know so I believe that's a web component and then",
    "start": "3098450",
    "end": "3104000"
  },
  {
    "text": "the other thing we need to do in this file or we could do it at any point really but I'm gonna do it in this is I'm just going to import the emoji",
    "start": "3104000",
    "end": "3110750"
  },
  {
    "text": "rating and that's all we have to do here so now we can go into the app component HTML and we can load in our emoji rating",
    "start": "3110750",
    "end": "3121280"
  },
  {
    "text": "here save it and if there's refresh is we now have the component here all right",
    "start": "3121280",
    "end": "3127940"
  },
  {
    "text": "works and refreshes changes but if we look into the app component TS we",
    "start": "3127940",
    "end": "3134599"
  },
  {
    "text": "actually already have a current value property so we want to bind to that especially because I want to set the",
    "start": "3134599",
    "end": "3140239"
  },
  {
    "text": "default value to three here so you're hopefully more likely to upload my talk",
    "start": "3140239",
    "end": "3146049"
  },
  {
    "text": "so what we do is we do it like every other component in H in angular works we",
    "start": "3146049",
    "end": "3154910"
  },
  {
    "text": "just say hey find this value to the current value and this is how you do it in angular to do the same thing in view",
    "start": "3154910",
    "end": "3161719"
  },
  {
    "text": "for example and now we see that the Panda by default has three now if we",
    "start": "3161719",
    "end": "3166969"
  },
  {
    "text": "change it it's not reflecting actually down here so it's clearly not updating",
    "start": "3166969",
    "end": "3172339"
  },
  {
    "text": "for that we can listen on the change event and this is how you do it in angular and we're going to create a",
    "start": "3172339",
    "end": "3177890"
  },
  {
    "text": "handle change function that we're just gonna pass on the event - and that one",
    "start": "3177890",
    "end": "3184190"
  },
  {
    "text": "doesn't exist yet so we're gonna write it and in here we grab the event and",
    "start": "3184190",
    "end": "3193549"
  },
  {
    "text": "then again grab the value this on a event or target value similar how we did",
    "start": "3193549",
    "end": "3201859"
  },
  {
    "text": "it earlier with with a native kind of add event listener and then we set the",
    "start": "3201859",
    "end": "3207529"
  },
  {
    "text": "current value to value one thing we have to do here because some browsers based",
    "start": "3207529",
    "end": "3213890"
  },
  {
    "text": "on the polyfill the angular change detection is still breaking but that's",
    "start": "3213890",
    "end": "3219079"
  },
  {
    "text": "not a problem with web components that's a problem with a polyfill right now and there's an open github issue too for",
    "start": "3219079",
    "end": "3225349"
  },
  {
    "text": "that so that's hopefully going to change but in the meantime we actually need to manually trigger the change detection so",
    "start": "3225349",
    "end": "3231170"
  },
  {
    "text": "I'm going to import this here and then just say hey change detection detect",
    "start": "3231170",
    "end": "3238219"
  },
  {
    "text": "changes save this go back and now we see",
    "start": "3238219",
    "end": "3243829"
  },
  {
    "text": "if we reload this hmm oh thank you it's nothing like crowd",
    "start": "3243829",
    "end": "3256940"
  },
  {
    "text": "debugging so now we can see it actually have keeps it up to date down there as",
    "start": "3256940",
    "end": "3262040"
  },
  {
    "text": "well so let's go here remove these two checks save it",
    "start": "3262040",
    "end": "3270610"
  },
  {
    "text": "[Music] commit this someone else",
    "start": "3270610",
    "end": "3279819"
  },
  {
    "text": "just push this and cool so this is gonna",
    "start": "3283509",
    "end": "3291099"
  },
  {
    "text": "trigger off the deployment on net Levi's and hopefully we have that by the end of",
    "start": "3291099",
    "end": "3296269"
  },
  {
    "text": "the talk in the meantime let's wrap this up so I want you to think about web",
    "start": "3296269",
    "end": "3303529"
  },
  {
    "text": "components whenever you've realized you have to share UI with other with other teams with other projects sub projects",
    "start": "3303529",
    "end": "3310459"
  },
  {
    "text": "and stuff that's when you want to start like hey thinking about hey is it worth building this as a web component because",
    "start": "3310459",
    "end": "3317150"
  },
  {
    "text": "web components are not there to limit your framework choices they are not there to kill react or angular or",
    "start": "3317150",
    "end": "3322279"
  },
  {
    "text": "anything that's not the purpose of web components it's just solving this problem of actually sharing UI between",
    "start": "3322279",
    "end": "3328849"
  },
  {
    "text": "projects so we stopped writing redundant code and actually can focus on quality event quality things because ultimately",
    "start": "3328849",
    "end": "3336319"
  },
  {
    "text": "the goal is that you can pick your favorite tools and let others pick their favorite tools that's really the goal of",
    "start": "3336319",
    "end": "3342619"
  },
  {
    "text": "web components and hopefully to write over one date picker to rule them all so",
    "start": "3342619",
    "end": "3347839"
  },
  {
    "text": "we can stop writing these at least have one material design one or one with",
    "start": "3347839",
    "end": "3354019"
  },
  {
    "text": "another design philosophy and ideally one that we can just style ourselves but instead of having a thousand over a",
    "start": "3354019",
    "end": "3361459"
  },
  {
    "text": "thousand date Pickers if you want to learn more about web components and see some examples web",
    "start": "3361459",
    "end": "3366499"
  },
  {
    "text": "components on Orcas grade most of those actually still use HTML imports but it's",
    "start": "3366499",
    "end": "3372619"
  },
  {
    "text": "still a good view of like looking at a couple of existing web components custom",
    "start": "3372619",
    "end": "3378049"
  },
  {
    "text": "elements that everywhere is a great website if you know curious of using web components but you're not sure how the",
    "start": "3378049",
    "end": "3383809"
  },
  {
    "text": "support in your in your framework of choice is because angular and view actually have perfect support however",
    "start": "3383809",
    "end": "3390380"
  },
  {
    "text": "things that react pre-act still have a couple of issues depending on what you're trying to do with your web components but the nice thing is this",
    "start": "3390380",
    "end": "3396769"
  },
  {
    "text": "runs against a bunch of different popular frameworks it runs tests against them and it also keeps track of all the",
    "start": "3396769",
    "end": "3403309"
  },
  {
    "text": "related issues so if you if you see something doesn't work with it there's likely to get up it should already",
    "start": "3403309",
    "end": "3408349"
  },
  {
    "text": "existing you can check what's the status there and have Kievan keep up to date with that if you want to compare",
    "start": "3408349",
    "end": "3414140"
  },
  {
    "text": "different implementations of web components there's a web component to do that has",
    "start": "3414140",
    "end": "3420259"
  },
  {
    "text": "versions for sketches for stencil for view for angular elements on a bunch of",
    "start": "3420259",
    "end": "3426749"
  },
  {
    "text": "other things polymer so you can look at like how the code changes which one",
    "start": "3426749",
    "end": "3431819"
  },
  {
    "text": "seems like the nicest philosophy for you so there's a bunch of resources I'm",
    "start": "3431819",
    "end": "3437670"
  },
  {
    "text": "gonna I wrote a blog post how you can get started and even publish to get an urge NPM a web component with stencil",
    "start": "3437670",
    "end": "3444589"
  },
  {
    "text": "the slides gonna be on this URL and I'm gonna tweet out all the URLs after this talk the emoji rating code is here web",
    "start": "3444589",
    "end": "3453479"
  },
  {
    "text": "component org is our great resource and custom elements everywhere and there's the URL for web components and now let's",
    "start": "3453479",
    "end": "3460710"
  },
  {
    "text": "hope this actually deployed its refresh",
    "start": "3460710",
    "end": "3467150"
  },
  {
    "text": "yay so cool so yeah you can go to go to",
    "start": "3470989",
    "end": "3476489"
  },
  {
    "text": "this URL and vote for it there or you can just throw in a Greens green piece",
    "start": "3476489",
    "end": "3482400"
  },
  {
    "text": "of paper and with that I would like to thank you all for your attention if you have any questions I'll be down at the",
    "start": "3482400",
    "end": "3488069"
  },
  {
    "text": "between booth most of the time so just come by there have some ask me some questions or ping me on Twitter my DMS",
    "start": "3488069",
    "end": "3494009"
  },
  {
    "text": "are open or shoot me an email whatever you prefer and I'm happy to help you out and answer your questions thank you all",
    "start": "3494009",
    "end": "3502039"
  },
  {
    "text": "[Applause]",
    "start": "3502160",
    "end": "3505520"
  }
]