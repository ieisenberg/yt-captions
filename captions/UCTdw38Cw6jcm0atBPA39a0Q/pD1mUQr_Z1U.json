[
  {
    "text": "uh welcome everybody uh my name is Scott and today I'm going to be talking to you about test driven development with C",
    "start": "5359",
    "end": "11960"
  },
  {
    "text": "going from Padawan to Jedi so before we get started on this",
    "start": "11960",
    "end": "17400"
  },
  {
    "text": "talk I just kind of want to level set real quick on who the audience I had in mind when I made this talk because",
    "start": "17400",
    "end": "23119"
  },
  {
    "text": "there's lots of other talks you could attend so I just want to make sure that you're in the right spot so really it's any of these people uh on this list here",
    "start": "23119",
    "end": "30519"
  },
  {
    "text": "uh really I'm targeting net developers uh so if you haven't uh used C before um",
    "start": "30519",
    "end": "36719"
  },
  {
    "text": "this talk may or may not be for you although a lot of the patterns that I'm going to talk about apply no matter what",
    "start": "36719",
    "end": "42640"
  },
  {
    "text": "uh language that you're using but I find a lot of people don't even know kind of where to get started with tdd so that's",
    "start": "42640",
    "end": "48640"
  },
  {
    "text": "kind of the Genesis of this talk so we'll kind of assume that you haven't really seen tdd before um but hopefully",
    "start": "48640",
    "end": "53800"
  },
  {
    "text": "even if you're a season TD uh you might pick up a couple things as well um and",
    "start": "53800",
    "end": "59160"
  },
  {
    "text": "I'm not really going to go into like some Basics about how testing Works um but uh so if you haven't seen that",
    "start": "59160",
    "end": "64559"
  },
  {
    "text": "before um hopefully it's not too crazy um and you'll be able to pick up things along the way so we're going to talk",
    "start": "64559",
    "end": "71520"
  },
  {
    "text": "about all these different things here we're going to talk about what different tests uh types of tests are there because there's trade-offs depending on",
    "start": "71520",
    "end": "77439"
  },
  {
    "text": "what kind of test you write we're going to talk about what is tdd why you should care about it exactly why you should be",
    "start": "77439",
    "end": "82880"
  },
  {
    "text": "doing it and then uh we'll also talk about like what should you test because that's a pretty common uh question",
    "start": "82880",
    "end": "89920"
  },
  {
    "text": "people ask me is like hey what should I be testing uh in my application and I'll do a live coding demo with this Podium",
    "start": "89920",
    "end": "97240"
  },
  {
    "text": "at like a 45 degree angle so we'll see how that works out uh while I do some live coding as well but my goal out of",
    "start": "97240",
    "end": "104079"
  },
  {
    "text": "this talk um I've got really a couple goals here is really learn just kind of best practices on how to write tests",
    "start": "104079",
    "end": "111159"
  },
  {
    "text": "which I really hate the term best practices because it assumes that there's only one right way but really",
    "start": "111159",
    "end": "116640"
  },
  {
    "text": "these are that's just kind of a synonym for hey these are my opinions as of this moment um but I might change them here",
    "start": "116640",
    "end": "122680"
  },
  {
    "text": "in the future and then hopefully you can learn how to kind of get started writing uh test or doing test D and development",
    "start": "122680",
    "end": "128720"
  },
  {
    "text": "with C specifically so who am I uh I'm the",
    "start": "128720",
    "end": "134000"
  },
  {
    "text": "director of engineering at a company called lean techniques uh we're a software consulting company based in De",
    "start": "134000",
    "end": "139640"
  },
  {
    "text": "Moine Iowa which is kind of in the center of the US uh but we work with companies from Fortune 50 companies down",
    "start": "139640",
    "end": "145599"
  },
  {
    "text": "to startups and kind of everything in between both helping uh them write better software where we'll actually put",
    "start": "145599",
    "end": "151319"
  },
  {
    "text": "people on teams to kind of teach them how to write better software as well as just building uh software uh as well the",
    "start": "151319",
    "end": "158400"
  },
  {
    "text": "co-organizer of the i.n group Microsoft MVP friend of regate and I blog as well",
    "start": "158400",
    "end": "164200"
  },
  {
    "text": "um I have already posted these slides up on my blog uh it's just my first and last name Scot sober.com uh and if you",
    "start": "164200",
    "end": "170239"
  },
  {
    "text": "want to follow me on Twitter I'm just Scott saber there as well and I refuse to call it X so I'm just going to call",
    "start": "170239",
    "end": "175640"
  },
  {
    "text": "it Twitter all right so let's just kind of jump into it but before we kind of level",
    "start": "175640",
    "end": "181560"
  },
  {
    "text": "set on tdd I just want to level set on different types of tests as well so why do we write tests well",
    "start": "181560",
    "end": "191360"
  },
  {
    "text": "probably the primary primary reason is we want confidence that our act application actually works because how",
    "start": "191360",
    "end": "197560"
  },
  {
    "text": "many people have ever made a change over here in this part of the system and it broke something completely on another",
    "start": "197560",
    "end": "202760"
  },
  {
    "text": "side of the system anybody okay about half the room and the other half of you are absolute Liars because you totally",
    "start": "202760",
    "end": "209400"
  },
  {
    "text": "have done that uh the other reason why we write tests is we want to minimize manual work",
    "start": "209400",
    "end": "215959"
  },
  {
    "text": "so we don't want to have to go around and say like oh I'm going to go click all these different buttons and make sure that you know I didn't break the",
    "start": "215959",
    "end": "221680"
  },
  {
    "text": "thing you know I didn't break our uh primary revenue generator all that kind of stuff and we don't have like a bunch",
    "start": "221680",
    "end": "227439"
  },
  {
    "text": "of QA behind the scenes manually testing things um that we could just write automated tests for um so then the QA",
    "start": "227439",
    "end": "233799"
  },
  {
    "text": "can actually do some more interesting work and if you're interested in talking to me about that later uh just let me",
    "start": "233799",
    "end": "239200"
  },
  {
    "text": "know uh and we can talk about what I think about qas I do think that they are still useful for the",
    "start": "239200",
    "end": "244799"
  },
  {
    "text": "record um the other reason is we want to document the behavior through our tests so a lot of times uh sometimes code can",
    "start": "244799",
    "end": "254319"
  },
  {
    "text": "uh I guess hide what the actual Behavior what the intent of the system is so by writing tests we can actually document",
    "start": "254319",
    "end": "260440"
  },
  {
    "text": "like hey this is what the application should actually do and so then you don't have to worry about like hey uh you know",
    "start": "260440",
    "end": "266919"
  },
  {
    "text": "what what does the application do like I got to go read the code oh all this stuff is in store procedures which is terrible to read um if you can actually",
    "start": "266919",
    "end": "274000"
  },
  {
    "text": "have the test they can actually read uh to you what the behavior should be in a really easy to read",
    "start": "274000",
    "end": "280880"
  },
  {
    "text": "format all right so now that we've talked about like why do we write tests uh let's talk about what different kinds",
    "start": "280880",
    "end": "286479"
  },
  {
    "text": "of tests are out there uh so the first one is unit testing so we'll talk about that in a little bit because that's an",
    "start": "286479",
    "end": "292639"
  },
  {
    "text": "interesting topic uh we'll talk about integration tests that's also kind of an interesting one because that can mean a",
    "start": "292639",
    "end": "298360"
  },
  {
    "text": "lot of different things to a lot of different people people and we'll talk about end to end tests as well um there",
    "start": "298360",
    "end": "303960"
  },
  {
    "text": "are different types of tests out there like acceptance test smoke test load test stress tests like all sorts of",
    "start": "303960",
    "end": "309400"
  },
  {
    "text": "different types of tests but we're going to focus on these three primarily uh here in the",
    "start": "309400",
    "end": "314960"
  },
  {
    "text": "stock uh so the first one we're going to talk about is a unit test and this can mean a lot of different things to a lot",
    "start": "314960",
    "end": "320160"
  },
  {
    "text": "of different people um but I really like this description of that it should follow this first principle uh and so",
    "start": "320160",
    "end": "327520"
  },
  {
    "text": "that's an acronym for fast meaning the unitest should run in like milliseconds",
    "start": "327520",
    "end": "332560"
  },
  {
    "text": "uh or less uh not multiple seconds it should be isolated meaning it should only kind of talk to itself so if you",
    "start": "332560",
    "end": "339280"
  },
  {
    "text": "have a method uh in C you shouldn't be communicating with like other classes and other methods and things like that",
    "start": "339280",
    "end": "344840"
  },
  {
    "text": "you should kind of be targeting uh that method by itself it's repeatable so if",
    "start": "344840",
    "end": "350319"
  },
  {
    "text": "you run it a million times you get the same result uh every single time and you shouldn't have any sort of flakiness",
    "start": "350319",
    "end": "356479"
  },
  {
    "text": "that happens where oh sometimes it passes or after this time of day this test never passes some of those kinds of",
    "start": "356479",
    "end": "363600"
  },
  {
    "text": "things uh self validating meaning it should contain its own assertions and should be able to like say like hey I",
    "start": "363600",
    "end": "370080"
  },
  {
    "text": "expect this to happen when you uh do this kind of thing and then it should also be timely meaning uh you should",
    "start": "370080",
    "end": "376840"
  },
  {
    "text": "write the tests first and we'll talk about what that means a little bit later you might hear some people also",
    "start": "376840",
    "end": "383880"
  },
  {
    "text": "use the term solitary meaning like these tests don't communicate with other classes or things like that they just",
    "start": "383880",
    "end": "389080"
  },
  {
    "text": "kind of talk to talk about the logic that is in uh their method itself um so",
    "start": "389080",
    "end": "394720"
  },
  {
    "text": "you I really like this term solitary meaning like hey uh I only communicate with myself because some people will",
    "start": "394720",
    "end": "400319"
  },
  {
    "text": "classify unit test more as um oh it's it only talks to things in memory like it",
    "start": "400319",
    "end": "405639"
  },
  {
    "text": "doesn't talk to a database or things like that which means it could communicate across multiple other classes I don't really like that",
    "start": "405639",
    "end": "411960"
  },
  {
    "text": "definition I think that's more of an integration test so what an integration",
    "start": "411960",
    "end": "417160"
  },
  {
    "text": "test is is it just invokes different part parts of a system together so it could be multiple classes communicating",
    "start": "417160",
    "end": "422840"
  },
  {
    "text": "with each other um a lot of people think integration tests always means uh",
    "start": "422840",
    "end": "428120"
  },
  {
    "text": "talking to a database talking to the file system talking to an API getting some sort of IO involved um I don't",
    "start": "428120",
    "end": "433560"
  },
  {
    "text": "really use that definition I prefer this definition where like it's just communicating with multiple things it could be a database it could be an API",
    "start": "433560",
    "end": "440639"
  },
  {
    "text": "it could be the file system but it doesn't have to be so it might have external dependencies uh like I",
    "start": "440639",
    "end": "446560"
  },
  {
    "text": "mentioned and um it's us usually less deterministic if you don't have what's",
    "start": "446560",
    "end": "452479"
  },
  {
    "text": "called a controlled dependency so if you have an uncontrolled dependency meaning you're calling out to an API that you",
    "start": "452479",
    "end": "458360"
  },
  {
    "text": "don't own then you might have some flakiness where if you run it a million times it might fail sometimes because",
    "start": "458360",
    "end": "463800"
  },
  {
    "text": "that API goes down so uh that is a trade-off with some integration tests is if you don't have a control dependency",
    "start": "463800",
    "end": "470520"
  },
  {
    "text": "and if you're like let's say you're using like a shared database and you're not using like a Docker database that you can just spin up locally um then",
    "start": "470520",
    "end": "477800"
  },
  {
    "text": "these types of tests might not be as deterministic it's also really useful",
    "start": "477800",
    "end": "483000"
  },
  {
    "text": "for testing Legacy code uh so if you ever deal with things like oh uh the system's like really hard to change and",
    "start": "483000",
    "end": "489440"
  },
  {
    "text": "things like that what I like to do for things like uh for situations like that where I'm dealing with Legacy code is I",
    "start": "489440",
    "end": "495400"
  },
  {
    "text": "like to write some characterization tests around the system and say like hey uh when I pass in this input I get back",
    "start": "495400",
    "end": "501960"
  },
  {
    "text": "this output like I don't really care what how it does its thing I just care that when I pass in you know this data",
    "start": "501960",
    "end": "508560"
  },
  {
    "text": "to this API that I get back this response or maybe I'm even inspecting the database like hey when I do this thing then the",
    "start": "508560",
    "end": "515440"
  },
  {
    "text": "database should look in this way um and I don't really care what happens in between so that way once I get those",
    "start": "515440",
    "end": "520839"
  },
  {
    "text": "characterization tests in place then I can start refactoring to my heart's content and start changing a lot of",
    "start": "520839",
    "end": "526959"
  },
  {
    "text": "things so similar to how uh there's also the term so solitary for unit test uh",
    "start": "526959",
    "end": "533680"
  },
  {
    "text": "there's also this term sociable for integration test which means it's communicating it's socializing with other parts of of the system and isn't",
    "start": "533680",
    "end": "540600"
  },
  {
    "text": "just kind of solitary by itself and I really like that word to describe integration",
    "start": "540600",
    "end": "546920"
  },
  {
    "text": "tests so for end to end tests uh really this is just a type of integration test",
    "start": "546920",
    "end": "552320"
  },
  {
    "text": "like how many people have done anything with like selenium Cyprus playwright any of those types of things okay probably a",
    "start": "552320",
    "end": "558800"
  },
  {
    "text": "third of the room or so cool so that is a type of end to end test and really",
    "start": "558800",
    "end": "563920"
  },
  {
    "text": "what an end to end test is is it invokes the system from like its entry point all the way to its end so if you have a web",
    "start": "563920",
    "end": "570160"
  },
  {
    "text": "app that's where a tool like Cyprus selenium playright any of those start to come into play where you're actually",
    "start": "570160",
    "end": "576360"
  },
  {
    "text": "interacting with a browser uh but an end to end test let's say you just have an API and that's what you deliver um you",
    "start": "576360",
    "end": "583040"
  },
  {
    "text": "could have an end to end test that doesn't actually interact with a browser because your entry point is the API",
    "start": "583040",
    "end": "588200"
  },
  {
    "text": "right but most people think of browser tests when they hear end end um this will have external dependencies so if",
    "start": "588200",
    "end": "594680"
  },
  {
    "text": "it's a browser test for instance like at minimum you're spinning up an actual browser uh and so you will have some",
    "start": "594680",
    "end": "600360"
  },
  {
    "text": "sort of external dependencies at minimum there and it won't be all in memory because again you're spinning up that",
    "start": "600360",
    "end": "606240"
  },
  {
    "text": "extra process to uh spin up the browser uh even if it's a headless browser you're still spinning up another",
    "start": "606240",
    "end": "612279"
  },
  {
    "text": "process and usually this is the slowest form of integration test um so usually",
    "start": "612279",
    "end": "617399"
  },
  {
    "text": "spinning up an actual browser and interacting with things usually takes a lot longer than you know just spinning up a class in memory and test testing",
    "start": "617399",
    "end": "624160"
  },
  {
    "text": "that class um so that is a tradeoff of end to end tests and and it's even less",
    "start": "624160",
    "end": "630360"
  },
  {
    "text": "deterministic typically speaking than uh than integration tests uh if you don't",
    "start": "630360",
    "end": "635560"
  },
  {
    "text": "have uncontrolled dependencies or I've seen a lot of people like put weights in their system where it's like hey wait for this element to show up or they just",
    "start": "635560",
    "end": "642519"
  },
  {
    "text": "like thread. sleep things which you should never do um just to wait for things to show up so it can even be less",
    "start": "642519",
    "end": "648639"
  },
  {
    "text": "deterministic than uh your typical integration test so then the question is okay how",
    "start": "648639",
    "end": "654680"
  },
  {
    "text": "many how many do I create of each and the answer is and anybody any",
    "start": "654680",
    "end": "659970"
  },
  {
    "text": "[Music] guesses it depends right the answer to everything",
    "start": "659970",
    "end": "666600"
  },
  {
    "text": "of it depends but you have to kind of ask yourself like uh what does it depend",
    "start": "666600",
    "end": "672920"
  },
  {
    "text": "on so there's a few different testing strategies out there so one is called the testing pyramid which the idea",
    "start": "672920",
    "end": "679240"
  },
  {
    "text": "behind the testing pyramid is you have a lot of unit tests kind of at the bottom level of your pyramid and so those are",
    "start": "679240",
    "end": "685480"
  },
  {
    "text": "really fast and really cheap to create um the side of unit tests is they",
    "start": "685480",
    "end": "690880"
  },
  {
    "text": "sometimes don't give you the most confidence that your system actually works so you get this nice little trade-off of like hey they run fast",
    "start": "690880",
    "end": "697160"
  },
  {
    "text": "they're really easy to make but they don't always give you the most confidence and as you kind of move up the pyramid uh if you follow the testing",
    "start": "697160",
    "end": "704079"
  },
  {
    "text": "pyramid scheme you have less integration tests than you do unit tests and integration tests start to get a little",
    "start": "704079",
    "end": "709880"
  },
  {
    "text": "bit slower uh a little bit costlier to maintain because you might have to set up like some database uh database data",
    "start": "709880",
    "end": "716440"
  },
  {
    "text": "for instance or things like that um but at the tradeoff of you get more",
    "start": "716440",
    "end": "721839"
  },
  {
    "text": "confidence when those things succeed and then obviously endn tests or in this case it says UI tests at the top where",
    "start": "721839",
    "end": "728519"
  },
  {
    "text": "those are the slowest they're the hardest hardest create but they're also give you the most confidence so it's",
    "start": "728519",
    "end": "734320"
  },
  {
    "text": "kind of the testing pyramid is one Paradigm around how many do you create of each so the answer is really it",
    "start": "734320",
    "end": "741079"
  },
  {
    "text": "depends because there's also a strategy called the testing Diamond which you can kind of see here where it's you have",
    "start": "741079",
    "end": "746760"
  },
  {
    "text": "less unit tests more integration tests in the middle and then less UI and end end test so this is another strategy uh",
    "start": "746760",
    "end": "754279"
  },
  {
    "text": "as well and I would say typically on front end code I kind of lean the testing Diamond uh way and I'm backend",
    "start": "754279",
    "end": "759839"
  },
  {
    "text": "code it kind of depends sometimes I'm more pyramid sometimes I'm more Diamond uh just kind of uh depends on the",
    "start": "759839",
    "end": "767079"
  },
  {
    "text": "situation we'll talk about that a little bit later so these are kind of different strategies you might have also heard of",
    "start": "767079",
    "end": "772600"
  },
  {
    "text": "like the testing trophy that's also popular in the front end space um really these are just kind of ideas about how",
    "start": "772600",
    "end": "778360"
  },
  {
    "text": "many do create of each so I would love to sit here and tell you like oh yeah you should have exactly 60% unit tests",
    "start": "778360",
    "end": "784680"
  },
  {
    "text": "you know 30% integration test and 10% and end test but really it depends on what you're doing so you kind of have to",
    "start": "784680",
    "end": "790959"
  },
  {
    "text": "analyze like what uh makes sense for your situation and so how many people have",
    "start": "790959",
    "end": "796000"
  },
  {
    "text": "seen memes uh like this where uh hey I've got a did that play",
    "start": "796000",
    "end": "804000"
  },
  {
    "text": "nope I've got a unit test that passed for this lock but then when I went to integrate it with a door it doesn't",
    "start": "804000",
    "end": "810040"
  },
  {
    "text": "actually do anything right and so this is where you might hear see things that are like hey all my unit tests pass but",
    "start": "810040",
    "end": "816519"
  },
  {
    "text": "my integration tests uh do not or like oh I only have unit tests and it's like cool that works great up until like you",
    "start": "816519",
    "end": "822399"
  },
  {
    "text": "go to integrate stuff and then things might not actually work uh there's also a funny one where uh somebody's got like",
    "start": "822399",
    "end": "829560"
  },
  {
    "text": "a a hand dryer in a bathroom and it's like right next to a trash can with a plastic bag and basically they take the",
    "start": "829560",
    "end": "836440"
  },
  {
    "text": "uh towel to wipe off their hands and throw it in the throw in the garbage and then like the dryer goes off and Spins",
    "start": "836440",
    "end": "842360"
  },
  {
    "text": "the trash all around that's like right below it it's kind of funny I should have put that one on here",
    "start": "842360",
    "end": "848320"
  },
  {
    "text": "to so all right so any questions about testing before we start talking about test driven development since that's",
    "start": "848320",
    "end": "855519"
  },
  {
    "text": "what you're all here for yeah go for",
    "start": "855519",
    "end": "863800"
  },
  {
    "text": "it",
    "start": "867680",
    "end": "870680"
  },
  {
    "text": "yep yeah so the question was let's say you've got uh some tests set up where",
    "start": "890959",
    "end": "896120"
  },
  {
    "text": "you're not ever leaving your project right so like you're setting up like an inmemory database let's say with like Entity framework or something like that",
    "start": "896120",
    "end": "903079"
  },
  {
    "text": "um is that still considered an integration test if like you know you're using an in memory database you're",
    "start": "903079",
    "end": "909160"
  },
  {
    "text": "mocking out external dependencies things like that in my opinion if you're using like web application Factory for",
    "start": "909160",
    "end": "914639"
  },
  {
    "text": "instance and spinning up like uh the server in memory and actually hitting those apis to me that's still an",
    "start": "914639",
    "end": "919959"
  },
  {
    "text": "integration test because you're testing like how like your ASN core middleware plus your controllers and all that kind",
    "start": "919959",
    "end": "925480"
  },
  {
    "text": "of stuff work so to me even though you're not hitting external stuff to your project to me that's still an integration test because you're testing",
    "start": "925480",
    "end": "931720"
  },
  {
    "text": "how multiple parts of your application integrate together so that's how I Define it but like I said lots of other",
    "start": "931720",
    "end": "937720"
  },
  {
    "text": "people have different opinions uh my opinion is just uh if you're integrating multiple parts of your system to me",
    "start": "937720",
    "end": "943079"
  },
  {
    "text": "that's still an integration test whether not you're hitting external dependencies is kind of another whole another thing",
    "start": "943079",
    "end": "949680"
  },
  {
    "text": "so cool all right so let's talk about test driven development uh so what is",
    "start": "949680",
    "end": "955680"
  },
  {
    "text": "tdd where did it come from uh so back in 2000 this guy named Kent Beck uh created",
    "start": "955680",
    "end": "961480"
  },
  {
    "text": "this book tdd by example and uh Kent Beck was part of a",
    "start": "961480",
    "end": "967600"
  },
  {
    "text": "team uh I think at Chrysler who was working on a a particular uh project I",
    "start": "967600",
    "end": "973759"
  },
  {
    "text": "think it was like a payroll system and he was starting to do some more extreme Pro programming practices that they that",
    "start": "973759",
    "end": "980279"
  },
  {
    "text": "those uh guys kind of came up with and one of those practices was test D and development so Kent ended up writing",
    "start": "980279",
    "end": "986319"
  },
  {
    "text": "this book to uh talk about tdd and I still think this is one of the best books about about tdd uh the examples",
    "start": "986319",
    "end": "993560"
  },
  {
    "text": "are in Java uh so even though I'm a c person uh it's not ideal for me but I",
    "start": "993560",
    "end": "999759"
  },
  {
    "text": "think it's uh I mean c and Java are close enough that's pretty pretty similar and I think this the concepts",
    "start": "999759",
    "end": "1006120"
  },
  {
    "text": "from this book are pretty Timeless so that's kind of where tdd started getting its kickoff was when this book got",
    "start": "1006120",
    "end": "1012279"
  },
  {
    "text": "released in 2000 uh to talk about what test development is and how to practice",
    "start": "1012279",
    "end": "1018279"
  },
  {
    "text": "it so if you're interested I would still pick up that book today I still think it's worth uh worth a",
    "start": "1018279",
    "end": "1024199"
  },
  {
    "text": "read so what is tdd so it is a methodology for writing code not tests",
    "start": "1024199",
    "end": "1030760"
  },
  {
    "text": "so a lot of people think that test driven development is really about the tests and while they are useful to me",
    "start": "1030760",
    "end": "1037000"
  },
  {
    "text": "that's not the most important about part about tdd and we'll talk about that uh in more depth a little bit later so the",
    "start": "1037000",
    "end": "1044558"
  },
  {
    "text": "idea behind tdd is you write the test before you actually write your production code which can be kind of",
    "start": "1044559",
    "end": "1051480"
  },
  {
    "text": "trippy for some people of like how do I write the test before I actually write",
    "start": "1051480",
    "end": "1056520"
  },
  {
    "text": "uh the real code that I'm going to write like how do I even know what to test we'll talk about that uh a little bit",
    "start": "1056520",
    "end": "1061840"
  },
  {
    "text": "later but essentially that's that's a big part of what TD is and we'll talk about the different steps uh here in a second but essentially a big part of TD",
    "start": "1061840",
    "end": "1068799"
  },
  {
    "text": "is just you write the test before you write the production code so how do add tdd um so a lot of",
    "start": "1068799",
    "end": "1075640"
  },
  {
    "text": "people think uh how many people have heard the term Red Green green refactor okay maybe 10% of the room so a",
    "start": "1075640",
    "end": "1083720"
  },
  {
    "text": "lot of people uh think that tdd starts with writing the failing test but I",
    "start": "1083720",
    "end": "1088919"
  },
  {
    "text": "actually like this concept that first you think and think about what you're trying to do like what Behavior are you",
    "start": "1088919",
    "end": "1094799"
  },
  {
    "text": "trying to get out of your system um what like failure States could happen to this behavior um like what's all involved",
    "start": "1094799",
    "end": "1102080"
  },
  {
    "text": "like what should you be testing how should you be setting this up um so I think that's that's a key aspect is you",
    "start": "1102080",
    "end": "1107320"
  },
  {
    "text": "need to think about what you're doing before you actually start writing uh the next test then after you decide okay I",
    "start": "1107320",
    "end": "1114000"
  },
  {
    "text": "decide what test I'm going to write uh then you decide okay I'm going to write a test that describes what Behavior I",
    "start": "1114000",
    "end": "1119720"
  },
  {
    "text": "want to see out of uh the system that I'm about to create so uh that's kind of",
    "start": "1119720",
    "end": "1125200"
  },
  {
    "text": "where you uh initially write the test before you actually write the production code and then you run the test to make",
    "start": "1125200",
    "end": "1131600"
  },
  {
    "text": "sure it fails for the right reason because you haven't actually written the real implementation production code yet",
    "start": "1131600",
    "end": "1138120"
  },
  {
    "text": "so so therefore your test should pass when you go to run it now some people uh like I know Uncle Bob uh from clean code",
    "start": "1138120",
    "end": "1146080"
  },
  {
    "text": "will say a compilation failure is sufficient for red and to me that's not",
    "start": "1146080",
    "end": "1151640"
  },
  {
    "text": "sufficient for red because I want to actually see that my test fails for the right reason because I could totally set",
    "start": "1151640",
    "end": "1157000"
  },
  {
    "text": "up my test and it passes uh when everything compiles because you know I might have set up a mock that uh the way",
    "start": "1157000",
    "end": "1163880"
  },
  {
    "text": "I set it up causes that test to never even fail in the first place so I actually want to see the code compile",
    "start": "1163880",
    "end": "1169880"
  },
  {
    "text": "and fail for the right reason I'll show you a live demo of this uh here in a little bit and then you write the code",
    "start": "1169880",
    "end": "1176080"
  },
  {
    "text": "to make it pass so some people will say you should write the minimum code to make it pass uh and definitely there are",
    "start": "1176080",
    "end": "1181799"
  },
  {
    "text": "times where I do that uh but there are also times where I don't write the absolute minimum code to make it pass uh",
    "start": "1181799",
    "end": "1187080"
  },
  {
    "text": "so it uh kind of depends but if you're just starting out I would write the minimum code uh to make the test pass",
    "start": "1187080",
    "end": "1194360"
  },
  {
    "text": "and then run the test to see it pass and then after you have that uh confidence that hey my system used to",
    "start": "1194360",
    "end": "1200559"
  },
  {
    "text": "not do this thing and now it does do this thing because you ran it first it fails to prove that like hey my system",
    "start": "1200559",
    "end": "1206600"
  },
  {
    "text": "doesn't have this Behavior yet and now you've made the test pass to prove okay it does have this Behavior now now",
    "start": "1206600",
    "end": "1212600"
  },
  {
    "text": "you've got a refactor opportunity where you can say like hey I'm going to make changes to how I did this implementation that way um you know I've got that",
    "start": "1212600",
    "end": "1220320"
  },
  {
    "text": "coverage to know like hey I've got a test that covers me so if I change how things work and I break it uh my test is",
    "start": "1220320",
    "end": "1226600"
  },
  {
    "text": "going to fail and catch any problem that I might have and then you kind of repeat this cycle over and over and over again",
    "start": "1226600",
    "end": "1231720"
  },
  {
    "text": "for the next piece of behavior that you're about to write so it kind of looks something like this if you're more",
    "start": "1231720",
    "end": "1237159"
  },
  {
    "text": "of a visual person where first you think uh and then you write the failing test and then you make that test pass and",
    "start": "1237159",
    "end": "1243080"
  },
  {
    "text": "then you go under this refactor mode until you're satisfied with how the code looks and then you go back through this",
    "start": "1243080",
    "end": "1248520"
  },
  {
    "text": "think cycle again uh so this is where the term red green refactor comes from",
    "start": "1248520",
    "end": "1253760"
  },
  {
    "text": "is because first you start with the red phase of writing a failing test then you make it past and make it green and then",
    "start": "1253760",
    "end": "1259640"
  },
  {
    "text": "you start refactoring and you kind of get in this cycle of repeating this over and over and over again for the extent",
    "start": "1259640",
    "end": "1265320"
  },
  {
    "text": "of your feature so I really like this quote by",
    "start": "1265320",
    "end": "1270440"
  },
  {
    "text": "Eric Evans uh he said if you haven't seen a test fail you don't know if it",
    "start": "1270440",
    "end": "1275760"
  },
  {
    "text": "actually works so how many people have ever seen a test not test what the",
    "start": "1275760",
    "end": "1281080"
  },
  {
    "text": "original thing it was intending to test okay probably half the room yep so",
    "start": "1281080",
    "end": "1287200"
  },
  {
    "text": "that's a big thing with d d is if you don't actually see a failing red test you don't know that what you just did",
    "start": "1287200",
    "end": "1293919"
  },
  {
    "text": "targets the behavior that you're trying to capture with that test and I've even seen people like set up a mock and then",
    "start": "1293919",
    "end": "1299760"
  },
  {
    "text": "like test the mock directly which doesn't really do anything either um so that's a key part of tdd is if you don't",
    "start": "1299760",
    "end": "1306720"
  },
  {
    "text": "ever see a test fail you don't know if what you did was actually targeting what",
    "start": "1306720",
    "end": "1312400"
  },
  {
    "text": "you're uh intending to Target so what is not tdd because a lot",
    "start": "1312400",
    "end": "1318720"
  },
  {
    "text": "of people might use the term tdd when they probably didn't mean to so the first thing is tdd is not a synonym for",
    "start": "1318720",
    "end": "1325559"
  },
  {
    "text": "writing test so if somebody says hey I write write tests that doesn't necessarily that they're me meaning",
    "start": "1325559",
    "end": "1331159"
  },
  {
    "text": "they're doing tdd even though they might say they're doing TD uh if they're not writing the test first then they're not",
    "start": "1331159",
    "end": "1336640"
  },
  {
    "text": "doing tdd by definition and tdd is not writing a bunch of tests all up front before you",
    "start": "1336640",
    "end": "1343559"
  },
  {
    "text": "write any production code whatsoever so some people will say like oh I do tdd write you know all my test cases before",
    "start": "1343559",
    "end": "1350279"
  },
  {
    "text": "I write any code and that's pretty close but really tddd is about getting in that cycle where you're just focus on one",
    "start": "1350279",
    "end": "1356720"
  },
  {
    "text": "single test and making that single test pass and then kind of repeating that cycle over and over and over",
    "start": "1356720",
    "end": "1362799"
  },
  {
    "text": "again and some people will be like oh I do tdd that means I never will have bugs ever again right and that's also not the",
    "start": "1362799",
    "end": "1370360"
  },
  {
    "text": "case uh just because you have tests and you write and you do TD does not mean that you'll never have bugs so sometimes",
    "start": "1370360",
    "end": "1377559"
  },
  {
    "text": "manager need to be educated that like hey just because we have tests doesn't mean we're going to catch all of our scenarios like we might not think",
    "start": "1377559",
    "end": "1383200"
  },
  {
    "text": "through a situation or something like that and so if we never actually write the test covering that situation then",
    "start": "1383200",
    "end": "1389799"
  },
  {
    "text": "we're not actually going to be able to cover that scenario as well as uh like let's say",
    "start": "1389799",
    "end": "1397520"
  },
  {
    "text": "you've got a existing production code uh around a system right and you were like oh I want to write tests around this so",
    "start": "1397520",
    "end": "1402720"
  },
  {
    "text": "I'm going to tdd this like by definition you can't really tdd it because the existing production code already exists",
    "start": "1402720",
    "end": "1409400"
  },
  {
    "text": "right so what you could do is you could write some tests around that system like those characterization tests I was",
    "start": "1409400",
    "end": "1414640"
  },
  {
    "text": "talking about and then you could like if you want you could like remove those lines and then run the test to see it fail afterwards um so that would",
    "start": "1414640",
    "end": "1421960"
  },
  {
    "text": "indicate that hey I'm targeting what I'm intending to Target and then you can put that code back afterwards so that's kind",
    "start": "1421960",
    "end": "1428159"
  },
  {
    "text": "of close-ish to tdd but still not exactly because again that production code already exists however uh I guess a",
    "start": "1428159",
    "end": "1435240"
  },
  {
    "text": "point on that too is some people will say like oh I can't do test driven development because I've got this leg",
    "start": "1435240",
    "end": "1440360"
  },
  {
    "text": "Legacy system and that is absolutely not true so what you can do is you can take",
    "start": "1440360",
    "end": "1445400"
  },
  {
    "text": "the behavior that you're adding to your system and like rip it out into a new class or a new method and test that",
    "start": "1445400",
    "end": "1450760"
  },
  {
    "text": "method in isolation and then kind of drop it into the piece uh to the place in your legacy system where it exists so",
    "start": "1450760",
    "end": "1457240"
  },
  {
    "text": "if you start doing this methodology over time you'll get more and more tests around that Legacy system as opposed to",
    "start": "1457240",
    "end": "1463279"
  },
  {
    "text": "like oh this you know this class is 5,000 lines long what's another 10 lines",
    "start": "1463279",
    "end": "1468360"
  },
  {
    "text": "amongst friends right but the problem is that's how all of that got started right it used to be a thousand lines and then 2,000 lines and then now it's 5,000",
    "start": "1468360",
    "end": "1475120"
  },
  {
    "text": "lines so if you start ripping that behavior out into separate methods or classes um then you'll start slowly",
    "start": "1475120",
    "end": "1481919"
  },
  {
    "text": "extracting out some of that functionality and start to make your system better uh over",
    "start": "1481919",
    "end": "1487120"
  },
  {
    "text": "time uh the other thing is uh there is some testerone development uh zealots",
    "start": "1487120",
    "end": "1492840"
  },
  {
    "text": "out there who will say things like hey if you don't do tdd you're writing bad code and like has anybody ever dealt",
    "start": "1492840",
    "end": "1499640"
  },
  {
    "text": "with anybody like that where they say hey uh you know if you're not doing tdd so a few few hands out there uh if",
    "start": "1499640",
    "end": "1506320"
  },
  {
    "text": "you're not doing tdd you write bad code and I don't believe that at all like I think that's just does more harm than",
    "start": "1506320",
    "end": "1511399"
  },
  {
    "text": "good and it reminds me a lot of like you know being a c Dev uh sometimes I have",
    "start": "1511399",
    "end": "1517000"
  },
  {
    "text": "said things about VB devs in the past that might not have been the nicest things on the planet um but like that",
    "start": "1517000",
    "end": "1523480"
  },
  {
    "text": "really that kind of stuff uh just does more harm than good so it's like instead of saying like oh you write bad code if",
    "start": "1523480",
    "end": "1529360"
  },
  {
    "text": "you write tdd what what if those people would spend that energy like teaching people how to do tdd for instance um and",
    "start": "1529360",
    "end": "1536000"
  },
  {
    "text": "I don't think if you don't do tdd uh you're writing bad code and honestly even if you don't do tdd I don't think",
    "start": "1536000",
    "end": "1543000"
  },
  {
    "text": "that's like um you know I think the more important thing with tdd and we'll talk about uh some of the benefits here in a",
    "start": "1543000",
    "end": "1549880"
  },
  {
    "text": "second is more just the iteration that you're doing so some people do test after where they're adding tests after",
    "start": "1549880",
    "end": "1556640"
  },
  {
    "text": "they write the production code and I think that's totally fine I would just try and write tests immediately",
    "start": "1556640",
    "end": "1561760"
  },
  {
    "text": "after you write some code because I see some people who will like you know write be writing code for like days or even",
    "start": "1561760",
    "end": "1567679"
  },
  {
    "text": "weeks and then try and remember all the situations that they need to like backport tests after the fact and I",
    "start": "1567679",
    "end": "1574039"
  },
  {
    "text": "would in said like write some like if I'm doing test after I would write some code and then write some tests immediately after because I I'm already",
    "start": "1574039",
    "end": "1580120"
  },
  {
    "text": "in that state versus like if I'm trying to think like what code I wrote like days or even weeks ago I probably can't",
    "start": "1580120",
    "end": "1585960"
  },
  {
    "text": "think of all the scenarios that I want to test so even if you're doing test after try and ADD test like immediately after uh",
    "start": "1585960",
    "end": "1593080"
  },
  {
    "text": "you write some production code would be my uh advice so bet you didn't think",
    "start": "1593080",
    "end": "1598399"
  },
  {
    "text": "you'd hear people uh or hear some tips on test after in tdd tdd talk but I",
    "start": "1598399",
    "end": "1604360"
  },
  {
    "text": "recognize not everybody does tdd so hopefully that tip helps so like why would you even go through this like red",
    "start": "1604360",
    "end": "1610679"
  },
  {
    "text": "green refactor phase like what benefits are there post that up to all of you",
    "start": "1610679",
    "end": "1616880"
  },
  {
    "text": "what benefits could you see with doing this red green refactor",
    "start": "1616880",
    "end": "1622679"
  },
  {
    "text": "cycle Miss bugs oh less bugs yep less",
    "start": "1622799",
    "end": "1628679"
  },
  {
    "text": "bugs yep testing focusing on the behavior first yep same thing all",
    "start": "1630240",
    "end": "1637760"
  },
  {
    "text": "right better code",
    "start": "1637760",
    "end": "1641960"
  },
  {
    "text": "why yep so you're refactoring kind of as you go yeah what's that feed feedback loop yep yeah",
    "start": "1643320",
    "end": "1650840"
  },
  {
    "text": "you have this very tight feedback loop that you know if did this code I just write actually work I heard something",
    "start": "1650840",
    "end": "1656039"
  },
  {
    "text": "over here",
    "start": "1656039",
    "end": "1658480"
  },
  {
    "text": "yep yep you have code that's more easy to test yep absolutely",
    "start": "1661360",
    "end": "1666679"
  },
  {
    "text": "yeah priori you actually prioritize it yeah anybody ever had a manager like",
    "start": "1666679",
    "end": "1673000"
  },
  {
    "text": "tell them hey don't write don't spend time writing tests like that's what the QA is for uh we'll figure that out later",
    "start": "1673000",
    "end": "1678519"
  },
  {
    "text": "I see some people smiling out there yep confident feel confident yep absolutely",
    "start": "1678519",
    "end": "1686720"
  },
  {
    "text": "yeah document the business logic yep absolutely well you guys stole my slide",
    "start": "1686720",
    "end": "1692240"
  },
  {
    "text": "pretty much uh over here but uh I know somebody somebody mentioned something",
    "start": "1692240",
    "end": "1697760"
  },
  {
    "text": "similar to this uh but like you work in small steps like to me that's one of the biggest uh value ads of tdd is you're",
    "start": "1697760",
    "end": "1705240"
  },
  {
    "text": "working in these small steps which minimizes your waste because you're not like has anybody ever jumped into a",
    "start": "1705240",
    "end": "1710559"
  },
  {
    "text": "co-base start refactoring and then like you're like oh I came across this thing and I want to refactor that too and then",
    "start": "1710559",
    "end": "1716320"
  },
  {
    "text": "you come across another thing and you're like oh I want to refactor that too and like then you're like I see some heads nodding uh I then I'm like five levels",
    "start": "1716320",
    "end": "1723159"
  },
  {
    "text": "deep I'm like wait what was I trying to do again oh yeah back this other thing right uh back here and so I find tdd",
    "start": "1723159",
    "end": "1730240"
  },
  {
    "text": "helps me not like go down those rabbit holes where like I feel like I'm just like I got a machete in a jungle and I'm",
    "start": "1730240",
    "end": "1736159"
  },
  {
    "text": "just like hacking away and hoping at the end I end out of the Jungle um because tdd focuses me on just making the next",
    "start": "1736159",
    "end": "1743360"
  },
  {
    "text": "test pass which is nice and it also minimizes your work in progress like I was saying you're not you're not going",
    "start": "1743360",
    "end": "1749799"
  },
  {
    "text": "like five WRA holes deep you're just kind of focusing on making that next test pass so to me like this is the",
    "start": "1749799",
    "end": "1755720"
  },
  {
    "text": "biggest thing uh with test development is it gives gives me Focus because with my personality sometimes I can lose",
    "start": "1755720",
    "end": "1761960"
  },
  {
    "text": "focus and get distracted by other things and so with tdd it helps me focus on like okay I'm just trying to make this",
    "start": "1761960",
    "end": "1767880"
  },
  {
    "text": "next test pass and what I found too is uh you",
    "start": "1767880",
    "end": "1773799"
  },
  {
    "text": "spend a lot less time in the debugger so think about all the time that you spend in a debugger today and what if I could",
    "start": "1773799",
    "end": "1781240"
  },
  {
    "text": "tell you that all of that time just magically evaporates because what I found doing tester development is I",
    "start": "1781240",
    "end": "1787960"
  },
  {
    "text": "don't actually spend very much time at all in the debugger like maybe a couple times a month maybe but",
    "start": "1787960",
    "end": "1794159"
  },
  {
    "text": "I've gone like multiple months without even entering the debugger whatsoever so like if you think about like oh this is",
    "start": "1794159",
    "end": "1799519"
  },
  {
    "text": "going to slow me if you're thinking in your head like oh this is going to slow me down because you know I have to write",
    "start": "1799519",
    "end": "1805120"
  },
  {
    "text": "test up front and all that kind of stuff if you take all that time you spend in the debugger and put it towards tests uh",
    "start": "1805120",
    "end": "1811640"
  },
  {
    "text": "not only at the end will you like get this test Suite but like uh you know",
    "start": "1811640",
    "end": "1816679"
  },
  {
    "text": "when you're debugging essentially that debugging session goes away as soon as you hit stop versus with an automated",
    "start": "1816679",
    "end": "1822120"
  },
  {
    "text": "test you have that around uh forever which is really nice and tdd helps me think through all",
    "start": "1822120",
    "end": "1828600"
  },
  {
    "text": "like my failure states too so I get to Think Through like because I'm just focused on this one little feature I get to Think Through like okay what if",
    "start": "1828600",
    "end": "1834480"
  },
  {
    "text": "somebody passes me a null or what's what if somebody passes me you know uh a number or something like that when uh a",
    "start": "1834480",
    "end": "1841080"
  },
  {
    "text": "number less than zero like what what happens to my system and then uh as",
    "start": "1841080",
    "end": "1846519"
  },
  {
    "text": "mentioned too like one of the biggest things is confidence that like as you're writing code you get confidence at what",
    "start": "1846519",
    "end": "1851640"
  },
  {
    "text": "you're writing actually works because you see that test go from red to Green as well as uh somebody mentioned",
    "start": "1851640",
    "end": "1858559"
  },
  {
    "text": "testable code here as well um you get design feedback so if you find that like a test is really hard to write that",
    "start": "1858559",
    "end": "1865760"
  },
  {
    "text": "might be an indicator that your design isn't isn't quite right so if you think about like let's say you've got a",
    "start": "1865760",
    "end": "1871880"
  },
  {
    "text": "thousand line method versus a two line method which would you guess is probably easier to write a test for I'm going to",
    "start": "1871880",
    "end": "1878159"
  },
  {
    "text": "put my money probably on the two line method not the Thousand line method so the other thing is you get uh nice",
    "start": "1878159",
    "end": "1883279"
  },
  {
    "text": "design feedback on like hey uh you know if my test is hard to right it might mean that my Design's not quite right so",
    "start": "1883279",
    "end": "1889440"
  },
  {
    "text": "maybe I should uh rethink how I'm doing this and as mentioned before you can use",
    "start": "1889440",
    "end": "1896279"
  },
  {
    "text": "it uh as you start adding new functionality to Legacy apps you can start isolating the New Logic that",
    "start": "1896279",
    "end": "1901320"
  },
  {
    "text": "you're writing uh in another uh test or another method or another class and then",
    "start": "1901320",
    "end": "1906559"
  },
  {
    "text": "kind of test that in isolation as you put it into your legacy app and you notice like I didn't actually any of",
    "start": "1906559",
    "end": "1912760"
  },
  {
    "text": "these I didn't really mention the tests too much but at the end of the day you get nice regression tests too too um but",
    "start": "1912760",
    "end": "1918120"
  },
  {
    "text": "honestly like to me that's not the biggest benefit you get out of all this like I think all this other stuff uh is",
    "start": "1918120",
    "end": "1923639"
  },
  {
    "text": "almost just almost just as valuable as getting uh the regression tests at that",
    "start": "1923639",
    "end": "1928760"
  },
  {
    "text": "you get at the end of the day as well all right so the next question I",
    "start": "1928760",
    "end": "1934399"
  },
  {
    "text": "get from people a lot is what should I be testing exactly so the number one",
    "start": "1934399",
    "end": "1940279"
  },
  {
    "text": "thing I would say is test the behavior of what you're trying to do so um I used",
    "start": "1940279",
    "end": "1947519"
  },
  {
    "text": "to be somebody who used mocks pretty heavily and I still definitely use mock um but I'm using them a lot less un less",
    "start": "1947519",
    "end": "1954960"
  },
  {
    "text": "these days because I'm more focused on like what's the behavior of my actual system versus like hey do do I want to",
    "start": "1954960",
    "end": "1960679"
  },
  {
    "text": "write a test that's saying like hey did I pass these parameters correctly and things like that um I try and avoid",
    "start": "1960679",
    "end": "1966039"
  },
  {
    "text": "those tests as much as possible now but like a litmus test you could ask yourself is can you delete production",
    "start": "1966039",
    "end": "1973480"
  },
  {
    "text": "code from your application and does a test that breaks your app and does a test break if the answer is yes you're",
    "start": "1973480",
    "end": "1981600"
  },
  {
    "text": "probably missing a test and so I like to think about this a lot of like hey if I",
    "start": "1981600",
    "end": "1986919"
  },
  {
    "text": "just delete a logger statement like if I'm using I logger and C for instance and I just delete a logger statement",
    "start": "1986919",
    "end": "1993320"
  },
  {
    "text": "does that break my application probably not so usually I don't test like hey did I use the logger",
    "start": "1993320",
    "end": "1999600"
  },
  {
    "text": "correctly or things like that unless I was building something where like the logger was very instrumental to what I was doing so I might not write a test",
    "start": "1999600",
    "end": "2006240"
  },
  {
    "text": "around like hey am I using the logger correctly but if I can delete code that like breaks my like uh you know order",
    "start": "2006240",
    "end": "2012679"
  },
  {
    "text": "function place order functionality and no test breaks then there's probably a test that I'm missing and I probably",
    "start": "2012679",
    "end": "2018880"
  },
  {
    "text": "want to add uh a test there so I would say this is probably like one of the key takeaways of this talk is if is your",
    "start": "2018880",
    "end": "2025039"
  },
  {
    "text": "limit test should kind of be if you can delete production code from your app that breaks uh your app but no test",
    "start": "2025039",
    "end": "2031399"
  },
  {
    "text": "breaks then you're probably missing a test unless for some reason like the cost of creating and maintaining that",
    "start": "2031399",
    "end": "2037840"
  },
  {
    "text": "test exceeds the value of the app breaking but I found too that that might be an opportunity to refactor the code",
    "start": "2037840",
    "end": "2044279"
  },
  {
    "text": "depending on what it's doing um but yeah this is a key takeaway out of here is like if you can delete code that breaks",
    "start": "2044279",
    "end": "2050638"
  },
  {
    "text": "your app and no test breaks there's probably a problem but the opposite is also true is if your tests are broken",
    "start": "2050639",
    "end": "2056679"
  },
  {
    "text": "but your app isn't uh something also is kind of a miss so do you have like a",
    "start": "2056679",
    "end": "2061720"
  },
  {
    "text": "flaky test where you know I was calling out to an API but the API went down or",
    "start": "2061720",
    "end": "2066960"
  },
  {
    "text": "or I was talking to a shared database that were using some magic magic IDs that assumed to be in the database but",
    "start": "2066960",
    "end": "2073599"
  },
  {
    "text": "you know those got deleted by somebody for instance or um you know maybe maybe",
    "start": "2073599",
    "end": "2080000"
  },
  {
    "text": "there's something about my tests that are like tightly coupled to like the implementation details of my application",
    "start": "2080000",
    "end": "2086720"
  },
  {
    "text": "so those are all indicators that you know I should probably re-evaluate my tests and not just click the uh this is",
    "start": "2086720",
    "end": "2093200"
  },
  {
    "text": "safe place I guess I want to ask a question but some people including myself myself I've done this before just click the rerun build button when a",
    "start": "2093200",
    "end": "2099520"
  },
  {
    "text": "flaky test happens and uh that's usually not what you want to do because uh",
    "start": "2099520",
    "end": "2105960"
  },
  {
    "text": "usually you should get to the root cause of like oh uh I should root cause like why did this test flake out because",
    "start": "2105960",
    "end": "2111440"
  },
  {
    "text": "otherwise uh that flaky test is probably going to be flaky sometime in the",
    "start": "2111440",
    "end": "2116520"
  },
  {
    "text": "future the other thing is um if you've heard of the concept of snapshot tests",
    "start": "2116520",
    "end": "2122640"
  },
  {
    "text": "where basically you uh kind of take the out put of the system and kind of write",
    "start": "2122640",
    "end": "2128119"
  },
  {
    "text": "it to a snapshot usually like a Json file depending on what you're doing um and then you kind of compare the output",
    "start": "2128119",
    "end": "2134680"
  },
  {
    "text": "of the method to that Json file to see like hey does this match uh I don't like",
    "start": "2134680",
    "end": "2139880"
  },
  {
    "text": "using snapshots most of the time because the problem is snapshots don't really capture what Behavior you're trying to",
    "start": "2139880",
    "end": "2146240"
  },
  {
    "text": "go for um they don't really tell you like hey I expected you know when I pass this data I expect to get back this uh",
    "start": "2146240",
    "end": "2153359"
  },
  {
    "text": "they really just capture like what the current state of the system is um and you can't tdd snapshots either",
    "start": "2153359",
    "end": "2159720"
  },
  {
    "text": "because like snapshots rely on the implementation code to be there already so I don't like snapshots from that",
    "start": "2159720",
    "end": "2165560"
  },
  {
    "text": "aspect uh either so I see a lot of people using snapshots especially like frontend testing I see a lot of people",
    "start": "2165560",
    "end": "2170800"
  },
  {
    "text": "use snapshots uh as well and I personally don't like snapshots however they can be useful",
    "start": "2170800",
    "end": "2177359"
  },
  {
    "text": "when you're doing a huge refactor and the output should be the same but like how you get to that output is different",
    "start": "2177359",
    "end": "2184400"
  },
  {
    "text": "so for instance if you're doing like Blazer or react or angular snapshots can be useful if you're like uh changing how",
    "start": "2184400",
    "end": "2192680"
  },
  {
    "text": "the component creates the HTML but the HTML should be completely the same uh so",
    "start": "2192680",
    "end": "2197800"
  },
  {
    "text": "I'll use snapshots in those case and write a snapshot test and then after I get done with it I'll just delete that",
    "start": "2197800",
    "end": "2202839"
  },
  {
    "text": "snapshot test because uh it's no longer useful and honestly there's like a lot of implementation details in snapshot",
    "start": "2202839",
    "end": "2208839"
  },
  {
    "text": "test where it's like testing CSS classes you know how the HTML is structured all",
    "start": "2208839",
    "end": "2214240"
  },
  {
    "text": "that kind of stuff that's usually not actually Behavior um so that's another reason I don't like",
    "start": "2214240",
    "end": "2221640"
  },
  {
    "text": "snapshots all right and I like this quote from Kent Beck he said I'm not a good programmer or I'm not a great",
    "start": "2222480",
    "end": "2228480"
  },
  {
    "text": "programmer I'm a good programmer with great habits so you don't have to be this super amazing programmer to uh do",
    "start": "2228480",
    "end": "2237160"
  },
  {
    "text": "tdd and km Beck himself says he's not actually a great programmer he just has great habits all right now it's time to do a",
    "start": "2237160",
    "end": "2245839"
  },
  {
    "text": "live PDD example on this Podium at a 45° angle so feel free to judge away on how",
    "start": "2245839",
    "end": "2252359"
  },
  {
    "text": "this goes all right so I'm going to create I've got this HR System that's",
    "start": "2252359",
    "end": "2257560"
  },
  {
    "text": "kind of like keeping track of employees in your company and things like that so I'm going to make I'm going to uh have a",
    "start": "2257560",
    "end": "2264520"
  },
  {
    "text": "validation class that's kind of like validating you know some data about the employee so I'm going to call say I'm",
    "start": "2264520",
    "end": "2270400"
  },
  {
    "text": "going to make employee validator tests can everybody see that okay in the back",
    "start": "2270400",
    "end": "2275800"
  },
  {
    "text": "seeing heads nod okay thumbs up cool so I'm going to create this employee validator and as part of that I'm going",
    "start": "2275800",
    "end": "2283440"
  },
  {
    "text": "to um create this employee validator class so a lot of times I'll say just take the class name and then suffix test",
    "start": "2283440",
    "end": "2289680"
  },
  {
    "text": "onto it or whatever I'm testing and then suffix test and I'm going to uh my test naming convention is usually I'm doing",
    "start": "2289680",
    "end": "2296040"
  },
  {
    "text": "like the thing I'm testing in this case a method and then I'm going to say should do something should uh return",
    "start": "2296040",
    "end": "2302440"
  },
  {
    "text": "error when first name is null so that's usually my default naming",
    "start": "2302440",
    "end": "2308520"
  },
  {
    "text": "convention I don't really care what you use as long as you're consistent um so that's I don't really get too caught up",
    "start": "2308520",
    "end": "2314960"
  },
  {
    "text": "on how people name things as long as you're consistent so I'm going to create a new employee validator",
    "start": "2314960",
    "end": "2321720"
  },
  {
    "text": "class and writer was a little too helpful there and you notice I don't have this class yet so I'm going to go",
    "start": "2321720",
    "end": "2327880"
  },
  {
    "text": "ahead and use writer and create the type for me and I'm actually going to go ahead and move this because I've got a",
    "start": "2327880",
    "end": "2334079"
  },
  {
    "text": "core project I'm going to just go ahead and move this over to uh my core project that way it's kind of out of the way so",
    "start": "2334079",
    "end": "2341319"
  },
  {
    "text": "the next piece of this is I want to actually create an employee object so I'm going to create an employee spelled",
    "start": "2341319",
    "end": "2348400"
  },
  {
    "text": "correctly and you notice I also don't have an employee yet so I'm going to go ahead and create the type so again this",
    "start": "2348400",
    "end": "2354400"
  },
  {
    "text": "is kind of where I deviate from some tdd people who say like a compilation failure is a failure I don't agree",
    "start": "2354400",
    "end": "2360480"
  },
  {
    "text": "because I've had seen too many tests that uh were set up where they never fail so I'm going to go ahead and move",
    "start": "2360480",
    "end": "2367040"
  },
  {
    "text": "that over here too and the other piece of this is I",
    "start": "2367040",
    "end": "2372560"
  },
  {
    "text": "need to actually set first name equal to null so I'm going to go ahead and do that here and again I'll make a compile",
    "start": "2372560",
    "end": "2380280"
  },
  {
    "text": "and switch this to a nailable string and then now I've got you know some of the arranged part of my test set",
    "start": "2380280",
    "end": "2387680"
  },
  {
    "text": "up so now I need to actually do the ACT part so I'm going to go ahead and say I'm going to create this list of validation failures uh validation errors",
    "start": "2387680",
    "end": "2397960"
  },
  {
    "text": "and I'm going to go ahead and call this uh errors and say it's going to be my validator and I'm going to pass in my",
    "start": "2397960",
    "end": "2405480"
  },
  {
    "text": "employee and again I don't have the result or don't have validate here or validation errors so I'm going to go",
    "start": "2405480",
    "end": "2411280"
  },
  {
    "text": "ahead and create those and I'm going to move you as well",
    "start": "2411280",
    "end": "2418040"
  },
  {
    "text": "out going to move it to my core and I'm just going to move it to the models folder and now I'm going to go ahead and",
    "start": "2418560",
    "end": "2425480"
  },
  {
    "text": "create this method and you noticed something I did here was I intentionally was explicit about making my type and",
    "start": "2425480",
    "end": "2433000"
  },
  {
    "text": "also did some of this arrange step before doing my ACT step and so when I uh in my case control dotted it actually",
    "start": "2433000",
    "end": "2440119"
  },
  {
    "text": "created out like hey here's my list of validation failur and here's my employee type so the order in which you do things",
    "start": "2440119",
    "end": "2445720"
  },
  {
    "text": "can make refactoring a lot easier um but I like using VAR so I'm going to go",
    "start": "2445720",
    "end": "2450920"
  },
  {
    "text": "ahead and switch that back to VAR and so now I'm going to say hey my error should",
    "start": "2450920",
    "end": "2457240"
  },
  {
    "text": "contain and one thing to call out here and Dennis is actually here as well is I'm using a uh Library called fluent",
    "start": "2457240",
    "end": "2465040"
  },
  {
    "text": "validation as opposed to the builtin you know assert do whatever buil built into xunit so how many people have used",
    "start": "2465040",
    "end": "2471720"
  },
  {
    "text": "fluent validation or sorry fluent uh assertions before did I say fluent validation I meant fluent assertions",
    "start": "2471720",
    "end": "2477720"
  },
  {
    "text": "okay about half the room cool so all fluent valid or fluent assertion assertions is is it adds the should uh",
    "start": "2477720",
    "end": "2485880"
  },
  {
    "text": "extension method on the object and then you get some nice helper methods like should contain and things like that so",
    "start": "2485880",
    "end": "2491480"
  },
  {
    "text": "reads A Lot cleaner reads a lot more readable and they've got like a bunch of other uh helpers for like creating you",
    "start": "2491480",
    "end": "2497960"
  },
  {
    "text": "know comparing two objects to see if they're equivalent and things like that so if you haven't use flu assertions I'd",
    "start": "2497960",
    "end": "2503400"
  },
  {
    "text": "highly recommend it because of all the reasons I just mentioned okay so I'm going to make a new validation error",
    "start": "2503400",
    "end": "2510000"
  },
  {
    "text": "saying hey it should contain this and I'm going to say hey it should contain the employee employee",
    "start": "2510000",
    "end": "2517720"
  },
  {
    "text": "employe first name so I want to know what property failed and then I'm going to say the messages first name is",
    "start": "2517720",
    "end": "2523599"
  },
  {
    "text": "required so something like that notice I don't have a Constructor on this yet so",
    "start": "2523599",
    "end": "2529079"
  },
  {
    "text": "I'm going to go ahead and make that and I'm actually going to decide to turn this into a record now um so I'm going",
    "start": "2529079",
    "end": "2535960"
  },
  {
    "text": "to go ahead and turn this into a record and pass in",
    "start": "2535960",
    "end": "2541280"
  },
  {
    "text": "that and go ahead and say this is property name and then error message",
    "start": "2541280",
    "end": "2547599"
  },
  {
    "text": "oops if I could spell error message correctly Okay cool so I've got my uh",
    "start": "2547599",
    "end": "2553359"
  },
  {
    "text": "validation error and again I like creating the actual uh code so that it compiles because again I think um it",
    "start": "2553359",
    "end": "2560839"
  },
  {
    "text": "tells you a lot more out of this uh then if you don't uh if you just let a compilation failure indicate red um so",
    "start": "2560839",
    "end": "2568680"
  },
  {
    "text": "I'm missing a semicolon here let me go ahead and run that",
    "start": "2568680",
    "end": "2574760"
  },
  {
    "text": "test so what what I should get out of this is if I put these side by side is I should get a not implemented exception",
    "start": "2574760",
    "end": "2581480"
  },
  {
    "text": "because I haven't actually written the code yet and you notice that is exactly what I get is I get a not implemented",
    "start": "2581480",
    "end": "2586640"
  },
  {
    "text": "exception cool so I'm going to rip this over here and collapse you so now what I need",
    "start": "2586640",
    "end": "2595200"
  },
  {
    "text": "to do is I need to return a validation failure that says hey first name is required with the first name property so",
    "start": "2595200",
    "end": "2600680"
  },
  {
    "text": "the stupid thing I can do is I can just say return new list of validation errors",
    "start": "2600680",
    "end": "2605880"
  },
  {
    "text": "and and uh just new up a validation error here and say okay name of employee",
    "start": "2605880",
    "end": "2611680"
  },
  {
    "text": "do employee. first name and say first name is required",
    "start": "2611680",
    "end": "2618040"
  },
  {
    "text": "right so that's the simplest thing I could possibly do to make this test pass so now you notice I've got a green test",
    "start": "2618040",
    "end": "2626079"
  },
  {
    "text": "cool problem is uh you all know that that's probably not going to work out for me long term so this is where the",
    "start": "2626079",
    "end": "2632280"
  },
  {
    "text": "next step of tdd comes in where I'm thinking about like okay what should I do next uh well I do have a refactor opportunity",
    "start": "2632280",
    "end": "2638599"
  },
  {
    "text": "because I just made my test green but I'm not going to refactor quite yet so I'm going to go ahead and make my next test and go ahead and duplicate this",
    "start": "2638599",
    "end": "2645839"
  },
  {
    "text": "just in the interest of time and say I should not return an error when first name is not null right",
    "start": "2645839",
    "end": "2654319"
  },
  {
    "text": "so then all I need to do here is basically say hey this should be like something random uh there's libraries",
    "start": "2654319",
    "end": "2660800"
  },
  {
    "text": "out there like bogus and things like that but I'm just going to create a new guid just to indicate to whoever's reading this that hey the value doesn't",
    "start": "2660800",
    "end": "2667240"
  },
  {
    "text": "actually matter uh could be anything and then I'm going to tell fluent assertions hey this should not contain uh this",
    "start": "2667240",
    "end": "2674599"
  },
  {
    "text": "validation error so I'm going to go ahead and run that test and you notice it fails because",
    "start": "2674599",
    "end": "2680960"
  },
  {
    "text": "it's saying hey uh I expected this not to contain this but it totally did which is true because I just hardcoded it so",
    "start": "2680960",
    "end": "2688400"
  },
  {
    "text": "let's go ahead and refactor refactor this out now so I'm going to not",
    "start": "2688400",
    "end": "2693760"
  },
  {
    "text": "highlight too much I'm going to say I'm going to go ahead and just do something simple like this and say hey I'm going",
    "start": "2693760",
    "end": "2699319"
  },
  {
    "text": "to create a new list of errors I'm going to return that and I'm going to go ahead and grab my validation error here and",
    "start": "2699319",
    "end": "2706800"
  },
  {
    "text": "just say hey uh if employee. first name is equal to null then go ahead and add",
    "start": "2706800",
    "end": "2713960"
  },
  {
    "text": "this error here right so I'm just going to do something simple there if I could type",
    "start": "2713960",
    "end": "2719400"
  },
  {
    "text": "first name correctly so I'm just going to do something simple like that and go ahead and rerun the test so now you",
    "start": "2719400",
    "end": "2726680"
  },
  {
    "text": "should see that test passes and if I rerun all of them all of the tests pass",
    "start": "2726680",
    "end": "2732119"
  },
  {
    "text": "so this was an example of just kind of showing you kind of that flow of tdd and kind of how I go about it where I",
    "start": "2732119",
    "end": "2738760"
  },
  {
    "text": "actually create the different classes uh different methods all of those kinds of things uh as part of uh my tdd flow but",
    "start": "2738760",
    "end": "2747839"
  },
  {
    "text": "now we've got a refactor opportunity so I'm starting to notice there's a lot of duplication here so I notice like",
    "start": "2747839",
    "end": "2753599"
  },
  {
    "text": "employee for instance is duplicated so I'm going to trigger some people by moving that out into uh the Constructor",
    "start": "2753599",
    "end": "2760880"
  },
  {
    "text": "because I like my Constructors to kind of just have uh the happy path in them and then I can start using that here as",
    "start": "2760880",
    "end": "2768839"
  },
  {
    "text": "well and just say hey I shouldn't have deleted all that I should have kept some of that but I'm going to go ahead and say hey I'm just going to use employee.",
    "start": "2768839",
    "end": "2775800"
  },
  {
    "text": "first name here and then uh go ahead and set that as well so I can rerun my tests",
    "start": "2775800",
    "end": "2781520"
  },
  {
    "text": "make sure everything's still good and everything is",
    "start": "2781520",
    "end": "2787240"
  },
  {
    "text": "cool and so now I can start refactoring even further right so like I can take this validator for instance and move it",
    "start": "2787240",
    "end": "2793160"
  },
  {
    "text": "up the Constructor as well so that way it runs before each test and then I'm not neing this up and so I'm just uh you",
    "start": "2793160",
    "end": "2800240"
  },
  {
    "text": "know refactoring some duplication that I see uh throughout the test and I can keep going to like this validation error",
    "start": "2800240",
    "end": "2806040"
  },
  {
    "text": "for instance I could rip that out as well um but hopefully you see the point of kind of like when you when you're in",
    "start": "2806040",
    "end": "2811599"
  },
  {
    "text": "this refactor stage you can start um refactoring how different parts of your application work but don't change both",
    "start": "2811599",
    "end": "2818240"
  },
  {
    "text": "your test code and your production code at the same time change refactor one run the test make sure it's still passes",
    "start": "2818240",
    "end": "2824640"
  },
  {
    "text": "then run the next one so you don't act accidentally uh screw something up or your test doesn't actually test what you were trying to",
    "start": "2824640",
    "end": "2831960"
  },
  {
    "text": "test cool uh so we got like 13 minutes here um so I'll just leave it at that",
    "start": "2831960",
    "end": "2837119"
  },
  {
    "text": "for now um but we're going to take a slight tdd detour uh to talk about this",
    "start": "2837119",
    "end": "2842760"
  },
  {
    "text": "guy does anybody know who this is if anybody does I'll be super",
    "start": "2842760",
    "end": "2848760"
  },
  {
    "text": "impressed it's a writer yeah yep it's a Russian writer yes so his name is Anton",
    "start": "2848760",
    "end": "2854760"
  },
  {
    "text": "checkov so what he said uh he wrote plays and so what he said was hey if you've got a gun hanging on a wall in",
    "start": "2854760",
    "end": "2861440"
  },
  {
    "text": "like the First Act that gun better fire off in a later act otherwise that gun shouldn't be hanging on the wall because",
    "start": "2861440",
    "end": "2866760"
  },
  {
    "text": "it has no purpose right and so you might be wondering okay that's cool like I",
    "start": "2866760",
    "end": "2871800"
  },
  {
    "text": "didn't know I was involved in for history lesson like how does that apply to writing tests so let's apply check off's gun to",
    "start": "2871800",
    "end": "2880680"
  },
  {
    "text": "testing here so this is very similar to what we just did um but what is violating check off's gun where",
    "start": "2880680",
    "end": "2887119"
  },
  {
    "text": "everything that you see should have a purpose in this",
    "start": "2887119",
    "end": "2892480"
  },
  {
    "text": "test yep initializing all the fields even though all you care about is last name right so we're initializing",
    "start": "2893760",
    "end": "2900680"
  },
  {
    "text": "SpongeBob and his address and his birth date even though it doesn't really uh matter to this test because all we care",
    "start": "2900680",
    "end": "2906760"
  },
  {
    "text": "about is last name uh that's all we care about right there so what you could do",
    "start": "2906760",
    "end": "2911880"
  },
  {
    "text": "in a refactor opportunity is you could rip that out creating a customer out into its own method or another class or",
    "start": "2911880",
    "end": "2918119"
  },
  {
    "text": "something and then just explicitly set last name um so that's something that's useful so now it's like pretty obvious",
    "start": "2918119",
    "end": "2924920"
  },
  {
    "text": "like okay this just is dealing with last name but just like I did before is I usually go next level and I put my happy",
    "start": "2924920",
    "end": "2932000"
  },
  {
    "text": "path in the setup of my test so uh an xunit that's in the Constructor and then each test I'm just kind of",
    "start": "2932000",
    "end": "2937480"
  },
  {
    "text": "tweaking the side path uh as you go and so it's indicating like hey uh all we",
    "start": "2937480",
    "end": "2943040"
  },
  {
    "text": "care about here is last name but there's some other duplication here too um with the customer validator so like I'm neing",
    "start": "2943040",
    "end": "2949359"
  },
  {
    "text": "up the customer validator in there too so if I ever add a dependency now I got to go change it in all my tests so I",
    "start": "2949359",
    "end": "2954920"
  },
  {
    "text": "also usually knew up the system under test in the Constructor as well and rip",
    "start": "2954920",
    "end": "2960559"
  },
  {
    "text": "that out uh just like I did earlier as well so if we kind of compare these two",
    "start": "2960559",
    "end": "2966920"
  },
  {
    "text": "uh C bases at the end you can see like one's got a lot more uh I think there's like 12 lines of code there or 10 lines",
    "start": "2966920",
    "end": "2973880"
  },
  {
    "text": "of code and this one's got three um so we've just reduced like the uh amount of code that's in this test by like double",
    "start": "2973880",
    "end": "2981319"
  },
  {
    "text": "and so like if you're setting up mocks for instance uh and we can get into that a little bit later if you're setting up",
    "start": "2981319",
    "end": "2987079"
  },
  {
    "text": "mocks I would set up the happy path of your mock inside of your Constructor that way you're not duplicating that everywhere and just changing like the",
    "start": "2987079",
    "end": "2994799"
  },
  {
    "text": "sad path of your mock uh in the test for instance so I see a lot of people will",
    "start": "2994799",
    "end": "2999880"
  },
  {
    "text": "do a bunch of setup uh that they could have ripped out into the Constructor so that's kind of check off's gun applied",
    "start": "2999880",
    "end": "3005280"
  },
  {
    "text": "to testing so uh if you think about like as you're writing tests does what I'm setting up actually apply to uh this",
    "start": "3005280",
    "end": "3013119"
  },
  {
    "text": "test and is there anything I could do to refactor that out and now when you watch a TV show or a movie and you see a",
    "start": "3013119",
    "end": "3019280"
  },
  {
    "text": "detail and you're like oh that's totally going to come back up later and then it doesn't you'll be sad and you'll realize that you know like Game of Thrones for",
    "start": "3019280",
    "end": "3025040"
  },
  {
    "text": "instance violates checkov gun all right uh sorry if I just triggered anybody uh by what happened",
    "start": "3025040",
    "end": "3031839"
  },
  {
    "text": "with Game of Thrones um all right so let's talk about different types of tdd",
    "start": "3031839",
    "end": "3037920"
  },
  {
    "text": "uh as well so there's a few different forms of TD so there's what's called bottom up uh tdd or Detroit but I like",
    "start": "3037920",
    "end": "3045280"
  },
  {
    "text": "the word bottom up uh we'll talk a about that in a second and then there's also topown or London or acceptance test room",
    "start": "3045280",
    "end": "3051559"
  },
  {
    "text": "development uh is another form as well so so what bottom up is is basically you",
    "start": "3051559",
    "end": "3057240"
  },
  {
    "text": "build the bottommost layers of your application first so what this means is in fair warning this is a trigger",
    "start": "3057240",
    "end": "3063839"
  },
  {
    "text": "warning to some people because some people don't like repositories uh if you've ever been following some of that",
    "start": "3063839",
    "end": "3069960"
  },
  {
    "text": "uh craziness on Twitter uh but what this means is like you would start with like your database layer so like your",
    "start": "3069960",
    "end": "3075520"
  },
  {
    "text": "repository first maybe test that in isolation and then slowly build your work your way up to like a service or",
    "start": "3075520",
    "end": "3080880"
  },
  {
    "text": "Handler depending on whatever your application's architecture is and then eventually move up to the controller and",
    "start": "3080880",
    "end": "3086559"
  },
  {
    "text": "then uh also then like you know at the end probably add an integration test for some happy paths and things like that as",
    "start": "3086559",
    "end": "3092599"
  },
  {
    "text": "well so what I found is it's a lot easier to teach people bottom up uh than",
    "start": "3092599",
    "end": "3098280"
  },
  {
    "text": "it is to teach somebody top down test driv development because usually in top down there's a lot more moving pieces",
    "start": "3098280",
    "end": "3103720"
  },
  {
    "text": "going on and bottom up you're kind of stitching together like oh okay I just created a repository now I'm usually",
    "start": "3103720",
    "end": "3109720"
  },
  {
    "text": "have a service or a Handler that talks to the repository so then you kind of like incrementally work your way up up",
    "start": "3109720",
    "end": "3115520"
  },
  {
    "text": "and you kind of know uh the different pieces that you've already created versus top down kind of takes the",
    "start": "3115520",
    "end": "3120680"
  },
  {
    "text": "opposite approach of that where basically you start with some sort of failing integration or acceptance test",
    "start": "3120680",
    "end": "3126760"
  },
  {
    "text": "and then you start with a controller and kind of test test that in isolation and",
    "start": "3126760",
    "end": "3131839"
  },
  {
    "text": "then usually like you're like oh this controller talks to a service so I'm going to go ahead and mock out the service and test that in isolation or",
    "start": "3131839",
    "end": "3139119"
  },
  {
    "text": "you know a Handler whatever you're doing and then you know that usually talks to repository so then I'm going to go ahead",
    "start": "3139119",
    "end": "3144760"
  },
  {
    "text": "and mock that out and so typically with top down things are pretty mock heavy um",
    "start": "3144760",
    "end": "3149880"
  },
  {
    "text": "so that can be a downside of top down as you're kind of starting with uh the topmost and then kind of working your",
    "start": "3149880",
    "end": "3156280"
  },
  {
    "text": "way down so these are kind of two different approaches for uh handling testerone",
    "start": "3156280",
    "end": "3161760"
  },
  {
    "text": "development so neither style is correct and actually kind of mix and match the",
    "start": "3161760",
    "end": "3167480"
  },
  {
    "text": "two um so just pick the style that makes sense for you some people resonate with top down like I know some people who",
    "start": "3167480",
    "end": "3173040"
  },
  {
    "text": "I've worked with uh really like top down and some people people really like bottom up it just kind of depends on",
    "start": "3173040",
    "end": "3178119"
  },
  {
    "text": "what style makes sense for you so I usually mix these so I usually start with like an a failing failing acceptance test and then kind of do",
    "start": "3178119",
    "end": "3184680"
  },
  {
    "text": "bottom up from there so I kind of do a mix of top down and bottom up um but uh",
    "start": "3184680",
    "end": "3190240"
  },
  {
    "text": "the reason for that is because I think having a failing acceptance test kind of uh targets me on like the user's",
    "start": "3190240",
    "end": "3195599"
  },
  {
    "text": "behavior and then I work my way up from there and bottom up just kind of resonates with me and makes a lot more",
    "start": "3195599",
    "end": "3201119"
  },
  {
    "text": "sense uh to me but sometimes I will delete the tests after I'm done uh at",
    "start": "3201119",
    "end": "3208319"
  },
  {
    "text": "the end if I don't think that they're useful to keep around so let's say I've got an acceptance test and then uh you",
    "start": "3208319",
    "end": "3214119"
  },
  {
    "text": "know there's only a happy path for that acceptance test like there's no sad paths uh the like Intermediate Unit",
    "start": "3214119",
    "end": "3220079"
  },
  {
    "text": "tests I create might not be useful because they're kind of duplicating what the acceptance test does so sometimes",
    "start": "3220079",
    "end": "3225240"
  },
  {
    "text": "I'll delete the unit test and keep the acceptance test around if I don't think that they're useful but again tdd",
    "start": "3225240",
    "end": "3231680"
  },
  {
    "text": "focuses me it adds uh Clarity in what I'm working on it helps me get design feedback so those tests were still",
    "start": "3231680",
    "end": "3237640"
  },
  {
    "text": "useful even if I'm not keeping them around at the end so yeah that's okay that they helped me",
    "start": "3237640",
    "end": "3243720"
  },
  {
    "text": "design so I get this uh argument from people of like I don't have time to",
    "start": "3243720",
    "end": "3249400"
  },
  {
    "text": "write tests I just got a ship okay and then I'm like well why don't you have time and then they're like well I'm",
    "start": "3249400",
    "end": "3256400"
  },
  {
    "text": "spending too much time like dealing with bug fixes because the code sucks because",
    "start": "3256400",
    "end": "3262599"
  },
  {
    "text": "I didn't write tests and that and you getting like this vicious cycle of like",
    "start": "3262599",
    "end": "3268400"
  },
  {
    "text": "uh you know you're just stuck doing so much support work because you don't have that confidence in those tests around it",
    "start": "3268400",
    "end": "3274400"
  },
  {
    "text": "or like I'll get this argument too of like oh my boss won't let me write tests right and so I like to think about this",
    "start": "3274400",
    "end": "3281760"
  },
  {
    "text": "person like what if you were going in for surgery and they're like hey uh this surgery is going to take like 10 hours",
    "start": "3281760",
    "end": "3288280"
  },
  {
    "text": "and you're like you know what doc 10 hours doesn't work for me how about you do it in an",
    "start": "3288280",
    "end": "3294079"
  },
  {
    "text": "hour would you want to go to that surgeon he was like okay yeah I can do that I'll just not like I'll just use",
    "start": "3294079",
    "end": "3299880"
  },
  {
    "text": "one stitch instead of 50 like I'll just you know not clean my clean my utensils",
    "start": "3299880",
    "end": "3305119"
  },
  {
    "text": "like all that kind of stuff is utensils the right word probably not tools uh so",
    "start": "3305119",
    "end": "3310760"
  },
  {
    "text": "like think about like uh think about this person and like you know if this if you're cool with this person taking a",
    "start": "3310760",
    "end": "3316920"
  },
  {
    "text": "shortcut like are you cool with this person taking shortcuts probably not so you probably shouldn't be taking",
    "start": "3316920",
    "end": "3322400"
  },
  {
    "text": "shortcuts uh a lot of times either the other thing I see is people say like",
    "start": "3322400",
    "end": "3328880"
  },
  {
    "text": "oh you know I tried tdd and it just didn't work for me and I'm like cool how long how long did you do try tdd for H I",
    "start": "3328880",
    "end": "3334880"
  },
  {
    "text": "don't know like 30 minutes and I'm like oh okay like how long have you been doing net Dev oh I don't know five 10",
    "start": "3334880",
    "end": "3341319"
  },
  {
    "text": "years cool like were you a good donet Dev after 30 minutes probably not right so like uh if",
    "start": "3341319",
    "end": "3349079"
  },
  {
    "text": "you're interested in tdd and it's hard at first just kind of you can keep sticking with it because again you don't",
    "start": "3349079",
    "end": "3354359"
  },
  {
    "text": "get better at things things uh by not doing tdd so if you're interested in tddd you just kind of have to keep try",
    "start": "3354359",
    "end": "3359880"
  },
  {
    "text": "uh uh keep trying it and eventually things will start to click a lot better as you keep going but like one way you",
    "start": "3359880",
    "end": "3366720"
  },
  {
    "text": "can get started is like the next time you have a bug report come in you can say like okay I'm going to tddd this",
    "start": "3366720",
    "end": "3372119"
  },
  {
    "text": "feature because you could write a failing test that proves that bug exists and then write the implementation code",
    "start": "3372119",
    "end": "3378039"
  },
  {
    "text": "that proves that you fixed the bug right so like that's a really good place to start is the next time you have a bug report come in not that any of us ever",
    "start": "3378039",
    "end": "3384319"
  },
  {
    "text": "write bugs ever but if you were such a person that did uh that's an that's a good time to uh start doing tdd is to uh",
    "start": "3384319",
    "end": "3393079"
  },
  {
    "text": "create a bug or create a failing test that proves that bug exists and then make it pass to prove that uh you fixed",
    "start": "3393079",
    "end": "3401039"
  },
  {
    "text": "it all right uh so we're at the end here uh so some takeaways hopefully that you",
    "start": "3401039",
    "end": "3406440"
  },
  {
    "text": "got out of this is just what kinds of tests are out there like unit tests integration tests and end tests uh some",
    "start": "3406440",
    "end": "3412440"
  },
  {
    "text": "ideas of why you should tdd and what to test test and then hopefully the check offs gun example is useful even if",
    "start": "3412440",
    "end": "3419079"
  },
  {
    "text": "you're just uh not doing TD and just writing tests and then also if you're interested in getting started uh the",
    "start": "3419079",
    "end": "3424720"
  },
  {
    "text": "next time you have a bug is a really good way to get started with tdd uh like I said I have posted these",
    "start": "3424720",
    "end": "3431000"
  },
  {
    "text": "slides up on my blog it's just my first and last name Scotts sober.com uh and I intentionally create them pretty",
    "start": "3431000",
    "end": "3436880"
  },
  {
    "text": "detailed so you can remember what I said because I always hate downloading slides and they're just like pictures and I'm",
    "start": "3436880",
    "end": "3442079"
  },
  {
    "text": "like I don't remember what they said about this picture so hopefully uh leaving them detailed helped uh I do",
    "start": "3442079",
    "end": "3448440"
  },
  {
    "text": "have a YouTube on tdd react if you're interested and then on November 9th I'm giving a",
    "start": "3448440",
    "end": "3454280"
  },
  {
    "text": "tdd uh webinar for Blazer specifically uh where I'm going to be tdd an entire",
    "start": "3454280",
    "end": "3459720"
  },
  {
    "text": "feature uh on November 9th with jet brains so if you're interested in that you can check that out so with that we've got a few minutes",
    "start": "3459720",
    "end": "3467319"
  },
  {
    "text": "two minutes for questions any questions anybody has yeah",
    "start": "3467319",
    "end": "3473799"
  },
  {
    "text": "yep",
    "start": "3473799",
    "end": "3476799"
  },
  {
    "text": "yep",
    "start": "3483880",
    "end": "3486880"
  },
  {
    "text": "yep yep yeah so the question was around uh like the employee has some rules",
    "start": "3489160",
    "end": "3495400"
  },
  {
    "text": "around the first name should never be null for instance but the uh implementation says that uh can be null",
    "start": "3495400",
    "end": "3501599"
  },
  {
    "text": "so like that that object I had would probably be more like a request object from an API where like they could pass",
    "start": "3501599",
    "end": "3507559"
  },
  {
    "text": "me a null for instance and I want to like gather up all the validation errors and kind of return them back so that",
    "start": "3507559",
    "end": "3512799"
  },
  {
    "text": "probably wouldn't be like the based employee uh class for instance it probably be like more like the request object but yeah there's some uh debate",
    "start": "3512799",
    "end": "3521039"
  },
  {
    "text": "on the debate even in that uh space as well because I've seen some people who like return one validation error at a",
    "start": "3521039",
    "end": "3528079"
  },
  {
    "text": "time which from an API perspective is like not fun to deal with because you don't get all of those back at once so",
    "start": "3528079",
    "end": "3536720"
  },
  {
    "text": "yeah so so the question was are there are there any outputs uh after you run",
    "start": "3552880",
    "end": "3558000"
  },
  {
    "text": "the test of like what like documentation or no I think so you",
    "start": "3558000",
    "end": "3563640"
  },
  {
    "text": "have",
    "start": "3563640",
    "end": "3566640"
  },
  {
    "text": "yep yep yeah so uh yeah I guess I didn't think out loud because I had the demo in",
    "start": "3571880",
    "end": "3578119"
  },
  {
    "text": "my head uh so yeah that's that's totally valid is that is that what you're saying yeah I",
    "start": "3578119",
    "end": "3585440"
  },
  {
    "text": "thinks",
    "start": "3593640",
    "end": "3596640"
  },
  {
    "text": "okay so I see what you're saying so yes you're saying what's the output after you think um like is there any",
    "start": "3599559",
    "end": "3605599"
  },
  {
    "text": "documentation or things things of that nature um I mean I definitely have like done whiteboarding session like",
    "start": "3605599",
    "end": "3611559"
  },
  {
    "text": "whiteboarding thinking thinking about things but I usually don't have like a specific output but sometimes I might",
    "start": "3611559",
    "end": "3616920"
  },
  {
    "text": "like make notes to myself too um of like okay here's kind of where I think we should go um and things like that so",
    "start": "3616920",
    "end": "3623440"
  },
  {
    "text": "like there's not really always a specific output out of the think step um but there totally can be if you want if",
    "start": "3623440",
    "end": "3628799"
  },
  {
    "text": "you want there to be um but I think the challenge is also not thinking too far",
    "start": "3628799",
    "end": "3634599"
  },
  {
    "text": "ahead too so like don't try and like design it all up front just like design what you're initially trying to do so uh",
    "start": "3634599",
    "end": "3641880"
  },
  {
    "text": "yeah there's and I find this is like really hard to talk in the abstract so if you have a specific example like uh",
    "start": "3641880",
    "end": "3647240"
  },
  {
    "text": "we can talk through it uh afterwards but yeah generally like try and think enough but not too much which is a terrible",
    "start": "3647240",
    "end": "3652920"
  },
  {
    "text": "answer but I can give you more specific example if you have one",
    "start": "3652920",
    "end": "3659720"
  },
  {
    "text": "yeah do you want to repeat that question hello hey uh so my question is",
    "start": "3664400",
    "end": "3671079"
  },
  {
    "text": "what are some common pitfalls when developers start with tdd encounter yep",
    "start": "3671079",
    "end": "3676119"
  },
  {
    "text": "so some common pitfalls I would see I would say are is if things are too",
    "start": "3676119",
    "end": "3681760"
  },
  {
    "text": "tightly coupled to implementation details where um there's a lot of like because like",
    "start": "3681760",
    "end": "3686880"
  },
  {
    "text": "basically anytime you introduce a mock you're kind of gluing your test code to your implementation details and so",
    "start": "3686880",
    "end": "3693359"
  },
  {
    "text": "sometimes when people use mocks too heavily it can actually make refactoring harder because like their tests are kind",
    "start": "3693359",
    "end": "3699440"
  },
  {
    "text": "of glued to their implementation details so sometimes people will um kind of I",
    "start": "3699440",
    "end": "3706079"
  },
  {
    "text": "guess glue themselves to the implementation details which then actually disables re like a big refactoring uh versus enables",
    "start": "3706079",
    "end": "3713200"
  },
  {
    "text": "refactoring so so that that would be a downside I guess the other thing is just",
    "start": "3713200",
    "end": "3718559"
  },
  {
    "text": "um people who are new to it uh if you're brand new to it sometimes it can be difficult to think about like okay I'm",
    "start": "3718559",
    "end": "3724599"
  },
  {
    "text": "writing a test before I actually write any code and thinking through that situation so for that I try and think about like what Behavior am I trying to",
    "start": "3724599",
    "end": "3730680"
  },
  {
    "text": "see in my system uh and can I focus on that thank you yep yeah one",
    "start": "3730680",
    "end": "3736520"
  },
  {
    "text": "more if you have questions later just come up come up after I'll I'll chat with you my question is about uh uh you",
    "start": "3736520",
    "end": "3743599"
  },
  {
    "text": "told about the that we have two approaches like from top down and from bottom up I was thinking that when we",
    "start": "3743599",
    "end": "3750039"
  },
  {
    "text": "have the clean architecture and we centralized business logic why should not we start from the middle is anything",
    "start": "3750039",
    "end": "3756359"
  },
  {
    "text": "such kind of so that's a good question uh so I guess it I guess bottom up is",
    "start": "3756359",
    "end": "3761799"
  },
  {
    "text": "kind of depending on what your bottom is so like if you're if you do like have like you know your domain logic kind of",
    "start": "3761799",
    "end": "3768720"
  },
  {
    "text": "in the center for instance um you could start there too um just eventually you're going to have to connect that up",
    "start": "3768720",
    "end": "3773839"
  },
  {
    "text": "to something something else so um it kind of depends on how your applications set up so whatever bottom of your",
    "start": "3773839",
    "end": "3780039"
  },
  {
    "text": "application is for you and what makes sense for you uh don't don't get married to like you have to start with a database for instance you can uh you can",
    "start": "3780039",
    "end": "3787119"
  },
  {
    "text": "just start with at the bottom because sometimes we don't have a database right like if you're just writing a library there is no database in that case so",
    "start": "3787119",
    "end": "3793960"
  },
  {
    "text": "whatever the bottom of your application is uh to your entry point that's kind of where you start and work your way up so",
    "start": "3793960",
    "end": "3799640"
  },
  {
    "text": "it's a good question thank all right uh a couple minutes over",
    "start": "3799640",
    "end": "3805119"
  },
  {
    "text": "so that's all I got so if you have any questions feel free to uh stop up otherwise thanks",
    "start": "3805119",
    "end": "3810400"
  },
  {
    "text": "everybody",
    "start": "3810400",
    "end": "3813400"
  }
]