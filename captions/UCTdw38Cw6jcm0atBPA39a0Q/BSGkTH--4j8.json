[
  {
    "text": "welcome everyone my name is Imad alashi I work for a",
    "start": "6600",
    "end": "12240"
  },
  {
    "text": "company called insight and today we are going to talk about the publish And subscribe component in dapper",
    "start": "12240",
    "end": "20100"
  },
  {
    "text": "I'll try to make this talk as interactive as possible so if you have any questions during the talk feel free",
    "start": "20100",
    "end": "26699"
  },
  {
    "text": "to raise your hand if you if I know the answer I'll answer you if I don't know the answer I'll",
    "start": "26699",
    "end": "33239"
  },
  {
    "text": "act as if I didn't understand the words so all right so before we talk about",
    "start": "33239",
    "end": "41640"
  },
  {
    "text": "this yeah let me it's a good idea to put my dongle in one second to",
    "start": "41640",
    "end": "49020"
  },
  {
    "text": "to what to do what exactly to be able to play with the mouse",
    "start": "49020",
    "end": "55399"
  },
  {
    "text": "we had some issues before you just joined this joined in the screen was",
    "start": "55500",
    "end": "60840"
  },
  {
    "text": "flickering and the HDMI did not uh allow us to do this the easy way so",
    "start": "60840",
    "end": "67020"
  },
  {
    "text": "we are doing it the hard way let me see if this works now and",
    "start": "67020",
    "end": "73039"
  },
  {
    "text": "plug this in see if this works ah beautiful all right so",
    "start": "73200",
    "end": "80100"
  },
  {
    "text": "before we talk about the pub and sub component in DARPA let's talk about Dapper itself",
    "start": "80100",
    "end": "86700"
  },
  {
    "text": "what Dapper is really dapa is a runtime that helps creating",
    "start": "86700",
    "end": "94200"
  },
  {
    "text": "resilient event driven stateful and stateless microservices",
    "start": "94200",
    "end": "100380"
  },
  {
    "text": "you will not see the word microservices in the documentation probably they are trying to make it work for any",
    "start": "100380",
    "end": "106200"
  },
  {
    "text": "application really but mainly it's for microservices if you have a lot of applications and services that talk to",
    "start": "106200",
    "end": "112560"
  },
  {
    "text": "each other Dapper is eventually or is started by Microsoft it was created by Microsoft",
    "start": "112560",
    "end": "118680"
  },
  {
    "text": "and still maintained by Microsoft however it's donated to the cloud native Computing Foundation",
    "start": "118680",
    "end": "126420"
  },
  {
    "text": "so this gives you gives you an understanding who is doing the governance really who's really really uh",
    "start": "126420",
    "end": "132540"
  },
  {
    "text": "owning I I'm I should be careful of saying the word awning but you can understand that this uh open source",
    "start": "132540",
    "end": "139980"
  },
  {
    "text": "project is uh with the cloud native Computing foundation and you get all the benefits of of having it being supported",
    "start": "139980",
    "end": "147120"
  },
  {
    "text": "by such an organization all right how does dapper really work",
    "start": "147120",
    "end": "152580"
  },
  {
    "text": "this is uh important for us to understand uh in order to understand the pub sub component",
    "start": "152580",
    "end": "158940"
  },
  {
    "text": "I'm gonna use my laser if it works uh if if anyone has uh issues with seeing my",
    "start": "158940",
    "end": "165599"
  },
  {
    "text": "laser tell me I can use my computer to point to stuff so raise your hands I'm gonna keep an eye",
    "start": "165599",
    "end": "172920"
  },
  {
    "text": "every hexagon here we have is an application or represents a service that",
    "start": "172920",
    "end": "178860"
  },
  {
    "text": "you're running microservice an application web application if you opt in to use dapa you will have",
    "start": "178860",
    "end": "186300"
  },
  {
    "text": "a double sitting next to your application so if you if you have a application you",
    "start": "186300",
    "end": "191700"
  },
  {
    "text": "run it in your localhost you also have a dapper process that is running next to",
    "start": "191700",
    "end": "197220"
  },
  {
    "text": "your web application and I'm saying web application I'm not I'm sorry I'm I'm choosing this world",
    "start": "197220",
    "end": "202800"
  },
  {
    "text": "because Dapper can be run on in kubernetes as a sidecar in the same pod",
    "start": "202800",
    "end": "210060"
  },
  {
    "text": "as a container but it also can run on a normal machine VM if you if your",
    "start": "210060",
    "end": "216120"
  },
  {
    "text": "applications if you if you opt in for microservices but you did not opt-in for kubernetes because you can do",
    "start": "216120",
    "end": "222540"
  },
  {
    "text": "microservices without kubernetes maybe it's going to be hard but you can you still can get the benefit of running",
    "start": "222540",
    "end": "228780"
  },
  {
    "text": "dapa on virtual machine next to your application so it's going to run next to your",
    "start": "228780",
    "end": "234299"
  },
  {
    "text": "application and they will talk to each other your application and upper will talk to each other through HTTP or grpc",
    "start": "234299",
    "end": "240599"
  },
  {
    "text": "that's it there's no hard dependency of your application on Dapper other than",
    "start": "240599",
    "end": "246540"
  },
  {
    "text": "having this protocol talking to each other but once you do this with the route configuration you get benefits",
    "start": "246540",
    "end": "252780"
  },
  {
    "text": "things like State Management so for example if your application needs",
    "start": "252780",
    "end": "258120"
  },
  {
    "text": "to store key value pairs uh the typical example these days is redis if you use",
    "start": "258120",
    "end": "264060"
  },
  {
    "text": "release as a key value store for your application once you have adapter next to your",
    "start": "264060",
    "end": "270960"
  },
  {
    "text": "application you can use Dapper to maintain this state management the default",
    "start": "270960",
    "end": "277520"
  },
  {
    "text": "storage for for radio for Dapper is ready this is the that comes with it",
    "start": "277520",
    "end": "282540"
  },
  {
    "text": "however the people or the developers who created data also",
    "start": "282540",
    "end": "287699"
  },
  {
    "text": "created an abstraction layer so that he can opt in four different stores uh the",
    "start": "287699",
    "end": "294120"
  },
  {
    "text": "the ones that you you prefer you can you can use Azure Cosmos DB you can use Dynamo DB",
    "start": "294120",
    "end": "300300"
  },
  {
    "text": "but the default one is with this that comes within and you don't have to install anything else once you install Dapper on your VM and you run Dapper you",
    "start": "300300",
    "end": "308220"
  },
  {
    "text": "already have that State Management we also have service and vacation",
    "start": "308220",
    "end": "314040"
  },
  {
    "text": "so if you if you like like any application once you want a application",
    "start": "314040",
    "end": "320400"
  },
  {
    "text": "running you want probably want to communicate through the outward through your application make HTTP calls",
    "start": "320400",
    "end": "327180"
  },
  {
    "text": "if you do it through dapa you get service on vacation and it will act as a proxy it's not in",
    "start": "327180",
    "end": "334979"
  },
  {
    "text": "exactly like we can say we can't claim it's a proxy but your your channel will you you request through dapper",
    "start": "334979",
    "end": "341400"
  },
  {
    "text": "and Dapper will do these requests on your behalf what are the benefits",
    "start": "341400",
    "end": "346740"
  },
  {
    "text": "it can encrypt the channel for you the communicate the request it can encrypt it or if you have services and you you",
    "start": "346740",
    "end": "353880"
  },
  {
    "text": "uh you want to have mutual TLS between them you do this through Dapper you don't have to do it yourself you also",
    "start": "353880",
    "end": "360419"
  },
  {
    "text": "get things like retries if you send one HTTP request and",
    "start": "360419",
    "end": "366120"
  },
  {
    "text": "Dapper will do this for on your behalf it's going to keep retrying until it succeeds and retain the response for you",
    "start": "366120",
    "end": "371160"
  },
  {
    "text": "it can do circuit breakers and of the like we also have secret management",
    "start": "371160",
    "end": "377160"
  },
  {
    "text": "secret management is exactly or not exactly it's very similar to State Management that's the same idea you can",
    "start": "377160",
    "end": "383520"
  },
  {
    "text": "keep your secret in your Secret store on your machine or or you can also use the",
    "start": "383520",
    "end": "389580"
  },
  {
    "text": "abstraction that is built in Dapper to connect to things like hashicor Vault or the Azure key vault",
    "start": "389580",
    "end": "396060"
  },
  {
    "text": "we also have the input binding and the output binding this is a little bit um",
    "start": "396060",
    "end": "401539"
  },
  {
    "text": "if you if you dealt with Azure functions and you have the concept of executing your code based on events happening",
    "start": "401539",
    "end": "408000"
  },
  {
    "text": "outside it's very similar and last is the publish And subscribe component and",
    "start": "408000",
    "end": "415800"
  },
  {
    "text": "which is the topic that we're going to talk about today it also happens outside of your process next to you in dapa and",
    "start": "415800",
    "end": "424139"
  },
  {
    "text": "it will maintain or it will handle everything that is related to subscribing to message Brokers like",
    "start": "424139",
    "end": "430139"
  },
  {
    "text": "Robert mq already streams another like so this is how in general Dapper works",
    "start": "430139",
    "end": "436860"
  },
  {
    "text": "so this common features collectively it becomes valuable to as a runtime to",
    "start": "436860",
    "end": "442860"
  },
  {
    "text": "support your applications or architecture for microservices world",
    "start": "442860",
    "end": "448380"
  },
  {
    "text": "all right so let's focus on the pub sub part of things however before we talk",
    "start": "448380",
    "end": "453660"
  },
  {
    "text": "about Pub Sub in DARPA we can focus on",
    "start": "453660",
    "end": "459300"
  },
  {
    "text": "uh or just go through How We Do pops up traditionally because it's going to help us to",
    "start": "459300",
    "end": "464940"
  },
  {
    "text": "understand the the value of of Depot in the typical way or the standards or",
    "start": "464940",
    "end": "472220"
  },
  {
    "text": "setup of our applications normally we have application this is our application we have a business uh I'm afraid to say",
    "start": "472220",
    "end": "481139"
  },
  {
    "text": "the word layer because I'm too old for this but it's uh the business logic you",
    "start": "481139",
    "end": "486960"
  },
  {
    "text": "have it in your application on one side and then you have a lot of Plumbing",
    "start": "486960",
    "end": "493020"
  },
  {
    "text": "called that you write in order for you to communicate with the message broker Robert and Q in in this example uh you",
    "start": "493020",
    "end": "500220"
  },
  {
    "text": "want to open the channel you want to create the exchange you want to create the event handler for when the",
    "start": "500220",
    "end": "507120"
  },
  {
    "text": "event is received or the message is received your code is executed you want to close the connection open the",
    "start": "507120",
    "end": "512940"
  },
  {
    "text": "connection all these Plumbing things that you have to write in your code some teams go one step further and they",
    "start": "512940",
    "end": "520919"
  },
  {
    "text": "build an abstraction layer over this plumbing code this gives them the liberty of choosing",
    "start": "520919",
    "end": "528060"
  },
  {
    "text": "their own message broker to to talk to and I can hear some voices that might",
    "start": "528060",
    "end": "534240"
  },
  {
    "text": "happen in your in your head that says oh are we doing repository again the repository purchase button no one",
    "start": "534240",
    "end": "541320"
  },
  {
    "text": "wants to change the database once they're created however with message Brokers it gives",
    "start": "541320",
    "end": "549120"
  },
  {
    "text": "you the benefit of having message brokers",
    "start": "549120",
    "end": "555180"
  },
  {
    "text": "different message Brokers for different scenarios for example if uh if your application your server at",
    "start": "555180",
    "end": "564660"
  },
  {
    "text": "runtime in your production connects to Azure service bus",
    "start": "564660",
    "end": "570200"
  },
  {
    "text": "this is awesome but once you want to develop on your local machine",
    "start": "570959",
    "end": "576240"
  },
  {
    "text": "you don't want to have another service bus Azure service bus running in the cloud for you to run and test things so",
    "start": "576240",
    "end": "583560"
  },
  {
    "text": "what you'd like to you'd like to have many uh Robert mq running on your local machine light version that can help you",
    "start": "583560",
    "end": "591180"
  },
  {
    "text": "code for that with this way with this with this abstraction you get the chance to do this and of course if you want to",
    "start": "591180",
    "end": "598200"
  },
  {
    "text": "change your message broken in the future but this is very common now to to make it easy for Developers",
    "start": "598200",
    "end": "604980"
  },
  {
    "text": "all right Pub sub with dapa what does dapa do what does dapa bring to the",
    "start": "604980",
    "end": "610140"
  },
  {
    "text": "table to make this easier this is a general slide so your",
    "start": "610140",
    "end": "616500"
  },
  {
    "text": "application is Happy is is living in a different process this is the same virtual machine",
    "start": "616500",
    "end": "622080"
  },
  {
    "text": "or the pod in kubernetes your application is running on a different process and DARPA is entirely on a",
    "start": "622080",
    "end": "628920"
  },
  {
    "text": "different process with the route configuration dapa will communicate with your",
    "start": "628920",
    "end": "637260"
  },
  {
    "text": "business logic with through your HTTP or grpc and all the plumbing code that is",
    "start": "637260",
    "end": "644100"
  },
  {
    "text": "required to communicate to the message broker is handled by Dapper itself",
    "start": "644100",
    "end": "650040"
  },
  {
    "text": "all the things that I just example I just mentioned about opening the channel listening to the events so once a message is sent on Robert mq",
    "start": "650040",
    "end": "659100"
  },
  {
    "text": "for example dapa will pick it up and then we'll send it as an HTTP message",
    "start": "659100",
    "end": "665760"
  },
  {
    "text": "audio RPC message to your application so all the the only thing that you need to care about in your application is",
    "start": "665760",
    "end": "672600"
  },
  {
    "text": "creating a couple of endpoints HTTP endpoints or grpc and the logic that you need to do to deal with that message",
    "start": "672600",
    "end": "678779"
  },
  {
    "text": "that's all if we also go one step deeper in in",
    "start": "678779",
    "end": "685140"
  },
  {
    "text": "order to understand how this really works the minute you start up your application",
    "start": "685140",
    "end": "692399"
  },
  {
    "text": "with dapa both processes will start up but the beginning at the beginning your",
    "start": "692399",
    "end": "697980"
  },
  {
    "text": "application will start up before the app it's expected from DARPA let's let's",
    "start": "697980",
    "end": "704519"
  },
  {
    "text": "focus on the subscriber now it's expected that once you create your application that you have such an",
    "start": "704519",
    "end": "711060"
  },
  {
    "text": "endpoint localhost your app port and then I keep",
    "start": "711060",
    "end": "716640"
  },
  {
    "text": "my my pointer is disappearing isn't severe it is disappearing actually this",
    "start": "716640",
    "end": "721740"
  },
  {
    "text": "is so weird okay I'm gonna use my pointer I don't know if it's gonna work",
    "start": "721740",
    "end": "727740"
  },
  {
    "text": "all right control a all right so you can see here",
    "start": "727740",
    "end": "735240"
  },
  {
    "text": "that we have this hard coded it's harder than I thought",
    "start": "735240",
    "end": "740640"
  },
  {
    "text": "with three fingers actually let's see how this works again you can see",
    "start": "740640",
    "end": "746779"
  },
  {
    "text": "ah there you go this part is hard coded in your application or",
    "start": "746779",
    "end": "752760"
  },
  {
    "text": "it's like it's an endpoint that is expected to be living in your application why because Dapper will call",
    "start": "752760",
    "end": "759000"
  },
  {
    "text": "it the minute you start your server and your Dapper side car starts with your application Dapper will call this",
    "start": "759000",
    "end": "766260"
  },
  {
    "text": "endpoint and it will be expecting something like this",
    "start": "766260",
    "end": "773720"
  },
  {
    "text": "you can see here that there we have an array of Json objects and this array of",
    "start": "778200",
    "end": "784980"
  },
  {
    "text": "Json objects these objects are configurations that will tilt upper how to subscribe to the message broker",
    "start": "784980",
    "end": "792720"
  },
  {
    "text": "so the first one you can see that we have the component name that pops up name this is to the to differentiate",
    "start": "792720",
    "end": "799680"
  },
  {
    "text": "between the different component pop sub components in your in your ecosystem we have the topic this means that for",
    "start": "799680",
    "end": "807180"
  },
  {
    "text": "this configuration I want to listen to topic a in the message rocker and for",
    "start": "807180",
    "end": "813959"
  },
  {
    "text": "any message that is sent to the topic a I want it to be routed to the root root",
    "start": "813959",
    "end": "820560"
  },
  {
    "text": "a this is an HTTP endpoint in your application and this is it you are",
    "start": "820560",
    "end": "825720"
  },
  {
    "text": "expected of course to have such an HTTP endpoint and the same configuration for topic B and Route B",
    "start": "825720",
    "end": "833100"
  },
  {
    "text": "so once your application starts up and the upper side card starts up and it",
    "start": "833100",
    "end": "839639"
  },
  {
    "text": "invokes this HTTP endpoint it takes the configuration it stores it inside and then it",
    "start": "839639",
    "end": "845700"
  },
  {
    "text": "subscribes to the message broker based on this configuration the configuration in the yellow box up",
    "start": "845700",
    "end": "851339"
  },
  {
    "text": "there it has the configuration the how it connects to the message broker the the connection the username and password",
    "start": "851339",
    "end": "857339"
  },
  {
    "text": "for that message broker on the publisher side we have also Dapper created uh or sorry",
    "start": "857339",
    "end": "866639"
  },
  {
    "text": "started with us with the publisher but it's going to be a simpler Story the",
    "start": "866639",
    "end": "872220"
  },
  {
    "text": "publisher just needs to send a message HTTP message on this endpoint",
    "start": "872220",
    "end": "879420"
  },
  {
    "text": "your application port or the sorry the Dapper Port the publish word it's",
    "start": "879420",
    "end": "885360"
  },
  {
    "text": "hard-coded it's very it's concrete and then the publish pop sub name this is",
    "start": "885360",
    "end": "891300"
  },
  {
    "text": "the name of the component there Pub sub and the topic that you are sending to to",
    "start": "891300",
    "end": "896880"
  },
  {
    "text": "pick a to pick B this is the mess this is the the where you want the message to be on the queue",
    "start": "896880",
    "end": "904079"
  },
  {
    "text": "the publisher will send the Json to that HTTP endpoint to that topic and",
    "start": "904079",
    "end": "910860"
  },
  {
    "text": "then dapa will make sure that this message is posted to the message broker",
    "start": "910860",
    "end": "916019"
  },
  {
    "text": "once it's posted to the message broker the subscriber will will be listening to",
    "start": "916019",
    "end": "921180"
  },
  {
    "text": "that message that topic will find a message bring it down and send it to your",
    "start": "921180",
    "end": "927480"
  },
  {
    "text": "subscriber as an HTTP endpoint all of this Plumbing",
    "start": "927480",
    "end": "932820"
  },
  {
    "text": "is taken care of for you Dapper is it do it for you all what you need to do as a publisher and subscriber is to surface",
    "start": "932820",
    "end": "939720"
  },
  {
    "text": "these endpoints and expect that you are going to receive a Json message as an as",
    "start": "939720",
    "end": "945600"
  },
  {
    "text": "a message all right now let's dig into the meaty",
    "start": "945600",
    "end": "950699"
  },
  {
    "text": "stuff let's find a demo I really wanted maybe zoom in",
    "start": "950699",
    "end": "957920"
  },
  {
    "text": "in my old days I used to write code live in decisions but I grew old and I'm",
    "start": "957959",
    "end": "964440"
  },
  {
    "text": "falling back to Snippets all right let's go to",
    "start": "964440",
    "end": "970680"
  },
  {
    "text": "Visual Studio code and explore our solution so this I opted in let me",
    "start": "970680",
    "end": "980240"
  },
  {
    "text": "I want to in this presentation because I want to mirror",
    "start": "980240",
    "end": "985920"
  },
  {
    "text": "rather than and is it mirroring yeah beautiful I can",
    "start": "985920",
    "end": "992100"
  },
  {
    "text": "see now here now all right this example is actually",
    "start": "992100",
    "end": "998399"
  },
  {
    "text": "an example from the Dapper Quick Start there is I'm going to provide you a link",
    "start": "998399",
    "end": "1004519"
  },
  {
    "text": "at the end of the talk uh you can go there and use this quick thought however",
    "start": "1004519",
    "end": "1010360"
  },
  {
    "text": "I made some changes to make this more uh like make sense like orders and and",
    "start": "1010360",
    "end": "1017060"
  },
  {
    "text": "shipping containers and stuff like this rather than route a route B",
    "start": "1017060",
    "end": "1023839"
  },
  {
    "text": "so if you if you found these differences in the Quick Start you understand what's going on so in the",
    "start": "1023839",
    "end": "1029660"
  },
  {
    "text": "pops up folder you have the node subscriber",
    "start": "1029660",
    "end": "1035360"
  },
  {
    "text": "if you can see it here this is a node.js application that we",
    "start": "1035360",
    "end": "1040640"
  },
  {
    "text": "are going to use as the subscriber to demonstrate the subscriber and we also have here at the bottom we have a react",
    "start": "1040640",
    "end": "1046938"
  },
  {
    "text": "form the react form is really the publisher I don't know why the team called it react",
    "start": "1046939",
    "end": "1052400"
  },
  {
    "text": "form is I think it's because the interface is just react form that you used to publish the messages however you",
    "start": "1052400",
    "end": "1058700"
  },
  {
    "text": "can see that there is a server down there that will",
    "start": "1058700",
    "end": "1064600"
  },
  {
    "text": "act as the publisher so you send the message from the react form to the server and the server will send it to",
    "start": "1064600",
    "end": "1071360"
  },
  {
    "text": "dapa now let's have a look at this interesting file",
    "start": "1071360",
    "end": "1077179"
  },
  {
    "text": "I'm gonna hide this if you look at this file",
    "start": "1077179",
    "end": "1083000"
  },
  {
    "text": "it's a ml5 of client component",
    "start": "1083000",
    "end": "1088880"
  },
  {
    "text": "and the meter and the meter data name is called pop sub and the type is pop sub",
    "start": "1088880",
    "end": "1093919"
  },
  {
    "text": "redis this channel file you can see that it exists in the user",
    "start": "1093919",
    "end": "1101660"
  },
  {
    "text": "profile folder under dot data",
    "start": "1101660",
    "end": "1107480"
  },
  {
    "text": "this is where you put the configuration for dapa so it can connect to the message broker correctly",
    "start": "1107480",
    "end": "1114140"
  },
  {
    "text": "of course you don't have to be stuck in the developer folder you can also once you run the upper itself you can say I",
    "start": "1114140",
    "end": "1121340"
  },
  {
    "text": "want to use a different configuration file and you can point to that configuration file however to make your life easier the developers of data just",
    "start": "1121340",
    "end": "1128480"
  },
  {
    "text": "assume that you're going to have all your configurations in the data folder",
    "start": "1128480",
    "end": "1133820"
  },
  {
    "text": "you can look at the details of the file as well and you'll see that we have",
    "start": "1133820",
    "end": "1140179"
  },
  {
    "text": "the the name of of the host of the readers uh message broker and also we",
    "start": "1140179",
    "end": "1146480"
  },
  {
    "text": "have uh the the rudis password this is",
    "start": "1146480",
    "end": "1151880"
  },
  {
    "text": "to allow Dapper to connect to risks now let's go back and check the",
    "start": "1151880",
    "end": "1161179"
  },
  {
    "text": "publisher in the publisher",
    "start": "1161179",
    "end": "1166840"
  },
  {
    "text": "all what we have is localhost double Port version one",
    "start": "1167539",
    "end": "1175460"
  },
  {
    "text": "we have the port that we are going to run the application on and in order for us to publish the",
    "start": "1175460",
    "end": "1181880"
  },
  {
    "text": "message we just push or make a request a post request to this",
    "start": "1181880",
    "end": "1187039"
  },
  {
    "text": "URL the Dapper URL publish the pop sub name the component name and then the",
    "start": "1187039",
    "end": "1193520"
  },
  {
    "text": "topic we are submitting to all what you can see is there's a post",
    "start": "1193520",
    "end": "1201740"
  },
  {
    "text": "to that Jason so if I go back now to the",
    "start": "1201740",
    "end": "1210380"
  },
  {
    "text": "app.js this is the subscriber let's have a look at the subscriber",
    "start": "1212660",
    "end": "1218539"
  },
  {
    "text": "the subscriber on the other hand just provides an endpoint",
    "start": "1218539",
    "end": "1226520"
  },
  {
    "text": "that's called subscribe and this is the Subscribe endpoint that we talked about ILY",
    "start": "1226520",
    "end": "1231799"
  },
  {
    "text": "we are expected to retain the configurations or the the intentions of our application to which topic we want",
    "start": "1231799",
    "end": "1238100"
  },
  {
    "text": "to subscribe to and to which route we are delivering these messages so for example if we have a topic called orders",
    "start": "1238100",
    "end": "1247460"
  },
  {
    "text": "if we have a topic that's called orders",
    "start": "1247460",
    "end": "1252620"
  },
  {
    "text": "here we want it to be routed to the process orders road so if I scroll down",
    "start": "1252620",
    "end": "1258980"
  },
  {
    "text": "here you can see that I have this endpoint available for me and all",
    "start": "1258980",
    "end": "1266480"
  },
  {
    "text": "what I'm going to do is to console log the process orders on my cons on my",
    "start": "1266480",
    "end": "1272120"
  },
  {
    "text": "console all right let's now run the applications the way to do this",
    "start": "1272120",
    "end": "1279340"
  },
  {
    "text": "and let's zoom in we have the react form",
    "start": "1279919",
    "end": "1286299"
  },
  {
    "text": "and we have this command can everybody see clearly the command or",
    "start": "1287000",
    "end": "1293720"
  },
  {
    "text": "beautiful we have the upper run",
    "start": "1293720",
    "end": "1299720"
  },
  {
    "text": "application ID is the node subscriber this is very important because increase the font",
    "start": "1299720",
    "end": "1307000"
  },
  {
    "text": "I think this is it's asking me oh there you go better awesome",
    "start": "1309020",
    "end": "1314659"
  },
  {
    "text": "all right you can see here that we have Dapper run",
    "start": "1314659",
    "end": "1319700"
  },
  {
    "text": "the app ID is the not subscriber because every application you run with Dapper it",
    "start": "1319700",
    "end": "1324799"
  },
  {
    "text": "has an ID to distinguish between the different applications in your micro services or the different services",
    "start": "1324799",
    "end": "1330440"
  },
  {
    "text": "this is going to be very important for us later when when we want once we want",
    "start": "1330440",
    "end": "1335659"
  },
  {
    "text": "to do competing consumers and the app Port we are running our",
    "start": "1335659",
    "end": "1341000"
  },
  {
    "text": "application on and then this is the command that runs your",
    "start": "1341000",
    "end": "1347059"
  },
  {
    "text": "application the node.js if we do this now if we run",
    "start": "1347059",
    "end": "1354460"
  },
  {
    "text": "this command we want to see or we are hoping that our",
    "start": "1355220",
    "end": "1361460"
  },
  {
    "text": "application will work",
    "start": "1361460",
    "end": "1364658"
  },
  {
    "text": "hard to go oh what's happening",
    "start": "1370659",
    "end": "1375740"
  },
  {
    "text": "oh I know now this resume docker",
    "start": "1375740",
    "end": "1381200"
  },
  {
    "text": "and then because you need to have docker running",
    "start": "1381200",
    "end": "1388539"
  },
  {
    "text": "all right this is not going as planned",
    "start": "1388640",
    "end": "1393880"
  },
  {
    "text": "uh um I'd like to receive any error",
    "start": "1396380",
    "end": "1402220"
  },
  {
    "text": "nothing okay how about expanding",
    "start": "1403039",
    "end": "1408380"
  },
  {
    "text": "and therefore run app ID one last time maybe Docker is going to",
    "start": "1408380",
    "end": "1414500"
  },
  {
    "text": "run eventually",
    "start": "1414500",
    "end": "1418179"
  },
  {
    "text": "hmm absolutely nothing",
    "start": "1421940",
    "end": "1429279"
  },
  {
    "text": "how about we run this one see what the problem is one note subscriber",
    "start": "1431419",
    "end": "1439000"
  },
  {
    "text": "oh I know now that was so silly of me because in the first window",
    "start": "1439100",
    "end": "1446240"
  },
  {
    "text": "this is the react form we want to run the actually the react form",
    "start": "1446240",
    "end": "1454840"
  },
  {
    "text": "there you go is it refusing as well",
    "start": "1456260",
    "end": "1464019"
  },
  {
    "text": "okay I'm not sure what's happening there let me cancel I'm going to cancel both",
    "start": "1465020",
    "end": "1473720"
  },
  {
    "text": "I will exit these ones",
    "start": "1473720",
    "end": "1478600"
  },
  {
    "text": "and maybe reset the zoom maybe it's the zoom",
    "start": "1478940",
    "end": "1485299"
  },
  {
    "text": "I will run the no subscriber",
    "start": "1485299",
    "end": "1491620"
  },
  {
    "text": "Docker is running I'm gonna remove the Do Not Disturb",
    "start": "1493039",
    "end": "1500419"
  },
  {
    "text": "maybe it's doing something else oh my goodness this is very interesting",
    "start": "1500419",
    "end": "1508820"
  },
  {
    "text": "all right let me do one last thing before we fall back to other stuff",
    "start": "1508820",
    "end": "1514700"
  },
  {
    "text": "because this is the really the essence of the talk I have no idea why it's not working it was just working a minute ago",
    "start": "1514700",
    "end": "1520520"
  },
  {
    "text": "this result docker foreign",
    "start": "1520520",
    "end": "1525220"
  },
  {
    "text": "could it be if there's no internet let's connect to my dongle",
    "start": "1528820",
    "end": "1535460"
  },
  {
    "text": "I'm just trying to troubleshoot everything I can for this one",
    "start": "1535460",
    "end": "1542080"
  },
  {
    "text": "it's restarting without failures in demos",
    "start": "1544700",
    "end": "1549980"
  },
  {
    "text": "you can call it a demo I'm hoping that things work fine if it doesn't then we will have to go",
    "start": "1549980",
    "end": "1558320"
  },
  {
    "text": "back to the theory part of things I'm sorry if this is disappointing and uh",
    "start": "1558320",
    "end": "1563600"
  },
  {
    "text": "I'll be in this conference for the remainder of the of the conference so if if you really want to see this working",
    "start": "1563600",
    "end": "1570559"
  },
  {
    "text": "and if it doesn't work now we can you can talk me and you again and see how things go all right so let's",
    "start": "1570559",
    "end": "1577940"
  },
  {
    "text": "try again",
    "start": "1577940",
    "end": "1580720"
  },
  {
    "text": "maybe cancel the whole thing feel the video",
    "start": "1591679",
    "end": "1598059"
  },
  {
    "text": "and then new terminal",
    "start": "1606620",
    "end": "1613120"
  },
  {
    "text": "and we say NVM",
    "start": "1617900",
    "end": "1623960"
  },
  {
    "text": "use node just to make sure that you are fine",
    "start": "1627320",
    "end": "1632539"
  },
  {
    "text": "and then we run DARPA",
    "start": "1632539",
    "end": "1638240"
  },
  {
    "text": "the react form there you go finally I think it was the zoom",
    "start": "1638299",
    "end": "1644000"
  },
  {
    "text": "for some reason I zoomed in again all right",
    "start": "1644000",
    "end": "1650779"
  },
  {
    "text": "sorry for the disruption so let's look at the log there's a lot of load coming from here",
    "start": "1650779",
    "end": "1657799"
  },
  {
    "text": "you can see that all of this log is from dapa it gives you a lot of built-in features",
    "start": "1657799",
    "end": "1664940"
  },
  {
    "text": "to support metrics when you send requests through the mtls and the service connection it",
    "start": "1664940",
    "end": "1671179"
  },
  {
    "text": "does this for you it currently is disabled you can see that the app ID is react form and you can see that it's it",
    "start": "1671179",
    "end": "1679039"
  },
  {
    "text": "has loaded the component called Pub sub on redis and it's ready to",
    "start": "1679039",
    "end": "1686919"
  },
  {
    "text": "listen to the topic that's called orders",
    "start": "1686919",
    "end": "1693380"
  },
  {
    "text": "we can see where is it antenna GSP Matrix scope there you go",
    "start": "1693559",
    "end": "1700039"
  },
  {
    "text": "okay now this is the form",
    "start": "1700039",
    "end": "1706220"
  },
  {
    "text": "let's do another one for",
    "start": "1706220",
    "end": "1711880"
  },
  {
    "text": "the node subscriber",
    "start": "1712760",
    "end": "1719740"
  },
  {
    "text": "and before let's before I do that let's send a message and the subscriber",
    "start": "1719900",
    "end": "1726140"
  },
  {
    "text": "this is the agenda oh this is not the thing that you should see all right",
    "start": "1726140",
    "end": "1732200"
  },
  {
    "text": "and what we do is that we will go here and see if we have a message of",
    "start": "1732200",
    "end": "1740360"
  },
  {
    "text": "course it's not working so we have to go back to the all right",
    "start": "1740360",
    "end": "1748400"
  },
  {
    "text": "where is our terminal again",
    "start": "1748400",
    "end": "1752200"
  },
  {
    "text": "bring it to the four oh this tip three was it",
    "start": "1753620",
    "end": "1761980"
  },
  {
    "text": "and then what we wanted to do is to open",
    "start": "1763100",
    "end": "1768320"
  },
  {
    "text": "another terminal this on another tab",
    "start": "1768320",
    "end": "1774080"
  },
  {
    "text": "and we want to run the uh",
    "start": "1774080",
    "end": "1779960"
  },
  {
    "text": "Commander this this is a Docker container to have the UI of the redis",
    "start": "1779960",
    "end": "1787220"
  },
  {
    "text": "running it's it's just a UI so if I refresh this it's just the UI it's connecting to my",
    "start": "1787220",
    "end": "1795260"
  },
  {
    "text": "server if it works nicely",
    "start": "1795260",
    "end": "1800679"
  },
  {
    "text": "all right it's it's good today is not my best day for for this",
    "start": "1802220",
    "end": "1808640"
  },
  {
    "text": "why is it not running",
    "start": "1808640",
    "end": "1811960"
  },
  {
    "text": "this three six seven nine ready to accept Connections in my",
    "start": "1819620",
    "end": "1827179"
  },
  {
    "text": "configuration [Music]",
    "start": "1827179",
    "end": "1831500"
  },
  {
    "text": "3679",
    "start": "1833960",
    "end": "1836960"
  },
  {
    "text": "all right let's see what we can do here",
    "start": "1839840",
    "end": "1846940"
  },
  {
    "text": "um I'm going to change something I'm going to change",
    "start": "1850100",
    "end": "1856299"
  },
  {
    "text": "uh from my Snippets I'm gonna run rather than run",
    "start": "1856299",
    "end": "1862399"
  },
  {
    "text": "read this I'm going to run Robert mq and see if this works",
    "start": "1862399",
    "end": "1870159"
  },
  {
    "text": "I'm going to save go back to our applications",
    "start": "1870500",
    "end": "1877299"
  },
  {
    "text": "and then run this again",
    "start": "1878419",
    "end": "1882100"
  },
  {
    "text": "and see if Robert mq let's also create a robbing mq",
    "start": "1888740",
    "end": "1896240"
  },
  {
    "text": "Robert mq",
    "start": "1896240",
    "end": "1899320"
  },
  {
    "text": "there you go so this runs the Robert mq message broker so if we go here and reload",
    "start": "1908659",
    "end": "1917440"
  },
  {
    "text": "wow",
    "start": "1917899",
    "end": "1920559"
  },
  {
    "text": "there you go all right so here",
    "start": "1924080",
    "end": "1931760"
  },
  {
    "text": "we can go to the exchanges you can see there's nothing all right so what I did here",
    "start": "1931760",
    "end": "1937340"
  },
  {
    "text": "is that for some reason the readers is not connecting uh properly to my readers",
    "start": "1937340",
    "end": "1943100"
  },
  {
    "text": "server so what I was I switched my configuration to rather than using redis",
    "start": "1943100",
    "end": "1948980"
  },
  {
    "text": "as a message broker I switched to Robert mq on the hope that it's going to work so my robot mq is working now",
    "start": "1948980",
    "end": "1955159"
  },
  {
    "text": "now the if I post a message on my react",
    "start": "1955159",
    "end": "1960500"
  },
  {
    "text": "form let's see if it's working it's working so if I say if I'm going to send a",
    "start": "1960500",
    "end": "1965539"
  },
  {
    "text": "message to this is an embarrassing demo",
    "start": "1965539",
    "end": "1972200"
  },
  {
    "text": "submit let's see if we have a message here cues",
    "start": "1972200",
    "end": "1979600"
  },
  {
    "text": "exchanges might take some time no channels",
    "start": "1980179",
    "end": "1986980"
  },
  {
    "text": "all right if we run the subscriber",
    "start": "1988399",
    "end": "1997360"
  },
  {
    "text": "okay",
    "start": "2002620",
    "end": "2004740"
  },
  {
    "text": "all right so you can see here okay nice",
    "start": "2014559",
    "end": "2022600"
  },
  {
    "text": "well it's not too nice we didn't receive any messages here",
    "start": "2022600",
    "end": "2028480"
  },
  {
    "text": "let's see if we are going to send another message",
    "start": "2028480",
    "end": "2034679"
  },
  {
    "text": "react form please work",
    "start": "2034840",
    "end": "2040179"
  },
  {
    "text": "I can't be more imaginative than this here you go finally",
    "start": "2040179",
    "end": "2047080"
  },
  {
    "text": "this is the not subscriber it should be much better than this really",
    "start": "2047080",
    "end": "2052839"
  },
  {
    "text": "so you can see that in the subscriber that we have received a message down there that says process orders and all",
    "start": "2052839",
    "end": "2060220"
  },
  {
    "text": "the information you can see here in the data section we have the message type orders and the message please work now",
    "start": "2060220",
    "end": "2066158"
  },
  {
    "text": "the thing I wanted to bring your attention to is that this is not what we sent",
    "start": "2066159",
    "end": "2071980"
  },
  {
    "text": "what recent was only this message type orders message please work",
    "start": "2071980",
    "end": "2077080"
  },
  {
    "text": "all of this content in the message itself is actually a wrapper like we the",
    "start": "2077080",
    "end": "2083020"
  },
  {
    "text": "the object was uh or the message was wrapped by something called Cloud event Cloud event is the format that the",
    "start": "2083020",
    "end": "2089919"
  },
  {
    "text": "standard the the industry has standardized against to to wrap messages",
    "start": "2089919",
    "end": "2095520"
  },
  {
    "text": "between macro services and and event driven systems the reason why they have",
    "start": "2095520",
    "end": "2101080"
  },
  {
    "text": "standardized on this because you can you can have a lot of information like the trace ID and and the uh the type of the",
    "start": "2101080",
    "end": "2109960"
  },
  {
    "text": "topic all of these things are part of the expectations of the of the standard of the of the format and microservices",
    "start": "2109960",
    "end": "2116619"
  },
  {
    "text": "can assume that all this information is going to be there actually it's I think the failure of the",
    "start": "2116619",
    "end": "2124660"
  },
  {
    "text": "the demo was good to show that I needed I only needed to change the configuration to switch between message",
    "start": "2124660",
    "end": "2131440"
  },
  {
    "text": "broker uh that is from redis to to robot mq this tells you the the power that you",
    "start": "2131440",
    "end": "2137800"
  },
  {
    "text": "can get with with Dapper I didn't touch the code you see like the node.js I did",
    "start": "2137800",
    "end": "2143500"
  },
  {
    "text": "not change it's exactly the same HTTP endpoints all right let's have a look at something",
    "start": "2143500",
    "end": "2149560"
  },
  {
    "text": "if you if we if we don't want to uh if we don't want to wrap",
    "start": "2149560",
    "end": "2156579"
  },
  {
    "text": "our application in Cloud event let's say if we have Legacy",
    "start": "2156579",
    "end": "2162099"
  },
  {
    "text": "application we can copy this line and go back to our server",
    "start": "2162099",
    "end": "2170020"
  },
  {
    "text": "and instead of this line I'm going to use this line I'm going to",
    "start": "2170020",
    "end": "2177040"
  },
  {
    "text": "comment",
    "start": "2177040",
    "end": "2179339"
  },
  {
    "text": "for my document oh I got sick",
    "start": "2183099",
    "end": "2188859"
  },
  {
    "text": "all right so the only difference between these two lines is the last part is metadata role play",
    "start": "2188859",
    "end": "2196420"
  },
  {
    "text": "load equals to so I want to just I don't want to wrap my event or message with",
    "start": "2196420",
    "end": "2203440"
  },
  {
    "text": "Cloud event format I'm Gonna Save this one and go again to",
    "start": "2203440",
    "end": "2209400"
  },
  {
    "text": "my react application I'm going to cancel it and run it again",
    "start": "2209400",
    "end": "2217980"
  },
  {
    "text": "and then I'll send another message this is not a wrapped message",
    "start": "2218260",
    "end": "2226240"
  },
  {
    "text": "submit did it work and you can see at the bottom here",
    "start": "2226240",
    "end": "2232540"
  },
  {
    "text": "in the subscriber I'm going to switch to subscriber you can see here at the bottom I don't know I'm I'm afraid to zoom in after the",
    "start": "2232540",
    "end": "2239800"
  },
  {
    "text": "last experience but you can see at the bottom that there's a message from the process orders a message type orders the",
    "start": "2239800",
    "end": "2247240"
  },
  {
    "text": "message is not wrapped a message to all the cloud event format is not there",
    "start": "2247240",
    "end": "2252280"
  },
  {
    "text": "all right let's look at something also interesting let's say that",
    "start": "2252280",
    "end": "2258339"
  },
  {
    "text": "you want you you have a big application and it has a lot of endpoints and a lot of",
    "start": "2258339",
    "end": "2265060"
  },
  {
    "text": "message types you want to write you want to Route the If the message to different routes rather than one big",
    "start": "2265060",
    "end": "2273420"
  },
  {
    "text": "endpoint that receives all the messages and you have to do if Clauses in your uh",
    "start": "2273420",
    "end": "2280240"
  },
  {
    "text": "in your business logic you don't want to do this let's give a more concrete example this",
    "start": "2280240",
    "end": "2285700"
  },
  {
    "text": "is called the the routing part of Depot if we go to our",
    "start": "2285700",
    "end": "2291579"
  },
  {
    "text": "app and we look here you can see that this is the rods we",
    "start": "2291579",
    "end": "2297640"
  },
  {
    "text": "have imagine that in orders in the orders",
    "start": "2297640",
    "end": "2302980"
  },
  {
    "text": "endpoint the process orders we want to have a lot of logic around a specific",
    "start": "2302980",
    "end": "2310900"
  },
  {
    "text": "subtypes within the the the topic that's called order if I go back to my snippet",
    "start": "2310900",
    "end": "2319800"
  },
  {
    "text": "and I'll borrow these lines",
    "start": "2320320",
    "end": "2324599"
  },
  {
    "text": "and replace",
    "start": "2326800",
    "end": "2329760"
  },
  {
    "text": "replace it with this",
    "start": "2334060",
    "end": "2340079"
  },
  {
    "text": "all right so let's examine the code this is exactly the same configuration that we had before except",
    "start": "2341920",
    "end": "2347820"
  },
  {
    "text": "we instead of having one root value the process process invoices we have roots",
    "start": "2347820",
    "end": "2354520"
  },
  {
    "text": "and we have an array of rules so when a message comes to dapa",
    "start": "2354520",
    "end": "2362380"
  },
  {
    "text": "dapa will evaluate these rules and based on these rules we'll direct to the",
    "start": "2362380",
    "end": "2368380"
  },
  {
    "text": "different path so if we have here for example in my in my example I have",
    "start": "2368380",
    "end": "2373660"
  },
  {
    "text": "the uh the rule that says if the event dot data",
    "start": "2373660",
    "end": "2379660"
  },
  {
    "text": "Dot message equals computer I want it to be routed to or routed to",
    "start": "2379660",
    "end": "2386260"
  },
  {
    "text": "the process computers orders and I can go crazy not go not too crazy but I there's this expression I can uh",
    "start": "2386260",
    "end": "2395200"
  },
  {
    "text": "have multiple ways and I can interrogate many uh attributes in my event to route",
    "start": "2395200",
    "end": "2402640"
  },
  {
    "text": "to the right uh path so I'm going to save this one",
    "start": "2402640",
    "end": "2407940"
  },
  {
    "text": "and uh go back to my subscriber",
    "start": "2408099",
    "end": "2413800"
  },
  {
    "text": "and run again",
    "start": "2413800",
    "end": "2416760"
  },
  {
    "text": "now if we go to our app and say",
    "start": "2419440",
    "end": "2426000"
  },
  {
    "text": "orders and say this is a normal order",
    "start": "2426000",
    "end": "2432400"
  },
  {
    "text": "submit we go back you can see that this is a normal order oh",
    "start": "2432400",
    "end": "2439480"
  },
  {
    "text": "error handling message from topical there's no such key data app ID no subscriber instance scope",
    "start": "2439480",
    "end": "2446980"
  },
  {
    "text": "contributor error handling message from topic orders",
    "start": "2446980",
    "end": "2452020"
  },
  {
    "text": "no such key okay I'm not sure what this is",
    "start": "2452020",
    "end": "2457180"
  },
  {
    "text": "uh",
    "start": "2457180",
    "end": "2460180"
  },
  {
    "text": "uh uh yes yes yes yes good and you all right let's do this",
    "start": "2463859",
    "end": "2469720"
  },
  {
    "text": "my God you're awesome audience let's let's do this let's go this",
    "start": "2469720",
    "end": "2475740"
  },
  {
    "text": "uh in the react form Ctrl Z",
    "start": "2475740",
    "end": "2482440"
  },
  {
    "text": "and Save and then what we will do is",
    "start": "2482440",
    "end": "2489960"
  },
  {
    "text": "Ctrl C here go back to my rabbit in queue oh it's already let's",
    "start": "2490200",
    "end": "2498339"
  },
  {
    "text": "say refresh I want to delete this one because I don't want to have issues",
    "start": "2498339",
    "end": "2505780"
  },
  {
    "text": "delete queue or no git messages and then",
    "start": "2505780",
    "end": "2512320"
  },
  {
    "text": "I don't want to delete the queue oh oh I know",
    "start": "2512320",
    "end": "2518079"
  },
  {
    "text": "xmod",
    "start": "2518079",
    "end": "2521079"
  },
  {
    "text": "[Music] messages I hope so okay",
    "start": "2523450",
    "end": "2529500"
  },
  {
    "text": "and then we run this form again and we run this again",
    "start": "2529500",
    "end": "2537540"
  },
  {
    "text": "all right it's running test",
    "start": "2538900",
    "end": "2545880"
  },
  {
    "text": "and we have process orders this is the subscriber you can see we have tests but",
    "start": "2546280",
    "end": "2554079"
  },
  {
    "text": "if we go back and we say computer",
    "start": "2554079",
    "end": "2558839"
  },
  {
    "text": "submit you will see that it says process computer orders so we are",
    "start": "2559300",
    "end": "2565000"
  },
  {
    "text": "routing the right message based on the content type of the of the message",
    "start": "2565000",
    "end": "2572339"
  },
  {
    "text": "all right so this is uh this is for routing",
    "start": "2572440",
    "end": "2578619"
  },
  {
    "text": "uh did I want to show anything else I think I think with this with these three",
    "start": "2578619",
    "end": "2584680"
  },
  {
    "text": "you can see that the the the you can see the value that that provides",
    "start": "2584680",
    "end": "2590260"
  },
  {
    "text": "or brings forward to to your application uh because you are going to not deal",
    "start": "2590260",
    "end": "2595540"
  },
  {
    "text": "with a lot of the plumbing it's all HTTP and rules the one thing I wanted to show you as well is that",
    "start": "2595540",
    "end": "2602920"
  },
  {
    "text": "for the expressions for the rules it's uh it's based on the common expression language",
    "start": "2602920",
    "end": "2608859"
  },
  {
    "text": "um this is where you can find a lot of information about how to write these rules because it might be like if it's",
    "start": "2608859",
    "end": "2615220"
  },
  {
    "text": "not it's not normal code for example you have to has string or",
    "start": "2615220",
    "end": "2620500"
  },
  {
    "text": "has value there's certain ways you can write these rules all right let's go back to the",
    "start": "2620500",
    "end": "2626680"
  },
  {
    "text": "presentation and do some final thoughts",
    "start": "2626680",
    "end": "2632079"
  },
  {
    "text": "around Dapper pops up",
    "start": "2632079",
    "end": "2638680"
  },
  {
    "text": "one one of the things that we did not cover and uh I'm very happy to answer",
    "start": "2638680",
    "end": "2644020"
  },
  {
    "text": "after the the talk is about the time to live and the little cues in dapa you can",
    "start": "2644020",
    "end": "2650740"
  },
  {
    "text": "specify in the configurations the time to live for the message if the message broker",
    "start": "2650740",
    "end": "2656260"
  },
  {
    "text": "uh supports the letter uh the the time to live configurations Dapper will just",
    "start": "2656260",
    "end": "2661660"
  },
  {
    "text": "pass through this configuration to to the message broker and it will deal with it if it doesn't Dapper will do this for",
    "start": "2661660",
    "end": "2668140"
  },
  {
    "text": "you it will monitor the the time time to leave of the message in the queue and",
    "start": "2668140",
    "end": "2673720"
  },
  {
    "text": "then we'll deal with it and move it to the dead letter queue if necessary another thing to",
    "start": "2673720",
    "end": "2679480"
  },
  {
    "text": "do is that the the patterns of consumption so we we know that if you if",
    "start": "2679480",
    "end": "2684700"
  },
  {
    "text": "you want to have one publisher and many subscribers who are doing different things so the same message goes to these",
    "start": "2684700",
    "end": "2692440"
  },
  {
    "text": "different subscribers these subscribers should have different app IDs",
    "start": "2692440",
    "end": "2697480"
  },
  {
    "text": "this is going to help to go into to Fan it however if you have",
    "start": "2697480",
    "end": "2702780"
  },
  {
    "text": "many consumers that are competing on the message for example this is a typical scenario for",
    "start": "2702780",
    "end": "2708280"
  },
  {
    "text": "if you want to have a concert and there's a lot of cues and you want to have increase the the",
    "start": "2708280",
    "end": "2715060"
  },
  {
    "text": "scalability of the processes so you increase the processes so they can process messages faster these are the",
    "start": "2715060",
    "end": "2723099"
  },
  {
    "text": "competing consumers all these consumers should have the same app ID so it's used as",
    "start": "2723099",
    "end": "2729000"
  },
  {
    "text": "many instances for for the same application",
    "start": "2729000",
    "end": "2734039"
  },
  {
    "text": "uh one of the things that we need to talk about is the scoping uh in the pub",
    "start": "2734079",
    "end": "2740380"
  },
  {
    "text": "sub component you can choose you can limit what applications subscribe to what topics they can",
    "start": "2740380",
    "end": "2746920"
  },
  {
    "text": "subscribe to what topics they can publish to this will also allow you to have more constraints that if you're an",
    "start": "2746920",
    "end": "2752800"
  },
  {
    "text": "architect and you just pop the pop sub component you are not worried about if the developers listen to the wrong topic",
    "start": "2752800",
    "end": "2758500"
  },
  {
    "text": "or not finally challenges of course life is not",
    "start": "2758500",
    "end": "2764140"
  },
  {
    "text": "too Rosy in every technology uh the first problem is that if we are",
    "start": "2764140",
    "end": "2771040"
  },
  {
    "text": "doing we are introducing abstraction and abstraction means you are losing control you are not you you don't have the the",
    "start": "2771040",
    "end": "2777760"
  },
  {
    "text": "all the luxury that you have in uh writing the code yourself of course",
    "start": "2777760",
    "end": "2782880"
  },
  {
    "text": "Microsoft or the team has done a very good job in trying to still give you",
    "start": "2782880",
    "end": "2788980"
  },
  {
    "text": "some space in configuring things differently for the different type of massage brokers uh as you have seen the",
    "start": "2788980",
    "end": "2795940"
  },
  {
    "text": "the different EML file between redis was very short and the the yaml file for Robert mq was so big they are trying",
    "start": "2795940",
    "end": "2803680"
  },
  {
    "text": "their best to to allow give you this flexibility however it's still an abstraction and you lose some control",
    "start": "2803680",
    "end": "2809440"
  },
  {
    "text": "the other thing with this abstraction is that you also lose uh like you have to",
    "start": "2809440",
    "end": "2815619"
  },
  {
    "text": "go through troubleshooting for example just like we we saw a minute ago I was stuck I couldn't see any logs uh I know",
    "start": "2815619",
    "end": "2823540"
  },
  {
    "text": "that I was on the spot however uh if if I had on the code 100",
    "start": "2823540",
    "end": "2829480"
  },
  {
    "text": "I would have more space to navigate however these these two things are",
    "start": "2829480",
    "end": "2834520"
  },
  {
    "text": "normal in any technology if you are introducing a new good package that does something in your code you are going",
    "start": "2834520",
    "end": "2840520"
  },
  {
    "text": "through this you are giving away some control and you are giving away some troubleshooting or you're expected to do",
    "start": "2840520",
    "end": "2847839"
  },
  {
    "text": "some troubleshooting in your things this is all I wanted to talk about today in",
    "start": "2847839",
    "end": "2852880"
  },
  {
    "text": "DARPA Pub sub uh I had I had this called in and the presentation in on this URL",
    "start": "2852880",
    "end": "2859740"
  },
  {
    "text": "it's not too much different from the quick source like I said but I did some",
    "start": "2859740",
    "end": "2864760"
  },
  {
    "text": "changes so you can do it see the The Roots um and that's it for me if you have any",
    "start": "2864760",
    "end": "2870099"
  },
  {
    "text": "questions I'll be very happy to answer",
    "start": "2870099",
    "end": "2874440"
  },
  {
    "text": "perfect an apology for the drama of the of the",
    "start": "2875560",
    "end": "2883119"
  },
  {
    "text": "bill any questions",
    "start": "2883119",
    "end": "2888540"
  },
  {
    "text": "uh you can oh I'm not sure if you can do this however",
    "start": "2893020",
    "end": "2898960"
  },
  {
    "text": "uh in the uh uh oh let me cancel the presentation",
    "start": "2898960",
    "end": "2904240"
  },
  {
    "text": "here and we go back to the code",
    "start": "2904240",
    "end": "2910680"
  },
  {
    "text": "you can see here that in the rule",
    "start": "2911800",
    "end": "2916560"
  },
  {
    "text": "it's from from my from my understanding is that you have to to",
    "start": "2919800",
    "end": "2925300"
  },
  {
    "text": "um follow the the the the message uh format or this expression",
    "start": "2925300",
    "end": "2931900"
  },
  {
    "text": "the common expression language and I don't see any way that you can do it strongly",
    "start": "2931900",
    "end": "2937180"
  },
  {
    "text": "thought maybe if you tweak it yourself you can put constants all the like but I think you are bound to to the matching",
    "start": "2937180",
    "end": "2944140"
  },
  {
    "text": "rules of the expression so probably not maybe if you just speak it yourself",
    "start": "2944140",
    "end": "2950700"
  },
  {
    "text": "oh yeah yeah this is this is you can totally have different uh endpoints for",
    "start": "2959020",
    "end": "2964480"
  },
  {
    "text": "the different topics and the the different topics are already segregated for you on the on the on the routes but",
    "start": "2964480",
    "end": "2970960"
  },
  {
    "text": "for the same topic if you want to have multiple uh routes for the same topic based on",
    "start": "2970960",
    "end": "2977140"
  },
  {
    "text": "details like uh the the the body of the message or or any other thing or the",
    "start": "2977140",
    "end": "2982660"
  },
  {
    "text": "like and then this is where routing becomes uh becomes handy",
    "start": "2982660",
    "end": "2988140"
  },
  {
    "text": "all right I think this is it if you have any questions I'll be uh hanging uh till the end of the conference on Friday uh",
    "start": "2990520",
    "end": "2997300"
  },
  {
    "text": "thank you so much for attending and thank you for your patience and see you around",
    "start": "2997300",
    "end": "3002000"
  }
]