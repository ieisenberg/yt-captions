[
  {
    "start": "0",
    "end": "117000"
  },
  {
    "text": "hello everyone thanks for coming um I appreciate uh you having the",
    "start": "8920",
    "end": "14120"
  },
  {
    "text": "very nice weather this week from my first visit to Sydney thanks a lot uh my",
    "start": "14120",
    "end": "19160"
  },
  {
    "text": "name is Jimmy you can find me at Twitter atj Bogard and I promise it's not entirely untap check-ins there are some",
    "start": "19160",
    "end": "25640"
  },
  {
    "text": "insightful tweets somewhere in there and uh you can find me at GitHub too at github.com /j Bogard pretty much",
    "start": "25640",
    "end": "31880"
  },
  {
    "text": "everything I do is on that repository including every presentation I do so if you check that out you'll find all the",
    "start": "31880",
    "end": "37160"
  },
  {
    "text": "materials for this as well and a Blog at loses so you can go to Jimmy bard. L tees.com and I work at headspring a",
    "start": "37160",
    "end": "44680"
  },
  {
    "text": "consulting company in Texas very far away from here very very far away and most people know me because I work on an",
    "start": "44680",
    "end": "50840"
  },
  {
    "text": "open source project called automapper which we may or may not be talking about today we'll",
    "start": "50840",
    "end": "56359"
  },
  {
    "text": "see uh so today I want to talk about uh the new aspn net core framework which is",
    "start": "56359",
    "end": "61600"
  },
  {
    "text": "released right it's not preview2 beta 7 SDK something it's actually out now so",
    "start": "61600",
    "end": "66760"
  },
  {
    "text": "that's good um I want to talk about a little bit how we build as. net core applications and one of the interesting",
    "start": "66760",
    "end": "73119"
  },
  {
    "text": "things about the aspnet core framework besides a ground up rewrite is just like the old aspnet framework MBC and web API",
    "start": "73119",
    "end": "80079"
  },
  {
    "text": "is completely devoid of any opinions about how you should build aspn net applications so what I wanted to do with",
    "start": "80079",
    "end": "86040"
  },
  {
    "text": "this one is take kind of the normal asp9 core application you typically see out in the wild and wanted to refactor it to",
    "start": "86040",
    "end": "92240"
  },
  {
    "text": "make it more solid solid being the single responsibility principle the open close principle something about",
    "start": "92240",
    "end": "99479"
  },
  {
    "text": "inheritance uh interface segregation principle and then the dependency inversion principle although some people",
    "start": "99479",
    "end": "105520"
  },
  {
    "text": "just say dependency injection and just be done with it um I actually don't have very many slides like this is like the",
    "start": "105520",
    "end": "112119"
  },
  {
    "text": "main one that we're going to go straight to code so let's just do that sound good okay so enough of that",
    "start": "112119",
    "end": "120920"
  },
  {
    "start": "117000",
    "end": "484000"
  },
  {
    "text": "and now we'll be using visual studio I'm not one of those Jokers that says they code in Visual Studio code or something like that I'm using a real editor",
    "start": "120920",
    "end": "129399"
  },
  {
    "text": "here okay the first thing I wanted to do is just go through this controller and",
    "start": "131720",
    "end": "137120"
  },
  {
    "text": "view as it is to just kind of see what we see and see if there's things that stick out to us as things we want to try",
    "start": "137120",
    "end": "143440"
  },
  {
    "text": "to fix or remove some of the duplication make it more solid so this is kind of a normal uh NVC Style controller it's got",
    "start": "143440",
    "end": "151800"
  },
  {
    "text": "a number of actions as part of it so there's an index action a details action",
    "start": "151800",
    "end": "158760"
  },
  {
    "text": "a create action with a lot of space there need some space and then the normal kind of top level things you",
    "start": "158760",
    "end": "165080"
  },
  {
    "text": "typically see so create edit update delete and I wanted to take a little tour of these to see what kind of things",
    "start": "165080",
    "end": "171000"
  },
  {
    "text": "we see stick out to us in terms of duplication and the stuff that uh just we see over and over in our typical",
    "start": "171000",
    "end": "177280"
  },
  {
    "text": "applications and just to make sure that this is a real run running application I'm going to run it and make sure it",
    "start": "177280",
    "end": "182879"
  },
  {
    "text": "actually actually",
    "start": "182879",
    "end": "185879"
  },
  {
    "text": "works so it does actually have a real database behind the scenes uh this case I'm just",
    "start": "189159",
    "end": "195200"
  },
  {
    "text": "showing a list of students nothing terribly exciting except that I can do things like edit them so I can go edit",
    "start": "195200",
    "end": "201319"
  },
  {
    "text": "them and and add some additional information here save and yes indeed it actually saved I can create a new",
    "start": "201319",
    "end": "206480"
  },
  {
    "text": "students uh how about me and my enrollment dates I don't know",
    "start": "206480",
    "end": "213720"
  },
  {
    "text": "today why not uh and then we we would verify yes indeed it actually did create",
    "start": "213720",
    "end": "219239"
  },
  {
    "text": "me up there so yes this is a real application with a real database underneath underneath the covers um so",
    "start": "219239",
    "end": "224640"
  },
  {
    "text": "it probably looks and feels more like the applications I typically write so let's look at this controller",
    "start": "224640",
    "end": "233040"
  },
  {
    "text": "here now most applications I run into uh the MVC applications have do two general",
    "start": "233040",
    "end": "238840"
  },
  {
    "text": "flavors of actions uh there are my git actions and there are my post actions",
    "start": "238840",
    "end": "244200"
  },
  {
    "text": "the the git actions are going to be making some sort of query and showing some data on the screen and then my post",
    "start": "244200",
    "end": "249360"
  },
  {
    "text": "actions of course they're going to be manipulating some information behind the covers okay so here's our index action",
    "start": "249360",
    "end": "256880"
  },
  {
    "text": "um it's somewhat complicated because it's having to do uh sorting filtering",
    "start": "256880",
    "end": "263919"
  },
  {
    "text": "uh pagination as well so my controller is building up um a result object that",
    "start": "263919",
    "end": "270400"
  },
  {
    "text": "it passes along to the view it takes in a query here so these are the query string parameters and after some code",
    "start": "270400",
    "end": "276600"
  },
  {
    "text": "here fing down at the bottom here we go it's building out my view model in the",
    "start": "276600",
    "end": "284639"
  },
  {
    "text": "ter in the form of a page list that it passes along to the view so far so",
    "start": "284639",
    "end": "291039"
  },
  {
    "text": "good and then inside my view it's nothing exciting here it's just building a table of entries down here and then",
    "start": "291280",
    "end": "299960"
  },
  {
    "text": "displaying that information on the screen not that exciting there as",
    "start": "299960",
    "end": "305960"
  },
  {
    "text": "well so my G actions more or less look the same there's there's may or may not be some sort of inputs for query string",
    "start": "306080",
    "end": "313280"
  },
  {
    "text": "parameters and then builds out some sort of output now every application that I build as well is going to have one",
    "start": "313280",
    "end": "318960"
  },
  {
    "text": "single model in and one single model out one of the reasons I do this is on the",
    "start": "318960",
    "end": "324160"
  },
  {
    "text": "model inside this is a lot more refactoring friendly so if I add additional query string parameters it doesn't necessarily break other parts of",
    "start": "324160",
    "end": "330680"
  },
  {
    "text": "my application that assume a very specific ordering or naming of those uh",
    "start": "330680",
    "end": "335759"
  },
  {
    "text": "parameters as well so these are all the query string parameters that could potentially come in as part of making",
    "start": "335759",
    "end": "341479"
  },
  {
    "text": "that individual request uh one of the other first things",
    "start": "341479",
    "end": "347039"
  },
  {
    "text": "you should notice as well is that out of the box I do have dependencies being",
    "start": "347039",
    "end": "353639"
  },
  {
    "text": "injected into my application so in this case that school context the DB context from Entity Framework that's being",
    "start": "353639",
    "end": "360160"
  },
  {
    "text": "injected This Time by not not by my own dependency injection container but actually from the one out of the box",
    "start": "360160",
    "end": "366520"
  },
  {
    "text": "from ASP MVC core that piece is actually set up in our",
    "start": "366520",
    "end": "373720"
  },
  {
    "text": "startup over here and then a little bit further down",
    "start": "373720",
    "end": "378840"
  },
  {
    "text": "here we go so that right there is manipulating the base service collection you can",
    "start": "378840",
    "end": "385039"
  },
  {
    "text": "think that as the thing I stick all my services into and I'm telling it to add this DB context of type School context",
    "start": "385039",
    "end": "392759"
  },
  {
    "text": "with some configuration saying I want you to use SQL server and the connection string is going to be what I uh pull",
    "start": "392759",
    "end": "398400"
  },
  {
    "text": "from over here this default connection uh from the configuration manager here so that kind of checks the d off",
    "start": "398400",
    "end": "405479"
  },
  {
    "text": "the list of my solid out of the box in older versions of NVC framework it was pretty annoying to have to deal with the",
    "start": "405479",
    "end": "411400"
  },
  {
    "text": "pendency injection it wasn't out of the box built in and you usually had to to poke many different places to make sure",
    "start": "411400",
    "end": "418080"
  },
  {
    "text": "your dependencies got absolutely everywhere and we'll see with some of the other extension points here later in NVC that everything in NVC core is",
    "start": "418080",
    "end": "426400"
  },
  {
    "text": "dependency injection enabled so I can take those dependencies with just about everything I use inside of MVC core",
    "start": "426400",
    "end": "432720"
  },
  {
    "text": "including my controller here so D is down now we can focus on the Sol part of",
    "start": "432720",
    "end": "439800"
  },
  {
    "text": "the solid all right so let's look further",
    "start": "439800",
    "end": "445639"
  },
  {
    "text": "down uh now at our different uh controller actions specifically I want to look at the form posts so I'm look at",
    "start": "445639",
    "end": "452199"
  },
  {
    "text": "the create action here okay and then the edit action down",
    "start": "452199",
    "end": "458919"
  },
  {
    "text": "here the two form posts now if I look at these two",
    "start": "458919",
    "end": "464440"
  },
  {
    "text": "controller actions I I uh see some commonalities here that my form post will typically take the form of doing",
    "start": "464440",
    "end": "471879"
  },
  {
    "text": "some sort of model State validation so validation has already occurred let's",
    "start": "471879",
    "end": "477280"
  },
  {
    "text": "say okay is it valid or not and and if it is valid then let's actually do the work of the controller action we'll save",
    "start": "477280",
    "end": "483639"
  },
  {
    "text": "some changes and then finally redirect and if it wasn't valid then I",
    "start": "483639",
    "end": "489840"
  },
  {
    "text": "go ahead and show the view passing in that model so they can get rehydrated",
    "start": "489840",
    "end": "495840"
  },
  {
    "text": "now nearly every single one of my post actions looks exactly like this do a",
    "start": "495840",
    "end": "501800"
  },
  {
    "text": "model state check do the actual real meat of the work save changes and then",
    "start": "501800",
    "end": "507440"
  },
  {
    "text": "go redirect now one of the duplications I typically see in my applications and not the kind",
    "start": "507440",
    "end": "514000"
  },
  {
    "text": "of copy paste variety where it's the same exact code in two places but it's more of a concept duplication and the",
    "start": "514000",
    "end": "520240"
  },
  {
    "text": "concept I see here the overall kind of pattern I have is doing a validation check doing some work and then saving",
    "start": "520240",
    "end": "526519"
  },
  {
    "text": "some changes so what I'd like to do is take advantage of some of the extensions at MVC core to remove this duplication I",
    "start": "526519",
    "end": "534720"
  },
  {
    "text": "see in all of my post actions so first with the one I want to",
    "start": "534720",
    "end": "539760"
  },
  {
    "text": "get rid of is this right here db. save changes that's the line of code that is",
    "start": "539760",
    "end": "546600"
  },
  {
    "text": "something you can't ever really forget to do if you forget to call Save changes then your changes aren't flush to the",
    "start": "546600",
    "end": "552000"
  },
  {
    "text": "database and then you'll just have some you know like oh you edited something and nothing nothing actually changed",
    "start": "552000",
    "end": "557079"
  },
  {
    "text": "behind the scenes and in my applications if I have to remember to do something then I'm probably going to forget even",
    "start": "557079",
    "end": "563480"
  },
  {
    "text": "it's it's something as simple as calling save changes so what I want to do is",
    "start": "563480",
    "end": "568519"
  },
  {
    "text": "build a policy in MVC core so that on every single request my changes are",
    "start": "568519",
    "end": "573560"
  },
  {
    "text": "always saved to the database and I never have to remember to call Save changes ever again so let's do",
    "start": "573560",
    "end": "582440"
  },
  {
    "text": "that um one by the way one of the other things that you can look at to see am I violating solid is if you go up to the",
    "start": "582839",
    "end": "589279"
  },
  {
    "text": "top and look at your using statements and if you see things from a lot of different places things like uh I've got",
    "start": "589279",
    "end": "595839"
  },
  {
    "text": "things doing with MVC I've got link and there's Entity framework in there as well if I see a lot of different concerns in one single spot it usually",
    "start": "595839",
    "end": "602440"
  },
  {
    "text": "comes out in the form of my using statements but back to our save changes",
    "start": "602440",
    "end": "607959"
  },
  {
    "text": "what I want to do is take this and put it into a place in the MVC core pipeline so that executes an every single",
    "start": "607959",
    "end": "614760"
  },
  {
    "text": "request now similar to aspon at MVC and web API before it MVC core has the",
    "start": "614760",
    "end": "621279"
  },
  {
    "text": "concept of filters and filters are sets of code you can execute before and after every single request at specific Parts",
    "start": "621279",
    "end": "628320"
  },
  {
    "text": "in the execution pipeline so that every single time it happens on every single",
    "start": "628320",
    "end": "633959"
  },
  {
    "text": "request and what that allows me to do is that this kind of duplication that I copy and paste in every single one of my",
    "start": "633959",
    "end": "639880"
  },
  {
    "text": "actions I can pull that out and have that in one single spot as in the form of just one single class that then goes",
    "start": "639880",
    "end": "647440"
  },
  {
    "text": "across my entire application so let's do that now I've also uh got some cheat code here so I",
    "start": "647440",
    "end": "654279"
  },
  {
    "text": "don't want to uh mistype something so I actually got it over here in the form of",
    "start": "654279",
    "end": "659880"
  },
  {
    "text": "a filter and the other thing I want to do",
    "start": "659880",
    "end": "667360"
  },
  {
    "text": "is go into my DB context and add a bit of code there and I'm going back to my cheat code here to grab that here we",
    "start": "667360",
    "end": "676920"
  },
  {
    "text": "go so one of the kind of interesting things about uh ASP um sorry Entity",
    "start": "676920",
    "end": "682240"
  },
  {
    "text": "framework both an Entity framework and Entity framework core is they try to hide a lot of the trans action support",
    "start": "682240",
    "end": "689920"
  },
  {
    "text": "behind the scenes I don't really like that I like to be very explicit about when a transaction begins and when a",
    "start": "689920",
    "end": "696000"
  },
  {
    "text": "transaction ends as opposed to just kind of a magical safe changes call of like well where did The Connection open where",
    "start": "696000",
    "end": "701399"
  },
  {
    "text": "did the transaction open is it is there one transaction that I do up here and another one down here I don't like that",
    "start": "701399",
    "end": "707639"
  },
  {
    "text": "I like to have a very explicit boundary so I'm going to create that boundary by extending my DB context a little bit",
    "start": "707639",
    "end": "713240"
  },
  {
    "text": "here so let's go to my school context and and I'm going to add this is",
    "start": "713240",
    "end": "720160"
  },
  {
    "text": "my DB context that I'm using for the entire application I'm going to add a few methods to help me build out uh some",
    "start": "720160",
    "end": "727200"
  },
  {
    "text": "transaction support so I have a I'm exposing a few",
    "start": "727200",
    "end": "732240"
  },
  {
    "text": "methods here one is to begin a transaction and that'll open up a transaction behind the scenes down here",
    "start": "732240",
    "end": "738880"
  },
  {
    "text": "uh one of the one of the other things I like to do is have a very explicit isolation level in which I'm opening of",
    "start": "738880",
    "end": "744959"
  },
  {
    "text": "the transaction um does anyone know what the default SQL Server transaction isce relation",
    "start": "744959",
    "end": "751040"
  },
  {
    "text": "is serializable that's wrong it actually depends on the version of SQL Server",
    "start": "751040",
    "end": "757199"
  },
  {
    "text": "you're using like even different like additions of SQL Server will be like read committed uh serializable I think",
    "start": "757199",
    "end": "763760"
  },
  {
    "text": "snapshot may be a default here pretty soon I don't it's it's really all over the place so instead of me relying on",
    "start": "763760",
    "end": "770320"
  },
  {
    "text": "the installed database default or someone's default that some DBA puts somewhere I want to",
    "start": "770320",
    "end": "777240"
  },
  {
    "text": "be very explicit about that and that's what I'm doing here is being very very explicit about saying I'm opening a transaction with this specific isolation",
    "start": "777240",
    "end": "785079"
  },
  {
    "text": "level now one thing you could do that I do on some projects is open up different isolation levels depending on whether",
    "start": "785079",
    "end": "791600"
  },
  {
    "text": "doing a get or post like you could do a read uncommitted for a get versus like a",
    "start": "791600",
    "end": "797600"
  },
  {
    "text": "a snapshot for posts um that way you have you know just different concurrency",
    "start": "797600",
    "end": "802839"
  },
  {
    "text": "models based on the activities you're trying to perform I'm not going to get that complicated I'm just going to have",
    "start": "802839",
    "end": "807959"
  },
  {
    "text": "begin transaction with this specific isolation level and luckily I'm using en framework core",
    "start": "807959",
    "end": "814880"
  },
  {
    "text": "luckily it's actually exposed um it's kind of a crapshoot within any framework core these days about what it actually",
    "start": "814880",
    "end": "820320"
  },
  {
    "text": "has out of the box it's a 1.0 but I think that's a kind of a loose term with that",
    "start": "820320",
    "end": "826760"
  },
  {
    "text": "release um I'm also going to expose some methods to close the transaction um if there's an exception it'll roll back the",
    "start": "826760",
    "end": "833600"
  },
  {
    "text": "transaction otherwise it'll go ahead and commit the transaction so all that stuff that people typically build into like a",
    "start": "833600",
    "end": "840079"
  },
  {
    "text": "unit of work class or something like that um I like to just stick that right on the DB context itself as opposed to",
    "start": "840079",
    "end": "846399"
  },
  {
    "text": "building some other abstraction one of the things I want to highlight here is that the the solid principles don't mean",
    "start": "846399",
    "end": "852040"
  },
  {
    "text": "abstract everything um it just means put things in the right place and that's what I'm trying to do here okay so back to our",
    "start": "852040",
    "end": "861199"
  },
  {
    "text": "filter uh I declare this MVC transaction filter to be an async action filter this",
    "start": "862040",
    "end": "868320"
  },
  {
    "text": "doesn't this didn't exist in previous version of MVC there was no async um so the MVC core pipeline was completely",
    "start": "868320",
    "end": "875160"
  },
  {
    "text": "rehauled to be async all the way just like you saw in web API if you have seen that as",
    "start": "875160",
    "end": "881920"
  },
  {
    "text": "well this filter can now take a",
    "start": "882440",
    "end": "886880"
  },
  {
    "text": "dependency okay so this used to be super super hard to do in ASP not MVC the previous version um you couldn't",
    "start": "887480",
    "end": "893639"
  },
  {
    "start": "888000",
    "end": "1212000"
  },
  {
    "text": "actually have a filter take dependencies at all you'd have to do like service location or put it in a very special",
    "start": "893639",
    "end": "899920"
  },
  {
    "text": "place or I've seen tricks like put it in HTTP context items anyone ever do that",
    "start": "899920",
    "end": "905600"
  },
  {
    "text": "yes that's like the thing that exists on every single requests you can stick stuff in there and have it available for",
    "start": "905600",
    "end": "911519"
  },
  {
    "text": "parts later on the request but that seemed kind of crazy um other the interesting thing on filters with uh",
    "start": "911519",
    "end": "918240"
  },
  {
    "text": "previous version of NBC is they were all Singleton so they were instantiated once for the entire lifetime of the",
    "start": "918240",
    "end": "923399"
  },
  {
    "text": "application and there was that that that let down feeling when you realized what it was doing like oh crap I'm to code",
    "start": "923399",
    "end": "929079"
  },
  {
    "text": "around this well that's not happening anymore uh NVC is building NVC core is building out the concept of a",
    "start": "929079",
    "end": "935000"
  },
  {
    "text": "composition rout so that I can have one single spot where I instantiate everything for the entire request and",
    "start": "935000",
    "end": "941480"
  },
  {
    "text": "depending on life cycle rules we'll have things instantiated at different points so what that means for me is that my",
    "start": "941480",
    "end": "947519"
  },
  {
    "text": "filter can now take a dependency on a DB context now on the actual filter method",
    "start": "947519",
    "end": "953880"
  },
  {
    "text": "itself the onaction execution async which I don't know what that means",
    "start": "953880",
    "end": "959680"
  },
  {
    "text": "in real English but I think it's just when the action executes they have this kind of weird naming syntax um on their",
    "start": "959680",
    "end": "967680"
  },
  {
    "text": "different methods here so this means when the action is executing do this",
    "start": "967680",
    "end": "973120"
  },
  {
    "text": "stuff and what it does is it passes in this delegate which is supposed to be the next thing to",
    "start": "973120",
    "end": "979199"
  },
  {
    "text": "do so my filter see if I can get it all on",
    "start": "979199",
    "end": "984639"
  },
  {
    "text": "the screen here here we go has a try catch it's going to first",
    "start": "984639",
    "end": "991560"
  },
  {
    "text": "await against opening the transaction with a B begin transaction method then it's going to call await next and that",
    "start": "991560",
    "end": "999040"
  },
  {
    "text": "next is the next thing in the MVC pipeline so it may be another filter it",
    "start": "999040",
    "end": "1004839"
  },
  {
    "text": "may be executing the action um that's all encapsulated for me in terms of my",
    "start": "1004839",
    "end": "1010199"
  },
  {
    "text": "individual filter here I don't care it's just the next thing to do after that next thing is done then I go ahead and",
    "start": "1010199",
    "end": "1016360"
  },
  {
    "text": "close the transaction that would commit the transaction and if any exception occurs",
    "start": "1016360",
    "end": "1022000"
  },
  {
    "text": "then I'll go ahead and roll back by passing in that exception I'm seeing this now and I probably should have",
    "start": "1022000",
    "end": "1027280"
  },
  {
    "text": "named those like commit and roll back but hindsight is 2020 we'll edit that out later I'm",
    "start": "1027280",
    "end": "1034360"
  },
  {
    "text": "sure okay so now that I've declared my filter I can then go register that in",
    "start": "1034360",
    "end": "1039678"
  },
  {
    "text": "part of my startup so something else new in asp.net",
    "start": "1039679",
    "end": "1045000"
  },
  {
    "text": "MVC core are the ability to configure directly using this configure services",
    "start": "1045000",
    "end": "1050760"
  },
  {
    "text": "in previous versions of NVC you had all these static classes you were dealing with like the bundle config the filter",
    "start": "1050760",
    "end": "1057000"
  },
  {
    "text": "config all those config classes remember those things you don't have those anymore now you have a single spot where",
    "start": "1057000",
    "end": "1062400"
  },
  {
    "text": "you can specify all your MVC core configuration and that's I'm going to do right here so I'll do my little",
    "start": "1062400",
    "end": "1067640"
  },
  {
    "text": "configuration block and I'll say config do filters do add and I can tell it the",
    "start": "1067640",
    "end": "1076360"
  },
  {
    "text": "type of filter I want to add so this this case it's going to be type of MVC transaction filter that",
    "start": "1076360",
    "end": "1085360"
  },
  {
    "text": "one now because I'm giving it the filter type and not a filter instance MVC knows",
    "start": "1087799",
    "end": "1094039"
  },
  {
    "text": "that it needs to instantiate that filter every single time for each request that's what I",
    "start": "1094039",
    "end": "1100640"
  },
  {
    "text": "want okay so now with that filter in place I can go back to my controller and",
    "start": "1100640",
    "end": "1106679"
  },
  {
    "text": "remove some of these SA changes so in my post actions create oh",
    "start": "1106679",
    "end": "1112960"
  },
  {
    "text": "save changes goodbye edit save changes goodbye and",
    "start": "1112960",
    "end": "1118799"
  },
  {
    "text": "delete save changes goodbye as well so what I've just done there is",
    "start": "1118799",
    "end": "1125799"
  },
  {
    "text": "removed some of the responsibilities from my controller of knowing when to call Safe changes and and commit those",
    "start": "1125799",
    "end": "1132559"
  },
  {
    "text": "to the database I've removed those and put it in one single class so that's the",
    "start": "1132559",
    "end": "1138400"
  },
  {
    "text": "s in solid for having a single responsibility for managing the transaction scope for my",
    "start": "1138400",
    "end": "1146280"
  },
  {
    "text": "application oh but let's make sure it actually",
    "start": "1146280",
    "end": "1150320"
  },
  {
    "text": "works okay so I should be able to edit my",
    "start": "1157799",
    "end": "1164559"
  },
  {
    "text": "information and it should save correctly and yes it did so",
    "start": "1166640",
    "end": "1174919"
  },
  {
    "text": "hooray now this is just one controller I know but if I have my my typical",
    "start": "1175080",
    "end": "1180840"
  },
  {
    "text": "application that I'm working with has dozens of controllers um some of the applications I work with have over a",
    "start": "1180840",
    "end": "1186559"
  },
  {
    "text": "hundred and if I again if I have to have that one single line of code in every single uh controller action uh that's",
    "start": "1186559",
    "end": "1193159"
  },
  {
    "text": "just going to blow up my code and if I ever need to change what actually goes on behind the scenes I'll have to go fix",
    "start": "1193159",
    "end": "1199200"
  },
  {
    "text": "that in all those different places so let's say you need to have a policy around saving changes to do something like logging and the turn logging when",
    "start": "1199200",
    "end": "1206000"
  },
  {
    "text": "something fail something like that well now I have that one spot I can go to to be able to have that sort of",
    "start": "1206000",
    "end": "1211960"
  },
  {
    "text": "logic uh some people don't like this because they're like it's magic because safe changes I don't know where it's being called but that's like 30 seconds",
    "start": "1211960",
    "end": "1218880"
  },
  {
    "start": "1212000",
    "end": "1472000"
  },
  {
    "text": "of conversation to clear that up or documentation somewhere maybe and you don't have to worry about that sort of conversation really ever",
    "start": "1218880",
    "end": "1226440"
  },
  {
    "text": "again okay on to the next uh so I remove save",
    "start": "1226919",
    "end": "1232400"
  },
  {
    "text": "changes from each of those now the next thing I see is this if model state is valid on both of my controller actions",
    "start": "1232400",
    "end": "1240400"
  },
  {
    "text": "this is the one that I I really do get annoyed with just seeing that if model state is valid over and over and over and over and over again it just gets",
    "start": "1240400",
    "end": "1247200"
  },
  {
    "text": "really annoying to have to deal with those happy path sad path for every single form post in my",
    "start": "1247200",
    "end": "1253799"
  },
  {
    "text": "system uh one of the other thing this that can be pretty difficult to deal with in form posts is if the model state",
    "start": "1253799",
    "end": "1260960"
  },
  {
    "text": "is invalid and there was some validation error now I got to worry about how to display those errors to the end user and",
    "start": "1260960",
    "end": "1267080"
  },
  {
    "text": "here I'm just taking the the model that I was passed in from the form poost and straight up passing it on through the",
    "start": "1267080",
    "end": "1273159"
  },
  {
    "text": "model uh that I'm showing on The View but that's not necessarily the same",
    "start": "1273159",
    "end": "1279919"
  },
  {
    "text": "model that I was originally hydrating over here when I was showing the form to",
    "start": "1279919",
    "end": "1285279"
  },
  {
    "text": "begin with and so you if you're familiar with MVC applications and youve built a few",
    "start": "1285279",
    "end": "1290960"
  },
  {
    "text": "of these you probably have some code in your in some of your form posts that's like okay here's the actual form post",
    "start": "1290960",
    "end": "1297559"
  },
  {
    "text": "model let me go also hydrate some other junk in there because not all the information was posted up so you have",
    "start": "1297559",
    "end": "1304080"
  },
  {
    "text": "something that's like okay you got the model then go rehydrate some of that additional junk and go on from",
    "start": "1304080",
    "end": "1309120"
  },
  {
    "text": "there well I don't like doing that on all my form post so what I'd like to do is do something I did with the",
    "start": "1309120",
    "end": "1315840"
  },
  {
    "text": "transaction filter and try to get it and remove all of my model State",
    "start": "1315840",
    "end": "1322080"
  },
  {
    "text": "valid checks throughout the rest of my system to do so is going to take a",
    "start": "1322080",
    "end": "1328679"
  },
  {
    "text": "little bit of finagling unfortunately um so I actually have a diagram of what this looks",
    "start": "1328679",
    "end": "1334360"
  },
  {
    "text": "like so if I look at a normal validation fo in an application the normal post redirect get will do a post to the MVC",
    "start": "1334360",
    "end": "1342200"
  },
  {
    "text": "controller it'll check to see if it's valid or not and if it's invalid it'll return the entire HTM payload rehydrated",
    "start": "1342200",
    "end": "1349679"
  },
  {
    "text": "with my view model back to the end user if it is valid then I go ahead and do the work save the changes to the",
    "start": "1349679",
    "end": "1355200"
  },
  {
    "text": "database and then I return that redirect to the end user so they can go see the changes that have been persisted so the",
    "start": "1355200",
    "end": "1361679"
  },
  {
    "text": "post redirect get the problem area was this part right here I'm returning back",
    "start": "1361679",
    "end": "1366840"
  },
  {
    "text": "all the HTML to the end user and they have to go then U I have to make sure",
    "start": "1366840",
    "end": "1372120"
  },
  {
    "text": "that uh it can properly show that HTML based on just the form data that was posted up through that post",
    "start": "1372120",
    "end": "1378520"
  },
  {
    "text": "flow so I'm going to flip this uh in my modified validation flow and this is a",
    "start": "1378520",
    "end": "1383640"
  },
  {
    "text": "trick I've been using for about four years or so my modified validation flow is going to hijack the form post and",
    "start": "1383640",
    "end": "1390520"
  },
  {
    "text": "instead of doing like a sort of full post it just takes the form variables and post them up to my controller my",
    "start": "1390520",
    "end": "1395919"
  },
  {
    "text": "controller will check to see if it's valid and this time instead of passing back HTML of like the full form and all",
    "start": "1395919",
    "end": "1402919"
  },
  {
    "text": "the validation errors pre-rendered I'm only returning back the error information in the form of ajacent",
    "start": "1402919",
    "end": "1409039"
  },
  {
    "text": "object the Json object will have which properties are invalid and also the validation messages uh for those invalid",
    "start": "1409039",
    "end": "1416600"
  },
  {
    "text": "properties then on the client side I'll have to take that and bind them up to the screen somehow um and if you're",
    "start": "1416600",
    "end": "1422279"
  },
  {
    "text": "using a client side application framework so if you're using like react or angular or if",
    "start": "1422279",
    "end": "1428480"
  },
  {
    "text": "you're uh one of those guys using aelia out there then all of this sort of stuff",
    "start": "1428480",
    "end": "1433880"
  },
  {
    "text": "will be more or less taken care of for you minus the server side hookup of getting the validation errors back to",
    "start": "1433880",
    "end": "1439600"
  },
  {
    "text": "you to be able to be shown for you otherwise on the success path I want",
    "start": "1439600",
    "end": "1445960"
  },
  {
    "text": "it to be exactly the same so what I want to do is hijack my",
    "start": "1445960",
    "end": "1452240"
  },
  {
    "text": "form post make an Ajax call on the server side I'll just check to see if",
    "start": "1452240",
    "end": "1458520"
  },
  {
    "text": "model state is valid and if model state is invalid instead of returning back HTML in the form of the view I'll",
    "start": "1458520",
    "end": "1464120"
  },
  {
    "text": "actually just return back the errors to the client and they can then just uh bind them to the",
    "start": "1464120",
    "end": "1469440"
  },
  {
    "text": "screen so let's do that first looks like my filter that's",
    "start": "1469440",
    "end": "1475320"
  },
  {
    "start": "1472000",
    "end": "1616000"
  },
  {
    "text": "going to be the doing the server side validation",
    "start": "1475320",
    "end": "1479679"
  },
  {
    "text": "work okay so this is my validator action filter and uh I don't really care what",
    "start": "1481559",
    "end": "1487919"
  },
  {
    "text": "validation framework you're using this works for all of them really and really what I'm try to do here is encapsulate",
    "start": "1487919",
    "end": "1493640"
  },
  {
    "text": "that flow of if model state is valid then do the success path if model state is invalid then do the sad path I want",
    "start": "1493640",
    "end": "1501320"
  },
  {
    "text": "to have that in exactly one one class in my application so in my",
    "start": "1501320",
    "end": "1508080"
  },
  {
    "text": "validor Val validator action filter which is an i action filter the on executing method means it happens be or",
    "start": "1508080",
    "end": "1516399"
  },
  {
    "text": "during I don't know the naming is really weird here um in this part I'll check to",
    "start": "1516399",
    "end": "1521760"
  },
  {
    "text": "see if my model state is valid if it's not valid then what I'll do is just straight up sterilize the model state is",
    "start": "1521760",
    "end": "1528320"
  },
  {
    "text": "the underlying validation information inside MVC core and then just serialize",
    "start": "1528320",
    "end": "1533440"
  },
  {
    "text": "that whole object as Json so I'm not creating some sort of intermediate validation object I'm just saying take",
    "start": "1533440",
    "end": "1539480"
  },
  {
    "text": "whatever MC has and just shove it onto the client and I'll go deal with it over",
    "start": "1539480",
    "end": "1546158"
  },
  {
    "text": "there so finally yep here we go so the filter context I'll set the status code",
    "start": "1546279",
    "end": "1551520"
  },
  {
    "text": "to 400 and then I'll set the results this content results uh over to the",
    "start": "1551520",
    "end": "1557279"
  },
  {
    "text": "filter cont context now when I replace the result on the filter context object that means it's going to do that result",
    "start": "1557279",
    "end": "1564520"
  },
  {
    "text": "as opposed to continue on with the controller action so this means that my controller actions will no longer have",
    "start": "1564520",
    "end": "1571039"
  },
  {
    "text": "to deal with the sad path of validation okay now that I have the",
    "start": "1571039",
    "end": "1577200"
  },
  {
    "text": "nothing afterwards so now that I have the action filter defined I want to",
    "start": "1577200",
    "end": "1582279"
  },
  {
    "text": "register its startup so over here I will go ahead and do config filters. add",
    "start": "1582279",
    "end": "1588320"
  },
  {
    "text": "type of validat action",
    "start": "1588320",
    "end": "1594398"
  },
  {
    "text": "filter and then finally there's a bit of kind of ugly code and this is not it's",
    "start": "1595039",
    "end": "1600399"
  },
  {
    "text": "not ugly because the the code is all that ugly it's just because I'm not really that much of a front-end developer so this is as much as I could",
    "start": "1600399",
    "end": "1607159"
  },
  {
    "text": "manage uh given my limited frontend",
    "start": "1607159",
    "end": "1611960"
  },
  {
    "text": "skills so what the front end set of code is going to do is hijack the form post",
    "start": "1615960",
    "end": "1622039"
  },
  {
    "start": "1616000",
    "end": "1956000"
  },
  {
    "text": "and then take that model State errors and then just put them on the screen next to the right HTML elements based on",
    "start": "1622039",
    "end": "1628399"
  },
  {
    "text": "where the uh input elements uh validation error should be I'm going to just shove that over here in my",
    "start": "1628399",
    "end": "1635679"
  },
  {
    "text": "layout right that looks like a good spot okay uh so I W go through the whole",
    "start": "1635679",
    "end": "1643320"
  },
  {
    "text": "thing just this one little part here using jQuery uh it's going to hijack every form post form and on submit it is",
    "start": "1643320",
    "end": "1653159"
  },
  {
    "text": "going to serialize the form data right here",
    "start": "1653159",
    "end": "1659120"
  },
  {
    "text": "going to remove any validation errors that may already exist on the screen and then perform this Ajax",
    "start": "1659120",
    "end": "1665960"
  },
  {
    "text": "request it's going to do an Ajax request against the existing URL the action for",
    "start": "1665960",
    "end": "1671760"
  },
  {
    "text": "that form and post up the form data as part of the data it's going to post and",
    "start": "1671760",
    "end": "1677360"
  },
  {
    "text": "then on success it's going to do this right here and on error it'll",
    "start": "1677360",
    "end": "1685960"
  },
  {
    "text": "go ahead and highlight the errors now I want to go into the Highlight errors function it's just like low Dash code that Loops through all the errors and",
    "start": "1685960",
    "end": "1692000"
  },
  {
    "text": "highlights the correct things on the screen not very exciting mainly because I don't find JavaScript code that",
    "start": "1692000",
    "end": "1697240"
  },
  {
    "text": "exciting but it it works all right so with that front end code",
    "start": "1697240",
    "end": "1702640"
  },
  {
    "text": "there and my backend filter I can now go back to my controller and just remove",
    "start": "1702640",
    "end": "1709200"
  },
  {
    "text": "all these really irritating if model stateus valid checks okay so let's find it so this is a get action it won't have",
    "start": "1709200",
    "end": "1715919"
  },
  {
    "text": "one get action won't have one get action won't have here's a post okay so let's",
    "start": "1715919",
    "end": "1720960"
  },
  {
    "text": "just go ahead and remove that and remove",
    "start": "1720960",
    "end": "1726240"
  },
  {
    "text": "that all right and in",
    "start": "1726240",
    "end": "1731360"
  },
  {
    "text": "my post and my edit action I'll remove that and remove move that",
    "start": "1731360",
    "end": "1740919"
  },
  {
    "text": "lovely all right let's run this and see what we",
    "start": "1740919",
    "end": "1746679"
  },
  {
    "text": "see all right so on my edit action just going to do the happy path and make sure",
    "start": "1755240",
    "end": "1761360"
  },
  {
    "text": "it actually works I'll remove that I'll hit save",
    "start": "1761360",
    "end": "1768559"
  },
  {
    "text": "and it broke sometimes I forget to pull in",
    "start": "1768559",
    "end": "1776360"
  },
  {
    "text": "some jQuery",
    "start": "1776360",
    "end": "1780158"
  },
  {
    "text": "[Music] here I told you I was B at frontend",
    "start": "1783320",
    "end": "1790919"
  },
  {
    "text": "JavaScript all right well I'll come back to this later because I don't want to spend too much time on this other than",
    "start": "1791159",
    "end": "1797480"
  },
  {
    "text": "this works when it works when it doesn't work well then you have to get your fun and developer to come show you what's",
    "start": "1797480",
    "end": "1802559"
  },
  {
    "text": "wrong with it probably going through like Chrome Dev tools or something like that so um what I'll do is I go ahead",
    "start": "1802559",
    "end": "1809559"
  },
  {
    "text": "and remove that and just say it works and the demo that I post up",
    "start": "1809559",
    "end": "1814960"
  },
  {
    "text": "later will have the correct code sound good all right there's a question",
    "start": "1814960",
    "end": "1822760"
  },
  {
    "text": "yes all right so the question is uh we'll be covering server side validation so I",
    "start": "1826240",
    "end": "1833279"
  },
  {
    "text": "guess I should have pointed out this is still doing server side validation the only thing",
    "start": "1833279",
    "end": "1839679"
  },
  {
    "text": "I'm oh so what if my validation has to do something a little bit different uh like hit the database or something like",
    "start": "1846240",
    "end": "1852480"
  },
  {
    "text": "that um if I need to do that I won't use the MVC core validation stuff because I",
    "start": "1852480",
    "end": "1857679"
  },
  {
    "text": "find it to be not that great and instead I use fluent validation which actually is dependency injection towar I won't go",
    "start": "1857679",
    "end": "1864159"
  },
  {
    "text": "through all that because that's like a whole talk onto itself to go through fluent validation but I would check that",
    "start": "1864159",
    "end": "1869840"
  },
  {
    "text": "out because your validation classes in fluent validation could be registered with dependency injection so they can",
    "start": "1869840",
    "end": "1875240"
  },
  {
    "text": "take things like a DB context to do that database level check so in my applications they typically have two",
    "start": "1875240",
    "end": "1881080"
  },
  {
    "text": "levels of validation one is the just really simple form validation like is this thing required or not and then the",
    "start": "1881080",
    "end": "1887440"
  },
  {
    "text": "complex business level validation I use fluent validation to do that good question",
    "start": "1887440",
    "end": "1893760"
  },
  {
    "text": "though like I said we're just going to pretend it works and not show any more validation",
    "start": "1893760",
    "end": "1900480"
  },
  {
    "text": "errors and I will take out this probably really ugly JavaScript code and fix it",
    "start": "1900480",
    "end": "1906200"
  },
  {
    "text": "on the example I'll post online later okay so um going back to my",
    "start": "1906200",
    "end": "1915639"
  },
  {
    "text": "controller uh one other the things I wanted to do was uh introduce automapper as a way to get",
    "start": "1915639",
    "end": "1923000"
  },
  {
    "text": "rid of this dumb leftand side rightand side code now anyone here use automapper",
    "start": "1923000",
    "end": "1929080"
  },
  {
    "text": "okay everybody um yeah so one of the things I wanted to highlight are some of the features that are kind of lesser",
    "start": "1929080",
    "end": "1934760"
  },
  {
    "text": "known to people in uh automapper land that I think are really cool um so what",
    "start": "1934760",
    "end": "1939960"
  },
  {
    "text": "I want to do is get rid of all these but what I don't want to do is do the old automapper way of doing things of",
    "start": "1939960",
    "end": "1945320"
  },
  {
    "text": "loading all the properties into my do domain model and then mapping my domain model into my view model I'm going to be",
    "start": "1945320",
    "end": "1951320"
  },
  {
    "text": "using something else entirely now what I've already done is in my project Json I've already",
    "start": "1951320",
    "end": "1959880"
  },
  {
    "start": "1956000",
    "end": "2078000"
  },
  {
    "text": "referenced automapper as a dependency using the latest version on",
    "start": "1959880",
    "end": "1966480"
  },
  {
    "text": "the myit because that's how I roll something I am adding on top of this are some extensions for Microsoft's",
    "start": "1966480",
    "end": "1972720"
  },
  {
    "text": "dependency injection framework so this automapper extensions. micros moft dependency injection that's a new",
    "start": "1972720",
    "end": "1979480"
  },
  {
    "text": "package that plugs in automapper with the dependency injection container that aspnet core uses now why is that",
    "start": "1979480",
    "end": "1987240"
  },
  {
    "text": "important well if I go back to my startup we'll have a very similar Fe I",
    "start": "1987240",
    "end": "1993240"
  },
  {
    "text": "can do services do add",
    "start": "1993240",
    "end": "1999440"
  },
  {
    "text": "automapper there we are so what that's done uh let me add",
    "start": "2001039",
    "end": "2007320"
  },
  {
    "text": "one more thing here type of startup uh so what that's done behind",
    "start": "2007320",
    "end": "2013639"
  },
  {
    "text": "the scenes is uh for these different types I've passed in it's going to be using reflection to load up all the",
    "start": "2013639",
    "end": "2020279"
  },
  {
    "text": "types to see if they have any automap or configuration defined in that assembly and if it does find it it's going to",
    "start": "2020279",
    "end": "2027200"
  },
  {
    "text": "pass that in into the autom maper initialization so that's equivalent to me do doing something like mapper do",
    "start": "2027200",
    "end": "2033480"
  },
  {
    "text": "initialize and then adding all the profiles Add profile and then all the",
    "start": "2033480",
    "end": "2040120"
  },
  {
    "text": "profiles my application so I I I used to accomplish this find all the automapper",
    "start": "2040120",
    "end": "2045840"
  },
  {
    "text": "configuration via dependency injection um and then people would do do really horrible things like having their",
    "start": "2045840",
    "end": "2052000"
  },
  {
    "text": "profile configuration take dependencies on like DB context and like hit the",
    "start": "2052000",
    "end": "2057200"
  },
  {
    "text": "database during configuration time which was a really really horrible idea um but it was enabled because that was all",
    "start": "2057200",
    "end": "2063599"
  },
  {
    "text": "configured through dependency injection so I'm not doing that instead I just call add automapper and any",
    "start": "2063599",
    "end": "2070280"
  },
  {
    "text": "profiles I have defined and these assemblies that are in that type will",
    "start": "2070280",
    "end": "2075599"
  },
  {
    "text": "just be automatically loaded up and initialized with automapper so let's go over to our few",
    "start": "2075599",
    "end": "2083079"
  },
  {
    "text": "models and add in all the appropriate automapper configuration we're interested in so I'll just call this uh",
    "start": "2083079",
    "end": "2090240"
  },
  {
    "text": "student profile it's going to hear from profile from",
    "start": "2090240",
    "end": "2095878"
  },
  {
    "text": "automapper and some of the maps I'm interested in are going to be let's go to our",
    "start": "2095879",
    "end": "2101400"
  },
  {
    "text": "controller uh first of all we see in our index action um here we are this select",
    "start": "2101400",
    "end": "2110000"
  },
  {
    "text": "projection here so I'll need a map from student to student index",
    "start": "2110000",
    "end": "2115400"
  },
  {
    "text": "model student index model there we are and probably one for details as well",
    "start": "2117000",
    "end": "2125480"
  },
  {
    "text": "for student to student Det",
    "start": "2125480",
    "end": "2128800"
  },
  {
    "text": "details and probably edit as well and probably",
    "start": "2131000",
    "end": "2138760"
  },
  {
    "text": "delete as well okay so with all the mapper",
    "start": "2138760",
    "end": "2144640"
  },
  {
    "text": "configuration oh there's a couple more I'm going to cheat I don't normally do this but uh the edit",
    "start": "2144640",
    "end": "2152880"
  },
  {
    "text": "action and the create action are doing really like like very boring backwards",
    "start": "2152880",
    "end": "2158359"
  },
  {
    "text": "mapping code like really simple ones so I usually don't recommend people to do this but because this is a demo I can",
    "start": "2158359",
    "end": "2164160"
  },
  {
    "text": "cheat I'm going to go ahead and reverse map these two pieces as",
    "start": "2164160",
    "end": "2169960"
  },
  {
    "text": "well uh oh just the edit one and then finally the I'm going to create a map",
    "start": "2169960",
    "end": "2175680"
  },
  {
    "text": "from student create model into",
    "start": "2175680",
    "end": "2181280"
  },
  {
    "text": "student okay I like never do that in actual production application but but",
    "start": "2181920",
    "end": "2186960"
  },
  {
    "text": "this is a simple one so you know I can cheat okay so that's all the automapper configuration I need uh the next thing",
    "start": "2186960",
    "end": "2193599"
  },
  {
    "text": "is to go back through uh my controller and then replace all that mapping code",
    "start": "2193599",
    "end": "2199079"
  },
  {
    "text": "with the automapper code instead now the uh the ones that are going through DB",
    "start": "2199079",
    "end": "2206079"
  },
  {
    "text": "context to use this select like this I can replace this with project",
    "start": "2206079",
    "end": "2213560"
  },
  {
    "text": "2 student index model",
    "start": "2213560",
    "end": "2218680"
  },
  {
    "text": "and this is defined in automap or queriable extensions and what that project to is doing is Examining The",
    "start": "2220440",
    "end": "2228240"
  },
  {
    "text": "Source type and the Destination type so student and student index model loading up the automap or configuration for that",
    "start": "2228240",
    "end": "2234760"
  },
  {
    "text": "mapping and then building out this exact select expression that the configuration",
    "start": "2234760",
    "end": "2242240"
  },
  {
    "text": "represents and what's interesting about that is The Entity framework link query",
    "start": "2242240",
    "end": "2248800"
  },
  {
    "text": "provider interprets that select expression it build and builds up the exact SQL I need to be able to be to",
    "start": "2248800",
    "end": "2255920"
  },
  {
    "text": "hydrate that view model so that means I don't actually go from database to domain model to vew",
    "start": "2255920",
    "end": "2263119"
  },
  {
    "text": "model I go straight from database to V model",
    "start": "2263119",
    "end": "2268359"
  },
  {
    "text": "directly so goodbye that and down here the same",
    "start": "2268359",
    "end": "2274680"
  },
  {
    "text": "thing that that whole block of code right there can just be project to student details",
    "start": "2274680",
    "end": "2282400"
  },
  {
    "text": "model uh so it handles top level properties like this it also handles",
    "start": "2282640",
    "end": "2288839"
  },
  {
    "text": "subcollections so this enrollments enrollment select it also handles flattening so this course. tile it",
    "start": "2288839",
    "end": "2295920"
  },
  {
    "text": "handles that as well so I can get rid of all of that junk",
    "start": "2295920",
    "end": "2301440"
  },
  {
    "text": "goodbye other really cool thing is when you use select projections in uh",
    "start": "2301440",
    "end": "2307040"
  },
  {
    "text": "when you select projections in OMS you don't have to do any of that include junk you normally see so this kind of",
    "start": "2307040",
    "end": "2313319"
  },
  {
    "text": "like dot [Music] include does that not exist in any frame",
    "start": "2313319",
    "end": "2318720"
  },
  {
    "text": "or core oh my",
    "start": "2318720",
    "end": "2323520"
  },
  {
    "text": "goodness maybe it's over here intersect there's no way it doesn't",
    "start": "2325440",
    "end": "2331640"
  },
  {
    "text": "exist I know I've seen that before maybe it's not called include I'm not an any framework core person because it's not a",
    "start": "2331640",
    "end": "2338119"
  },
  {
    "text": "1.0 product it's a 0.1 product um our applications that use aspnet core run on",
    "start": "2338119",
    "end": "2344800"
  },
  {
    "text": "full.net framework and use like the real nugate packages that actually do work for the real world so you can still use",
    "start": "2344800",
    "end": "2352000"
  },
  {
    "text": "aspnet core on full dunet framework full other packages that's the way that our",
    "start": "2352000",
    "end": "2357800"
  },
  {
    "text": "clients use them right now okay let's keep going uh this one uh this is mapping a",
    "start": "2357800",
    "end": "2363760"
  },
  {
    "start": "2360000",
    "end": "2486000"
  },
  {
    "text": "student crate model into a student so let's just call A mapper map yes pull that in uh student create",
    "start": "2363760",
    "end": "2371160"
  },
  {
    "text": "model to student passing in the",
    "start": "2371160",
    "end": "2377319"
  },
  {
    "text": "model and that's going to return a student so this replaces all of",
    "start": "2377319",
    "end": "2385000"
  },
  {
    "text": "that oh another projection I can get rid of so project",
    "start": "2388319",
    "end": "2393960"
  },
  {
    "text": "to student edit model getting rid of all this",
    "start": "2394319",
    "end": "2401880"
  },
  {
    "text": "stuff and on the reverse side the same thing I'll map back into that original student so mapper do map student Ed a",
    "start": "2402240",
    "end": "2410319"
  },
  {
    "text": "model to student passing in the model and the",
    "start": "2410319",
    "end": "2417240"
  },
  {
    "text": "student so I'm hydrating an existing object not mucking around with the existing properties that are in",
    "start": "2417240",
    "end": "2424760"
  },
  {
    "text": "there actually that's we done I don't even need that there we go so map the model into the student and finally I",
    "start": "2424760",
    "end": "2432760"
  },
  {
    "text": "believe the delete action has one as well oh here we go do project",
    "start": "2432760",
    "end": "2438280"
  },
  {
    "text": "2 student delete Model there we",
    "start": "2438280",
    "end": "2444200"
  },
  {
    "text": "go my favorite part of my job deleting code all right so I've replaced all of",
    "start": "2444520",
    "end": "2452680"
  },
  {
    "text": "the manual projections with automapper based projections now the configuration was very simple here I would caution",
    "start": "2452680",
    "end": "2459720"
  },
  {
    "text": "that if you find yourself having more mapper configuration than autom mapped",
    "start": "2459720",
    "end": "2465520"
  },
  {
    "text": "members probably shouldn't use automapper probably just map it manually yourself so if I find it getting any",
    "start": "2465520",
    "end": "2471520"
  },
  {
    "text": "more complicated than sort of like redirector members and some calculat members I don't tend to use autom map I",
    "start": "2471520",
    "end": "2477400"
  },
  {
    "text": "just go ahead and manually do it but this being a uh dummy application I can do whatever I want including making the",
    "start": "2477400",
    "end": "2483640"
  },
  {
    "text": "mapping as simple as possible so um automapper configuration is there",
    "start": "2483640",
    "end": "2489839"
  },
  {
    "start": "2486000",
    "end": "2692000"
  },
  {
    "text": "I've replaced all my projections with automapper projections whether in memory or through link and then I've also",
    "start": "2489839",
    "end": "2496960"
  },
  {
    "text": "registered automapper over here so that I can use it throughout the rest of my application so with all that in place",
    "start": "2496960",
    "end": "2504680"
  },
  {
    "text": "let's make sure it actually",
    "start": "2504680",
    "end": "2507800"
  },
  {
    "text": "works all right let's go back just refresh this",
    "start": "2515240",
    "end": "2521880"
  },
  {
    "text": "page make sure it's all Yep looks like it's all working still I can still edit things right edit yep uh save",
    "start": "2521880",
    "end": "2529160"
  },
  {
    "text": "it yep I fixed the validation thing so that's working now details oop it says",
    "start": "2529160",
    "end": "2534800"
  },
  {
    "text": "I'm missing a map from enrollment to that one oh that's right",
    "start": "2534800",
    "end": "2542000"
  },
  {
    "text": "uh some people do this they do a Apper assert conf configuration is valid",
    "start": "2542000",
    "end": "2547520"
  },
  {
    "text": "during your application so if I did that I would probably get that error saying I'm missing",
    "start": "2547520",
    "end": "2554880"
  },
  {
    "text": "something oh there we go unmat members found on the student crate model to student uh I have some unmat properties",
    "start": "2555599",
    "end": "2563640"
  },
  {
    "text": "here so let's go fix those oh right student model student",
    "start": "2563640",
    "end": "2570000"
  },
  {
    "text": "Crea model of students yes okay so back in my models uh student create model to",
    "start": "2570000",
    "end": "2577119"
  },
  {
    "text": "students um by default automapper assumes that everything on the Destination type should be mapped it",
    "start": "2577119",
    "end": "2584280"
  },
  {
    "text": "usually thinks I'm projecting in this case it's not it's everything on the source type so uh for this one I'm just",
    "start": "2584280",
    "end": "2589599"
  },
  {
    "text": "going to configure automapper to say just ignore and map everything from",
    "start": "2589599",
    "end": "2595480"
  },
  {
    "text": "actually the source members and uh so during",
    "start": "2595480",
    "end": "2600760"
  },
  {
    "text": "configuration validation instead of paying attention to the destination members pay attention to the source",
    "start": "2600760",
    "end": "2608079"
  },
  {
    "text": "members uh so the question is that new um relatively speaking yes so like four",
    "start": "2610839",
    "end": "2616640"
  },
  {
    "text": "EX four four time frame oh still got a problem uh different one though the enrollment cannot be mapped so there's",
    "start": "2616640",
    "end": "2622640"
  },
  {
    "text": "not a map from student details enrollment you'd be really cool if the exception message actually had the configuration so you could just copy",
    "start": "2622640",
    "end": "2628680"
  },
  {
    "text": "paste I'm just making a mental note here okay so let's go ahead and add that configuration as well so that said",
    "start": "2628680",
    "end": "2635040"
  },
  {
    "text": "student details model uh so there's something about student details model dot oh that's",
    "start": "2635040",
    "end": "2640319"
  },
  {
    "text": "right that showed the collection so enrollment to student details",
    "start": "2640319",
    "end": "2646880"
  },
  {
    "text": "enrollment oh okay so the configuration validation worked and the detail there",
    "start": "2655920",
    "end": "2661440"
  },
  {
    "text": "we go details works so through link project section it was",
    "start": "2661440",
    "end": "2666720"
  },
  {
    "text": "able to hydrate the top level model as well as a collection of items as well so",
    "start": "2666720",
    "end": "2672000"
  },
  {
    "text": "even though I'm using inity framework core it still support some pretty complex operations it's able to support like a one to many joined up set of data",
    "start": "2672000",
    "end": "2680240"
  },
  {
    "text": "behind the scenes now if I had SQL profile or open I could show you the exact query that's being run to prove to you but the queries generated from enity",
    "start": "2680240",
    "end": "2687280"
  },
  {
    "text": "framework are so ugly we don't want to look at them so let's not okay so um I could go fur the with",
    "start": "2687280",
    "end": "2695760"
  },
  {
    "start": "2692000",
    "end": "2809000"
  },
  {
    "text": "control controllers and I usually do I usually go through and take all of the",
    "start": "2695760",
    "end": "2701520"
  },
  {
    "text": "actual business uh the actual business logic that's happening and put those into",
    "start": "2701520",
    "end": "2708200"
  },
  {
    "text": "individual classes by themselves I'm going to go through all that practice if you want to look at the full uh there's",
    "start": "2708200",
    "end": "2713839"
  },
  {
    "text": "an entire talk dedicated to even taking controlers further down the path but now I want to switch gears and now take a",
    "start": "2713839",
    "end": "2719599"
  },
  {
    "text": "look at my views so up to this point I've been mainly focused on the controller part of my application but in",
    "start": "2719599",
    "end": "2725760"
  },
  {
    "text": "my my systems the views have just as much duplication as the rest of my application and people tend to ignore",
    "start": "2725760",
    "end": "2731680"
  },
  {
    "text": "that that the view is just about rendering HTML how crazy can it get well it can get pretty crazy but what I found",
    "start": "2731680",
    "end": "2738559"
  },
  {
    "text": "is that the abstractions actually available in both the old MVC and the new MVC core are not really well",
    "start": "2738559",
    "end": "2744839"
  },
  {
    "text": "equipped to handle the kind of duplication I see on my projects so I tend to build Enterprise applications",
    "start": "2744839",
    "end": "2752319"
  },
  {
    "text": "May it's a bad word line of business kind of applications that are a lot of lot of form forms of information a lot of tables of information and people are",
    "start": "2752319",
    "end": "2758839"
  },
  {
    "text": "using this application on a daily basis to do their jobs not so much like a like a like a public facing web application",
    "start": "2758839",
    "end": "2765440"
  },
  {
    "text": "it's more like a behind the scenes back office application and for those kind of systems I'll have applications with",
    "start": "2765440",
    "end": "2772000"
  },
  {
    "text": "hundred or so controllers and then hundreds and hundreds of actions with hundreds and hundreds of views so there's going to be a ton of duplication",
    "start": "2772000",
    "end": "2778200"
  },
  {
    "text": "going on with all those views going on so instead of us using the out ofthe",
    "start": "2778200",
    "end": "2784040"
  },
  {
    "text": "boox stuff that comes with MVC core instead what we use is a library called HTML tags that provides a really cool",
    "start": "2784040",
    "end": "2792760"
  },
  {
    "text": "way of building out um just like how our automapper library builds um convention",
    "start": "2792760",
    "end": "2799440"
  },
  {
    "text": "based mapping HTML tags provides us with convention-based HTML building just like",
    "start": "2799440",
    "end": "2805359"
  },
  {
    "text": "we did on the uh back end so what does that look like well I've already pulled",
    "start": "2805359",
    "end": "2813599"
  },
  {
    "start": "2809000",
    "end": "2917000"
  },
  {
    "text": "in the nougat package HTML tags. aspnetcore so this is a version of the",
    "start": "2813599",
    "end": "2819240"
  },
  {
    "text": "HTML tags library that targeted specifically built for asp.net core",
    "start": "2819240",
    "end": "2825440"
  },
  {
    "text": "and in my startup I'm going to go ahead and initialize it so I'll do",
    "start": "2825440",
    "end": "2830920"
  },
  {
    "text": "services. add HTML",
    "start": "2830920",
    "end": "2834960"
  },
  {
    "text": "tags there we are okay so as part of this there's a few options that I will then add",
    "start": "2837960",
    "end": "2844559"
  },
  {
    "text": "configuration to but first I want to go to my excuse me my view to show you the",
    "start": "2844559",
    "end": "2850640"
  },
  {
    "text": "kind of duplication I'm having to deal with and the worst one I can see is probably the edit",
    "start": "2850640",
    "end": "2856079"
  },
  {
    "text": "one so in my edit view I have this block of HTML that's copied let's see one",
    "start": "2856079",
    "end": "2864920"
  },
  {
    "text": "time two times and three times and this is just",
    "start": "2864920",
    "end": "2870599"
  },
  {
    "text": "for a very simple form with three Fields if I have a form with like a dozen or two dozen Fields I'll have that same set",
    "start": "2870599",
    "end": "2877119"
  },
  {
    "text": "of HTML copied over and over again now I could use something like HTML helper",
    "start": "2877119",
    "end": "2884040"
  },
  {
    "text": "extensions people you HTML helper extensions before U the problem I see with HTML helper extensions is that",
    "start": "2884040",
    "end": "2890240"
  },
  {
    "text": "they're all string based they're all dealing with string based HTML content well aspnet core introduces the concept",
    "start": "2890240",
    "end": "2897599"
  },
  {
    "text": "of tag helpers which are basically fancy strings behind the scenes and much harder I found to extend so our teams",
    "start": "2897599",
    "end": "2905280"
  },
  {
    "text": "took look at tagers tried to make them work the way we build forms and found they weren't nearly as flexible as HTML",
    "start": "2905280",
    "end": "2912240"
  },
  {
    "text": "tags and HTML tags are object based as opposed to string based what I mean by that is I can do",
    "start": "2912240",
    "end": "2919040"
  },
  {
    "start": "2917000",
    "end": "3010000"
  },
  {
    "text": "something like our tag equals new HTML tag passing in what kind of HTML tag it",
    "start": "2919040",
    "end": "2926240"
  },
  {
    "text": "is do you want to add a class to it there we go add a class fun time do I",
    "start": "2926240",
    "end": "2933160"
  },
  {
    "text": "want to Ain HTML add an attribute uh all",
    "start": "2933160",
    "end": "2938960"
  },
  {
    "text": "sorts of crazy stuff so because my tag model my HTML tag mod is now object base",
    "start": "2938960",
    "end": "2945160"
  },
  {
    "text": "I can now start to inject some smarts into how these HTML tags are built so let me get rid of all this okay so I'm",
    "start": "2945160",
    "end": "2953040"
  },
  {
    "text": "GNA do some more copy paste from my cheat",
    "start": "2953040",
    "end": "2958160"
  },
  {
    "text": "sheet oh I remember what I forgot I didn't look at my cheat sheet I'm for my",
    "start": "2959880",
    "end": "2965240"
  },
  {
    "text": "valid example Should Have Cheated cheaters always",
    "start": "2965240",
    "end": "2970720"
  },
  {
    "text": "win okay so first I'm going to modify my initial initialization just a little",
    "start": "2970720",
    "end": "2979838"
  },
  {
    "text": "bit uh and I'm going to be adding in these different convention uh classes um",
    "start": "2982040",
    "end": "2987400"
  },
  {
    "text": "this default HTML conventions is what comes with HTML tags it's all the HTML conventions for NVC applications so the",
    "start": "2987400",
    "end": "2995359"
  },
  {
    "text": "way way to build input elements and uh you know booleans being checkboxes things like that that comes from that",
    "start": "2995359",
    "end": "3001520"
  },
  {
    "text": "base set of configuration there and I'm going to add on top of it more",
    "start": "3001520",
    "end": "3007880"
  },
  {
    "text": "convenance in this class right here I'm just going to stick it right next to it because you",
    "start": "3007880",
    "end": "3013839"
  },
  {
    "start": "3010000",
    "end": "3097000"
  },
  {
    "text": "can do inner classes okay so what I'm going to do is side by side slowly make",
    "start": "3013839",
    "end": "3020240"
  },
  {
    "text": "changes to my tag reg my tag my tag configur ation until it matches",
    "start": "3020240",
    "end": "3027359"
  },
  {
    "text": "exactly what the existing uh editor does and then go from there and make it even more smart even smarter even more smart",
    "start": "3027359",
    "end": "3037039"
  },
  {
    "text": "smarter okay so uh back in my edit action I've got this editor for blah",
    "start": "3037079",
    "end": "3043720"
  },
  {
    "text": "blah blah that's using uh it's using uh editor templates which again are anyone tried to make custom editor templates",
    "start": "3043720",
    "end": "3051040"
  },
  {
    "text": "it's like stupid hard to try to do that it's ridiculous so they're all Razer based and you can't do like really any",
    "start": "3051040",
    "end": "3056559"
  },
  {
    "text": "actual code logic in there it's just just a kind of a nightmare to deal with um and so I can do this instead so I'll",
    "start": "3056559",
    "end": "3062079"
  },
  {
    "text": "do html. input oh before I do that I'm going to go to my view",
    "start": "3062079",
    "end": "3068359"
  },
  {
    "text": "Imports and do at using HTML",
    "start": "3068359",
    "end": "3073920"
  },
  {
    "text": "tags dot conventions dot conventions and I think",
    "start": "3073920",
    "end": "3080119"
  },
  {
    "text": "just HTML tags as well um this is a new thing in NBC core uh to have Global",
    "start": "3080119",
    "end": "3086440"
  },
  {
    "text": "Imports across all your views that's what the view Imports file does you used to had to go to that web config file",
    "start": "3086440",
    "end": "3092000"
  },
  {
    "text": "that thing's gone you use this thing instead html. input there we are that",
    "start": "3092000",
    "end": "3101480"
  },
  {
    "text": "was not there before and I give it the expression for the model so exactly what I have before input model. last name",
    "start": "3101480",
    "end": "3110520"
  },
  {
    "text": "okay let's go ahead and run this and see what we see",
    "start": "3110520",
    "end": "3117359"
  },
  {
    "text": "all right back over here let me go ahead and click edit and we should see it look a little bit funny but I've got this",
    "start": "3124280",
    "end": "3130119"
  },
  {
    "text": "over here and I got the this is the new one and this is the old one on the right so it's already been able to do like the",
    "start": "3130119",
    "end": "3135400"
  },
  {
    "text": "model binding stuff to put the correct piece in there I don't have to worry about those pieces those are all coming",
    "start": "3135400",
    "end": "3140960"
  },
  {
    "text": "from the uh the integration with asp.net core",
    "start": "3140960",
    "end": "3146079"
  },
  {
    "text": "now if I go look at the HTML though I will see some slight differences uh let's go and inspect this",
    "start": "3146079",
    "end": "3153119"
  },
  {
    "text": "element that one and I see it's input type equals text value equals Alexander",
    "start": "3153119",
    "end": "3158599"
  },
  {
    "text": "this one oh that's more it's got like input class textbox single line blah",
    "start": "3158599",
    "end": "3163760"
  },
  {
    "text": "blah blah blah blah blah blah blah blah a whole bunch of other stuff on top of that so what I'll be doing is adding",
    "start": "3163760",
    "end": "3169160"
  },
  {
    "text": "those extra conventions on top of it so that all that other information comes in as",
    "start": "3169160",
    "end": "3174240"
  },
  {
    "text": "well okay so back in my startup my configuration for my tags",
    "start": "3174240",
    "end": "3183480"
  },
  {
    "start": "3180000",
    "end": "3284000"
  },
  {
    "text": "I'm going to go ahead and add for my cheat sheet this right here",
    "start": "3183480",
    "end": "3191359"
  },
  {
    "text": "no here we go so this is saying that my editors will always add the class form",
    "start": "3191760",
    "end": "3199440"
  },
  {
    "text": "control which I think is the old bootstrap version but that's okay what do this have input class equals",
    "start": "3202000",
    "end": "3209599"
  },
  {
    "text": "text-box even though it's input type equals text we have to be extra redund it here so let's do that instead of form",
    "start": "3209599",
    "end": "3215839"
  },
  {
    "text": "control I'll have text now let's just leave form",
    "start": "3215839",
    "end": "3221000"
  },
  {
    "text": "control that's fine okay so refresh this",
    "start": "3221000",
    "end": "3227040"
  },
  {
    "text": "page and now oh it still",
    "start": "3227040",
    "end": "3233040"
  },
  {
    "text": "has the old version of it oh it's because it's an editor okay I'll get there in a",
    "start": "3233040",
    "end": "3238079"
  },
  {
    "text": "second uh the next one I want to add on top of it is my dat times should always have this",
    "start": "3238079",
    "end": "3245640"
  },
  {
    "text": "configuration associated with it",
    "start": "3245640",
    "end": "3252000"
  },
  {
    "text": "so oh let me get rid of that pattern I don't want",
    "start": "3256359",
    "end": "3261400"
  },
  {
    "text": "that don't want that either those are extensions that I don't actually want here um okay and short date string does",
    "start": "3262520",
    "end": "3269119"
  },
  {
    "text": "that not exist it's okay we'll",
    "start": "3269119",
    "end": "3273240"
  },
  {
    "text": "do two string and which kind of string is it going to be it's going to be the",
    "start": "3275359",
    "end": "3281240"
  },
  {
    "text": "short date that one okay so what this is saying is if it",
    "start": "3281240",
    "end": "3287599"
  },
  {
    "text": "finds a property of type dat time nullable date time is going to modify that by adding the date picker class on",
    "start": "3287599",
    "end": "3294319"
  },
  {
    "text": "top of it and then the value if it has a value is going to make sure it formats with a short date kind of",
    "start": "3294319",
    "end": "3302040"
  },
  {
    "text": "format so back in my view if I now go",
    "start": "3302040",
    "end": "3310440"
  },
  {
    "text": "replace this editor for with inputs this one up here as",
    "start": "3310480",
    "end": "3316160"
  },
  {
    "text": "well we'll again see what we",
    "start": "3316160",
    "end": "3320318"
  },
  {
    "text": "see",
    "start": "3324000",
    "end": "3327000"
  },
  {
    "text": "okay so if I go look at this element now I remember what I",
    "start": "3334319",
    "end": "3342039"
  },
  {
    "text": "forgot I forgot to cheat again um back in my startup I forgot to actually add",
    "start": "3342039",
    "end": "3348079"
  },
  {
    "start": "3347000",
    "end": "3429000"
  },
  {
    "text": "this convention to my list of libraries so I need actually do new MVC core HTML",
    "start": "3348079",
    "end": "3353440"
  },
  {
    "text": "conventions okay so it pulled in the default ones and then adding on top of it are mine okay that makes me less",
    "start": "3353440",
    "end": "3358559"
  },
  {
    "text": "confused",
    "start": "3358559",
    "end": "3361000"
  },
  {
    "text": "now all right let's refresh this and now we should see now all my conventions now oh there we go so now it's adding on top",
    "start": "3368520",
    "end": "3375480"
  },
  {
    "text": "that form control bootstrap style that put the little rounded corners on top of it the short date format here which I'm",
    "start": "3375480",
    "end": "3381400"
  },
  {
    "text": "sorry on my laptop is month day Year sorry",
    "start": "3381400",
    "end": "3386920"
  },
  {
    "text": "uh and putting all the uh appropriate styling on top of everything and I can keep going with this I can then go pull",
    "start": "3387240",
    "end": "3392400"
  },
  {
    "text": "in all the View kind of",
    "start": "3392400",
    "end": "3398318"
  },
  {
    "text": "conventions and label conventions as well so let me pull those in",
    "start": "3398640",
    "end": "3405240"
  },
  {
    "text": "here and custom category of kind of tags",
    "start": "3405240",
    "end": "3412559"
  },
  {
    "text": "that's what this piece is here I'm just going to paste it all in so I can show the final product which is going to",
    "start": "3412559",
    "end": "3419798"
  },
  {
    "text": "be my view oh let's not do that",
    "start": "3421720",
    "end": "3428240"
  },
  {
    "text": "one okay so all this configuration is for telling the HTML tag Library when",
    "start": "3428240",
    "end": "3435000"
  },
  {
    "text": "you see this kind of request to build this kind of tag modify it with this configuration here so the policy about",
    "start": "3435000",
    "end": "3442720"
  },
  {
    "text": "how to build HTML tags is in one spot in my application right here and if I need",
    "start": "3442720",
    "end": "3448480"
  },
  {
    "text": "to add on top of it additional ways of building HTML tags again it all goes back to here I'm going to go take this",
    "start": "3448480",
    "end": "3455119"
  },
  {
    "text": "one step further and that I'm going",
    "start": "3455119",
    "end": "3460520"
  },
  {
    "text": "to create some HTML helper extensions to build",
    "start": "3461240",
    "end": "3466880"
  },
  {
    "text": "out and let's just put this at the root oh helpers here we",
    "start": "3466880",
    "end": "3473280"
  },
  {
    "text": "go uh here we go this one right",
    "start": "3473799",
    "end": "3480960"
  },
  {
    "text": "here and oh no that's not the one that's",
    "start": "3481000",
    "end": "3488440"
  },
  {
    "text": "ugly okay ah there we go should pull",
    "start": "3500680",
    "end": "3505960"
  },
  {
    "text": "everything in IH HTML",
    "start": "3505960",
    "end": "3509880"
  },
  {
    "text": "hurn there we go so now what I can do with this input block that is building",
    "start": "3511880",
    "end": "3517480"
  },
  {
    "start": "3512000",
    "end": "3599000"
  },
  {
    "text": "out the surrounding HTML I had earlier and this form block as well I can now go",
    "start": "3517480",
    "end": "3522880"
  },
  {
    "text": "back to my view and actually replace all of this with html. form",
    "start": "3522880",
    "end": "3532640"
  },
  {
    "text": "block oh form",
    "start": "3532640",
    "end": "3536720"
  },
  {
    "text": "lock Nam space is wrong let's [Music]",
    "start": "3540200",
    "end": "3546949"
  },
  {
    "text": "do there we go just made something up there we go form Block M goes to m. last",
    "start": "3553280",
    "end": "3560599"
  },
  {
    "text": "name and I'll have two more of those uh first name first midn name and",
    "start": "3562319",
    "end": "3567799"
  },
  {
    "text": "enrollment date and that actually gets rid of all of",
    "start": "3567799",
    "end": "3575119"
  },
  {
    "text": "this and what I'm doing right now is just really building policies about how these different form tags should be",
    "start": "3577359",
    "end": "3582599"
  },
  {
    "text": "shown oop I just get rid of these display ones",
    "start": "3582599",
    "end": "3588599"
  },
  {
    "text": "that's fine um and making sure that whenever I want to display a form block on a page",
    "start": "3588599",
    "end": "3594640"
  },
  {
    "text": "it always goes to that one single spot and because it's all object based in the HTML tags it makes it super easy to",
    "start": "3594640",
    "end": "3601319"
  },
  {
    "text": "compose out those individual models so me refresh this and it should look exactly the",
    "start": "3601319",
    "end": "3607240"
  },
  {
    "text": "same it's got the label it's got the input element the validation messages on the side and because it's all based off",
    "start": "3607240",
    "end": "3613160"
  },
  {
    "text": "objects it makes it super easy for me to in my extension method compose",
    "start": "3613160",
    "end": "3619160"
  },
  {
    "text": "up different sets of HTML tags with different information pushing them all",
    "start": "3619160",
    "end": "3624319"
  },
  {
    "text": "together into one single HTML tag to show to the end",
    "start": "3624319",
    "end": "3628799"
  },
  {
    "text": "user is that cool or no okay so that library is called HTML tags it's plugged",
    "start": "3629400",
    "end": "3636680"
  },
  {
    "text": "into aset core and I use the plugin to aset core plus some conventions to define a single policy for how HTML tags",
    "start": "3636680",
    "end": "3644680"
  },
  {
    "text": "should be displayed throughout the entirety of my application no more arguments about use this day peaker use",
    "start": "3644680",
    "end": "3650200"
  },
  {
    "text": "that that day peaker oh this label should be above it or behind it nope we have a single policy in a single place",
    "start": "3650200",
    "end": "3655920"
  },
  {
    "text": "place so that was solid as. netcore my name is",
    "start": "3655920",
    "end": "3663200"
  },
  {
    "text": "Jimmy you can find me at Twitter atj boggards everything you'll see here including the right working example will",
    "start": "3663200",
    "end": "3668799"
  },
  {
    "text": "be on github.com J Bogard uh all this kind of topics I blog at Los techies and",
    "start": "3668799",
    "end": "3674039"
  },
  {
    "text": "one of the things I'm doing is building a video course doing exactly this if you're interested about that go to that",
    "start": "3674039",
    "end": "3679240"
  },
  {
    "text": "bitly link right there and you can sign up for the video course that basically walks through exactly all these things",
    "start": "3679240",
    "end": "3684760"
  },
  {
    "text": "uh that we just went through thank you very much I hope you enjoyed this and have a great rest of the",
    "start": "3684760",
    "end": "3691640"
  },
  {
    "text": "conference",
    "start": "3693400",
    "end": "3696400"
  }
]