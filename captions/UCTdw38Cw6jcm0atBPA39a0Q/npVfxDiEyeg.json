[
  {
    "text": "okay let's get started finally the last session of the day thank you so much for uh coming to my session to finish what",
    "start": "0",
    "end": "7560"
  },
  {
    "text": "was hopefully a good first day for you here at NDC so welcome to this session about Azure container apps and dapper",
    "start": "7560",
    "end": "15179"
  },
  {
    "text": "my name is Jacobian I'm coming all the way from Stockholm Sweden working for a",
    "start": "15179",
    "end": "21660"
  },
  {
    "text": "company called Active Solutions a consultancy company we're working a lot with Azure obviously",
    "start": "21660",
    "end": "27180"
  },
  {
    "text": "a lot of cloud native things a lot of containers and so on helping customers move to Azure and so on",
    "start": "27180",
    "end": "33899"
  },
  {
    "text": "I'm an Azure MVP I also worked a lot around the devops Alm area",
    "start": "33899",
    "end": "40260"
  },
  {
    "text": "wrote some books which was a fun experience I didn't make a lot of money of it and if you write a book never put",
    "start": "40260",
    "end": "47460"
  },
  {
    "text": "a year in the title that is my first recommendation for you because then people think it's you know go goes out",
    "start": "47460",
    "end": "54000"
  },
  {
    "text": "of date very very fast so that was the Lessons Learned but it was fun anyway",
    "start": "54000",
    "end": "59520"
  },
  {
    "text": "so okay so this talk will not be about microservices per se there's lots of",
    "start": "59520",
    "end": "64799"
  },
  {
    "text": "talks about microservices and how they work you know if you should choose to to use that architecture or",
    "start": "64799",
    "end": "71159"
  },
  {
    "text": "not but I do want to start of talking a little bit about the fact that Mike if",
    "start": "71159",
    "end": "76439"
  },
  {
    "text": "you go the microservices route you know splitting your system apart in smaller services",
    "start": "76439",
    "end": "81720"
  },
  {
    "text": "uh maybe using different Tech Stacks because they fit that particular service if you do that a containers is a really",
    "start": "81720",
    "end": "88740"
  },
  {
    "text": "good choice for you of you know building packaging and deploying your microservices",
    "start": "88740",
    "end": "94320"
  },
  {
    "text": "because once you put these things in a container it doesn't really matter what's inside them it doesn't matter if you do.net or Java or or you know",
    "start": "94320",
    "end": "101659"
  },
  {
    "text": "python you know container is a is a very nice standard and once you have it in a",
    "start": "101659",
    "end": "106860"
  },
  {
    "text": "container image you can really deploy it anywhere as long as you have a container orchestrator somewhere",
    "start": "106860",
    "end": "112860"
  },
  {
    "text": "so it's really good fit and if you're using Azure there's a lot of options for running containers all the way from the",
    "start": "112860",
    "end": "120119"
  },
  {
    "text": "simplest which is probably Azure container instances all the way to the full-fledged kubernetes service AKs",
    "start": "120119",
    "end": "126479"
  },
  {
    "text": "but today we want to talk about uh Azure container apps",
    "start": "126479",
    "end": "131700"
  },
  {
    "text": "and so if you're looking at if you want to",
    "start": "131700",
    "end": "136860"
  },
  {
    "text": "run so multi-container applications so your system consists of multiple containers what what do you need when",
    "start": "136860",
    "end": "143819"
  },
  {
    "text": "you deploy these things in a in a real environment well or actually when you're also developing the systems well",
    "start": "143819",
    "end": "149520"
  },
  {
    "text": "you know to start with you need a way to to do service Discovery so if you have multiple Services you need to have a way",
    "start": "149520",
    "end": "155520"
  },
  {
    "text": "to you know have service a being able to find service B and obviously also make service invocations on them and in a",
    "start": "155520",
    "end": "162540"
  },
  {
    "text": "multi-service environment probably running on multiple servers somewhere this can be a tricky problem you can't",
    "start": "162540",
    "end": "169080"
  },
  {
    "text": "be sure where a particular service instance is located also there might be multiple instances if you scale out so",
    "start": "169080",
    "end": "176040"
  },
  {
    "text": "you need some easy way to to make this just work and also just work you know depending on where you are if you're",
    "start": "176040",
    "end": "182459"
  },
  {
    "text": "running it locally or if you're running it in the cloud you also want to have a way to do deployments without causing a lot of",
    "start": "182459",
    "end": "188760"
  },
  {
    "text": "downtime which is I mean one of the obvious benefits of doing microservices is to be able to deploy you know",
    "start": "188760",
    "end": "195180"
  },
  {
    "text": "individual services without deploying the whole system so you want to be able to deploy fast many many",
    "start": "195180",
    "end": "202680"
  },
  {
    "text": "times that also means that you don't want to have down time so you need to make sure that you know the container",
    "start": "202680",
    "end": "208860"
  },
  {
    "text": "orchestrator of your choice is you know is able to actually spin up your new version and Route traffic to it without",
    "start": "208860",
    "end": "215640"
  },
  {
    "text": "causing the downtime also being able to scale your services based on different metrics could be",
    "start": "215640",
    "end": "222120"
  },
  {
    "text": "things like the number of requests coming in CPU load maybe the number of messages on",
    "start": "222120",
    "end": "228060"
  },
  {
    "text": "the Queue those kind of things is what you want to be able to scale your services up and down",
    "start": "228060",
    "end": "235140"
  },
  {
    "text": "also things like monitoring tracing those kind of things it you know quickly becomes a lot harder when you do",
    "start": "235140",
    "end": "241080"
  },
  {
    "text": "microservices compared to a monolith where you have everything you know pretty much in one place",
    "start": "241080",
    "end": "246959"
  },
  {
    "text": "and also it would be nice if you don't really have to you know care about the infrastructure right no infrastructure",
    "start": "246959",
    "end": "252480"
  },
  {
    "text": "to manage that that's obviously not a requirement but it's really really nice",
    "start": "252480",
    "end": "257780"
  },
  {
    "text": "compared to having you know a lot of virtual machines that you need to you know patch and manage and upgrade and so",
    "start": "257780",
    "end": "263520"
  },
  {
    "text": "on and also to be you know to really be able to use the cloud for what it is",
    "start": "263520",
    "end": "268620"
  },
  {
    "text": "being able to pay for the resources you know that you actually use instead of pre-provisioning pre-provisioning a lot",
    "start": "268620",
    "end": "275580"
  },
  {
    "text": "of the resources ideally you just want to pay for the for you know for the the amount of resources that you use so",
    "start": "275580",
    "end": "281639"
  },
  {
    "text": "typically the amount of CPU and memory and those kind of things so Azure container apps is a fairly new",
    "start": "281639",
    "end": "288300"
  },
  {
    "text": "service uh it was released actually I don't remember maybe one and a half year ago ga",
    "start": "288300",
    "end": "294479"
  },
  {
    "text": "and and it's called the around you know serverless containers for microservices so it's serverless in the sense that you",
    "start": "294479",
    "end": "300660"
  },
  {
    "text": "don't need to you know pre-provision any infrastructure you can pre just Define your application and deploy it to the",
    "start": "300660",
    "end": "306479"
  },
  {
    "text": "cloud and container apps will run them for you now under the hood this runs on",
    "start": "306479",
    "end": "311580"
  },
  {
    "text": "kubernetes but you don't really need to learn kubernetes and that is actually a big thing here and I've worked with a",
    "start": "311580",
    "end": "318479"
  },
  {
    "text": "lot of teams that want to go the kubernetes way because they have seen it and they you know they are impressed by you know everything you can do with",
    "start": "318479",
    "end": "324300"
  },
  {
    "text": "kubernetes but there is you know a big starting you know learning curve is pretty steep in the beginning uh and",
    "start": "324300",
    "end": "331560"
  },
  {
    "text": "then you end up with even if you deploy your application you still have a cluster to maintain an upgrade and scale and so so on and it's a little bit of a",
    "start": "331560",
    "end": "338699"
  },
  {
    "text": "new world for many and they don't really need all that power uh so I think this service is a really",
    "start": "338699",
    "end": "344280"
  },
  {
    "text": "good fit for for manual my customers leads and hopefully for you as well so",
    "start": "344280",
    "end": "350100"
  },
  {
    "text": "uh is running Azure it's built partly on open source so they use a lot of Open Source components and I'll come back to",
    "start": "350100",
    "end": "356759"
  },
  {
    "text": "that so generally the idea is that focus on your applications and not on the infrastructure",
    "start": "356759",
    "end": "363240"
  },
  {
    "text": "so you know obviously you can pretty much build or run anything in the container apps you know just put it in a",
    "start": "363240",
    "end": "369300"
  },
  {
    "text": "container and you can run it there so but there are some Target scenarios that is really nice and here are some",
    "start": "369300",
    "end": "376020"
  },
  {
    "text": "some of those obviously microservices is the thing we're talking about being able to deploy and scale uh multiple services",
    "start": "376020",
    "end": "384860"
  },
  {
    "text": "but also things like doing public API endpoints web apps it's a really good fit for web apps as well uh event driven",
    "start": "384860",
    "end": "392639"
  },
  {
    "text": "processing if you have things that consumes for example messages from a service bus or something like that",
    "start": "392639",
    "end": "398039"
  },
  {
    "text": "typically background workers those are really really nice to to run in a container app because you get help with",
    "start": "398039",
    "end": "405120"
  },
  {
    "text": "the with the scaling and also the notifications also background processing so so pretty",
    "start": "405120",
    "end": "410520"
  },
  {
    "text": "much anything you can run in here um in a container app and so we'll walk through some of the",
    "start": "410520",
    "end": "417539"
  },
  {
    "text": "features that that will hopefully make you see why this is a good fit so just a question how many here have actually",
    "start": "417539",
    "end": "422699"
  },
  {
    "text": "used or played with container apps so a few of you maybe 10 that's good",
    "start": "422699",
    "end": "429120"
  },
  {
    "text": "so let's talk quickly about the concepts around container apps so first up we have what's so called an",
    "start": "429120",
    "end": "435600"
  },
  {
    "text": "environment so this is you can think of this as maybe as your your logical boundary for your applications you you",
    "start": "435600",
    "end": "441060"
  },
  {
    "text": "need to create an environment which you will then deploy your container apps into that environment so some things are",
    "start": "441060",
    "end": "447240"
  },
  {
    "text": "defined on the environment level things like logging for example and networking those kind of things and then you will",
    "start": "447240",
    "end": "453000"
  },
  {
    "text": "deploy your application inside this environment so uh when you deploy your application you you",
    "start": "453000",
    "end": "460220"
  },
  {
    "text": "get what's called a replica and this is actually terminology coming from kubernetes so some of those you know",
    "start": "460220",
    "end": "467180"
  },
  {
    "text": "terminology actually sips through the abstraction here so if",
    "start": "467180",
    "end": "472440"
  },
  {
    "text": "I now deploy version 1.0 on my application it will run as a container as a one",
    "start": "472440",
    "end": "478979"
  },
  {
    "text": "replica but there is one more concept on top of this which is called a revision which is",
    "start": "478979",
    "end": "484919"
  },
  {
    "text": "an important one I will talk more about that later so revision is pretty much like a snapshot of a particular version of your",
    "start": "484919",
    "end": "490979"
  },
  {
    "text": "application and if you come from if you know about containers how you work with containers you know that you never",
    "start": "490979",
    "end": "497520"
  },
  {
    "text": "really modify a running container if you want to deploy a new version you actually deploy a new container and then",
    "start": "497520",
    "end": "503460"
  },
  {
    "text": "you tear the old container down and this is the same thing here but it's called revisions here so if I deploy",
    "start": "503460",
    "end": "510720"
  },
  {
    "text": "version 1.0 I get the first revision and I can now access and run my application if I deploy another version here 2.0 I",
    "start": "510720",
    "end": "518880"
  },
  {
    "text": "will get a new revision and the old revision will still be there and we'll talk about how you can handle that older",
    "start": "518880",
    "end": "525660"
  },
  {
    "text": "Vision because because sometimes you just want the old one to you know to go away sometimes you want to have actually",
    "start": "525660",
    "end": "531060"
  },
  {
    "text": "multiple revisions running at the same time for various reasons so revision so it's an important concept",
    "start": "531060",
    "end": "537540"
  },
  {
    "text": "here and then obviously you can deploy multiple container applications within the same environment",
    "start": "537540",
    "end": "542880"
  },
  {
    "text": "and by doing so they can also communicate with each other inside here without going to you know to the public",
    "start": "542880",
    "end": "548519"
  },
  {
    "text": "network in addition to this we have a virtual Network and uh if you create one of",
    "start": "548519",
    "end": "555060"
  },
  {
    "text": "these environments you will by default get your you know a virtual Network created for you that you don't really",
    "start": "555060",
    "end": "561480"
  },
  {
    "text": "see or manage but you can also obviously pre-provision your own custom v-net and",
    "start": "561480",
    "end": "567480"
  },
  {
    "text": "deploy the container apps to that v-net and obviously there's a there's a lot of advantages by doing that",
    "start": "567480",
    "end": "574260"
  },
  {
    "text": "uh and finally we have the log analytics workspace this is where all the metrics and logs and everything will be routed",
    "start": "574260",
    "end": "580620"
  },
  {
    "text": "so both from your applications but also from the container apps environment also like things like the system logs and",
    "start": "580620",
    "end": "586980"
  },
  {
    "text": "those kind of things everything will go down there to the local analytics workspace and obviously you can you can",
    "start": "586980",
    "end": "592980"
  },
  {
    "text": "pre-provision that as well so creating container apps is really easy",
    "start": "592980",
    "end": "599100"
  },
  {
    "text": "really low friction here as long as you have a container image somewhere that you that you have built and published to",
    "start": "599100",
    "end": "605040"
  },
  {
    "text": "a container industry it's really easy now to deploy it so you can for example do this using the",
    "start": "605040",
    "end": "610380"
  },
  {
    "text": "Azure CLI which is my favorite way and so there's two things first create",
    "start": "610380",
    "end": "616380"
  },
  {
    "text": "the environment and you can see here that I'm you can specify things like the log workspace",
    "start": "616380",
    "end": "622500"
  },
  {
    "text": "and the virtual network if you have that you can also skip that and then these",
    "start": "622500",
    "end": "628080"
  },
  {
    "text": "things will be provisioned for you uh which is nice for for demos and and when you try things out but for a more",
    "start": "628080",
    "end": "633480"
  },
  {
    "text": "realistic scenario you would typically you know pass it an existing v-net or and the log analytics workspace",
    "start": "633480",
    "end": "639660"
  },
  {
    "text": "and the other part here is that actually create the container app uh basically by",
    "start": "639660",
    "end": "644940"
  },
  {
    "text": "pointing it to a Docker image somewhere in this case it points to a Public Image",
    "start": "644940",
    "end": "650640"
  },
  {
    "text": "but obviously it can be your own image and then you would also need to to pass the authentication credentials in some",
    "start": "650640",
    "end": "656820"
  },
  {
    "text": "way and there's multiple things to do that an alternative to use CLI is to use arm",
    "start": "656820",
    "end": "664620"
  },
  {
    "text": "or bicep which is nice when you do this from a pipeline so you can run this over and over again so but you can do this",
    "start": "664620",
    "end": "670019"
  },
  {
    "text": "both ways and sometimes you will use a combination of this so in the demo that I will show you later",
    "start": "670019",
    "end": "676500"
  },
  {
    "text": "I'm using bicep for uh for deploying all of the resources then I'm using the CLI",
    "start": "676500",
    "end": "681899"
  },
  {
    "text": "actually to to do the the revision swapping that we'll talk about but since I know you haven't tried it",
    "start": "681899",
    "end": "688200"
  },
  {
    "text": "let's just uh quickly see what it takes to actually create one of these things",
    "start": "688200",
    "end": "694260"
  },
  {
    "text": "and I hope you can see back there silence is that yes or no",
    "start": "694260",
    "end": "701700"
  },
  {
    "text": "okay I see at least one thumb up so just shout if you can see it the screens aren't that big but maybe you see better",
    "start": "701700",
    "end": "710120"
  },
  {
    "text": "great thank you okay so I already have a few container",
    "start": "710279",
    "end": "715380"
  },
  {
    "text": "apps environments uh so I created one beforehand so what I'm going to do is to create a",
    "start": "715380",
    "end": "721500"
  },
  {
    "text": "container app inside this environment so if I go into this one called contain wrap demo I could within here create a",
    "start": "721500",
    "end": "730620"
  },
  {
    "text": "new container app so I can do this from the portal but I can also do it from the CLI like I",
    "start": "730620",
    "end": "737040"
  },
  {
    "text": "showed you before so I'm going to use the CLI here so",
    "start": "737040",
    "end": "742500"
  },
  {
    "text": "container AC container app great and it's really dark here",
    "start": "742500",
    "end": "748860"
  },
  {
    "text": "so fortunately I pre-written the command so let's just run it so what I'm doing now is I'm pointing to",
    "start": "748860",
    "end": "755100"
  },
  {
    "text": "the existing container environment called container app demo so this is also really small",
    "start": "755100",
    "end": "760579"
  },
  {
    "text": "thank you and I'm pointing to an image that I published to to Docker Hub so",
    "start": "760579",
    "end": "766740"
  },
  {
    "text": "it's a it's a public image per se just something to deploy and it's already created now which means",
    "start": "766740",
    "end": "773040"
  },
  {
    "text": "it deployed into the cloud and you get all the information about this container app back here",
    "start": "773040",
    "end": "779940"
  },
  {
    "text": "and we're not going to go through all these lines hopefully but uh one of the most",
    "start": "779940",
    "end": "786360"
  },
  {
    "text": "interesting Parts is probably the the URL that you get that's an output so let's copy this one",
    "start": "786360",
    "end": "793560"
  },
  {
    "text": "and the head over here just to see what we have so there we go it's a this is you know",
    "start": "793560",
    "end": "800339"
  },
  {
    "text": "file new application in visual studio and I published it at the docker image but hopefully you can see how easy this",
    "start": "800339",
    "end": "806160"
  },
  {
    "text": "is to actually deploy it now it's really not more complicated than that so it's really really easy way to just deploy",
    "start": "806160",
    "end": "811560"
  },
  {
    "text": "things into the cloud so it doesn't have to be like you know this full microservice system you can also deploy",
    "start": "811560",
    "end": "817019"
  },
  {
    "text": "simple applications like this and you do get a lot of benefits by by doing so",
    "start": "817019",
    "end": "823079"
  },
  {
    "text": "so if you go back here now we should see the container app here and we can go inside to take a peek of",
    "start": "823079",
    "end": "831360"
  },
  {
    "text": "some of the things that you can you know configure around a container app so",
    "start": "831360",
    "end": "837660"
  },
  {
    "text": "if we go to the containers this is now where you see the information about I can also assume",
    "start": "837660",
    "end": "844260"
  },
  {
    "text": "like this so again you can see which which image I'm using which version I'm using we also have things like",
    "start": "844260",
    "end": "850500"
  },
  {
    "text": "environment variables for configuration we have health probes which is uh I'll come back to that later",
    "start": "850500",
    "end": "857480"
  },
  {
    "text": "um then we have scalar replicas so this is where I could Define how this",
    "start": "857760",
    "end": "863220"
  },
  {
    "text": "application should scale and how many instances I should have so now I don't haven't configured",
    "start": "863220",
    "end": "868380"
  },
  {
    "text": "anything so by default it will actually say 0 to 10 here if you can see this min",
    "start": "868380",
    "end": "874920"
  },
  {
    "text": "max and this is actually one important feature I would say around container",
    "start": "874920",
    "end": "879959"
  },
  {
    "text": "apps is that you have the the possibility to scale down to zero instances and it will actually kind of wake up",
    "start": "879959",
    "end": "886260"
  },
  {
    "text": "when you when you make a request to this particular container app so this is you know important for",
    "start": "886260",
    "end": "891779"
  },
  {
    "text": "memories has been mainly around resource cost right so you can actually scale down an application that's not being",
    "start": "891779",
    "end": "897300"
  },
  {
    "text": "used and then when something happens it will wake up and you can scale up so for many cases this is perfect",
    "start": "897300",
    "end": "904860"
  },
  {
    "text": "especially for Dev test scenarios but also for some production scenarios that for things doesn't have to be running all the time maybe it's okay that it",
    "start": "904860",
    "end": "911760"
  },
  {
    "text": "takes a short amount of time for it to wake up and process things when it when it comes so it's a really important",
    "start": "911760",
    "end": "918240"
  },
  {
    "text": "concept there of being able to scale down to zero uh and then we have uh revisions",
    "start": "918240",
    "end": "925980"
  },
  {
    "text": "um and so this is an important concept and I'm gonna go back to the slides just for a short",
    "start": "925980",
    "end": "931740"
  },
  {
    "text": "while to kind of explain that so as I mentioned you can think of",
    "start": "931740",
    "end": "937139"
  },
  {
    "text": "revisions as a kind of immutable version snapshot of your container app so typically a particular version of your",
    "start": "937139",
    "end": "943560"
  },
  {
    "text": "container app and when you deploy a container app you can specify",
    "start": "943560",
    "end": "949800"
  },
  {
    "text": "do I only want to have one single revision active at any time or do I want",
    "start": "949800",
    "end": "955440"
  },
  {
    "text": "to have multiple revisions active and it this really depends on on the type of applications in many scenarios you only",
    "start": "955440",
    "end": "962040"
  },
  {
    "text": "want to have one instance running for example you know one version running I",
    "start": "962040",
    "end": "967380"
  },
  {
    "text": "would say so things like everything running in the background the background processing those kind of things is",
    "start": "967380",
    "end": "972839"
  },
  {
    "text": "typically you'll have only have one active version at any given time uh but maybe for the public things for",
    "start": "972839",
    "end": "978899"
  },
  {
    "text": "like the API and the web apps maybe you do want to have multiple versions running at the same time",
    "start": "978899",
    "end": "985880"
  },
  {
    "text": "and the reason for that I'll come back to that is that you can do a lot of things by having multiple versions",
    "start": "985880",
    "end": "991380"
  },
  {
    "text": "running at the same time you can do things like blue green deployment you can do a b testing you can deploy a new",
    "start": "991380",
    "end": "997920"
  },
  {
    "text": "version and test it before you actually roll it out into production so those are some of the reasons why you want to do",
    "start": "997920",
    "end": "1004399"
  },
  {
    "text": "that uh so for some some changes uh that they",
    "start": "1004399",
    "end": "1011300"
  },
  {
    "text": "kind of differ here about what type of change you make so they call it revision scope change that is when you actually",
    "start": "1011300",
    "end": "1017779"
  },
  {
    "text": "create a new revision but some changes it doesn't require you to create a new revision and it kind of makes sense that",
    "start": "1017779",
    "end": "1024620"
  },
  {
    "text": "if you for example uh change the version of your image you you build a new version then obviously you",
    "start": "1024620",
    "end": "1031339"
  },
  {
    "text": "you're going to create a new revision for that version but let's say that you you change some",
    "start": "1031339",
    "end": "1037220"
  },
  {
    "text": "secret values that you read from your application uh then it doesn't make sense that you",
    "start": "1037220",
    "end": "1042620"
  },
  {
    "text": "actually need to deploy the application because the secrets is stored separately so depending on the type of change some",
    "start": "1042620",
    "end": "1048380"
  },
  {
    "text": "of those will require you to create a new revision and some of them won't",
    "start": "1048380",
    "end": "1053840"
  },
  {
    "text": "and this is really related now to traffic coming into your application as I",
    "start": "1053840",
    "end": "1059360"
  },
  {
    "text": "mentioned so the reason for having multiple active revisions like this is to be able to actually send traffic to",
    "start": "1059360",
    "end": "1064640"
  },
  {
    "text": "it so this is called Ingress this is also a concept from from kubernetes but this is",
    "start": "1064640",
    "end": "1070280"
  },
  {
    "text": "about how you want traffic to reach your container for some things you won't have any",
    "start": "1070280",
    "end": "1076340"
  },
  {
    "text": "Ingress or actually you will have an internal Ingress because you don't want to have public traffic to that particular application so again you know",
    "start": "1076340",
    "end": "1082880"
  },
  {
    "text": "the background processing helps maybe internal apis uh you never want to have traffic being",
    "start": "1082880",
    "end": "1088280"
  },
  {
    "text": "sent to those things from the outside but for your public facing API it's a web application you will you know you",
    "start": "1088280",
    "end": "1094340"
  },
  {
    "text": "want to have a public Ingress here uh and it supports uh https and TCP and",
    "start": "1094340",
    "end": "1100700"
  },
  {
    "text": "so on for the Ingress so you can do things like TLS termination but also then you can do what's called",
    "start": "1100700",
    "end": "1107780"
  },
  {
    "text": "uh referred to as a traffic split thing so again if you do have multiple versions running of your container apps",
    "start": "1107780",
    "end": "1113900"
  },
  {
    "text": "you can now use this feature to actually Route traffic to the different versions",
    "start": "1113900",
    "end": "1119059"
  },
  {
    "text": "so a very common scenario would be that I'm I'm building a new version but I want to verify that that version",
    "start": "1119059",
    "end": "1126260"
  },
  {
    "text": "actually works before it hits production so one way of doing that is to you know",
    "start": "1126260",
    "end": "1132080"
  },
  {
    "text": "deploy it separate from the from the existing one and then you can start routing traffic to it and you can do",
    "start": "1132080",
    "end": "1139400"
  },
  {
    "text": "this in multiple ways one way would do it like this to actually just send maybe 10 or 20 of the traffic to the new one",
    "start": "1139400",
    "end": "1145880"
  },
  {
    "text": "so you can kind of gradually roll out the new version if everything looks good you can increase that one until you hit",
    "start": "1145880",
    "end": "1151820"
  },
  {
    "text": "100 and then you will you know remove the old one that is one way of doing it if you do a b testing you probably want",
    "start": "1151820",
    "end": "1159080"
  },
  {
    "text": "to have both ones running all the time and just send traffic to it maybe 50 50.",
    "start": "1159080",
    "end": "1164960"
  },
  {
    "text": "so a lot of options here a lot of flexibility around this feature and you define this either like this",
    "start": "1164960",
    "end": "1171860"
  },
  {
    "text": "using bicep you specify the revisions how much traffic should be sent to each of these revisions or you can also do it",
    "start": "1171860",
    "end": "1179240"
  },
  {
    "text": "using the CLI like this so basically I'm saying send 80 of the traffic to that",
    "start": "1179240",
    "end": "1185480"
  },
  {
    "text": "revision send 20 of the traffic to that revision and I'll show you later where I'm doing",
    "start": "1185480",
    "end": "1192260"
  },
  {
    "text": "this in a deployment pipeline uh where you can kind of um verify the the functionality before",
    "start": "1192260",
    "end": "1199000"
  },
  {
    "text": "sending all the traffic to the new version so let's see how this actually works and",
    "start": "1199000",
    "end": "1208179"
  },
  {
    "text": "so in this case let's see if I can go to back to the overview",
    "start": "1208940",
    "end": "1216320"
  },
  {
    "text": "for the container app and we can just click this one so we have the application running here",
    "start": "1216320",
    "end": "1223360"
  },
  {
    "text": "um so let's deploy a new version of the application uh so I'm going to do that if you go to",
    "start": "1223580",
    "end": "1229220"
  },
  {
    "text": "the revision we can see that we now have one revision running which makes sense we only deploy this once but from here",
    "start": "1229220",
    "end": "1235760"
  },
  {
    "text": "and this is obviously not how you would do it in in a real life scenario but you can create a new revision from here",
    "start": "1235760",
    "end": "1243320"
  },
  {
    "text": "and uh so basically what I want to do now is I want to",
    "start": "1243320",
    "end": "1248780"
  },
  {
    "text": "upgrade to to the next version so in this case we deployed 1.0 right",
    "start": "1248780",
    "end": "1254480"
  },
  {
    "text": "uh but I want to now deploy 2.0 so I'm just going to create a new",
    "start": "1254480",
    "end": "1259580"
  },
  {
    "text": "revision based on the old one and just you know change the tag here the tag version",
    "start": "1259580",
    "end": "1265580"
  },
  {
    "text": "so I'm just going to save it and click create so now it says deploy revision so now under the hood basically what it",
    "start": "1265580",
    "end": "1271820"
  },
  {
    "text": "does now is that it creates a new container downloads the the image version and it's going to start up the",
    "start": "1271820",
    "end": "1278960"
  },
  {
    "text": "new one and in this case it's gonna now you know eventually shut down the old",
    "start": "1278960",
    "end": "1285679"
  },
  {
    "text": "one so now you can see that we actually have two revisions here and if I zoom in a bit you can see this",
    "start": "1285679",
    "end": "1293539"
  },
  {
    "text": "still provisioning so the UI isn't always up to date here but you can see now that it's uh you have the traffic to the right here so",
    "start": "1293539",
    "end": "1300140"
  },
  {
    "text": "what this means now is that uh when this is done all the traffic will go to the new one and the old one",
    "start": "1300140",
    "end": "1305780"
  },
  {
    "text": "will be will be deactivated so if you go back to this one",
    "start": "1305780",
    "end": "1311360"
  },
  {
    "text": "uh the only the only change I made to the application what did I change the background color so now we kind of see",
    "start": "1311360",
    "end": "1316820"
  },
  {
    "text": "that now it's running 2.0 um",
    "start": "1316820",
    "end": "1322460"
  },
  {
    "text": "and again now we only have you know that the one revision so this is the the default behavior when",
    "start": "1322460",
    "end": "1329059"
  },
  {
    "text": "you create the container app that you have one one revision active at a time you deploy a new version container apps",
    "start": "1329059",
    "end": "1334880"
  },
  {
    "text": "will will make sure that the new version gets the traffic once the container is up and running and ready to accept",
    "start": "1334880",
    "end": "1340100"
  },
  {
    "text": "requests and then it's going to remove the old one and that's how you achieve you know zero downtime when you do",
    "start": "1340100",
    "end": "1345440"
  },
  {
    "text": "deployments uh so this is the default Behavior but um",
    "start": "1345440",
    "end": "1350659"
  },
  {
    "text": "if you can see we have this core thing called the revision mode up here that we can change",
    "start": "1350659",
    "end": "1356720"
  },
  {
    "text": "and now it says single here because that's the default and again",
    "start": "1356720",
    "end": "1362179"
  },
  {
    "text": "that means that we have only have one single active revision at a given time but let's change this",
    "start": "1362179",
    "end": "1368240"
  },
  {
    "text": "and I'm going to switch to multiple and so several several revisions active",
    "start": "1368240",
    "end": "1373280"
  },
  {
    "text": "simultaneously so let's change the configuration now [Music]",
    "start": "1373280",
    "end": "1379700"
  },
  {
    "text": "and now we're going to deploy deploy a new version and you'll see that the Behavior now change compared to how it",
    "start": "1379700",
    "end": "1386299"
  },
  {
    "text": "used to work so again uh now we have still one active revision now we can",
    "start": "1386299",
    "end": "1392299"
  },
  {
    "text": "actually also since I changed to multiple now we can also actually show inactive revisions",
    "start": "1392299",
    "end": "1397940"
  },
  {
    "text": "and then we can actually see now the old revision uh which is you know the 1.0 it's still",
    "start": "1397940",
    "end": "1404659"
  },
  {
    "text": "there but it stopped it doesn't cost me anything and eventually it will be purged by container apps uh but but it's still",
    "start": "1404659",
    "end": "1411980"
  },
  {
    "text": "going to be there but let's create another revision then so let's deploy the Fantastic 3.0 of",
    "start": "1411980",
    "end": "1419840"
  },
  {
    "text": "this application which will give us yet another background color",
    "start": "1419840",
    "end": "1425480"
  },
  {
    "text": "so let's deploy this and just compare now to what happened",
    "start": "1425480",
    "end": "1431240"
  },
  {
    "text": "before when we did this single revision mode",
    "start": "1431240",
    "end": "1436299"
  },
  {
    "text": "so what we should end up with now is that we're gonna have another revision which is a top one there",
    "start": "1436880",
    "end": "1443299"
  },
  {
    "text": "but it's not going to get any traffic so all the traffic is still being sent to the old revision and this is the you",
    "start": "1443299",
    "end": "1450740"
  },
  {
    "text": "know the the default Behavior so now we can see that we have to two active revisions but one of them",
    "start": "1450740",
    "end": "1457340"
  },
  {
    "text": "doesn't receive any traffic um but if I want to now all of these",
    "start": "1457340",
    "end": "1464480"
  },
  {
    "text": "revisions now is still reachable so if I click on this revision that doesn't get any traffic I can actually get the URL",
    "start": "1464480",
    "end": "1473000"
  },
  {
    "text": "and if we switch this one we should see yet another color so",
    "start": "1473000",
    "end": "1479840"
  },
  {
    "text": "now I actually deployed the new version 3.0 I can access it like this but none of the customer sees it because",
    "start": "1479840",
    "end": "1487039"
  },
  {
    "text": "they you know they don't go to that URL right they go to the to the public one",
    "start": "1487039",
    "end": "1492320"
  },
  {
    "text": "so again let's go just back here and click on the on the public one so here we'll still",
    "start": "1492320",
    "end": "1498320"
  },
  {
    "text": "see the 2.0 version but obviously I can use this now to to",
    "start": "1498320",
    "end": "1503360"
  },
  {
    "text": "you know around smoke tests have people testing it if everything looks good then we can you know swap it into production",
    "start": "1503360",
    "end": "1510740"
  },
  {
    "text": "and then we can do that by you know changing the traffic so now it says 0 represent to the new",
    "start": "1510740",
    "end": "1517340"
  },
  {
    "text": "one and 100 to the old one so I could you know Swap this around and then I will just pop the new version into",
    "start": "1517340",
    "end": "1522919"
  },
  {
    "text": "production I could also do you know as I mentioned maybe do some kind of a b testing",
    "start": "1522919",
    "end": "1528500"
  },
  {
    "text": "so actually say 50 traffic to each of these revision so if I just change this",
    "start": "1528500",
    "end": "1534860"
  },
  {
    "text": "and there we have the save what should happen now",
    "start": "1534860",
    "end": "1540860"
  },
  {
    "text": "once this is done is that 50 of the requests will go to",
    "start": "1540860",
    "end": "1545960"
  },
  {
    "text": "the new one and fifty percent of the requests will go to the old one so",
    "start": "1545960",
    "end": "1553279"
  },
  {
    "text": "if I refresh this you can see that you know on on average it's going to be every other request it's going to go to",
    "start": "1553279",
    "end": "1558980"
  },
  {
    "text": "to new one so again this is you know ways to do you know a b testing a way to do you know",
    "start": "1558980",
    "end": "1565400"
  },
  {
    "text": "grab your rollouts without having any downtime so a very controlled way of doing this so really nice feature and",
    "start": "1565400",
    "end": "1570980"
  },
  {
    "text": "this is really if you have worked with kubernetes this is completely built on top of that but it's just a lot simpler",
    "start": "1570980",
    "end": "1576500"
  },
  {
    "text": "you don't have to learn a lot of things to do this which is really nice",
    "start": "1576500",
    "end": "1581860"
  },
  {
    "text": "how many I work with kubernetes by the way oh almost more than container apps so maybe",
    "start": "1586340",
    "end": "1593840"
  },
  {
    "text": "it will be you know switching around after the session so uh let's talk a little bit about",
    "start": "1593840",
    "end": "1600559"
  },
  {
    "text": "scaling um we saw how we can you know deploy versions in a controlled way uh so",
    "start": "1600559",
    "end": "1607100"
  },
  {
    "text": "scaling is obviously a very important part in both scaling up to you know to meet uh increased load uh but again also to",
    "start": "1607100",
    "end": "1615500"
  },
  {
    "text": "scale down and to actually being able to scale down to zero and this is one of the examples of the open source",
    "start": "1615500",
    "end": "1621559"
  },
  {
    "text": "components that that is part of container apps so it's called Cada and it's been around for several years",
    "start": "1621559",
    "end": "1628039"
  },
  {
    "text": "and this is how you would typically do this in kubernetes you will install this and config it yourself",
    "start": "1628039",
    "end": "1633260"
  },
  {
    "text": "and it enables you to do event driven scaling so so you can scale on a lot of",
    "start": "1633260",
    "end": "1640279"
  },
  {
    "text": "different things for example the number of messages on the cube and there's all sorts of things",
    "start": "1640279",
    "end": "1646760"
  },
  {
    "text": "and again this is now based on the open source project so so any additions there will actually eventually trickle into",
    "start": "1646760",
    "end": "1652940"
  },
  {
    "text": "container apps which is really nice um and so here are some of the examples",
    "start": "1652940",
    "end": "1659360"
  },
  {
    "text": "that you can do so you can Scale based on the number of HTTP requests",
    "start": "1659360",
    "end": "1665260"
  },
  {
    "text": "so say that if the number of concurrent requests is above a certain threshold then I want",
    "start": "1665260",
    "end": "1671539"
  },
  {
    "text": "you to scale up and you can specify how much you want to scale up you can you can use the event driven",
    "start": "1671539",
    "end": "1677120"
  },
  {
    "text": "scaling so and you have all these various sources so it could be Azure",
    "start": "1677120",
    "end": "1682279"
  },
  {
    "text": "service bus but it could also be things like my sequel it could be redis and so on so any kind of events",
    "start": "1682279",
    "end": "1688120"
  },
  {
    "text": "is is available as these scada scalers you can just plug into",
    "start": "1688120",
    "end": "1693620"
  },
  {
    "text": "you can also do things like scale uh you know based on CPU and memory and it really depends on what type of",
    "start": "1693620",
    "end": "1699380"
  },
  {
    "text": "application you have so what's interesting is that the these two ones on the left here is uh they can",
    "start": "1699380",
    "end": "1706640"
  },
  {
    "text": "be scaled down to zero instances while if you want to scale on CPU or memory you can't scale down to zero because",
    "start": "1706640",
    "end": "1713360"
  },
  {
    "text": "then there is you know nothing to measure your CPU on so can it kind of make sense uh so what's what's cool",
    "start": "1713360",
    "end": "1719419"
  },
  {
    "text": "about this is that again you can scale this down to zero so for example if you want to do HTTP scaling from your API",
    "start": "1719419",
    "end": "1725480"
  },
  {
    "text": "you can scale down to zero which means that you don't pay a single dime for it but as soon as the first request comes",
    "start": "1725480",
    "end": "1731600"
  },
  {
    "text": "in then this scale rule will kick in and scale up your application it will start accepting requests",
    "start": "1731600",
    "end": "1738080"
  },
  {
    "text": "so that's that's actually really really powerful and can make for really resource effective usage of for your",
    "start": "1738080",
    "end": "1745700"
  },
  {
    "text": "applications instead of having things running all the time and then you know just uh once in a while you know process some",
    "start": "1745700",
    "end": "1752960"
  },
  {
    "text": "kind of request so the other part uh we talked about",
    "start": "1752960",
    "end": "1760159"
  },
  {
    "text": "container apps now which is you know how you will host your system and you know run it then I'll talk a little bit about Dapper",
    "start": "1760159",
    "end": "1767179"
  },
  {
    "text": "so Dapper is a is a framework it stands for distributed application runtime",
    "start": "1767179",
    "end": "1772460"
  },
  {
    "text": "and this is more for you know for the developer Centric for actually building your microservice applications because",
    "start": "1772460",
    "end": "1778820"
  },
  {
    "text": "if you have been down that route by again splitting apart your application into multiple independent Services",
    "start": "1778820",
    "end": "1784899"
  },
  {
    "text": "you're gonna you know find out that there is a lot of things that you need to do you need to solve a lot of things",
    "start": "1784899",
    "end": "1791240"
  },
  {
    "text": "becomes harder and there's a lot of like boilerplate things you need to run and depending on the number of services and",
    "start": "1791240",
    "end": "1797179"
  },
  {
    "text": "depending on the tech stacks and so on this can be actually a lot of work so that price is another open source",
    "start": "1797179",
    "end": "1802820"
  },
  {
    "text": "project it's part of the cloud native Foundation which kind of tries to solve this by",
    "start": "1802820",
    "end": "1808100"
  },
  {
    "text": "abstracting away a lot of things that make it a lot easier for you to to build microservices and again focus on writing",
    "start": "1808100",
    "end": "1815000"
  },
  {
    "text": "your your you know your application instead of doing all this Plumbing uh implementing things like service",
    "start": "1815000",
    "end": "1821179"
  },
  {
    "text": "Discovery or Pub sub messaging various State Management and so on and uh",
    "start": "1821179",
    "end": "1827960"
  },
  {
    "text": "so what it does it does is kind of abstracts away all of those complexities and obviously with that abstraction you",
    "start": "1827960",
    "end": "1835159"
  },
  {
    "text": "know comes some trade-offs uh because so you can't do everything with Dapper but you can do a lot of things",
    "start": "1835159",
    "end": "1841279"
  },
  {
    "text": "um and uh so I I think you can probably apply like this you know 80 20 rule or",
    "start": "1841279",
    "end": "1847700"
  },
  {
    "text": "90 to 10 rule uh when you should use Dapper or not and uh",
    "start": "1847700",
    "end": "1852740"
  },
  {
    "text": "and you can really you can use it for for both and and this is not like a requirement if you if you do container",
    "start": "1852740",
    "end": "1858380"
  },
  {
    "text": "apps but this can help you actually build those microservices so they try to kind of implement the best practices",
    "start": "1858380",
    "end": "1865340"
  },
  {
    "text": "around how you would Implement microservices into different building blocks that you can use",
    "start": "1865340",
    "end": "1870940"
  },
  {
    "text": "and they will handle things like resiliency so for example doing retries doing exponential backoffs things like",
    "start": "1870940",
    "end": "1878720"
  },
  {
    "text": "circuit breakers handling timeouts those kind of things is something that you need to handle if you start breaking",
    "start": "1878720",
    "end": "1884240"
  },
  {
    "text": "things apart uh message guarantee for example if you",
    "start": "1884240",
    "end": "1889940"
  },
  {
    "text": "building a message based applications so making sure that your messages comes comes from comes to the receiver",
    "start": "1889940",
    "end": "1896419"
  },
  {
    "text": "endpoint once and only ones secure connections and a lot of other things",
    "start": "1896419",
    "end": "1901760"
  },
  {
    "text": "and uh so here are the some examples of the various building blocks that is part",
    "start": "1901760",
    "end": "1907039"
  },
  {
    "text": "of dapper so they have things like State Management which is then basically an abstraction if you want to store data in",
    "start": "1907039",
    "end": "1914120"
  },
  {
    "text": "in some kind of state uh and behind that could be really any",
    "start": "1914120",
    "end": "1920059"
  },
  {
    "text": "number of existing storage mechanisms so it could be like a cosmos DB it could be redis typically some kind of key value",
    "start": "1920059",
    "end": "1927320"
  },
  {
    "text": "or nosql store and then you just get a very simple API instead that you know so you don't have",
    "start": "1927320",
    "end": "1934100"
  },
  {
    "text": "to write any code really to for example store data or retrieve data or do queries",
    "start": "1934100",
    "end": "1939440"
  },
  {
    "text": "also service invocation a big thing when you do microservices you have to have a way to as I said you know know where are",
    "start": "1939440",
    "end": "1947059"
  },
  {
    "text": "the other services running how can I access it how can I call it and Dapper works fine",
    "start": "1947059",
    "end": "1953059"
  },
  {
    "text": "both running on your local machine and running in the cloud and it will solve this problem for you you don't have to",
    "start": "1953059",
    "end": "1958520"
  },
  {
    "text": "know where services are running that's actually a really nice experience also things like secret management you",
    "start": "1958520",
    "end": "1965360"
  },
  {
    "text": "need to have a way of storing and accessing your secrets so again when you implement this you can say that I want",
    "start": "1965360",
    "end": "1970880"
  },
  {
    "text": "to use Azure keyboard for example but that's not something you need to implement yourself that is handled by the building block for Dapper and I will",
    "start": "1970880",
    "end": "1977960"
  },
  {
    "text": "show you an example in a few minutes and there's actually a few more building",
    "start": "1977960",
    "end": "1983179"
  },
  {
    "text": "blocks than what I'm showing here so again this is an open source project and functionality is being added all the",
    "start": "1983179",
    "end": "1990380"
  },
  {
    "text": "time which is obviously a benefit for us so how this actually works is that",
    "start": "1990380",
    "end": "1998260"
  },
  {
    "text": "Dapper is implemented by using what's called a sidecar which is a kind of a design pattern and this means that if",
    "start": "1998260",
    "end": "2005380"
  },
  {
    "text": "you have an application consisting of two Services A and B and they want to talk to each other they won't actually talk directly to",
    "start": "2005380",
    "end": "2012940"
  },
  {
    "text": "each other instead it will go through this Dapper sidecar so every time you use Dapper and you run your application",
    "start": "2012940",
    "end": "2019779"
  },
  {
    "text": "every service will have a sidecar running next to it which will actually Implement all the functionality",
    "start": "2019779",
    "end": "2026019"
  },
  {
    "text": "so this is what makes possible for example to do service Discovery so I only need to say I want to call service",
    "start": "2026019",
    "end": "2031779"
  },
  {
    "text": "B and then I let Dapper handle that complexity for me to actually figure out okay where is service B actually running",
    "start": "2031779",
    "end": "2038140"
  },
  {
    "text": "how many instances where should I route this request but also do things like secure communication so you can do encryption",
    "start": "2038140",
    "end": "2044860"
  },
  {
    "text": "all the way handling things like resiliency right doing retries if it",
    "start": "2044860",
    "end": "2050378"
  },
  {
    "text": "fails doing circuit breakers if you have a lot of load those kind of things also you get tracing and Logo metrics and so",
    "start": "2050379",
    "end": "2056679"
  },
  {
    "text": "on um and I'll show you an example of how this looks in in code",
    "start": "2056679",
    "end": "2062740"
  },
  {
    "text": "so in addition to this this is the service invocation in addition to that we have done the different building blocks so things like State Stores",
    "start": "2062740",
    "end": "2069700"
  },
  {
    "text": "and this this blocks are optional you don't have to use them uh but again if you're storing data in for",
    "start": "2069700",
    "end": "2076480"
  },
  {
    "text": "example Cosmos red disc Cassandra there's lots of more choices here you can actually just plug that in and you",
    "start": "2076480",
    "end": "2082720"
  },
  {
    "text": "don't have to write any any code you can actually switch it you can run for example your local redis if you run it",
    "start": "2082720",
    "end": "2089260"
  },
  {
    "text": "locally you can do redis if you deploy it to your production you can do Cosmos for example without actually changing a",
    "start": "2089260",
    "end": "2095560"
  },
  {
    "text": "single line of code so state store is one of the building blocks publish subscribe for doing Pub",
    "start": "2095560",
    "end": "2101680"
  },
  {
    "text": "sub messaging again you can select the various types of stores for this",
    "start": "2101680",
    "end": "2108040"
  },
  {
    "text": "I also have resource bindings which is a way to actually communicate with external systems also having things",
    "start": "2108040",
    "end": "2115540"
  },
  {
    "text": "happening on the outside trigger things in in your applications for example an",
    "start": "2115540",
    "end": "2120579"
  },
  {
    "text": "event or the message queue could be an example here and how you do this is that you specify",
    "start": "2120579",
    "end": "2125740"
  },
  {
    "text": "this in a component file which is a yaml file uh this is where you have to specify I",
    "start": "2125740",
    "end": "2131380"
  },
  {
    "text": "want to use this building block and I want to use this type of store so as an example for a simple one could",
    "start": "2131380",
    "end": "2137500"
  },
  {
    "text": "be if you want to do Pub sub messaging and you can then select I actually want",
    "start": "2137500",
    "end": "2142540"
  },
  {
    "text": "to use the Azure service bus as the implementation then you define this component file",
    "start": "2142540",
    "end": "2148300"
  },
  {
    "text": "and you give it a type so in this case this is well actually how Dapper knows which of the implementation of this",
    "start": "2148300",
    "end": "2155079"
  },
  {
    "text": "building block that it should use so in this case I'm pointing it to Azure service bus and then depending on what type I'm",
    "start": "2155079",
    "end": "2162280"
  },
  {
    "text": "using here it is going to need some metadata in this case you know the connection string to the service bus and",
    "start": "2162280",
    "end": "2167320"
  },
  {
    "text": "so on and then that's really all what that you need to do and then you can use the apis and the sdks to to call it and",
    "start": "2167320",
    "end": "2175300"
  },
  {
    "text": "it doesn't really matter if it's the Azure service bus or if it's redis or if it's n-service bus you will have the",
    "start": "2175300",
    "end": "2181119"
  },
  {
    "text": "same code so I'm going to show you a demo uh just a sample application that I have which",
    "start": "2181119",
    "end": "2187720"
  },
  {
    "text": "consists of three parts so there's a web app an API and then there's a background",
    "start": "2187720",
    "end": "2193660"
  },
  {
    "text": "job that processes orders so the web calls the API the API use Pub",
    "start": "2193660",
    "end": "2200200"
  },
  {
    "text": "sub to notify the the processing that there is a new order uh so that's going to go through Azure",
    "start": "2200200",
    "end": "2207099"
  },
  {
    "text": "service bus and the data will then be stored in Cosmos DB",
    "start": "2207099",
    "end": "2212880"
  },
  {
    "text": "so I'm going to show you this locally and then we're going to see how it looks when running this in the cloud",
    "start": "2214240",
    "end": "2220599"
  },
  {
    "text": "so let's head over to vs code and all this code is available by the way on my GitHub account I have a link in the end",
    "start": "2220599",
    "end": "2227380"
  },
  {
    "text": "of the presentation so",
    "start": "2227380",
    "end": "2232839"
  },
  {
    "text": "again I have the the three applications is hiding here the API and the processor and the order",
    "start": "2232839",
    "end": "2239560"
  },
  {
    "text": "web that's the three applications and there we have some other things and let's just take a quick look of how",
    "start": "2239560",
    "end": "2247420"
  },
  {
    "text": "code actually can can be how you code with Dapper so for example when I use",
    "start": "2247420",
    "end": "2253480"
  },
  {
    "text": "the order web I'm going to make a call to the API and zoom up",
    "start": "2253480",
    "end": "2261040"
  },
  {
    "text": "so it's really two lines of code here where the first line is just instantiating the Dapper client and",
    "start": "2261040",
    "end": "2268240"
  },
  {
    "text": "again Dapper is is portable everything is API based so you can do everything by",
    "start": "2268240",
    "end": "2273400"
  },
  {
    "text": "here by by calling the API so Dapper which means that it's not in any way bound to a particular platform or",
    "start": "2273400",
    "end": "2280780"
  },
  {
    "text": "language and so on but then for the most languages there is sdks which makes it even more simple so you don't have to",
    "start": "2280780",
    "end": "2286720"
  },
  {
    "text": "you know figure out the apis yourself uh so in this case I'm instantiating my",
    "start": "2286720",
    "end": "2292000"
  },
  {
    "text": "Dapper client and I'll say I want to call the method order on the the service",
    "start": "2292000",
    "end": "2298359"
  },
  {
    "text": "called order API and this is really like the the magic here so",
    "start": "2298359",
    "end": "2304480"
  },
  {
    "text": "the order API here that's actually the identification or the ID of that service",
    "start": "2304480",
    "end": "2309640"
  },
  {
    "text": "I don't need to specify where that service is running if it's running on my machine or if it's",
    "start": "2309640",
    "end": "2314740"
  },
  {
    "text": "which Port is running I just say call an order API and you figure out where it's running",
    "start": "2314740",
    "end": "2319900"
  },
  {
    "text": "and this will work when I run it locally and it will work exactly the same way when I run it for example in container apps which is quite powerful",
    "start": "2319900",
    "end": "2328079"
  },
  {
    "text": "um and another example if you go to the processor",
    "start": "2328960",
    "end": "2334180"
  },
  {
    "text": "here we can see another example where when you get a message through the pub sub I'm calling the the",
    "start": "2334180",
    "end": "2341260"
  },
  {
    "text": "save statusync and I'm giving it here is the the",
    "start": "2341260",
    "end": "2346599"
  },
  {
    "text": "definition of the order but again I'm referring to to the name here state store so again where is that",
    "start": "2346599",
    "end": "2353079"
  },
  {
    "text": "coming from state store this is just a string so this is where the the component file comes in and they are specified here so",
    "start": "2353079",
    "end": "2361240"
  },
  {
    "text": "I have a few yaml files here so I have one for Pub",
    "start": "2361240",
    "end": "2366400"
  },
  {
    "text": "sub one for the state store and a few more and so let's just take a look at the",
    "start": "2366400",
    "end": "2371920"
  },
  {
    "text": "state Cosmos then so",
    "start": "2371920",
    "end": "2377819"
  },
  {
    "text": "so here this is actually now where you can see the state store this is just the name of that component",
    "start": "2378099",
    "end": "2383619"
  },
  {
    "text": "and then it specifies okay where what type of store do you actually want to use and how can access it",
    "start": "2383619",
    "end": "2389440"
  },
  {
    "text": "so the type here is now state DOT azure.cosmos DB and then I will pass it",
    "start": "2389440",
    "end": "2394780"
  },
  {
    "text": "some information so it knows how to actually connect to a cosmos DB but again I could for example I have I",
    "start": "2394780",
    "end": "2400599"
  },
  {
    "text": "have commented this out but I could for example just as well use a local release instance running in a container which is",
    "start": "2400599",
    "end": "2407440"
  },
  {
    "text": "typically what I would do if I run this locally then I'll just use this component file instead and the the code will look",
    "start": "2407440",
    "end": "2413440"
  },
  {
    "text": "exactly the same which is you know some of the power hairs you can switch it depending on",
    "start": "2413440",
    "end": "2419560"
  },
  {
    "text": "which environment it is but also you don't you know there's a lot of code a lot of plumbing code that you don't have",
    "start": "2419560",
    "end": "2425079"
  },
  {
    "text": "to write which is actually quite nice and just a final example now we saw how",
    "start": "2425079",
    "end": "2431079"
  },
  {
    "text": "we can invoke things how we can store things if we look at the API it will also do use the pub sub so in",
    "start": "2431079",
    "end": "2438460"
  },
  {
    "text": "this case we have the publish event specifying again okay I want to send a",
    "start": "2438460",
    "end": "2444579"
  },
  {
    "text": "message to using the order Pub sub component and again",
    "start": "2444579",
    "end": "2450160"
  },
  {
    "text": "that is now specified in a component file here but the same name and here I'm pointing it to an Azure",
    "start": "2450160",
    "end": "2457119"
  },
  {
    "text": "service bus again I could use redis here this is just for example",
    "start": "2457119",
    "end": "2462220"
  },
  {
    "text": "so I'm going to run this now and so the thing with Dapper is not if I run",
    "start": "2462220",
    "end": "2467500"
  },
  {
    "text": "the application I have to make sure that the Dapper sidecar is running next to it otherwise and nothing of this will work",
    "start": "2467500",
    "end": "2474820"
  },
  {
    "text": "so this is the application the web app and we can create some order",
    "start": "2474820",
    "end": "2481480"
  },
  {
    "text": "blah blah and it will eventually show up here it wants to go through the the background one so everything is now running on my",
    "start": "2481480",
    "end": "2487780"
  },
  {
    "text": "local machine but again for this to work I have to make sure that the",
    "start": "2487780",
    "end": "2494619"
  },
  {
    "text": "those side cores actually running so Dapper needs to be running next to my application and you can do this in many ways but if",
    "start": "2494619",
    "end": "2502180"
  },
  {
    "text": "you're using vs code this is actually quite simple so there is an extension to",
    "start": "2502180",
    "end": "2507400"
  },
  {
    "text": "vs code that will help you with a lot of things around Dapper you get some some",
    "start": "2507400",
    "end": "2512920"
  },
  {
    "text": "UI and dashboards and so on but maybe more importantly you also get",
    "start": "2512920",
    "end": "2518940"
  },
  {
    "text": "some tasks that will help you with this so if you are are using vs code you",
    "start": "2518940",
    "end": "2523960"
  },
  {
    "text": "probably know that you you define this launch configuration this how you specify how you run application",
    "start": "2523960",
    "end": "2530640"
  },
  {
    "text": "and this one looks pretty much exactly like you would do with any.net application how you how you start it",
    "start": "2530640",
    "end": "2536619"
  },
  {
    "text": "except for one thing which is this pre-launch task here",
    "start": "2536619",
    "end": "2542800"
  },
  {
    "text": "this is a task and you know tasks are defined in in your task file",
    "start": "2542800",
    "end": "2549339"
  },
  {
    "text": "and let's take a look at one of those",
    "start": "2549339",
    "end": "2554380"
  },
  {
    "text": "so this is where the you know the magic source is being cooked so this is",
    "start": "2554380",
    "end": "2559540"
  },
  {
    "text": "another task that comes with that extension and this is now what actually will kick off that Dapper sidecar for me",
    "start": "2559540",
    "end": "2565720"
  },
  {
    "text": "and here I can specify the ports and and all sorts of things but that means that when I run it in vs",
    "start": "2565720",
    "end": "2571300"
  },
  {
    "text": "code it will automatically spin up the Dapper sidecars next to it and it will you know it will just work",
    "start": "2571300",
    "end": "2578980"
  },
  {
    "text": "and again this is really nice now because when I run this locally I don't have to figure out which ports or",
    "start": "2578980",
    "end": "2584319"
  },
  {
    "text": "anything these things are running on it will just find it and when I deploy it I don't have to change anything",
    "start": "2584319",
    "end": "2590040"
  },
  {
    "text": "even if I do it on container apps and scale out the code stays exactly the",
    "start": "2590040",
    "end": "2595060"
  },
  {
    "text": "same so it really makes a lot of things uh simpler when you do this",
    "start": "2595060",
    "end": "2603240"
  },
  {
    "text": "so actually let's see if we",
    "start": "2605440",
    "end": "2610800"
  },
  {
    "text": "if we see here if we go to the debug console here we can see that I have this three applications running which makes",
    "start": "2610900",
    "end": "2616900"
  },
  {
    "text": "sense that's that's my the web and the API and the order processor but I can also actually see the Dapper",
    "start": "2616900",
    "end": "2625540"
  },
  {
    "text": "side cores here so if I go to the to the terminal I can see those Dapper cycle is running and",
    "start": "2625540",
    "end": "2632920"
  },
  {
    "text": "this is actually what I see the log coming from from the sidecar so any errors or or the logging is is visible",
    "start": "2632920",
    "end": "2640660"
  },
  {
    "text": "here and we actually might be able to see let's see if I can find this here",
    "start": "2640660",
    "end": "2647500"
  },
  {
    "text": "for the web",
    "start": "2647500",
    "end": "2650400"
  },
  {
    "text": "it's kind of hard to say in log but what they typically see here is that when I start up these things the web and the API I start them up at the same time and",
    "start": "2652839",
    "end": "2658839"
  },
  {
    "text": "then the web will make a call to the API immediately but typically the API isn't ready yet because it's starting up so if I would",
    "start": "2658839",
    "end": "2665980"
  },
  {
    "text": "run this you'd probably seen it yourself then you know the first request will fail and then I could refresh it and then it",
    "start": "2665980",
    "end": "2671680"
  },
  {
    "text": "works but in this case this always works because by using Dapper when the web calls the API it will fail initially",
    "start": "2671680",
    "end": "2678220"
  },
  {
    "text": "because it's not ready to respond then it will automatically do a retry",
    "start": "2678220",
    "end": "2683859"
  },
  {
    "text": "and I can configure that how exactly how I want that to work and that's a separate",
    "start": "2683859",
    "end": "2690540"
  },
  {
    "text": "component file which is called the resiliency file",
    "start": "2690540",
    "end": "2695818"
  },
  {
    "text": "so in this case there are some default settings here but in this case I can specify for example I want to to make",
    "start": "2697060",
    "end": "2703119"
  },
  {
    "text": "sure that I want to retry up to five times so I can just create a resiliency",
    "start": "2703119",
    "end": "2708339"
  },
  {
    "text": "specification and I want you to wait five seconds between each of these tries",
    "start": "2708339",
    "end": "2713980"
  },
  {
    "text": "and down here I'm specifying here that this is for the older web",
    "start": "2713980",
    "end": "2719020"
  },
  {
    "text": "and if I call the order API I want you to use this this resilience the the policy there's a lot of flexibility",
    "start": "2719020",
    "end": "2726040"
  },
  {
    "text": "around this uh and again this is things that is can be quite tricky to get right uh and it handles more things than just",
    "start": "2726040",
    "end": "2733900"
  },
  {
    "text": "retries again it supports for example circuit breakers which is a concept that is good to know it also handles timeouts",
    "start": "2733900",
    "end": "2741099"
  },
  {
    "text": "and you can configure this on like either for all applications or you can have different policies for different uh",
    "start": "2741099",
    "end": "2748000"
  },
  {
    "text": "different Services which can make a lot of sense you probably don't want to have the same you know behavior for all of the all",
    "start": "2748000",
    "end": "2754660"
  },
  {
    "text": "these all the parts of your system",
    "start": "2754660",
    "end": "2758099"
  },
  {
    "text": "all right",
    "start": "2761980",
    "end": "2764460"
  },
  {
    "text": "okay so uh those Dapper we talked about container apps how to you know run applications",
    "start": "2770500",
    "end": "2776980"
  },
  {
    "text": "that press how to kind of develop the applications and you know there's multiple options of",
    "start": "2776980",
    "end": "2784119"
  },
  {
    "text": "Hosting that per applications as you can see I could run this locally just fine obviously I can run this in in",
    "start": "2784119",
    "end": "2789940"
  },
  {
    "text": "kubernetes I can also run it on any virtual machine but I can also run it in",
    "start": "2789940",
    "end": "2795400"
  },
  {
    "text": "container apps and container apps kind of natively supports Dapper so you don't have to you know install Dapper or",
    "start": "2795400",
    "end": "2801280"
  },
  {
    "text": "deploy anything specifically uh instead you can just say I want to use Dapper so here's an example how you",
    "start": "2801280",
    "end": "2807700"
  },
  {
    "text": "would do this using bicep so there's a few settings that specify that I want to use dapper and then you you give it you",
    "start": "2807700",
    "end": "2815619"
  },
  {
    "text": "know the information about the ID so see it can you know do service invocations so it's really the same information that",
    "start": "2815619",
    "end": "2822280"
  },
  {
    "text": "I showed you in in that in those uh the task file that I showed you this",
    "start": "2822280",
    "end": "2828880"
  },
  {
    "text": "is now specified here that's the only thing I need to do right to actually use Dapper in my target environment",
    "start": "2828880",
    "end": "2835000"
  },
  {
    "text": "and again what happens now if I have to to apps that talks to each other it's",
    "start": "2835000",
    "end": "2840700"
  },
  {
    "text": "going to make a call using the same code that I just showed you and it's going to go through the Dapper sidecar which is",
    "start": "2840700",
    "end": "2845740"
  },
  {
    "text": "now being spun up automatically by container apps and in case you know you have any external things it will you",
    "start": "2845740",
    "end": "2852640"
  },
  {
    "text": "know work exactly the same way as when I did it locally and again I don't need to change anything and if I want to now I",
    "start": "2852640",
    "end": "2859900"
  },
  {
    "text": "could again use you know different components locally compared to when I run it in the cloud",
    "start": "2859900",
    "end": "2866500"
  },
  {
    "text": "so maybe I don't want to actually go to towards Cosmos DB1 locally maybe I want to use a local store then that works",
    "start": "2866500",
    "end": "2872980"
  },
  {
    "text": "fine again without really changing any of the code",
    "start": "2872980",
    "end": "2877920"
  },
  {
    "text": "so let's put these things together and and see a more uh full example here of",
    "start": "2881500",
    "end": "2887200"
  },
  {
    "text": "how you would run this same application that I showed you but in Azure container apps and using Dapper to do this and in",
    "start": "2887200",
    "end": "2896740"
  },
  {
    "text": "addition to to running the same application let's see how using dapper",
    "start": "2896740",
    "end": "2902020"
  },
  {
    "text": "we're going to see how we can do scaling using the decada so in this case I'm going to scale it on",
    "start": "2902020",
    "end": "2909160"
  },
  {
    "text": "based on the number of messages on the service bus so I'm going to try to send a lot of messages to the service bus and",
    "start": "2909160",
    "end": "2915760"
  },
  {
    "text": "when that that number of messages starts to increase I want this order processing",
    "start": "2915760",
    "end": "2921220"
  },
  {
    "text": "component to scale out so it can process more messages which can be a really nice way of doing",
    "start": "2921220",
    "end": "2928540"
  },
  {
    "text": "this so maybe I have one or even zero instances running but as soon as something happens on the Queue then you",
    "start": "2928540",
    "end": "2933579"
  },
  {
    "text": "can scale up and process them fast and then you can scale scale them down again again really to save resources to save",
    "start": "2933579",
    "end": "2940780"
  },
  {
    "text": "money in them you don't need to have them running all the time and I'll show you a deployment pipeline",
    "start": "2940780",
    "end": "2946900"
  },
  {
    "text": "how you can kind of orchestrate this in a uh in using in this case GitHub actions",
    "start": "2946900",
    "end": "2955799"
  },
  {
    "text": "so let's go back to the portal",
    "start": "2956200",
    "end": "2962500"
  },
  {
    "text": "and we can go to the other another",
    "start": "2962500",
    "end": "2968680"
  },
  {
    "text": "container environment that I have so",
    "start": "2968680",
    "end": "2974200"
  },
  {
    "text": "so I had already you know deployed this and I will show you how so",
    "start": "2974200",
    "end": "2979660"
  },
  {
    "text": "here we have the three components you know the same application that you just saw but now now they are running as",
    "start": "2979660",
    "end": "2985480"
  },
  {
    "text": "container apps instead of locally on my machine so the web and the API and the processor",
    "start": "2985480",
    "end": "2992560"
  },
  {
    "text": "and let's dive into the web application and again we can click over here to go",
    "start": "2992560",
    "end": "2998980"
  },
  {
    "text": "to the URL and you see the same application it talks to the API it talks to the",
    "start": "2998980",
    "end": "3004079"
  },
  {
    "text": "processor I should be able to create things here as well",
    "start": "3004079",
    "end": "3009720"
  },
  {
    "text": "test two and it should pop up here",
    "start": "3009720",
    "end": "3016260"
  },
  {
    "text": "and uh so actually if you saw the the URLs maybe you thought that that was a nice",
    "start": "3016260",
    "end": "3022140"
  },
  {
    "text": "URL and it's not really but this is how",
    "start": "3022140",
    "end": "3029059"
  },
  {
    "text": "by default the URLs to your application will look like so it will end with the you know region dot azure",
    "start": "3029160",
    "end": "3034500"
  },
  {
    "text": "containerapps.io before that you have the first part is the name of your container app or the",
    "start": "3034500",
    "end": "3039839"
  },
  {
    "text": "web and the middle part which with a weird name that's actually something that's generated for your environment so",
    "start": "3039839",
    "end": "3045119"
  },
  {
    "text": "when I create environment I will get some kind of unique name here obviously this is not what you would use",
    "start": "3045119",
    "end": "3050160"
  },
  {
    "text": "you know in production then you would use some some custom DNS on top of this or custom domain but again you get this",
    "start": "3050160",
    "end": "3056940"
  },
  {
    "text": "this publicly facing URLs if you decide to to show it like that",
    "start": "3056940",
    "end": "3064160"
  },
  {
    "text": "so let's go back here and uh so I deployed this already and let me",
    "start": "3064680",
    "end": "3071700"
  },
  {
    "text": "show you how I deployed it so I didn't go you know click in the portal like I did before I Define this",
    "start": "3071700",
    "end": "3079319"
  },
  {
    "text": "using bicep which is one of the options and let's",
    "start": "3079319",
    "end": "3084420"
  },
  {
    "text": "take a quick peek at that and again all this is available if you want to have a closer look afterwards",
    "start": "3084420",
    "end": "3092280"
  },
  {
    "text": "and so here I have various bicep files where",
    "start": "3092280",
    "end": "3097500"
  },
  {
    "text": "I specify the environment and then my three different applications container apps and some",
    "start": "3097500",
    "end": "3104760"
  },
  {
    "text": "additional Robo assignments and if I click on the the main one which is my starting point we can it's always",
    "start": "3104760",
    "end": "3110940"
  },
  {
    "text": "nice to I think to to visualize it like this oops put it down here",
    "start": "3110940",
    "end": "3117900"
  },
  {
    "text": "let's Zoom a little bit uh",
    "start": "3117900",
    "end": "3124440"
  },
  {
    "text": "so again I'm defining the the environment uh specifying for example application insights we have the log",
    "start": "3124440",
    "end": "3130500"
  },
  {
    "text": "analytics workspace and then you can also see it actually that down here we can see the dapper",
    "start": "3130500",
    "end": "3137700"
  },
  {
    "text": "so that press also specified as the components within this",
    "start": "3137700",
    "end": "3142740"
  },
  {
    "text": "so it's all part of the same resource definition and up here then we have the three",
    "start": "3142740",
    "end": "3147960"
  },
  {
    "text": "different applications each with its own identity as well",
    "start": "3147960",
    "end": "3153260"
  },
  {
    "text": "and if we dive in for example to order web the web application you can see how",
    "start": "3156359",
    "end": "3161640"
  },
  {
    "text": "it looks and so just to point out a few things you",
    "start": "3161640",
    "end": "3168720"
  },
  {
    "text": "can assign an identity to it which is typically what you want to do in this case a user assigned identity it makes",
    "start": "3168720",
    "end": "3175260"
  },
  {
    "text": "it possible for example for it to communicate with other services to to pull the images from a container",
    "start": "3175260",
    "end": "3181079"
  },
  {
    "text": "registry then we have the thing around the revision mode that I talked about before",
    "start": "3181079",
    "end": "3187020"
  },
  {
    "text": "so I'm saying here that I want to have this multiple revisions for my web application so I can do this blue green",
    "start": "3187020",
    "end": "3193500"
  },
  {
    "text": "deployments I specified I want to have an Ingress which is external true which",
    "start": "3193500",
    "end": "3198540"
  },
  {
    "text": "means that I can access it from the outside if I set Ingress or sorry if I set external to false I wouldn't be able",
    "start": "3198540",
    "end": "3205140"
  },
  {
    "text": "to access it from the outside which is what I'm doing on the other parts of this application",
    "start": "3205140",
    "end": "3210780"
  },
  {
    "text": "but then we have a adapter here so this is now where I specify that I want to use dapper I want to have it enabled I",
    "start": "3210780",
    "end": "3217980"
  },
  {
    "text": "specify a port and then the ID again so this is the ID that's that's what I need to know if I want to call this",
    "start": "3217980",
    "end": "3223440"
  },
  {
    "text": "application within my environment so you saw before when I call the the order API that's really the string that",
    "start": "3223440",
    "end": "3230099"
  },
  {
    "text": "makes this possible then I don't need to know where it is it just that will figure it out for me",
    "start": "3230099",
    "end": "3236720"
  },
  {
    "text": "so uh that's the bicep part and",
    "start": "3238740",
    "end": "3244260"
  },
  {
    "text": "for deploying it we have I have a GitHub action",
    "start": "3244260",
    "end": "3249300"
  },
  {
    "text": "and I have I did the minor change again I",
    "start": "3249300",
    "end": "3254940"
  },
  {
    "text": "think it's changed the background color and I triggered a pipeline for this",
    "start": "3254940",
    "end": "3260099"
  },
  {
    "text": "so you can see down here that it's uh has built and I deployed this to a",
    "start": "3260099",
    "end": "3265319"
  },
  {
    "text": "staging slot so if I've been using App Services you know they have this concept of deployment slots uh which is really",
    "start": "3265319",
    "end": "3272099"
  },
  {
    "text": "similar to what I'm doing here with revision being able to deploy it to one revision test it out and then you know",
    "start": "3272099",
    "end": "3278400"
  },
  {
    "text": "swap it into production that's really what I'm doing here but from a pipeline",
    "start": "3278400",
    "end": "3283500"
  },
  {
    "text": "um so if you go back here to order web and",
    "start": "3283500",
    "end": "3288540"
  },
  {
    "text": "look at the revisions which is in here I actually have a lot",
    "start": "3288540",
    "end": "3294660"
  },
  {
    "text": "of revisions and",
    "start": "3294660",
    "end": "3300839"
  },
  {
    "text": "if you look at the top two one here you can see that the number two here is the one that is getting traffic that's like",
    "start": "3300839",
    "end": "3307020"
  },
  {
    "text": "my current production version but then I have deployed a new version from that pipeline so that that's now my staging",
    "start": "3307020",
    "end": "3313859"
  },
  {
    "text": "slot but again you can see that it doesn't automatically get any traffic but I can still call this and I do that from the",
    "start": "3313859",
    "end": "3320400"
  },
  {
    "text": "pipeline so in the pipeline I deploy it a new revision then I can do I can you",
    "start": "3320400",
    "end": "3325440"
  },
  {
    "text": "know run some tests against that URL to make sure that it works if everything looks good you know then I can",
    "start": "3325440",
    "end": "3332520"
  },
  {
    "text": "go back to the pipeline and approve it",
    "start": "3332520",
    "end": "3337880"
  },
  {
    "text": "and then what will happen is that now it's actually going to swap that traffic so just to show you how that that actually works",
    "start": "3340380",
    "end": "3347099"
  },
  {
    "text": "let's check inside the this GitHub action and",
    "start": "3347099",
    "end": "3352319"
  },
  {
    "text": "we don't have to you know dive into the details of the GitHub action itself but if we go down here a bit let's just",
    "start": "3352319",
    "end": "3358380"
  },
  {
    "text": "focus on the important things here around container apps so you can actually see now I'm using",
    "start": "3358380",
    "end": "3364200"
  },
  {
    "text": "the CLI here so you need to kind of figure out yourself about these revision things you need to kind of say okay this",
    "start": "3364200",
    "end": "3369780"
  },
  {
    "text": "is the revision I want to kind of promote or how I want to you know send traffic to them so I'm using the CLI",
    "start": "3369780",
    "end": "3376020"
  },
  {
    "text": "within the pipeline to kind of figure out okay which what is the current revision the current version so I use in",
    "start": "3376020",
    "end": "3381420"
  },
  {
    "text": "the C light to actually get that and then I can create a new revision so I'm using the revision copy command",
    "start": "3381420",
    "end": "3387660"
  },
  {
    "text": "which will then create a new revision exactly the same thing that I did in the portal right I did create new revision I",
    "start": "3387660",
    "end": "3394740"
  },
  {
    "text": "specified a new image version that's exactly what I'm doing here I'm doing revision copy and I'm specifying the new",
    "start": "3394740",
    "end": "3401339"
  },
  {
    "text": "image version but then in the next line here I'm",
    "start": "3401339",
    "end": "3408079"
  },
  {
    "text": "in number two here I I want to make sure that the new",
    "start": "3409260",
    "end": "3414480"
  },
  {
    "text": "revision doesn't get any traffic so I point all the traffic in to the current revision",
    "start": "3414480",
    "end": "3419520"
  },
  {
    "text": "so again I don't want to leak the new version into production before I have the chance to test it",
    "start": "3419520",
    "end": "3425700"
  },
  {
    "text": "so if I go down now to see what's what's happening now when I'm running it it's uh",
    "start": "3425700",
    "end": "3431700"
  },
  {
    "text": "it's down here again I'm using the same command here to",
    "start": "3431700",
    "end": "3436740"
  },
  {
    "text": "kind of get okay which one is the you know the slot that is running and then I'm using the same command but now I'm",
    "start": "3436740",
    "end": "3442079"
  },
  {
    "text": "giving you know 100 traffic to that one and so if that is",
    "start": "3442079",
    "end": "3448260"
  },
  {
    "text": "if that is uh completed let's go back to",
    "start": "3448260",
    "end": "3454859"
  },
  {
    "text": "the pipeline here see if it's done it's uh it's done so it's swapped into",
    "start": "3454859",
    "end": "3461460"
  },
  {
    "text": "production so we should now if we go back here and refresh this we should see now that you know the new version is now",
    "start": "3461460",
    "end": "3468599"
  },
  {
    "text": "actually getting 100 traffic so that's that's how you would kind of implement this in a pipeline to kind of do this in",
    "start": "3468599",
    "end": "3474660"
  },
  {
    "text": "a controlled way all right so uh actually only have two",
    "start": "3474660",
    "end": "3481380"
  },
  {
    "text": "minutes left so that's a little bit shorter time so I won't be able to actually show you the scaling so I'm",
    "start": "3481380",
    "end": "3487619"
  },
  {
    "text": "just going to quickly show you how the scale rule is set up but I don't won't do the actual load",
    "start": "3487619",
    "end": "3493619"
  },
  {
    "text": "test and so on um so if you go to the",
    "start": "3493619",
    "end": "3498839"
  },
  {
    "text": "container apps if you remember from the scenario what I wanted to do is to make sure that if we",
    "start": "3498839",
    "end": "3506160"
  },
  {
    "text": "get a lot of messages on my service bus I want the pro the order processor to scale out so it can actually process those",
    "start": "3506160",
    "end": "3512160"
  },
  {
    "text": "messages faster so if you go to this one and go down to",
    "start": "3512160",
    "end": "3518700"
  },
  {
    "text": "scale we can now see that we have actually one schedule defined here it's called Cube based Auto scaling",
    "start": "3518700",
    "end": "3525900"
  },
  {
    "text": "again it says 0 to 10 so by default it's going to have zero instances running if we go into this one",
    "start": "3525900",
    "end": "3533839"
  },
  {
    "text": "we have some settings here and this is specified in the bicep file as well so but basically what I'm saying here is",
    "start": "3537420",
    "end": "3542819"
  },
  {
    "text": "that I want to to check on the the topic this is the Azure service bus so the topic called all recreated",
    "start": "3542819",
    "end": "3549000"
  },
  {
    "text": "and the queue length one so in this case it means that if I get more than one message",
    "start": "3549000",
    "end": "3554339"
  },
  {
    "text": "I want you to scale out to a maximum of 10 instances so one is typically quite low but typically when I demo this it",
    "start": "3554339",
    "end": "3561180"
  },
  {
    "text": "just makes it easy to demo but typically you can have the threshold a bit higher but again",
    "start": "3561180",
    "end": "3567720"
  },
  {
    "text": "if I would now start to sending a lot of messages it will scale up from zero instances so the first one would take a",
    "start": "3567720",
    "end": "3573299"
  },
  {
    "text": "little bit of time the first one from from zero to one and then it will scale up quite quickly to 10 instances and",
    "start": "3573299",
    "end": "3579780"
  },
  {
    "text": "then it will stay like that for roughly five minutes so I can actually just quickly show you",
    "start": "3579780",
    "end": "3585359"
  },
  {
    "text": "I ran this before earlier today just to show you what it looks like",
    "start": "3585359",
    "end": "3592020"
  },
  {
    "text": "in the metrics or didn't I run today",
    "start": "3592020",
    "end": "3598380"
  },
  {
    "text": "oh sorry that was the wrong metric we have the replica count here",
    "start": "3598380",
    "end": "3604260"
  },
  {
    "text": "so you know just to prove that it actually worked I I ran it before and you can see here that when I ran it it",
    "start": "3604260",
    "end": "3611280"
  },
  {
    "text": "quite quickly went from zero instances up to 10. and then process all the messages and",
    "start": "3611280",
    "end": "3617040"
  },
  {
    "text": "when there were no messages it it stays for by default I think it's five minutes",
    "start": "3617040",
    "end": "3622319"
  },
  {
    "text": "you know just because you don't want to flip up and back and forth too much so you want to have a you know fairly stable processing here and then after",
    "start": "3622319",
    "end": "3629579"
  },
  {
    "text": "five minutes if nothing more comes in it's going to scale down to to zero again",
    "start": "3629579",
    "end": "3634680"
  },
  {
    "text": "um so just to",
    "start": "3634680",
    "end": "3640619"
  },
  {
    "text": "end on the most interesting thing which obviously is uh you know pricing what",
    "start": "3640619",
    "end": "3646140"
  },
  {
    "text": "does this what does this thing cost um and from the beginning that we have",
    "start": "3646140",
    "end": "3651960"
  },
  {
    "text": "this that had this consumption plan which means I don't you know just pay for what you're actually using so what",
    "start": "3651960",
    "end": "3657720"
  },
  {
    "text": "you're paying for is partly the number of requests coming in and they pay for",
    "start": "3657720",
    "end": "3662760"
  },
  {
    "text": "you know the amount of CPU and memory that you're using so when you define the com you know the container app you can",
    "start": "3662760",
    "end": "3668040"
  },
  {
    "text": "specify how much of the virtual CPU remember they will assign to it and if you run that for you know for 10 seconds",
    "start": "3668040",
    "end": "3674520"
  },
  {
    "text": "you can multiply this number by 10 seconds and that's what you're going to pay plus event the number of requests",
    "start": "3674520",
    "end": "3681540"
  },
  {
    "text": "so you can do a lot of things to actually save a lot of money here in particular the dev test environment to",
    "start": "3681540",
    "end": "3686579"
  },
  {
    "text": "scale them down uh when you're not not using them so and if you compare this to like having",
    "start": "3686579",
    "end": "3693059"
  },
  {
    "text": "running kubernetes cluster this can actually be a lot cheaper to be honest and then quite recently they have also",
    "start": "3693059",
    "end": "3701339"
  },
  {
    "text": "it's still in preview but they have now a dedicated plan uh which is more more traditional but",
    "start": "3701339",
    "end": "3707400"
  },
  {
    "text": "this would allows you to have a more isolated uh isolated environment",
    "start": "3707400",
    "end": "3712619"
  },
  {
    "text": "uh and this is more of saying I want to you know provision these types of machines with a certain size and then",
    "start": "3712619",
    "end": "3719280"
  },
  {
    "text": "you pay for for that instead but it gives you a lot higher isolation compared to the consumption plan",
    "start": "3719280",
    "end": "3724859"
  },
  {
    "text": "so a lot of companies will want to use that plan instead but it's still in preview but it can be worth to know and",
    "start": "3724859",
    "end": "3731579"
  },
  {
    "text": "also know that you know the build conference is running right now so I was actually a bit nervous because when they you know release stuff things break but",
    "start": "3731579",
    "end": "3738900"
  },
  {
    "text": "has been working pretty well and but there was a lot of announcements around the container apps so check out the the",
    "start": "3738900",
    "end": "3745140"
  },
  {
    "text": "news from from build lots of interesting stuff here not just AI there's also things around container",
    "start": "3745140",
    "end": "3750839"
  },
  {
    "text": "apps but they're going to put AI here soon anyway right the container app co-pilot is going to come soon I'm sure",
    "start": "3750839",
    "end": "3756299"
  },
  {
    "text": "of it okay I'm out of time so I don't want to hold in loggers so thanks a lot for",
    "start": "3756299",
    "end": "3761400"
  },
  {
    "text": "coming I hope the was worthwhile and I'll stick around here for a while if you want to have questions and I'll be around also tomorrow if you have any",
    "start": "3761400",
    "end": "3767819"
  },
  {
    "text": "other questions just hit me up thanks",
    "start": "3767819",
    "end": "3772400"
  }
]