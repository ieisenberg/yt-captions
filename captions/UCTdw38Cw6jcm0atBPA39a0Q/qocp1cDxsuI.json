[
  {
    "text": "test test okay Mikey all for coming here surprised how many",
    "start": "6930",
    "end": "12780"
  },
  {
    "text": "year I'm missing how it does get stolen each of seven so thank you very much very much appreciated I guess before we",
    "start": "12780",
    "end": "19140"
  },
  {
    "text": "start I just wanna quickly ask at the room how many of you guys are actually working with some form of functions and",
    "start": "19140",
    "end": "25380"
  },
  {
    "text": "service aren't your functions or a dress okay quite a few hands great and how many of",
    "start": "25380",
    "end": "32488"
  },
  {
    "text": "you are working with a TAS in that case okay quite a few more people coming in so for",
    "start": "32489",
    "end": "41430"
  },
  {
    "text": "those of you who are working with a dress good news is that they actually just announced yesterday support for",
    "start": "41430",
    "end": "47640"
  },
  {
    "text": "Darnell code 2.0 I see some fist bump to the front and also support for golang as",
    "start": "47640",
    "end": "54089"
  },
  {
    "text": "well so if anyone wants to use try out a double cylinder with calling and don't know quota per node now it's a good",
    "start": "54089",
    "end": "59909"
  },
  {
    "text": "chance to do that it's gonna be for the guys to set it down alright so my name",
    "start": "59909",
    "end": "69750"
  },
  {
    "text": "is yen and I've been using Amazon Web Services since about 2009 and in that time I've worked for quite a few",
    "start": "69750",
    "end": "75930"
  },
  {
    "text": "different companies and took on a few different type of roads right now I'm working for a company called space 8",
    "start": "75930",
    "end": "81810"
  },
  {
    "text": "games I can see from a t-shirt we make mobile games for living and",
    "start": "81810",
    "end": "86840"
  },
  {
    "text": "unfortunately I can't talk about anything I'm working on because it's so heavily nd8 if I tell you I'm gonna kill",
    "start": "86840",
    "end": "92430"
  },
  {
    "text": "you afterwards but what we can talk about is some of the things that I did in my previous company which is a social",
    "start": "92430",
    "end": "99150"
  },
  {
    "text": "networking startup called yopo we actually worked my friend and former",
    "start": "99150",
    "end": "104370"
  },
  {
    "text": "colleague Thomas here so my name is Doris and I started using it'll be us in",
    "start": "104370",
    "end": "110940"
  },
  {
    "text": "2012 when I joined game sis to work with this guy and then he poached me to come",
    "start": "110940",
    "end": "118020"
  },
  {
    "text": "over to the startup double the company that we're gonna be presenting our experience report so you can see our",
    "start": "118020",
    "end": "127950"
  },
  {
    "text": "romance goes a long way so right tell you about yep oh so at a time we are",
    "start": "127950",
    "end": "133769"
  },
  {
    "text": "trying to build a new social network for your twenty-something years old and it was a mixture of Instagram Twitter",
    "start": "133769",
    "end": "139290"
  },
  {
    "text": "Facebook and it was when we were working at yeah both that we learned a lot about working with it was lambda and how to",
    "start": "139290",
    "end": "145439"
  },
  {
    "text": "operate it in production yes she became a very part of architecture which when I took",
    "start": "145439",
    "end": "151709"
  },
  {
    "text": "over at the yabo in April 2016 we had a very simple on paper at least",
    "start": "151709",
    "end": "157200"
  },
  {
    "text": "architecture at a time it was all monolithic there's a few services running on ec2 servers and as the early",
    "start": "157200",
    "end": "164430"
  },
  {
    "text": "days early saw social network we had a pretty low average traffic that's not",
    "start": "164430",
    "end": "169469"
  },
  {
    "text": "many people using it but we did have a couple of power users with I think the most probably user we had had about",
    "start": "169469",
    "end": "175590"
  },
  {
    "text": "50,000 followers so whenever one of those guys does something one campaign like I run a I'm gonna give away some",
    "start": "175590",
    "end": "181980"
  },
  {
    "text": "designer handbags so anyone who votes in my post by 10 and Croft and I so whenever they do something like that we",
    "start": "181980",
    "end": "188010"
  },
  {
    "text": "see a massive uptake on traffic sometimes from one minute or next you have a 70s Society so 70 to 100 the",
    "start": "188010",
    "end": "195629"
  },
  {
    "text": "times jump in traffic and let me face one on ec2 so scaling was pretty slow and so we have to run at a much lower",
    "start": "195629",
    "end": "202590"
  },
  {
    "text": "utilization that we like to leave some room for some of those massive spikes we get and also we have to scale up a lot",
    "start": "202590",
    "end": "209250"
  },
  {
    "text": "earlier again because all these sudden spike in traffic at the time we all sold",
    "start": "209250",
    "end": "215370"
  },
  {
    "text": "well didn't do a very good well we didn't have a very good infrastructure in place for doing deployments and the",
    "start": "215370",
    "end": "220769"
  },
  {
    "text": "department was taking up to 30 minutes and required downtime so you put all these things together it means we're",
    "start": "220769",
    "end": "226139"
  },
  {
    "text": "both a paying a lot of money for resources that we are not using and B we",
    "start": "226139",
    "end": "231150"
  },
  {
    "text": "are taken down we are we are losing availability whenever we need to do an update so that's not great especially by",
    "start": "231150",
    "end": "238439"
  },
  {
    "text": "today's standard and what my favorite speakers that don't know if once said that the lead time to someone saying",
    "start": "238439",
    "end": "243689"
  },
  {
    "text": "thank you is the only reputation of metric that matters to us as engineers but together thank you",
    "start": "243689",
    "end": "249889"
  },
  {
    "text": "you have the first deliver some value to someone and to do that we have the ship our software until our Co is ship them",
    "start": "249889",
    "end": "256620"
  },
  {
    "text": "running in production as far as users are concerned we haven't done anything at all so with Joran team we see that",
    "start": "256620",
    "end": "263610"
  },
  {
    "text": "architecture in place is not great we have to do better but before we can hope to do that we have we have to first",
    "start": "263610",
    "end": "269370"
  },
  {
    "text": "understand and figure out an agreed on what good actually looks like forwards in this case and we sat down the team",
    "start": "269370",
    "end": "275400"
  },
  {
    "text": "and we came up with a list of criterias that we think that we're gonna need for my architecture firstly we want the",
    "start": "275400",
    "end": "281880"
  },
  {
    "text": "problem to be small to be fast and we obviously do not want to have any downtime at all and also we",
    "start": "281880",
    "end": "288640"
  },
  {
    "text": "don't want to be in a situation where we have to lock step deployment with the client team which just the sheer amount",
    "start": "288640",
    "end": "294940"
  },
  {
    "text": "of coordination it's just involved it's just no worthwhile and we also want features to be independently deployable",
    "start": "294940",
    "end": "301540"
  },
  {
    "text": "and to be loosely coupled through messages so that different components of a system can move at their own pace",
    "start": "301540",
    "end": "309340"
  },
  {
    "text": "and from the architecture side of things we want to cut out all the fat we had in our a the best bill and we also want to",
    "start": "309340",
    "end": "315970"
  },
  {
    "text": "minimize the amount of time that we spend just babysitting the infrastructure as far as I'm concerned",
    "start": "315970",
    "end": "321850"
  },
  {
    "text": "the architecture should work for us not the other way around it shouldn't be a constant tax on the team to make sure",
    "start": "321850",
    "end": "327790"
  },
  {
    "text": "that it's working and making sure that oh yeah is skating up right on time and fast enough or that should be taken care",
    "start": "327790",
    "end": "334270"
  },
  {
    "text": "of by the platform itself and the time we also had a lot of technical mess to deal with and that's a very conscious choice of",
    "start": "334270",
    "end": "341110"
  },
  {
    "text": "wording because if we talk about technical debt in prices someone has at some point have to had to made a design",
    "start": "341110",
    "end": "347710"
  },
  {
    "text": "decision to take out some debts with a plan to pay back later what we found a couple was not that in fact it was a",
    "start": "347710",
    "end": "355900"
  },
  {
    "text": "crime and see if I was a go I can spend whole hours talking about how bad it was but that's not what you hit here and",
    "start": "355900",
    "end": "361800"
  },
  {
    "text": "once we fix all this technical mess we also don't want to just take six months out and clean out the co-pays we want to",
    "start": "361800",
    "end": "368170"
  },
  {
    "text": "keep shipping features keep delivering values to our customers in fact we wanted to be faster than we've ever done",
    "start": "368170",
    "end": "375600"
  },
  {
    "text": "and if you fast forward just a few months this is the architecture that we arrived at which is both event-driven as",
    "start": "375600",
    "end": "382540"
  },
  {
    "text": "well as the service oriented where lambda is a centerpiece that glues everything together so at this point we",
    "start": "382540",
    "end": "389140"
  },
  {
    "text": "had about a hundred seventy lambda running in production with many more diverse student development and we were",
    "start": "389140",
    "end": "394750"
  },
  {
    "text": "paying for lambda invocations about 5% for what we pay for ec2 for comparable amount of compute",
    "start": "394750",
    "end": "401410"
  },
  {
    "text": "resources that were using but perhaps more importantly from the cost saving is",
    "start": "401410",
    "end": "406420"
  },
  {
    "text": "how quickly we're not able to ship features and ship code to our users and going from doing production release",
    "start": "406420",
    "end": "413530"
  },
  {
    "text": "maybe four to six times a month in April by October we were easily",
    "start": "413530",
    "end": "419240"
  },
  {
    "text": "shipping code to production somewhere close to about hundred times a month so that's a big increase in terms of the",
    "start": "419240",
    "end": "425780"
  },
  {
    "text": "output of a team without actually changing the massive increase in the size of the team and from the moment we",
    "start": "425780",
    "end": "432470"
  },
  {
    "text": "decide that lambda is a good fit for the direction that we want to move towards and to having the first function run in",
    "start": "432470",
    "end": "438260"
  },
  {
    "text": "production we had to as professionals and we have to be responsible we can't just say hey this type of skill let's",
    "start": "438260",
    "end": "445070"
  },
  {
    "text": "just put into production without you knowing how we can operate it so to do that we had answered a bunch of",
    "start": "445070",
    "end": "452270"
  },
  {
    "text": "questions around how you're going to test your functions when they're all host in the cloud and what about your CR",
    "start": "452270",
    "end": "457670"
  },
  {
    "text": "CD pipeline and how do you not know to log in monitoring and alerting and so on",
    "start": "457670",
    "end": "463130"
  },
  {
    "text": "the thing to remember is that a spray attack as lambda is or any form of",
    "start": "463130",
    "end": "468500"
  },
  {
    "text": "service technologies they are just new tools and typically when you change the tools that you build software with often",
    "start": "468500",
    "end": "475340"
  },
  {
    "text": "the practices and patterns that emerge with the previous generation tools they'll have to change or at least",
    "start": "475340",
    "end": "480980"
  },
  {
    "text": "evolve and be adapted but the principles that underlines the emergence of those to those practices they still very much",
    "start": "480980",
    "end": "487730"
  },
  {
    "text": "apply you still need observer observability another hot key word in 2018 on your architecture to understand",
    "start": "487730",
    "end": "494540"
  },
  {
    "text": "what has going on to be able to operated with responsibly in production another",
    "start": "494540",
    "end": "500450"
  },
  {
    "text": "there's also add a bunch of other principles as you still follow principles around a high cohesion and",
    "start": "500450",
    "end": "506480"
  },
  {
    "text": "low coupling and single responsibility and store and so forth and Palatine architecture expanded to include more",
    "start": "506480",
    "end": "513289"
  },
  {
    "text": "and more services often one service will depend on another one you have to answer a bunch of other questions around",
    "start": "513290",
    "end": "519260"
  },
  {
    "text": "teachability tracing how you gonna manage configurations for hundreds and thousands of functions running",
    "start": "519260",
    "end": "525020"
  },
  {
    "text": "independently in production and how I'm going to keep all of the information that you have secure as well and for now",
    "start": "525020",
    "end": "531410"
  },
  {
    "text": "I'm gonna awkwardly pass these to my so to start off I think it's good to give some",
    "start": "531410",
    "end": "537770"
  },
  {
    "text": "concrete examples what we actually built what we achieved and the first thing we",
    "start": "537770",
    "end": "542930"
  },
  {
    "text": "tackled was search because when you have a social app you want to find somebody",
    "start": "542930",
    "end": "548450"
  },
  {
    "text": "to follow so to get that you want to search by first name by last name by username and what",
    "start": "548450",
    "end": "554600"
  },
  {
    "text": "we actually found in the legacy monolith it was search implemented using regex that was hitting MongoDB and you can",
    "start": "554600",
    "end": "561500"
  },
  {
    "text": "imagine that performance was not really great it was actually struggling at the",
    "start": "561500",
    "end": "566680"
  },
  {
    "text": "hundred thousand user mark what currently like in this day for a social",
    "start": "566680",
    "end": "572690"
  },
  {
    "text": "app it's nothing you want to have at least maybe handling millions of users",
    "start": "572690",
    "end": "577760"
  },
  {
    "text": "easily and at that point for us it was difficult to do any kind of random entry",
    "start": "577760",
    "end": "583210"
  },
  {
    "text": "ranking system by popularity or maybe drip trending user should be on top so",
    "start": "583210",
    "end": "588320"
  },
  {
    "text": "we started off to build something from scratch simple search so what we did we",
    "start": "588320",
    "end": "593570"
  },
  {
    "text": "looked at the monolith without many modifications we just allowed it to",
    "start": "593570",
    "end": "599300"
  },
  {
    "text": "emits state change events so that means whenever user new users credits or",
    "start": "599300",
    "end": "605420"
  },
  {
    "text": "somebody changes a name or updates the profile we want to raise an event then we had all of those events are being",
    "start": "605420",
    "end": "612200"
  },
  {
    "text": "published to can use a stream and we had a lambda that would process them and updates index in amazon cloudsearch then",
    "start": "612200",
    "end": "620540"
  },
  {
    "text": "we could take api gateway and lambda put it on top and easily make a new search",
    "start": "620540",
    "end": "626750"
  },
  {
    "text": "api that words curry club search but at that point we did not want to impact",
    "start": "626750",
    "end": "632660"
  },
  {
    "text": "existing applications and we did not want to wait until our client devs are",
    "start": "632660",
    "end": "638120"
  },
  {
    "text": "ready to start using the new search and actually even release the app and then users needs to update it so instead of",
    "start": "638120",
    "end": "643700"
  },
  {
    "text": "that what we did we put we just proxied legacy endpoint to actually hit start",
    "start": "643700",
    "end": "650360"
  },
  {
    "text": "hitting our new search api so in this way we delivered value early on without",
    "start": "650360",
    "end": "656450"
  },
  {
    "text": "waiting for app release also we had no",
    "start": "656450",
    "end": "662620"
  },
  {
    "text": "analytics at that point so to do that we",
    "start": "662620",
    "end": "667730"
  },
  {
    "text": "also had to build everything from scratch and we did that over many iterations but for the first iterations",
    "start": "667730",
    "end": "674420"
  },
  {
    "text": "we followed similar pattern where we updated our legacy system to start",
    "start": "674420",
    "end": "679550"
  },
  {
    "text": "emitting detailed events about all the actions that users are doing in the app all of those",
    "start": "679550",
    "end": "685939"
  },
  {
    "text": "events are going through Kinesis streams and being handled by a by lambda and",
    "start": "685939",
    "end": "691990"
  },
  {
    "text": "then lambda is live streaming all of those events to Google bigquery Vickery",
    "start": "691990",
    "end": "697490"
  },
  {
    "text": "is amazing for large amounts of data and this is something we use previously in the Games's where we work before with",
    "start": "697490",
    "end": "704029"
  },
  {
    "text": "the answer we knew that we can it's a really good fit and actually to get this",
    "start": "704029",
    "end": "710089"
  },
  {
    "text": "first iteration out one developer it was his first um first um he had to deal",
    "start": "710089",
    "end": "720199"
  },
  {
    "text": "with lambdas this is what's his first piece he had to implements using lambda and actually from design to production",
    "start": "720199",
    "end": "725990"
  },
  {
    "text": "it took only on two days to get that and our bi guy came to us when we said that",
    "start": "725990",
    "end": "732800"
  },
  {
    "text": "it's done and he tried it out and he was amazed he said nothing ever got this done this fast in Skype and where he",
    "start": "732800",
    "end": "739939"
  },
  {
    "text": "just came from and of course the North fence to Skype but it just shows that that that leads on to someone saying",
    "start": "739939",
    "end": "746149"
  },
  {
    "text": "thank you that's the only metric you should you really need to care about so",
    "start": "746149",
    "end": "751490"
  },
  {
    "text": "we got a bit more comfortable with using lambdas shipping them to production and so on so the next thing we tackled a was",
    "start": "751490",
    "end": "759230"
  },
  {
    "text": "it feet as you can imagine like an app you open and you see all the posts from people you follow so similar like what",
    "start": "759230",
    "end": "765199"
  },
  {
    "text": "you haven't Facebook or in Twitter so the legacy implementation was really",
    "start": "765199",
    "end": "770990"
  },
  {
    "text": "complicated it was just a mess to untangle and actually they when they",
    "start": "770990",
    "end": "777439"
  },
  {
    "text": "were implementing legacy they've written a huge spec so there was a document listing every single use case that he",
    "start": "777439",
    "end": "783050"
  },
  {
    "text": "should support and then when QA team picked it up and tried testing it every single one of them failed so they just",
    "start": "783050",
    "end": "788889"
  },
  {
    "text": "declared it untestable and actually refused to test feeds at all and to top",
    "start": "788889",
    "end": "794480"
  },
  {
    "text": "it off at that point new CTO came in so this all happens in the legacy still world so when new CTO",
    "start": "794480",
    "end": "801889"
  },
  {
    "text": "came in he looked at the mess that's current system is he actually fired the",
    "start": "801889",
    "end": "807139"
  },
  {
    "text": "whole team that was involved in creating such a mess and so when we came in we",
    "start": "807139",
    "end": "812870"
  },
  {
    "text": "had nobody's actually asked how it should behave or only why the hell they they built it",
    "start": "812870",
    "end": "818959"
  },
  {
    "text": "that way so we had to build it from scratch we sat down with a product team",
    "start": "818959",
    "end": "825459"
  },
  {
    "text": "to figure out what our actual requirements are and we did in a similar",
    "start": "825459",
    "end": "831499"
  },
  {
    "text": "fashion where everything is based off of events so legacy system is publishing events such as unfollowing somebody or",
    "start": "831499",
    "end": "839439"
  },
  {
    "text": "somebody unfollowing posts on you it creates a new post so I wanted that post",
    "start": "839439",
    "end": "845119"
  },
  {
    "text": "to appear in my feet so all of those events were being handled by lambda",
    "start": "845119",
    "end": "850600"
  },
  {
    "text": "where lambda sees that okay new post just was published and needs to get the",
    "start": "850600",
    "end": "858379"
  },
  {
    "text": "list of everybody where so everybody's feed where it needs to go so this operation is quite costly so what we did",
    "start": "858379",
    "end": "867669"
  },
  {
    "text": "we got all of them the feeds where it needs to go all the destinations we bash them up by a hundred or a thousand it",
    "start": "867669",
    "end": "874129"
  },
  {
    "text": "doesn't really matter and then published via SNS so then we had another lambda",
    "start": "874129",
    "end": "880249"
  },
  {
    "text": "listening to that SMS SNS feeds so updates are sorted set in Redis and at",
    "start": "880249",
    "end": "888259"
  },
  {
    "text": "this point we're getting retries between SNS and lambda so we are we trying at",
    "start": "888259",
    "end": "893329"
  },
  {
    "text": "this point but so we don't have to retry from the start the costly operation of actually getting the list of the",
    "start": "893329",
    "end": "899119"
  },
  {
    "text": "followers because somebody you might have thousands of followers and that operation retrieving that list might be",
    "start": "899119",
    "end": "904339"
  },
  {
    "text": "quite costly right so we are using Redis",
    "start": "904339",
    "end": "910790"
  },
  {
    "text": "so have a soil set and then we're just building an API on in front of it where",
    "start": "910790",
    "end": "917290"
  },
  {
    "text": "we just have API gateway and lambda the same person as you seen before and then",
    "start": "917290",
    "end": "922639"
  },
  {
    "text": "we updating legacy system to proxy the old endpoint to actually hit the new API",
    "start": "922639",
    "end": "930129"
  },
  {
    "text": "so at that point we also wanted to tackle a bit more complex situations",
    "start": "930129",
    "end": "936379"
  },
  {
    "text": "which is a recommendation system so it's what we found in the legacy system was",
    "start": "936379",
    "end": "943279"
  },
  {
    "text": "anything unlike Facebook or Twitter it was actually returning you the first 30",
    "start": "943279",
    "end": "948439"
  },
  {
    "text": "people from the database by account great date so that means it was all gamble",
    "start": "948439",
    "end": "954079"
  },
  {
    "text": "employees that started off and created accounts first so it might be great for them that everybody is following them but actually if as a customer like if",
    "start": "954079",
    "end": "961009"
  },
  {
    "text": "you open an app and you want to find somebody to follow it's useless so we started off simple we already had",
    "start": "961009",
    "end": "970129"
  },
  {
    "text": "old analytics in bigquery then we had just a simple cron job that kicks off",
    "start": "970129",
    "end": "976220"
  },
  {
    "text": "every hour or so and so it's a clutch event the scheduled events that just",
    "start": "976220",
    "end": "982730"
  },
  {
    "text": "works as a cron job with triggers a lambda lambda hits Google bigquery",
    "start": "982730",
    "end": "988509"
  },
  {
    "text": "Vickery is a good four day for this case because it can process huge amounts of data in a couple seconds or tens of",
    "start": "988509",
    "end": "995060"
  },
  {
    "text": "seconds so then we by using a simple time decay function we can figure out",
    "start": "995060",
    "end": "1000519"
  },
  {
    "text": "who is trending at this point and then update the trend trending users list in",
    "start": "1000519",
    "end": "1006660"
  },
  {
    "text": "DynamoDB and then we built API on top of",
    "start": "1006660",
    "end": "1012069"
  },
  {
    "text": "it by using API gateway and lambda to just query to get the list from the track of the trending users from",
    "start": "1012069",
    "end": "1018310"
  },
  {
    "text": "dynamodb at that point we built the",
    "start": "1018310",
    "end": "1023920"
  },
  {
    "text": "other way because it's good to know who's trending but also you wanna know who your friends are following because",
    "start": "1023920",
    "end": "1029740"
  },
  {
    "text": "if I'm following somebody I'm probably gonna be interested to follow the same people that that person is following so",
    "start": "1029740",
    "end": "1036400"
  },
  {
    "text": "we listen to the events being published by legacy the system here for any",
    "start": "1036400",
    "end": "1043120"
  },
  {
    "text": "relationship changes so if you unfollow somebody or follow somebody knew we had a lambda to process those events and",
    "start": "1043120",
    "end": "1050440"
  },
  {
    "text": "abate updates graph in DB updates your social graph who following graph in DB",
    "start": "1050440",
    "end": "1056049"
  },
  {
    "text": "is just a hosted version of in ear for Jane then we build an API on top with",
    "start": "1056049",
    "end": "1062620"
  },
  {
    "text": "API to n-lambda and to top it off we proxied that legacy system to hit both",
    "start": "1062620",
    "end": "1070240"
  },
  {
    "text": "these new api's for the recommendations from the your relationship graph and",
    "start": "1070240",
    "end": "1077140"
  },
  {
    "text": "also to get the trending users and now the old apps can still work as they were",
    "start": "1077140",
    "end": "1083559"
  },
  {
    "text": "with no Changez and to achieve this the first bit bigquery I think yan took like one",
    "start": "1083559",
    "end": "1091120"
  },
  {
    "text": "night or so to implement the lower part of this and maybe another couple days to do the the whole social graph thing so",
    "start": "1091120",
    "end": "1098470"
  },
  {
    "text": "it just showed how quickly we could get a feature from design to production",
    "start": "1098470",
    "end": "1103480"
  },
  {
    "text": "really quickly and these are just a couple examples what we actually achieved there is plenty more there is a",
    "start": "1103480",
    "end": "1108970"
  },
  {
    "text": "lot of post on ganz blog that you can to the fun part what did you when you're actually getting to production Thank You",
    "start": "1108970",
    "end": "1116470"
  },
  {
    "text": "Thomas so I guess the number one thing I would say about in terms of getting ready for production",
    "start": "1116470",
    "end": "1121780"
  },
  {
    "text": "is don't try to reinvent the deployment framework yourself I've done it enough up in the past that when none of the",
    "start": "1121780",
    "end": "1127660"
  },
  {
    "text": "frameworks are quite ready yet and one of things you really quickly learn is that there's so many there's so many",
    "start": "1127660",
    "end": "1133420"
  },
  {
    "text": "nothing bows you need to understand of the underlying infrastructure and the getting right is really hard and all the",
    "start": "1133420",
    "end": "1139300"
  },
  {
    "text": "frameworks that you see available on the market today they've all gone through that learning process making mistakes fixing it and",
    "start": "1139300",
    "end": "1145410"
  },
  {
    "text": "the one that we use is called a service framework and when a reason why we chose it is that is this is backed by a",
    "start": "1145410",
    "end": "1151960"
  },
  {
    "text": "financial company there's a even at a time when we adopted it in the twenty sixteen that was a lot of momentum in",
    "start": "1151960",
    "end": "1157870"
  },
  {
    "text": "the community but also at that at this point in time they are they've gone through the first version where they",
    "start": "1157870",
    "end": "1163660"
  },
  {
    "text": "made a lot of mistakes and they've heard feedback from the community and now that version 1 and version 2 is not far from",
    "start": "1163660",
    "end": "1170200"
  },
  {
    "text": "the in the horizon but since then amazon also you know got himself into the game",
    "start": "1170200",
    "end": "1176320"
  },
  {
    "text": "with the same framework as well and between server listed Sam these are the",
    "start": "1176320",
    "end": "1181360"
  },
  {
    "text": "two biggest deployment frameworks for the is for in EPS lambda the one thing",
    "start": "1181360",
    "end": "1186670"
  },
  {
    "text": "also one thing to keep in mind the service framework supports other providers as well so he supports after",
    "start": "1186670",
    "end": "1192430"
  },
  {
    "text": "the parks run plug it well after the box your functions google cloud functions",
    "start": "1192430",
    "end": "1198280"
  },
  {
    "text": "for insta open bisque and the more available and also added constantly by the community",
    "start": "1198280",
    "end": "1204910"
  },
  {
    "text": "by is very extensive and also very flexible framework a plugin structure",
    "start": "1204910",
    "end": "1210220"
  },
  {
    "text": "but then also there's a patters up klaudia zappers sparta",
    "start": "1210220",
    "end": "1216940"
  },
  {
    "text": "so symptomatic of any new and hype technologies this new framework just about every single",
    "start": "1216940",
    "end": "1223060"
  },
  {
    "text": "week and the finger saw in the one last last week called architecting code or",
    "start": "1223060",
    "end": "1228400"
  },
  {
    "text": "something I think the point I'm here to make is that there's going to be a lot of new frameworks and what you rather than",
    "start": "1228400",
    "end": "1234940"
  },
  {
    "text": "getting distracted we have all these new frameworks to try the mouse trying to try a few of them pick one that works",
    "start": "1234940",
    "end": "1240610"
  },
  {
    "text": "best for you and your team and just mend data on the team you don't want to waste so much time just no jumping between",
    "start": "1240610",
    "end": "1246190"
  },
  {
    "text": "different frameworks and also you want to minimize you want to maximize the amount of knowledge knowledge sharing",
    "start": "1246190",
    "end": "1251650"
  },
  {
    "text": "within your team at the same time minimize the friction that you're gonna cause when people move from one project",
    "start": "1251650",
    "end": "1257320"
  },
  {
    "text": "to another when I go to a different project that maybe Thomas is working on I want to focus and spend my time",
    "start": "1257320",
    "end": "1263830"
  },
  {
    "text": "learning the new domain the new copays rather than working out ok so I was using servers to do my diploma in the",
    "start": "1263830",
    "end": "1270400"
  },
  {
    "text": "previous frame were in the previous project now they are using something else how do I deploy my code those",
    "start": "1270400",
    "end": "1275680"
  },
  {
    "text": "friendship become institution knowledge in your team you don't want to be some instant or wedding wasting people's time",
    "start": "1275680",
    "end": "1281140"
  },
  {
    "text": "learning how to deploy your code every time they move to new project but once",
    "start": "1281140",
    "end": "1286570"
  },
  {
    "text": "you start working with lambda you could have figured out how do you test your code and as far as testing goes this is",
    "start": "1286570",
    "end": "1292120"
  },
  {
    "text": "my favorite book by net price and Steve Freeman and you talked about different levels to testing no you first you've",
    "start": "1292120",
    "end": "1299080"
  },
  {
    "text": "got your unit test where your test your code at the object or module level and nothing's changed here ultimately",
    "start": "1299080",
    "end": "1305500"
  },
  {
    "text": "because some business logic encapsulated into a class or module you can still write code to test them the same way I",
    "start": "1305500",
    "end": "1312040"
  },
  {
    "text": "say you have always done and then you've got the education test where you test your code against code that you can't",
    "start": "1312040",
    "end": "1317620"
  },
  {
    "text": "change and since lambda ultimately is just some functions some business logic there are machines calling on your",
    "start": "1317620",
    "end": "1324190"
  },
  {
    "text": "behalf when some event happens there's nothing that stops you from exercising the same code by calling your function",
    "start": "1324190",
    "end": "1330730"
  },
  {
    "text": "locally we have a stopped event and context object that way you can still",
    "start": "1330730",
    "end": "1335740"
  },
  {
    "text": "exercise the same logic locally as you would do when it's executed in the cloud the thing to keep in mind is that the",
    "start": "1335740",
    "end": "1341920"
  },
  {
    "text": "purpose of integration tests is exercise your code against Cole you can't change so when you run in your integration test",
    "start": "1341920",
    "end": "1348640"
  },
  {
    "text": "it's important to set them out even when running them locally to hit the real downshift systems that",
    "start": "1348640",
    "end": "1354409"
  },
  {
    "text": "you're talking to it's nice don't believe they shouldn't be using marks and stuffs for this contest otherwise you can't be learning",
    "start": "1354409",
    "end": "1361009"
  },
  {
    "text": "my code works fine against my stops and the moment I deployed production BAM because the thing that I'm stopping",
    "start": "1361009",
    "end": "1367220"
  },
  {
    "text": "doesn't behave exactly the way that my stops do and once you coach me deployed and",
    "start": "1367220",
    "end": "1372379"
  },
  {
    "text": "running in the inside address environment you can then run acceptance tests where you test whether or not the",
    "start": "1372379",
    "end": "1377450"
  },
  {
    "text": "whole system works and to end and as you go up this this is a triangle of testing",
    "start": "1377450",
    "end": "1384379"
  },
  {
    "text": "the unit tests give you much faster feedback loop but you get a far stronger sense of confidence with your certain",
    "start": "1384379",
    "end": "1391190"
  },
  {
    "text": "tests that what you've got here is actually couldn't do what you're supposed to what is deploy into",
    "start": "1391190",
    "end": "1396200"
  },
  {
    "text": "production and one of the things that one of the key things I learned from this book and I'm gonna read it because this column is that we find that tests",
    "start": "1396200",
    "end": "1404239"
  },
  {
    "text": "that mark is Turner libraries often need to be complex to get a car into the right state for the functionality that",
    "start": "1404239",
    "end": "1410059"
  },
  {
    "text": "we need to exercise the mass of this test is telling us that the design is not right but instead of fixing the",
    "start": "1410059",
    "end": "1416179"
  },
  {
    "text": "problem by improving the code we have to carry the extra complexity in both the code and the tests and the second risk",
    "start": "1416179",
    "end": "1423979"
  },
  {
    "text": "is that we have to be sure the behavior that we stopped or mark matches what the external library will actually take and",
    "start": "1423979",
    "end": "1430039"
  },
  {
    "text": "even we can do right once we have to make sure that the tests remain valid as we upgrade the libraries now the same",
    "start": "1430039",
    "end": "1438349"
  },
  {
    "text": "principles of things to apply in this increasingly service-oriented world that we live in that you really shouldn't be",
    "start": "1438349",
    "end": "1444080"
  },
  {
    "text": "mocking services that you don't control think about how you the second risk that the nan and Steve talked about that you",
    "start": "1444080",
    "end": "1451099"
  },
  {
    "text": "can't you have make sure that your marks is continued to work when you upgrade the library now when Amazon updates one",
    "start": "1451099",
    "end": "1456799"
  },
  {
    "text": "of the services you are no you can solve when they do that but you still gotta be make sure that your stubs and your mark",
    "start": "1456799",
    "end": "1462710"
  },
  {
    "text": "still matches the exact of what the news of the new version of a service is gonna do but I think fundamentally we have to",
    "start": "1462710",
    "end": "1470570"
  },
  {
    "text": "rethink how we test software when it comes to service technologies are lambda",
    "start": "1470570",
    "end": "1476029"
  },
  {
    "text": "because I think I found before because I think that the risk profile of what can go wrong has fundamentally changed if",
    "start": "1476029",
    "end": "1482929"
  },
  {
    "text": "you focus on testing was inside your function with your unit test and just mocking and stubbing your dependencies you're",
    "start": "1482929",
    "end": "1489559"
  },
  {
    "text": "missing out most of the things that can actually go wrong when your curve runs in production for me personally the",
    "start": "1489559",
    "end": "1495320"
  },
  {
    "text": "first thing that often goes wrong is I am permissions I created a new function is using a new table and you always find",
    "start": "1495320",
    "end": "1502610"
  },
  {
    "text": "when I'm using mocks and stubs the moment are running and deploy it and run it BAM okay might my function can't talk to the",
    "start": "1502610",
    "end": "1510169"
  },
  {
    "text": "time TV table because it is mixed is missing the permissions or this whole bunch of orchestration involved in terms",
    "start": "1510169",
    "end": "1515720"
  },
  {
    "text": "of the creation the maintenance of those resources my functions using the configuration of upstream event sources",
    "start": "1515720",
    "end": "1522500"
  },
  {
    "text": "and so on and so forth and this risk of shipping broken software due to miss",
    "start": "1522500",
    "end": "1528620"
  },
  {
    "text": "configuration is is vastly magnified when you have a tune I manage the configuration for each every single one",
    "start": "1528620",
    "end": "1535220"
  },
  {
    "text": "of those hundreds and thousands of functions that you can have running in production and smart observation that",
    "start": "1535220",
    "end": "1541309"
  },
  {
    "text": "most of your lambda functions themselves are actually now very very simple if you apply the learnings we have done with a",
    "start": "1541309",
    "end": "1548809"
  },
  {
    "text": "single responsibility the individual functions themselves are also are normally very very simple the risk of",
    "start": "1548809",
    "end": "1554659"
  },
  {
    "text": "you actually shipping some broken code has now largely shifted to how your function interacts with external",
    "start": "1554659",
    "end": "1560900"
  },
  {
    "text": "services and its downstream dependencies and this whole purpose of us of writing",
    "start": "1560900",
    "end": "1566750"
  },
  {
    "text": "and writing tests or sorry the whole purpose of us of writing code in the first place is so that we can ship",
    "start": "1566750",
    "end": "1572480"
  },
  {
    "text": "working software at the end of the whole cycle and that's the goal that we should ultimately optimized towards or in terms",
    "start": "1572480",
    "end": "1579770"
  },
  {
    "text": "of how we work so as far as I'm concerned it's okay for me to looser my",
    "start": "1579770",
    "end": "1584809"
  },
  {
    "text": "feedback loop speed even though are lovely as a developer but ultimately if I'm learning the wrong things faster",
    "start": "1584809",
    "end": "1591080"
  },
  {
    "text": "with the fastest feedback loop that's not going to help me ship working software faster to my users and recently",
    "start": "1591080",
    "end": "1598909"
  },
  {
    "text": "in the last six months you also start to see some of these the local I guess",
    "start": "1598909",
    "end": "1604220"
  },
  {
    "text": "environment we fade abrasive cost in the same local there's also some too from jetbrains as",
    "start": "1604220",
    "end": "1609980"
  },
  {
    "text": "as well I think those tools are great and they've definitely very helpful in certain stages of your development cycle",
    "start": "1609980",
    "end": "1615590"
  },
  {
    "text": "but you shouldn't use them in place or instead of your engine test you should still be",
    "start": "1615590",
    "end": "1621500"
  },
  {
    "text": "writing end-to-end tests and making sure that your code is running it's going to work the way you expect it to you and to",
    "start": "1621500",
    "end": "1628790"
  },
  {
    "text": "end and that means you have to rely on a lot of external services during your testing and I mean that's okay",
    "start": "1628790",
    "end": "1635480"
  },
  {
    "text": "as Paul points out the so many services for you to choose if one doesn't work quite well for you just pick another one",
    "start": "1635480",
    "end": "1641750"
  },
  {
    "text": "just hundreds of them now there nowadays as for engine testing Steve and that",
    "start": "1641750",
    "end": "1648650"
  },
  {
    "text": "also talks about how we ever possible and acceptance says should exercise the system and to end without calling",
    "start": "1648650",
    "end": "1655040"
  },
  {
    "text": "directly his internal code and entrant tests interact with the system only from the outside through his interfaces and",
    "start": "1655040",
    "end": "1662390"
  },
  {
    "text": "coming back to the exam the search api example the Domus gave earlier to test the system we will interact with the",
    "start": "1662390",
    "end": "1668840"
  },
  {
    "text": "legacy system by its HTTP interface the same way that our mobile client would do to create new users and the test case",
    "start": "1668840",
    "end": "1676100"
  },
  {
    "text": "would be to validate that within a reasonable amount of time those new users are then can be searched by our",
    "start": "1676100",
    "end": "1681710"
  },
  {
    "text": "first name last name and username by talking to the Search API directly another thing we notice is that when",
    "start": "1681710",
    "end": "1689780"
  },
  {
    "text": "you're running your integration test you're testing your code locally by hitting the same view down streams",
    "start": "1689780",
    "end": "1694910"
  },
  {
    "text": "involve databases and message queues and so on but when you test your system with",
    "start": "1694910",
    "end": "1700700"
  },
  {
    "text": "acceptance test you're talking to set two into the same code but instead you're talking to them via HTTP",
    "start": "1700700",
    "end": "1707330"
  },
  {
    "text": "endpoints or SNS messages and so on so the only difference between these two is",
    "start": "1707330",
    "end": "1712490"
  },
  {
    "text": "how your code is being invoked right so when we write in the test we can",
    "start": "1712490",
    "end": "1718970"
  },
  {
    "text": "actually use the test cases by defining the one step so when we invoke some important the get end point so inside",
    "start": "1718970",
    "end": "1726860"
  },
  {
    "text": "the definition of that one step we can have a taco which can be passing as environment variables or any other means",
    "start": "1726860",
    "end": "1732740"
  },
  {
    "text": "that you can you want to use instead and where in this case if it says is handler then we will call the handler function",
    "start": "1732740",
    "end": "1739340"
  },
  {
    "text": "directly with a stop event and context but if it's a something else then we",
    "start": "1739340",
    "end": "1745610"
  },
  {
    "text": "call the HTTP endpoint as be configured as part of our test a test setup as well",
    "start": "1745610",
    "end": "1752160"
  },
  {
    "text": "and you can see how this works you can try out yourself as well and I've got a kidnap repo where you can actually see",
    "start": "1752160",
    "end": "1758790"
  },
  {
    "text": "how this can be configured for your own use case and this is what we get to see",
    "start": "1758790",
    "end": "1766130"
  },
  {
    "text": "I NCD because this is something that there was always temptation to leave it at the very end to automate your",
    "start": "1766130",
    "end": "1773100"
  },
  {
    "text": "deployments automate your tests and so on because it takes time but actually",
    "start": "1773100",
    "end": "1778790"
  },
  {
    "text": "the earlier you consider CIN CD the more time you're going to save in the long",
    "start": "1778790",
    "end": "1784680"
  },
  {
    "text": "term especially because that's going to avoid all the human errors there you can have otherwise and especially because",
    "start": "1784680",
    "end": "1791400"
  },
  {
    "text": "there are tools like service you have no excuse not to use it or service makes it",
    "start": "1791400",
    "end": "1796500"
  },
  {
    "text": "so simple to deploy just single command that you run on command line done other things you need to think about how",
    "start": "1796500",
    "end": "1802950"
  },
  {
    "text": "you're testing so coming back to the same book that we really like is how Steve says that we prefer to have",
    "start": "1802950",
    "end": "1808860"
  },
  {
    "text": "end-to-end tests exercising both system and the processes by which is being",
    "start": "1808860",
    "end": "1813870"
  },
  {
    "text": "built and deployed this sounds like a lot of efforts because of course it is but has to be done anyway because during",
    "start": "1813870",
    "end": "1821160"
  },
  {
    "text": "the deployed development or your system so no excuse not to do it and another",
    "start": "1821160",
    "end": "1827250"
  },
  {
    "text": "pet peeve of yarn is that he's always annoyed when configuration in your team",
    "start": "1827250",
    "end": "1832710"
  },
  {
    "text": "city or Jenkins or so and it's not versions so when something breaks you're not gonna know who changed it you don't",
    "start": "1832710",
    "end": "1838500"
  },
  {
    "text": "know why it changed it and more importantly you don't know what it was before so you can't revert it back it",
    "start": "1838500",
    "end": "1843840"
  },
  {
    "text": "just wastes time and moreover it should be repeatable both on the CI box and",
    "start": "1843840",
    "end": "1850170"
  },
  {
    "text": "your local machine so what we had in yellow we were using Jenkins so the main",
    "start": "1850170",
    "end": "1857040"
  },
  {
    "text": "principle was we wanted to have it might be difficult to read but the command so",
    "start": "1857040",
    "end": "1863280"
  },
  {
    "text": "unit tests to run unit tests and integration test was just one single command with bash script with a couple",
    "start": "1863280",
    "end": "1868830"
  },
  {
    "text": "parameters the same way to do a deployment the same built bash script with a deploy parameter to run",
    "start": "1868830",
    "end": "1874470"
  },
  {
    "text": "acceptance and so on so now the whole configuration can be run both on your",
    "start": "1874470",
    "end": "1880260"
  },
  {
    "text": "local machine when you looking while your deployments are failing you don't need to have a really slow cycle",
    "start": "1880260",
    "end": "1885929"
  },
  {
    "text": "you change something and then you need to wait for Jenkins box to actually kick off the job and build it you can just do",
    "start": "1885929",
    "end": "1891509"
  },
  {
    "text": "that all locally so what we had we had as you can see like what a small the",
    "start": "1891509",
    "end": "1897299"
  },
  {
    "text": "bash script but importantly if especially if you're using serverless a thing to keep in mind is if you look",
    "start": "1897299",
    "end": "1904139"
  },
  {
    "text": "there where the note modules is listed we're using local not modules cause in not Jes you can install packages either",
    "start": "1904139",
    "end": "1910019"
  },
  {
    "text": "globally or locally as part of your project so all we suggest do that locally so now the build process is",
    "start": "1910019",
    "end": "1916799"
  },
  {
    "text": "independent of what its installed on your builds your machine because now if",
    "start": "1916799",
    "end": "1922320"
  },
  {
    "text": "a service does a breaking change you're not gonna break all your bills because the bills are going to be using the",
    "start": "1922320",
    "end": "1927539"
  },
  {
    "text": "version that they depend on and that you configure also I would actually",
    "start": "1927539",
    "end": "1933059"
  },
  {
    "text": "recommend to instead use Jenkins file that could be versions and controlled",
    "start": "1933059",
    "end": "1938220"
  },
  {
    "text": "together with your project but if you do that still follow the same principle the",
    "start": "1938220",
    "end": "1943320"
  },
  {
    "text": "build command should be just single line that you can easily run it should not have some a special logic about how you",
    "start": "1943320",
    "end": "1950369"
  },
  {
    "text": "run it and what you do you still want to be able to do that just really simple small command another thing we have to",
    "start": "1950369",
    "end": "1957230"
  },
  {
    "text": "consider is whether to do continuous delivery or continues deployments the only difference between those two is",
    "start": "1957230",
    "end": "1963450"
  },
  {
    "text": "basically how your code gets to production whether it's automated or it's manual in yellow we had that as",
    "start": "1963450",
    "end": "1971429"
  },
  {
    "text": "soon as you push to master we're gonna build it we're gonna run all the integration tests unit tests deploy it run acceptance tests in the",
    "start": "1971429",
    "end": "1978840"
  },
  {
    "text": "dev environment in test environment and staging but it's not gonna go to production just yet because we wanted to",
    "start": "1978840",
    "end": "1984480"
  },
  {
    "text": "have that control about when it goes live and what goes live just to be sure",
    "start": "1984480",
    "end": "1990110"
  },
  {
    "text": "and especially we had a rule to never deploy on the fridays evening because i'm guessing in many London offices you",
    "start": "1990110",
    "end": "1996990"
  },
  {
    "text": "might have a beer fridge and so on and you don't want to be after couple bears deploying to prod and then just going home all happy so next we get into",
    "start": "1996990",
    "end": "2005720"
  },
  {
    "text": "logging because it's all good and fine we deployed our systems to production but now when the bug come it comes along",
    "start": "2005720",
    "end": "2013100"
  },
  {
    "text": "how do you diagnose where it got so with lambda it's quite simple anything that",
    "start": "2013100",
    "end": "2018710"
  },
  {
    "text": "you print out to this and outputs are gonna be shipped to the watch logs and additional information is",
    "start": "2018710",
    "end": "2026420"
  },
  {
    "text": "being appended as well like the timestamp when it happens and the ID for example if you're using API gateway is",
    "start": "2026420",
    "end": "2033440"
  },
  {
    "text": "gonna be the request ID so having all",
    "start": "2033440",
    "end": "2038540"
  },
  {
    "text": "this if you're not familiar with how the clock watch looks in the it'll yes a",
    "start": "2038540",
    "end": "2044920"
  },
  {
    "text": "console you have the cloud log group that actually the name matches what your",
    "start": "2044920",
    "end": "2052280"
  },
  {
    "text": "lambda name is so there is one Law Group for lambda and then each specific",
    "start": "2052280",
    "end": "2057980"
  },
  {
    "text": "version and execution of the LEI lambda will create a new lock stream so but the",
    "start": "2057980",
    "end": "2064550"
  },
  {
    "text": "problem is that looks cloud which is not really easily searchable or using especially when you have hundreds of",
    "start": "2064550",
    "end": "2071300"
  },
  {
    "text": "lambdas running and you easily gonna get or overloaded with all the logs and this is a really common problem with micro",
    "start": "2071300",
    "end": "2077510"
  },
  {
    "text": "services so the solution for that is centralized logging so for the centralized logging is going to make",
    "start": "2077510",
    "end": "2082970"
  },
  {
    "text": "them easily searchable so one of the industry standards is alec stack this is",
    "start": "2082970",
    "end": "2088070"
  },
  {
    "text": "what we chose to use it could be anything it could be Splunk or so on all of these principles are going to apply",
    "start": "2088070",
    "end": "2094159"
  },
  {
    "text": "so any of those systems so the good thing about cloud which logs is that for",
    "start": "2094160",
    "end": "2099860"
  },
  {
    "text": "the cloud which log you can actually stream all of those log entries to either a Amazon Elastic search or you",
    "start": "2099860",
    "end": "2107450"
  },
  {
    "text": "can actually stream that so LDS lambda so what we had is you have a lambda",
    "start": "2107450",
    "end": "2112460"
  },
  {
    "text": "they're gonna be subscribing to the clock which logs and gonna stream all of them so elke stack and you don't want to",
    "start": "2112460",
    "end": "2120980"
  },
  {
    "text": "have a manual process because you can do that by logging in and clicking or you hitting against the a api AWS AP ice but",
    "start": "2120980",
    "end": "2131210"
  },
  {
    "text": "it's gonna be painful what you can do instead is enable clap trail and clout trail what it gives you is any event",
    "start": "2131210",
    "end": "2138920"
  },
  {
    "text": "that happens on the system in AWS for example creating a new resource updating deleting somebody logs in and so on is",
    "start": "2138920",
    "end": "2145430"
  },
  {
    "text": "going to be published as an event so now you can subscribe to it as any cloud which event and you can have another",
    "start": "2145430",
    "end": "2152480"
  },
  {
    "text": "lambda that's responsible for doing subscribing for you automatically so whenever a new log",
    "start": "2152480",
    "end": "2158780"
  },
  {
    "text": "group is created it will subscribe that log group with the lambda that will ship",
    "start": "2158780",
    "end": "2164660"
  },
  {
    "text": "all your logs to L stack so now you just have implemented once small lambda and it just works you can also filter it so",
    "start": "2164660",
    "end": "2172640"
  },
  {
    "text": "it only ships for example lambda log groups you can have a filter about what should be shipped but the thing keep in",
    "start": "2172640",
    "end": "2180620"
  },
  {
    "text": "mind is that when you're creating a new law group the expiration is actually set",
    "start": "2180620",
    "end": "2186890"
  },
  {
    "text": "by default to never expire so it could get costly in the long run so as part of that when the log new log group is",
    "start": "2186890",
    "end": "2194270"
  },
  {
    "text": "created you can also update this you can do many automation bits off of those events and if you want to have a bit",
    "start": "2194270",
    "end": "2201290"
  },
  {
    "text": "more read and play with it yourself there is a great blog post by Yann about",
    "start": "2201290",
    "end": "2206420"
  },
  {
    "text": "the centralized logging and and if you just follow that link below and now",
    "start": "2206420",
    "end": "2213020"
  },
  {
    "text": "we're getting to distributed tracing so so very good having already lost for all",
    "start": "2213020",
    "end": "2219770"
  },
  {
    "text": "of your functions but for many of your features you have to rely on multiple functions all working in perfect tandem",
    "start": "2219770",
    "end": "2225950"
  },
  {
    "text": "for you to work from the moments that I'll create a post for example you have to go through multiple functions and",
    "start": "2225950",
    "end": "2231290"
  },
  {
    "text": "multiple different event sources before the data eventually gets to where it needs to be and for someone to then",
    "start": "2231290",
    "end": "2236810"
  },
  {
    "text": "build a cordon API to fetch their timeline so now what happens if",
    "start": "2236810",
    "end": "2241910"
  },
  {
    "text": "somewhere along the way is something running wrong and one of your Kiwi guys or one of their users raised a complaint",
    "start": "2241910",
    "end": "2246950"
  },
  {
    "text": "that hey my wife created post last night I've really wanted to say my timeline but it doesn't show up why is that -",
    "start": "2246950",
    "end": "2254060"
  },
  {
    "text": "trying to debug it is quite difficult even though you've got all the different logs for all the your functions but it's",
    "start": "2254060",
    "end": "2259880"
  },
  {
    "text": "not easy for you to string together everything there happen for that particular post so that you can see a",
    "start": "2259880",
    "end": "2265460"
  },
  {
    "text": "chronological view of everything that has happened across the entire architecture for that particular post",
    "start": "2265460",
    "end": "2270830"
  },
  {
    "text": "again this is common problem people find in the micro services and a solution",
    "start": "2270830",
    "end": "2276050"
  },
  {
    "text": "there is to use correlation IDs which can include any number of aliens could be a user ID the person creating a post",
    "start": "2276050",
    "end": "2282350"
  },
  {
    "text": "it could be the ID for the posts that have just been created and so on the interesting thing to remember",
    "start": "2282350",
    "end": "2287910"
  },
  {
    "text": "here is that those those that the data that's been created is moving around",
    "start": "2287910",
    "end": "2293310"
  },
  {
    "text": "your systems through HTTP core so you can easy streams through SNS messages that means all the collation IDs that",
    "start": "2293310",
    "end": "2299849"
  },
  {
    "text": "have the goal that those that data that they the flow have to flow through all of these different event sources as well",
    "start": "2299849",
    "end": "2306180"
  },
  {
    "text": "and for HTTP endpoints we know how to do that we just pass them along as HTTP",
    "start": "2306180",
    "end": "2311730"
  },
  {
    "text": "headers but what about some of this other event source is just where you don't have obvious way to tag all these",
    "start": "2311730",
    "end": "2317760"
  },
  {
    "text": "context data around with the to quote the data yourself and the way we approach this was to create our own",
    "start": "2317760",
    "end": "2324240"
  },
  {
    "text": "libraries for HTTP by wrapping around our favorite HTTP client as well as",
    "start": "2324240",
    "end": "2329460"
  },
  {
    "text": "wrapping around a domestique a crime for Canisius for SNS and so on so that when",
    "start": "2329460",
    "end": "2334770"
  },
  {
    "text": "the purpose inside we can shove for example for SNS we can shove those contexts the collation IDs into message",
    "start": "2334770",
    "end": "2342270"
  },
  {
    "text": "attributes when we publish a message into SNS for Canisius there's no obvious places to put them so we include them as",
    "start": "2342270",
    "end": "2348930"
  },
  {
    "text": "part of the message to payload with especially especially convention underscore contacts or something like",
    "start": "2348930",
    "end": "2355319"
  },
  {
    "text": "that and for HTTP endpoints person belong as HTTP headers and on the",
    "start": "2355319",
    "end": "2360690"
  },
  {
    "text": "receiving side we also have the middleware tier in our code base where we will extract those and then we set",
    "start": "2360690",
    "end": "2366510"
  },
  {
    "text": "them as a global context so that every time from our code from our function we write a lock message those to be",
    "start": "2366510",
    "end": "2373050"
  },
  {
    "text": "included as part of that lock message which in this case would be for a JSON JSON string so that when the log",
    "start": "2373050",
    "end": "2380190"
  },
  {
    "text": "shipping function picks it up you can actually create at the lower context to the log messages that you're sending to",
    "start": "2380190",
    "end": "2385950"
  },
  {
    "text": "your lastic search so that way someone comes along with question hey so-and-so is the user ID created post yesterday",
    "start": "2385950",
    "end": "2392550"
  },
  {
    "text": "didn't go to where his husband's or her husband's field what's going on then you",
    "start": "2392550",
    "end": "2399210"
  },
  {
    "text": "can start looking for that user you can search for our users user ID and maybe in the post ID as well to see everything",
    "start": "2399210",
    "end": "2405000"
  },
  {
    "text": "to happen your system for that particular post again in writing a lot",
    "start": "2405000",
    "end": "2410220"
  },
  {
    "text": "of stuff over on lambda so there's a blog post that shows you how you can actually do that including the demo code",
    "start": "2410220",
    "end": "2416099"
  },
  {
    "text": "for both the live with the client libraries as well as the middleware that you can do and then ask better for this to be",
    "start": "2416099",
    "end": "2422099"
  },
  {
    "text": "chasing he's understand where the execution time happens across your function invocations and for that again",
    "start": "2422099",
    "end": "2428550"
  },
  {
    "text": "is a common problem people have in the microservices and where's in the soft server for Microsoft this world two",
    "start": "2428550",
    "end": "2435660"
  },
  {
    "text": "stars if Kim is kind of the standard there with Amazon they also introduce the x-ray a thing at two years ago we",
    "start": "2435660",
    "end": "2441630"
  },
  {
    "text": "factor eight you can see for one function invocation with instrumentation on your own your code you can see all",
    "start": "2441630",
    "end": "2448109"
  },
  {
    "text": "the different segments of how long time how much time it took to say talk to SNL's to talk to tournament DB to talk",
    "start": "2448109",
    "end": "2455070"
  },
  {
    "text": "to some internal API and so on and from that data you can also see a service map",
    "start": "2455070",
    "end": "2460560"
  },
  {
    "text": "so that you can see all the different services that your lambda function is talking to as well as the average and",
    "start": "2460560",
    "end": "2466619"
  },
  {
    "text": "max execution time for those services the actually it's alright it does it",
    "start": "2466619",
    "end": "2472290"
  },
  {
    "text": "works quite well for a certain set of things it does but one of the big problem I find right now is that it",
    "start": "2472290",
    "end": "2477599"
  },
  {
    "text": "API key witness a natively supported so I'm gonna step out of the microphone range have a char little bit but when I",
    "start": "2477599",
    "end": "2495480"
  },
  {
    "text": "call the function what happens that's it",
    "start": "2495480",
    "end": "2504119"
  },
  {
    "text": "API care support is coming I've been told I don't know when that's typically do so just wait for it",
    "start": "2504119",
    "end": "2511109"
  },
  {
    "text": "another thing API actually the support is say dissing work with event sources",
    "start": "2511109",
    "end": "2516240"
  },
  {
    "text": "that causes async receive engine vocations so if you're sending something to SNS that gets picked up by and the lambda",
    "start": "2516240",
    "end": "2522810"
  },
  {
    "text": "function you don't see that second invocation the hack that happens as part of your trace there's a number of tools",
    "start": "2522810",
    "end": "2528599"
  },
  {
    "text": "that are being worked on by people that run off the bridge the gap that we have in the tools that we have in this server",
    "start": "2528599",
    "end": "2534839"
  },
  {
    "text": "a server observability space mode I will talk more about this some other time",
    "start": "2534839",
    "end": "2540180"
  },
  {
    "text": "and for now if you want to read a bit more about APA x-ray what know what's cool about it way",
    "start": "2540180",
    "end": "2546089"
  },
  {
    "text": "doesn't work wrote a blog post recently as well how are we doing on time or few okay so",
    "start": "2546089",
    "end": "2552900"
  },
  {
    "text": "moving on to more one of the things that were used to doing and again on the server for space is to install monitoring agents and",
    "start": "2552900",
    "end": "2560160"
  },
  {
    "text": "demons to collect logs and select collector metrics unfortunately with lambda you can't do",
    "start": "2560160",
    "end": "2565650"
  },
  {
    "text": "that anymore you can't access the underlying host operating system instead you are more reliant on the information",
    "start": "2565650",
    "end": "2571590"
  },
  {
    "text": "that you get from cloud watch which gives you the basic set of metrics that you probably want anyway and then other",
    "start": "2571590",
    "end": "2577890"
  },
  {
    "text": "providers also study support lambda but most of them just use the same set of data you get from cloud watch but give",
    "start": "2577890",
    "end": "2584640"
  },
  {
    "text": "you a better looking dashboard in front of it and in this space the guys IO pipe",
    "start": "2584640",
    "end": "2589920"
  },
  {
    "text": "they do something slightly different it's quite interesting in that they give us DK where you can have a factory",
    "start": "2589920",
    "end": "2595680"
  },
  {
    "text": "function essentially to grab your function code around so that they can integer and intercept your function",
    "start": "2595680",
    "end": "2601410"
  },
  {
    "text": "invocations and then send metrics to their own back-end systems when your function finishes either successfully or",
    "start": "2601410",
    "end": "2607800"
  },
  {
    "text": "with some exception and you can also get additional data points around the memory usage as well CPU usage which may or may",
    "start": "2607800",
    "end": "2614940"
  },
  {
    "text": "not be of interest to you but the problem I found with this approach is that because we've lambda everything has",
    "start": "2614940",
    "end": "2621300"
  },
  {
    "text": "to happen inside your function invocation there's no background processing anymore so where our pipe is",
    "start": "2621300",
    "end": "2627240"
  },
  {
    "text": "sending metrics to their own back-end system you are paying for that invocation time in fact not only you are",
    "start": "2627240",
    "end": "2632250"
  },
  {
    "text": "paying for it because API K we doesn't respond to the caller until your functions invocation finishes and once",
    "start": "2632250",
    "end": "2638370"
  },
  {
    "text": "that's happening some poor guys using an app is actually waiting for you to finish sending metrics to our pipe so",
    "start": "2638370",
    "end": "2645600"
  },
  {
    "text": "that's why main concern with the approach that got our pipe research Pro has has gone with because again we don't",
    "start": "2645600",
    "end": "2654000"
  },
  {
    "text": "have background posting anymore we can't do all this ship function well shipping logs and sending metrics in the",
    "start": "2654000",
    "end": "2660060"
  },
  {
    "text": "background there is however workaround which I find quite quite interesting one",
    "start": "2660060",
    "end": "2665880"
  },
  {
    "text": "of the things you do get the background processing for is the other things that the platform gives you including",
    "start": "2665880",
    "end": "2671160"
  },
  {
    "text": "collecting logs from standard out and shipping them to cloud wash logs so what you could do and this is what data talks",
    "start": "2671160",
    "end": "2676710"
  },
  {
    "text": "does for custom metrics is record your metrics as specially formatted log",
    "start": "2676710",
    "end": "2682230"
  },
  {
    "text": "messages so that you can then process them asynchronously in the background outside of your phone",
    "start": "2682230",
    "end": "2687360"
  },
  {
    "text": "location so that the same function that shipping logs to elasticsearch or wherever can also then send those",
    "start": "2687360",
    "end": "2694350"
  },
  {
    "text": "metrics to your metrics the monitoring system instead it's not the right",
    "start": "2694350",
    "end": "2699540"
  },
  {
    "text": "approach for every scenario for four user facing API so I think this is",
    "start": "2699540",
    "end": "2704610"
  },
  {
    "text": "something that is worth considering because ultimately you don't want you don't you you don't want your users to",
    "start": "2704610",
    "end": "2709680"
  },
  {
    "text": "be waiting for you to do this background processing but four phases are involved asynchronously from second easiest",
    "start": "2709680",
    "end": "2716100"
  },
  {
    "text": "events or SNS messages you can just put it on care about actually ten milliseconds of execution time just fire",
    "start": "2716100",
    "end": "2723330"
  },
  {
    "text": "all your metrics as you want again you can try out you try yourself yourself oh",
    "start": "2723330",
    "end": "2729060"
  },
  {
    "text": "yeah we have custom demo code and so as the blog post explains how this might work they can try out yourself and once",
    "start": "2729060",
    "end": "2736080"
  },
  {
    "text": "you got all your metrics you do the same things that you've probably known to do already setting up dashboard setting up",
    "start": "2736080",
    "end": "2741600"
  },
  {
    "text": "alarms and also any sort of application level metrics like the number of posts people have downloads of view has",
    "start": "2741600",
    "end": "2747900"
  },
  {
    "text": "created also track those as well however as much as no car was being a decent",
    "start": "2747900",
    "end": "2755300"
  },
  {
    "text": "fairly cheaper service use the monitor or your lambda functions and also in",
    "start": "2755300",
    "end": "2760440"
  },
  {
    "text": "most cases it's the only way for you to get metrics about Amazon's web services so your talam deepest metrics your s3",
    "start": "2760440",
    "end": "2768690"
  },
  {
    "text": "and so on they're only available through cloud watch however cloud which is lacking on a number of different fronts",
    "start": "2768690",
    "end": "2774360"
  },
  {
    "text": "the UI is not great for anyone who's ever used it and there's not as much customization options as you find in",
    "start": "2774360",
    "end": "2780690"
  },
  {
    "text": "other services and also doesn't have some more advanced features like",
    "start": "2780690",
    "end": "2785720"
  },
  {
    "text": "protections that you find with wafer on and stack driver but a big reason for not using car wash for me is that it's",
    "start": "2785720",
    "end": "2792510"
  },
  {
    "text": "good a tendency to go down the same time as the thing that using it's a monitor this happened to me a few times where",
    "start": "2792510",
    "end": "2798600"
  },
  {
    "text": "okay Amazon's having some networking hiccup but it's - it's down or not",
    "start": "2798600",
    "end": "2803880"
  },
  {
    "text": "working her 2% so I know my services are being interrupted but I have no idea how bad it was because also cloud watch was",
    "start": "2803880",
    "end": "2810960"
  },
  {
    "text": "also down and sometimes when your service comes back up the cloud watch is not you have no idea okay is it working",
    "start": "2810960",
    "end": "2817020"
  },
  {
    "text": "is it now what do we do so that's not a great place to be and that's I'm gonna pass you back to Thomas",
    "start": "2817020",
    "end": "2824130"
  },
  {
    "text": "so now we're coming back to the mentioned configuration management's because now you have many lambdas",
    "start": "2824130",
    "end": "2831069"
  },
  {
    "text": "running in production and so on so it's all good and fine but how do you easily and quickly propagate configuration changes to all of them",
    "start": "2831069",
    "end": "2837549"
  },
  {
    "text": "so initially you can just when you're playing around you can just use a Lewis console too for example deploying lambda",
    "start": "2837549",
    "end": "2844869"
  },
  {
    "text": "you can set environment variables we chose this approach because a server list does allow you to set in moment",
    "start": "2844869",
    "end": "2851410"
  },
  {
    "text": "rables in your service configuration for your project when you're deploying it but it makes it difficult to share",
    "start": "2851410",
    "end": "2859479"
  },
  {
    "text": "across all the lambdas because if you have 50 lambdas using some config and",
    "start": "2859479",
    "end": "2866019"
  },
  {
    "text": "you want to change it now you have to go in and update all of them and because they are specified during deployment",
    "start": "2866019",
    "end": "2872380"
  },
  {
    "text": "time and function also it gives you no way to have like what's the fine-grained",
    "start": "2872380",
    "end": "2879849"
  },
  {
    "text": "access so not everybody should have access to it but if you're using an armed rebels that are required during",
    "start": "2879849",
    "end": "2886440"
  },
  {
    "text": "deployment time now all of your developers needs to have access to that",
    "start": "2886440",
    "end": "2892289"
  },
  {
    "text": "or else they have no ability to deploy but you don't want to have somebody leaving the company taking their codes",
    "start": "2892289",
    "end": "2898210"
  },
  {
    "text": "with them on the laptop and then having all the secrets there so you want to have some kind of a centralized",
    "start": "2898210",
    "end": "2903400"
  },
  {
    "text": "configuration service and it could be as simple as some key value store so we had",
    "start": "2903400",
    "end": "2909670"
  },
  {
    "text": "a look at what's available out there we had a look at console we had a look at ET CD but the thing is you still need to",
    "start": "2909670",
    "end": "2916539"
  },
  {
    "text": "run instances for these it's gonna cost you even though if you're not using it and a to learn how to use to configure",
    "start": "2916539",
    "end": "2924969"
  },
  {
    "text": "and how to maintain it's quite steep so in our case because we already knew how to build lambdas and api's so we just",
    "start": "2924969",
    "end": "2932380"
  },
  {
    "text": "did our own small so there was no infrastructure to run it was really poke",
    "start": "2932380",
    "end": "2937539"
  },
  {
    "text": "it quick and small but this was before AWS announced that they have parameter",
    "start": "2937539",
    "end": "2942910"
  },
  {
    "text": "store now this is a great thing and you should be using it it gives you a way to",
    "start": "2942910",
    "end": "2948239"
  },
  {
    "text": "encrypt the sensitive data in flight and at rest and it also is",
    "start": "2948239",
    "end": "2954040"
  },
  {
    "text": "role-based access by I am rose so this is a cheap wine so you have your admin",
    "start": "2954040",
    "end": "2959890"
  },
  {
    "text": "who is the only one for example in organization who can update your secrets so he can get access because of his I am",
    "start": "2959890",
    "end": "2969700"
  },
  {
    "text": "roles and then developers don't need to access to change them at all because",
    "start": "2969700",
    "end": "2975730"
  },
  {
    "text": "they are all your secrets are being sought in parameter store and then they are encrypted at rest using kms and when",
    "start": "2975730",
    "end": "2983110"
  },
  {
    "text": "you are deployed your lambda when it starts up now lambda now has read access",
    "start": "2983110",
    "end": "2989320"
  },
  {
    "text": "and you can specify that specific lambda has only for the secrets that it needs",
    "start": "2989320",
    "end": "2994720"
  },
  {
    "text": "to access and not for everything in this case so it's all good and fine but it's",
    "start": "2994720",
    "end": "3001290"
  },
  {
    "text": "quite a you still need for example how do you cache how do you poll and so on",
    "start": "3001290",
    "end": "3007740"
  },
  {
    "text": "because you don't want to be hitting on every request you don't want to be hitting your configuration service so in",
    "start": "3007740",
    "end": "3012960"
  },
  {
    "text": "this case we build our own small library for that that would be responsible for",
    "start": "3012960",
    "end": "3017970"
  },
  {
    "text": "fetching the information caching it so it only being initialized during the",
    "start": "3017970",
    "end": "3023670"
  },
  {
    "text": "call start of your lambda so the next time it's being called it already looks up it has in its memory you can use it",
    "start": "3023670",
    "end": "3030420"
  },
  {
    "text": "and then it can it was also responsible for invalidating and refreshing them at",
    "start": "3030420",
    "end": "3036180"
  },
  {
    "text": "some period it could be like couple minutes or so and another thing listening to signals what I mean by that",
    "start": "3036180",
    "end": "3042180"
  },
  {
    "text": "is that for example your lambda is hitting some HTTP API so it has the URL",
    "start": "3042180",
    "end": "3047940"
  },
  {
    "text": "for it it has some secrets for it and then if suddenly you start getting back 404 you could raise a signal and then",
    "start": "3047940",
    "end": "3055290"
  },
  {
    "text": "your clients for configuration clients will invalidate that URL so the next",
    "start": "3055290",
    "end": "3061080"
  },
  {
    "text": "time it's being called it will try and get the new value because if you got 404 probably it moved somewhere also if you",
    "start": "3061080",
    "end": "3068190"
  },
  {
    "text": "wanna see how it could be easily implemented there are code examples and",
    "start": "3068190",
    "end": "3073350"
  },
  {
    "text": "everything how to use it on yawns block",
    "start": "3073350",
    "end": "3077690"
  },
  {
    "text": "as you can see I've been writing a lot so I guess we've got 10 minutes if I'm",
    "start": "3079450",
    "end": "3084619"
  },
  {
    "text": "conscious of times I want to give you guys some time to ask questions as well so I'm gonna skip a few of these but one",
    "start": "3084619",
    "end": "3089900"
  },
  {
    "text": "of them is worth remembering and mentioning is that Amazon lambdas got a 75 gig regional limit on all of your",
    "start": "3089900",
    "end": "3097059"
  },
  {
    "text": "package for your age with lambda that you upload and so - and you may find 75",
    "start": "3097059",
    "end": "3103430"
  },
  {
    "text": "kids quite a lot but we found that because we've lambda and Services Department so easy and we were easily",
    "start": "3103430",
    "end": "3109999"
  },
  {
    "text": "deploy hundreds of functions or hundreds of times a day each so even before to",
    "start": "3109999",
    "end": "3115460"
  },
  {
    "text": "make up package sizes very quickly we will run into I think at one point after about three months six people we were we",
    "start": "3115460",
    "end": "3122720"
  },
  {
    "text": "had about 20 gig of deployment packages on lambda so pretty soon we could hit",
    "start": "3122720",
    "end": "3127849"
  },
  {
    "text": "there signify kick limit and so in that at that point I took a leaf out of necklaces their playbook they got the",
    "start": "3127849",
    "end": "3134569"
  },
  {
    "text": "janitor monkey that goes round and Q resources that you don't use so I wrote the janitor lambda function that would",
    "start": "3134569",
    "end": "3140630"
  },
  {
    "text": "run on a schedule and then clean up all versions of your of the different package for your functions that are no",
    "start": "3140630",
    "end": "3146779"
  },
  {
    "text": "longer reference and one of the things you can do nowadays with version one of the service framework is also to say",
    "start": "3146779",
    "end": "3152239"
  },
  {
    "text": "that when you do a deployment don't always create new versions therefore you don't create redundant packages for",
    "start": "3152239",
    "end": "3159259"
  },
  {
    "text": "every single version which in deployment or insert in developing environments are just not used for all you won't turn you",
    "start": "3159259",
    "end": "3164900"
  },
  {
    "text": "on for production sure so that your core version they can quickly go back to but not for the not",
    "start": "3164900",
    "end": "3170180"
  },
  {
    "text": "to native development another thing that you can do nowadays since one point 16.0",
    "start": "3170180",
    "end": "3175339"
  },
  {
    "text": "version of a service framework is if you install your service framework as a",
    "start": "3175339",
    "end": "3180529"
  },
  {
    "text": "dependency or anything as that dependency they get excluded as part of the package step where if you call if",
    "start": "3180529",
    "end": "3187880"
  },
  {
    "text": "using it was DK and you don't want to use your own Val you don't want to package your own version you can store",
    "start": "3187880",
    "end": "3193400"
  },
  {
    "text": "as that as a dependency and that'll be excluded so your package size becomes smaller and before the service framework",
    "start": "3193400",
    "end": "3201140"
  },
  {
    "text": "you can also invoke functions locally using a invoke command and that means you can also if you're using Python or",
    "start": "3201140",
    "end": "3208849"
  },
  {
    "text": "nodejs it also means that you can hook it up with viciously do Co so they can actually debug your code locally you can do the",
    "start": "3208849",
    "end": "3215600"
  },
  {
    "text": "same thing with the same framework as well with Sam Evoque that's also a way for you to just hook up your video code",
    "start": "3215600",
    "end": "3222710"
  },
  {
    "text": "so that you can debug your functions locally which is that okay and with co-star this",
    "start": "3222710",
    "end": "3230300"
  },
  {
    "text": "is probably that the pain of everyone was using a nice form of service",
    "start": "3230300",
    "end": "3235310"
  },
  {
    "text": "technologies today and so co-star is basically what happens when you function",
    "start": "3235310",
    "end": "3241460"
  },
  {
    "text": "what runs for the first time Amazon's gonna have to load your code have the starter container under the",
    "start": "3241460",
    "end": "3246920"
  },
  {
    "text": "hood yeah we saw a container under the hood and so that time is what we can ormally call Co start Amazon doesn't",
    "start": "3246920",
    "end": "3253550"
  },
  {
    "text": "talk specifically about what happens in those in that co start but the open which guys have talked quite openly",
    "start": "3253550",
    "end": "3259040"
  },
  {
    "text": "about the different stages of co-star where is going to load up a container to run your code and then it's going to",
    "start": "3259040",
    "end": "3264800"
  },
  {
    "text": "download your code and then it's going to initialize the runtime so when you're using different languages there's a",
    "start": "3264800",
    "end": "3270590"
  },
  {
    "text": "massive impact on how much co-star you experience and I did a bunch of experiment earlier to find out how the",
    "start": "3270590",
    "end": "3278150"
  },
  {
    "text": "language they use as well as a memory setting you use affects your co-star time and that one is C sharp with",
    "start": "3278150",
    "end": "3285230"
  },
  {
    "text": "running tonic or 1.0 at a point and this is Java by comparison look how small no",
    "start": "3285230",
    "end": "3292370"
  },
  {
    "text": "js' and python is and that's one of the things that really maybe me being a tonal developer by trader and you",
    "start": "3292370",
    "end": "3298460"
  },
  {
    "text": "probably heard me know going on here flapping about a few how great is I still finger is my favorite language but",
    "start": "3298460",
    "end": "3304850"
  },
  {
    "text": "when you well human lambda there's a massive penalty you have to pay well not you but your customer have to pay in sense of the experience you",
    "start": "3304850",
    "end": "3311090"
  },
  {
    "text": "get from your application which is why when it comes to lambda I have really embraced the use of dynamic languages",
    "start": "3311090",
    "end": "3316640"
  },
  {
    "text": "are no js' a Python and again what about type safety well nowadays you",
    "start": "3316640",
    "end": "3321980"
  },
  {
    "text": "can use go so that give you some type safety not the same ones you get with c-sharp and the and I sure and you",
    "start": "3321980",
    "end": "3328220"
  },
  {
    "text": "probably heard me go around and DC conferences telling people you should use a shelter system to make invalid",
    "start": "3328220",
    "end": "3334460"
  },
  {
    "text": "state and represent Poe in your domain welcome to you yeah well I think the",
    "start": "3334460",
    "end": "3339740"
  },
  {
    "text": "thing I found is that with a traditional nodejs application you can make things really really count",
    "start": "3339740",
    "end": "3345440"
  },
  {
    "text": "really easily the complexity ceiling is enormous but when you have a really",
    "start": "3345440",
    "end": "3350480"
  },
  {
    "text": "constrained execution environment and you have to write your lambda functions and deployed an invoice more units the",
    "start": "3350480",
    "end": "3357380"
  },
  {
    "text": "tools that I really enjoy from our sharpness of note I transfer influence the different types I get I they are",
    "start": "3357380",
    "end": "3364580"
  },
  {
    "text": "there for me to help me manage complexity but when you can really constraint the complexity of the things",
    "start": "3364580",
    "end": "3371270"
  },
  {
    "text": "that your developers can develop we all can build I find that as you didn't miss all the things that love about F sharp",
    "start": "3371270",
    "end": "3377510"
  },
  {
    "text": "which to me is kind of painful to admit at the same time and with that finger",
    "start": "3377510",
    "end": "3383990"
  },
  {
    "text": "with them you have for about five minutes so I'm gonna skip to the end where I I thank you for your time and",
    "start": "3383990",
    "end": "3392210"
  },
  {
    "text": "also give you a shameless plug about cause that I've been working on remaining we have talked about basically",
    "start": "3392210",
    "end": "3397970"
  },
  {
    "text": "all the things I've mentioned so far including a bunch of other things around canary deployment and other things are",
    "start": "3397970",
    "end": "3403070"
  },
  {
    "text": "instant role to be production already running I ate up slam that introduction and whilst in the early access we for",
    "start": "3403070",
    "end": "3409670"
  },
  {
    "text": "many you can also get 40% off as well so shameless plug over now so time to ask questions fingers of my crowing life no",
    "start": "3409670",
    "end": "3420230"
  },
  {
    "text": "question just raise your hand oh is it too late five o'clock time to",
    "start": "3420230",
    "end": "3425720"
  },
  {
    "text": "go home one question just a quick",
    "start": "3425720",
    "end": "3434180"
  },
  {
    "text": "question that's fine so are you doing any warm-up for yourself to get around the cold start issue or I just accepting the hit",
    "start": "3434180",
    "end": "3441650"
  },
  {
    "text": "on the first good question so the question is do we do any warm-up for our",
    "start": "3441650",
    "end": "3447020"
  },
  {
    "text": "functions to get around the coastal issue the question the answer is sometimes",
    "start": "3447020",
    "end": "3452060"
  },
  {
    "text": "so for functions there are certain API endpoints that are seldom me exercised that means chances are every time",
    "start": "3452060",
    "end": "3458540"
  },
  {
    "text": "someone hit the endpoint they're gonna hit a co-star for those we do have like a ping function that paints them with a",
    "start": "3458540",
    "end": "3465230"
  },
  {
    "text": "special message so that a function itself knows what committed here for the function knows that okay this is a pain I shouldn't try to execute the normal",
    "start": "3465230",
    "end": "3472040"
  },
  {
    "text": "user flow which most likely gonna fail but for most other functions we even though we still do that for all the API",
    "start": "3472040",
    "end": "3479240"
  },
  {
    "text": "sorry API functions nor for Canisius or as an S and well now for those other ones we find is less effective because",
    "start": "3479240",
    "end": "3485570"
  },
  {
    "text": "when you have concurrent execution for the same function you have no easy way to find out how many concurrent",
    "start": "3485570",
    "end": "3491660"
  },
  {
    "text": "execution czar happening so when you trying to ping them you only get one of them at one time so the other four can",
    "start": "3491660",
    "end": "3498710"
  },
  {
    "text": "still gradually be going into co-starred and I'm with the lambda also got this thing where a garbage collects the",
    "start": "3498710",
    "end": "3503990"
  },
  {
    "text": "function type in either for a while and that hinder be away for five minutes or whatever so for PC functions that are",
    "start": "3503990",
    "end": "3510050"
  },
  {
    "text": "constantly spawning new concurrent executions you have really challenged a very good chance of actually hitting the",
    "start": "3510050",
    "end": "3515869"
  },
  {
    "text": "right one to keep them warm or to maybe don't need it the few cases where I think is reused for these for example if",
    "start": "3515869",
    "end": "3523369"
  },
  {
    "text": "you are doing a food ordering service like just eat where you know the peaks of the traffic where that happens",
    "start": "3523369",
    "end": "3529580"
  },
  {
    "text": "lunchtime dinner massive Peaks so if you let them happen as I said only would",
    "start": "3529580",
    "end": "3535040"
  },
  {
    "text": "that means all the concurrent execution that gets born doing that those peaks everyone the histones your API is gonna",
    "start": "3535040",
    "end": "3540710"
  },
  {
    "text": "hit the co-star but if you know when that's gonna happen you can easily sketch your crunchy of that happen so I",
    "start": "3540710",
    "end": "3545960"
  },
  {
    "text": "say five minutes or two means before the speak and just spam your your API so that you cause the lambda to call it a",
    "start": "3545960",
    "end": "3553160"
  },
  {
    "text": "Pik with the creoles the concurrency fusions so the part of the time the actual user requests a load comes in",
    "start": "3553160",
    "end": "3559400"
  },
  {
    "text": "those concurrency fusions out there so that that's how you can mitigate post out for those specific cases but if your",
    "start": "3559400",
    "end": "3566000"
  },
  {
    "text": "spot your spot and traffic are not predictable then there's very little you can intercept it to besides using using",
    "start": "3566000",
    "end": "3572900"
  },
  {
    "text": "node.js or Python or go where the cosine sub is actually very small and the really just optimize your function so",
    "start": "3572900",
    "end": "3579619"
  },
  {
    "text": "that they don't a have really they don't they do very little outside of the if",
    "start": "3579619",
    "end": "3585349"
  },
  {
    "text": "you have the handle the function code like no shipping logs and what no all of that wealth metrics and also just",
    "start": "3585349",
    "end": "3590930"
  },
  {
    "text": "optimizing the dependencies so that you don't use have to have so much dependencies especially for JVM and",
    "start": "3590930",
    "end": "3597470"
  },
  {
    "text": "c-sharp projects where the more dependencies you have even though even if you're not using on every single execution path they still takes all the",
    "start": "3597470",
    "end": "3604490"
  },
  {
    "text": "time to warm to warm up the your application with the virtual machine",
    "start": "3604490",
    "end": "3609820"
  },
  {
    "text": "very long answer to a simple question but it's not a simple as a question to be fair any more",
    "start": "3609820",
    "end": "3616359"
  },
  {
    "text": "questions okay follow-up the the correlation ID",
    "start": "3616359",
    "end": "3623319"
  },
  {
    "text": "probably described that's out looking a very tricky problem to solve how long did it take you to actually figure all",
    "start": "3623319",
    "end": "3628599"
  },
  {
    "text": "that stuff out and are Amazon doing anything to make that easier okay so the",
    "start": "3628599",
    "end": "3634329"
  },
  {
    "text": "question is correlation idea seems like a tricky problem to solve and how long did it take you guys to fix it and it's Amazon going to do it for you as far as",
    "start": "3634329",
    "end": "3641230"
  },
  {
    "text": "I know Amazon is not going to do anything for you to fix that particular problem because a lot of ways to do it for how do you collect what's",
    "start": "3641230",
    "end": "3646660"
  },
  {
    "text": "correlation IDs right should be moving them around one problem but also capturing them and making sure that it",
    "start": "3646660",
    "end": "3652000"
  },
  {
    "text": "going to all the other logs is something that you have the T as for shipping them around Amazon as far as I know is not",
    "start": "3652000",
    "end": "3658299"
  },
  {
    "text": "going to do anything there for you but I didn't take us very long to implement a system that we had in place for starters",
    "start": "3658299",
    "end": "3663670"
  },
  {
    "text": "actually implemented a similar system at the previous company companies so I kind of know what to expect because is",
    "start": "3663670",
    "end": "3670240"
  },
  {
    "text": "something that you even if you're not using lambda and using services in running your swing in ec2 but you use it",
    "start": "3670240",
    "end": "3676510"
  },
  {
    "text": "you're consuming SNS or consuming Canisius events you've got a same problem we have lambda it just has to",
    "start": "3676510",
    "end": "3681849"
  },
  {
    "text": "work out actually if lambda was easier in the sense because you don't have to worry about concurrency one thing comes",
    "start": "3681849",
    "end": "3688089"
  },
  {
    "text": "into your function one invocation there's no concurrency happening so you don't get multiple contexts coming in",
    "start": "3688089",
    "end": "3693430"
  },
  {
    "text": "apart form Kinesis when you got patching but that's something that you have to figure out how to do yourself we did it a certain way with some trade-offs but I",
    "start": "3693430",
    "end": "3700180"
  },
  {
    "text": "can't talk to you about the afterwards but for everything else it means for nodejs I can capture the incoming context",
    "start": "3700180",
    "end": "3706210"
  },
  {
    "text": "object context IDs relationality story and shove them into a global variable since I know there's Gordon gonna be one",
    "start": "3706210",
    "end": "3712960"
  },
  {
    "text": "execution I can just put in a stop into that global variable to my heart's content without having worry about",
    "start": "3712960",
    "end": "3718470"
  },
  {
    "text": "concurrency kick now you know getting wrong correlation ID between different executions but I didn't think us very",
    "start": "3718470",
    "end": "3726609"
  },
  {
    "text": "long a fingers like a week less than week for me to to put something in place",
    "start": "3726609",
    "end": "3732720"
  },
  {
    "text": "if there's no more questions then I guess the thank you very very much again for coming to this talk",
    "start": "3733349",
    "end": "3739250"
  },
  {
    "text": "[Applause]",
    "start": "3739250",
    "end": "3746849"
  }
]