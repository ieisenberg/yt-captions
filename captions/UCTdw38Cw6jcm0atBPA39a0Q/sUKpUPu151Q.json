[
  {
    "text": "hi everyone welcome to this session in the afternoon i hope you're enjoying yourself at the",
    "start": "8160",
    "end": "13360"
  },
  {
    "text": "conference it's awesome to see a packed room oh at least half of a room because the light is really bright when you're",
    "start": "13360",
    "end": "18560"
  },
  {
    "text": "up up on stage here but we're gonna talk about application security uh which is not really a surprise i think at ndc",
    "start": "18560",
    "end": "25039"
  },
  {
    "text": "security but we're gonna talk about why things are maybe a bit harder than they should be for developers and hopefully",
    "start": "25039",
    "end": "30720"
  },
  {
    "text": "we can learn some lessons along the way of how we as a community as a people of security champion security engineers or",
    "start": "30720",
    "end": "37600"
  },
  {
    "text": "just developers concerned about security can do a better job in building secure applications i know the title is not",
    "start": "37600",
    "end": "44160"
  },
  {
    "text": "that great like absec is too hard there's like a nuance with the question mark and the exclamation mark um when i",
    "start": "44160",
    "end": "50239"
  },
  {
    "text": "was building this talk i've been brewing on this for a while actually when when i was out for walks at home because what",
    "start": "50239",
    "end": "55680"
  },
  {
    "text": "else do you do when you're stuck at home and a more interesting title would have been that",
    "start": "55680",
    "end": "61199"
  },
  {
    "text": "the road to absec hell is paved with good intentions that's like a much more dramatic team and um maybe there goes",
    "start": "61199",
    "end": "67920"
  },
  {
    "text": "some like really heavy metal song good with that title and something like that and i like the",
    "start": "67920",
    "end": "74080"
  },
  {
    "text": "the drama of the title maybe but it doesn't really click and and once i finish the talk i",
    "start": "74080",
    "end": "80320"
  },
  {
    "text": "i realized that it doesn't really make sense to call this abstract hell where we're going because we're going to talk about",
    "start": "80320",
    "end": "86479"
  },
  {
    "text": "good intentions absolutely we're going to talk about how people engineers developers security people try",
    "start": "86479",
    "end": "92240"
  },
  {
    "text": "to do the right thing and eventually what they tried doesn't seem to work out that well but that's",
    "start": "92240",
    "end": "97920"
  },
  {
    "text": "not really apps like hell right abstract hell to me is is companies that don't even care about security they don't try",
    "start": "97920",
    "end": "103119"
  },
  {
    "text": "that don't give a crap about building secure software they're just like yeah whatever uh security is not important that would",
    "start": "103119",
    "end": "109280"
  },
  {
    "text": "be absec hell so the good intentions part sure that applies the the hell part not as much the picture was cool though",
    "start": "109280",
    "end": "116000"
  },
  {
    "text": "this is actually a real place on earth called the gate to hell um it's somewhere in turkmenistan if you know",
    "start": "116000",
    "end": "121680"
  },
  {
    "text": "where that is um and it's something that that's from the 70s you should look up the story it's",
    "start": "121680",
    "end": "126799"
  },
  {
    "text": "pretty insane they were drilling for gas there and something went wrong and somebody had the genius idea what to do",
    "start": "126799",
    "end": "131840"
  },
  {
    "text": "with gas is escaping like let's set it on fire that should solve it right and this thing has been burning since the",
    "start": "131840",
    "end": "137200"
  },
  {
    "text": "70s and it's it's really it's still burning today so it's kind of applicable to some abstract issues",
    "start": "137200",
    "end": "142959"
  },
  {
    "text": "even though things are getting better as jim covered in the keynote this morning all right before we dive into two",
    "start": "142959",
    "end": "148000"
  },
  {
    "text": "concrete topics let me tell you a word about myself i'm philippe dreck i'm from belgium and i run my own company called",
    "start": "148000",
    "end": "153840"
  },
  {
    "text": "pragmatic web security and every word in that sentence is important pragmatic web security as in i help developers come up",
    "start": "153840",
    "end": "160160"
  },
  {
    "text": "with pragmatic solutions based on what they want to achieve with the resources they have to build more secure software",
    "start": "160160",
    "end": "166640"
  },
  {
    "text": "and i do that through mainly training like developer training conference workshops i just completed a two-day",
    "start": "166640",
    "end": "171920"
  },
  {
    "text": "workshop on api security here um to in-house training and so on and so on",
    "start": "171920",
    "end": "177440"
  },
  {
    "text": "and that's essentially what i spend my time on usually on complex topics api security oh open id connect if steiner",
    "start": "177440",
    "end": "185200"
  },
  {
    "text": "stock from before lunch did not make any sense to you then maybe i can help you out understanding what oauth actually",
    "start": "185200",
    "end": "190879"
  },
  {
    "text": "does all right enough about me let's talk about json web tokens json web tokens or jots that",
    "start": "190879",
    "end": "198159"
  },
  {
    "text": "that's a good source for some well misery and pain usually but also some some really practical use",
    "start": "198159",
    "end": "204799"
  },
  {
    "text": "cases so what's the jot a jot is a way to represent claims securely that's a json web token so the thing on the",
    "start": "204799",
    "end": "211280"
  },
  {
    "text": "left actually this is the debugging tool jot.io the thing on the left is what we call a jot it's a three part string",
    "start": "211280",
    "end": "217200"
  },
  {
    "text": "header payload signature and it's base64 encoded well each part individually is",
    "start": "217200",
    "end": "222319"
  },
  {
    "text": "base64 encoded and we use that to represent a bunch of claims and that signature part the blue part at the",
    "start": "222319",
    "end": "228000"
  },
  {
    "text": "bottom is what we use to ensure that we can protect the integrity for example an oat access token is often a json web",
    "start": "228000",
    "end": "234400"
  },
  {
    "text": "token which means that the authorization server issues it signs it and whoever receives that token consumes that token",
    "start": "234400",
    "end": "240400"
  },
  {
    "text": "they can verify that signature to make sure that those claims haven't been changed that's the mechanism that we",
    "start": "240400",
    "end": "246239"
  },
  {
    "text": "want to use there and we often use that for authorization purposes so if you want to call an api with an out access",
    "start": "246239",
    "end": "251599"
  },
  {
    "text": "token that's going to be a json web token many people build custom solutions with json web tokens as well it's just a",
    "start": "251599",
    "end": "257759"
  },
  {
    "text": "way to represent that data the spec says like hey you can encode it like this you can use it like not use it you can do",
    "start": "257759",
    "end": "263680"
  },
  {
    "text": "these things with that and that's how we sign the chart and here's a bunch of different options all right that's the",
    "start": "263680",
    "end": "268880"
  },
  {
    "text": "context here as you can imagine something we use for authorization purposes very sensitive",
    "start": "268880",
    "end": "274479"
  },
  {
    "text": "purposes if something goes wrong there the consequences are kind of dire and that's exactly what happened with apache",
    "start": "274479",
    "end": "280160"
  },
  {
    "text": "pulsar somewhere last year if i'm not mistaken yes 2021. they had a vulnerability in their",
    "start": "280160",
    "end": "285840"
  },
  {
    "text": "application which allowed an attacker to craft an arbitrary jot which would then in turn allow them to take over any",
    "start": "285840",
    "end": "291440"
  },
  {
    "text": "account in the system and it's as simple as i can create if i'm the attacker i can create a job that says like oh yeah i am philippe and i'm",
    "start": "291440",
    "end": "298400"
  },
  {
    "text": "an admin and send it to the system and systems yeah good enough for me welcome admin and you can do whatever you want",
    "start": "298400",
    "end": "303600"
  },
  {
    "text": "that's essentially the gist of the vulnerability i mean when i read a story like that i'm always interested of course to use that",
    "start": "303600",
    "end": "309759"
  },
  {
    "text": "as a case in presentations or trainings and this is from the daily speak um a really good source for security news and",
    "start": "309759",
    "end": "315520"
  },
  {
    "text": "it's these articles are typically very detailed like a lot of details and context and so on so awesome read that",
    "start": "315520",
    "end": "321520"
  },
  {
    "text": "there's a link to a pull request a link to a pull request that says like here's the patch to fix this vulnerability oh",
    "start": "321520",
    "end": "327440"
  },
  {
    "text": "yeah awesome let's take a look at what went wrong here what's what was the vulnerability and here's the relevant",
    "start": "327440",
    "end": "332880"
  },
  {
    "text": "screenshot from that pull request the code in red is the bad one the one that's removed the vulnerable code and",
    "start": "332880",
    "end": "338560"
  },
  {
    "text": "the code in green on the right is the good one and we use this well we this is what was going on and i",
    "start": "338560",
    "end": "345360"
  },
  {
    "text": "looked at that and i was like hmm that's kind of weird i don't really see",
    "start": "345360",
    "end": "351199"
  },
  {
    "text": "much difference between the green and the red part yeah sure they're using different apis a bit but in the end they're they're both setting a signing",
    "start": "351199",
    "end": "357600"
  },
  {
    "text": "key and and they're they're brushing the job and taking the claims out and making some security decisions with that so",
    "start": "357600",
    "end": "362639"
  },
  {
    "text": "what's what's going on here that's kind of weird and i when something that's interesting",
    "start": "362639",
    "end": "367840"
  },
  {
    "text": "to me doesn't make sense i i need to dig deeper that's my phd background kicking in i'm like",
    "start": "367840",
    "end": "373520"
  },
  {
    "text": "what's going on and i i wrote a little code example um in java and i tried this out so i",
    "start": "373520",
    "end": "379039"
  },
  {
    "text": "built this parser builder set assigning key for our jobs build it and then autocompleted that parse function",
    "start": "379039",
    "end": "384960"
  },
  {
    "text": "you get six options and i'm like all right i'm very familiar with json",
    "start": "384960",
    "end": "391280"
  },
  {
    "text": "web tokens i'm kind of supposed to be the expert on that and i i looked at that and i'm like i have no idea which",
    "start": "391280",
    "end": "397120"
  },
  {
    "text": "one i should use well i kind of know because the first one is the bad one according to the pull request and the",
    "start": "397120",
    "end": "404000"
  },
  {
    "text": "third one is probably the good one but i'm like why what's what's the difference",
    "start": "404000",
    "end": "409840"
  },
  {
    "text": "so yeah that's interesting we actually used this example in the workshop yesterday and people was",
    "start": "409840",
    "end": "417120"
  },
  {
    "text": "like yeah we have no idea we have no idea what's going on so it's a java library this is a library in java to handle json web tokens it's provided",
    "start": "417120",
    "end": "424479"
  },
  {
    "text": "by an open source contributor and if it's java there's typically javadoc so let's look",
    "start": "424479",
    "end": "430160"
  },
  {
    "text": "up the documentation well i couldn't find any there's no javadoc whatever about this library that's like oh that's",
    "start": "430160",
    "end": "436720"
  },
  {
    "text": "well it's open source right so the mantra is you can read the code that's good enough so let's go to the code and",
    "start": "436720",
    "end": "442080"
  },
  {
    "text": "in the code there's actually documentation so it does exist it's just not rendered or hosted online so that's",
    "start": "442080",
    "end": "447360"
  },
  {
    "text": "that's already good so we can read the documentation in this documentation you don't have to read everything here but",
    "start": "447360",
    "end": "452639"
  },
  {
    "text": "this explains what this parse function is all about",
    "start": "452639",
    "end": "457840"
  },
  {
    "text": "and i read that and i was like oh and we used this in the workshop yesterday and i asked the whole room 28",
    "start": "458560",
    "end": "464560"
  },
  {
    "text": "people what's where does it say that this function is insecure and everybody's looking at that and like",
    "start": "464560",
    "end": "470160"
  },
  {
    "text": "five minutes later everyone's like we don't know so i kind of put them out of their misery because otherwise it would have",
    "start": "470160",
    "end": "475919"
  },
  {
    "text": "taken a while to find this but it never says anything about hey watch out this is really insecure if you use this for",
    "start": "475919",
    "end": "482319"
  },
  {
    "text": "verifying json web token so it doesn't there's a hint though if you scroll look at the middle there's this throws",
    "start": "482319",
    "end": "488720"
  },
  {
    "text": "signature exception that's the key part here and it says like if a signature is found and it's invalid we can throw a",
    "start": "488720",
    "end": "495599"
  },
  {
    "text": "signature exception like yeah that makes sense if the token if the signature doesn't match like yeah you should draw",
    "start": "495599",
    "end": "501199"
  },
  {
    "text": "that and the key word here is if a signature is found",
    "start": "501199",
    "end": "506479"
  },
  {
    "text": "which implies that if one is not found that it doesn't maybe check the signature at all and",
    "start": "506479",
    "end": "511599"
  },
  {
    "text": "just returns the claims like that is i mean that was obvious right go on",
    "start": "511599",
    "end": "518399"
  },
  {
    "text": "so as a developer i mean no way you can you can get that out of that and what does that mean what's the vulnerability",
    "start": "518399",
    "end": "524000"
  },
  {
    "text": "here well the vulnerability is that an attacker can craft a very special json web token where the algorithm the",
    "start": "524000",
    "end": "530399"
  },
  {
    "text": "signing algorithm is set to none which is a legal jot if you look at the spec it says like oh yeah if l is numb",
    "start": "530399",
    "end": "536800"
  },
  {
    "text": "that means it's a token without a signature so there's no integrity protection but yeah you can do that",
    "start": "536800",
    "end": "543440"
  },
  {
    "text": "so the attacker can craft a token like this set out to none include arbitrary claims in the payload purple part and",
    "start": "543440",
    "end": "549839"
  },
  {
    "text": "send it to apache pulsar an apache pulser is like oh i have a signing key i'm going to verify",
    "start": "549839",
    "end": "555680"
  },
  {
    "text": "the signature oh there's no signature oh in that case we're good here are the claims done validation web token and",
    "start": "555680",
    "end": "561839"
  },
  {
    "text": "that was your vulnerability the token with alchem looks like this you have the header that payload and then nothing",
    "start": "561839",
    "end": "566959"
  },
  {
    "text": "behind the dots and that's the vulnerability that was present in that system and that was the",
    "start": "566959",
    "end": "572320"
  },
  {
    "text": "mistake that happened by the developer of apache pulsar",
    "start": "572320",
    "end": "577839"
  },
  {
    "text": "but yeah it's it's probably a one-off right i mean one developer makes a mistake let's not create a big drama out",
    "start": "578000",
    "end": "583040"
  },
  {
    "text": "of that i mean come on everybody has a bad monday or wednesday or whatever well actually",
    "start": "583040",
    "end": "589040"
  },
  {
    "text": "this vulnerability is quite common you may have guessed that this is a really common problem in applications handling",
    "start": "589040",
    "end": "594720"
  },
  {
    "text": "json web tokens in fact attackers know about that pen testers know about that and it's so common that there's a plugin",
    "start": "594720",
    "end": "599920"
  },
  {
    "text": "for burp a very popular pen testing tool to handle json web tokens and that plugin has built-in support for the elk",
    "start": "599920",
    "end": "606320"
  },
  {
    "text": "non-attack as in they know that you can change the algorithm to num modify some claims and",
    "start": "606320",
    "end": "611360"
  },
  {
    "text": "send it back to the system and it will well if it's vulnerable it will accept that token without any issues",
    "start": "611360",
    "end": "617760"
  },
  {
    "text": "that's what this means in practice this vulnerability exists in other",
    "start": "617760",
    "end": "623760"
  },
  {
    "text": "places as well here's an example from a year earlier the out zero apis an identity provider kind of very sensitive",
    "start": "623760",
    "end": "629600"
  },
  {
    "text": "apis they handled alzera tokens on incoming api requests and this is maybe even worse because",
    "start": "629600",
    "end": "636240"
  },
  {
    "text": "they knew about this problem because their api code had a check if alk equals none reject the token",
    "start": "636240",
    "end": "643680"
  },
  {
    "text": "which is like okay that's maybe a bit of a solution could have done a bit more but the check",
    "start": "643680",
    "end": "650079"
  },
  {
    "text": "checked for elf none in lower case so when attacker was like oh but what if",
    "start": "650079",
    "end": "655600"
  },
  {
    "text": "i provide none with uppercase letters that doesn't match that string because it's a string equals not",
    "start": "655600",
    "end": "662320"
  },
  {
    "text": "a case insensitive check and they were able to bypass that restriction and exploit well it was a white hat hacker",
    "start": "662320",
    "end": "668320"
  },
  {
    "text": "so no exploitation just a report and they allowed that to be fixed in the api",
    "start": "668320",
    "end": "674160"
  },
  {
    "text": "json web talk it's always good for some fun some people when they came up with json web tokens",
    "start": "674160",
    "end": "679519"
  },
  {
    "text": "some people warned about like yeah this spec is not the most secure spec we think is a bad idea",
    "start": "679519",
    "end": "684560"
  },
  {
    "text": "and they went ahead with it anyway and those people have a grudge against jason webb tokens ever since maybe for good",
    "start": "684560",
    "end": "689920"
  },
  {
    "text": "reason but i'll leave that in the middle actually they hate jason webb token so much that one of them built a website",
    "start": "689920",
    "end": "695200"
  },
  {
    "text": "how many days since the elk since the jotalknonvone.com and they keep a counter of how long ago",
    "start": "695200",
    "end": "701680"
  },
  {
    "text": "a new vulnerability was announced and this is an old screenshot it's not a recent one there's another case on there",
    "start": "701680",
    "end": "707279"
  },
  {
    "text": "right now but it's an old screenshot to show you that this happens again and again because i'm pretty sure that the",
    "start": "707279",
    "end": "712720"
  },
  {
    "text": "uk nhs covet 19 contact racing app was not built as legacy code it's a new",
    "start": "712720",
    "end": "718399"
  },
  {
    "text": "application built from scratch in 2021 containing this exact vulnerability which we've been warning about since",
    "start": "718399",
    "end": "724399"
  },
  {
    "text": "2015 which kind of forces me to ask what the hell",
    "start": "724399",
    "end": "731680"
  },
  {
    "text": "are we doing here as a security community how is it",
    "start": "731680",
    "end": "736880"
  },
  {
    "text": "so hard for something like this to get fixed in practice seven years later we still have",
    "start": "736880",
    "end": "742480"
  },
  {
    "text": "this exact vulnerability and it's going to keep going on longer and longer let me let me give you a first take",
    "start": "742480",
    "end": "748639"
  },
  {
    "text": "right here the first takeaway i promised you some lessons so let's let's try to add them in between of the depressing",
    "start": "748639",
    "end": "753920"
  },
  {
    "text": "stories um in the lesson here is include common pitfalls in your test scenarios whenever",
    "start": "753920",
    "end": "759120"
  },
  {
    "text": "you learn about something weird or if you think of something weird yourself write that in one of your tests if you",
    "start": "759120",
    "end": "765040"
  },
  {
    "text": "have an application accepting jots i expect to see a whole battery of tests that give it invalid shots like algnon",
    "start": "765040",
    "end": "772000"
  },
  {
    "text": "invalid algorithms invalid signatures parsing errors whatever and you have to ensure that all of these get handled",
    "start": "772000",
    "end": "777600"
  },
  {
    "text": "gracefully not with the 200 okay but with some form of maybe i should not accept that json web",
    "start": "777600",
    "end": "784079"
  },
  {
    "text": "token that's a very important case here an elk noun should definitely be in your test suite so that you can be the one",
    "start": "784079",
    "end": "790000"
  },
  {
    "text": "catching that issue not an attacker trying to attack your application that's take away number one",
    "start": "790000",
    "end": "798920"
  },
  {
    "text": "all right the title of apsec is too hard",
    "start": "801440",
    "end": "807279"
  },
  {
    "text": "case in point but this is not the only problem it is in web tokens i wish it was that would be fairly straightforward",
    "start": "807279",
    "end": "813360"
  },
  {
    "text": "to fix but it takes a lot more to handle json web tokens securely so what does it take to do that",
    "start": "813360",
    "end": "820079"
  },
  {
    "text": "correctly well first of all you have to choose between a signature scheme because jots support something symmetric with a",
    "start": "820079",
    "end": "826320"
  },
  {
    "text": "shared secret called an hmac or they support a digital signature which one do you use well i'm kind of",
    "start": "826320",
    "end": "831839"
  },
  {
    "text": "giving you a hint here the green is the suggestion hmacs are very useless when it comes to jots especially in a",
    "start": "831839",
    "end": "837920"
  },
  {
    "text": "distributed scenario so you want to use digital signatures signed with the private key verified with the public key",
    "start": "837920",
    "end": "843199"
  },
  {
    "text": "awesome that wasn't too hard right so we can figure that out why not that one out",
    "start": "843199",
    "end": "849360"
  },
  {
    "text": "which signing algorithm do you use if you want to use digital signatures there's like a whole bunch of algorithms supported by the spec with very",
    "start": "849360",
    "end": "855839"
  },
  {
    "text": "meaningful names like rs256 and ps256 it's like oh yeah",
    "start": "855839",
    "end": "862560"
  },
  {
    "text": "i don't know well i do know ps256 is a good recommendation",
    "start": "862560",
    "end": "867920"
  },
  {
    "text": "why well there's a whole bunch of details behind it and it's a pragmatic trade-off between library support and",
    "start": "867920",
    "end": "874399"
  },
  {
    "text": "security and so on and so on and that one is a good trade-off as in it's widely supported it's very straightforward to use very easy to",
    "start": "874399",
    "end": "880800"
  },
  {
    "text": "implement and it's better than rs256 which is considered to be the standard or most commonly used",
    "start": "880800",
    "end": "887839"
  },
  {
    "text": "next steps well if you handle a jot you have to verify the signature correctly kind of important",
    "start": "887839",
    "end": "894160"
  },
  {
    "text": "you have to verify that the shot is valid and you do that by checking the signature not accepting an elk non token",
    "start": "894160",
    "end": "899519"
  },
  {
    "text": "that's something we talked about before and you have to check other things like a time stamp shots have time stamps",
    "start": "899519",
    "end": "905839"
  },
  {
    "text": "key claims are an nbf claim not before as in the job only becomes valid at this point in time and an exp it expires at",
    "start": "905839",
    "end": "913279"
  },
  {
    "text": "that point in time you have to verify that because you don't do not want to accept expired tokens or tokens that",
    "start": "913279",
    "end": "919120"
  },
  {
    "text": "aren't valid yet there's another bunch of reserved claims all three letter claims for",
    "start": "919120",
    "end": "925519"
  },
  {
    "text": "fun and pleasure there's the iss claim which is the issuer and the aud claim which is the audience you want to verify",
    "start": "925519",
    "end": "932160"
  },
  {
    "text": "both like is this not coming from someone i trust like do i want to accept tokens from this entity and is it",
    "start": "932160",
    "end": "938079"
  },
  {
    "text": "intended for me if i'm an api and the audience is like oh no send it to that guy then i shouldn't be accepting that json",
    "start": "938079",
    "end": "944560"
  },
  {
    "text": "web token so all of these things is what you have to do as a developer it's not because the slide is full that",
    "start": "944560",
    "end": "950639"
  },
  {
    "text": "it's the list is done there's actually more here next step we have to ensure that we support some form of key rotation",
    "start": "950639",
    "end": "957920"
  },
  {
    "text": "because we use a key to verify the signature on the job but that key can change at any point in time for security",
    "start": "957920",
    "end": "963600"
  },
  {
    "text": "reasons typically so we have to support that so that means you have to use a bunch of claims or an",
    "start": "963600",
    "end": "969279"
  },
  {
    "text": "out-of-band key discovery mechanism to get the right keys and to maybe able to update them when necessary all effort on",
    "start": "969279",
    "end": "976560"
  },
  {
    "text": "your end then there's a couple a couple of best practices that are more recent like you should have an explicit type in that",
    "start": "976560",
    "end": "983279"
  },
  {
    "text": "json web token as well like a token has a purpose let's include that purpose in the type claim in header so it's very",
    "start": "983279",
    "end": "989040"
  },
  {
    "text": "clear that what that's what the token is supposed to do that helps avoid token confusion attacks",
    "start": "989040",
    "end": "994720"
  },
  {
    "text": "in practice so all of this and a bunch more that i haven't talked",
    "start": "994720",
    "end": "999920"
  },
  {
    "text": "about here is what we ask from a developer my question to you is is that realistic",
    "start": "999920",
    "end": "1005360"
  },
  {
    "text": "is it realistic to ask all of this from a developer which has like 10 000 other things to do and has the same list of",
    "start": "1005360",
    "end": "1011600"
  },
  {
    "text": "requirements for other topics and for performance and accessibility and this and that and that i don't think it is",
    "start": "1011600",
    "end": "1017120"
  },
  {
    "text": "this is it requires a lot of expertise in json web tokens to be able to do this securely",
    "start": "1017120",
    "end": "1023120"
  },
  {
    "text": "and if you have to do that over and over again and every application where you handle shots that's not gonna work very well and",
    "start": "1023120",
    "end": "1029199"
  },
  {
    "text": "maybe you figured it out but your colleague hasn't and if you write it once and your colleague writes it once there's gonna be one vulnerable version",
    "start": "1029199",
    "end": "1035678"
  },
  {
    "text": "or maybe two who knows well i don't know but maybe it might be possible so what's",
    "start": "1035679",
    "end": "1040880"
  },
  {
    "text": "the recommendation here what's what am i going towards i'm going to recommend that you encapsulate behavior like this",
    "start": "1040880",
    "end": "1046558"
  },
  {
    "text": "there's no reasonable need for exposing all of these details to a developer if you're using this as",
    "start": "1046559",
    "end": "1053520"
  },
  {
    "text": "access tokens for apis why don't we verify this with a security library why don't we provide our developers as",
    "start": "1053520",
    "end": "1059280"
  },
  {
    "text": "security champions as a security team or as concerned co-developers why don't we provide",
    "start": "1059280",
    "end": "1065280"
  },
  {
    "text": "them or ourselves with a library that says here's how you handle that token you throw it in there and it will verify",
    "start": "1065280",
    "end": "1071039"
  },
  {
    "text": "all of these things for you without you having to worry about it any of the details and it will give you the claims or an exception",
    "start": "1071039",
    "end": "1077840"
  },
  {
    "text": "or whatever works in your language silent error is always good",
    "start": "1077840",
    "end": "1083520"
  },
  {
    "text": "but that way that's a takeaway here that way we encapsulate this security behavior",
    "start": "1083520",
    "end": "1088640"
  },
  {
    "text": "in libraries we absolve the developers of that responsibility of having to know all of these details having to make sure",
    "start": "1088640",
    "end": "1094480"
  },
  {
    "text": "that all of these details are correct and having to do it over and over again and that's a very very important pattern",
    "start": "1094480",
    "end": "1102720"
  },
  {
    "text": "that's the only way we're ever going to solve this thing otherwise there's always going to be someone who misunderstands which parts function to",
    "start": "1102720",
    "end": "1109200"
  },
  {
    "text": "use which is very easy to happen as you have seen and which can cause massive vulnerabilities in our applications",
    "start": "1109200",
    "end": "1117279"
  },
  {
    "text": "so the next step is we have a library how do we get developers to use that library well",
    "start": "1117840",
    "end": "1124320"
  },
  {
    "text": "that's a very good question so how do you scale this up how do you allow people across an organization to use that and the best reference i have for",
    "start": "1124320",
    "end": "1130640"
  },
  {
    "text": "that is this story from netflix it's an article from netflix on how they integrate security into their process",
    "start": "1130640",
    "end": "1137679"
  },
  {
    "text": "and it's actually a really interesting read it's a pretty long article but i recommend you take the 11 minutes that medium says it takes you to read that to",
    "start": "1137679",
    "end": "1144480"
  },
  {
    "text": "actually read that article and the gist of it is it goes like this netflix they when they did security the security team",
    "start": "1144480",
    "end": "1150480"
  },
  {
    "text": "had like this massive checklist for security like hundreds and hundreds of things a team was supposed to do to build a",
    "start": "1150480",
    "end": "1156880"
  },
  {
    "text": "secure application on netflix and they went to the teams and development teams and said like hey here's your security",
    "start": "1156880",
    "end": "1161919"
  },
  {
    "text": "checklist can you go through this please can you make sure that your application is secure and they said like oh yeah sure",
    "start": "1161919",
    "end": "1167600"
  },
  {
    "text": "let me find some time we'll do that and three months later the security team went back like",
    "start": "1167600",
    "end": "1172720"
  },
  {
    "text": "dear developers where's that security checklist if you don't like yeah we'll get to that we'll get to that give us some time well we don't have",
    "start": "1172720",
    "end": "1178960"
  },
  {
    "text": "time right now and it didn't work very well it was like a very painful process and resulted in a lot of issues in real",
    "start": "1178960",
    "end": "1184720"
  },
  {
    "text": "world applications so they they took a hard look at their approach and said like why are we bothering developers with having to do security",
    "start": "1184720",
    "end": "1191679"
  },
  {
    "text": "it doesn't really make any sense and they call this the paved road as in they want to make it as easy as possible",
    "start": "1191679",
    "end": "1197600"
  },
  {
    "text": "for development teams to do things securely and the way to do that the way to get it done is by helping them do",
    "start": "1197600",
    "end": "1202880"
  },
  {
    "text": "their regular jobs plus security and what they did is they built a tool that bootstraps a new",
    "start": "1202880",
    "end": "1208480"
  },
  {
    "text": "project within within the netflix ecosystem with a few commands so instead of spending half a day of setting up",
    "start": "1208480",
    "end": "1214000"
  },
  {
    "text": "repos and dns and this and that and that they just said like okay here's the command you run this and we",
    "start": "1214000",
    "end": "1220159"
  },
  {
    "text": "will do that all for you we'll create a dns record so we will set up the properties we will provide you a code skeleton that integrates with single",
    "start": "1220159",
    "end": "1226320"
  },
  {
    "text": "sign-on and all of this stuff and it does all a whole bunch of security things under the hood sets",
    "start": "1226320",
    "end": "1231360"
  },
  {
    "text": "everything up and developers basically went from half a day setup to 10 minutes",
    "start": "1231360",
    "end": "1237360"
  },
  {
    "text": "and they didn't even have to go to the security checklist because that was integrated from the beginning in that whole process and that made everybody's",
    "start": "1237360",
    "end": "1243520"
  },
  {
    "text": "lives easier and all of a sudden security adoption was very straightforward and very easy to follow",
    "start": "1243520",
    "end": "1248880"
  },
  {
    "text": "up on and that's a good way to make this happen in your company as well help developers do their job in a better and",
    "start": "1248880",
    "end": "1255840"
  },
  {
    "text": "more straightforward way by including security as well if you tell them like hey man all that",
    "start": "1255840",
    "end": "1261280"
  },
  {
    "text": "job stuff you can forget about that just use this library they're probably going to be like oh thank you awesome",
    "start": "1261280",
    "end": "1267120"
  },
  {
    "text": "damn done that's how it works and you can reuse that library across applications as well",
    "start": "1267120",
    "end": "1273120"
  },
  {
    "text": "like if you have 15 applications that all handle that same type of access token coming from that same authorization server guess what the same",
    "start": "1273120",
    "end": "1279520"
  },
  {
    "text": "library can handle that for all 15 applications that's a huge gain that you have there",
    "start": "1279520",
    "end": "1284640"
  },
  {
    "text": "and there's a secondary benefit here as well because you encapsulate this behavior",
    "start": "1284640",
    "end": "1289919"
  },
  {
    "text": "your system becomes more flexible you're able to change your system when you want to change it want to change the",
    "start": "1289919",
    "end": "1295440"
  },
  {
    "text": "signature scheme on a jot or the algorithm sure update the part where you issue it and",
    "start": "1295440",
    "end": "1300799"
  },
  {
    "text": "the part where you verify it in that shared library and you're done you want to change the token format you",
    "start": "1300799",
    "end": "1306320"
  },
  {
    "text": "can do that because you have encapsulated that extracted them away extracted it out of the application and",
    "start": "1306320",
    "end": "1311520"
  },
  {
    "text": "put that in an encapsulated library making your system more flexible and this reminded me creating this slide",
    "start": "1311520",
    "end": "1317280"
  },
  {
    "text": "reminded me of my software engineering classes at university where you you learn these patterns it's like yeah",
    "start": "1317280",
    "end": "1323120"
  },
  {
    "text": "encapsulation and abstraction are important and as a student you're like okay if you say so",
    "start": "1323120",
    "end": "1328960"
  },
  {
    "text": "and then afterwards you see this in practice and you're like oh yeah this actually makes a lot of sense now i can change this whenever i need and nobody",
    "start": "1328960",
    "end": "1335120"
  },
  {
    "text": "else has to worry about that and it doesn't break any part of the application so yeah a whole bunch of lessons we can",
    "start": "1335120",
    "end": "1342320"
  },
  {
    "text": "learn about appsec",
    "start": "1342320",
    "end": "1346360"
  },
  {
    "text": "enough about json web tokens that's that's where we're going to wrap it up let's talk about reacts",
    "start": "1348480",
    "end": "1355679"
  },
  {
    "text": "react frontline applications completely different topic no api security no authorization tokens no we're building",
    "start": "1356159",
    "end": "1362159"
  },
  {
    "text": "front ends now in a browser which is always again good fun especially because of problems like cross-site scripting so",
    "start": "1362159",
    "end": "1369600"
  },
  {
    "text": "what's cross-site scripting here's an example of a very simple react application",
    "start": "1369600",
    "end": "1374960"
  },
  {
    "text": "purely for demonstration purposes and we have a bit of an html template where we add some data from provided by a user",
    "start": "1374960",
    "end": "1381039"
  },
  {
    "text": "this is a restaurant review application or at least a small part of it where we have a review with a title and the",
    "start": "1381039",
    "end": "1387039"
  },
  {
    "text": "contents of that review and if one of your users provides us a review the user can be a tad malicious",
    "start": "1387039",
    "end": "1392960"
  },
  {
    "text": "and they can provide us a review that contains evil code and in the example you see here we have some html embedded in the review and the",
    "start": "1392960",
    "end": "1399679"
  },
  {
    "text": "red part is a dangerous part it's an image source none which means the image the browser will see that image tag try",
    "start": "1399679",
    "end": "1405600"
  },
  {
    "text": "to load it doesn't find image none png gives an error and instead it executes",
    "start": "1405600",
    "end": "1410640"
  },
  {
    "text": "that on error event handler which is an alert which is very non-dangerous but if that code",
    "start": "1410640",
    "end": "1416880"
  },
  {
    "text": "executes if the alert should pop up by accident or by mistake that's a vulnerability then the attacker can do",
    "start": "1416880",
    "end": "1423200"
  },
  {
    "text": "anything else as well the moment the attacker can execute javascript code your application is compromised because",
    "start": "1423200",
    "end": "1429679"
  },
  {
    "text": "that means that i as a malicious user can upload that review into the system and every one of you looking for",
    "start": "1429679",
    "end": "1434720"
  },
  {
    "text": "restaurants in oslo tonight will get that review and that code executes in your browser so i provide",
    "start": "1434720",
    "end": "1440640"
  },
  {
    "text": "the code submit it and it executes in all your browsers when you visit the application and that",
    "start": "1440640",
    "end": "1447200"
  },
  {
    "text": "gives me control over your application i can now start creating reviews in your name uh change the looks of the",
    "start": "1447200",
    "end": "1452320"
  },
  {
    "text": "application steal your passwords and so on and so on pretty dangerous and basically means game over for the",
    "start": "1452320",
    "end": "1457919"
  },
  {
    "text": "front-end application so what happens if we put this into that template using react well",
    "start": "1457919",
    "end": "1465600"
  },
  {
    "text": "it looks like this awesome there's no code execution that's good",
    "start": "1465600",
    "end": "1472159"
  },
  {
    "text": "that's because react is protecting you by default so react is not stupid here react knows exactly what you're doing",
    "start": "1472159",
    "end": "1478320"
  },
  {
    "text": "when you write code as you see at the top react is like oh you're going to put data in an html page that you know",
    "start": "1478320",
    "end": "1484080"
  },
  {
    "text": "that's dangerous right that results in cross-site scripting so i'm going to escape these characters i'm going to",
    "start": "1484080",
    "end": "1490080"
  },
  {
    "text": "translate the open tag for an html element into the ampersand lt semicolon which is the representation of that",
    "start": "1490080",
    "end": "1496480"
  },
  {
    "text": "character so the browser doesn't see that as code and react does that by default for all these data bindings",
    "start": "1496480",
    "end": "1503120"
  },
  {
    "text": "awesome and if the react developers are like yes i chose the right framework the other ones do that as well angular does it and",
    "start": "1503120",
    "end": "1509360"
  },
  {
    "text": "amber does it and vue does it and all the decent frameworks do that by default that's",
    "start": "1509360",
    "end": "1514799"
  },
  {
    "text": "standard behavior they understand these templates and they know how to secure that by default awesome",
    "start": "1514799",
    "end": "1520559"
  },
  {
    "text": "good finally secure by default we're getting there and then",
    "start": "1520559",
    "end": "1526320"
  },
  {
    "text": "you end up in the use case where you want to render pretty content you want the user to allow something",
    "start": "1526320",
    "end": "1532240"
  },
  {
    "text": "like ck editor data so they enter some rich text format in an editor and behind the scenes it's going to submit html to",
    "start": "1532240",
    "end": "1539039"
  },
  {
    "text": "your server or your api and you want to render that html in the browser well if you want to render this with",
    "start": "1539039",
    "end": "1544960"
  },
  {
    "text": "react and you use the curly braces it's going to encode all of these characters it's going to look like crap it's really",
    "start": "1544960",
    "end": "1550320"
  },
  {
    "text": "your users users users are not going to be very happy and neither will you and your boss won't",
    "start": "1550320",
    "end": "1555919"
  },
  {
    "text": "be very happy and so on and so on so how do you render this as html well rendering untrusted data as html that's",
    "start": "1555919",
    "end": "1562480"
  },
  {
    "text": "dangerous that's dom-based process scripting which hasn't been introduced like a long",
    "start": "1562480",
    "end": "1567600"
  },
  {
    "text": "time ago as jim covered in his keynote this morning so how do you do that in react how do you output this and react",
    "start": "1567600",
    "end": "1573440"
  },
  {
    "text": "well there's a property you can use for that called dangerously set in html",
    "start": "1573440",
    "end": "1580158"
  },
  {
    "text": "how do you use that one well you can kind of guess you called dangerously set in html you provided an",
    "start": "1582240",
    "end": "1588400"
  },
  {
    "text": "object and in that object you provide underscore underscore html as a property with the review data and if you have the",
    "start": "1588400",
    "end": "1594159"
  },
  {
    "text": "data at the bottom and the code on top and you insert this you see this rendered html you can see that i'm a",
    "start": "1594159",
    "end": "1600240"
  },
  {
    "text": "very skilled designer as well by the way and you get the alert",
    "start": "1600240",
    "end": "1606000"
  },
  {
    "text": "you have a massive vulnerability in your application yeah of course i mean it says dangerously set in html what did",
    "start": "1606000",
    "end": "1612159"
  },
  {
    "text": "you expect that was going to be safe no of course not this is dangerous for a reason and reacts as like okay in html",
    "start": "1612159",
    "end": "1619360"
  },
  {
    "text": "is dangerous so you know what we're going to make you very aware of that by marking this as dangerous",
    "start": "1619360",
    "end": "1625200"
  },
  {
    "text": "so don't use it the wrong way because that's dangerous you're supposed to sanitize that review",
    "start": "1625200",
    "end": "1631279"
  },
  {
    "text": "what you're supposed to do is you're supposed to call a sanitizer dump urify is your sanitizer of choice that's a",
    "start": "1631279",
    "end": "1637039"
  },
  {
    "text": "solid library working in javascript applications so you call down purify you tell it like i have a piece of dirty",
    "start": "1637039",
    "end": "1643200"
  },
  {
    "text": "html that review i want you to make it safe to include in the page and down purify is going to parse that",
    "start": "1643200",
    "end": "1649360"
  },
  {
    "text": "html it's going to walk the tree and keeps everything that it knows to save it as a list of safe elements and attributes and everything that it",
    "start": "1649360",
    "end": "1655679"
  },
  {
    "text": "doesn't know like an on error it's like blah on error out and what you end up with is safe html",
    "start": "1655679",
    "end": "1662159"
  },
  {
    "text": "that you can include in the page and that's what you're supposed to do when you want to output stuff into the page",
    "start": "1662159",
    "end": "1667919"
  },
  {
    "text": "you put this into the page you get that the bold tag is there the image tag is there the link is there except the on",
    "start": "1667919",
    "end": "1674880"
  },
  {
    "text": "error part that is gone so the code execution vulnerability has disappeared this is the correct way of outputting",
    "start": "1674880",
    "end": "1680559"
  },
  {
    "text": "html in react applications all right",
    "start": "1680559",
    "end": "1687039"
  },
  {
    "text": "so what's the takeaway here what do we gain by doing that well by doing this we basically prevent",
    "start": "1687039",
    "end": "1693120"
  },
  {
    "text": "accidental misuse of a very very dangerous feature that's what this is all about",
    "start": "1693120",
    "end": "1698640"
  },
  {
    "text": "why well for two reasons",
    "start": "1698640",
    "end": "1703840"
  },
  {
    "text": "the less common reason is autocomplete and ides if you just autocomplete stuff and you drop it in there then you may",
    "start": "1703840",
    "end": "1709919"
  },
  {
    "text": "have no idea what you're doing so if you also complete something that's called dangerously set an instrument in your html that should trigger a bell that's",
    "start": "1709919",
    "end": "1716480"
  },
  {
    "text": "reason number one more common is because if you copy basis from stack overflow",
    "start": "1716480",
    "end": "1721520"
  },
  {
    "text": "and it doesn't say dangerous and you have no idea what you're doing which is primary reason that to make this",
    "start": "1721520",
    "end": "1727440"
  },
  {
    "text": "property called dangerously set in html so if you paste this and you look at it and you're like",
    "start": "1727440",
    "end": "1732960"
  },
  {
    "text": "i should probably look into that that's essentially what we're doing here",
    "start": "1732960",
    "end": "1738880"
  },
  {
    "text": "all right awesome so does does that wrap up react security well unfortunately not so",
    "start": "1738880",
    "end": "1746480"
  },
  {
    "text": "i've been teaching this for a while now i've been teaching this for a couple of years and the more i teach this the less convinced",
    "start": "1746480",
    "end": "1752559"
  },
  {
    "text": "i become that this is actually a good way of doing things and that's that's why i want to talk about this in a bit",
    "start": "1752559",
    "end": "1757679"
  },
  {
    "text": "more depth because what we're doing here is we're basically warning developers like hey watch out this is dangerous",
    "start": "1757679",
    "end": "1763200"
  },
  {
    "text": "like watch out there's a cliff here if you fall down you probably die and they were like yeah go ahead anyway",
    "start": "1763200",
    "end": "1769120"
  },
  {
    "text": "we warned you so if you fall it's your own problem and that's that's about it we don't really care about what happens",
    "start": "1769120",
    "end": "1774480"
  },
  {
    "text": "after that and what turns what happens in practice is that this works as intended i mean if you slip on that",
    "start": "1774480",
    "end": "1780799"
  },
  {
    "text": "trail you will die and if you make a mistake in your recta react",
    "start": "1780799",
    "end": "1786720"
  },
  {
    "text": "application you create an intentional cross-site scripting vulnerability",
    "start": "1786720",
    "end": "1792799"
  },
  {
    "text": "so that process kind of strikes me as wrong and if you put yourself in the",
    "start": "1792799",
    "end": "1798399"
  },
  {
    "text": "perspective of a developer you find that dangerously set international property somewhere and you're you're",
    "start": "1798399",
    "end": "1803760"
  },
  {
    "text": "trying to do a good job i honestly believe that most developers want to build secure applications so what do you do",
    "start": "1803760",
    "end": "1809919"
  },
  {
    "text": "you look up what that means right why is this called dangerous what should i do instead and you're going to find",
    "start": "1809919",
    "end": "1816159"
  },
  {
    "text": "your react documentation the official docs and the official docs are going to say like dangerously set in html yeah",
    "start": "1816159",
    "end": "1822399"
  },
  {
    "text": "you have to watch out because this can cause cross cross scripting attacks and then the second sentence is so to",
    "start": "1822399",
    "end": "1829360"
  },
  {
    "text": "set it anyway you have to pass this object like this so we can remind you that it's dangerous it literally says in the last line to",
    "start": "1829360",
    "end": "1836000"
  },
  {
    "text": "remind yourself that this is dangerous and this screenshot is the entire documentation on this property",
    "start": "1836000",
    "end": "1841679"
  },
  {
    "text": "that's it so we're basically expecting developers to understand what this means",
    "start": "1841679",
    "end": "1848880"
  },
  {
    "text": "i can promise you if you've never heard of crosstalk scripting this thing means nothing to you it's like okay then",
    "start": "1848880",
    "end": "1854399"
  },
  {
    "text": "you have to look up how to fix it correctly as a developer you have to trust that the developer finds the right source",
    "start": "1854399",
    "end": "1860399"
  },
  {
    "text": "because there's no solution here there's just a wrong example then you have to trust that they use",
    "start": "1860399",
    "end": "1866799"
  },
  {
    "text": "that approach in the right way and that they apply it correctly in their application on every single use of",
    "start": "1866799",
    "end": "1871919"
  },
  {
    "text": "dangerously set in their html that's kind of the thoughts and prayers equivalent of application security right",
    "start": "1871919",
    "end": "1877679"
  },
  {
    "text": "it's like hoping that things work out and in practice it doesn't",
    "start": "1877679",
    "end": "1883600"
  },
  {
    "text": "here's an example from signal messenger one of the most secure messaging apps in in the landscape of messengers and their",
    "start": "1883600",
    "end": "1890799"
  },
  {
    "text": "desktop application was built in react react in electron and",
    "start": "1890799",
    "end": "1896000"
  },
  {
    "text": "you can see again it's a very nice pull request to give pull requests are awesome for screenshots and on the left",
    "start": "1896000",
    "end": "1901039"
  },
  {
    "text": "you can see the bad code example dangerously set in html like whoopsie and on the right they have",
    "start": "1901039",
    "end": "1907360"
  },
  {
    "text": "transformed that in a secure way of rendering that and the case in point here is that it's",
    "start": "1907360",
    "end": "1913679"
  },
  {
    "text": "good to mark something dangerous but it's not enough it doesn't stop abuse of that feature stop accidental",
    "start": "1913679",
    "end": "1921200"
  },
  {
    "text": "misuse of that feature it just helps a little bit to inform people that have no idea what",
    "start": "1921200",
    "end": "1926720"
  },
  {
    "text": "it does that this might be somewhat dangerous it doesn't magically enable developers",
    "start": "1926720",
    "end": "1932399"
  },
  {
    "text": "to use that feature securely and at last",
    "start": "1932399",
    "end": "1938480"
  },
  {
    "text": "second to last word is kind of important here feature",
    "start": "1938480",
    "end": "1943759"
  },
  {
    "text": "the use of dangerously set inner html is a feature which means if you want to output html",
    "start": "1944960",
    "end": "1951360"
  },
  {
    "text": "in react applications there is no well i'm not going to tell you the other ways because they're even worse but there's",
    "start": "1951360",
    "end": "1957039"
  },
  {
    "text": "no by design way to output html except for using dangerously set in your html",
    "start": "1957039",
    "end": "1963360"
  },
  {
    "text": "so if you're building an application and you want to render html even if you want to get it right even if you want to make",
    "start": "1963360",
    "end": "1968960"
  },
  {
    "text": "it secure you still have to use dangerously set in html what does that mean in practice in",
    "start": "1968960",
    "end": "1974480"
  },
  {
    "text": "practice it means your code base is going to be littered with calls to a dangerous api there's going to be dozens of places",
    "start": "1974480",
    "end": "1980880"
  },
  {
    "text": "with dangerously set enriched amount in your code base and that's a very very bad idea",
    "start": "1980880",
    "end": "1987679"
  },
  {
    "text": "because it stops you from doing a bunch of other things for security let's say that you're a responsible",
    "start": "1987679",
    "end": "1993760"
  },
  {
    "text": "developer like okay we're going to build more secure react apps so we're going to start scanning our react apps for bad",
    "start": "1993760",
    "end": "1999200"
  },
  {
    "text": "code you can use a tool like semgrep or a linting tool there's linting rules for this as well and samgrap is going to run",
    "start": "1999200",
    "end": "2006000"
  },
  {
    "text": "a react rule base just like this and if it does it's going to come back and says like",
    "start": "2006000",
    "end": "2011679"
  },
  {
    "text": "i found a potential issue now semigraph is not the smartest tool it's very fast and efficient but not very smart so it",
    "start": "2011679",
    "end": "2018159"
  },
  {
    "text": "just looks for dangerous api calls dangerous patterns but it doesn't know if this is actually dangerous or not",
    "start": "2018159",
    "end": "2023840"
  },
  {
    "text": "it's not a full-on static analysis tool it's just a pattern matching tool basically hence sam grep",
    "start": "2023840",
    "end": "2031120"
  },
  {
    "text": "it finds on line 62 dangerously set in html so it's like",
    "start": "2031120",
    "end": "2036480"
  },
  {
    "text": "i know that that is dangerous because i copy pasted the warning from the react documentation uh to be honest here um",
    "start": "2036480",
    "end": "2043120"
  },
  {
    "text": "but it says like yeah you have to watch out because if you misuse this feature you have across that scripting vulnerability and now as a developer you",
    "start": "2043120",
    "end": "2049280"
  },
  {
    "text": "can look at this and be like uh-huh but i'm using dom purify like philippe said so this is safe right",
    "start": "2049280",
    "end": "2056240"
  },
  {
    "text": "yes it is this is safe good the bottom line kind of shows that",
    "start": "2056240",
    "end": "2061599"
  },
  {
    "text": "this is a demo app three files in a react app that means nothing and one finding is also nothing in reality it's",
    "start": "2061599",
    "end": "2067280"
  },
  {
    "text": "going to be 45 files and 10 findings or 4 500 files and god knows how many",
    "start": "2067280",
    "end": "2072800"
  },
  {
    "text": "findings more like it yes thank you",
    "start": "2072800",
    "end": "2078158"
  },
  {
    "text": "what do you do then like oh there's a hundred findings okay good i'm gonna scroll through every one of them to see if all of them are safe you can do that",
    "start": "2078159",
    "end": "2084960"
  },
  {
    "text": "once are you gonna do that again next week probably not so this basically means by littering",
    "start": "2084960",
    "end": "2090878"
  },
  {
    "text": "your code base which is dangerously set in html you lose the ability to scan for",
    "start": "2090879",
    "end": "2096240"
  },
  {
    "text": "misuses of that api because these tools are not built for that purpose linting rules wouldn't be better by the",
    "start": "2096240",
    "end": "2102320"
  },
  {
    "text": "way and static analysis tools don't support react very well and that leaves us with",
    "start": "2102320",
    "end": "2108240"
  },
  {
    "text": "unhygienic code it leaves us with code full of dangerous patterns that might may or may not be safe depending on how",
    "start": "2108240",
    "end": "2114240"
  },
  {
    "text": "you use them and that's not very good this pattern is a really bad anti-pattern",
    "start": "2114240",
    "end": "2120320"
  },
  {
    "text": "what can we do better well what if we would provide proper semantics what if we would be able to explain",
    "start": "2120320",
    "end": "2126240"
  },
  {
    "text": "in code that this is actually safe by using something like this save html what do you want to create oh",
    "start": "2126240",
    "end": "2132480"
  },
  {
    "text": "a paragraph and this should be the content of that element if you look at the code at the bottom this is clear to you what that does even",
    "start": "2132480",
    "end": "2139760"
  },
  {
    "text": "if you have never heard of any react code you mean like save html like oh yeah this is probably good",
    "start": "2139760",
    "end": "2145839"
  },
  {
    "text": "this is a clean way of doing that and that component is not very complicated i mean the code on top is how you use it",
    "start": "2145839",
    "end": "2151920"
  },
  {
    "text": "and then at the bottom there's the react component actually does that and what does it do it creates an element and sets the inner",
    "start": "2151920",
    "end": "2159119"
  },
  {
    "text": "html using dangerously set inner html and don't purify the proper way of doing that",
    "start": "2159119",
    "end": "2165920"
  },
  {
    "text": "and your code is a lot cleaner on top and it looks a lot better semantically",
    "start": "2166079",
    "end": "2172400"
  },
  {
    "text": "correct and that brings us back to this one we covered this before",
    "start": "2172400",
    "end": "2177440"
  },
  {
    "text": "encapsulate security behavior in libraries to make developers life easier instead of teaching developers like use",
    "start": "2177440",
    "end": "2183599"
  },
  {
    "text": "dump urify everywhere hopefully the right way we can now teach them like hey just use that safe html component that",
    "start": "2183599",
    "end": "2190320"
  },
  {
    "text": "we're using in our organization and you're covered we'll take care of that for you want to output html save html",
    "start": "2190320",
    "end": "2196160"
  },
  {
    "text": "want to output html with some specific styling save html with styling done",
    "start": "2196160",
    "end": "2201839"
  },
  {
    "text": "easy straightforward and you get something in addition to that",
    "start": "2201839",
    "end": "2207760"
  },
  {
    "text": "because of encapsulating that behavior we now get the ability again to scan our application because if we run",
    "start": "2207760",
    "end": "2214160"
  },
  {
    "text": "semgrep instead of 10 findings we have one finding look at where it is in the save html.js",
    "start": "2214160",
    "end": "2220720"
  },
  {
    "text": "component on line 6 because that's the only place where we ever use dangerously set in your html",
    "start": "2220720",
    "end": "2227200"
  },
  {
    "text": "and you can get rid of that warning by going to that component and marking that one as please ignore this",
    "start": "2227200",
    "end": "2233440"
  },
  {
    "text": "that's the only way you can do that by the way never do that for crappy code only do it for code you have manually",
    "start": "2233440",
    "end": "2239359"
  },
  {
    "text": "verified that it's secure that you're 100 sure then you can tell semgrep let's just keep this between us",
    "start": "2239359",
    "end": "2245520"
  },
  {
    "text": "you don't have to report about that that's that's our little secret and when you do that",
    "start": "2245520",
    "end": "2251440"
  },
  {
    "text": "you get zero findings awesome an empty list of stuff to do that's",
    "start": "2251440",
    "end": "2256720"
  },
  {
    "text": "everybody likes that right it's been a long time since i got there but",
    "start": "2256720",
    "end": "2262160"
  },
  {
    "text": "but it's not the empty list that matters what matters is you can set up the scanning tool on your code base",
    "start": "2262160",
    "end": "2269359"
  },
  {
    "text": "and it's not going to find anything until you hire an intern next month and the intern writes their first react",
    "start": "2269359",
    "end": "2275440"
  },
  {
    "text": "feature and they find some crap code example somewhere on the internet dangerously set in html blah blah bam",
    "start": "2275440",
    "end": "2282320"
  },
  {
    "text": "you run your semgrap tool in your build pipeline in your commits in your commit hook in github and some",
    "start": "2282320",
    "end": "2289440"
  },
  {
    "text": "girls will be like hold on no no one findings or five depends on what they're writing",
    "start": "2289440",
    "end": "2295839"
  },
  {
    "text": "we don't do that this is a dangerous api call and you can customize the message even and say like hey in this organization we use a safe html",
    "start": "2295839",
    "end": "2302400"
  },
  {
    "text": "component which will handle this for you and that's the way we do things you gain the ability again to scan your",
    "start": "2302400",
    "end": "2308160"
  },
  {
    "text": "code base for potentially dangerous patterns allowing you to catch them the moment they're introduced and stop them",
    "start": "2308160",
    "end": "2314000"
  },
  {
    "text": "from ever existing in your production application that's a really really important takeaway",
    "start": "2314000",
    "end": "2321680"
  },
  {
    "text": "we're basically using code hygiene for security success which is like the most catchy takeaway ever right",
    "start": "2321680",
    "end": "2328000"
  },
  {
    "text": "but this this really helps because we encapsulate dangerous behavior we hide it away we avoid",
    "start": "2328000",
    "end": "2333839"
  },
  {
    "text": "littering our code base with potentially insecure patterns so that we can actually catch the true insecure patterns when they are",
    "start": "2333839",
    "end": "2339920"
  },
  {
    "text": "introduced so they can't hide in the noise anymore and applying this to other security concepts i could keep",
    "start": "2339920",
    "end": "2346800"
  },
  {
    "text": "going but i'm not going to do that apply this to other security concepts that's essentially the only way we're ever going to scale security across large",
    "start": "2346800",
    "end": "2354400"
  },
  {
    "text": "applications and organizations because no tool will ever be able to deal with all of these things automatically",
    "start": "2354400",
    "end": "2360480"
  },
  {
    "text": "but by helping tools by encapsulating this behavior we can easily help tools gain more control",
    "start": "2360480",
    "end": "2366480"
  },
  {
    "text": "help tools and essentially win at scale for application security",
    "start": "2366480",
    "end": "2373200"
  },
  {
    "text": "so is application security too hard well yeah i kind of think it is",
    "start": "2375359",
    "end": "2381599"
  },
  {
    "text": "we can't expect developers to figure all of this out because it's not just this one thing it's all of these other things",
    "start": "2381599",
    "end": "2388800"
  },
  {
    "text": "and developers don't have the time to learn or to follow like three days of security courses to figure out how to",
    "start": "2388800",
    "end": "2394400"
  },
  {
    "text": "put value safely in react well some of them do because i have them in my classes luckily",
    "start": "2394400",
    "end": "2400320"
  },
  {
    "text": "that's not that's never going to work very well and if you follow the workshop at the",
    "start": "2400320",
    "end": "2405359"
  },
  {
    "text": "conference here you know that at the end of the workshop you have like a whole ton of things to look at like oh yeah just keep this in mind keep that in mind",
    "start": "2405359",
    "end": "2411920"
  },
  {
    "text": "and that's never going to work because it's only going to grow and grow and grow so we have to do something else",
    "start": "2411920",
    "end": "2417839"
  },
  {
    "text": "we've been doing this for 25 30 years and it doesn't work it no longer scales at all there's too",
    "start": "2417839",
    "end": "2424319"
  },
  {
    "text": "many guidelines too many details too many nuances that we have to take away from",
    "start": "2424319",
    "end": "2430079"
  },
  {
    "text": "developers the question part the answer to that question is",
    "start": "2430079",
    "end": "2437200"
  },
  {
    "text": "it doesn't have to be yes appstack is hard fortunately jim gave a keynote this",
    "start": "2437200",
    "end": "2442400"
  },
  {
    "text": "morning to tell us how abstract has gotten a lot better that's good and i think we can push that even",
    "start": "2442400",
    "end": "2448560"
  },
  {
    "text": "further i think we can push it further by learning from these good intentions all of the things i talked about here",
    "start": "2448560",
    "end": "2454480"
  },
  {
    "text": "were not malicious acts the react developers was not a conspiracy among the people building react like yeah",
    "start": "2454480",
    "end": "2460079"
  },
  {
    "text": "we're going to screw them over by calling this dangerous and having them use it everywhere it's no they tried",
    "start": "2460079",
    "end": "2465520"
  },
  {
    "text": "their best to mark this as dangerous and it kind of doesn't work in practice",
    "start": "2465520",
    "end": "2471119"
  },
  {
    "text": "that's the takeaway here good intentions absol not so much but the road at least",
    "start": "2471119",
    "end": "2476960"
  },
  {
    "text": "to where we're going is based with good intentions so what we have to aim for is the right level of abstraction",
    "start": "2476960",
    "end": "2482880"
  },
  {
    "text": "you have to look for that abstraction that helps developers get their job done support them in their job and focus on",
    "start": "2482880",
    "end": "2489040"
  },
  {
    "text": "proper and usable security preferably with the right semantics and i believe we can do if we can do",
    "start": "2489040",
    "end": "2495200"
  },
  {
    "text": "that we can make things significantly better towards the future that's my message here for the conference and with",
    "start": "2495200",
    "end": "2501520"
  },
  {
    "text": "that i want to thank you for being here [Applause]",
    "start": "2501520",
    "end": "2513119"
  },
  {
    "text": "if you have any questions i'll be happy to answer them right now you have someone with a mic so let's",
    "start": "2513119",
    "end": "2518800"
  },
  {
    "text": "make them run around a bit if there are questions healthy workouts",
    "start": "2518800",
    "end": "2526359"
  },
  {
    "text": "yeah no rush with the picture apparently the last slide stays on until the next speaker arrives so you'll have plenty of time to do that",
    "start": "2537200",
    "end": "2545359"
  },
  {
    "text": "all right anything all abstract topics are fair game so",
    "start": "2545680",
    "end": "2553119"
  },
  {
    "text": "yes there's questions over here yeah sure that's that's good i'll repeat",
    "start": "2553520",
    "end": "2559599"
  },
  {
    "text": "the question uh for the live streaming with the audience dot first did the",
    "start": "2559599",
    "end": "2565680"
  },
  {
    "text": "third option actually validate the signature quickly yes so the question was um with the job",
    "start": "2565680",
    "end": "2572160"
  },
  {
    "text": "example of parse and parse claims jws does the parse claims jws actually work more securely yes i actually verified",
    "start": "2572160",
    "end": "2578640"
  },
  {
    "text": "that so i went beyond the autocompletion suggestions and i tried them out and the parse indeed does accept an algonan",
    "start": "2578640",
    "end": "2585440"
  },
  {
    "text": "token parse claims jws requires a jlus is the abbreviation for",
    "start": "2585440",
    "end": "2590720"
  },
  {
    "text": "json webb's signature so it requires a signature it doesn't move forward without signature",
    "start": "2590720",
    "end": "2595839"
  },
  {
    "text": "would have been better if it was a function like bars without verifying signature and bars securely that would have been a bit",
    "start": "2595839",
    "end": "2602319"
  },
  {
    "text": "more meaningful in this case but yeah fair question",
    "start": "2602319",
    "end": "2607440"
  },
  {
    "text": "anybody else yeah just shout out",
    "start": "2607440",
    "end": "2612839"
  },
  {
    "text": "okay so the question is if you call something safe html how should developers be aware of security issues",
    "start": "2619200",
    "end": "2624319"
  },
  {
    "text": "well that's the whole thing they shouldn't if you use in that file",
    "start": "2624319",
    "end": "2631720"
  },
  {
    "text": "okay yeah yeah so the question is how can you ensure that the library you're using or the component you're using is",
    "start": "2641119",
    "end": "2646400"
  },
  {
    "text": "actually safe instead of containing vulnerabilities well that's that's a fair question um that's where security",
    "start": "2646400",
    "end": "2652240"
  },
  {
    "text": "people come in so in an organization of reasonable size you typically have developers and you",
    "start": "2652240",
    "end": "2658160"
  },
  {
    "text": "have security champions embedded in development teams and you have a security team which is which are dedicated appstick experts and they will",
    "start": "2658160",
    "end": "2664480"
  },
  {
    "text": "be able to tell you that this is the right way to help you develop that component that library and they tell you this is the right way of doing things or",
    "start": "2664480",
    "end": "2671359"
  },
  {
    "text": "you just can just copy paste the code from my slides and use that no need for it",
    "start": "2671359",
    "end": "2676400"
  },
  {
    "text": "having a security but yeah you'll have to rely on somebody to provide you with the correct way to build that secure",
    "start": "2676400",
    "end": "2682240"
  },
  {
    "text": "component and from that point on you can use that so as a developer and don't necessarily recommend that every",
    "start": "2682240",
    "end": "2687760"
  },
  {
    "text": "developer now starts building their own security components um but their recommendation is more likely that the security team",
    "start": "2687760",
    "end": "2694000"
  },
  {
    "text": "provides that or or a few people with more security expertise do provide that or you hire a consultant to provide it",
    "start": "2694000",
    "end": "2699599"
  },
  {
    "text": "for you and the moment you have that you can start using it",
    "start": "2699599",
    "end": "2705839"
  },
  {
    "text": "well in that case we can just burn the whole castle down right there's always yes there's always going",
    "start": "2706960",
    "end": "2712480"
  },
  {
    "text": "to be mistakes that's the inherent nature find good people that's that's my advice um and",
    "start": "2712480",
    "end": "2719200"
  },
  {
    "text": "yeah of course validate and test and guarantee but trust me even don't purify that",
    "start": "2719200",
    "end": "2725119"
  },
  {
    "text": "sanitizer has mistakes but when there's a mistake they are quick to catch it they quick to fix it and",
    "start": "2725119",
    "end": "2732560"
  },
  {
    "text": "everybody can update that you'll have to account for mistakes will always be there building perfect software is impossible",
    "start": "2732560",
    "end": "2738400"
  },
  {
    "text": "so i would suggest you find a different profession but finding something where no mistakes ever happen",
    "start": "2738400",
    "end": "2744079"
  },
  {
    "text": "is also not going to go well i'm a chef for example as well i went to",
    "start": "2744079",
    "end": "2749119"
  },
  {
    "text": "evening school for to cooking school and in the kitchen that's a very good example there's always mistakes like",
    "start": "2749119",
    "end": "2754560"
  },
  {
    "text": "all the time something goes wrong you just have to account for that and and pivot on the fly and deal with that",
    "start": "2754560",
    "end": "2760960"
  },
  {
    "text": "and and the same with software security there's always going to be mistakes there's always going to be that um bad",
    "start": "2760960",
    "end": "2766560"
  },
  {
    "text": "morning where you screw it up just like with everything and you'll have to deal with it anyway so",
    "start": "2766560",
    "end": "2771920"
  },
  {
    "text": "set up processes to deal with that that would be my advice and if you don't trust your own code then ask",
    "start": "2771920",
    "end": "2778160"
  },
  {
    "text": "someone to review it that would be the best way to ensure it's safe",
    "start": "2778160",
    "end": "2783920"
  },
  {
    "text": "who you yep react to instead of having a company internal",
    "start": "2787119",
    "end": "2792240"
  },
  {
    "text": "html to us",
    "start": "2792240",
    "end": "2794960"
  },
  {
    "text": "okay hold on hold on why are you mentioning angular",
    "start": "2797920",
    "end": "2803359"
  },
  {
    "text": "angular that this is a very interesting question so the react people react has this",
    "start": "2803359",
    "end": "2810240"
  },
  {
    "text": "idea of being a component library they're not claiming to be a framework they're a component library like hey we",
    "start": "2810240",
    "end": "2815280"
  },
  {
    "text": "allow you to build components and you can use them to build applications and sanitization to react is out of scope",
    "start": "2815280",
    "end": "2821760"
  },
  {
    "text": "for what they're doing they're they don't feel the need to offer sanitization angular is a",
    "start": "2821760",
    "end": "2827520"
  },
  {
    "text": "framework much more heavyweight so all the react developers hate it because angular has like it's my way or the",
    "start": "2827520",
    "end": "2833599"
  },
  {
    "text": "highway basically but if angular's way is something you can find yourself in angular is a very good framework which",
    "start": "2833599",
    "end": "2839440"
  },
  {
    "text": "i'm a fan of and angular does sanitization by default angular set like yes screw this we're not going to allow",
    "start": "2839440",
    "end": "2845040"
  },
  {
    "text": "developers to do this themselves because we've seen this in the old version angular 1.x they're going to screw it up",
    "start": "2845040",
    "end": "2851200"
  },
  {
    "text": "we have plenty of stack overflow examples that actually make something safe by just saying like yeah whatever",
    "start": "2851200",
    "end": "2856880"
  },
  {
    "text": "and that's a very bad thing so in angular 2 plus they said like screw it nobody can touch this again we're going",
    "start": "2856880",
    "end": "2862240"
  },
  {
    "text": "to do this by default if you assign something as html into the page we will sanitize it for you",
    "start": "2862240",
    "end": "2868319"
  },
  {
    "text": "you can't even turn it off you can't touch that mechanism and that's a much better approach in my opinion",
    "start": "2868319",
    "end": "2874400"
  },
  {
    "text": "because you get this out of the box you don't have to write your own safe html component you just use the things the",
    "start": "2874400",
    "end": "2880319"
  },
  {
    "text": "angular array and you're good but even that is not enough and that's very interesting because i do angular",
    "start": "2880319",
    "end": "2885839"
  },
  {
    "text": "security workshops and i explain this whole crosstalk scripting thing i talked for an hour about crosstalk scripting and then the conclusion is like yeah",
    "start": "2885839",
    "end": "2891520"
  },
  {
    "text": "angular does all of this out of the box people are like why the hell you're talking about it then it's like yeah because here's the way you can bypass",
    "start": "2891520",
    "end": "2898079"
  },
  {
    "text": "that there's a function called bypass security trust html which takes some html and says like yeah this",
    "start": "2898079",
    "end": "2904559"
  },
  {
    "text": "is safe don't touch it and what what happens when i explain that is people use the github search feature like search in my organization",
    "start": "2904559",
    "end": "2911280"
  },
  {
    "text": "for bypass security trust html and they come back to me like an hour later like yeah crap we had a vulnerability that uses exactly that function",
    "start": "2911280",
    "end": "2918000"
  },
  {
    "text": "because they had a scenario that has to do a little bit that had to enable behavior that the",
    "start": "2918000",
    "end": "2924000"
  },
  {
    "text": "senatorizer doesn't allow but they need it for their customers and the only way to sidestep the sanitizer is by fully",
    "start": "2924000",
    "end": "2930240"
  },
  {
    "text": "disabling it for that piece of data which they did and functionally it works but it allows any arbitrary piece of",
    "start": "2930240",
    "end": "2935839"
  },
  {
    "text": "code as well so why don't we do it more by default well because react doesn't think it's",
    "start": "2935839",
    "end": "2941920"
  },
  {
    "text": "necessary and even if you do it there's still ways to mess it up so in angular the example i give there instead of",
    "start": "2941920",
    "end": "2948400"
  },
  {
    "text": "using this bypass security i tell people why don't you build it's called a pipe in angular where you",
    "start": "2948400",
    "end": "2953440"
  },
  {
    "text": "can pass things through like sanitize with style and that tells you exactly what it does",
    "start": "2953440",
    "end": "2958800"
  },
  {
    "text": "without having to use bypass security trust html over all over your code same principle just",
    "start": "2958800",
    "end": "2964880"
  },
  {
    "text": "a little less common in angular than in react the other frameworks are more like",
    "start": "2964880",
    "end": "2971040"
  },
  {
    "text": "reacto so amber and vue i know about those though they don't do sanitization by default either so you'll you're",
    "start": "2971040",
    "end": "2976880"
  },
  {
    "text": "responsible for that yourself as well all right anything else",
    "start": "2976880",
    "end": "2984359"
  },
  {
    "text": "going once going twice all right thank you very much for being here enjoy",
    "start": "2988800",
    "end": "2995520"
  },
  {
    "text": "the rest of the conference if you want to learn about api security by the way i'm back here tomorrow morning with another talk so um",
    "start": "2995520",
    "end": "3001680"
  },
  {
    "text": "come see what that's about and enjoy the conference and a party tonight [Applause]",
    "start": "3001680",
    "end": "3014130"
  },
  {
    "text": "you",
    "start": "3019760",
    "end": "3021839"
  }
]