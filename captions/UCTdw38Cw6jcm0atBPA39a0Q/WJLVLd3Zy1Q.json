[
  {
    "text": "all right good morning everyone hope you had a good conference so far my name is",
    "start": "7320",
    "end": "13379"
  },
  {
    "text": "Chris Simmons and what I'm about to talk for the next 60 minutes is actually a",
    "start": "13379",
    "end": "19110"
  },
  {
    "text": "tale of failure they started doing web application security in about 2000 2001",
    "start": "19110",
    "end": "25680"
  },
  {
    "text": "and and I've told the story before so if you have we seen it at previous NDC's you may have heard that but every year I",
    "start": "25680",
    "end": "33000"
  },
  {
    "text": "think ok I do this for one more year but then you know the problem will have solved itself I was young I was cocky",
    "start": "33000",
    "end": "40200"
  },
  {
    "text": "and I was just wrong web security is as up-to-date and as pressing an issue as",
    "start": "40200",
    "end": "46710"
  },
  {
    "text": "ever and therefore great that all of you showed up today for a a topic that I",
    "start": "46710",
    "end": "54360"
  },
  {
    "text": "think is pretty satisfying we're talking about well about the failures we as",
    "start": "54360",
    "end": "60329"
  },
  {
    "text": "developers had when trying to battle attacks and trying to do proper web",
    "start": "60329",
    "end": "65939"
  },
  {
    "text": "application security and I proved this by showing that now even browser developers helped us because we are",
    "start": "65939",
    "end": "72690"
  },
  {
    "text": "loaned we messed it up but browsers helped us so there are some built-in features and browsers that are either",
    "start": "72690",
    "end": "78600"
  },
  {
    "text": "activated by default or can be activated with little effort to immense the",
    "start": "78600",
    "end": "84390"
  },
  {
    "text": "security of our web application so that's what this next well 60 60 minutes",
    "start": "84390",
    "end": "89820"
  },
  {
    "text": "will be about I have a I have a web",
    "start": "89820",
    "end": "96659"
  },
  {
    "text": "browser here and I have I have a page and this page has a button it says do",
    "start": "96659",
    "end": "102390"
  },
  {
    "text": "not do this so what will I do exactly let's click on that so it says",
    "start": "102390",
    "end": "108270"
  },
  {
    "text": "account deleted I hope you can see it all right that's a bad thing so let's just close this browser tab and hope",
    "start": "108270",
    "end": "116189"
  },
  {
    "text": "that this will never happen again today I'd like to start with a pretty interesting website which promises that",
    "start": "116189",
    "end": "126530"
  },
  {
    "text": "they they check the HTTP headers that our web server is using and sending and",
    "start": "126530",
    "end": "132930"
  },
  {
    "text": "then analyzing it whether it's it's kind of sound or not so let's just use an arbitrary site so about how about NDC -",
    "start": "132930",
    "end": "140550"
  },
  {
    "text": "Londyn come and now that website is retrieve and scanned and then we get a",
    "start": "140550",
    "end": "145950"
  },
  {
    "text": "mark well in that case it's red and then F somewhere below further below on that",
    "start": "145950",
    "end": "151140"
  },
  {
    "text": "page it says well and F it's not you know the end of the world but there are some things that might be amended and",
    "start": "151140",
    "end": "158460"
  },
  {
    "text": "that's exactly what we'll do so we'll talk about certain attacks and I'm very",
    "start": "158460",
    "end": "164520"
  },
  {
    "text": "aware that you hopefully know all of these attacks and then we'll see how there might be techniques in the browser",
    "start": "164520",
    "end": "171390"
  },
  {
    "text": "by default or not by default that helped us battle those attacks so that's that's what I'm about to do and then we'll",
    "start": "171390",
    "end": "177000"
  },
  {
    "text": "Emily come back to this at the end and see what could be made better on their",
    "start": "177000",
    "end": "182040"
  },
  {
    "text": "website all right so I'd like to start with cross-site scripting cross-site scripting in the ovis top 10 the list of",
    "start": "182040",
    "end": "190610"
  },
  {
    "text": "the 10 most prominent security risks",
    "start": "190610",
    "end": "195870"
  },
  {
    "text": "which is released every three years more or less the new edition is only a few",
    "start": "195870",
    "end": "201780"
  },
  {
    "text": "weeks away and cross-site scripting is always one has always been in the top three and I expect nonetheless in the",
    "start": "201780",
    "end": "208950"
  },
  {
    "text": "new edition so this is our website that kind enumerates CVS and which kind of",
    "start": "208950",
    "end": "215430"
  },
  {
    "text": "security viability are behind that and so this really shows that cross-site scripting I mean you know it goes up it",
    "start": "215430",
    "end": "221370"
  },
  {
    "text": "goes down it goes down quite a bit at the end but this is 2017 and if you look",
    "start": "221370",
    "end": "226380"
  },
  {
    "text": "closely that's more than zero right so only three weeks in and we still had across with scripting vulnerabilities so",
    "start": "226380",
    "end": "232950"
  },
  {
    "text": "it still is a major threat and for years I've thought well a cross-site scripting",
    "start": "232950",
    "end": "239010"
  },
  {
    "text": "I mean cross shipping is really really bad because I mean the idea is that an",
    "start": "239010",
    "end": "245730"
  },
  {
    "text": "attacker injects something in an HTTP response most of the time it's script code but also HTML for instance can be",
    "start": "245730",
    "end": "252270"
  },
  {
    "text": "dangerous and if it's drip code is executed in security context of the",
    "start": "252270",
    "end": "257459"
  },
  {
    "text": "current page the origin you'll have a look at the origin and in in a bit which",
    "start": "257459",
    "end": "264030"
  },
  {
    "text": "allows essentially the injected JavaScript code to do anything that our JavaScript code because it's our website",
    "start": "264030",
    "end": "270810"
  },
  {
    "text": "is about to do so very very bad and so I know it's thought oka this is",
    "start": "270810",
    "end": "276930"
  },
  {
    "text": "very bad but B I mean it's so trivial to defend against cross-site scripting",
    "start": "276930",
    "end": "283190"
  },
  {
    "text": "especially if you're in an HTML context so we have HTML and then we have user-generated input you know whatever a",
    "start": "283190",
    "end": "290760"
  },
  {
    "text": "search term anti on a web site in the search field a term and the resulting page says your search for XYZ has given",
    "start": "290760",
    "end": "301500"
  },
  {
    "text": "us these results so the XYZ is user-generated content because it comes from the user and if you're in the HTML",
    "start": "301500",
    "end": "307710"
  },
  {
    "text": "context the only way to inject something like JavaScript code is to well change",
    "start": "307710",
    "end": "314850"
  },
  {
    "text": "the context how can we change the context we thanked the brackets for tags",
    "start": "314850",
    "end": "319950"
  },
  {
    "text": "with single or double quotes for attribute values and with the absent character for entities if we escape",
    "start": "319950",
    "end": "326340"
  },
  {
    "text": "those five then we're good so this this",
    "start": "326340",
    "end": "332160"
  },
  {
    "text": "battle's most of the attacks also to even further decrease the attack surface",
    "start": "332160",
    "end": "339360"
  },
  {
    "text": "we might want to secure cookies which is something we'll talk about and we might",
    "start": "339360",
    "end": "344430"
  },
  {
    "text": "want to use something rather than you right well it's not really new but rather new called CSP and we will talk",
    "start": "344430",
    "end": "350520"
  },
  {
    "text": "quite a bit about CSP later today um so actually defense is trivial but still it's in the top three since I think the",
    "start": "350520",
    "end": "358320"
  },
  {
    "text": "first over top ten came about in 2004 or even 2003 so almost 15 years now and",
    "start": "358320",
    "end": "366330"
  },
  {
    "text": "cross the scripting is so one of the major threats why is that so well there",
    "start": "366330",
    "end": "371880"
  },
  {
    "text": "might be a myriad of reasons but still we need to defend against cross-site scripting and there are several ways of",
    "start": "371880",
    "end": "378510"
  },
  {
    "text": "doing so first I need to briefly discuss the the actual impact of cross-site",
    "start": "378510",
    "end": "385530"
  },
  {
    "text": "scripting because it becomes important when we talk about countermeasures the idea behind the security model of",
    "start": "385530",
    "end": "393870"
  },
  {
    "text": "javascript is yes javascript does have a security model and the security model has a name it's the same origin policy",
    "start": "393870",
    "end": "400250"
  },
  {
    "text": "the same origin policy is based on the term origin and the origin is defined by",
    "start": "400250",
    "end": "406349"
  },
  {
    "text": "ITF and the rich actually means the protocol or schema the fully qualified domain name",
    "start": "406349",
    "end": "413720"
  },
  {
    "text": "and the pork if all of these three things match then two things have the",
    "start": "413720",
    "end": "420620"
  },
  {
    "text": "same origin the origin in an HTML Javascript context is the origin of the",
    "start": "420620",
    "end": "427100"
  },
  {
    "text": "HTML page so if you load JavaScript code on an DC - Lantern calm but the",
    "start": "427100",
    "end": "434570"
  },
  {
    "text": "JavaScript code comes from whatever Google CDN because it's a JavaScript library hosted there the origin of the",
    "start": "434570",
    "end": "442190"
  },
  {
    "text": "JavaScript library is an D salon.com because any solana to come needs to run the code and maybe wants to modify the",
    "start": "442190",
    "end": "448250"
  },
  {
    "text": "contents of the page thanks to Sam Rich and policy well the originally salon.com otherwise that would not be possible",
    "start": "448250",
    "end": "455230"
  },
  {
    "text": "this does not apply or the same written policy does does not apply to the SRC",
    "start": "455230",
    "end": "460790"
  },
  {
    "text": "attribute you can code you can load code from anywhere but the security context the JavaScript code runs in is the",
    "start": "460790",
    "end": "467480"
  },
  {
    "text": "origin of the HTML page that loads the code so just you know to make make super",
    "start": "467480",
    "end": "472820"
  },
  {
    "text": "clear what the same return policy means the first three URLs they have the same",
    "start": "472820",
    "end": "478310"
  },
  {
    "text": "region because the using HTTP they are using port 80 and the using example.com as the fully qualified domain name the",
    "start": "478310",
    "end": "487190"
  },
  {
    "text": "seven down there those none of them share the same origin because some of",
    "start": "487190",
    "end": "494420"
  },
  {
    "text": "them have different port like 8080 or different protocol like HTTP or they",
    "start": "494420",
    "end": "500390"
  },
  {
    "text": "have a different domain name altogether alright so that's why cross-site scripting is extreme bad and extremely",
    "start": "500390",
    "end": "506570"
  },
  {
    "text": "dangerous so what can can we do against it and actually the first let's say",
    "start": "506570",
    "end": "513560"
  },
  {
    "text": "development team that tried to do something proactively against cross-site scripting from a browser point of view",
    "start": "513560",
    "end": "520190"
  },
  {
    "text": "was surprisingly Microsoft ie8 and I mean you know nowadays if you see I ate",
    "start": "520190",
    "end": "526250"
  },
  {
    "text": "at a customer site or your customer tells you well we still do use I ate and maybe you're not too thrilled let me put",
    "start": "526250",
    "end": "533720"
  },
  {
    "text": "it that way however ie8 as as bad as it may look today in comparison to modern browsers I",
    "start": "533720",
    "end": "540740"
  },
  {
    "text": "ate introduced a la security features so it kinda was a milestone especially if you compare to",
    "start": "540740",
    "end": "546050"
  },
  {
    "text": "IE 7 or even all the words and what I ate introduced is a cross-site scripting",
    "start": "546050",
    "end": "551329"
  },
  {
    "text": "filter that was used for a reflective cross-site scripting in order to battle",
    "start": "551329",
    "end": "556399"
  },
  {
    "text": "it there is no setting in IE that deactivates that filter so it's there to",
    "start": "556399",
    "end": "563179"
  },
  {
    "text": "protect users and well users cannot disable that now what happens if you",
    "start": "563179",
    "end": "570110"
  },
  {
    "text": "kind of find out well the cross-site scripting filter which turns up messages",
    "start": "570110",
    "end": "576889"
  },
  {
    "text": "like this kind of defeats the functionality of my web application well",
    "start": "576889",
    "end": "583519"
  },
  {
    "text": "you know there isn't an honest answer and let's say a more diplomatic answer",
    "start": "583519",
    "end": "590660"
  },
  {
    "text": "the honest answer is you do something wrong please refactor your app but the more diplomatic answer as well you may",
    "start": "590660",
    "end": "597920"
  },
  {
    "text": "use you may have found a very innovative way of doing code execution if you really want to do that you as the",
    "start": "597920",
    "end": "604879"
  },
  {
    "text": "developer can disable that filter by sending an HTTP header X access",
    "start": "604879",
    "end": "610129"
  },
  {
    "text": "protection the value of 1 enables it but well it's enabled by default 0 disabled",
    "start": "610129",
    "end": "615439"
  },
  {
    "text": "sitting there are other options too but these are these are the basic options right so you can disable the cross-site",
    "start": "615439",
    "end": "621860"
  },
  {
    "text": "scripting filter because thanks to the same origin policy and that's why it is so important thanks to the same origin",
    "start": "621860",
    "end": "628160"
  },
  {
    "text": "policy you as the person responsible for the web server you're the one who is",
    "start": "628160",
    "end": "633740"
  },
  {
    "text": "attacked because injected code runs in your original right so that's something",
    "start": "633740",
    "end": "639949"
  },
  {
    "text": "that's built-in in IE 8 it's now also built-in in webkit-based browsers so in",
    "start": "639949",
    "end": "645499"
  },
  {
    "text": "chrome in Safari and Firefox is my favorite cross-site scripting testing",
    "start": "645499",
    "end": "650809"
  },
  {
    "text": "browser because it does not have that filter built it so whenever I try to find an XSS vector I have to try it in",
    "start": "650809",
    "end": "657679"
  },
  {
    "text": "Firefox because the other browsers might might block it you there are ways around that filter because the design",
    "start": "657679",
    "end": "664189"
  },
  {
    "text": "principles of the filter was a the filter has to be really fast so no long analyzing of the input and B if possible",
    "start": "664189",
    "end": "672439"
  },
  {
    "text": "no false positives right because the filters is a name to give some additional protection to",
    "start": "672439",
    "end": "678649"
  },
  {
    "text": "users but the functionality of our website should still be there so it it's",
    "start": "678649",
    "end": "684290"
  },
  {
    "text": "no excuse to not care about cross-site",
    "start": "684290",
    "end": "689480"
  },
  {
    "text": "scripting it's just an additional safeguard I told you there would be several headers today some of them are",
    "start": "689480",
    "end": "696170"
  },
  {
    "text": "quick wins this one is well it's it's it's not even a quick win it's a win that's already there because it's",
    "start": "696170",
    "end": "702320"
  },
  {
    "text": "enabled by default but the just that you know but against cross-site scripting I I think I have something better with I'm",
    "start": "702320",
    "end": "707839"
  },
  {
    "text": "quite quite excited about it does come at a cost because the effectiveness of that measure depends on how well let's",
    "start": "707839",
    "end": "715370"
  },
  {
    "text": "say well-structured your your web application is but I think it might be",
    "start": "715370",
    "end": "721850"
  },
  {
    "text": "something very interesting for you it's called concert security policy you you may have heard of that before but let's just have a look what that's about",
    "start": "721850",
    "end": "727820"
  },
  {
    "text": "there are three versions currently of cotton security policy version one which is a w3c candidate recommendation since",
    "start": "727820",
    "end": "735100"
  },
  {
    "text": "2012 so over four years ago there is a",
    "start": "735100",
    "end": "740900"
  },
  {
    "text": "version two which happens to be also a w3c candidate recommendation from mid",
    "start": "740900",
    "end": "747940"
  },
  {
    "text": "2015 so it's 1/2 years old and there's also version 3 which still is an",
    "start": "747940",
    "end": "754310"
  },
  {
    "text": "editor's draft stage so they're working on that but nothing nothing is done yet pretty pretty interesting it's a feature",
    "start": "754310",
    "end": "761630"
  },
  {
    "text": "that is supported by all major browsers depending on the version number and",
    "start": "761630",
    "end": "767930"
  },
  {
    "text": "depending on your definition of major so a con security policy one this well it's",
    "start": "767930",
    "end": "775250"
  },
  {
    "text": "supported by all relevant browsers also by current versions of ie",
    "start": "775250",
    "end": "780320"
  },
  {
    "text": "which I think it's a pretty pretty positive sign and toups sorry sorry my",
    "start": "780320",
    "end": "788990"
  },
  {
    "text": "bad is moved but it's just going there we go",
    "start": "788990",
    "end": "794300"
  },
  {
    "text": "so consequence 1 is kind of supported by all browsers sorry if I e 11 it's a bit",
    "start": "794300",
    "end": "801920"
  },
  {
    "text": "worse with content security policy version 2 because con security version",
    "start": "801920",
    "end": "807700"
  },
  {
    "text": "version 2 is offers really really useful new features as we'll see however the IE support is",
    "start": "807700",
    "end": "818130"
  },
  {
    "text": "let's leave a little bit to be desired as you know there will be another major update to Windows 10 this year and this",
    "start": "818130",
    "end": "826720"
  },
  {
    "text": "will also come with the new edge browser version 15 internal version number that",
    "start": "826720",
    "end": "831970"
  },
  {
    "text": "one will have support of CSP 2 so in the not-too-distant future all up-to-date",
    "start": "831970",
    "end": "839860"
  },
  {
    "text": "browsers let me put it that way will have content security policy version to support up until now all CSP",
    "start": "839860",
    "end": "848079"
  },
  {
    "text": "2 features were best in chrome and mostly in Firefox and Safari but not in",
    "start": "848079",
    "end": "854760"
  },
  {
    "text": "Microsoft browsers yet but we'll see what but the what that actually means in a bit and well version 3 is just you",
    "start": "854760",
    "end": "861399"
  },
  {
    "text": "know a draft so and nothing nothing special to mention here the idea is this the web server sends an HTTP header and",
    "start": "861399",
    "end": "868290"
  },
  {
    "text": "the HTTP header contains a policy a policy that is telling the web browser",
    "start": "868290",
    "end": "875649"
  },
  {
    "text": "how - well handle content on that page there were different versions of headers",
    "start": "875649",
    "end": "882430"
  },
  {
    "text": "especially when content security policy was still standardization face and it still is you saw CSP 1 & 2 they are",
    "start": "882430",
    "end": "889779"
  },
  {
    "text": "candidate recommendations they are not recommendations so they never reach the final status but they're already working",
    "start": "889779",
    "end": "895930"
  },
  {
    "text": "on the next version so maybe it's I don't know something like Duke Nukem right so you know eventually eventually",
    "start": "895930",
    "end": "901990"
  },
  {
    "text": "we'll it will be released eventually and so there was the various different",
    "start": "901990",
    "end": "908110"
  },
  {
    "text": "headers nowadays all model browsers use the content security policy header if",
    "start": "908110",
    "end": "913120"
  },
  {
    "text": "you see some you know blog post or documentation with mom viola head us that usually means that the",
    "start": "913120",
    "end": "918279"
  },
  {
    "text": "documentation is outdated one of the interesting features of content security policy version 2 is that in those cases",
    "start": "918279",
    "end": "925060"
  },
  {
    "text": "where you cannot easily inject HTTP headers in in the response from the",
    "start": "925060",
    "end": "931300"
  },
  {
    "text": "server you can also use a meat attack with the meta tag you can emulate some",
    "start": "931300",
    "end": "937120"
  },
  {
    "text": "HDB errors including set cookie and others and what you can also do now is",
    "start": "937120",
    "end": "942820"
  },
  {
    "text": "do accept the content security policy ahead as is shown here but only from CSP",
    "start": "942820",
    "end": "948370"
  },
  {
    "text": "- so in order to still support ie if you're using CSP version 1 then",
    "start": "948370",
    "end": "953560"
  },
  {
    "text": "sending HTTP era is probably the best way and this is how content security policy looks like we have a header and",
    "start": "953560",
    "end": "961180"
  },
  {
    "text": "then we have several directives directives are the keywords with the -",
    "start": "961180",
    "end": "967750"
  },
  {
    "text": "and directives can have one or more values so we have two directives here default SRC self which essentially means",
    "start": "967750",
    "end": "975420"
  },
  {
    "text": "well everything that is loaded from from the web page using the SRC attribute",
    "start": "975420",
    "end": "982540"
  },
  {
    "text": "usually must come from self which is a content for the current origin so",
    "start": "982540",
    "end": "988120"
  },
  {
    "text": "basically we can only load content from the current origin everything needs to",
    "start": "988120",
    "end": "993340"
  },
  {
    "text": "come from our server so if someone injects script SRC equals HTTP bad",
    "start": "993340",
    "end": "999190"
  },
  {
    "text": "server com slash bad script ojs that is not loaded because the policy prevents",
    "start": "999190",
    "end": "1005190"
  },
  {
    "text": "it and what I'm also doing here is that all the images on that page they are",
    "start": "1005190",
    "end": "1011630"
  },
  {
    "text": "loaded from static dot example that comes all the images must come from a",
    "start": "1011630",
    "end": "1016980"
  },
  {
    "text": "specific server actually it's have a look how that turns out I have here a",
    "start": "1016980",
    "end": "1023610"
  },
  {
    "text": "simple MVC based application and what i'm doing here is if i call a specific",
    "start": "1023610",
    "end": "1029400"
  },
  {
    "text": "page with a query string argument of CSP equals 1 in that case I sent a content",
    "start": "1029400",
    "end": "1036510"
  },
  {
    "text": "security policy just default SRC self so load everything from the current origin",
    "start": "1036510",
    "end": "1042750"
  },
  {
    "text": "and if I go to the CSP page what we have here is we have a logos of an image we",
    "start": "1042750",
    "end": "1050700"
  },
  {
    "text": "have a beautiful orange colors bulleted list with two links one two question",
    "start": "1050700",
    "end": "1057060"
  },
  {
    "text": "marks is people's one and the other one not and what do we also have we have inline JavaScript code here and we also",
    "start": "1057060",
    "end": "1064140"
  },
  {
    "text": "have external javascript code here's an external file the inline code as you see",
    "start": "1064140",
    "end": "1069750"
  },
  {
    "text": "here alerts out inline and the external javascript code does an ajax request to",
    "start": "1069750",
    "end": "1075030"
  },
  {
    "text": "an endpoint on server which returns external and that Texas then well printed out let's have a",
    "start": "1075030",
    "end": "1082580"
  },
  {
    "text": "look in the browser how this looks like so we go to our CSP example and the page",
    "start": "1082580",
    "end": "1090560"
  },
  {
    "text": "is loaded and you see okay we get a JavaScript pop-up in line okay fair enough and then external worked we have",
    "start": "1090560",
    "end": "1098210"
  },
  {
    "text": "the orange list with the two links and we have the NDC line and logo and what",
    "start": "1098210",
    "end": "1103580"
  },
  {
    "text": "I'm doing now is I click on the first link and if you're sitting on the front rows you can see very small in the top",
    "start": "1103580",
    "end": "1109460"
  },
  {
    "text": "in the bottom left corner that we are calling the same page but with the CSP equals one appended to URL so we load",
    "start": "1109460",
    "end": "1116780"
  },
  {
    "text": "the exactly the same page but this time with the header and well you see the we",
    "start": "1116780",
    "end": "1123980"
  },
  {
    "text": "get the external pop-up we did not get the internal pop-up and when I click on",
    "start": "1123980",
    "end": "1130460"
  },
  {
    "text": "that the page renders and somehow the color is gone hmm something went really",
    "start": "1130460",
    "end": "1137540"
  },
  {
    "text": "really wrong here well you probably are already guessing what's the problem so",
    "start": "1137540",
    "end": "1142850"
  },
  {
    "text": "what was deactivated the color which was an inline style and the inline JavaScript code so in line is considered",
    "start": "1142850",
    "end": "1152000"
  },
  {
    "text": "dangerous so by using a content security policy that includes policy for scripts",
    "start": "1152000",
    "end": "1159700"
  },
  {
    "text": "you disable inline markup like inline",
    "start": "1159700",
    "end": "1164780"
  },
  {
    "text": "JavaScript and inline starts which is well if you ask me it's a good thing but",
    "start": "1164780",
    "end": "1170060"
  },
  {
    "text": "it really depends on how your page is set up and if we go to developer tools",
    "start": "1170060",
    "end": "1176090"
  },
  {
    "text": "and have a look we see that in the",
    "start": "1176090",
    "end": "1181100"
  },
  {
    "text": "console we have a couple of messages refuse to execute inline script refused to apply inline style so the content",
    "start": "1181100",
    "end": "1189530"
  },
  {
    "text": "security policy prevented us from running that script and executing that code and displaying that style and",
    "start": "1189530",
    "end": "1196940"
  },
  {
    "text": "that's a good thing because how does cross-site scripting work usually there",
    "start": "1196940",
    "end": "1202820"
  },
  {
    "text": "are two attack vectors one is someone injects script as our C equals bad server calm as I explained but where",
    "start": "1202820",
    "end": "1210080"
  },
  {
    "text": "since we set our policy to only use content from our own origin that code",
    "start": "1210080",
    "end": "1216320"
  },
  {
    "text": "will not be run if Kanta security policy is enabled so that attack vector is closed if the browser supports content",
    "start": "1216320",
    "end": "1223040"
  },
  {
    "text": "security policy what's the second attack vector the second attack vector is an attacker injecting inline JavaScript code in LAN",
    "start": "1223040",
    "end": "1232100"
  },
  {
    "text": "javascript code is a bit trickier usually right because it then seems to come from our server there is no",
    "start": "1232100",
    "end": "1238550"
  },
  {
    "text": "additional HTTP request to another server however as you see here by",
    "start": "1238550",
    "end": "1244310"
  },
  {
    "text": "default inline script code is disabled when using content security policy so",
    "start": "1244310",
    "end": "1250400"
  },
  {
    "text": "that second tag vector is closed as well so what's what's the only way to manage",
    "start": "1250400",
    "end": "1257510"
  },
  {
    "text": "to do cross site scripting now if CSP is enabled for an attacker well you saw",
    "start": "1257510",
    "end": "1262820"
  },
  {
    "text": "there was only one bit of code that was executed and that bit of code was the",
    "start": "1262820",
    "end": "1268640"
  },
  {
    "text": "file that resided in our server so if an attacker manages to upload a JavaScript",
    "start": "1268640",
    "end": "1275210"
  },
  {
    "text": "file to our server then yes cross-site scripting is still possible however if an attacker manages",
    "start": "1275210",
    "end": "1281210"
  },
  {
    "text": "to upload a file to our server cross-site scripting is probably the least of our problems so I would say the",
    "start": "1281210",
    "end": "1287600"
  },
  {
    "text": "cross-site scripting issue can be solved if we're using content security policy",
    "start": "1287600",
    "end": "1294370"
  },
  {
    "text": "so really consider using that I will very very briefly guide you through some",
    "start": "1294370",
    "end": "1300440"
  },
  {
    "text": "of the features real quick of content security policy and then give you some pointers how you",
    "start": "1300440",
    "end": "1306230"
  },
  {
    "text": "can use con security policy because there still is a catch I have to tell you all right so there are several",
    "start": "1306230",
    "end": "1312050"
  },
  {
    "text": "directives we saw the default SRC directive kind of the mother of all directives there are more specific",
    "start": "1312050",
    "end": "1318410"
  },
  {
    "text": "directives which can be used to override the setting in default SRC for instance image' SRC for images script SRC for",
    "start": "1318410",
    "end": "1325940"
  },
  {
    "text": "JavaScript and style SSE for styles there also some changes in CSP too I",
    "start": "1325940",
    "end": "1332150"
  },
  {
    "text": "just put them here for reference so when you have a look at the slides later you have a very good very good overview so",
    "start": "1332150",
    "end": "1339590"
  },
  {
    "text": "these are the directives that exist all these know the directors that exist and they can",
    "start": "1339590",
    "end": "1346490"
  },
  {
    "text": "have different values and those values are I think noteworthy there is something you haven't seen this from me",
    "start": "1346490",
    "end": "1352759"
  },
  {
    "text": "right someone else told you that you can use you know the Stars and asterisks this kind of means everything but you",
    "start": "1352759",
    "end": "1357980"
  },
  {
    "text": "don't want to use this right someone else told you that you can use a region as we did starting with CSV to not only in the",
    "start": "1357980",
    "end": "1364279"
  },
  {
    "text": "region but also URI so you can have pass in here and then we have a couple of constants constants are delimited by",
    "start": "1364279",
    "end": "1370490"
  },
  {
    "text": "single quotes we already saw self which means current origin none is I think obvious and then",
    "start": "1370490",
    "end": "1378049"
  },
  {
    "text": "we have two more and you know usually when you have a standard the standard shouldn't be opinionated right then a",
    "start": "1378049",
    "end": "1383539"
  },
  {
    "text": "Senate should say what it is but the Senate you know should not mock you it",
    "start": "1383539",
    "end": "1389210"
  },
  {
    "text": "does because we have unsafe inline and unsafe eval so this is like the like if",
    "start": "1389210",
    "end": "1397370"
  },
  {
    "text": "the standard was saying okay you can activate this and that but well then essentially you are kind of stupid",
    "start": "1397370",
    "end": "1403759"
  },
  {
    "text": "so really this is a very I've never seen anything like this in the standard before ever constant like unsafe inline",
    "start": "1403759",
    "end": "1409549"
  },
  {
    "text": "so this is a bad idea in line and this is a bad idea eval for evaluating code so JavaScript eval function function",
    "start": "1409549",
    "end": "1417230"
  },
  {
    "text": "constructor and stuff like that so yes you can activate inline styles and",
    "start": "1417230",
    "end": "1424370"
  },
  {
    "text": "inline JavaScript code if you need it well and sometimes you do need it for instance one of the biggest users of",
    "start": "1424370",
    "end": "1430909"
  },
  {
    "text": "content security policy around the first users is Twitter and if you look at the",
    "start": "1430909",
    "end": "1436460"
  },
  {
    "text": "policy twitter is using because you know twitter is loading so many assets and has so many different sides and people",
    "start": "1436460",
    "end": "1442669"
  },
  {
    "text": "calling in from other domains and stuff like that that the twitter secure policy is extremely long and it's using unsafe",
    "start": "1442669",
    "end": "1450649"
  },
  {
    "text": "inline and if you're using unsafe inline this this attack vector suddenly",
    "start": "1450649",
    "end": "1456080"
  },
  {
    "text": "reappears right so you do gain something but so try to avoid it but it's not",
    "start": "1456080",
    "end": "1462980"
  },
  {
    "text": "always possible so maybe maybe some of you and someone someone asked in another talk yesterday who was still maintaining",
    "start": "1462980",
    "end": "1470299"
  },
  {
    "text": "web forms applications a spirit web forms and some hands showed s period reform stay out put",
    "start": "1470299",
    "end": "1477780"
  },
  {
    "text": "quite a bit of inline javascript code and also inline styles so with that called security policy is difficult but",
    "start": "1477780",
    "end": "1484880"
  },
  {
    "text": "we will talk about kind of a potential potential remedy for that because if you",
    "start": "1484880",
    "end": "1493770"
  },
  {
    "text": "go to the to the browser again and if",
    "start": "1493770",
    "end": "1499710"
  },
  {
    "text": "you actually move this up a little bit so you can see that tiny bit better what",
    "start": "1499710",
    "end": "1505830"
  },
  {
    "text": "you can do is you can calculate the hash of the inline JavaScript code and put",
    "start": "1505830",
    "end": "1512100"
  },
  {
    "text": "that in the policy right so in your build process you have a look at the JavaScript code but you have to be super careful you have to also take whitespace",
    "start": "1512100",
    "end": "1518400"
  },
  {
    "text": "into account carriage returns etc you calculate the hash and then in the",
    "start": "1518400",
    "end": "1523530"
  },
  {
    "text": "content security policy you provide that hash value so now the browser knows hey if there is code that has exactly that",
    "start": "1523530",
    "end": "1529920"
  },
  {
    "text": "hash I can execute it and if you have code that never changes you can also just you know you Strohm have a look at",
    "start": "1529920",
    "end": "1536250"
  },
  {
    "text": "that error message and you have the hash that works there are other options too but still it's kind of complicated",
    "start": "1536250",
    "end": "1542490"
  },
  {
    "text": "and that's a content security policy version to feature so if you are using a",
    "start": "1542490",
    "end": "1549000"
  },
  {
    "text": "browser does not support that then the browser doesn't support the hash here all the browser sees is oh I cannot run",
    "start": "1549000",
    "end": "1556830"
  },
  {
    "text": "any inline code and then your code doesn't run so that's probably not what what we want to do so that but that's",
    "start": "1556830",
    "end": "1561840"
  },
  {
    "text": "that's that's an option you can you can consider consider using here for inline",
    "start": "1561840",
    "end": "1568830"
  },
  {
    "text": "code and there are other options too but basically that's that's what what you want to that's what you want to do now",
    "start": "1568830",
    "end": "1573960"
  },
  {
    "text": "the problem is such a call security policies as you see here if there is a",
    "start": "1573960",
    "end": "1579120"
  },
  {
    "text": "violation of this of the policy there are two reasons why there can be a violation of the content security policy",
    "start": "1579120",
    "end": "1585350"
  },
  {
    "text": "one reason is you forgot something so let's just imagine you said you're using",
    "start": "1585350",
    "end": "1590550"
  },
  {
    "text": "default SRC and you just say self and then you are also adding the server name",
    "start": "1590550",
    "end": "1596550"
  },
  {
    "text": "of the add server where you display ads from and off let's say Google Analytics",
    "start": "1596550",
    "end": "1602280"
  },
  {
    "text": "right because you're using Google Analytics and that code is loaded from another server you so you",
    "start": "1602280",
    "end": "1607890"
  },
  {
    "text": "need to put that in the list too but maybe the ad server script is loading in another resource from yet another server",
    "start": "1607890",
    "end": "1616460"
  },
  {
    "text": "if that's not in the content security policy list that is not loaded your users might be happy because less ads",
    "start": "1616460",
    "end": "1622950"
  },
  {
    "text": "but still you probably want the ads to be displayed so you have to be careful I need to enumerate which kind of servers",
    "start": "1622950",
    "end": "1630600"
  },
  {
    "text": "and which kind of origins you're using on your websites that rule for that as well but the problem still is if you",
    "start": "1630600",
    "end": "1637590"
  },
  {
    "text": "mess something up then you have a policy violation and maybe your website doesn't work as well there's only one other",
    "start": "1637590",
    "end": "1643020"
  },
  {
    "text": "reason for a policy violation you have a security vulnerability and someone tries to exploit it so actually there's a good",
    "start": "1643020",
    "end": "1649380"
  },
  {
    "text": "policy violation but how do you know about this policy violation and that's a",
    "start": "1649380",
    "end": "1654900"
  },
  {
    "text": "pretty amazing thing there is a an additional option called report URI your",
    "start": "1654900",
    "end": "1664560"
  },
  {
    "text": "report your eyes a directive where you provide a URI and once there's a policy",
    "start": "1664560",
    "end": "1669960"
  },
  {
    "text": "violation and a TP request is sent to that you arrive with all the info which line which file which violation which",
    "start": "1669960",
    "end": "1677370"
  },
  {
    "text": "payload etc so you kind of get automatically informed when your policy",
    "start": "1677370",
    "end": "1683880"
  },
  {
    "text": "is violated the browser sends that to your endpoint you have to create the Empire yourself or you can use a service",
    "start": "1683880",
    "end": "1689370"
  },
  {
    "text": "like report your I dot geo it's dot IO sorry it's the same the gentleman behind",
    "start": "1689370",
    "end": "1697020"
  },
  {
    "text": "that this is the same one that also did the security Heather site I showed you at the beginning that's still very nice",
    "start": "1697020",
    "end": "1703290"
  },
  {
    "text": "but yet you have a policy violation which means that something is blocked which you maybe do not want unless it's",
    "start": "1703290",
    "end": "1708690"
  },
  {
    "text": "an attack so there is another thing ahead are called content security policy report only it's the same thing as",
    "start": "1708690",
    "end": "1715800"
  },
  {
    "text": "content security policy but the policy is not enforced so the website runs as before but if there's a violation they",
    "start": "1715800",
    "end": "1723150"
  },
  {
    "text": "inform you or the browser informs you to be exact so once you have recorded security policy and you refactor your",
    "start": "1723150",
    "end": "1731190"
  },
  {
    "text": "website that you do not use inline stars and do not use inline JavaScript code then set up the policy and send it with",
    "start": "1731190",
    "end": "1737940"
  },
  {
    "text": "the content security policy report only header and then let it run for two and NZ if anything is reported or not so",
    "start": "1737940",
    "end": "1747029"
  },
  {
    "text": "you can have a dry run so to speak of that policy without any functionality",
    "start": "1747029",
    "end": "1752730"
  },
  {
    "text": "not working any longer on your website I'm really excited about the technology you should really consider using that or",
    "start": "1752730",
    "end": "1760710"
  },
  {
    "text": "at least evaluating that for for your web application I've had a lot of customers with implementing this and",
    "start": "1760710",
    "end": "1765779"
  },
  {
    "text": "really the attack surface just just gets smaller which which really helps every little helps",
    "start": "1765779",
    "end": "1770909"
  },
  {
    "text": "all right so that's a very quick - through continuity policy but there's a",
    "start": "1770909",
    "end": "1779879"
  },
  {
    "text": "little bit more so one of the let's assume there's a successful cross-site scripting attack one of the attacks that",
    "start": "1779879",
    "end": "1787159"
  },
  {
    "text": "happen quite often when cross-site scripting works is cookie hijacking",
    "start": "1787159",
    "end": "1792360"
  },
  {
    "text": "which means that cookies are somehow stolen the cross-site scripting it's easy another option is to steal those",
    "start": "1792360",
    "end": "1798870"
  },
  {
    "text": "cookies in open networks like here the conference or the penguin show tell you're staying but usually it's open",
    "start": "1798870",
    "end": "1805320"
  },
  {
    "text": "Wi-Fi which basically means that everyone gets all the data in the network but the driver on the network",
    "start": "1805320",
    "end": "1812399"
  },
  {
    "text": "heart just you know picks the data that's for us and of course there are other drivers that you know also have a",
    "start": "1812399",
    "end": "1818309"
  },
  {
    "text": "look at the data that's not meant for us and also a little hardware dongle stead enabled at I think it's previous",
    "start": "1818309",
    "end": "1824429"
  },
  {
    "text": "editions of the conference some some even tried that out so be really super careful when you're using such an open",
    "start": "1824429",
    "end": "1830159"
  },
  {
    "text": "Wi-Fi just just in general and the problem with the stone cookie of course",
    "start": "1830159",
    "end": "1836549"
  },
  {
    "text": "is that quite often such a cookie contains sensitive data usually a session ID and that session ID is used",
    "start": "1836549",
    "end": "1842639"
  },
  {
    "text": "for authentication now we have to protect those cookies and actually there",
    "start": "1842639",
    "end": "1848759"
  },
  {
    "text": "there are interesting ways cookies were invented by Netscape HDB the protocol is",
    "start": "1848759",
    "end": "1854460"
  },
  {
    "text": "stateless so doesn't remember anything but let's go out well it's sure to remember something so in that",
    "start": "1854460",
    "end": "1860970"
  },
  {
    "text": "specification this is archived here pretty interesting the set-cookie header had an option",
    "start": "1860970",
    "end": "1866399"
  },
  {
    "text": "called secure secure means if we if this cookie is sent from the server to the",
    "start": "1866399",
    "end": "1874230"
  },
  {
    "text": "client that the client to store that cookie to accept it then the cookies sent back with all",
    "start": "1874230",
    "end": "1879900"
  },
  {
    "text": "subsequent requests to the same origin but with the secure header only if the",
    "start": "1879900",
    "end": "1885000"
  },
  {
    "text": "connection is done via HTTP this doesn't help against cross-site scripting but it",
    "start": "1885000",
    "end": "1890880"
  },
  {
    "text": "helps against open wi-fi's because an open Wi-Fi if we have HTTPS and",
    "start": "1890880",
    "end": "1896810"
  },
  {
    "text": "everything is configured correctly then the data is encrypted the data is",
    "start": "1896810",
    "end": "1902910"
  },
  {
    "text": "encrypted before even HTTP headers are being sent so we are we're safe there the other thing is that again Microsoft",
    "start": "1902910",
    "end": "1911790"
  },
  {
    "text": "invented something surprisingly and the other browser developers state chimed in and we're also using that is another",
    "start": "1911790",
    "end": "1918480"
  },
  {
    "text": "cookie option called HTTP only HV only says setting you see when you create cookies with C sharp and asp.net it's",
    "start": "1918480",
    "end": "1926460"
  },
  {
    "text": "also an option in web config which you can set for session cookies and I do recommend you do that and what HP only",
    "start": "1926460",
    "end": "1933390"
  },
  {
    "text": "does is this cookie is only sent via an HTTP connection and together secure only",
    "start": "1933390",
    "end": "1939270"
  },
  {
    "text": "via an HTTP connection what does that mean well JavaScript has access to cookies too and if you have cross-site",
    "start": "1939270",
    "end": "1946740"
  },
  {
    "text": "scripting and can inject JavaScript code and those cookies well might be accessible to the attackers JavaScript",
    "start": "1946740",
    "end": "1955110"
  },
  {
    "text": "code if we said HTTP only then javascript does not see that cookies at",
    "start": "1955110",
    "end": "1962340"
  },
  {
    "text": "least that's what the specification says it's not completely correct but it's",
    "start": "1962340",
    "end": "1967650"
  },
  {
    "text": "close enough there is one workaround and I think we have the time I will show you the background I have here the tool I'm only",
    "start": "1967650",
    "end": "1974730"
  },
  {
    "text": "resting which is like you know like like postman where you can send HTTP requests and I have an is here on my local",
    "start": "1974730",
    "end": "1981720"
  },
  {
    "text": "machine and what you probably can see here is I have a URL and I can set a",
    "start": "1981720",
    "end": "1989310"
  },
  {
    "text": "method egg I guess at header so let's just say I am you laid a request to the server and I send something with it",
    "start": "1989310",
    "end": "1996450"
  },
  {
    "text": "automatically cookie whatever session ID equals ABC 1 2 3 and if someone manages",
    "start": "1996450",
    "end": "2005990"
  },
  {
    "text": "to a tear to inject dangerous JavaScript code they can do an ajax request to our",
    "start": "2005990",
    "end": "2011030"
  },
  {
    "text": "server right because that's what javascript is allowed to do and instead of sending a get request they may want",
    "start": "2011030",
    "end": "2016610"
  },
  {
    "text": "to send a trace request and if we sent to trace request this is what we get back the trace request is a debugging",
    "start": "2016610",
    "end": "2023540"
  },
  {
    "text": "feature so the trace request sends back all the HTTP headers we have been sending to the server including line for",
    "start": "2023540",
    "end": "2031700"
  },
  {
    "text": "the cookie header so even if a cookie is secured by HTTP only if JavaScript can",
    "start": "2031700",
    "end": "2040340"
  },
  {
    "text": "send a trace request to the server JavaScript we had access to that cookie now why is this this is called a",
    "start": "2040340",
    "end": "2046490"
  },
  {
    "text": "cross-site Racing by the way why is this an attack that's well not very common and actually not very well known because",
    "start": "2046490",
    "end": "2053000"
  },
  {
    "text": "well I had to configure is that it accepts trace requests usually trace requests are disabled for most web",
    "start": "2053000",
    "end": "2059300"
  },
  {
    "text": "servers but you might want to check your own web server if trace is disabled if not disabled because well you don't need",
    "start": "2059300",
    "end": "2065750"
  },
  {
    "text": "it the only person needing trace for HTTP is the attacker for that specific",
    "start": "2065750",
    "end": "2071300"
  },
  {
    "text": "attack vector so you can easily disable so we can kind of protect cookies by",
    "start": "2071300",
    "end": "2077450"
  },
  {
    "text": "using secure and a cheapy only and this aiming trace but there's something better because HTTP is key and as you",
    "start": "2077450",
    "end": "2085220"
  },
  {
    "text": "know browser versions said I think the the chrome version that comes out in a couple of weeks kind of eras out when",
    "start": "2085220",
    "end": "2093350"
  },
  {
    "text": "you have for instance a login form that's not using HTTP so using HTTPS is more getting more and more important",
    "start": "2093350",
    "end": "2099980"
  },
  {
    "text": "so maybe you want to enforce HTTPS and there are ways of doing it one standard",
    "start": "2099980",
    "end": "2106610"
  },
  {
    "text": "here is HSTs HTTP strict Transport Security which works in the following",
    "start": "2106610",
    "end": "2114020"
  },
  {
    "text": "fashion so we send an HTTP request to the server with HTTP so no HTTP and the cell wants",
    "start": "2114020",
    "end": "2121310"
  },
  {
    "text": "to make sure that you never do that again the server then can send a strict Transport Security HTTP header there's a",
    "start": "2121310",
    "end": "2129590"
  },
  {
    "text": "couple of options and this is does two things first of all the connection is",
    "start": "2129590",
    "end": "2136130"
  },
  {
    "text": "switched to HTTPS and secondly the well",
    "start": "2136130",
    "end": "2141590"
  },
  {
    "text": "that's that's one of the prerequisite actually but what then happens is the browser remembers that so whenever you",
    "start": "2141590",
    "end": "2147500"
  },
  {
    "text": "go to let's say NDC London come head this header whenever the browser goes to",
    "start": "2147500",
    "end": "2152720"
  },
  {
    "text": "HTTP colon slash slash and the salon.com and you type this in and press Enter",
    "start": "2152720",
    "end": "2159440"
  },
  {
    "text": "then the browser sends a request to HTTPS and salon.com so no more attempts",
    "start": "2159440",
    "end": "2164930"
  },
  {
    "text": "of sending unencrypted requests to that server as long as the max-age timeout is",
    "start": "2164930",
    "end": "2172339"
  },
  {
    "text": "not it's not met so so year two is I think a good idea model browsers do have",
    "start": "2172339",
    "end": "2177829"
  },
  {
    "text": "a preload list so a list of domains that kind of signed up for being preloaded in",
    "start": "2177829",
    "end": "2184730"
  },
  {
    "text": "that list and it's not just a big domains and there are also smaller ones too and there are there are several",
    "start": "2184730",
    "end": "2190369"
  },
  {
    "text": "steps involved in order to become part of that list what you need to do is you",
    "start": "2190369",
    "end": "2197720"
  },
  {
    "text": "have to do a redirection from HTTP to HTTPS you have to use HTTPS on all subdomains and you have to send a strict",
    "start": "2197720",
    "end": "2206510"
  },
  {
    "text": "Transport Security header and add preload at the end and once you've all done this then you go to the special",
    "start": "2206510",
    "end": "2219170"
  },
  {
    "text": "special world website and on that website you just put your domain name in",
    "start": "2219170",
    "end": "2224450"
  },
  {
    "text": "here check States and eligibility and then eventually your domain if you did",
    "start": "2224450",
    "end": "2230270"
  },
  {
    "text": "everything correctly will be part of that list right so everyone was using a browser even the first time they try to",
    "start": "2230270",
    "end": "2236960"
  },
  {
    "text": "go to let's say HTTP any salon.com they",
    "start": "2236960",
    "end": "2242329"
  },
  {
    "text": "will use HTTPS because the preload list instructed them to do so you have to add",
    "start": "2242329",
    "end": "2247339"
  },
  {
    "text": "the preloads at the end until your part of the list so it's impossible that some other",
    "start": "2247339",
    "end": "2252619"
  },
  {
    "text": "website or competitors are kind of puts you on the list with all your knowledge right so you have to actively do that",
    "start": "2252619",
    "end": "2258349"
  },
  {
    "text": "really great because then really zero requests are being sent with HTTP to",
    "start": "2258349",
    "end": "2264829"
  },
  {
    "text": "your web sites any any longer and also no mixed content warnings etc so this I",
    "start": "2264829",
    "end": "2272420"
  },
  {
    "text": "think is a good value this should be approximately two years which pretty pretty nice so that's a kind of a",
    "start": "2272420",
    "end": "2280260"
  },
  {
    "text": "new center but we talked about content security policy already and there's also a way of enforcing HTTPS with content",
    "start": "2280260",
    "end": "2287820"
  },
  {
    "text": "security policy there is a new a new",
    "start": "2287820",
    "end": "2293280"
  },
  {
    "text": "directive called update insecure requests it's not part of a content security policy stand out it's a",
    "start": "2293280",
    "end": "2299190"
  },
  {
    "text": "different standard but it kind of you know joins in with content security policy and what this does is exactly",
    "start": "2299190",
    "end": "2305640"
  },
  {
    "text": "what the name says it upgrades insecure requests so let's just imagine you have",
    "start": "2305640",
    "end": "2312090"
  },
  {
    "text": "this policy and on your page there is a link to http whatever any salon.com then",
    "start": "2312090",
    "end": "2318990"
  },
  {
    "text": "you if the user clicks on it it goes to HTTPS and salon.com this is a feature",
    "start": "2318990",
    "end": "2324810"
  },
  {
    "text": "that's currently only supported by Chrome and Firefox so it doesn't always",
    "start": "2324810",
    "end": "2333300"
  },
  {
    "text": "make much sense to send out that header of the browser doesn't support it however for instance edge has this",
    "start": "2333300",
    "end": "2338640"
  },
  {
    "text": "feature s under consideration so it might eventually come but it will not come with the next Windows 10 update",
    "start": "2338640",
    "end": "2344330"
  },
  {
    "text": "however browsers that do support this that do support this feature when",
    "start": "2344330",
    "end": "2349800"
  },
  {
    "text": "sending an HTTP request they send along as you see here a header with the HTTP request upgrade insecure requests value",
    "start": "2349800",
    "end": "2358500"
  },
  {
    "text": "is 1 and if you get that header you then as the server in turn could send out",
    "start": "2358500",
    "end": "2363630"
  },
  {
    "text": "call security policy update insecure requests in order to facilitate facilitate that feature for your web",
    "start": "2363630",
    "end": "2370320"
  },
  {
    "text": "application and finally since we've been talking so much about secure connections",
    "start": "2370320",
    "end": "2376350"
  },
  {
    "text": "and HTTPS there's one more thing and that's public key pinning the idea here",
    "start": "2376350",
    "end": "2382710"
  },
  {
    "text": "is the following just imagine you know you buy a a certificate from some",
    "start": "2382710",
    "end": "2388610"
  },
  {
    "text": "authority and then that one gets hacked that's happened before right so someone",
    "start": "2388610",
    "end": "2394470"
  },
  {
    "text": "might be able to issue a new SSL certificate or TLS certificates in your",
    "start": "2394470",
    "end": "2399510"
  },
  {
    "text": "domains name which well is not that good right what you can do is to use HTTP",
    "start": "2399510",
    "end": "2408870"
  },
  {
    "text": "public key pinning the header is called public key pins and",
    "start": "2408870",
    "end": "2414780"
  },
  {
    "text": "public key pins then expects a list of well of the hashes of cryptographic",
    "start": "2414780",
    "end": "2422859"
  },
  {
    "text": "identities which you trust so for instance that could be the hash of your certificate and well either you buy a",
    "start": "2422859",
    "end": "2429580"
  },
  {
    "text": "backup certificate as well so because just putting in one usually so so either",
    "start": "2429580",
    "end": "2435640"
  },
  {
    "text": "by a certain certificate or you do a sign-in request and use that hash so if your certificate whatever expires or",
    "start": "2435640",
    "end": "2441850"
  },
  {
    "text": "something's wrong with that you still have the designer request and then can can set up a a new certificate so do",
    "start": "2441850",
    "end": "2449380"
  },
  {
    "text": "public key pins you provide the hash value that's usually where I mess up because I always have some issues you",
    "start": "2449380",
    "end": "2456700"
  },
  {
    "text": "know doing the doing the calculations right for that hash but eventually I succeed even I succeed and this is good",
    "start": "2456700",
    "end": "2462640"
  },
  {
    "text": "for I guess the one month and well then you sent the the header and then the",
    "start": "2462640",
    "end": "2469420"
  },
  {
    "text": "browser refuses the connection if the the hash of the certificate doesn't",
    "start": "2469420",
    "end": "2475240"
  },
  {
    "text": "match again the issue is what if you mess up because then no one can use your website any longer so there is also a",
    "start": "2475240",
    "end": "2481869"
  },
  {
    "text": "test note it's the same as Wisconsin security policy the headers then called public key pins report only and again",
    "start": "2481869",
    "end": "2489670"
  },
  {
    "text": "same is called a security policy there is a report URI option it will be renamed in a few",
    "start": "2489670",
    "end": "2495970"
  },
  {
    "text": "years maybe but currently it's report URI and then well the browser sends if",
    "start": "2495970",
    "end": "2501850"
  },
  {
    "text": "there's a violation request with the violation information to URL you provide however still your web site continues to",
    "start": "2501850",
    "end": "2508780"
  },
  {
    "text": "work remember the report your i dot io service i briefly mentioned before that",
    "start": "2508780",
    "end": "2514210"
  },
  {
    "text": "one works for this kind of reports as well alright so these were all options",
    "start": "2514210",
    "end": "2522160"
  },
  {
    "text": "of you know getting secure connections and there are other other attacks I",
    "start": "2522160",
    "end": "2529750"
  },
  {
    "text": "would like to talk about towards the end and one very common attack is cross-site",
    "start": "2529750",
    "end": "2536020"
  },
  {
    "text": "request forgery cross request forgery once again if we look at the numbers of",
    "start": "2536020",
    "end": "2541650"
  },
  {
    "text": "abilities by typing here so I mean this is just kind of went up pretty high and for some reason it went",
    "start": "2541650",
    "end": "2548660"
  },
  {
    "text": "down significantly in 2016 and well again 2017 but we are far above zero",
    "start": "2548660",
    "end": "2555230"
  },
  {
    "text": "three weeks in but so so it's it's a problem it's a problem that is not as",
    "start": "2555230",
    "end": "2560840"
  },
  {
    "text": "let's say prominent or widespread as cross-site scripting not necessarily because the issue does not exist that",
    "start": "2560840",
    "end": "2566840"
  },
  {
    "text": "much but cross-site scripting is easy to find easy to detect or easy to prove cross-site request forgery sometimes",
    "start": "2566840",
    "end": "2573700"
  },
  {
    "text": "again well requires a bit more effort also for cross-site request forgery or",
    "start": "2573700",
    "end": "2578750"
  },
  {
    "text": "what we need to know is that many frameworks now come with cross-site",
    "start": "2578750",
    "end": "2584540"
  },
  {
    "text": "request forgery protection sometimes you have to enable it but still more and more systems do have that now I don't",
    "start": "2584540",
    "end": "2590960"
  },
  {
    "text": "want to talk about trust request forgery in particular because there is no HTTP header that can protect us from that but",
    "start": "2590960",
    "end": "2597800"
  },
  {
    "text": "I like to talk about another let's say version of that across the request",
    "start": "2597800",
    "end": "2605510"
  },
  {
    "text": "forgery usually means the user doesn't do anything but there is also a version",
    "start": "2605510",
    "end": "2611060"
  },
  {
    "text": "of trust on request forgery where the user does something and the version I want to talk about is called",
    "start": "2611060",
    "end": "2616970"
  },
  {
    "text": "clickjacking so this is a screenshot from Facebook and I didn't I didn't do",
    "start": "2616970",
    "end": "2624530"
  },
  {
    "text": "anything with that right so I censored that word here but apart from that that's a true screenshot and I know I",
    "start": "2624530",
    "end": "2631730"
  },
  {
    "text": "know that person and let me just say I was I was pretty surprised that I saw",
    "start": "2631730",
    "end": "2637190"
  },
  {
    "text": "this right and of course I mean you got to do what you got to do so I went on",
    "start": "2637190",
    "end": "2643070"
  },
  {
    "text": "researching so I had a closer look on that the page referenced here and I have",
    "start": "2643070",
    "end": "2650660"
  },
  {
    "text": "to I have to page here with me actually no I almost have to page here with me but it's in a bit of a different fashion",
    "start": "2650660",
    "end": "2659030"
  },
  {
    "text": "so this this kinda is the page right and so when you go to the page you see a",
    "start": "2659030",
    "end": "2664910"
  },
  {
    "text": "link here saying click here and again front rows might see that's bottom left",
    "start": "2664910",
    "end": "2670100"
  },
  {
    "text": "corner this goes to google.com and there is zero JavaScript on a page right so I wouldn't trick you at least not that",
    "start": "2670100",
    "end": "2676430"
  },
  {
    "text": "cheaply if I click here then it says account be lead it remember it wasn't that this",
    "start": "2676430",
    "end": "2682730"
  },
  {
    "text": "this button do not do this what's what's wrong what's wrong here well actually",
    "start": "2682730",
    "end": "2689230"
  },
  {
    "text": "let's let's have a look at the page I'm a bit confused so so we have here some",
    "start": "2689230",
    "end": "2695450"
  },
  {
    "text": "CSS I don't know CSS very well and we have here a link and well the scroll bar",
    "start": "2695450",
    "end": "2701180"
  },
  {
    "text": "is suspiciously small but but but still I mean it's just a link right so let's",
    "start": "2701180",
    "end": "2706910"
  },
  {
    "text": "maybe change the CSS a little bit reload",
    "start": "2706910",
    "end": "2713840"
  },
  {
    "text": "that page and what you see now is that on that page we had an iframe and the",
    "start": "2713840",
    "end": "2721280"
  },
  {
    "text": "iframe contained the page with the button but you CSS that the iframe",
    "start": "2721280",
    "end": "2727340"
  },
  {
    "text": "doesn't show so we want to click on the link but instead we clicked on the",
    "start": "2727340",
    "end": "2732740"
  },
  {
    "text": "button that's the you know that's that's the layman's version of a click tracking",
    "start": "2732740",
    "end": "2737930"
  },
  {
    "text": "demo there are much more elaborate versions out there that you know are used by attackers where the JavaScript",
    "start": "2737930",
    "end": "2746660"
  },
  {
    "text": "code that moves the iframe to where your mouse pointer is right so wherever you click the button is already there and",
    "start": "2746660",
    "end": "2754330"
  },
  {
    "text": "what was happening with my friend Stephan here is he was kind of informed",
    "start": "2754330",
    "end": "2761000"
  },
  {
    "text": "of the page and when he went to that page he saw a button click here to whatever get access but when he clicked",
    "start": "2761000",
    "end": "2767720"
  },
  {
    "text": "on that button and I saw that you know when I loaded the page and had a closer look he clicked on the facebook like",
    "start": "2767720",
    "end": "2773420"
  },
  {
    "text": "button which was hidden in an iframe underneath that button and this is",
    "start": "2773420",
    "end": "2779780"
  },
  {
    "text": "really bad it's called clickjacking and I mean you know cross-site request forgery it's a common attack come countermeasures but",
    "start": "2779780",
    "end": "2786940"
  },
  {
    "text": "here the user is actually clicking on the button right the user is clicking on",
    "start": "2786940",
    "end": "2792530"
  },
  {
    "text": "that button what can you do you cannot forbid people from clicking on a button",
    "start": "2792530",
    "end": "2798290"
  },
  {
    "text": "what's the prerequisite for that attack the prerequisite for that attack is I",
    "start": "2798290",
    "end": "2803660"
  },
  {
    "text": "mean just made the the button is kind of a metaphor for",
    "start": "2803660",
    "end": "2810900"
  },
  {
    "text": "any button that has consequences in your web applications for instance add an",
    "start": "2810900",
    "end": "2816780"
  },
  {
    "text": "account delete an account make someone an administrator buy something so it's",
    "start": "2816780",
    "end": "2825240"
  },
  {
    "text": "usually a different page that is loaded in iframe so what's the prerequisite the attacker controls the outer page and",
    "start": "2825240",
    "end": "2830700"
  },
  {
    "text": "tries to hack the inner page the prerequisite is that the inner page can be loaded in an iframe well the older",
    "start": "2830700",
    "end": "2838860"
  },
  {
    "text": "people in the room probably remember the 1990s can you well if you remember the 1990s you haven't been there as they say",
    "start": "2838860",
    "end": "2845640"
  },
  {
    "text": "but in general in the 1990s we had frames and people were using frames to",
    "start": "2845640",
    "end": "2852900"
  },
  {
    "text": "steal content from other pages and load them in one of the frame some of your members you nodding and what did we do",
    "start": "2852900",
    "end": "2859770"
  },
  {
    "text": "back then well there were some JavaScript snippets frame Buster's and those frame Buster's try to detect okay",
    "start": "2859770",
    "end": "2865890"
  },
  {
    "text": "am I in a frame if so what ever redirect so if you still have the code you wrote",
    "start": "2865890",
    "end": "2872220"
  },
  {
    "text": "in 1995 then you might you know go to your archives and use that code again",
    "start": "2872220",
    "end": "2877380"
  },
  {
    "text": "but well it's 2017 so we have better measures once again there was something",
    "start": "2877380",
    "end": "2883830"
  },
  {
    "text": "introduced by surprisingly I ate an HTTP header called X frame options X from",
    "start": "2883830",
    "end": "2891510"
  },
  {
    "text": "options as ahead are telling the browser and all browsers nowaday supported okay either deny this page cannot be",
    "start": "2891510",
    "end": "2898890"
  },
  {
    "text": "displayed in an iframe or same original this page can be displayed in an iframe but only if the outer page has the same",
    "start": "2898890",
    "end": "2906120"
  },
  {
    "text": "origin as the inner page means we can frame our own content we cannot be framed by someone else have",
    "start": "2906120",
    "end": "2914190"
  },
  {
    "text": "a very very simple example here I have",
    "start": "2914190",
    "end": "2919650"
  },
  {
    "text": "two iframes here and both loads the same page it's a page that just says",
    "start": "2919650",
    "end": "2925650"
  },
  {
    "text": "frame data or sub like that however the second one use a set header equals one",
    "start": "2925650",
    "end": "2931050"
  },
  {
    "text": "and implementation on the server sends the X frame options header with value deny once set header equals one is there",
    "start": "2931050",
    "end": "2938580"
  },
  {
    "text": "so when I load that page we'll get two iframes loading the same URL the same",
    "start": "2938580",
    "end": "2944690"
  },
  {
    "text": "document but the second the right iframe will have the X frame options header and",
    "start": "2944690",
    "end": "2950810"
  },
  {
    "text": "that's how that how it looks like so you",
    "start": "2950810",
    "end": "2958190"
  },
  {
    "text": "see the second iframe remains empty if",
    "start": "2958190",
    "end": "2963500"
  },
  {
    "text": "you're using ie you even get one of these pretty error messages so even more",
    "start": "2963500",
    "end": "2968930"
  },
  {
    "text": "embarrassing and that's what I call a quick win right so if you have a page",
    "start": "2968930",
    "end": "2973940"
  },
  {
    "text": "where one click has an effect maybe even",
    "start": "2973940",
    "end": "2979730"
  },
  {
    "text": "two clicks if you do a good kind of social engineering or the clickjacking attackers executed well if it's several",
    "start": "2979730",
    "end": "2987050"
  },
  {
    "text": "clicks shouldn't be a problem but if you have a page where one click does something and you have a user that",
    "start": "2987050",
    "end": "2993740"
  },
  {
    "text": "authenticated and that victim does something just use extra options deny and you",
    "start": "2993740",
    "end": "3000099"
  },
  {
    "text": "close the attack vector and actually there's no really there's a really good alternative right because I mean you",
    "start": "3000099",
    "end": "3008140"
  },
  {
    "text": "cannot prevent the user from clicking but you can prevent the browser from loading quality security push policy",
    "start": "3008140",
    "end": "3015099"
  },
  {
    "text": "version 2 also has a directive that prevents this that has the same effect",
    "start": "3015099",
    "end": "3020500"
  },
  {
    "text": "so eventually the X frame options header as you see it's after the next so it's",
    "start": "3020500",
    "end": "3025510"
  },
  {
    "text": "kind of preliminary header will be replaced by the content security policy directive however as of now it's CSP -",
    "start": "3025510",
    "end": "3033609"
  },
  {
    "text": "there is no I support for it and so we have to stick with X frame options because that works back to ia and it's",
    "start": "3033609",
    "end": "3040510"
  },
  {
    "text": "actually the only difference all right and well one one more thing it's it's a",
    "start": "3040510",
    "end": "3047890"
  },
  {
    "text": "smaller smaller aspect but still some browsers especially I Ian Chrome late they tried to guess what kind of file",
    "start": "3047890",
    "end": "3055510"
  },
  {
    "text": "type we have now there is an established mechanism for that and the established mechanism is having a look at the mime",
    "start": "3055510",
    "end": "3062589"
  },
  {
    "text": "type right so the server sends content",
    "start": "3062589",
    "end": "3067720"
  },
  {
    "text": "type HTTP error and that contact HP error rules usually however I in chrome",
    "start": "3067720",
    "end": "3074740"
  },
  {
    "text": "sometimes want to be more clever and then the web server so they have a",
    "start": "3074740",
    "end": "3081090"
  },
  {
    "text": "look at those files and ignore the content type header if they think you know oh that's that's not HTML that's",
    "start": "3081090",
    "end": "3087150"
  },
  {
    "text": "something else well if you figure out you know drive-by downloads right or if",
    "start": "3087150",
    "end": "3093060"
  },
  {
    "text": "there is a way that users can upload content and you give that content whatever a file extension and that file",
    "start": "3093060",
    "end": "3099330"
  },
  {
    "text": "extensions trigger the content type however the content of the file looks like something else maybe someone could",
    "start": "3099330",
    "end": "3105240"
  },
  {
    "text": "for instance inject JavaScript code imagine you whatever allow the upload of text files and there's JavaScript code",
    "start": "3105240",
    "end": "3111030"
  },
  {
    "text": "in it and then an overseas browser considers well it's JavaScript code let's just execute it for good measure",
    "start": "3111030",
    "end": "3116910"
  },
  {
    "text": "this can be avoided with the X content type options header not very well known",
    "start": "3116910",
    "end": "3124230"
  },
  {
    "text": "it only has one value no sniff right so browser do not try to sniff the content",
    "start": "3124230",
    "end": "3131100"
  },
  {
    "text": "trust the content type setting of course the prerequisite here is that you do",
    "start": "3131100",
    "end": "3136620"
  },
  {
    "text": "have a content type setting and that's that's correct well let's go back where",
    "start": "3136620",
    "end": "3142710"
  },
  {
    "text": "we started and have a look at the scan result for a conference website and so",
    "start": "3142710",
    "end": "3150500"
  },
  {
    "text": "what we're complaining there's no content security policy and well content",
    "start": "3150500",
    "end": "3157290"
  },
  {
    "text": "security policy is great and effective but it takes time and effort to create a good content security policy and of",
    "start": "3157290",
    "end": "3163980"
  },
  {
    "text": "course the website needs to be prepared to that so I mean it's marked as right here but is this a problem I don't know",
    "start": "3163980",
    "end": "3170790"
  },
  {
    "text": "I would like to love to see a continuity policy but well if you don't have one",
    "start": "3170790",
    "end": "3176280"
  },
  {
    "text": "consider using one but if your considerations turn to the decision no we do not want one then well that's the",
    "start": "3176280",
    "end": "3181950"
  },
  {
    "text": "decision we have extra options which is missing here we do not have X XSS",
    "start": "3181950",
    "end": "3190200"
  },
  {
    "text": "protection as I told you it's enabled by default but we can also enforce it if you know there's a group policy",
    "start": "3190200",
    "end": "3196410"
  },
  {
    "text": "eventually still disabling that feature so we can specifically send this and",
    "start": "3196410",
    "end": "3202320"
  },
  {
    "text": "also its content type options is the one we we discussed last still it's just no",
    "start": "3202320",
    "end": "3209700"
  },
  {
    "text": "a problem because you know conference website and conference website has has an F well it really",
    "start": "3209700",
    "end": "3216060"
  },
  {
    "text": "depends the conference website is not a let's say a it sounds the wrong way a",
    "start": "3216060",
    "end": "3224790"
  },
  {
    "text": "precious website what what I mean is of course it's important website but it",
    "start": "3224790",
    "end": "3231420"
  },
  {
    "text": "doesn't process any user data there are no actions on that website they do",
    "start": "3231420",
    "end": "3237090"
  },
  {
    "text": "something why because ticket sales is done on another site right and the",
    "start": "3237090",
    "end": "3242670"
  },
  {
    "text": "ticket sales website has a better score but really again on the on the on the",
    "start": "3242670",
    "end": "3247980"
  },
  {
    "text": "conference website you cannot do anything so click jacking is not an option it displays information since",
    "start": "3247980",
    "end": "3255120"
  },
  {
    "text": "this place information doesn't accept user inputs cross-site scripting attack surface is rather rather minimal and",
    "start": "3255120",
    "end": "3263040"
  },
  {
    "text": "there's also no need for security policy more or less right so once again that",
    "start": "3263040",
    "end": "3268740"
  },
  {
    "text": "there is no 100% security right we should try as hard as possible but at",
    "start": "3268740",
    "end": "3275640"
  },
  {
    "text": "the end of the day it's all risk management and the risk management assessment for conference websites as",
    "start": "3275640",
    "end": "3281670"
  },
  {
    "text": "well there's a real risk involved here the risk is if there's a risk involved it's where the conference tickets are",
    "start": "3281670",
    "end": "3288690"
  },
  {
    "text": "sold and so always take all of this with a grain of salt identify what are your",
    "start": "3288690",
    "end": "3295800"
  },
  {
    "text": "risks and then talk about remedies and as we could see here many of those",
    "start": "3295800",
    "end": "3301470"
  },
  {
    "text": "remedies may mean in many of those HTP errors they extremely effective and many",
    "start": "3301470",
    "end": "3306900"
  },
  {
    "text": "of them are cheap to use it takes minimal effort to use them but you have Paxman game and with that that's all I",
    "start": "3306900",
    "end": "3314190"
  },
  {
    "text": "had thanks for coming in to our rest of conference so good I thank you [Applause]",
    "start": "3314190",
    "end": "3321660"
  }
]