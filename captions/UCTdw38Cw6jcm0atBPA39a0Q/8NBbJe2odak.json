[
  {
    "text": "good okay cool um hi everyone um thanks for coming along",
    "start": "4339",
    "end": "9660"
  },
  {
    "text": "um I hope everyone's had a good conference so far um excuse my slight sweatiness I realized I um was missing a pack I",
    "start": "9660",
    "end": "16740"
  },
  {
    "text": "always had to run to the nearest uh Elk Grove which I do recommend it's awesome um but yeah um so",
    "start": "16740",
    "end": "22680"
  },
  {
    "text": "I'm here to talk about what I call reactive infrastructure um I'll go into some details about that",
    "start": "22680",
    "end": "28500"
  },
  {
    "text": "uh first of all introductions um I'm peers I'm a Solutions engineer at palumi",
    "start": "28500",
    "end": "34739"
  },
  {
    "text": "um that's ways I think that's ways you can kind of get in touch with me touch your email that's my GitHub repo I'll put the",
    "start": "34739",
    "end": "41160"
  },
  {
    "text": "slides on there um there's also going to be a demo at the end um and I'll put the code up there as",
    "start": "41160",
    "end": "47040"
  },
  {
    "text": "well uh so very quickly palumi for those that don't know is an infrastructure as code",
    "start": "47040",
    "end": "54000"
  },
  {
    "text": "tool it allows you to use common programming languages to Define your Cloud infrastructure and what this means",
    "start": "54000",
    "end": "61379"
  },
  {
    "text": "is that you can use kind of standard software engineering practices and tools to deploy infrastructure and",
    "start": "61379",
    "end": "67320"
  },
  {
    "text": "applications so this is what the paluma ecosystem",
    "start": "67320",
    "end": "73380"
  },
  {
    "text": "looks like at the moment um and because you're using these common programming languages so no Java go",
    "start": "73380",
    "end": "79759"
  },
  {
    "text": "python.net and more recent yaml if you call that a fragrant language um because you're using these it means",
    "start": "79759",
    "end": "86220"
  },
  {
    "text": "that you can use uh common programming tools so you can use Ides and you get all the nice intellisense",
    "start": "86220",
    "end": "91619"
  },
  {
    "text": "um that you would get from writing any kind of typescript application for example you can use testing packages so",
    "start": "91619",
    "end": "97439"
  },
  {
    "text": "you can actually test your infrastructure unit test to integrate run integration tests and that kind of",
    "start": "97439",
    "end": "102960"
  },
  {
    "text": "thing um and obviously CI CD tools that you would normally use to deploy your applications you can use to deploy your",
    "start": "102960",
    "end": "109740"
  },
  {
    "text": "infrastructure using polymy so I want to start by talking about kind",
    "start": "109740",
    "end": "117720"
  },
  {
    "text": "of metric driven infrastructure changes um we all rely on using metrics from our",
    "start": "117720",
    "end": "123119"
  },
  {
    "text": "from our servers from our applications and so on to make changes horizontal scaling is the usual way that",
    "start": "123119",
    "end": "130140"
  },
  {
    "text": "people do this because it's kind of the easiest and quickest way to add capacity",
    "start": "130140",
    "end": "135480"
  },
  {
    "text": "um and there's a few ways that you can use metrics to do this so one is this kind of this idea of",
    "start": "135480",
    "end": "141959"
  },
  {
    "text": "adding web servers behind a load balancer um it's something that pretty much everyone does so the idea is you scale",
    "start": "141959",
    "end": "148020"
  },
  {
    "text": "up uh automatically based on CPU Network i o memory and it's a pretty good way of",
    "start": "148020",
    "end": "153959"
  },
  {
    "text": "ensuring that your application doesn't stop working um because it can't handle the number of requests being thrown at it the hardware",
    "start": "153959",
    "end": "161280"
  },
  {
    "text": "is in quotes uh because if you're automatically scaling like this then it's more than likely you're in a",
    "start": "161280",
    "end": "167280"
  },
  {
    "text": "virtual machine or container so not actually accessing the kind of the the actual Hardware itself",
    "start": "167280",
    "end": "173959"
  },
  {
    "text": "uh message based scaling um is another way so what you have workers processing uh messages from a",
    "start": "174120",
    "end": "180300"
  },
  {
    "text": "queue this is another good example where horizontal scaling is used the metric",
    "start": "180300",
    "end": "185459"
  },
  {
    "text": "here is the number of messages on a queue so if there's more messages than the workers can handle in a given amount",
    "start": "185459",
    "end": "192720"
  },
  {
    "text": "of time um there may be consequences you know orders don't get fulfilled in time uh",
    "start": "192720",
    "end": "197879"
  },
  {
    "text": "emails go out hours after they're supposed to um and so in this case we kind of add",
    "start": "197879",
    "end": "204120"
  },
  {
    "text": "more workers to read those messages um and then the number of messages goes down and then after a while we can",
    "start": "204120",
    "end": "210120"
  },
  {
    "text": "remove those extra workers um and save money",
    "start": "210120",
    "end": "215760"
  },
  {
    "text": "uh and some Cloud providers obviously do this automatically um for example NES Lambda they add more",
    "start": "215760",
    "end": "222659"
  },
  {
    "text": "containers to handle the all the events and messages that come in um without kind of AD without actually",
    "start": "222659",
    "end": "229200"
  },
  {
    "text": "you doing any extra work so event driven architecture so I",
    "start": "229200",
    "end": "235620"
  },
  {
    "text": "mentioned in the blurb that's kind of taking out this reactive infrastructure is taking ideas from Adventure of an architecture architecture so this is",
    "start": "235620",
    "end": "242400"
  },
  {
    "text": "where you have uh multiple systems uh or services and they don't in there they",
    "start": "242400",
    "end": "248040"
  },
  {
    "text": "don't directly interact with each other um you might hear the word uh decoupled",
    "start": "248040",
    "end": "253200"
  },
  {
    "text": "use a lot first of all let's flips around and look what's not considered event driven so um",
    "start": "253200",
    "end": "259919"
  },
  {
    "text": "usually based around sort of synchronous request response calls so more of the client server relationship",
    "start": "259919",
    "end": "266280"
  },
  {
    "text": "uh client sends a request waits for response from server this might be a two-way thing so the request might go",
    "start": "266280",
    "end": "272340"
  },
  {
    "text": "each way and then if there's no value response or the the server is taking too",
    "start": "272340",
    "end": "277860"
  },
  {
    "text": "long um then the client might call it kind of issues Upstream from from the clients so",
    "start": "277860",
    "end": "285540"
  },
  {
    "text": "in this example you've got the add user service makes your request to the send email service you had to use it you send",
    "start": "285540",
    "end": "291180"
  },
  {
    "text": "an email what's quite usual kind of workflow and then has to wait for the",
    "start": "291180",
    "end": "296759"
  },
  {
    "text": "response before writing to the database um if something goes wrong like there's a bug or there's a problem with the",
    "start": "296759",
    "end": "304139"
  },
  {
    "text": "network between the client and server uh you know there could be any number of issues then the requests may not be",
    "start": "304139",
    "end": "310680"
  },
  {
    "text": "fulfilled successfully and therefore cause problems",
    "start": "310680",
    "end": "315740"
  },
  {
    "text": "so event driven architecture it uses events or messages commands notifications I'm kind of using all",
    "start": "316500",
    "end": "323580"
  },
  {
    "text": "these words interchangeably here which I'm pretty sure is going to make someone to kind of twitch uncontrollably at some point",
    "start": "323580",
    "end": "329419"
  },
  {
    "text": "and they use these to trigger uh communication between the services",
    "start": "329419",
    "end": "335460"
  },
  {
    "text": "um an event is usually created when something has changed so um use has been created",
    "start": "335460",
    "end": "341699"
  },
  {
    "text": "um you um an order's been placed all those kind of things um and usually there's some kind of",
    "start": "341699",
    "end": "347400"
  },
  {
    "text": "messaging infrastructure between so it's uh usually over at a queue or some Pub subsystem",
    "start": "347400",
    "end": "353759"
  },
  {
    "text": "um and you know if you're using the cloud you probably use something like sqs SNS eventbridge Google Pub sub",
    "start": "353759",
    "end": "359880"
  },
  {
    "text": "um there's your event bus no if you're is your message for us I can't remember which one it is you'd use one of these",
    "start": "359880",
    "end": "366840"
  },
  {
    "text": "because the cloud provider has kind of created these they're highly available they're and you know why wouldn't you",
    "start": "366840",
    "end": "374400"
  },
  {
    "text": "um so in this example um here a new usage being added added so",
    "start": "374400",
    "end": "379500"
  },
  {
    "text": "a new user event is triggered um that's then put on the Queue and picked off by",
    "start": "379500",
    "end": "385620"
  },
  {
    "text": "um one of the workers they in turn then trigger another message um which which kind of like to send an",
    "start": "385620",
    "end": "394139"
  },
  {
    "text": "email and then the send email service will pick that up and send emails out",
    "start": "394139",
    "end": "399139"
  },
  {
    "text": "um so the event producer so in this case the the ad user service um at the top probably doesn't have an",
    "start": "399240",
    "end": "406740"
  },
  {
    "text": "expectation that the event will result in an action it just goes a user's been",
    "start": "406740",
    "end": "412440"
  },
  {
    "text": "created do something um in fact before you know you can do something it's just a you sort of been created",
    "start": "412440",
    "end": "418740"
  },
  {
    "text": "um so it's not you know it's not waiting for a response from that an email has",
    "start": "418740",
    "end": "425400"
  },
  {
    "text": "been sent you may require that so you may have kind of a cue going in the other direction so the the um the ad",
    "start": "425400",
    "end": "431280"
  },
  {
    "text": "user service might also be a worker that's then listening to an event that says yes I've sent email",
    "start": "431280",
    "end": "438020"
  },
  {
    "text": "so why would you do this um first of all you're protected against the server having issues",
    "start": "439259",
    "end": "445020"
  },
  {
    "text": "um so in my earlier example of the synchronous architecture if that send email service goes down then the ad user",
    "start": "445020",
    "end": "451199"
  },
  {
    "text": "service might have issues um obviously there are things you can do to protect against this you can use",
    "start": "451199",
    "end": "456960"
  },
  {
    "text": "circuit breaking throttling all those kind of things but it ruins the point of my talk",
    "start": "456960",
    "end": "462060"
  },
  {
    "text": "um so if the ad user service is just right into a queue and that queue is highly available because it's sqs or",
    "start": "462060",
    "end": "467340"
  },
  {
    "text": "whatever um then if the send email service stops functioning the messages are still on the Queue",
    "start": "467340",
    "end": "473580"
  },
  {
    "text": "um and then once it starts again you know the workers will just carry on where they left off",
    "start": "473580",
    "end": "480360"
  },
  {
    "text": "um so that you know that's where you this kind of idea of blast radius is kind of",
    "start": "480360",
    "end": "486380"
  },
  {
    "text": "happens you know you don't get as much blast radius um so the more efficient scaling",
    "start": "486380",
    "end": "492840"
  },
  {
    "text": "um since you don't have to worry about the capacity Downstream uh as long as the queue system holds out uh then you",
    "start": "492840",
    "end": "500160"
  },
  {
    "text": "can scale up the Upstream services to handle whatever load they're dealing with so if you're getting lots of users",
    "start": "500160",
    "end": "505979"
  },
  {
    "text": "being added um the you know it's not gonna affect that send email service because all the",
    "start": "505979",
    "end": "512880"
  },
  {
    "text": "messages go into a queue and they're just ticking away processing those sending the emails out",
    "start": "512880",
    "end": "518820"
  },
  {
    "text": "um assuming that of course you know the queue doesn't get I'm not going to say",
    "start": "518820",
    "end": "523919"
  },
  {
    "text": "Fool's the wrong word overloaded because um and then it's going to take a long time for those messages to get sent out",
    "start": "523919",
    "end": "530100"
  },
  {
    "text": "those emails get sent out however um venue scale up using like because",
    "start": "530100",
    "end": "535680"
  },
  {
    "text": "you've got those queue metrics you've got the number of um messages on a queue so you can scale those workers out should you want to",
    "start": "535680",
    "end": "543420"
  },
  {
    "text": "um and the reason that more messages going on to the queue is not going to affect the stability of the workers is",
    "start": "543420",
    "end": "551160"
  },
  {
    "text": "because the queue is a buffer you know um you uh so if you're Downstream",
    "start": "551160",
    "end": "557220"
  },
  {
    "text": "Services you know aren't becoming overloaded because and they they are just gradually working through those those messages",
    "start": "557220",
    "end": "563580"
  },
  {
    "text": "um then you can just leave the number of workers as they are I'd say if you want scale UPS make sure everything gets sent in a good time if the time is an issue",
    "start": "563580",
    "end": "570899"
  },
  {
    "text": "great if not they'll get them eventually um",
    "start": "570899",
    "end": "576240"
  },
  {
    "text": "and then the agility so if you want to add a new service to this so you want to have",
    "start": "576240",
    "end": "582720"
  },
  {
    "text": "something else that's listening to the that's going to work from the that add user message you add it in the ad user",
    "start": "582720",
    "end": "589380"
  },
  {
    "text": "service doesn't care the send email service doesn't care you're just subscribing to that same message so",
    "start": "589380",
    "end": "594720"
  },
  {
    "text": "um assuming you're using some some like publishing Subscription Service",
    "start": "594720",
    "end": "599940"
  },
  {
    "text": "um yeah no it doesn't the those other services don't care about this new service so you can just go ahead add",
    "start": "599940",
    "end": "606959"
  },
  {
    "text": "them in and it shouldn't affect the rest of the system",
    "start": "606959",
    "end": "611959"
  },
  {
    "text": "so what if you could make changes to your infrastructure based on those discrete events that have produced",
    "start": "613320",
    "end": "619860"
  },
  {
    "text": "um so confession time first when writing this talk I realized that there are actually",
    "start": "619860",
    "end": "625620"
  },
  {
    "text": "um some ways of doing this that go against the tenets of event-driven infrastructure so everything I've just said",
    "start": "625620",
    "end": "631019"
  },
  {
    "text": "it's something you can do but more often than not you won't um hence why this is called uh this is",
    "start": "631019",
    "end": "636360"
  },
  {
    "text": "not called event driven infrastructure but rather reactive infrastructure",
    "start": "636360",
    "end": "641580"
  },
  {
    "text": "um I also also point out that I've completely made up for the term reactive infrastructure so as a name for this",
    "start": "641580",
    "end": "646620"
  },
  {
    "text": "concept so um remember you heard it here first and also if it turns out if you Google it you're going to get a lot of results around reactive programming or",
    "start": "646620",
    "end": "653760"
  },
  {
    "text": "the react framework um so I've still got some SEO work to do there",
    "start": "653760",
    "end": "659540"
  },
  {
    "text": "so let's talk about what's not okay so this is something I've made up this is what I would not consider reactive",
    "start": "660420",
    "end": "666600"
  },
  {
    "text": "infrastructure so these so these I keep thinking of the screen here um so",
    "start": "666600",
    "end": "672300"
  },
  {
    "text": "um these two methods are kind of how most people deploy infrastructure at the moment",
    "start": "672300",
    "end": "677459"
  },
  {
    "text": "um so the GitHub says you know you make some change in a tool like palumi or terraform or cloudformation you push it",
    "start": "677459",
    "end": "682980"
  },
  {
    "text": "to your Source control um probably get and then um that triggers some CI CD tool",
    "start": "682980",
    "end": "689700"
  },
  {
    "text": "um you may even do click off so literally pointing clicking in uh the cloud provider's Administration tool now",
    "start": "689700",
    "end": "697140"
  },
  {
    "text": "some people judge on that I it is 100 a valid way of deploying infrastructure if you want to go and point-and-click",
    "start": "697140",
    "end": "702300"
  },
  {
    "text": "because you find it the easiest and it works for you do it however it can be prone to mistakes so if you do this and",
    "start": "702300",
    "end": "708720"
  },
  {
    "text": "don't want to I'm hoping kind of everyone here does something like infrastructure is code of automation but",
    "start": "708720",
    "end": "714779"
  },
  {
    "text": "if you don't and you want to talk about it um I'm around gonna be around for a few hours afterwards or if you're rushing to",
    "start": "714779",
    "end": "720600"
  },
  {
    "text": "catch a plane you couldn't email me so this is actually how I'm defining the",
    "start": "720600",
    "end": "726420"
  },
  {
    "text": "term so reactive infrastructure changing infrastructure by reacting to an event or signal from another system",
    "start": "726420",
    "end": "732600"
  },
  {
    "text": "what does this look like so um your Source emits an event uh it may be pager Duty so your page",
    "start": "732600",
    "end": "739140"
  },
  {
    "text": "Duty um you can configure page Duty so it sends out an event a web hook or",
    "start": "739140",
    "end": "744899"
  },
  {
    "text": "something like that it may be that a new customer has entered their credit card details",
    "start": "744899",
    "end": "751140"
  },
  {
    "text": "um for your SAS and started paying for your service you may want to build infrastructure that you may have a multi",
    "start": "751140",
    "end": "756959"
  },
  {
    "text": "tenanted service that you then need to go and deploy because they've paid money",
    "start": "756959",
    "end": "762060"
  },
  {
    "text": "uh you may also want to trigger changes based on the resources you've already created uh for example if you use",
    "start": "762060",
    "end": "768120"
  },
  {
    "text": "something like tail scale or strong DM um or similar and you want to add your",
    "start": "768120",
    "end": "774600"
  },
  {
    "text": "newly created kubernetes cluster to that one of those Services you can do that as well",
    "start": "774600",
    "end": "779820"
  },
  {
    "text": "and depending on the source this might be an HTTP request a web hook which is the whole why it's not event driven or",
    "start": "779820",
    "end": "787500"
  },
  {
    "text": "it may be used something like eventbridge or Google pops up or something like that to push the event",
    "start": "787500",
    "end": "793700"
  },
  {
    "text": "um so some of those third party some there are some like sort of third-party services that do use eventbridge for",
    "start": "794160",
    "end": "800399"
  },
  {
    "text": "example um page UTS stripe does auth zero so if you use any of those you can actually push their events into",
    "start": "800399",
    "end": "807480"
  },
  {
    "text": "eventbridge and then use them from on there um for those that don't",
    "start": "807480",
    "end": "812940"
  },
  {
    "text": "um you'll probably have to set up um to receive the web like set up a web hook",
    "start": "812940",
    "end": "819060"
  },
  {
    "text": "um so that you can receive an HTTP request via a Gateway or similar",
    "start": "819060",
    "end": "825060"
  },
  {
    "text": "um and then the deployment is kind of where it gets interesting because you'll want to build some kind of application",
    "start": "825060",
    "end": "830100"
  },
  {
    "text": "that handles their messages um to respond to the HTTP request",
    "start": "830100",
    "end": "836820"
  },
  {
    "text": "um so you could build something that uses uh one of like the cloud provider sdks",
    "start": "836820",
    "end": "842639"
  },
  {
    "text": "um to change your infrastructure you could use something like uh terraform exec um again valid option",
    "start": "842639",
    "end": "848760"
  },
  {
    "text": "um I found it a bit restrictive because it's only in go I've got nothing yet to go but you know there's other languages",
    "start": "848760",
    "end": "855540"
  },
  {
    "text": "that palomi supports for example um and it's nice to have a wider range",
    "start": "855540",
    "end": "861300"
  },
  {
    "text": "um and then yeah so you could use uh probably these automation API um",
    "start": "861300",
    "end": "867839"
  },
  {
    "text": "so this is so automation API is a programmatic interface um for running polymer commands right",
    "start": "867839",
    "end": "874800"
  },
  {
    "text": "we're sorry running premium programs uh without actually running the CLI so it's um basically a wrapper",
    "start": "874800",
    "end": "882000"
  },
  {
    "text": "around the functionality of the CLI um and what that means is you can embed it into web services apis you can even",
    "start": "882000",
    "end": "888660"
  },
  {
    "text": "build your own CLI that uses automation API to wrap around the functionality of the polluting CLI if you want to",
    "start": "888660",
    "end": "895199"
  },
  {
    "text": "actually um some of my colleagues who've done really successful proof of concepts with that",
    "start": "895199",
    "end": "900779"
  },
  {
    "text": "um and it also allows you to build custom workflows on top of palumi so um you can actually rather than kind of",
    "start": "900779",
    "end": "907740"
  },
  {
    "text": "orchestrating different um kind of different updates as different steps in the CI CD you can",
    "start": "907740",
    "end": "913440"
  },
  {
    "text": "actually run multiple updates from kind of one application um and kind of build out your your",
    "start": "913440",
    "end": "919740"
  },
  {
    "text": "infrastructure like that um so I'm going to do a demo it's going to involve the automation API so the story",
    "start": "919740",
    "end": "927120"
  },
  {
    "text": "here is that we have customers that sign up to our service and for their well-earned cash they get a custom S3",
    "start": "927120",
    "end": "933540"
  },
  {
    "text": "bucket with an HTML5 HTML file in it and contains the text of their choice it's",
    "start": "933540",
    "end": "938579"
  },
  {
    "text": "nothing special I'm not going to show you how to kind of build like how what resources you need to kind of build API",
    "start": "938579",
    "end": "945720"
  },
  {
    "text": "Gateway to Lambda to whatever because that's not what you're here to see",
    "start": "945720",
    "end": "951959"
  },
  {
    "text": "um so I'm just gonna do it very very sort of simple demo um I'm going to build the API there are fake payment",
    "start": "951959",
    "end": "957420"
  },
  {
    "text": "provider is going to make a request to whenever a payment so the payment provider whoever that is makes a request",
    "start": "957420",
    "end": "964380"
  },
  {
    "text": "to a web hook um to say that the customer's paid um I've built this in",
    "start": "964380",
    "end": "970380"
  },
  {
    "text": "um using the minimalapis in.net6 um so that's going to include the",
    "start": "970380",
    "end": "975839"
  },
  {
    "text": "balloon automation API and we're going to use that to Define our resources in",
    "start": "975839",
    "end": "980880"
  },
  {
    "text": "AWS so uh cool okay so I've got a very basic",
    "start": "980880",
    "end": "989279"
  },
  {
    "text": "um let me make this a bit bigger um so what I've got here it's a very basic kind of um",
    "start": "989279",
    "end": "996600"
  },
  {
    "text": "set up to minimum API um we're going to have uh four endpoints so we're gonna",
    "start": "996600",
    "end": "1003019"
  },
  {
    "text": "the post um a get list a get item and a delete",
    "start": "1003019",
    "end": "1008300"
  },
  {
    "text": "item so at the top I've I wouldn't normally suggest use regions not",
    "start": "1008300",
    "end": "1013459"
  },
  {
    "text": "particularly nice but just to hide like all the standards Swagger and minimum API setup",
    "start": "1013459",
    "end": "1022040"
  },
  {
    "text": "um I've got a couple of logging methods project names I'm going to use that many places um",
    "start": "1022040",
    "end": "1027918"
  },
  {
    "text": "so the first thing we need to do in this is create what's called a workspace",
    "start": "1027919",
    "end": "1033280"
  },
  {
    "text": "so workspace is kind of like the palumi context it normally has one polluting project so a prelimi project is a",
    "start": "1033280",
    "end": "1041058"
  },
  {
    "text": "um is your code basically um it's your definite is your resource definitions and the workspace is a",
    "start": "1041059",
    "end": "1048919"
  },
  {
    "text": "context of one project it may have multiple Stacks Stacks are environments that you deploy your blueberry project program two",
    "start": "1048919",
    "end": "1056360"
  },
  {
    "text": "um think of them as environments so they may be in the same account they may be in different accounts they may be in different",
    "start": "1056360",
    "end": "1062120"
  },
  {
    "text": "regions for this case I'm gonna have one project and multiple Stacks one",
    "start": "1062120",
    "end": "1068419"
  },
  {
    "text": "stack for each website and I'll show you how we can call them later so",
    "start": "1068419",
    "end": "1074660"
  },
  {
    "text": "yeah of course better or bigger cool okay",
    "start": "1074660",
    "end": "1080059"
  },
  {
    "text": "um so I've written all this code I've got I've you know I've got Snippets here rather than you watching me make loads",
    "start": "1080059",
    "end": "1086240"
  },
  {
    "text": "of mistakes so um first thing we do is create the workspace",
    "start": "1086240",
    "end": "1091880"
  },
  {
    "text": "um which um I say creates the workspace we've got",
    "start": "1091880",
    "end": "1096980"
  },
  {
    "text": "we're creating we've got project settings and then we're installing the AWS plugin so as I said before what this",
    "start": "1096980",
    "end": "1102440"
  },
  {
    "text": "is actually doing is it's running palumi it's a wrap around the CLI and it is actually running the CLI behind the",
    "start": "1102440",
    "end": "1107780"
  },
  {
    "text": "scenes um I'm running here what's called an inline program which means it's part of",
    "start": "1107780",
    "end": "1113600"
  },
  {
    "text": "the code you can run a standard polluting project so if you run plumenu you'll get a prelimi new AWS typescript",
    "start": "1113600",
    "end": "1119900"
  },
  {
    "text": "you'll get a palumi program that will allow you to deploy an S3 bucket to AWS there it's a template it'll set up for",
    "start": "1119900",
    "end": "1128299"
  },
  {
    "text": "you you can have that in a separate folder and actually point target the automation",
    "start": "1128299",
    "end": "1134059"
  },
  {
    "text": "API at that um but in this case I'm running it in line and I'll show you the the resources",
    "start": "1134059",
    "end": "1139220"
  },
  {
    "text": "and how I'm doing that in a minute so I'm installing plugins um",
    "start": "1139220",
    "end": "1144620"
  },
  {
    "text": "doing that um then the next thing I'm going to um set the stack config so here I'm set it",
    "start": "1144620",
    "end": "1152120"
  },
  {
    "text": "saying deploy this to eus1 um because it's code you can you know you can set it anywhere you can grab",
    "start": "1152120",
    "end": "1158059"
  },
  {
    "text": "this for environment variables um however you want to and then let's start with the the post",
    "start": "1158059",
    "end": "1165620"
  },
  {
    "text": "let's create a site um so",
    "start": "1165620",
    "end": "1171500"
  },
  {
    "text": "um first of all the first thing I need to do is create the premium program so I'm going to scroll right down to where it is here so a pretty program if",
    "start": "1171500",
    "end": "1178880"
  },
  {
    "text": "you've done anything with plume before it'll look very similar um if you've not done plume but you've",
    "start": "1178880",
    "end": "1184340"
  },
  {
    "text": "done terraform a lot of the resource names will look very similar um but yeah so and and kind of the",
    "start": "1184340",
    "end": "1191120"
  },
  {
    "text": "structure will look very similar so first of all we're going to create a S3 bucket we're going to have it as a",
    "start": "1191120",
    "end": "1196220"
  },
  {
    "text": "website and we're going to have the index document as index.html pretty standard",
    "start": "1196220",
    "end": "1201440"
  },
  {
    "text": "um then we're going to create a bucket object so this is going to be the index.html file in the S3 bucket",
    "start": "1201440",
    "end": "1208820"
  },
  {
    "text": "um you'll notice that the so bucket I'm pointing at the website bucket so I",
    "start": "1208820",
    "end": "1216500"
  },
  {
    "text": "don't need to kind of know what the name is in advance or anything like that I'm just going to create one so the bucket you'll notice I'm calling site name so",
    "start": "1216500",
    "end": "1222799"
  },
  {
    "text": "whatever I call the site it'll have that as the the bucket name",
    "start": "1222799",
    "end": "1228260"
  },
  {
    "text": "um and then because I don't know what's that necessarily going to be we Auto name",
    "start": "1228260",
    "end": "1233660"
  },
  {
    "text": "um resources because then you kind of don't get like S3 is glow all the buckets need to be globally unique so if",
    "start": "1233660",
    "end": "1241760"
  },
  {
    "text": "um all the buckets are called pairs all the buckets called palumi you're going to have problems so we do",
    "start": "1241760",
    "end": "1247160"
  },
  {
    "text": "bucket name hyphen random characters afterwards you'll see that um in the",
    "start": "1247160",
    "end": "1253520"
  },
  {
    "text": "bucket name later but because I don't know what those random character is going to be I need to point",
    "start": "1253520",
    "end": "1258860"
  },
  {
    "text": "um the bucket kind of property of the bucket object at that at that variable",
    "start": "1258860",
    "end": "1265340"
  },
  {
    "text": "the content you'll see I'm actually just grabbing from the function parameter the method",
    "start": "1265340",
    "end": "1270740"
  },
  {
    "text": "parameter um I'm calling index.html and I'm saying",
    "start": "1270740",
    "end": "1275900"
  },
  {
    "text": "it's I'm uploading it as HTML because I always um you were able to um",
    "start": "1275900",
    "end": "1282640"
  },
  {
    "text": "you want to serve up as HTML content um so the next couple of bits are the kind of the slightly less",
    "start": "1282919",
    "end": "1289220"
  },
  {
    "text": "interesting bits so first of all I'm um",
    "start": "1289220",
    "end": "1294400"
  },
  {
    "text": "so I'm defining a bucket policy so you can see we've got the policy here so it's allow AWS",
    "start": "1294440",
    "end": "1302360"
  },
  {
    "text": "doing the S3 dot get object and so we take it so we've got an on I'll show you how we get in a minute and we're just",
    "start": "1302360",
    "end": "1308240"
  },
  {
    "text": "saying get so this is basically get all the objects in that S3 bucket",
    "start": "1308240",
    "end": "1313460"
  },
  {
    "text": "so we've got the on so what I've done up here so website dot on",
    "start": "1313460",
    "end": "1319400"
  },
  {
    "text": "is the is going to be when we create the bucket it's going to have an on it that's the um like the resource name",
    "start": "1319400",
    "end": "1325220"
  },
  {
    "text": "that Amazon gives it Amazon resource name um I think so but because we don't know",
    "start": "1325220",
    "end": "1330740"
  },
  {
    "text": "what it is yet at this point in time the bucket doesn't exist we don't know what it's going to be",
    "start": "1330740",
    "end": "1335840"
  },
  {
    "text": "um so what we need to do is use what employment we call and apply and what this does is it says once",
    "start": "1335840",
    "end": "1343520"
  },
  {
    "text": "you've got it you can run this code once you've got that Arn you can run this code um and all we're doing is creating this",
    "start": "1343520",
    "end": "1350539"
  },
  {
    "text": "policy document from that um if you've used palumi you'll know that apply all outputs inputs are some",
    "start": "1350539",
    "end": "1356659"
  },
  {
    "text": "of the trickiest things in Plume because of the way um it's kind of all like asynchronous especially in things like",
    "start": "1356659",
    "end": "1362780"
  },
  {
    "text": "JavaScript because it's asynchronous and it's you basically have to go with it",
    "start": "1362780",
    "end": "1368360"
  },
  {
    "text": "um again if you have problems with this later on give me a shout um or we can talk about it afterwards",
    "start": "1368360",
    "end": "1374659"
  },
  {
    "text": "but it's basically think of it as a promise in JavaScript or typescript it's it's basically a promise",
    "start": "1374659",
    "end": "1380720"
  },
  {
    "text": "um so that's the Prodigy document then we're going to create the bucket policy",
    "start": "1380720",
    "end": "1386620"
  },
  {
    "text": "pretty standard and then we're going to grab an output so what this means is when the polumi program is run it's",
    "start": "1386659",
    "end": "1394580"
  },
  {
    "text": "basically like a return statement so um when the filming program runs I'm marking in this case it's going to be",
    "start": "1394580",
    "end": "1401240"
  },
  {
    "text": "the website URL so the S3 website URL mark it as an output so I can access it in other places if you're using it just",
    "start": "1401240",
    "end": "1408080"
  },
  {
    "text": "a normal preview program you can get it by doing polumi stack output",
    "start": "1408080",
    "end": "1413179"
  },
  {
    "text": "um uh output name because it's here we can use it and actually access it through a",
    "start": "1413179",
    "end": "1419900"
  },
  {
    "text": "variable later on but it looks like that so it's basically a dictionary",
    "start": "1419900",
    "end": "1427000"
  },
  {
    "text": "and you see this is the bucket and it's the website endpoint of the bucket",
    "start": "1429520",
    "end": "1436000"
  },
  {
    "text": "uh so far not hugely exciting so um then we're gonna",
    "start": "1436520",
    "end": "1442100"
  },
  {
    "text": "um we're gonna so create a stack so as I said before stack is an environment for",
    "start": "1442100",
    "end": "1449179"
  },
  {
    "text": "um uh uh for for the deployment um I'm setting the conflicts I'm setting",
    "start": "1449179",
    "end": "1455720"
  },
  {
    "text": "it to EOS one um and then I'm going to run I'm going to run the equivalent of pollute me up",
    "start": "1455720",
    "end": "1463000"
  },
  {
    "text": "so this is running up the up it's taking that output that we had earlier from the dictionary and put it into a variable so",
    "start": "1463400",
    "end": "1469220"
  },
  {
    "text": "that then I can instead of calling results to ok I can call",
    "start": "1469220",
    "end": "1475720"
  },
  {
    "text": "um I can actually return something useful um",
    "start": "1476659",
    "end": "1482020"
  },
  {
    "text": "so I'm just gonna comment this bit out",
    "start": "1482020",
    "end": "1486700"
  },
  {
    "text": "so I'm just commenting um some code out so that I can then run this and I can show you what's going on",
    "start": "1487460",
    "end": "1493340"
  },
  {
    "text": "um so I've already logged into Amazon with",
    "start": "1493340",
    "end": "1500960"
  },
  {
    "text": "my SSO login so um I don't use that again so if I if I now build this",
    "start": "1500960",
    "end": "1508539"
  },
  {
    "text": "build cool okay and then if I do run",
    "start": "1509480",
    "end": "1515440"
  },
  {
    "text": "so you know standard program it's 1.8 000 um I've set up Swagger",
    "start": "1517280",
    "end": "1524840"
  },
  {
    "text": "um because that's useful um which means then I can go to here and",
    "start": "1524840",
    "end": "1531080"
  },
  {
    "text": "I can refresh this and I can run a post so I",
    "start": "1531080",
    "end": "1536840"
  },
  {
    "text": "can you know I could run code but I'm going to do it here so if I call the name",
    "start": "1536840",
    "end": "1542120"
  },
  {
    "text": "appears and I do hello Oslo and then run this so whilst that's",
    "start": "1542120",
    "end": "1548480"
  },
  {
    "text": "running I'm going to go back to here and you can see here it's running plume kind",
    "start": "1548480",
    "end": "1553520"
  },
  {
    "text": "of messages so it's outputting pulling messages to the um to the logs to the in this case the screen so it's creating the bucket uh",
    "start": "1553520",
    "end": "1561260"
  },
  {
    "text": "it's created the objects upload the object let's create the policy and here you go you can see here we've got this",
    "start": "1561260",
    "end": "1566779"
  },
  {
    "text": "the website URL so there you so that's the bucket name so peers the name of the site there's the auto naming that I was",
    "start": "1566779",
    "end": "1574760"
  },
  {
    "text": "talking about so that that suffix and then you've got the standard S3 website URL",
    "start": "1574760",
    "end": "1582020"
  },
  {
    "text": "so what that means is I can actually copy and paste this",
    "start": "1582020",
    "end": "1586960"
  },
  {
    "text": "and pop it in here and you've got hello",
    "start": "1588080",
    "end": "1594880"
  },
  {
    "text": "yeah that's not right that's the one and you've got headers low um",
    "start": "1595100",
    "end": "1600500"
  },
  {
    "text": "so yeah so what so we've taken there we've um we've created a complete program we've defined our infrastructure",
    "start": "1600500",
    "end": "1606860"
  },
  {
    "text": "to find our Ashley bracket we've uploaded the content as a string to the bucket",
    "start": "1606860",
    "end": "1612260"
  },
  {
    "text": "um and it's given us an output and it's given us the website URL um and that's all very well but actually",
    "start": "1612260",
    "end": "1618740"
  },
  {
    "text": "it would be more useful to um to kind of run other things as well so",
    "start": "1618740",
    "end": "1625100"
  },
  {
    "text": "um let's now look at so you know let's see a list of the sites we've we've created",
    "start": "1625100",
    "end": "1631220"
  },
  {
    "text": "because we you know you've got a user coming along they want to see all the sites they're paying for let's give them",
    "start": "1631220",
    "end": "1636860"
  },
  {
    "text": "that list um so all these calls actually call some so",
    "start": "1636860",
    "end": "1642919"
  },
  {
    "text": "the the non-polomy up ones are actually calling uh into our polluting service",
    "start": "1642919",
    "end": "1650059"
  },
  {
    "text": "um I uh if you want to know about the blue service I can talk about offers but basically a way of managing your state",
    "start": "1650059",
    "end": "1656539"
  },
  {
    "text": "um it's a painful thing that we offer um but that's what this is doing so this is",
    "start": "1656539",
    "end": "1661760"
  },
  {
    "text": "um I'm going to list all the stacks uh we're going to Loop through those and we're literally going to add them to a",
    "start": "1661760",
    "end": "1667100"
  },
  {
    "text": "we're going to get the outputs um select stack get the outputs",
    "start": "1667100",
    "end": "1673279"
  },
  {
    "text": "and then add them to a list and then return the list",
    "start": "1673279",
    "end": "1679520"
  },
  {
    "text": "um so again nothing a pretty standard application but in",
    "start": "1679520",
    "end": "1684559"
  },
  {
    "text": "this case you can then go and see we've so we've had the post so the post um would be the one that that web hooks",
    "start": "1684559",
    "end": "1691820"
  },
  {
    "text": "that the the payment Gateway or whatever would call and it would create the site based on",
    "start": "1691820",
    "end": "1697039"
  },
  {
    "text": "input from the user but then we can also use um the the automation API to actually",
    "start": "1697039",
    "end": "1703400"
  },
  {
    "text": "build the rest of the the application as that's running so we can go back to",
    "start": "1703400",
    "end": "1708799"
  },
  {
    "text": "Swagger we can do sites",
    "start": "1708799",
    "end": "1714620"
  },
  {
    "text": "execute and then we'll get a list of the sites and information about it",
    "start": "1714620",
    "end": "1720559"
  },
  {
    "text": "um okay so yeah so there we go you can see",
    "start": "1720559",
    "end": "1728419"
  },
  {
    "text": "I'll make that a bit bigger you know we've got we've got the site name we've got the website URL",
    "start": "1728419",
    "end": "1734480"
  },
  {
    "text": "um you can also do kind of a sort of a get site as well but the main one the main",
    "start": "1734480",
    "end": "1740840"
  },
  {
    "text": "other one I'm going to do here is a delete um so",
    "start": "1740840",
    "end": "1747260"
  },
  {
    "text": "grab my code let's do the delete site so this is going to be",
    "start": "1747260",
    "end": "1754820"
  },
  {
    "text": "if you know you they're not paying any more whatever you delete it this is going to actually destroy it so this is",
    "start": "1754820",
    "end": "1760279"
  },
  {
    "text": "going to tear down all that infrastructure um so this one will again show polluting the output in the in the logs",
    "start": "1760279",
    "end": "1767000"
  },
  {
    "text": "um so if I then",
    "start": "1767000",
    "end": "1772399"
  },
  {
    "text": "so all I've done here is I've added code um we're going to again select the stack that we're working on go and destroy it",
    "start": "1772399",
    "end": "1779179"
  },
  {
    "text": "and we're going to delete the stack um to tidy up after ourselves so this this line is actually destroying the infrastructure this is the line that",
    "start": "1779179",
    "end": "1785539"
  },
  {
    "text": "deletes everything from Amazon um and this just tied these up after ourselves in the palumi infrastructure",
    "start": "1785539",
    "end": "1792799"
  },
  {
    "text": "um try out name is peers",
    "start": "1792799",
    "end": "1799720"
  },
  {
    "text": "run this again you'll see it's running palumi code um",
    "start": "1800059",
    "end": "1805960"
  },
  {
    "text": "deleting everything so it's difficult to the infrastructure it's going to go ahead now and delete the stack there so",
    "start": "1806659",
    "end": "1812659"
  },
  {
    "text": "if I go back to my the bucket's gone code's gone customer's",
    "start": "1812659",
    "end": "1818240"
  },
  {
    "text": "gone away we're done um",
    "start": "1818240",
    "end": "1824080"
  },
  {
    "text": "yeah so um that's that's the demo um",
    "start": "1824840",
    "end": "1830260"
  },
  {
    "text": "uh so a couple of other things I wanted to mention um so if if you're interested in polumi",
    "start": "1830960",
    "end": "1838760"
  },
  {
    "text": "if you want to learn more about palumi uh we're running a couple of cloud engineering days free virtual event on the second and third of November",
    "start": "1838760",
    "end": "1845480"
  },
  {
    "text": "um QR code for the link um if you want to know more about",
    "start": "1845480",
    "end": "1851419"
  },
  {
    "text": "um yeah so we're doing demos we're doing Hands-On stuff uh we're Hands-On workshops we're doing um",
    "start": "1851419",
    "end": "1856940"
  },
  {
    "text": "uh best practices and all those kind of things as also hackathon um and then I'm doing a workshop on the",
    "start": "1856940",
    "end": "1862399"
  },
  {
    "text": "third uh 4 P.M uh again free on service architect on AWS if you're interested in registering that's the um",
    "start": "1862399",
    "end": "1870080"
  },
  {
    "text": "QR code for that um yeah thank you very much um if anyone has any questions I will happily answer",
    "start": "1870080",
    "end": "1876260"
  },
  {
    "text": "them um otherwise um yeah thank you for coming and I hope you have a safe journey home",
    "start": "1876260",
    "end": "1882640"
  },
  {
    "text": "[Applause] are there any questions yeah",
    "start": "1883840",
    "end": "1891278"
  },
  {
    "text": "it can only describe the types of objects and really cannot not put any",
    "start": "1896899",
    "end": "1902120"
  },
  {
    "text": "information on London things and of course the purely",
    "start": "1902120",
    "end": "1907220"
  },
  {
    "text": "to kind of current state in in the class",
    "start": "1907220",
    "end": "1912820"
  },
  {
    "text": "no I don't disagree um you can do all this in gitups um what I'm kind of and again absolutely",
    "start": "1914059",
    "end": "1920659"
  },
  {
    "text": "valid you're not going to use the reactive stuff for everything um so sorry the question was is githubs",
    "start": "1920659",
    "end": "1925760"
  },
  {
    "text": "is GitHub still still valid basically you know you can do a lot with kit Ops yes it's 100 still valid",
    "start": "1925760",
    "end": "1931640"
  },
  {
    "text": "um and I would never say do this for everything this is where you want to control your deployments based on as I",
    "start": "1931640",
    "end": "1937460"
  },
  {
    "text": "said outside influences outside services so for your basic setup",
    "start": "1937460",
    "end": "1942559"
  },
  {
    "text": "um so your base your base set up so your your vpcs your your app your base applications your kubernetes clusters",
    "start": "1942559",
    "end": "1949039"
  },
  {
    "text": "all those kind of things 100 use get UPS get UPS um",
    "start": "1949039",
    "end": "1954320"
  },
  {
    "text": "uh yeah still carry on doing that deploy it using cicd have those kind of manage that manage the the review the review",
    "start": "1954320",
    "end": "1960679"
  },
  {
    "text": "cycle everything like that to make sure you got it right but then you could have the opportunity to also update it based",
    "start": "1960679",
    "end": "1965779"
  },
  {
    "text": "on the input of another application but yes githubs is so I would use this in",
    "start": "1965779",
    "end": "1971360"
  },
  {
    "text": "combination with githubs um I wouldn't just use this this is a yeah it's a combination thing",
    "start": "1971360",
    "end": "1977919"
  },
  {
    "text": "anything else yeah",
    "start": "1978799",
    "end": "1983919"
  },
  {
    "text": "uh great question how would you organize how would you manage the state so um if you're using palumi",
    "start": "1987799",
    "end": "1993620"
  },
  {
    "text": "um you'd use this you'd manage the state in the same way that you would manage any other plumey state so you can use the blue service you can use S3 uh Azure",
    "start": "1993620",
    "end": "2001480"
  },
  {
    "text": "blob storage um Google file storage um or local file system if you want",
    "start": "2001480",
    "end": "2008440"
  },
  {
    "text": "um you'd you'd manage your storage in these access your State Storage in exactly the same way",
    "start": "2008440",
    "end": "2013480"
  },
  {
    "text": "um so when I was doing this my stacks were my state was stored in the palumi service",
    "start": "2013480",
    "end": "2019240"
  },
  {
    "text": "um in exact same way so I have a project and each um each stack",
    "start": "2019240",
    "end": "2025000"
  },
  {
    "text": "um has kind of its own State and I'm just updating the state of that one stack within the project but it's all",
    "start": "2025000",
    "end": "2030399"
  },
  {
    "text": "stored in the cloud in the plumy cloud service but yeah exactly the same way as you",
    "start": "2030399",
    "end": "2036100"
  },
  {
    "text": "would um store you store the state of any other blooming project you're using",
    "start": "2036100",
    "end": "2042059"
  },
  {
    "text": "anything else oh yeah yeah",
    "start": "2044260",
    "end": "2049380"
  },
  {
    "text": "um",
    "start": "2049540",
    "end": "2051540"
  },
  {
    "text": "much more declarative yes",
    "start": "2055020",
    "end": "2059158"
  },
  {
    "text": "yeah it is there's some great blog posts in fact there's a very recent one on our site so the comment I an even question",
    "start": "2061260",
    "end": "2068679"
  },
  {
    "text": "but I'll just say the common there declarative versus imperative um so yes you're using predictive",
    "start": "2068679",
    "end": "2074080"
  },
  {
    "text": "program languages but because palumi builds out this declarative graph under the hood it is technically declarative",
    "start": "2074080",
    "end": "2079720"
  },
  {
    "text": "but you're using Turing you know imperative language to Define it but you're defining what goes into that",
    "start": "2079720",
    "end": "2085720"
  },
  {
    "text": "declarative state carry on",
    "start": "2085720",
    "end": "2090000"
  },
  {
    "text": "yeah so so we have we have a feature that um what is it called it pin to",
    "start": "2093760",
    "end": "2098980"
  },
  {
    "text": "preview so the idea is that when so uh you can if you're running polluting up you can run polluting preview with um I",
    "start": "2098980",
    "end": "2106300"
  },
  {
    "text": "can't remember what the argument is but you can run access another argument which is basically output this is a Json",
    "start": "2106300",
    "end": "2111820"
  },
  {
    "text": "file and then you can use that the same way you would a terraform plan so you in the exact same way you telephone plan",
    "start": "2111820",
    "end": "2116980"
  },
  {
    "text": "you'd then apply the plan you can apply the output from the preview and you can",
    "start": "2116980",
    "end": "2123700"
  },
  {
    "text": "do that so um yeah you could totally do that",
    "start": "2123700",
    "end": "2127559"
  },
  {
    "text": "carry on",
    "start": "2130359",
    "end": "2132960"
  },
  {
    "text": "believe me um so the big well",
    "start": "2137320",
    "end": "2143280"
  },
  {
    "text": "where is it uh so question was about um support for cloud providers",
    "start": "2145480",
    "end": "2151000"
  },
  {
    "text": "um so uh we support all those providers",
    "start": "2151000",
    "end": "2156099"
  },
  {
    "text": "um so the big three uh Amazon Azure and Google Cloud um",
    "start": "2156099",
    "end": "2161440"
  },
  {
    "text": "we so Amazon sorry Azure we support the arm template as in we basically scrape",
    "start": "2161440",
    "end": "2167560"
  },
  {
    "text": "the arm templates and build out the SDK from that um AWS currently",
    "start": "2167560",
    "end": "2175180"
  },
  {
    "text": "um we cover the same endpoints as like the telephone provider but we are working with Amazon on their Cloud",
    "start": "2175180",
    "end": "2180940"
  },
  {
    "text": "control API and so we're going to have a new so once that's kind of all rolled out and they've got all their resource",
    "start": "2180940",
    "end": "2186700"
  },
  {
    "text": "on there it's going to be comparative with that so anything so you will have access to everything in Amazon and when",
    "start": "2186700",
    "end": "2192460"
  },
  {
    "text": "it gets released include Cloud control API it will be released within a few hours to plume kubernetes",
    "start": "2192460",
    "end": "2198400"
  },
  {
    "text": "um we scraped their open API spec so when a new version of the API comes out",
    "start": "2198400",
    "end": "2203920"
  },
  {
    "text": "they update their open API spec and we scrape that and build the SDK off that",
    "start": "2203920",
    "end": "2209079"
  },
  {
    "text": "um so it's a it's a one-to-one mapping um so we are normally a couple of hours",
    "start": "2209079",
    "end": "2215140"
  },
  {
    "text": "behind it because it takes a little while because everything's in go we have to do run all our automated testing we",
    "start": "2215140",
    "end": "2221859"
  },
  {
    "text": "then have to do releases in all the different um you know our CPU architectures and stuff like that so it takes a couple of",
    "start": "2221859",
    "end": "2228040"
  },
  {
    "text": "hours but we'll have it out in a few hours in fact once um actually we were",
    "start": "2228040",
    "end": "2233500"
  },
  {
    "text": "slightly ahead of the kubernetes API because they made a release and then rolled it back but we they told us that",
    "start": "2233500",
    "end": "2240400"
  },
  {
    "text": "they were going to release four to get rolled forward again so we just kind of left it um so we were actually ahead of the we",
    "start": "2240400",
    "end": "2246220"
  },
  {
    "text": "were we were very prophetic in that sense so we were actually ahead of their the open API spec at the time",
    "start": "2246220",
    "end": "2251740"
  },
  {
    "text": "um but yes but yeah we support all these um if you have a problem if you've used",
    "start": "2251740",
    "end": "2257440"
  },
  {
    "text": "anything you have issues please raise an issue email us support preview.com",
    "start": "2257440",
    "end": "2263200"
  },
  {
    "text": "yeah um was there one that you wanted to see",
    "start": "2263200",
    "end": "2268079"
  },
  {
    "text": "one last question yeah",
    "start": "2268480",
    "end": "2271680"
  },
  {
    "text": "the CLI all the providers automation API",
    "start": "2274839",
    "end": "2280960"
  },
  {
    "text": "um that's all free that's free open source if you go to github.com you can see we develop in the open uh we accept",
    "start": "2280960",
    "end": "2287980"
  },
  {
    "text": "PRS from um from people that want to update it um the paid for bit is the service so if",
    "start": "2287980",
    "end": "2293920"
  },
  {
    "text": "you want to use us as State Management we have things like",
    "start": "2293920",
    "end": "2299320"
  },
  {
    "text": "um and there we have uh we have like a secret provider so all your secrets are encrypted by default",
    "start": "2299320",
    "end": "2306520"
  },
  {
    "text": "um certain other similar infrastructure as code tools I won't mention you know if you look at the state file even if something's marked as a secret you can",
    "start": "2306520",
    "end": "2312460"
  },
  {
    "text": "see the decrypted value you can see the plain text value in the state um with palumi that's not the case so we",
    "start": "2312460",
    "end": "2318099"
  },
  {
    "text": "provide we have a sequence provider or you can use Amazon's KMS hash Club Vault any of",
    "start": "2318099",
    "end": "2324820"
  },
  {
    "text": "those kind of things Azure key Vault and whatever the Google Google equivalent is",
    "start": "2324820",
    "end": "2330579"
  },
  {
    "text": "um you can use those if you want to bring your own key um but yeah so that's in the service",
    "start": "2330579",
    "end": "2335920"
  },
  {
    "text": "SSO are back so you can control who deploys what stack to what if you think",
    "start": "2335920",
    "end": "2341260"
  },
  {
    "text": "of a stack as an environment so you have your Dev stack your staging stack in your prod stack you can say everyone",
    "start": "2341260",
    "end": "2346720"
  },
  {
    "text": "could deploy the dev stack which is your Dev environment but only the CI CD bot which has its own access token couldn't",
    "start": "2346720",
    "end": "2353560"
  },
  {
    "text": "deploy to production so you can gatekeep on that we also run uh policy as code we",
    "start": "2353560",
    "end": "2360220"
  },
  {
    "text": "have policies code tool so you can write policies in python typescript or open",
    "start": "2360220",
    "end": "2365440"
  },
  {
    "text": "policy agent um and Define policies to block deployments",
    "start": "2365440",
    "end": "2372400"
  },
  {
    "text": "before they even hit the provider and if you pay us you can do that automatically",
    "start": "2372400",
    "end": "2379720"
  },
  {
    "text": "basically so that's the business model um we have uh",
    "start": "2379720",
    "end": "2385420"
  },
  {
    "text": "um we have you know",
    "start": "2385420",
    "end": "2388500"
  },
  {
    "text": "oh yeah if like well you know if you're using pollute me we'll support you uh we'll help you out",
    "start": "2390460",
    "end": "2396400"
  },
  {
    "text": "um obviously if you pay for it you can get more things you can get Workshop private workshops you can get extra help",
    "start": "2396400",
    "end": "2403300"
  },
  {
    "text": "um but we will always support you we're there for our users be it whether they pay for pay us or not we will help them",
    "start": "2403300",
    "end": "2409060"
  },
  {
    "text": "because we want you to succeed and if you if you start to succeed it may come",
    "start": "2409060",
    "end": "2414220"
  },
  {
    "text": "a time where actually you want to pay us because you want to use the service because you don't want to manage your own S3 buckets and all the iron roles",
    "start": "2414220",
    "end": "2420460"
  },
  {
    "text": "that you need to con to make sure no one else no one has access to it and all those kind of things",
    "start": "2420460",
    "end": "2425800"
  },
  {
    "text": "um yeah so we're kind of looking at the long game there",
    "start": "2425800",
    "end": "2430859"
  },
  {
    "text": "anything else although you've done it cool okay well thank you very much folks have uh yeah",
    "start": "2432280",
    "end": "2437800"
  },
  {
    "text": "have safe flight time if you're if you're leaving the country or driving home if you're not",
    "start": "2437800",
    "end": "2443520"
  }
]