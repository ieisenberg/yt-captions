[
  {
    "text": "all right everybody welcome to in DC Sydney my name is Mike I have the",
    "start": "7090",
    "end": "13250"
  },
  {
    "text": "distinct privilege of trying to follow Scott Hanselman I promise that I probably won't be anywhere near as entertaining as that guy",
    "start": "13250",
    "end": "19960"
  },
  {
    "text": "this session is called a picture's worth a thousand lines of code it's about visualizing software systems but",
    "start": "19960",
    "end": "25220"
  },
  {
    "text": "stepping back from your code and actually getting an overall picture of what your system is doing and how it",
    "start": "25220",
    "end": "30710"
  },
  {
    "text": "works I'm going to start with a bit of a personal story from my own history and",
    "start": "30710",
    "end": "36140"
  },
  {
    "text": "then we'll look at a technique for designing and visualizing software architecture called c4 is pioneered by a",
    "start": "36140",
    "end": "42560"
  },
  {
    "text": "guy called Simon Brown we'll look at a tool which is used to automate see for",
    "start": "42560",
    "end": "48260"
  },
  {
    "text": "architecture documentation of visualization and then we'll look at messaging systems and how we can",
    "start": "48260",
    "end": "53420"
  },
  {
    "text": "leverage the audit trail data that you can collect from those messaging systems to visualize those systems in a bunch of",
    "start": "53420",
    "end": "60380"
  },
  {
    "text": "different ways as well to get a feel for how those are working so",
    "start": "60380",
    "end": "65320"
  },
  {
    "text": "like I said my name's Michael Anita lo i live in perth western australia",
    "start": "65710",
    "end": "70840"
  },
  {
    "text": "where i work in my home office for a company called particular software we make the reliable messaging platform in",
    "start": "70840",
    "end": "77479"
  },
  {
    "text": "service bus which is the infrastructure behind the NDC sydney 2016 twitter",
    "start": "77479",
    "end": "83420"
  },
  {
    "text": "leaderboard are we screwed up has everybody seen their Twitter leaderboard all right so if you tweet",
    "start": "83420",
    "end": "89930"
  },
  {
    "text": "using the hashtag NDC sydney throughout the conference there's actually a leaderboard thats collecting and aggregating those tweets and it puts",
    "start": "89930",
    "end": "96320"
  },
  {
    "text": "your name on a board so you can see the top 10 people top 10 people that are tweeting the top 10 people that are",
    "start": "96320",
    "end": "101659"
  },
  {
    "text": "being retweeted and so on have a collective and aggregating that data and you can see it on all main screens",
    "start": "101659",
    "end": "106670"
  },
  {
    "text": "around the place so before I get started can we just get a show of hands who's actually heard of in service bus",
    "start": "106670",
    "end": "112720"
  },
  {
    "text": "lots of people awesome can you keep your hands up if you're currently using in service bus very few people so everybody's heard of",
    "start": "112720",
    "end": "119600"
  },
  {
    "text": "it but nobody's using it okay so when I was first interviewing with particular I",
    "start": "119600",
    "end": "125570"
  },
  {
    "text": "had heard of in service bus but what I didn't realize was that they make this suite of other tools to go and support",
    "start": "125570",
    "end": "131330"
  },
  {
    "text": "in service bus systems and when I first joined the company I heard a run through the grapevine that I was going to be",
    "start": "131330",
    "end": "137349"
  },
  {
    "text": "working on this one it's called service control has anybody heard of service control",
    "start": "137349",
    "end": "142620"
  },
  {
    "text": "two guys and one of them works on it which is awesome this is going to be great for my talk",
    "start": "142620",
    "end": "148269"
  },
  {
    "text": "right because when I first had when I first heard about it I didn't know what service control was and now particular",
    "start": "148269",
    "end": "153879"
  },
  {
    "text": "is an open source company so I did what I think a lot of the people in this room would have done I went to github I found",
    "start": "153879",
    "end": "159250"
  },
  {
    "text": "the source code cloned it locally and I opened it up in visual studio and hit f5 and it ran and it ran as a console",
    "start": "159250",
    "end": "165790"
  },
  {
    "text": "application and put out a bunch of log messages and then I had absolutely no idea what to do from there I didn't know",
    "start": "165790",
    "end": "172120"
  },
  {
    "text": "what the system did I didn't know how to make it do what it did I didn't know even who would be using it normally",
    "start": "172120",
    "end": "177659"
  },
  {
    "text": "so I stopped it and I jumped into the code and visual studio and I went looking for clues the first clue that i",
    "start": "177659",
    "end": "183609"
  },
  {
    "text": "found was i found references to Owen and nancy FX so maybe service controllers a",
    "start": "183609",
    "end": "188829"
  },
  {
    "text": "web site of some description then I found references to in service bus that's not a big surprise this is a",
    "start": "188829",
    "end": "194919"
  },
  {
    "text": "tool designed to support in service bus so now it's a website that's doing messaging maybe then I found references",
    "start": "194919",
    "end": "200349"
  },
  {
    "text": "to kaliban micro so now it's a WPF desktop application website that's also",
    "start": "200349",
    "end": "205359"
  },
  {
    "text": "doing some messaging and then I found references to Raven db's now it's talking to a database somewhere I don't even know what's in",
    "start": "205359",
    "end": "211750"
  },
  {
    "text": "that database of where that database is was completely and utterly confused and after a few hours of digging through the",
    "start": "211750",
    "end": "217689"
  },
  {
    "text": "source code I still didn't have a really clear picture of what service control is and what it does but I have to stop at",
    "start": "217689",
    "end": "223750"
  },
  {
    "text": "that point because i had my first shedule meeting by onboarding buddy Greg he's over there hi Greg",
    "start": "223750",
    "end": "229409"
  },
  {
    "text": "and I asked Greg a guy's Greg about service controller said what is this thing and he showed me this",
    "start": "229409",
    "end": "235859"
  },
  {
    "text": "he talked me through it he said basically when you have a system running on in service bus it's going to be",
    "start": "235859",
    "end": "242439"
  },
  {
    "text": "sending these little packets of data backwards and forwards called messages and when an endpoint gets a message and",
    "start": "242439",
    "end": "247750"
  },
  {
    "text": "processes it it's going to stick a copy of that message into a central location called an audit queue and that's where",
    "start": "247750",
    "end": "254109"
  },
  {
    "text": "service control is going to take over service control is going to read that data out of the audit you do a little",
    "start": "254109",
    "end": "259930"
  },
  {
    "text": "bit of processing on it stick it in its own little internal database and then make that information available to the",
    "start": "259930",
    "end": "265360"
  },
  {
    "text": "other tools in the stack now what dragon managed to do with one picture a few sentences I'd not been",
    "start": "265360",
    "end": "271470"
  },
  {
    "text": "able to do with hours of digging through the source code looking at the source code was showing me all the detail of what service",
    "start": "271470",
    "end": "277590"
  },
  {
    "text": "control did but it didn't help me to take a step back and see what service control was doing in the broader context",
    "start": "277590",
    "end": "283520"
  },
  {
    "text": "what had been trying to do was look at the shape of like a state forest by examining the individual leaves and was",
    "start": "283520",
    "end": "290130"
  },
  {
    "text": "just not possible to do at that level now after we'd had a bit of a chat and we've been looking at this image I had a",
    "start": "290130",
    "end": "295980"
  },
  {
    "text": "question and I asked Greg on this diagram he does this is eric you think underneath the other key what does that",
    "start": "295980",
    "end": "301680"
  },
  {
    "text": "name you told me sometimes when a message is being processed it runs into",
    "start": "301680",
    "end": "307410"
  },
  {
    "text": "problems and it can't be can't be processed successfully and instead of going to the autocue a copy goes into",
    "start": "307410",
    "end": "313320"
  },
  {
    "text": "the eric you again service control is going to pick up that information stick it in its own",
    "start": "313320",
    "end": "318900"
  },
  {
    "text": "internal database and then make that data available to the other tools in the platform in fact you can even issue a",
    "start": "318900",
    "end": "324750"
  },
  {
    "text": "request to service control and it will push that message back into your system so that could be processed again I",
    "start": "324750",
    "end": "330980"
  },
  {
    "text": "thought I understood what Greg man so drew on the diagram I said like this",
    "start": "330980",
    "end": "336110"
  },
  {
    "text": "he said yeah so now by communicating over the shared visual representation of",
    "start": "336110",
    "end": "342390"
  },
  {
    "text": "what the system was doing we were able to reach consensus and get our mental models in sync",
    "start": "342390",
    "end": "348260"
  },
  {
    "text": "sometimes you really need to be able to step back and look at your code from a distance to figure out what it's doing",
    "start": "348260",
    "end": "354000"
  },
  {
    "text": "and unfortunately a lot of the tools that were used to tools like visual studio they're not really designed to",
    "start": "354000",
    "end": "359970"
  },
  {
    "text": "help you do that and a lot of the training and the skills that we have are not really designed to help us do that",
    "start": "359970",
    "end": "366110"
  },
  {
    "text": "and when i first started looking into how you could visualize software systems and came across the work of this guy his",
    "start": "366110",
    "end": "373350"
  },
  {
    "text": "name is Simon Brown he lives in Jersey which is a small island in the middle of the English Channel I",
    "start": "373350",
    "end": "379880"
  },
  {
    "text": "presumably that's what New Jersey is named after does anybody know I don't know so Simon is an independent software",
    "start": "379880",
    "end": "386630"
  },
  {
    "text": "consultant and he's traveling around the world specializing in software architecture helping teams get up to",
    "start": "386630",
    "end": "392940"
  },
  {
    "text": "speed and deliver their software projects and understanding the power of this visual communication Simon would",
    "start": "392940",
    "end": "399090"
  },
  {
    "text": "frequently stand at a whiteboard and ask the team members to draw their software and what he found was to",
    "start": "399090",
    "end": "407040"
  },
  {
    "text": "varying levels a lot of teams were not equipped to do so they just didn't know how to do that so some people would draw",
    "start": "407040",
    "end": "413610"
  },
  {
    "text": "very complicated diagrams some people would draw diagrams at various different levels of abstraction a lot of it didn't",
    "start": "413610",
    "end": "420000"
  },
  {
    "text": "make sense and it required somebody to stand there and walk you through the visual documentation and it didn't",
    "start": "420000",
    "end": "426240"
  },
  {
    "text": "really help you really had to have worked on the code for some period of time and have a lot of context and a lot",
    "start": "426240",
    "end": "432390"
  },
  {
    "text": "of history in order to be able to understand what was going on in the system and so Simon started giving these people",
    "start": "432390",
    "end": "437850"
  },
  {
    "text": "tips before asking them to draw their act actually give them one or two just point it these are the sorts of things",
    "start": "437850",
    "end": "443250"
  },
  {
    "text": "that I'd like to see this is the kind of information that I'd like you to show me and over time those that set of tips",
    "start": "443250",
    "end": "449460"
  },
  {
    "text": "that started to develop into a bit of a framework called c4 and you can learn c4 in about 10-15",
    "start": "449460",
    "end": "456000"
  },
  {
    "text": "minutes in fact going to go through it now and but it's only get to the end of it your entire team is going to be much",
    "start": "456000",
    "end": "462090"
  },
  {
    "text": "more effective at communicating visually about your software so let's have a look-see for is",
    "start": "462090",
    "end": "467760"
  },
  {
    "text": "primarily two things the first thing is it's a set of common abstractions",
    "start": "467760",
    "end": "472850"
  },
  {
    "text": "they're going to be used to describe your software architecture so these are the building blocks that you're going to",
    "start": "472850",
    "end": "478020"
  },
  {
    "text": "be able to take to describe your software system and how it's going to work the second major aspect of c-4 is a",
    "start": "478020",
    "end": "485310"
  },
  {
    "text": "set of views so once you have this model you can then slice it in a number of different ways using these visualization",
    "start": "485310",
    "end": "492180"
  },
  {
    "text": "techniques to be able to show the software at different levels so let me show you an example jumping",
    "start": "492180",
    "end": "499050"
  },
  {
    "text": "straight in at the very top at some level your domain is about software",
    "start": "499050",
    "end": "504270"
  },
  {
    "text": "systems and users you have people somewhere in your domain that are doing some job and they're interfacing with",
    "start": "504270",
    "end": "510660"
  },
  {
    "text": "software systems to help them to do that job now here where I talk about software",
    "start": "510660",
    "end": "516870"
  },
  {
    "text": "systems and treating them like a black box so no matter how complex it is internally facebook is a software system",
    "start": "516870",
    "end": "522300"
  },
  {
    "text": "twitter is a software system youtube is a software system whatever project",
    "start": "522300",
    "end": "527520"
  },
  {
    "text": "you're working on it's just a black box at this level so we've seen something very similar to",
    "start": "527520",
    "end": "534040"
  },
  {
    "text": "this with with service control the context view is going to show your",
    "start": "534040",
    "end": "540700"
  },
  {
    "text": "software system in context surrounded by all the other users and software systems that it interfaces with",
    "start": "540700",
    "end": "546270"
  },
  {
    "text": "let's have a look at the service control one starting with just dropping a box with",
    "start": "546270",
    "end": "552760"
  },
  {
    "text": "the name of your system in the middle of a diagram you give it a one or two sentence description these are going to help the first person who comes to your",
    "start": "552760",
    "end": "559150"
  },
  {
    "text": "diagram if they have no idea what service control is that couple of sentences is really going to help them to figure out what they're looking at",
    "start": "559150",
    "end": "566820"
  },
  {
    "text": "once we've got your system on the diagram we need to add some more systems that are going to interface with your",
    "start": "566820",
    "end": "572110"
  },
  {
    "text": "with your system in the middle so here because the service controllers",
    "start": "572110",
    "end": "577990"
  },
  {
    "text": "interfacing with just some business system somewhere it's just modeled as a as another box business system that's",
    "start": "577990",
    "end": "584680"
  },
  {
    "text": "performing some business function now we put in a line to show that the business system is using service control so",
    "start": "584680",
    "end": "591430"
  },
  {
    "text": "that's what the direction of the arrow is now we want to talk about how that how that",
    "start": "591430",
    "end": "596850"
  },
  {
    "text": "relationship is being managed so who's actually how that sorry how the business system is using service control so just",
    "start": "596850",
    "end": "604120"
  },
  {
    "text": "like we want to put a descriptive label in each one of the boxes you will put one on the lines as well so here we can",
    "start": "604120",
    "end": "609130"
  },
  {
    "text": "see the business system is sending some kind of data down to service control when a previous diagram had it not a",
    "start": "609130",
    "end": "615730"
  },
  {
    "text": "couple of software systems service inside is querying data from service control service pulse is querying data",
    "start": "615730",
    "end": "621640"
  },
  {
    "text": "from service control as well so this is just showing software systems you don't have any users yet so let's",
    "start": "621640",
    "end": "627760"
  },
  {
    "text": "throw some users into the system developers using service insight operations people using service pulse",
    "start": "627760",
    "end": "633840"
  },
  {
    "text": "these guys aren't talking directly to service control but I still like to model them at this level anyway because",
    "start": "633840",
    "end": "639400"
  },
  {
    "text": "these are the people who haven't come screaming when I break something in service control and there's one other class of user",
    "start": "639400",
    "end": "645370"
  },
  {
    "text": "which is important at this level and that's this this guy the system admin sheets going to be creating starting and",
    "start": "645370",
    "end": "650920"
  },
  {
    "text": "stopping instances of service control now this is it that's all the detail you're given wants at this level there's",
    "start": "650920",
    "end": "657580"
  },
  {
    "text": "no technology choices at this level this doesn't say nservicebus anywhere it doesn't say Jason or HTTP or ravendb",
    "start": "657580",
    "end": "664980"
  },
  {
    "text": "this is how your non-technical stakeholders the people in your business this is how they think of your software",
    "start": "664980",
    "end": "670570"
  },
  {
    "text": "system so this is the kind of view that you want to be able to present them this is like a 30,000 foot view as far above",
    "start": "670570",
    "end": "677589"
  },
  {
    "text": "the code and the detail as you can possibly get this is what your system looks like",
    "start": "677589",
    "end": "683700"
  },
  {
    "text": "once you start to draw this and show it to non-technical stakeholders an amazing thing happens they actually have an",
    "start": "683700",
    "end": "690220"
  },
  {
    "text": "opinion as to whether or not this is correct now that was a massive surprise to me I",
    "start": "690220",
    "end": "695560"
  },
  {
    "text": "don't know about you guys I spent years writing hundred page documents without software architecture and you hand them",
    "start": "695560",
    "end": "701380"
  },
  {
    "text": "over to the CTO and he pulls over it and picks out all the nitpicky things that he doesn't like and then signs it and",
    "start": "701380",
    "end": "707110"
  },
  {
    "text": "you take it to the IT people and they read through and they pick out all the things they don't like and then they sign it whenever you give it to a non",
    "start": "707110",
    "end": "713020"
  },
  {
    "text": "technical person they just sign it they don't read it this is a single diagram it's going to",
    "start": "713020",
    "end": "718810"
  },
  {
    "text": "fit on an a4 piece of paper maybe in a three piece of paper once once it gets more complicated but they",
    "start": "718810",
    "end": "726000"
  },
  {
    "text": "non-technical people are going to be able to look at this read it and internalize it very quickly and they're",
    "start": "726000",
    "end": "731350"
  },
  {
    "text": "going to have an opinion as to whether or not it's right and you should listen to that opinion because those non-technical people have",
    "start": "731350",
    "end": "737290"
  },
  {
    "text": "usually been around your IT infrastructure for some time and I have some feel for what all the pieces are",
    "start": "737290",
    "end": "742300"
  },
  {
    "text": "and how it all fits together frequently if you're a contractor or a consultant when you're coming into an environment",
    "start": "742300",
    "end": "747610"
  },
  {
    "text": "you have a lot less knowledge about the environment that the non-technical people do so print out a copy of this and carry it",
    "start": "747610",
    "end": "755020"
  },
  {
    "text": "with you and at the end of every meeting just sit down with with non-technical people and get them to mark it up get",
    "start": "755020",
    "end": "760300"
  },
  {
    "text": "them to draw on new arrows whenever you people want to make a change to your environment where they're adding new",
    "start": "760300",
    "end": "765910"
  },
  {
    "text": "software systems or new users get them to draw it on the diagram don't do it for them get them to do it because it",
    "start": "765910",
    "end": "772450"
  },
  {
    "text": "really helps you to get their mental model out of their brain and onto the page and it helps you to reach consensus with them",
    "start": "772450",
    "end": "779070"
  },
  {
    "text": "so that's the very very very high level we're so far above code that you can't even see technical details here",
    "start": "779070",
    "end": "785730"
  },
  {
    "text": "what's the next level down well diving back into sea for the next abstraction",
    "start": "785730",
    "end": "791709"
  },
  {
    "text": "down is the rather unfortunately overloaded term container which was made very popular by Daka but",
    "start": "791709",
    "end": "798190"
  },
  {
    "text": "you know we might hold that against them it's c4 was first but doctor is far more popular at this point",
    "start": "798190",
    "end": "804450"
  },
  {
    "text": "now here we talk about a container in c4 terms are talking about a logical deployable unit this is something to",
    "start": "804450",
    "end": "811150"
  },
  {
    "text": "host see the code or data it could be a web application it could be a window service it can be a database via mobile",
    "start": "811150",
    "end": "817300"
  },
  {
    "text": "app and the containers view is going to decompose your software system into the",
    "start": "817300",
    "end": "823330"
  },
  {
    "text": "containers that make it up but it's still going to show everything else from the context so all the other users and",
    "start": "823330",
    "end": "829870"
  },
  {
    "text": "software systems that your system interfaces with are still going to be present around the edges of that diagram",
    "start": "829870",
    "end": "835140"
  },
  {
    "text": "only now instead of being connected to the black box that is your system we've opened up your box into a white box and",
    "start": "835140",
    "end": "841780"
  },
  {
    "text": "we can see how those things are connected to the internal parts of your system so back into the service control example",
    "start": "841780",
    "end": "849990"
  },
  {
    "text": "we can see we've got the black box of service control in the middle so let's blow it up just something a bit bigger",
    "start": "849990",
    "end": "856380"
  },
  {
    "text": "we've still got all of our context around the edges but I've taken the users away because on the slide is",
    "start": "856380",
    "end": "862360"
  },
  {
    "text": "actually not that much room and you in started to add some technical details so the business system now is",
    "start": "862360",
    "end": "868240"
  },
  {
    "text": "saying has to be built on top of in-service bus and it's been figured to use some kind of transport and here you",
    "start": "868240",
    "end": "873970"
  },
  {
    "text": "know msmq RabbitMQ as a service bus curvy of building the system",
    "start": "873970",
    "end": "879330"
  },
  {
    "text": "notice that we haven't put all the technical detail on the document so we haven't said how service insight and",
    "start": "879330",
    "end": "884350"
  },
  {
    "text": "service pulser built because to service controllers things are irrelevant but this is actually important to us",
    "start": "884350",
    "end": "890910"
  },
  {
    "text": "so in the previous diagram we showed that the business system was sending just a single stream of data through to",
    "start": "890910",
    "end": "896710"
  },
  {
    "text": "service control but where does that data go once you actually open up the black box then you have a white box you can",
    "start": "896710",
    "end": "903070"
  },
  {
    "text": "start to see three different input streams coming through got audits errors",
    "start": "903070",
    "end": "908380"
  },
  {
    "text": "and basically everything else and those things are going to be using that same transport",
    "start": "908380",
    "end": "914430"
  },
  {
    "text": "so that's why it's an important technical detail at this level behind those three channels we've got a",
    "start": "914430",
    "end": "921040"
  },
  {
    "text": "single window service that's going to be reading in that information when that window service is wanting to",
    "start": "921040",
    "end": "928270"
  },
  {
    "text": "store some information is going to stick it in a data store which is going to be in bedded Raven 2.5 database",
    "start": "928270",
    "end": "933899"
  },
  {
    "text": "we had our software system service inside and service pulse they're going to be creating that Windows service using HTTP and getting back Jason",
    "start": "933899",
    "end": "940750"
  },
  {
    "text": "responses and then we've just got one other class of",
    "start": "940750",
    "end": "947110"
  },
  {
    "text": "user that's that system admin they're not connected to anything at the moment so when they want to manage instances of service control it turns out they're",
    "start": "947110",
    "end": "953079"
  },
  {
    "text": "actually using a completely separate desktop application written using Caliburn micro and WPF that's where that",
    "start": "953079",
    "end": "959260"
  },
  {
    "text": "technology choice comes in now if the previous diagram is specifically for non-technical",
    "start": "959260",
    "end": "965050"
  },
  {
    "text": "stakeholders this is exactly the diagram you want to carry around to talk to technical stakeholders it's exactly the",
    "start": "965050",
    "end": "971769"
  },
  {
    "text": "same diagram it's just got a little bit more information on it and at this level you want all of your technical choices",
    "start": "971769",
    "end": "978370"
  },
  {
    "text": "all of your technical details you can put version numbers in here put protocols in here how are things",
    "start": "978370",
    "end": "983680"
  },
  {
    "text": "communicating and how are they connected this is the diagram you want to take to the CTO because the CTO is going to want",
    "start": "983680",
    "end": "991329"
  },
  {
    "text": "to know all those technical choices when you're talking to the IT and infrastructure people they're going to want to know all of the things that",
    "start": "991329",
    "end": "997600"
  },
  {
    "text": "they're going to have to support in production and what they're going to look like and when you're adding new developers to the team this is the",
    "start": "997600",
    "end": "1004079"
  },
  {
    "text": "diagram that you show because it helps to them to orient themselves throughout your solution in a way that just looking",
    "start": "1004079",
    "end": "1010649"
  },
  {
    "text": "at a solution full of projects doesn't easily give you this is actually showing you the relationships between the",
    "start": "1010649",
    "end": "1015930"
  },
  {
    "text": "logical parts of your system and how they connect so carrying on diving even deeper if",
    "start": "1015930",
    "end": "1023070"
  },
  {
    "text": "we've decomposed our software systems into containers the next step is to get a little bit closer and to take one of",
    "start": "1023070",
    "end": "1028709"
  },
  {
    "text": "our containers and decompose it into something else the next abstraction in c4 unfortunately another overloaded term",
    "start": "1028709",
    "end": "1035760"
  },
  {
    "text": "in software engineering is the component now component is a funny one a component",
    "start": "1035760",
    "end": "1042688"
  },
  {
    "text": "is a logical grouping of code or data that's",
    "start": "1042689",
    "end": "1048240"
  },
  {
    "text": "got some interface to it just performing some architectural a significant function so if you've got a subsystem",
    "start": "1048240",
    "end": "1054540"
  },
  {
    "text": "that sending emails no matter how many classes and things are involved that's a component if you've got something that's",
    "start": "1054540",
    "end": "1060690"
  },
  {
    "text": "doing some calculation and other pieces of the system rely on no matter how many",
    "start": "1060690",
    "end": "1066240"
  },
  {
    "text": "classes are involved internally in that thing that's a component so when you're showing the components",
    "start": "1066240",
    "end": "1073500"
  },
  {
    "text": "for you you're actually taking one of your containers and opening it up and turning it into a white box again but",
    "start": "1073500",
    "end": "1080040"
  },
  {
    "text": "you're still going to have all the context from all the previous views you want all of the other containers in your system and how they connected to these",
    "start": "1080040",
    "end": "1086669"
  },
  {
    "text": "internals of this container you want to know all of the software systems and users that are in the broader context",
    "start": "1086669",
    "end": "1092790"
  },
  {
    "text": "and how they connected to this container which components are they connected to internally",
    "start": "1092790",
    "end": "1097850"
  },
  {
    "text": "when I first tried to do this for service control I did it using some simple rules I basically said anything",
    "start": "1097850",
    "end": "1104910"
  },
  {
    "text": "that's serving up an HTTP request that's a component so any other Nancy modules that's a component anything talking to",
    "start": "1104910",
    "end": "1111630"
  },
  {
    "text": "the database that's probably a component anything handling a message from an inservice bar standpoint that's probably",
    "start": "1111630",
    "end": "1117330"
  },
  {
    "text": "a component and I started to put all this together into a diagram and I got to this",
    "start": "1117330",
    "end": "1124580"
  },
  {
    "text": "and that's about when I stopped because even though this is showing a bunch of",
    "start": "1125210",
    "end": "1132360"
  },
  {
    "text": "components and the relationships between them and how those things are connected to those external software systems and users and containers we're starting to",
    "start": "1132360",
    "end": "1139440"
  },
  {
    "text": "get too much detail in a single diagram so now the diagram is actually losing its value because there's so much detail",
    "start": "1139440",
    "end": "1145919"
  },
  {
    "text": "here that you just can't see the individual pieces we're looking at leaves again when we really want to see",
    "start": "1145919",
    "end": "1152040"
  },
  {
    "text": "the shape of trees so what do you do we need to find some",
    "start": "1152040",
    "end": "1157799"
  },
  {
    "text": "way to divide this diagram up need to find some mechanism by which you can pick out individual components that are",
    "start": "1157799",
    "end": "1164130"
  },
  {
    "text": "important and show them all on the same diagram so one way you can do this is to",
    "start": "1164130",
    "end": "1169140"
  },
  {
    "text": "look at individual use cases so here is a use case for service control this is showing just those components which are",
    "start": "1169140",
    "end": "1175470"
  },
  {
    "text": "related to audit ingestion so pulling messages out of that audit q doing some processing on them storing the data in",
    "start": "1175470",
    "end": "1181830"
  },
  {
    "text": "the database down the bottom here this is our external embedded ravendb database",
    "start": "1181830",
    "end": "1188450"
  },
  {
    "text": "pulling that data back out using an HTTP API and then we've got our external",
    "start": "1188450",
    "end": "1193830"
  },
  {
    "text": "software system down the bottom there that's calling into that into those things now imagine that you're a new developer",
    "start": "1193830",
    "end": "1200749"
  },
  {
    "text": "on service control today is your first day and you have a meeting with the team leader and the team lead takes you into",
    "start": "1200749",
    "end": "1207169"
  },
  {
    "text": "of Rome and in front of a white board she draws the context view and talks you through it and tells you where service",
    "start": "1207169",
    "end": "1214009"
  },
  {
    "text": "control fits into the broader architecture of the entire enterprise where the pieces fit and what they do",
    "start": "1214009",
    "end": "1220990"
  },
  {
    "text": "and then she scrubs out the service control box in the bigger net draws it again in a bigger in a bigger manner and",
    "start": "1220990",
    "end": "1228049"
  },
  {
    "text": "she starts drawing the individual containers internally and connecting them and showing you all the technology choices and all of the way of those",
    "start": "1228049",
    "end": "1234470"
  },
  {
    "text": "things communicate and if she pulls out this as a piece of paper and says and this is the audit",
    "start": "1234470",
    "end": "1239929"
  },
  {
    "text": "ingestion system and for the next two weeks I want you to be working with somebody in the audit and gestern system",
    "start": "1239929",
    "end": "1246129"
  },
  {
    "text": "how long did that conversation take we've just been through it in about 16",
    "start": "1246129",
    "end": "1252590"
  },
  {
    "text": "minutes and already I think most of you would feel fairly comfortable looking at the service control code jumping around",
    "start": "1252590",
    "end": "1258889"
  },
  {
    "text": "it looking now at the detail level that's the power of doing this sort of",
    "start": "1258889",
    "end": "1264919"
  },
  {
    "text": "visualization and and viewing your software from standing right back you can start from no knowledge and very",
    "start": "1264919",
    "end": "1271789"
  },
  {
    "text": "rapidly get down to something very specific so what's the next step",
    "start": "1271789",
    "end": "1278499"
  },
  {
    "text": "well imagine you've jumped out of a plane over over your software",
    "start": "1278499",
    "end": "1283899"
  },
  {
    "text": "down the bottom is the colored in visual studio the first thing you see when you jump",
    "start": "1283899",
    "end": "1288950"
  },
  {
    "text": "out of the plane is this context view there's a black box which is your system and then a bunch of other black boxes",
    "start": "1288950",
    "end": "1294529"
  },
  {
    "text": "that it's connected to and then you as you fall as you start to get closer now you can see the containers view now you",
    "start": "1294529",
    "end": "1301610"
  },
  {
    "text": "can see the white box you can actually see the details that are inside your software system how those things are",
    "start": "1301610",
    "end": "1308059"
  },
  {
    "text": "connected and how they relate and how those things are connected to the other pieces of the of the enterprise you fall",
    "start": "1308059",
    "end": "1314299"
  },
  {
    "text": "a little bit further and now you can see the individual components inside one of your containers but it's a giant complex",
    "start": "1314299",
    "end": "1320809"
  },
  {
    "text": "mess there's all these pieces flowing around and you can't make out any detail but you fall a little bit further and",
    "start": "1320809",
    "end": "1327109"
  },
  {
    "text": "now you're closer and then you can see just these cooler area it seems to have some some shape and some understanding",
    "start": "1327109",
    "end": "1332930"
  },
  {
    "text": "and you figure out what's going on if you fall a little bit further you're probably going to smack into the ground",
    "start": "1332930",
    "end": "1338420"
  },
  {
    "text": "but just before you do you see the next level which is classes",
    "start": "1338420",
    "end": "1345580"
  },
  {
    "text": "anybody that's used to programming an object-oriented language is already fairly aware of classes right we know we",
    "start": "1345580",
    "end": "1351470"
  },
  {
    "text": "deal with classes all the time at this level the class view is just a UML class diagram",
    "start": "1351470",
    "end": "1357370"
  },
  {
    "text": "because this is the level just above the code and",
    "start": "1357370",
    "end": "1363880"
  },
  {
    "text": "and you see your components in your clout your components that can be decomposed into the classes that make it",
    "start": "1363880",
    "end": "1370700"
  },
  {
    "text": "up and at this level you're talking about inheritance hierarchies and collaborators and that sort of thing",
    "start": "1370700",
    "end": "1377710"
  },
  {
    "text": "and I'm actually not going to show you a sample of a class view from service control because it's not that important",
    "start": "1377710",
    "end": "1383840"
  },
  {
    "text": "this level is entirely optional and you would only ever construct a class view",
    "start": "1383840",
    "end": "1388880"
  },
  {
    "text": "if you had something that was very complicated that you wanted to show to somebody so if you had a complicated",
    "start": "1388880",
    "end": "1394070"
  },
  {
    "text": "inheritance hierarchy or composition structure at the class level then you would include a clasp you",
    "start": "1394070",
    "end": "1401620"
  },
  {
    "text": "so context containers components and classes for different views at different",
    "start": "1402220",
    "end": "1407480"
  },
  {
    "text": "levels slicing through your architecture those four views will start letter C hence the name c4",
    "start": "1407480",
    "end": "1415480"
  },
  {
    "text": "now when one's looking at the service control diagram that first one something interesting occurred to me I couldn't",
    "start": "1416680",
    "end": "1423500"
  },
  {
    "text": "have drawn that diagram by looking at the code the in service bus pieces and the the",
    "start": "1423500",
    "end": "1429890"
  },
  {
    "text": "other applications in our product stack that appear on that diagram are not directly referenced in the code no",
    "start": "1429890",
    "end": "1435560"
  },
  {
    "text": "amount of looking through that code would have allowed me to generate the diagram which means you have to draw that kind",
    "start": "1435560",
    "end": "1441890"
  },
  {
    "text": "of diagram by hand you've got to do it manually don't really have a choice but that's okay because how often does",
    "start": "1441890",
    "end": "1449450"
  },
  {
    "text": "the context of you change or to ask the question another way how often do you introduce new architectural",
    "start": "1449450",
    "end": "1456470"
  },
  {
    "text": "e significant groupings of users or new software systems that you have to interface with into into your projects",
    "start": "1456470",
    "end": "1462630"
  },
  {
    "text": "very rarely right and how long is it going to take you to",
    "start": "1462630",
    "end": "1467970"
  },
  {
    "text": "update a diagram when it does change 15 minutes half an hour an hour if",
    "start": "1467970",
    "end": "1473580"
  },
  {
    "text": "you're feeling really lazy and you just want to fill in your timesheet you're talking to adding a box and a line to a diagram unless you've got a",
    "start": "1473580",
    "end": "1479640"
  },
  {
    "text": "lot of boxes and a lot of lines you're not going to have a complicated layout because you've probably got your system",
    "start": "1479640",
    "end": "1484800"
  },
  {
    "text": "in the middle and everything else is just to star around the answer give me a bit update it really quickly now how",
    "start": "1484800",
    "end": "1490470"
  },
  {
    "text": "much time is it going to take to make reality match that new diagram weeks months I've been on at least one",
    "start": "1490470",
    "end": "1498510"
  },
  {
    "text": "project where it was years so it's actually ok to do this by hand",
    "start": "1498510",
    "end": "1504180"
  },
  {
    "text": "it's going to change very rarely when it does change it you can change it very quickly",
    "start": "1504180",
    "end": "1509300"
  },
  {
    "text": "the percentage amount of effort and time required to keep the diagram up to date in comparison to the amount of work",
    "start": "1509300",
    "end": "1515220"
  },
  {
    "text": "required to meet your system match that is very small so do it by hand write on",
    "start": "1515220",
    "end": "1521460"
  },
  {
    "text": "the whiteboard do it on a piece of paper do it frequently because the more you do",
    "start": "1521460",
    "end": "1526740"
  },
  {
    "text": "it the more you're going to burn that information into your brain and get your team to be able to do it so that everyone on your team should be able to",
    "start": "1526740",
    "end": "1532380"
  },
  {
    "text": "reproduce one of these diagrams what about the next level down the containers of you well here we can start to",
    "start": "1532380",
    "end": "1538530"
  },
  {
    "text": "interrogate the code to try and pull out some of the some of the structural information if you've got a project",
    "start": "1538530",
    "end": "1544020"
  },
  {
    "text": "inside Visual Studio you're looking at you know projects inside of a solution and you can see the technology stacks",
    "start": "1544020",
    "end": "1550590"
  },
  {
    "text": "that those things are based off of you can see which ones are desktop applications and which ones are web applications so maybe you can start to",
    "start": "1550590",
    "end": "1556530"
  },
  {
    "text": "pull out some of that detail and do some of those things automatically but you're still not going to be able to show how",
    "start": "1556530",
    "end": "1562560"
  },
  {
    "text": "those things are connected to external systems or you're not gonna be able to show very easily how those things are connected to each other either the",
    "start": "1562560",
    "end": "1569310"
  },
  {
    "text": "technology choice is required for the commuter intercommunication there's probably something you have to add in manually",
    "start": "1569310",
    "end": "1576080"
  },
  {
    "text": "skipping the components for a minute how frequently do you think at class few changes",
    "start": "1576080",
    "end": "1581930"
  },
  {
    "text": "what has it a guess that every single check-in has a chance that it's going to break one of these class views",
    "start": "1581930",
    "end": "1589640"
  },
  {
    "text": "even at the higher level of the components view if you generate one and look it depending on the speed of your",
    "start": "1589640",
    "end": "1596180"
  },
  {
    "text": "team and your continuous integration software there's a chance that's wrong with in about 15 minutes",
    "start": "1596180",
    "end": "1601540"
  },
  {
    "text": "don't do these by hand so where you've got a context view and a",
    "start": "1601540",
    "end": "1606950"
  },
  {
    "text": "containers view you're only going to have one you're going to be able to print one side on a piece of a3 paper and flip it",
    "start": "1606950",
    "end": "1613160"
  },
  {
    "text": "over and print the other one on the other side you can carry that around as a single sheet and you've already got a significant way towards documenting your",
    "start": "1613160",
    "end": "1619160"
  },
  {
    "text": "software architecture the components view you can end up with at least one per container and we already saw that in",
    "start": "1619160",
    "end": "1625070"
  },
  {
    "text": "any sufficiently complex container that's probably not good enough so you can end up with a lot more of them",
    "start": "1625070",
    "end": "1630580"
  },
  {
    "text": "don't do them by hand because they're going to very quickly and easily go out of date and then it's just a waste of",
    "start": "1630580",
    "end": "1636440"
  },
  {
    "text": "time you may as well just don't bother so if we're talking about doing things manually versus automatically what do I",
    "start": "1636440",
    "end": "1642950"
  },
  {
    "text": "mean well after talking about c4 for a number of different years Simon I created a startup called",
    "start": "1642950",
    "end": "1650000"
  },
  {
    "text": "structure Rosa the structure Iser is two main things firstly it's this website",
    "start": "1650000",
    "end": "1655190"
  },
  {
    "text": "structure has calm and if you go there you can sign up for an account and you can start to create models in c4 and",
    "start": "1655190",
    "end": "1661280"
  },
  {
    "text": "then you can create views you can create a context view and a containers view and different component views it doesn't",
    "start": "1661280",
    "end": "1667820"
  },
  {
    "text": "currently go down to class views but that's usually good enough but the other thing that it is is its",
    "start": "1667820",
    "end": "1673250"
  },
  {
    "text": "client library and it's implemented in Java and in c-sharp both versions are up",
    "start": "1673250",
    "end": "1679100"
  },
  {
    "text": "on github and the c-sharp version is actually available via you get and you can install this package and",
    "start": "1679100",
    "end": "1686560"
  },
  {
    "text": "then you can construct a workspace define all the users and software",
    "start": "1686560",
    "end": "1692420"
  },
  {
    "text": "systems that make up your broad context and how those things interact you can",
    "start": "1692420",
    "end": "1697670"
  },
  {
    "text": "construct a view a context view and then push it up to the website and",
    "start": "1697670",
    "end": "1703420"
  },
  {
    "text": "that's all that's literally all the code you need to run and when you go to the website you'll see this",
    "start": "1703420",
    "end": "1709330"
  },
  {
    "text": "which is pretty similar to the context view that i showed you for service control at the beginning",
    "start": "1709330",
    "end": "1714430"
  },
  {
    "text": "okay well now that we've got that we can move in and we can go down to the next level we",
    "start": "1714430",
    "end": "1721940"
  },
  {
    "text": "can take our software system and we can start to decompose it into its containers again using the same",
    "start": "1721940",
    "end": "1727640"
  },
  {
    "text": "kind of very simple API we can construct a container view and then push it up to",
    "start": "1727640",
    "end": "1733610"
  },
  {
    "text": "the website and when we go you go there you get containers view",
    "start": "1733610",
    "end": "1739300"
  },
  {
    "text": "now this is awesome for three reasons",
    "start": "1739300",
    "end": "1743560"
  },
  {
    "text": "firstly when you check this in with your code you can include as part of your continuous integration which means every",
    "start": "1744820",
    "end": "1751820"
  },
  {
    "text": "single build that you do can produce architecture diagrams clean and they can be pushed up to the cloud and then if",
    "start": "1751820",
    "end": "1758870"
  },
  {
    "text": "you actually build these diagrams in structure Iser you can embed them into a documentation so you actually create",
    "start": "1758870",
    "end": "1764600"
  },
  {
    "text": "links to the URLs and it's just going to feed up the most up-to-date documentation every time you call it",
    "start": "1764600",
    "end": "1771730"
  },
  {
    "text": "the second reason it's really cool is because it's going into service control you can use your service control tools",
    "start": "1771730",
    "end": "1778010"
  },
  {
    "text": "to look at the history of your architecture of a time you can start to diff and blame your architecture find",
    "start": "1778010",
    "end": "1784460"
  },
  {
    "text": "out who did what when and why and the third reason this is really cool is the",
    "start": "1784460",
    "end": "1789650"
  },
  {
    "text": "unofficial reason which is that we all hate vizio and visual studio is much cooler than that so now we're actually",
    "start": "1789650",
    "end": "1795470"
  },
  {
    "text": "getting to write code",
    "start": "1795470",
    "end": "1798280"
  },
  {
    "text": "alright what about if we want to go any further than that we're going to go down below the containers remember I said the",
    "start": "1801970",
    "end": "1809000"
  },
  {
    "text": "the context view and the containers view about something that you probably didn't",
    "start": "1809000",
    "end": "1814220"
  },
  {
    "text": "want to do by hand so even if you're writing code to do it you're still maintaining those things by hand if you want to get further than that decompose",
    "start": "1814220",
    "end": "1820190"
  },
  {
    "text": "one of your containers into its subsequent components structure as it will do that to you have a couple of",
    "start": "1820190",
    "end": "1825710"
  },
  {
    "text": "options first option is that you can do it by hand as I said this is incredibly dangerous",
    "start": "1825710",
    "end": "1832630"
  },
  {
    "text": "because it's really easy for these things to go out of date and you can spend a lot of time looking at the wrong",
    "start": "1832630",
    "end": "1838700"
  },
  {
    "text": "diagram and not really understanding what it is that you're looking at so what would be really good is because",
    "start": "1838700",
    "end": "1845060"
  },
  {
    "text": "we're actually looking at code what if we did some reflection over the compile assembly and then called this API so we",
    "start": "1845060",
    "end": "1851690"
  },
  {
    "text": "can pull out the individual components and then call this API for each component that we find so that we can",
    "start": "1851690",
    "end": "1857030"
  },
  {
    "text": "produce the collection component that's actually already built into structure as it in a thing called a component finder",
    "start": "1857030",
    "end": "1862800"
  },
  {
    "text": "you can configure the component funder with a number of different strategies to basically say what are the rules that",
    "start": "1862800",
    "end": "1869100"
  },
  {
    "text": "I've set up here so if you implement I event publish it then you're an event publisher if you",
    "start": "1869100",
    "end": "1875280"
  },
  {
    "text": "implement if you extend import in rich's if you're using important richer as your base class then you're an import in",
    "start": "1875280",
    "end": "1881880"
  },
  {
    "text": "nature and when you call component fine to find components it's going to run through all",
    "start": "1881880",
    "end": "1887070"
  },
  {
    "text": "of the code and it's going to picking out all of the things that match and it's going to construct those component records for you so you don't have to do",
    "start": "1887070",
    "end": "1893640"
  },
  {
    "text": "it by hand again if you added this into your source control repository and now",
    "start": "1893640",
    "end": "1898770"
  },
  {
    "text": "you're doing it on every single build you have up-to-date architecture documentation coming out on every single",
    "start": "1898770",
    "end": "1903870"
  },
  {
    "text": "build that the modeling level you want all the components you can possibly find in the",
    "start": "1903870",
    "end": "1909870"
  },
  {
    "text": "system and you want all of the connections you can possibly get but when you're doing the views those",
    "start": "1909870",
    "end": "1914880"
  },
  {
    "text": "visualizations remember don't try and put everything in the same view it's going to be very complicated so you're",
    "start": "1914880",
    "end": "1920970"
  },
  {
    "text": "going to have to be a bit more careful about how you pick out the individual views the individual components to show on edge view",
    "start": "1920970",
    "end": "1927950"
  },
  {
    "text": "so it's all I'm going to cover in terms of c4 and structure eyes I've got some resources and things at the end if you",
    "start": "1927950",
    "end": "1933090"
  },
  {
    "text": "want to have a look but the last topic that I want to talk about is visualizing messaging systems",
    "start": "1933090",
    "end": "1939710"
  },
  {
    "text": "when I talk about messaging systems in in service bus we have these things",
    "start": "1939710",
    "end": "1946260"
  },
  {
    "text": "these different processes they're going to be running on different machines scattered throughout your architecture and in service bus terms we call them",
    "start": "1946260",
    "end": "1953070"
  },
  {
    "text": "endpoints they're actually reasonably close to something like your container in c4",
    "start": "1953070",
    "end": "1959510"
  },
  {
    "text": "what happens is when these endpoints want to communicate some information they're going to package up that",
    "start": "1959510",
    "end": "1964650"
  },
  {
    "text": "information into a just a normal net class called a message and then going to hand",
    "start": "1964650",
    "end": "1971880"
  },
  {
    "text": "that message off to some infrastructure to deliver it somewhere now importantly the code that's sending the message",
    "start": "1971880",
    "end": "1978270"
  },
  {
    "text": "doesn't know where the message is going so it just creates a message and it says send s so a logical operation saying",
    "start": "1978270",
    "end": "1985680"
  },
  {
    "text": "that want something to happen and the infrastructure takes care of ensuring that something on the other side",
    "start": "1985680",
    "end": "1991470"
  },
  {
    "text": "we'll handle that message and do something for you",
    "start": "1991470",
    "end": "1995510"
  },
  {
    "text": "when the message gets to the other side this endpoint could be down",
    "start": "1996950",
    "end": "2003010"
  },
  {
    "text": "maybe you've taken it down for maintenance maybe that machine is down maybe even the communication pathway",
    "start": "2003010",
    "end": "2010039"
  },
  {
    "text": "between these two things has gone away okay somebody in the network is unplug something but the infrastructure will",
    "start": "2010039",
    "end": "2016490"
  },
  {
    "text": "make sure that this message arrives at the end point that needs to process it and when it gets there it's going to",
    "start": "2016490",
    "end": "2021799"
  },
  {
    "text": "call some code to some custom code and part of that custom code could be",
    "start": "2021799",
    "end": "2027470"
  },
  {
    "text": "anything maybe you're talking to a database may be talking to a file system maybe you're processing an image you're creating a PDF or sending an email or",
    "start": "2027470",
    "end": "2034340"
  },
  {
    "text": "doing a credit card payment whatever it is but part of what you can do is then send another message",
    "start": "2034340",
    "end": "2040179"
  },
  {
    "text": "so you can have this stream of messages happening throughout the system because the endpoints aren't really aware of",
    "start": "2040179",
    "end": "2046370"
  },
  {
    "text": "each other they're all very loosely coupled there's a special type of message which",
    "start": "2046370",
    "end": "2051950"
  },
  {
    "text": "doesn't get sent so it doesn't go to a specific destination it's called an event",
    "start": "2051950",
    "end": "2059530"
  },
  {
    "text": "an events don't get sent they get published and rather than",
    "start": "2059530",
    "end": "2065830"
  },
  {
    "text": "rather than going to a single endpoint a number of endpoints in your infrastructure they can all subscribe to",
    "start": "2065830",
    "end": "2072169"
  },
  {
    "text": "messages of that type so if these two end points down the bottom are interested in order shipped events",
    "start": "2072169",
    "end": "2077740"
  },
  {
    "text": "when this endpoint at the top here publishes that event it's going to get pushed down to all to",
    "start": "2077740",
    "end": "2085608"
  },
  {
    "text": "both of those endpoints now again this endpoint the one doing the publish isn't aware of the subscribers it doesn't know",
    "start": "2085609",
    "end": "2092179"
  },
  {
    "text": "who they are and these subscribers they're not aware of the publisher so they don't know what that message is coming from",
    "start": "2092179",
    "end": "2099520"
  },
  {
    "text": "so applications built this way systems built this way they tend to be very",
    "start": "2100990",
    "end": "2106940"
  },
  {
    "text": "flexible very fluid because it's really easy at a time to add new end points that are publishing new messages and",
    "start": "2106940",
    "end": "2114160"
  },
  {
    "text": "publishing new events and subscribing to existing events and then you add still",
    "start": "2114160",
    "end": "2119240"
  },
  {
    "text": "more endpoints and they're subscribing to a subset of those events and they're all publishing their own event and what",
    "start": "2119240",
    "end": "2125300"
  },
  {
    "text": "you get is a sort of emergent architecture where over time you have this soup of events and endpoints and",
    "start": "2125300",
    "end": "2131660"
  },
  {
    "text": "the infrastructure is making sure that everything continues to work but if each of the endpoints is",
    "start": "2131660",
    "end": "2139070"
  },
  {
    "text": "typically only part of one software system in your enterprise so we might have one software",
    "start": "2139070",
    "end": "2145070"
  },
  {
    "text": "system here and one software system here and the fact that they're communicating via events",
    "start": "2145070",
    "end": "2151670"
  },
  {
    "text": "means that those endpoints aren't actually aware of one another so it can be very difficult to keep track of how",
    "start": "2151670",
    "end": "2158330"
  },
  {
    "text": "those things are communicating over time and sometimes the business will come to",
    "start": "2158330",
    "end": "2163790"
  },
  {
    "text": "you because something has happened and they just don't know why I don't know why that thing has happened in the first",
    "start": "2163790",
    "end": "2169220"
  },
  {
    "text": "place I have no idea now to be good if you'd be able to answer those questions right straight",
    "start": "2169220",
    "end": "2175880"
  },
  {
    "text": "off the bat when the business comes to you with a question it's awesome if you've already got the answer",
    "start": "2175880",
    "end": "2182380"
  },
  {
    "text": "so the first trick we're going to pull is we're going to create a central location called an audit log and every",
    "start": "2182380",
    "end": "2190130"
  },
  {
    "text": "time you get a message and process that message you're going to stick a copy of it into that central audit log and that",
    "start": "2190130",
    "end": "2197690"
  },
  {
    "text": "means whatever the business comes to you and says how did we get into this state you can point at the audit log the",
    "start": "2197690",
    "end": "2203720"
  },
  {
    "text": "answer is in there does anybody ever tried to find a needle in an actual haystack",
    "start": "2203720",
    "end": "2210790"
  },
  {
    "text": "because if you've been running one of these systems for a while your audit log is going to have tens hundreds thousands",
    "start": "2210790",
    "end": "2218090"
  },
  {
    "text": "millions of records and finding the ones that are relevant is going to be really difficult",
    "start": "2218090",
    "end": "2223780"
  },
  {
    "text": "the trick to finding a needle with that in it in a haystack get a really big magnet right",
    "start": "2223780",
    "end": "2230530"
  },
  {
    "text": "so how do i get a magnet on top of this data we need to turn it from being just the data store into being a database",
    "start": "2230530",
    "end": "2237140"
  },
  {
    "text": "something that we can query something that we can pull information out of on command but in order to do that we need",
    "start": "2237140",
    "end": "2243770"
  },
  {
    "text": "some metadata associated with each message that's going in so that we can use those to query and visualize what's",
    "start": "2243770",
    "end": "2250190"
  },
  {
    "text": "happening so piece of metadata we're going to add is a thing called conversation ID",
    "start": "2250190",
    "end": "2256330"
  },
  {
    "text": "and this is just a number that's going to uniquely identify a trail of messages through your system it's really simple",
    "start": "2256330",
    "end": "2263410"
  },
  {
    "text": "when an endpoint wants to send or publish send a send a message or publish an event",
    "start": "2263410",
    "end": "2269470"
  },
  {
    "text": "it's going to stick some kind of unique identifier right and normally this is a good here I've used an integer",
    "start": "2269470",
    "end": "2276340"
  },
  {
    "text": "but rest assured that the identifier 17 is unique across all my slides",
    "start": "2276340",
    "end": "2282310"
  },
  {
    "text": "so normally you'd use acuity because then it's going to be unique across all of the endpoints in your system",
    "start": "2282310",
    "end": "2288490"
  },
  {
    "text": "the infrastructure is going to add this conversation ID and then it's going to deliver the message to wherever it needs",
    "start": "2288490",
    "end": "2293750"
  },
  {
    "text": "to go and when it gets there there might be new messages that are coming out so",
    "start": "2293750",
    "end": "2300470"
  },
  {
    "text": "as a result of processing ship order we might be publishing an event saying order shipped",
    "start": "2300470",
    "end": "2306280"
  },
  {
    "text": "so the infrastructure is going to take the conversation ID that we have for the incoming message and copy it into the am",
    "start": "2306280",
    "end": "2312320"
  },
  {
    "text": "going message it's kind of sticky identify that's going to travel through the system and when the order shipped",
    "start": "2312320",
    "end": "2317750"
  },
  {
    "text": "event gets handled at the other end if that results in more messages those messages will also have the conversation",
    "start": "2317750",
    "end": "2323480"
  },
  {
    "text": "ID 17 this is really important because once you have an order database filled with",
    "start": "2323480",
    "end": "2329810"
  },
  {
    "text": "all these messages if you find one that looks kind of interesting or if the business comes to you with a question and you find one message that looks like",
    "start": "2329810",
    "end": "2337070"
  },
  {
    "text": "it might be part of that you can call its conversation ID and query the database by conversation ID you can find",
    "start": "2337070",
    "end": "2342710"
  },
  {
    "text": "all of the other messages that were related to that one sequence of events",
    "start": "2342710",
    "end": "2348460"
  },
  {
    "text": "so the NDC Sydney 2016 Twitter leaderboard is built on top of a",
    "start": "2348610",
    "end": "2355340"
  },
  {
    "text": "messaging system it's running on top of in-service bus we are collecting all of the messages that it's processing into a",
    "start": "2355340",
    "end": "2360950"
  },
  {
    "text": "central database in this case service control and so when I found a message that look kind of interesting I find out",
    "start": "2360950",
    "end": "2367730"
  },
  {
    "text": "the conversation ID and I queried it and I got like a bag of other messages so we've got seven messages",
    "start": "2367730",
    "end": "2375670"
  },
  {
    "text": "now this has already helped immensely right because we had thousands of records and then we have seven but we",
    "start": "2375670",
    "end": "2382010"
  },
  {
    "text": "can still do a little bit better by capturing a little bit more information a little bit metadata",
    "start": "2382010",
    "end": "2387380"
  },
  {
    "text": "so we need two more to be able to produce a useful visualization the first",
    "start": "2387380",
    "end": "2392700"
  },
  {
    "text": "one is message identity pretty simple every message that goes out of an endpoint is going to get its own ID",
    "start": "2392700",
    "end": "2398150"
  },
  {
    "text": "when it gets to the other end if there's new messages that come out of that they're also going to get their own ID",
    "start": "2398150",
    "end": "2403820"
  },
  {
    "text": "but now we want to show that there's a relationship between these two things so by creating conversation ID we can pull",
    "start": "2403820",
    "end": "2410520"
  },
  {
    "text": "both of these messages out but now we've just got a bag of messages we want to show a relationship between them",
    "start": "2410520",
    "end": "2417050"
  },
  {
    "text": "so when this order shipped event is going out when a copy the message ID",
    "start": "2417050",
    "end": "2422160"
  },
  {
    "text": "from here into a new metadata field onto the outgoing message called related to",
    "start": "2422160",
    "end": "2428570"
  },
  {
    "text": "now because we've done that for every message in the conversation whenever we're looking at this bag of messages we",
    "start": "2428570",
    "end": "2434940"
  },
  {
    "text": "can figure out eat for each one which message caused it which means we can show a certain type",
    "start": "2434940",
    "end": "2441360"
  },
  {
    "text": "of visualization called a message flow and we can show that ship order led to",
    "start": "2441360",
    "end": "2446700"
  },
  {
    "text": "order shipped happening back to the Twitter exit the Twitter",
    "start": "2446700",
    "end": "2451950"
  },
  {
    "text": "leaderboard example these are the same messages again but now I'm added now",
    "start": "2451950",
    "end": "2456990"
  },
  {
    "text": "I've added message ID and related to so now we can use that information to arrange these into a message flow we can",
    "start": "2456990",
    "end": "2464610"
  },
  {
    "text": "see the processing analyze tweet led to tweet analyze being processed six times",
    "start": "2464610",
    "end": "2470570"
  },
  {
    "text": "why 60 anheuser yes",
    "start": "2470570",
    "end": "2476180"
  },
  {
    "text": "no it's not retweets so the reason why they're 6 we can find by adding again a",
    "start": "2478040",
    "end": "2485570"
  },
  {
    "text": "little bit more metadata to our to our audit log and then we can update the diagram with that new piece of metadata",
    "start": "2485570",
    "end": "2491830"
  },
  {
    "text": "so in this case what we're going to do is whenever a end point processes a message it's going to receive a message",
    "start": "2491830",
    "end": "2497780"
  },
  {
    "text": "it processes it to do something it's going to take its name and stamp it into the metadata of the message and then we",
    "start": "2497780",
    "end": "2504560"
  },
  {
    "text": "can show that metadata on this diagram ok",
    "start": "2504560",
    "end": "2510970"
  },
  {
    "text": "so the Twitter leaderboard is running on an application called a hash bus which is where that name comes from but here",
    "start": "2510970",
    "end": "2517100"
  },
  {
    "text": "we can see this hat bus application processed analyze tweet and that led to",
    "start": "2517100",
    "end": "2523060"
  },
  {
    "text": "this endpoint processing at we'd analyzed this endpoint processing at we'd analyzed the assembly and",
    "start": "2523060",
    "end": "2528620"
  },
  {
    "text": "processing at we'd analyzed and there's six different endpoints that are processing that one tweet analyzed event",
    "start": "2528620",
    "end": "2535570"
  },
  {
    "text": "and each one of them is is a projector don't need to worry about what a projector is and talk about that in a",
    "start": "2535570",
    "end": "2541250"
  },
  {
    "text": "minute so this is cool right we've already managed to just by querying the database",
    "start": "2541250",
    "end": "2546440"
  },
  {
    "text": "we can start to get a picture of what our system looks like under the covers but where did this Annalise tweak come",
    "start": "2546440",
    "end": "2553520"
  },
  {
    "text": "from well it doesn't have a related to so we know it wasn't caused by another message coming through the system was",
    "start": "2553520",
    "end": "2560240"
  },
  {
    "text": "caused by something else but it still had to be sent from somewhere so just as we added processor",
    "start": "2560240",
    "end": "2566360"
  },
  {
    "text": "metadata to each one of our messages let's add sender as well and when we do that we can update the",
    "start": "2566360",
    "end": "2572390"
  },
  {
    "text": "diagram to show where this message came from awesome",
    "start": "2572390",
    "end": "2578770"
  },
  {
    "text": "what other metadata can we add to this let's add some timing information let's add when messages were sent and when",
    "start": "2578770",
    "end": "2584960"
  },
  {
    "text": "they were processed pretty simple but now we're starting to",
    "start": "2584960",
    "end": "2590900"
  },
  {
    "text": "get into this problem again where we've got too much detail happening in this diagram this diagram isn't the right way",
    "start": "2590900",
    "end": "2595940"
  },
  {
    "text": "of looking at this detail when you're looking at timing information what you want to see is a timeline of how things",
    "start": "2595940",
    "end": "2601970"
  },
  {
    "text": "would develop of how things happened and it's actually easy to do we can do that with just the metadata that we've got",
    "start": "2601970",
    "end": "2607790"
  },
  {
    "text": "here so now that we have the conversation we have a list of endpoints that are",
    "start": "2607790",
    "end": "2613580"
  },
  {
    "text": "involved in that conversation once that processed and sent messages so we can pull out that information we can draw",
    "start": "2613580",
    "end": "2619460"
  },
  {
    "text": "them all those boxes at the top of our visualization and then we can add in the concept of time you know throwing some",
    "start": "2619460",
    "end": "2625040"
  },
  {
    "text": "timelines and here we're saying time is going to move forward as we move down the view",
    "start": "2625040",
    "end": "2631600"
  },
  {
    "text": "now because we had the information about when things were sent and what things were sent and we know which message",
    "start": "2631600",
    "end": "2637700"
  },
  {
    "text": "started the conversation we can add it to the diagram and we can show this endpoint Center",
    "start": "2637700",
    "end": "2644000"
  },
  {
    "text": "message here and it was processed during this block of time and then we know the sequence of events",
    "start": "2644000",
    "end": "2651740"
  },
  {
    "text": "that followed from that because we have all that in our conversation we have we can see which messages",
    "start": "2651740",
    "end": "2657190"
  },
  {
    "text": "went out as a result of that message then we can easily draw it on to this",
    "start": "2657190",
    "end": "2662780"
  },
  {
    "text": "diagram now what wasn't obvious from the previous visualization but is probably hopefully obvious now is that this",
    "start": "2662780",
    "end": "2669590"
  },
  {
    "text": "endpoint process things are a little bit later than all the rest so if you had an issue in your production environment",
    "start": "2669590",
    "end": "2675010"
  },
  {
    "text": "related to timing that you needed to diagnose and you handle this metadata already in your audit database you can",
    "start": "2675010",
    "end": "2682640"
  },
  {
    "text": "just walk up to it and produce this visualization and the answer jumps off the page you can see it",
    "start": "2682640",
    "end": "2689950"
  },
  {
    "text": "not only that but it's starting to show these static relationships between these endpoints remember I said the end points",
    "start": "2690520",
    "end": "2697040"
  },
  {
    "text": "aren't actually aware of each other so this hash bar Twitter monitor when it sends and analyzed tweet it doesn't know",
    "start": "2697040",
    "end": "2703550"
  },
  {
    "text": "where it's going but the infrastructure is going to deliver it and it's going to deliver it to this hash based application",
    "start": "2703550",
    "end": "2709510"
  },
  {
    "text": "and then hash based application is going to publish an event but it doesn't know where that event goes but here we can",
    "start": "2709510",
    "end": "2715730"
  },
  {
    "text": "actually start to see where that event goes we can see the static relationships that happen between the endpoints",
    "start": "2715730",
    "end": "2722170"
  },
  {
    "text": "so you can pivot the diagram again we can show the endpoints and we can show the messages that flow between them",
    "start": "2722170",
    "end": "2728890"
  },
  {
    "text": "but there's actually a problem with doing it this way does anybody know what it is",
    "start": "2728890",
    "end": "2735940"
  },
  {
    "text": "problem is that we're not showing everything the problem is just like every project",
    "start": "2736390",
    "end": "2741559"
  },
  {
    "text": "and every endpoint only has a part of the picture each conversation only has a part of the picture as well so if you're",
    "start": "2741559",
    "end": "2748309"
  },
  {
    "text": "looking at this conversation conversation one you're not even going to see and point B because it didn't",
    "start": "2748309",
    "end": "2755089"
  },
  {
    "text": "send any messages and it didn't process any messages and if you pick another random",
    "start": "2755089",
    "end": "2760219"
  },
  {
    "text": "conversation conversation to now we CN point v load up but we can't see end points a and C and it's hard to know by",
    "start": "2760219",
    "end": "2767479"
  },
  {
    "text": "looking at individual conversations whether or not you're seeing the whole picture the whole enterprise how everything is connected",
    "start": "2767479",
    "end": "2773859"
  },
  {
    "text": "we can do a little bit better than this so imagine this is just a subsection of",
    "start": "2773859",
    "end": "2778880"
  },
  {
    "text": "your audit audit trail we've got which message was being sent",
    "start": "2778880",
    "end": "2783890"
  },
  {
    "text": "what conversation it was a part of what message it was related to where it came from who sent it who got it and what it",
    "start": "2783890",
    "end": "2791029"
  },
  {
    "text": "was and what type of message it was let's throw away the first three columns we don't need those whatsoever for this",
    "start": "2791029",
    "end": "2797239"
  },
  {
    "text": "next type of visualization we're going to just use who sent a message who received a message and what type of",
    "start": "2797239",
    "end": "2802549"
  },
  {
    "text": "message it was if we look at the first row we can start to draw a part of our",
    "start": "2802549",
    "end": "2807739"
  },
  {
    "text": "diagram so we know about end point a and end point c and we know about ship border between them",
    "start": "2807739",
    "end": "2813459"
  },
  {
    "text": "if we look at the next row we can add any new information we find to the diagram as we go",
    "start": "2813459",
    "end": "2818979"
  },
  {
    "text": "so now we already knew about in Point C but now we know about end point D and the order shipped event",
    "start": "2818979",
    "end": "2825459"
  },
  {
    "text": "if we keep going once we've been through the entire audit trail we can actually build up a reasonable picture of all of",
    "start": "2825459",
    "end": "2831890"
  },
  {
    "text": "the endpoints that make up our system and",
    "start": "2831890",
    "end": "2836140"
  },
  {
    "text": "all the messages that flow between them now if we do this back on the Twitter",
    "start": "2837099",
    "end": "2844339"
  },
  {
    "text": "leaderboard example something stabling happens a brand-new endpoint appears",
    "start": "2844339",
    "end": "2850630"
  },
  {
    "text": "one that's really used one way we'd have to be really lucky to hit one",
    "start": "2850630",
    "end": "2855859"
  },
  {
    "text": "conversation in a million to find that one conversation that involves the ketchup endpoint so it was something",
    "start": "2855859",
    "end": "2862279"
  },
  {
    "text": "that we wouldn't have drawn by looking at individual conversations we needed to find the right conversation and this type of view is using all of",
    "start": "2862279",
    "end": "2869360"
  },
  {
    "text": "the conversations in your database to build up something now this is a step above what we were",
    "start": "2869360",
    "end": "2875570"
  },
  {
    "text": "doing with c4 with static analysis because this isn't how we think the system is going to behave this isn't how",
    "start": "2875570",
    "end": "2881510"
  },
  {
    "text": "we've designed a system to behave this isn't how we hope the system behaviors this is evidence of how the system has",
    "start": "2881510",
    "end": "2887960"
  },
  {
    "text": "behaved this is a snapshot of the behavior that has actually already taken place this is not designing your system",
    "start": "2887960",
    "end": "2896890"
  },
  {
    "text": "this is visualizing your system you're actually seeing what your system is doing under the covers",
    "start": "2896890",
    "end": "2903070"
  },
  {
    "text": "which means every time you want to look at this view you should generate it again from scratch",
    "start": "2903070",
    "end": "2909220"
  },
  {
    "text": "because you may have new data you may have new information that's been added",
    "start": "2909220",
    "end": "2915130"
  },
  {
    "text": "but it can take a while to generate right because you've got hundreds of thousands of millions of rows of data so",
    "start": "2915250",
    "end": "2921740"
  },
  {
    "text": "that's problematic we can do one step better than that because the process we just looked at is a MapReduce function",
    "start": "2921740",
    "end": "2927970"
  },
  {
    "text": "by looking at all your order data we're going to map each entry into an edge",
    "start": "2927970",
    "end": "2933890"
  },
  {
    "text": "between two endpoints and then we can reduce that set of maps",
    "start": "2933890",
    "end": "2939290"
  },
  {
    "text": "documents down into a distinct set of edges between between nodes and we can",
    "start": "2939290",
    "end": "2944390"
  },
  {
    "text": "draw a diagram now if you are putting stuff in an order database in that order database is capable of running a",
    "start": "2944390",
    "end": "2949640"
  },
  {
    "text": "MapReduce function you can keep this up to date in near real time so you can have a consistent and always up-to-date",
    "start": "2949640",
    "end": "2955610"
  },
  {
    "text": "view of all of the endpoints in your system no matter which software system they belong to and how those things are",
    "start": "2955610",
    "end": "2961610"
  },
  {
    "text": "communicating I'll be back here me something",
    "start": "2961610",
    "end": "2970330"
  },
  {
    "text": "yep mapreduce cool so one last thing I want to cover about this type of",
    "start": "2971430",
    "end": "2976569"
  },
  {
    "text": "visualization which is that it doesn't show you everything it's only showing the pieces that are doing messaging so",
    "start": "2976569",
    "end": "2983470"
  },
  {
    "text": "it's only showing you end points that are sending messages and processing messages and it's only showing linkages",
    "start": "2983470",
    "end": "2988510"
  },
  {
    "text": "between endpoints where they're happening via messaging but there are other things happening in the system as well there are external",
    "start": "2988510",
    "end": "2995740"
  },
  {
    "text": "software systems that were interfacing with and this is where the knowledge of c-4 and the usage of c-4 helps because",
    "start": "2995740",
    "end": "3001950"
  },
  {
    "text": "we can start to just add those things manually into the diagram so here I can tell you the top two end points that",
    "start": "3001950",
    "end": "3008760"
  },
  {
    "text": "make up the Twitter leaderboard about talk to Twitter it's not really a big surprise with your tweets from somewhere",
    "start": "3008760",
    "end": "3014160"
  },
  {
    "text": "right if you tweet hash NDC Sydney we have to know about it so this is how we know about those two end points of the",
    "start": "3014160",
    "end": "3019619"
  },
  {
    "text": "top there they talk to Twitter and then they both send analyze tweet messages and they go down to this hash bus",
    "start": "3019619",
    "end": "3025500"
  },
  {
    "text": "application thing which is going to do some processing and figure out you know whether or not this message is interesting it's going to publish a",
    "start": "3025500",
    "end": "3031770"
  },
  {
    "text": "tweet analyzed event which is going to go off to six different projectors down the bottom here",
    "start": "3031770",
    "end": "3036829"
  },
  {
    "text": "but that's not the end of the story it's just the end of the messaging part of the story because each one of those",
    "start": "3036829",
    "end": "3043140"
  },
  {
    "text": "projectors talks to a web-scale to the instance on top of that manga tip",
    "start": "3043140",
    "end": "3049470"
  },
  {
    "text": "instance there is a web api and then connecting to that web api we",
    "start": "3049470",
    "end": "3055020"
  },
  {
    "text": "have a number of different viewer applications which the little console windows that you see around the place that show the top ten people",
    "start": "3055020",
    "end": "3061369"
  },
  {
    "text": "in each projector so you really need to",
    "start": "3061369",
    "end": "3067670"
  },
  {
    "text": "take this messaging view and augment it you need to add in some things manually",
    "start": "3067670",
    "end": "3074990"
  },
  {
    "text": "so some final resources if you're interested in c4 structure aiza and the",
    "start": "3075170",
    "end": "3081329"
  },
  {
    "text": "works of Simon Brown I highly recommend that you follow Simon Brown on twitter check out Simon's blog coding",
    "start": "3081329",
    "end": "3088410"
  },
  {
    "text": "architecture calm where he talks a lot about how to do this sort of stuff and he talks about architectural e evident coding styles so",
    "start": "3088410",
    "end": "3096869"
  },
  {
    "text": "hey you can write code in such a way that you can find those components and things check out structure a SOCOM",
    "start": "3096869",
    "end": "3104400"
  },
  {
    "text": "you can find instructions on structures or calm for how to sign up how to create your first model you can also find out",
    "start": "3104400",
    "end": "3109950"
  },
  {
    "text": "how to get get a handle get your hands on the the client libraries to get",
    "start": "3109950",
    "end": "3115260"
  },
  {
    "text": "started with those if you're interested in in me and",
    "start": "3115260",
    "end": "3120740"
  },
  {
    "text": "visualizing messaging systems and what we're doing in particular you can follow me I'm wolf buy it with a way if you buy",
    "start": "3120740",
    "end": "3127380"
  },
  {
    "text": "me a beer I'll explain where that comes from you can email me directly so Mike mini",
    "start": "3127380",
    "end": "3133200"
  },
  {
    "text": "tiller particular doesn't it we had a couple of blog posts about this topic on the particular blog and I'm going to",
    "start": "3133200",
    "end": "3138660"
  },
  {
    "text": "tweet out a few links about the individual blog posts that I think are relevant so if you're interested go and",
    "start": "3138660",
    "end": "3143730"
  },
  {
    "text": "check out twitter.com / will fight and you'll find that if you happen to be building on top of in-service bus today",
    "start": "3143730",
    "end": "3149309"
  },
  {
    "text": "or interested in building on in service bus in the future and you are interested in these types of visualizations we",
    "start": "3149309",
    "end": "3156059"
  },
  {
    "text": "actually have to linger does it for you already that's a tool called service inside and these screenshots down the",
    "start": "3156059",
    "end": "3161339"
  },
  {
    "text": "bottom are from service inside so we can actually already collect all of your messaging the in service parts",
    "start": "3161339",
    "end": "3168599"
  },
  {
    "text": "infrastructure already adds all that metadata and things into it and service inside already produces those visualizations for you",
    "start": "3168599",
    "end": "3176029"
  },
  {
    "text": "so my name is Mike minute illa I mean about nine minutes early but that's all",
    "start": "3176029",
    "end": "3182069"
  },
  {
    "text": "I've got for you thank you very much",
    "start": "3182069",
    "end": "3185150"
  },
  {
    "text": "so we probably got five minutes does anybody have any questions yep",
    "start": "3187880",
    "end": "3195750"
  },
  {
    "text": "yep",
    "start": "3200750",
    "end": "3203750"
  },
  {
    "text": "absolutely sir yes so really what you need is you need",
    "start": "3213609",
    "end": "3219140"
  },
  {
    "text": "some way of correlating that information so you need to know who's who was on one end of the communication channel who was",
    "start": "3219140",
    "end": "3224749"
  },
  {
    "text": "on the other end and what the nature of that communication channel was in between",
    "start": "3224749",
    "end": "3229869"
  },
  {
    "text": "yeah absolutely but it's much easier to do with messaging systems because you already just putting those messages in",
    "start": "3237279",
    "end": "3243469"
  },
  {
    "text": "an order database so it's really just side loading more information into a process you're already following",
    "start": "3243469",
    "end": "3250239"
  },
  {
    "text": "anything else",
    "start": "3250239",
    "end": "3253390"
  },
  {
    "text": "no I haven't it'd be really interesting to do actually",
    "start": "3261219",
    "end": "3266859"
  },
  {
    "text": "because yeah we collect all the data and the API is open so it be possible to push all that into something like power",
    "start": "3266859",
    "end": "3272959"
  },
  {
    "text": "bi don't be cool",
    "start": "3272959",
    "end": "3278079"
  },
  {
    "text": "absolutely so the the example of the code that actually showed there that was actually not using the built-in",
    "start": "3291030",
    "end": "3297220"
  },
  {
    "text": "component finder strategies so when you set up the component funny you can specify the kinds of strategy you want",
    "start": "3297220",
    "end": "3303010"
  },
  {
    "text": "to use for finding components but you can write your own strategy so you can put in whatever you want so if you'd rather use attributes you can do that",
    "start": "3303010",
    "end": "3310180"
  },
  {
    "text": "there's also an example on the github that's not part of the main package that's using Rosalind to pull it out of",
    "start": "3310180",
    "end": "3315790"
  },
  {
    "text": "XML comments",
    "start": "3315790",
    "end": "3318810"
  },
  {
    "text": "who else awesome thank you very much I'm going to be at the particular booth which is",
    "start": "3323700",
    "end": "3329410"
  },
  {
    "text": "upstairs for the rest of the conference so if you do have any questions any comments or if you just want to come check out what we're doing come along to",
    "start": "3329410",
    "end": "3336040"
  },
  {
    "text": "the booth and we'll chat to there thank you very much [Applause]",
    "start": "3336040",
    "end": "3344269"
  }
]