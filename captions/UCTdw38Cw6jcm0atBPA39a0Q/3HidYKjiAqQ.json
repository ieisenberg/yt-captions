[
  {
    "text": "good morning everyone it is way too early to talk about distributed",
    "start": "0",
    "end": "5250"
  },
  {
    "text": "transactions but we're gonna do this anyway so my name is Jimmy you can find",
    "start": "5250",
    "end": "10950"
  },
  {
    "text": "me on twitter @ @j bogart all the slides and all the code that you'll see today is also my github and github that com /j",
    "start": "10950",
    "end": "17970"
  },
  {
    "text": "Boger there's a presentations repository and that's where i put everything up there this topic and long with a lot of",
    "start": "17970",
    "end": "23519"
  },
  {
    "text": "other things you can find on my blog at jimmy Bogor calm and that's a bunch of other junk about me out there at the",
    "start": "23519",
    "end": "29039"
  },
  {
    "text": "bottom there so distributor transactions I want to rewind to a simpler time when",
    "start": "29039",
    "end": "35850"
  },
  {
    "text": "I didn't have to worry about distributed transactions and in a simpler time I just had an app and a database this is",
    "start": "35850",
    "end": "42989"
  },
  {
    "text": "probably what most systems that I work with these days just like the app and a database and I don't doing anything else",
    "start": "42989",
    "end": "48239"
  },
  {
    "text": "really to deal with any kind of distributed transactions and so when I have an app in the database I want to do",
    "start": "48239",
    "end": "54090"
  },
  {
    "text": "something with a database then it's just a single statement right update in this case I'm dealing with orders so update",
    "start": "54090",
    "end": "59910"
  },
  {
    "text": "orders update the status where I have some ID equals whatever everything is good now when I get that information",
    "start": "59910",
    "end": "66180"
  },
  {
    "text": "back from the database hopefully the information I read back out is the exact same thing I just I just wrote so if I",
    "start": "66180",
    "end": "71880"
  },
  {
    "text": "select the status from orders where ID equals one two three then I should be able to read exactly what I just wrote",
    "start": "71880",
    "end": "77400"
  },
  {
    "text": "it all was good I'm supposed to fill that in with a with a JPEG but I",
    "start": "77400",
    "end": "82650"
  },
  {
    "text": "couldn't find it in time so what if I want to make things more complicated what if wanted to do like a couple operations here so I'm not only updating",
    "start": "82650",
    "end": "90210"
  },
  {
    "text": "this status but I'm also updating the inventory because I'm I'm approving the",
    "start": "90210",
    "end": "95220"
  },
  {
    "text": "order or something like that suddenly to make sure that I subtract the inventory form whatever is there now this is okay",
    "start": "95220",
    "end": "100970"
  },
  {
    "text": "whenever I get the information back as long as everything is inside a",
    "start": "100970",
    "end": "106799"
  },
  {
    "text": "transaction now when I have something here where I'm starting to update the status and I'm decrementing the quantity",
    "start": "106799",
    "end": "112020"
  },
  {
    "text": "if something fails if I want to make sure that everything happens together this works as long as I put something",
    "start": "112020",
    "end": "118259"
  },
  {
    "text": "inside of an overall transaction and for the most part you don't have to worry about this as long as you're like a",
    "start": "118259",
    "end": "123689"
  },
  {
    "text": "normal like normal developer there wraps things and transactions then you can do operations like this and make sure that",
    "start": "123689",
    "end": "129330"
  },
  {
    "text": "everything succeeds or if something fails that everything goes back to where now the first time I ran into",
    "start": "129330",
    "end": "135780"
  },
  {
    "text": "distributed transactions was with a slight wrinkle here it wasn't just a",
    "start": "135780",
    "end": "140850"
  },
  {
    "text": "single application in the database I had two databases so I had the sales database in which I would update the",
    "start": "140850",
    "end": "146970"
  },
  {
    "text": "order status and add the shipping database in which I would update the inventory so I can make that first call",
    "start": "146970",
    "end": "152459"
  },
  {
    "text": "to say update the status of the order where the idea goes whatever and then I gold might get called the other one that says update the inventory set the",
    "start": "152459",
    "end": "158910"
  },
  {
    "text": "quantity minus the quantity based on whatever the order I saw and then everything is good right no because if",
    "start": "158910",
    "end": "166860"
  },
  {
    "text": "they try to do this just by itself you'll get some weird cryptic error from sequels like on the like well you get",
    "start": "166860",
    "end": "174270"
  },
  {
    "text": "some error code back like error code six seven four three it's like you can't do this because these are two different",
    "start": "174270",
    "end": "179340"
  },
  {
    "text": "databases and you're trying to do a transaction across these two databases so what do we do as developers we go to",
    "start": "179340",
    "end": "184980"
  },
  {
    "text": "stack overflow what happened here there's something about a distributed transaction because it says like we're",
    "start": "184980",
    "end": "191760"
  },
  {
    "text": "trying to do a transaction across these two databases and and we can't do that unless we try to coordinate these two things and we start to get these these",
    "start": "191760",
    "end": "197580"
  },
  {
    "text": "weird error messages back and then says we have to use a distributed transaction coordinator or the MS DTC where to now",
    "start": "197580",
    "end": "203670"
  },
  {
    "text": "involve the DBAs and the ops people to open up ports so it suddenly got much",
    "start": "203670",
    "end": "208739"
  },
  {
    "text": "more complicated than we had before so what is this distributed transaction thing that we have to now worry about",
    "start": "208739",
    "end": "214190"
  },
  {
    "text": "it's just a database transaction in which two or more network hosts are involved well even if they're in the",
    "start": "214190",
    "end": "220680"
  },
  {
    "text": "same physical server if I'm trying to talk to two databases then I still have to involve this this distributed",
    "start": "220680",
    "end": "227579"
  },
  {
    "text": "transaction now in order to accomplish the distributed transaction the most common protocol that's used is known as",
    "start": "227579",
    "end": "234690"
  },
  {
    "text": "a two-phase commit and we'll walk through this right now okay so with the two-phase commit we have to have",
    "start": "234690",
    "end": "240510"
  },
  {
    "text": "something that actually coordinates the transaction between these different resources and the resources could be really anything that supports a",
    "start": "240510",
    "end": "246600"
  },
  {
    "text": "transaction and this overall protocol and the two-phase commit starts out with a coordinator asking each resource can",
    "start": "246600",
    "end": "253590"
  },
  {
    "text": "you perform this action that's known as the preparer phase so it says resource a can you update the status of this order",
    "start": "253590",
    "end": "260220"
  },
  {
    "text": "yes or no resource B can you update the quantity of the stock yes or no and each",
    "start": "260220",
    "end": "265470"
  },
  {
    "text": "different resource says can do this operation yes or no finally when the coordinator receives the feedback",
    "start": "265470",
    "end": "271170"
  },
  {
    "text": "from each of the different resources it says ok now that everyone says yes then we'll go ahead and say go ahead and",
    "start": "271170",
    "end": "276900"
  },
  {
    "text": "commit the transaction everything should be ok now this this two-phase commit protocol",
    "start": "276900",
    "end": "283050"
  },
  {
    "text": "is not bulletproof so if something fails with the second part of the commit phase here then",
    "start": "283050",
    "end": "289430"
  },
  {
    "text": "actually the first thing still succeeded and the second part failed which is",
    "start": "289430",
    "end": "294540"
  },
  {
    "text": "unfortunate right because you you using you googled it you want to stack overflow you updated all the settings",
    "start": "294540",
    "end": "299880"
  },
  {
    "text": "and you open up all the ports to be able to do this transaction that cost resources and yet it's still not 100%",
    "start": "299880",
    "end": "305180"
  },
  {
    "text": "bulletproof so there are additional protocols on top of this to make it even",
    "start": "305180",
    "end": "310620"
  },
  {
    "text": "more bulletproof so there's a three phase commit they stop actually counting after three it's like in phase commit",
    "start": "310620",
    "end": "316440"
  },
  {
    "text": "where it's like just absolutely make sure that everything comes exceeder fail and then if it doesn't then have these",
    "start": "316440",
    "end": "322530"
  },
  {
    "text": "like complicated robot things so if you want to do this in the real world you",
    "start": "322530",
    "end": "329430"
  },
  {
    "text": "have to know does the thing that I'm trying to commit to actually supports this ability to have this two-phase",
    "start": "329430",
    "end": "335070"
  },
  {
    "text": "commit with siegel server it does support this through the Microsoft distributed transaction coordinator and",
    "start": "335070",
    "end": "340410"
  },
  {
    "text": "I'm really sorry if you know what that is because it sucks to have to deal with so sequel server does support this with",
    "start": "340410",
    "end": "347669"
  },
  {
    "text": "this extra service you have to you have to turn on and make sure all the ports are open for it to work but it doesn't",
    "start": "347669",
    "end": "354060"
  },
  {
    "text": "work all the time if you turn on always-on for sequel server you can't do",
    "start": "354060",
    "end": "359669"
  },
  {
    "text": "distributed transactions because it can I coordinate between these like extra servers that it's also writing to as",
    "start": "359669",
    "end": "365310"
  },
  {
    "text": "well as another server that's going on by the teen's well which is also unfortunate because like that's the most expensive checkbox when you're",
    "start": "365310",
    "end": "371280"
  },
  {
    "text": "installing sequel servers like turn ons always-on oops now you have to have like the ten thousand dollar extra per month",
    "start": "371280",
    "end": "378090"
  },
  {
    "text": "license for sequel server to do this but now when you do this you can't actually have these distributed transactions which they don't tell you until you also",
    "start": "378090",
    "end": "384180"
  },
  {
    "text": "try to turn that on and and get another weird cryptic error message coming back so that doesn't work or if you're in",
    "start": "384180",
    "end": "390030"
  },
  {
    "text": "Azure if you don't have two different instances of sequel server to coordinator transaction that doesn't work or even if you I physically make",
    "start": "390030",
    "end": "399000"
  },
  {
    "text": "the servers yourself inside of that is use now you're not using the sequel platform-as-a-service stuff if",
    "start": "399000",
    "end": "405770"
  },
  {
    "text": "you just install sequel server the azure folks will not turn on the ports to allow you to do this because it's so",
    "start": "405770",
    "end": "412520"
  },
  {
    "text": "expensive to do in the cloud you can do this if you're coordinating something like sequel server and Microsoft Message",
    "start": "412520",
    "end": "419210"
  },
  {
    "text": "Queuing those two things do support a disturbia transaction but if you try to get some other kind of message broker",
    "start": "419210",
    "end": "424730"
  },
  {
    "text": "involved like literally any other message broker again these distributed transactions don't work or if you're",
    "start": "424730",
    "end": "431090"
  },
  {
    "text": "using no sequel distributed transactions don't work or even transactions with multiple documents on a single database",
    "start": "431090",
    "end": "437450"
  },
  {
    "text": "don't work so just to sum this up transactions in a single resource yes we",
    "start": "437450",
    "end": "444170"
  },
  {
    "text": "can do that transactions across identical resources that is two instances of the same thing out there we",
    "start": "444170",
    "end": "450890"
  },
  {
    "text": "cannot do transactions if I have transactions across disparate resources that is I have a database and a queue we",
    "start": "450890",
    "end": "457220"
  },
  {
    "text": "cannot do this and of course the last things we found out in my my client was we can't even do transactions",
    "start": "457220",
    "end": "463430"
  },
  {
    "text": "necessarily across multiple items so there's there's the the yes we can do it in some sequences but for no sequel we",
    "start": "463430",
    "end": "470210"
  },
  {
    "text": "cannot do this so the the example that I'll be working well from is working",
    "start": "470210",
    "end": "477170"
  },
  {
    "text": "with a document database and a message broker so the document database in this case was MongoDB now MongoDB does have",
    "start": "477170",
    "end": "485630"
  },
  {
    "text": "multi document transactions but there's a giant disclaimer at the bottom that says do not use this in production it's",
    "start": "485630",
    "end": "490940"
  },
  {
    "text": "not been fully tested what you can it's like not the key thing you really want to see for a database if you like you",
    "start": "490940",
    "end": "496640"
  },
  {
    "text": "can do it but don't do this in to actually in production because it hasn't been fully tested and then we also were",
    "start": "496640",
    "end": "501950"
  },
  {
    "text": "talking to a message broker at the same time so this in this case we're looking",
    "start": "501950",
    "end": "507950"
  },
  {
    "text": "at will be a try to do order fulfillment so this is a ecommerce website in which",
    "start": "507950",
    "end": "513289"
  },
  {
    "text": "I'm trying to process an order in which we're consuming messages from rabbitmq we're doing multiple rights to MongoDB",
    "start": "513289",
    "end": "520039"
  },
  {
    "text": "and then we're also producing messages to MongoDB all within a single transactional activity that is like a",
    "start": "520039",
    "end": "526460"
  },
  {
    "text": "button click or a message handler that says perform this action do all these different things and it should all",
    "start": "526460",
    "end": "531890"
  },
  {
    "text": "succeed or should all fail now my client they just did this like just like one after the other but they",
    "start": "531890",
    "end": "540040"
  },
  {
    "text": "didn't understand that the databases and the messages they were talking to didn't support the ability to do all this in a",
    "start": "540040",
    "end": "546640"
  },
  {
    "text": "single transaction so at first it looks something like this we had the normal",
    "start": "546640",
    "end": "553210"
  },
  {
    "text": "sort of crowd activity where we're getting information out of the database we would update the order status after",
    "start": "553210",
    "end": "560170"
  },
  {
    "text": "we've approved it and then to in order to perform the the actual fulfillment of",
    "start": "560170",
    "end": "565810"
  },
  {
    "text": "the order request we would go through and say for each item and the order request go ahead and decrement the stock",
    "start": "565810",
    "end": "572080"
  },
  {
    "text": "based on what we see and every time we go through the list go ahead and update the stock based on each of these things",
    "start": "572080",
    "end": "577600"
  },
  {
    "text": "and then finally we would tell the clients notify other clients to say yes",
    "start": "577600",
    "end": "582730"
  },
  {
    "text": "the order has been approved and go on from there now there's a problem here of course and that none of these activities",
    "start": "582730",
    "end": "588670"
  },
  {
    "text": "are involved any sort of transaction so if any of these operations fails then",
    "start": "588670",
    "end": "594850"
  },
  {
    "text": "this overall ability to approve an order is in some unknown weird middle State so",
    "start": "594850",
    "end": "601060"
  },
  {
    "text": "I can update the original order requests by saying approve its beckon succeed but",
    "start": "601060",
    "end": "606130"
  },
  {
    "text": "as I'm updating the stock if something fails as I'm looping through those items then some of the stock has been updated",
    "start": "606130",
    "end": "611830"
  },
  {
    "text": "and the sum of the stock has not and then finally when I'm notifying downstream system to say yes everything",
    "start": "611830",
    "end": "616930"
  },
  {
    "text": "succeeded go ahead and publish out this event if whatever reason that downstream at that order that message broker is",
    "start": "616930",
    "end": "623170"
  },
  {
    "text": "down or unavailable then all the database has been updated except I haven't notified anyone else that this",
    "start": "623170",
    "end": "628450"
  },
  {
    "text": "thing has actually succeeded so looking at all this you're like well just don't",
    "start": "628450",
    "end": "635290"
  },
  {
    "text": "use MongoDB I just use a normal database that would be like the normal thing to thank Ike but in this case they couldn't",
    "start": "635290",
    "end": "643120"
  },
  {
    "text": "do that because the the the DBAs have managed the database would not would not",
    "start": "643120",
    "end": "649360"
  },
  {
    "text": "allow them to be able to make changes to it so they said well go MongoDB instead just like to cut them out of the",
    "start": "649360",
    "end": "654670"
  },
  {
    "text": "conversation and then even if they went to go say let's use sequel instead there's no there's no modern message",
    "start": "654670",
    "end": "662320"
  },
  {
    "text": "broker that's that the supports any kind of transactions as part of writing to whatever database it is so",
    "start": "662320",
    "end": "668390"
  },
  {
    "text": "rabbitmq ActiveMQ as your service bus none of those support the ability to",
    "start": "668390",
    "end": "673790"
  },
  {
    "text": "have a coordinated right to a database along with writing this message out to the queues so basically they're screwed",
    "start": "673790",
    "end": "681110"
  },
  {
    "text": "like they this will not this will work on their local machine because everything is up and running but as soon",
    "start": "681110",
    "end": "686600"
  },
  {
    "text": "as they went into any kind of production like environment and things got under load then suddenly things start to fail",
    "start": "686600",
    "end": "691640"
  },
  {
    "text": "and then there's there's this weird middle state so you start to Google can I do distributed transactions with",
    "start": "691640",
    "end": "697610"
  },
  {
    "text": "MongoDB and RabbitMQ and basically the only answer you get is a very highly voted Stack Overflow answer with no",
    "start": "697610",
    "end": "704390"
  },
  {
    "text": "accepted answers and that's like the worst place you want to be like the thing you need the most has no answers",
    "start": "704390",
    "end": "710090"
  },
  {
    "text": "whatsoever but what you do find are some people talking about this about how you get around the problem of these systems",
    "start": "710090",
    "end": "717260"
  },
  {
    "text": "and resources not supporting distributed transactions and they're using the form of some sort of white paper and so this",
    "start": "717260",
    "end": "722330"
  },
  {
    "text": "is what we found is this paper by Pat Holland called life beyond distributed",
    "start": "722330",
    "end": "727880"
  },
  {
    "text": "transactions and apostates opinion I know what some of those words mean but",
    "start": "727880",
    "end": "733610"
  },
  {
    "text": "distributed transactions was that really I was looking for how do we get beyond the the need to have these distributed",
    "start": "733610",
    "end": "739130"
  },
  {
    "text": "transactions now Pat Helen's is a very smart guy he worked at Microsoft",
    "start": "739130",
    "end": "744430"
  },
  {
    "text": "designing the distributed transaction coordinator so I was like well he'd know must know to what no what he's doing",
    "start": "744430",
    "end": "749870"
  },
  {
    "text": "because he's saying how to move beyond this thing that we're trying to get around so in this paper it describes it",
    "start": "749870",
    "end": "757220"
  },
  {
    "text": "describes that if we want to get past this ability to distribute do distributed transactions then we have to",
    "start": "757220",
    "end": "763670"
  },
  {
    "text": "assume that the transactional boundary is just one single item so one record",
    "start": "763670",
    "end": "769280"
  },
  {
    "text": "one row one document whatever that thing is that you can have as a transaction around we have to assume that that's",
    "start": "769280",
    "end": "775190"
  },
  {
    "text": "that is our transactional boundary this makes sense because as we move towards a more cloud-based environment then I",
    "start": "775190",
    "end": "782090"
  },
  {
    "text": "can't assume that the things that I'm writing to is on one single physical server so if you've ever used something",
    "start": "782090",
    "end": "787100"
  },
  {
    "text": "like Azure cosmos to be am I gonna be you don't necessarily assume that those two different documents are going to be",
    "start": "787100",
    "end": "793250"
  },
  {
    "text": "in the same physical server that you're writing to so if we make this assumption that the thing I'm writing to is just",
    "start": "793250",
    "end": "800450"
  },
  {
    "text": "one single item then how do i coordinate activities between multiple different things I still need",
    "start": "800450",
    "end": "805940"
  },
  {
    "text": "to approve the order and decrement stock but how do I do this if I can only write to one thing at a time and so he",
    "start": "805940",
    "end": "813649"
  },
  {
    "text": "describes a solution with this and the solution is to have some kind of messaging between these different",
    "start": "813649",
    "end": "818870"
  },
  {
    "text": "entities and these entities not only include the business data associated with that item but they also include",
    "start": "818870",
    "end": "824540"
  },
  {
    "text": "communication between that item and another one and so when I have communication between one item and the",
    "start": "824540",
    "end": "829850"
  },
  {
    "text": "other and I'm also writing that same communication to the same transaction of boundary then this allows us to have",
    "start": "829850",
    "end": "835370"
  },
  {
    "text": "some mechanism to be able to coordinate communication between different transactions and different resources so",
    "start": "835370",
    "end": "843110"
  },
  {
    "text": "each different entity will know and remember communication between the other and as I move out from this I have",
    "start": "843110",
    "end": "849949"
  },
  {
    "text": "multiple entities multiple transactional boundaries all communicating with each other all via messages and we said okay",
    "start": "849949",
    "end": "857389"
  },
  {
    "text": "this is great let's do this but the problem was it was there was no code it",
    "start": "857389",
    "end": "862639"
  },
  {
    "text": "was just pictures and diagrams of how to do this but no actual implementation behind the scenes so we actually needed",
    "start": "862639",
    "end": "868939"
  },
  {
    "text": "to implement this for our client but there was no there was no examples for us to to be able to do so so we had to",
    "start": "868939",
    "end": "876980"
  },
  {
    "text": "implement that picture ourselves now the way we did this was we had two",
    "start": "876980",
    "end": "882199"
  },
  {
    "text": "individual documents and the documents included some set a business data associated with them so this is the I'm",
    "start": "882199",
    "end": "888769"
  },
  {
    "text": "updating the status I'm taking the stock information that document was a transactional boundary we'd have to have",
    "start": "888769",
    "end": "894079"
  },
  {
    "text": "that business date as part of it I wanted to coordinate with another document that also had its own business",
    "start": "894079",
    "end": "900259"
  },
  {
    "text": "data then we needed to have some former communication between that one document and the other and we do this via some",
    "start": "900259",
    "end": "906649"
  },
  {
    "text": "kind of messaging between each individual document and each document needed to hold the messages that we'd",
    "start": "906649",
    "end": "913370"
  },
  {
    "text": "send from one to the other so the original document would have some way of notifying other messages but had to be",
    "start": "913370",
    "end": "920600"
  },
  {
    "text": "inside the same boundary as the transaction so each document would hold the messages it would send to another",
    "start": "920600",
    "end": "927319"
  },
  {
    "text": "individual document if I wanted to communicate back again from the document",
    "start": "927319",
    "end": "932360"
  },
  {
    "text": "to the other then that document would also need its own individual box then alle box would include all the",
    "start": "932360",
    "end": "938480"
  },
  {
    "text": "messages that I need to send to anyone else now this is what this wasn't enough",
    "start": "938480",
    "end": "945110"
  },
  {
    "text": "just to say I can send messages from one document to the other whenever I receive messages I have to remember who has sent",
    "start": "945110",
    "end": "952610"
  },
  {
    "text": "me what message because again my overall transactional boundary is only the document itself so I need to be able to",
    "start": "952610",
    "end": "958309"
  },
  {
    "text": "know have I received this message before so each individual document not only include an outbox to tell other people",
    "start": "958309",
    "end": "964490"
  },
  {
    "text": "what to do but also could in an inbox it says this is what I've received from other people so our overall document",
    "start": "964490",
    "end": "973040"
  },
  {
    "text": "which is the transactional boundary inside a MongoDB not only included the business data itself but had to also",
    "start": "973040",
    "end": "979970"
  },
  {
    "text": "include messages to communicate to other folks as well as messages that I've received for other folks so let's look",
    "start": "979970",
    "end": "988850"
  },
  {
    "text": "at an example this alright so I've got a",
    "start": "988850",
    "end": "999050"
  },
  {
    "text": "project here that's using in this case it's a sure it's a jerkwad most cosmos TV because Microsoft and in this in this",
    "start": "999050",
    "end": "1008410"
  },
  {
    "text": "solution we've got a user interface that's trying to coordinate a transaction between the the order",
    "start": "1008410",
    "end": "1016329"
  },
  {
    "text": "request that is I want to update the status and then any kind of stock information behind the scene to say make",
    "start": "1016329",
    "end": "1022089"
  },
  {
    "text": "sure that the stock is decremented based on whatever the order is so the first",
    "start": "1022089",
    "end": "1027279"
  },
  {
    "text": "thing we have is some way of describing what a message it messages and so what",
    "start": "1027279",
    "end": "1032860"
  },
  {
    "text": "we have to have is something that represents an individual message now the",
    "start": "1032860",
    "end": "1040750"
  },
  {
    "text": "first thing we need to do is be able to distinguish between one message and the other so the base thing that every message has to have is some kind of",
    "start": "1040750",
    "end": "1047500"
  },
  {
    "text": "identifier that says this message is different from that message as I'm looking at all the messages to process",
    "start": "1047500",
    "end": "1052809"
  },
  {
    "text": "if I need to know like this message is different from that one then an ID is the easiest thing for us to go from",
    "start": "1052809",
    "end": "1059970"
  },
  {
    "text": "the next thing we need is some kind of base class to be able to manage an inbox",
    "start": "1062000",
    "end": "1067940"
  },
  {
    "text": "in an outbox so in this case the document base this is what I would actually store inside of MongoDB I have",
    "start": "1067940",
    "end": "1075470"
  },
  {
    "text": "to have of course the base junk which is like ID and e tag and then I",
    "start": "1075470",
    "end": "1081230"
  },
  {
    "text": "need to have the ability to have a set of messages representing the inbox and",
    "start": "1081230",
    "end": "1087260"
  },
  {
    "text": "the outbox so as part of persisting my",
    "start": "1087260",
    "end": "1093350"
  },
  {
    "text": "documents I don't just have the business data itself I also need to include the",
    "start": "1093350",
    "end": "1098870"
  },
  {
    "text": "messages that I'm receiving or sending to other documents again because that's my transactional boundary and so I have",
    "start": "1098870",
    "end": "1105500"
  },
  {
    "text": "to include as part of my transactional boundary any communication that I'm sending a receding sieving to other folks so now that I have an ability to",
    "start": "1105500",
    "end": "1116049"
  },
  {
    "text": "persist messages that I'm sending to other people and persist messages that I've received from other people the",
    "start": "1116049",
    "end": "1123169"
  },
  {
    "text": "final piece then is to be able to communicate to different messages to be able to perform this overall",
    "start": "1123169",
    "end": "1129950"
  },
  {
    "text": "activity so let's look at the order request to see how that's done so this",
    "start": "1129950",
    "end": "1139010"
  },
  {
    "text": "overall order request is part of processing the button click to be able",
    "start": "1139010",
    "end": "1145760"
  },
  {
    "text": "to save the order and so as part of processing that order we have to say we're gonna take the items from the",
    "start": "1145760",
    "end": "1152150"
  },
  {
    "text": "carts and persist them into the order request and that will kick off things behind the scenes to actually process it but to be able to process that we need",
    "start": "1152150",
    "end": "1159230"
  },
  {
    "text": "to communicate to other outside parties so we're doing the normal thing which is I need to persist my own individual",
    "start": "1159230",
    "end": "1166669"
  },
  {
    "text": "business data which is the customer information and the items information in the carts and then I need to notify",
    "start": "1166669",
    "end": "1172039"
  },
  {
    "text": "downstream systems to say go ahead and process this order but I can't do that directly I can't just use a database or",
    "start": "1172039",
    "end": "1178580"
  },
  {
    "text": "use this use the message queue to be able to say go ahead and process this order I have to communicate via my own",
    "start": "1178580",
    "end": "1184850"
  },
  {
    "text": "outbox to be able to have that message go out so the last piece then is to send",
    "start": "1184850",
    "end": "1190669"
  },
  {
    "text": "a message to other systems to say go ahead and process this order",
    "start": "1190669",
    "end": "1195770"
  },
  {
    "text": "this sim dough is not going to actually physically send a message to anyone else downstream it's only going to add a",
    "start": "1195770",
    "end": "1201890"
  },
  {
    "text": "message to my own individual outbox in this case it's order created and the send is not actually a physically",
    "start": "1201890",
    "end": "1207950"
  },
  {
    "text": "sending a message it's only adding a message to my own individual outbox and",
    "start": "1207950",
    "end": "1213020"
  },
  {
    "text": "that's it so just to wrap all this up we",
    "start": "1213020",
    "end": "1221420"
  },
  {
    "text": "have to update our own business data because that's we're supposed to do and then we have to communicate to other",
    "start": "1221420",
    "end": "1227390"
  },
  {
    "text": "downstream resources but we can't do so directly so what we'll do is add a message to our own outbox which is the",
    "start": "1227390",
    "end": "1234500"
  },
  {
    "text": "only transactional bounder we can we can actually guarantee and then something else will then kick off that's",
    "start": "1234500",
    "end": "1239750"
  },
  {
    "text": "downstream process to go ahead and do more stuff",
    "start": "1239750",
    "end": "1244059"
  },
  {
    "text": "so something has to actually take that message and process it and to be able to do so we have to have something that's",
    "start": "1249480",
    "end": "1255789"
  },
  {
    "text": "looking at the outbox of these overall documents and saying something needs to be processed go ahead and send it down",
    "start": "1255789",
    "end": "1261460"
  },
  {
    "text": "to downstream systems and so this other thing that's going to be doing this will be a dispatcher the dispatcher will be",
    "start": "1261460",
    "end": "1268230"
  },
  {
    "text": "vitac rewind time to like before computers and imagining like a madman",
    "start": "1268230",
    "end": "1273999"
  },
  {
    "text": "sort of scenario where we have no computers whatsoever and people need to communicate via like physical documents",
    "start": "1273999",
    "end": "1279639"
  },
  {
    "text": "then the dispatcher is that person that's like walking down the aisle taking messages off people's desks and",
    "start": "1279639",
    "end": "1284679"
  },
  {
    "text": "then delivering amounts to other individual folks the dispatcher will be the thing that's taking messages out of",
    "start": "1284679",
    "end": "1290049"
  },
  {
    "text": "the outbox and then giving them to other documents in their inbox so the way this",
    "start": "1290049",
    "end": "1295809"
  },
  {
    "text": "will work is our first operation will be to put messages in our overall out boxes",
    "start": "1295809",
    "end": "1302169"
  },
  {
    "text": "along with any kind of data that we're needing to do and that is the only transaction that we can actually support",
    "start": "1302169",
    "end": "1307210"
  },
  {
    "text": "is that one document with its data in that South Box the dispatcher is looking",
    "start": "1307210",
    "end": "1312909"
  },
  {
    "text": "for messages in out boxes and it will take the message from the outbox of that",
    "start": "1312909",
    "end": "1318309"
  },
  {
    "text": "one document and send it along to any other documents that are interested in that overall message as each document",
    "start": "1318309",
    "end": "1326999"
  },
  {
    "text": "processes the message it adds that that message to its Inbox",
    "start": "1326999",
    "end": "1332259"
  },
  {
    "text": "and when it's done processing the message then that transaction completes and says yes I've successfully completed",
    "start": "1332259",
    "end": "1338679"
  },
  {
    "text": "and I'm also remembering that it processes this message based on that message being in my inbox all right so",
    "start": "1338679",
    "end": "1347559"
  },
  {
    "text": "let's look at an example of this so",
    "start": "1347559",
    "end": "1352258"
  },
  {
    "text": "we'll look at our dispatcher hatch",
    "start": "1353999",
    "end": "1362159"
  },
  {
    "text": "document message dispatcher yep so this dispatcher is the thing that's",
    "start": "1365290",
    "end": "1371300"
  },
  {
    "text": "pulling messages off of individual documents and then passing them to new",
    "start": "1371300",
    "end": "1376460"
  },
  {
    "text": "things that we'll be able to process those messages okay so in this document",
    "start": "1376460",
    "end": "1382160"
  },
  {
    "text": "and this message dispatcher it's going to dispatch messages based off of the",
    "start": "1382160",
    "end": "1387680"
  },
  {
    "text": "outbox of a single document it will loop through all the messages in the outbox",
    "start": "1387680",
    "end": "1393140"
  },
  {
    "text": "of the documents and then pass them over to something that will then go handle those messages now the dispatcher itself",
    "start": "1393140",
    "end": "1400280"
  },
  {
    "text": "doesn't necessarily know like who or what is going to be dispatching these messages to and so instead of us",
    "start": "1400280",
    "end": "1405920"
  },
  {
    "text": "directly communicating with those individual documents what we'll do is have an intermediary in the case in this of this we'll have a document message",
    "start": "1405920",
    "end": "1412670"
  },
  {
    "text": "handler yes a document message handler",
    "start": "1412670",
    "end": "1418100"
  },
  {
    "text": "we'll just handle an individual message and then for this if we look at the",
    "start": "1418100",
    "end": "1423500"
  },
  {
    "text": "actual message the handler for in this case creating an individual order this",
    "start": "1423500",
    "end": "1430970"
  },
  {
    "text": "is what received the message from the outbox of an individual document and then finally processes it so this is",
    "start": "1430970",
    "end": "1436850"
  },
  {
    "text": "whenever I'm creating an order I need to go start the process of fulfilling it so",
    "start": "1436850",
    "end": "1442400"
  },
  {
    "text": "in this case what we'll do is get the look to see if there's any kind of order",
    "start": "1442400",
    "end": "1448580"
  },
  {
    "text": "fulfillment and process if I don't find one then I'll go ahead and create a new order fulfillment document and then",
    "start": "1448580",
    "end": "1455390"
  },
  {
    "text": "finally pass it over to the order fulfillment document itself to be able to handle whatever it is to fulfill an",
    "start": "1455390",
    "end": "1461150"
  },
  {
    "text": "order and then finally we'll go ahead and update that individual document so",
    "start": "1461150",
    "end": "1471040"
  },
  {
    "text": "with that in place we're able to take messages out of out boxes find whoever",
    "start": "1471040",
    "end": "1477800"
  },
  {
    "text": "can process them and then pass those messages to those individual documents to do whatever it is that they need to",
    "start": "1477800",
    "end": "1483950"
  },
  {
    "text": "be able to process that message and hopefully everything goes okay but the",
    "start": "1483950",
    "end": "1489260"
  },
  {
    "text": "whole point of this is we don't have transactions distributed transactions we can't guarantee that everything succeeds",
    "start": "1489260",
    "end": "1494420"
  },
  {
    "text": "or fails so we have to design this that when things go wrong we can still recover from those failures so in this",
    "start": "1494420",
    "end": "1503200"
  },
  {
    "text": "original picture we had the first document that had the outbox we're passing messages to the inbox of another",
    "start": "1503200",
    "end": "1508930"
  },
  {
    "text": "document and it's supposed to all succeed or fail but if something goes wrong with our second one then we need",
    "start": "1508930",
    "end": "1515080"
  },
  {
    "text": "to be able to have to know that something failed and be able to retry this operation so we'll have something",
    "start": "1515080",
    "end": "1521290"
  },
  {
    "text": "that detects the failures and then says oops I you know suddenly didn't succeed so be able to to pass it off to",
    "start": "1521290",
    "end": "1528730"
  },
  {
    "text": "something behind the scenes to say go ahead and retry this operation sometime in the future now this is what the",
    "start": "1528730",
    "end": "1535240"
  },
  {
    "text": "distributed transactions Gipp do for us for free they will coordinate the activity between these two different",
    "start": "1535240",
    "end": "1540600"
  },
  {
    "text": "resources and when something fails they don't roll back the entire transaction we don't have that anymore so we have to",
    "start": "1540600",
    "end": "1546220"
  },
  {
    "text": "do this kind of operation ourselves to say when something fails then go ahead and take some some other corrective",
    "start": "1546220",
    "end": "1551860"
  },
  {
    "text": "action in this case we'll go ahead and retry that so in the case of needing to",
    "start": "1551860",
    "end": "1558490"
  },
  {
    "text": "retry something then that dispatcher will read messages out of some other",
    "start": "1558490",
    "end": "1563860"
  },
  {
    "text": "durable store that is able to persist that something needs to be retried and",
    "start": "1563860",
    "end": "1569250"
  },
  {
    "text": "it will retry this entire operation that is taking messages out of the original",
    "start": "1569250",
    "end": "1574870"
  },
  {
    "text": "outbox and then passing that message out to everyone that's interested the first one that receives it has already",
    "start": "1574870",
    "end": "1582100"
  },
  {
    "text": "processed this message so we need to make sure that it doesn't process this again so in the case of order",
    "start": "1582100",
    "end": "1588130"
  },
  {
    "text": "fulfillment we need to make sure that it doesn't decrement the stock twice for that individual item and how does it do",
    "start": "1588130",
    "end": "1593890"
  },
  {
    "text": "this it does this by remembering communication with other parties via this inbox so when it receives this",
    "start": "1593890",
    "end": "1600430"
  },
  {
    "text": "message it checks to see have I already done this operation before by looking at",
    "start": "1600430",
    "end": "1606100"
  },
  {
    "text": "its inbox and if I've already seen this message before then nothing to do I've already done this operation for other",
    "start": "1606100",
    "end": "1613510"
  },
  {
    "text": "documents that have not done this before they look in their inbox and say oh I don't I haven't actually processed this",
    "start": "1613510",
    "end": "1620500"
  },
  {
    "text": "before so may go ahead and do this operation and then finally that will succeed",
    "start": "1620500",
    "end": "1626370"
  },
  {
    "text": "we can only do this if we remember the communication between other documents",
    "start": "1628610",
    "end": "1635159"
  },
  {
    "text": "and other parties that inbox is the thing that we use to look at to say I have I process this message before and",
    "start": "1635159",
    "end": "1642330"
  },
  {
    "text": "because they're transactional boundary is only around the document that inbox has to be inside of our document itself",
    "start": "1642330",
    "end": "1650000"
  },
  {
    "text": "so it's not good enough just to have an outbox to communicate to outside parties because something can fail in between",
    "start": "1650000",
    "end": "1656970"
  },
  {
    "text": "and we don't know what succeeded or failed we have to be able to retry an operation and make sure that we don't do the same operation twice and the easiest",
    "start": "1656970",
    "end": "1663779"
  },
  {
    "text": "way to do so is just to remember communication via the inbox so now that",
    "start": "1663779",
    "end": "1670080"
  },
  {
    "text": "all handlers have succeeded here we can go back to the original document that had its outbox and say okay now that",
    "start": "1670080",
    "end": "1676019"
  },
  {
    "text": "we've notified and processed all downstream consumers let's go ahead and remove that message from your outbox so",
    "start": "1676019",
    "end": "1682289"
  },
  {
    "text": "that we don't process this message again once that's exceeded then we've",
    "start": "1682289",
    "end": "1688559"
  },
  {
    "text": "successfully processed this overall operation okay so let's look at an",
    "start": "1688559",
    "end": "1696120"
  },
  {
    "text": "example of the processing of an individual message okay so we stopped",
    "start": "1696120",
    "end": "1705659"
  },
  {
    "text": "here which was the handler of the order created message and there were some",
    "start": "1705659",
    "end": "1712139"
  },
  {
    "text": "stuff in here to start the order fulfillment process by creating a new order fulfillment documents there's this",
    "start": "1712139",
    "end": "1717809"
  },
  {
    "text": "piece down here though which was passing the message over to the order",
    "start": "1717809",
    "end": "1723149"
  },
  {
    "text": "fulfillment document to actually handle it now because we can't guarantee that",
    "start": "1723149",
    "end": "1728789"
  },
  {
    "text": "this method only executable execute once our transactional boundary is only one",
    "start": "1728789",
    "end": "1734039"
  },
  {
    "text": "document at a time and so we can't coordinate between removing the message and processing the message so that means",
    "start": "1734039",
    "end": "1739889"
  },
  {
    "text": "that we have to make sure that this method could execute multiple times so",
    "start": "1739889",
    "end": "1744899"
  },
  {
    "text": "we do some stuff in the beginning that says well just make sure the fulfillment only gets created once but when we pass",
    "start": "1744899",
    "end": "1750929"
  },
  {
    "text": "the message over to the order fulfillment document we need to make sure that that handle method only executes once and we do this",
    "start": "1750929",
    "end": "1761659"
  },
  {
    "text": "inside the document by making sure that when I received this message I check to",
    "start": "1762820",
    "end": "1769340"
  },
  {
    "text": "see have I received this message before so this is the actual business logic behind processing the order cancel",
    "start": "1769340",
    "end": "1776390"
  },
  {
    "text": "message so it says for each individual order that's created I need to fill my",
    "start": "1776390",
    "end": "1783830"
  },
  {
    "text": "line items with the line items or they were from the order and then I need to send out to the stock folks stock",
    "start": "1783830",
    "end": "1790279"
  },
  {
    "text": "request to say I want to go decrement this is the amount of stock requested",
    "start": "1790279",
    "end": "1795590"
  },
  {
    "text": "based on this product ID and I need to I need to request that you go ahead and decrement this individual stuff again I",
    "start": "1795590",
    "end": "1801649"
  },
  {
    "text": "can't coordinate directly with those other documents so if I want to ask other folks to be able to process this",
    "start": "1801649",
    "end": "1807919"
  },
  {
    "text": "individual request I have to do so be in my outbox now the last piece is to make",
    "start": "1807919",
    "end": "1813649"
  },
  {
    "text": "sure that this overall method is only executed once and so that's done inside",
    "start": "1813649",
    "end": "1818840"
  },
  {
    "text": "of this process method this process method looks at the met incoming message",
    "start": "1818840",
    "end": "1826970"
  },
  {
    "text": "and says do I contain that document message have I seen this message before",
    "start": "1826970",
    "end": "1831980"
  },
  {
    "text": "if I've seen this message before then I don't have anything to do and then I'll go ahead and say yep I I've done what",
    "start": "1831980",
    "end": "1838640"
  },
  {
    "text": "you asked me to do nothing else to do otherwise I'll go ahead and process this action whatever you asked me to do and",
    "start": "1838640",
    "end": "1844460"
  },
  {
    "text": "then finally add that message to my inbox so when this method completes I",
    "start": "1844460",
    "end": "1850130"
  },
  {
    "text": "will have perform whatever business action that you asked me to do and I will process and store the message in my",
    "start": "1850130",
    "end": "1857659"
  },
  {
    "text": "inbox so if this thing has to execute another time then I won't have to do the action again I'll just look to see yep",
    "start": "1857659",
    "end": "1864110"
  },
  {
    "text": "you contain that document message nothing to do",
    "start": "1864110",
    "end": "1868778"
  },
  {
    "text": "so the next piece is something has to call dispatch for individual documents I",
    "start": "1874570",
    "end": "1881710"
  },
  {
    "text": "just I just instantiated two documents put some messages in an outbox and then",
    "start": "1881710",
    "end": "1887299"
  },
  {
    "text": "something's handling them but something needs to initiate taking the messages out of the outbox and then processing",
    "start": "1887299",
    "end": "1892879"
  },
  {
    "text": "them with other things so in our case we",
    "start": "1892879",
    "end": "1898759"
  },
  {
    "text": "had a look at what are all the things we could possibly be do as part of an overall button click and over that in",
    "start": "1898759",
    "end": "1906440"
  },
  {
    "text": "that overall button click we wanted to make sure that we could process as much as we could so there was the first document that was the real business work",
    "start": "1906440",
    "end": "1912799"
  },
  {
    "text": "but then we wanted to make sure that we could try to process other things as well so for that we had a unit of work",
    "start": "1912799",
    "end": "1918049"
  },
  {
    "text": "they could take messages out of the outbox of a documents find everything",
    "start": "1918049",
    "end": "1923330"
  },
  {
    "text": "that's been done and then look at anything else that what needed to have work done and then process those messages as well so as work was being",
    "start": "1923330",
    "end": "1930080"
  },
  {
    "text": "done by individual documents each document would register itself in a unit of work so that if I needed to process",
    "start": "1930080",
    "end": "1937340"
  },
  {
    "text": "any of those documents messages there was something that kept track of all the things that have happened and then all",
    "start": "1937340",
    "end": "1942740"
  },
  {
    "text": "the documents I needed to process so as each document processed it would",
    "start": "1942740",
    "end": "1948769"
  },
  {
    "text": "register itself with a unit of work unit of work to say okay now that it processes one document let's go ahead",
    "start": "1948769",
    "end": "1954499"
  },
  {
    "text": "and do any kind of downstream work with that any other document that it might have and then keep going and keep going",
    "start": "1954499",
    "end": "1960710"
  },
  {
    "text": "until there's nothing left sometimes documents would fail and so",
    "start": "1960710",
    "end": "1965720"
  },
  {
    "text": "I'd have to flag them and then those would be the pieces that would then kick it off to some kind of retry policy to",
    "start": "1965720",
    "end": "1971149"
  },
  {
    "text": "say something failed go ahead and try this operation again now in the case of",
    "start": "1971149",
    "end": "1979759"
  },
  {
    "text": "a failure I don't know exactly what failed and where and so the unit of work would say let's go ahead and start from",
    "start": "1979759",
    "end": "1985639"
  },
  {
    "text": "the top and work our way down until we are able to succeed the entire set of documents based on this overall unit of",
    "start": "1985639",
    "end": "1992210"
  },
  {
    "text": "work all right so let's look at an example of our unit of work",
    "start": "1992210",
    "end": "2000269"
  },
  {
    "text": "so the unit of work is the thing that needs to call the document dispatcher",
    "start": "2003509",
    "end": "2009539"
  },
  {
    "text": "something has to call dispatch on an individual documents and so something",
    "start": "2009539",
    "end": "2015460"
  },
  {
    "text": "has to keep track of all the things that have happened in order to be know in order to know who I need to dispatch",
    "start": "2015460",
    "end": "2020830"
  },
  {
    "text": "these individual messages for so that is",
    "start": "2020830",
    "end": "2025899"
  },
  {
    "text": "our unit of work now if you're just coming from like in any frame work lands",
    "start": "2025899",
    "end": "2032619"
  },
  {
    "text": "you don't have to worry about these kinds of patterns something's already keeping track of which records have been",
    "start": "2032619",
    "end": "2037720"
  },
  {
    "text": "updated and changed in order to flush them out and say those changes to the database in MongoDB land or as your",
    "start": "2037720",
    "end": "2045369"
  },
  {
    "text": "cosmos TV land there's nothing that keeps track which documents have changed in order to be able to save this to the",
    "start": "2045369",
    "end": "2050799"
  },
  {
    "text": "database every time we call save it will like it will make that call immediately to go save that document and so we don't",
    "start": "2050799",
    "end": "2056530"
  },
  {
    "text": "want to do that we want to have something that keeps track of which documents I've changed so that I can then dispatch any kind of outbox",
    "start": "2056530",
    "end": "2061809"
  },
  {
    "text": "messages to whatever documents and needed this message is dispatched to and so that will be our unit of work our",
    "start": "2061809",
    "end": "2067868"
  },
  {
    "text": "unit of work we'll be able to get messages out or get documents out of the",
    "start": "2067869",
    "end": "2074200"
  },
  {
    "text": "underlying document repository I can register individual documents or a group",
    "start": "2074200",
    "end": "2079898"
  },
  {
    "text": "of documents and then finally I can complete the unit of work or because there's no transactions I can't roll",
    "start": "2079899",
    "end": "2085780"
  },
  {
    "text": "back because you don't have transactions so I can reset it though to say we've we",
    "start": "2085780",
    "end": "2092829"
  },
  {
    "text": "need to read to retry this entire operation so go ahead and reset the overall unit of work all right",
    "start": "2092829",
    "end": "2102630"
  },
  {
    "text": "so behind the scenes this is just a bunch of like communication with the",
    "start": "2102630",
    "end": "2108160"
  },
  {
    "text": "underlying client api's for this so to find a document oh yes the identity map",
    "start": "2108160",
    "end": "2117270"
  },
  {
    "text": "so we need to make sure that I don't accidentally process the messages twice",
    "start": "2117270",
    "end": "2122589"
  },
  {
    "text": "for an individual document cuz that's wasteful so what we'll do is we'll store all the documents that we're processing",
    "start": "2122589",
    "end": "2129400"
  },
  {
    "text": "for an individual request and what's known as an identity map and I did any map is it's kind of a cache for pulling things",
    "start": "2129400",
    "end": "2136570"
  },
  {
    "text": "out of the underlying data store and this cache is really just a hash or set it says I need to I need to collect the",
    "start": "2136570",
    "end": "2144910"
  },
  {
    "text": "documents that I've processed and just make sure I only have one instance in memory for each document that I'm going",
    "start": "2144910",
    "end": "2150369"
  },
  {
    "text": "to be processing for this overall request so whenever I find a document",
    "start": "2150369",
    "end": "2157619"
  },
  {
    "text": "I'm going to be looking at my identity map first if I don't find it there and it's going to go to the underlying",
    "start": "2157619",
    "end": "2163150"
  },
  {
    "text": "client data store to be able to pull those documents out to complete the",
    "start": "2163150",
    "end": "2169900"
  },
  {
    "text": "transaction or complete the overall request what we'll be doing is looping",
    "start": "2169900",
    "end": "2175510"
  },
  {
    "text": "through all the documents that I've stored in this overall request and then any document that has anything in its",
    "start": "2175510",
    "end": "2181900"
  },
  {
    "text": "outbox right here I will then go call",
    "start": "2181900",
    "end": "2187390"
  },
  {
    "text": "the dispatcher to say dispatch that document to that dispatch the messages",
    "start": "2187390",
    "end": "2193119"
  },
  {
    "text": "from that outbox of that document to anyone that's interested in what's going on there now",
    "start": "2193119",
    "end": "2199390"
  },
  {
    "text": "if something goes wrong then we'll go ahead and skip that for the next one and",
    "start": "2199390",
    "end": "2206050"
  },
  {
    "text": "then add it to an outbox or to it to retry queue to say go ahead and dispatch",
    "start": "2206050",
    "end": "2212040"
  },
  {
    "text": "this individual document that failed offline so this kind of assumes that I",
    "start": "2212040",
    "end": "2219190"
  },
  {
    "text": "can have partial success and partial failure this is where I need to have a conversation with the business to say is it okay if I process some of these",
    "start": "2219190",
    "end": "2226359"
  },
  {
    "text": "documents successfully and some of them may fail off and they can succeed them offline",
    "start": "2226359",
    "end": "2231670"
  },
  {
    "text": "or if there's some other business logic that says we have to have this all succeed or fail then I'd have to have",
    "start": "2231670",
    "end": "2237910"
  },
  {
    "text": "some business logic that says go go ahead and undo the actions of whatever happened before that's a conversation I",
    "start": "2237910",
    "end": "2243940"
  },
  {
    "text": "would have to have about the business in the case of e-commerce I want to succeed as much as I can because I can replenish",
    "start": "2243940",
    "end": "2249250"
  },
  {
    "text": "stock I can just go order more stuff but for some cases I may need to have some kind",
    "start": "2249250",
    "end": "2254890"
  },
  {
    "text": "of undo operation and so that's just something that would have to talk with the business to understand what's most appropriate for this for this scenario",
    "start": "2254890",
    "end": "2263369"
  },
  {
    "text": "so the last thing on his show was the",
    "start": "2264590",
    "end": "2270410"
  },
  {
    "text": "repository that pulls these different pieces off now normally I don't like the",
    "start": "2270410",
    "end": "2278390"
  },
  {
    "text": "repository pattern because it for most of the database space or m's that I work with that pattern already exists but for",
    "start": "2278390",
    "end": "2285830"
  },
  {
    "text": "something like Azure cosmos TB or MongoDB they don't have a concept of a repository so I'm gonna be creating one",
    "start": "2285830",
    "end": "2291380"
  },
  {
    "text": "of those things myself so this document repository this is the normal API that I'd go through and so instead of my my",
    "start": "2291380",
    "end": "2298010"
  },
  {
    "text": "client code directly reaching into the cosmos TV or MongoDB API I need to have",
    "start": "2298010",
    "end": "2303320"
  },
  {
    "text": "something that wraps all that in in order to be able to process these out Bach messages and so I introduce a",
    "start": "2303320",
    "end": "2310280"
  },
  {
    "text": "repository because it didn't exist before so this repository is the thing I'll be talking to and my normal business object",
    "start": "2310280",
    "end": "2316550"
  },
  {
    "text": "code and then this will encapsulate all the stuff behind the scenes to be able to get stuff out of my unit of work or",
    "start": "2316550",
    "end": "2323330"
  },
  {
    "text": "to fall back and then call the client API so if I want to actually get an item",
    "start": "2323330",
    "end": "2329510"
  },
  {
    "text": "out of the database yes this is the",
    "start": "2329510",
    "end": "2337130"
  },
  {
    "text": "piece that will find an item that by ID it will first look at the unit of work",
    "start": "2337130",
    "end": "2342260"
  },
  {
    "text": "to see do I have this overall item and if I have it then go ahead and return",
    "start": "2342260",
    "end": "2348440"
  },
  {
    "text": "that otherwise I will use the underlying API for whatever document database I'm working with get that item out of the",
    "start": "2348440",
    "end": "2355160"
  },
  {
    "text": "database and then register that item with unit of work so that the inner work can track it appropriately and then",
    "start": "2355160",
    "end": "2360950"
  },
  {
    "text": "finally we're going and return it back out and this is all the other like weird",
    "start": "2360950",
    "end": "2366790"
  },
  {
    "text": "document DB code I have to write for cosmos like status code junk so when I'm",
    "start": "2366790",
    "end": "2374030"
  },
  {
    "text": "using this my client code all the way",
    "start": "2374030",
    "end": "2380830"
  },
  {
    "text": "my client code will just use the repository itself and the repository",
    "start": "2382750",
    "end": "2387920"
  },
  {
    "text": "will handle the the work of getting things in and out of the unit of work being able to register those things and",
    "start": "2387920",
    "end": "2393890"
  },
  {
    "text": "make sure that behind the scenes the unit of work is able to then process those messages in the overall outbox my",
    "start": "2393890",
    "end": "2400100"
  },
  {
    "text": "client code though just knows for posit Ori okay",
    "start": "2400100",
    "end": "2405550"
  },
  {
    "text": "so that's when things go wrong I register them in the unit of work and",
    "start": "2405550",
    "end": "2410990"
  },
  {
    "text": "then I can go ahead and retry them if something goes wrong but what if what if something really goes wrong so in this",
    "start": "2410990",
    "end": "2417140"
  },
  {
    "text": "case we had before we communicated to a set of documents and those documents succeeded and then one of them failed",
    "start": "2417140",
    "end": "2422660"
  },
  {
    "text": "and so it's we should be able to recover from this failure as long as the unit of work then says oops something failed go",
    "start": "2422660",
    "end": "2429290"
  },
  {
    "text": "ahead and write that out too a retry q but what if the unit of work itself fails because again our",
    "start": "2429290",
    "end": "2436250"
  },
  {
    "text": "transactional boundary is each individual document something could fail in that document but then again someone",
    "start": "2436250",
    "end": "2441890"
  },
  {
    "text": "pulls the plug in the overall system and a unit of work is not able to then go push that off to something behind the",
    "start": "2441890",
    "end": "2447740"
  },
  {
    "text": "scenes so we have to have some sort of fallback and our fallback is going to be something that's listening for changes",
    "start": "2447740",
    "end": "2455180"
  },
  {
    "text": "in documents and having a backup communication to say if if this overall",
    "start": "2455180",
    "end": "2462080"
  },
  {
    "text": "operation succeeds or fails then we'll have something behind the scenes they can go ahead and take those individual",
    "start": "2462080",
    "end": "2468020"
  },
  {
    "text": "documents and then go ahead and process them behind the scenes via retries so",
    "start": "2468020",
    "end": "2476320"
  },
  {
    "text": "let's look at an example of a trigger to be able to handle these offline messages",
    "start": "2476320",
    "end": "2482150"
  },
  {
    "text": "now this does this is very specific to Azure cosmos DB Azure cosmos DB has the",
    "start": "2482150",
    "end": "2489170"
  },
  {
    "text": "ability to have triggers or change or change notifications so that every time a document changes you can have some set",
    "start": "2489170",
    "end": "2496130"
  },
  {
    "text": "of code that's executed based on whatever change that occurs and so we'd be hooking into that to say anytime",
    "start": "2496130",
    "end": "2502790"
  },
  {
    "text": "someone changes a document that has an outbox with messages to process notify",
    "start": "2502790",
    "end": "2508369"
  },
  {
    "text": "us so that we can process those messages offline",
    "start": "2508369",
    "end": "2513369"
  },
  {
    "text": "so this will be document so this",
    "start": "2514560",
    "end": "2524540"
  },
  {
    "text": "document feed observer will execute each time a document changes and every time a",
    "start": "2524540",
    "end": "2532770"
  },
  {
    "text": "document changes we want to look to see if that met that document has anything in its outbox so it'll do something very",
    "start": "2532770",
    "end": "2540660"
  },
  {
    "text": "similar to the to the overall dispatcher or the unit of work that says as I",
    "start": "2540660",
    "end": "2546600"
  },
  {
    "text": "process individual changes for these documents if I have any items in my",
    "start": "2546600",
    "end": "2551670"
  },
  {
    "text": "outbox then go ahead and send notify a retry queue to go ahead and process",
    "start": "2551670",
    "end": "2558000"
  },
  {
    "text": "those individual documents so this will not process those messages immediately it will put a message on a durable store",
    "start": "2558000",
    "end": "2564870"
  },
  {
    "text": "in this case as your service bus to say go ahead and process the document messages for this individual item so",
    "start": "2564870",
    "end": "2574010"
  },
  {
    "text": "they handler for this will just call the dispatcher so it's taking messages off",
    "start": "2574010",
    "end": "2579600"
  },
  {
    "text": "of a queue to say go ahead and process the messages for this individual document and eventually that that goes",
    "start": "2579600",
    "end": "2585270"
  },
  {
    "text": "ahead and calls the same dispatcher we had before it will look to see if there's any messages in the outbox and",
    "start": "2585270",
    "end": "2591330"
  },
  {
    "text": "then for each message in the outbox dispatch those messages to each individual document now this will",
    "start": "2591330",
    "end": "2604110"
  },
  {
    "text": "execute for every single document that we have changes for so we have to we",
    "start": "2604110",
    "end": "2609600"
  },
  {
    "text": "have to decide do we want as part of executing the overall operation do we want to have the messages all process",
    "start": "2609600",
    "end": "2617100"
  },
  {
    "text": "immediately for each documents or do we want to just just completely rely on back in processing to be able to",
    "start": "2617100",
    "end": "2622410"
  },
  {
    "text": "coordinate communication between overall documents so for us in the real world",
    "start": "2622410",
    "end": "2630150"
  },
  {
    "text": "example for our clients we did a mix so we said when that when the user clicks the button will try to process",
    "start": "2630150",
    "end": "2636870"
  },
  {
    "text": "everything in the context of that button click and then just the backend back in",
    "start": "2636870",
    "end": "2641880"
  },
  {
    "text": "notifications will just be a fallback so if something failed based on the button click then",
    "start": "2641880",
    "end": "2647680"
  },
  {
    "text": "this will go ahead and process those messages for us behind the scenes we",
    "start": "2647680",
    "end": "2652720"
  },
  {
    "text": "could have done it though where it says I will only do the primary document it says when I ever clicked a button I only",
    "start": "2652720",
    "end": "2659260"
  },
  {
    "text": "do the one single operation for that one single document and this will be the thing that does all of the backend",
    "start": "2659260",
    "end": "2664470"
  },
  {
    "text": "coordination between my different documents and then I won't have any other operations that that try to occur",
    "start": "2664470",
    "end": "2669850"
  },
  {
    "text": "as part of the button click so the",
    "start": "2669850",
    "end": "2677230"
  },
  {
    "text": "overall unit of work we have this part",
    "start": "2677230",
    "end": "2684430"
  },
  {
    "text": "that says complete that says after I've processed some operation for the user",
    "start": "2684430",
    "end": "2690100"
  },
  {
    "text": "look at all the documents that I've worked with and go ahead and try to dispatch those outbox messages to",
    "start": "2690100",
    "end": "2697240"
  },
  {
    "text": "anything that perhaps could can handle those things so this does need to execute at some point during the request",
    "start": "2697240",
    "end": "2703060"
  },
  {
    "text": "and so for us we wind up doing this as part of every time I do something in the",
    "start": "2703060",
    "end": "2710500"
  },
  {
    "text": "every time I process some kind of operation then something's going to wrap that operation and complete the unit of",
    "start": "2710500",
    "end": "2717310"
  },
  {
    "text": "work so depending on the context of",
    "start": "2717310",
    "end": "2722710"
  },
  {
    "text": "whatever you're executing in in our case we were in a mixed environment of web requests and back-end services and so we",
    "start": "2722710",
    "end": "2730330"
  },
  {
    "text": "had to have something that just wrapped any kind of operation to complete the internet work but if you're using something if you just using pure web",
    "start": "2730330",
    "end": "2735610"
  },
  {
    "text": "requests or ASP network then you probably do the unit of work and slide something like a filter to say start the",
    "start": "2735610",
    "end": "2742180"
  },
  {
    "text": "request perform the operations and then at the end of the request go ahead and complete the unit of work in our case we",
    "start": "2742180",
    "end": "2749440"
  },
  {
    "text": "had a mixed environment so we had to have something that could potentially execute anywhere so we wrote something",
    "start": "2749440",
    "end": "2755020"
  },
  {
    "text": "that could execute despite any kind of context that we'd be working in so our",
    "start": "2755020",
    "end": "2762130"
  },
  {
    "text": "developers didn't have to worry about making sure they called complete the unit of work because again if I have to",
    "start": "2762130",
    "end": "2768250"
  },
  {
    "text": "remember to do something I'll probably forget so this unit of work behavior executes for every single request that",
    "start": "2768250",
    "end": "2775270"
  },
  {
    "text": "we have in our system and if something happens to change with a",
    "start": "2775270",
    "end": "2781120"
  },
  {
    "text": "or with a document with an outbox then this will always make sure that I complete that unit of work and dispatch",
    "start": "2781120",
    "end": "2786670"
  },
  {
    "text": "those messages to any other potential document that's there all right so the",
    "start": "2786670",
    "end": "2794650"
  },
  {
    "text": "last thing we'll be looking at is a more a more complex example so in their first",
    "start": "2794650",
    "end": "2803440"
  },
  {
    "text": "set of code we were just completing an order someone clicked a button and have to notify downstream system systems",
    "start": "2803440",
    "end": "2809290"
  },
  {
    "text": "wasn't doing anything interesting when I'm fulfilling the order didn't have to start looking at coordinating between",
    "start": "2809290",
    "end": "2815590"
  },
  {
    "text": "the individual order request itself and looking at any kind of downstream stock information to make sure that based on",
    "start": "2815590",
    "end": "2822910"
  },
  {
    "text": "what the person is trying to order do I have enough stock available to complete that now each individual stock item is",
    "start": "2822910",
    "end": "2829300"
  },
  {
    "text": "another individual document with its own individual stock so I had to ask each stock item to say do I have enough stock",
    "start": "2829300",
    "end": "2836110"
  },
  {
    "text": "to complete this request and you tell me based on that stock information can I can I complete this overall order and",
    "start": "2836110",
    "end": "2843040"
  },
  {
    "text": "only it when all the different stock items tell me we have enough stock to",
    "start": "2843040",
    "end": "2848560"
  },
  {
    "text": "complete this order then the overall order request is okay and we can fulfill that fulfill that order so we have to",
    "start": "2848560",
    "end": "2856390"
  },
  {
    "text": "introduce this middle piece this this saga which is a it's a coordinator",
    "start": "2856390",
    "end": "2862150"
  },
  {
    "text": "between the order request itself someone trying to order something and the overall stock items it's going to be",
    "start": "2862150",
    "end": "2867580"
  },
  {
    "text": "communicating with each individual item again via these outbox messages it's going to ask the order request well in",
    "start": "2867580",
    "end": "2874600"
  },
  {
    "text": "order to request itself will tell the order fulfillment saga yes orders been created and these the items that I want to order the order of fulfillment saga",
    "start": "2874600",
    "end": "2881440"
  },
  {
    "text": "is then going to communicate out to the individual stock items to say I want to request this amount of stock based on my",
    "start": "2881440",
    "end": "2888100"
  },
  {
    "text": "order and the stock items will look at it their overall inventory and say yes I",
    "start": "2888100",
    "end": "2894670"
  },
  {
    "text": "have enough stock or not until they order fulfillment of saga yep we've got the stock and I've I've confirmed it and",
    "start": "2894670",
    "end": "2900610"
  },
  {
    "text": "we've decremented it from our inventory so everything's good to go now something you can go wrong here so between the",
    "start": "2900610",
    "end": "2908230"
  },
  {
    "text": "time the eyes I I'm as I'm going through each individual stock item if one of the",
    "start": "2908230",
    "end": "2913720"
  },
  {
    "text": "stock items does it's have enough inventory from to fulfill its then I need to unwind the",
    "start": "2913720",
    "end": "2919360"
  },
  {
    "text": "entire operation so I have to go back and say oops the stock request was",
    "start": "2919360",
    "end": "2924460"
  },
  {
    "text": "denied based on whatever I stock information I've seen so based on that I",
    "start": "2924460",
    "end": "2929710"
  },
  {
    "text": "have to then go tell the other previous stock items the order has been cancelled because they don't have enough stock in",
    "start": "2929710",
    "end": "2935890"
  },
  {
    "text": "this one overall item and so restore the overall inventory because I'm gonna roll",
    "start": "2935890",
    "end": "2941170"
  },
  {
    "text": "this entire order back then finally we go communicate back to the original order request to say our order was",
    "start": "2941170",
    "end": "2946240"
  },
  {
    "text": "rejected because we didn't have enough stock based on this one individual item",
    "start": "2946240",
    "end": "2951660"
  },
  {
    "text": "by the way hope at the end of this you like let's just do sequel this all",
    "start": "2951660",
    "end": "2959140"
  },
  {
    "text": "assumes that we're not but in a normal database we just wrapped this whole thing in a transaction and we're good to",
    "start": "2959140",
    "end": "2964780"
  },
  {
    "text": "go but because we're using things that don't allow us to have transactions between these individual items then I",
    "start": "2964780",
    "end": "2970090"
  },
  {
    "text": "have to have this very sort of deliberate communication between these individual documents to be able to handle this situation where something",
    "start": "2970090",
    "end": "2976600"
  },
  {
    "text": "could parse to succeed and partially fail so let's look at the example this",
    "start": "2976600",
    "end": "2983020"
  },
  {
    "text": "is the full complete example of trying to fulfill an order request okay",
    "start": "2983020",
    "end": "2990670"
  },
  {
    "text": "so we started out first with the order order request being created we create",
    "start": "2990670",
    "end": "2999790"
  },
  {
    "text": "that order request based on the shopping cart information that the person has done for me - via the button click so",
    "start": "2999790",
    "end": "3005220"
  },
  {
    "text": "we're just persisting the the normal oh no we're persisting just the normal",
    "start": "3005220",
    "end": "3012990"
  },
  {
    "text": "customer information and the items setting its status to new and then I have to notify the downstream systems to",
    "start": "3012990",
    "end": "3019440"
  },
  {
    "text": "start processing disorder again we can't do that directly because we're not in a normal sequel database and so I'm",
    "start": "3019440",
    "end": "3025490"
  },
  {
    "text": "creating a message in my own individual outbox to say an orders been created and then this is the information that's",
    "start": "3025490",
    "end": "3033600"
  },
  {
    "text": "pertinent to those downstream systems my order ID the line items and then the product ID and quantity for each of",
    "start": "3033600",
    "end": "3039780"
  },
  {
    "text": "those individual line items as part of doing this operation I'm registering",
    "start": "3039780",
    "end": "3046800"
  },
  {
    "text": "myself with the unit of work and at the end of the unit of work when it completes its looking for anything messages in the outbox",
    "start": "3046800",
    "end": "3052890"
  },
  {
    "text": "and then take those messages and dispatching them to any other potential folks so the person that's going to be",
    "start": "3052890",
    "end": "3058850"
  },
  {
    "text": "interested in this message I'm receiving",
    "start": "3058850",
    "end": "3073920"
  },
  {
    "text": "the I'm receiving the notification that the orders been created and so I have to start an order fulfillment process to be",
    "start": "3073920",
    "end": "3081720"
  },
  {
    "text": "able to take the order information and then ask each of the stock items do you have enough stock to be able to process",
    "start": "3081720",
    "end": "3087750"
  },
  {
    "text": "this order and decrement the stock based on whatever I find in this order request but again it can do that directly so we",
    "start": "3087750",
    "end": "3094410"
  },
  {
    "text": "have to go through another message which is and my order fulfillment process",
    "start": "3094410",
    "end": "3100710"
  },
  {
    "text": "itself this individual document that says for each item there we go",
    "start": "3100710",
    "end": "3108060"
  },
  {
    "text": "for each individual line items I'm going to send a stock request based on the",
    "start": "3108060",
    "end": "3114510"
  },
  {
    "text": "product ID and the amount I'm requesting",
    "start": "3114510",
    "end": "3119300"
  },
  {
    "text": "so now that the order fulfillment has persisted all of its stock requests then",
    "start": "3120980",
    "end": "3126780"
  },
  {
    "text": "each individual stock item has to receive this stock request and check to see do I have enough stock to be able to",
    "start": "3126780",
    "end": "3132930"
  },
  {
    "text": "process this individual order so I go",
    "start": "3132930",
    "end": "3137940"
  },
  {
    "text": "look at stock request now when it's",
    "start": "3137940",
    "end": "3144210"
  },
  {
    "text": "handling each stock request again I have to wrap this all in a process so that if",
    "start": "3144210",
    "end": "3150630"
  },
  {
    "text": "I have received this message before I check to see if it's in my inbox and if it's a main box then they don't process",
    "start": "3150630",
    "end": "3156000"
  },
  {
    "text": "it so I don't decrement stock twice accidentally but in there and the actual business logic I will check to see is",
    "start": "3156000",
    "end": "3162420"
  },
  {
    "text": "the quantity available that I have greater than equal to the amount that's been requested then we're good I have",
    "start": "3162420",
    "end": "3168510"
  },
  {
    "text": "enough stock we can go ahead and decrement my stock so I will decrement the quantity available based on the",
    "start": "3168510",
    "end": "3175290"
  },
  {
    "text": "amount requested and send a message back to say yep I've I've got enough stock I have decremented the stock available",
    "start": "3175290",
    "end": "3181200"
  },
  {
    "text": "and I have confirmed your stock request so we send a message back to again",
    "start": "3181200",
    "end": "3187440"
  },
  {
    "text": "whoever's interested I've received your stock request I've confirmed your stock request and decremented the stock",
    "start": "3187440",
    "end": "3192900"
  },
  {
    "text": "available based on whatever you've ordered if I don't have enough stock",
    "start": "3192900",
    "end": "3198990"
  },
  {
    "text": "then I will send the stock request denied oh that's way too small okay if I",
    "start": "3198990",
    "end": "3210690"
  },
  {
    "text": "don't have enough stock then I tell them oops I I can't do this and so this is",
    "start": "3210690",
    "end": "3216150"
  },
  {
    "text": "the product an order fulfillment that I can't I can't fulfill the stock it's been denied this message gets persisted",
    "start": "3216150",
    "end": "3223830"
  },
  {
    "text": "to the outbox the unit of work keeps track of this the dispatcher takes the message from the outbox and again then I have to go",
    "start": "3223830",
    "end": "3229380"
  },
  {
    "text": "tell the order fulfillment saga that I don't have enough stock or I do have enough stock and to continue processing",
    "start": "3229380",
    "end": "3236900"
  },
  {
    "text": "so back in my order fulfillment operation after the orders been created",
    "start": "3236900",
    "end": "3244200"
  },
  {
    "text": "I have to handle confirmation or denying so confirmation it's just looking at my",
    "start": "3244200",
    "end": "3250320"
  },
  {
    "text": "line items and say yep I have confirmed from the stock and then check to see if it's all good if the stock request has been denied",
    "start": "3250320",
    "end": "3257550"
  },
  {
    "text": "than any to cancel the overall order which is unwinding all the individual",
    "start": "3257550",
    "end": "3262770"
  },
  {
    "text": "operations so each time I receive a confirmation for stock I have to check",
    "start": "3262770",
    "end": "3270210"
  },
  {
    "text": "to see have all the stock items been confirmed and if all the stock items",
    "start": "3270210",
    "end": "3275310"
  },
  {
    "text": "have been confirmed then I send it a message saying yep order Finland has is successful and then I can set tell the",
    "start": "3275310",
    "end": "3281490"
  },
  {
    "text": "customer yep we've successfully processed your order if I have to cancel",
    "start": "3281490",
    "end": "3286950"
  },
  {
    "text": "the order that is I don't have enough stock available for me then I have to for every single a line item I have to",
    "start": "3286950",
    "end": "3294870"
  },
  {
    "text": "return the stock and then reach up the stock based on the order being cancelled",
    "start": "3294870",
    "end": "3302690"
  },
  {
    "text": "yes it's a lot of work to do all this but because my trained directional",
    "start": "3305060",
    "end": "3310380"
  },
  {
    "text": "boundary is only one single document at a time I have to have this very deliberate incremental communication of",
    "start": "3310380",
    "end": "3316250"
  },
  {
    "text": "notifications between each individual party so in my head the way I designed this as I imagine each document as a",
    "start": "3316250",
    "end": "3322560"
  },
  {
    "text": "person that has to talk to someone else to be able to perform this overall business activity and so every time I",
    "start": "3322560",
    "end": "3328230"
  },
  {
    "text": "have to talk to someone to tell them like let them know or communicate then that tells me the communication I need",
    "start": "3328230",
    "end": "3334170"
  },
  {
    "text": "inside my individual document so yes",
    "start": "3334170",
    "end": "3339300"
  },
  {
    "text": "it's a it's a lot of work to put all this in place this is the only way I can make sure that I can coordinate these activities between different documents",
    "start": "3339300",
    "end": "3347250"
  },
  {
    "text": "or different resources that cannot support this overall transaction so",
    "start": "3347250",
    "end": "3352590"
  },
  {
    "text": "there are some other places that we could see this crop up so if I try to",
    "start": "3352590",
    "end": "3358350"
  },
  {
    "text": "coordinate a transaction between something that does support distributed transactions like sequel server and something that does not like RabbitMQ",
    "start": "3358350",
    "end": "3365310"
  },
  {
    "text": "then we have to worry about well what happens when something fails between these two things so if you're in a",
    "start": "3365310",
    "end": "3370380"
  },
  {
    "text": "situation we're writing to something that does support multi document transactions like sequel server but then",
    "start": "3370380",
    "end": "3376320"
  },
  {
    "text": "you start to involve something else that does not you have to think about well what happens when that other operation",
    "start": "3376320",
    "end": "3381390"
  },
  {
    "text": "fails so the overall approach that we",
    "start": "3381390",
    "end": "3386520"
  },
  {
    "text": "take is to find whatever transactional boundaries that exist in every single resource based on whatever we find and",
    "start": "3386520",
    "end": "3393990"
  },
  {
    "text": "then include that outbox based on whatever that transactional boundary we find is so MongoDB for example it",
    "start": "3393990",
    "end": "3402210"
  },
  {
    "text": "doesn't have individual it doesn't have transactions for each individual",
    "start": "3402210",
    "end": "3407550"
  },
  {
    "text": "document instead it doesn't have transactions around a group of documents instead it has transactions are out each",
    "start": "3407550",
    "end": "3413520"
  },
  {
    "text": "individual document sequel server though of course supports transactions across multiple records so that's our",
    "start": "3413520",
    "end": "3419790"
  },
  {
    "text": "transactional boundary there so as part of that we can just include the out box for whatever transactional boundary fine",
    "start": "3419790",
    "end": "3426300"
  },
  {
    "text": "so for something like Azure cosmos TV or MongoDB or out box will be scoped to",
    "start": "3426300",
    "end": "3432600"
  },
  {
    "text": "those transactional boundaries of the document but some like sequel server they can have the transaction around the",
    "start": "3432600",
    "end": "3437910"
  },
  {
    "text": "entire database then your outbox can then encompass just single table that gets written to along",
    "start": "3437910",
    "end": "3444030"
  },
  {
    "text": "with all those other documents itself other places we see this is in micro",
    "start": "3444030",
    "end": "3451800"
  },
  {
    "text": "services we're have to coordinate activities between overall services so I have one service micro service a that",
    "start": "3451800",
    "end": "3459270"
  },
  {
    "text": "has its own database with an outbox and as I'm doing things I will take the messages from those outbox and then",
    "start": "3459270",
    "end": "3465150"
  },
  {
    "text": "dispatch them to some other micro service on the other side so it's taking those messages from the outbox",
    "start": "3465150",
    "end": "3470339"
  },
  {
    "text": "going through some sort of translation to the outside world and then passing along to a broker which then takes those",
    "start": "3470339",
    "end": "3476310"
  },
  {
    "text": "messages off the queue and then passes them over to a receiver to a dispatcher and then finally to the other inbox of",
    "start": "3476310",
    "end": "3484200"
  },
  {
    "text": "the other side again because we don't",
    "start": "3484200",
    "end": "3489630"
  },
  {
    "text": "want to have transactions across micro services that's crazy talk this is how we can facilitate communication between",
    "start": "3489630",
    "end": "3495349"
  },
  {
    "text": "overall service boundaries without trying to involve a transaction that we",
    "start": "3495349",
    "end": "3501420"
  },
  {
    "text": "don't know if that can actually succeed or fail so overall our lessons here",
    "start": "3501420",
    "end": "3507960"
  },
  {
    "text": "distributed transactions are easy when I'm local that is of everything's on the same box and I'm not crossing network",
    "start": "3507960",
    "end": "3514079"
  },
  {
    "text": "boundaries then it's possible and it's actually very reasonable to do when when",
    "start": "3514079",
    "end": "3520710"
  },
  {
    "text": "I'm when I'm actually distributed that is when things are on different machines or different networks then distributed",
    "start": "3520710",
    "end": "3526200"
  },
  {
    "text": "transactions are hard or impossible which is ironic because it's not distributed in the title but you can't",
    "start": "3526200",
    "end": "3532410"
  },
  {
    "text": "actually usually you can't actually do them when your resources are distributed so in order to facilitate these",
    "start": "3532410",
    "end": "3538260"
  },
  {
    "text": "coordinated activities between individual resources we have to find the transactional boundaries that are",
    "start": "3538260",
    "end": "3543660"
  },
  {
    "text": "appropriate based one of resource and then introduced out boxes to coordinate communication between all those",
    "start": "3543660",
    "end": "3550109"
  },
  {
    "text": "different resources so going from that original paper an apostates opinion this",
    "start": "3550109",
    "end": "3557880"
  },
  {
    "text": "was our implementation of life beyond distributed transactions with the outbox",
    "start": "3557880",
    "end": "3564750"
  },
  {
    "text": "and inbox to coordinated communications so if you want to a full working running example you can find this on my github",
    "start": "3564750",
    "end": "3570540"
  },
  {
    "text": "there's a presentations repository they can find all the code behind the scenes here with cosmos",
    "start": "3570540",
    "end": "3575760"
  },
  {
    "text": "as your sequel and as your service bus otherwise thank you very much and I hope",
    "start": "3575760",
    "end": "3580770"
  },
  {
    "text": "you enjoy the rest of conference or if",
    "start": "3580770",
    "end": "3589050"
  },
  {
    "text": "you take away from this just you sequel valid well there's that",
    "start": "3589050",
    "end": "3596599"
  }
]