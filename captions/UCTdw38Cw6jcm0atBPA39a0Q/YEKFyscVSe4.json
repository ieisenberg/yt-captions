[
  {
    "text": "so thanks everyone for coming I hope you're not frozen to death yet but so",
    "start": "30",
    "end": "12170"
  },
  {
    "text": "this talk is sort of inspired by something that many people would think",
    "start": "12170",
    "end": "18690"
  },
  {
    "text": "it's just a marketing slogan and when you look at when you look at F sharp",
    "start": "18690",
    "end": "24720"
  },
  {
    "text": "website the official observe dot org homepage it says F sharp is a major open",
    "start": "24720",
    "end": "32070"
  },
  {
    "text": "source cross-platform functional first programming language and then it says",
    "start": "32070",
    "end": "38460"
  },
  {
    "text": "how great it is for for people and for companies I did have to shorten it a",
    "start": "38460",
    "end": "44040"
  },
  {
    "text": "little bit but I think what's interesting is this functional first",
    "start": "44040",
    "end": "49140"
  },
  {
    "text": "phrase because everybody knows what functional programming languages are",
    "start": "49140",
    "end": "54210"
  },
  {
    "text": "well you can go on Wikipedia and read what functional programming languages are so why did why is why ahrefs are",
    "start": "54210",
    "end": "61379"
  },
  {
    "text": "people using some weird phrase like functional first and I think it does",
    "start": "61379",
    "end": "67229"
  },
  {
    "text": "actually say something interesting about how the language works and this talk is",
    "start": "67229",
    "end": "73590"
  },
  {
    "text": "is tried trying to unpack that a little bit mostly through fairly practical",
    "start": "73590",
    "end": "79970"
  },
  {
    "text": "examples of how absorb looks so if you",
    "start": "79970",
    "end": "85740"
  },
  {
    "text": "if you think about functions and and functional most function what is what is",
    "start": "85740",
    "end": "94710"
  },
  {
    "text": "a function well a function from A to B is an object and such that for every a",
    "start": "94710",
    "end": "102290"
  },
  {
    "text": "in uppercase a there is unique little unique unique value F of a in a set B so",
    "start": "102290",
    "end": "111030"
  },
  {
    "text": "this is what the mathematicians will tell you this is a definition of a function and when people talk about",
    "start": "111030",
    "end": "116880"
  },
  {
    "text": "functional programming they actually often refer to mathematics mathematical concepts and the idea that you can write",
    "start": "116880",
    "end": "125790"
  },
  {
    "text": "programs by constructing something like a mathematical function but it turns out",
    "start": "125790",
    "end": "132599"
  },
  {
    "text": "there's there's yet another meaning of the word function and I think there's there something like",
    "start": "132599",
    "end": "140400"
  },
  {
    "text": "50 years anniversary of the Bauhaus school which is where a lot of the",
    "start": "140400",
    "end": "145710"
  },
  {
    "text": "modernist architecture sort of comes from or where it where it got its",
    "start": "145710",
    "end": "150810"
  },
  {
    "text": "inspiration and in design or in architecture a function is the purpose",
    "start": "150810",
    "end": "156510"
  },
  {
    "text": "for which something is designed or for which something exists so the the game",
    "start": "156510",
    "end": "163980"
  },
  {
    "text": "of this of this talk is let's try to pretend that functional programming",
    "start": "163980",
    "end": "169740"
  },
  {
    "text": "isn't treating function as a mathematical object but it's actually",
    "start": "169740",
    "end": "175230"
  },
  {
    "text": "talking about this function and I think this is actually in in a way sort of",
    "start": "175230",
    "end": "182610"
  },
  {
    "text": "closer to how absorb and absorb program programmers and absorb community thinks",
    "start": "182610",
    "end": "189030"
  },
  {
    "text": "about function so it's maybe this is actually a more useful analogy or more",
    "start": "189030",
    "end": "196470"
  },
  {
    "text": "useful parallel for programming than the mathematical function so one of the one",
    "start": "196470",
    "end": "203670"
  },
  {
    "text": "of the sort of key slogans of modernist architecture was form follows function and in in architecture the idea is that",
    "start": "203670",
    "end": "213000"
  },
  {
    "text": "if you're designing a building if you sort of design it according to what it",
    "start": "213000",
    "end": "218940"
  },
  {
    "text": "was meant for then the the form of the function will actually embody sort of",
    "start": "218940",
    "end": "225360"
  },
  {
    "text": "the the essence of what it's for and one",
    "start": "225360",
    "end": "230910"
  },
  {
    "text": "of the sort of common complaints about modernist architecture is that it's all just boring boxes and that's slightly",
    "start": "230910",
    "end": "242580"
  },
  {
    "text": "actually going against against this principle because the the idea of the slogan was that if you really understand",
    "start": "242580",
    "end": "248940"
  },
  {
    "text": "the function you'll you'll design something very individual because every",
    "start": "248940",
    "end": "254160"
  },
  {
    "text": "every sort of building has somewhat different function so that's my sort of",
    "start": "254160",
    "end": "261060"
  },
  {
    "text": "background and that's that's sort of the inspiration for this talk",
    "start": "261060",
    "end": "267060"
  },
  {
    "text": "look at some examples of functional programming in F sharp and try to",
    "start": "267060",
    "end": "273000"
  },
  {
    "text": "interpret it not as function as a mathematical object but as function as",
    "start": "273000",
    "end": "278550"
  },
  {
    "text": "as a purpose and I'll have a look at three different areas or three different",
    "start": "278550",
    "end": "286320"
  },
  {
    "text": "sort of categories of examples one is transformations and a lot of code in",
    "start": "286320",
    "end": "295639"
  },
  {
    "text": "well in any programming language really the purpose of it is to transform some",
    "start": "295639",
    "end": "302760"
  },
  {
    "text": "value into a new value using a series of transformations lots of business",
    "start": "302760",
    "end": "309030"
  },
  {
    "text": "processing does there's lots of event processing does this it's just a very very common pattern and how does F sharp",
    "start": "309030",
    "end": "318030"
  },
  {
    "text": "deal with it so how many people in the room have seen some F sharp already",
    "start": "318030",
    "end": "325160"
  },
  {
    "text": "quite quite a lot of you so the first example is going to be totally trivial",
    "start": "325160",
    "end": "331020"
  },
  {
    "text": "it's it's pretty much the thing that everybody in F service all the time and",
    "start": "331020",
    "end": "338060"
  },
  {
    "text": "I have a list of values the only interesting thing about this is going to",
    "start": "338060",
    "end": "344700"
  },
  {
    "text": "be my political jokes so this is a list which has a conversion rate between",
    "start": "344700",
    "end": "352830"
  },
  {
    "text": "pound and dollar and what I can it sort of for every date I've got a value",
    "start": "352830",
    "end": "361280"
  },
  {
    "text": "so there's 7th January 2016 this is the",
    "start": "361280",
    "end": "367050"
  },
  {
    "text": "number and I can do various transformations to my list so I can get",
    "start": "367050",
    "end": "376500"
  },
  {
    "text": "pairwise combinations which will give me the previous and the current value",
    "start": "376500",
    "end": "381600"
  },
  {
    "text": "forever so you sort of have a list of dates and you'll get a list of pairs of",
    "start": "381600",
    "end": "387840"
  },
  {
    "text": "dates and then I can do something like a",
    "start": "387840",
    "end": "392850"
  },
  {
    "text": "med function where I take the time or the date before and then the now day",
    "start": "392850",
    "end": "400500"
  },
  {
    "text": "and I'm going to just print before and",
    "start": "400500",
    "end": "405810"
  },
  {
    "text": "I'll get the date of that and formatted the string so if I run this it's kind of",
    "start": "405810",
    "end": "412590"
  },
  {
    "text": "tiny in there but that's alright it gives me a list of formatted date and",
    "start": "412590",
    "end": "421310"
  },
  {
    "text": "you can do lots of other interesting transformations like filter the data and",
    "start": "421310",
    "end": "427880"
  },
  {
    "text": "one interesting thing you can find is find some days where the drop the rate",
    "start": "427880",
    "end": "434700"
  },
  {
    "text": "the rate dropped by quite a lot so for example if I do now exchange rate -",
    "start": "434700",
    "end": "444740"
  },
  {
    "text": "that's the other way round isn't it well the nice thing about f-sharp is that I",
    "start": "444740",
    "end": "450660"
  },
  {
    "text": "can try this in F sharp interactive really quickly and see if I did it the",
    "start": "450660",
    "end": "456630"
  },
  {
    "text": "right way or not so is there a date where the exchange rate dropped by 0.1",
    "start": "456630",
    "end": "464520"
  },
  {
    "text": "or more yes there is it was 23rd June 2016 than the night the Brits voted for",
    "start": "464520",
    "end": "472590"
  },
  {
    "text": "brexit all right so that's one example of transformations not breaks it but the",
    "start": "472590",
    "end": "478890"
  },
  {
    "text": "list operations but the same principle",
    "start": "478890",
    "end": "486419"
  },
  {
    "text": "works for many many other things so this is another example but what I'm using",
    "start": "486419",
    "end": "492479"
  },
  {
    "text": "here is a library called Deedle and",
    "start": "492479",
    "end": "497540"
  },
  {
    "text": "that's a library for working with data frames so rather than just having like a",
    "start": "497540",
    "end": "502740"
  },
  {
    "text": "list of things I now have this data table and if I scroll up a little bit",
    "start": "502740",
    "end": "510979"
  },
  {
    "text": "well you can see even from the far that this looks like a table so I've loaded",
    "start": "510979",
    "end": "518010"
  },
  {
    "text": "data on Titan it's a famous data set with Titanic passengers and they all",
    "start": "518010",
    "end": "523320"
  },
  {
    "text": "have names they have gender age they have how much they paid and I also know",
    "start": "523320",
    "end": "530700"
  },
  {
    "text": "whether they survived or not and this is library that lets you do",
    "start": "530700",
    "end": "538150"
  },
  {
    "text": "various operations over the entire table of the data so for example I can take",
    "start": "538150",
    "end": "544030"
  },
  {
    "text": "data and I can use something like well",
    "start": "544030",
    "end": "550330"
  },
  {
    "text": "let's first do this so you can sort of ask the library to calculate average of",
    "start": "550330",
    "end": "557290"
  },
  {
    "text": "every column that's numeric and this gives me for example the average age which was 29 and other information and I",
    "start": "557290",
    "end": "568420"
  },
  {
    "text": "can follow exactly the same pattern as before so there's a set of functions for",
    "start": "568420",
    "end": "574480"
  },
  {
    "text": "transforming data frames so I can for example transfer filter rows and look at",
    "start": "574480",
    "end": "585840"
  },
  {
    "text": "only rows where the sex column is male",
    "start": "585840",
    "end": "594580"
  },
  {
    "text": "and I'll find that the average age of",
    "start": "594580",
    "end": "600760"
  },
  {
    "text": "male passengers was thirty point seven if I look at female passengers the",
    "start": "600760",
    "end": "608170"
  },
  {
    "text": "average age was twenty seven point nine so it's just an example where you can",
    "start": "608170",
    "end": "615220"
  },
  {
    "text": "actually you're actually using pretty much exactly the same pattern previously",
    "start": "615220",
    "end": "620920"
  },
  {
    "text": "for lists now for entire data frames and there's a lot more you can do with data",
    "start": "620920",
    "end": "628960"
  },
  {
    "text": "frames so this is a code snippet that actually does thus even more so what it",
    "start": "628960",
    "end": "637240"
  },
  {
    "text": "does is that it will reorganize or restructure the the data frame so that",
    "start": "637240",
    "end": "643660"
  },
  {
    "text": "sex is not just one column but it's part of an index so the thing on the left",
    "start": "643660",
    "end": "651610"
  },
  {
    "text": "before this arrow is an index and it's sort of defining this the structure of",
    "start": "651610",
    "end": "657370"
  },
  {
    "text": "the rows and now I restructured my data so that I can easily find what are the",
    "start": "657370",
    "end": "664270"
  },
  {
    "text": "male and female passengers and you can do various things about with",
    "start": "664270",
    "end": "670230"
  },
  {
    "text": "indices for example you can apply some aggregation operation over everything",
    "start": "670230",
    "end": "675930"
  },
  {
    "text": "that has the same value as the index so if I run this I'm actually going to get",
    "start": "675930",
    "end": "684450"
  },
  {
    "text": "a new data table which has all the same columns as before but now my index is",
    "start": "684450",
    "end": "689970"
  },
  {
    "text": "just male and female and I've averaged sort of aggregated everything over male",
    "start": "689970",
    "end": "695550"
  },
  {
    "text": "and female passengers so there's sort of two points here one is if you're working",
    "start": "695550",
    "end": "702300"
  },
  {
    "text": "with data tables have a look at Deedle which is a nice excerpt library for doing this the other point is that the",
    "start": "702300",
    "end": "710700"
  },
  {
    "text": "sort of same mechanism using the pipe operator actually works for many many",
    "start": "710700",
    "end": "716520"
  },
  {
    "text": "different things in the language and I think the sort of analogy with",
    "start": "716520",
    "end": "722460"
  },
  {
    "text": "architecture is that there's also sort of many patterns in architecture that",
    "start": "722460",
    "end": "728910"
  },
  {
    "text": "have been repeatedly used over and over that let you do quite different things",
    "start": "728910",
    "end": "735930"
  },
  {
    "text": "so this is a picture from my home country from slean which is where the",
    "start": "735930",
    "end": "741540"
  },
  {
    "text": "bat a shoe factory was was sort of established I think at the end of 19th",
    "start": "741540",
    "end": "746880"
  },
  {
    "text": "century and in the beginning of the 20th century they sort of built lot of lot of",
    "start": "746880",
    "end": "753810"
  },
  {
    "text": "different buildings but they're they're actually using the same style for both",
    "start": "753810",
    "end": "758940"
  },
  {
    "text": "of those sort of large office buildings or factories and for the houses that",
    "start": "758940",
    "end": "764100"
  },
  {
    "text": "they built for the workers so if you're if you're there you'll see that there's this sort of consistency in style across",
    "start": "764100",
    "end": "772350"
  },
  {
    "text": "many many different things and I think the pipe in F sharp is actually kind of",
    "start": "772350",
    "end": "778140"
  },
  {
    "text": "similar idea where you just get consistency across lots of different things so I showed you two examples with",
    "start": "778140",
    "end": "786240"
  },
  {
    "text": "data but pipe is actually a lot more useful than that so this is yet another",
    "start": "786240",
    "end": "793830"
  },
  {
    "text": "example how do I actually zoom well I can zoom",
    "start": "793830",
    "end": "806340"
  },
  {
    "text": "but that's right so this is a little playground fun 3d",
    "start": "806340",
    "end": "811650"
  },
  {
    "text": "dotnet that I built together with filter Alfred for his back then eight-year-old",
    "start": "811650",
    "end": "818190"
  },
  {
    "text": "son who is learning F sharp as you do when you're eight and this is using this",
    "start": "818190",
    "end": "824580"
  },
  {
    "text": "is using pipe but rather than for transforming data at this using pipe for",
    "start": "824580",
    "end": "831570"
  },
  {
    "text": "doing for transformations on some visual objects or some shapes so I can take",
    "start": "831570",
    "end": "838200"
  },
  {
    "text": "this cube and change the color that's the orange I run it and I get orange",
    "start": "838200",
    "end": "845790"
  },
  {
    "text": "cube or I can turn this from cube into I",
    "start": "845790",
    "end": "851330"
  },
  {
    "text": "think we have cylinder let's see yeah I",
    "start": "851330",
    "end": "857210"
  },
  {
    "text": "really don't know how to zoom now the",
    "start": "857210",
    "end": "864210"
  },
  {
    "text": "other the other thing is so aside from aside from this I can also move things",
    "start": "864210",
    "end": "871130"
  },
  {
    "text": "so if I say move then this is where I",
    "start": "871130",
    "end": "881520"
  },
  {
    "text": "have to get my coordinates right but I think I can move the cylinder up so",
    "start": "881520",
    "end": "886860"
  },
  {
    "text": "instead I'm going to move it down what I",
    "start": "886860",
    "end": "891990"
  },
  {
    "text": "want it and the only other operator that I have here is this dollar and this is a",
    "start": "891990",
    "end": "898980"
  },
  {
    "text": "custom operator that I defined so it doesn't really exist every elsewhere in F sharp I did need one more one more",
    "start": "898980",
    "end": "906570"
  },
  {
    "text": "thing in this example I can create cone and compose it with cylinder so now we",
    "start": "906570",
    "end": "914730"
  },
  {
    "text": "have a tower and I do have nicer version",
    "start": "914730",
    "end": "920010"
  },
  {
    "text": "of my tower with more colors and here the roof is actually a bit bigger and I",
    "start": "920010",
    "end": "926880"
  },
  {
    "text": "think this might be the moment where the lack of zooming will hurt us because I do have a castle as well but castle",
    "start": "926880",
    "end": "934589"
  },
  {
    "text": "might just be too big now if it's fits all right but the key point here is",
    "start": "934589",
    "end": "940109"
  },
  {
    "text": "rather than transforming lists or data tables I'm now transforming shapes but",
    "start": "940109",
    "end": "947369"
  },
  {
    "text": "the code is actually still using pretty much the same sort of construction block so I say give me a cone change the color",
    "start": "947369",
    "end": "955019"
  },
  {
    "text": "rescale it give me a cylinder change the color rescale it move it and there's a",
    "start": "955019",
    "end": "961739"
  },
  {
    "text": "little bit more but in the end you just you just end up saying built four towers",
    "start": "961739",
    "end": "967379"
  },
  {
    "text": "and built four walls so I think that the",
    "start": "967379",
    "end": "977609"
  },
  {
    "text": "sort of interesting point here that is that the pipe operator is something that",
    "start": "977609",
    "end": "982979"
  },
  {
    "text": "lets you do quite a lot of different things using the same sort of expression",
    "start": "982979",
    "end": "989549"
  },
  {
    "text": "and and it's because the purpose the sort of function is always the same it's",
    "start": "989549",
    "end": "995009"
  },
  {
    "text": "composing transformations and the way I've served does it is sort of similar",
    "start": "995009",
    "end": "1001669"
  },
  {
    "text": "to what what architects do you so one of the one of the key phrases with the",
    "start": "1001669",
    "end": "1007519"
  },
  {
    "text": "modernist movement was the elimination of ornament and in in buildings it meant",
    "start": "1007519",
    "end": "1015769"
  },
  {
    "text": "that you weren't weren't supposed to be doing things like that but instead you",
    "start": "1015769",
    "end": "1021350"
  },
  {
    "text": "just built sort of straight straight concrete walls and straight glass",
    "start": "1021350",
    "end": "1026720"
  },
  {
    "text": "windows and they'd F sharp you you sort of achieve similar thing by elimination",
    "start": "1026720",
    "end": "1032480"
  },
  {
    "text": "of keywords so F sure doesn't really have like a sort of special language",
    "start": "1032480",
    "end": "1038470"
  },
  {
    "text": "extension for doing for doing list processing it doesn't have something",
    "start": "1038470",
    "end": "1045529"
  },
  {
    "text": "like link but it does have a general purpose mechanism that lets you express",
    "start": "1045529",
    "end": "1051200"
  },
  {
    "text": "the same style it's not it's not entirely true because I've served us actually have sort of link like",
    "start": "1051200",
    "end": "1058220"
  },
  {
    "text": "extensions but they're still based on some general more reusable principle",
    "start": "1058220",
    "end": "1066190"
  },
  {
    "text": "it's kind of amazing that this if there's if there's one thing from",
    "start": "1066190",
    "end": "1072669"
  },
  {
    "text": "f-sharp that really got into lots of other programming languages it's the pipe operator which I think the",
    "start": "1072669",
    "end": "1079330"
  },
  {
    "text": "definition is something like eleven characters so that's the that's the last",
    "start": "1079330",
    "end": "1084700"
  },
  {
    "text": "thing lasting legacy of F sharp eleven characters so that was that was one",
    "start": "1084700",
    "end": "1093159"
  },
  {
    "text": "example of sort of a design principle or design mechanism that exists in F sharp",
    "start": "1093159",
    "end": "1100710"
  },
  {
    "text": "that's useful for a variety of things and surf's one particular purpose",
    "start": "1100710",
    "end": "1109860"
  },
  {
    "text": "another example that I think fits this idea very well as well as type providers",
    "start": "1109860",
    "end": "1117030"
  },
  {
    "text": "so type providers our language mechanism",
    "start": "1117030",
    "end": "1122590"
  },
  {
    "text": "that's that's designed for to let you sort of navigate through some",
    "start": "1122590",
    "end": "1127750"
  },
  {
    "text": "information or data source and extract extract some data from it so let's have",
    "start": "1127750",
    "end": "1135490"
  },
  {
    "text": "a look at two examples and close my Titanic",
    "start": "1135490",
    "end": "1141510"
  },
  {
    "text": "close my lists so I'll start with a",
    "start": "1141510",
    "end": "1153850"
  },
  {
    "text": "completely trivial example this is the type provider that lets you access data",
    "start": "1153850",
    "end": "1161770"
  },
  {
    "text": "about countries and the way it works or the way the way type providers work in",
    "start": "1161770",
    "end": "1168039"
  },
  {
    "text": "general is that there's sort of compiler extensions or compiler plugins in a way",
    "start": "1168039",
    "end": "1175450"
  },
  {
    "text": "where the types they give you get generated on the fly while you're typing",
    "start": "1175450",
    "end": "1183159"
  },
  {
    "text": "in your editor or while the compilation happens so what happens here is that the",
    "start": "1183159",
    "end": "1188770"
  },
  {
    "text": "type provider actually looks at the World Bank which is among other things",
    "start": "1188770",
    "end": "1195370"
  },
  {
    "text": "as an organization that has large data base information about various countries and",
    "start": "1195370",
    "end": "1202020"
  },
  {
    "text": "it gives me all the countries that it knows about well it gives me countries",
    "start": "1202020",
    "end": "1207580"
  },
  {
    "text": "and then also various other aggregations and lots of different things so I can",
    "start": "1207580",
    "end": "1213400"
  },
  {
    "text": "look at Portugal for example and if I look at indicators this will this will",
    "start": "1213400",
    "end": "1221110"
  },
  {
    "text": "give me a list of all the data data series that actually the World Bank",
    "start": "1221110",
    "end": "1228760"
  },
  {
    "text": "collects about all the countries that it knows so I did increase the font a bit",
    "start": "1228760",
    "end": "1236500"
  },
  {
    "text": "too much you can't really see quite what the what the entire name of the of the",
    "start": "1236500",
    "end": "1242980"
  },
  {
    "text": "field is but if we look at say carbon emissions then if I run it I get back a",
    "start": "1242980",
    "end": "1251980"
  },
  {
    "text": "data series well let's let's turn it",
    "start": "1251980",
    "end": "1259060"
  },
  {
    "text": "into a list I get back a data series where for every year I have the total",
    "start": "1259060",
    "end": "1264190"
  },
  {
    "text": "carbon emissions of Portugal and we can",
    "start": "1264190",
    "end": "1269410"
  },
  {
    "text": "draw this as a line so this is a line",
    "start": "1269410",
    "end": "1274960"
  },
  {
    "text": "chart of carbon emissions of Portugal and I can do a little bit more so if I",
    "start": "1274960",
    "end": "1285910"
  },
  {
    "text": "want to compare let's say compare Portugal and let's do China South China",
    "start": "1285910",
    "end": "1299910"
  },
  {
    "text": "China so I'm still using the type provider to navigate through my data set",
    "start": "1299910",
    "end": "1306640"
  },
  {
    "text": "and find some interesting data points I",
    "start": "1306640",
    "end": "1310830"
  },
  {
    "text": "get my chart yet no not yet",
    "start": "1313230",
    "end": "1317490"
  },
  {
    "text": "I'm probably real am i missing semicolon",
    "start": "1319650",
    "end": "1325900"
  },
  {
    "text": "I think it shouldn't be shouldn't be strictly necessary here so I could add a",
    "start": "1325900",
    "end": "1331030"
  },
  {
    "text": "semicolon here but I think a missing internet rather than semicolon so let me",
    "start": "1331030",
    "end": "1338260"
  },
  {
    "text": "try well first let me try doing this again and maybe the internet will come",
    "start": "1338260",
    "end": "1343810"
  },
  {
    "text": "back that's not the right way to get rid of it",
    "start": "1343810",
    "end": "1348970"
  },
  {
    "text": "do I need to pin it all right let's see that done",
    "start": "1348970",
    "end": "1354030"
  },
  {
    "text": "maybe it just doesn't like China I'm going to try United States instead oh it",
    "start": "1368360",
    "end": "1381540"
  },
  {
    "text": "doesn't like United States even more well then it's really because I'm missing Internet yeah that's alright I",
    "start": "1381540",
    "end": "1396390"
  },
  {
    "text": "did show you at least one example of this although I'm going to try something",
    "start": "1396390",
    "end": "1408180"
  },
  {
    "text": "else I do I do have one more example which I want to show you and that one does also",
    "start": "1408180",
    "end": "1415800"
  },
  {
    "text": "require internet so it might be better if it started working nice BEC so let's",
    "start": "1415800",
    "end": "1423360"
  },
  {
    "text": "try this again and there we are so this is Portugal",
    "start": "1423360",
    "end": "1432840"
  },
  {
    "text": "carbon emissions compared to the u.s. I think Portugal is on the bottom there",
    "start": "1432840",
    "end": "1437930"
  },
  {
    "text": "and this isn't very interesting because we are looking at the absolute values",
    "start": "1437930",
    "end": "1443820"
  },
  {
    "text": "but fortunately the data source also has data in metric tons per capita so this",
    "start": "1443820",
    "end": "1451260"
  },
  {
    "text": "is per person and this is where this is",
    "start": "1451260",
    "end": "1457140"
  },
  {
    "text": "where we actually learn more interesting things sorry",
    "start": "1457140",
    "end": "1462200"
  },
  {
    "text": "just sort of based on the shape that I showed before this is Portugal and this",
    "start": "1462890",
    "end": "1468840"
  },
  {
    "text": "is the u.s. so this was one example of accessing data but the main point here",
    "start": "1468840",
    "end": "1479880"
  },
  {
    "text": "is that this is again a mechanism that works for lots of different things so aside from aside from looking at the",
    "start": "1479880",
    "end": "1493410"
  },
  {
    "text": "World Bank there's tie providers for many other data sources and one that's quite",
    "start": "1493410",
    "end": "1499350"
  },
  {
    "text": "interesting the type provider that lets you parse",
    "start": "1499350",
    "end": "1504690"
  },
  {
    "text": "any json files so i do have an example",
    "start": "1504690",
    "end": "1510799"
  },
  {
    "text": "where so that's this long URL as a URL",
    "start": "1511040",
    "end": "1517080"
  },
  {
    "text": "over of a web service that gives you better forecast and what i'm doing here",
    "start": "1517080",
    "end": "1522480"
  },
  {
    "text": "is that i'm defining a new type called weather which is a type for any data",
    "start": "1522480",
    "end": "1533220"
  },
  {
    "text": "that is returned in the same format as this example so i scroll down here so",
    "start": "1533220",
    "end": "1542850"
  },
  {
    "text": "what happens now is that I can say weather dot load and give this a URL of",
    "start": "1542850",
    "end": "1549000"
  },
  {
    "text": "the service I'm just going to use exactly the same one as before and when",
    "start": "1549000",
    "end": "1555570"
  },
  {
    "text": "I when I run it it loads data from that service and I can say W dot and I get a",
    "start": "1555570",
    "end": "1564420"
  },
  {
    "text": "type that's generated based on the sample JSON file that the service",
    "start": "1564420",
    "end": "1569940"
  },
  {
    "text": "returns so I get back some JSON and I can do dot on this it's it's a static",
    "start": "1569940",
    "end": "1578670"
  },
  {
    "text": "type it's not like it's doing some some magic it's just a sort of type that's",
    "start": "1578670",
    "end": "1584610"
  },
  {
    "text": "generated by the type provider and I can see that there's a list of things which",
    "start": "1584610",
    "end": "1589950"
  },
  {
    "text": "happens to be the the dates for the weather forecast and I can do for day in",
    "start": "1589950",
    "end": "1597840"
  },
  {
    "text": "this list return let's say what is their",
    "start": "1597840",
    "end": "1603980"
  },
  {
    "text": "temperature during the day",
    "start": "1603980",
    "end": "1608210"
  },
  {
    "text": "let's do a bar chart for example so here's the here's the battery forecast",
    "start": "1612600",
    "end": "1618269"
  },
  {
    "text": "for the next for the next few days I think it actually starts at the bottom",
    "start": "1618269",
    "end": "1626029"
  },
  {
    "text": "the main point is again I'm just using a",
    "start": "1626659",
    "end": "1631740"
  },
  {
    "text": "general-purpose language mechanism here that lets me easily access data and in",
    "start": "1631740",
    "end": "1637860"
  },
  {
    "text": "the previous example we were doing dot to navigate through some big database of",
    "start": "1637860",
    "end": "1644000"
  },
  {
    "text": "country indicators here I'm just using dot to navigate through things in a JSON",
    "start": "1644000",
    "end": "1650549"
  },
  {
    "text": "file and one of the sort of motivations",
    "start": "1650549",
    "end": "1660570"
  },
  {
    "text": "for the modernist architecture or one of the slogans was that it tries to convey",
    "start": "1660570",
    "end": "1666659"
  },
  {
    "text": "the message of simplicity using basic geometric forums or simple materials and",
    "start": "1666659",
    "end": "1673549"
  },
  {
    "text": "in a way I think that the idea of dot and accessing something is really sort",
    "start": "1673549",
    "end": "1680399"
  },
  {
    "text": "of an implementation of this idea in the programming world so you really just say",
    "start": "1680399",
    "end": "1687330"
  },
  {
    "text": "dot to navigate through some object or through some some data space and it's",
    "start": "1687330",
    "end": "1695070"
  },
  {
    "text": "one simple construct designed for for doing that that lets you do it across a",
    "start": "1695070",
    "end": "1701759"
  },
  {
    "text": "wide range of of data sources and again",
    "start": "1701759",
    "end": "1711299"
  },
  {
    "text": "you don't really need sort of special very like domain-specific construct for",
    "start": "1711299",
    "end": "1719340"
  },
  {
    "text": "accessing data from let's say SQL or XML",
    "start": "1719340",
    "end": "1726570"
  },
  {
    "text": "if you have a if you have a mechanism that can use the same simple structure",
    "start": "1726570",
    "end": "1733590"
  },
  {
    "text": "to access data from lots of lots of different sources so unlike some of the other languages F sharp doesn't have",
    "start": "1733590",
    "end": "1740460"
  },
  {
    "text": "support for XML literals and I think nobody really Minds because",
    "start": "1740460",
    "end": "1746679"
  },
  {
    "text": "people just started using Jason the nice thing is that the constructs that absorb",
    "start": "1746679",
    "end": "1753400"
  },
  {
    "text": "has can actually be used with with both both XML Jason and many many other other",
    "start": "1753400",
    "end": "1761020"
  },
  {
    "text": "kinds of data sorry this was the example of the Jason type provider where you're",
    "start": "1761020",
    "end": "1768309"
  },
  {
    "text": "using dot to navigate through data and you do need some other language constructs like looping if if there's if",
    "start": "1768309",
    "end": "1775270"
  },
  {
    "text": "there's a list but fundamentally you're still doing it with dot and I think one",
    "start": "1775270",
    "end": "1782620"
  },
  {
    "text": "of the one of the sort of fun thing about modern modern architect what honest architecture was that they very",
    "start": "1782620",
    "end": "1789159"
  },
  {
    "text": "often tried to see how far can you go with a given material so once people",
    "start": "1789159",
    "end": "1794890"
  },
  {
    "text": "started using reinforced concrete they were sort of creating all these all these crazy structures so this is this",
    "start": "1794890",
    "end": "1803380"
  },
  {
    "text": "is a building in Prague but there's one I saw I think this is in Sao Paulo it's",
    "start": "1803380",
    "end": "1810460"
  },
  {
    "text": "a building that really holds just on these four sort of pillars at the at the",
    "start": "1810460",
    "end": "1817029"
  },
  {
    "text": "ends and it's just a sort of huge huge gallery that all just works based on",
    "start": "1817029",
    "end": "1823299"
  },
  {
    "text": "that based on that one material and in",
    "start": "1823299",
    "end": "1828480"
  },
  {
    "text": "programming languages people I think often try to do the same so my next",
    "start": "1828480",
    "end": "1834730"
  },
  {
    "text": "example close all these charts is a",
    "start": "1834730",
    "end": "1840340"
  },
  {
    "text": "project I've been working on in the alan turing institute that tries to use dot",
    "start": "1840340",
    "end": "1845950"
  },
  {
    "text": "for data exploration growing well beyond what people do with type providers",
    "start": "1845950",
    "end": "1851770"
  },
  {
    "text": "normally so I have a sample data set which is I'll show you what it looks",
    "start": "1851770",
    "end": "1861850"
  },
  {
    "text": "like I think this might work maybe I did",
    "start": "1861850",
    "end": "1877260"
  },
  {
    "text": "something wrong or maybe I need internet again yeah I probably do need internet",
    "start": "1877260",
    "end": "1889200"
  },
  {
    "text": "again",
    "start": "1889200",
    "end": "1891559"
  },
  {
    "text": "alright this was this was actually my mistake because I loaded the entire table which is quite big so I don't need",
    "start": "1898470",
    "end": "1908049"
  },
  {
    "text": "it well I do need to internet as well but I also need a fast browser so what",
    "start": "1908049",
    "end": "1915040"
  },
  {
    "text": "this looks like is that it's a it's a data table with various information about all the people ever winning and",
    "start": "1915040",
    "end": "1921610"
  },
  {
    "text": "the Olympic medal in Summer Olympics you have columns with things like what was",
    "start": "1921610",
    "end": "1927220"
  },
  {
    "text": "the year what's the discipline what was the medal",
    "start": "1927220",
    "end": "1932320"
  },
  {
    "text": "day God what's the team and so on and the interesting thing is that this this",
    "start": "1932320",
    "end": "1940090"
  },
  {
    "text": "tool actually uses the tie provider mechanism and uses dot for doing a lot",
    "start": "1940090",
    "end": "1948460"
  },
  {
    "text": "more than just picking picking data from from your data source it gives you a",
    "start": "1948460",
    "end": "1954700"
  },
  {
    "text": "little scripting environment where you can aggregate the data as well so if I",
    "start": "1954700",
    "end": "1960760"
  },
  {
    "text": "want to look who's the athlete with the largest number of Olympic medals overall",
    "start": "1960760",
    "end": "1967540"
  },
  {
    "text": "I can use dot to group the data and the",
    "start": "1967540",
    "end": "1973450"
  },
  {
    "text": "type provider generates not just the sort of available data but also the available operations so I can group the",
    "start": "1973450",
    "end": "1980679"
  },
  {
    "text": "data by athlete and then it says what are the aggregations that you want to",
    "start": "1980679",
    "end": "1985929"
  },
  {
    "text": "add and in my case well I'm going to concatenate the values of team which",
    "start": "1985929",
    "end": "1992260"
  },
  {
    "text": "will give me sort of all the other countries that the athlete ever competed",
    "start": "1992260",
    "end": "1997960"
  },
  {
    "text": "for it's typically going to be just one and I'm also going to get some the",
    "start": "1997960",
    "end": "2005010"
  },
  {
    "text": "number of gold medals and then I'm done",
    "start": "2005010",
    "end": "2010169"
  },
  {
    "text": "with picking my aggregations so I'm going to just do dot then and dot then",
    "start": "2010169",
    "end": "2018450"
  },
  {
    "text": "isn't isn't really like a special language construct it's just another member of this object and then I'm going",
    "start": "2018450",
    "end": "2026490"
  },
  {
    "text": "to say paging take the top ten well I need to source first so let's",
    "start": "2026490",
    "end": "2033529"
  },
  {
    "text": "sort by the number of gold medals descending take the top ten and now I do",
    "start": "2033529",
    "end": "2041779"
  },
  {
    "text": "need to use one more language construct which is let to sourced a save my result",
    "start": "2041779",
    "end": "2049570"
  },
  {
    "text": "and I'm going to create a table with the results and I think that should work",
    "start": "2049570",
    "end": "2058388"
  },
  {
    "text": "let's see I think it's not complaining",
    "start": "2058389",
    "end": "2066080"
  },
  {
    "text": "correctly maybe it is ignoring my type",
    "start": "2066080",
    "end": "2072950"
  },
  {
    "text": "errors because I don't trust my software but I think now okay one more thing I",
    "start": "2072950",
    "end": "2079460"
  },
  {
    "text": "need to get my data and now all errors",
    "start": "2079460",
    "end": "2084800"
  },
  {
    "text": "are gone and I'm going to get a table with at least with the largest number of",
    "start": "2084800",
    "end": "2090230"
  },
  {
    "text": "gold medals in the Olympic Games overall so this sample code this little",
    "start": "2090230",
    "end": "2098359"
  },
  {
    "text": "scripting environment isn't really using F sharp as the scripting language it's it's has its own little language that's",
    "start": "2098359",
    "end": "2105830"
  },
  {
    "text": "pretty much inspired by F sharp and there's it's using the same type provider mechanism that also also works",
    "start": "2105830",
    "end": "2113240"
  },
  {
    "text": "in F sharp it is actually written in F sharp and you can find it online it's",
    "start": "2113240",
    "end": "2119780"
  },
  {
    "text": "using the fable project which lets you translate F sharp to JavaScript so everything I was doing actually runs in",
    "start": "2119780",
    "end": "2126619"
  },
  {
    "text": "a in a browser but the the key point is",
    "start": "2126619",
    "end": "2131750"
  },
  {
    "text": "that something as simple as tie providers where the only idea is when",
    "start": "2131750",
    "end": "2136970"
  },
  {
    "text": "you type dot invoke a little bit of code that generates the members it's",
    "start": "2136970",
    "end": "2143330"
  },
  {
    "text": "something that you can you can take quite far and this is basically re-implementing a little SQL like",
    "start": "2143330",
    "end": "2149810"
  },
  {
    "text": "language where you can construct queries just by using dot so if dot is the",
    "start": "2149810",
    "end": "2160280"
  },
  {
    "text": "concrete then type providers are like the reinforced concrete of programming languages so that was that was the",
    "start": "2160280",
    "end": "2169650"
  },
  {
    "text": "second example so we talked about transformations and pipe data access and",
    "start": "2169650",
    "end": "2175560"
  },
  {
    "text": "dot and my last example is going to be computation expressions and this is",
    "start": "2175560",
    "end": "2182130"
  },
  {
    "text": "something that when people think about F sharp coming from programming languages",
    "start": "2182130",
    "end": "2190290"
  },
  {
    "text": "like Haskell they'll just say oh this is just a monad and that's sort of",
    "start": "2190290",
    "end": "2198680"
  },
  {
    "text": "mathematically that it's not quite right but it's a sort of worthwhile statement",
    "start": "2198680",
    "end": "2207330"
  },
  {
    "text": "to think about but I think when when you look at the observed feature I want to",
    "start": "2207330",
    "end": "2214080"
  },
  {
    "text": "talk about from the mathematical perspective it doesn't really tell you very many useful things about how it was",
    "start": "2214080",
    "end": "2222480"
  },
  {
    "text": "designed and why it works the way it works so let's have a let's have a look",
    "start": "2222480",
    "end": "2228210"
  },
  {
    "text": "at F sharp computation expressions which is one of the sort of more advanced",
    "start": "2228210",
    "end": "2233250"
  },
  {
    "text": "fancy F sharp features but thinking more about what's the what's the purpose of it and why it works the way it works so",
    "start": "2233250",
    "end": "2242130"
  },
  {
    "text": "the purpose of observed computation expressions is to give an alternative",
    "start": "2242130",
    "end": "2247220"
  },
  {
    "text": "meaning to an ordinary computation so what that means what that what that",
    "start": "2247220",
    "end": "2256380"
  },
  {
    "text": "really means is that if you have some bit of F sharp code and you want to make",
    "start": "2256380",
    "end": "2262260"
  },
  {
    "text": "it asynchronous or you won't want to make it produce multiple results you can",
    "start": "2262260",
    "end": "2267990"
  },
  {
    "text": "you can use the computation expression to sort of change somewhat what it does",
    "start": "2267990",
    "end": "2274760"
  },
  {
    "text": "I think my architectural analogy here is that very often the context really",
    "start": "2274760",
    "end": "2282690"
  },
  {
    "text": "matters so this is a sort of fairly fairly ugly part of Prague but if you",
    "start": "2282690",
    "end": "2288720"
  },
  {
    "text": "take the same kind of structure and put it in a different context it suddenly",
    "start": "2288720",
    "end": "2294540"
  },
  {
    "text": "becomes becomes looking very different in F sharp so I've got an example here",
    "start": "2294540",
    "end": "2303570"
  },
  {
    "text": "which is a bit of code written in sort of normal synchronous way that creates a",
    "start": "2303570",
    "end": "2310320"
  },
  {
    "text": "web client download some URL and returns the length of the URL of the page they",
    "start": "2310320",
    "end": "2317490"
  },
  {
    "text": "also handles exceptions and if it fails then it returns none the nice thing is",
    "start": "2317490",
    "end": "2323220"
  },
  {
    "text": "that if I want to make it asynchronous I'm just going to wrap it in this async",
    "start": "2323220",
    "end": "2329070"
  },
  {
    "text": "curly bracket block so I'll switch back and forth so that you can see the differences I'll wrap it in the async",
    "start": "2329070",
    "end": "2336300"
  },
  {
    "text": "block and then and let bank rather than",
    "start": "2336300",
    "end": "2341760"
  },
  {
    "text": "ordinary let right there so this is this",
    "start": "2341760",
    "end": "2347250"
  },
  {
    "text": "is a construct that has been an F sharp for probably 12 years now or something",
    "start": "2347250",
    "end": "2355410"
  },
  {
    "text": "like that and it inspired the the C sharp async construct but the sort of",
    "start": "2355410",
    "end": "2362369"
  },
  {
    "text": "nice thing here is that in F sharp is actually sort of the purpose is more general it's sort of reinterpreting the",
    "start": "2362369",
    "end": "2372000"
  },
  {
    "text": "meaning of a computation and it's not just making it asynchronous because the",
    "start": "2372000",
    "end": "2377730"
  },
  {
    "text": "the async curly brackets you can actually create other things that work the same way so I wanted to show you one",
    "start": "2377730",
    "end": "2390780"
  },
  {
    "text": "quick example of using asynchronous computations and for that I'll have to",
    "start": "2390780",
    "end": "2402770"
  },
  {
    "text": "jump here",
    "start": "2403400",
    "end": "2406910"
  },
  {
    "text": "and I've got one more example this one is also also using fable so that's why",
    "start": "2408460",
    "end": "2417470"
  },
  {
    "text": "I'm running it from the command line I'm going to run yarn start to start my",
    "start": "2417470",
    "end": "2424369"
  },
  {
    "text": "project so what I'm doing here is that I have a little I've sharp script that I'm",
    "start": "2424369",
    "end": "2429530"
  },
  {
    "text": "going to be translating to JavaScript using fable and I'll I'm going to be using the sort of fable the typical",
    "start": "2429530",
    "end": "2437480"
  },
  {
    "text": "fable setup where you have a command line built running in the background that monitors the changes to your file",
    "start": "2437480",
    "end": "2444470"
  },
  {
    "text": "and when you save your file it will recompile it and start serving a webpage",
    "start": "2444470",
    "end": "2450410"
  },
  {
    "text": "with the new version so did this did this finish I think it did if we go to",
    "start": "2450410",
    "end": "2459100"
  },
  {
    "text": "localhost:8080 here's my little demo and here's the source code for my demo this",
    "start": "2459100",
    "end": "2468710"
  },
  {
    "text": "is not the source code for my demo this is a wrong wrong folder this is the",
    "start": "2468710",
    "end": "2474650"
  },
  {
    "text": "source code for my demo so right now I my file just says show section 1 and",
    "start": "2474650",
    "end": "2482900"
  },
  {
    "text": "then turn the circle green if we change",
    "start": "2482900",
    "end": "2488660"
  },
  {
    "text": "it to red and save it this will recompile in the background reload and",
    "start": "2488660",
    "end": "2493940"
  },
  {
    "text": "now it's red so if you're if you're doing anything web related have a look at fable because it lets you write F",
    "start": "2493940",
    "end": "2501170"
  },
  {
    "text": "sharp run it in the browser and this sort of work flow where it reloads",
    "start": "2501170",
    "end": "2506390"
  },
  {
    "text": "automatically it's just super nice so it's a great great way of just learning",
    "start": "2506390",
    "end": "2512150"
  },
  {
    "text": "F sharp as well and so one example of",
    "start": "2512150",
    "end": "2519920"
  },
  {
    "text": "what I want to do is do a little bit of",
    "start": "2519920",
    "end": "2525369"
  },
  {
    "text": "asynchronous programming for the user interface and one thing I always found",
    "start": "2525369",
    "end": "2536290"
  },
  {
    "text": "extremely annoying when when doing UI programming that you can't just say set the color to",
    "start": "2536290",
    "end": "2544400"
  },
  {
    "text": "red then sleep for one second and change the color to some other color and a",
    "start": "2544400",
    "end": "2551390"
  },
  {
    "text": "normal programming or in sort of WinForms or WPF you can't really do that",
    "start": "2551390",
    "end": "2556910"
  },
  {
    "text": "because you can't block the main threat in browser it's the same thing if you",
    "start": "2556910",
    "end": "2562280"
  },
  {
    "text": "just want to sleep for one second you have to do it using a timer and your",
    "start": "2562280",
    "end": "2567890"
  },
  {
    "text": "code ends up being a terrible mess so the nice thing we can do with async and",
    "start": "2567890",
    "end": "2572990"
  },
  {
    "text": "F sharp is that I can actually say async sleep one second and then let's see if I",
    "start": "2572990",
    "end": "2579349"
  },
  {
    "text": "know how traffic lights work you probably can't go from red to green that would be bad so let's do you know that",
    "start": "2579349",
    "end": "2586940"
  },
  {
    "text": "would be all right right I don't want to go from green straight to red I want to give orange first so",
    "start": "2586940",
    "end": "2595010"
  },
  {
    "text": "let's see what my traffic light does it's red green orange and then it stops",
    "start": "2595010",
    "end": "2603280"
  },
  {
    "text": "so we should do this in a loop and the",
    "start": "2603280",
    "end": "2608750"
  },
  {
    "text": "nice thing here is that I can actually just say well true do this and then I'll",
    "start": "2608750",
    "end": "2616700"
  },
  {
    "text": "end up with a traffic light that runs forever in loop waiting one second",
    "start": "2616700",
    "end": "2623660"
  },
  {
    "text": "between the changes and I think this is probably safe so the way the way this",
    "start": "2623660",
    "end": "2630770"
  },
  {
    "text": "works behind the scenes is that the async dot sleep operation does actually",
    "start": "2630770",
    "end": "2637339"
  },
  {
    "text": "create a timer and when the timer sort of after one second when it takes and",
    "start": "2637339",
    "end": "2643010"
  },
  {
    "text": "will resume the computation because that's one thing you can do with asynchronous computations and it doesn't",
    "start": "2643010",
    "end": "2650500"
  },
  {
    "text": "the the nice thing about sort of how the code is structured is that this is",
    "start": "2650500",
    "end": "2656900"
  },
  {
    "text": "something that makes makes obvious sense because you just have code that changes",
    "start": "2656900",
    "end": "2663200"
  },
  {
    "text": "color weights changes color weights changes color weights you didn't have to",
    "start": "2663200",
    "end": "2668329"
  },
  {
    "text": "completely restructure the code just because it ends up being the case that",
    "start": "2668329",
    "end": "2674119"
  },
  {
    "text": "you block threats in JavaScript so you sort of have normal code that you would wrote",
    "start": "2674119",
    "end": "2680289"
  },
  {
    "text": "you would write everywhere if you were doing something that actually sleeps but",
    "start": "2680289",
    "end": "2687309"
  },
  {
    "text": "you can reinterpret the code so that the sleeping happens without blocking and",
    "start": "2687309",
    "end": "2693430"
  },
  {
    "text": "you can still use all your normal favorite language constructs inside here",
    "start": "2693430",
    "end": "2699339"
  },
  {
    "text": "so I can say for color in red green",
    "start": "2699339",
    "end": "2706200"
  },
  {
    "text": "orange do change the color and sleep and",
    "start": "2706200",
    "end": "2717390"
  },
  {
    "text": "now I have well now I have the same thing as I had before but in a lot more",
    "start": "2717390",
    "end": "2724059"
  },
  {
    "text": "cleaner way and one other change I can",
    "start": "2724059",
    "end": "2730630"
  },
  {
    "text": "do here to make it more fun is that rather than just waiting one second I can wait until I click on the button",
    "start": "2730630",
    "end": "2740049"
  },
  {
    "text": "so now I have a traffic light where I can click so this is a this is a sort of",
    "start": "2740049",
    "end": "2748720"
  },
  {
    "text": "nice example of UI programming and I think using async firfer doing these",
    "start": "2748720",
    "end": "2755410"
  },
  {
    "text": "sort of UI tasks where what you're doing is",
    "start": "2755410",
    "end": "2760930"
  },
  {
    "text": "encoding some sort of state machine is a really powerful pattern so that's one",
    "start": "2760930",
    "end": "2766150"
  },
  {
    "text": "point the other point is that if you if",
    "start": "2766150",
    "end": "2771309"
  },
  {
    "text": "you sort of unsee the async curly brackets then it really looks like",
    "start": "2771309",
    "end": "2776440"
  },
  {
    "text": "ordinary F sharp code that iterates over two loops and changes some colors and by",
    "start": "2776440",
    "end": "2785319"
  },
  {
    "text": "adding the the async curly brackets we sort of don't lose any of the normal intuition about what the code does",
    "start": "2785319",
    "end": "2792430"
  },
  {
    "text": "so you still can understand it and there's only one sort of extra extra",
    "start": "2792430",
    "end": "2798730"
  },
  {
    "text": "trick which is that rather than all this happening synchronously it happens asynchronously but that's sort of a",
    "start": "2798730",
    "end": "2805809"
  },
  {
    "text": "technical detail you don't really have to worry about too much and when sort of people",
    "start": "2805809",
    "end": "2814850"
  },
  {
    "text": "coming from the Haskell background say oh this is just a monad that's that's",
    "start": "2814850",
    "end": "2823400"
  },
  {
    "text": "sort of technically technically that's that's true here but if you're using it",
    "start": "2823400",
    "end": "2829100"
  },
  {
    "text": "what you care about is your sort of intuition about how the language constructs work and that's that's",
    "start": "2829100",
    "end": "2835310"
  },
  {
    "text": "something that absorb does very differently because an f-sharp you have four loops you have while loops and you",
    "start": "2835310",
    "end": "2840980"
  },
  {
    "text": "can still use them inside this construct",
    "start": "2840980",
    "end": "2845350"
  },
  {
    "text": "so that was my example of asynchronous computations and the sort of design",
    "start": "2850150",
    "end": "2859270"
  },
  {
    "text": "reference here is one of the sort of modernist ideas was use flexible",
    "start": "2859270",
    "end": "2866930"
  },
  {
    "text": "material and design with the material in mind so something like computation",
    "start": "2866930",
    "end": "2874010"
  },
  {
    "text": "expressions is a lot more sophisticated language construct than say the pipe or",
    "start": "2874010",
    "end": "2880250"
  },
  {
    "text": "dot unless you do do quite a lot of advanced things and there's some cases",
    "start": "2880250",
    "end": "2887900"
  },
  {
    "text": "where it's appropriate some cases where it's not so this is this is another",
    "start": "2887900",
    "end": "2893960"
  },
  {
    "text": "picture from from Sao Paulo with sort of fancy fancy Park with with concrete",
    "start": "2893960",
    "end": "2902680"
  },
  {
    "text": "reinforced concrete sort of buildings in there or constructions and it makes",
    "start": "2902680",
    "end": "2910400"
  },
  {
    "text": "perfect sense in that context because it provides shading from light when it's",
    "start": "2910400",
    "end": "2917300"
  },
  {
    "text": "just very hot another another example of shading is this this place so this is a",
    "start": "2917300",
    "end": "2926720"
  },
  {
    "text": "Louvre Museum that was built in Abu Dhabi and the roof for it was actually",
    "start": "2926720",
    "end": "2932120"
  },
  {
    "text": "designed using F sharp so the person build it well not building the turns out",
    "start": "2932120",
    "end": "2939140"
  },
  {
    "text": "that model that architecture is really complicated business and there's so many people involved but",
    "start": "2939140",
    "end": "2944920"
  },
  {
    "text": "the person who was sort of implement creating the concrete design proposal",
    "start": "2944920",
    "end": "2951790"
  },
  {
    "text": "wrote some F sharp scripts to generate the patterns of the of the sort of metal",
    "start": "2951790",
    "end": "2957980"
  },
  {
    "text": "things that that hold the roof and the the design motivation was that you want",
    "start": "2957980",
    "end": "2965540"
  },
  {
    "text": "to have it sort of more dense in some areas and to let less light through and",
    "start": "2965540",
    "end": "2970820"
  },
  {
    "text": "less dense in some other areas to let sort of more more light through it so I",
    "start": "2970820",
    "end": "2977120"
  },
  {
    "text": "think they're sort of less dense less dense area that where it provides sort of some sunlight through it but it's",
    "start": "2977120",
    "end": "2986210"
  },
  {
    "text": "it's definitely something where they sort of thought about what's going to be the material that's available and what",
    "start": "2986210",
    "end": "2993110"
  },
  {
    "text": "can they what can they do with it and here they ended up with this really",
    "start": "2993110",
    "end": "2998720"
  },
  {
    "text": "really fancy roof designed using observe",
    "start": "2998720",
    "end": "3003090"
  },
  {
    "text": "and I think that the focus on the material is really something that",
    "start": "3004140",
    "end": "3011290"
  },
  {
    "text": "becomes really useful for thinking about programming as well so one of the things",
    "start": "3011290",
    "end": "3017800"
  },
  {
    "text": "that I often find in F sharp is that if",
    "start": "3017800",
    "end": "3023650"
  },
  {
    "text": "you're if you're designing some obstructions it should be either really really easy or well if you have if you",
    "start": "3023650",
    "end": "3032200"
  },
  {
    "text": "have if you have language like observe that sort of enforces you or forces you",
    "start": "3032200",
    "end": "3037600"
  },
  {
    "text": "to do things in in certain ways then using the right abstract abstraction is",
    "start": "3037600",
    "end": "3043750"
  },
  {
    "text": "either really really easy or almost impossible and the point is that it sort",
    "start": "3043750",
    "end": "3049900"
  },
  {
    "text": "of leads you towards the easy easy bit and it makes your life really hard if",
    "start": "3049900",
    "end": "3055030"
  },
  {
    "text": "you're trying to do something that doesn't quite work and I think one",
    "start": "3055030",
    "end": "3060370"
  },
  {
    "text": "really nice example here is sort of taking the asynchronous programming ideas from just asynchronous",
    "start": "3060370",
    "end": "3067660"
  },
  {
    "text": "computations that produce one result to asynchronous computations that generate",
    "start": "3067660",
    "end": "3073360"
  },
  {
    "text": "sort of sequences of bad and I'm actually going to start with an",
    "start": "3073360",
    "end": "3081350"
  },
  {
    "text": "example first because I do have enough time to show this so I've got I'm going",
    "start": "3081350",
    "end": "3089090"
  },
  {
    "text": "to delete this part and I've got one more example so what what this sample",
    "start": "3089090",
    "end": "3103580"
  },
  {
    "text": "does it defines two types I have I have",
    "start": "3103580",
    "end": "3109790"
  },
  {
    "text": "some JSON files and these types are basically just matching the JSON files",
    "start": "3109790",
    "end": "3115600"
  },
  {
    "text": "and I'm iterating over all days in a year and I have one file for every day I",
    "start": "3115600",
    "end": "3123770"
  },
  {
    "text": "read the file and convert the result to this record and I'm going to find the",
    "start": "3123770",
    "end": "3136940"
  },
  {
    "text": "exchange rate for four pounds $2 I'm going to display this so and then I'm",
    "start": "3136940",
    "end": "3144350"
  },
  {
    "text": "sleeping sleeping 100 milliseconds so you can really see I'm too worried about",
    "start": "3144350",
    "end": "3149380"
  },
  {
    "text": "currency exchange rates so breaks it so",
    "start": "3149380",
    "end": "3155330"
  },
  {
    "text": "if I say that this now sort of replace",
    "start": "3155330",
    "end": "3160390"
  },
  {
    "text": "replace how the how the pound value has been changing over time but what I want",
    "start": "3160390",
    "end": "3171290"
  },
  {
    "text": "to show here is another another computation expression that is available",
    "start": "3171290",
    "end": "3179660"
  },
  {
    "text": "in or there's there's library for doing it in F sharp which is combining two",
    "start": "3179660",
    "end": "3188570"
  },
  {
    "text": "different things it's combining asynchronous programming where you don't",
    "start": "3188570",
    "end": "3194000"
  },
  {
    "text": "have where you don't have to block if you're waiting and it's combining that",
    "start": "3194000",
    "end": "3200150"
  },
  {
    "text": "with computations where you can produce multiple values so",
    "start": "3200150",
    "end": "3209380"
  },
  {
    "text": "what I want to do is to sort of restructure the code so that the the reading of these values is separate from",
    "start": "3210390",
    "end": "3220089"
  },
  {
    "text": "the code that actually does the UI part and I can do this really nicely using",
    "start": "3220089",
    "end": "3227980"
  },
  {
    "text": "this async construct which is kind of",
    "start": "3227980",
    "end": "3236079"
  },
  {
    "text": "like a thing except that in addition to doing all the things I can do in a thing",
    "start": "3236079",
    "end": "3242289"
  },
  {
    "text": "I can also say yield and now I have to",
    "start": "3242289",
    "end": "3253089"
  },
  {
    "text": "fix the rest of my code",
    "start": "3253089",
    "end": "3256470"
  },
  {
    "text": "and learn how to type no that's what I",
    "start": "3262580",
    "end": "3269750"
  },
  {
    "text": "want so what I've done what I've done",
    "start": "3269750",
    "end": "3275270"
  },
  {
    "text": "there is that get prices is now a function that returns an asynchronous sequence and a synchronous sequence can",
    "start": "3275270",
    "end": "3286700"
  },
  {
    "text": "still have some asynchronous operations in there but it also generates a stream",
    "start": "3286700",
    "end": "3294170"
  },
  {
    "text": "of values she's going to move the sleeping here so that I do actually wait",
    "start": "3294170",
    "end": "3300550"
  },
  {
    "text": "so it can block asynchronously or it can do asynchronous i/o but it can generate",
    "start": "3300550",
    "end": "3307070"
  },
  {
    "text": "multiple values so here I'm generating a stream stream of values and I can",
    "start": "3307070",
    "end": "3313220"
  },
  {
    "text": "iterate over that",
    "start": "3313220",
    "end": "3316210"
  },
  {
    "text": "inside another asynchronous sequence and",
    "start": "3325579",
    "end": "3334959"
  },
  {
    "text": "then rather than starting my a thing I'll just start my asynchronous sequence",
    "start": "3334959",
    "end": "3341900"
  },
  {
    "text": "and I did do dot value and the first function so I don't have to do it in the",
    "start": "3341900",
    "end": "3347299"
  },
  {
    "text": "second one all right so if we run this again it does nothing because I did",
    "start": "3347299",
    "end": "3354859"
  },
  {
    "text": "break something all right",
    "start": "3354859",
    "end": "3362869"
  },
  {
    "text": "I don't immediately see what's wrong here so I'm not going to waste time on trying to figure that out and let's just",
    "start": "3362869",
    "end": "3374329"
  },
  {
    "text": "see if I can fix it by cheating because I do have a working version here",
    "start": "3374329",
    "end": "3382028"
  },
  {
    "text": "yeah maybe not maybe sorry oh yeah I did",
    "start": "3402060",
    "end": "3415800"
  },
  {
    "text": "change it to clicking well I think I",
    "start": "3415800",
    "end": "3421530"
  },
  {
    "text": "think there's there's probably something else wrong but the the key point here is that I'm",
    "start": "3421530",
    "end": "3429030"
  },
  {
    "text": "using the same language construct which was the computation expression syntax",
    "start": "3429030",
    "end": "3434840"
  },
  {
    "text": "which previously I was just using for doing computations that are asynchronous",
    "start": "3434840",
    "end": "3440100"
  },
  {
    "text": "and produced one value but I can also use it for doing computations that are",
    "start": "3440100",
    "end": "3446340"
  },
  {
    "text": "asynchronous and produce multiple values and the way the computations work behind",
    "start": "3446340",
    "end": "3454890"
  },
  {
    "text": "the scenes is that they're doing what what the reactive programming people",
    "start": "3454890",
    "end": "3461460"
  },
  {
    "text": "would call pool based so it only generates the next value when you ask",
    "start": "3461460",
    "end": "3466530"
  },
  {
    "text": "for it and that's really nice because it lets you do things like for loops where",
    "start": "3466530",
    "end": "3472260"
  },
  {
    "text": "you can you can block inside the for loop if you have event like observable",
    "start": "3472260",
    "end": "3478350"
  },
  {
    "text": "you can't really iterate over observable in a for loop and block inside the body",
    "start": "3478350",
    "end": "3484050"
  },
  {
    "text": "because what would you do if the observable started generating more values while you're blocking so that's",
    "start": "3484050",
    "end": "3491070"
  },
  {
    "text": "kind of a an abstraction that doesn't really let you use these use these",
    "start": "3491070",
    "end": "3496680"
  },
  {
    "text": "constructs and doing that would be almost impossible you'd have to come up with some crazy hacks and here I've got",
    "start": "3496680",
    "end": "3504690"
  },
  {
    "text": "an abstraction where I can actually nicely and really easily construct",
    "start": "3504690",
    "end": "3511170"
  },
  {
    "text": "things like for loops because it just says pull the next value from the data source asynchronously process it and",
    "start": "3511170",
    "end": "3518820"
  },
  {
    "text": "then pull the next one sorry this is one of the one of the sort of more",
    "start": "3518820",
    "end": "3525450"
  },
  {
    "text": "interesting abstractions that are available for in F sharp and if you're",
    "start": "3525450",
    "end": "3530820"
  },
  {
    "text": "doing any sort of asynchronous concurrent processing have a look at AC",
    "start": "3530820",
    "end": "3535970"
  },
  {
    "text": "Karina's sequences because you might find them nice all right so to wrap up I",
    "start": "3535970",
    "end": "3542230"
  },
  {
    "text": "think when you look at modernism in architecture people say it's sort of",
    "start": "3542230",
    "end": "3550270"
  },
  {
    "text": "associated with trying to understand what's the thing was the function using new materials keeping things simple by",
    "start": "3550270",
    "end": "3558740"
  },
  {
    "text": "eliminating ornaments and that's really those ideas are really something that",
    "start": "3558740",
    "end": "3563750"
  },
  {
    "text": "you can find very very useful in programming and I think F sharp in many ways sort of tries to embody those ideas",
    "start": "3563750",
    "end": "3570590"
  },
  {
    "text": "so function composition lets you eliminate lots of keywords type",
    "start": "3570590",
    "end": "3575900"
  },
  {
    "text": "providers give gifts sort of extra power to very simple idea of dot and",
    "start": "3575900",
    "end": "3581660"
  },
  {
    "text": "computation expressions let you reinterpret the existing material and",
    "start": "3581660",
    "end": "3587180"
  },
  {
    "text": "and use it for many other new things so I think what I what I talked about was",
    "start": "3587180",
    "end": "3596210"
  },
  {
    "text": "functional programming except that rather than interpreting function as the",
    "start": "3596210",
    "end": "3601250"
  },
  {
    "text": "mathematical object I was trying to interpret it as the purpose for which",
    "start": "3601250",
    "end": "3606470"
  },
  {
    "text": "things were designed and I think this is really useful perspective but sadly functional programming is taken already",
    "start": "3606470",
    "end": "3612980"
  },
  {
    "text": "so I'm just going to be calling it functional first programming I said thank you",
    "start": "3612980",
    "end": "3618730"
  },
  {
    "text": "[Applause]",
    "start": "3618730",
    "end": "3627459"
  }
]