[
  {
    "start": "0",
    "end": "165000"
  },
  {
    "text": "hello everybody such enthusiasm before lunch",
    "start": "6980",
    "end": "14120"
  },
  {
    "text": "my name is Scott Allen I wanted to talk to you a little bit about what I've learned over the last few years trying",
    "start": "14150",
    "end": "19289"
  },
  {
    "text": "to build applications that deploy into Microsoft Azure that tried to be highly",
    "start": "19289",
    "end": "25590"
  },
  {
    "text": "available they tried to be resilient they tried to keep operating even though the seas are stormy and things are",
    "start": "25590",
    "end": "31439"
  },
  {
    "text": "failing around them and I just want to preface all this by saying this is very",
    "start": "31439",
    "end": "37410"
  },
  {
    "text": "much thought I had a picture of money there we go a business decision it's not",
    "start": "37410",
    "end": "43260"
  },
  {
    "text": "a technical decision if you want to be highly available or not because if you're trying to be highly available you're trying to exceed some SLA numbers",
    "start": "43260",
    "end": "49980"
  },
  {
    "text": "from your cloud provider and as soon as you do that you can just start hearing the dollars or pounds goodbye because",
    "start": "49980",
    "end": "56520"
  },
  {
    "text": "you're going to be using more resources and not only just operational costs is more expensive you'll also be designing",
    "start": "56520",
    "end": "63449"
  },
  {
    "text": "more complex code let me fix these slides real quick they think they're in some sort of a pub",
    "start": "63449",
    "end": "69480"
  },
  {
    "text": "comp configuration so they try to automatically forward and hopefully that",
    "start": "69480",
    "end": "76320"
  },
  {
    "text": "takes care of the situation rebooting",
    "start": "76320",
    "end": "82130"
  },
  {
    "text": "see if that stays up and I can give you a good example just less than a month ago or about exactly one month ago I was",
    "start": "82759",
    "end": "90210"
  },
  {
    "text": "working with a company and we're trying to determine how much uptime they need and I said you know given the resources",
    "start": "90210",
    "end": "96210"
  },
  {
    "text": "you're using you'll probably be about 99.9% uptime and I said oh that's horrible we have to do better than that",
    "start": "96210",
    "end": "102000"
  },
  {
    "text": "and I said ok oops we're still advancing at 99.9% uptime your operational cost to",
    "start": "102000",
    "end": "109320"
  },
  {
    "text": "run what you need in Azure is about $20,000 and you know here's an alternate configuration that will give you better",
    "start": "109320",
    "end": "114600"
  },
  {
    "text": "uptime but it's going to be $60,000 a year to operate and they said oh well we'll get back to you about this so it's",
    "start": "114600",
    "end": "123750"
  },
  {
    "text": "very much a business decision and as soon as I get this operational hopefully",
    "start": "123750",
    "end": "131100"
  },
  {
    "text": "it won't advanced on me so we'll talk about how to be highly available which is somewhat closely",
    "start": "131100",
    "end": "137379"
  },
  {
    "text": "related to disaster recovery you'll see the two have a lot in common because if you're trying to be highly available you'll typically have redundant",
    "start": "137379",
    "end": "144099"
  },
  {
    "text": "resources available if something fails over and since you have redundant resources available like maybe a",
    "start": "144099",
    "end": "149889"
  },
  {
    "text": "redundant sequel server instance that means if you also need to do some",
    "start": "149889",
    "end": "155019"
  },
  {
    "text": "disaster recovery plans you can factor in these things that are copied all around the globe your pieces of data",
    "start": "155019",
    "end": "161409"
  },
  {
    "text": "that are copied into replicated data structures so one of the most important things about building a highly available",
    "start": "161409",
    "end": "169359"
  },
  {
    "start": "165000",
    "end": "246000"
  },
  {
    "text": "system is to understand the cloud provider that you're working with and the specific features of that cloud",
    "start": "169359",
    "end": "176469"
  },
  {
    "text": "provider are the different resources that they provide that will give you high availability so if we were to break",
    "start": "176469",
    "end": "183639"
  },
  {
    "text": "out the different features inside of Microsoft Azure I'm not going to list all these but I usually categorize",
    "start": "183639",
    "end": "189730"
  },
  {
    "text": "things as infrastructure services platform services or security and",
    "start": "189730",
    "end": "195159"
  },
  {
    "text": "management related services and if you think about wow I'm just trying to build a web application there's a number of",
    "start": "195159",
    "end": "202540"
  },
  {
    "text": "different ways I could deploy a web application and that these different services so under infrastructure services under compute one way to deploy",
    "start": "202540",
    "end": "209799"
  },
  {
    "text": "a web application would be to provision virtual machines inside of azure or AWS but we're talking about a shorted a",
    "start": "209799",
    "end": "216669"
  },
  {
    "text": "provisioned virtual machines deploy my applications on IAF's or under Linux and",
    "start": "216669",
    "end": "222280"
  },
  {
    "text": "I could also deploy a web application under Microsoft service fabric I could",
    "start": "222280",
    "end": "228009"
  },
  {
    "text": "also deploy a web application under an azure app service as a web app so three different choices and three different",
    "start": "228009",
    "end": "233829"
  },
  {
    "text": "implications for how I'm going to architect and design and look at my",
    "start": "233829",
    "end": "239650"
  },
  {
    "text": "Asscher capabilities depending on which of these I select so it's important to understand the different resources in",
    "start": "239650",
    "end": "247900"
  },
  {
    "text": "kasher all of them come with different service level agreements for starters so one of the first things you do when",
    "start": "247900",
    "end": "253930"
  },
  {
    "text": "you're trying to build something that's highly available is trying to understand what is Microsoft's guarantee for",
    "start": "253930",
    "end": "259329"
  },
  {
    "text": "available availability with the specific resource so if I choose to deploy to a",
    "start": "259329",
    "end": "265180"
  },
  {
    "text": "virtual machine I would went to Google or search for a sure sort of SLA virtual machines and",
    "start": "265180",
    "end": "272140"
  },
  {
    "text": "that should bring me to this page or directly to the virtual machines page and on each of these links and there's",
    "start": "272140",
    "end": "278650"
  },
  {
    "text": "one for virtual machines and there's one for app services and there's one for sequel server Microsoft will describe",
    "start": "278650",
    "end": "283810"
  },
  {
    "text": "and very plain English two things they'll first of all describe what the SLA number is that is what is the uptime",
    "start": "283810",
    "end": "291010"
  },
  {
    "text": "amount that you should expect and it's measured with a number of nines so 99.9% or 99.99% that's one thing",
    "start": "291010",
    "end": "299620"
  },
  {
    "text": "they'll give you another piece of another piece of information they will give you is under what scenarios that",
    "start": "299620",
    "end": "306550"
  },
  {
    "text": "SLA is valid so for example if I just go out and provision the virtual machine one virtual machine in Azure I should",
    "start": "306550",
    "end": "313450"
  },
  {
    "text": "not expect to get an SLA for a single machine if you read the SLA for virtual machines what I have to do is provision",
    "start": "313450",
    "end": "319960"
  },
  {
    "text": "at least two machines and put them into an availability set to get the guaranteed number so obviously that",
    "start": "319960",
    "end": "326140"
  },
  {
    "text": "hasn't impact on my cost and it has an impact on how I provision and deploy these things but the SLA requirements",
    "start": "326140",
    "end": "334540"
  },
  {
    "text": "and the SLA numbers for virtual machines would be different than if I deployed my application under app services so",
    "start": "334540",
    "end": "342130"
  },
  {
    "text": "typically it's described in a number of nines as your app services if I remember",
    "start": "342130",
    "end": "347320"
  },
  {
    "text": "correctly as three-and-a-half nine so that's ninety nine point nine five percent that's five minutes of downtime",
    "start": "347320",
    "end": "352720"
  },
  {
    "text": "a week of four hours a year as your sequel server instances or ninety-nine point nine nine four nine so they'll",
    "start": "352720",
    "end": "358780"
  },
  {
    "text": "give you about a minute of downtime a week and fifty fifty two minutes of downtime a year and now I have to look",
    "start": "358780",
    "end": "365950"
  },
  {
    "text": "at my application if my application is running under app services and it's using Azure sequel server it would be",
    "start": "365950",
    "end": "372310"
  },
  {
    "text": "reasonable for me to expect that I could have closed well over five hours of downtime a year and Microsoft would",
    "start": "372310",
    "end": "380080"
  },
  {
    "text": "still be meeting their SLA s because knowing what the SLA is for app services",
    "start": "380080",
    "end": "385960"
  },
  {
    "text": "and sequel server these downtime amounts I have to add them together because the app service might be down for four hours",
    "start": "385960",
    "end": "392140"
  },
  {
    "text": "and sequel server might be down for 52 minutes and this could occur during different time windows",
    "start": "392140",
    "end": "397389"
  },
  {
    "text": "so the total the system could be down would be five hours and Microsoft would not make owed me any credit they would",
    "start": "397389",
    "end": "403569"
  },
  {
    "text": "still be meeting what they had guaranteed in their SLA so once you",
    "start": "403569",
    "end": "409539"
  },
  {
    "text": "examine the SLA s and see what your expected uptime is or at least the one that Microsoft tells you you will have",
    "start": "409539",
    "end": "416879"
  },
  {
    "text": "that's when you make the decision do I have to beat this number or not and when",
    "start": "416879",
    "end": "421960"
  },
  {
    "text": "it's when you have to beat this number which is again a business decision but that's when the real engineering comes",
    "start": "421960",
    "end": "428139"
  },
  {
    "text": "in because now you have to figure out how do I do better than this number and that's kind of what we're gonna talk",
    "start": "428139",
    "end": "433180"
  },
  {
    "text": "about today how do I bet do better than the expected downtime per year or per month or per week and to do that one of",
    "start": "433180",
    "end": "441189"
  },
  {
    "text": "the things you have to do is again understand the capability of each feature that you're using inside of azure because each B's are feature",
    "start": "441189",
    "end": "447669"
  },
  {
    "text": "whether it's an app service or sequel server has different capabilities when it comes to how do I recover from",
    "start": "447669",
    "end": "453550"
  },
  {
    "text": "disaster how do I stay highly available so for example blob storage very simple",
    "start": "453550",
    "end": "459250"
  },
  {
    "text": "case I'm writing blobs into blob storage these are files that my customers upload I have to have that feature available",
    "start": "459250",
    "end": "465009"
  },
  {
    "text": "for my system to be available and really Asher and storage of storage is not available then everything is kind of",
    "start": "465009",
    "end": "470740"
  },
  {
    "text": "hosed but Tom what is blob storage offer for availability and also to some extent",
    "start": "470740",
    "end": "478810"
  },
  {
    "text": "disaster recovery or they offer redundant storage by default you get what's known as read access geo",
    "start": "478810",
    "end": "485379"
  },
  {
    "text": "redundant storage which means every time I write a bit into a blob in Azure storage that that will not only be",
    "start": "485379",
    "end": "492339"
  },
  {
    "text": "replicated locally within the same data center on to three different physical areas of this data center so it's there",
    "start": "492339",
    "end": "499120"
  },
  {
    "text": "even if a single hard drive fails but it will also be replicated into a different",
    "start": "499120",
    "end": "504490"
  },
  {
    "text": "data center in case of the ultimate disaster which would be the failure of an entire data center or the loss of an",
    "start": "504490",
    "end": "511449"
  },
  {
    "text": "entire data center my data is still somewhere else and so this replication feature is very easy to enable and yes",
    "start": "511449",
    "end": "518260"
  },
  {
    "text": "you could pay less by disabling that replication but if you're trying to be",
    "start": "518260",
    "end": "523300"
  },
  {
    "text": "available if you are paranoid about a disaster you will enable even leave that read",
    "start": "523300",
    "end": "528730"
  },
  {
    "text": "access to your redundant store replication feature on if you're using",
    "start": "528730",
    "end": "535100"
  },
  {
    "text": "and those are the different options locally but under storage so it's written three times in the same data center the default the bottom one read",
    "start": "535100",
    "end": "542850"
  },
  {
    "text": "access G over done and storage will talk about the read access part here in just a bit but that's basically take my bits",
    "start": "542850",
    "end": "548280"
  },
  {
    "text": "and asynchronously copy them out of the data center into some other data center so they are always somewhere on this",
    "start": "548280",
    "end": "554340"
  },
  {
    "text": "planet app services on the other hand or virtual machines on the other hand if I",
    "start": "554340",
    "end": "560130"
  },
  {
    "text": "want to stay available I know that I have to use availability set availability sets are a way of",
    "start": "560130",
    "end": "566550"
  },
  {
    "text": "describing to Azure look I have this pool of five virtual machines and i want them to be available as often as",
    "start": "566550",
    "end": "573540"
  },
  {
    "text": "possible so that tells a sure a few things first of all it should distribute those virtual machines in a way such",
    "start": "573540",
    "end": "580830"
  },
  {
    "text": "that none of them all depend on the same hardware like a network switch so if the",
    "start": "580830",
    "end": "585840"
  },
  {
    "text": "network switch inside of a rakish server blows up it shouldn't take all my virtual machines offline the azure",
    "start": "585840",
    "end": "591870"
  },
  {
    "text": "provisioning system should be smart enough to distribute my own virtual machines across several different containers inside that data center so",
    "start": "591870",
    "end": "598590"
  },
  {
    "text": "that one physical hardware failure doesn't ruin multiple machines it also tells Azure look if um intel has some",
    "start": "598590",
    "end": "605520"
  },
  {
    "text": "sort of crazy CPU bug that no one would ever imagine and we need to update the",
    "start": "605520",
    "end": "611040"
  },
  {
    "text": "hypervisor that runs the host system and update the guest systems with new spa software",
    "start": "611040",
    "end": "616170"
  },
  {
    "text": "patches don't take everything down in my availability set at once take just one",
    "start": "616170",
    "end": "621450"
  },
  {
    "text": "machine down at a time update it bring it back up and then go to the next ones that's what availability sets do with virtual",
    "start": "621450",
    "end": "627090"
  },
  {
    "text": "machines you can go into the portal or use scripts to create availability sets and when you do you create these things",
    "start": "627090",
    "end": "633000"
  },
  {
    "text": "here on the bottom of the slide or bottom of that dialog fault domains and update domains fault domains are about",
    "start": "633000",
    "end": "638160"
  },
  {
    "text": "hardware failures update domains are about turning things off to reboot for software patches so given the number of",
    "start": "638160",
    "end": "644820"
  },
  {
    "text": "machines that you have you might change the number of fault domains and update that means you're using four as your",
    "start": "644820",
    "end": "650970"
  },
  {
    "text": "sequel server there's a couple different features yes there's replication it's really easy for me to go into an Asscher sequel instance and say replicate this",
    "start": "650970",
    "end": "658320"
  },
  {
    "text": "database that's running in South UK datacenter replic to East us or West us or somewhere else",
    "start": "658320",
    "end": "663980"
  },
  {
    "text": "on the planet that's really easy to configure and sequel server also must have the pricing tiers come with a point",
    "start": "663980",
    "end": "669980"
  },
  {
    "text": "and time restore feature so it's constantly backing up your database once a day or once every 15 minutes it just",
    "start": "669980",
    "end": "676069"
  },
  {
    "text": "depends alone on how much you pay and of course replication very different from point in time restore replication is",
    "start": "676069",
    "end": "683089"
  },
  {
    "text": "very good if something fails hard drive fails data center goes down I have that data replicated somewhere else it",
    "start": "683089",
    "end": "689119"
  },
  {
    "text": "doesn't prevent the bug in a program that accidentally truncates a table that's where the point in time restores",
    "start": "689119",
    "end": "695899"
  },
  {
    "text": "useful so notice blob storage currently has redundancy but currently there's nothing offered by Azure that has a sort",
    "start": "695899",
    "end": "703069"
  },
  {
    "text": "of restore feature and that's why anyone who's truly paranoid about you know one",
    "start": "703069",
    "end": "708079"
  },
  {
    "text": "of their applications just deleting stuff out of blob storage there's there's third-party tools available that",
    "start": "708079",
    "end": "713329"
  },
  {
    "text": "you can point to a storage or to a to a storage account or storage container and say take everything that's in there and",
    "start": "713329",
    "end": "719569"
  },
  {
    "text": "copy it over here someplace where the program can't access it right because if",
    "start": "719569",
    "end": "725119"
  },
  {
    "text": "a rogue program goes in and truncates a table or wipes out all the files in blob storage a change gets replicated",
    "start": "725119",
    "end": "731839"
  },
  {
    "text": "everywhere so you you lose it even if you're replicating that's not something",
    "start": "731839",
    "end": "737209"
  },
  {
    "text": "to think about so that's an example of the dialog that comes up when you're trying to choose a replication data",
    "start": "737209",
    "end": "744559"
  },
  {
    "text": "center for sequel server you know I can just click one and move a data center and poof it ends up over there and for",
    "start": "744559",
    "end": "753709"
  },
  {
    "text": "app services we have the ability to geo distribute map services so I have a web",
    "start": "753709",
    "end": "759589"
  },
  {
    "text": "application it's deployed let's say in the south UK Dennis data Sandman but I",
    "start": "759589",
    "end": "766279"
  },
  {
    "text": "want to make sure that even if that data center is not available let's say for my customers in the United States that I",
    "start": "766279",
    "end": "771799"
  },
  {
    "text": "still have something running for them so I might deploy it in South UK and East us now the trap now the question is when",
    "start": "771799",
    "end": "779059"
  },
  {
    "text": "my customer comes to my website Scott Allen calm or whatever it is how do I figure out if I should send them to the",
    "start": "779059",
    "end": "786499"
  },
  {
    "text": "app service instance that's running in a South UK or the East you ask we'll talk about that scenario here before the end",
    "start": "786499",
    "end": "792589"
  },
  {
    "text": "of this talk about how you can do that so hopefully this is the information you",
    "start": "792589",
    "end": "797959"
  },
  {
    "start": "795000",
    "end": "1110000"
  },
  {
    "text": "expected and I'm just going to talk about some of the basic features right",
    "start": "797959",
    "end": "803839"
  },
  {
    "text": "now of an app service we're just going to talk about maybe the architecture of a basic application and what we could do to that application to make it a little",
    "start": "803839",
    "end": "810139"
  },
  {
    "text": "more highly available so let's imagine we have an app service that hosts our web application or our Web API of",
    "start": "810139",
    "end": "815449"
  },
  {
    "text": "something that talks HTTP or HTTPS and our customers are accessing that with mobile devices desktops whatever the",
    "start": "815449",
    "end": "824360"
  },
  {
    "text": "first thing to know about an app service is that everything app service has what's known as an app service plan in",
    "start": "824360",
    "end": "829519"
  },
  {
    "text": "Azure and the way to think about the app service plan is think about the plan is",
    "start": "829519",
    "end": "834799"
  },
  {
    "text": "describing the virtual machine that you will use to host your app service so the",
    "start": "834799",
    "end": "839899"
  },
  {
    "text": "app service plan really virtual machine you can put multiple services on a",
    "start": "839899",
    "end": "844970"
  },
  {
    "text": "single app service plan because again it's a machine when you're running a Windows app service plan you can you're",
    "start": "844970",
    "end": "852169"
  },
  {
    "text": "running basically iis you can also choose a Linux app service plan but just",
    "start": "852169",
    "end": "857839"
  },
  {
    "text": "like we can on a any Windows Server running IAS I can deploy multiple web applications to that IES server I can do",
    "start": "857839",
    "end": "864859"
  },
  {
    "text": "the same thing with an app service plan by default you get when you first go in and provision an app service unless you",
    "start": "864859",
    "end": "871549"
  },
  {
    "text": "say otherwise you get one instance of that app service plan so there's just one server running your web application",
    "start": "871549",
    "end": "878389"
  },
  {
    "text": "but it's very easy to tell a sure hey I need two instances or ten instances and",
    "start": "878389",
    "end": "883850"
  },
  {
    "text": "you will want at least two instances if you're trying to be available and",
    "start": "883850",
    "end": "889209"
  },
  {
    "text": "there's auto-scale settings inside of azure I'm not going to go into some of those but it's relatively easy to sell",
    "start": "889209",
    "end": "894470"
  },
  {
    "text": "as or hey if CPU percentage goes above 70% then add another instance and then",
    "start": "894470",
    "end": "899539"
  },
  {
    "text": "wait 5 minutes and re-evaluate things and perhaps add another instance of CPU is still above 70% or memory percentage",
    "start": "899539",
    "end": "905600"
  },
  {
    "text": "or HTTP queue length there's a number of ways to do that so you can scale up and scale down which is basically changing",
    "start": "905600",
    "end": "911239"
  },
  {
    "text": "the number of instances of your app service plan and I do want to point out before I forget back at those SLA",
    "start": "911239",
    "end": "918259"
  },
  {
    "text": "numbers when Microsoft tells you that you should expect 99.95% uptime for your",
    "start": "918259",
    "end": "924740"
  },
  {
    "text": "app service plan that means if you do everything correctly you can't blame Microsoft if",
    "start": "924740",
    "end": "932840"
  },
  {
    "text": "you have a deployment process that requires you to restart your app service",
    "start": "932840",
    "end": "938230"
  },
  {
    "text": "asher does provide deployment slots to make it easy to deploy a new version of",
    "start": "938230",
    "end": "943580"
  },
  {
    "text": "my application into a deployment slot and then tell all asher to basically swap slots so my staging slot becomes my",
    "start": "943580",
    "end": "951410"
  },
  {
    "text": "production slot and I have zero downtime because they will just manage changing around DNS records for me to start",
    "start": "951410",
    "end": "958040"
  },
  {
    "text": "sending traffic to my my new deployment when you scale out to multiple instances",
    "start": "958040",
    "end": "965000"
  },
  {
    "text": "if your app service plan after automatically puts a load balancer in front so if one of these instances of",
    "start": "965000",
    "end": "971810"
  },
  {
    "text": "that virtual machine goes offline if it's getting updated if the hard drive explodes those sorts of things there's",
    "start": "971810",
    "end": "978710"
  },
  {
    "text": "at least in this case still another instance running and ready to respond to requests so we have multiple instances",
    "start": "978710",
    "end": "984500"
  },
  {
    "text": "running you're using deployment slots so we have zero downtime and let's say this application is using blob storage and",
    "start": "984500",
    "end": "990650"
  },
  {
    "text": "azure sequel so a very simple application setup we have summed up redundancy built in already with our app service plan and deployment slots but",
    "start": "990650",
    "end": "998060"
  },
  {
    "text": "basically what else can we do and this all might be inside of a resource group by the way well the first so a couple",
    "start": "998060",
    "end": "1004510"
  },
  {
    "text": "you know again looking at the scenario this is one of those scenarios where I could have basically five hours of",
    "start": "1004510",
    "end": "1011500"
  },
  {
    "text": "downtime a year I'm just using the built-in stuff multiple instances but I",
    "start": "1011500",
    "end": "1016990"
  },
  {
    "text": "could still have four hours of downtime on my app service and almost an hour on has your sequel what do I do",
    "start": "1016990",
    "end": "1022420"
  },
  {
    "text": "so there's a couple simple things that you can do in software to sometimes improve your uptime numbers and one is",
    "start": "1022420",
    "end": "1030490"
  },
  {
    "text": "as simple as connection resiliency so there's always in the cloud transient faults happening in fact I don't know if",
    "start": "1030490",
    "end": "1038890"
  },
  {
    "text": "if anyone has tried to use Azure sequel or tried to use Azure sequel back in some of the early releases of Azure",
    "start": "1038890",
    "end": "1045280"
  },
  {
    "text": "sequel but it was always having these transient faults from a do net",
    "start": "1045280",
    "end": "1050470"
  },
  {
    "text": "connections where the a do dot connection would just fail and you know you try again a little bit later and it",
    "start": "1050470",
    "end": "1056230"
  },
  {
    "text": "would work but the transient transient faults were very disturbing to people the because in the old days we didn't write",
    "start": "1056230",
    "end": "1062230"
  },
  {
    "text": "our programs with connection resiliency we just tried to attempt a sequel server and if it failed well that threat is over that you know",
    "start": "1062230",
    "end": "1069940"
  },
  {
    "text": "we stop we throw an exception it's all over connection resiliency is simply okay it failed let me wait a little bit",
    "start": "1069940",
    "end": "1075280"
  },
  {
    "text": "try again let me wait a little bit try again hopefully that I'll go through and this can happen not just because sequel",
    "start": "1075280",
    "end": "1080980"
  },
  {
    "text": "servers down by the way this can happen because maybe you under a provision in sequel server so you need to watch out",
    "start": "1080980",
    "end": "1086710"
  },
  {
    "text": "for that too when you assign an azure sequel instance you need to select the number of data throughput units that",
    "start": "1086710",
    "end": "1092710"
  },
  {
    "text": "uses this was just basically how powerful do I want my sequel instance to be the more powerful the more arcane but",
    "start": "1092710",
    "end": "1100090"
  },
  {
    "text": "if I don't if I don't have it configured to be powerful enough they can simply",
    "start": "1100090",
    "end": "1105640"
  },
  {
    "text": "start to ignore some of the work that you try to ask it to do and just it'll fail those operations and so connection",
    "start": "1105640",
    "end": "1113350"
  },
  {
    "start": "1110000",
    "end": "1595000"
  },
  {
    "text": "resiliency actually is quite easy to do for a lot of scenarios because if you",
    "start": "1113350",
    "end": "1119890"
  },
  {
    "text": "are using the official Asscher SDKs a lot of them already have this retry",
    "start": "1119890",
    "end": "1125200"
  },
  {
    "text": "logic this resiliency built-in so for Azure storage example if I want to talk",
    "start": "1125200",
    "end": "1130360"
  },
  {
    "text": "to blob storage or queue inside of my storage account or table storage there's retry logic in the official c-sharp",
    "start": "1130360",
    "end": "1138430"
  },
  {
    "text": "nougat package in the official JavaScript NPM package there's nothing I have to do although I could configure it",
    "start": "1138430",
    "end": "1145300"
  },
  {
    "text": "a little bit so this would be an example and c-sharp code of saying I want to",
    "start": "1145300",
    "end": "1150520"
  },
  {
    "text": "connect to my storage account here's the connection string now I'm gonna create what's called a blog client to be able",
    "start": "1150520",
    "end": "1155920"
  },
  {
    "text": "to talk to blob storage specifically and any requests that I make with this client here's some default options first",
    "start": "1155920",
    "end": "1162100"
  },
  {
    "text": "of all location mode I want primary than secondary in other words if I try to connect to my primary instance of blob",
    "start": "1162100",
    "end": "1168880"
  },
  {
    "text": "storage to read a blob or write a blob and it's down well this would actually",
    "start": "1168880",
    "end": "1174430"
  },
  {
    "text": "only apply to read scenarios if I try to read a blob and it's not available go to my secondary storage location where",
    "start": "1174430",
    "end": "1180190"
  },
  {
    "text": "things have been replicated replicated and read it from there but you can also retry so keep retrying that primary",
    "start": "1180190",
    "end": "1188310"
  },
  {
    "text": "using a linear retry of 500 Melissa so wait 500 milliseconds we try again",
    "start": "1188310",
    "end": "1194779"
  },
  {
    "text": "wait 500 milliseconds we try again the default is an exponential back-off where it keeps increasing the time between the",
    "start": "1194779",
    "end": "1201409"
  },
  {
    "text": "retry attempts and the maximum number of attempts is 3 so that would be a way if I want low-level control of my",
    "start": "1201409",
    "end": "1207559"
  },
  {
    "text": "resiliency I could do that for a sure sequel there is nothing in the official",
    "start": "1207559",
    "end": "1213710"
  },
  {
    "text": "SDK because you know sequel is a little bit different you can talk to it through",
    "start": "1213710",
    "end": "1218990"
  },
  {
    "text": "various protocols but if you're using with the entity framework there's an",
    "start": "1218990",
    "end": "1224120"
  },
  {
    "text": "option both an entity framework 6 or 7 or whatever that last version was an entity framework or disable to save",
    "start": "1224120",
    "end": "1231740"
  },
  {
    "text": "sequel options enable retry on failure so that'll work through those transient connection attempts and all these retry",
    "start": "1231740",
    "end": "1238639"
  },
  {
    "text": "logics I should point out are smart they're not going to retry operations that are obviously going to fail so for",
    "start": "1238639",
    "end": "1245210"
  },
  {
    "text": "example with enable retry on failure without there as your sequel if I try to",
    "start": "1245210",
    "end": "1251330"
  },
  {
    "text": "let's say insert an object through the entity framework that's going to generate a foreign key violation or",
    "start": "1251330",
    "end": "1257149"
  },
  {
    "text": "primary key violation entity frameworks not going to retry that it makes no",
    "start": "1257149",
    "end": "1262190"
  },
  {
    "text": "sense to retry that operation it's always going to fail if I you know missing some valid database constraint",
    "start": "1262190",
    "end": "1268669"
  },
  {
    "text": "but it's smart enough to listen for connections that are exceptions and",
    "start": "1268669",
    "end": "1274580"
  },
  {
    "text": "error codes that might happen because the networks not available or the host is not available or sequel servers too",
    "start": "1274580",
    "end": "1280100"
  },
  {
    "text": "busy at the moment it understands that yes I could retry that operation and maybe it'll work in 500 milliseconds or",
    "start": "1280100",
    "end": "1286159"
  },
  {
    "text": "3 seconds from now the other thing before I leave here before I leave retry",
    "start": "1286159",
    "end": "1292669"
  },
  {
    "text": "logic to point out is that sometimes retries make the situation worse it's",
    "start": "1292669",
    "end": "1298700"
  },
  {
    "text": "really interesting how systems behave under load and that's why I always suggest people try to load tests and try",
    "start": "1298700",
    "end": "1304999"
  },
  {
    "text": "to generate some forced-air conditions just understand how your application behaves but if a server let's say your",
    "start": "1304999",
    "end": "1312769"
  },
  {
    "text": "front-end web application is calling a back-end API service over HTTP and some",
    "start": "1312769",
    "end": "1319789"
  },
  {
    "text": "you know something's wrong you have this retry logic well maybe that back-end service is just",
    "start": "1319789",
    "end": "1325470"
  },
  {
    "text": "it's the CPU is pegged the memory is exhausted on that virtual machine and",
    "start": "1325470",
    "end": "1330510"
  },
  {
    "text": "now you have this retry logic that just keeps sending more requests it doesn't help sometimes you just need to stop and say",
    "start": "1330510",
    "end": "1337980"
  },
  {
    "text": "well we're gonna give that thing five minutes and see if it recovers maybe it has to reboot I don't know what's going",
    "start": "1337980",
    "end": "1343920"
  },
  {
    "text": "on with that and that's when simple retry logic doesn't work that's when you might try something and it's the circuit breaker pattern so I'll show you the a",
    "start": "1343920",
    "end": "1351090"
  },
  {
    "text": "library that can help with this in just a minute but let me describe it the circuit breaker is a stateful component",
    "start": "1351090",
    "end": "1357360"
  },
  {
    "text": "that wraps your interactions with some other service and the circuit breaker like an electrical circuit breaker by",
    "start": "1357360",
    "end": "1362940"
  },
  {
    "text": "default is gonna be closed so electricity in other words messages can flow between these two systems but it's",
    "start": "1362940",
    "end": "1369240"
  },
  {
    "text": "stateful so it's keeping track of things like oh I see you've made ten successful requests over the last second good I'll",
    "start": "1369240",
    "end": "1375690"
  },
  {
    "text": "keep the connection closed or the circuit closed but maybe this you've",
    "start": "1375690",
    "end": "1380700"
  },
  {
    "text": "programmed the circuit breaker to say huh I've seen 10 failures over the last second something must be wrong when we",
    "start": "1380700",
    "end": "1386400"
  },
  {
    "text": "pop open the circuit and now instead of your retry operations hammering the",
    "start": "1386400",
    "end": "1391440"
  },
  {
    "text": "service the circuit breaker makes them fail fast and just immediately says now this connections currently shut down",
    "start": "1391440",
    "end": "1397820"
  },
  {
    "text": "we're gonna maybe retry it later but for right now we're not gonna send any more requests that serve because it's failed",
    "start": "1397820",
    "end": "1404370"
  },
  {
    "text": "so much over the last second or 30 seconds what have you and then at some point you can program the circuit",
    "start": "1404370",
    "end": "1409410"
  },
  {
    "text": "breaker to go half of them which doesn't really work well for like electricity but in the half-open space it'll start",
    "start": "1409410",
    "end": "1416040"
  },
  {
    "text": "to allow some things to trickle through so maybe it'll select one out of ten of the next connections and allowed to go",
    "start": "1416040",
    "end": "1421440"
  },
  {
    "text": "through that's kind of a test is the back end service responding now and if things look like they're working it also",
    "start": "1421440",
    "end": "1426840"
  },
  {
    "text": "those again things are back to normal and maybe that gave that back-end server a chance to reboot or patch or you know",
    "start": "1426840",
    "end": "1432540"
  },
  {
    "text": "clear out some HTTP queue that was building up and now the system's back to normal so how would you implement",
    "start": "1432540",
    "end": "1438300"
  },
  {
    "text": "something like that obviously sounds non-trivial anyone use poly net or oh",
    "start": "1438300",
    "end": "1444990"
  },
  {
    "text": "good yeah so awesome library to encapsulate policies about what you want",
    "start": "1444990",
    "end": "1452490"
  },
  {
    "text": "to happen when something's not working so if I get an exception do I want to retry it if I get an exception",
    "start": "1452490",
    "end": "1458590"
  },
  {
    "text": "do I want to use a circuit breaker to shut things down and feel fast and the documentation is quite good just to give",
    "start": "1458590",
    "end": "1465249"
  },
  {
    "text": "you a simple example of the API yeah I",
    "start": "1465249",
    "end": "1472600"
  },
  {
    "text": "mean it's like a fluent API so I want to build a policy that will handle / 0 exceptions I'm gonna retry it 3 times",
    "start": "1472600",
    "end": "1479200"
  },
  {
    "text": "which chances are you'll still / 0 but hopefully you can see that you could",
    "start": "1479200",
    "end": "1485950"
  },
  {
    "text": "look for particular types of exceptions that represent transient faults you know the network not available fall toast not",
    "start": "1485950",
    "end": "1492759"
  },
  {
    "text": "available fault server too busy type of faults and those are the type of operations so you might want to retry",
    "start": "1492759",
    "end": "1498009"
  },
  {
    "text": "and this handles apologies for making anyone nauseous if I'm scrolling you can",
    "start": "1498009",
    "end": "1504159"
  },
  {
    "text": "build retry policies circuit breaker policies timeout proper policies excuse",
    "start": "1504159",
    "end": "1510519"
  },
  {
    "text": "me I need a drink bulkhead isolation policies which can be",
    "start": "1510519",
    "end": "1517149"
  },
  {
    "text": "quite useful this is like on a ship when you have a bulkhead one of the things it",
    "start": "1517149",
    "end": "1523450"
  },
  {
    "text": "does if someone punctures a hole on the side of the ship it prevents the water from spreading throughout the ship it just floods one area",
    "start": "1523450",
    "end": "1529019"
  },
  {
    "text": "likewise in software development sometimes we have these components like a good example in.net is the whole HTTP",
    "start": "1529019",
    "end": "1535990"
  },
  {
    "text": "client issue I don't know if you know the HTTP client issue drama I could probably spend an hour talking about",
    "start": "1535990",
    "end": "1541570"
  },
  {
    "text": "HTTP client but the suggested use of HTTP client this as a singleton but",
    "start": "1541570",
    "end": "1547659"
  },
  {
    "text": "anytime you get into using a singleton so I'm gonna use one object to connect to all my services HTTP client that",
    "start": "1547659",
    "end": "1553029"
  },
  {
    "text": "becomes an that can become an issue if something is inherently wrong with that HTTP client maybe this one service over",
    "start": "1553029",
    "end": "1558549"
  },
  {
    "text": "here puts it in a bad state bulkhead isolation would be about okay we're gonna use this client and it's isolated",
    "start": "1558549",
    "end": "1563860"
  },
  {
    "text": "this is HTTP client to talk to this service or this collection of services and that in a bulkhead separate from",
    "start": "1563860",
    "end": "1569590"
  },
  {
    "text": "this other one over here so caching policies fall back policies and then policy wrap is a way to say hey take my",
    "start": "1569590",
    "end": "1576580"
  },
  {
    "text": "circuit breaker and I retry and this other thing and wrap them all up into a bigger policy so pretty cool library",
    "start": "1576580",
    "end": "1582249"
  },
  {
    "text": "called poly if you just search on whatever search engine for github poly",
    "start": "1582249",
    "end": "1588279"
  },
  {
    "text": "net I'm pretty sure you'll find this repository and you can read through the documentation all right so moving on",
    "start": "1588279",
    "end": "1595260"
  },
  {
    "start": "1595000",
    "end": "1655000"
  },
  {
    "text": "graceful degradation another another feature to consider so my app service",
    "start": "1595260",
    "end": "1600429"
  },
  {
    "text": "talks to sequel server what happens if my sequel server is not available it's experiencing one of those downtime moments what can I do well for reads",
    "start": "1600429",
    "end": "1608860"
  },
  {
    "text": "maybe maybe just maybe I could come go to some other data source that might be available and read some data that was",
    "start": "1608860",
    "end": "1616330"
  },
  {
    "text": "cached maybe five minutes ago or half an hour ago and of course this depends on your application if you're building an",
    "start": "1616330",
    "end": "1622149"
  },
  {
    "text": "application that provides customers with stock quotes or Bitcoin quotes then you",
    "start": "1622149",
    "end": "1627159"
  },
  {
    "text": "can give them five minute old information right that could ruin somebody but if you're someone who is an",
    "start": "1627159",
    "end": "1633190"
  },
  {
    "text": "e-commerce vendor and you just can't get to the inventory service to determine if you have enough widgets for this order",
    "start": "1633190",
    "end": "1639850"
  },
  {
    "text": "or maybe it's okay if you read what was there five minutes ago and tell the customer hey we still have 10 because if",
    "start": "1639850",
    "end": "1646360"
  },
  {
    "text": "you don't have enough you could always send them an email afterwards and just tell them their shipment will be late it",
    "start": "1646360",
    "end": "1652360"
  },
  {
    "text": "works for some industries right it doesn't work everywhere what if sequel server is not available and I need to write something into it or",
    "start": "1652360",
    "end": "1658960"
  },
  {
    "start": "1655000",
    "end": "1705000"
  },
  {
    "text": "maybe if I have a backup that's a message queue and the message queue is still available I could write that",
    "start": "1658960",
    "end": "1664990"
  },
  {
    "text": "command that describes what information I need to place in the database or how I'm manipulating the state of my",
    "start": "1664990",
    "end": "1670750"
  },
  {
    "text": "application I can place that into a message queue instead of directly in the database and one of the things you'll",
    "start": "1670750",
    "end": "1676539"
  },
  {
    "text": "realize here is that reads are separate from rights and if you've heard of a",
    "start": "1676539",
    "end": "1683260"
  },
  {
    "text": "CQRS strategy CQRS design pattern that can be a very effective pattern to use",
    "start": "1683260",
    "end": "1689919"
  },
  {
    "text": "for both scalability and reliability of an application so there's been many talks over the years at NDC about CQRS",
    "start": "1689919",
    "end": "1696940"
  },
  {
    "text": "I'm sure so you can look this up but it's basically about separating reads from writes so just having a different",
    "start": "1696940",
    "end": "1702700"
  },
  {
    "text": "path for your code for this two different operations but this is easier said than done right this is where not",
    "start": "1702700",
    "end": "1708970"
  },
  {
    "start": "1705000",
    "end": "1755000"
  },
  {
    "text": "only do I pay more operational costs for running sequel and Redis or a second",
    "start": "1708970",
    "end": "1715059"
  },
  {
    "text": "instance of sequel or something for that second data source and some Q's not only my paying more operationally but now my",
    "start": "1715059",
    "end": "1721450"
  },
  {
    "text": "code is much more complex that's sometimes a more important factor now when someone gives me a report that",
    "start": "1721450",
    "end": "1729280"
  },
  {
    "text": "Hayes such-and-such a customer experience this issue on the website then I have to say okay well I wonder if",
    "start": "1729280",
    "end": "1735160"
  },
  {
    "text": "that was reading from the database or if the database was down at that time and I was reading from somewhere else it just",
    "start": "1735160",
    "end": "1740260"
  },
  {
    "text": "it complicates things complicates not just the code but also debugging issues and figuring out what's happening inside",
    "start": "1740260",
    "end": "1746710"
  },
  {
    "text": "of your environment so you again really really really want to beat the Microsoft",
    "start": "1746710",
    "end": "1751780"
  },
  {
    "text": "provided SLA numbers to introduce some of these more advanced architectures what about this what if we wanted to",
    "start": "1751780",
    "end": "1760650"
  },
  {
    "start": "1755000",
    "end": "1775000"
  },
  {
    "text": "build an application with an app service that is using this queue that is using",
    "start": "1760650",
    "end": "1766240"
  },
  {
    "text": "blob storage that is using a Redis cache that is using Azure sequel slightly more",
    "start": "1766240",
    "end": "1773440"
  },
  {
    "text": "sophisticated application but here's what I want to do I want to take this application now that I've made it more",
    "start": "1773440",
    "end": "1779620"
  },
  {
    "start": "1775000",
    "end": "2015000"
  },
  {
    "text": "redundant and I want to deploy it in multiple places so I want to employ deploy it into two different data",
    "start": "1779620",
    "end": "1786280"
  },
  {
    "text": "centers one in South UK one in East us now even if East us is down I can send",
    "start": "1786280",
    "end": "1794200"
  },
  {
    "text": "all my customer traffic to the one in South UK how do I do that that's where you can use an azure load balancer named",
    "start": "1794200",
    "end": "1800740"
  },
  {
    "text": "traffic manager so there's three different types of load balancers in",
    "start": "1800740",
    "end": "1805990"
  },
  {
    "text": "Azure let me talk about Traffic Manager first traffic manager is a DNS dns-based load balancer meaning you will go in and",
    "start": "1805990",
    "end": "1815400"
  },
  {
    "text": "you will configure traffic manager to respond to DNS queries from your customers so when they go into the",
    "start": "1815400",
    "end": "1821350"
  },
  {
    "text": "browser and type in Scott Allen calm and the operating system goes off and says hey what I P address has got a long calm",
    "start": "1821350",
    "end": "1826980"
  },
  {
    "text": "that request will go to traffic manager and then you program traffic manager to",
    "start": "1826980",
    "end": "1833170"
  },
  {
    "text": "know about your different deployments so you say hey I have this app service here and this app service here it knows those",
    "start": "1833170",
    "end": "1839350"
  },
  {
    "text": "two different IP addresses and you tell traffic manager there's there's several several different ways to program it one",
    "start": "1839350",
    "end": "1846730"
  },
  {
    "text": "way to program traffic manager is to say actually let me just think we have time",
    "start": "1846730",
    "end": "1852220"
  },
  {
    "text": "to just create one real flow I'm sure if I have any screenshot for it I hate talking about things in the",
    "start": "1852220",
    "end": "1858250"
  },
  {
    "text": "abstract but shouldn't take too long I'm",
    "start": "1858250",
    "end": "1868360"
  },
  {
    "text": "not gonna enter passwords and all that I'll just talk about it I can tell traffic manager respond use",
    "start": "1868360",
    "end": "1874390"
  },
  {
    "text": "using performance-based rules so traffic manager will determine which of those two IP addresses to hand out based on",
    "start": "1874390",
    "end": "1881620"
  },
  {
    "text": "the customers location and what the expected latency is between that customer and that particular data center",
    "start": "1881620",
    "end": "1887830"
  },
  {
    "text": "so a customer in East us will probably get routed to the app service instance",
    "start": "1887830",
    "end": "1893320"
  },
  {
    "text": "that's also in the east us unless they unless that app service is down because by the way traffic manager is also doing",
    "start": "1893320",
    "end": "1899440"
  },
  {
    "text": "health probes once I tell it about these two different app services it's constantly sending HTTP requests to an",
    "start": "1899440",
    "end": "1905650"
  },
  {
    "text": "endpoint that you provide so you could build something in your app service like slash health check until traffic manager",
    "start": "1905650",
    "end": "1913120"
  },
  {
    "text": "go to slash health check and if it goes to slash health check and receives a 200 response it says ok you must be good but",
    "start": "1913120",
    "end": "1920290"
  },
  {
    "text": "if it returns anything other than a 200 even like a 301 which isn't really an error code but if you return anything",
    "start": "1920290",
    "end": "1926020"
  },
  {
    "text": "but a 200 traffic manager sent us home I think something's wrong over there I'm gonna stop sending traffic but it'll",
    "start": "1926020",
    "end": "1931750"
  },
  {
    "text": "keep checking to see if it recovers anyway so you can tell traffic manager",
    "start": "1931750",
    "end": "1938530"
  },
  {
    "text": "about users based on performance which is interesting you can also tell traffic manager to route based on geography",
    "start": "1938530",
    "end": "1944710"
  },
  {
    "text": "we're just interesting for geofencing so if you need your new customers to state to be routed to a data center that was",
    "start": "1944710",
    "end": "1950890"
  },
  {
    "text": "also in the EU and US customers stay in the US and so forth you can do that you",
    "start": "1950890",
    "end": "1955990"
  },
  {
    "text": "can also tell traffic manager to do priority based routing so you can say send 90% of my traffic to the first app",
    "start": "1955990",
    "end": "1962710"
  },
  {
    "text": "service and send 10% of my traffic to the second app service and sometimes that feature is useful for things like a",
    "start": "1962710",
    "end": "1968800"
  },
  {
    "text": "bee testing so I have one app service where I've deployed my new features I can tell traffic manager you send 3",
    "start": "1968800",
    "end": "1974680"
  },
  {
    "text": "percent of my traffic there because I'm just doing a test to make sure nothing explodes in spectacular fashion",
    "start": "1974680",
    "end": "1979810"
  },
  {
    "text": "and after that runs for maybe 8 hours then I'll also deploy that into the other app service and hey changed",
    "start": "1979810",
    "end": "1987040"
  },
  {
    "text": "traffic manager rules to just balance between the two and you can have nested traffic manager profiles by the way so I",
    "start": "1987040",
    "end": "1992650"
  },
  {
    "text": "could have traffic manager that routes a user to another traffic manager because they live in the US and thus other",
    "start": "1992650",
    "end": "1998830"
  },
  {
    "text": "traffic manager routes based on performance or priority what-have-you so",
    "start": "1998830",
    "end": "2003920"
  },
  {
    "text": "in the portal it's real really easy to say create new traffic manager you can",
    "start": "2003920",
    "end": "2009000"
  },
  {
    "text": "also do it with a script of course you tell it about your different deployment to different app services and just tell",
    "start": "2009000",
    "end": "2014460"
  },
  {
    "text": "it how you want to be route between those yeah so traffic manager is one of",
    "start": "2014460",
    "end": "2022680"
  },
  {
    "start": "2015000",
    "end": "2295000"
  },
  {
    "text": "three load balancers and I just want to point out because um sometimes people get confused about this but a short",
    "start": "2022680",
    "end": "2028350"
  },
  {
    "text": "traffic manager is sort of the highest level Network load balancer it's a DNS based load balancer you configure the",
    "start": "2028350",
    "end": "2034380"
  },
  {
    "text": "DNS timeout there the default I think is five minutes 300 seconds which means every five minutes",
    "start": "2034380",
    "end": "2041070"
  },
  {
    "text": "your client should re query whatever DNS server to say hey what was that IP",
    "start": "2041070",
    "end": "2048240"
  },
  {
    "text": "address for Scott Island calm again which means if your app service fails your customer could be looking at blank",
    "start": "2048240",
    "end": "2055379"
  },
  {
    "text": "screens or errors for you know four minutes and 59 seconds until something triggers another DNS query so you could",
    "start": "2055380",
    "end": "2063179"
  },
  {
    "text": "could you could go into Azure traffic manager and set the time to live the TTL to like thirty seconds but then you have",
    "start": "2063179",
    "end": "2069810"
  },
  {
    "text": "the overhead of now your client is making a lot of DNS queries all the time trying to find out where to go so",
    "start": "2069810",
    "end": "2076129"
  },
  {
    "text": "traffic manager DNS base load balancer the lowest level over here on the left",
    "start": "2076130",
    "end": "2081330"
  },
  {
    "text": "the azure load balancer that's a network layer for load balancer meaning and operates at the tcp/ip level meaning you",
    "start": "2081330",
    "end": "2088470"
  },
  {
    "text": "typically don't put this in front of web applications you typically put this in front of virtual machines that are doing",
    "start": "2088470",
    "end": "2093810"
  },
  {
    "text": "socket based protocols like RDP or stuff like that so for most web developers the",
    "start": "2093810",
    "end": "2100620"
  },
  {
    "text": "azure load balancer isn't interesting and so what's confusing is what do you use as a web developer you use the azure",
    "start": "2100620",
    "end": "2106680"
  },
  {
    "text": "application gateway that's a layer 7 load balancer so it operates at the application level of the networking",
    "start": "2106680",
    "end": "2113280"
  },
  {
    "text": "stack which means it understands protocols like HTTP and HTTPS natively",
    "start": "2113280",
    "end": "2119770"
  },
  {
    "text": "you can use this as your application gateway in front of your web application",
    "start": "2119770",
    "end": "2125770"
  },
  {
    "text": "which I'm gonna come back I have to remember to give you the caveat there you can use this load balancer in front",
    "start": "2125770",
    "end": "2131350"
  },
  {
    "text": "of your web application to do things like inspect HTTP headers there's a firewall with up so you can control",
    "start": "2131350",
    "end": "2138580"
  },
  {
    "text": "traffic a little more tightly you can have a set affinity cookies if you need them so if you need a customer when they",
    "start": "2138580",
    "end": "2145030"
  },
  {
    "text": "come to you with their browser or their service if you need their request to always come back to the same server that",
    "start": "2145030",
    "end": "2150430"
  },
  {
    "text": "application gateway can set an affinity cookie to make sure they arrive at the right spot and the thing to be aware of",
    "start": "2150430",
    "end": "2156640"
  },
  {
    "text": "with Azure application gateway is yes you can place it in front of a web application that's deployed on a virtual",
    "start": "2156640",
    "end": "2163540"
  },
  {
    "text": "on virtual machines so if you're using pure virtual machines may be putting",
    "start": "2163540",
    "end": "2169060"
  },
  {
    "text": "containers on this machines that's where you would configure as your application gateway I don't need to put this in",
    "start": "2169060",
    "end": "2174850"
  },
  {
    "text": "front of an app service my app service already has basically an application gateway it's just one that I don't",
    "start": "2174850",
    "end": "2180580"
  },
  {
    "text": "control and so a lot of people but a lot of people say hey there's certain features of Azure application gateway",
    "start": "2180580",
    "end": "2185890"
  },
  {
    "text": "that I like how can I use that with an app service and the answer today would be the only way to do that is to create",
    "start": "2185890",
    "end": "2192910"
  },
  {
    "text": "what's known in Azure as an isolated app service and it's actually in the list of",
    "start": "2192910",
    "end": "2198640"
  },
  {
    "text": "pricing plans for app services now but the thing to be aware of with the isolated environment is tremendously",
    "start": "2198640",
    "end": "2204280"
  },
  {
    "text": "more expensive because the word isolated basically means what Microsoft is doing for you is not just putting you in the",
    "start": "2204280",
    "end": "2211360"
  },
  {
    "text": "regular app service environment they're creating a whole special app service environment for you and giving you a set",
    "start": "2211360",
    "end": "2216610"
  },
  {
    "text": "of virtual machines to run that environment but because they're giving you a set of virtual machines it gives",
    "start": "2216610",
    "end": "2221710"
  },
  {
    "text": "you a little more control over your environment your app service environment a little bit of a tangent here yes but",
    "start": "2221710",
    "end": "2229360"
  },
  {
    "text": "you know people come to me and say hey how my app Service has by default a public IP address how do I get rid of",
    "start": "2229360",
    "end": "2234790"
  },
  {
    "text": "that and the answer is well you don't with an app service unless you get an isolated out service because then you",
    "start": "2234790",
    "end": "2241060"
  },
  {
    "text": "can put in front of then you can put it behind the Gateway you can put it behind virtual networks you can do all these",
    "start": "2241060",
    "end": "2246160"
  },
  {
    "text": "other interesting things the big one that gets some people is when you have a regular app service just",
    "start": "2246160",
    "end": "2252339"
  },
  {
    "text": "know that a secure connection to that app service its terminated before it",
    "start": "2252339",
    "end": "2258640"
  },
  {
    "text": "reaches your app service so there's another network appliance or piece of machinery inside of Microsoft data center it takes out SSL connection and",
    "start": "2258640",
    "end": "2265450"
  },
  {
    "text": "decrypt it and then forwards HTTP traffic to your app service which disturbs a lot of people because it",
    "start": "2265450",
    "end": "2271329"
  },
  {
    "text": "means there's some unencrypted stuff going back and forth in the data center right now the only way to get true",
    "start": "2271329",
    "end": "2276880"
  },
  {
    "text": "end-to-end SSL encryption would be to use either the isolated app service",
    "start": "2276880",
    "end": "2283059"
  },
  {
    "text": "because then you can configure this application gateway to terminate SSL and still forward a connect encrypted",
    "start": "2283059",
    "end": "2289000"
  },
  {
    "text": "connection to your app service or to use virtual machines anyway moving on",
    "start": "2289000",
    "end": "2294010"
  },
  {
    "text": "hopefully not all needs sense I'm just you know I get in a rambling mood when",
    "start": "2294010",
    "end": "2299020"
  },
  {
    "start": "2295000",
    "end": "2365000"
  },
  {
    "text": "I'm jet-lagged so three different load balancers that's how you'd use them this was just describing traffic manager in a",
    "start": "2299020",
    "end": "2305859"
  },
  {
    "text": "little more detail so I'm gonna skip over with that but it was just you know the this traffic manager was configured",
    "start": "2305859",
    "end": "2313510"
  },
  {
    "text": "to use priorities the what the one I described to you earlier was not",
    "start": "2313510",
    "end": "2319900"
  },
  {
    "text": "priority based routing the one I described to you is what they call weighted routing weighted routing is",
    "start": "2319900",
    "end": "2325210"
  },
  {
    "text": "where you say 97% traffic here 3% traffic their priority routing is",
    "start": "2325210",
    "end": "2330700"
  },
  {
    "text": "basically here's my primary endpoint my secondary employee my third endpoint and traffic manager will just start falling",
    "start": "2330700",
    "end": "2337450"
  },
  {
    "text": "back to the other app services or resources that you registered if one goes down and I should point out the",
    "start": "2337450",
    "end": "2343359"
  },
  {
    "text": "traffic manager is not just app services inside a traffic manager I can point it",
    "start": "2343359",
    "end": "2348369"
  },
  {
    "text": "to an app service I can point it to a web application on a virtual machine I could point it to a web endpoint that's",
    "start": "2348369",
    "end": "2354579"
  },
  {
    "text": "running injury to AWS or an endpoint the toasted in my own data center that",
    "start": "2354579",
    "end": "2359740"
  },
  {
    "text": "something that has a public IP so it's not just restricted to to Azure stuff it's basically a way to get a DNS load",
    "start": "2359740",
    "end": "2366880"
  },
  {
    "start": "2365000",
    "end": "2430000"
  },
  {
    "text": "balancer that works everywhere this was an example of showing our two instances",
    "start": "2366880",
    "end": "2372640"
  },
  {
    "text": "of the same app service just run one running in East us run one running and",
    "start": "2372640",
    "end": "2378670"
  },
  {
    "text": "West you I did have some screenshots so after I create traffic manager this is where I",
    "start": "2378670",
    "end": "2384310"
  },
  {
    "text": "could go in and set the routing method performance weighted priority Geographic and yes this would be sort of the",
    "start": "2384310",
    "end": "2391840"
  },
  {
    "text": "default name like PS music store dot traffic manager net but of course you can buy purchases custom domains to",
    "start": "2391840",
    "end": "2400090"
  },
  {
    "text": "assign to that because you'll have an IP associated with that traffic manager profile and yes of course you can",
    "start": "2400090",
    "end": "2405400"
  },
  {
    "text": "purchase SSL Certificates so that you should be yes traffic arrives there to",
    "start": "2405400",
    "end": "2412030"
  },
  {
    "text": "your custom domain name and this is where you could say yes for this traffic",
    "start": "2412030",
    "end": "2417760"
  },
  {
    "text": "manager I want the performance routing method with a 300 second time to live on",
    "start": "2417760",
    "end": "2424300"
  },
  {
    "text": "the DNS responses and then this is where I add my endpoints and say here's my",
    "start": "2424300",
    "end": "2431080"
  },
  {
    "start": "2430000",
    "end": "2515000"
  },
  {
    "text": "first deployment here's my second appointment all right load leveling something else to think about it's very",
    "start": "2431080",
    "end": "2437080"
  },
  {
    "text": "easy for front-end services to receive messages from customers that have to",
    "start": "2437080",
    "end": "2444310"
  },
  {
    "text": "kickoff back-end services that need to do a lot of heavy lifting and that becomes a problem when you have a lot of",
    "start": "2444310",
    "end": "2450280"
  },
  {
    "text": "customers arrive let's say at 9 o'clock 9 a.m. on a Monday morning or when you know some activity happens in the news",
    "start": "2450280",
    "end": "2456250"
  },
  {
    "text": "and all these people were creating operations that are overwhelming your back-end because there's just so many",
    "start": "2456250",
    "end": "2461950"
  },
  {
    "text": "requests the web server can handle it the backend cannot that's one of the biggest struggles sometimes in distributed systems is just trying to",
    "start": "2461950",
    "end": "2468280"
  },
  {
    "text": "get things to work together all at the same capacity so that is that is where I",
    "start": "2468280",
    "end": "2474580"
  },
  {
    "text": "would make sure to introduce again message queues have some ability to place messages into a queue from the web",
    "start": "2474580",
    "end": "2481600"
  },
  {
    "text": "front-end so that when the traffic spikes like this the backend the front",
    "start": "2481600",
    "end": "2487030"
  },
  {
    "text": "end will just place a message on the queue that says hey we need to do this work we need to batch update this thing we need to place this ticket reservation",
    "start": "2487030",
    "end": "2493750"
  },
  {
    "text": "in the back-end service however you provision it can just pull messages off of that queue as as it can to process",
    "start": "2493750",
    "end": "2502630"
  },
  {
    "text": "those things and it might need to you know take a half hour half an hour to work through all the messages during a",
    "start": "2502630",
    "end": "2507880"
  },
  {
    "text": "rush but that's ok it was better than that service being overwhelmed and shutting down when all the customers arrived at once",
    "start": "2507880",
    "end": "2517170"
  },
  {
    "start": "2515000",
    "end": "2630000"
  },
  {
    "text": "we've used a sure service boss over the last couple years and it's been very effective at a number of things that as",
    "start": "2517170",
    "end": "2523750"
  },
  {
    "text": "your service boss whoops has all sorts of nice features in it about message deduplication and the",
    "start": "2523750",
    "end": "2529180"
  },
  {
    "text": "ability to schedule messages in the future so I could say you know drop this message in the queue but not until 11",
    "start": "2529180",
    "end": "2534910"
  },
  {
    "text": "a.m. tomorrow morning a type of thing is kind of nice it has hues so simple cues that you can use to",
    "start": "2534910",
    "end": "2542980"
  },
  {
    "text": "decouple to services and typically you use the hue when service a wants to tell some other service to do something so it",
    "start": "2542980",
    "end": "2549760"
  },
  {
    "text": "puts a command in that queue to tell some other service to do it it doesn't know what service will do it but one other service will pick up that message",
    "start": "2549760",
    "end": "2556089"
  },
  {
    "text": "and do something which is different than topics where I can place a message in a queue and there can be multiple",
    "start": "2556089",
    "end": "2561789"
  },
  {
    "text": "listeners on that topic so I may place a message on the queue that hey customer Scott Allen just placed some order for",
    "start": "2561789",
    "end": "2567549"
  },
  {
    "text": "an umbrella or a wind jacket or I guess I need a heavy jacket this week here really was hoping it would be a little",
    "start": "2567549",
    "end": "2574299"
  },
  {
    "text": "warmer weather anyway that message that gets dropped in a topic could be handled",
    "start": "2574299",
    "end": "2579700"
  },
  {
    "text": "by a few different services out there they can also describe and listen for things that will you know one might be",
    "start": "2579700",
    "end": "2585250"
  },
  {
    "text": "the email alerts one might be the inventory management different services can work on that particular command and",
    "start": "2585250",
    "end": "2591640"
  },
  {
    "text": "then relays and service bus in general have been very effective for us because we deploy a lot of custom software over",
    "start": "2591640",
    "end": "2601150"
  },
  {
    "text": "the years behind company firewalls just for historical purposes we're slowly",
    "start": "2601150",
    "end": "2606760"
  },
  {
    "text": "moving stuff into the cloud but even in the cloud we still need something deployed at the customer site to be able to load data and as your service boss",
    "start": "2606760",
    "end": "2613029"
  },
  {
    "text": "has the nice feature of you can open up a service bus listener behind a firewall and still be able to effectively",
    "start": "2613029",
    "end": "2619900"
  },
  {
    "text": "communicate with it because I can drop a message in a queue and it shows up inside the firewall and it's processed",
    "start": "2619900",
    "end": "2625990"
  },
  {
    "text": "by a piece of software running at the customer site so it's kind of quite useful and as your service boss pretty",
    "start": "2625990",
    "end": "2632559"
  },
  {
    "start": "2630000",
    "end": "2685000"
  },
  {
    "text": "easy to use just trying to make things a little more concrete so you can see what the code is like if you haven't worked with service boss typically your",
    "start": "2632559",
    "end": "2639760"
  },
  {
    "text": "connection string would look something like I've created a service bus called PS messaging service boss windows done",
    "start": "2639760",
    "end": "2645839"
  },
  {
    "text": "that would be my namespace so I have a connection string here that would include some sort of access token in",
    "start": "2645839",
    "end": "2652140"
  },
  {
    "text": "that connection string so I'm going to create a cute client I'm gonna put",
    "start": "2652140",
    "end": "2657299"
  },
  {
    "text": "together a message body that is a simple string you can put together messages that are populated with XML or JSON",
    "start": "2657299",
    "end": "2663749"
  },
  {
    "text": "whatever floats your boat create a new instance of a brokered message where I",
    "start": "2663749",
    "end": "2669180"
  },
  {
    "text": "will give that message body to and then just tell the client to send raw for poof someone else can read it and the",
    "start": "2669180",
    "end": "2675930"
  },
  {
    "text": "the read operation is pretty straightforward too I would create a",
    "start": "2675930",
    "end": "2681059"
  },
  {
    "text": "crate create a client and listen for messages on a particular queue load",
    "start": "2681059",
    "end": "2688589"
  },
  {
    "start": "2685000",
    "end": "2830000"
  },
  {
    "text": "throttling is something you might also want to consider depending on the type",
    "start": "2688589",
    "end": "2694499"
  },
  {
    "text": "of application you have but let's say you are building an API and you expect",
    "start": "2694499",
    "end": "2700079"
  },
  {
    "text": "customers to be able to sign up and use your API maybe they're paying money for your API and maybe they're not but you",
    "start": "2700079",
    "end": "2707430"
  },
  {
    "text": "can always get that one customer you know sooner as soon as you give someone a programmatic API someone kind of uses",
    "start": "2707430",
    "end": "2713369"
  },
  {
    "text": "if someone even accidentally might write a for loop that just hammers your",
    "start": "2713369",
    "end": "2718589"
  },
  {
    "text": "application service making API calls you want to prevent that you could write",
    "start": "2718589",
    "end": "2723809"
  },
  {
    "text": "that in your code inside of your application or you could put some sort of API Gateway or API manager in front",
    "start": "2723809",
    "end": "2732299"
  },
  {
    "text": "of your app server so there's a number of these API gateways some of them are open-source so you could certainly",
    "start": "2732299",
    "end": "2738839"
  },
  {
    "text": "consider them as your asher's version of an api gateway as a tool called api",
    "start": "2738839",
    "end": "2744450"
  },
  {
    "text": "manager and effectively it works as a proxy that sits in front of your api's",
    "start": "2744450",
    "end": "2750630"
  },
  {
    "text": "which could be spread across multiple things so there's a number of interesting use cases for API manager",
    "start": "2750630",
    "end": "2756660"
  },
  {
    "text": "one is this let's say I have an app service that I want to monetize and I just want to make sure it doesn't get",
    "start": "2756660",
    "end": "2761880"
  },
  {
    "text": "abused one easy way to do that I don't want to write the code myself is to create an API manager in Azure tell it",
    "start": "2761880",
    "end": "2769499"
  },
  {
    "text": "about my app service the address that it's at and now my customers will connect to API manager instead of",
    "start": "2769499",
    "end": "2775920"
  },
  {
    "text": "directly to my app service and when they connect my API manager it can do these things like implement",
    "start": "2775920",
    "end": "2781650"
  },
  {
    "text": "throttling rules that you give it so it's very easy to go into API manager and say hey for any particular customer",
    "start": "2781650",
    "end": "2787890"
  },
  {
    "text": "we're not going to allow more than five calls a second or five hundred five thousand calls a week and you can also",
    "start": "2787890",
    "end": "2794040"
  },
  {
    "text": "build a single API endpoint or namespace",
    "start": "2794040",
    "end": "2799079"
  },
  {
    "text": "that your customers go to and have those messages forward across different micro",
    "start": "2799079",
    "end": "2804299"
  },
  {
    "text": "services that are spread all across different things on your back-end and built by different teams so for example someone comes to Scott Allen comm slash",
    "start": "2804299",
    "end": "2811920"
  },
  {
    "text": "API slash widgets API manager might route that to this app service which is",
    "start": "2811920",
    "end": "2818339"
  },
  {
    "text": "on a completely different name and if someone comes to Scott Allen Scott Allen comm slash API slash invoices maybe that",
    "start": "2818339",
    "end": "2825990"
  },
  {
    "text": "comes over here and it's implemented with Azure functions or something so it's a nice way to coalesce these things together to API manager can consume",
    "start": "2825990",
    "end": "2837480"
  },
  {
    "start": "2830000",
    "end": "2880000"
  },
  {
    "text": "metadata about your API so if it's available which allows the the the",
    "start": "2837480",
    "end": "2844020"
  },
  {
    "text": "traffic API manager here in the middle it allows it to understand your API s and allows it to export documentation to",
    "start": "2844020",
    "end": "2850410"
  },
  {
    "text": "the developers who are signing up to user api's so if you can produce a wobble document or a wisdom document or",
    "start": "2850410",
    "end": "2856650"
  },
  {
    "text": "swagger document and give that to API manager it knows about all the operations that are inside of your",
    "start": "2856650",
    "end": "2863040"
  },
  {
    "text": "service so this is setting up an API manager you'll notice there is a cost",
    "start": "2863040",
    "end": "2868980"
  },
  {
    "text": "associated with it it's not trivial but hopefully you'll be able to monetize",
    "start": "2868980",
    "end": "2874440"
  },
  {
    "text": "api's and be able to make this money back it has a once you set it up it",
    "start": "2874440",
    "end": "2883440"
  },
  {
    "start": "2880000",
    "end": "2900000"
  },
  {
    "text": "gives you a developer portal where you can go in and manage your API is it also gives you a public portal where you can",
    "start": "2883440",
    "end": "2890190"
  },
  {
    "text": "send your customers and their developers you can send them here and they can sign up and register for a key and browse",
    "start": "2890190",
    "end": "2895890"
  },
  {
    "text": "your api's and browse your documentation so it's quite a useful tool just going",
    "start": "2895890",
    "end": "2901770"
  },
  {
    "text": "through some of the screenshots of it you can divide your API up into different products apply policies this",
    "start": "2901770",
    "end": "2909450"
  },
  {
    "text": "is where I would apply throttling policies don't this list of policy statements on the",
    "start": "2909450",
    "end": "2914520"
  },
  {
    "text": "right those are just some built-in policies that I can drag and drop over so if someone someone in my organization",
    "start": "2914520",
    "end": "2920730"
  },
  {
    "text": "wrote an API but they didn't have pours headers sent in there if I put it behind",
    "start": "2920730",
    "end": "2925740"
  },
  {
    "text": "an API manager I can add this course headers for them without them changing code so I'll be the course headers down",
    "start": "2925740",
    "end": "2933000"
  },
  {
    "text": "here uh yes that was a topic I didn't",
    "start": "2933000",
    "end": "2940650"
  },
  {
    "start": "2935000",
    "end": "3083000"
  },
  {
    "text": "quite want to talk about I just wanted",
    "start": "2940650",
    "end": "2947940"
  },
  {
    "text": "to end the talk with a couple topics topics here if you go down this road of",
    "start": "2947940",
    "end": "2953490"
  },
  {
    "text": "trying to be highly available trying to do disaster recovery you have to have to have to have to have to automate",
    "start": "2953490",
    "end": "2959400"
  },
  {
    "text": "everything that you can you cannot go and ask someone in your IT department or",
    "start": "2959400",
    "end": "2965369"
  },
  {
    "text": "your developers to say hey stand up a new instance of our application in the east you aced East us datacenter because",
    "start": "2965369",
    "end": "2971520"
  },
  {
    "text": "we're gonna deploy there now has to be a script that's checked in somewhere that someone just executes it's been",
    "start": "2971520",
    "end": "2977190"
  },
  {
    "text": "parameters so you just pick the datacenter and the names that you want for that particular installation",
    "start": "2977190",
    "end": "2983119"
  },
  {
    "text": "sometimes it's difficult to maintain those scripts and create those scripts but the net benefit pays off in many",
    "start": "2983119",
    "end": "2990510"
  },
  {
    "text": "ways over time and you have to test you have to test you have to make sure not just the traffic manager let's say is",
    "start": "2990510",
    "end": "2996060"
  },
  {
    "text": "configured correctly and working for you but the more you set up these complex systems that involve traffic manager and",
    "start": "2996060",
    "end": "3002780"
  },
  {
    "text": "to app services instances and geo replication and this thing will read from Redis when it can and I will read",
    "start": "3002780",
    "end": "3008540"
  },
  {
    "text": "from a sequel database if it can't you have to test out the scenarios just to see how your applications gonna behave",
    "start": "3008540",
    "end": "3014300"
  },
  {
    "text": "and thinks you're wrong because you don't want to be debugging things in a panic mode when something actually is",
    "start": "3014300",
    "end": "3020359"
  },
  {
    "text": "wrong it's always very nice when someone presents you with an air from the application or a log from some part of",
    "start": "3020359",
    "end": "3026660"
  },
  {
    "text": "the application where you say oh yeah we saw that last week when we were trying things out we know that's when Redis",
    "start": "3026660",
    "end": "3032030"
  },
  {
    "text": "goes down that sort of thing so test and introduce failures and you know take that Netflix chaos monkey approach of",
    "start": "3032030",
    "end": "3039020"
  },
  {
    "text": "having something that goes out and and forces services to be in a faulted State you know turn things off disable",
    "start": "3039020",
    "end": "3046160"
  },
  {
    "text": "things see how the application behaves when something's turned off there's valuable understanding how things will",
    "start": "3046160",
    "end": "3052520"
  },
  {
    "text": "behave and of course monitor everything the building built in as your monitoring tools are okay but you have to spend",
    "start": "3052520",
    "end": "3058550"
  },
  {
    "text": "some time with them to make sure you properly configure the alert and you're getting the right metrics a lot of",
    "start": "3058550",
    "end": "3063590"
  },
  {
    "text": "people use some third-party tools which is cool too and with that I'll just say yeah I have",
    "start": "3063590",
    "end": "3068810"
  },
  {
    "text": "Pluralsight courses but if you have any questions feel free to email me otherwise thank you for listening to me",
    "start": "3068810",
    "end": "3075320"
  },
  {
    "text": "on this topic and I hope you enjoy lunch and the rest of the conference",
    "start": "3075320",
    "end": "3080530"
  },
  {
    "text": "[Applause]",
    "start": "3080530",
    "end": "3085539"
  }
]