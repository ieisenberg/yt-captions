[
  {
    "text": "okay finally I can start seems like forever hi everyone thank you for coming",
    "start": "6270",
    "end": "12460"
  },
  {
    "text": "along this is the Friday 3:00 p.m. version of trying to keep you awake starring cosmos TV I'll do my best to do",
    "start": "12460",
    "end": "18640"
  },
  {
    "text": "that I keep you entertained along the way I know it's sort of getting long in the tooth it's been a big few days so",
    "start": "18640",
    "end": "25750"
  },
  {
    "text": "hopefully you're not only able to be entertaining maybe a little informative as well so",
    "start": "25750",
    "end": "31480"
  },
  {
    "text": "what I'm hoping you'll get out of this is initially there's going to be a bit of a story and explanation around some of the key concepts of cosmos TB that's",
    "start": "31480",
    "end": "39129"
  },
  {
    "text": "kind of going to be a bit of a a knowledge leveling if you will just to make sure we're all on the same page and",
    "start": "39129",
    "end": "44589"
  },
  {
    "text": "we understand some of the core concepts and then probably the first half the second half will go into some important",
    "start": "44589",
    "end": "51280"
  },
  {
    "text": "design considerations on cosmos TB itself but also onto the on the client",
    "start": "51280",
    "end": "56800"
  },
  {
    "text": "side as well which is it's just as important and this is all based on real world stuff that I've done in production",
    "start": "56800",
    "end": "62140"
  },
  {
    "text": "and before production I'm sorry experienced all these pain points there will additionally be a swear word in",
    "start": "62140",
    "end": "67960"
  },
  {
    "text": "this so where you may want to cover your ears but you won't see coming well cover your eyes there's only ones where it's",
    "start": "67960",
    "end": "74409"
  },
  {
    "text": "any smaller my name is Paul garbage I'm currently a principal consultant at",
    "start": "74409",
    "end": "79869"
  },
  {
    "text": "Bergdorf I've been there for about two and a half years now I've also the few books on this group called nice being",
    "start": "79869",
    "end": "86619"
  },
  {
    "text": "side a group which is fairly close to the asp.net team if you count New",
    "start": "86619",
    "end": "92320"
  },
  {
    "text": "Zealand I've been international speaker I'm going to count it because it sounds",
    "start": "92320",
    "end": "97899"
  },
  {
    "text": "better and mostly in declared solution architecture as of late but just to set",
    "start": "97899",
    "end": "106659"
  },
  {
    "text": "the context we talked a little bit about before Claire not so much before Claire it couldn't be now as well traditionally",
    "start": "106659",
    "end": "113320"
  },
  {
    "text": "when dealing with big data stores and you know high availability data stores big performance when talking about big",
    "start": "113320",
    "end": "119049"
  },
  {
    "text": "memory lots of CPU lots of disk we had to manage and set up all that ourselves",
    "start": "119049",
    "end": "124450"
  },
  {
    "text": "there was lots of backups we had to worry about where do we put the backups how often do we do them long shipping and transaction replication we often had",
    "start": "124450",
    "end": "131140"
  },
  {
    "text": "to set that up make sure there was enough network bandwidth there between those locations and set up those",
    "start": "131140",
    "end": "136840"
  },
  {
    "text": "locations perhaps in different parts of the there was lots of things we had to manage particularly insofar as clusters",
    "start": "136840",
    "end": "143469"
  },
  {
    "text": "in multiple clusters G redundant clusters it was a lot of work for usually a series of full-time employees",
    "start": "143469",
    "end": "150370"
  },
  {
    "text": "so that was just a dedicated job to do that and there's a huge upkeep in that",
    "start": "150370",
    "end": "155970"
  },
  {
    "text": "fast-forward to the cloud and what a lot of the cloud providers would like to do is kind of abstract all that hard work",
    "start": "155970",
    "end": "162670"
  },
  {
    "text": "involved with getting all that geo redundancy the backups the transaction replication and just allow you to work",
    "start": "162670",
    "end": "168969"
  },
  {
    "text": "with the data store mechanism so that you only have to worry about the data operations and all that really complex",
    "start": "168969",
    "end": "174819"
  },
  {
    "text": "hard stuff is taken away for you obviously at a cost though but like with",
    "start": "174819",
    "end": "180310"
  },
  {
    "text": "anything it's it's sold as a bit of magic but it does come at the cost you",
    "start": "180310",
    "end": "185560"
  },
  {
    "text": "need to take into a few take into account a few design considerations so",
    "start": "185560",
    "end": "190629"
  },
  {
    "text": "that you get the most out of it otherwise it's just going to seem like it's not working for you and that's what",
    "start": "190629",
    "end": "195669"
  },
  {
    "text": "we're going to talk about here specifically with cosmos DB but as to its history initially started out in",
    "start": "195669",
    "end": "201760"
  },
  {
    "text": "around 2010 it was an internally developed system by Microsoft to do just that in that gives their developers the",
    "start": "201760",
    "end": "208000"
  },
  {
    "text": "power to just worry about data operations and not have to worry about the service underneath in around 2014 it",
    "start": "208000",
    "end": "215290"
  },
  {
    "text": "was brought to the public as something called document DB and it's primarily just adjacent no sequel store if you",
    "start": "215290",
    "end": "222430"
  },
  {
    "text": "will and then not long after that it was rebranded as cosmos DB with a whole bunch of extra features and vision",
    "start": "222430",
    "end": "228040"
  },
  {
    "text": "around it it is cloud native in that it doesn't care about being on premises",
    "start": "228040",
    "end": "233949"
  },
  {
    "text": "ever it's just designed with the cloud in mind and so it can reduce the amount of constraints and only worry about a",
    "start": "233949",
    "end": "239889"
  },
  {
    "text": "specific use case C and so far as it's only going to be developed for the cloud does it have to worry about its on-premises rubbish at another big",
    "start": "239889",
    "end": "248620"
  },
  {
    "text": "caveat before we get too far into it it can be expensive depending on how it's set up and how much throughput you need",
    "start": "248620",
    "end": "255090"
  },
  {
    "text": "and I guess if again if you're not taking into account some of the considerations with cosmos you just kind",
    "start": "255090",
    "end": "261669"
  },
  {
    "text": "of want to dial it up expecting huge amounts of performance maybe you'll get it but it'll generally come at a bit of",
    "start": "261669",
    "end": "266710"
  },
  {
    "text": "a cost so it's something to be aware of it's probably one of the main downsides to it currently",
    "start": "266710",
    "end": "273160"
  },
  {
    "text": "however don't take my word for what cosmos is this is actually an excerpt",
    "start": "273160",
    "end": "280640"
  },
  {
    "text": "from Microsoft site and it's a bad traditionally bad presenter etiquette to",
    "start": "280640",
    "end": "286340"
  },
  {
    "text": "actually read this hour but I'm going to do it anyway just for just for dramatic effect other cosmos DB was built from",
    "start": "286340",
    "end": "293090"
  },
  {
    "text": "the ground up with global distribution horizontal scale at its core it offers turnkey global distribution with multi",
    "start": "293090",
    "end": "298580"
  },
  {
    "text": "master support across any number of Asia regions by transparently scaling and replicating your data wherever your",
    "start": "298580",
    "end": "304100"
  },
  {
    "text": "users are elastically scale through throughput and storage worldwide and only pay for what you need",
    "start": "304100",
    "end": "309980"
  },
  {
    "text": "as your cosmos DB provides native support for no sequel choices offers multiple well-defined consistency models",
    "start": "309980",
    "end": "316210"
  },
  {
    "text": "guarantees single-digit millisecond latency at a 99th percentile and guarantees high availability with",
    "start": "316210",
    "end": "322370"
  },
  {
    "text": "multihoming capabilities and low latencies anywhere in the world all backed by industries are leading comprehensive service level agreements",
    "start": "322370",
    "end": "329000"
  },
  {
    "text": "just take them over to whisk that in and",
    "start": "329000",
    "end": "334430"
  },
  {
    "text": "let that sink it that that intellectual verbiage sink a bit so that should clearly explain it right and usually",
    "start": "334430",
    "end": "340970"
  },
  {
    "text": "when most sort of people in the IT industry I get told something like that you know again takes a little bit to",
    "start": "340970",
    "end": "346940"
  },
  {
    "text": "sink in and they usually come to roughly the same conclusion maybe there's this",
    "start": "346940",
    "end": "353750"
  },
  {
    "text": "where we're just a spoiler but it's not that it is all those things it's not the",
    "start": "353750",
    "end": "359210"
  },
  {
    "text": "most easy to digest explanation and underlying those things is a lot of key concepts first off when",
    "start": "359210",
    "end": "367700"
  },
  {
    "text": "you provision cosmos your provision of cosmos DB account you'll provision one or more databases within those databases",
    "start": "367700",
    "end": "374300"
  },
  {
    "text": "will be one or more collections and those collections will contain document roughly the same as kind of a collection",
    "start": "374300",
    "end": "380300"
  },
  {
    "text": "might be looked at as a sequel table and the documents in the obviously as records in a database something similar",
    "start": "380300",
    "end": "387110"
  },
  {
    "text": "to that one of the main concept is partitioning that's the key to how cosmos scales so you really need to",
    "start": "387110",
    "end": "393710"
  },
  {
    "text": "accept and understand it and kind of work with it with cosmos otherwise it's not going to work how you expect and",
    "start": "393710",
    "end": "400790"
  },
  {
    "text": "with a partition comes a partition key if your few a static partition key for example",
    "start": "400790",
    "end": "407270"
  },
  {
    "text": "cosmos is not really going to work that well for you you really need to embrace this concept of partitions cosmos will",
    "start": "407270",
    "end": "413540"
  },
  {
    "text": "scale out whereas something like sequel server just wants to scale up which is the big CPU more memory and how cosmos",
    "start": "413540",
    "end": "421640"
  },
  {
    "text": "works in terms of defining its throughput is this thing called request to units and if you're familiar if",
    "start": "421640",
    "end": "427130"
  },
  {
    "text": "you're familiar with as you see command its D to use it's roughly similar in that it's kind of an aggregate of CPU",
    "start": "427130",
    "end": "432860"
  },
  {
    "text": "memory IO throughput those kinds of things you provision how many are",
    "start": "432860",
    "end": "439940"
  },
  {
    "text": "requesting units you want request units per second start off a minimum of 400 you can go up to a million or millions",
    "start": "439940",
    "end": "446210"
  },
  {
    "text": "you can go quite high actually and in theory you can scale that out as much as you want up to a point at all costs and",
    "start": "446210",
    "end": "452570"
  },
  {
    "text": "I'll show you how much that may cost later on you can provision that per collection or across the entirety of",
    "start": "452570",
    "end": "458660"
  },
  {
    "text": "database you have database with multiple collection and you can provision your request units across those and share it",
    "start": "458660",
    "end": "464030"
  },
  {
    "text": "across these multiple collections there's actually a reserve model where you can say oh I want to buy ten",
    "start": "464030",
    "end": "470300"
  },
  {
    "text": "thousand I use for six months or a year and you'll get a reduced pricing from that if you purchase let's say ten",
    "start": "470300",
    "end": "478190"
  },
  {
    "text": "thousand are using you exceed that cosmos will refuse the request and you'll get this status code of four to",
    "start": "478190",
    "end": "483410"
  },
  {
    "text": "nine saying request rate throttled and you'll need to retry the request",
    "start": "483410",
    "end": "488560"
  },
  {
    "text": "now I've come up with the analogy of how to explain partitioning in particular as",
    "start": "490800",
    "end": "496639"
  },
  {
    "text": "as commuters going to or catching a train so if you think that the data",
    "start": "496639",
    "end": "502050"
  },
  {
    "text": "operations actually the commuters coming in to the train station the turnstiles there what is in effect the client proxy",
    "start": "502050",
    "end": "508560"
  },
  {
    "text": "so you use it safe it's equally going through a sequel client with cosmos you've got a document client and of",
    "start": "508560",
    "end": "515339"
  },
  {
    "text": "course the Train is the data store mechanism and for the traditional relational storage we know nothing",
    "start": "515339",
    "end": "521669"
  },
  {
    "text": "particularly spectacular although they animation itself is spectacular took me ages to do and if you have a lot of data",
    "start": "521669",
    "end": "529589"
  },
  {
    "text": "with a traditional relational store you'll just get a bigger server to cope",
    "start": "529589",
    "end": "535260"
  },
  {
    "text": "with the extra load it's pretty simple stuff with cosmos it's a little bit",
    "start": "535260",
    "end": "542640"
  },
  {
    "text": "different so we've got some data coming in and cosmos itself just farms it out",
    "start": "542640",
    "end": "548670"
  },
  {
    "text": "to different partitions ideally we'll look at that more in a bit more detail later on so as the data is coming in",
    "start": "548670",
    "end": "554730"
  },
  {
    "text": "it's just farming it out and spreading in the load across different partitions now if you've got a lot of data",
    "start": "554730",
    "end": "560360"
  },
  {
    "text": "typically with cosmos again it'll farm it out to different partitions but it wants it in a parallelized format so if",
    "start": "560360",
    "end": "567270"
  },
  {
    "text": "you can paralyze your data as much as possible it'll do with that even better you'll get really high throughput as",
    "start": "567270",
    "end": "573380"
  },
  {
    "text": "evidenced by again these spectacular animation that's the pinnacle of my career actually I could just hop off the",
    "start": "573380",
    "end": "578610"
  },
  {
    "text": "face of the earth now and as long as I've given that animation to you guys I'm all good to go",
    "start": "578610",
    "end": "583730"
  },
  {
    "text": "however replication cosmos offers we",
    "start": "583730",
    "end": "589290"
  },
  {
    "text": "talked about s delays and geographic redundancy and replication previously in that that verbiage from Microsoft but it",
    "start": "589290",
    "end": "596640"
  },
  {
    "text": "does offer really really good replication capability so you can elect to replicate your data in unlimited read",
    "start": "596640",
    "end": "603510"
  },
  {
    "text": "replicas around the world so you've got a somewhere where you might write be",
    "start": "603510",
    "end": "608610"
  },
  {
    "text": "writing data to so that's called your right master and you can elect to replicate anywhere across the room or across the world and we'll do that a bit",
    "start": "608610",
    "end": "615480"
  },
  {
    "text": "later on it's really really simple what's coming up recently though and sorry with the read replicas when",
    "start": "615480",
    "end": "621000"
  },
  {
    "text": "there's a failover in your right master you can elect I have a prior the order about where your next right",
    "start": "621000",
    "end": "626490"
  },
  {
    "text": "master becomes available out of your read replicas obviously the more you replicate there's the more hardware and",
    "start": "626490",
    "end": "633360"
  },
  {
    "text": "and resources are being used so you gonna pay for that but the ability to do so extremely easily and remember back",
    "start": "633360",
    "end": "640170"
  },
  {
    "text": "there's no need any full-time staff to manage your clusters for you it's just the magic happens and what's comin",
    "start": "640170",
    "end": "647879"
  },
  {
    "text": "recently but it's not quite a globally available at the moment you have to sort of opt in right now is this multi master",
    "start": "647879",
    "end": "653839"
  },
  {
    "text": "so you can have multiple locations in the world where you're writing data to and that data gets replicated to all",
    "start": "653839",
    "end": "660959"
  },
  {
    "text": "your other read replicas and your write masters everywhere across the world that you've got to find and then that just",
    "start": "660959",
    "end": "666600"
  },
  {
    "text": "happens magically that stuff's really powerful it's really easy to do from a consumer perspective and again all that",
    "start": "666600",
    "end": "673139"
  },
  {
    "text": "magic is taken care of in the background for you it has these five consistency",
    "start": "673139",
    "end": "680759"
  },
  {
    "text": "models by default its session and you can choose which one you want it all has",
    "start": "680759",
    "end": "685949"
  },
  {
    "text": "some performance and cost impact eventual consistency is a fairly obvious one you're right eventually the other",
    "start": "685949",
    "end": "691559"
  },
  {
    "text": "read replicas become consistent going all the way to strong you right and then",
    "start": "691559",
    "end": "696839"
  },
  {
    "text": "everywhere becomes consistent but you've got a sort of wait for those to become consistent based on this quorum and",
    "start": "696839",
    "end": "703199"
  },
  {
    "text": "again that usually takes a bit more effort so you get charged a bit more by default it defaults to session",
    "start": "703199",
    "end": "708509"
  },
  {
    "text": "which means in your session your data becomes consistent so you make a right",
    "start": "708509",
    "end": "714449"
  },
  {
    "text": "and you can read that data straight away within the scope of that session if you break that session you throw the client",
    "start": "714449",
    "end": "719639"
  },
  {
    "text": "away for example there's no guarantees are in there the other two consistent prefix and bounded staleness sort of",
    "start": "719639",
    "end": "726119"
  },
  {
    "text": "lean towards strong and eventual respectively but but there's a defined lag time that you can you can define and",
    "start": "726119",
    "end": "732779"
  },
  {
    "text": "again this it's kind of the an in-between between strong position eventual which is a the more prominent",
    "start": "732779",
    "end": "739079"
  },
  {
    "text": "ones it's actually one of the few databases that offers those degrees of consistency that you can select from and",
    "start": "739079",
    "end": "747509"
  },
  {
    "text": "additionally actually you can you can change it as you go for the most part so you can choose eventual and then later on think now okay session or I'll go",
    "start": "747509",
    "end": "753720"
  },
  {
    "text": "bounded staleness or whatever the other really cool thing about it is",
    "start": "753720",
    "end": "758820"
  },
  {
    "text": "the ability to support multiple api's it has a sickle API and when I say",
    "start": "758820",
    "end": "764070"
  },
  {
    "text": "sequel it's a sequel like API it's not actually sequel or TC it just looks like it",
    "start": "764070",
    "end": "769290"
  },
  {
    "text": "it's like gremlin for graph D B's table Cassandra and MongoDB",
    "start": "769290",
    "end": "774540"
  },
  {
    "text": "if core there's a few others that are coming as well but it has a really flexible way to plot api's on top of it",
    "start": "774540",
    "end": "782150"
  },
  {
    "text": "once you generally want to choose an API you can't go to you can't go to a different API so if you're writing",
    "start": "782150",
    "end": "788550"
  },
  {
    "text": "for example but I think stores in be silent format you can't sort of switch",
    "start": "788550",
    "end": "793710"
  },
  {
    "text": "over to sequel and graph there is a bit of an exception in that if you choose graph DB you can actually use a sequel",
    "start": "793710",
    "end": "801030"
  },
  {
    "text": "client against it because the similarity of the data is really close but that's it the only exception currently it's",
    "start": "801030",
    "end": "806940"
  },
  {
    "text": "basically wire level API supports and when it goes under the covers and sequel things get changed around a little bit",
    "start": "806940",
    "end": "812730"
  },
  {
    "text": "they are internally translated to something called an item record sequence which is unfortunately abbreviated to us",
    "start": "812730",
    "end": "822680"
  },
  {
    "text": "an item being a primitive which is a single sorry string number and bullying",
    "start": "823010",
    "end": "828680"
  },
  {
    "text": "record being sort of like a struct in a sequence being an array of atoms or records it's just a bit more detail",
    "start": "828680",
    "end": "838410"
  },
  {
    "text": "around that so again you've got your API coming in again they're just wire",
    "start": "838410",
    "end": "845550"
  },
  {
    "text": "protocols it has these extensible module system which in effect takes in that that wire level API request efficiently",
    "start": "845550",
    "end": "854130"
  },
  {
    "text": "translates that into this atom record sequence but it's only an internal type system now they get me to realizes a",
    "start": "854130",
    "end": "861000"
  },
  {
    "text": "certain type of tree but it's specific to the API itself and then persisted and then that gets reversed on on the way up",
    "start": "861000",
    "end": "867150"
  },
  {
    "text": "so the actual persistence is a little bit different for each API again borrowing the graph DB and sequel so",
    "start": "867150",
    "end": "873360"
  },
  {
    "text": "that's why you sort of can't chop and change at the moment",
    "start": "873360",
    "end": "877160"
  },
  {
    "text": "it'll be the demo okay so what I've got",
    "start": "878870",
    "end": "887550"
  },
  {
    "text": "here I've got two databases that we're gonna jump into not the graph one first jump into sequel so I'm in the edge of",
    "start": "887550",
    "end": "896399"
  },
  {
    "text": "portal at the moment I've got okay yeah",
    "start": "896399",
    "end": "901430"
  },
  {
    "text": "all the way at the back yeah all right good stuff so I've got two collections",
    "start": "901430",
    "end": "907740"
  },
  {
    "text": "here my cosmos DB account is coming club demo sequel I've got two collections are small and",
    "start": "907740",
    "end": "913259"
  },
  {
    "text": "large one is provisioned with four hundred request units per second and this one is ten thousand so what I'm",
    "start": "913259",
    "end": "922050"
  },
  {
    "text": "going to do first though is I'm going to do a manual failover failover between",
    "start": "922050",
    "end": "928620"
  },
  {
    "text": "regions soon because it takes a bit of time then I'm going to go into a little bit of other operations while that's happening so what I'll actually do at the moment",
    "start": "928620",
    "end": "939269"
  },
  {
    "text": "I've got my assuming I've got my cosmos",
    "start": "939269",
    "end": "945089"
  },
  {
    "text": "DB locating this trailer east and I've also got it replicated here in Australia south east undo just quickly I'll jump",
    "start": "945089",
    "end": "956939"
  },
  {
    "text": "into this little client that I'm going to run and not don't worry too much about what it's doing at the moment",
    "start": "956939",
    "end": "962279"
  },
  {
    "text": "apart from it's doing a select font sorry font size too small all right hang",
    "start": "962279",
    "end": "970800"
  },
  {
    "text": "on a second",
    "start": "970800",
    "end": "973610"
  },
  {
    "text": "how's that yeah yeah cool so all it's doing is running a query",
    "start": "978170",
    "end": "987370"
  },
  {
    "text": "doing a select query there it's going to loop through some results and it's",
    "start": "987370",
    "end": "993560"
  },
  {
    "text": "actually just going to do a spin up to say that it's still working and it's doing a Walter so it's just a forever",
    "start": "993560",
    "end": "998720"
  },
  {
    "text": "query we're not gonna worry too much about the details at the moment pop from the fact that it is running a query I'm",
    "start": "998720",
    "end": "1004930"
  },
  {
    "text": "gonna start that running and it's zipping through and there's no try-catch around this if it falls over it's just",
    "start": "1004930",
    "end": "1010630"
  },
  {
    "text": "gonna crash and burn so I'm gonna go here and I'm gonna say alright I want to",
    "start": "1010630",
    "end": "1015700"
  },
  {
    "text": "do a manual failover and my current write region is Estrella southeast my",
    "start": "1015700",
    "end": "1021010"
  },
  {
    "text": "read region is Australia East John so I select that I understand and agree to trigger a failover on my current write",
    "start": "1021010",
    "end": "1027850"
  },
  {
    "text": "region so there we go that's cool so it's now doing a failover if",
    "start": "1027850",
    "end": "1034360"
  },
  {
    "text": "something bad happens while this is doing a query this guy's going to show a whole bunch of blood when it throws an",
    "start": "1034360",
    "end": "1039430"
  },
  {
    "text": "exception if everything is going well we won't see anything now let's close it",
    "start": "1039430",
    "end": "1047020"
  },
  {
    "text": "down it'll get back into there have a look at the data explorer here you can",
    "start": "1047020",
    "end": "1053380"
  },
  {
    "text": "see my small and large collection okay under documents yeah it's gonna be B we",
    "start": "1053380",
    "end": "1061320"
  },
  {
    "text": "select the document there I'll zoom in a bit",
    "start": "1061320",
    "end": "1066179"
  },
  {
    "text": "sorry baby with anyone sick",
    "start": "1075240",
    "end": "1079260"
  },
  {
    "text": "now you can see I've got a alright so",
    "start": "1085650",
    "end": "1094230"
  },
  {
    "text": "you've got a standard JSON document there it's got an ID and app ID it's got",
    "start": "1094230",
    "end": "1099570"
  },
  {
    "text": "a partition key here we'll go into more detail about the semantics of that later that's just a grid right now I've got an",
    "start": "1099570",
    "end": "1106860"
  },
  {
    "text": "array of owned items there's an address which is a structure inside of it standard JSON document nothing too",
    "start": "1106860",
    "end": "1112650"
  },
  {
    "text": "special there so I'm just going to show you some of the queries here that you",
    "start": "1112650",
    "end": "1118200"
  },
  {
    "text": "can do so right now I'm just going to do a select star from C obviously using the",
    "start": "1118200",
    "end": "1124800"
  },
  {
    "text": "sequel API comes back with some JSON stuff I can say where C app ID equals",
    "start": "1124800",
    "end": "1140390"
  },
  {
    "text": "doing execute query bring me brings me back 13",
    "start": "1140390",
    "end": "1146360"
  },
  {
    "text": "what I'm also going to do here if we go down you see I've got these owned items which is an array of when I was at three",
    "start": "1146360",
    "end": "1153360"
  },
  {
    "text": "or four items I can do a join say",
    "start": "1153360",
    "end": "1158730"
  },
  {
    "text": "joining ONC and items I'll go up here",
    "start": "1158730",
    "end": "1166320"
  },
  {
    "text": "and I'll say see that ID oh what's the",
    "start": "1166320",
    "end": "1172170"
  },
  {
    "text": "fields that I've got item just scripts my category",
    "start": "1172170",
    "end": "1179630"
  },
  {
    "text": "[Music]",
    "start": "1183600",
    "end": "1186700"
  },
  {
    "text": "ah okay so I'm actually gonna join",
    "start": "1189990",
    "end": "1198380"
  },
  {
    "text": "inside the document so it's returning actually the same app ID so it's 13 13",
    "start": "1198380",
    "end": "1204000"
  },
  {
    "text": "13 but I'm getting a different category based on what the internal array within that single record was I'm doing a join",
    "start": "1204000",
    "end": "1211440"
  },
  {
    "text": "sort of but it's not really across records it's just within that same record if that makes sense so it's",
    "start": "1211440",
    "end": "1218220"
  },
  {
    "text": "sequel like it's not quite sequel I additionally if we have a look here at",
    "start": "1218220",
    "end": "1224940"
  },
  {
    "text": "query stats on that particular statement you can see that if that took three",
    "start": "1224940",
    "end": "1230010"
  },
  {
    "text": "point four seven request units per second so you can play around with a very small collection for example and",
    "start": "1230010",
    "end": "1237240"
  },
  {
    "text": "get a feel for the cost of your queries that way just checking on my query it's",
    "start": "1237240",
    "end": "1244980"
  },
  {
    "text": "still going in the background that's pretty cool my manual failover has happened okay so nothing nothing really",
    "start": "1244980",
    "end": "1253050"
  },
  {
    "text": "exciting is happened which is kind of a good thing in that for a failover it wants to be pretty boring right you",
    "start": "1253050",
    "end": "1258960"
  },
  {
    "text": "don't want any burning houses and screaming children it just wants to sort of happen in the background and now if I",
    "start": "1258960",
    "end": "1266580"
  },
  {
    "text": "look at my replicate data globally you can see my write region is now Australia East and my read region is Australia",
    "start": "1266580",
    "end": "1273120"
  },
  {
    "text": "South East but I'm gonna have to make",
    "start": "1273120",
    "end": "1278520"
  },
  {
    "text": "that smaller zoom in so what about if I",
    "start": "1278520",
    "end": "1284160"
  },
  {
    "text": "want to add a region so I want to replicate - I don't know Canada Central",
    "start": "1284160",
    "end": "1289440"
  },
  {
    "text": "yeah hmm where else can I go - what the",
    "start": "1289440",
    "end": "1297030"
  },
  {
    "text": "hill Japan East buglet I'll do one more to go off to",
    "start": "1297030",
    "end": "1305000"
  },
  {
    "text": "France central ok sounds good",
    "start": "1305000",
    "end": "1310970"
  },
  {
    "text": "you can see maybe you can't you can see it's starting to light up these areas",
    "start": "1310970",
    "end": "1316800"
  },
  {
    "text": "here on the map for me I hit save and now that's going to go and create a",
    "start": "1316800",
    "end": "1324049"
  },
  {
    "text": "whole bunch of reed replicas all around the world for me I think that stuff's pretty awesome and that'll take a little",
    "start": "1324049",
    "end": "1330559"
  },
  {
    "text": "bit of time to do but if we go back to that you know manually maintaining your",
    "start": "1330559",
    "end": "1335809"
  },
  {
    "text": "own clusters if you had to actually if you were asked to try and set this up within your company without doing this",
    "start": "1335809",
    "end": "1341809"
  },
  {
    "text": "it would be pretty damn hard but this stuff is really powerful okay going away",
    "start": "1341809",
    "end": "1349040"
  },
  {
    "text": "from me are what I have to show you as well going down here to metrics so you",
    "start": "1349040",
    "end": "1361580"
  },
  {
    "text": "can see here it's showing me that you know I've got my nice little circle in Australia which is where my main regions",
    "start": "1361580",
    "end": "1367370"
  },
  {
    "text": "where it's starting to replicate over here that's all good but that's not particularly exciting when I go to show",
    "start": "1367370",
    "end": "1372380"
  },
  {
    "text": "you the throughput tab and I'm gonna select my gloved inner circle and my",
    "start": "1372380",
    "end": "1379910"
  },
  {
    "text": "collection which is large collection and quickly here you can see that my",
    "start": "1379910",
    "end": "1385669"
  },
  {
    "text": "collection large collection has five partition key ranges provision throughput is evenly distributed across",
    "start": "1385669",
    "end": "1391580"
  },
  {
    "text": "these partitions which is 2,000 IU's per second so while I have a collective",
    "start": "1391580",
    "end": "1396860"
  },
  {
    "text": "request unit per second of ten thousand per partition I've got five of them I've got a limit of two thousand so if my",
    "start": "1396860",
    "end": "1403790"
  },
  {
    "text": "partition key is rubbish and it all goes to one partition even though I've got ten thousand I use per second I've",
    "start": "1403790",
    "end": "1409100"
  },
  {
    "text": "really got a cap limit of two thousand because it's based on a partition does that make sense if it's click on twenty",
    "start": "1409100",
    "end": "1418580"
  },
  {
    "text": "four hours here so this morning I provision some data and I go back to",
    "start": "1418580",
    "end": "1423710"
  },
  {
    "text": "it's expensive to provisioned Cosmos at a high rate so I've been building and",
    "start": "1423710",
    "end": "1428990"
  },
  {
    "text": "tearing down my collections I did that this morning you can see there's been some activity it was roughly around 20 past 8:00 and during that time I've",
    "start": "1428990",
    "end": "1436700"
  },
  {
    "text": "actually exceeded the throughput on one of my partitions well actually it's",
    "start": "1436700",
    "end": "1443570"
  },
  {
    "text": "already brought up for me which is nice and handy here on the maximum consumed",
    "start": "1443570",
    "end": "1449840"
  },
  {
    "text": "our use per second you can see I've got it's listing up my partitions for me",
    "start": "1449840",
    "end": "1454910"
  },
  {
    "text": "partition three not too bad partition for goods stolen under the limit these",
    "start": "1454910",
    "end": "1459950"
  },
  {
    "text": "guys are just sort of getting pretty close to the limit however that guy's exceeded the limit and let me just zoom",
    "start": "1459950",
    "end": "1465140"
  },
  {
    "text": "in there so that's gone above the 2k limit so I would have had requests",
    "start": "1465140",
    "end": "1470240"
  },
  {
    "text": "refused at that point and the reason is because that partition key I deliberately put in as a static",
    "start": "1470240",
    "end": "1476750"
  },
  {
    "text": "partition key one two three four five so anytime that records and I've got about twenty thousand records in there anytime",
    "start": "1476750",
    "end": "1483350"
  },
  {
    "text": "that records were read or written using that partition Kate all going to the same partition and if I did it too much",
    "start": "1483350",
    "end": "1489170"
  },
  {
    "text": "which I did purposely it's exceeded the the request units per second for that",
    "start": "1489170",
    "end": "1494810"
  },
  {
    "text": "partition so it's an important concept if we go back to the whole partitioning is key is cosmos if you don't think",
    "start": "1494810",
    "end": "1500150"
  },
  {
    "text": "about your partitioning and partition keys you can you can pay for a lot more through pull off what you think of",
    "start": "1500150",
    "end": "1506150"
  },
  {
    "text": "getting throughput and it's actually not not working very well for you but I'll",
    "start": "1506150",
    "end": "1511280"
  },
  {
    "text": "also going just very quickly if I go to",
    "start": "1511280",
    "end": "1516950"
  },
  {
    "text": "my graph database you get a small collection there I'll execute the",
    "start": "1516950",
    "end": "1525320"
  },
  {
    "text": "gremlin query and I'm no graph DB expert mind you so I'm not very good at queries and I'll zoom in there you can see just",
    "start": "1525320",
    "end": "1532220"
  },
  {
    "text": "playing this graph for me if I click on here you can see the data change on the",
    "start": "1532220",
    "end": "1537980"
  },
  {
    "text": "right over here click on Mary a bit of a different funky looking graph that kind of thing so I come up the top here I can",
    "start": "1537980",
    "end": "1546200"
  },
  {
    "text": "actually say I want to do a sequel query as well select star from C execute that",
    "start": "1546200",
    "end": "1551590"
  },
  {
    "text": "and I'm going to make some regular jason that's just a highlight the fact you can",
    "start": "1551590",
    "end": "1557480"
  },
  {
    "text": "actually use sequel all the gremlin syntax with the graph DB",
    "start": "1557480",
    "end": "1563830"
  },
  {
    "text": "now my crew still running in background which is a great thing okay",
    "start": "1569460",
    "end": "1576840"
  },
  {
    "text": "so local deaf experience mentioned about cost previously you can",
    "start": "1579700",
    "end": "1585409"
  },
  {
    "text": "provision up a 400 our you per second collection for cosmos which is relatively cheap oh actually sorry let",
    "start": "1585409",
    "end": "1592129"
  },
  {
    "text": "me bounce back very quickly sorry for being so bouncy it is Friday why go into scale I mean",
    "start": "1592129",
    "end": "1601940"
  },
  {
    "text": "its scale and settings here I can change my throughput at any time as I've mentioned before 400 request units per",
    "start": "1601940",
    "end": "1607099"
  },
  {
    "text": "second cost me 77 cents daily my largest collection that I have is 10,000 which",
    "start": "1607099",
    "end": "1614599"
  },
  {
    "text": "is actually costing me $20 per day going up to at another zero and it's 192",
    "start": "1614599",
    "end": "1621499"
  },
  {
    "text": "dollars today and it's saying you're about to request an increase in throughput beyond the pre-allocated capacity and you can keep going up and",
    "start": "1621499",
    "end": "1627889"
  },
  {
    "text": "you know the cost goes up so you can get a good idea of how much you want but you",
    "start": "1627889",
    "end": "1634489"
  },
  {
    "text": "generally don't want to just provision something hide so yeah let's see how it goes you want to take it sort of start",
    "start": "1634489",
    "end": "1640279"
  },
  {
    "text": "off small and get larger but 400 is the minimum it's pretty cheap like I said",
    "start": "1640279",
    "end": "1647179"
  },
  {
    "text": "any sevens 77 cents per day but it's still a cost so you get around that",
    "start": "1647179",
    "end": "1653899"
  },
  {
    "text": "there is a there is a local emulator that you can install there's a darker",
    "start": "1653899",
    "end": "1659690"
  },
  {
    "text": "version of where you can just do a local install it only operates on a single partition that and supports sequel and",
    "start": "1659690",
    "end": "1665570"
  },
  {
    "text": "MongoDB api's it doesn't have any consistency level simulation or anything but it's enough to create collections to",
    "start": "1665570",
    "end": "1671659"
  },
  {
    "text": "sequel queries on the air and start testing out your application locally potentially even do some integration",
    "start": "1671659",
    "end": "1677059"
  },
  {
    "text": "tests against but it works really really well and it cost you nothing so that's kind",
    "start": "1677059",
    "end": "1687200"
  },
  {
    "text": "of the base level where we talked about partitioning and api's and consistency levels you can do sequel query it's not",
    "start": "1687200",
    "end": "1694039"
  },
  {
    "text": "going to go into too much detail about all that because that stuff's pretty easy to find out for yourself we are",
    "start": "1694039",
    "end": "1700519"
  },
  {
    "text": "going to talk about some of the let's say interesting things that I came across as we were developing which I",
    "start": "1700519",
    "end": "1706999"
  },
  {
    "text": "will share with you and hopefully save you some pain money or endure both",
    "start": "1706999",
    "end": "1713080"
  },
  {
    "text": "so I don't know if you remember when I went into the azure portal there we had",
    "start": "1713350",
    "end": "1718640"
  },
  {
    "text": "a look at some of the records I was selecting stag where CA PI D equals one two three and it all worked fine cosmos",
    "start": "1718640",
    "end": "1725690"
  },
  {
    "text": "DB expects an ID field in this and when you clean your document you always get an idea get a few other fields as well",
    "start": "1725690",
    "end": "1731480"
  },
  {
    "text": "which we'll look at soon but coming from a sequel background you might think I'll",
    "start": "1731480",
    "end": "1737960"
  },
  {
    "text": "select star from ID or where to ID equals one two three and so it's good",
    "start": "1737960",
    "end": "1743000"
  },
  {
    "text": "that should be like a primary key almost is very very efficient the complete opposite is actually true while it will",
    "start": "1743000",
    "end": "1749870"
  },
  {
    "text": "work selecting by our ID cost significantly more and I'll show you that in a second in fact I'll show you",
    "start": "1749870",
    "end": "1756440"
  },
  {
    "text": "right now there's a rather bizarre reason for that so let's go to my sequel",
    "start": "1756440",
    "end": "1767080"
  },
  {
    "text": "I'll go to my large collection I will make it a bit bigger just getting you",
    "start": "1769540",
    "end": "1778640"
  },
  {
    "text": "soup actually I'll click on this document first and you can see in my documents I've deliberately got app ID",
    "start": "1778640",
    "end": "1784070"
  },
  {
    "text": "and ID I've created app ID as part of my data creation I've deliberately made F ID and ID exactly the same values for",
    "start": "1784070",
    "end": "1790490"
  },
  {
    "text": "all my records so I'll say new sequel query slick start from C where C app ID",
    "start": "1790490",
    "end": "1798760"
  },
  {
    "text": "equals a 1 2 3 let's say you keep that we'll get some data back the query stats",
    "start": "1798760",
    "end": "1806710"
  },
  {
    "text": "says over here 3 requests units per second I'll change that to be ID exactly",
    "start": "1806710",
    "end": "1813320"
  },
  {
    "text": "the same belly your results actually keep query I get the record back",
    "start": "1813320",
    "end": "1819830"
  },
  {
    "text": "everything seems to look great except it's now 177 request units per second",
    "start": "1819830",
    "end": "1826640"
  },
  {
    "text": "and that'll get more and more the more data that I put in there and I vote like I've only got about 10,000 at the moment",
    "start": "1826640",
    "end": "1833320"
  },
  {
    "text": "but it's an easy mistake to make I'll talk about why in a second they're coming from sequel background you think",
    "start": "1833320",
    "end": "1838940"
  },
  {
    "text": "I've got an idea I'm going to select buy up and set it up in my application good to go if you do that you're going to be",
    "start": "1838940",
    "end": "1844400"
  },
  {
    "text": "consuming large amounts of request units per second beyond what you'd initially thought and the reason for that it's",
    "start": "1844400",
    "end": "1859010"
  },
  {
    "text": "actually by design so they when I say they the cosmos DBT yep and this we",
    "start": "1859010",
    "end": "1866899"
  },
  {
    "text": "thought that the ID would not be unique across partitions you'd have to combine it with the partition key and so you",
    "start": "1866899",
    "end": "1873769"
  },
  {
    "text": "could index everything by default gets indexed in cosmos to be the default indexes index everything except the ID",
    "start": "1873769",
    "end": "1881000"
  },
  {
    "text": "film they decided to exclude it for whatever reason it's not really well known but again their reasoning is that",
    "start": "1881000",
    "end": "1888230"
  },
  {
    "text": "the IDS might get not unique so you get charged extra for it that's how it just just how it is currently in this index",
    "start": "1888230",
    "end": "1894200"
  },
  {
    "text": "v1 there is an index v2 coming but it's not available yet you can ask Microsoft to opt into it and it takes care of this",
    "start": "1894200",
    "end": "1901460"
  },
  {
    "text": "particular problem and you also get extras on top of it like I think there's an int 64 optimization specifically to",
    "start": "1901460",
    "end": "1908750"
  },
  {
    "text": "optimize for date multiple group by clause there's not a whole bunch of other things however the practicality is that don't",
    "start": "1908750",
    "end": "1915860"
  },
  {
    "text": "don't rely on the ID field select by something else and it'll always be much more efficient than that stupid thing a",
    "start": "1915860",
    "end": "1921409"
  },
  {
    "text": "resulting that pretty much a full full skin the only I think the only exception",
    "start": "1921409",
    "end": "1926539"
  },
  {
    "text": "is if it is actually the partition key I think they do some special semantics around that but other than that it just",
    "start": "1926539",
    "end": "1932450"
  },
  {
    "text": "generally results in a full skin and a crapload of our use which you'll have to pay for portal metrics these guys have",
    "start": "1932450",
    "end": "1942769"
  },
  {
    "text": "changed a little bit over time when I was using it I actually let me step back a little when you're performing requests",
    "start": "1942769",
    "end": "1949669"
  },
  {
    "text": "against it like selecting stuff or data that goes against the data partitions which as you'd expect and these guys can",
    "start": "1949669",
    "end": "1958039"
  },
  {
    "text": "dynamically scale as required when you're requesting or creating a",
    "start": "1958039",
    "end": "1964299"
  },
  {
    "text": "collection programmatically you're requesting the name of an index or the list of collections that you've got it",
    "start": "1964299",
    "end": "1970490"
  },
  {
    "text": "all gets stored an axis from this master partition which gets provision for you",
    "start": "1970490",
    "end": "1976220"
  },
  {
    "text": "there's only one of them it isn't automatically scaled for you and until recently the master",
    "start": "1976220",
    "end": "1983240"
  },
  {
    "text": "partition and the metrics around it weren't surfaced in the azure portal and the reason that's important even though",
    "start": "1983240",
    "end": "1989299"
  },
  {
    "text": "it is surface now it's still not that obvious is in a lot of the examples there you'll see up the top and a lot of",
    "start": "1989299",
    "end": "1995809"
  },
  {
    "text": "the stuff that Microsoft provides it says alright let's do this create data basic not if not exists and then we'll",
    "start": "1995809",
    "end": "2002020"
  },
  {
    "text": "create document collection if not exists and then we'll create the actual document so those two statements above",
    "start": "2002020",
    "end": "2007780"
  },
  {
    "text": "will go and hit the master data partition well twice in this case before",
    "start": "2007780",
    "end": "2012789"
  },
  {
    "text": "doing one request against the data partitions which are far more scalable but effectively means you're hitting the",
    "start": "2012789",
    "end": "2019179"
  },
  {
    "text": "master partition the non-scalable part twice as much as you're hitting your data partitions and it will not blow up",
    "start": "2019179",
    "end": "2024880"
  },
  {
    "text": "it'll start to get four to nine and request break throttled those kinds of things if you use these particular",
    "start": "2024880",
    "end": "2030880"
  },
  {
    "text": "examples what you typically want to do is only do that when your application",
    "start": "2030880",
    "end": "2035890"
  },
  {
    "text": "starts so create the the database and the collection and then only do data",
    "start": "2035890",
    "end": "2042039"
  },
  {
    "text": "operations there after it's just so prevalent a lot of the documentation that's easy to do you're um you know as",
    "start": "2042039",
    "end": "2047650"
  },
  {
    "text": "all coding geniuses do is a copy pasted into the code and run and you're all good to go and like I said it didn't",
    "start": "2047650",
    "end": "2053740"
  },
  {
    "text": "actually what I should do is go back into the portal this actually wasn't surfaced previously so if you did use",
    "start": "2053740",
    "end": "2059200"
  },
  {
    "text": "that kind of code you would get for two nines but the",
    "start": "2059200",
    "end": "2064868"
  },
  {
    "text": "metrics in the portal wouldn't show anything so if I'm going up here we have",
    "start": "2064869",
    "end": "2070118"
  },
  {
    "text": "a look at the system tab over here this is where it's now surfaced right now you don't have there's no four two nines",
    "start": "2070119",
    "end": "2075550"
  },
  {
    "text": "nothing's been refused I've only had a few requests against the master data partition it's all good so they've",
    "start": "2075550",
    "end": "2080679"
  },
  {
    "text": "obviously decided to surface that however again that's not really documented very well so unless you know",
    "start": "2080679",
    "end": "2086980"
  },
  {
    "text": "to look in that system tab at the master partition you might not realize that",
    "start": "2086980",
    "end": "2092080"
  },
  {
    "text": "that's why you're getting throttled if you're using those particular code samples and I just saw a notification",
    "start": "2092080",
    "end": "2098440"
  },
  {
    "text": "that my ed remove regions has worked so I'm now replicated and multi multiple",
    "start": "2098440",
    "end": "2103990"
  },
  {
    "text": "regions across the world I think that's pretty cool",
    "start": "2103990",
    "end": "2108420"
  },
  {
    "text": "back here so that's the kind of the",
    "start": "2109640",
    "end": "2120390"
  },
  {
    "text": "server-side portion of I'm going to concentrate a little bit on the client now because that's just as important in",
    "start": "2120390",
    "end": "2125430"
  },
  {
    "text": "particular the document client which is generally the more popular one and it's",
    "start": "2125430",
    "end": "2135000"
  },
  {
    "text": "quite important to get the most out of Cosmos DBA I talked about parallelism before with I don't if you will call the",
    "start": "2135000",
    "end": "2140160"
  },
  {
    "text": "spectacular animation you probably but the document client used for cosmos is",
    "start": "2140160",
    "end": "2146400"
  },
  {
    "text": "it's quite heavy if anybody has ever used WCF and the client that came with",
    "start": "2146400",
    "end": "2153210"
  },
  {
    "text": "that but it was it was quite heavy as well in addition to having some weed I disposed semantics so we end it but it was quite heavy had to be very careful",
    "start": "2153210",
    "end": "2159570"
  },
  {
    "text": "how you used it it's the same with document client and the recommendation is you only keep you pretty much keep it",
    "start": "2159570",
    "end": "2165600"
  },
  {
    "text": "as a singleton if possible don't recreate things all the time don't recreate the client it is thread-safe",
    "start": "2165600",
    "end": "2172230"
  },
  {
    "text": "it's built to be thread safe but it implements by disposable so if you were to drill down and have a look at it",
    "start": "2172230",
    "end": "2178170"
  },
  {
    "text": "you think that implements are disposable I should do a using statement this time I access it and semantically you be",
    "start": "2178170",
    "end": "2184140"
  },
  {
    "text": "correct but you beginning really crap performance out of it and one of the reasons is use this open async that you",
    "start": "2184140",
    "end": "2190800"
  },
  {
    "text": "see there so what that does I jump into some code briefly let's go up here in my",
    "start": "2190800",
    "end": "2203130"
  },
  {
    "text": "particular instance here I'm creating a document client and I'm calling dr. open",
    "start": "2203130",
    "end": "2208350"
  },
  {
    "text": "a seed before I do anything what this does is it goes out and grabs an address routing table which it usually involves",
    "start": "2208350",
    "end": "2214560"
  },
  {
    "text": "up to eight requests and if you consistently recreate your client and",
    "start": "2214560",
    "end": "2219660"
  },
  {
    "text": "you haven't done this call before making a query it'll go and do this in the background for you so if you continually",
    "start": "2219660",
    "end": "2226650"
  },
  {
    "text": "recreate in your client it'll do open async and then the query and then you've actually you're getting you know eight",
    "start": "2226650",
    "end": "2231870"
  },
  {
    "text": "to nine requests potentially per one request and so you'll see your performance suck badly and it won't be",
    "start": "2231870",
    "end": "2237240"
  },
  {
    "text": "apparent why so make it as a singleton call open async and then start to do you",
    "start": "2237240",
    "end": "2243360"
  },
  {
    "text": "document operations and again that one's actually not there are documents out",
    "start": "2243360",
    "end": "2250140"
  },
  {
    "text": "there that suggest this is what you do it's not really obvious why and it's not I don't think it's communicated that",
    "start": "2250140",
    "end": "2255870"
  },
  {
    "text": "well as a connection mode this too",
    "start": "2255870",
    "end": "2261330"
  },
  {
    "text": "connection mode you can use gateway indirect and they offer different protocols again I'll jump into a bit of",
    "start": "2261330",
    "end": "2266880"
  },
  {
    "text": "code here by default if you don't do",
    "start": "2266880",
    "end": "2273390"
  },
  {
    "text": "anything it's hard to see it defaults to gateway and if you use gateway the only",
    "start": "2273390",
    "end": "2280980"
  },
  {
    "text": "protocol that it supports is HTTP it is actually the slowest way of doing things",
    "start": "2280980",
    "end": "2287550"
  },
  {
    "text": "but the reason it defaults that is it's the most firewall friendly so if you've got some port restrictions that will",
    "start": "2287550",
    "end": "2293850"
  },
  {
    "text": "usually work just fine because we'll just go through 443 however if you can",
    "start": "2293850",
    "end": "2299370"
  },
  {
    "text": "get away with it you use direct and TCP it opens up a bit of a port range if you're using an on-premises VM for",
    "start": "2299370",
    "end": "2306570"
  },
  {
    "text": "example you might have some security restrictions that might be problematic typically if you're using something like",
    "start": "2306570",
    "end": "2311700"
  },
  {
    "text": "an app service in Asia this works just fine and the performance increase is significant just from those two options",
    "start": "2311700",
    "end": "2317910"
  },
  {
    "text": "alone",
    "start": "2317910",
    "end": "2320150"
  },
  {
    "text": "I mentioned paralyzing your operations so whether this be a virtual machine or",
    "start": "2329650",
    "end": "2336510"
  },
  {
    "text": "it's a service initially if you're a virtual machine the more cause you have the better and utilizing something like",
    "start": "2336510",
    "end": "2342190"
  },
  {
    "text": "the task library to get as much parallel operations within that single machine",
    "start": "2342190",
    "end": "2347410"
  },
  {
    "text": "will yield significant benefits similarly with an app service you will",
    "start": "2347410",
    "end": "2352570"
  },
  {
    "text": "kind of want to scale out if you really want to take advantage of Cosmos viewing a bulk operation via an app service",
    "start": "2352570",
    "end": "2359020"
  },
  {
    "text": "would that be by Web job or something you'd be best to spend it out to let's say that the full twenty instances well",
    "start": "2359020",
    "end": "2364750"
  },
  {
    "text": "that operation runs and then perhaps shrink it down if you're using just like I think it's an s1 which is probably",
    "start": "2364750",
    "end": "2370660"
  },
  {
    "text": "just a single core and you're doing it using the task Y but you're not going to get too many benefits from it and you're going to see that your client is",
    "start": "2370660",
    "end": "2377530"
  },
  {
    "text": "constrained it's not cosmos that's not performance actually the client they can't parallelize enough and feed enough",
    "start": "2377530",
    "end": "2382960"
  },
  {
    "text": "data to cosmos so whichever way you can scale out and the more you can scale that the better and cosmos cosmos will",
    "start": "2382960",
    "end": "2389620"
  },
  {
    "text": "just chew that up provided you've allocated or the right requests units per second of course and there's usually",
    "start": "2389620",
    "end": "2396790"
  },
  {
    "text": "a bit of fine tuning that comes with that based on your workloads based on how much money you want to spend and and the use case this was probably in",
    "start": "2396790",
    "end": "2407350"
  },
  {
    "text": "retrospect fairly obvious but this one caught us a little off guard we were trying to prematurely optimize so this",
    "start": "2407350",
    "end": "2416610"
  },
  {
    "text": "request here or this bit of code you can see is just doing standard select where the app ID might contain the number one",
    "start": "2416610",
    "end": "2423220"
  },
  {
    "text": "and then you've got a loop they were saying if query has more results then execute an X which is going to get them",
    "start": "2423220",
    "end": "2429610"
  },
  {
    "text": "more results and add range and what we were doing previously is in the middle",
    "start": "2429610",
    "end": "2435910"
  },
  {
    "text": "of that route and by default sorry the page length of cosmos is default around 100 documents 100 records so previously",
    "start": "2435910",
    "end": "2443860"
  },
  {
    "text": "you in that loop they would say look if you get 0 records or if you get less than the current page amount which is",
    "start": "2443860",
    "end": "2449770"
  },
  {
    "text": "100 we think we're at the end of our result set and we're going to bugger off out of that loop which was incorrect",
    "start": "2449770",
    "end": "2455860"
  },
  {
    "text": "thinking primarily because of the partitioning and I'll highlight that right now",
    "start": "2455860",
    "end": "2462809"
  },
  {
    "text": "so what this guys doing nothing too spectacular it's just doing a very",
    "start": "2467990",
    "end": "2475950"
  },
  {
    "text": "simple query again where appid contains one and then we're looping through it",
    "start": "2475950",
    "end": "2483000"
  },
  {
    "text": "saying how many records we got in that result set and just looping through and two has more results is false so I'll",
    "start": "2483000",
    "end": "2490830"
  },
  {
    "text": "run that so what we see here so we're",
    "start": "2490830",
    "end": "2500460"
  },
  {
    "text": "looking at those results you can see we get one hundred hundred hundred and then suddenly there's eight and we've got 43 there any Phi sued back out you just run",
    "start": "2500460",
    "end": "2512580"
  },
  {
    "text": "that one more time and go back up you",
    "start": "2512580",
    "end": "2519420"
  },
  {
    "text": "can see there's a few deviations there we're in this case it was 11 records now",
    "start": "2519420",
    "end": "2528060"
  },
  {
    "text": "down here was 89 a 79 sorry so going",
    "start": "2528060",
    "end": "2535140"
  },
  {
    "text": "through that you know it's getting not the full page amount and making the assumption that if it didn't get that or",
    "start": "2535140",
    "end": "2540390"
  },
  {
    "text": "even if it gets zero sometimes you can actually get zero records through that loop don't exert that there's still more data to come as it goes cycles through",
    "start": "2540390",
    "end": "2547320"
  },
  {
    "text": "the different partitions so that for us what we probably were we were still in a",
    "start": "2547320",
    "end": "2552420"
  },
  {
    "text": "relational sequel and operating like you do on a normal sort of page to results it we should have done that it was just",
    "start": "2552420",
    "end": "2559140"
  },
  {
    "text": "really they're really relying on there hasn't all results if that's true even if you get nothing back then keep",
    "start": "2559140",
    "end": "2564930"
  },
  {
    "text": "iterating over",
    "start": "2564930",
    "end": "2567559"
  },
  {
    "text": "I'm here the magic number a little sad to see that it's still prevalent in",
    "start": "2575840",
    "end": "2581640"
  },
  {
    "text": "there but it is there so one of the options that you can provide to your",
    "start": "2581640",
    "end": "2586860"
  },
  {
    "text": "queries is this max parallelism and I mentioned how important parallelizing",
    "start": "2586860",
    "end": "2592200"
  },
  {
    "text": "your operations is so if we jump quickly into code you can see here as I'm doing",
    "start": "2592200",
    "end": "2603600"
  },
  {
    "text": "a query providing feed options and I'm saying max degree of parallelism equals",
    "start": "2603600",
    "end": "2609870"
  },
  {
    "text": "-1 now if you leave out this it defaults",
    "start": "2609870",
    "end": "2615780"
  },
  {
    "text": "to 0 which is effectively the same as 1 on belief and it just effectively goes",
    "start": "2615780",
    "end": "2621270"
  },
  {
    "text": "through each partition in kind of in sequence if I was to manually try and",
    "start": "2621270",
    "end": "2626790"
  },
  {
    "text": "fix that because as we saw before I had 5 partitions if I set that to 5 that would actually still work pretty well",
    "start": "2626790",
    "end": "2633230"
  },
  {
    "text": "however Cosmos DB can scale out and down the number of partitions automatically",
    "start": "2633230",
    "end": "2639720"
  },
  {
    "text": "for you so you don't really want to have a config element that each time cosmos DB does it and it doesn't tell you that",
    "start": "2639720",
    "end": "2645180"
  },
  {
    "text": "you have to change that manually the easiest way is of course the magic",
    "start": "2645180",
    "end": "2650340"
  },
  {
    "text": "number this magic number and this operates with a few properties within the cosmos DB client itself not just",
    "start": "2650340",
    "end": "2658560"
  },
  {
    "text": "this one but this one is one of the more important ones minus one tells the SDK to manage it automatically for you in",
    "start": "2658560",
    "end": "2665070"
  },
  {
    "text": "this case it'll say hey you've got five partitions I'm going to set up five for you and good to go",
    "start": "2665070",
    "end": "2670230"
  },
  {
    "text": "which means if cosmos DB if it expands the number of partitions for you the SDK",
    "start": "2670230",
    "end": "2675930"
  },
  {
    "text": "will take care of it for you it is this is listed in the documentation a little bit too deep for my liking but it is",
    "start": "2675930",
    "end": "2683070"
  },
  {
    "text": "listed there",
    "start": "2683070",
    "end": "2685910"
  },
  {
    "text": "okay",
    "start": "2694380",
    "end": "2697130"
  },
  {
    "text": "so just just wrapping up briefly I know",
    "start": "2699790",
    "end": "2706720"
  },
  {
    "text": "I banged on about it a little but effective partitioning is going to help",
    "start": "2706720",
    "end": "2712150"
  },
  {
    "text": "you a lot with cosmos cosmos again can be expensive you've got to be aware of",
    "start": "2712150",
    "end": "2717220"
  },
  {
    "text": "how the partitions work the partition keys having an effective partition key in my particular instance I was just",
    "start": "2717220",
    "end": "2724180"
  },
  {
    "text": "using a grid and there's a big spread it doesn't it's not particularly suited to the data but it gives me a good",
    "start": "2724180",
    "end": "2730180"
  },
  {
    "text": "spread across the partitions if you wanted to make sure your queries really were really efficient but still make use",
    "start": "2730180",
    "end": "2736570"
  },
  {
    "text": "of partitioning let's say had some address data you might use a postcode for example as a partition key or at",
    "start": "2736570",
    "end": "2742300"
  },
  {
    "text": "least a combination of that in your partition key we're selecting everything within a particular postcode my only hit",
    "start": "2742300",
    "end": "2747940"
  },
  {
    "text": "that one particular partition but it provides enough of a spread to get good distribution across your partitions",
    "start": "2747940",
    "end": "2754030"
  },
  {
    "text": "there could be something useful again in our case I've just put it as a grid good spread I'm getting reasonable",
    "start": "2754030",
    "end": "2760120"
  },
  {
    "text": "performance and I'm making use of the partitioning of Cosmos in a good way",
    "start": "2760120",
    "end": "2766860"
  },
  {
    "text": "paralyzing your operations again very very important you'll you'll you typically hit a point where your client",
    "start": "2766860",
    "end": "2773560"
  },
  {
    "text": "especially if there's any a few of them is the bottleneck and it's not actually cosmos and you'll try ramping it up but",
    "start": "2773560",
    "end": "2779350"
  },
  {
    "text": "the other the network is saturated or the clients just not I hasn't got enough threads available or cores available",
    "start": "2779350",
    "end": "2784390"
  },
  {
    "text": "whatever the case may be it's just not pushing enough through the pot and you'll think cosmos is sucking but it's",
    "start": "2784390",
    "end": "2790060"
  },
  {
    "text": "actually not the case if you're copy/paste encoding beware of exceeding",
    "start": "2790060",
    "end": "2795580"
  },
  {
    "text": "the master partition create your collections and databases at the start",
    "start": "2795580",
    "end": "2800860"
  },
  {
    "text": "of your app so if you're using dependency injection you know created as a single turn as part of the initialization create those collections",
    "start": "2800860",
    "end": "2807160"
  },
  {
    "text": "and then they're assumed they're created for the duration of your application and just be aware of all the be diligent",
    "start": "2807160",
    "end": "2815170"
  },
  {
    "text": "about client usage don't be frivolous with it you know treat it as a precious resource again singleton call open async",
    "start": "2815170",
    "end": "2821050"
  },
  {
    "text": "and is a document I'll link to at the end here which has a whole range of performance considerations but the ones",
    "start": "2821050",
    "end": "2828190"
  },
  {
    "text": "I've provided to you here today the ones that actually have made the most impact for me anyway",
    "start": "2828190",
    "end": "2835170"
  },
  {
    "text": "in terms of what I'd suggest you do if you're not doing this already install",
    "start": "2836460",
    "end": "2841720"
  },
  {
    "text": "the emulator and just have a bit of a play with it for a start it's free you can't go wrong with it I sort of going",
    "start": "2841720",
    "end": "2848680"
  },
  {
    "text": "back to that bit of intellectual verbiage that we touched on before cosmos DB can provide you all those",
    "start": "2848680",
    "end": "2856030"
  },
  {
    "text": "magic items but you need to work with it to make it do so particularly around again partitioning and consideration",
    "start": "2856030",
    "end": "2862960"
  },
  {
    "text": "around request units it can do all that the replication for me I think is absolutely fantastic but you just got to",
    "start": "2862960",
    "end": "2869680"
  },
  {
    "text": "work with it to get the most ever have a bit of a play with if you're thinking of using it make sure you do a spike or a",
    "start": "2869680",
    "end": "2876070"
  },
  {
    "text": "proof of concept around it because you'll have some preconceived notions about how you might want to use it might",
    "start": "2876070",
    "end": "2881530"
  },
  {
    "text": "be for performing certain kinds of searches and queries which may not work so well from a cosmos perspective or it",
    "start": "2881530",
    "end": "2888190"
  },
  {
    "text": "may just actually be you may have to pump up the request units so far that it becomes cost prohibitive so make sure",
    "start": "2888190",
    "end": "2894190"
  },
  {
    "text": "you sort that out early don't get too hard too fast to find out it's really not appropriate if you've bet the farmer",
    "start": "2894190",
    "end": "2900570"
  },
  {
    "text": "again partition partition partition think about your keys and partitioning keys if if I have to just no-brainer all",
    "start": "2900570",
    "end": "2908350"
  },
  {
    "text": "why don't you use a grid and then get more refined from that or to make your",
    "start": "2908350",
    "end": "2913960"
  },
  {
    "text": "database collection and test data for this particular demo on it now I've done that for all clients that I've worked",
    "start": "2913960",
    "end": "2919870"
  },
  {
    "text": "with cosmos is to make sure you remove any data or collections that aren't used",
    "start": "2919870",
    "end": "2924970"
  },
  {
    "text": "for this particular demo because I've ramped it up to ten thousand I don't want to pay twenty bucks a day I'm",
    "start": "2924970",
    "end": "2930580"
  },
  {
    "text": "pretty cheap so I've got a piece of code which I'll link to at the end of this as well which'll constructs up the database",
    "start": "2930580",
    "end": "2937390"
  },
  {
    "text": "IDs the collections sets up the request units per second for me and fills it all",
    "start": "2937390",
    "end": "2943510"
  },
  {
    "text": "up with test data so once I'm finished this demo or this presentation I'll run",
    "start": "2943510",
    "end": "2948670"
  },
  {
    "text": "delete all in all just tear it all down for me and that way I can actually get away with playing with ten thousand our",
    "start": "2948670",
    "end": "2954550"
  },
  {
    "text": "use per second collections quite easily I'll spin it up for maybe an hour or two or even a few hours tear it down at the",
    "start": "2954550",
    "end": "2960250"
  },
  {
    "text": "end and I'm good to go yes it still uses a few dollars but it actually gives you a good feel to play with cosmos",
    "start": "2960250",
    "end": "2967569"
  },
  {
    "text": "in real life at high use per second with full partitioning semantics so that way you're not just operating blind and not",
    "start": "2967569",
    "end": "2974170"
  },
  {
    "text": "just relying on you know a four hundred are you per second single partition or local emulation experience I did have a",
    "start": "2974170",
    "end": "2982289"
  },
  {
    "text": "interesting interesting for one particular client where we were we were",
    "start": "2982289",
    "end": "2989049"
  },
  {
    "text": "load testing cosmos DB and the client was fairly generous in it's a dual",
    "start": "2989049",
    "end": "2996009"
  },
  {
    "text": "consumption so we had well actually not we a particular developer would decided",
    "start": "2996009",
    "end": "3001440"
  },
  {
    "text": "I'm giving it I'll give it a bit of a performance head I'm going to pump it up to one hundred thousand I use per second and I'm gonna run some performance tests",
    "start": "3001440",
    "end": "3008069"
  },
  {
    "text": "and the developer did that sent me your report on findings and it was okay got",
    "start": "3008069",
    "end": "3014459"
  },
  {
    "text": "to a certain amount thought nothing of it few months later the manager comes to",
    "start": "3014459",
    "end": "3019859"
  },
  {
    "text": "me is just Paul why are we what is fifteen thousand dollars per month resource that we're using alright so I",
    "start": "3019859",
    "end": "3025680"
  },
  {
    "text": "went ahead look and sure enough there's the one hundred thousand are use per second collection sitting there doing nothing but no data in it but is just",
    "start": "3025680",
    "end": "3033239"
  },
  {
    "text": "hanging around earning some as your credits but suffice to say we deleted",
    "start": "3033239",
    "end": "3040380"
  },
  {
    "text": "that but you know just tear it down when you finish with it's actually really easy to recreate and like any good",
    "start": "3040380",
    "end": "3046289"
  },
  {
    "text": "testing scenario ideally you want to be able to recreate and put any of your test date or in there spin it up run it tear it down again more so in the case",
    "start": "3046289",
    "end": "3053160"
  },
  {
    "text": "of that cosmos there's some links there",
    "start": "3053160",
    "end": "3058859"
  },
  {
    "text": "the tips that I showed you and the client usage in particular I've got a",
    "start": "3058859",
    "end": "3064410"
  },
  {
    "text": "blog post there which I go through about 20 other things between maybe twenty five individual tests where I go through",
    "start": "3064410",
    "end": "3069809"
  },
  {
    "text": "a whole bunch of client options to find out which ones were the most important it had the most impact because if you",
    "start": "3069809",
    "end": "3076529"
  },
  {
    "text": "look there the next link there is the performance tips which gives you like through pages of performance tips to use but it's not immediately apparent which",
    "start": "3076529",
    "end": "3083160"
  },
  {
    "text": "ones have the most benefit and so it took me a little while to turn this one on turn this one off spit up the number",
    "start": "3083160",
    "end": "3089699"
  },
  {
    "text": "of threads fry nap service try VM blah blah blah blah blah blah and all the different feed options and in that you",
    "start": "3089699",
    "end": "3094799"
  },
  {
    "text": "it's fairly comprehensive although it could be more comprehensive but it gives you a good idea of which client options",
    "start": "3094799",
    "end": "3100229"
  },
  {
    "text": "have the most benefit and that's the things that I've reflected in this particular presentation however if you're interested in more detail go to that",
    "start": "3100229",
    "end": "3106590"
  },
  {
    "text": "link at the top and you'll see the full sort of diagnosis a cosmos DB University",
    "start": "3106590",
    "end": "3112230"
  },
  {
    "text": "one is a really good resource for any cosmos information there are stack loads of information there",
    "start": "3112230",
    "end": "3118290"
  },
  {
    "text": "and it's way too much to go to and it goes through in any short amount of time but there's just stacks there there's",
    "start": "3118290",
    "end": "3123930"
  },
  {
    "text": "white papers about the theory behind it which is quite complex I pretended to read it and understand it but and",
    "start": "3123930",
    "end": "3132090"
  },
  {
    "text": "they're linked at the bottom there is the source code that I've used for this talk including the the way I've created",
    "start": "3132090",
    "end": "3137670"
  },
  {
    "text": "the data and the tests are and everything so if we feel free to have at it I would it would be remiss of me to",
    "start": "3137670",
    "end": "3144570"
  },
  {
    "text": "not mention the fact that I had been speaking to the cosmos DB team who have helped me in this presentation and they",
    "start": "3144570",
    "end": "3150390"
  },
  {
    "text": "were extremely receptive even though they're extremely busy and they really want to get things right with cosmos so",
    "start": "3150390",
    "end": "3157440"
  },
  {
    "text": "they're very open to suggestions their words they do it or not who knows but one of the cosmos engineering team was",
    "start": "3157440",
    "end": "3163770"
  },
  {
    "text": "kind enough to take time out of his day to regularly connect with me and provide me some information around some of the",
    "start": "3163770",
    "end": "3170100"
  },
  {
    "text": "information that I've provided to you here today so that's about all I have",
    "start": "3170100",
    "end": "3175170"
  },
  {
    "text": "for you guys as births probably that's seven minutes left for questions if anybody has any questions I think you're",
    "start": "3175170",
    "end": "3183150"
  },
  {
    "text": "the first one so there the question is just cosmos support transactions the the",
    "start": "3183150",
    "end": "3190140"
  },
  {
    "text": "answer is yes but not through the document car you've got to do it through stored procedures so it's got to be",
    "start": "3190140",
    "end": "3195690"
  },
  {
    "text": "through the JSON level store procedures and I do provide atomic behavior there but that's the only way it does it currently sorry need a question",
    "start": "3195690",
    "end": "3204710"
  },
  {
    "text": "so the answer sorry the question was talked about spreading the partitions using a grid",
    "start": "3215790",
    "end": "3221340"
  },
  {
    "text": "and a good partition key but when would be a good time to cluster it and it's a hard one to to definitively enter oh",
    "start": "3221340",
    "end": "3228630"
  },
  {
    "text": "sorry genetic generically answer but in the case of like the I'll give you the postcode example where you might want to",
    "start": "3228630",
    "end": "3234720"
  },
  {
    "text": "cluster things by location and you could have a partition key as a postcode but",
    "start": "3234720",
    "end": "3239790"
  },
  {
    "text": "where you've got closely related items and the data is not too massive if",
    "start": "3239790",
    "end": "3245040"
  },
  {
    "text": "you've got a heap of data that's that's tightly clustered you probably want to think of a composite partition key that",
    "start": "3245040",
    "end": "3250470"
  },
  {
    "text": "will allow it to not spread too far but still be partitioned if that makes sense",
    "start": "3250470",
    "end": "3255830"
  },
  {
    "text": "it's a little bit of a tricky one to answer because that because it's so crucial to how it works you'd have to",
    "start": "3255830",
    "end": "3261000"
  },
  {
    "text": "really spend some good time analyzing them and doing spikes and proof of concepts as to how that was spread using",
    "start": "3261000",
    "end": "3267360"
  },
  {
    "text": "their Azure portal metrics to determine how well it was spread does that answer your question yeah any other questions",
    "start": "3267360",
    "end": "3273540"
  },
  {
    "text": "yes no that's purely for filling up",
    "start": "3273540",
    "end": "3283800"
  },
  {
    "text": "where actually is no sorry it will as far as I understand it its primary use",
    "start": "3283800",
    "end": "3290370"
  },
  {
    "text": "is just to get the address routing table I don't think it creates the session but it could do I'm not a hundred percent",
    "start": "3290370",
    "end": "3296010"
  },
  {
    "text": "sure on there what I'd have to order to go back to the team and ask I will do on that one there any other questions yes",
    "start": "3296010",
    "end": "3306120"
  },
  {
    "text": "up the back",
    "start": "3306120",
    "end": "3308480"
  },
  {
    "text": "okay so the question was how do you know when to break out of that that while loot fur has more records and you",
    "start": "3315430",
    "end": "3322160"
  },
  {
    "text": "touched on the answer there so it's when this guy here is false it's as simple as",
    "start": "3322160",
    "end": "3329450"
  },
  {
    "text": "that yeah so when it's has more results as fal'cie it just exits out yep",
    "start": "3329450",
    "end": "3336020"
  },
  {
    "text": "yes so the question was which scenarios",
    "start": "3336020",
    "end": "3346400"
  },
  {
    "text": "are more suitable for cosmos DB versus the traditional sequel first and",
    "start": "3346400",
    "end": "3351530"
  },
  {
    "text": "foremost will be reporting I'd use sequel for reporting almost always in",
    "start": "3351530",
    "end": "3357140"
  },
  {
    "text": "terms of other scenarios Bowl congestion is goods a really fast ingestion of data",
    "start": "3357140",
    "end": "3363010"
  },
  {
    "text": "it also has a change feed mechanism so if you want to listen for changes in data or you want to trigger something",
    "start": "3363010",
    "end": "3369350"
  },
  {
    "text": "else it's really good for that as well and quite efficient as to other",
    "start": "3369350",
    "end": "3374420"
  },
  {
    "text": "scenarios I'd hasten is to have provided generic answer and as a consultant I would be doing myself a big disservice",
    "start": "3374420",
    "end": "3381460"
  },
  {
    "text": "but I have to examine the scenario itself but it's really about looking at that data if you were expecting it to",
    "start": "3381460",
    "end": "3388760"
  },
  {
    "text": "operate in a sequel like way and you want to do relational constraints then clearly that's not the way to go you'd",
    "start": "3388760",
    "end": "3394490"
  },
  {
    "text": "have to implement that at the application level if that was too much of a cost then I wouldn't recommend it",
    "start": "3394490",
    "end": "3400610"
  },
  {
    "text": "either but that's a general sort of no sequel answer to but if you're if you're",
    "start": "3400610",
    "end": "3413060"
  },
  {
    "text": "doing things like doing development and you want to take advantage of some of the like the",
    "start": "3413060",
    "end": "3418490"
  },
  {
    "text": "replication and consistency levels within cosmos it's a really good option because you can retain your your",
    "start": "3418490",
    "end": "3424430"
  },
  {
    "text": "knowledge and you should they're off but you can get all this is wonderful replication and high availability that",
    "start": "3424430",
    "end": "3430970"
  },
  {
    "text": "comes into and throughput as well yeah yes",
    "start": "3430970",
    "end": "3437080"
  },
  {
    "text": "so the question was what is the granularity of the consistency levels and can you join across collections the",
    "start": "3451049",
    "end": "3458559"
  },
  {
    "text": "green yo-yo I'm gonna enter into the granularity of the consistency levels I",
    "start": "3458559",
    "end": "3463950"
  },
  {
    "text": "mean for me the eventual session and strong are probably the most obvious",
    "start": "3463950",
    "end": "3471249"
  },
  {
    "text": "ones difference between eventual and strong is fairly obvious the session again is a little bit different because",
    "start": "3471249",
    "end": "3477009"
  },
  {
    "text": "it tries to provide a localized version of strong but it's just not geographically redundant the other two",
    "start": "3477009",
    "end": "3483579"
  },
  {
    "text": "you can choose the amount the window of latency between the two is in-between",
    "start": "3483579",
    "end": "3488739"
  },
  {
    "text": "eventual in session you can tune the amount of eventual prefix that it then so the I think it's like the amount of",
    "start": "3488739",
    "end": "3495279"
  },
  {
    "text": "time in terms of seconds that it the other reed replicas become eventually consistent and similarly with the strong",
    "start": "3495279",
    "end": "3501609"
  },
  {
    "text": "I think it's bounded staleness how much time before all the quorum becomes consistent so you can get down to a per",
    "start": "3501609",
    "end": "3508089"
  },
  {
    "text": "second time I don't know of any restrictions around that or the timing",
    "start": "3508089",
    "end": "3515589"
  },
  {
    "text": "the window timing but it's generally in between like you know one to two ten seconds you can kind of define and you",
    "start": "3515589",
    "end": "3521619"
  },
  {
    "text": "can split a slider along to determine that in terms of joining across collections that you don't get that yeah",
    "start": "3521619",
    "end": "3528930"
  },
  {
    "text": "any other questions okay well I'll be hanging around for a little",
    "start": "3528930",
    "end": "3535029"
  },
  {
    "text": "bit thank you very much for coming I realize it's one of the last sessions you're probably pretty drained but I really do appreciate you turning up",
    "start": "3535029",
    "end": "3540970"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "3540970",
    "end": "3544549"
  }
]