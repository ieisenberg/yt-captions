[
  {
    "text": "oh hello everyone welcome to real time revolution uh this is signalr in action um",
    "start": "5200",
    "end": "13280"
  },
  {
    "text": "before we get started i always like to tell a little bit of a story i'm an independent consultant in the united states i work with a",
    "start": "13280",
    "end": "19439"
  },
  {
    "text": "variety of companies all around the world um various countries and i get the most",
    "start": "19439",
    "end": "26560"
  },
  {
    "text": "like basic questions that come across my email i always try to do like a 15-minute call just get an idea where",
    "start": "26560",
    "end": "32960"
  },
  {
    "text": "people are and i had a client's come last year give or take",
    "start": "32960",
    "end": "38480"
  },
  {
    "text": "and they said kevin we have an application not an actual screenshot i swear",
    "start": "38480",
    "end": "43760"
  },
  {
    "text": "i i'm not very good with css i could probably create something a little bit prettier in css if i tried but their app",
    "start": "43760",
    "end": "51199"
  },
  {
    "text": "looked like this and you probably have an app as well they look similar to this it's some icons up in the top right corner",
    "start": "51199",
    "end": "57680"
  },
  {
    "text": "there's a menu or toolbar and it does some stuff and they say kevin we have this",
    "start": "57680",
    "end": "63359"
  },
  {
    "text": "application and we have two very important icons on this page we have a",
    "start": "63359",
    "end": "70560"
  },
  {
    "text": "little envelope that tells people when they're getting new messages that come into the system and then we also have this global alerts notifier",
    "start": "70560",
    "end": "78560"
  },
  {
    "text": "well what happens is when stuff happens in the app these little icons pop up and",
    "start": "78560",
    "end": "84159"
  },
  {
    "text": "say you have two alerts that you need to know about or you have five new messages that you need to be aware of",
    "start": "84159",
    "end": "91040"
  },
  {
    "text": "and this is different for every user and is up to date no matter how many tabs i have open at any one time",
    "start": "91040",
    "end": "98960"
  },
  {
    "text": "and you probably have seen this dynamic before if you've used facebook or any similar applications you understand what",
    "start": "98960",
    "end": "104320"
  },
  {
    "text": "the badges do if you don't open them they go away stuff gets synced back to the server",
    "start": "104320",
    "end": "110240"
  },
  {
    "text": "the the way they accomplished this was they had their app so we talked to their web server and",
    "start": "110240",
    "end": "118320"
  },
  {
    "text": "every now and then it would go and say i need to know the number of unread messages that i currently have or",
    "start": "118320",
    "end": "125600"
  },
  {
    "text": "it would go say well what are the number of alert notifications that i need to be aware of it's the client specifically going to",
    "start": "125600",
    "end": "132239"
  },
  {
    "text": "the server asking it for information it's doing a pull request technically",
    "start": "132239",
    "end": "137520"
  },
  {
    "text": "and would do this both calls every five seconds",
    "start": "137520",
    "end": "142959"
  },
  {
    "text": "every five seconds okay not a big deal except",
    "start": "142959",
    "end": "148239"
  },
  {
    "text": "you make this assumption as just one person using your app it's not really one person using your app it's",
    "start": "148239",
    "end": "154160"
  },
  {
    "text": "multiple people using your apps and if your users are anything like mine they have multiple tabs open multiple windows",
    "start": "154160",
    "end": "161040"
  },
  {
    "text": "maybe on multiple devices they're all hitting the same server",
    "start": "161040",
    "end": "166080"
  },
  {
    "text": "and they're all getting the same information over and over again and they took the process of",
    "start": "166080",
    "end": "172400"
  },
  {
    "text": "trying to optimize in different ways they couldn't necessarily cache that information long term because it's",
    "start": "172400",
    "end": "178319"
  },
  {
    "text": "always changing stuff is always happening on the server those statistics are always changing so they try to do",
    "start": "178319",
    "end": "186000"
  },
  {
    "text": "funny things with like tab caching so one tab might go grab the information and share it with",
    "start": "186000",
    "end": "191920"
  },
  {
    "text": "their other tabs and they try to over architect what could be a simpler solution",
    "start": "191920",
    "end": "197760"
  },
  {
    "text": "and they went to their telemetry and their telemetry said that 90 of their calls were those two specific endpoints",
    "start": "197760",
    "end": "205440"
  },
  {
    "text": "because every client every five seconds was hitting them trying to get new information that wasn't necessarily",
    "start": "205440",
    "end": "211760"
  },
  {
    "text": "changing all the time so we asked ourselves and they asked me and they paid me kevin is there a better",
    "start": "211760",
    "end": "218640"
  },
  {
    "text": "way that we can accomplish this well you already know there is because you wouldn't be here if there wasn't a",
    "start": "218640",
    "end": "224159"
  },
  {
    "text": "bear way hi everyone i'm kevin griffin from the united states uh microsoft mvp",
    "start": "224159",
    "end": "230159"
  },
  {
    "text": "independent consultant my primary focus in life and career is building web",
    "start": "230159",
    "end": "235599"
  },
  {
    "text": "applications on asp.net core and deploying solution to microsoft azure so i'm happy to be here with you",
    "start": "235599",
    "end": "242560"
  },
  {
    "text": "all today if you ever like to reach out to me afterwards you can go to my website consultwithgriff.com",
    "start": "242560",
    "end": "247760"
  },
  {
    "text": "or hit me up on twitter at one kev griff i would love to chat with you",
    "start": "247760",
    "end": "253040"
  },
  {
    "text": "i also have a best-selling course on udemy uh on signalr which i went and grabbed the screenshot in",
    "start": "253040",
    "end": "259759"
  },
  {
    "text": "pounds today because dollars wouldn't have made any sense to anyone uh so it's really cheap at the moment you should go",
    "start": "259759",
    "end": "266080"
  },
  {
    "text": "grab it but i'm not going to push my course anymore than this let's talk about a better way to solve",
    "start": "266080",
    "end": "271759"
  },
  {
    "text": "that problem i have my app i have my server and the ideal solution you probably already know",
    "start": "271759",
    "end": "278080"
  },
  {
    "text": "the ideal solution is just set up a websocket between the clients and the server",
    "start": "278080",
    "end": "284400"
  },
  {
    "text": "because there's this great thing that happens when the server gets a message it knows",
    "start": "284400",
    "end": "290160"
  },
  {
    "text": "everything that's happening it is the ultimate state of truth for our entire ecosystem if an email",
    "start": "290160",
    "end": "297040"
  },
  {
    "text": "comes in the server knows about it if a direct message comes from another client it knows about it if the databases needs",
    "start": "297040",
    "end": "303919"
  },
  {
    "text": "to be updated the server knows about it because the server is the one doing the work so the server is aware of everything",
    "start": "303919",
    "end": "309919"
  },
  {
    "text": "that's happening in our app so why couldn't the server just send that message down to the client to tell it",
    "start": "309919",
    "end": "316560"
  },
  {
    "text": "that something occurred email comes in the server sends the message down to the client the client",
    "start": "316560",
    "end": "323600"
  },
  {
    "text": "increments decrements changes its notification to reflect what the",
    "start": "323600",
    "end": "328960"
  },
  {
    "text": "current state of the server is and this works really well at scale",
    "start": "328960",
    "end": "334560"
  },
  {
    "text": "so instead of all these various clients making calls multiple calls every five",
    "start": "334560",
    "end": "340080"
  },
  {
    "text": "seconds to get various pieces of information they just establish a single connection",
    "start": "340080",
    "end": "346160"
  },
  {
    "text": "a websocket and when something happens the server will notify whomever needs to know about it",
    "start": "346160",
    "end": "353520"
  },
  {
    "text": "now it might not be every client that needs to get a message it might be uh specific clients",
    "start": "353520",
    "end": "358720"
  },
  {
    "text": "it might just be your one tab or your one tab or your one tab everyone gets the message that they need",
    "start": "358720",
    "end": "364639"
  },
  {
    "text": "at the time that they need it even better what if we could have",
    "start": "364639",
    "end": "370720"
  },
  {
    "text": "a system where i write code one way but that code supports not just",
    "start": "370720",
    "end": "376240"
  },
  {
    "text": "web pages it could also support multiple devices windows apps",
    "start": "376240",
    "end": "381600"
  },
  {
    "text": "windows services mobile apps you name it what if i could write one server",
    "start": "381600",
    "end": "387520"
  },
  {
    "text": "implementation that could feed all these different types of applications that i'm building so you probably already guessed it that",
    "start": "387520",
    "end": "393919"
  },
  {
    "text": "solution is signalr which has been in the asp.net framework since",
    "start": "393919",
    "end": "400600"
  },
  {
    "text": "2013. i believe that was the first course i created on signalr",
    "start": "400600",
    "end": "406080"
  },
  {
    "text": "it was added as this way to really make websockets more approachable to net",
    "start": "406080",
    "end": "411680"
  },
  {
    "text": "developers because if you ever had a program a raw websocket it's easier now than it was 10 years ago",
    "start": "411680",
    "end": "420000"
  },
  {
    "text": "but it's still kind of a pain in the butt it's a lot to manage especially across numerous users",
    "start": "420000",
    "end": "426240"
  },
  {
    "text": "and signalr just abstracts all that away from you even better if you have a case where websockets",
    "start": "426240",
    "end": "432400"
  },
  {
    "text": "isn't supported you don't have to change your code in any way signalr is automatically going to find the best way",
    "start": "432400",
    "end": "438080"
  },
  {
    "text": "for your clients and your server to communicate with each other so okay i want to jump out of slides for",
    "start": "438080",
    "end": "444240"
  },
  {
    "text": "a minute i want to start just running through some basic demos and when i say basic",
    "start": "444240",
    "end": "450400"
  },
  {
    "text": "i mean basic i have this philosophy when it comes to signal r",
    "start": "450400",
    "end": "456720"
  },
  {
    "text": "that the simpler the demo the better there's so many folks that want to show you a chat demo",
    "start": "456720",
    "end": "462960"
  },
  {
    "text": "there's an unwritten rule in the signalr community you do not write chat demos if someone",
    "start": "462960",
    "end": "468560"
  },
  {
    "text": "writes a chat demo in single r there's any microsoft folks in here",
    "start": "468560",
    "end": "473759"
  },
  {
    "text": "good microsoft vote yes all right don't tell anyone i said this microsoft folks break this all the time like chat chat",
    "start": "473759",
    "end": "480400"
  },
  {
    "text": "chat chat chat don't write chat demos uh instead i'm just gonna show you the world's ugliest demo",
    "start": "480400",
    "end": "486879"
  },
  {
    "text": "uh let's set it up real fast i have this starter this is all on github so you can see it after the fact",
    "start": "486879",
    "end": "492080"
  },
  {
    "text": "if you want nope that's not it",
    "start": "492080",
    "end": "496639"
  },
  {
    "text": "i want to set up what our intention is with this demo you see this is the",
    "start": "504080",
    "end": "509599"
  },
  {
    "text": "world's ugliest demo it just says hi uh i have a text box i have a check box",
    "start": "509599",
    "end": "514800"
  },
  {
    "text": "i also have a couple buttons and there's a couple phases to this demo our ultimate goal",
    "start": "514800",
    "end": "521440"
  },
  {
    "text": "and this is 90 of what i do in signalr is when i type something into that first",
    "start": "521440",
    "end": "528959"
  },
  {
    "text": "text box i want it to also display on that second text box signal r the majority of the",
    "start": "528959",
    "end": "535600"
  },
  {
    "text": "work you're going to do in cinema is state transfer something happens in the system and i need to notify the clients",
    "start": "535600",
    "end": "542240"
  },
  {
    "text": "about it i need the transfer state when state changes now it doesn't do anything at the moment because we haven't wired up any signal r",
    "start": "542240",
    "end": "549279"
  },
  {
    "text": "so if i just type kevin nothing happens so let's start fixing that",
    "start": "549279",
    "end": "554480"
  },
  {
    "text": "bits by bit by bit i'm going to shut down my application let's walk through the code",
    "start": "554480",
    "end": "560480"
  },
  {
    "text": "just a little bit so you see where we're starting with i try to keep everything simple again",
    "start": "560480",
    "end": "566080"
  },
  {
    "text": "our html input box check box a couple buttons that we'll get to later",
    "start": "566080",
    "end": "571680"
  },
  {
    "text": "i have my scripts at the very end for including signalr plus some",
    "start": "571680",
    "end": "577760"
  },
  {
    "text": "other fancy tools when you primarily use signalr in a real",
    "start": "577760",
    "end": "584640"
  },
  {
    "text": "application you're probably using something like webpack or some sort of build system so you're going to npm install your",
    "start": "584640",
    "end": "592240"
  },
  {
    "text": "signalr dependency and you'll just include it wherever necessary for this demo i'm just using signalr",
    "start": "592240",
    "end": "598800"
  },
  {
    "text": "kind of raw raw javascript but the syntax that i'm using is fairly similar to what you would write in typescript or",
    "start": "598800",
    "end": "605519"
  },
  {
    "text": "just raw javascript the javascript itself",
    "start": "605519",
    "end": "611360"
  },
  {
    "text": "nothing up my sleeve i have a couple placeholders just for event handlers but there's no signalr in this",
    "start": "611360",
    "end": "617440"
  },
  {
    "text": "application yet well let's start at the very beginning",
    "start": "617440",
    "end": "624720"
  },
  {
    "text": "in our startup cs if you're working with new minimal apis it's just program cs",
    "start": "624720",
    "end": "631440"
  },
  {
    "text": "but we have two things that we need to do here the first is we need to configure services for signalr",
    "start": "631440",
    "end": "638560"
  },
  {
    "text": "and that's fairly straightforward say services.add cigar",
    "start": "638560",
    "end": "646519"
  },
  {
    "text": "sigma r is already a part of the box when you create a new asp.net core application",
    "start": "647440",
    "end": "652959"
  },
  {
    "text": "no special nuget packages that you need to install",
    "start": "652959",
    "end": "657120"
  },
  {
    "text": "the second thing we have to do is create a place for our clients to connect",
    "start": "658480",
    "end": "664000"
  },
  {
    "text": "and traditionally in signalr this is called a hub if you're familiar with mvc model view controller you understand",
    "start": "664000",
    "end": "671120"
  },
  {
    "text": "the concept of controllers and controller is a place that connections go to perform work",
    "start": "671120",
    "end": "676480"
  },
  {
    "text": "in signalr a hub is a place that web sockets go signal",
    "start": "676480",
    "end": "681760"
  },
  {
    "text": "our connections go to basically be managed by signalr",
    "start": "681760",
    "end": "686800"
  },
  {
    "text": "so all of our connections will go through what we call the hub i'm going to create one called a sync up",
    "start": "686800",
    "end": "694320"
  },
  {
    "text": "i'm doing a lot of this by hand and it implements the class or the type",
    "start": "694320",
    "end": "699839"
  },
  {
    "text": "hub which is part of signalr now this is",
    "start": "699839",
    "end": "705920"
  },
  {
    "text": "all i really need to do for now my hubs don't have to have any methods in them they can just simply exist",
    "start": "705920",
    "end": "712800"
  },
  {
    "text": "for managing connections if i go to",
    "start": "712800",
    "end": "719200"
  },
  {
    "text": "my startup i have to register that hub with asp.net core and that's done through the use",
    "start": "719200",
    "end": "725680"
  },
  {
    "text": "endpoints middleware we'll say configure",
    "start": "725680",
    "end": "731839"
  },
  {
    "text": "map hub i need to tell asp.net core what type of",
    "start": "731920",
    "end": "738240"
  },
  {
    "text": "hub i want to implement so i'm going to say sync hub and i have to give it a path and that",
    "start": "738240",
    "end": "743920"
  },
  {
    "text": "path is going to be hubs slash sync",
    "start": "743920",
    "end": "749200"
  },
  {
    "text": "of course there's no formatted for c sharp all right so we're going to save that we're going",
    "start": "750639",
    "end": "756240"
  },
  {
    "text": "to go back to our app and make sure this compiles",
    "start": "756240",
    "end": "761519"
  },
  {
    "text": "nope because i don't have the namespace so this is using",
    "start": "765920",
    "end": "772959"
  },
  {
    "text": "microsoft's asp.net core signal r",
    "start": "772959",
    "end": "777600"
  },
  {
    "text": "there we go all right that's step one step two let's go back to our javascript file",
    "start": "784480",
    "end": "791120"
  },
  {
    "text": "we have a hub on our asp.net core app it's exposed an endpoint we need to set",
    "start": "791120",
    "end": "796480"
  },
  {
    "text": "up a connection between our clients and our server so that's",
    "start": "796480",
    "end": "802160"
  },
  {
    "text": "done with what's called the connection hub builder so we'll create a new connection",
    "start": "802160",
    "end": "807600"
  },
  {
    "text": "which will create a new signalr hub",
    "start": "807600",
    "end": "813519"
  },
  {
    "text": "connection builder and i have to tell this hub connection builder",
    "start": "813519",
    "end": "819279"
  },
  {
    "text": "where to go to connect uh so there's a couple options on here we'll say with url we'll tell it hubs",
    "start": "819279",
    "end": "828920"
  },
  {
    "text": "just sync and then i'm going to tell it to build itself",
    "start": "830079",
    "end": "836639"
  },
  {
    "text": "so our creates the connection but it hasn't really done anything yet the connection is created but we have to go tell it to start the connection",
    "start": "837199",
    "end": "845120"
  },
  {
    "text": "which is done down here at the bottom and in your application the connection",
    "start": "845120",
    "end": "851680"
  },
  {
    "text": "can start whenever you want to typically i try to start the connection as soon as possible when a page renders",
    "start": "851680",
    "end": "858560"
  },
  {
    "text": "just because it's nicer to have that socket open and ready to go for when you need it then wait until a later time",
    "start": "858560",
    "end": "866240"
  },
  {
    "text": "we're going to say net run",
    "start": "868959",
    "end": "875279"
  },
  {
    "text": "we'll open this in a browser again i'm going to bring up the dev tools this time",
    "start": "877360",
    "end": "883320"
  },
  {
    "text": "let's do a refresh come on signalr is not defined yes it is",
    "start": "889440",
    "end": "898120"
  },
  {
    "text": "signal r capital r",
    "start": "898320",
    "end": "901680"
  },
  {
    "text": "there we go so a couple things happens here our page renders you see the first line we're normalizing",
    "start": "906000",
    "end": "912720"
  },
  {
    "text": "our url so it's fully qualified uh you can also use signalr across domains uh there's core support uh we don't need",
    "start": "912720",
    "end": "919920"
  },
  {
    "text": "that in the moment but then my second line which was this dot start",
    "start": "919920",
    "end": "925600"
  },
  {
    "text": "signalr does a couple things you can see we have websocket connected at our endpoint",
    "start": "925600",
    "end": "930800"
  },
  {
    "text": "but the process to get there let's find our network tab",
    "start": "930800",
    "end": "936240"
  },
  {
    "text": "let's go back to all let's bring this up a little bit more a couple things happened",
    "start": "936240",
    "end": "943040"
  },
  {
    "text": "uh first was this negotiation call uh the clients and the server have a little chat",
    "start": "943040",
    "end": "949040"
  },
  {
    "text": "and they ask what's the best way for us to talk to each other because they really want to be on the same page",
    "start": "949040",
    "end": "955199"
  },
  {
    "text": "ideally they want to use web sockets but sometimes there are cases where websockets can't apply we'll talk about",
    "start": "955199",
    "end": "961600"
  },
  {
    "text": "that in a moment if websockets works they say websocket is the way we're going to go the server",
    "start": "961600",
    "end": "968399"
  },
  {
    "text": "assigns a connection id which is unique to this tab this instance",
    "start": "968399",
    "end": "973440"
  },
  {
    "text": "and then the next call to sync is an actual websocket that gets opened",
    "start": "973440",
    "end": "978720"
  },
  {
    "text": "back to the server with the with the connection token and such so now the",
    "start": "978720",
    "end": "984959"
  },
  {
    "text": "client and the server can talk over this websocket as much as they want to we can watch the messages here as they come",
    "start": "984959",
    "end": "991839"
  },
  {
    "text": "these are just uh heartbeats coming in every couple seconds so we've set up the scaffold for",
    "start": "991839",
    "end": "999360"
  },
  {
    "text": "now actually being able to send information up and down the pipe",
    "start": "999360",
    "end": "1004320"
  },
  {
    "text": "let's talk about protocols for a moment so ideally you would use a websocket",
    "start": "1007360",
    "end": "1013519"
  },
  {
    "text": "which simply is an end-to-end connection between all your clients and your server",
    "start": "1013519",
    "end": "1020079"
  },
  {
    "text": "so the server can send information up to the clients the clients can send information down to the server",
    "start": "1020079",
    "end": "1025280"
  },
  {
    "text": "but there are cases where websockets cannot be used not so much today but",
    "start": "1025280",
    "end": "1032000"
  },
  {
    "text": "maybe five six years ago this was the case every now and then you get a proxy or",
    "start": "1032000",
    "end": "1037280"
  },
  {
    "text": "some sort of vpn it doesn't allow certain websocket connections sometimes the server won't allow it or it's",
    "start": "1037280",
    "end": "1042959"
  },
  {
    "text": "disabled if there's a case where a websocket isn't supported there are a couple",
    "start": "1042959",
    "end": "1048880"
  },
  {
    "text": "fallbacks there's one called server sentiments which has been around since the netscape",
    "start": "1048880",
    "end": "1054559"
  },
  {
    "text": "days and the way this works is that the client makes an initial request to the",
    "start": "1054559",
    "end": "1060000"
  },
  {
    "text": "server saying i would like to start service and events connection with you the server",
    "start": "1060000",
    "end": "1067600"
  },
  {
    "text": "returns what's called an event source back to the client and this is a pipe for the server",
    "start": "1067600",
    "end": "1073840"
  },
  {
    "text": "to send messages down to the client whenever it wants to and this is fantastic",
    "start": "1073840",
    "end": "1079280"
  },
  {
    "text": "however it doesn't work as well when the client wants to send messages to the server",
    "start": "1079280",
    "end": "1084559"
  },
  {
    "text": "the fallback is that the server just makes traditional ajax requests or post requests to the server whenever there's",
    "start": "1084559",
    "end": "1090400"
  },
  {
    "text": "a message that needs to get made so this pipe is dedicated just for the server",
    "start": "1090400",
    "end": "1096320"
  },
  {
    "text": "to go to the client and it will work in 95 of cases where websockets isn't",
    "start": "1096320",
    "end": "1102080"
  },
  {
    "text": "supported for all the other cases there's the final final fallback which",
    "start": "1102080",
    "end": "1108720"
  },
  {
    "text": "is long polling uh long polling is just simply opening the request to a server",
    "start": "1108720",
    "end": "1114080"
  },
  {
    "text": "the server maintains that connection until it has something to say so if there's no messages that need to",
    "start": "1114080",
    "end": "1120400"
  },
  {
    "text": "come down to the client immediately that request is just going to stay open",
    "start": "1120400",
    "end": "1125600"
  },
  {
    "text": "as soon as the server has a message to send sends back the response the connection closes we repeat the pattern",
    "start": "1125600",
    "end": "1133520"
  },
  {
    "text": "the only time that the request would get terminated prematurely is if the timeout expires on",
    "start": "1133520",
    "end": "1142000"
  },
  {
    "text": "the client side this could typically be about two minutes but it's customizable based off the browser",
    "start": "1142000",
    "end": "1148240"
  },
  {
    "text": "this is the final final fallback just because this will work all the way back to ie6",
    "start": "1148240",
    "end": "1154960"
  },
  {
    "text": "hopefully no one's supporting ie6 if you are raise your hands or we can laugh at you",
    "start": "1154960",
    "end": "1161679"
  },
  {
    "text": "excellent uh so just quick comparison normally you're going to use websockets it's the de facto standard",
    "start": "1162840",
    "end": "1169840"
  },
  {
    "text": "nowadays it's always available connection between a client and a server uh there is a con because it's always",
    "start": "1169840",
    "end": "1175600"
  },
  {
    "text": "open connection that's you could potentially exhaust your socket pool",
    "start": "1175600",
    "end": "1181679"
  },
  {
    "text": "in your application don't ask me how i found this out the hard way if we have time i will tell that story i",
    "start": "1181679",
    "end": "1188799"
  },
  {
    "text": "have learned that you can ddos yourself accidentally with websockets it's a good story",
    "start": "1188799",
    "end": "1195039"
  },
  {
    "text": "if websockets aren't available for any reason proxies vpns say not we fall back to server sent events which",
    "start": "1195039",
    "end": "1201600"
  },
  {
    "text": "are great but the only issue is that the client can't use the server the event source to send messages to the server",
    "start": "1201600",
    "end": "1209120"
  },
  {
    "text": "so it has to fall back and then finally long polling which works across all browsers it's just",
    "start": "1209120",
    "end": "1215360"
  },
  {
    "text": "horrible it's actually the problem that we had at the very beginning of the talk where we're constantly making requests",
    "start": "1215360",
    "end": "1221440"
  },
  {
    "text": "to the server over and over and over again uh so that's the worst case scenario",
    "start": "1221440",
    "end": "1227200"
  },
  {
    "text": "now you might be thinking kevin do i have to write the code to handle all these different cases well this demo right here will handle all three of",
    "start": "1227200",
    "end": "1233919"
  },
  {
    "text": "these without any code changes on your side the only thing you could do or might",
    "start": "1233919",
    "end": "1239039"
  },
  {
    "text": "want to do is you might want to tell your app don't use long polling or don't use server sent events only use web",
    "start": "1239039",
    "end": "1245360"
  },
  {
    "text": "sockets that's just a quick configuration option and you can do that i don't recommend it",
    "start": "1245360",
    "end": "1251919"
  },
  {
    "text": "unless you have a particular use case but that's all you need to know about the",
    "start": "1251919",
    "end": "1257919"
  },
  {
    "text": "transport protocols so let's get into some meat let's send some messages let's make this",
    "start": "1257919",
    "end": "1263919"
  },
  {
    "text": "boring demo actually do something i'm going to close all this stuff shut",
    "start": "1263919",
    "end": "1270799"
  },
  {
    "text": "down my server let's go back into our app",
    "start": "1270799",
    "end": "1276520"
  },
  {
    "text": "all right come on vs good there you go all right uh no real good place to start we're going to start in the hub",
    "start": "1277919",
    "end": "1283840"
  },
  {
    "text": "and we're going to worry about that text box because that's",
    "start": "1283840",
    "end": "1289440"
  },
  {
    "text": "what we want to do first uh we have to create a method on the server that the clients can call",
    "start": "1289440",
    "end": "1297039"
  },
  {
    "text": "when it wants to update the state on everyone's text box so we'll create a new public async",
    "start": "1297039",
    "end": "1304080"
  },
  {
    "text": "method because the any signalr method inside of a hub will",
    "start": "1304080",
    "end": "1309120"
  },
  {
    "text": "return a task it's all asynchronous my number one consulting gig",
    "start": "1309120",
    "end": "1314480"
  },
  {
    "text": "is awaiting people's signalr calls because they don't realize that every single hour method that you create is",
    "start": "1314480",
    "end": "1320880"
  },
  {
    "text": "asynchronous it's literally the easiest money i've ever made hey oh wait oh wait oh wait oh",
    "start": "1320880",
    "end": "1327360"
  },
  {
    "text": "wait wait pay me please uh so",
    "start": "1327360",
    "end": "1333280"
  },
  {
    "text": "just call this sync text box and sync text box is going to take a string",
    "start": "1333280",
    "end": "1339600"
  },
  {
    "text": "and we'll just say text box and when",
    "start": "1339600",
    "end": "1345280"
  },
  {
    "text": "this method gets called which it will be called by a client we want to turn around take the contents of text box",
    "start": "1345280",
    "end": "1352159"
  },
  {
    "text": "and send it to all our connected clients that aren't",
    "start": "1352159",
    "end": "1358799"
  },
  {
    "text": "the person making the call so how do we get that connection list",
    "start": "1358799",
    "end": "1365440"
  },
  {
    "text": "well because we're implementing hub we have this collection called clients",
    "start": "1365440",
    "end": "1370480"
  },
  {
    "text": "and this is a data structure that knows about every single connection to our server",
    "start": "1370480",
    "end": "1376720"
  },
  {
    "text": "at this time i can say clients not all",
    "start": "1376720",
    "end": "1381840"
  },
  {
    "text": "and it will send a message to all the connected clients including myself so myself being if i'm the tab that's",
    "start": "1381840",
    "end": "1387840"
  },
  {
    "text": "making the request but that's not not necessarily what i want i want to send this to all the",
    "start": "1387840",
    "end": "1393120"
  },
  {
    "text": "others that are connected to this server",
    "start": "1393120",
    "end": "1399120"
  },
  {
    "text": "we'll say send async and i'm going to pass in a magic string",
    "start": "1400880",
    "end": "1407280"
  },
  {
    "text": "there's other ways to do this i'm just using magic strings for demo purposes i need to tell",
    "start": "1407280",
    "end": "1413440"
  },
  {
    "text": "my clients what method they need to execute on their side",
    "start": "1413440",
    "end": "1418799"
  },
  {
    "text": "and again we're going to call this sync text box just to keep everything the same and we're",
    "start": "1418799",
    "end": "1425200"
  },
  {
    "text": "going to pass in our string",
    "start": "1425200",
    "end": "1430759"
  },
  {
    "text": "and we're going to oh wait on this call now kevin what happens if i don't wait",
    "start": "1433760",
    "end": "1438960"
  },
  {
    "text": "on this call the message may or may not go through it all depends on how your server is",
    "start": "1438960",
    "end": "1444960"
  },
  {
    "text": "feeling at that time uh because what happens is if you don't await threads might terminate",
    "start": "1444960",
    "end": "1450080"
  },
  {
    "text": "prematurely it's a whole mess and then you call me and i charge you a lot of money to fix it",
    "start": "1450080",
    "end": "1456080"
  },
  {
    "text": "uh so we'll wait on our call seeing text box go over to the client",
    "start": "1456080",
    "end": "1462320"
  },
  {
    "text": "so let's go ahead and set up the first event so on our connection",
    "start": "1462320",
    "end": "1470159"
  },
  {
    "text": "we can say on sync text box",
    "start": "1470159",
    "end": "1475600"
  },
  {
    "text": "let me pass in a function so this is the local event sync text box",
    "start": "1477840",
    "end": "1483919"
  },
  {
    "text": "which correlates to the call that we're making on the server",
    "start": "1483919",
    "end": "1489760"
  },
  {
    "text": "so technically when the server calls the the clients to say hey sync text box",
    "start": "1489760",
    "end": "1495840"
  },
  {
    "text": "here's the text this is the method that gets called we are going to",
    "start": "1495840",
    "end": "1502880"
  },
  {
    "text": "take our text box and set the value on it to text yay",
    "start": "1502880",
    "end": "1510080"
  },
  {
    "text": "now what if i'm the one changing the text box all right i have the event handler set",
    "start": "1511520",
    "end": "1517360"
  },
  {
    "text": "up for the text box all the fancy html stuff we are going to go to our connection",
    "start": "1517360",
    "end": "1525360"
  },
  {
    "text": "and we are going to ask it to invoke a method on the server",
    "start": "1526159",
    "end": "1531600"
  },
  {
    "text": "called sync text box uh casing doesn't technically matter here",
    "start": "1531600",
    "end": "1537679"
  },
  {
    "text": "and i'm going to pass in the value of target the value",
    "start": "1537679",
    "end": "1544158"
  },
  {
    "text": "type something in text box hit tab enter whatever calls a change event",
    "start": "1547520",
    "end": "1552880"
  },
  {
    "text": "assuming we have an existing connection we're going to send a message to the server telling the server invoke",
    "start": "1553360",
    "end": "1559919"
  },
  {
    "text": "sync text box with a given value it's going to execute that method sync",
    "start": "1559919",
    "end": "1566799"
  },
  {
    "text": "text box passing in the parameter which will turn around and send the message to everyone else",
    "start": "1566799",
    "end": "1573520"
  },
  {
    "text": "now that all sounds good let's make sure i actually coded this correctly",
    "start": "1573840",
    "end": "1579200"
  },
  {
    "text": "nope oh oh hey",
    "start": "1581200",
    "end": "1586960"
  },
  {
    "text": "uh remind me what namespace task is in hey who said that",
    "start": "1587520",
    "end": "1594320"
  },
  {
    "text": "there you go it's a task or tap",
    "start": "1594320",
    "end": "1599520"
  },
  {
    "text": "just system that's ready here i'm going to owe you a cookie",
    "start": "1599520",
    "end": "1605279"
  },
  {
    "text": "nope never i don't owe you a cookie",
    "start": "1605279",
    "end": "1609400"
  },
  {
    "text": "hey there you go all right thank you sir all right let's assume everything",
    "start": "1614480",
    "end": "1620000"
  },
  {
    "text": "connected there's no console errors oops all right everything's good in the",
    "start": "1620000",
    "end": "1626080"
  },
  {
    "text": "console now i'm going to create two instances of this app",
    "start": "1626080",
    "end": "1631760"
  },
  {
    "text": "from side by side and i want to type kevin and hit enter",
    "start": "1631760",
    "end": "1639679"
  },
  {
    "text": "when i hit enter we got our local event handler it took this stuff out of the text box send it to the server saying i",
    "start": "1639679",
    "end": "1646320"
  },
  {
    "text": "want to call the sync text box method with the term kevin",
    "start": "1646320",
    "end": "1651760"
  },
  {
    "text": "turns around sends that to all the other connected clients one and it gets the value kevin drops it",
    "start": "1651760",
    "end": "1657919"
  },
  {
    "text": "into text box and we're all good we put these side by side",
    "start": "1657919",
    "end": "1665760"
  },
  {
    "text": "we can show you it goes either way yay",
    "start": "1665840",
    "end": "1671120"
  },
  {
    "text": "now i know that is not the most impressive demo but that is 90 of signal artwork is just handling messages uh",
    "start": "1672159",
    "end": "1679760"
  },
  {
    "text": "between the clients and the server in this form now those who don't like magic strings",
    "start": "1679760",
    "end": "1685440"
  },
  {
    "text": "there's a way to create what i i call them strongly typed hubs where you can create an interface",
    "start": "1685440",
    "end": "1692240"
  },
  {
    "text": "and everything can be strongly typed so you don't have to say send async sync text box um",
    "start": "1692240",
    "end": "1698399"
  },
  {
    "text": "that takes about 15 minutes to get into so i'm not doing it in this talk but i happen to have a course that talks about",
    "start": "1698399",
    "end": "1704799"
  },
  {
    "text": "all that stuff you can get it for 13 pounds all right so for the sake of time i'm",
    "start": "1704799",
    "end": "1710640"
  },
  {
    "text": "not going to wire up the checkbox the checkbox is basically the same thing with a different data type so you notice",
    "start": "1710640",
    "end": "1716880"
  },
  {
    "text": "i'm passing it a string but i could very well pass in a boolean i could pass in a",
    "start": "1716880",
    "end": "1722399"
  },
  {
    "text": "full object what i want to get into now is actually sending more complex objects but",
    "start": "1722399",
    "end": "1729679"
  },
  {
    "text": "selectively sending messages to only people that want to get them",
    "start": "1729679",
    "end": "1735120"
  },
  {
    "text": "that's where these buttons come into play start notifications and end notifications",
    "start": "1735120",
    "end": "1742559"
  },
  {
    "text": "so one of the things that are that's been happening in the background is i've been running this",
    "start": "1743039",
    "end": "1748880"
  },
  {
    "text": "user generator every 10 minutes we go and generate a new user",
    "start": "1748880",
    "end": "1754559"
  },
  {
    "text": "and we don't do anything with it what would be nice is selectively sending that",
    "start": "1754559",
    "end": "1760720"
  },
  {
    "text": "message to uh to our page only for the people that want to receive those messages",
    "start": "1760720",
    "end": "1768559"
  },
  {
    "text": "so let's go into our code let's shut this down real fast and i'm going to add two more methods",
    "start": "1768720",
    "end": "1777279"
  },
  {
    "text": "start notify and then end notify",
    "start": "1779120",
    "end": "1785919"
  },
  {
    "text": "so start notify is going to get called whenever i press the start notifications button and notify when i press end",
    "start": "1787360",
    "end": "1793039"
  },
  {
    "text": "notification you all can figure that out when i press start notify i want to add",
    "start": "1793039",
    "end": "1798880"
  },
  {
    "text": "myself my connection to what we call a group and a group is a logical way to organize",
    "start": "1798880",
    "end": "1806240"
  },
  {
    "text": "connections in your applications so maybe uh when i log in",
    "start": "1806240",
    "end": "1812640"
  },
  {
    "text": "uh i'm an administrator so we might have a special group for just administrators or administrative connections",
    "start": "1812640",
    "end": "1818960"
  },
  {
    "text": "um i might i might be looking at a widget if i have a widget page well a specific",
    "start": "1818960",
    "end": "1826880"
  },
  {
    "text": "widget i might have a group for just updates to a specific widget when we're done i'm going to show you an",
    "start": "1826880",
    "end": "1832080"
  },
  {
    "text": "actual clients application i wrote where we use groups uh religiously",
    "start": "1832080",
    "end": "1838159"
  },
  {
    "text": "but just think of the idea of a group as a logical grouping of of connections",
    "start": "1838159",
    "end": "1845120"
  },
  {
    "text": "so we're going to say groups oh i don't have my intellisense",
    "start": "1845120",
    "end": "1850960"
  },
  {
    "text": "that's all right that's why i have notes",
    "start": "1850960",
    "end": "1854559"
  },
  {
    "text": "i'm going to add to group async and this takes two parameters the first",
    "start": "1856880",
    "end": "1863200"
  },
  {
    "text": "is my connection id now because i'm implementing hub",
    "start": "1863200",
    "end": "1868799"
  },
  {
    "text": "i get clients i get groups i also get this context context represents the current",
    "start": "1868799",
    "end": "1874720"
  },
  {
    "text": "connection for the current tab the current window that's looking at this app",
    "start": "1874720",
    "end": "1880399"
  },
  {
    "text": "and it has a connection id then i need to tell it which group i",
    "start": "1880399",
    "end": "1886320"
  },
  {
    "text": "want to uh add this connection to and we'll just call it notify me",
    "start": "1886320",
    "end": "1894720"
  },
  {
    "text": "all right",
    "start": "1896799",
    "end": "1899200"
  },
  {
    "text": "if i don't want to be in the group anymore or programmatically something happens and i want to be removed from the group",
    "start": "1901919",
    "end": "1908480"
  },
  {
    "text": "i can say remove from group and same thing context connection id",
    "start": "1908480",
    "end": "1914240"
  },
  {
    "text": "and i'll remove myself from notify me excellent let's go back to the javascript",
    "start": "1914240",
    "end": "1921840"
  },
  {
    "text": "all right i have my two buttons now you might already be able to figure out how we call these i can say invoke",
    "start": "1922480",
    "end": "1930720"
  },
  {
    "text": "start notify and then",
    "start": "1930880",
    "end": "1937840"
  },
  {
    "text": "invoke and notify this adds me to the group or it takes me out of the group",
    "start": "1937840",
    "end": "1945720"
  },
  {
    "text": "let's wire up a case where we actually want to do the notification and for this",
    "start": "1949600",
    "end": "1955039"
  },
  {
    "text": "i'm going to bring up my sample code just to copy and paste",
    "start": "1955039",
    "end": "1960440"
  },
  {
    "text": "here we go",
    "start": "1963840",
    "end": "1966480"
  },
  {
    "text": "so on the connection event it will eventually get called new user i'm going to get a user object from the",
    "start": "1972320",
    "end": "1979279"
  },
  {
    "text": "server and all i'm going to do with that user object is display some toast with the person's name and picture and",
    "start": "1979279",
    "end": "1985840"
  },
  {
    "text": "all that good stuff over on the server where am i going to get the notification",
    "start": "1985840",
    "end": "1991840"
  },
  {
    "text": "from i'm taking advantage of asp.net core background services",
    "start": "1991840",
    "end": "1998240"
  },
  {
    "text": "runs automatically runs forever until you shut it down well i have a case here where i go to",
    "start": "1998720",
    "end": "2004960"
  },
  {
    "text": "the server go to a server get a user and i have a to-do and to-do's are fun aren't they",
    "start": "2004960",
    "end": "2010720"
  },
  {
    "text": "i mean it's work you have to do in the future let's go ahead and",
    "start": "2010720",
    "end": "2017480"
  },
  {
    "text": "all right i'll do this part by hand i need to get a reference to all my",
    "start": "2018240",
    "end": "2024240"
  },
  {
    "text": "clients that are currently connected well i can't do that easily because i'm not in the hub i'm outside of the hub",
    "start": "2024240",
    "end": "2030960"
  },
  {
    "text": "and this is another common question how do i send messages to users when i'm not inside of a hub i might be in a",
    "start": "2030960",
    "end": "2037039"
  },
  {
    "text": "controller i might be in another service or somewhere else in the app well everything in signalr depends on",
    "start": "2037039",
    "end": "2046519"
  },
  {
    "text": "asp.net dependency injection so i can inject an ihub context",
    "start": "2046519",
    "end": "2052720"
  },
  {
    "text": "of sync hub",
    "start": "2052720",
    "end": "2055679"
  },
  {
    "text": "and this gives me basically a reference to all my connected clients on this server",
    "start": "2058399",
    "end": "2065358"
  },
  {
    "text": "so now i can come down where i say to do signal r i can send",
    "start": "2065359",
    "end": "2071838"
  },
  {
    "text": "i can say hubcontextclients.all nope group",
    "start": "2072720",
    "end": "2079118"
  },
  {
    "text": "i can pass in the name of the group notify me and tell them to send async",
    "start": "2079119",
    "end": "2087599"
  },
  {
    "text": "nope yep no then i'm right sorry and what's the name of the method i",
    "start": "2087679",
    "end": "2093200"
  },
  {
    "text": "chose new user so on the message new user i'm going to pass in",
    "start": "2093200",
    "end": "2099920"
  },
  {
    "text": "uh was it r dot first dots",
    "start": "2099920",
    "end": "2104640"
  },
  {
    "text": "results dot first",
    "start": "2110000",
    "end": "2114040"
  },
  {
    "text": "all right let's assume again that i did everything correctly this is build",
    "start": "2119599",
    "end": "2124960"
  },
  {
    "text": "the only unit test that matters i failed oh because i was dominant",
    "start": "2124960",
    "end": "2131119"
  },
  {
    "text": "make it private",
    "start": "2131119",
    "end": "2134440"
  },
  {
    "text": "and then down here we'll say",
    "start": "2148320",
    "end": "2151680"
  },
  {
    "text": "oops and that's not right okay",
    "start": "2154160",
    "end": "2161200"
  },
  {
    "text": "let's try it again oh i have a call that's not a way did i",
    "start": "2161200",
    "end": "2167200"
  },
  {
    "text": "bring my own rule yes i did where were you all folks i could have given you money for that but",
    "start": "2167200",
    "end": "2174480"
  },
  {
    "text": "oh well yep",
    "start": "2174480",
    "end": "2180000"
  },
  {
    "text": "let's restart the app because we definitely don't want to test that theory right now",
    "start": "2180160",
    "end": "2185200"
  },
  {
    "text": "we'll restart again let's go ahead and open up a new",
    "start": "2185280",
    "end": "2190800"
  },
  {
    "text": "tab make sure everything connects correctly all right i'm going to say start notifications",
    "start": "2190800",
    "end": "2197280"
  },
  {
    "text": "so what happened underneath the scene oh there it comes right away all right so welcome grayson and we stay here and let it run for a",
    "start": "2197280",
    "end": "2203440"
  },
  {
    "text": "moment every 10 seconds every day hey we have no new person that",
    "start": "2203440",
    "end": "2209839"
  },
  {
    "text": "pops up that's because i subscribe to the notifications for this particular",
    "start": "2209839",
    "end": "2216480"
  },
  {
    "text": "app if i open up another tab",
    "start": "2216480",
    "end": "2220799"
  },
  {
    "text": "and they're both connected",
    "start": "2223119",
    "end": "2226680"
  },
  {
    "text": "all right we get the notification on one side so i'll start notifications on the right side oh wait a moment they should",
    "start": "2228560",
    "end": "2235359"
  },
  {
    "text": "both get the same notification levi cool so",
    "start": "2235359",
    "end": "2241599"
  },
  {
    "text": "we're selectively sending messages only to clients that want to receive them",
    "start": "2241599",
    "end": "2247599"
  },
  {
    "text": "if i hit endnotify on the right side it should not get the next notification because i've removed myself from that",
    "start": "2250240",
    "end": "2256000"
  },
  {
    "text": "group there we go",
    "start": "2256000",
    "end": "2261838"
  },
  {
    "text": "let's talk a little bit deeper about connections and groups",
    "start": "2262720",
    "end": "2268000"
  },
  {
    "text": "now i want to show you more fancy demo stuff",
    "start": "2268000",
    "end": "2271839"
  },
  {
    "text": "all right so there's a variety of ways to filter clients",
    "start": "2273040",
    "end": "2278800"
  },
  {
    "text": "uh the one that we saw earlier so think about our infrastructure like this we have our server we could technically have two or",
    "start": "2278960",
    "end": "2285760"
  },
  {
    "text": "three or 15 or 50 000 servers and all of our connections are connecting to",
    "start": "2285760",
    "end": "2292960"
  },
  {
    "text": "this server if i want to send a message to all my clients",
    "start": "2292960",
    "end": "2299839"
  },
  {
    "text": "no matter what i can filter my clients with the uh the all collection so clients.all will",
    "start": "2299839",
    "end": "2306880"
  },
  {
    "text": "send a message to all the connected clients that want to receive it",
    "start": "2306880",
    "end": "2312800"
  },
  {
    "text": "sometimes i only want to send a message back to the person that made the original call so here when i press send",
    "start": "2312800",
    "end": "2320160"
  },
  {
    "text": "or start notifications i am technically the caller the person making the call to the server",
    "start": "2320160",
    "end": "2327200"
  },
  {
    "text": "now that was client a the server might say well let's send a message back to only the person that",
    "start": "2327200",
    "end": "2333280"
  },
  {
    "text": "made the original call so only i gets that message",
    "start": "2333280",
    "end": "2339880"
  },
  {
    "text": "we saw earlier if i want to send the message to everyone other than the caller i can say clients.others",
    "start": "2340480",
    "end": "2348240"
  },
  {
    "text": "a sends a message in everyone else gets a response this is really useful when you know a",
    "start": "2348240",
    "end": "2355440"
  },
  {
    "text": "already knows the new state so something changed you don't need to confuse",
    "start": "2355440",
    "end": "2360960"
  },
  {
    "text": "client a by sending the information back to it it really depends on the setup of your",
    "start": "2360960",
    "end": "2366839"
  },
  {
    "text": "app now this is where it starts to get really weird you can filter connections uh by connection id",
    "start": "2366839",
    "end": "2373839"
  },
  {
    "text": "so i could say send to all clients except connections c and e",
    "start": "2373839",
    "end": "2381520"
  },
  {
    "text": "so everyone else gets it uh these are filters i've never used in a production application i think they exist because",
    "start": "2381520",
    "end": "2389520"
  },
  {
    "text": "somewhere there was a design meeting where they said oh this would be a good idea to have i've never seen it",
    "start": "2389520",
    "end": "2395200"
  },
  {
    "text": "used clients.client you can send to a specific client so if you know the",
    "start": "2395200",
    "end": "2401760"
  },
  {
    "text": "connection id of a specific client you can send a message directly to them i don't",
    "start": "2401760",
    "end": "2407119"
  },
  {
    "text": "recommend this uh there's a i have a very long article on why you shouldn't do this has to do with scaling and stuff",
    "start": "2407119",
    "end": "2414640"
  },
  {
    "text": "like that but i don't use this method but you could if you wanted to you can specify multiple clients",
    "start": "2414640",
    "end": "2421599"
  },
  {
    "text": "d and f if you and this is uh just a list of parameters so you could stack as many as you wanted to into that list",
    "start": "2421599",
    "end": "2429520"
  },
  {
    "text": "uh if you're using identity asp.net core identity and you have an eye user principle",
    "start": "2429520",
    "end": "2434880"
  },
  {
    "text": "you can use that user principle to identify specific connections if i told signalr to send a message to",
    "start": "2434880",
    "end": "2441920"
  },
  {
    "text": "kevin signalr is going to know based off user principle which connections are kevin",
    "start": "2441920",
    "end": "2448720"
  },
  {
    "text": "and it will send messages directly to those this is hit or miss in my experience on in scaled",
    "start": "2448720",
    "end": "2455359"
  },
  {
    "text": "environments locally it works great all the time scaled environments it can be hit or miss",
    "start": "2455359",
    "end": "2462560"
  },
  {
    "text": "you can specify multiple users so if you know a variety of user principal names",
    "start": "2463119",
    "end": "2468480"
  },
  {
    "text": "you can send to everyone that you want to kevin and sally then we can get into groups this is",
    "start": "2468480",
    "end": "2475359"
  },
  {
    "text": "where i i think the real power single r is i use groups all the time",
    "start": "2475359",
    "end": "2480560"
  },
  {
    "text": "specifically as a solution to managing connection ids because it's so much easier to put",
    "start": "2480560",
    "end": "2487520"
  },
  {
    "text": "connections into a group and send to a group instead of trying to manage connection ids directly or even trying",
    "start": "2487520",
    "end": "2494240"
  },
  {
    "text": "to manage things like user principle i will in every application automatically put",
    "start": "2494240",
    "end": "2500480"
  },
  {
    "text": "an authenticated user into their own group like user kevin",
    "start": "2500480",
    "end": "2505839"
  },
  {
    "text": "that way anywhere in the application if i know i need to send a message to kevin",
    "start": "2505839",
    "end": "2512560"
  },
  {
    "text": "i can send say group dot user kevin",
    "start": "2512560",
    "end": "2518240"
  },
  {
    "text": "i don't care how many connections kevin has kevin will get the message on all",
    "start": "2518240",
    "end": "2524560"
  },
  {
    "text": "his connections and this syntax is the same way clients.group",
    "start": "2524560",
    "end": "2530400"
  },
  {
    "text": "send async call a particular method on the client uh oh so here i have the server and then",
    "start": "2530400",
    "end": "2537520"
  },
  {
    "text": "i have the connections broken up into well it's supposed to be orange orange and yellow",
    "start": "2537520",
    "end": "2543200"
  },
  {
    "text": "so only the orange group gets gets a message you can filter this a little bit more i don't do this either",
    "start": "2543200",
    "end": "2549520"
  },
  {
    "text": "everyone in the group accept a particular connection or particular connections you could do this again i don't think",
    "start": "2549520",
    "end": "2556000"
  },
  {
    "text": "it's worth your time you can send them multiple groups i've done this a handful of times as well",
    "start": "2556000",
    "end": "2561920"
  },
  {
    "text": "so everyone in yellow everyone in orange they all get the message",
    "start": "2561920",
    "end": "2567599"
  },
  {
    "text": "and if you're a caller in a group you could say others in the group with me so i'm connection a",
    "start": "2567839",
    "end": "2574480"
  },
  {
    "text": "i say send to all the others in the group yellow only b and c will receive the message",
    "start": "2574480",
    "end": "2582640"
  },
  {
    "text": "all right now i've talked a lot about groups and all this stuff i've shown you probably the worst demo ever",
    "start": "2582880",
    "end": "2589200"
  },
  {
    "text": "um don't give me yellow on that please or red just give me green",
    "start": "2589200",
    "end": "2596720"
  },
  {
    "text": "i'm going to show you an application i worked with this is a non-profit",
    "start": "2596960",
    "end": "2602400"
  },
  {
    "text": "based in the united states called the national institute of public safety technology",
    "start": "2602400",
    "end": "2609359"
  },
  {
    "text": "and i'm going to bump this font up a little bit for y'all",
    "start": "2609359",
    "end": "2614480"
  },
  {
    "text": "let me explain a little bit how it works in the united states because so over",
    "start": "2614480",
    "end": "2619520"
  },
  {
    "text": "here was in 999 emergency services in the united states we have 9-1-1",
    "start": "2619520",
    "end": "2627280"
  },
  {
    "text": "and when you live in a populated city like",
    "start": "2627280",
    "end": "2632319"
  },
  {
    "text": "like a new york city or i'm from a place called norfolk virginia we have dedicated emergency services all",
    "start": "2632319",
    "end": "2639680"
  },
  {
    "text": "over the place in some rural parts of the united states",
    "start": "2639680",
    "end": "2645119"
  },
  {
    "text": "you you don't have emergency services right down the street from you uh you might",
    "start": "2645119",
    "end": "2650720"
  },
  {
    "text": "have emergency services in a county over or if they're in your county they're",
    "start": "2650720",
    "end": "2656640"
  },
  {
    "text": "they're miles and miles away uh so the solution to the problem of how",
    "start": "2656640",
    "end": "2661760"
  },
  {
    "text": "do we get emergency services to people as quickly as possible we",
    "start": "2661760",
    "end": "2667119"
  },
  {
    "text": "i worked with this team to work on this system called livecat that aggregates",
    "start": "2667119",
    "end": "2672560"
  },
  {
    "text": "emergency service data from a variety of uh call centers so if you call into",
    "start": "2672560",
    "end": "2679680"
  },
  {
    "text": "our 9-1-1 emergency services and say uh i'm sick or",
    "start": "2679680",
    "end": "2685280"
  },
  {
    "text": "elevator emergency that sounds horrible right now because it is",
    "start": "2685280",
    "end": "2690880"
  },
  {
    "text": "seven in the morning on the west coast on midwest i'm trying to think of the time there",
    "start": "2690880",
    "end": "2697119"
  },
  {
    "text": "yeah it's early and they're stuck in an elevator that sounds bad uh so we're getting information from all",
    "start": "2697119",
    "end": "2703599"
  },
  {
    "text": "these emergency services you can actually tell we have uh different colors for the emergencies uh the services so there's west",
    "start": "2703599",
    "end": "2710560"
  },
  {
    "text": "lc rcc and fair uh they're sending information in our",
    "start": "2710560",
    "end": "2716079"
  },
  {
    "text": "system we're quickly aggregating it and we build these dashboards",
    "start": "2716079",
    "end": "2721839"
  },
  {
    "text": "for different firehouses emergency services and whatnot",
    "start": "2721839",
    "end": "2727680"
  },
  {
    "text": "so the way this works in in the firehouses",
    "start": "2727680",
    "end": "2733520"
  },
  {
    "text": "is someone might be in the firehouse looking at the the screen it's up on a",
    "start": "2733520",
    "end": "2738800"
  },
  {
    "text": "big tv and if something really bad happens that i need to be aware of this screen flashes bright red just over and",
    "start": "2738800",
    "end": "2745040"
  },
  {
    "text": "over again so thankfully that's not happening right now but when that happens it's our cue that",
    "start": "2745040",
    "end": "2751359"
  },
  {
    "text": "we need to suit up get into the truck and head out to to a service call",
    "start": "2751359",
    "end": "2757040"
  },
  {
    "text": "when i first came on to this project if the the request wasn't like the the",
    "start": "2757040",
    "end": "2763440"
  },
  {
    "text": "beginning of the talk hey we're hitting this end point too many times it was worse like way worse uh they had a",
    "start": "2763440",
    "end": "2769760"
  },
  {
    "text": "dashboard it looked very similar to this we didn't change the look too much but it was uh asp.net",
    "start": "2769760",
    "end": "2775839"
  },
  {
    "text": "web forms who's done that all right who remembers update panel",
    "start": "2775839",
    "end": "2781520"
  },
  {
    "text": "all right this was in an update panel the whole thing was an update panel not like little update panels here there the",
    "start": "2781520",
    "end": "2787119"
  },
  {
    "text": "whole thing was an update panel when that update panel rendered it would go to the database the sql",
    "start": "2787119",
    "end": "2793440"
  },
  {
    "text": "server database on the same box as the iis server and it would ask the database all right",
    "start": "2793440",
    "end": "2799760"
  },
  {
    "text": "give me the the trucks the resources we call them give me the list of incidents",
    "start": "2799760",
    "end": "2804800"
  },
  {
    "text": "that i need to know about for a configuration and uh hey by the way also tell me what",
    "start": "2804800",
    "end": "2810480"
  },
  {
    "text": "color everything should be why are you asking the database what color stuff should be so it's doing all this work on the",
    "start": "2810480",
    "end": "2816079"
  },
  {
    "text": "database it comes back builds the html delivers the update panel re-renders the screen and it does that every one second",
    "start": "2816079",
    "end": "2824880"
  },
  {
    "text": "across thousands of clients and they said kevin our cpu is like at 99 all the time and",
    "start": "2824960",
    "end": "2832160"
  },
  {
    "text": "we're maxing out all the memory and i went yeah i can see what we can fix that",
    "start": "2832160",
    "end": "2838720"
  },
  {
    "text": "so we refactored we actually rewrote the entire back end in that",
    "start": "2838720",
    "end": "2844480"
  },
  {
    "text": "it's like dot-net 4.7 it was a newer.net framework it was before core uh and we",
    "start": "2844480",
    "end": "2849920"
  },
  {
    "text": "had used signal r for net framework and it has since been uh refactored again it's now currently",
    "start": "2849920",
    "end": "2856480"
  },
  {
    "text": "running.net 6 it's all up to speed so we",
    "start": "2856480",
    "end": "2862079"
  },
  {
    "text": "went through and we built it with this concept of we're sending data into the server",
    "start": "2862079",
    "end": "2868000"
  },
  {
    "text": "the server is going to aggregate it and it's going to selectively send updates to",
    "start": "2868000",
    "end": "2873040"
  },
  {
    "text": "clients based off of their configuration information so",
    "start": "2873040",
    "end": "2879520"
  },
  {
    "text": "if i look at this list we have all these different configurations of how data can be viewed",
    "start": "2879520",
    "end": "2886079"
  },
  {
    "text": "and they all have their own unique id now i have a signalr group for all these",
    "start": "2886079",
    "end": "2892160"
  },
  {
    "text": "different ids when i go to",
    "start": "2892160",
    "end": "2897280"
  },
  {
    "text": "let me just pick something uh no active incidents let's go back to mecklenburg that's a",
    "start": "2897280",
    "end": "2906000"
  },
  {
    "text": "is it better because there's actually data in here when i load this view",
    "start": "2906240",
    "end": "2911920"
  },
  {
    "text": "behind the scenes we make a call hey add me to the group oh 25 mech 3.",
    "start": "2911920",
    "end": "2918480"
  },
  {
    "text": "so now when the server gets data that comes in and realizes hey",
    "start": "2918480",
    "end": "2924000"
  },
  {
    "text": "oh 25 meg 3 needs to know about this i get a message telling me that something has changed whether it's a resource or",
    "start": "2924160",
    "end": "2930880"
  },
  {
    "text": "an incident but a lot of time like right now it's just sitting here not doing anything because there's nothing to be done",
    "start": "2930880",
    "end": "2938640"
  },
  {
    "text": "we deployed this now we deployed it to an azure app service so we made a change we took them",
    "start": "2938640",
    "end": "2943920"
  },
  {
    "text": "off the box under the table and uh we loaded up and i'm watching things",
    "start": "2943920",
    "end": "2950079"
  },
  {
    "text": "like cpu and memory utilization it was like one percent and people were hitting the server i'm",
    "start": "2950079",
    "end": "2955599"
  },
  {
    "text": "like oh crap i broke it i broke something i i whatever i pushed in production is not working um i'm like oh",
    "start": "2955599",
    "end": "2963200"
  },
  {
    "text": "crap they're gonna sue me this is gonna be horrible and turns out it's working just fine it",
    "start": "2963200",
    "end": "2968480"
  },
  {
    "text": "was just we had taken all the load off the server all the load off the database",
    "start": "2968480",
    "end": "2974319"
  },
  {
    "text": "and we were using a more intelligent way to send data down to different clients so everything was push notifications",
    "start": "2974319",
    "end": "2981599"
  },
  {
    "text": "instead of pull notifications and this has been running in production for years",
    "start": "2981599",
    "end": "2986880"
  },
  {
    "text": "and we've just made updates to things like the.net framework and to.net core and keeping the libraries up to date",
    "start": "2986880",
    "end": "2994319"
  },
  {
    "text": "so the story that happened after we pushed this out they got a write-up in the industry magazine",
    "start": "2994319",
    "end": "3000480"
  },
  {
    "text": "that's uh uh there was some folks in a firehouse they were doing their normal",
    "start": "3000480",
    "end": "3007520"
  },
  {
    "text": "night shift stuff the screen started flashing red and",
    "start": "3007520",
    "end": "3012720"
  },
  {
    "text": "yep that's something we got to do they get suited up they get in the truck doors open truck is out the door",
    "start": "3012720",
    "end": "3019920"
  },
  {
    "text": "the moment the truck is out the door a dispatcher comes over the intercom",
    "start": "3019920",
    "end": "3025119"
  },
  {
    "text": "says there's medical emergency here's the address whatever",
    "start": "3025119",
    "end": "3030720"
  },
  {
    "text": "folks are already out the door they're heading towards the emergency we have designed a system",
    "start": "3030720",
    "end": "3036800"
  },
  {
    "text": "that is faster than a person coming over a an intercom",
    "start": "3036800",
    "end": "3042559"
  },
  {
    "text": "and what's important about that is maybe someone in here you have a loved one",
    "start": "3042559",
    "end": "3048559"
  },
  {
    "text": "or even a person you don't like has had a medical emergency like a stroke heart attack",
    "start": "3048559",
    "end": "3054720"
  },
  {
    "text": "something that requires life-saving attention as soon as possible you know that every second counts",
    "start": "3054720",
    "end": "3062000"
  },
  {
    "text": "and we used a silly thing like signalr to build a system that gets emergency",
    "start": "3062000",
    "end": "3068079"
  },
  {
    "text": "personnel to life-saving resources faster than a human can get life-saving resources to",
    "start": "3068079",
    "end": "3075040"
  },
  {
    "text": "um to a person so that's why i tell everyone i save lives",
    "start": "3075040",
    "end": "3080319"
  },
  {
    "text": "with websockets uh i actually have an entire talk just on that on this app",
    "start": "3080319",
    "end": "3085920"
  },
  {
    "text": "um that i i'm not doing here but this is kind of the culmination of all",
    "start": "3085920",
    "end": "3091920"
  },
  {
    "text": "the ideas and putting into real practice not just theoretical like",
    "start": "3091920",
    "end": "3097440"
  },
  {
    "text": "dumb dumb demo that i had before but i have about nine minutes left",
    "start": "3097440",
    "end": "3105200"
  },
  {
    "text": "i am happy to answer any or all questions that you have thank you all so much for hanging out",
    "start": "3105200",
    "end": "3110559"
  },
  {
    "text": "with me here at ndc i hope you've enjoyed yourself maybe learned something",
    "start": "3110559",
    "end": "3116160"
  },
  {
    "text": "yes sir what point does signal our service come into play without it",
    "start": "3119280",
    "end": "3124960"
  },
  {
    "text": "i've struggled i've got similar work on my app yep functionality put it into search but",
    "start": "3124960",
    "end": "3132240"
  },
  {
    "text": "then i thought well okay i can't see why it's there the all right uh so the question is about",
    "start": "3132240",
    "end": "3138000"
  },
  {
    "text": "the azure signalr service um we're getting into a scaling discussion",
    "start": "3138000",
    "end": "3143760"
  },
  {
    "text": "here uh so i get to tell my story how i ddos myself how about that when if i go back a whole bunch of slides",
    "start": "3143760",
    "end": "3152319"
  },
  {
    "text": "i really should put a slide in here for this because it's super useful uh let's go to this slide this is a good",
    "start": "3152319",
    "end": "3157839"
  },
  {
    "text": "slide i had an app we built on signalr",
    "start": "3157839",
    "end": "3163359"
  },
  {
    "text": "dot net framework uh so old signalr had this philosophy where i could have",
    "start": "3164079",
    "end": "3169200"
  },
  {
    "text": "multiple hubs and only one websocket so uh the",
    "start": "3169200",
    "end": "3175839"
  },
  {
    "text": "the concept was like mvc controllers you'd have a hub for different different ideas",
    "start": "3175839",
    "end": "3181680"
  },
  {
    "text": "so we would create multiple hubs for for accounts for users for this for that and they all",
    "start": "3181680",
    "end": "3188720"
  },
  {
    "text": "used one websocket when we made the refactoring to.net core at the time and they rewrote signalr",
    "start": "3188720",
    "end": "3194880"
  },
  {
    "text": "they changed the philosophy and said well it's a websocket per hub so i have five hubs",
    "start": "3194880",
    "end": "3200640"
  },
  {
    "text": "so imagine five low lines going to each client each client 5 10 15 20 25 so on so on",
    "start": "3200640",
    "end": "3209200"
  },
  {
    "text": "now uh our users would instinctively always have 10 to 15 tabs open just by the because of how the",
    "start": "3209200",
    "end": "3216480"
  },
  {
    "text": "application works multiply that by thousands of users at any one time",
    "start": "3216480",
    "end": "3223680"
  },
  {
    "text": "we pushed the changes live and went oh this is working great until we hit our peak time at 10 am east coast time",
    "start": "3223680",
    "end": "3232079"
  },
  {
    "text": "that first monday and i keep getting emails from the clients that say",
    "start": "3232079",
    "end": "3237920"
  },
  {
    "text": "this server's really slow all right let's figure out what's happening server is restarting itself i",
    "start": "3237920",
    "end": "3243599"
  },
  {
    "text": "had three servers running in a load balance set it kept restarting itself every",
    "start": "3243599",
    "end": "3248800"
  },
  {
    "text": "every couple minutes because it was running out of memory it was exhausting all the sockets on that server because not only was it web",
    "start": "3248800",
    "end": "3255359"
  },
  {
    "text": "sockets html requests javascript request css so on so on just regular api calls",
    "start": "3255359",
    "end": "3262960"
  },
  {
    "text": "so i was killing these servers all right like have you ever had to do",
    "start": "3262960",
    "end": "3268880"
  },
  {
    "text": "[Music] a refactoring on the fly under stress like that's that was me for the next 12",
    "start": "3268880",
    "end": "3276079"
  },
  {
    "text": "hours was refactoring this application to get it down to two hubs while maintaining all the",
    "start": "3276079",
    "end": "3281119"
  },
  {
    "text": "functionality not breaking anything so the the lesson learned there was you only want to have one websocket",
    "start": "3281119",
    "end": "3288079"
  },
  {
    "text": "per app really to bring that to",
    "start": "3288079",
    "end": "3293119"
  },
  {
    "text": "azure single r service uh azure signalr service solves two problems",
    "start": "3293119",
    "end": "3298720"
  },
  {
    "text": "one it takes the socket connections off your server so let's imagine azure's over here",
    "start": "3298720",
    "end": "3306240"
  },
  {
    "text": "your app doesn't connect to your server it connects the azure signalr service",
    "start": "3306240",
    "end": "3311440"
  },
  {
    "text": "and then proxy's request to your server so automatically you're cutting every websocket connection",
    "start": "3311440",
    "end": "3318000"
  },
  {
    "text": "from your server you don't have to manage it that's that's great uh that's great if you have",
    "start": "3318000",
    "end": "3324079"
  },
  {
    "text": "stable predictable load it's not great if you have peaks and valleys um i actually have a whole",
    "start": "3324079",
    "end": "3330720"
  },
  {
    "text": "section on this in the course i'm not trying to push the course but i have a whole section on it uh plus like math of",
    "start": "3330720",
    "end": "3335839"
  },
  {
    "text": "the pricing because it's the pricing is the reason we didn't use it in this scenario uh",
    "start": "3335839",
    "end": "3342079"
  },
  {
    "text": "because our peak was however many thousand connections",
    "start": "3342079",
    "end": "3348000"
  },
  {
    "text": "and they do daily billing and not hourly billing so we couldn't scale just for the four-hour period",
    "start": "3348000",
    "end": "3353839"
  },
  {
    "text": "that we needed it we'd have to scale it for the entire day and wasn't cost effective",
    "start": "3353839",
    "end": "3359359"
  },
  {
    "text": "the other thing it does is it acts as a back plane so if i have multiple servers in a load",
    "start": "3359359",
    "end": "3365440"
  },
  {
    "text": "balance set there's a problem if i have multiple servers",
    "start": "3365440",
    "end": "3370720"
  },
  {
    "text": "load balanced if i say clients.all well that's really just all the clients on",
    "start": "3370720",
    "end": "3377839"
  },
  {
    "text": "that server doesn't necessarily include this all the clients on the other servers",
    "start": "3377839",
    "end": "3383359"
  },
  {
    "text": "so if i'm connected to server a and someone else is on server c",
    "start": "3383359",
    "end": "3389520"
  },
  {
    "text": "then they're not going to get my message we have a way of solving that it's called a backplane you can use redis",
    "start": "3389520",
    "end": "3395599"
  },
  {
    "text": "which is amazing back plane that you can host yourself or you can use azure signalr service",
    "start": "3395599",
    "end": "3400640"
  },
  {
    "text": "that takes care of that for you automatically um so i'm not sure if that answers your",
    "start": "3400640",
    "end": "3406079"
  },
  {
    "text": "question it's a very specific scaling um case where you know if you don't have that many",
    "start": "3406079",
    "end": "3412079"
  },
  {
    "text": "users you don't have that much load azure signal or service is not necessarily for you i wouldn't spend the",
    "start": "3412079",
    "end": "3417280"
  },
  {
    "text": "months 50 us dollars for one can up to a thousand connections um",
    "start": "3417280",
    "end": "3423200"
  },
  {
    "text": "which is actually a good deal but you don't need it oh live cad uses azure",
    "start": "3423200",
    "end": "3429119"
  },
  {
    "text": "signal or service because we have predictable load all the time we know exactly what we're paying for we pay for",
    "start": "3429119",
    "end": "3434559"
  },
  {
    "text": "two units all the time so 100 us dollars to",
    "start": "3434559",
    "end": "3440000"
  },
  {
    "text": "basically take all the stress off the server for socket management the biggest reason we",
    "start": "3440000",
    "end": "3446799"
  },
  {
    "text": "did that was not only our users firehouses and emergency services we",
    "start": "3446799",
    "end": "3453920"
  },
  {
    "text": "also have people that like to listen to police scanners and just are really nosy on what's going on they pay us uh",
    "start": "3453920",
    "end": "3460720"
  },
  {
    "text": "donations so they can see all that data um i'm not sure if that's a is that a thing",
    "start": "3460720",
    "end": "3466079"
  },
  {
    "text": "over here people just like to listen to police scanners and no you're all not nosy like that it's just an american",
    "start": "3466079",
    "end": "3471359"
  },
  {
    "text": "thing okay cool uh i would totally believe that if you said yes kevin that's totally an american thing",
    "start": "3471359",
    "end": "3477280"
  },
  {
    "text": "um but that's that's the big use case for azure signal or service you could technically write your own if you wanted",
    "start": "3477280",
    "end": "3483440"
  },
  {
    "text": "to i don't remember it might have been date of david fowler the gentleman who wrote signalr",
    "start": "3483440",
    "end": "3489599"
  },
  {
    "text": "he does a demo which he might have done at ndc 2020",
    "start": "3489599",
    "end": "3495040"
  },
  {
    "text": "where he writes basically writes his own signalr service",
    "start": "3495040",
    "end": "3500400"
  },
  {
    "text": "there's not a lot of documentation on that and i think there should be because you could technically write your own if you wanted to but that's an excellent",
    "start": "3500400",
    "end": "3506240"
  },
  {
    "text": "question thank you sir yes",
    "start": "3506240",
    "end": "3511559"
  },
  {
    "text": "uh you would um what i was just talking about having backplane so it's a",
    "start": "3528240",
    "end": "3534160"
  },
  {
    "text": "the servers connect to uh something that lets them communicate with each other",
    "start": "3534160",
    "end": "3540079"
  },
  {
    "text": "whether that's azure signal or service that you have to pay for or you can use your own with redis server or redis um",
    "start": "3540079",
    "end": "3546720"
  },
  {
    "text": "azure redis cache works fine we use that you can set up your own reddit server talk to that man about redis",
    "start": "3546720",
    "end": "3552960"
  },
  {
    "text": "that's that's the cheaper alternative and works great we use it for hundreds of users an",
    "start": "3552960",
    "end": "3560079"
  },
  {
    "text": "hour without any issue and i've other apps where we've done thousands of users",
    "start": "3560079",
    "end": "3566000"
  },
  {
    "text": "but that's the way you solve it is you tell all your servers connect to this",
    "start": "3566000",
    "end": "3571119"
  },
  {
    "text": "redis server and they will pub sub messages between",
    "start": "3571119",
    "end": "3576240"
  },
  {
    "text": "each other so uh the server in",
    "start": "3576240",
    "end": "3582160"
  },
  {
    "text": "new york just sent a message the server in london hears about it picks it up and sends it",
    "start": "3582160",
    "end": "3589119"
  },
  {
    "text": "out to all of its users yes sir",
    "start": "3589119",
    "end": "3594880"
  },
  {
    "text": "i'm sorry say that a little ladder that's a great question the signalr guarantee message deliverability no",
    "start": "3596960",
    "end": "3604799"
  },
  {
    "text": "actually have a whole article on it on my site um there's not a mechanism in",
    "start": "3604799",
    "end": "3610079"
  },
  {
    "text": "signalr to that can acknowledge messages coming back and forth between the servers and",
    "start": "3610079",
    "end": "3615920"
  },
  {
    "text": "the clients the best you can do is the clients can",
    "start": "3615920",
    "end": "3621520"
  },
  {
    "text": "can get an acknowledgement from the server that it successfully sent a message upstream but there's no acknowledgement of the",
    "start": "3621520",
    "end": "3628160"
  },
  {
    "text": "server sending messages down to clients that's because connections are finicky",
    "start": "3628160",
    "end": "3634400"
  },
  {
    "text": "if i'm a websocket and a websocket gets disconnected i kind i know about that immediately",
    "start": "3634400",
    "end": "3641440"
  },
  {
    "text": "but if i'm using server sent events or long polling i might not know about that disconnection for up to 15 minutes after",
    "start": "3641440",
    "end": "3648319"
  },
  {
    "text": "it's occurred and how many thousands of messages could have potentially been sent in that time",
    "start": "3648319",
    "end": "3655839"
  },
  {
    "text": "so signalr doesn't guarantee it their documentation says they don't guarantee it it's more",
    "start": "3655839",
    "end": "3661520"
  },
  {
    "text": "it needs to be used as a pub sub so you're just yelling out into",
    "start": "3661520",
    "end": "3666559"
  },
  {
    "text": "the out into the world that something's happened and whoever needs to listen for that message listens for it but not",
    "start": "3666559",
    "end": "3674079"
  },
  {
    "text": "necessarily there's no acknowledgement model",
    "start": "3674079",
    "end": "3679640"
  },
  {
    "text": "yep the the big thing we do is that we uh",
    "start": "3684079",
    "end": "3690880"
  },
  {
    "text": "we look at connection events so i get an event on both the client and the server",
    "start": "3690880",
    "end": "3696559"
  },
  {
    "text": "when a connection gets cut the client's most important because the client's going to know if it's",
    "start": "3696559",
    "end": "3702079"
  },
  {
    "text": "disconnected before the server does when the client gets connect disconnected",
    "start": "3702079",
    "end": "3707920"
  },
  {
    "text": "gets severed it's immediately going to attempt to reconnect there's automatic reconnection built into well not built",
    "start": "3707920",
    "end": "3714799"
  },
  {
    "text": "in you have to turn it on so automatically try to reconnect when but as soon as it's disconnected",
    "start": "3714799",
    "end": "3722400"
  },
  {
    "text": "we put up a message that says you're disconnected we don't know what the",
    "start": "3722400",
    "end": "3727520"
  },
  {
    "text": "current data is it's it's a big warning as soon as a reconnection occurs",
    "start": "3727520",
    "end": "3732960"
  },
  {
    "text": "which usually it does it reconnects right away as soon as a reconnection occurs we",
    "start": "3732960",
    "end": "3738480"
  },
  {
    "text": "assume all of our local state is bad and we immediately go to the server and says i need",
    "start": "3738480",
    "end": "3744480"
  },
  {
    "text": "fresh state pretend i just loaded i need everything i might need to know and we",
    "start": "3744480",
    "end": "3749520"
  },
  {
    "text": "invalidate everything on the client the cert in the server",
    "start": "3749520",
    "end": "3755359"
  },
  {
    "text": "because the server might still be trying to send me messages and those messages may or may not be",
    "start": "3755359",
    "end": "3760720"
  },
  {
    "text": "getting through so we put it on the client to reestablish the state of the page as it",
    "start": "3760720",
    "end": "3766799"
  },
  {
    "text": "needs to be yeah definitely",
    "start": "3766799",
    "end": "3772160"
  },
  {
    "text": "oh so um uh so the question is that then first that i'm maintaining state on",
    "start": "3780319",
    "end": "3786480"
  },
  {
    "text": "the clients if i have to go back and ask the server for for new snapshot yes yeah so if i go",
    "start": "3786480",
    "end": "3793280"
  },
  {
    "text": "back to livecad i'll just use livecat as an example and i'm a moment over my time",
    "start": "3793280",
    "end": "3800400"
  },
  {
    "text": "so we are maintaining all this local state at the moment uh so i'm using vue.js underneath the scenes with vuex",
    "start": "3800400",
    "end": "3807119"
  },
  {
    "text": "for save management oh see it just refreshed um",
    "start": "3807119",
    "end": "3812319"
  },
  {
    "text": "when i get disconnected for any way any reason as soon as i reconnect i do throw all",
    "start": "3812319",
    "end": "3818319"
  },
  {
    "text": "this away and i go to the server and we have a process we call it a resync i'll say i",
    "start": "3818319",
    "end": "3824640"
  },
  {
    "text": "am looking at this configuration please tell me",
    "start": "3824640",
    "end": "3830000"
  },
  {
    "text": "everything i need to know like don't assume i have any information as soon as i get that resync",
    "start": "3830000",
    "end": "3836559"
  },
  {
    "text": "i start listening for updates um and we just go back into the cycle we had before now for mission critical",
    "start": "3836559",
    "end": "3843760"
  },
  {
    "text": "stuff like this we also have a sub process every couple minutes we'll just do a check in",
    "start": "3843760",
    "end": "3850160"
  },
  {
    "text": "to make sure that we have the current state of the application um we we just assume",
    "start": "3850160",
    "end": "3856559"
  },
  {
    "text": "we just assume local states gonna go might get disrupted for any reason",
    "start": "3856559",
    "end": "3862720"
  },
  {
    "text": "that never happens unless you have a disconnection event and then you know about it",
    "start": "3862720",
    "end": "3868720"
  },
  {
    "text": "um we just we do it as a sanity check just in case uh but you don't it's not",
    "start": "3868720",
    "end": "3874880"
  },
  {
    "text": "necessary um yep stuff's updating oh it's going flash",
    "start": "3874880",
    "end": "3880720"
  },
  {
    "text": "right on it so this is what happens in a firehouse during an emergency um so some trucks get dispatched and",
    "start": "3880720",
    "end": "3888079"
  },
  {
    "text": "hopefully they go put that fire out did that answer your question yes sir",
    "start": "3888079",
    "end": "3895838"
  },
  {
    "text": "yes",
    "start": "3896960",
    "end": "3899200"
  },
  {
    "text": "theoretically the the roslin analyzers for async await should",
    "start": "3904079",
    "end": "3909599"
  },
  {
    "text": "catch it because it's returning a task so it should identify hey we're returning a task",
    "start": "3909599",
    "end": "3915520"
  },
  {
    "text": "obviously you'll want to wait on this uh in that particular case i don't think they had the analyzers turned on or they were",
    "start": "3915520",
    "end": "3922400"
  },
  {
    "text": "ignoring that one yes steve",
    "start": "3922400",
    "end": "3926640"
  },
  {
    "text": "you could just return a task yeah you did yeah you actually don't have to do the await yourself you can",
    "start": "3933280",
    "end": "3939200"
  },
  {
    "text": "just return the task",
    "start": "3939200",
    "end": "3942160"
  },
  {
    "text": "so yeah one more time",
    "start": "3946559",
    "end": "3950119"
  },
  {
    "text": "i don't remember off top of my head",
    "start": "3953039",
    "end": "3956319"
  },
  {
    "text": "all right friends well i'll stick around for a moment if you have any other questions but thank you all for coming out",
    "start": "3958799",
    "end": "3965160"
  }
]