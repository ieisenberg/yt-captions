[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "okay so welcome to my talk called modern",
    "start": "920",
    "end": "5970"
  },
  {
    "text": "web vulnerabilities 2020 so for those of you who don't know me I'm Alan I work at",
    "start": "5970",
    "end": "12750"
  },
  {
    "text": "a company called Blanc where I mostly do development but I also do a bit of security testing I do a bit of bug",
    "start": "12750",
    "end": "19109"
  },
  {
    "text": "bounty hunting a bit too little lately basically but and I also build some open security tools like recharges and I do a",
    "start": "19109",
    "end": "27420"
  },
  {
    "text": "lot of security stuff some was also the head of tea or was Norway chapter and there you also have my Twitter hand so",
    "start": "27420",
    "end": "34370"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "two years ago I was here at NDC security and I did a tour called modern web application bugs and the idea about the",
    "start": "34370",
    "end": "41160"
  },
  {
    "text": "fur for that talk was I would look kind of outside of the OS top-10 because those are known to most people and I",
    "start": "41160",
    "end": "47520"
  },
  {
    "text": "wanted to find some other types of bugs that were interesting and the were gaining traction in in bug bounty",
    "start": "47520",
    "end": "54480"
  },
  {
    "text": "programs but we're lesser-known to people and these are the kind of things that I went through in in that talk and",
    "start": "54480",
    "end": "61879"
  },
  {
    "text": "it's interesting to see because from from when I started creating that talk and until it was ready to of these",
    "start": "61879",
    "end": "68189"
  },
  {
    "text": "things had actually been included interior was top ten because there was a new one coming out like during that time",
    "start": "68189",
    "end": "73790"
  },
  {
    "text": "and that was xxe and insecurity",
    "start": "73790",
    "end": "79110"
  },
  {
    "text": "serialization now we've seen some things",
    "start": "79110",
    "end": "84210"
  },
  {
    "text": "happening to these bugs since then one of the things that we saw is that attack",
    "start": "84210",
    "end": "89670"
  },
  {
    "text": "stick they keep getting better so this was one of those things where xxe was",
    "start": "89670",
    "end": "95159"
  },
  {
    "text": "actually a problem in in an editor so envious code if you had a vyas code installed and you would open an XML file",
    "start": "95159",
    "end": "101790"
  },
  {
    "text": "it would actually be parsed every time you were opening and saving the file and it would do xxe which was pretty bad",
    "start": "101790",
    "end": "108390"
  },
  {
    "text": "similarly we see in Security Service ation attacks there have been a lot of new findings so these are tree the three",
    "start": "108390",
    "end": "116219"
  },
  {
    "start": "109000",
    "end": "109000"
  },
  {
    "text": "things that I found recently in in a blog post about newer types of bugs where we see things like remote code",
    "start": "116219",
    "end": "122790"
  },
  {
    "text": "execution in Tulare we see all kinds of dotnet related stuff and the previous",
    "start": "122790",
    "end": "128039"
  },
  {
    "text": "research has been a lot around Java for instance but now we see this is this has",
    "start": "128039",
    "end": "133290"
  },
  {
    "text": "been bro modern into in the node into PHP into Java into everything similarly s srf a",
    "start": "133290",
    "end": "140819"
  },
  {
    "start": "139000",
    "end": "139000"
  },
  {
    "text": "server-side request forgery there's been a lot of research done there as well we see some interesting",
    "start": "140819",
    "end": "146909"
  },
  {
    "text": "things like protocol smuggling so what that means is you send in something over one protocol but then in the next hop",
    "start": "146909",
    "end": "153180"
  },
  {
    "text": "where it gets sent to a different server you're kind of using a different protocol so you're kind of smuggling one",
    "start": "153180",
    "end": "158909"
  },
  {
    "text": "protocol inside of another but well the idea about the talk was to talk about",
    "start": "158909",
    "end": "165359"
  },
  {
    "text": "things that I saw in bug bounty programs but SS RAF has also been used in a",
    "start": "165359",
    "end": "170730"
  },
  {
    "text": "real-life attacks so we saw this thing Capital One hack and it's I'm not sure",
    "start": "170730",
    "end": "176939"
  },
  {
    "text": "if it's confirmed that this was necessary F but at least what we're saying is that this person you used a",
    "start": "176939",
    "end": "183959"
  },
  {
    "text": "Saussure F to steal some AWS keys and then downloaded a data for over a",
    "start": "183959",
    "end": "189840"
  },
  {
    "text": "hundred million customers and so this was a pretty big attack and highlights",
    "start": "189840",
    "end": "196260"
  },
  {
    "text": "how dangerous SSRS can be because you can you can use it to sort of browse",
    "start": "196260",
    "end": "201299"
  },
  {
    "text": "internal server steal things off them and then use that as the next step in the attack if we go to the bug bounty",
    "start": "201299",
    "end": "208590"
  },
  {
    "text": "statistics this is from bug crowds report and here we see at the top we see",
    "start": "208590",
    "end": "215849"
  },
  {
    "text": "cross-site scripting and that's no surprise to people in the industry because of course that scripting is",
    "start": "215849",
    "end": "221750"
  },
  {
    "text": "really really prevalent everywhere we see it all the time we see a lot of reports on on cross-site scripting and",
    "start": "221750",
    "end": "228870"
  },
  {
    "text": "we also see some other things here like insecure direct object references were basically broken access control we see",
    "start": "228870",
    "end": "234239"
  },
  {
    "text": "problems with session management we also see number six era cross-site request forgery which was in infesting Lee",
    "start": "234239",
    "end": "240870"
  },
  {
    "text": "enough it was removed together with five from the OS top ten in the last revision",
    "start": "240870",
    "end": "245900"
  },
  {
    "text": "but these are the kind of things we see there if we go to the other big platform",
    "start": "245900",
    "end": "251579"
  },
  {
    "text": "hacker one they have this these part types of statistics in their report and",
    "start": "251579",
    "end": "256579"
  },
  {
    "text": "again we see cross-site scripting on the top there with in this case it's divided by industry so we can see the",
    "start": "256579",
    "end": "262770"
  },
  {
    "text": "transportation still has issues with cross-site scripting one interesting thing that popped up when I was browsing this report was this",
    "start": "262770",
    "end": "269790"
  },
  {
    "text": "line so we see actually server side request forgery is now prevalent enough to make it into the report and across",
    "start": "269790",
    "end": "277470"
  },
  {
    "text": "all of them so we see the healthcare they have a bit of a higher percentage than the other ones but it's like 1",
    "start": "277470",
    "end": "284430"
  },
  {
    "text": "percent 1 percent 3 percent 4 percent but it's obviously big enough now that this makes impact but I wanted to bring",
    "start": "284430",
    "end": "293580"
  },
  {
    "text": "you something new today I don't want to talk about the things that that I spoke about last year I've been asked this",
    "start": "293580",
    "end": "298590"
  },
  {
    "text": "multiple times actually are you gonna do like it's just the same talk that we did last time and of course it's not I'm",
    "start": "298590",
    "end": "303690"
  },
  {
    "text": "gonna talk about new things so um what I'm going to do is I'm going to pick four different vulnerabilities and I'm",
    "start": "303690",
    "end": "310950"
  },
  {
    "text": "going to try to explain what they are and how they work I'm gonna do a live demo of each of them which of course",
    "start": "310950",
    "end": "317700"
  },
  {
    "text": "might break and I don't have a video backup because I'm that stupid so you'll",
    "start": "317700",
    "end": "323430"
  },
  {
    "text": "have to live with maybe one of the demos failing so the first thing is something",
    "start": "323430",
    "end": "329340"
  },
  {
    "text": "called ESI injection so ESI injection is",
    "start": "329340",
    "end": "334440"
  },
  {
    "start": "333000",
    "end": "333000"
  },
  {
    "text": "around edge side includes so it's something we see in in proxies so gonna",
    "start": "334440",
    "end": "340140"
  },
  {
    "text": "try to explain what it is but basically this allows us to cache fragments of pages and templates and then combine",
    "start": "340140",
    "end": "345270"
  },
  {
    "text": "them in a proxy so we can have more effective caching so this could be such",
    "start": "345270",
    "end": "351930"
  },
  {
    "text": "a template so we see we have some HTML here and then we have these ESI tags yes",
    "start": "351930",
    "end": "357210"
  },
  {
    "text": "I include and so what what the reverse proxy will do it will it will find these",
    "start": "357210",
    "end": "363210"
  },
  {
    "text": "tags and it will make HTTP queries to look up each certain and cache them individually so and then can then",
    "start": "363210",
    "end": "369300"
  },
  {
    "text": "combine them into a HTML before returning it to the user so from sort of",
    "start": "369300",
    "end": "375000"
  },
  {
    "start": "374000",
    "end": "374000"
  },
  {
    "text": "a more schematic view we have our browser the browser sends one request to the reverse proxy and the reverse proxy",
    "start": "375000",
    "end": "381900"
  },
  {
    "text": "in this case sends four requests to the backend because we have the template itself and then these three requests",
    "start": "381900",
    "end": "388920"
  },
  {
    "text": "that it needs to make so from this perspective it looks like it's it's even",
    "start": "388920",
    "end": "393990"
  },
  {
    "text": "sending more requests than has to but now it can cache them individually so it can reuse each of the responses in the",
    "start": "393990",
    "end": "399810"
  },
  {
    "text": "front pages so it actually becomes a lot more efficient and in the template it only needs to fetch that once etc etc so",
    "start": "399810",
    "end": "408990"
  },
  {
    "text": "here's here's a simple demo of that we we can send in a requests and what you see at the top is the rendered HTML what",
    "start": "408990",
    "end": "415620"
  },
  {
    "text": "you see at the bottom is the raw response so we've now taken this this template we've passed we've loaded it",
    "start": "415620",
    "end": "422340"
  },
  {
    "text": "from our back-end web server through a proxy the proxy sees these es I include tax and it goes and resolves a system",
    "start": "422340",
    "end": "429060"
  },
  {
    "text": "and includes data in the rendered HTML so as an end user we don't see any of",
    "start": "429060",
    "end": "434220"
  },
  {
    "text": "these ESI tags so everything is fine this is this is a an efficient way of",
    "start": "434220",
    "end": "439830"
  },
  {
    "text": "caching fragments but the problem is that this also allows for different",
    "start": "439830",
    "end": "445919"
  },
  {
    "text": "types of attacks so there are a couple of guys from from go secure they were",
    "start": "445919",
    "end": "450990"
  },
  {
    "text": "looking a bit into this in different types of reverse proxies and how they were handling different types of tags",
    "start": "450990",
    "end": "456180"
  },
  {
    "text": "looking at how this could be abused as an attacker so as you can see they had they published one blog post in 2018 and",
    "start": "456180",
    "end": "462990"
  },
  {
    "text": "then a new one in May last year where they kind of building on their previous research so ESI injection is basically",
    "start": "462990",
    "end": "472200"
  },
  {
    "text": "if an attacker is able to inject these ESI tags so if I can send something to",
    "start": "472200",
    "end": "478050"
  },
  {
    "text": "the backend and have it return an es ID tag then I can affect how the reverse",
    "start": "478050",
    "end": "483630"
  },
  {
    "text": "proxy will handle my requests so this could be either injecting a tag or it",
    "start": "483630",
    "end": "488729"
  },
  {
    "text": "could be actually uploading a file that can change the nearside time so let's do a schematic of that as well so we have",
    "start": "488729",
    "end": "495030"
  },
  {
    "text": "our browser and we have our reverse proxy and we have our back-end so the request comes in it loads some kind of a",
    "start": "495030",
    "end": "503039"
  },
  {
    "text": "page which is returned and this time it has been modified by the attacker maybe by injecting something and ends up",
    "start": "503039",
    "end": "510990"
  },
  {
    "text": "making a new request to something that wasn't intended so it's kind of like",
    "start": "510990",
    "end": "516360"
  },
  {
    "text": "server side request for jury were somehow able to make one of the back-end systems make a request that wasn't",
    "start": "516360",
    "end": "521640"
  },
  {
    "text": "intended and include that and then return it to the end user",
    "start": "521640",
    "end": "528080"
  },
  {
    "text": "on this server that I'm running I have an Apache server status page if I try to",
    "start": "530370",
    "end": "538110"
  },
  {
    "text": "load that directly from the browser it's gonna say not found because I don't want expose that to the outside this is only",
    "start": "538110",
    "end": "544410"
  },
  {
    "text": "available internally it's a Status page where it lists a lot of URLs and things and I don't want anyone outside to be",
    "start": "544410",
    "end": "550140"
  },
  {
    "text": "able to see it but our trusted hacker he",
    "start": "550140",
    "end": "555960"
  },
  {
    "text": "tries to do something clever so he tries to upload a PNG and in this PNG in the",
    "start": "555960",
    "end": "561390"
  },
  {
    "text": "metadata of the image in the EXIF information the the attacker has included one of these ESI tags and in",
    "start": "561390",
    "end": "568410"
  },
  {
    "text": "this case the ESI tags tries to include the server status page and this time from the inside from internal so it",
    "start": "568410",
    "end": "574620"
  },
  {
    "text": "should be able to reach it so let's try this we have maybe this on this weather",
    "start": "574620",
    "end": "579810"
  },
  {
    "text": "side we could like upload pictures of what's the weather like in your area and we could upload files and the attacker",
    "start": "579810",
    "end": "585360"
  },
  {
    "text": "does so sense this in gets a PNG in return but in this case it was",
    "start": "585360",
    "end": "591180"
  },
  {
    "text": "unsuccessful so if we scroll down a bit we should be able to find the ESI tag",
    "start": "591180",
    "end": "596430"
  },
  {
    "text": "here and it wasn't processed because this was a binary file in this case the",
    "start": "596430",
    "end": "602250"
  },
  {
    "text": "reverse proxy was set up to not process those kinds of things so sad face not to",
    "start": "602250",
    "end": "607680"
  },
  {
    "text": "processed but what if they allow SVG files because SVG is our images right",
    "start": "607680",
    "end": "614460"
  },
  {
    "text": "what if we do this so what we're doing here is we're uploading an SVG file inside this SVG we have what's called a",
    "start": "614460",
    "end": "621660"
  },
  {
    "text": "foreign object a foreign object is basically something that's not the SVG but you can include it in there anyway and so we add a pre tag with the XHTML",
    "start": "621660",
    "end": "631020"
  },
  {
    "text": "namespace and we do AC data to basically escape what comes back from this service",
    "start": "631020",
    "end": "636780"
  },
  {
    "text": "status page so what happens if we run this through the reverse proxy so",
    "start": "636780",
    "end": "642780"
  },
  {
    "text": "uploaded as an attacker I've uploaded this to the server and then I try to read it back and in this case it works",
    "start": "642780",
    "end": "649470"
  },
  {
    "text": "like the yellow circle here that's the SVG that's the ellipse fill yellow thing",
    "start": "649470",
    "end": "656580"
  },
  {
    "text": "the first line here the rest of it is actually the service status so I was",
    "start": "656580",
    "end": "661920"
  },
  {
    "text": "able to make the reverse proxy GOM query for the service status page and included as a part of the image which is not exactly",
    "start": "661920",
    "end": "670050"
  },
  {
    "text": "what you would want so success on this",
    "start": "670050",
    "end": "676590"
  },
  {
    "text": "one great so the dangers of ESI injection is of course that we can inject content so we could in bring in",
    "start": "676590",
    "end": "683460"
  },
  {
    "start": "677000",
    "end": "677000"
  },
  {
    "text": "like say pages or images that would be included on on the site of someone who",
    "start": "683460",
    "end": "690570"
  },
  {
    "text": "didn't really want that type of imagery or that type of content on their site so sort of a defacement attack we could",
    "start": "690570",
    "end": "697050"
  },
  {
    "text": "include Java scripts so we could do across that scripting and we could of course steal content through us SRS so",
    "start": "697050",
    "end": "703800"
  },
  {
    "text": "like in this case I could steal a conference of the service status page or some of these reverse proxy they even",
    "start": "703800",
    "end": "711210"
  },
  {
    "text": "allow you to to grab cookies so you can specify HTTP cookie because you can kind of take things from the requests and",
    "start": "711210",
    "end": "717900"
  },
  {
    "text": "when you want to pass that on to the backend servers so in this case and this was figured out by by the guys from go",
    "start": "717900",
    "end": "724050"
  },
  {
    "text": "secure that you can sometimes steal cookies as well so how do we find and",
    "start": "724050",
    "end": "729780"
  },
  {
    "start": "728000",
    "end": "728000"
  },
  {
    "text": "stop this well we need to test with different types of files so in this case that tested with a PNG that didn't work",
    "start": "729780",
    "end": "736350"
  },
  {
    "text": "I tested with 8 an SVG and that worked so we can kind of test all these things and see what what happens what will be",
    "start": "736350",
    "end": "742590"
  },
  {
    "text": "processed if we have one of these reverse proxies so of course we should review the config of our reverse proxy",
    "start": "742590",
    "end": "749460"
  },
  {
    "text": "and see what is years I enabled if it is enabled what kind of content types are",
    "start": "749460",
    "end": "754590"
  },
  {
    "text": "processed etc etc we should of course make sure that you can't inject tags like you've",
    "start": "754590",
    "end": "761370"
  },
  {
    "text": "four normal cross-site scripting protection you can't inject the NEAs I tagged as your first name and then have",
    "start": "761370",
    "end": "767370"
  },
  {
    "text": "that processed on the way back but probably it's wise to use a scanner because this is a very generic attack it",
    "start": "767370",
    "end": "774060"
  },
  {
    "text": "should be easy for scanners to find this so I think burp suite for instance has support for finding these kinds of",
    "start": "774060",
    "end": "779550"
  },
  {
    "text": "things so that was ESI injection the",
    "start": "779550",
    "end": "785370"
  },
  {
    "text": "next thing we'll talk about is something called JavaScript prototype pollution",
    "start": "785370",
    "end": "791180"
  },
  {
    "start": "791000",
    "end": "791000"
  },
  {
    "text": "and the thing with prototype pollution is it kind of",
    "start": "791180",
    "end": "796259"
  },
  {
    "text": "it's about how JavaScript works so we a JavaScript objects they're not class-based or at least they didn't use to be class-based you have a class",
    "start": "796259",
    "end": "803040"
  },
  {
    "text": "keyword in new JavaScript but you didn't used to but the JavaScript objects have",
    "start": "803040",
    "end": "808439"
  },
  {
    "text": "what's called a prototype hierarchy so if if you try to look up a property on",
    "start": "808439",
    "end": "815100"
  },
  {
    "text": "an object it will check does this object have this property and if it doesn't it's gonna check the prototype so it's",
    "start": "815100",
    "end": "820859"
  },
  {
    "text": "kind of inheritance thing but not really so it's gonna check to the parent and it does the parent have this property and",
    "start": "820859",
    "end": "826739"
  },
  {
    "text": "it's gonna keep looking up until it reaches the end and if it doesn't find it it returns null or undefined but if",
    "start": "826739",
    "end": "831929"
  },
  {
    "text": "it finds it on any of the parents then it's gonna be turn it so this is",
    "start": "831929",
    "end": "836939"
  },
  {
    "start": "835000",
    "end": "835000"
  },
  {
    "text": "something we typically used earlier before we got the class keyword in JavaScript we would would use the",
    "start": "836939",
    "end": "842369"
  },
  {
    "text": "prototype to build objects like this so we create a function called lager and",
    "start": "842369",
    "end": "847649"
  },
  {
    "text": "then we modify the prototype and add Phung functions to the prototype so that",
    "start": "847649",
    "end": "854039"
  },
  {
    "text": "when when we later create an instance of lager we would have the functions that we defined so we can see how that works",
    "start": "854039",
    "end": "862529"
  },
  {
    "text": "so we we create a new lager and then we check the prototype of the lagering we",
    "start": "862529",
    "end": "869429"
  },
  {
    "text": "can do this with underscore underscore proto underscore underscore that that gives us the prototype of this object so",
    "start": "869429",
    "end": "875579"
  },
  {
    "text": "this is gonna be the the lager the prototype of the lager so it has the info warning one functions that we",
    "start": "875579",
    "end": "882929"
  },
  {
    "text": "defined here it also has a constructor which is the one we invoked at the first line here if we go lager prototype that",
    "start": "882929",
    "end": "891149"
  },
  {
    "start": "884000",
    "end": "884000"
  },
  {
    "text": "also returns the same thing so lager an instance where we do underscore",
    "start": "891149",
    "end": "896399"
  },
  {
    "text": "underscore proto it will of course be the same as the lager prototype those are the same thing if we ask the lager",
    "start": "896399",
    "end": "904019"
  },
  {
    "text": "what its prototype is then that's going to be the function so the function is",
    "start": "904019",
    "end": "909239"
  },
  {
    "text": "the is then the prototype of this thing if we go if you use a string and we ask",
    "start": "909239",
    "end": "915509"
  },
  {
    "text": "what's the prototype of a string it's gonna say well that's the string prototype which has length and all these other types of functions and and product",
    "start": "915509",
    "end": "922859"
  },
  {
    "text": "and properties on it so yeah and of course if you do string dot prototype",
    "start": "922859",
    "end": "928859"
  },
  {
    "text": "that's going to be the same if we do string dot prototype roto that",
    "start": "928859",
    "end": "935869"
  },
  {
    "text": "gives us the object prototype so the object prototype is one is one higher in",
    "start": "935869",
    "end": "942769"
  },
  {
    "text": "the in the prototype hierarchy so that's gonna be the object prototype and it has some other types of functions like has",
    "start": "942769",
    "end": "949970"
  },
  {
    "text": "own property defined setter etcetera and yeah same thing here and we can see that",
    "start": "949970",
    "end": "955670"
  },
  {
    "text": "logger because they're both functions they also have the same prototype the function prototype prototypes supposed",
    "start": "955670",
    "end": "966709"
  },
  {
    "start": "962000",
    "end": "962000"
  },
  {
    "text": "to many other programming languages this step prototypes are mutable so there's even a JavaScript framework called",
    "start": "966709",
    "end": "972049"
  },
  {
    "text": "prototype that was using this feature a lot and this is often used to backport features in JavaScript so for instance",
    "start": "972049",
    "end": "978199"
  },
  {
    "text": "here we're adding the flat map function to the array if we're using like an old version of JavaScript that doesn't have",
    "start": "978199",
    "end": "983779"
  },
  {
    "text": "flat map we can have it using these kinds of things so what it does here is it checks if it has the function and if",
    "start": "983779",
    "end": "989629"
  },
  {
    "text": "it doesn't then it adds a new function to the prototype so once we've done that we can kind of use this so in this case",
    "start": "989629",
    "end": "995569"
  },
  {
    "text": "we have a variable a which contains the string monkey if we do a total o that's",
    "start": "995569",
    "end": "1003309"
  },
  {
    "text": "undefined and then if we add hello to the object prototype so not to the",
    "start": "1003309",
    "end": "1009490"
  },
  {
    "text": "string prototype but to the object prototype so one higher up in the hierarchy if we now do a dot hello it's",
    "start": "1009490",
    "end": "1017230"
  },
  {
    "text": "gonna say world so hello world because basically it now checks the the string",
    "start": "1017230",
    "end": "1023649"
  },
  {
    "text": "object which contains monkey and checks does this thing have a hello now it doesn't okay so I'm going to check it",
    "start": "1023649",
    "end": "1028808"
  },
  {
    "text": "the next which is the the object or next one in the prototype hierarchy which is the object an object does have a",
    "start": "1028809",
    "end": "1034569"
  },
  {
    "text": "property called hello so we can we can find it further up and now we've added it to everything so we've kind of",
    "start": "1034569",
    "end": "1040839"
  },
  {
    "text": "contaminated the whole thing so even even an array now has stuff hello a number has dot hello and we can even do",
    "start": "1040839",
    "end": "1048909"
  },
  {
    "text": "a dot hello dot hello because a dog hello returns the string and the string also has de hello so you can go on as",
    "start": "1048909",
    "end": "1056470"
  },
  {
    "text": "long as you want basically very useful some of the things we're often doing in",
    "start": "1056470",
    "end": "1063560"
  },
  {
    "start": "1061000",
    "end": "1061000"
  },
  {
    "text": "in when we're writing JavaScript code is we we have these defaults as an object so in this case we have time at hundred",
    "start": "1063560",
    "end": "1070130"
  },
  {
    "text": "and we've stored at in defaults and then we allow the users of this API to override the values so we take in",
    "start": "1070130",
    "end": "1078260"
  },
  {
    "text": "options which is by default an empty array and then we merge the defaults and the options into settings and that's the",
    "start": "1078260",
    "end": "1084950"
  },
  {
    "text": "object we're using so any user of low data can specify this options object and say timeout is thousand milliseconds",
    "start": "1084950",
    "end": "1091940"
  },
  {
    "text": "instead of a hundred and then we'll use that because we'll kind of override what's in defaults and create a new object with these values other things",
    "start": "1091940",
    "end": "1100010"
  },
  {
    "text": "that we're doing a lot in javascript is truthiness so three dienes is a way to check if something is set so in this",
    "start": "1100010",
    "end": "1107690"
  },
  {
    "text": "case some object dot some key if that has a value and it's not false and it's not zero and some other things is this",
    "start": "1107690",
    "end": "1114800"
  },
  {
    "text": "is gonna return true so if it's if some key here is an object it's gonna return true so if some or some object dot some",
    "start": "1114800",
    "end": "1122030"
  },
  {
    "text": "key contains something it's usually gonna run what's inside the if and the the second if here does the exact same",
    "start": "1122030",
    "end": "1129080"
  },
  {
    "text": "thing it just does to look up a bit differently and these things are often",
    "start": "1129080",
    "end": "1134210"
  },
  {
    "text": "the reason why we end up in these two things together are some of the reasons",
    "start": "1134210",
    "end": "1139490"
  },
  {
    "text": "why we get these problems with prototype illusion if you're able to influence the",
    "start": "1139490",
    "end": "1145910"
  },
  {
    "text": "options object in this case and merge does a poor job of filtering out bad stuff or if you're able to do some",
    "start": "1145910",
    "end": "1153200"
  },
  {
    "text": "object and then control the value of a and B and value that means you probably have prototype pollution so in this case",
    "start": "1153200",
    "end": "1162200"
  },
  {
    "text": "we have a piece of code this is a node.js application we can we can do put to an IDE and to update a document and",
    "start": "1162200",
    "end": "1169420"
  },
  {
    "text": "as you can see on the the bold line here in the center it says let update a doc",
    "start": "1169420",
    "end": "1174560"
  },
  {
    "text": "equal underscore dot merge the document that we have locally with what comes in",
    "start": "1174560",
    "end": "1181040"
  },
  {
    "text": "in the body of the request so we perfectly control the request body as an attacker so here we are able to",
    "start": "1181040",
    "end": "1188000"
  },
  {
    "text": "influence this and the reason I'm using underscore here is because underscore had a prototype illusion in",
    "start": "1188000",
    "end": "1193789"
  },
  {
    "text": "merge function so let's see how that works so we have this this nice little application we can go to Who am I and",
    "start": "1193789",
    "end": "1200239"
  },
  {
    "text": "because we have a we we get a session on this s username is anonymous you are",
    "start": "1200239",
    "end": "1206690"
  },
  {
    "text": "you're not logged in as anyone so we can keep sending this nothing happens but we",
    "start": "1206690",
    "end": "1212389"
  },
  {
    "text": "can then start to maybe send in a blob so we're gonna send in data I call on",
    "start": "1212389",
    "end": "1217639"
  },
  {
    "text": "hello and now we get a an object down here and it says ID 11 if I send a new",
    "start": "1217639",
    "end": "1225409"
  },
  {
    "text": "one it gets a new ID so I can send keep sending in these blobs and we're gonna get new ones and I can fetch one of",
    "start": "1225409",
    "end": "1234799"
  },
  {
    "text": "these blobs so if I add a one or an ID of whatever object I just created up",
    "start": "1234799",
    "end": "1240830"
  },
  {
    "text": "here we can we can return one of the the things that we've stored on the server",
    "start": "1240830",
    "end": "1246849"
  },
  {
    "text": "the more interesting thing is what how can we use this as a part of a prototype",
    "start": "1246849",
    "end": "1252679"
  },
  {
    "text": "pollution attacks so what were you seeing here is what I'm doing now is I'm doing data hello and then underscore",
    "start": "1252679",
    "end": "1258529"
  },
  {
    "text": "underscore proto and then I say polluted and then user name admin so what does",
    "start": "1258529",
    "end": "1264859"
  },
  {
    "text": "this do then I'm gonna do I'm gonna add a new thing but I'm gonna also pollute the prototype at the same time",
    "start": "1264859",
    "end": "1271629"
  },
  {
    "text": "interesting let's send this in and if you look at the response now there's no",
    "start": "1271629",
    "end": "1276769"
  },
  {
    "text": "sign of the proto it disappeared there's nothing here we have an ID we have a created and we have the data we sent in",
    "start": "1276769",
    "end": "1283249"
  },
  {
    "text": "but there's no sign of the prototype so did it work or did it not was it filtered out well what happens if we now",
    "start": "1283249",
    "end": "1289970"
  },
  {
    "text": "try to ask for polluted so polluted as you may be remember that was the first",
    "start": "1289970",
    "end": "1296690"
  },
  {
    "text": "key of the prototype so what happens if we ask for polluted now huh it returns",
    "start": "1296690",
    "end": "1303440"
  },
  {
    "text": "the object we sent in username admin so maybe when it tries to look up a document with the ID given in the URL",
    "start": "1303440",
    "end": "1310460"
  },
  {
    "text": "it's looking up now and in its finds the thing that was was polluted instead of",
    "start": "1310460",
    "end": "1318139"
  },
  {
    "text": "an actual ID can we use this in a different way what have you set the",
    "start": "1318139",
    "end": "1324320"
  },
  {
    "text": "session ID to polluted and called The Who am I function again",
    "start": "1324320",
    "end": "1330139"
  },
  {
    "text": "username admin so we're now able to pollute we polluted the objects in this",
    "start": "1330139",
    "end": "1336269"
  },
  {
    "text": "case we polluted the object itself so now any lookups on arrays or maps on the",
    "start": "1336269",
    "end": "1341370"
  },
  {
    "text": "server they would actually now return things that were on the object prototype instead of the actual object where the",
    "start": "1341370",
    "end": "1347700"
  },
  {
    "text": "sessions or the documents were so this is kind of a contrived example which",
    "start": "1347700",
    "end": "1353730"
  },
  {
    "text": "which I created where we're kind of looking up things in in simple in simple objects on in JavaScript and it's it's",
    "start": "1353730",
    "end": "1361950"
  },
  {
    "start": "1360000",
    "end": "1360000"
  },
  {
    "text": "really interesting to see what this can be used for because if you can pollute the prototype you can start overwriting things so it's a really easy path to",
    "start": "1361950",
    "end": "1369299"
  },
  {
    "text": "denial-of-service what if you overwrite the to string function with just a string it's not gonna work because the",
    "start": "1369299",
    "end": "1375629"
  },
  {
    "text": "JavaScript is gonna try to call that string as a function it's gonna fail and this would typically mean the",
    "start": "1375629",
    "end": "1380639"
  },
  {
    "text": "application will crash we can also overwrite framework functions and we can do all kinds of things on the client",
    "start": "1380639",
    "end": "1386820"
  },
  {
    "text": "side this is often used for cross-site scripting because we can start overwriting things and and make things",
    "start": "1386820",
    "end": "1392370"
  },
  {
    "text": "return things one that wasn't supposed to but sometimes we can even get remote code execution so mica Penkovsky of",
    "start": "1392370",
    "end": "1401759"
  },
  {
    "text": "security term he was looking at a CDE on Cabana and he's written a really nice",
    "start": "1401759",
    "end": "1410850"
  },
  {
    "text": "blog post about it and also published some slides and I I decided I wanted to try to reproduce what he was doing so",
    "start": "1410850",
    "end": "1417200"
  },
  {
    "text": "this is this is actually Cabana this is not an image this is actually a Cabana",
    "start": "1417200",
    "end": "1422519"
  },
  {
    "text": "in in this iframe and here I have what's",
    "start": "1422519",
    "end": "1428669"
  },
  {
    "text": "called a tight emilion so you can I'm not exactly sure what it's used for oh yeah invalid cookie header time to get",
    "start": "1428669",
    "end": "1436379"
  },
  {
    "text": "that once I start polluting things I'm just gonna delete the cookies this happened earlier today as well so",
    "start": "1436379",
    "end": "1442769"
  },
  {
    "text": "luckily I know what's wrong let's try again and just refresh this",
    "start": "1442769",
    "end": "1449009"
  },
  {
    "text": "page and now I can do this I can modify",
    "start": "1449009",
    "end": "1454850"
  },
  {
    "text": "just add some some random text here you can see that it's updated in the picture below and what what what was figured out was",
    "start": "1454850",
    "end": "1463090"
  },
  {
    "text": "that this field here was a place that we could do prototype pollution because we",
    "start": "1463090",
    "end": "1469000"
  },
  {
    "text": "could do label dot proto and then start",
    "start": "1469000",
    "end": "1475480"
  },
  {
    "text": "polluting the prototype and just send that in it's not going to do that from this page I'm gonna do it from this page",
    "start": "1475480",
    "end": "1481120"
  },
  {
    "text": "because what I'm doing here is I'm using what what McHale found and I'm gonna",
    "start": "1481120",
    "end": "1486789"
  },
  {
    "text": "inject some stuff I'm gonna explain what's happening here in just a second the first thing I'm gonna do though is",
    "start": "1486789",
    "end": "1493720"
  },
  {
    "text": "I'm gonna bring up a little console here you can see I'm gonna listen on port 1 3",
    "start": "1493720",
    "end": "1500049"
  },
  {
    "text": "3 7 and if you if you look here it says",
    "start": "1500049",
    "end": "1505419"
  },
  {
    "text": "dev the tcp evil dot hacker 1 3 3 7 so that's that's going gonna go to this",
    "start": "1505419",
    "end": "1511870"
  },
  {
    "text": "shell that I just said and I'm gonna remove this X because if I had that there it would actually trigger it all",
    "start": "1511870",
    "end": "1517570"
  },
  {
    "text": "the time and it wouldn't be I couldn't wouldn't be able to show you the previous page because it kind of breaks things so I'm gonna do this I'm gonna",
    "start": "1517570",
    "end": "1524500"
  },
  {
    "text": "hit the play button and as you can see now in the image it says object object instead of a string now the interesting",
    "start": "1524500",
    "end": "1532360"
  },
  {
    "text": "thing is what happens when I press this canvas button so that starts loading and",
    "start": "1532360",
    "end": "1537880"
  },
  {
    "text": "things are just yeah what happened here Oh Cabana and Cabana and here comes the",
    "start": "1537880",
    "end": "1547269"
  },
  {
    "text": "most interesting thing I'm gonna quit this shell so now I'm back at my evil attacker server I'm gonna start the",
    "start": "1547269",
    "end": "1553870"
  },
  {
    "text": "listener again watch what happens now pam-pam it immediately comes back it's",
    "start": "1553870",
    "end": "1563529"
  },
  {
    "text": "like hey can you please hack me please come on do this it's amazing so what did",
    "start": "1563529",
    "end": "1571419"
  },
  {
    "text": "this attack actually do so what what me know figure out was in node if you do if",
    "start": "1571419",
    "end": "1578380"
  },
  {
    "text": "you add node options as an environment variable and you do - does require you",
    "start": "1578380",
    "end": "1584529"
  },
  {
    "text": "could add like you require in a Java Script as a part of that and so what",
    "start": "1584529",
    "end": "1590350"
  },
  {
    "text": "this this top line here does it says when note starts please bring in this",
    "start": "1590350",
    "end": "1595510"
  },
  {
    "text": "javascript file that's called proc self environ so proc self environment is the",
    "start": "1595510",
    "end": "1600910"
  },
  {
    "text": "processes own environment for our variables in Linux so it's like a it's like a file that just contains all the",
    "start": "1600910",
    "end": "1607140"
  },
  {
    "text": "all the variables as you can see downstairs and below here so when I start node and the reason why it's aaaa",
    "start": "1607140",
    "end": "1614860"
  },
  {
    "text": "is to make it start at the beginning of the environment variable it's gonna be the first one so you can see what",
    "start": "1614860",
    "end": "1621310"
  },
  {
    "text": "happens here it takes a console that log and adds a a a equals console that log",
    "start": "1621310",
    "end": "1626530"
  },
  {
    "text": "slash slash so comments out the rest so what happens when now it starts it brings in this file and Insadong well",
    "start": "1626530",
    "end": "1632980"
  },
  {
    "text": "AAA is a variable and I'm gonna run console log so you that's why you get the 1 2 3 up here so that's what that's",
    "start": "1632980",
    "end": "1641200"
  },
  {
    "text": "what me I used on this in this attack if",
    "start": "1641200",
    "end": "1646300"
  },
  {
    "text": "we go back here we see first he used the prototype to contaminate environment",
    "start": "1646300",
    "end": "1652270"
  },
  {
    "text": "variables of the process and added this required child process access bash and",
    "start": "1652270",
    "end": "1658210"
  },
  {
    "text": "then created a reverse shell to evil hacker 1 3 3 7 and then commented out",
    "start": "1658210",
    "end": "1664930"
  },
  {
    "text": "the rest and then he did another prototype pollution where he added this node options thing",
    "start": "1664930",
    "end": "1671470"
  },
  {
    "text": "and required this file it's a pretty neat attack it's a pretty pretty good",
    "start": "1671470",
    "end": "1676750"
  },
  {
    "text": "research I would say in a way to break Cubana in this way so how do we avoid",
    "start": "1676750",
    "end": "1683170"
  },
  {
    "start": "1682000",
    "end": "1682000"
  },
  {
    "text": "this kind of prototype pollution attacks well instead of using objects to store things like I did for the documents and",
    "start": "1683170",
    "end": "1689110"
  },
  {
    "text": "the sessions we can use map so map doesn't have the same problems with like",
    "start": "1689110",
    "end": "1694150"
  },
  {
    "text": "lookups because if you try to look at the key in a map it's not going to return what's in the prototypes or in",
    "start": "1694150",
    "end": "1699760"
  },
  {
    "text": "the hierarchy it's just gonna say do I have this key or not and if it doesn't then it's not gonna return anything we",
    "start": "1699760",
    "end": "1704880"
  },
  {
    "text": "can also use house owned property to check if a property belongs to the current object or if it maybe belongs",
    "start": "1704880",
    "end": "1712690"
  },
  {
    "text": "further up the prototype chain there's also a way to do freezing of prototype so we can say this prototype here you're",
    "start": "1712690",
    "end": "1719440"
  },
  {
    "text": "not supposed to be allowed to modify it anymore but this can be a problem because there might be some frameworks that you're",
    "start": "1719440",
    "end": "1726130"
  },
  {
    "text": "using that actually modifying the prototype because they're gonna add stuff to it",
    "start": "1726130",
    "end": "1731429"
  },
  {
    "text": "and we can of course use JSON schema validation to avoid like these underscore underscore proto things",
    "start": "1731429",
    "end": "1736720"
  },
  {
    "text": "coming in to begin with but try to use maps for instance for things that you",
    "start": "1736720",
    "end": "1742269"
  },
  {
    "text": "want to look up keys in so next thing",
    "start": "1742269",
    "end": "1748649"
  },
  {
    "text": "we're sorry this is a this is a report from hacker one nodejs third-party",
    "start": "1748649",
    "end": "1755409"
  },
  {
    "text": "modules so that's a program on actor one where you can report problems with",
    "start": "1755409",
    "end": "1761169"
  },
  {
    "text": "nodejs modules and that's actually a quite popular program they don't pay out any money to the people finding things",
    "start": "1761169",
    "end": "1767350"
  },
  {
    "text": "but it's a good way to like earn reputation in the hacker one space you can be invited into private Barney",
    "start": "1767350",
    "end": "1774460"
  },
  {
    "text": "programs so in this case there was a progr and no just called merge and up merge",
    "start": "1774460",
    "end": "1780190"
  },
  {
    "text": "had this exact problem that it would merge in prototypes it wouldn't like remove these underscore underscore proto",
    "start": "1780190",
    "end": "1785980"
  },
  {
    "text": "things when it was doing merging of objects first nowadays we have merging of objects built into the the JavaScript",
    "start": "1785980",
    "end": "1792940"
  },
  {
    "text": "language itself so we don't really necessarily need these kinds of things anymore but at least stayed there there",
    "start": "1792940",
    "end": "1798549"
  },
  {
    "text": "have been a lot of these types of utilities tools that have had these kinds of functions that have been",
    "start": "1798549",
    "end": "1804009"
  },
  {
    "text": "vulnerable to prototype pollution data",
    "start": "1804009",
    "end": "1809739"
  },
  {
    "text": "API has gone wrong it's this is kind of a weird topic so one of the common",
    "start": "1809739",
    "end": "1818529"
  },
  {
    "start": "1816000",
    "end": "1816000"
  },
  {
    "text": "problems with with the API is that we're currently building the REST API that we're building is when we want to modify",
    "start": "1818529",
    "end": "1824529"
  },
  {
    "text": "the front-end show data in a different way we have to go back to the backend and just modify things and add new",
    "start": "1824529",
    "end": "1829840"
  },
  {
    "text": "requests and responses and and this can be kind cumbersome and sometimes it",
    "start": "1829840",
    "end": "1834940"
  },
  {
    "text": "means that we're gonna we're gonna make a lot of requests on the requests to the backend unless we modify the REST API so",
    "start": "1834940",
    "end": "1841749"
  },
  {
    "text": "one if we could do this in a more clever way where we could kind of let the client decide what I wanted to do and",
    "start": "1841749",
    "end": "1849509"
  },
  {
    "text": "create some kind of a query language people have attempted this but in in",
    "start": "1849509",
    "end": "1855789"
  },
  {
    "text": "this case let's see let's look at our simple REST API in this case we have a list of soccer players so get the top 100",
    "start": "1855789",
    "end": "1863410"
  },
  {
    "text": "players and what we what we get in response is now the name of the the soccer player and the ID and if we go to",
    "start": "1863410",
    "end": "1872200"
  },
  {
    "text": "a specific player and go to the stats then we get the average score so if we wanna now to list the top 100 players",
    "start": "1872200",
    "end": "1879400"
  },
  {
    "text": "with their average score we would do 101 requests because we first get the list",
    "start": "1879400",
    "end": "1885430"
  },
  {
    "text": "and then we'd have to go for each and every one of the players we would have to go back and get the stats to get the",
    "start": "1885430",
    "end": "1890770"
  },
  {
    "text": "average score so that's a bit of a drag if we would hammer the server for just showing one page and so a lot of people",
    "start": "1890770",
    "end": "1898690"
  },
  {
    "text": "have been trying to figure out how can we do this in a more a more clever way so through the years they've been some",
    "start": "1898690",
    "end": "1906640"
  },
  {
    "text": "interesting ideas this one for instance which a former colleague of mine found",
    "start": "1906640",
    "end": "1913620"
  },
  {
    "text": "SQL to Jason dot ASP it does exactly what you think it does you see from the",
    "start": "1913620",
    "end": "1922150"
  },
  {
    "text": "serve from the client from the browser you can send in an SQL and it will bring",
    "start": "1922150",
    "end": "1927160"
  },
  {
    "text": "back the data super this is so dynamic I can bring in everything super except",
    "start": "1927160",
    "end": "1933340"
  },
  {
    "text": "first the hackers can do the exact same thing and maybe delete the database or something like that so this wasn't a",
    "start": "1933340",
    "end": "1939100"
  },
  {
    "text": "really good idea seen this as well being able to write SQL statements in so",
    "start": "1939100",
    "end": "1947610"
  },
  {
    "text": "at least this would probably be between two backends so it wouldn't be exposed to the outside but still it's a really",
    "start": "1947610",
    "end": "1954220"
  },
  {
    "text": "weird idea so um no and some of the",
    "start": "1954220",
    "end": "1959680"
  },
  {
    "text": "problems with these API is is you often get broken access control because of course with the SQL thing you could",
    "start": "1959680",
    "end": "1965950"
  },
  {
    "text": "query anything you often get problems with insecure direct object references which means if you have the ID of an",
    "start": "1965950",
    "end": "1972520"
  },
  {
    "text": "object in the database you can get the data there's no authorization going on you might be able to overwrite read-only",
    "start": "1972520",
    "end": "1978580"
  },
  {
    "text": "fields because well the access control is still broken or even get access to unauthorized data so um someone came up",
    "start": "1978580",
    "end": "1987790"
  },
  {
    "text": "with something called graph QL so graph QL is a way to do queries from the",
    "start": "1987790",
    "end": "1993850"
  },
  {
    "text": "client without using SQL and you could serve multiple queries in one request as well",
    "start": "1993850",
    "end": "1999649"
  },
  {
    "text": "which is quite nice but the thing is a interesting little encoding error here",
    "start": "1999649",
    "end": "2006759"
  },
  {
    "text": "sorry any sufficiently advanced technology is indistinguishable from magic that's what arthur c clarke said and",
    "start": "2006759",
    "end": "2013149"
  },
  {
    "text": "that's that's the thing once we start using frameworks that are doing all",
    "start": "2013149",
    "end": "2019690"
  },
  {
    "text": "kinds of weird things what happens do we understand how this actually works",
    "start": "2019690",
    "end": "2025379"
  },
  {
    "text": "mm-hmm do we this has gone wrong so many times where people will use a framework that's",
    "start": "2025379",
    "end": "2031600"
  },
  {
    "text": "doing something and they don't really understand what the framework doing the framing is doing and they don't think about the consequences so we've seen",
    "start": "2031600",
    "end": "2039490"
  },
  {
    "text": "this a lot in graph QL we've seen insecure direct object reference you're able to access an object you're not",
    "start": "2039490",
    "end": "2044740"
  },
  {
    "text": "supposed to we can have insecure links between objects so I'm gonna show you what that means in a second and we can",
    "start": "2044740",
    "end": "2050260"
  },
  {
    "text": "have exposure of unintended fields so this is graphical this is a UI for",
    "start": "2050260",
    "end": "2056950"
  },
  {
    "text": "graphical so if you install a graph QL on a on a server then you can add graph",
    "start": "2056950",
    "end": "2062888"
  },
  {
    "text": "a graphical to be able to query things and for some red reason whenever I render this in the slides everything is",
    "start": "2062889",
    "end": "2069099"
  },
  {
    "text": "kind of hopping into the numbers as you can see so I'm just gonna do a reload of",
    "start": "2069099",
    "end": "2074950"
  },
  {
    "text": "this frame then things look better for some reason I don't know why so in this",
    "start": "2074950",
    "end": "2080319"
  },
  {
    "text": "case we have this this message I can send in and I get back some messages and the cool thing about a graph QL is we",
    "start": "2080319",
    "end": "2087790"
  },
  {
    "text": "can modify this so we can say okay I don't want to send her data anymore because I don't need it and then the",
    "start": "2087790",
    "end": "2093700"
  },
  {
    "text": "query goes to the server the server looks it up and then okay I'm not gonna bring this anymore we can also remove the recipients because we don't need",
    "start": "2093700",
    "end": "2100420"
  },
  {
    "text": "that maybe we only want to list actually the the contents of the messages and there we go",
    "start": "2100420",
    "end": "2105849"
  },
  {
    "text": "and what's also interesting is you get documentation so you can look at the",
    "start": "2105849",
    "end": "2111940"
  },
  {
    "text": "schema in this case we have a query and the query we can either ask for a",
    "start": "2111940",
    "end": "2117099"
  },
  {
    "text": "message with a specific ID which is an int or it can ask for a list of messages which would probably return my messages",
    "start": "2117099",
    "end": "2122530"
  },
  {
    "text": "and the message contains an ID content recipient and",
    "start": "2122530",
    "end": "2128320"
  },
  {
    "text": "as we saw what say you sir well you sir is it has an ID a name and",
    "start": "2128320",
    "end": "2134880"
  },
  {
    "text": "messages that's interesting hmm let's see if we can do something with that so we're gonna use now the",
    "start": "2134880",
    "end": "2143670"
  },
  {
    "text": "other query so we can look up a specific message by an ID so ID 99 in this case",
    "start": "2143670",
    "end": "2151180"
  },
  {
    "text": "returns this and this is my message so I'm gonna try to load instead message",
    "start": "2151180",
    "end": "2156790"
  },
  {
    "text": "number 100 so I didn't have an insecure",
    "start": "2156790",
    "end": "2162340"
  },
  {
    "text": "direct object reference because if there was I might be able to get to get that one but this message with ID hundred",
    "start": "2162340",
    "end": "2168580"
  },
  {
    "text": "does not exist or access is forbidden maybe it does exist maybe it's just me",
    "start": "2168580",
    "end": "2173710"
  },
  {
    "text": "not being able to reach it now this thing with links comes in very handy so",
    "start": "2173710",
    "end": "2182580"
  },
  {
    "text": "instead of of trying to load the message",
    "start": "2182580",
    "end": "2188350"
  },
  {
    "text": "directly maybe I can load it through something else so I'm gonna load the previous message instead my message",
    "start": "2188350",
    "end": "2196240"
  },
  {
    "text": "which is 99 which was sent by someone and then I'm gonna take the sender and",
    "start": "2196240",
    "end": "2202240"
  },
  {
    "text": "I'm gonna ask for the messages of the sender so I'm traversing the graph and",
    "start": "2202240",
    "end": "2208630"
  },
  {
    "text": "now I'm getting this interesting message which has ID hundred this your new password is which I'm wasn't supposed to",
    "start": "2208630",
    "end": "2216760"
  },
  {
    "text": "get so this this is the way we traverse the graph your graph and might be able to reach objects were not supposed to",
    "start": "2216760",
    "end": "2223480"
  },
  {
    "text": "see if access control is broken which it was in this case so I couldn't I",
    "start": "2223480",
    "end": "2229210"
  },
  {
    "text": "couldn't do it directly I couldn't load a message directly it says does not exist or access is forbidden but I could",
    "start": "2229210",
    "end": "2234640"
  },
  {
    "text": "still see it though if I went through the graph and found it in a different way and we've seen quite a lot of these",
    "start": "2234640",
    "end": "2243940"
  },
  {
    "text": "on actor1 lately so and the funny thing is many of them have been reported to hacker one for hacker one so see this",
    "start": "2243940",
    "end": "2251290"
  },
  {
    "text": "one was reported to hacker 1 and you can see the bounty $20,000 was paid for this",
    "start": "2251290",
    "end": "2259210"
  },
  {
    "text": "one in this case once again the the in this case the Bounty Hunter",
    "start": "2259210",
    "end": "2264640"
  },
  {
    "text": "was able to traverse the graph to find things that wasn't supposed to be able to see so confidential data of users and",
    "start": "2264640",
    "end": "2271120"
  },
  {
    "text": "limited met a lot of programs and reports accessible via graph QL they had",
    "start": "2271120",
    "end": "2277000"
  },
  {
    "text": "a funny one earlier as well verify dot shop with icloud.com graph QL discloses",
    "start": "2277000",
    "end": "2284080"
  },
  {
    "text": "infernal bear consumption and this is",
    "start": "2284080",
    "end": "2289600"
  },
  {
    "text": "one of the comments if you can escalate to a bear denial of service that would be devastating and they paid 802 point",
    "start": "2289600",
    "end": "2298540"
  },
  {
    "text": "twenty dollars I don't know but interesting this is list from from",
    "start": "2298540",
    "end": "2306550"
  },
  {
    "text": "hacker one from the activity tab or just search for a graph QL you see I can't take over violate session cookie",
    "start": "2306550",
    "end": "2312840"
  },
  {
    "text": "disclosure payment transactions for programs via graph QL and you see the payments of this are often quite nice",
    "start": "2312840",
    "end": "2318730"
  },
  {
    "text": "they're often rated as critical except then the the one where the arrow is it",
    "start": "2318730",
    "end": "2324490"
  },
  {
    "text": "says like a low but it's still paid a thousand dollars it's quite a nice payout for so how do we avoid this well",
    "start": "2324490",
    "end": "2333700"
  },
  {
    "text": "we we have first of all separate our domain model internally from what's exposed in the API this is always a good",
    "start": "2333700",
    "end": "2340540"
  },
  {
    "text": "idea so we use DTS or something like that and then we need to really think about the authorization checks between",
    "start": "2340540",
    "end": "2347500"
  },
  {
    "text": "these objects so in this case it was possible to jump from use from a message",
    "start": "2347500",
    "end": "2352960"
  },
  {
    "text": "to a sender and from the sender which was user we could jump to the messages so we shouldn't be able to traverse the",
    "start": "2352960",
    "end": "2359230"
  },
  {
    "text": "graph that way but it was some for some reason possible because we didn't think about it when we defined the the graph",
    "start": "2359230",
    "end": "2366720"
  },
  {
    "text": "last thing is something called HTTP desync attacks and this is kind of a",
    "start": "2366720",
    "end": "2374230"
  },
  {
    "text": "cool thing it's it was presented a black cat in six months ago and it was some",
    "start": "2374230",
    "end": "2383710"
  },
  {
    "text": "research by James Carroll of ports where there is a great blog post that I wrote",
    "start": "2383710",
    "end": "2391150"
  },
  {
    "text": "and you can also find videos of his talks around this online but I'm going to show you kind of how it works I'm not gonna go as",
    "start": "2391150",
    "end": "2398080"
  },
  {
    "text": "detailed as he does but I'm gonna show you how this can work and how it can be abused so this is a variant of something",
    "start": "2398080",
    "end": "2405610"
  },
  {
    "text": "called request smuggling and with request modeling we're kind of we're abusing the fact that a reverse proxy",
    "start": "2405610",
    "end": "2412480"
  },
  {
    "text": "and a back-end might interpret HTTP messages differently so we have this",
    "start": "2412480",
    "end": "2418120"
  },
  {
    "text": "reverse proxy we have browser and we have someone who's evil and the first",
    "start": "2418120",
    "end": "2423190"
  },
  {
    "text": "the evil person is sending in a couple of requests the worst proxy sees them as two different requests passes them on",
    "start": "2423190",
    "end": "2430180"
  },
  {
    "text": "the wire to the back-end server which also sees two requests then benign",
    "start": "2430180",
    "end": "2435430"
  },
  {
    "text": "browser comes along sends a couple of requests those are also seen as two requests and forwarded to the backend",
    "start": "2435430",
    "end": "2442270"
  },
  {
    "text": "over the wire once again the backend interprets them as two requests but now",
    "start": "2442270",
    "end": "2447820"
  },
  {
    "text": "our nefarious hacker creates a message with something at the end and sense that",
    "start": "2447820",
    "end": "2454960"
  },
  {
    "text": "in this case the reverse proxy see so that's one message all of that red and",
    "start": "2454960",
    "end": "2460000"
  },
  {
    "text": "green stuff that's just one message I'm gonna pass that to the to the backend but the back end interpreters",
    "start": "2460000",
    "end": "2466090"
  },
  {
    "text": "differently so it sees the red part as the beginning of a new message so when",
    "start": "2466090",
    "end": "2471970"
  },
  {
    "text": "our benign user comes along and sends one message this is what the reverse proxy sees it sees this as a brand-new",
    "start": "2471970",
    "end": "2478540"
  },
  {
    "text": "message coming in I'm gonna pass it over to the backend the and is passed over the wire but it's just appended to what",
    "start": "2478540",
    "end": "2486400"
  },
  {
    "text": "was already there from the evil person so in this case the attacker is able to",
    "start": "2486400",
    "end": "2491440"
  },
  {
    "text": "add stuff at the front of an HTTP message it could also be the other way",
    "start": "2491440",
    "end": "2496510"
  },
  {
    "text": "around that you could that the day would interpret it differently and you can get the wrong response instead so requests",
    "start": "2496510",
    "end": "2505630"
  },
  {
    "start": "2503000",
    "end": "2503000"
  },
  {
    "text": "smuggling the original version which is now mostly dead you could set different content links so you would set",
    "start": "2505630",
    "end": "2511720"
  },
  {
    "text": "controlling six in counting five and depending on which one was used by the",
    "start": "2511720",
    "end": "2516790"
  },
  {
    "text": "reverse proxy on the back end they would see the message differently so one of them would see the green stuff and the",
    "start": "2516790",
    "end": "2522880"
  },
  {
    "text": "other one would see one two three four five gee if it used complain six so we",
    "start": "2522880",
    "end": "2528790"
  },
  {
    "text": "would get an error if it if the backend so if the let's see the front end or the back ends used to",
    "start": "2528790",
    "end": "2534580"
  },
  {
    "text": "five and then we see in the next one starting with G post which is not a valid verb there's another example where",
    "start": "2534580",
    "end": "2543430"
  },
  {
    "text": "we kind of add a brand-new requests at the end so one of them would see one two three four five and the other one would",
    "start": "2543430",
    "end": "2549130"
  },
  {
    "text": "see a brand new request and the next request coming in would be appended to the second requested but this is mostly",
    "start": "2549130",
    "end": "2555940"
  },
  {
    "text": "dead because if you get two complaint headers most frameworks and reverse proxies and things like that they would",
    "start": "2555940",
    "end": "2561340"
  },
  {
    "text": "just reject the message to say it or to confer links what's going on I don't want this but there's something called",
    "start": "2561340",
    "end": "2567070"
  },
  {
    "text": "HTTP chunked transfer encoding and when you're using chunked transfer encoding the data that you're sending as a part",
    "start": "2567070",
    "end": "2573730"
  },
  {
    "text": "of the body of the HTTP message is divided into zero or more chunks and",
    "start": "2573730",
    "end": "2579490"
  },
  {
    "text": "each chunk contains the size and then a line feed and then the data and then a",
    "start": "2579490",
    "end": "2584980"
  },
  {
    "text": "new line feed and the request is terminated by a chunk that has a size of",
    "start": "2584980",
    "end": "2590110"
  },
  {
    "text": "zero so let's look at what this looks like it looks something like this so we say transfer encoding chunked the first",
    "start": "2590110",
    "end": "2597100"
  },
  {
    "text": "chunk has a length of eight so that's message that's around the next one has a",
    "start": "2597100",
    "end": "2602200"
  },
  {
    "text": "chunk the next chunk has a length of 5 and then we terminate the message with a chunk with length of zero so we have the",
    "start": "2602200",
    "end": "2609580"
  },
  {
    "text": "first chunk the second chunk and the terminating chunk and yeah once again",
    "start": "2609580",
    "end": "2617560"
  },
  {
    "text": "the encoding has been messed up for some reason but if this is from the RFC if a message is received with both a transfer",
    "start": "2617560",
    "end": "2623920"
  },
  {
    "text": "encoding header field and a content length header field the latter must be ignored when security reaches C must be",
    "start": "2623920",
    "end": "2631870"
  },
  {
    "text": "ignored they often think the troll face comes along must mm-hmm this is",
    "start": "2631870",
    "end": "2638260"
  },
  {
    "text": "interesting will will all of the reverse proxies and all of the back ends actually do this so",
    "start": "2638260",
    "end": "2645130"
  },
  {
    "text": "a decent attack is basically a request splitting a request smuggling attack where instead of using two content",
    "start": "2645130",
    "end": "2651520"
  },
  {
    "text": "length we're using content linked and transfer encoding and we're mixing them and we'll see one of them when we'll use",
    "start": "2651520",
    "end": "2657970"
  },
  {
    "text": "one of them the other one we'll use the other one so in this case we're sending in a",
    "start": "2657970",
    "end": "2663570"
  },
  {
    "text": "request that says content linked for so that's gonna be 31 plus the / r /n and",
    "start": "2663570",
    "end": "2670020"
  },
  {
    "text": "the next one is using chunk so it's gonna see the first this is to two chunks looking like this so 31 31 by the",
    "start": "2670020",
    "end": "2677760"
  },
  {
    "text": "way is hex so it's not the length of this is actually 49 or something but the",
    "start": "2677760",
    "end": "2683220"
  },
  {
    "text": "number the decisis here are in hex so one of them will see this as a single",
    "start": "2683220",
    "end": "2689820"
  },
  {
    "text": "request the other one will see these as two requests like so this is what one of",
    "start": "2689820",
    "end": "2696210"
  },
  {
    "text": "them so what if we did something like this post message and then we use the",
    "start": "2696210",
    "end": "2703260"
  },
  {
    "text": "comp length of 57 for one of them and chunk for the other one and then we add delete message 1 and then X - garbage so",
    "start": "2703260",
    "end": "2714060"
  },
  {
    "text": "the 1 maybe the reverse proxy would see well okay this is length 57 I'm gonna pass it on to the back end and the back",
    "start": "2714060",
    "end": "2720300"
  },
  {
    "text": "end just sees okay I have this thing and then I have a new request starting down here I've just I just guess I just have",
    "start": "2720300",
    "end": "2727290"
  },
  {
    "text": "to wait for the rest of it and then the benign request comes in and now you see the reason why we have the X - garbage",
    "start": "2727290",
    "end": "2734460"
  },
  {
    "text": "thing there because that's gonna catch the original request that the benign user sent which was get slash HTTP but",
    "start": "2734460",
    "end": "2742109"
  },
  {
    "text": "we also get a bonus here the cookies from the benign users are added to the",
    "start": "2742109",
    "end": "2747690"
  },
  {
    "text": "requests sent by the evil attacker so now we get delete message and we can just ignore the second line and then we",
    "start": "2747690",
    "end": "2754980"
  },
  {
    "text": "get the cookies and this would pass through to the backend which might then end up deleting something it shouldn't",
    "start": "2754980",
    "end": "2762290"
  },
  {
    "text": "nothing nothing is fun with them with things like this without a proper demo so let's do this I have this is the",
    "start": "2762770",
    "end": "2771119"
  },
  {
    "text": "benign user demand I news that can send the message and get some data back and to make this really clear I've added so",
    "start": "2771119",
    "end": "2777810"
  },
  {
    "text": "like the response body just says this is this is a request to slash by HTTP GET",
    "start": "2777810",
    "end": "2782820"
  },
  {
    "text": "and the request headers were connection keep love cookie 1 2 3 host nginx back yet so that's that's what the back end",
    "start": "2782820",
    "end": "2789510"
  },
  {
    "text": "the back end so not the reverse proxy the back end so now we have our evil attacker that's waste right of",
    "start": "2789510",
    "end": "2795700"
  },
  {
    "text": "course sends in this thing with compelling 36 transfer encoding chunked",
    "start": "2795700",
    "end": "2800980"
  },
  {
    "text": "and then there's this delete admin PHP thing going on so we're gonna send this in and we see what we were proceeding",
    "start": "2800980",
    "end": "2808570"
  },
  {
    "text": "here is well this is slash via HTTP POST and the request headers were",
    "start": "2808570",
    "end": "2814960"
  },
  {
    "text": "transferring coding chunked contain 36 so it's so both of them connection keep alive hosts nginx back in we see no",
    "start": "2814960",
    "end": "2821740"
  },
  {
    "text": "signs of this admin thing yet but if you now go back to the benign client what",
    "start": "2821740",
    "end": "2829120"
  },
  {
    "text": "happened now I sent it again just this thing you can see on the top but down",
    "start": "2829120",
    "end": "2834130"
  },
  {
    "text": "here it now says this is admin dot PHP via HTTP delete with the cookie and you",
    "start": "2834130",
    "end": "2841720"
  },
  {
    "text": "can also see I just have a DES instead of X garbage it just was X in this case so there you see the original get which",
    "start": "2841720",
    "end": "2849220"
  },
  {
    "text": "you can see all the way in the top you can see that down at the X there so that that kind of commented that out in a way and then the attacker was able to add",
    "start": "2849220",
    "end": "2856780"
  },
  {
    "text": "this thing to do the front there are",
    "start": "2856780",
    "end": "2862780"
  },
  {
    "text": "different ways of interpreting this a spider SEC have have created this cheat sheet here so you have these things",
    "start": "2862780",
    "end": "2869860"
  },
  {
    "text": "called CL te te C L etc that's transferring coding content length so",
    "start": "2869860",
    "end": "2875590"
  },
  {
    "text": "either the proxy interprets the the transfer encoding is chunked and the back and return uses the complaint or if",
    "start": "2875590",
    "end": "2883060"
  },
  {
    "text": "it's CL te then the proxy is using the content length and the back in is using the transfer encodings this is a really",
    "start": "2883060",
    "end": "2890080"
  },
  {
    "text": "great cheat sheet to understand you can also see the comp linked content link thing the old one that doesn't really work that much anymore",
    "start": "2890080",
    "end": "2896740"
  },
  {
    "text": "and down here you can also see te te one of them is using comp link 4 and then",
    "start": "2896740",
    "end": "2902020"
  },
  {
    "text": "transfer encoding chunked transfer encoding cow so just try to obfuscate it a little bit",
    "start": "2902020",
    "end": "2909180"
  },
  {
    "text": "James cattle did some work on this too so he figured out that some of the systems they would they would look for",
    "start": "2909360",
    "end": "2915100"
  },
  {
    "text": "chunked they wouldn't see if transfer including what strength they would see does it contain chopped so extract does",
    "start": "2915100",
    "end": "2921520"
  },
  {
    "text": "so some systems would interpret a discharge you could have a space in front of the colon",
    "start": "2921520",
    "end": "2927750"
  },
  {
    "text": "you can have a space in front of the header you could have multiple so like",
    "start": "2927750",
    "end": "2934180"
  },
  {
    "text": "this is like the cow thing where you have chunked and then something else and they only interpret that differently you",
    "start": "2934180",
    "end": "2939550"
  },
  {
    "text": "could have a tab in between and they might interpret that differently so these are all kinds of tricks that he",
    "start": "2939550",
    "end": "2945730"
  },
  {
    "text": "found that would fool different types of systems you could also even have /n",
    "start": "2945730",
    "end": "2953520"
  },
  {
    "text": "between two headers headers are supposed to be terminated by / r / n but some",
    "start": "2953520",
    "end": "2959369"
  },
  {
    "text": "some service would interpret this as a new header and some would interpret this as just a part of the original header so",
    "start": "2959369",
    "end": "2966730"
  },
  {
    "text": "these are kind of tricks that that James figured out and even just adding it on a",
    "start": "2966730",
    "end": "2972160"
  },
  {
    "text": "separate line sometimes works for some reason so how do we detect this well we",
    "start": "2972160",
    "end": "2977830"
  },
  {
    "start": "2975000",
    "end": "2975000"
  },
  {
    "text": "have to fiddle with this we can try around different types of headers add content links on our chunk to see what's",
    "start": "2977830",
    "end": "2983140"
  },
  {
    "text": "going on but Jeff kettle works for burps wit and burps wit has now a plugin",
    "start": "2983140",
    "end": "2989560"
  },
  {
    "text": "called the request smuggler extension that can help find this thing but of course patching your reverse",
    "start": "2989560",
    "end": "2996940"
  },
  {
    "text": "proxies and patching your back in software is very wiser because isn't really not something that we as developers should fix it's something",
    "start": "2996940",
    "end": "3003750"
  },
  {
    "text": "that needs to be fixed in the frameworks and needs to be fixed in the web service it needs to be fixed in the reverse proxies so unless you're doing your own",
    "start": "3003750",
    "end": "3010260"
  },
  {
    "text": "HTTP parsing which you probably shouldn't then maybe check if the e or",
    "start": "3010260",
    "end": "3015270"
  },
  {
    "text": "your software is affected by this while working on this talk I I was in contact",
    "start": "3015270",
    "end": "3022380"
  },
  {
    "text": "with with James kettle because I I was trying to make the demo that I just",
    "start": "3022380",
    "end": "3027720"
  },
  {
    "text": "showed you and I noticed something weird like the plugin that he had it wasn't actually able to find this this problem",
    "start": "3027720",
    "end": "3035280"
  },
  {
    "text": "that I could easily you saw how easy I could could reproduce it but the plugin that he created did not find it so I",
    "start": "3035280",
    "end": "3041550"
  },
  {
    "text": "contacted him and I said hey I found this thing maybe you want to look at it and and he said yeah of course yeah I'm",
    "start": "3041550",
    "end": "3046740"
  },
  {
    "text": "gonna look at it and then we went a bit back and forth and it ended up with with him writing a new blog post and with my",
    "start": "3046740",
    "end": "3053640"
  },
  {
    "text": "name in it because well there's a new method of finding this thing and we found this thing that where it doesn't",
    "start": "3053640",
    "end": "3059730"
  },
  {
    "text": "work and so he added some new options to display Ginn's to be able to find these",
    "start": "3059730",
    "end": "3065540"
  },
  {
    "text": "types of things that I was showing because in this case we use the Apache traffic server for the demo and it's",
    "start": "3065540",
    "end": "3071540"
  },
  {
    "text": "super weird it just like randomly uses the content length or the transfer encoding and it's just a horrible mess",
    "start": "3071540",
    "end": "3077750"
  },
  {
    "text": "and I have no idea how it actually works but we were we were playing a bit back and forth of this and once we found it",
    "start": "3077750",
    "end": "3083930"
  },
  {
    "text": "we kind of thought well maybe we should test this also in some some bug bounty programs and I was hoping to be able to",
    "start": "3083930",
    "end": "3092030"
  },
  {
    "text": "show you the full thing today but it's still I still can't show the contents of",
    "start": "3092030",
    "end": "3097910"
  },
  {
    "text": "what I sent in so I reported this to one company that gave me a $500 bounty but",
    "start": "3097910",
    "end": "3102920"
  },
  {
    "text": "they also said hey this is not really our problem it's our providers problem so I had to report the same thing to",
    "start": "3102920",
    "end": "3109070"
  },
  {
    "text": "their provider and the provider this is the this is a message from that program",
    "start": "3109070",
    "end": "3114290"
  },
  {
    "text": "so sorry for delay here the team just got back to us the issue is fixed for client but the team is waiting for the",
    "start": "3114290",
    "end": "3119930"
  },
  {
    "text": "release of the CVE to close this report so I don't know what's gonna happen there but it's gonna be interesting to",
    "start": "3119930",
    "end": "3125330"
  },
  {
    "text": "see the end result of this I was hoping as I said that this would be ready for today because I reported this back in",
    "start": "3125330",
    "end": "3131330"
  },
  {
    "text": "November but this is the last message I got from them so maybe I'll publish",
    "start": "3131330",
    "end": "3137810"
  },
  {
    "text": "something on Twitter once this is once this is released just so you know some",
    "start": "3137810",
    "end": "3146210"
  },
  {
    "text": "people that I'd like to thank for this this thing here at this this presentation all the people doing",
    "start": "3146210",
    "end": "3152570"
  },
  {
    "text": "amazing research like James kettle and I guess from go Sakura Miho and also Alex was a tweak who tipped me about",
    "start": "3152570",
    "end": "3158330"
  },
  {
    "text": "prototype pollution and also Thomas installer who's given me a lot of feedback on what types of bugs are",
    "start": "3158330",
    "end": "3163700"
  },
  {
    "text": "interesting 2% and things like that if you want to learn more about different",
    "start": "3163700",
    "end": "3169609"
  },
  {
    "text": "types of newer bugs etc ports wigger now they have a this blog where they have",
    "start": "3169609",
    "end": "3176780"
  },
  {
    "text": "the top 10 web hacking techniques of 2019 nominations open and there's a huge list of things that are really",
    "start": "3176780",
    "end": "3183140"
  },
  {
    "text": "interesting some of these realization links and exit ceilings I showed at the beginning of this talk are from that",
    "start": "3183140",
    "end": "3189020"
  },
  {
    "text": "list so you'll find a lot of interesting stuff in that list and that's it are there any questions so",
    "start": "3189020",
    "end": "3213680"
  },
  {
    "text": "the question is if you're doing a pen test or a bug bunny and and what are the indicators that you have found an ESI",
    "start": "3213680",
    "end": "3221530"
  },
  {
    "text": "problem and over yeah how do you start testing for it um first of all you have",
    "start": "3221530",
    "end": "3228320"
  },
  {
    "text": "to figure out if there's a reverse proxy but and then you can start injecting things and I think burp dust is",
    "start": "3228320",
    "end": "3233540"
  },
  {
    "text": "automatically it tries to inject things and fields and see if it comes back so you could use collaborator for instance and say hey please think try to include",
    "start": "3233540",
    "end": "3239510"
  },
  {
    "text": "this external link so collaborator for those of you don't know that's a burp feature where you can if it does a DNS",
    "start": "3239510",
    "end": "3248330"
  },
  {
    "text": "query or an HTTP look up to a uniquely generated URL you'll get a ping that",
    "start": "3248330",
    "end": "3253820"
  },
  {
    "text": "says hey someone tried to resolve this DNS name or someone made it an HTTP request to this this unique domain name",
    "start": "3253820",
    "end": "3261860"
  },
  {
    "text": "so you can kind of inject that into your payload and see if it ever tries to resolve it you could also of course use",
    "start": "3261860",
    "end": "3268940"
  },
  {
    "text": "your own server if you have that you could try to include things and often if you are able to include it but it fails",
    "start": "3268940",
    "end": "3275270"
  },
  {
    "text": "you'll get like a 500 and it will be very weird it acts in a very weird way",
    "start": "3275270",
    "end": "3280460"
  },
  {
    "text": "so I can actually show you what happens let's see if I go back to the sea",
    "start": "3280460",
    "end": "3287750"
  },
  {
    "text": "SVG here yeah sorry I deleted that well",
    "start": "3287750",
    "end": "3293150"
  },
  {
    "text": "I had a file where I just modified the ear so I include a little bit and then you just get like a very generic 500",
    "start": "3293150",
    "end": "3300110"
  },
  {
    "text": "back because it failed to parse the SI thing so that that's so I would try I",
    "start": "3300110",
    "end": "3306830"
  },
  {
    "text": "would try to include tag to add tags and I will see if they come back if there disappeared when it comes back then it",
    "start": "3306830",
    "end": "3312410"
  },
  {
    "text": "they are either filtered or actually executed and they're hidden from you so",
    "start": "3312410",
    "end": "3318260"
  },
  {
    "text": "but of course if you're the defender you should go and review your config etcetera because that's that's something",
    "start": "3318260",
    "end": "3324830"
  },
  {
    "text": "you should really test for you should really check if your proxy has ears I enabled a lot of a lot",
    "start": "3324830",
    "end": "3330510"
  },
  {
    "text": "of the big reverse proxies do you have ESI so things like they vanish and and a",
    "start": "3330510",
    "end": "3337590"
  },
  {
    "text": "lot of other ones they have the asylum so if you go and go back and read the blog post from the go-go's the cure guys",
    "start": "3337590",
    "end": "3343650"
  },
  {
    "text": "they have some very interesting things for each of the different reverse proxies that they tested and that that",
    "start": "3343650",
    "end": "3350040"
  },
  {
    "text": "would give him a good indicator of what you should look for any other questions",
    "start": "3350040",
    "end": "3355770"
  },
  {
    "text": "no okay thank you",
    "start": "3355770",
    "end": "3362740"
  },
  {
    "text": "[Applause]",
    "start": "3362740",
    "end": "3370250"
  }
]