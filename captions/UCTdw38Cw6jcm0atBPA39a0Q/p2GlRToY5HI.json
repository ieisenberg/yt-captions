[
  {
    "text": "all right good afternoon everybody how's the conference going so far everybody",
    "start": "1199",
    "end": "6240"
  },
  {
    "text": "having fun uh hopefully you've learned something by",
    "start": "6240",
    "end": "11340"
  },
  {
    "text": "now uh and uh hopefully you're here to learn something more about microservices and also hopefully you didn't eat too",
    "start": "11340",
    "end": "18840"
  },
  {
    "text": "many carbs at lunch so you won't fall asleep on me uh but it's nice to see all of you as you can tell from my accent",
    "start": "18840",
    "end": "25080"
  },
  {
    "text": "I'm not from around here so I'll try and translate anything I need to in my talk",
    "start": "25080",
    "end": "30180"
  },
  {
    "text": "if I talk about lorries or lifts or anything like that I'll make sure I translate it for you my name is Jay",
    "start": "30180",
    "end": "36960"
  },
  {
    "text": "short for Jonathan Tower we're going to be talking about not building a",
    "start": "36960",
    "end": "42180"
  },
  {
    "text": "distributed monolith how to avoid doing microservices completely wrong so I'm going to start with a little bit",
    "start": "42180",
    "end": "48120"
  },
  {
    "text": "of a story a couple years ago a client of ours came to us at my company",
    "start": "48120",
    "end": "53640"
  },
  {
    "text": "Trailhead and said we're just about finished building this",
    "start": "53640",
    "end": "58739"
  },
  {
    "text": "micro Services project that we've built internally and we'd love to have someone take a look at it",
    "start": "58739",
    "end": "64978"
  },
  {
    "text": "and maybe you can help us out there's just a few little performance problems I can see some Smiles on your faces",
    "start": "64979",
    "end": "71400"
  },
  {
    "text": "already you know where this story is going maybe from personal experience there's just a few little performance",
    "start": "71400",
    "end": "77280"
  },
  {
    "text": "problems with it if you could take a look and figure out uh why these you know a few endpoints in our apis are",
    "start": "77280",
    "end": "83040"
  },
  {
    "text": "slow and help us just really quick before launch so we said sure uh we're a consulting",
    "start": "83040",
    "end": "88680"
  },
  {
    "text": "company that's what we do so we said sure we'll take a look at that it only took a very short amount of time looking",
    "start": "88680",
    "end": "93720"
  },
  {
    "text": "at their code to realize that this was not a small problem but this is a problem with their whole application and",
    "start": "93720",
    "end": "99780"
  },
  {
    "text": "it was going to affect all of their endpoints once they launched and it wasn't uh a small problem in the",
    "start": "99780",
    "end": "106979"
  },
  {
    "text": "performance way either it was actually going to be a huge problem because instead of building microservices as",
    "start": "106979",
    "end": "113340"
  },
  {
    "text": "they had planned to do they had in fact built a distributed monolith",
    "start": "113340",
    "end": "119520"
  },
  {
    "text": "so this is the bad guy in our story today this is the monster that I'm hoping that I'm going to give you some",
    "start": "119520",
    "end": "124860"
  },
  {
    "text": "tips today to make sure that you avoid building one of these in fact I want to give you 10 of the most common mistakes",
    "start": "124860",
    "end": "131940"
  },
  {
    "text": "that I see as a software consultant I work with a lot of different companies many of whom have tried lots of",
    "start": "131940",
    "end": "137640"
  },
  {
    "text": "different architectures including microservices architectures and these are the 10 most common",
    "start": "137640",
    "end": "143099"
  },
  {
    "text": "mistakes I see them making and I'm hoping that you can take these 10 things and avoid these pitfalls in your own",
    "start": "143099",
    "end": "149700"
  },
  {
    "text": "projects uh before we get started as a attendee or a Watcher Online of this session you",
    "start": "149700",
    "end": "157739"
  },
  {
    "text": "are lucky enough that you get a free offer if you have any questions about the topics we're talking about today",
    "start": "157739",
    "end": "163620"
  },
  {
    "text": "microservices software development in general like I",
    "start": "163620",
    "end": "168780"
  },
  {
    "text": "said I'm owner of a Trailhead of Trailhead technology Partners we're a software consulting company I've got",
    "start": "168780",
    "end": "174480"
  },
  {
    "text": "this free offer for you here you can scan that code I'll show this again at the end and I've also got some brochures",
    "start": "174480",
    "end": "180300"
  },
  {
    "text": "here if you're old school and you like it on paper um but uh that's basically for a free",
    "start": "180300",
    "end": "186900"
  },
  {
    "text": "30-minute consultation if you have any problems that you would like someone to take a look at I'd be happy to talk to you and you can",
    "start": "186900",
    "end": "194040"
  },
  {
    "text": "check that out there a little bit about me besides owning Trailhead I also am a",
    "start": "194040",
    "end": "199260"
  },
  {
    "text": "Microsoft MVP if you're not familiar with that Microsoft MVPs are awarded for their expertise in software and also",
    "start": "199260",
    "end": "206580"
  },
  {
    "text": "sharing that expertise like we're doing right now in the community I've just was awarded that back in the summer for the",
    "start": "206580",
    "end": "214680"
  },
  {
    "text": "eighth year in a row I also have some contact info here if you want to get a hold of me and finally at the bottom",
    "start": "214680",
    "end": "221220"
  },
  {
    "text": "I've got a GitHub link where you can get all of these slides afterwards so with that out of the way let's start",
    "start": "221220",
    "end": "227519"
  },
  {
    "text": "with some definitions make sure we're all on the same page about what we're talking about with monoliths and",
    "start": "227519",
    "end": "232680"
  },
  {
    "text": "microservices and distributed monoliths let's start with the monolith we've all",
    "start": "232680",
    "end": "238019"
  },
  {
    "text": "been working with these types of software applications for in some cases many decades depending on how long your",
    "start": "238019",
    "end": "244080"
  },
  {
    "text": "career is these are kind of what you would consider your traditional software architecture this is when the whole",
    "start": "244080",
    "end": "249659"
  },
  {
    "text": "application is built together and deployed together as a single piece if",
    "start": "249659",
    "end": "254760"
  },
  {
    "text": "you go change something in one place you can't create the you can't build or",
    "start": "254760",
    "end": "259919"
  },
  {
    "text": "create the app without all of the pieces being there together so if you're maintaining a monolith you",
    "start": "259919",
    "end": "268620"
  },
  {
    "text": "might be familiar with this problem but in a monolith sometimes you might have something like a button that has",
    "start": "268620",
    "end": "275160"
  },
  {
    "text": "the wrong name on it and you need to make a change to that button that should be a very simple change right one line",
    "start": "275160",
    "end": "280440"
  },
  {
    "text": "maybe not even code one line of UI and if you have a monolith you still have to",
    "start": "280440",
    "end": "287940"
  },
  {
    "text": "do an entire deployment of the application right and a monolith goes all together or it goes not at all so",
    "start": "287940",
    "end": "294360"
  },
  {
    "text": "that's kind of the idea behind a monolith um some of the advantages of a monolith it's much easier to build than a",
    "start": "294360",
    "end": "301320"
  },
  {
    "text": "microservices architecture also typically has better what's called Data throughput so don't confuse that with",
    "start": "301320",
    "end": "308160"
  },
  {
    "text": "performance performance is actually can be in a well architected microservice can be better",
    "start": "308160",
    "end": "313800"
  },
  {
    "text": "we'll talk about that what I mean by data throughput is that when somebody types something in and submits it on a",
    "start": "313800",
    "end": "319680"
  },
  {
    "text": "form in the application from that moment to the moment that the entire application knows about that updated",
    "start": "319680",
    "end": "324780"
  },
  {
    "text": "piece of data that is kind of considered data throughput so in a monolith typically you're going to have one",
    "start": "324780",
    "end": "330840"
  },
  {
    "text": "database you're going to have everything compiled together looking at that same database so the moment you've updated",
    "start": "330840",
    "end": "336419"
  },
  {
    "text": "the table where that data goes the whole application knows about it you can do it in a transaction so that no one else",
    "start": "336419",
    "end": "342500"
  },
  {
    "text": "accesses out of out of date data but it's getting the most up-to-date data all the time so",
    "start": "342500",
    "end": "349199"
  },
  {
    "text": "that's one of the advantages of a monolith another Advantage is that it is scalable so you might be thinking well",
    "start": "349199",
    "end": "356280"
  },
  {
    "text": "I'm here in this talk to learn about microservices because I heard that those are more scalable and I'll say that I",
    "start": "356280",
    "end": "362520"
  },
  {
    "text": "can confirm that microservices are more scalable if they're done correctly but that doesn't mean monoliths are not",
    "start": "362520",
    "end": "368759"
  },
  {
    "text": "scalable right there's still things like load balancing and data sharding that we can talk about",
    "start": "368759",
    "end": "373979"
  },
  {
    "text": "uh there's also fewer cross-cutting concerns when you're building a monolith",
    "start": "373979",
    "end": "379380"
  },
  {
    "text": "versus microservices we'll talk a little bit more about that as we're getting into the details here today",
    "start": "379380",
    "end": "384780"
  },
  {
    "text": "and the most important difference in my opinion is something called immediate consistency anybody ever heard of the",
    "start": "384780",
    "end": "391500"
  },
  {
    "text": "term eventual consistency when it comes to microservices oh good okay so about half of us so this is I think the most",
    "start": "391500",
    "end": "399180"
  },
  {
    "text": "important point I'm going to hit this several times throughout the talk but this is a really big difference between",
    "start": "399180",
    "end": "404340"
  },
  {
    "text": "monoliths and microservices there are disadvantages of course every software",
    "start": "404340",
    "end": "409680"
  },
  {
    "text": "technology architecture that you can pick has its advantages and disadvantages",
    "start": "409680",
    "end": "415020"
  },
  {
    "text": "I already mentioned one of them which is if you want to even make a very small change to your monolithic application you have to rebuild and deploy the whole",
    "start": "415020",
    "end": "422160"
  },
  {
    "text": "thing tight coupling is much easier to do in an application I just met a",
    "start": "422160",
    "end": "427680"
  },
  {
    "text": "gentleman whose team has a four 400 project Visual Studio project solution and uh",
    "start": "427680",
    "end": "436800"
  },
  {
    "text": "you know it's really easy to do that when you're building a monolith to have too much code that all relies very",
    "start": "436800",
    "end": "442680"
  },
  {
    "text": "tightly on each other instead of keeping them separated um",
    "start": "442680",
    "end": "447720"
  },
  {
    "text": "typically you have to use the same technology stack you might not be thinking of that as a disadvantage you",
    "start": "447720",
    "end": "453419"
  },
  {
    "text": "might have a team that all kind of knows the same technology stack maybe they were hired because of that technology stack now so maybe that's not a problem",
    "start": "453419",
    "end": "460440"
  },
  {
    "text": "for your team but if you have a large organization with lots of different departments lots of different areas of",
    "start": "460440",
    "end": "465780"
  },
  {
    "text": "technical expertise then having to use the same technology stack for the entire application can be a downside",
    "start": "465780",
    "end": "471960"
  },
  {
    "text": "it's not quite as agile of a process to build a monolith as it can be to to",
    "start": "471960",
    "end": "477419"
  },
  {
    "text": "build a good healthy micro service and it also doesn't allow you to have small teams that are focused just on very",
    "start": "477419",
    "end": "484020"
  },
  {
    "text": "specific areas as much as a microservice typical monolith is going to look",
    "start": "484020",
    "end": "489180"
  },
  {
    "text": "something like this the front end is going to have multiple clients maybe multiple different form factors they're",
    "start": "489180",
    "end": "495660"
  },
  {
    "text": "going to be hitting some sort of a middle tier it's going to be like a web server an API server and then that",
    "start": "495660",
    "end": "502379"
  },
  {
    "text": "server is going to be accessing some sort of database store it might be a relational database might be nosql",
    "start": "502379",
    "end": "508139"
  },
  {
    "text": "database but this is a pretty typical uh monolithic application so when you",
    "start": "508139",
    "end": "513599"
  },
  {
    "text": "update the application you're basically updating these two parts of the application right",
    "start": "513599",
    "end": "519680"
  },
  {
    "text": "you can scale these I mentioned uh the number one reason I hear people say that they're building a microservices but",
    "start": "519839",
    "end": "527220"
  },
  {
    "text": "actually end up building a distributed monolith the thing that started them out down that path is they wanted something",
    "start": "527220",
    "end": "532380"
  },
  {
    "text": "scalable so I always wanted to start the stock by saying remember monoliths are",
    "start": "532380",
    "end": "537899"
  },
  {
    "text": "scalable too you can scale by adding more memory more processor power lots of you know more",
    "start": "537899",
    "end": "545100"
  },
  {
    "text": "cores lots of different Hardware changes you can make or virtual Hardware changes you can make to that middle tier to make",
    "start": "545100",
    "end": "551160"
  },
  {
    "text": "it more performant you can also do the same thing at the database tier right if that's your bottleneck you can add more",
    "start": "551160",
    "end": "557399"
  },
  {
    "text": "performance there by adding more memory that often helps the database adding more processing power that often helps",
    "start": "557399",
    "end": "562980"
  },
  {
    "text": "the database as well so you can scale this don't forget too that there is other ways to scale",
    "start": "562980",
    "end": "568860"
  },
  {
    "text": "a monolith the most common way is something that I'm sure you're familiar",
    "start": "568860",
    "end": "573959"
  },
  {
    "text": "with it's called load balancing and that's where you just basically make a multiple copies of your application",
    "start": "573959",
    "end": "579779"
  },
  {
    "text": "tier so here we've got two copies of our mid middle tier and um you know in this case you're going to",
    "start": "579779",
    "end": "586560"
  },
  {
    "text": "get not quite twice the performance out of your application as you would with",
    "start": "586560",
    "end": "591839"
  },
  {
    "text": "just the one application server keep in mind it's not quite because there's the overhead of the load",
    "start": "591839",
    "end": "598080"
  },
  {
    "text": "balancer and so there's some loss there and then also keep in mind that if the",
    "start": "598080",
    "end": "603480"
  },
  {
    "text": "bottleneck is not your application but is actually your database there that this is going to cause you're still",
    "start": "603480",
    "end": "609060"
  },
  {
    "text": "going to have performance issues here until you deal with the database layer which is also possible if you're having",
    "start": "609060",
    "end": "615240"
  },
  {
    "text": "more of your bottleneck in your database layer you can solve that by doing",
    "start": "615240",
    "end": "620820"
  },
  {
    "text": "something called data sharding right and this is still a very this is something you would also you could also use in a",
    "start": "620820",
    "end": "626459"
  },
  {
    "text": "microservice but in a monolith you can use this just as well and that's basically where you take your data and",
    "start": "626459",
    "end": "631800"
  },
  {
    "text": "you split it based off of some key most common way you would do this is if you have a tenant like a multi-tenant",
    "start": "631800",
    "end": "637620"
  },
  {
    "text": "application so maybe each of these databases is a different client maybe database one has client a b and c and",
    "start": "637620",
    "end": "644579"
  },
  {
    "text": "maybe client D is a much bigger client they have a lot more data and so you put client B in their own database but",
    "start": "644579",
    "end": "650459"
  },
  {
    "text": "that's basically the client ID in that case would be your key that's being used to Shard this data so there's lots of",
    "start": "650459",
    "end": "657360"
  },
  {
    "text": "different options and I want to just remind you that if you're trying to build an application that scales that",
    "start": "657360",
    "end": "662399"
  },
  {
    "text": "doesn't necessarily mean that you have to build microservices okay so now hopefully we're on the same",
    "start": "662399",
    "end": "669000"
  },
  {
    "text": "page about what a distributed I'm sorry what a monolith is let's talk now about",
    "start": "669000",
    "end": "674880"
  },
  {
    "text": "microservices so this is an architecture that is defined uh where the software is",
    "start": "674880",
    "end": "681060"
  },
  {
    "text": "composed of small and Loosely coupled services and those Services communicate with each other through some sort of",
    "start": "681060",
    "end": "686459"
  },
  {
    "text": "well-defined messages on the back end and then typically those are owned by",
    "start": "686459",
    "end": "692339"
  },
  {
    "text": "small and swell contained teams I'm going to talk about that last point a",
    "start": "692339",
    "end": "697620"
  },
  {
    "text": "little bit more as we're going today because that's one that surprises a lot of people to actually be in the",
    "start": "697620",
    "end": "702660"
  },
  {
    "text": "definition of a microservice some of the Hallmarks and advantages of",
    "start": "702660",
    "end": "708360"
  },
  {
    "text": "a microservice is that you can see these independently deployed right so you can have a button that you need to update",
    "start": "708360",
    "end": "714899"
  },
  {
    "text": "that's in just one module or some logic that you want to update in one module you can release that module without",
    "start": "714899",
    "end": "721200"
  },
  {
    "text": "having to even really communicate with any of the teams that are running any of the other modules they're all really",
    "start": "721200",
    "end": "726779"
  },
  {
    "text": "totally separate and independent applications and so they can be deployed independently it allows you to do more",
    "start": "726779",
    "end": "733560"
  },
  {
    "text": "precision scalability I just finished my last Point saying you can scale a monolith but you can also",
    "start": "733560",
    "end": "740880"
  },
  {
    "text": "scale microservices with a little bit more Precision what do I mean by that if you have your application split up into",
    "start": "740880",
    "end": "746640"
  },
  {
    "text": "multiple micro services and one of them takes let's say 80 percent of the traffic compared to the others you can",
    "start": "746640",
    "end": "753779"
  },
  {
    "text": "actually scale that one up you know with its own Hardware to a larger degree than",
    "start": "753779",
    "end": "759420"
  },
  {
    "text": "what the other ones are scaled up to allow that one to perform better without having to scale up the ones that are",
    "start": "759420",
    "end": "765839"
  },
  {
    "text": "already performing fine with the lower level of Hardware that they're running on so a little bit more Precision with that high availability is another one if",
    "start": "765839",
    "end": "772680"
  },
  {
    "text": "you architect uh microservices correctly you can actually take down one of the services and all of the other services",
    "start": "772680",
    "end": "779399"
  },
  {
    "text": "will be not even aware of the fact that the other service is down we'll just",
    "start": "779399",
    "end": "784560"
  },
  {
    "text": "continue to work on without any problems so if you imagine if you are writing software for",
    "start": "784560",
    "end": "791760"
  },
  {
    "text": "a hotel chain and they want to have a reservation service that's up 24 by",
    "start": "791760",
    "end": "796860"
  },
  {
    "text": "seven you can go ahead and put that into one microservice and now when you have let's",
    "start": "796860",
    "end": "803100"
  },
  {
    "text": "say the housekeeping module for that Hotel chain when that needs to go down for some maintenance",
    "start": "803100",
    "end": "808440"
  },
  {
    "text": "it's not going to affect the ability for for that business to take reservations because they're totally separate from",
    "start": "808440",
    "end": "814440"
  },
  {
    "text": "each other uh it encourages you to write Loosely coupled code just because your whole application is Loosely coupled and it",
    "start": "814440",
    "end": "822540"
  },
  {
    "text": "also allows you to do more agile team processes and have teams that are experts on just different areas of your",
    "start": "822540",
    "end": "829079"
  },
  {
    "text": "application so especially useful if you have a very large application not everybody has to understand the whole",
    "start": "829079",
    "end": "834600"
  },
  {
    "text": "thing they can kind of focus in on different areas and be experts in it typical architecture for a microservices",
    "start": "834600",
    "end": "841260"
  },
  {
    "text": "project is going to look something like this you're going to have your clients usually they're going to be hitting some",
    "start": "841260",
    "end": "847620"
  },
  {
    "text": "sort of an API Gateway I'm not going to go into a lot of detail about these but usually these are used to consolidate",
    "start": "847620",
    "end": "855060"
  },
  {
    "text": "all of your all of your service different microservices together for a",
    "start": "855060",
    "end": "860399"
  },
  {
    "text": "particular application it might also be doing some things like security some other cross-cutting concerns for your application but that will kind of",
    "start": "860399",
    "end": "867899"
  },
  {
    "text": "consolidate all the requests and then divvy them out to the various microservices which you see here are in",
    "start": "867899",
    "end": "872940"
  },
  {
    "text": "each of the different columns now very importantly I want you to notice on this diagram that each of",
    "start": "872940",
    "end": "879060"
  },
  {
    "text": "these Services has its own application and its own database that's pretty important in a micro",
    "start": "879060",
    "end": "885480"
  },
  {
    "text": "Services architecture we're going to talk more about that as we go and then the last thing you see on this diagram",
    "start": "885480",
    "end": "890519"
  },
  {
    "text": "at the bottom is something called an event bus there's different ways that you can do messaging in microservices application",
    "start": "890519",
    "end": "897779"
  },
  {
    "text": "this is probably the most common way some sort of a service bus or event bus there's lots of different tools that",
    "start": "897779",
    "end": "903779"
  },
  {
    "text": "implement this for you I always tell somebody if you're starting out with microservices this is like a really cool",
    "start": "903779",
    "end": "909899"
  },
  {
    "text": "nerdy problem to solve to try and create your own event bus and you wouldn't believe how many teams maybe you can",
    "start": "909899",
    "end": "916260"
  },
  {
    "text": "relate to this maybe you already feel in your heart that it would be really fun to build an event bus don't build your own event bus",
    "start": "916260",
    "end": "923300"
  },
  {
    "text": "it's uh it seems really simple and it is on the surface but there's a lot of complications in there like retries and",
    "start": "923300",
    "end": "930480"
  },
  {
    "text": "stuff that you don't want to have to worry about use one of the ones like Kafka or the ones in Azure or AWS that",
    "start": "930480",
    "end": "936899"
  },
  {
    "text": "are pre-built for you this is the way though that each of these services are going to communicate with each other",
    "start": "936899",
    "end": "943019"
  },
  {
    "text": "typically this would be like a publish And subscribe model where each service would say hey I want to know whenever",
    "start": "943019",
    "end": "948540"
  },
  {
    "text": "this type of an event happens and then when that event gets published by one of the other services they would already be",
    "start": "948540",
    "end": "954120"
  },
  {
    "text": "subscribed to it and they would get the update from that event so this is typically what uh microservices is going",
    "start": "954120",
    "end": "961440"
  },
  {
    "text": "to look like let's talk about the bad guy from our story today this is the distributed monolith this is when you start out trying to",
    "start": "961440",
    "end": "968639"
  },
  {
    "text": "create a microservice so first of all I want to say nobody sets out to create a distributed monolith right not unless",
    "start": "968639",
    "end": "975779"
  },
  {
    "text": "they're sadistic but if you set out to build microservices",
    "start": "975779",
    "end": "981000"
  },
  {
    "text": "but you accidentally create it much more coupled because maybe you've got Decades",
    "start": "981000",
    "end": "986100"
  },
  {
    "text": "of experience building monoliths like I do maybe that's what you know best and you know how to do that and you know all",
    "start": "986100",
    "end": "992279"
  },
  {
    "text": "the rules I'm not supposed to repeat myself right I'm supposed to have single responsibility principle all these good",
    "start": "992279",
    "end": "998399"
  },
  {
    "text": "rules that still apply in some ways to microservices but there's little tweaks to how you need to think about them when",
    "start": "998399",
    "end": "1005720"
  },
  {
    "text": "you set out to build microservices but you have that high coupling in your code between your modules you're going to",
    "start": "1005720",
    "end": "1012560"
  },
  {
    "text": "probably end up with a distributed monolith the reason I want to warn you about these and and why the title of this talk",
    "start": "1012560",
    "end": "1018500"
  },
  {
    "text": "is don't build a distributed monolith is that these always perform worse than either the monolith or the microservices",
    "start": "1018500",
    "end": "1025579"
  },
  {
    "text": "architecture this is what you might call the worst of Both Worlds you're going to get a much more difficult to maintain",
    "start": "1025579",
    "end": "1032660"
  },
  {
    "text": "application than it would be if it was just a monolith but it's going to perform worse than",
    "start": "1032660",
    "end": "1038418"
  },
  {
    "text": "either the monolith or the microservices would so please don't build this we're trying to avoid that today",
    "start": "1038419",
    "end": "1045918"
  },
  {
    "text": "okay so what is a typical architecture for a distributed monolith looks like",
    "start": "1045919",
    "end": "1051620"
  },
  {
    "text": "I purposely Drew this this way so that it would be kind of obvious what the problem is here the hand-drawn red",
    "start": "1051620",
    "end": "1057980"
  },
  {
    "text": "arrows here all these arrows between the different modules whether it's from the application to the database of a",
    "start": "1057980",
    "end": "1063679"
  },
  {
    "text": "different module or application tier to application tier or even database to",
    "start": "1063679",
    "end": "1068780"
  },
  {
    "text": "database you could say depending on how you do it could create problems here so",
    "start": "1068780",
    "end": "1073880"
  },
  {
    "text": "we really these red arrows are what we want to avoid now I didn't put on this side a an API layer I'm sorry an event",
    "start": "1073880",
    "end": "1082280"
  },
  {
    "text": "bus layer but most of the implementations I see for uh that end up",
    "start": "1082280",
    "end": "1088280"
  },
  {
    "text": "being a distributed monolith do have an event bus layer and what they've basically done is in addition to using",
    "start": "1088280",
    "end": "1094700"
  },
  {
    "text": "that to communicate they've also added these red arrows these red arrows start out as a small exception and you know",
    "start": "1094700",
    "end": "1101299"
  },
  {
    "text": "how this goes right you're all Engineers by the time you get to the date of launch all those red arrows are the main",
    "start": "1101299",
    "end": "1107539"
  },
  {
    "text": "way that the applications are communicating with each other and the event bus is just used occasionally",
    "start": "1107539",
    "end": "1112940"
  },
  {
    "text": "uh so Crossing that line and starting with those red arrows is often where the problem happens",
    "start": "1112940",
    "end": "1119419"
  },
  {
    "text": "here's another architecture diagram for a distributed monolith I can tell from",
    "start": "1119419",
    "end": "1124700"
  },
  {
    "text": "the looks every time I give this talk I can tell from the looks on people's faces who has this one at work so I",
    "start": "1124700",
    "end": "1130700"
  },
  {
    "text": "won't call you out and turn you in uh but this is probably the most common",
    "start": "1130700",
    "end": "1136340"
  },
  {
    "text": "distributed monolith architecture that I see and the it starts out very",
    "start": "1136340",
    "end": "1141679"
  },
  {
    "text": "innocently uh probably a lot of us have a database person on our team database",
    "start": "1141679",
    "end": "1147260"
  },
  {
    "text": "administrator database developer or something like that someone who's basically in charge of the database maybe a whole team that's in charge of",
    "start": "1147260",
    "end": "1153320"
  },
  {
    "text": "the database right they've learned for decades they've been taught not to make multiple copies of data to normalize",
    "start": "1153320",
    "end": "1160340"
  },
  {
    "text": "data to have one piece of data in one place so that you don't end up with update anomalies all of that good stuff",
    "start": "1160340",
    "end": "1166520"
  },
  {
    "text": "about data normalization right they've had that beat into their heads for decades now in in the software industry",
    "start": "1166520",
    "end": "1173860"
  },
  {
    "text": "and now here comes you after a conference saying hey database team wouldn't it be fun to make a mom to make",
    "start": "1173860",
    "end": "1181460"
  },
  {
    "text": "a micro service by the way that means that we're going to need a ton of different databases that you're going to have to administer",
    "start": "1181460",
    "end": "1187880"
  },
  {
    "text": "oh and also we're going to copy data all over the place it's going to be in multiple places it's going to take a",
    "start": "1187880",
    "end": "1193880"
  },
  {
    "text": "long time for it to all update it's going to have to propagate throughout the application to get all of the",
    "start": "1193880",
    "end": "1199340"
  },
  {
    "text": "different databases updated whenever something changes that's shared between them and most good database teams that",
    "start": "1199340",
    "end": "1206600"
  },
  {
    "text": "have been doing monoliths for years are going to say you can do whatever you",
    "start": "1206600",
    "end": "1211880"
  },
  {
    "text": "want in that middle tier you can have fun do that cool microservices architecture that you learned at the",
    "start": "1211880",
    "end": "1217220"
  },
  {
    "text": "conference but you're not touching my database right and so what ends up happening is the",
    "start": "1217220",
    "end": "1222919"
  },
  {
    "text": "application tier people that team will do a microservices architecture but the database team won't allow them to do and",
    "start": "1222919",
    "end": "1230360"
  },
  {
    "text": "they might say well we'll just not we'll just make different tables we'll maybe use a schema to separate them so that we",
    "start": "1230360",
    "end": "1236000"
  },
  {
    "text": "can kind of tell which schema goes with which database with which application but we'll store them all in the same",
    "start": "1236000",
    "end": "1241760"
  },
  {
    "text": "database and it'll still be kind of a micro service but as soon as you do that then these applications can access each",
    "start": "1241760",
    "end": "1248660"
  },
  {
    "text": "other's data stores then you start getting coupling between these modules",
    "start": "1248660",
    "end": "1254419"
  },
  {
    "text": "so with those three different types of applications I want to add a fourth one which is called a modular monolith and I",
    "start": "1254419",
    "end": "1263000"
  },
  {
    "text": "want to differentiate that from the distributed monolith that we were just talking about and a Third Kind which I",
    "start": "1263000",
    "end": "1270200"
  },
  {
    "text": "have a high confidence that's that many of us in the room have worked on before which I'm going to call the ball of mud",
    "start": "1270200",
    "end": "1276559"
  },
  {
    "text": "monolith and you know you worked on a ball of mud monolith when you go to fix a bug in the",
    "start": "1276559",
    "end": "1282500"
  },
  {
    "text": "code you make one simple change and fix that one bug test it everything looks",
    "start": "1282500",
    "end": "1288320"
  },
  {
    "text": "good you deploy it and it broke five other things right this is where there's so much coupling in the code",
    "start": "1288320",
    "end": "1294919"
  },
  {
    "text": "so much you know bad practices going on that you can't fix everything without",
    "start": "1294919",
    "end": "1300740"
  },
  {
    "text": "breaking everything else that's a ball of mud monolith I think usually when you're in one of these microservices talks you hear people talk",
    "start": "1300740",
    "end": "1307460"
  },
  {
    "text": "about the monolith it's kind of the bad guy in those stories right because they're saying here's microservices architectures and what they're good at",
    "start": "1307460",
    "end": "1314480"
  },
  {
    "text": "and when you're talking about the monolith they'll say here's monoliths and what they're bad at and oftentimes",
    "start": "1314480",
    "end": "1320059"
  },
  {
    "text": "you know when you're when you're comparing and contrasting it's helpful to compare and contrast to like the worst case scenario I think often what",
    "start": "1320059",
    "end": "1326539"
  },
  {
    "text": "they're talking about is actually that ball of mud monolith there is such a thing as a good monolith that's where",
    "start": "1326539",
    "end": "1331820"
  },
  {
    "text": "you've created the code very modularly you can make updates without breaking",
    "start": "1331820",
    "end": "1336980"
  },
  {
    "text": "other things it's really easy to read and understand the code new people join the team and they get up to speed fairly",
    "start": "1336980",
    "end": "1342740"
  },
  {
    "text": "quickly those are all the types of things that indicate that you've got a modular monolith now you'll notice that those two types",
    "start": "1342740",
    "end": "1350480"
  },
  {
    "text": "of monoliths plus the distributed monolith and the true microservices I've graphed here with a couple of axes",
    "start": "1350480",
    "end": "1357620"
  },
  {
    "text": "the first axis the vertical one is how physically separated they are so on the bottom we've got a mod you know not",
    "start": "1357620",
    "end": "1363679"
  },
  {
    "text": "separated monolithic on the top we've got that they're distributed and then along the bottom I've got how logically",
    "start": "1363679",
    "end": "1370640"
  },
  {
    "text": "separated they are so we've got modular I'm sorry monolithic logically meaning",
    "start": "1370640",
    "end": "1376039"
  },
  {
    "text": "that the whole application is written in a way where there's High coupling between the modules and then very",
    "start": "1376039",
    "end": "1383360"
  },
  {
    "text": "modular on the right hand side so what you notice here is that the ball of mud monolith",
    "start": "1383360",
    "end": "1389419"
  },
  {
    "text": "is written in a highly coupled way a monolithic logically application and it's deployed as a single application",
    "start": "1389419",
    "end": "1396860"
  },
  {
    "text": "so the problem isn't the fact that it's deployed as a single application necessarily there are some downsides to",
    "start": "1396860",
    "end": "1403520"
  },
  {
    "text": "that availability for example but the problem is the fact that it's actually",
    "start": "1403520",
    "end": "1409419"
  },
  {
    "text": "monolithic logically right that's what makes the ball of mud bad and the way you fix that if you want",
    "start": "1409419",
    "end": "1415280"
  },
  {
    "text": "to leave it as a monolith is to make it a modular Model S refactor the code so that the the different modules within",
    "start": "1415280",
    "end": "1422480"
  },
  {
    "text": "the code have more healthy relationships with each other the same is true of the distributed monolith and true microservices if you",
    "start": "1422480",
    "end": "1429980"
  },
  {
    "text": "set out to build microservices but you couple everything together you're going to end up with a distributed monolith if",
    "start": "1429980",
    "end": "1435980"
  },
  {
    "text": "you truly keep things separate that's where you end up with the true microservices",
    "start": "1435980",
    "end": "1441260"
  },
  {
    "text": "okay so now we've talked about kind of the definitions hopefully we're on the same page about all of those things if",
    "start": "1441260",
    "end": "1447980"
  },
  {
    "text": "you came in here not knowing what I meant by a distributed monolith hopefully you understand now so now I want to talk about the 10",
    "start": "1447980",
    "end": "1454640"
  },
  {
    "text": "pitfalls that I see that are the most common uh that cause a microservice to",
    "start": "1454640",
    "end": "1460039"
  },
  {
    "text": "accidentally become a distributed monolith monster all right so problem number one I've",
    "start": "1460039",
    "end": "1466220"
  },
  {
    "text": "alluded to this one already a couple times and problem number one is assuming that microservices are always better",
    "start": "1466220",
    "end": "1472460"
  },
  {
    "text": "now I'm not going to accuse all of you because you look very smart uh I'm not going to accuse you of this but",
    "start": "1472460",
    "end": "1478280"
  },
  {
    "text": "sometimes Engineers can get caught up in the new cool architectures and want to do them on their project whether they're",
    "start": "1478280",
    "end": "1483799"
  },
  {
    "text": "a good fit for their project or not right none of you I can tell from your faces none of you know what I'm talking",
    "start": "1483799",
    "end": "1489620"
  },
  {
    "text": "about but some of the people you work with right who aren't here today do this",
    "start": "1489620",
    "end": "1495679"
  },
  {
    "text": "uh this is especially true for smart people like you and I really mean this sincerely who come to a conference and",
    "start": "1495679",
    "end": "1501320"
  },
  {
    "text": "want to learn new things right you're here to learn new things you're going to hear probably somebody talk about how great microservices are and I would",
    "start": "1501320",
    "end": "1507860"
  },
  {
    "text": "agree with that sentiment microservice is a great architecture for what it's good at but if you don't need",
    "start": "1507860",
    "end": "1513679"
  },
  {
    "text": "microservices and you use it it's going to be just like anything else that isn't the right tool for the job if you're",
    "start": "1513679",
    "end": "1519799"
  },
  {
    "text": "trying to open a can of soda and you're using a hammer that's not going to be the best tool for",
    "start": "1519799",
    "end": "1525440"
  },
  {
    "text": "that job and you're going to make a real mess so my first rule for microservices is",
    "start": "1525440",
    "end": "1532400"
  },
  {
    "text": "don't assume that it's necessarily the right thing for your project unless you have what Sam Newman calls a really good",
    "start": "1532400",
    "end": "1538940"
  },
  {
    "text": "reason anybody familiar with Sam Newman Sam Newman in the room he's actually here at the conference with us",
    "start": "1538940",
    "end": "1544640"
  },
  {
    "text": "no okay he didn't want to admit it anyway um he is actually talking tomorrow so if",
    "start": "1544640",
    "end": "1550159"
  },
  {
    "text": "you uh if you want to learn more about microservices he has a talk tomorrow he's written a lot of really great stuff about microservices so you all are very",
    "start": "1550159",
    "end": "1556760"
  },
  {
    "text": "lucky that he's kind of here in your own backyard um having a really good reason though is",
    "start": "1556760",
    "end": "1563000"
  },
  {
    "text": "what he says and there's lots of bad reasons there's a few good reasons hopefully by the end of this talk you'll",
    "start": "1563000",
    "end": "1568940"
  },
  {
    "text": "be able to tell those apart things I want to underscore here though are that monoliths aren't necessarily",
    "start": "1568940",
    "end": "1575179"
  },
  {
    "text": "bad and they are scalable microservices are really hard to do so",
    "start": "1575179",
    "end": "1580520"
  },
  {
    "text": "if you have a whole team of people that are excited to do microservices but nobody on the team has ever built one",
    "start": "1580520",
    "end": "1586340"
  },
  {
    "text": "successfully before your chances of success are a bit lower than I would",
    "start": "1586340",
    "end": "1591559"
  },
  {
    "text": "like them to be if I was your boss I would say let's not maybe take that big of a risk or let's try and bring",
    "start": "1591559",
    "end": "1597679"
  },
  {
    "text": "somebody into the team who has some experience with this so that we don't make lots of mistakes because it is very",
    "start": "1597679",
    "end": "1602840"
  },
  {
    "text": "easy to do uh also if you create them for the wrong reason you're going to end up with this",
    "start": "1602840",
    "end": "1608419"
  },
  {
    "text": "distributed monolith instead of microservices which I mentioned before is going to be the worst of Both Worlds",
    "start": "1608419",
    "end": "1616179"
  },
  {
    "text": "um some good reasons to create microservices another person who's who speaks a lot",
    "start": "1616220",
    "end": "1622460"
  },
  {
    "text": "about microservices is James Lewis and he says that microservices architectures buy you options and what does he mean by",
    "start": "1622460",
    "end": "1630380"
  },
  {
    "text": "that well it gives you some options like independent deployability we talked about that already it gives you options",
    "start": "1630380",
    "end": "1636380"
  },
  {
    "text": "like scalability that you don't have in a monolith more Precision in your",
    "start": "1636380",
    "end": "1641480"
  },
  {
    "text": "scalability however it does it as a trade-off that's what the buy that's why I've highlighted",
    "start": "1641480",
    "end": "1647179"
  },
  {
    "text": "the buy word there you have to trade something to get something and uh",
    "start": "1647179",
    "end": "1653179"
  },
  {
    "text": "this is what you have to trade if you only remember one thing from The Talk today I hope this is it because this is",
    "start": "1653179",
    "end": "1659900"
  },
  {
    "text": "the I think the most important piece of information in here if you've never built microservices before",
    "start": "1659900",
    "end": "1665419"
  },
  {
    "text": "microservices are inherently High availability but they are inherently low",
    "start": "1665419",
    "end": "1670820"
  },
  {
    "text": "consistency or or eventual consistency as it's called monoliths are very good at immediate",
    "start": "1670820",
    "end": "1678919"
  },
  {
    "text": "consistency which is what I was referring to earlier as data throughput and really bad at",
    "start": "1678919",
    "end": "1686360"
  },
  {
    "text": "High availability so if you uh if you have a project that really needs",
    "start": "1686360",
    "end": "1692539"
  },
  {
    "text": "immediate consistency and you're trying to make microservice to do it it's probably not going to be a good fit and",
    "start": "1692539",
    "end": "1698539"
  },
  {
    "text": "you're going to be going uphill the whole time similarly if you if you need",
    "start": "1698539",
    "end": "1703760"
  },
  {
    "text": "a project if you need your project to be highly available if you need to be able to take modules down for maintenance",
    "start": "1703760",
    "end": "1709460"
  },
  {
    "text": "while other modules stay online and you build that as a monolith you probably already know if you've built a monolith",
    "start": "1709460",
    "end": "1714919"
  },
  {
    "text": "like that before but that's not going to be a very good fit for your needs so this is what I would say is maybe the",
    "start": "1714919",
    "end": "1721039"
  },
  {
    "text": "most important consideration when you're thinking about having a good reason the problem number two I wanted to",
    "start": "1721039",
    "end": "1726919"
  },
  {
    "text": "mention is shared data using shared data store or shared data models this is a",
    "start": "1726919",
    "end": "1732140"
  },
  {
    "text": "common problem that I see this is basically what happens when",
    "start": "1732140",
    "end": "1737419"
  },
  {
    "text": "especially when you're using this particular architectural diagram that I showed earlier where you're sharing the",
    "start": "1737419",
    "end": "1742760"
  },
  {
    "text": "database so what happens here is that the first module",
    "start": "1742760",
    "end": "1748760"
  },
  {
    "text": "needs to make some sort of a breaking change to one of their tables let's say changing a column type changing a column",
    "start": "1748760",
    "end": "1755659"
  },
  {
    "text": "name something like that if that table is shared or if it's available to be shared to other modules",
    "start": "1755659",
    "end": "1762500"
  },
  {
    "text": "there's a chance hopefully at the beginning you know you start you set out to not do this but at some point",
    "start": "1762500",
    "end": "1768260"
  },
  {
    "text": "somebody over here who doesn't know better or hopes that they get away with it is going to actually write some code",
    "start": "1768260",
    "end": "1774080"
  },
  {
    "text": "that accesses that table whether you intend them to or not eventually that will happen at oops at that point that",
    "start": "1774080",
    "end": "1782179"
  },
  {
    "text": "person just broke that application or that application just broke unbeknownst to that team when the first team went in",
    "start": "1782179",
    "end": "1790279"
  },
  {
    "text": "and changed something so this is how these end up being coupled together just by sharing the",
    "start": "1790279",
    "end": "1795799"
  },
  {
    "text": "same data store the same goes for if you're if you're using data models like classes that actually store your data",
    "start": "1795799",
    "end": "1801740"
  },
  {
    "text": "and you actually share those so that that you know maybe downloads from your git repository and the same and the",
    "start": "1801740",
    "end": "1807260"
  },
  {
    "text": "projects are using the same git repository for that data model the same",
    "start": "1807260",
    "end": "1812600"
  },
  {
    "text": "thing happens if someone makes a change to the data model pushes it into that shared git repository now the next time",
    "start": "1812600",
    "end": "1819500"
  },
  {
    "text": "um you you download that and try and build your other microservice it is",
    "start": "1819500",
    "end": "1826039"
  },
  {
    "text": "going to not work anymore and hopefully you'll get a build error at least in that case but as you can see in this",
    "start": "1826039",
    "end": "1832340"
  },
  {
    "text": "case if you actually changing your data store you're not probably going to get any build errors you're just going to get runtime errors",
    "start": "1832340",
    "end": "1840580"
  },
  {
    "text": "example using my hotel example from before so if you imagine that you have a",
    "start": "1840580",
    "end": "1846200"
  },
  {
    "text": "bunch of different Hotel microservices including reservations maintenance and housekeeping plus a couple others",
    "start": "1846200",
    "end": "1853279"
  },
  {
    "text": "if you were doing that in a monolith you would want to store anything that was true about a room in the hotel you'd",
    "start": "1853279",
    "end": "1859520"
  },
  {
    "text": "want to store that into a single entity that would probably be in a single model in your code and probably in a single",
    "start": "1859520",
    "end": "1864919"
  },
  {
    "text": "database in your I'm sorry in a single table in your database might look something like this where you have a",
    "start": "1864919",
    "end": "1870919"
  },
  {
    "text": "Boolean to tell you whether or not the room is currently occupied number of beds that are in that room how long it",
    "start": "1870919",
    "end": "1877039"
  },
  {
    "text": "takes to clean that room in minutes maybe some related entities some like child entities like the repair history",
    "start": "1877039",
    "end": "1883039"
  },
  {
    "text": "for that room might be in there and that's typically how you would do it in a monolith",
    "start": "1883039",
    "end": "1888440"
  },
  {
    "text": "now imagine you're doing that in a shared database and the maintenance I'm sorry the",
    "start": "1888440",
    "end": "1895940"
  },
  {
    "text": "housekeeping team comes in and says you know we don't really care about uh how many seconds it takes to clean a",
    "start": "1895940",
    "end": "1903380"
  },
  {
    "text": "room we're really more just interested in the number of minutes let's go ahead and change that from a float to an INT",
    "start": "1903380",
    "end": "1908899"
  },
  {
    "text": "and now if this data model is used by multiple",
    "start": "1908899",
    "end": "1914860"
  },
  {
    "text": "microservices within your application now you've just broken the other ones that are also using that so in this case",
    "start": "1914860",
    "end": "1921440"
  },
  {
    "text": "the reservations and the maintenance services just broke now hopefully again that's going to",
    "start": "1921440",
    "end": "1926720"
  },
  {
    "text": "happen at um at runtime but if you've also changed the data store to match this type so it goes from an into a",
    "start": "1926720",
    "end": "1932720"
  },
  {
    "text": "float now that's not going to map from your data store correctly anymore to the maintenance and the reservations",
    "start": "1932720",
    "end": "1938299"
  },
  {
    "text": "services and you're going to get a runtime error so either way you're creating some pretty serious coupling",
    "start": "1938299",
    "end": "1944600"
  },
  {
    "text": "between your applications the quote unquote correct way to do this",
    "start": "1944600",
    "end": "1949840"
  },
  {
    "text": "in microservices to actually separate those properties out and so that each",
    "start": "1949840",
    "end": "1955220"
  },
  {
    "text": "module gets its own properties and that it owns",
    "start": "1955220",
    "end": "1960740"
  },
  {
    "text": "as you can see here I've made a nice perfect example that doesn't have any complications with it you notice that",
    "start": "1960740",
    "end": "1966440"
  },
  {
    "text": "none of them need to be shared so I created a very nice happy path example here and you might be wondering what",
    "start": "1966440",
    "end": "1973399"
  },
  {
    "text": "happens Jay when you do need to share a property between them so imagine that there I've now added an",
    "start": "1973399",
    "end": "1980179"
  },
  {
    "text": "admin Service as the second one so that's where you go to create a new room there's been a an addition to the hotel",
    "start": "1980179",
    "end": "1987020"
  },
  {
    "text": "and you have some rooms that you need to add so you go into the admin module and you add some new rooms you create those",
    "start": "1987020",
    "end": "1994399"
  },
  {
    "text": "in the admin module in its database as a hotel room with a room number",
    "start": "1994399",
    "end": "2000700"
  },
  {
    "text": "that room number is something that you're probably going to need in all of the different micro Services right but",
    "start": "2000700",
    "end": "2006159"
  },
  {
    "text": "it's going to be owned here by this admin module so what does that look like well in a microservice that's Loosely",
    "start": "2006159",
    "end": "2013899"
  },
  {
    "text": "coupled that's going to send an event to the event bus anything that has subscribed to that",
    "start": "2013899",
    "end": "2020620"
  },
  {
    "text": "event which let's say all three of these other services have subscribed to the hotel room update event or hotel you",
    "start": "2020620",
    "end": "2028120"
  },
  {
    "text": "know create update event they're going to subscribe to that event they're going to get an event notification from the event bus and",
    "start": "2028120",
    "end": "2034600"
  },
  {
    "text": "they're going to have a chance to run some of their own code which in this case means that they're probably going to basically add their",
    "start": "2034600",
    "end": "2041140"
  },
  {
    "text": "own copy of that hotel room to their data store so that when this hotel room comes up later they now have that in",
    "start": "2041140",
    "end": "2047019"
  },
  {
    "text": "there for example the reservations service needs to know about that hotel room so someone can reserve it",
    "start": "2047019",
    "end": "2053919"
  },
  {
    "text": "so that's that's kind of the non-happy path if you do need to share something that's what that might look like in a",
    "start": "2053919",
    "end": "2059560"
  },
  {
    "text": "microservice problem number three that I see is microservices that are too big",
    "start": "2059560",
    "end": "2066940"
  },
  {
    "text": "there's this whole field called domain driven development is anybody familiar with that already okay quite a few of us",
    "start": "2066940",
    "end": "2075520"
  },
  {
    "text": "um it's complicated for those that uh that rose raised your hand just now you know this domain driven development is a",
    "start": "2075520",
    "end": "2081760"
  },
  {
    "text": "huge topic we could talk for many hours just about this so instead of talking about domain driven development and how",
    "start": "2081760",
    "end": "2087638"
  },
  {
    "text": "that applies to microservices here I'll mention a really good book to start with",
    "start": "2087639",
    "end": "2092700"
  },
  {
    "text": "which is this domain driven design book if you want to understand how to",
    "start": "2092700",
    "end": "2098380"
  },
  {
    "text": "architect a microservices application I highly recommend that you learn about domain driven design or DVD for short",
    "start": "2098380",
    "end": "2105820"
  },
  {
    "text": "and that this book is a really good place to to learn that from however if you would like a shortcut version of it",
    "start": "2105820",
    "end": "2111820"
  },
  {
    "text": "let me explain what my shortcut version is which is my simple rule instead of",
    "start": "2111820",
    "end": "2116980"
  },
  {
    "text": "all the stuff that you need to know from DDD is that you're trying to create the smallest possible microservices without",
    "start": "2116980",
    "end": "2123420"
  },
  {
    "text": "chatty communication between them now smallest and chatty are up for debate",
    "start": "2123420",
    "end": "2129760"
  },
  {
    "text": "right those are not measurable terms but basically if you think of it as a",
    "start": "2129760",
    "end": "2136720"
  },
  {
    "text": "balancing arm on one side you've got how big the service is and on the other side you have how much that service needs to",
    "start": "2136720",
    "end": "2143680"
  },
  {
    "text": "send events to other services if that event has to send lots of everything it does it has to send events",
    "start": "2143680",
    "end": "2150220"
  },
  {
    "text": "to have other services do things that might be too chatty if",
    "start": "2150220",
    "end": "2155560"
  },
  {
    "text": "it's too and it might be too small excuse me it might be too small",
    "start": "2155560",
    "end": "2160839"
  },
  {
    "text": "if uh if it's doing that and if it's too big then it's not sending an event ever",
    "start": "2160839",
    "end": "2166900"
  },
  {
    "text": "right it's never sending an event to do anything anywhere else it's basically a monolith pretending to be a microservice",
    "start": "2166900",
    "end": "2174940"
  },
  {
    "text": "the opposite problem of that is true as well I see sometimes services that are too small so if you imagine a scenario",
    "start": "2174940",
    "end": "2181260"
  },
  {
    "text": "where you said okay Jay said not to make the services too",
    "start": "2181260",
    "end": "2187180"
  },
  {
    "text": "big it's called microservices right I'm going to make them as micro as I can I'm",
    "start": "2187180",
    "end": "2192579"
  },
  {
    "text": "going to take every end point and it's going to be its own service what could possibly go wrong",
    "start": "2192579",
    "end": "2198040"
  },
  {
    "text": "well imagine this scenario where you've got some sort of like user maintenance module here and you've got a login and a",
    "start": "2198040",
    "end": "2204880"
  },
  {
    "text": "password reset and you've made those two endpoints totally separate services from each other well these are going to have",
    "start": "2204880",
    "end": "2210520"
  },
  {
    "text": "to communicate to each other a lot every time you do a password reset that's going to have to communicate to the login service so that the new password",
    "start": "2210520",
    "end": "2216640"
  },
  {
    "text": "is there maybe if you have like a lockout password reset after a certain",
    "start": "2216640",
    "end": "2222099"
  },
  {
    "text": "number of failures the login service is also going to have to communicate to the password reset module to tell how many",
    "start": "2222099",
    "end": "2228460"
  },
  {
    "text": "uh how many attempts there's been there's going to be a lot of communication between these two they're always going to be updating indirectly",
    "start": "2228460",
    "end": "2235180"
  },
  {
    "text": "hopefully updating each other's data stores and so this is probably too chatty these",
    "start": "2235180",
    "end": "2241599"
  },
  {
    "text": "services are too small so uh",
    "start": "2241599",
    "end": "2247119"
  },
  {
    "text": "the solution in this case would be to combine those obviously into a single user service and to have these be two",
    "start": "2247119",
    "end": "2253300"
  },
  {
    "text": "different endpoints in that same service problem number five is starting from scratch",
    "start": "2253300",
    "end": "2260800"
  },
  {
    "text": "uh now Engineers always like to start from scratch right who prefers Brownfield",
    "start": "2260800",
    "end": "2266800"
  },
  {
    "text": "projects to Greenfield projects okay there's two people who love pain in the",
    "start": "2266800",
    "end": "2273099"
  },
  {
    "text": "room um no actually maybe those two people are smarter than the rest of us because",
    "start": "2273099",
    "end": "2279579"
  },
  {
    "text": "actually starting from scratch is much harder in some ways let's talk about how",
    "start": "2279579",
    "end": "2285400"
  },
  {
    "text": "so when you're migrating a Brownfield project you have I believe these four advantages if you're trying to migrate a",
    "start": "2285400",
    "end": "2291520"
  },
  {
    "text": "Brownfield project to a microservices architecture the first one is that the code that already exists",
    "start": "2291520",
    "end": "2298359"
  },
  {
    "text": "is basically a documentation of all the relationships that exist between the different entities between the different",
    "start": "2298359",
    "end": "2304240"
  },
  {
    "text": "modules you can basically go to whoever wrote that code or maybe there's maybe you're",
    "start": "2304240",
    "end": "2309520"
  },
  {
    "text": "the one company out of 100 that has documentation about that code that you could actually read",
    "start": "2309520",
    "end": "2314740"
  },
  {
    "text": "but excuse me all of that stuff exists and you can go look at the code you can",
    "start": "2314740",
    "end": "2320140"
  },
  {
    "text": "actually look at um like code diagrams and see oh this relates to this entity relates to that",
    "start": "2320140",
    "end": "2326020"
  },
  {
    "text": "entity one-to-many relationship all of those types of things are documented in your code in your database and your",
    "start": "2326020",
    "end": "2331480"
  },
  {
    "text": "documentation that's a huge Advantage when you're trying to make all of these decisions about where to draw the line",
    "start": "2331480",
    "end": "2336579"
  },
  {
    "text": "between different microservices in your application to know this thing and this thing have a ton of relationships to",
    "start": "2336579",
    "end": "2342520"
  },
  {
    "text": "each other maybe that means that they should go into the same microservice",
    "start": "2342520",
    "end": "2347920"
  },
  {
    "text": "service together number two you have people to talk to that know the system when you're doing a",
    "start": "2347920",
    "end": "2354520"
  },
  {
    "text": "green field project you're often talking to the business right about requirements and what what does this need to do what",
    "start": "2354520",
    "end": "2359980"
  },
  {
    "text": "are you trying to do how does this normally work what are your current processes a lot of that stuff as you know you can",
    "start": "2359980",
    "end": "2366460"
  },
  {
    "text": "get wrong information there if there's a team that's already built an application even if it's a monolith even if it's a",
    "start": "2366460",
    "end": "2372160"
  },
  {
    "text": "ball of mud monolith they have had a lot of those conversations they know what they wish they had done differently in",
    "start": "2372160",
    "end": "2377980"
  },
  {
    "text": "the past they know what works and what doesn't work about that monolith that currently exists and you can talk to",
    "start": "2377980",
    "end": "2384099"
  },
  {
    "text": "those people of course if that's you then there's a different problem I guess right number three is that the system",
    "start": "2384099",
    "end": "2390760"
  },
  {
    "text": "already works why is this good it buys you time if you're trying to do something as",
    "start": "2390760",
    "end": "2395980"
  },
  {
    "text": "complicated as a microservices architecture and you want to get it right you don't want to be always having your",
    "start": "2395980",
    "end": "2403060"
  },
  {
    "text": "boss breathing down your neck saying when is it going to be done when's it going to be done how much greater would it be to have a",
    "start": "2403060",
    "end": "2409000"
  },
  {
    "text": "system that's already handling whatever that system does to take some of the pressure off while you work on getting",
    "start": "2409000",
    "end": "2414940"
  },
  {
    "text": "the microservices correct that's a huge advantage and then the last one I think is really",
    "start": "2414940",
    "end": "2420160"
  },
  {
    "text": "huge which is having a baseline to compare to so you can actually do you can actually measure some statistics",
    "start": "2420160",
    "end": "2427599"
  },
  {
    "text": "on your current monolithic application if you have one already and you can compare those as you launch different",
    "start": "2427599",
    "end": "2433839"
  },
  {
    "text": "modules as microservices you can compare them and say what's working better what's working worse are we doing this",
    "start": "2433839",
    "end": "2440859"
  },
  {
    "text": "correctly is it actually more highly available than it was before are we",
    "start": "2440859",
    "end": "2446560"
  },
  {
    "text": "actually able to independently deploy things uh is the performance any better are we able to scale things more",
    "start": "2446560",
    "end": "2453119"
  },
  {
    "text": "precisely all of those questions you can actually measure against something instead of just kind of a rough guess",
    "start": "2453119",
    "end": "2459940"
  },
  {
    "text": "like yes this feels good to me or it feels bad to me which is which is the case if you're doing a Greenfield",
    "start": "2459940",
    "end": "2465640"
  },
  {
    "text": "project if you are migrating a project you're going to want to think about how you go",
    "start": "2465640",
    "end": "2472180"
  },
  {
    "text": "about doing it this is always something that we talk about with our clients what strategy are we going to use to",
    "start": "2472180",
    "end": "2478060"
  },
  {
    "text": "migrate an existing micro monolith to microservice the first one is the Big Bang this is",
    "start": "2478060",
    "end": "2484180"
  },
  {
    "text": "where you do it all at once this is usually what this looks like is a bunch",
    "start": "2484180",
    "end": "2489700"
  },
  {
    "text": "of developers get locked into a conference room someone slides Pizza under the door occasionally and says don't come out",
    "start": "2489700",
    "end": "2496540"
  },
  {
    "text": "until you're done right um this doesn't work very well for any kind",
    "start": "2496540",
    "end": "2502300"
  },
  {
    "text": "of medium or big size project this works really only for small projects and usually small projects don't really need",
    "start": "2502300",
    "end": "2508660"
  },
  {
    "text": "to be converted to microservices very much right they're already a small project so I don't really recommend this",
    "start": "2508660",
    "end": "2514960"
  },
  {
    "text": "approach but it is one that I have seen done and I've probably seen it fail more than I've seen it succeed the other one",
    "start": "2514960",
    "end": "2520960"
  },
  {
    "text": "is an evolutionary approach you could think of this one as also as waves so this is the approach where you refactor",
    "start": "2520960",
    "end": "2527380"
  },
  {
    "text": "your code to be more like microservices which makes the performance worse probably initially and then you refactor",
    "start": "2527380",
    "end": "2534460"
  },
  {
    "text": "it again to make it perform better then you say okay that's good now I'm",
    "start": "2534460",
    "end": "2540460"
  },
  {
    "text": "going to go back to the original app and pull out some more modules and make the microservices makes the performance",
    "start": "2540460",
    "end": "2545800"
  },
  {
    "text": "worse again okay now I'm going to refactor those to make them perform better it gets better and again right so",
    "start": "2545800",
    "end": "2551260"
  },
  {
    "text": "you keep doing that until you finished pulling everything out and refactoring it and you kind of get this wave effect",
    "start": "2551260",
    "end": "2556900"
  },
  {
    "text": "of things getting better worse better worse the last one is called the Strangler fig pattern if anybody heard of this one for",
    "start": "2556900",
    "end": "2563140"
  },
  {
    "text": "other things yeah okay good so for those that haven't heard of it before it's pretty simple this is where you create",
    "start": "2563140",
    "end": "2569380"
  },
  {
    "text": "like a facade layer you could use an API Gateway for this if you're doing microservices and you start refactoring",
    "start": "2569380",
    "end": "2575980"
  },
  {
    "text": "things from your legacy app to your modern app in this case it would be from your monolith to your microservices",
    "start": "2575980",
    "end": "2583180"
  },
  {
    "text": "and you keep moving things over there as you're moving them over you use that facade layer or the API Gateway to make",
    "start": "2583180",
    "end": "2590500"
  },
  {
    "text": "it basically all look exactly the same to the front end so the front end doesn't really have to change at all it's sort of unaware of what's going on",
    "start": "2590500",
    "end": "2597579"
  },
  {
    "text": "behind the facade layer and at some point you finish that migration process and everything is now in your modern",
    "start": "2597579",
    "end": "2604319"
  },
  {
    "text": "microservices app and theoretically at that point you could get rid of the facade although if it's an API Gateway",
    "start": "2604319",
    "end": "2610359"
  },
  {
    "text": "there's other advantages but at that point you finished the pattern now this comes from a Strangler fig plant which",
    "start": "2610359",
    "end": "2617560"
  },
  {
    "text": "as I understand actually grows it's dropped by birds and grows starting in",
    "start": "2617560",
    "end": "2623140"
  },
  {
    "text": "the limbs of a tree as a Vine it grows down the tree and eventually it gets",
    "start": "2623140",
    "end": "2628720"
  },
  {
    "text": "down to the base of the tree and wraps around the roots of the tree underground",
    "start": "2628720",
    "end": "2633760"
  },
  {
    "text": "that eventually chokes the life out of that tree the tree dies and it becomes just like a backbone for the vine now",
    "start": "2633760",
    "end": "2641200"
  },
  {
    "text": "it's giving the Divine access to the sunlight up high without the vine really having to do any of that work building",
    "start": "2641200",
    "end": "2647520"
  },
  {
    "text": "that trunk but the tree is now dead and has basically turned into something new so",
    "start": "2647520",
    "end": "2654099"
  },
  {
    "text": "it's kind of a sounds kind of a nasty little plant if you like trees but it's a great approach for migrating your",
    "start": "2654099",
    "end": "2661060"
  },
  {
    "text": "application from one technology to another uh number six now is coupling through",
    "start": "2661060",
    "end": "2668260"
  },
  {
    "text": "cross-cutting concerns there's a lot of cross-cutting concerns in our applications one example of that though",
    "start": "2668260",
    "end": "2673599"
  },
  {
    "text": "is logging and I highly recommend that you use logging into microservices along any",
    "start": "2673599",
    "end": "2679300"
  },
  {
    "text": "application but especially in a microservices application because it's so much harder to tell what's happening",
    "start": "2679300",
    "end": "2684940"
  },
  {
    "text": "in a microservices application if you imagine that you're trying to debug a particular scenario where somebody goes",
    "start": "2684940",
    "end": "2690400"
  },
  {
    "text": "in hits one endpoint in microservice a microservice a publishes an event",
    "start": "2690400",
    "end": "2695500"
  },
  {
    "text": "microservice B subscribes to that event does some update maybe that's where the bug happens updates its database wrong",
    "start": "2695500",
    "end": "2702040"
  },
  {
    "text": "and now all you know is that microservice B has some incorrect data in its data store and you don't really",
    "start": "2702040",
    "end": "2708760"
  },
  {
    "text": "know how it happens and it's pretty hard to go back and Trace all of those things that happened so logging is very",
    "start": "2708760",
    "end": "2715000"
  },
  {
    "text": "important but also if you write a single logging module and share that into all your applications you actually have the",
    "start": "2715000",
    "end": "2721720"
  },
  {
    "text": "potential to create some coupling there for example let's say it's logging to a database to a centralized database let's",
    "start": "2721720",
    "end": "2727420"
  },
  {
    "text": "say that database goes down now all your modules just went down right because your logging isn't working another",
    "start": "2727420",
    "end": "2733420"
  },
  {
    "text": "example let's say you write it it and I'm a.net guy so let's say you write that logging in the you know the best",
    "start": "2733420",
    "end": "2740380"
  },
  {
    "text": "platform available for developers.net but you have another team that wants to build a micro service module in Java or",
    "start": "2740380",
    "end": "2748240"
  },
  {
    "text": "something else now they're kind of stuck they can't use your logging because it's only in.net",
    "start": "2748240",
    "end": "2754780"
  },
  {
    "text": "right so you've you've coupled the whole team to using a particular Tech stack as well there's a lot of great Solutions out",
    "start": "2754780",
    "end": "2761200"
  },
  {
    "text": "there so just be aware of anytime you're doing a cross-cutting concern that you might want to look to see what the best",
    "start": "2761200",
    "end": "2766599"
  },
  {
    "text": "practice is I've given you an example here of a good tool to use for logging",
    "start": "2766599",
    "end": "2771640"
  },
  {
    "text": "it's called seek seq and it's inherently",
    "start": "2771640",
    "end": "2776880"
  },
  {
    "text": "distributed so it expects to be working as a distributed application it's",
    "start": "2776880",
    "end": "2782020"
  },
  {
    "text": "inherently fault tolerant it's got support for basically any platform or language that you've ever heard of",
    "start": "2782020",
    "end": "2788500"
  },
  {
    "text": "so it doesn't tie you into a particular Tech stack and it Embraces that eventual",
    "start": "2788500",
    "end": "2794560"
  },
  {
    "text": "consistency that is the watchword of microservices",
    "start": "2794560",
    "end": "2799599"
  },
  {
    "text": "so be careful when you're doing things like logging make sure you do these things still but make sure that you're",
    "start": "2799599",
    "end": "2804760"
  },
  {
    "text": "doing something that is compatible with microservices architecture and doesn't accidentally create coupling",
    "start": "2804760",
    "end": "2812140"
  },
  {
    "text": "number seven the use of synchronous communication let's take an example here where you've",
    "start": "2812140",
    "end": "2817960"
  },
  {
    "text": "got two modules and orders module and a customers module",
    "start": "2817960",
    "end": "2823540"
  },
  {
    "text": "let's say the orders module takes a couple of parameters uh it's a it's",
    "start": "2823540",
    "end": "2828700"
  },
  {
    "text": "receiving a new order it's going to get like all the details of the order and then maybe it's going to also get like a customer ID let's say",
    "start": "2828700",
    "end": "2836140"
  },
  {
    "text": "it's like an integer or a good or something that just identifies a customer and says this customer is ordering these items in these quantities",
    "start": "2836140",
    "end": "2844359"
  },
  {
    "text": "the very first thing that order service is going to have to do is figure out who this customer is now if you've gone and",
    "start": "2844359",
    "end": "2850720"
  },
  {
    "text": "just left that customer data only in your customer service you might be really tempted to do something like this where maybe you do like a rest API call",
    "start": "2850720",
    "end": "2857980"
  },
  {
    "text": "from your orders service over to your customers service and say why don't you",
    "start": "2857980",
    "end": "2864520"
  },
  {
    "text": "just give me customer ID one two three four five and while that's processing this order",
    "start": "2864520",
    "end": "2870819"
  },
  {
    "text": "service right these are this is a synchronous call it's a rest API uh it's waiting for that data to come back over",
    "start": "2870819",
    "end": "2877240"
  },
  {
    "text": "here from the customer's data store while that's waiting the order service",
    "start": "2877240",
    "end": "2882400"
  },
  {
    "text": "is also waiting right now in the best case scenario that data",
    "start": "2882400",
    "end": "2887680"
  },
  {
    "text": "comes back and says here's the details about that customer and the orders processing can continue uh with you know",
    "start": "2887680",
    "end": "2893920"
  },
  {
    "text": "the mailing address and whatever it needed from the customer now imagine that the customer service",
    "start": "2893920",
    "end": "2899980"
  },
  {
    "text": "goes down for maintenance and your order comes in with an order the order details",
    "start": "2899980",
    "end": "2905680"
  },
  {
    "text": "and the customer ID now this call basically fails immediately it gets a maybe a 500 or some other kind of you",
    "start": "2905680",
    "end": "2912940"
  },
  {
    "text": "know response that indicates that it's not available and now your order service actually went",
    "start": "2912940",
    "end": "2918280"
  },
  {
    "text": "down as well or imagine another scenario where the customer service is under heavy load",
    "start": "2918280",
    "end": "2924880"
  },
  {
    "text": "maybe somebody's going through and creating a bunch of new customers maybe that's a process that happens every",
    "start": "2924880",
    "end": "2930819"
  },
  {
    "text": "month or every year or something there's a bunch of load going on in this application now when this order service",
    "start": "2930819",
    "end": "2937319"
  },
  {
    "text": "gets a new order in it's not under any load or maybe it's just under its normal load everything is processing pretty",
    "start": "2937319",
    "end": "2943540"
  },
  {
    "text": "normally but now it has to wait three times as long four times as long for the or for the customer service to respond",
    "start": "2943540",
    "end": "2950440"
  },
  {
    "text": "now your order service just got slow because your customer service was low so are those really decoupled are those",
    "start": "2950440",
    "end": "2956859"
  },
  {
    "text": "independent from each other are you able to Precision scale them not really because if the customer service slow the",
    "start": "2956859",
    "end": "2963640"
  },
  {
    "text": "order service is slow now that story I told you at the beginning of this talk about a customer that asked us to help",
    "start": "2963640",
    "end": "2968920"
  },
  {
    "text": "with their application they had hundreds of these in between every microservice and every other microservice basically",
    "start": "2968920",
    "end": "2976180"
  },
  {
    "text": "making it a very slow monolith right every time anything happened instead of just executing the code from that other",
    "start": "2976180",
    "end": "2983020"
  },
  {
    "text": "module that needed to be executed they made a rest HTTP call now you all",
    "start": "2983020",
    "end": "2988960"
  },
  {
    "text": "probably know there's a lot more overhead with that than just executing in this case it was net c-sharp code",
    "start": "2988960",
    "end": "2995380"
  },
  {
    "text": "there's a lot more overhead in that than just making a procedure call in a programming language like c-sharp and so",
    "start": "2995380",
    "end": "3002220"
  },
  {
    "text": "their whole application got very slow furthermore because these arrows were between every module and every other module what would end up happening is",
    "start": "3002220",
    "end": "3009119"
  },
  {
    "text": "one module would get slowed due to actual load which would cause the three that called it to get slow which would",
    "start": "3009119",
    "end": "3015839"
  },
  {
    "text": "cause those three to slow down the nine that modules that called it and it only",
    "start": "3015839",
    "end": "3021780"
  },
  {
    "text": "took about a minute every time one module got slow for the whole application to get slow",
    "start": "3021780",
    "end": "3027599"
  },
  {
    "text": "uh and so this is a very dangerous one that you definitely want to avoid number eight is breaking changes to event",
    "start": "3027599",
    "end": "3034380"
  },
  {
    "text": "contracts you if you haven't done event uh events before if you haven't done microservices before you might have",
    "start": "3034380",
    "end": "3040140"
  },
  {
    "text": "already been thinking boy those events kind of end up being like a coupling between the modules right and that's",
    "start": "3040140",
    "end": "3046680"
  },
  {
    "text": "true which means you have to have some rules uh and you have to probably do some thinking and maybe even some",
    "start": "3046680",
    "end": "3052260"
  },
  {
    "text": "communicating between different teams to figure out what these rules are going to be and make sure everyone's doing the",
    "start": "3052260",
    "end": "3057359"
  },
  {
    "text": "same thing in the different service applications uh these are some rules that I suggest",
    "start": "3057359",
    "end": "3064140"
  },
  {
    "text": "just as a starting point and then obviously you need to have this discussion with all the different teams but number one is that no new required",
    "start": "3064140",
    "end": "3071520"
  },
  {
    "text": "Fields only optional Fields with documented default values well what do you do when you need to do",
    "start": "3071520",
    "end": "3077520"
  },
  {
    "text": "that um we'll talk about that in Rule Number Four rule number two is that any unrecognized",
    "start": "3077520",
    "end": "3084540"
  },
  {
    "text": "field will just be ignored but forwarded right so if you have a service that is going to process some event subscribing",
    "start": "3084540",
    "end": "3091140"
  },
  {
    "text": "to some event it sees a new field that it's never seen before it should just ignore that it apparently that's a new",
    "start": "3091140",
    "end": "3097380"
  },
  {
    "text": "field that it didn't need to know about right because it didn't exist when it was created but it should forward it in",
    "start": "3097380",
    "end": "3103440"
  },
  {
    "text": "other words if it actually publishes an event of its own after it does something it should forward that information on to",
    "start": "3103440",
    "end": "3109319"
  },
  {
    "text": "anyone else that might be subscribed because there might be some other microservice that does know what that is that needs it and so ignore but forward",
    "start": "3109319",
    "end": "3117720"
  },
  {
    "text": "rule number three consumers of optional Fields use default values when they're missing right so if",
    "start": "3117720",
    "end": "3124020"
  },
  {
    "text": "you are subscribing to an event and someone is publishing that event that doesn't know about a field that you need",
    "start": "3124020",
    "end": "3129059"
  },
  {
    "text": "there has to be some sort of a default value for that field and that's what you should assume the value is",
    "start": "3129059",
    "end": "3135240"
  },
  {
    "text": "and then number four is if you can't do these first three then you need to create a whole new event type so you",
    "start": "3135240",
    "end": "3141900"
  },
  {
    "text": "might have this isn't the naming convention I would suggest but if you started with a",
    "start": "3141900",
    "end": "3147859"
  },
  {
    "text": "to use our example from before if you started with a room updated event you might make this your room updated event",
    "start": "3147859",
    "end": "3154559"
  },
  {
    "text": "too right like you actually have to create a new event for this to make breaking changes and now any service",
    "start": "3154559",
    "end": "3161099"
  },
  {
    "text": "that publishes the event too is also going to have to publish the original event for anybody that's still",
    "start": "3161099",
    "end": "3167280"
  },
  {
    "text": "subscribed to that problem number nine that I see is not",
    "start": "3167280",
    "end": "3172740"
  },
  {
    "text": "automating builds and releases I'm sure none of you are doing this but I've seen a lot of our clients who you know still",
    "start": "3172740",
    "end": "3179760"
  },
  {
    "text": "haven't gotten into the whole automated CI CD devops thing and they come to us",
    "start": "3179760",
    "end": "3184800"
  },
  {
    "text": "and say hey we heard about microservices we think it might be a good fit for our application we'd like to do those one of",
    "start": "3184800",
    "end": "3191339"
  },
  {
    "text": "the very first questions I well the very first question I ask them is why microservices why is that a good fit for",
    "start": "3191339",
    "end": "3197040"
  },
  {
    "text": "your project just to try and hear if I hear any of the false things that I've been talking about with you all today or",
    "start": "3197040",
    "end": "3203819"
  },
  {
    "text": "if I hear any of the true good reasons you mentioned in there but then maybe the second thing I will ask them is do",
    "start": "3203819",
    "end": "3209220"
  },
  {
    "text": "you already have automated devops continuous integration continuous deployment in your in your application",
    "start": "3209220",
    "end": "3215520"
  },
  {
    "text": "or not the reason is because the whole point one of the whole points of microservices is high availability and",
    "start": "3215520",
    "end": "3222420"
  },
  {
    "text": "uh and the ability to independently deploy so the idea is that you might want to be",
    "start": "3222420",
    "end": "3228420"
  },
  {
    "text": "able to deploy pretty frequently and if you're doing that manually that's obviously",
    "start": "3228420",
    "end": "3234059"
  },
  {
    "text": "very time consuming very prone to error so I always say as a prerequisite if you",
    "start": "3234059",
    "end": "3240059"
  },
  {
    "text": "haven't um if you haven't done cicd already as an automated process",
    "start": "3240059",
    "end": "3247020"
  },
  {
    "text": "please consider doing this first before you start doing microservices you'll thank me later",
    "start": "3247020",
    "end": "3252900"
  },
  {
    "text": "number 10 is unencapsulated services this is really just another way of",
    "start": "3252900",
    "end": "3258660"
  },
  {
    "text": "saying um is talking about coupling loose coupling versus",
    "start": "3258660",
    "end": "3264420"
  },
  {
    "text": "too high coupling so you might have heard this analogy before that a well-defined defined",
    "start": "3264420",
    "end": "3270300"
  },
  {
    "text": "service is kind of like an iceberg you know that old saying that ninety percent of an iceberg is below the water line",
    "start": "3270300",
    "end": "3277200"
  },
  {
    "text": "and only 10 of it is above the same kind of goes for your API as a well-designed API whether it's for",
    "start": "3277200",
    "end": "3283619"
  },
  {
    "text": "microservices or not is going to have a very small surface area that is above",
    "start": "3283619",
    "end": "3288660"
  },
  {
    "text": "the water line and a much larger implementation what's great about this is that you can make you can make",
    "start": "3288660",
    "end": "3295619"
  },
  {
    "text": "changes to the implementation layer you can refactor things all you want you can",
    "start": "3295619",
    "end": "3302160"
  },
  {
    "text": "change how you're storing things you can change what events you're publishing all of that stuff can change pretty",
    "start": "3302160",
    "end": "3307740"
  },
  {
    "text": "frequently and you're not breaking anything from that API this also I would say",
    "start": "3307740",
    "end": "3313619"
  },
  {
    "text": "applies to events to the events that you publish as well now if you lower that water line",
    "start": "3313619",
    "end": "3320460"
  },
  {
    "text": "you can imagine that now anytime you make a change in the back end it's likely that you're going to have to make",
    "start": "3320460",
    "end": "3325500"
  },
  {
    "text": "a change in the front end too so simple single purpose apis that just do one",
    "start": "3325500",
    "end": "3330839"
  },
  {
    "text": "thing that are very unlikely to have their signatures change is going to make your life a lot easier whether that's an",
    "start": "3330839",
    "end": "3338040"
  },
  {
    "text": "event or whether that's like a rest API whatever it is if you're doing microservices designing those API as",
    "start": "3338040",
    "end": "3345119"
  },
  {
    "text": "well is going to make a big difference so think about that and maybe take a little extra time as you're designing",
    "start": "3345119",
    "end": "3350819"
  },
  {
    "text": "them bonus problem we made it through the 10 that I promised you and now you're",
    "start": "3350819",
    "end": "3355859"
  },
  {
    "text": "getting a free one totally free of charge extra which is mismatched teams",
    "start": "3355859",
    "end": "3363300"
  },
  {
    "text": "so remember you got a free bonus Pitfall here when you're rating it with the cards on your way out okay",
    "start": "3363300",
    "end": "3369480"
  },
  {
    "text": "that moves you up one card I think is the rule so what do I mean by small teams or mismatched teams",
    "start": "3369480",
    "end": "3377660"
  },
  {
    "text": "there we go there's a law called Conway's law that you may have heard before it's often talked about in",
    "start": "3379260",
    "end": "3386040"
  },
  {
    "text": "engineering it says that any organization that designs a system will produce a design",
    "start": "3386040",
    "end": "3392339"
  },
  {
    "text": "whose structures a copy of the organization organization's communication structure what does that mean basically it means that whatever",
    "start": "3392339",
    "end": "3400079"
  },
  {
    "text": "your team builds is going to look like your org chart right so the common example that's given",
    "start": "3400079",
    "end": "3406619"
  },
  {
    "text": "of that is if you give a team of Engineers if you get four teams of Engineers the job to build a compiler",
    "start": "3406619",
    "end": "3413880"
  },
  {
    "text": "they're going to create a four pass compiler what does that mean that basically means that there's going to be",
    "start": "3413880",
    "end": "3419579"
  },
  {
    "text": "four unique steps because there's no team that's going to basically say oh our contribution to this compiler is",
    "start": "3419579",
    "end": "3425520"
  },
  {
    "text": "actually handled perfectly by the other three teams so just ignore us just throw away what we built right every team is",
    "start": "3425520",
    "end": "3432720"
  },
  {
    "text": "going to say no ours is important to make sure that you do that so you're going to end up with four steps to that",
    "start": "3432720",
    "end": "3438300"
  },
  {
    "text": "process how does that apply to microservices well if you have a single team that's",
    "start": "3438300",
    "end": "3443700"
  },
  {
    "text": "working on multiple microservices uh and everyone kind of swatched swapped",
    "start": "3443700",
    "end": "3448980"
  },
  {
    "text": "around to all of those as needed you're probably going to end up with a product",
    "start": "3448980",
    "end": "3455280"
  },
  {
    "text": "that looks an awful lot like that team you're probably going to end up with a more monolithic product because everyone",
    "start": "3455280",
    "end": "3460680"
  },
  {
    "text": "knows everything else it's going to be more tempting for a team member who used",
    "start": "3460680",
    "end": "3465720"
  },
  {
    "text": "to be working on module a but it's now working on module B to know that module",
    "start": "3465720",
    "end": "3470940"
  },
  {
    "text": "a has some data that they want and to be tempted to go straight and get that data Maybe to copy and paste some code maybe",
    "start": "3470940",
    "end": "3477119"
  },
  {
    "text": "to make some of the decisions about the tech Stacks that are used on these different services so that people can be",
    "start": "3477119",
    "end": "3483420"
  },
  {
    "text": "swapped in and out of them basically it's going to cause your application to Veer in the direction of a monolith",
    "start": "3483420",
    "end": "3491700"
  },
  {
    "text": "so instead of having a single team that works on all your microservices an ideal setup would be to have one team work on",
    "start": "3491700",
    "end": "3498000"
  },
  {
    "text": "each micro service if these if you have a huge application complicated business",
    "start": "3498000",
    "end": "3503180"
  },
  {
    "text": "this can actually be really ideal because each of these teams can be an expert in each particular module in each",
    "start": "3503180",
    "end": "3510059"
  },
  {
    "text": "part of your business they don't really have to care about what's happening in the other parts as long as those teams",
    "start": "3510059",
    "end": "3515579"
  },
  {
    "text": "are working but um obviously this isn't totally practical you may not even have this",
    "start": "3515579",
    "end": "3521940"
  },
  {
    "text": "many people on your team so you know I don't think it's super important that it'd be a hundred percent",
    "start": "3521940",
    "end": "3528299"
  },
  {
    "text": "but just keep in mind that if you go 100 this way",
    "start": "3528299",
    "end": "3534619"
  },
  {
    "text": "that it's going to probably bump your application more into the monolithic Direction than you intend",
    "start": "3535260",
    "end": "3542099"
  },
  {
    "text": "but if you do something like this where you share uh one team maybe shares a couple different modules that's not",
    "start": "3542099",
    "end": "3548220"
  },
  {
    "text": "going to be the end of the world especially if they're always working on those two modules",
    "start": "3548220",
    "end": "3553559"
  },
  {
    "text": "all right so to sum up a little bit uh we talked about for lightweight applications that have a single team a",
    "start": "3553559",
    "end": "3561119"
  },
  {
    "text": "monolithic system might suit you better or more complex and evolving applications with clear different",
    "start": "3561119",
    "end": "3567359"
  },
  {
    "text": "domains between them to use the DVD terminology and if you want to use separate teams",
    "start": "3567359",
    "end": "3573240"
  },
  {
    "text": "that are experts in those different areas then microservices might be the best best the best bet",
    "start": "3573240",
    "end": "3578880"
  },
  {
    "text": "don't do microservices unless you have a really good reason to do it because",
    "start": "3578880",
    "end": "3584339"
  },
  {
    "text": "monoliths can be good too especially if they're a good fit for your project and then finally to avoid those 10 plus",
    "start": "3584339",
    "end": "3591420"
  },
  {
    "text": "1 free pitfalls that we just talked about so some further reading",
    "start": "3591420",
    "end": "3598260"
  },
  {
    "text": "if you're interested in learning more uh these three books here is where I would",
    "start": "3598260",
    "end": "3604920"
  },
  {
    "text": "start a couple of these are by Sam who I think writes the best stuff about microservices and then we also have this",
    "start": "3604920",
    "end": "3612299"
  },
  {
    "text": "one by Chris Richardson which is a good starting point uh then I would also recommend these",
    "start": "3612299",
    "end": "3619020"
  },
  {
    "text": "books as well Cloud native architectures and the Dao of microservices",
    "start": "3619020",
    "end": "3624839"
  },
  {
    "text": "so we defined monoliths microservices and distributed monoliths talked about those 10 Common pitfalls plus the bonus",
    "start": "3624839",
    "end": "3631260"
  },
  {
    "text": "one give you some further reading now I've just got a few minutes if anybody has",
    "start": "3631260",
    "end": "3636359"
  },
  {
    "text": "any questions they'd like to ask any burning questions in the room",
    "start": "3636359",
    "end": "3642059"
  },
  {
    "text": "yes",
    "start": "3642059",
    "end": "3644599"
  },
  {
    "text": "is",
    "start": "3648839",
    "end": "3651839"
  },
  {
    "text": "um yeah yeah so the question if I understood correctly is uh I talked a little bit about the migration patterns",
    "start": "3655859",
    "end": "3662400"
  },
  {
    "text": "and how do you do that at the database level is that correct uh so one of the things that hopefully",
    "start": "3662400",
    "end": "3667980"
  },
  {
    "text": "you noticed in the talk was that you're going to end up with some repeated data into different modules if you end up",
    "start": "3667980",
    "end": "3673920"
  },
  {
    "text": "going in the micro Services Direction so one of the options that you have is when you do kind of cut over to your first",
    "start": "3673920",
    "end": "3679920"
  },
  {
    "text": "microservice going live is that you're probably going to have to do a data migration project of some kind to get",
    "start": "3679920",
    "end": "3685559"
  },
  {
    "text": "that data initially loaded in there or you could use the event bus to just very",
    "start": "3685559",
    "end": "3690900"
  },
  {
    "text": "busily for a little while load data in there either way works obviously one is",
    "start": "3690900",
    "end": "3696720"
  },
  {
    "text": "faster than the other but at some point you're going to have duplicated data anyway so you're really going to start",
    "start": "3696720",
    "end": "3702180"
  },
  {
    "text": "out by duplicating some data into there that you need you'll also have to think through if in the in between this is",
    "start": "3702180",
    "end": "3709079"
  },
  {
    "text": "another question I commonly get that's kind of related to your question which is in that in between stage when you start going from a monolith to a",
    "start": "3709079",
    "end": "3716040"
  },
  {
    "text": "microservice aren't you basically creating a distributed monolith and the answer is yes I think that's unavoidable",
    "start": "3716040",
    "end": "3721700"
  },
  {
    "text": "just you know be careful of stopping there but hopefully that answers your question about databases did it",
    "start": "3721700",
    "end": "3728880"
  },
  {
    "text": "cool other questions yes in the front here yeah you mentioned",
    "start": "3728880",
    "end": "3734819"
  },
  {
    "text": "that there is a problem if you add more experience to events can you elaborate sure sure yeah so the question is about",
    "start": "3734819",
    "end": "3741960"
  },
  {
    "text": "changing your event signatures specifically adding Fields so adding Fields isn't necessarily a problem as",
    "start": "3741960",
    "end": "3749040"
  },
  {
    "text": "long as you write all of your event handling code to expect event uh expect",
    "start": "3749040",
    "end": "3755579"
  },
  {
    "text": "properties to be added to your events the big problem is if you remove one change the name of one change the type",
    "start": "3755579",
    "end": "3762180"
  },
  {
    "text": "of one right any breaking change like that that's the really big thing adding is okay as long as you kind of look at",
    "start": "3762180",
    "end": "3767940"
  },
  {
    "text": "those rules that I listed before the four rules if you assume that a property",
    "start": "3767940",
    "end": "3774480"
  },
  {
    "text": "is that's not there is a default value you have a particular default value all the new properties you",
    "start": "3774480",
    "end": "3780420"
  },
  {
    "text": "add have to be optional because obviously they may not be there for everything anything that breaks those rules that",
    "start": "3780420",
    "end": "3787859"
  },
  {
    "text": "needs to have a new property there or needs to change the name of a property that's just a new event type",
    "start": "3787859",
    "end": "3794339"
  },
  {
    "text": "yep yeah",
    "start": "3794339",
    "end": "3797838"
  },
  {
    "text": "there should be a UK religion as well right I mean because they're very similar in the position for the",
    "start": "3804599",
    "end": "3810839"
  },
  {
    "text": "distributed monolith you're saying okay so if I understood the question correctly it's uh there's a use case for",
    "start": "3810839",
    "end": "3816359"
  },
  {
    "text": "the monolith there's a use case for the microservice is there a use case for the distributed monolith the way I'm",
    "start": "3816359",
    "end": "3822180"
  },
  {
    "text": "defining it at least in this talk the distributed monolith is kind of the worst of Both Worlds of each and so no",
    "start": "3822180",
    "end": "3829200"
  },
  {
    "text": "there really isn't long term thank you very much we're out of time but I'm happy to answer any questions if",
    "start": "3829200",
    "end": "3835380"
  },
  {
    "text": "you want to come up afterwards and uh appreciate your time thank you",
    "start": "3835380",
    "end": "3841220"
  }
]