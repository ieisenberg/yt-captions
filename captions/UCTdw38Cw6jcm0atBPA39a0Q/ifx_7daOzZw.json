[
  {
    "text": "so these are the slides for the show for the presentation and at the end there is",
    "start": "5540",
    "end": "11340"
  },
  {
    "text": "the demo but this is so complicated demo that I rather start with the demo pray to the demo God",
    "start": "11340",
    "end": "17580"
  },
  {
    "text": "and then I'll show you everything uh about how I made this demo okay so let's",
    "start": "17580",
    "end": "24060"
  },
  {
    "text": "hope um so before I start with the demo let's just look at the setting",
    "start": "24060",
    "end": "33018"
  },
  {
    "text": "so",
    "start": "33480",
    "end": "36200"
  },
  {
    "text": "okay so I have a camera so this is here",
    "start": "41280",
    "end": "47219"
  },
  {
    "text": "this is Raspberry Pi this is a Raspberry Pi 4 in this uh keyboard style shape",
    "start": "47219",
    "end": "52379"
  },
  {
    "text": "with all the connectors connectors here okay this is just the same as is",
    "start": "52379",
    "end": "60180"
  },
  {
    "text": "the other uh the other pie okay the same as this one",
    "start": "61199",
    "end": "67020"
  },
  {
    "text": "but come comes with the keyboard which makes it much easier to use",
    "start": "67020",
    "end": "72920"
  },
  {
    "text": "um so this is the settings uh it's connected to uh this dongle",
    "start": "73020",
    "end": "79080"
  },
  {
    "text": "which is HDMI video capture so I can use a single screen and show you the screen of the Raspberry Pi okay uh",
    "start": "79080",
    "end": "88740"
  },
  {
    "text": "yeah I told you and",
    "start": "90240",
    "end": "96299"
  },
  {
    "text": "let's try the demo before everything just fall apart okay so I'll move to the other",
    "start": "96299",
    "end": "105420"
  },
  {
    "text": "the same camera application but to the Raspberry Pi screen",
    "start": "105420",
    "end": "111500"
  },
  {
    "text": "okay so this is through the dangle and I'm going to start",
    "start": "111840",
    "end": "117840"
  },
  {
    "text": "a.net application running on the Raspberry Pi I'll show you the code later okay",
    "start": "117840",
    "end": "123600"
  },
  {
    "text": "um and I use the keyboard of the Raspberry Pi just to start.net one on the folder of the",
    "start": "123600",
    "end": "130080"
  },
  {
    "text": "dotnet application okay so I'm starting the application the Raspberry Pi is",
    "start": "130080",
    "end": "135480"
  },
  {
    "text": "connected to the to the Internet so it can connect to the Azure cloud and now it just shows us the information",
    "start": "135480",
    "end": "143400"
  },
  {
    "text": "that it receives from from the sensors",
    "start": "143400",
    "end": "149099"
  },
  {
    "text": "and I also have a control application running on the on the laptop okay so let's start the Contour application",
    "start": "149099",
    "end": "156959"
  },
  {
    "text": "the at okay I need to use this mouth I have two",
    "start": "156959",
    "end": "163019"
  },
  {
    "text": "two different mics two two different keyboards and leave it alone it's okay",
    "start": "163019",
    "end": "168720"
  },
  {
    "text": "they will see it upside down it's okay and let's try to start",
    "start": "168720",
    "end": "175860"
  },
  {
    "text": "the controlling application control F5",
    "start": "175860",
    "end": "180980"
  },
  {
    "text": "so I have three different uh devices connected to the pi",
    "start": "184739",
    "end": "189900"
  },
  {
    "text": "one is the red light the strip LED light so if I start",
    "start": "189900",
    "end": "196560"
  },
  {
    "text": "different animations you can see this is a very simple why but we can go to something",
    "start": "196560",
    "end": "204900"
  },
  {
    "text": "else like the chase one we can choose colors",
    "start": "204900",
    "end": "212720"
  },
  {
    "text": "for example",
    "start": "214620",
    "end": "217580"
  },
  {
    "text": "let's select another one",
    "start": "220080",
    "end": "223760"
  },
  {
    "text": "and let's start okay uh we can I have a rainbow effect",
    "start": "226920",
    "end": "234920"
  },
  {
    "text": "if the mouse decide to move or we can have this",
    "start": "235500",
    "end": "242159"
  },
  {
    "text": "Knight Rider effect cool all these demos come from the dot",
    "start": "242159",
    "end": "248220"
  },
  {
    "text": "net uh um device GitHub the samples so I put I",
    "start": "248220",
    "end": "253980"
  },
  {
    "text": "took all the samples put them together change them a little bit to have more colors but these are actually samples",
    "start": "253980",
    "end": "259199"
  },
  {
    "text": "that you can download and try okay the only difference is that I send a message to the cloud and the cloud",
    "start": "259199",
    "end": "265259"
  },
  {
    "text": "send the message to the device to activate these demos okay",
    "start": "265259",
    "end": "270300"
  },
  {
    "text": "um another thing is that they can write down text",
    "start": "270300",
    "end": "276680"
  },
  {
    "text": "okay and send the information to the device did we get it yeah",
    "start": "284460",
    "end": "292199"
  },
  {
    "text": "and I also have the the reading of the different sensors so I have this BME 280",
    "start": "292199",
    "end": "297540"
  },
  {
    "text": "I think the the name of the device it reads the the current pressure uh",
    "start": "297540",
    "end": "303000"
  },
  {
    "text": "temperature and and humidity and it shows you can send and I send it to the cloud and I can send it back to the",
    "start": "303000",
    "end": "309419"
  },
  {
    "text": "device so for example if I ask you to send the information back to the device it shows the information on the device",
    "start": "309419",
    "end": "317759"
  },
  {
    "text": "I hope that he did it and since it's a sense home I have a cup",
    "start": "317759",
    "end": "323220"
  },
  {
    "text": "of coffee coffee please yeah I told you it's humidity and temperature so we can",
    "start": "323220",
    "end": "329639"
  },
  {
    "text": "try to see what's happened so first of all I I'll ask it to send the information",
    "start": "329639",
    "end": "336680"
  },
  {
    "text": "in a minimal delay",
    "start": "337440",
    "end": "343560"
  },
  {
    "text": "and now let's try and see what happened",
    "start": "343560",
    "end": "351020"
  },
  {
    "text": "it's hot okay let's see",
    "start": "354000",
    "end": "358880"
  },
  {
    "text": "any change yeah so the humidity actually changed before the temperature",
    "start": "360360",
    "end": "367139"
  },
  {
    "text": "okay uh probably the temperature will go up also",
    "start": "367139",
    "end": "372919"
  },
  {
    "text": "yeah we see a bit of a chance with the temperature so this is the sensor that with the",
    "start": "373919",
    "end": "381360"
  },
  {
    "text": "environmental uh values and send it to the cloud so what we see in the demo is a way that we have",
    "start": "381360",
    "end": "388560"
  },
  {
    "text": "a way to send in for information what we call Telemetry to the cloud this is from the sensor",
    "start": "388560",
    "end": "394620"
  },
  {
    "text": "and that we can send back information to the device and there are two different",
    "start": "394620",
    "end": "399780"
  },
  {
    "text": "ways that I'm doing it here one way is to send information using a queue so",
    "start": "399780",
    "end": "405840"
  },
  {
    "text": "it's like send information to the device let's stop everything so it will not",
    "start": "405840",
    "end": "411300"
  },
  {
    "text": "it will not bother you",
    "start": "411300",
    "end": "414620"
  },
  {
    "text": "I'll use this one and it should",
    "start": "420180",
    "end": "425580"
  },
  {
    "text": "stop yeah okay so one way is",
    "start": "425580",
    "end": "431520"
  },
  {
    "text": "sending information using a queue which means I send information to the device if the device is online it gets",
    "start": "431520",
    "end": "437940"
  },
  {
    "text": "information if the device is offline it will wait for the device and since it is a queue you can send",
    "start": "437940",
    "end": "443639"
  },
  {
    "text": "many different messages and by default it will wait for a week and the other way is to call a method we",
    "start": "443639",
    "end": "452160"
  },
  {
    "text": "could reply request reply with the device so the device has to be online",
    "start": "452160",
    "end": "459120"
  },
  {
    "text": "you call the device and you get a reply so if you need also to get some answers",
    "start": "459120",
    "end": "464580"
  },
  {
    "text": "from the device you can activate this request reply what they call Direct",
    "start": "464580",
    "end": "470160"
  },
  {
    "text": "method to the device and get information so these are the two different ways to communicate with the device so we saw",
    "start": "470160",
    "end": "477720"
  },
  {
    "text": "the demo the way that I built the iot device the code of diode device I use an",
    "start": "477720",
    "end": "485580"
  },
  {
    "text": "open source project that I built about six months ago maybe a year",
    "start": "485580",
    "end": "492180"
  },
  {
    "text": "which uses C sharp code generator to build the boilerplate of the iot device",
    "start": "492180",
    "end": "497460"
  },
  {
    "text": "which makes it makes it very easy to build iot device device code using",
    "start": "497460",
    "end": "503160"
  },
  {
    "text": "c-sharp so now I can go to the slides and get into the details so go to the slides go",
    "start": "503160",
    "end": "509699"
  },
  {
    "text": "to the to the code it worked I think that it",
    "start": "509699",
    "end": "515099"
  },
  {
    "text": "okay um so let's see",
    "start": "515099",
    "end": "521000"
  },
  {
    "text": "oh so the ingredients iot device and",
    "start": "528060",
    "end": "534180"
  },
  {
    "text": "internet connection .net6 actually you can use.net",
    "start": "534180",
    "end": "539660"
  },
  {
    "text": "3.156 and so on seven soon C sharp source code generator we'll talk",
    "start": "539660",
    "end": "545640"
  },
  {
    "text": "about it Azure iot Hub Azure ITC shop Services SDK and client SDK the services",
    "start": "545640",
    "end": "552060"
  },
  {
    "text": "Decay for the control controlling application the client SDK to actually write the device code and visual studio",
    "start": "552060",
    "end": "559560"
  },
  {
    "text": "vs code or actually any editor because it's just.net core right.net five six",
    "start": "559560",
    "end": "566519"
  },
  {
    "text": "so my name is alone fries I'm the chief software architect of code value a company a software company in Israel I",
    "start": "566519",
    "end": "573660"
  },
  {
    "text": "also I Azure MVP and with regional director and I'm a maker so I build",
    "start": "573660",
    "end": "580260"
  },
  {
    "text": "stuff I have a smart home that I built anything that you can write code and and",
    "start": "580260",
    "end": "586980"
  },
  {
    "text": "automate this is what they usually do to make life much more interesting",
    "start": "586980",
    "end": "592920"
  },
  {
    "text": "um and um and that's it this is me",
    "start": "592920",
    "end": "599300"
  },
  {
    "text": "so iot 101 so iot is a community a combination of",
    "start": "599300",
    "end": "606240"
  },
  {
    "text": "sensor system on the chip a device the internet",
    "start": "606240",
    "end": "612000"
  },
  {
    "text": "and backend code the cloud and anything and everything that uh run the system",
    "start": "612000",
    "end": "620600"
  },
  {
    "text": "um so this is in essence iot the things the device can",
    "start": "621060",
    "end": "626100"
  },
  {
    "text": "be any device there are tiny devices like the esp8266",
    "start": "626100",
    "end": "631380"
  },
  {
    "text": "or esp32 usually we use C or C plus plus to develop to to write code to these",
    "start": "631380",
    "end": "638279"
  },
  {
    "text": "devices we can use also Python and there's now starting even even to use uh",
    "start": "638279",
    "end": "647220"
  },
  {
    "text": "some sort of.net but public will take time until we can use.net for this kind of",
    "start": "647220",
    "end": "652980"
  },
  {
    "text": "devices there are also uh much uh bigger",
    "start": "652980",
    "end": "658079"
  },
  {
    "text": "devices still devices like the Raspberry Pi they know they can run a full-blown",
    "start": "658079",
    "end": "663959"
  },
  {
    "text": "operating system like Linux or Windows Windows 10 for example there is also the Arduino family but for this lecture I'm",
    "start": "663959",
    "end": "671279"
  },
  {
    "text": "going to use the Raspberry Pi because it's the easiest device to use this is easiest device to to write a C sharp",
    "start": "671279",
    "end": "678000"
  },
  {
    "text": "code and use C sharp with it to sense the word and also to to",
    "start": "678000",
    "end": "684779"
  },
  {
    "text": "activate stuff we need some other devices like sensors like the one that we use to sense the temperature and uh",
    "start": "684779",
    "end": "691860"
  },
  {
    "text": "the pressure and if you want to activate something we we need some actuators like relays or",
    "start": "691860",
    "end": "700140"
  },
  {
    "text": "Motors if we if we need to move something and so on",
    "start": "700140",
    "end": "705260"
  },
  {
    "text": "but iot system is more just the single device that is connected to the internet I connected my home back in 2003 to the",
    "start": "706019",
    "end": "713339"
  },
  {
    "text": "internet I used the pocket PC to run my home but it wasn't an iot system because it was a single home a single device iot",
    "start": "713339",
    "end": "720120"
  },
  {
    "text": "system is something that you can manage many different devices 100 of 100 100 to",
    "start": "720120",
    "end": "726660"
  },
  {
    "text": "100 thousands of devices and you need a really good big uh a really good Cloud",
    "start": "726660",
    "end": "732959"
  },
  {
    "text": "support to support these devices you need to secure registration the device is all securely retired the device you",
    "start": "732959",
    "end": "740940"
  },
  {
    "text": "need to manage the the devices to do and over the update for the devices to",
    "start": "740940",
    "end": "747899"
  },
  {
    "text": "change settings of the device sometimes you need to have a smart Edge",
    "start": "747899",
    "end": "753180"
  },
  {
    "text": "to do things offline or to do things near the physical",
    "start": "753180",
    "end": "758899"
  },
  {
    "text": "sensors and not in the cloud you need to collect vast amount of",
    "start": "758899",
    "end": "764279"
  },
  {
    "text": "information and you need to analyze you may want to use machine learning on the",
    "start": "764279",
    "end": "770579"
  },
  {
    "text": "device or on the cloud and so on so usually this is how iot system looks",
    "start": "770579",
    "end": "778380"
  },
  {
    "text": "like we have the different devices if they have IP capability like the Raspberry Pi",
    "start": "778380",
    "end": "783959"
  },
  {
    "text": "they can connect directly to the cloud if they don't they need to have some sort of a Gateway Raspberry Pi can be a",
    "start": "783959",
    "end": "791279"
  },
  {
    "text": "gateway to connect other small devices to the cloud and then if we talk if we talk about",
    "start": "791279",
    "end": "797279"
  },
  {
    "text": "Azure we have the Azure iot Hub which is the service that provides everything that we need to use devices",
    "start": "797279",
    "end": "804839"
  },
  {
    "text": "we can register devices we can communicate with the devices we can manage the devices and so on and then we",
    "start": "804839",
    "end": "810959"
  },
  {
    "text": "have the system the system to control staff the system to analyze the stream of information and then in the end we",
    "start": "810959",
    "end": "819060"
  },
  {
    "text": "have a way to visualize uh the information",
    "start": "819060",
    "end": "824339"
  },
  {
    "text": "so iot Hub is the this service of azure to control devices",
    "start": "824339",
    "end": "831240"
  },
  {
    "text": "and these are the things that you can do with Azure iot hub you can send a device to Cloud messages",
    "start": "831240",
    "end": "838500"
  },
  {
    "text": "this is what we call telemetry the temperature reading things that's",
    "start": "838500",
    "end": "843899"
  },
  {
    "text": "that you want to measure and you you want to have a continuous information",
    "start": "843899",
    "end": "850320"
  },
  {
    "text": "it can be every minute it can be every several hours it depends what is the kind of information that you need to",
    "start": "850320",
    "end": "856680"
  },
  {
    "text": "send do you use battery to operate the device or can you use a direct power and",
    "start": "856680",
    "end": "863100"
  },
  {
    "text": "so on you can receive Cloud to device messages and I told you about two ways to do it",
    "start": "863100",
    "end": "871200"
  },
  {
    "text": "using a queue or as a direct call like the one that appears here",
    "start": "871200",
    "end": "877800"
  },
  {
    "text": "you can initiate five file uploads sometimes sometimes it's much better and",
    "start": "877800",
    "end": "883079"
  },
  {
    "text": "cheaper to upload the file for example you collect logs and you want to ship",
    "start": "883079",
    "end": "889019"
  },
  {
    "text": "all those logs to the cloud so upload will be cheaper than using telemetry okay so you can initiate",
    "start": "889019",
    "end": "895920"
  },
  {
    "text": "upload and in the cloud you can get an event that tells you whenever the upload is finished and now you can process the",
    "start": "895920",
    "end": "902399"
  },
  {
    "text": "data okay upload use http while usually when we send Telemetry we",
    "start": "902399",
    "end": "909779"
  },
  {
    "text": "use mqtt even though we can use HTTP and amqp it's different protocols but",
    "start": "909779",
    "end": "915420"
  },
  {
    "text": "uploads use http and of course you can manage Azure iot",
    "start": "915420",
    "end": "921779"
  },
  {
    "text": "Edge devices which is a different total story it's a containers base",
    "start": "921779",
    "end": "928579"
  },
  {
    "text": "require capabilities from the device but actually you can you can run iot Edge on",
    "start": "928579",
    "end": "934860"
  },
  {
    "text": "the Raspberry Pi from the cloud side you can this is the",
    "start": "934860",
    "end": "940740"
  },
  {
    "text": "opposite okay this is the mural of what you can do with the device so you can",
    "start": "940740",
    "end": "945899"
  },
  {
    "text": "receive device to Cloud messages send Cloud to device messages receive delivery acknowledge that the",
    "start": "945899",
    "end": "952500"
  },
  {
    "text": "information gets to the device gets the information about the device status whether it's connected when was the last",
    "start": "952500",
    "end": "958320"
  },
  {
    "text": "time that the device was connected um you can get message and enrich the",
    "start": "958320",
    "end": "966779"
  },
  {
    "text": "message so the device send the message you know the device ID so now you can add more",
    "start": "966779",
    "end": "972779"
  },
  {
    "text": "information to the message and you can route the message to another service with with or without enrichment",
    "start": "972779",
    "end": "980100"
  },
  {
    "text": "and you can manage the twin the devices a twin think about it like a no DB no",
    "start": "980100",
    "end": "988740"
  },
  {
    "text": "SQL DB that manage all the all the different devices so each device has a device to",
    "start": "988740",
    "end": "995160"
  },
  {
    "text": "win the tax is just information that you can put and you can read from the cloud the device does not know about the tags",
    "start": "995160",
    "end": "1001519"
  },
  {
    "text": "and then you have two kinds of properties desired properties are properties that the cloud wants to set",
    "start": "1001519",
    "end": "1008420"
  },
  {
    "text": "in the device they will be copied download to the device uh this is for the um setting",
    "start": "1008420",
    "end": "1017180"
  },
  {
    "text": "okay we want to change things that the device will get and we have the reported property which",
    "start": "1017180",
    "end": "1023180"
  },
  {
    "text": "are the properties that the device will send to the cloud so for example I want",
    "start": "1023180",
    "end": "1028520"
  },
  {
    "text": "to send the battery level or something which is not as Telemetry that I sent",
    "start": "1028520",
    "end": "1034220"
  },
  {
    "text": "all the time but it's more like a status that they want to send or want to set",
    "start": "1034220",
    "end": "1040160"
  },
  {
    "text": "there is a way to manage jobs I want to update the uh desired property of I don't know",
    "start": "1040160",
    "end": "1049400"
  },
  {
    "text": "the frequency of sending messages to the cloud only for those devices that their",
    "start": "1049400",
    "end": "1054559"
  },
  {
    "text": "battery level is lower than something so I can create a query and run a job",
    "start": "1054559",
    "end": "1059900"
  },
  {
    "text": "according to the query and manage those jobs knows if they are",
    "start": "1059900",
    "end": "1065900"
  },
  {
    "text": "finished or not how many of them run and so on so this is the Azure iot Hub the device",
    "start": "1065900",
    "end": "1073340"
  },
  {
    "text": "to win is just a Json file like and like any other Json based no SQL DB",
    "start": "1073340",
    "end": "1079520"
  },
  {
    "text": "okay and we have the sdks the software",
    "start": "1079520",
    "end": "1086120"
  },
  {
    "text": "development kits we have SDK for the device the device has Decay and we have SDK for the cloud",
    "start": "1086120",
    "end": "1093380"
  },
  {
    "text": "the services decay the device SDK is the SDK that we use to write the code that runs in the device",
    "start": "1093380",
    "end": "1100460"
  },
  {
    "text": "and we have SDK in different language languages Target targeting different operating systems",
    "start": "1100460",
    "end": "1107919"
  },
  {
    "text": "Arduino Raspberry Pi the ESP and so on",
    "start": "1107919",
    "end": "1113980"
  },
  {
    "text": "outdoors and so on we have also provisioning SDK to support",
    "start": "1113980",
    "end": "1121360"
  },
  {
    "text": "the device provisioning service and The Edge runtime",
    "start": "1121360",
    "end": "1128240"
  },
  {
    "text": "if we don't want to use the SDK we can also use the rest API or this is from the cloud side or the mqtt protocol the",
    "start": "1128240",
    "end": "1136400"
  },
  {
    "text": "bare mqtt protocol this is from the device side but usually it's much easier",
    "start": "1136400",
    "end": "1141860"
  },
  {
    "text": "to use the SDK than to use the beer rest or mqtt protocol",
    "start": "1141860",
    "end": "1148480"
  },
  {
    "text": "so the Telemetry goes to the cloud and form the iot Hub we need to root the Telemetry to somewhere else in the iot",
    "start": "1150440",
    "end": "1157700"
  },
  {
    "text": "hub there is some sort of event Hub uh if you don't know about the event Hub",
    "start": "1157700",
    "end": "1162740"
  },
  {
    "text": "service of azure this is like Kafka it gets all the information and you can read directly from the event hub using",
    "start": "1162740",
    "end": "1169100"
  },
  {
    "text": "consumer group or much easier much in a much easier way you can root the information to service bus queue to",
    "start": "1169100",
    "end": "1177320"
  },
  {
    "text": "another event tab to any any other queuing like mechanism of the cloud",
    "start": "1177320",
    "end": "1183020"
  },
  {
    "text": "and you can use a query to to uh write the only the information that fulfills",
    "start": "1183020",
    "end": "1190100"
  },
  {
    "text": "some sort of uh filter okay",
    "start": "1190100",
    "end": "1194440"
  },
  {
    "text": "so this was uh The iot Hub now let's talk about",
    "start": "1196580",
    "end": "1201860"
  },
  {
    "text": "the.net support for devices they don't let support for running raspberry uh to",
    "start": "1201860",
    "end": "1207740"
  },
  {
    "text": "to use the Raspberry Pi for example using C sharp so we have two different libraries two",
    "start": "1207740",
    "end": "1214400"
  },
  {
    "text": "different nuget packages one is the system device gpio and the",
    "start": "1214400",
    "end": "1220460"
  },
  {
    "text": "second one is the device binding think about these two different package",
    "start": "1220460",
    "end": "1226400"
  },
  {
    "text": "as the low level package and the higher level package the gpio is the package",
    "start": "1226400",
    "end": "1231500"
  },
  {
    "text": "that knows how to communicate with the different buses and I O ports of the device",
    "start": "1231500",
    "end": "1237080"
  },
  {
    "text": "so if we want or if they want to Target different Hardware they need to change uh this gpio library and add support to",
    "start": "1237080",
    "end": "1245660"
  },
  {
    "text": "this specific hardware and the device binding is the package oh",
    "start": "1245660",
    "end": "1251299"
  },
  {
    "text": "it's a multiple device package that let us",
    "start": "1251299",
    "end": "1257240"
  },
  {
    "text": "choose different controllers different sensors and use them so instead of understanding how I should communicate",
    "start": "1257240",
    "end": "1264440"
  },
  {
    "text": "in a low level way with the screen or the lead strip",
    "start": "1264440",
    "end": "1270320"
  },
  {
    "text": "I can just ask the screen to write this text or to scroll the text and that's it",
    "start": "1270320",
    "end": "1276200"
  },
  {
    "text": "because I have a device in the device binding that knows how to take text and",
    "start": "1276200",
    "end": "1282620"
  },
  {
    "text": "put it in in the screen so I don't need to understand the low-level protocol of each of the",
    "start": "1282620",
    "end": "1288860"
  },
  {
    "text": "devices it's an abstraction way and it makes it much easier to use the different devices",
    "start": "1288860",
    "end": "1295700"
  },
  {
    "text": "okay now you can find them on GitHub everything is open source so let's go",
    "start": "1295700",
    "end": "1303200"
  },
  {
    "text": "to these libraries",
    "start": "1303200",
    "end": "1308120"
  },
  {
    "text": "um so you have everything here you have the documentation the Quick Start",
    "start": "1308720",
    "end": "1314539"
  },
  {
    "text": "uh to different tutorial like a very simple one to uh blink a lead like the the hello",
    "start": "1314539",
    "end": "1322400"
  },
  {
    "text": "world of uh of iot okay so you see the Raspberry Pi you you",
    "start": "1322400",
    "end": "1327799"
  },
  {
    "text": "see the schema how you should uh how how you should um connect the resistor and the lead",
    "start": "1327799",
    "end": "1335960"
  },
  {
    "text": "and then you see how to create the app so don't need new console application",
    "start": "1335960",
    "end": "1342440"
  },
  {
    "text": "with the name and then add the nuget package of the device binding and then",
    "start": "1342440",
    "end": "1349159"
  },
  {
    "text": "write this very simple code uh that open the create the gpio controller open the",
    "start": "1349159",
    "end": "1356720"
  },
  {
    "text": "pin and then write high and low wait for for a second in a loop",
    "start": "1356720",
    "end": "1363440"
  },
  {
    "text": "so very simple way to use C sharp to blinkle it okay and it becomes much more",
    "start": "1363440",
    "end": "1370220"
  },
  {
    "text": "complicated when you use other devices which are more complicated devices okay so for example uh if we'll go",
    "start": "1370220",
    "end": "1380539"
  },
  {
    "text": "to the device binding you can see a long list",
    "start": "1380539",
    "end": "1388580"
  },
  {
    "text": "a long list of different devices so for example if I'll take one of the",
    "start": "1388580",
    "end": "1395840"
  },
  {
    "text": "devices that I use here I think this is the screen OK so you see this this is the open",
    "start": "1395840",
    "end": "1403580"
  },
  {
    "text": "source code you see the different fonts if you want to change the font you can",
    "start": "1403580",
    "end": "1408860"
  },
  {
    "text": "okay it's everything is open source and there is the sample code uh that show",
    "start": "1408860",
    "end": "1414980"
  },
  {
    "text": "you shows you how you can use uh the device to do different stuff like",
    "start": "1414980",
    "end": "1420140"
  },
  {
    "text": "writing text putting some I think this is a smiley or something yeah this is a",
    "start": "1420140",
    "end": "1425240"
  },
  {
    "text": "smiley that you can put okay so you can set the different beats the different leads so it is very easy",
    "start": "1425240",
    "end": "1432559"
  },
  {
    "text": "to use these libraries okay and there is also information how to set",
    "start": "1432559",
    "end": "1439820"
  },
  {
    "text": "up the device because usually when you start with a new Raspberry Pi you download the the operating system you",
    "start": "1439820",
    "end": "1446240"
  },
  {
    "text": "set the device usually it will come uh with uh everything disabled you need to",
    "start": "1446240",
    "end": "1452360"
  },
  {
    "text": "enable the I Square C bus and the uh the different buses and so on uh so it will",
    "start": "1452360",
    "end": "1459020"
  },
  {
    "text": "tell you there is information on how to set everything so everything will work okay so just follow the information",
    "start": "1459020",
    "end": "1467080"
  },
  {
    "text": "okay so we we talked about the Azure iot Hub and how we communicate with azure we",
    "start": "1469820",
    "end": "1476780"
  },
  {
    "text": "talk about how we talked about how we can use c-sharp and Dot net to operate",
    "start": "1476780",
    "end": "1482980"
  },
  {
    "text": "Raspberry Pi and other devices now let's talk about the third part of",
    "start": "1482980",
    "end": "1488299"
  },
  {
    "text": "the application of the lecture which is the source code generator that enable us to do it in a very easy way",
    "start": "1488299",
    "end": "1494679"
  },
  {
    "text": "so what is a source generator it's just something to let you generate code which",
    "start": "1494679",
    "end": "1501559"
  },
  {
    "text": "means that you write little bit of code and get much more code from this little",
    "start": "1501559",
    "end": "1507200"
  },
  {
    "text": "bit of code um so that is that you have a c-sharp files",
    "start": "1507200",
    "end": "1514039"
  },
  {
    "text": "and somehow you annotate those files I use attribute this is the easier way to",
    "start": "1514039",
    "end": "1520220"
  },
  {
    "text": "annotate code incision but you can use anything you can choose to annotate using some sort of uh the way that you",
    "start": "1520220",
    "end": "1527900"
  },
  {
    "text": "write the code it can be even comments doesn't really matter as long as you can",
    "start": "1527900",
    "end": "1533779"
  },
  {
    "text": "read it in your source code generator and decide what to do with it attribute is the easiest way so you have the C",
    "start": "1533779",
    "end": "1539539"
  },
  {
    "text": "sharp files and the C sharp compiler the name the",
    "start": "1539539",
    "end": "1544580"
  },
  {
    "text": "code name Gosling takes those files plus the the files uh",
    "start": "1544580",
    "end": "1550820"
  },
  {
    "text": "create this syntax uh c-sharp uh code syntax tree",
    "start": "1550820",
    "end": "1556460"
  },
  {
    "text": "and then it compiles the files but uh when it compiles the files it",
    "start": "1556460",
    "end": "1563900"
  },
  {
    "text": "calls my my and other code generators that the user choose to use so the user",
    "start": "1563900",
    "end": "1570559"
  },
  {
    "text": "just the use of the developer just asked to use a nougat package of a source code generator and these nugget package since it it is",
    "start": "1570559",
    "end": "1578000"
  },
  {
    "text": "a source code generator uh it becomes part of the of the compilation so the uh",
    "start": "1578000",
    "end": "1584799"
  },
  {
    "text": "the file goes through compilation there is the syntax tree and then the semantic",
    "start": "1584799",
    "end": "1589940"
  },
  {
    "text": "tree or the semantic information so your source code generation gets first the",
    "start": "1589940",
    "end": "1595100"
  },
  {
    "text": "syntax tree and then the semantic information and you can choose whether to use either of them to generate your",
    "start": "1595100",
    "end": "1601700"
  },
  {
    "text": "code okay once you generate the code the code that you are that you generate is is also a C",
    "start": "1601700",
    "end": "1609020"
  },
  {
    "text": "sharp file so it's a text generator you just need to write text take take a",
    "start": "1609020",
    "end": "1614419"
  },
  {
    "text": "screen Builder and write your own text take a template and put the thing in the",
    "start": "1614419",
    "end": "1619820"
  },
  {
    "text": "inside table decided what what is the way that you want to build the source file",
    "start": "1619820",
    "end": "1625580"
  },
  {
    "text": "these those files also goes to the compilation and then we get the result",
    "start": "1625580",
    "end": "1630980"
  },
  {
    "text": "which is the IL code that is a combination of the original source and the code that came from the code",
    "start": "1630980",
    "end": "1638059"
  },
  {
    "text": "generator the generated code by default is not in",
    "start": "1638059",
    "end": "1644480"
  },
  {
    "text": "the disk but you can ask it to be in the disk even though if it's not that it is not",
    "start": "1644480",
    "end": "1650360"
  },
  {
    "text": "in the disk when you do a single step you can single step through the generated code which is",
    "start": "1650360",
    "end": "1655520"
  },
  {
    "text": "this is what actually what we want if we want to see what's really happened",
    "start": "1655520",
    "end": "1660799"
  },
  {
    "text": "what you what can you do with it anything like uh",
    "start": "1660799",
    "end": "1666260"
  },
  {
    "text": "swap reflection to compile time if you know in advance what is the code that",
    "start": "1666260",
    "end": "1672020"
  },
  {
    "text": "need to be generated or automated processing or automated Boeing types and",
    "start": "1672020",
    "end": "1677299"
  },
  {
    "text": "this is actually what I did with the Azure iot there is a lot of repeated repeated code for any uh desired",
    "start": "1677299",
    "end": "1685279"
  },
  {
    "text": "property any um the way to send Telemetry to the",
    "start": "1685279",
    "end": "1690320"
  },
  {
    "text": "cloud it's all it is always the same so what I did I just use code generator to",
    "start": "1690320",
    "end": "1696020"
  },
  {
    "text": "generate the repeatable repeated code let's continue on",
    "start": "1696020",
    "end": "1702919"
  },
  {
    "text": "so usually what's happened is that the code generator calls your day listening",
    "start": "1702919",
    "end": "1709760"
  },
  {
    "text": "compiler calls your generator and in the initialize we register the",
    "start": "1709760",
    "end": "1716720"
  },
  {
    "text": "syntax node notification and now whenever it reaches a syntax node it calls our syntax receiver and we get the",
    "start": "1716720",
    "end": "1725000"
  },
  {
    "text": "information about the node we collect the information you see on visit syntax node we collect",
    "start": "1725000",
    "end": "1731000"
  },
  {
    "text": "the information and then when it calls the execute we emit our code",
    "start": "1731000",
    "end": "1737840"
  },
  {
    "text": "okay so it goes through the original code we collect information it asks us to generate our code we create the Cs",
    "start": "1737840",
    "end": "1744320"
  },
  {
    "text": "file and give it to uh to the system and it uses the Cs file compile it in every",
    "start": "1744320",
    "end": "1750200"
  },
  {
    "text": "if everything goes well we get the result",
    "start": "1750200",
    "end": "1755919"
  },
  {
    "text": "um how do we debug source code generator so one way is to put debugger launch or",
    "start": "1756980",
    "end": "1763940"
  },
  {
    "text": "debug your bike but this is a very bad way because it will start a new Visual Studio and if in the new Visual Studio there is",
    "start": "1763940",
    "end": "1771919"
  },
  {
    "text": "a console generator with debugger launch it will continue to start more visual Studios okay",
    "start": "1771919",
    "end": "1778340"
  },
  {
    "text": "so there is a much better way to gen to uh debug and I'll show it uh in visuals",
    "start": "1778340",
    "end": "1784820"
  },
  {
    "text": "2019 and 2022 there is a way to tell the code generator to debug the other",
    "start": "1784820",
    "end": "1790700"
  },
  {
    "text": "application which you which uses the code generator but you actually debug your generator so",
    "start": "1790700",
    "end": "1797120"
  },
  {
    "text": "I'll show you it uh soon so now let's get into the details let's",
    "start": "1797120",
    "end": "1803000"
  },
  {
    "text": "again get into the iot uh code generator and see the different code we'll see the",
    "start": "1803000",
    "end": "1808220"
  },
  {
    "text": "code of the device we'll see the code of the code generator we'll see the code that one in Azure okay we'll see the",
    "start": "1808220",
    "end": "1813799"
  },
  {
    "text": "different part I can use the coffee to drink",
    "start": "1813799",
    "end": "1822398"
  },
  {
    "text": "okay so this is the source code on GitHub so you can go and look at the",
    "start": "1824539",
    "end": "1829700"
  },
  {
    "text": "source code um there is everything here there is uh",
    "start": "1829700",
    "end": "1834820"
  },
  {
    "text": "the the um GitHub action that builds the code and create the nuget packages",
    "start": "1834820",
    "end": "1842659"
  },
  {
    "text": "so there's the action you can see that in when I prepared this lecture 12",
    "start": "1842659",
    "end": "1848419"
  },
  {
    "text": "days ago um I created a new version because I found a bug",
    "start": "1848419",
    "end": "1853760"
  },
  {
    "text": "okay if you create your device without using",
    "start": "1853760",
    "end": "1858980"
  },
  {
    "text": "a namespace there was a problem there okay I didn't care about usually you",
    "start": "1858980",
    "end": "1864260"
  },
  {
    "text": "have an answer so I didn't look at what it it just created the Nexus which is",
    "start": "1864260",
    "end": "1869419"
  },
  {
    "text": "the global colon colon Something okay so now I take care about it also",
    "start": "1869419",
    "end": "1876980"
  },
  {
    "text": "um and of course you have the different code but the code is already open",
    "start": "1876980",
    "end": "1882799"
  },
  {
    "text": "here can you see it or is it too small",
    "start": "1882799",
    "end": "1889960"
  },
  {
    "text": "let's try [Music] um",
    "start": "1890600",
    "end": "1896860"
  },
  {
    "text": "so let's do something let's try to hope that it will work",
    "start": "1897620",
    "end": "1905440"
  },
  {
    "text": "uh display setting",
    "start": "1905440",
    "end": "1909639"
  },
  {
    "text": "what is the DPI I hope that it will not create",
    "start": "1911659",
    "end": "1920020"
  },
  {
    "text": "did it change I'm not sure foreign",
    "start": "1922580",
    "end": "1928480"
  },
  {
    "text": "something happened I'm not sure which is if it it is good but okay",
    "start": "1928700",
    "end": "1935440"
  },
  {
    "text": "all right so let's move from the controller app to",
    "start": "1935480",
    "end": "1940940"
  },
  {
    "text": "uh the let's go to the code generator so let's let's start with how we use the",
    "start": "1940940",
    "end": "1947000"
  },
  {
    "text": "code generator so this is the device the NDC device the device that uh",
    "start": "1947000",
    "end": "1953980"
  },
  {
    "text": "now it's too big okay uh so",
    "start": "1956539",
    "end": "1961640"
  },
  {
    "text": "um this is just a console application I use ioc containers so I add all the different devices okay and",
    "start": "1961640",
    "end": "1971000"
  },
  {
    "text": "um get the service of iot device the init iot Hub client",
    "start": "1971000",
    "end": "1977779"
  },
  {
    "text": "um I think this is a generated function okay so if we'll go to the to the iot",
    "start": "1977779",
    "end": "1984980"
  },
  {
    "text": "device",
    "start": "1984980",
    "end": "1987640"
  },
  {
    "text": "if it will foreign doesn't want to go to the iot device so",
    "start": "1991940",
    "end": "1998720"
  },
  {
    "text": "let's start try to go from here to the maybe because this is not the",
    "start": "1998720",
    "end": "2006720"
  },
  {
    "text": "asset is",
    "start": "2007840",
    "end": "2010740"
  },
  {
    "text": "ah this is because there are two iot devices one is in the code generated and one is the original code okay so let's",
    "start": "2016120",
    "end": "2023380"
  },
  {
    "text": "start with the original code so you can see that this device this",
    "start": "2023380",
    "end": "2028600"
  },
  {
    "text": "class is decorated with the iot Hub and also generate send method with the",
    "start": "2028600",
    "end": "2035080"
  },
  {
    "text": "send ask a async name okay and we have",
    "start": "2035080",
    "end": "2040299"
  },
  {
    "text": "this partial class we have a reported property this is the field decorated as reported property",
    "start": "2040299",
    "end": "2046779"
  },
  {
    "text": "okay we have also a field decoded as desired property or a property decorated",
    "start": "2046779",
    "end": "2052480"
  },
  {
    "text": "as desired properties so this property will be sent set from the cloud we have",
    "start": "2052480",
    "end": "2057700"
  },
  {
    "text": "the device client with the connection string coming from environment variable",
    "start": "2057700",
    "end": "2064060"
  },
  {
    "text": "okay and now let's go to the generated code",
    "start": "2064060",
    "end": "2069240"
  },
  {
    "text": "and now we see that this is the generated code uh we have the init iot",
    "start": "2069240",
    "end": "2074858"
  },
  {
    "text": "app client async we see that it creates the the device and gets the device twin",
    "start": "2074859",
    "end": "2082240"
  },
  {
    "text": "and does all the boilerplate that is needed to communicate with the cloud",
    "start": "2082240",
    "end": "2088060"
  },
  {
    "text": "now to see that this is actually a co-generation let's do something let's take this one",
    "start": "2088060",
    "end": "2097379"
  },
  {
    "text": "to the side and somehow like let's take Visual",
    "start": "2099460",
    "end": "2106000"
  },
  {
    "text": "Studio to the other slide and let's see for example",
    "start": "2106000",
    "end": "2114359"
  },
  {
    "text": "um",
    "start": "2114880",
    "end": "2117059"
  },
  {
    "text": "let's go to the generated",
    "start": "2122400",
    "end": "2127078"
  },
  {
    "text": "send function send async and let's go to",
    "start": "2129880",
    "end": "2136920"
  },
  {
    "text": "this side and let's change the attribute",
    "start": "2136920",
    "end": "2143560"
  },
  {
    "text": "it's this one and instead of send async let's call it send one two three",
    "start": "2143560",
    "end": "2150599"
  },
  {
    "text": "async and you see that now the method name is send one to three I think so it's just right away",
    "start": "2150599",
    "end": "2156579"
  },
  {
    "text": "so whenever you change the code the generator pop in and change the code",
    "start": "2156579",
    "end": "2162160"
  },
  {
    "text": "okay this is so cool okay all right",
    "start": "2162160",
    "end": "2168040"
  },
  {
    "text": "so this is the magic of the code generator and and actually it makes it very easy",
    "start": "2168040",
    "end": "2174160"
  },
  {
    "text": "to build an iot device uh because you just need to decorate the code and you get everything",
    "start": "2174160",
    "end": "2180099"
  },
  {
    "text": "you don't need to call a function to update the desired property you don't",
    "start": "2180099",
    "end": "2185500"
  },
  {
    "text": "need to create a function to send information to the cloud you have you get everything from the code generator",
    "start": "2185500",
    "end": "2192280"
  },
  {
    "text": "okay um now let's look at the code generator",
    "start": "2192280",
    "end": "2197980"
  },
  {
    "text": "itself okay so let's move to",
    "start": "2197980",
    "end": "2205560"
  },
  {
    "text": "to the iot hubcode generator okay",
    "start": "2206560",
    "end": "2212560"
  },
  {
    "text": "so um the this is the generator class",
    "start": "2212560",
    "end": "2221220"
  },
  {
    "text": "too big is it okay",
    "start": "2222400",
    "end": "2228579"
  },
  {
    "text": "huh no co-pilot do you know co-pilot",
    "start": "2228579",
    "end": "2236020"
  },
  {
    "text": "so I was a better tester and now they made it public so now they want 10 a",
    "start": "2236020",
    "end": "2241660"
  },
  {
    "text": "month I think yeah so uh I need to decide but I think it's",
    "start": "2241660",
    "end": "2248500"
  },
  {
    "text": "worth it but uh anyway but it just happened this week I think that they changed uh I think",
    "start": "2248500",
    "end": "2255579"
  },
  {
    "text": "that'll be so so again to to create a code a soul",
    "start": "2255579",
    "end": "2261160"
  },
  {
    "text": "generator you need to decorate your class with a generator attribute and you need to implement the iso generator",
    "start": "2261160",
    "end": "2267520"
  },
  {
    "text": "interface okay once you do do that you need to implement the different uh functions of",
    "start": "2267520",
    "end": "2275140"
  },
  {
    "text": "the isos generator so one of them is the initialize so from the initialize you you use the",
    "start": "2275140",
    "end": "2280960"
  },
  {
    "text": "context to register your syntax receiver you can also register for semantic",
    "start": "2280960",
    "end": "2286240"
  },
  {
    "text": "receiver depends the way that you use the source code generator actually I started with the syntax",
    "start": "2286240",
    "end": "2291820"
  },
  {
    "text": "receiver and I think that it would be better to go with the semantic because the syntax I get the different part of",
    "start": "2291820",
    "end": "2298720"
  },
  {
    "text": "the code but now I need to deal with spaces and you know different things that you can it's okay to write some",
    "start": "2298720",
    "end": "2305800"
  },
  {
    "text": "sometimes something in this way and the other way so it's if it's semantics somebody else uh the the compiler know",
    "start": "2305800",
    "end": "2312760"
  },
  {
    "text": "what happened just give you the result and if it's a syntax you need to deal with the things that the compiler deals",
    "start": "2312760",
    "end": "2317859"
  },
  {
    "text": "with so maybe that the other way is better but this is actually maybe simpler",
    "start": "2317859",
    "end": "2323320"
  },
  {
    "text": "because you see the code that you start with and you can also use it so you can use the name of the attribute or the",
    "start": "2323320",
    "end": "2328720"
  },
  {
    "text": "name of the property to create something and so on so probably a mixture of the",
    "start": "2328720",
    "end": "2333820"
  },
  {
    "text": "two is the best okay so and and now I digital syntax receiver",
    "start": "2333820",
    "end": "2341800"
  },
  {
    "text": "and the in the execute I actually do the code generator and execute the code so I",
    "start": "2341800",
    "end": "2348640"
  },
  {
    "text": "look for uh the iot app attribute and and and here I go through all the uh",
    "start": "2348640",
    "end": "2356260"
  },
  {
    "text": "information that I collected and generate the code and the coordination generation itself",
    "start": "2356260",
    "end": "2363640"
  },
  {
    "text": "it's many different classes that handle uh different uh",
    "start": "2363640",
    "end": "2369940"
  },
  {
    "text": "different parts so this is the create desire update method and you see that I",
    "start": "2369940",
    "end": "2376599"
  },
  {
    "text": "created some sort of a utilities some sort of utilities like create a block so",
    "start": "2376599",
    "end": "2382660"
  },
  {
    "text": "open and close the parenthesis the Kelly Partners oh oh create a try block",
    "start": "2382660",
    "end": "2388500"
  },
  {
    "text": "and um and uh using IF and if",
    "start": "2388500",
    "end": "2394440"
  },
  {
    "text": "is it a a code that use statement if",
    "start": "2394440",
    "end": "2399579"
  },
  {
    "text": "expression and condition and this build the statement so at the end everything",
    "start": "2399579",
    "end": "2405820"
  },
  {
    "text": "is append or open line but if you want to build your own soul",
    "start": "2405820",
    "end": "2411040"
  },
  {
    "text": "generator you can use my utilities okay but eventually what you get is just text",
    "start": "2411040",
    "end": "2418540"
  },
  {
    "text": "file just a C sharp file now how do you test the code",
    "start": "2418540",
    "end": "2425200"
  },
  {
    "text": "so before the test I'll show you the test another thing is that you need all",
    "start": "2425200",
    "end": "2430300"
  },
  {
    "text": "those attributes so to make it easier easier I created another assembly which",
    "start": "2430300",
    "end": "2435400"
  },
  {
    "text": "is just the different attributes okay so when you use the generator you",
    "start": "2435400",
    "end": "2442060"
  },
  {
    "text": "just need to add two different nuget packages the salt generator and the SDK and then you can use",
    "start": "2442060",
    "end": "2449619"
  },
  {
    "text": "um the cell generator now let's talk about testing so I have",
    "start": "2449619",
    "end": "2457119"
  },
  {
    "text": "many different tests this is the test Explorer",
    "start": "2457119",
    "end": "2464099"
  },
  {
    "text": "out to the 41 tests",
    "start": "2464380",
    "end": "2469119"
  },
  {
    "text": "okay 41 different tests and the way that I did it is",
    "start": "2473560",
    "end": "2481560"
  },
  {
    "text": "I created this case uh generate the output",
    "start": "2482200",
    "end": "2487300"
  },
  {
    "text": "and then use do you know uh dotnet approval approval test",
    "start": "2487300",
    "end": "2493540"
  },
  {
    "text": "pool test is a very nice way to to create unit test or integration tests",
    "start": "2493540",
    "end": "2499839"
  },
  {
    "text": "uh you want the test you collect information is it is it text and then",
    "start": "2499839",
    "end": "2505480"
  },
  {
    "text": "you ask approval to check whether this is the same as the last time that you approve the text file",
    "start": "2505480",
    "end": "2511240"
  },
  {
    "text": "okay now if it's the same the test just goes well if it's not it will open",
    "start": "2511240",
    "end": "2517480"
  },
  {
    "text": "Beyond Compare or windy for whenever whatever uh compared to that you ask it",
    "start": "2517480",
    "end": "2523119"
  },
  {
    "text": "to to open and show you the different now now you can say okay the difference",
    "start": "2523119",
    "end": "2528760"
  },
  {
    "text": "is okay because I change something and it's still fine so just save the result and that's it next time it will pass or",
    "start": "2528760",
    "end": "2534880"
  },
  {
    "text": "you can see that now that the result is it's not okay and and you can",
    "start": "2534880",
    "end": "2541000"
  },
  {
    "text": "um try to fix to see what goes wrong so for example I can try to",
    "start": "2541000",
    "end": "2548200"
  },
  {
    "text": "uh to do something let's go to create uh",
    "start": "2548200",
    "end": "2556500"
  },
  {
    "text": "let's see uh create",
    "start": "2556599",
    "end": "2562140"
  },
  {
    "text": "device client method okay and let's do something let's put",
    "start": "2562599",
    "end": "2569740"
  },
  {
    "text": "underscore before of the private okay",
    "start": "2569740",
    "end": "2576460"
  },
  {
    "text": "and let's now go to the test this was create device client so let's see if we",
    "start": "2576460",
    "end": "2582160"
  },
  {
    "text": "have a test Explorer uh test uh probably",
    "start": "2582160",
    "end": "2592380"
  },
  {
    "text": "the test connections",
    "start": "2594579",
    "end": "2600339"
  },
  {
    "text": "I think this will be okay let's run this one",
    "start": "2600339",
    "end": "2604980"
  },
  {
    "text": "so it's built a generator because I changed the generator",
    "start": "2619420",
    "end": "2625119"
  },
  {
    "text": "and",
    "start": "2629380",
    "end": "2632380"
  },
  {
    "text": "okay and there was a problem and now this is the wind diff and",
    "start": "2640720",
    "end": "2646540"
  },
  {
    "text": "actually there are two things the first part I put all the warning and arrows of the compiler so I will see what was",
    "start": "2646540",
    "end": "2653380"
  },
  {
    "text": "wrong so if I'll move to the right I can see that there is all these syntax",
    "start": "2653380",
    "end": "2658420"
  },
  {
    "text": "errors and so on and then if we go down",
    "start": "2658420",
    "end": "2665880"
  },
  {
    "text": "then I can see that there is underscore pivot here which is the difference",
    "start": "2668859",
    "end": "2674920"
  },
  {
    "text": "so again very easy way to create test any test that doesn't have to be with",
    "start": "2674920",
    "end": "2679960"
  },
  {
    "text": "source code generator but for the source code generator is it is very nice because I can create many different",
    "start": "2679960",
    "end": "2687280"
  },
  {
    "text": "tests in a very easy way um so let's undo",
    "start": "2687280",
    "end": "2693339"
  },
  {
    "text": "git and do changes okay",
    "start": "2693339",
    "end": "2698560"
  },
  {
    "text": "ah so this is how you can test the source code generator so again let's go to the to the test code",
    "start": "2698560",
    "end": "2706060"
  },
  {
    "text": "um",
    "start": "2706060",
    "end": "2708119"
  },
  {
    "text": "so in the test code I have um",
    "start": "2713200",
    "end": "2717839"
  },
  {
    "text": "this is the test one but let's go to one of the test case",
    "start": "2718480",
    "end": "2725200"
  },
  {
    "text": "so I have this original code the test case that I want to test and then uh",
    "start": "2725200",
    "end": "2733240"
  },
  {
    "text": "This original code will be the input the code generator will create the test and then to get the result and then I will",
    "start": "2733240",
    "end": "2739839"
  },
  {
    "text": "compare the result and also will I I will pass it a compilation is and see if",
    "start": "2739839",
    "end": "2745660"
  },
  {
    "text": "there are compilation error so you can see um",
    "start": "2745660",
    "end": "2750819"
  },
  {
    "text": "this is the test Runner and the test one uh get the generated",
    "start": "2750819",
    "end": "2756160"
  },
  {
    "text": "output and compare the general using approval that's the verify with the",
    "start": "2756160",
    "end": "2762819"
  },
  {
    "text": "output so that's it and they get generated output this is something that",
    "start": "2762819",
    "end": "2768040"
  },
  {
    "text": "uses the ability of the source code generator so there's the C sharp syntax three past text of the source get a",
    "start": "2768040",
    "end": "2774760"
  },
  {
    "text": "reference get all the different assemblies at the different needed files",
    "start": "2774760",
    "end": "2780400"
  },
  {
    "text": "does the complete does the compilation get the diagnostic of the compilation",
    "start": "2780400",
    "end": "2786240"
  },
  {
    "text": "and return all the different results so again if you need to build your own source generator you can use this code",
    "start": "2786240",
    "end": "2792400"
  },
  {
    "text": "to do to do the test okay",
    "start": "2792400",
    "end": "2797578"
  },
  {
    "text": "um for the final part let's talk about the the cloud itself okay because we saw",
    "start": "2797619",
    "end": "2805359"
  },
  {
    "text": "uh the device and the device code we saw the source code generator how we use these attributes to build the real",
    "start": "2805359",
    "end": "2812380"
  },
  {
    "text": "to use the device SDK to communicate with the cloud now let's talk about the",
    "start": "2812380",
    "end": "2817480"
  },
  {
    "text": "cloud itself so in the cloud",
    "start": "2817480",
    "end": "2822880"
  },
  {
    "text": "um there is sign here here let's see let's hope that it will",
    "start": "2822880",
    "end": "2829559"
  },
  {
    "text": "so in the cloud I have the Azure iot hub yes no not this one no no no",
    "start": "2829599",
    "end": "2837819"
  },
  {
    "text": "okay let's Go From Here duplicate",
    "start": "2837819",
    "end": "2843520"
  },
  {
    "text": "this one yeah",
    "start": "2845920",
    "end": "2852339"
  },
  {
    "text": "um let's see and this see demo here this is the risoscope",
    "start": "2852339",
    "end": "2857680"
  },
  {
    "text": "so for this demo I created only two resources one is the Azure iot Hub the",
    "start": "2857680",
    "end": "2864520"
  },
  {
    "text": "other one is the service bus uh that the messages will go to the",
    "start": "2864520",
    "end": "2869560"
  },
  {
    "text": "service bus and the uh the UI application that you saw it will just",
    "start": "2869560",
    "end": "2874599"
  },
  {
    "text": "get information from the service bus using the service bus SDK okay so this",
    "start": "2874599",
    "end": "2879700"
  },
  {
    "text": "is the iot Hub um",
    "start": "2879700",
    "end": "2885160"
  },
  {
    "text": "so you see you see that that there were several messages during this uh lecture you can see the",
    "start": "2885160",
    "end": "2894640"
  },
  {
    "text": "different devices probably there is only a single device in this case just",
    "start": "2894640",
    "end": "2899740"
  },
  {
    "text": "Raspberry Pi so this is the outpi for device and if I get into the device you can see",
    "start": "2899740",
    "end": "2907720"
  },
  {
    "text": "the device to win okay so this is the nosql DB that that",
    "start": "2907720",
    "end": "2914140"
  },
  {
    "text": "any device um has so we can see that the device ID we see that the device is enabled it's",
    "start": "2914140",
    "end": "2921760"
  },
  {
    "text": "connected so it continues to send messages now um and we see that we have desired",
    "start": "2921760",
    "end": "2929140"
  },
  {
    "text": "property so if the reporting interval in second is five if you remember I moved the slide to the left side so the client",
    "start": "2929140",
    "end": "2937420"
  },
  {
    "text": "the services Decay are called the all change the device to win and tell it to",
    "start": "2937420",
    "end": "2944560"
  },
  {
    "text": "set this value to 5 so the device now knows to send information each five seconds okay uh because the desired",
    "start": "2944560",
    "end": "2952980"
  },
  {
    "text": "properties are reflected into the device I don't need to do anything I just need to change them in the cloud uh also they",
    "start": "2952980",
    "end": "2960760"
  },
  {
    "text": "are the reported properties of the lead byte is reported to be 100 and and",
    "start": "2960760",
    "end": "2966579"
  },
  {
    "text": "that's it okay so now let's let's look at at the um",
    "start": "2966579",
    "end": "2972460"
  },
  {
    "text": "the code of the services decay",
    "start": "2972460",
    "end": "2978880"
  },
  {
    "text": "so I decided to use winform and I was regretted to use winform because of the",
    "start": "2978880",
    "end": "2984099"
  },
  {
    "text": "DPI things I was lazy to use something else like WPA for xamarink but for this",
    "start": "2984099",
    "end": "2989980"
  },
  {
    "text": "demo it's I thought that when phone is just good enough so let's talk about the",
    "start": "2989980",
    "end": "2996099"
  },
  {
    "text": "details not the wind form so um",
    "start": "2996099",
    "end": "3001920"
  },
  {
    "text": "this is the iotic cloud client so we have the service client this is",
    "start": "3001920",
    "end": "3007980"
  },
  {
    "text": "like the device client this is the the mirror of the device client this is from the from the cloud point of view we have",
    "start": "3007980",
    "end": "3015839"
  },
  {
    "text": "the device ID the registry manager let me to manipulate and read and write the",
    "start": "3015839",
    "end": "3022200"
  },
  {
    "text": "device to win okay um I have a property that tells whether",
    "start": "3022200",
    "end": "3028200"
  },
  {
    "text": "the device is connected or not I get a connection string from the environment variable this is the the connection",
    "start": "3028200",
    "end": "3035700"
  },
  {
    "text": "string of the iot Hub itself so it lets me to control all the devices",
    "start": "3035700",
    "end": "3041160"
  },
  {
    "text": "okay um and you can get the connection string from the from the cloud",
    "start": "3041160",
    "end": "3047520"
  },
  {
    "text": "from the portal I have also the device ID the r54 it comes from from an",
    "start": "3047520",
    "end": "3054240"
  },
  {
    "text": "environment variable um what else",
    "start": "3054240",
    "end": "3060780"
  },
  {
    "text": "so create from connection string the device client",
    "start": "3060780",
    "end": "3066480"
  },
  {
    "text": "and then uh open I think this is the service client not the device and the",
    "start": "3066480",
    "end": "3072000"
  },
  {
    "text": "service client and uh create the registry manager again from",
    "start": "3072000",
    "end": "3079440"
  },
  {
    "text": "the connection string and now show message on the device",
    "start": "3079440",
    "end": "3086520"
  },
  {
    "text": "I get I create a device message and sent async this is again an API of the",
    "start": "3086520",
    "end": "3092700"
  },
  {
    "text": "service client so I sent using to the device ID the device message and the",
    "start": "3092700",
    "end": "3098099"
  },
  {
    "text": "device message is a encoded binary of the text message this will be shown on",
    "start": "3098099",
    "end": "3103260"
  },
  {
    "text": "the on the Matrix screen and this goes to a queue okay so when if",
    "start": "3103260",
    "end": "3110099"
  },
  {
    "text": "the device is not connected if I'll send it it will stay there and the device will get it whenever it will be",
    "start": "3110099",
    "end": "3115740"
  },
  {
    "text": "connected again start effect this is the the rate direct call for the device so I",
    "start": "3115740",
    "end": "3120900"
  },
  {
    "text": "created Json with the known data known format that I created so the device can",
    "start": "3120900",
    "end": "3127319"
  },
  {
    "text": "get the Json I know it knows what to do with it um and so there is the command so the",
    "start": "3127319",
    "end": "3135180"
  },
  {
    "text": "different effect of the lead uh strip the color and the extra color the two",
    "start": "3135180",
    "end": "3141660"
  },
  {
    "text": "different colors okay and then I sterilize it to the Json and use the",
    "start": "3141660",
    "end": "3147480"
  },
  {
    "text": "cloud to device method again this is a class of the services Decay that let me",
    "start": "3147480",
    "end": "3153660"
  },
  {
    "text": "call directly to a device now the device can be written in C sharp like here but it can also be written in",
    "start": "3153660",
    "end": "3160079"
  },
  {
    "text": "Python C does not really matter because it's just a Json that goes to the device but this has to this uh to to",
    "start": "3160079",
    "end": "3167339"
  },
  {
    "text": "this to to work well the device has to be connected if it's not connected you will get an arrow on exception uh here",
    "start": "3167339",
    "end": "3174420"
  },
  {
    "text": "and then the result are just and before the call I set the Json payload and invoke device method since I don't care",
    "start": "3174420",
    "end": "3181500"
  },
  {
    "text": "about the result I don't read the result but if I wanted to to get some information for the device this function",
    "start": "3181500",
    "end": "3187619"
  },
  {
    "text": "also written a result okay stop affected just another start effect",
    "start": "3187619",
    "end": "3194760"
  },
  {
    "text": "with stop okay uh what else is device connected I query",
    "start": "3194760",
    "end": "3200339"
  },
  {
    "text": "the device registry so um device connection state in the uh",
    "start": "3200339",
    "end": "3206640"
  },
  {
    "text": "devices States uh update by by this I change the desired property so uh",
    "start": "3206640",
    "end": "3214500"
  },
  {
    "text": "property name policy it's camel case again Json and then set payload and no",
    "start": "3214500",
    "end": "3221819"
  },
  {
    "text": "this is again the Direct Call this is updates update reporting",
    "start": "3221819",
    "end": "3227099"
  },
  {
    "text": "properties so I do some sort of a patch to the desired property using the",
    "start": "3227099",
    "end": "3233040"
  },
  {
    "text": "registry manager so you see that there is a good way to there's a way to control everything from",
    "start": "3233040",
    "end": "3239760"
  },
  {
    "text": "the cloud or to get the information in the device so you have both ways",
    "start": "3239760",
    "end": "3244920"
  },
  {
    "text": "actually I thought whether to also create Source generator for the cloud",
    "start": "3244920",
    "end": "3250680"
  },
  {
    "text": "part but I think that the cloud part is very easy so I'm not sure that this is something that uh that worth it but",
    "start": "3250680",
    "end": "3257880"
  },
  {
    "text": "maybe for those that don't know how to use the the API maybe it will be easier to create desire and report it the same",
    "start": "3257880",
    "end": "3264839"
  },
  {
    "text": "way that I created for the device client and then it will be very easy to use uh",
    "start": "3264839",
    "end": "3269880"
  },
  {
    "text": "also to create the control application okay so let's wrap up",
    "start": "3269880",
    "end": "3276720"
  },
  {
    "text": "we started with the demo we can actually run it again now the DPI will be a problem but I",
    "start": "3276720",
    "end": "3283920"
  },
  {
    "text": "don't really care tell you let's",
    "start": "3283920",
    "end": "3290099"
  },
  {
    "text": "set a startup where is it",
    "start": "3290280",
    "end": "3296520"
  },
  {
    "text": "here I told you",
    "start": "3296520",
    "end": "3304039"
  },
  {
    "text": "so we can send data I'll start some sort of effect",
    "start": "3304700",
    "end": "3312740"
  },
  {
    "text": "yeah I",
    "start": "3313440",
    "end": "3317420"
  },
  {
    "text": "you're right you see the DPI problem and so we started with the demo",
    "start": "3319859",
    "end": "3328260"
  },
  {
    "text": "actually it works also at the end which is good you can come up later and see the setting uh and I took it all the way",
    "start": "3328260",
    "end": "3336480"
  },
  {
    "text": "from Israel Israel to here so it's a long way",
    "start": "3336480",
    "end": "3342119"
  },
  {
    "text": "um and then we go to the three different parts we talked about the device itself how the device can connect to the cloud",
    "start": "3342119",
    "end": "3349079"
  },
  {
    "text": "actually we use C sharp but but under the hood what it does is just translate everything to mqtt mqtt protocol",
    "start": "3349079",
    "end": "3357540"
  },
  {
    "text": "and talk with azure in the Azure there is the iot Hub this",
    "start": "3357540",
    "end": "3363059"
  },
  {
    "text": "is the mighty service of iot that does everything manages the different devices let us",
    "start": "3363059",
    "end": "3369720"
  },
  {
    "text": "communicate with the device in an asynchron or synchronous way",
    "start": "3369720",
    "end": "3374940"
  },
  {
    "text": "um handle the different properties the desired properties so from the ground I can desire ask the device to do",
    "start": "3374940",
    "end": "3380520"
  },
  {
    "text": "something or from the device I can Report with reported property about the status of the device and then we have",
    "start": "3380520",
    "end": "3388079"
  },
  {
    "text": "the service SDK that from the cloud side we can control the different devices I",
    "start": "3388079",
    "end": "3394500"
  },
  {
    "text": "just need to change the device ID and I couldn't I can control another device and we talked about C sharp Source",
    "start": "3394500",
    "end": "3401280"
  },
  {
    "text": "generator a very nice and easy way to build uh generators that reduce the",
    "start": "3401280",
    "end": "3408180"
  },
  {
    "text": "amount of effort that we haven't you know I'm not sure which one anyway",
    "start": "3408180",
    "end": "3415460"
  },
  {
    "text": "so a very easy way to create this a boilerplate code that you",
    "start": "3415460",
    "end": "3423000"
  },
  {
    "text": "always need to do if you try my iot cogenerator you just need to put a",
    "start": "3423000",
    "end": "3429839"
  },
  {
    "text": "single attribute and you have a device I I pick",
    "start": "3429839",
    "end": "3435180"
  },
  {
    "text": "um everything is a default a default connection string the default device now everything is a default but you have a",
    "start": "3435180",
    "end": "3440640"
  },
  {
    "text": "device with just a single attribute of course if you want to use device",
    "start": "3440640",
    "end": "3445680"
  },
  {
    "text": "provisioning service if you want to use different protocols and so on you need to provide more attributes attributes",
    "start": "3445680",
    "end": "3452160"
  },
  {
    "text": "with more information but then again you'll get the code generate generated for you",
    "start": "3452160",
    "end": "3457559"
  },
  {
    "text": "so I hope that you can use at least part of the thing that I showed you in this lecture and I wish you a nice evening",
    "start": "3457559",
    "end": "3466780"
  },
  {
    "text": "[Laughter] any question questions",
    "start": "3466780",
    "end": "3474920"
  },
  {
    "text": "this is a good question what happen if there is no internet connection so the device continue to work okay but in a",
    "start": "3490400",
    "end": "3499440"
  },
  {
    "text": "disconnected way so what if you send it for if you ask her if you",
    "start": "3499440",
    "end": "3504540"
  },
  {
    "text": "use the cued way to send information from the cloud then it will wait for the device to be connected and to get the",
    "start": "3504540",
    "end": "3510839"
  },
  {
    "text": "information the device also can collect depends on the amount of memory that the device has can collect the Telemetry",
    "start": "3510839",
    "end": "3517500"
  },
  {
    "text": "information and later on send it to the cloud but you need to to do it yourself if you want to have a better easier way",
    "start": "3517500",
    "end": "3524880"
  },
  {
    "text": "to do it use the iot edge The iot Edge has its own iot Hub built in on the",
    "start": "3524880",
    "end": "3530819"
  },
  {
    "text": "device and it knows how to do store and forward so you can take the iot edge connect",
    "start": "3530819",
    "end": "3537359"
  },
  {
    "text": "other devices and use the iot edge as the router as the way to go to the cloud and",
    "start": "3537359",
    "end": "3545040"
  },
  {
    "text": "it Edge knows how to work and in an offline way so it also uh store the",
    "start": "3545040",
    "end": "3551579"
  },
  {
    "text": "information from the other devices until it will be back connected to the cloud",
    "start": "3551579",
    "end": "3556680"
  },
  {
    "text": "so it's either you use a simple device but you need to work harder and you need to collect the information and wait",
    "start": "3556680",
    "end": "3563220"
  },
  {
    "text": "until you'll have a connection or you can use Azure iot Edge and use",
    "start": "3563220",
    "end": "3569099"
  },
  {
    "text": "the built-in offline capability of the Azure ID Edge these are the two ways",
    "start": "3569099",
    "end": "3575579"
  },
  {
    "text": "okay another question okay so thank you",
    "start": "3575579",
    "end": "3584000"
  }
]