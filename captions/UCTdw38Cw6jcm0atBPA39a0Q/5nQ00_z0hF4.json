[
  {
    "text": "yeah so perhaps i should just get started then so we work as",
    "start": "8160",
    "end": "13840"
  },
  {
    "text": "application security specialists at omegapoint and we split our time",
    "start": "13840",
    "end": "20240"
  },
  {
    "text": "between doing security reviews penetration testing but also doing",
    "start": "20240",
    "end": "25840"
  },
  {
    "text": "normal work as developers in teams building and maintaining applications",
    "start": "25840",
    "end": "31599"
  },
  {
    "text": "and today we wanted to show you how to build secure apis",
    "start": "31599",
    "end": "36719"
  },
  {
    "text": "based on our experience as from penetration testing and several years of",
    "start": "36719",
    "end": "42840"
  },
  {
    "text": "developing net applications and the code that we will show you is also",
    "start": "42840",
    "end": "49680"
  },
  {
    "text": "available at github if you want to play around yourself and have a look around",
    "start": "49680",
    "end": "56800"
  },
  {
    "text": "um but uh first this talk is based on principles of zero trust and least",
    "start": "57440",
    "end": "64320"
  },
  {
    "text": "privilege and also the uh some of the design ideas from this excellent book secure by",
    "start": "64320",
    "end": "70799"
  },
  {
    "text": "design written by some of our colleagues at omegapoint",
    "start": "70799",
    "end": "76240"
  },
  {
    "text": "but before we start um i just want to point out that this",
    "start": "76240",
    "end": "82640"
  },
  {
    "text": "presentation is ambitious and we will try to cover a lot of topics we want to",
    "start": "82640",
    "end": "89360"
  },
  {
    "text": "show you that it takes a little bit more than just well-risk and application code in order to get a secure api",
    "start": "89360",
    "end": "96720"
  },
  {
    "text": "and we will try to do that in 60 minutes that's why the two of us are stationed yes",
    "start": "96720",
    "end": "103280"
  },
  {
    "text": "that's right but uh just to set the stage a little um",
    "start": "103280",
    "end": "108560"
  },
  {
    "text": "so a perimeter-based defense in the form of a firewall or other product that",
    "start": "108560",
    "end": "114240"
  },
  {
    "text": "protects an application server is a classical security design approach",
    "start": "114240",
    "end": "120320"
  },
  {
    "text": "but in the face of a modern architecture that consists of several independent",
    "start": "120320",
    "end": "125600"
  },
  {
    "text": "services like the one to the right it is simply not secure enough and",
    "start": "125600",
    "end": "131440"
  },
  {
    "text": "a modern service layer typically has requirements to allow for integration with other systems over the",
    "start": "131440",
    "end": "138319"
  },
  {
    "text": "internet there are more clients than before and there are also requirements for a single",
    "start": "138319",
    "end": "144720"
  },
  {
    "text": "sign-on and where we previously could implement authorization control as a shared module",
    "start": "144720",
    "end": "151680"
  },
  {
    "text": "in a monolithic system we today face an implementation in each service",
    "start": "151680",
    "end": "157200"
  },
  {
    "text": "and perhaps even spread over multiple teams so our community has come up with concepts",
    "start": "157200",
    "end": "163920"
  },
  {
    "text": "like zero trust and least privilege to build secure systems under these conditions and from the",
    "start": "163920",
    "end": "170480"
  },
  {
    "text": "perspective of our service uh we need to implement a set of essential layers of validation",
    "start": "170480",
    "end": "176800"
  },
  {
    "text": "but uh please note that we should not remove the fireball it should just not be the only layer of",
    "start": "176800",
    "end": "183200"
  },
  {
    "text": "defense and we should think in terms of securing our system in multiplayers",
    "start": "183200",
    "end": "189519"
  },
  {
    "text": "this will reduce the damage of security misconfiguration where apis and other resources are",
    "start": "189519",
    "end": "197519"
  },
  {
    "text": "exposed with much weaker protection than they were designed for that's a rather common mistake in larger",
    "start": "197519",
    "end": "204560"
  },
  {
    "text": "systems when you need to support a new piece of integration or perhaps move to a new hosting environment",
    "start": "204560",
    "end": "210720"
  },
  {
    "text": "yeah so but what if we have this kind of monolithic system to the left there do",
    "start": "210720",
    "end": "216959"
  },
  {
    "text": "we have to move to the architecture on the right in order to get a secure system uh no uh absolutely not uh the",
    "start": "216959",
    "end": "223200"
  },
  {
    "text": "concepts and designs that we talk about here today are very much valid for the system",
    "start": "223200",
    "end": "228239"
  },
  {
    "text": "to the left as well there is uh no contradiction um",
    "start": "228239",
    "end": "233280"
  },
  {
    "text": "if you do have a monolithic solution these ideas i think will help you develop a more secure system",
    "start": "233280",
    "end": "239200"
  },
  {
    "text": "and also an architecture that consists of multiple services is not inherently more",
    "start": "239200",
    "end": "244959"
  },
  {
    "text": "secure compared to a monolithic system oh good so we can secure both",
    "start": "244959",
    "end": "250879"
  },
  {
    "text": "so we will introduce a six-step model that each service api needs to",
    "start": "250879",
    "end": "257040"
  },
  {
    "text": "implement and we will take a look at that yeah",
    "start": "257040",
    "end": "262880"
  },
  {
    "text": "so a strong defense in depth according to the principles of least privilege and",
    "start": "262880",
    "end": "268880"
  },
  {
    "text": "serial trust means that we need to minimize the permission set for each request",
    "start": "268880",
    "end": "274479"
  },
  {
    "text": "and based on our experience from having reviewed a lot of systems we think that",
    "start": "274479",
    "end": "280400"
  },
  {
    "text": "you need to address all of these six steps no matter how you do it yeah this is basically how we review systems when",
    "start": "280400",
    "end": "287840"
  },
  {
    "text": "we do penetration testing and security reviews so the first step here is to validate",
    "start": "287840",
    "end": "293680"
  },
  {
    "text": "that the incoming request is valid http with a reasonable size but also",
    "start": "293680",
    "end": "299759"
  },
  {
    "text": "like the request rate in simply that it is valid traffic meant for us",
    "start": "299759",
    "end": "305759"
  },
  {
    "text": "otherwise it should be reacted as early as possible before reaching our application code",
    "start": "305759",
    "end": "311840"
  },
  {
    "text": "so this is not api implementation on our side we get this by configuring infrastructure protection in front of us",
    "start": "311840",
    "end": "319199"
  },
  {
    "text": "and a good reverse proxy and the web server hosting the api secure hosting is an",
    "start": "319199",
    "end": "325120"
  },
  {
    "text": "important part so we will come back to this this part of the step one later in the last demo",
    "start": "325120",
    "end": "331120"
  },
  {
    "text": "but all the other steps here we can see two three four five six",
    "start": "331120",
    "end": "336840"
  },
  {
    "text": "they um they we need to do them in our api to implement them in in our code",
    "start": "336840",
    "end": "343280"
  },
  {
    "text": "um so uh we will use we'll go to a demo",
    "start": "343280",
    "end": "349600"
  },
  {
    "text": "and we will use asp.net core 6 in this demo",
    "start": "349600",
    "end": "355919"
  },
  {
    "text": "yeah so what i've done just is that created a new folder and i've done just created a",
    "start": "356880",
    "end": "363680"
  },
  {
    "text": "new empty asp.net core application and i've also added one new get package",
    "start": "363680",
    "end": "371360"
  },
  {
    "text": "that's the jvt bearer package we need that in order to use uh warth and",
    "start": "371360",
    "end": "377120"
  },
  {
    "text": "access token to secure the and then i will just",
    "start": "377120",
    "end": "382960"
  },
  {
    "text": "start the application yeah",
    "start": "382960",
    "end": "388479"
  },
  {
    "text": "and i got 5000 and notice that i use https even in",
    "start": "388479",
    "end": "394639"
  },
  {
    "text": "development that's something that we heartedly recommend there is very little reason today to run",
    "start": "394639",
    "end": "401280"
  },
  {
    "text": "anything else in https even if you develop locally so please do that if you can so this is",
    "start": "401280",
    "end": "408560"
  },
  {
    "text": "what we get these days yeah so if you've not seen this template code from",
    "start": "408560",
    "end": "415120"
  },
  {
    "text": "not six before it's uh just the program is it big enough",
    "start": "415120",
    "end": "421680"
  },
  {
    "text": "good it's so it's just program.cs no startup no configuration methods um",
    "start": "421680",
    "end": "427440"
  },
  {
    "text": "but otherwise the code will look the same we will add controller because that's what we most of us have today and",
    "start": "427440",
    "end": "433840"
  },
  {
    "text": "that's what we use in bigger projects probably so we have removed this um",
    "start": "433840",
    "end": "439599"
  },
  {
    "text": "minimal api that you get with the template there but so we'll do controllers and then we will",
    "start": "439599",
    "end": "444639"
  },
  {
    "text": "add a basic ls standard product controller and it will look very",
    "start": "444639",
    "end": "451280"
  },
  {
    "text": "familiar to you even if you're not used to asp.net core 6.",
    "start": "451280",
    "end": "458240"
  },
  {
    "text": "and this controller that martin creates now",
    "start": "458240",
    "end": "463759"
  },
  {
    "text": "is we'll have a get by id um endpoint and we can",
    "start": "463759",
    "end": "468960"
  },
  {
    "text": "note this that we have explicit routing here and and also we have the from route",
    "start": "468960",
    "end": "475360"
  },
  {
    "text": "attribute and these are important because it should be very clear and explicit what happens",
    "start": "475360",
    "end": "481120"
  },
  {
    "text": "with a request how do we handle it because attackers they often",
    "start": "481120",
    "end": "486240"
  },
  {
    "text": "use the fact that of unexpected behavior in the code so so",
    "start": "486240",
    "end": "491520"
  },
  {
    "text": "it's important to be explicit and with clear set of rules yeah so i just prepared a as a small",
    "start": "491520",
    "end": "499039"
  },
  {
    "text": "product domain object i just created and since i made changes um",
    "start": "499039",
    "end": "507039"
  },
  {
    "text": "to the middleware in the program hot reload typically does not pick up that so i need to restart it but",
    "start": "507039",
    "end": "513680"
  },
  {
    "text": "maybe we should try and yeah we'll try it yeah and we do it with the rest client plugin to",
    "start": "513680",
    "end": "520560"
  },
  {
    "text": "code so just run a get http request against my endpoint",
    "start": "520560",
    "end": "528000"
  },
  {
    "text": "and we can see that we return a 200 okay the content type is correctly specified",
    "start": "528000",
    "end": "534640"
  },
  {
    "text": "as application json very important and i get my hard-coded product back so",
    "start": "534640",
    "end": "541920"
  },
  {
    "text": "no surprises yet yeah yeah great it it works and well that's good so for",
    "start": "541920",
    "end": "548480"
  },
  {
    "text": "this demo step one is complete we assume that we have secure hosting",
    "start": "548480",
    "end": "553680"
  },
  {
    "text": "and infrastructure et cetera in front of us uh and",
    "start": "553680",
    "end": "558720"
  },
  {
    "text": "we have a secure runtime user frameworks and components etc but outro box this is a public api so",
    "start": "558720",
    "end": "566000"
  },
  {
    "text": "now we need to secure this api so if we go back to program that says",
    "start": "566000",
    "end": "573760"
  },
  {
    "text": "so we will start with by doing step two validate the token which often is a json web token so we",
    "start": "573920",
    "end": "581200"
  },
  {
    "text": "add the jvt jvt bearer authentication middleware for this step we need a",
    "start": "581200",
    "end": "586959"
  },
  {
    "text": "secure middleware this should only be configuration from our site no custom code for validating tokens etc",
    "start": "586959",
    "end": "594560"
  },
  {
    "text": "and we get this from asp.net core and by default we get the basic",
    "start": "594560",
    "end": "600160"
  },
  {
    "text": "json web token validation like signature issuer et cetera and there are a lot more things to say",
    "start": "600160",
    "end": "607680"
  },
  {
    "text": "about token validation but we will not go into more details here today",
    "start": "607680",
    "end": "613040"
  },
  {
    "text": "and also notice the policy lines that you added can you explain a little bit about those sure so",
    "start": "613040",
    "end": "619360"
  },
  {
    "text": "um so what i've done for the authorization part is that i have added that the",
    "start": "619360",
    "end": "625120"
  },
  {
    "text": "authentication scheme that we support is jvt bearer nothing else and more importantly i've also",
    "start": "625120",
    "end": "632800"
  },
  {
    "text": "specified that we require an authenticated request so and i set that as the default and the",
    "start": "632800",
    "end": "638880"
  },
  {
    "text": "fallback policy so if we do get an anonymous request in",
    "start": "638880",
    "end": "644560"
  },
  {
    "text": "the controller needs to opt in to support anonymous requests by using the",
    "start": "644560",
    "end": "650800"
  },
  {
    "text": "allow anonymous attribute so um if we try this we should be",
    "start": "650800",
    "end": "657360"
  },
  {
    "text": "yeah so that's a good point because now it takes you know two mistakes here",
    "start": "657360",
    "end": "662399"
  },
  {
    "text": "and uh and this is actually when we do a security review for pen testing this is the first thing we look",
    "start": "662399",
    "end": "667680"
  },
  {
    "text": "at can we find a mandatory pattern for forcing yes access control if we can't",
    "start": "667680",
    "end": "673120"
  },
  {
    "text": "find that then we know that in a large api there will be mistakes and probably a public endpoint somewhere yeah and i",
    "start": "673120",
    "end": "679200"
  },
  {
    "text": "should also say perhaps that we can also add um as a second step um require",
    "start": "679200",
    "end": "684959"
  },
  {
    "text": "authorization of course that was the line now of course so those are redundant but it will",
    "start": "684959",
    "end": "692399"
  },
  {
    "text": "they keep you from just making a single mistake and open up the api",
    "start": "692399",
    "end": "697920"
  },
  {
    "text": "so i did the same request i did the http get request to the same endpoint but this time i get a 401 unauthorized",
    "start": "697920",
    "end": "705600"
  },
  {
    "text": "pack and also an indication from my api that if you are to authenticate you need",
    "start": "705600",
    "end": "712399"
  },
  {
    "text": "to use a bearer token yeah so we need to get a token and we get this from our",
    "start": "712399",
    "end": "718399"
  },
  {
    "text": "local token service um and for this we use the duanda identity server",
    "start": "718399",
    "end": "724720"
  },
  {
    "text": "which is a great product for open reconnect and oauth and things like that",
    "start": "724720",
    "end": "730959"
  },
  {
    "text": "um so so i just did the uh made a post request to the connect token endpoint of",
    "start": "730959",
    "end": "736480"
  },
  {
    "text": "identity server and since i pre-configured it with the a client id and a client secret",
    "start": "736480",
    "end": "742800"
  },
  {
    "text": "i get a 200 okay back and as you can see i get a standard",
    "start": "742800",
    "end": "748880"
  },
  {
    "text": "token endpoint result i get the access token i get an indication that this token is",
    "start": "748880",
    "end": "755200"
  },
  {
    "text": "valid for 60 minutes it's a bear token and it contains a single scope",
    "start": "755200",
    "end": "762600"
  },
  {
    "text": "products.read yeah and we will just say that there are a lot more things to say about tokens openly connect awards and",
    "start": "762600",
    "end": "769519"
  },
  {
    "text": "stuff and we will not have time for that today is that we will recommend dominic buyers",
    "start": "769519",
    "end": "774720"
  },
  {
    "text": "presentations and workshops et cetera hopefully exactly right yeah so we use the client credentials uh",
    "start": "774720",
    "end": "780800"
  },
  {
    "text": "flow for this yeah which according to dominic buyer is still of the good among the good parts",
    "start": "780800",
    "end": "787440"
  },
  {
    "text": "and that's a simple flow perfect for the demo so let's attach it to the request and we",
    "start": "787440",
    "end": "793200"
  },
  {
    "text": "do that using a bearer token",
    "start": "793200",
    "end": "797839"
  },
  {
    "text": "and as you can see it's the same get request but this time we add the access token to the bear",
    "start": "799600",
    "end": "805040"
  },
  {
    "text": "header and we again get a 200 on my hard coded",
    "start": "805040",
    "end": "810800"
  },
  {
    "text": "product back yeah so that was step one and two they are complete",
    "start": "810800",
    "end": "816480"
  },
  {
    "text": "all requests are valued http and with a valid token so let's move on to step three",
    "start": "816480",
    "end": "822800"
  },
  {
    "text": "where we transform the access token claims information in the token to permissions",
    "start": "822800",
    "end": "830480"
  },
  {
    "text": "uh and in asp.net this is often done using a claims transformer which uh",
    "start": "830480",
    "end": "836079"
  },
  {
    "text": "martin will add here and the the idea here is to if we have a",
    "start": "836079",
    "end": "842720"
  },
  {
    "text": "valid token then we can add more information or or just",
    "start": "842720",
    "end": "847920"
  },
  {
    "text": "transform make some minor name changes in order to suit our model better",
    "start": "847920",
    "end": "854639"
  },
  {
    "text": "yeah so the claims transformation um is just a small file uh it's an",
    "start": "854639",
    "end": "860160"
  },
  {
    "text": "interface and it contains uh a single method that i need to",
    "start": "860160",
    "end": "865519"
  },
  {
    "text": "implement uh input is a claims principle that's the principle that represents the",
    "start": "865519",
    "end": "871279"
  },
  {
    "text": "incoming access token that we just created and i need to return a new claims",
    "start": "871279",
    "end": "878240"
  },
  {
    "text": "principle that contains the transformation from that content to something that i want to work with",
    "start": "878240",
    "end": "884079"
  },
  {
    "text": "within my domain logic so in this example i first check that the um",
    "start": "884079",
    "end": "890240"
  },
  {
    "text": "uh that the principle coming in is authenticated properly and if it is then i will transform the",
    "start": "890240",
    "end": "898000"
  },
  {
    "text": "if the um incoming principle contains the products.readscope",
    "start": "898000",
    "end": "904480"
  },
  {
    "text": "then i will choose to work with a claim uh that is suitable for my domain right",
    "start": "904480",
    "end": "913120"
  },
  {
    "text": "that represents our permission model yeah exactly and also typically we do something",
    "start": "913120",
    "end": "918880"
  },
  {
    "text": "around the identity of the user or the client and in this case um i've just",
    "start": "918880",
    "end": "924560"
  },
  {
    "text": "hard coded that this incoming request represents someone that belonged to the",
    "start": "924560",
    "end": "931360"
  },
  {
    "text": "norwegian market that's obviously typically not hard coded but something that you look up in",
    "start": "931360",
    "end": "937920"
  },
  {
    "text": "a database query perhaps using a service call or something like that yeah and doing this external service call",
    "start": "937920",
    "end": "945440"
  },
  {
    "text": "in the claims transformer may not be optimal but it works and it's commonly used we",
    "start": "945440",
    "end": "951519"
  },
  {
    "text": "will talk more about this later how we can deal with it in a slightly better",
    "start": "951519",
    "end": "956560"
  },
  {
    "text": "way maybe um and we really wanna before we leave i really want to emphasize the importance",
    "start": "956560",
    "end": "962480"
  },
  {
    "text": "of uh of getting the balance right there of what's in the token and the lookups we do and the local permission model",
    "start": "962480",
    "end": "970320"
  },
  {
    "text": "and that we with this step we don't have dependencies",
    "start": "970320",
    "end": "975440"
  },
  {
    "text": "later on to protocols or idp specific things like scope names",
    "start": "975440",
    "end": "983360"
  },
  {
    "text": "because we have transformed to our own permission model that we can own and",
    "start": "983360",
    "end": "988560"
  },
  {
    "text": "develop yeah so that was step three and now it's",
    "start": "988560",
    "end": "995279"
  },
  {
    "text": "time for step four validate data in the request and",
    "start": "995279",
    "end": "1000720"
  },
  {
    "text": "in order to do this step we first add a small small hard-coded in-memory",
    "start": "1000720",
    "end": "1006320"
  },
  {
    "text": "repository so we have some data to protect here and we have two products one for",
    "start": "1006320",
    "end": "1011920"
  },
  {
    "text": "the swedish market and one for the new indian market and in order to sort of get the code",
    "start": "1011920",
    "end": "1019360"
  },
  {
    "text": "working as before we had a simple try get there so and return a 404 if if not",
    "start": "1019360",
    "end": "1025600"
  },
  {
    "text": "found so it it works like before um",
    "start": "1025600",
    "end": "1032079"
  },
  {
    "text": "yeah and then we can continue with with the validation",
    "start": "1032079",
    "end": "1037520"
  },
  {
    "text": "so so the important thing here is that all",
    "start": "1037520",
    "end": "1044160"
  },
  {
    "text": "parts of the request are is untrusted data so we need to validate them in some way and",
    "start": "1044160",
    "end": "1050960"
  },
  {
    "text": "in particular the most obvious part here is the the input string here there's the id",
    "start": "1050960",
    "end": "1056240"
  },
  {
    "text": "parameter and uh for strings we want some max length",
    "start": "1056240",
    "end": "1061760"
  },
  {
    "text": "and a null check and also often a character set in this case",
    "start": "1061760",
    "end": "1066880"
  },
  {
    "text": "letters and digits because when you think of it the product id here",
    "start": "1066880",
    "end": "1072320"
  },
  {
    "text": "it isn't an infinite string that can contain any character it's it's part of our domain we have",
    "start": "1072320",
    "end": "1078160"
  },
  {
    "text": "rules for it it's ten characters long it's uh just three digits and uh",
    "start": "1078160",
    "end": "1083760"
  },
  {
    "text": "what seven and seven characters so um so so we",
    "start": "1083760",
    "end": "1089600"
  },
  {
    "text": "should verify that as early as possible and if that's not true we return a bad request",
    "start": "1089600",
    "end": "1095440"
  },
  {
    "text": "for android so uh we don't have to continue processing bad requests that's that's important",
    "start": "1095440",
    "end": "1103280"
  },
  {
    "text": "so if we try that um yeah",
    "start": "1104320",
    "end": "1109600"
  },
  {
    "text": "okay let's restart yeah",
    "start": "1110799",
    "end": "1115600"
  },
  {
    "text": "we're good yep",
    "start": "1120000",
    "end": "1123400"
  },
  {
    "text": "so not far sorry",
    "start": "1126000",
    "end": "1132799"
  },
  {
    "text": "okay great oh good good thank you",
    "start": "1132799",
    "end": "1138880"
  },
  {
    "text": "21. thank you thank you good there's nothing like coding in coding live",
    "start": "1138880",
    "end": "1144720"
  },
  {
    "text": "they heard you've seen the importance of code reviews right yes exactly and testing",
    "start": "1144720",
    "end": "1151840"
  },
  {
    "text": "yeah so i did the same request and this time i get the my hard-coded product back again which",
    "start": "1151840",
    "end": "1158240"
  },
  {
    "text": "is what we expected yep but since we now have input data validation",
    "start": "1158240",
    "end": "1163520"
  },
  {
    "text": "i should no longer be able to perhaps send some html",
    "start": "1163520",
    "end": "1170240"
  },
  {
    "text": "as the request i for that kind of request i get a 400 bad",
    "start": "1170240",
    "end": "1176880"
  },
  {
    "text": "request back yeah an indication so it's this end point i will really struggle to",
    "start": "1176880",
    "end": "1183760"
  },
  {
    "text": "uh successfully do an injection attack so so this will limit attack vectors yes",
    "start": "1183760",
    "end": "1191360"
  },
  {
    "text": "yeah good so um yeah so this was step four we now know that we have a",
    "start": "1191360",
    "end": "1197280"
  },
  {
    "text": "meaningful request all parts have been uh validated in some way",
    "start": "1197280",
    "end": "1202720"
  },
  {
    "text": "so let's go to step five where we validate the permission to perform the operation",
    "start": "1202720",
    "end": "1207760"
  },
  {
    "text": "so we often base this on",
    "start": "1207760",
    "end": "1213039"
  },
  {
    "text": "on scopes but as you can see we don't use the scope anymore because we have",
    "start": "1213039",
    "end": "1218640"
  },
  {
    "text": "transformed to our permission model so it's a permission that we take the product's read permission is required",
    "start": "1218640",
    "end": "1223919"
  },
  {
    "text": "for this uh for this function and if not we return uh a 403 forbidden",
    "start": "1223919",
    "end": "1229679"
  },
  {
    "text": "so um let's try that out yeah so i should still be able to get my um",
    "start": "1229679",
    "end": "1237600"
  },
  {
    "text": "my product since i do have that uh yeah yeah but if uh i would have",
    "start": "1237600",
    "end": "1243919"
  },
  {
    "text": "done something that i do not required another like right or yeah no",
    "start": "1243919",
    "end": "1249919"
  },
  {
    "text": "something that i do not have yep then i get a 403 forbidden back instead",
    "start": "1249919",
    "end": "1256159"
  },
  {
    "text": "good so um let's try one more thing because now we have",
    "start": "1256159",
    "end": "1263120"
  },
  {
    "text": "a lot of defenses here right so it's it's kind of how we have access to perform this operation so what could",
    "start": "1263120",
    "end": "1268480"
  },
  {
    "text": "possibly go wrong right so let's try one thing if we go back there and uh we change the idea to",
    "start": "1268480",
    "end": "1276799"
  },
  {
    "text": "two so so our permission model or our access model was that you only had access to one market so now",
    "start": "1276799",
    "end": "1284080"
  },
  {
    "text": "we requested the other product for the other market and as we can say we got the swedish product",
    "start": "1284080",
    "end": "1290080"
  },
  {
    "text": "even though we were connected to the norwegian market uh if you notice that line in the",
    "start": "1290080",
    "end": "1295520"
  },
  {
    "text": "claims transformed other way added this information and so in order to secure",
    "start": "1295520",
    "end": "1301679"
  },
  {
    "text": "that we need step six where we verify that we",
    "start": "1301679",
    "end": "1307520"
  },
  {
    "text": "have permission to access the actual data and in this case we need to verify that the product",
    "start": "1307520",
    "end": "1312960"
  },
  {
    "text": "we are getting is connected to the market that we have access to",
    "start": "1312960",
    "end": "1318400"
  },
  {
    "text": "and we do this by checking the market permission and the value market",
    "start": "1318400",
    "end": "1324320"
  },
  {
    "text": "on the product yeah and then we return yeah something uh so we have a few",
    "start": "1324320",
    "end": "1329440"
  },
  {
    "text": "options i could return a forbidden that's a perfectly valid response",
    "start": "1329440",
    "end": "1335520"
  },
  {
    "text": "there is such a product that with id2 it exists but i do not have access to it",
    "start": "1335520",
    "end": "1341440"
  },
  {
    "text": "typically though we want to return a 404 simply because that means that we if we",
    "start": "1341440",
    "end": "1347840"
  },
  {
    "text": "do the forbidden then i as a user know that there is a product that i don't have access to",
    "start": "1347840",
    "end": "1353120"
  },
  {
    "text": "we might not want that or as an attacker you know it even worse so",
    "start": "1353120",
    "end": "1359280"
  },
  {
    "text": "for me as part of the norwegian market i can't tell the difference between a product that belongs to the swedish",
    "start": "1359280",
    "end": "1364640"
  },
  {
    "text": "market or a product that simply does not exist yeah so that's reveals less",
    "start": "1364640",
    "end": "1370080"
  },
  {
    "text": "information yes yeah so um",
    "start": "1370080",
    "end": "1376240"
  },
  {
    "text": "um that was all the six steps now that i've been implemented so let's go back to the",
    "start": "1376240",
    "end": "1382159"
  },
  {
    "text": "slides not too bad no and we look at our model there and um yeah",
    "start": "1382159",
    "end": "1389520"
  },
  {
    "text": "we're now in a kind of good position where we've implemented all the six steps and uh",
    "start": "1389520",
    "end": "1395440"
  },
  {
    "text": "even if we mistake expose this api without protection from a firewall we",
    "start": "1395440",
    "end": "1401520"
  },
  {
    "text": "have a lot of defenses we require a token and permissions to to run it so",
    "start": "1401520",
    "end": "1408640"
  },
  {
    "text": "you can see the strengths of defense in depth and asp.net is a solid secure framework",
    "start": "1408640",
    "end": "1414559"
  },
  {
    "text": "that provides us with a very nice small api to handle both step two and three there wasn't much",
    "start": "1414559",
    "end": "1420559"
  },
  {
    "text": "code there but let's have a closer look on four five and six",
    "start": "1420559",
    "end": "1427360"
  },
  {
    "text": "our implementation so far is correct if we just have this small simple endpoint",
    "start": "1427360",
    "end": "1433600"
  },
  {
    "text": "but as as the system grows it will probably not scale well well uh",
    "start": "1433600",
    "end": "1439679"
  },
  {
    "text": "normally we would not like to add business logic in the controller so",
    "start": "1439679",
    "end": "1445120"
  },
  {
    "text": "a very common pattern is to introduce a service layer and a repository pattern so let's look at that kind of code",
    "start": "1445120",
    "end": "1453600"
  },
  {
    "text": "yeah so a little bit later code yeah first software somewhere",
    "start": "1454480",
    "end": "1460960"
  },
  {
    "text": "so we could easily extract the code that i just wrote into a service class and introduce a service pattern that",
    "start": "1460960",
    "end": "1468159"
  },
  {
    "text": "nicely maps to a classical layered arc architecture and that is",
    "start": "1468159",
    "end": "1475360"
  },
  {
    "text": "that's a perfectly fine implementation but if we consider that over time we add",
    "start": "1475360",
    "end": "1482720"
  },
  {
    "text": "another component that use the same service class in this case it could be a service",
    "start": "1482720",
    "end": "1489360"
  },
  {
    "text": "bus but it might also be a second controller and since the validation logic and access",
    "start": "1489360",
    "end": "1496000"
  },
  {
    "text": "control has stayed in the controller we have basically given these service bus",
    "start": "1496000",
    "end": "1501120"
  },
  {
    "text": "messages full trust to our uh service logic that might be fine yeah it might not we",
    "start": "1501120",
    "end": "1508080"
  },
  {
    "text": "see that or not when we review code yeah yeah the obvious solution is",
    "start": "1508080",
    "end": "1514960"
  },
  {
    "text": "of course to move the validation logic and access control into the service",
    "start": "1514960",
    "end": "1520559"
  },
  {
    "text": "layer and that way any code that uses the service class also is subject to the same access",
    "start": "1520559",
    "end": "1527120"
  },
  {
    "text": "control and input control yeah so that's good but we have one",
    "start": "1527120",
    "end": "1533679"
  },
  {
    "text": "attack vector left here that we need to address so what if this database here in this",
    "start": "1533679",
    "end": "1539120"
  },
  {
    "text": "case a sql server is a shared database in this case",
    "start": "1539120",
    "end": "1544799"
  },
  {
    "text": "what happens then um that leads us into a deeper pattern",
    "start": "1544799",
    "end": "1550159"
  },
  {
    "text": "from the secure by design book that we talked about earlier so picture a core business domain that",
    "start": "1550159",
    "end": "1558400"
  },
  {
    "text": "also contains all of our validation and access control if we embrace domain driven design and",
    "start": "1558400",
    "end": "1566000"
  },
  {
    "text": "think about our core business domain as a trust boundary where all objects are part of the domain",
    "start": "1566000",
    "end": "1572640"
  },
  {
    "text": "and input data is never trusted for example the core business domain in",
    "start": "1572640",
    "end": "1578480"
  },
  {
    "text": "our case could refuse to deal with product ids as strings",
    "start": "1578480",
    "end": "1583600"
  },
  {
    "text": "and instead require proper domain primitives that includes validation",
    "start": "1583600",
    "end": "1589120"
  },
  {
    "text": "then we will have not only a robust and high quality implementation but also a",
    "start": "1589120",
    "end": "1594720"
  },
  {
    "text": "more secure one yeah so it's quality and security they often go go hand in hand uh",
    "start": "1594720",
    "end": "1601279"
  },
  {
    "text": "and let's uh reflect a little bit about the trust boundaries with the dm model",
    "start": "1601279",
    "end": "1607520"
  },
  {
    "text": "to the left uh we had it at the controller endpoint so",
    "start": "1607520",
    "end": "1612880"
  },
  {
    "text": "we would have a trust boundary like that and then as we added the service bus and the system",
    "start": "1612880",
    "end": "1619440"
  },
  {
    "text": "grows the trust boundary grow and then we moved to the",
    "start": "1619440",
    "end": "1624840"
  },
  {
    "text": "service and it became much smaller again especially how if we had a lot of",
    "start": "1624840",
    "end": "1631360"
  },
  {
    "text": "integrations there uh [Applause] so however the database was still in our",
    "start": "1631360",
    "end": "1637840"
  },
  {
    "text": "trust boundary and uh so that means that the data already present there or data that",
    "start": "1637840",
    "end": "1644159"
  },
  {
    "text": "gets in there is not validated but the data could contain uh injection",
    "start": "1644159",
    "end": "1649760"
  },
  {
    "text": "attacks yeah that sits in the database yeah so that's like it's a second order injection",
    "start": "1649760",
    "end": "1655520"
  },
  {
    "text": "attack vector uh so but um if we implement the core business domain",
    "start": "1655520",
    "end": "1662399"
  },
  {
    "text": "and decide to no longer trust the data that comes from the outside the domain we have quickly reduced that attack",
    "start": "1662399",
    "end": "1668080"
  },
  {
    "text": "vector and we have taken the zero trust principle all the way to our business logic because we have the trust",
    "start": "1668080",
    "end": "1674559"
  },
  {
    "text": "boundary just just around our core domain",
    "start": "1674559",
    "end": "1679200"
  },
  {
    "text": "so yeah now it's time for code yes so uh",
    "start": "1681120",
    "end": "1686240"
  },
  {
    "text": "this is where we left off yes yeah and uh yeah first we want to say that",
    "start": "1686240",
    "end": "1691679"
  },
  {
    "text": "there are of course many ways to do this this demo here is to show one way to implement",
    "start": "1691679",
    "end": "1697360"
  },
  {
    "text": "to implement the secure business domain and to give you an idea what that kind",
    "start": "1697360",
    "end": "1702880"
  },
  {
    "text": "of code could could look like and the first thing we do is that we",
    "start": "1702880",
    "end": "1708159"
  },
  {
    "text": "move from a string to a well-formed product id and we want to do that as",
    "start": "1708159",
    "end": "1713279"
  },
  {
    "text": "early as possible so we can react bad requests once again",
    "start": "1713279",
    "end": "1718960"
  },
  {
    "text": "and then we introduce the service",
    "start": "1718960",
    "end": "1724399"
  },
  {
    "text": "and uh so we will refactor that and we will move all the",
    "start": "1724399",
    "end": "1730799"
  },
  {
    "text": "logic that was in the controller into the service yeah so i just introduced a product service and",
    "start": "1730799",
    "end": "1737360"
  },
  {
    "text": "also a an auto mapper that would help us later",
    "start": "1737360",
    "end": "1743279"
  },
  {
    "text": "yep yeah now we're async",
    "start": "1748799",
    "end": "1753840"
  },
  {
    "text": "yeah yeah so yeah so we can look into the service oops yeah so we should note that we move",
    "start": "1756880",
    "end": "1764320"
  },
  {
    "text": "to the product in the domain primitive as a from string to a domain primitive",
    "start": "1764320",
    "end": "1769840"
  },
  {
    "text": "early on and the product service does not accept",
    "start": "1769840",
    "end": "1775200"
  },
  {
    "text": "strings as input it only accepts product id and if we have a look at the product",
    "start": "1775360",
    "end": "1782000"
  },
  {
    "text": "id we can see that the constructor",
    "start": "1782000",
    "end": "1787360"
  },
  {
    "text": "constructor also asserts that the id string is valid and correct so it's never",
    "start": "1787360",
    "end": "1793279"
  },
  {
    "text": "possible for me to construct the domain primitive instance without also enforcing input data",
    "start": "1793279",
    "end": "1798799"
  },
  {
    "text": "control so so with this service moving this to service means that it will be mandatory",
    "start": "1798799",
    "end": "1805600"
  },
  {
    "text": "to do all these checks no matter how we consume the service",
    "start": "1805600",
    "end": "1810720"
  },
  {
    "text": "so yeah and one thing we can look at is that we have introduced the permission service as",
    "start": "1810720",
    "end": "1816480"
  },
  {
    "text": "well yeah it's just to show that we do not have to rely on the claims principle and the key",
    "start": "1816480",
    "end": "1823200"
  },
  {
    "text": "values string string experience that we get it's perfectly possible to",
    "start": "1823200",
    "end": "1829200"
  },
  {
    "text": "instead use a strongly typed mission service",
    "start": "1829200",
    "end": "1834480"
  },
  {
    "text": "where the uh permission service instead deals with those uh claims principal uh",
    "start": "1834480",
    "end": "1839840"
  },
  {
    "text": "key value strings so that in your domain logic you can deal with something that is strongly",
    "start": "1839840",
    "end": "1845200"
  },
  {
    "text": "typed so it's perhaps much more easy to read the intent of this code",
    "start": "1845200",
    "end": "1850640"
  },
  {
    "text": "so the things we did in the claims transformer have sort of moved in here yeah and here we can do",
    "start": "1850640",
    "end": "1856080"
  },
  {
    "text": "is see also we have a service we can do external calls we can do caching and stop",
    "start": "1856080",
    "end": "1861440"
  },
  {
    "text": "things and and also make use of uh booleans and so uh",
    "start": "1861440",
    "end": "1866640"
  },
  {
    "text": "but it's um it's very easy that you get uh sort of you don't see anything else that doing",
    "start": "1866640",
    "end": "1872320"
  },
  {
    "text": "claims on the claims principle but it's that's not a perfect fit for permissions that's for claims so that's those are",
    "start": "1872320",
    "end": "1878159"
  },
  {
    "text": "two kind of different concepts um yeah and we",
    "start": "1878159",
    "end": "1884080"
  },
  {
    "text": "also should note that we haven't this in the code here but of course we should do audit login etc we",
    "start": "1884080",
    "end": "1889760"
  },
  {
    "text": "won't talk about logging today but that's an important aspect of security to be able to detect",
    "start": "1889760",
    "end": "1895360"
  },
  {
    "text": "misuse and intrusions uh so that you would typically add in the if statements here",
    "start": "1895360",
    "end": "1900720"
  },
  {
    "text": "and and also we need to return the results and",
    "start": "1900720",
    "end": "1907360"
  },
  {
    "text": "it's important that we in the end return the correct http status codes",
    "start": "1907440",
    "end": "1913919"
  },
  {
    "text": "for detecting intrusions and misuse and such but we don't want to introduce them here in",
    "start": "1914320",
    "end": "1921600"
  },
  {
    "text": "our core business domain uh so we we just return a",
    "start": "1921600",
    "end": "1926960"
  },
  {
    "text": "status together with the data so if we go back to the controller",
    "start": "1926960",
    "end": "1934080"
  },
  {
    "text": "we can we can see that we have this switch statement so so we switch yeah so",
    "start": "1934080",
    "end": "1939440"
  },
  {
    "text": "so we switch from the domain um indication that the the request does not",
    "start": "1939440",
    "end": "1945679"
  },
  {
    "text": "have access to operation to an http uh 404 or 403 or what have you",
    "start": "1945679",
    "end": "1951519"
  },
  {
    "text": "so the http part of it belongs in the controller not in the domain logic",
    "start": "1951519",
    "end": "1957519"
  },
  {
    "text": "yeah and we should also note that we instead of just serializing the domain",
    "start": "1957519",
    "end": "1962720"
  },
  {
    "text": "object uh we move to a data contract class uh we think that's quite important as",
    "start": "1962720",
    "end": "1968880"
  },
  {
    "text": "soon as you leave and then a trusted boundary you should have something like contract clauses",
    "start": "1968880",
    "end": "1974840"
  },
  {
    "text": "um serializing your domain classes can be fine but sometimes they contain",
    "start": "1974840",
    "end": "1982480"
  },
  {
    "text": "sensitive information that you do not want to reveal to the user so data contract clauses",
    "start": "1982480",
    "end": "1989200"
  },
  {
    "text": "really limits the attack surface there yeah and we know it can be boring",
    "start": "1989200",
    "end": "1995760"
  },
  {
    "text": "definitely yeah so the new record types in the laser.net is is helpful",
    "start": "1995760",
    "end": "2001919"
  },
  {
    "text": "and automapper is also helpful in bringing that boilerplate code to a minimum",
    "start": "2001919",
    "end": "2008159"
  },
  {
    "text": "from a security perspective yeah yeah it is important i cannot think of it it's a lot about not being lazy when it",
    "start": "2008159",
    "end": "2014640"
  },
  {
    "text": "comes to securing secure code and also yeah and as we said this is",
    "start": "2014640",
    "end": "2019760"
  },
  {
    "text": "just one way to show it the switch case so you can of course do more better things than that more compact and so but",
    "start": "2019760",
    "end": "2026080"
  },
  {
    "text": "the important thing is that you get the correct status codes back to the user you need to handle that in some way",
    "start": "2026080",
    "end": "2033039"
  },
  {
    "text": "and um yeah so so uh do we have to do all this ddd stuff",
    "start": "2033039",
    "end": "2039679"
  },
  {
    "text": "uh isn't it enough just to move the padlocks to the service layer and uh yeah yeah sure so you you do not have to",
    "start": "2039679",
    "end": "2046799"
  },
  {
    "text": "do uh domain driven design in order to create a secure api i mean that for some purposes the first code that we wrote is",
    "start": "2046799",
    "end": "2053919"
  },
  {
    "text": "perfectly adequate but it is important i think to clearly define your trust boundaries",
    "start": "2053919",
    "end": "2061280"
  },
  {
    "text": "and ddd thinking is also a good design and it will introduce a pattern that is",
    "start": "2061280",
    "end": "2068320"
  },
  {
    "text": "harder to opt out of which is good for security but as we have said",
    "start": "2068320",
    "end": "2074800"
  },
  {
    "text": "many times this is just one way to do it yeah but it's but it's a strong pattern so",
    "start": "2074800",
    "end": "2079839"
  },
  {
    "text": "let's uh please take a look at it yep uh yeah and that with that will go back to the slides and it's uh very well",
    "start": "2079839",
    "end": "2086480"
  },
  {
    "text": "described in the secure by design book as well if you're interested yeah",
    "start": "2086480",
    "end": "2092158"
  },
  {
    "text": "so so this was our six step model yeah again so now that we have",
    "start": "2092159",
    "end": "2098640"
  },
  {
    "text": "placed all of the access control in our core business domain does that mean that we are done yeah almost you know",
    "start": "2098640",
    "end": "2106000"
  },
  {
    "text": "well from an application code perspective we have done what we can but security is",
    "start": "2106000",
    "end": "2111440"
  },
  {
    "text": "a lot more than application code and we want to highlight some key aspects a little bit later in the last demo",
    "start": "2111440",
    "end": "2118000"
  },
  {
    "text": "uh but even if we just look at the coder and it seems secure secure now we really don't know until we've done testing with",
    "start": "2118000",
    "end": "2124320"
  },
  {
    "text": "focus on security and a good place to start for that is ovap yeah so",
    "start": "2124320",
    "end": "2131200"
  },
  {
    "text": "in our experience we strongly feel that it is essential to understand the most common types of",
    "start": "2131200",
    "end": "2138240"
  },
  {
    "text": "attacks and how they work in order to create a strong layer of defense against them and luckily you do not have to",
    "start": "2138240",
    "end": "2145839"
  },
  {
    "text": "figure that out yourself wasp continuously collects information about real world attacks and it's it's",
    "start": "2145839",
    "end": "2153760"
  },
  {
    "text": "just a great source of documentation and in our experience the wasp top 10",
    "start": "2153760",
    "end": "2159920"
  },
  {
    "text": "list is a useful reference for many kinds of systems not just for web applications",
    "start": "2159920",
    "end": "2166160"
  },
  {
    "text": "and i would especially point out the asvs there it's it's a great input for",
    "start": "2166160",
    "end": "2171680"
  },
  {
    "text": "requirements and test cases with the security in mind so yeah so but um",
    "start": "2171680",
    "end": "2177839"
  },
  {
    "text": "we wanted to point out that there is an uber top 10 list specifically for apis",
    "start": "2177839",
    "end": "2184640"
  },
  {
    "text": "and we think that this is very accurate and match our own experience with penetration testing",
    "start": "2184640",
    "end": "2191599"
  },
  {
    "text": "from the perspective of security reviews we usually find vulnerabilities that match this list",
    "start": "2191599",
    "end": "2198160"
  },
  {
    "text": "so let's see how our model of the six steps uh",
    "start": "2198160",
    "end": "2203520"
  },
  {
    "text": "mitigate these things yeah yeah so uh let's go the first one is broken object",
    "start": "2203520",
    "end": "2209440"
  },
  {
    "text": "level authorization uh this is when we can reach data that is not our own i did that with when i",
    "start": "2209440",
    "end": "2216079"
  },
  {
    "text": "could reach the swedish product yeah although i was only allowed the innovation market yes that's extremely",
    "start": "2216079",
    "end": "2222800"
  },
  {
    "text": "common and it can be a very powerful attack vector so that's why it's number one yeah",
    "start": "2222800",
    "end": "2230320"
  },
  {
    "text": "separation yeah i can reach things that does not belong to me yes and uh",
    "start": "2230320",
    "end": "2236160"
  },
  {
    "text": "the secondary broken user authentication this is as you can see in two and three there",
    "start": "2236160",
    "end": "2242079"
  },
  {
    "text": "and uh we might forget to require a token or press we don't validate the expect we",
    "start": "2242079",
    "end": "2248640"
  },
  {
    "text": "we maybe disable some secure defaults from the middleware etc or write our own",
    "start": "2248640",
    "end": "2253680"
  },
  {
    "text": "custom code that does something wrong but but if you use a spin at core and",
    "start": "2253680",
    "end": "2258880"
  },
  {
    "text": "you don't do anything strange and just follow best practices you're in a very good position for for this step uh we",
    "start": "2258880",
    "end": "2265359"
  },
  {
    "text": "know of no other framework that is just this better actually and we see seen a",
    "start": "2265359",
    "end": "2270800"
  },
  {
    "text": "lot of code and different frameworks yeah so the next yeah excessive data",
    "start": "2270800",
    "end": "2277200"
  },
  {
    "text": "exposure uh that's when you return too much data i simply serialize the domain",
    "start": "2277200",
    "end": "2283119"
  },
  {
    "text": "object in my first code that i wrote and the second code i instead used a data",
    "start": "2283119",
    "end": "2288400"
  },
  {
    "text": "contract class so yeah that's it yeah",
    "start": "2288400",
    "end": "2293920"
  },
  {
    "text": "and then we have a lack of resources are rate limiting and that's of course it's a part of the step one",
    "start": "2293920",
    "end": "2300480"
  },
  {
    "text": "there usually we get that from an apa gateway in front of us yeah if you're in if you deploy to the",
    "start": "2300480",
    "end": "2307280"
  },
  {
    "text": "cloud that's typically very easy to address you might not even have to do anything at all no yeah and uh five already on",
    "start": "2307280",
    "end": "2315359"
  },
  {
    "text": "was that five yeah yep so that's a broken function level authorization uh that's when you do not properly validate",
    "start": "2315359",
    "end": "2322320"
  },
  {
    "text": "access to functions a classic example is that you forget to restrict access to",
    "start": "2322320",
    "end": "2327520"
  },
  {
    "text": "endpoints that are administrative in the nature yeah so that was the step five",
    "start": "2327520",
    "end": "2333200"
  },
  {
    "text": "there in in the model as well and then we have mass assignments and",
    "start": "2333200",
    "end": "2339200"
  },
  {
    "text": "if you use proper data contracts classes you should be able to easily avoid mass",
    "start": "2339200",
    "end": "2344800"
  },
  {
    "text": "assignment issues we almost never see this in in c sharpening speed",
    "start": "2344800",
    "end": "2351280"
  },
  {
    "text": "but uh number seven we do see uh that security misconfiguration",
    "start": "2351280",
    "end": "2356320"
  },
  {
    "text": "uh that's anything that's not properly configurated um security related for example allowing a",
    "start": "2356320",
    "end": "2363440"
  },
  {
    "text": "weak tls version something like that so uh yeah and that's a part of step one",
    "start": "2363440",
    "end": "2369839"
  },
  {
    "text": "now and then we have the classic injection and uh injection can be in in many ways",
    "start": "2369839",
    "end": "2377200"
  },
  {
    "text": "and the sequel injection is the the classical one but as we said for almost anything um",
    "start": "2377200",
    "end": "2384640"
  },
  {
    "text": "and we note that we validate both in step one and in uh",
    "start": "2384640",
    "end": "2391680"
  },
  {
    "text": "step four there that it is defense in inductor and we're validating multiple layers so you could have a web",
    "start": "2391680",
    "end": "2397440"
  },
  {
    "text": "application firewall doing basic input validation but that doesn't mean that you shouldn't do any input validation in",
    "start": "2397440",
    "end": "2402720"
  },
  {
    "text": "your api or vice versa so so that's important and",
    "start": "2402720",
    "end": "2408400"
  },
  {
    "text": "yeah so that brings us to number nine nine yeah in proper asset",
    "start": "2408400",
    "end": "2413599"
  },
  {
    "text": "management uh that's when we find unexpected and insecure things in the network uh it's a very common thing in",
    "start": "2413599",
    "end": "2421760"
  },
  {
    "text": "on-prem installations for some reason much less so for cloud deployments and",
    "start": "2421760",
    "end": "2427359"
  },
  {
    "text": "we almost never find something when you run infrastructure as code for some reason so yeah so that's a little bit",
    "start": "2427359",
    "end": "2434480"
  },
  {
    "text": "out of scope here but we will see some of it in the next demo and then we have the um",
    "start": "2434480",
    "end": "2441280"
  },
  {
    "text": "the last part here and that's insufficient logging and monitoring and",
    "start": "2441280",
    "end": "2446640"
  },
  {
    "text": "that is very important of all steps and as we said before we want to spend time on logging today",
    "start": "2446640",
    "end": "2452800"
  },
  {
    "text": "so is that it are we secure yes ah",
    "start": "2452800",
    "end": "2458319"
  },
  {
    "text": "almost as we stated earlier security is more than just application code and the two",
    "start": "2458319",
    "end": "2463920"
  },
  {
    "text": "things that we want to highlight there are secure hosting and the secret management so we will",
    "start": "2463920",
    "end": "2470079"
  },
  {
    "text": "look at that in the next demo yeah so um",
    "start": "2470079",
    "end": "2475280"
  },
  {
    "text": "so secure hosting the the first one is that you need to put something in front of your api",
    "start": "2475280",
    "end": "2481839"
  },
  {
    "text": "something that is robust and hardened this is just an example uh with nginx",
    "start": "2481839",
    "end": "2488720"
  },
  {
    "text": "because that's quite common and i want to",
    "start": "2488720",
    "end": "2494319"
  },
  {
    "text": "just note a few things uh we redirect all traffic to http",
    "start": "2494319",
    "end": "2500640"
  },
  {
    "text": "back to https and we enforce strong",
    "start": "2500640",
    "end": "2508480"
  },
  {
    "text": "crypto for the tls by restricting it to version 1.3 and then listing with this",
    "start": "2508480",
    "end": "2513599"
  },
  {
    "text": "is really simple we just say 1.3 in reality it could be harder to be a lot harder",
    "start": "2513599",
    "end": "2520720"
  },
  {
    "text": "and uh the last thing that we do is that it's quite common to add security",
    "start": "2520720",
    "end": "2525760"
  },
  {
    "text": "headers even if you do uh develop an api there are a few security headers that",
    "start": "2525760",
    "end": "2531359"
  },
  {
    "text": "you should be aware of uh just six of them um it's not hard to um",
    "start": "2531359",
    "end": "2536880"
  },
  {
    "text": "to add them and wasp has a great uh list and cheat sheet of uh why this is important and and",
    "start": "2536880",
    "end": "2544400"
  },
  {
    "text": "especially the strict transport security are because https is vital for the security for the",
    "start": "2544400",
    "end": "2550640"
  },
  {
    "text": "api so we really must do what we can to enforce strong transport layers security important uh",
    "start": "2550640",
    "end": "2558160"
  },
  {
    "text": "security mitigation techniques and they are so easy to implement so please make an effort",
    "start": "2558160",
    "end": "2564880"
  },
  {
    "text": "so let's look at the hosting yeah and that's um yeah so just as an example it's uh it's",
    "start": "2564880",
    "end": "2571920"
  },
  {
    "text": "also very very common and we just want to point out that uh do use an official",
    "start": "2571920",
    "end": "2577839"
  },
  {
    "text": "image for the run time when you deploy and also there is no need to run the",
    "start": "2577839",
    "end": "2585280"
  },
  {
    "text": "process as root even though that's part of the templates that microsoft provides",
    "start": "2585280",
    "end": "2590800"
  },
  {
    "text": "instead select a user is restricted and typically that also means that you",
    "start": "2590800",
    "end": "2597040"
  },
  {
    "text": "need to select a port because a non-root user is not allowed to open ports at 80 so",
    "start": "2597040",
    "end": "2605119"
  },
  {
    "text": "also a very easy way to mitigate and uh reduce the um",
    "start": "2605119",
    "end": "2610400"
  },
  {
    "text": "effect of someone breaking out of the asp.net core runtime yeah and especially",
    "start": "2610400",
    "end": "2616000"
  },
  {
    "text": "the user is often overlooked yeah and it's so easy to do yeah yeah so let's",
    "start": "2616000",
    "end": "2621200"
  },
  {
    "text": "look at secrets and uh how should we handle them yeah so uh configuration in general and secrets in",
    "start": "2621200",
    "end": "2628400"
  },
  {
    "text": "particular is an important part of your security in your apis",
    "start": "2628400",
    "end": "2634000"
  },
  {
    "text": "secret should be kept some in some way that's dedicated to keeping secret in",
    "start": "2634000",
    "end": "2639599"
  },
  {
    "text": "azure azure key vault is a great product i think and especially when used in in",
    "start": "2639599",
    "end": "2645760"
  },
  {
    "text": "conjunction with app configuration with a backing keyboard store it's a great resource but um",
    "start": "2645760",
    "end": "2652400"
  },
  {
    "text": "of course the best way to deal with secrets is not having them yeah yeah definitely so so if you can use support",
    "start": "2652400",
    "end": "2659200"
  },
  {
    "text": "from the platform you have like azure managed identities and so then you don't",
    "start": "2659200",
    "end": "2665440"
  },
  {
    "text": "have to deal with the problem you leave all the hard work to microsoft that's the best thing because you need to",
    "start": "2665440",
    "end": "2670560"
  },
  {
    "text": "rotate keys and that could be really really hard for a large system over time if you should do that frequently",
    "start": "2670560",
    "end": "2676880"
  },
  {
    "text": "typically there's always secret even though most of it is msi and orbit yeah yeah so you have uh we have the client",
    "start": "2676880",
    "end": "2683440"
  },
  {
    "text": "id yeah and integrations and what have you so there will always be secrets yeah and then i think that keyboard is a",
    "start": "2683440",
    "end": "2690000"
  },
  {
    "text": "great uh great solution a great product yeah that's an important step to deal with secrets",
    "start": "2690000",
    "end": "2696800"
  },
  {
    "text": "so is that it are we secure secure really",
    "start": "2696800",
    "end": "2703440"
  },
  {
    "text": "i believe so or at least we have done a reasonable effort here",
    "start": "2703440",
    "end": "2709040"
  },
  {
    "text": "i mean the things we have showed you there's nothing special we don't haven't used any special tools it's just coded",
    "start": "2709040",
    "end": "2715680"
  },
  {
    "text": "as you that i think most of us in the room here could apply this",
    "start": "2715680",
    "end": "2720800"
  },
  {
    "text": "given some resources but but now our challenge here is to",
    "start": "2720800",
    "end": "2726400"
  },
  {
    "text": "keep the system secure over time as the system is developed and the developer change and so",
    "start": "2726400",
    "end": "2733200"
  },
  {
    "text": "it is the patterns and the basic security design principles that will sort of guide us and keep us on the",
    "start": "2733200",
    "end": "2739119"
  },
  {
    "text": "right track so let's look at the one we mentioned during this talk",
    "start": "2739119",
    "end": "2745040"
  },
  {
    "text": "and um yes",
    "start": "2745119",
    "end": "2750880"
  },
  {
    "text": "so um yep we have mentioned sierra trustless privilege",
    "start": "2751200",
    "end": "2756880"
  },
  {
    "text": "and of course we have the cia trioder and we can derive the things we talked",
    "start": "2756880",
    "end": "2762319"
  },
  {
    "text": "about from a few from those basic security design principles",
    "start": "2762319",
    "end": "2767599"
  },
  {
    "text": "and we should use those principles and they will guide us there are of course more uh but these",
    "start": "2767599",
    "end": "2775040"
  },
  {
    "text": "are the ones we like to highlight and uh today and uh you can read more about this",
    "start": "2775040",
    "end": "2780560"
  },
  {
    "text": "online uh so we want to spend a few minutes on complexity instead something that we often talk too little",
    "start": "2780560",
    "end": "2787440"
  },
  {
    "text": "about when it comes to application security but actually on this conference the complexity has been mentioned in the",
    "start": "2787440",
    "end": "2793200"
  },
  {
    "text": "keynote and on uh other presentations so that's a good good sign very good sign",
    "start": "2793200",
    "end": "2798880"
  },
  {
    "text": "so uh yeah so over 20 years now uh ago now",
    "start": "2798880",
    "end": "2804800"
  },
  {
    "text": "schneier wrote this plea for simplicity um when we do reviews security reviews",
    "start": "2804800",
    "end": "2812319"
  },
  {
    "text": "we usually find more vulnerabilities in more complex systems",
    "start": "2812319",
    "end": "2817680"
  },
  {
    "text": "compared to simple systems and i think it's uh not just because of the size of the system",
    "start": "2817680",
    "end": "2823920"
  },
  {
    "text": "where more functionality obviously gives us a larger attack surface but also because it's difficult for a",
    "start": "2823920",
    "end": "2829920"
  },
  {
    "text": "team uh to keep a system secure over time that they do not fully understand",
    "start": "2829920",
    "end": "2836560"
  },
  {
    "text": "for example it can be simple things your your team might not realize that an api is public",
    "start": "2836560",
    "end": "2842559"
  },
  {
    "text": "or might not fully understand how an integration works you you cannot secure what you do not",
    "start": "2842559",
    "end": "2848480"
  },
  {
    "text": "understand and we would like to suggest that you use complexity as a guiding principle",
    "start": "2848480",
    "end": "2855839"
  },
  {
    "text": "for building and architecting your systems as your system grows and becomes solar",
    "start": "2855839",
    "end": "2862000"
  },
  {
    "text": "please make every effort to keep complexity under control we fully realize how hard this is from",
    "start": "2862000",
    "end": "2869839"
  },
  {
    "text": "our experience with penetration tests it's vital that your team share an",
    "start": "2869839",
    "end": "2874880"
  },
  {
    "text": "understanding of your system yeah that's definitely right but and easy to say but",
    "start": "2874880",
    "end": "2881599"
  },
  {
    "text": "how can we can we do that yeah so uh let's uh so a simple and effective way",
    "start": "2881599",
    "end": "2886960"
  },
  {
    "text": "is to to to get a common and shared understanding of the system is to draw a picture yeah and",
    "start": "2886960",
    "end": "2893359"
  },
  {
    "text": "there's many many ways to to do this and this is just an example so we are not sort of prescribing any",
    "start": "2893359",
    "end": "2900240"
  },
  {
    "text": "views on this matter today but this is roughly what we're looking for when we're doing security reviews we",
    "start": "2900240",
    "end": "2906720"
  },
  {
    "text": "ask a team and ask them to draw this picture and where we clearly can identify what the sensitive data is",
    "start": "2906720",
    "end": "2913440"
  },
  {
    "text": "and how sensitive it is and what's a sort of proportional level of security",
    "start": "2913440",
    "end": "2918960"
  },
  {
    "text": "for that part of the system but and also all the actors in the system who is talking to who",
    "start": "2918960",
    "end": "2925359"
  },
  {
    "text": "and the sort of basic uh it infrastructure what's public and",
    "start": "2925359",
    "end": "2931839"
  },
  {
    "text": "what's not public and like where's the idp and and the logging",
    "start": "2931839",
    "end": "2937280"
  },
  {
    "text": "service and and things like that so so it should be that's something that this team can agree on that they",
    "start": "2937280",
    "end": "2944079"
  },
  {
    "text": "understand and they can keep updated that's the important part so this is roughly what we're looking for when we",
    "start": "2944079",
    "end": "2949839"
  },
  {
    "text": "do penetration testing we ask the team to draw this picture yeah and uh",
    "start": "2949839",
    "end": "2955680"
  },
  {
    "text": "quite often we find weaknesses uh just after a few uh a half an hour discussion",
    "start": "2955680",
    "end": "2961040"
  },
  {
    "text": "about the architecture yeah that was uh",
    "start": "2961040",
    "end": "2968000"
  },
  {
    "text": "basically it um so just to summarize do build your apis with multiple",
    "start": "2968000",
    "end": "2974800"
  },
  {
    "text": "security layers and security should be opt out not opt-in",
    "start": "2974800",
    "end": "2982319"
  },
  {
    "text": "do visualize your trust boundaries and apply zero trust and least privilege principles",
    "start": "2982319",
    "end": "2988559"
  },
  {
    "text": "and uh complexity is important uh you cannot secure what you do not understand",
    "start": "2988559",
    "end": "2996839"
  },
  {
    "text": "yeah that was it so um i think yeah we have a few we have a few minutes any questions perhaps any questions",
    "start": "2996839",
    "end": "3003440"
  },
  {
    "text": "maybe we should oh oh",
    "start": "3003440",
    "end": "3008480"
  },
  {
    "text": "great thank you thank you",
    "start": "3008480",
    "end": "3013838"
  }
]