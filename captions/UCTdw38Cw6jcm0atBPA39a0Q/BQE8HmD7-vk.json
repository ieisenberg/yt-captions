[
  {
    "text": "hello ok let's get started",
    "start": "269",
    "end": "5640"
  },
  {
    "text": "my name is Tess I'm a developer and we're going to talk about debugging",
    "start": "5640",
    "end": "11420"
  },
  {
    "text": "beyond stuff I started bugging so we're going to talk about beyond stuff I started bugging in Visual Studio and",
    "start": "11420",
    "end": "16800"
  },
  {
    "text": "dotnet debugging in general so much beyond that we're not actually going to do any step-by-step debugging at all so",
    "start": "16800",
    "end": "23369"
  },
  {
    "text": "some of you might know me from my role my previous role as a support engineer where I would troubleshoot other",
    "start": "23369",
    "end": "30210"
  },
  {
    "text": "people's crashes memory leaks and performance issues essentially anything",
    "start": "30210",
    "end": "36840"
  },
  {
    "text": "that you couldn't step-by-step debug and this is sort of the agenda for today",
    "start": "36840",
    "end": "43860"
  },
  {
    "text": "we're going to take a look at what you do when you can't step-by-step debugging kind of strategies for troubleshooting",
    "start": "43860",
    "end": "50250"
  },
  {
    "text": "these kind of issues so if you can't step-by-step debug but",
    "start": "50250",
    "end": "56190"
  },
  {
    "text": "you have to resort to something else and that's something else say sometimes profiling we'll look at that but",
    "start": "56190",
    "end": "63960"
  },
  {
    "text": "sometimes it's also memory dumps how many of you have used memory dos before",
    "start": "63960",
    "end": "69150"
  },
  {
    "text": "to debug things Wow awesome crowd so we're going to talk about memory dumps",
    "start": "69150",
    "end": "75600"
  },
  {
    "text": "and those of you work with memory diamonds know that a memory dump is essentially a snapshot of a process and",
    "start": "75600",
    "end": "81750"
  },
  {
    "text": "all the memory that's through addresses there's all the kernel mode dumps that",
    "start": "81750",
    "end": "87360"
  },
  {
    "text": "are snapshots of the entire system we're not going to deal with that here because we're just looking at one particular",
    "start": "87360",
    "end": "94950"
  },
  {
    "text": "dotnet process when we're doing something but looking at a memory dump",
    "start": "94950",
    "end": "101280"
  },
  {
    "text": "is a little bit like looking at a crime scene so you take a picture and you can't move",
    "start": "101280",
    "end": "108540"
  },
  {
    "text": "forward because it's not a video you can't move backwards because it's also not a video but you can find a",
    "start": "108540",
    "end": "115229"
  },
  {
    "text": "whole lot of clues about who did the crime and that's what I'm really really",
    "start": "115229",
    "end": "121049"
  },
  {
    "text": "interested in when it comes and that's what intrigues me about debugging but it's so easy with memory terms and such",
    "start": "121049",
    "end": "127079"
  },
  {
    "text": "to actually figure out who the culprit is so let's take a look at what this looks",
    "start": "127079",
    "end": "133110"
  },
  {
    "text": "like and we're going to start off and one of my favorite tools",
    "start": "133110",
    "end": "139049"
  },
  {
    "text": "this is windbg you probably have this knee or machine even if you never",
    "start": "139049",
    "end": "144180"
  },
  {
    "text": "thought you installed it because it comes with the debugging tools for Windows it comes with a windows drivers",
    "start": "144180",
    "end": "149670"
  },
  {
    "text": "kit it comes with a Windows development kits essentially install windows",
    "start": "149670",
    "end": "155010"
  },
  {
    "text": "anything and it'll get windbg and lately I've been doing a lot of you guys and",
    "start": "155010",
    "end": "161040"
  },
  {
    "text": "and one of the things I'm usually talk about is a UI should be super understandable which yeah this is not in",
    "start": "161040",
    "end": "171090"
  },
  {
    "text": "fact I don't know if I have internet but this is kind of what it feels like to",
    "start": "171090",
    "end": "176239"
  },
  {
    "text": "just startling to you so to make it use that a little bit more",
    "start": "176239",
    "end": "182700"
  },
  {
    "text": "understandable I'm going to go ahead and copy some commands because in winter baqi we use commands so we'll get to",
    "start": "182700",
    "end": "189510"
  },
  {
    "text": "visual studio later don't worry what we just kind of need to figure out what it is we're looking at so I copied a few",
    "start": "189510",
    "end": "198120"
  },
  {
    "text": "commands into something called a scratch pad because when you're debugging window bikini you might want to write down",
    "start": "198120",
    "end": "204299"
  },
  {
    "text": "things like the evidence that you're looking at or the your Twitter handle",
    "start": "204299",
    "end": "210720"
  },
  {
    "text": "with your you're presenting something and then we have the actual memory done",
    "start": "210720",
    "end": "216599"
  },
  {
    "text": "and the memory dump that we're looking at here is the memory dump taking another crosses this is a WPS classes",
    "start": "216599",
    "end": "224489"
  },
  {
    "text": "called the precedent it had an unhandled exception with this funky number we'll",
    "start": "224489",
    "end": "231419"
  },
  {
    "text": "get battered up later and and then it doesn't tell us too much more because",
    "start": "231419",
    "end": "236760"
  },
  {
    "text": "it's expecting us to do some PowerShell e goodness and write some commands so",
    "start": "236760",
    "end": "243199"
  },
  {
    "text": "one thing you did it's really quick in Windham achieves learning really weird",
    "start": "243199",
    "end": "249150"
  },
  {
    "text": "stuff like learning really weird characters and stuff so we'll start off with a command that looks like this and",
    "start": "249150",
    "end": "258329"
  },
  {
    "text": "I'm going to see if I can do this please so up top you're going to see a",
    "start": "258329",
    "end": "265830"
  },
  {
    "text": "magnified version of we're looking at at the bottom we're back to work where else so we'll skip that can you see what's at",
    "start": "265830",
    "end": "274289"
  },
  {
    "text": "the bottom of the screen here yeah okay so our first command is going to be",
    "start": "274289",
    "end": "280410"
  },
  {
    "text": "tilde which is Klingon for threads and we're going to look at all these threads",
    "start": "280410",
    "end": "286380"
  },
  {
    "text": "and we're going to run the command case the command K is stack when you're the",
    "start": "286380",
    "end": "292560"
  },
  {
    "text": "bugger you don't like to write a lot of stuff so we're going to look at more mostly one letter commands and very",
    "start": "292560",
    "end": "301020"
  },
  {
    "text": "short commands K is back it should have been s but s was already taking per set so this is one of the 28 two men sitting",
    "start": "301020",
    "end": "308340"
  },
  {
    "text": "on one in visual studio till the start key and what you get then is a list of",
    "start": "308340",
    "end": "314849"
  },
  {
    "text": "stacks this should look fairly familiar to you if you're used to visual studio",
    "start": "314849",
    "end": "320550"
  },
  {
    "text": "because they're actually typically the type of stack that you would look at but one thing that might be a bit",
    "start": "320550",
    "end": "326910"
  },
  {
    "text": "challenging to look at is the number of threads that are actually in a very very simple WCF process that's been going on",
    "start": "326910",
    "end": "334979"
  },
  {
    "text": "please two or three seconds so which",
    "start": "334979",
    "end": "340500"
  },
  {
    "text": "ones of all these 20 22 threads are",
    "start": "340500",
    "end": "345840"
  },
  {
    "text": "important experience will tell you which ones but if you want a quick fix then",
    "start": "345840",
    "end": "352080"
  },
  {
    "text": "take a look at healthy process and compare the threads and see if this was",
    "start": "352080",
    "end": "357240"
  },
  {
    "text": "in a healthy process and this was in a sick process then maybe that's not important",
    "start": "357240",
    "end": "363030"
  },
  {
    "text": "I'll you scroll up a bit and point out a few threads so one of the more important",
    "start": "363030",
    "end": "369960"
  },
  {
    "text": "threads are is this finalizer thread so there is one a lot of supporting actors",
    "start": "369960",
    "end": "378389"
  },
  {
    "text": "and they in this whole crime scene and one of them is the finalizer thread which essentially goes in and terminates",
    "start": "378389",
    "end": "385530"
  },
  {
    "text": "everything like Arnold Schwarzenegger so what what it actually does is it calls",
    "start": "385530",
    "end": "391560"
  },
  {
    "text": "all your destructors if you have an object it has a thruster to to get rid of any native",
    "start": "391560",
    "end": "398330"
  },
  {
    "text": "items like a file handle or something then that would go on this single thread",
    "start": "398330",
    "end": "404160"
  },
  {
    "text": "which means that if you block this then you're screwed because you'll have a memory leak because nothing else can get",
    "start": "404160",
    "end": "410040"
  },
  {
    "text": "finalized anymore but this was not anything that was going on in this",
    "start": "410040",
    "end": "415980"
  },
  {
    "text": "process because we're looking at a crash and and when you take a memory dub of a",
    "start": "415980",
    "end": "422220"
  },
  {
    "text": "crash what you'll have is like one active thread and that active thread will be the one that is actually the",
    "start": "422220",
    "end": "429750"
  },
  {
    "text": "culprit in this case so that active thread will also be marked with a dot",
    "start": "429750",
    "end": "435500"
  },
  {
    "text": "again a one characters things that explains everything so threat zero is",
    "start": "435500",
    "end": "442490"
  },
  {
    "text": "the one that costs the problem it was throwing some kind of exception and then",
    "start": "442490",
    "end": "448140"
  },
  {
    "text": "underneath here there is a lot of weird stuff that we can't really decipher this",
    "start": "448140",
    "end": "453420"
  },
  {
    "text": "didn't look like any of the threads that we saw below that we could actually read out the function names and everything and this is because this is a dotnet",
    "start": "453420",
    "end": "460970"
  },
  {
    "text": "thread so this is a managed thread and a window bit key is not a managed to bugger",
    "start": "460970",
    "end": "466110"
  },
  {
    "text": "when did yeoman understands like C++ and most such things will have to have an",
    "start": "466110",
    "end": "472680"
  },
  {
    "text": "interpreter and that interpreter is called SOS so we're going to load up SOS",
    "start": "472680",
    "end": "480960"
  },
  {
    "text": "and this command what it does is it will load up SOS a dll an expansion to help",
    "start": "480960",
    "end": "487200"
  },
  {
    "text": "us translate and it loads it does from the same directory where CLR de Cielo is",
    "start": "487200",
    "end": "493290"
  },
  {
    "text": "located which if we look is going to be in the framework directory so I'm just",
    "start": "493290",
    "end": "499770"
  },
  {
    "text": "pointing this out because this means that if you have the framework for your machine you also have a Swiss and since",
    "start": "499770",
    "end": "507180"
  },
  {
    "text": "you have window key and you have SLS you're pretty much all set for this now we're going to run a few commands in NFS",
    "start": "507180",
    "end": "514979"
  },
  {
    "text": "to to give some more information and figure out which ones we're going to run bang help bang in this case is Microsoft",
    "start": "514979",
    "end": "523440"
  },
  {
    "text": "short for exclamation point because exclamation point is very long so we run that and we're going to find",
    "start": "523440",
    "end": "530460"
  },
  {
    "text": "out or what you can do with SS among other things you can do things like run",
    "start": "530460",
    "end": "536460"
  },
  {
    "text": "bang threats and this will show you and the managed threats or the darknet",
    "start": "536460",
    "end": "543480"
  },
  {
    "text": "threats in the process so it will show you a few things like the finalizar again recurring character and then the",
    "start": "543480",
    "end": "551220"
  },
  {
    "text": "fact that the first thread thread 0 here was hitting an argument out of range",
    "start": "551220",
    "end": "557250"
  },
  {
    "text": "exception so with this information and kind of know what we're looking for but",
    "start": "557250",
    "end": "563700"
  },
  {
    "text": "we would like to look at this fact just like it looks in visual studio so we're going to run another command called CLR",
    "start": "563700",
    "end": "570840"
  },
  {
    "text": "stack and that's going to give us a stack that is very very familiar to us",
    "start": "570840",
    "end": "576600"
  },
  {
    "text": "if we were no visual studios so we have some Next button onclick that calls into",
    "start": "576600",
    "end": "584550"
  },
  {
    "text": "a go to another function and that in turn goes in and throws an argument out",
    "start": "584550",
    "end": "590010"
  },
  {
    "text": "of range at this point we can just look at the code and figure out what what's",
    "start": "590010",
    "end": "595650"
  },
  {
    "text": "going on here and we're kind of done in windbg so to speak but I just want to",
    "start": "595650",
    "end": "600810"
  },
  {
    "text": "show a few more commands that we can one here one of them being dump stack",
    "start": "600810",
    "end": "606090"
  },
  {
    "text": "objects or again since the buggers are lazy DSO and this will show us pretty",
    "start": "606090",
    "end": "613800"
  },
  {
    "text": "much the same thing that you would see in Visual Studio if you were looking at the locals window so we can see our",
    "start": "613800",
    "end": "619800"
  },
  {
    "text": "argument arrange exception in fact we can see seven different times anyone",
    "start": "619800",
    "end": "625320"
  },
  {
    "text": "know why it wasn't because it was thrown seven different times it's in fact the",
    "start": "625320",
    "end": "632310"
  },
  {
    "text": "exact same system argument out of range exception they all have the same address but windbg doesn't do the fancy stuff",
    "start": "632310",
    "end": "639960"
  },
  {
    "text": "about putting like figuring out that this was already shown once before it",
    "start": "639960",
    "end": "645630"
  },
  {
    "text": "was it's showing us multiple frames and therefore it's showing up multiple times here so that's the thing so I'm going to",
    "start": "645630",
    "end": "653460"
  },
  {
    "text": "click on this and what this will do is it will dump out the argument data range",
    "start": "653460",
    "end": "658770"
  },
  {
    "text": "exception and now I can go in and do things that I would normally do a Mitchell studio like and I look at the",
    "start": "658770",
    "end": "665410"
  },
  {
    "text": "message for example find out the imbeciles out of range yada yada and that gives us just a little bit more",
    "start": "665410",
    "end": "672550"
  },
  {
    "text": "information about what's going on so that is all stuff that you could do the",
    "start": "672550",
    "end": "677980"
  },
  {
    "text": "individual studio and that's kind of not all that exciting what is very exciting",
    "start": "677980",
    "end": "686889"
  },
  {
    "text": "though is that something you probably haven't done a visual studio is looked",
    "start": "686889",
    "end": "692079"
  },
  {
    "text": "at all the objects that your processes and that your process can access or that",
    "start": "692079",
    "end": "698470"
  },
  {
    "text": "you process s created so I'm going to run a command called a heap",
    "start": "698470",
    "end": "704620"
  },
  {
    "text": "- GC and we don't act like so if you if",
    "start": "704620",
    "end": "710440"
  },
  {
    "text": "you want to C++ app then what you do is you do a new and you get some random",
    "start": "710440",
    "end": "716139"
  },
  {
    "text": "piece of memory from the operating system and then you do another new and you get another random piece of memory",
    "start": "716139",
    "end": "721329"
  },
  {
    "text": "from the operating system but there's no central location where you can actually",
    "start": "721329",
    "end": "727240"
  },
  {
    "text": "find that all of these pieces of memory so you have to keep track of them and you have to delete them and you know all",
    "start": "727240",
    "end": "733959"
  },
  {
    "text": "that stuff and that's why we do why we use stuff net because does not have memory management as a service through",
    "start": "733959",
    "end": "741100"
  },
  {
    "text": "the garbage collector so the garbage collector keeps track of everything that you allocate and it keeps track of it in",
    "start": "741100",
    "end": "748149"
  },
  {
    "text": "segments in this case we can even know that we have allocated this much like 70",
    "start": "748149",
    "end": "756250"
  },
  {
    "text": "what what is it seven Meg's of dotnet objects and if we look at these heaps",
    "start": "756250",
    "end": "763529"
  },
  {
    "text": "now we're getting kind of deep into the internals of dotnet but it's kind of important to figure out how we can",
    "start": "763529",
    "end": "769540"
  },
  {
    "text": "actually get here so don't peep and I'm going to step out one of these segments",
    "start": "769540",
    "end": "777540"
  },
  {
    "text": "that is an extraordinarily bad segment to dump out why okay if you don't write from one",
    "start": "777540",
    "end": "783970"
  },
  {
    "text": "location to the same location that will kind of I'll show you which so dumpy sad to hear",
    "start": "783970",
    "end": "792990"
  },
  {
    "text": "and what we see here is how memory is laid out in dotnet so I think this is",
    "start": "792990",
    "end": "799990"
  },
  {
    "text": "extremely interesting because the fact that dotnet lays out our bits one after",
    "start": "799990",
    "end": "806949"
  },
  {
    "text": "another means that we can enumerate all the objects in the heap so we can take a",
    "start": "806949",
    "end": "811990"
  },
  {
    "text": "look and find out every single object that you have ever allocated well that",
    "start": "811990",
    "end": "817930"
  },
  {
    "text": "is still not garbage collected we're going to take a look at it we're going to take a look at the data and everything like that and the magic",
    "start": "817930",
    "end": "825040"
  },
  {
    "text": "happens not only in that it's laid out one after another but it happens because",
    "start": "825040",
    "end": "830079"
  },
  {
    "text": "if we go up and look at this argument at a range exception dotnet objects have",
    "start": "830079",
    "end": "836279"
  },
  {
    "text": "are sort of like self explained they have a method table that tells you what",
    "start": "836279",
    "end": "842889"
  },
  {
    "text": "methods they have they have an e class that's kind of like the blueprint that says you know at offset singing I'm",
    "start": "842889",
    "end": "850300"
  },
  {
    "text": "going to have an exception method string and adopted one C I'm going to have the help URL and so on and so forth so it",
    "start": "850300",
    "end": "856959"
  },
  {
    "text": "tells you how the object looks and it also tells you how much memory it uses",
    "start": "856959",
    "end": "863370"
  },
  {
    "text": "so what this means now is that we can go in and do this we can go in and say dumpy fat and we can find every single",
    "start": "863370",
    "end": "873010"
  },
  {
    "text": "object in the heap this is a little bit scaring sometimes if you're storing my",
    "start": "873010",
    "end": "879300"
  },
  {
    "text": "passwords or stuff and clear text and some variables because if I create a dub",
    "start": "879300",
    "end": "884529"
  },
  {
    "text": "of your process and I look at all the thread or I look at all the the strings let me go ahead and do that I'm going to",
    "start": "884529",
    "end": "890680"
  },
  {
    "text": "go ahead and do dump heap - type system",
    "start": "890680",
    "end": "896980"
  },
  {
    "text": "dot string and I'm going to say give me the ones over 500 by vechs a decimal and",
    "start": "896980",
    "end": "904709"
  },
  {
    "text": "it's going to pop out like all the strings that match that criteria and I",
    "start": "904709",
    "end": "910540"
  },
  {
    "text": "can go in then and look at them and see oh this was what's in that string maybe",
    "start": "910540",
    "end": "917170"
  },
  {
    "text": "that was your password so just be aware of that because the",
    "start": "917170",
    "end": "924130"
  },
  {
    "text": "fact that I took it memory dump of this process doesn't necessarily mean that I have to own this process and own all the",
    "start": "924130",
    "end": "929920"
  },
  {
    "text": "code for it and anything I can do this in any process I can also do some other",
    "start": "929920",
    "end": "936730"
  },
  {
    "text": "things in here I can figure out why this object is still around so I'm going to",
    "start": "936730",
    "end": "943780"
  },
  {
    "text": "do GC root which we'll go through and figure out how come this object is not",
    "start": "943780",
    "end": "950650"
  },
  {
    "text": "garbage collected well it wasn't garbage collected because this string is a member of variable and",
    "start": "950650",
    "end": "956410"
  },
  {
    "text": "some section XML inflow this member variable and some section input and yada",
    "start": "956410",
    "end": "961540"
  },
  {
    "text": "yada yada all the way up to some client configuration section some battles",
    "start": "961540",
    "end": "966790"
  },
  {
    "text": "pinned and therefore it will not be garbage collected because if you tell it the dialect I don't want this garbage",
    "start": "966790",
    "end": "973210"
  },
  {
    "text": "collected it won't be garbage collected and finally while we're here in the memory down let's go ahead and run a",
    "start": "973210",
    "end": "979480"
  },
  {
    "text": "command called LM which means list modules now we're getting up to two character Hemmings and this will list",
    "start": "979480",
    "end": "987970"
  },
  {
    "text": "all the DLLs and all the x's well the one you see in your process so you can",
    "start": "987970",
    "end": "993610"
  },
  {
    "text": "go ahead and dump out things like the version of this if you took the memory dials maybe a process that was crashing",
    "start": "993610",
    "end": "1000630"
  },
  {
    "text": "at a customer's machine you want to figure out do they have the hostage do they not this is the place to do that",
    "start": "1000630",
    "end": "1006810"
  },
  {
    "text": "and this is also your place to go ahead and dump out the code for for this and",
    "start": "1006810",
    "end": "1012540"
  },
  {
    "text": "do some aisle spy on it so that is the",
    "start": "1012540",
    "end": "1017910"
  },
  {
    "text": "magic of dumps you can get to anything that's in the process and because stuff that works as it is you can enumerate",
    "start": "1017910",
    "end": "1023970"
  },
  {
    "text": "every single object in the classes so let's go back and have a look at where",
    "start": "1023970",
    "end": "1030870"
  },
  {
    "text": "we are so we can see the threads called stack stack objects modules dotnet heap",
    "start": "1030870",
    "end": "1037938"
  },
  {
    "text": "and that's all cool but when you when you create or sorry when you",
    "start": "1037939",
    "end": "1043890"
  },
  {
    "text": "troubleshoot a memory issue or craft or something like that it's important to get the memory dump after why time",
    "start": "1043890",
    "end": "1050720"
  },
  {
    "text": "so we'll take us a few minutes to look at how you collect a memory Dom so there",
    "start": "1050720",
    "end": "1056960"
  },
  {
    "text": "are a couple of tools to do this and the one the simplest one I would say is just right-click in the task manager",
    "start": "1056960",
    "end": "1064639"
  },
  {
    "text": "and choose create some awesome if you want to take a memory job of a process",
    "start": "1064639",
    "end": "1070639"
  },
  {
    "text": "that's running now and you want it in the state that it is right now if you're looking at a hang or if you're looking",
    "start": "1070639",
    "end": "1077179"
  },
  {
    "text": "at a memory leak that's awesome one caveat to do is it has to be a 64-bit",
    "start": "1077179",
    "end": "1082399"
  },
  {
    "text": "process because it's going to take a 64-bit memory dump and it's awfully hard to troubleshoot a 64-bit dump of a",
    "start": "1082399",
    "end": "1089870"
  },
  {
    "text": "32-bit process if you want to get a memory dump of a certain situation like",
    "start": "1089870",
    "end": "1097490"
  },
  {
    "text": "for example a crash you have to go a little bit more specialized and you can download something like custom proc down",
    "start": "1097490",
    "end": "1105559"
  },
  {
    "text": "is a tool that comes with this internals and the cool thing about it is that you",
    "start": "1105559",
    "end": "1111379"
  },
  {
    "text": "can download it on one machine and then you can copy it over to another machine and use it so you don't have to install",
    "start": "1111379",
    "end": "1118159"
  },
  {
    "text": "it in a different machine which is often an issue for example on the server or",
    "start": "1118159",
    "end": "1123620"
  },
  {
    "text": "whatever and the other thing that's cool about it is that you can write a few",
    "start": "1123620",
    "end": "1128690"
  },
  {
    "text": "command line parameters and you can say for example you take a memory dump when",
    "start": "1128690",
    "end": "1135799"
  },
  {
    "text": "it's crashing that's - E or - C for a CPU has been over a certain amount for a",
    "start": "1135799",
    "end": "1143480"
  },
  {
    "text": "certain number in a certain time or - H for if a window has been hanging more",
    "start": "1143480",
    "end": "1149419"
  },
  {
    "text": "than five seconds and sometimes you want to go even a little bit deeper then you",
    "start": "1149419",
    "end": "1157580"
  },
  {
    "text": "can use a tool like debug diox the debug guide you just downloaded from will search for debug ID and what it has it",
    "start": "1157580",
    "end": "1164899"
  },
  {
    "text": "has rules that you can set up for all iose processes for example and for",
    "start": "1164899",
    "end": "1171379"
  },
  {
    "text": "specific situations like I want to get a memory dump every time I get a file not",
    "start": "1171379",
    "end": "1176779"
  },
  {
    "text": "found exception you can do that even though it's not kind of crashing the process you can get a memory dump of it",
    "start": "1176779",
    "end": "1184300"
  },
  {
    "text": "and then you would go in and analyze them and we've seen windbg so you can of",
    "start": "1184300",
    "end": "1190430"
  },
  {
    "text": "course do it there and you can use debug diag to analyze the memory dumps as well",
    "start": "1190430",
    "end": "1197710"
  },
  {
    "text": "so if you do that what you will get more than windbg is debug diag is a tool that",
    "start": "1197710",
    "end": "1204260"
  },
  {
    "text": "will run scripts for you so when I worked in support and one of the reasons",
    "start": "1204260",
    "end": "1210410"
  },
  {
    "text": "I left support was because I felt like I had the bug that in any issue there was like there all looked pretty much the",
    "start": "1210410",
    "end": "1217040"
  },
  {
    "text": "same and they all went through the same steps of looking at the stack looking at",
    "start": "1217040",
    "end": "1222410"
  },
  {
    "text": "the exceptions yada yada yada so we try to automate this and put this in a tool",
    "start": "1222410",
    "end": "1228410"
  },
  {
    "text": "so that you didn't have to remember like the Klingon word for threats and what",
    "start": "1228410",
    "end": "1233960"
  },
  {
    "text": "you do then is you run it through this through this tool it will run all the commands and it will create a report for",
    "start": "1233960",
    "end": "1240260"
  },
  {
    "text": "you that nicely tells you exactly what's going on in 80% of the cases and then in",
    "start": "1240260",
    "end": "1246350"
  },
  {
    "text": "the other ones you will have to use windbg or something else and you can",
    "start": "1246350",
    "end": "1253340"
  },
  {
    "text": "also use Visual Studio and so we'll have a look at that because it's super super we need to debug memory dumps in Visual",
    "start": "1253340",
    "end": "1259760"
  },
  {
    "text": "Studio actually but we'll start off and we're going to look at crashes",
    "start": "1259760",
    "end": "1266180"
  },
  {
    "text": "performance issues in memory what sorry",
    "start": "1266180",
    "end": "1273370"
  },
  {
    "text": "we're going to look at crashes performance issues and memory leaks so",
    "start": "1275059",
    "end": "1280110"
  },
  {
    "text": "we'll start off with crashes and a crash typically manifests itself like this my",
    "start": "1280110",
    "end": "1288000"
  },
  {
    "text": "mom calling him just that internet singing it's not working anymore I'm",
    "start": "1288000",
    "end": "1293520"
  },
  {
    "text": "gonna like okay it's good mom what did you do I didn't do anything okay so she",
    "start": "1293520",
    "end": "1302340"
  },
  {
    "text": "did not do anything then who did there are a couple of things that can cause",
    "start": "1302340",
    "end": "1308039"
  },
  {
    "text": "a.net crash and we've already seen one which is an unhandled exceptions the",
    "start": "1308039",
    "end": "1315270"
  },
  {
    "text": "exceptions go from first chance where you still have a chance to handle them to second chance where you're screwed",
    "start": "1315270",
    "end": "1321419"
  },
  {
    "text": "and that's what we what we ended up with here so that's one thing but then there",
    "start": "1321419",
    "end": "1327720"
  },
  {
    "text": "are some special exceptions that will only good first chance so stack overflows out of memory",
    "start": "1327720",
    "end": "1334169"
  },
  {
    "text": "exceptions and execution engine exceptions they will only good first chance because once you have a stack",
    "start": "1334169",
    "end": "1340740"
  },
  {
    "text": "overflow exception how do you handle it by putting an exception handler a little",
    "start": "1340740",
    "end": "1347100"
  },
  {
    "text": "bit further up on that stack but you're already overflowed not possible so that's why that won't work as a memory",
    "start": "1347100",
    "end": "1354390"
  },
  {
    "text": "exception the same thing in the exact same thing and the execution engine exception is usually a bug and dotnet",
    "start": "1354390",
    "end": "1362340"
  },
  {
    "text": "framework somewhere so in that case the garbage collector is is messed up and",
    "start": "1362340",
    "end": "1368429"
  },
  {
    "text": "you can't do anything and then you'll also often see if you grab a memory dump",
    "start": "1368429",
    "end": "1375539"
  },
  {
    "text": "when the pasta succeeds but in mine maybe not have been a class necessarily",
    "start": "1375539",
    "end": "1380909"
  },
  {
    "text": "it could also be someone is killing or recycling the process so that's the further common one too and when you",
    "start": "1380909",
    "end": "1388890"
  },
  {
    "text": "troubleshoot these issues is go through a couple of simple steps so the first",
    "start": "1388890",
    "end": "1394529"
  },
  {
    "text": "one is always check the event viewer it will give you a lot of juicy information",
    "start": "1394529",
    "end": "1400190"
  },
  {
    "text": "and then capture a dump when the process is crashing so reproduce the issue",
    "start": "1400190",
    "end": "1405899"
  },
  {
    "text": "somehow and setup Proctor we're setup debug die to capture the dumpling is crashing and",
    "start": "1405899",
    "end": "1412050"
  },
  {
    "text": "then look at the one thread well you can look at all of them if you want to but you only have to look basically at the",
    "start": "1412050",
    "end": "1418470"
  },
  {
    "text": "one thread that's triggering the dump because that's going to be the one this question so we saw that already and when",
    "start": "1418470",
    "end": "1425160"
  },
  {
    "text": "we looked at winter the key but we'll go ahead and try one out so I have this",
    "start": "1425160",
    "end": "1434040"
  },
  {
    "text": "precedents out we've seen that before and what's going to happen here is that",
    "start": "1434040",
    "end": "1441110"
  },
  {
    "text": "please go to mr. Clinton and then I click Next Next okay yeah we all kind of",
    "start": "1441110",
    "end": "1452190"
  },
  {
    "text": "knew that what happens so what happened there",
    "start": "1452190",
    "end": "1458630"
  },
  {
    "text": "let's go and debug that for a second so I'm going to go ahead and do cross dump",
    "start": "1458630",
    "end": "1464960"
  },
  {
    "text": "- MA this is mini dump with all options it's actually a fool done but what it'll",
    "start": "1464960",
    "end": "1472530"
  },
  {
    "text": "cost a mini dump with all options so and then we say one debug the press who then",
    "start": "1472530",
    "end": "1480060"
  },
  {
    "text": "start exe and we want to say - e because",
    "start": "1480060",
    "end": "1485070"
  },
  {
    "text": "we're going to wait for an exception to happen and now I have to start this process to have something to attach to",
    "start": "1485070",
    "end": "1490920"
  },
  {
    "text": "because this is going to attach it's going to not attach as much as for",
    "start": "1490920",
    "end": "1497130"
  },
  {
    "text": "example Visual Studio is going to be low level attaching but it's now going to sit there and monitor and whenever it",
    "start": "1497130",
    "end": "1503550"
  },
  {
    "text": "made X plates is going to crash and it's going to create a memory dump so let's do that again okay that was pretty quick",
    "start": "1503550",
    "end": "1512960"
  },
  {
    "text": "so now well I've done this a couple of times practicing and we get a memory",
    "start": "1512960",
    "end": "1521880"
  },
  {
    "text": "dump from this so we already saw troubleshoot this in a window between so",
    "start": "1521880",
    "end": "1527820"
  },
  {
    "text": "I thought I'll now go in and do the same thing but in debug diox",
    "start": "1527820",
    "end": "1532860"
  },
  {
    "text": "so in debug diag what you do is you choose one of the rules and we know it",
    "start": "1532860",
    "end": "1538080"
  },
  {
    "text": "crashed so we're going to use a rule it's called a crash hang analysis I apologize if you can't see this because",
    "start": "1538080",
    "end": "1544650"
  },
  {
    "text": "it's too small but it says crash hang analysis there and then I'm going to go",
    "start": "1544650",
    "end": "1549750"
  },
  {
    "text": "in and I'm going to pick the memory dump why can you pick this one they're all",
    "start": "1549750",
    "end": "1556020"
  },
  {
    "text": "the same and and I'm going to start the analysis so now it's going through the",
    "start": "1556020",
    "end": "1562860"
  },
  {
    "text": "exact same steps looking at like old stocks looking at previous exceptions",
    "start": "1562860",
    "end": "1567990"
  },
  {
    "text": "yada yada what what was going on on the thread that's cost the issue and it",
    "start": "1567990",
    "end": "1575760"
  },
  {
    "text": "gives us this report that says on thread 0 there was a CLR exception it was a",
    "start": "1575760",
    "end": "1582660"
  },
  {
    "text": "system an argument at a range exception and this was the issue and if I go in",
    "start": "1582660",
    "end": "1588390"
  },
  {
    "text": "and look it will also give me the proper stack for what went on in fact if I go",
    "start": "1588390",
    "end": "1596430"
  },
  {
    "text": "through this report it will also give me some other things like I don't know the",
    "start": "1596430",
    "end": "1604890"
  },
  {
    "text": "more about the exception is going to give it previous exception information not less stuff but at this point would",
    "start": "1604890",
    "end": "1611310"
  },
  {
    "text": "pretty much know what's going on is from clicking on that one crash hang analysis isn't that fantastic",
    "start": "1611310",
    "end": "1617430"
  },
  {
    "text": "a little bit right I did this so that is",
    "start": "1617430",
    "end": "1625350"
  },
  {
    "text": "if you don't want to get into to visual studio or sorry if you don't want to get",
    "start": "1625350",
    "end": "1630570"
  },
  {
    "text": "into window booty but there is actually one more step we can take and that's using visual studio and it's the bugging",
    "start": "1630570",
    "end": "1638070"
  },
  {
    "text": "features so I'm going to go ahead and do file open file and I'm going to pick",
    "start": "1638070",
    "end": "1646560"
  },
  {
    "text": "that same memory dump and it now gives me the option to do a few things so let",
    "start": "1646560",
    "end": "1653670"
  },
  {
    "text": "me see if I can actually get that magnifier working okay so you see where",
    "start": "1653670",
    "end": "1659580"
  },
  {
    "text": "I'm pointing right so now it tells us that like we knew that this was this",
    "start": "1659580",
    "end": "1665640"
  },
  {
    "text": "weird exception by the way if you're really into ASCII tables you could",
    "start": "1665640",
    "end": "1671850"
  },
  {
    "text": "decipher this and 4343 5-2 stands for CCR that's comm",
    "start": "1671850",
    "end": "1678120"
  },
  {
    "text": "called the rapper and that's the dotnet exception from four oh and forward into",
    "start": "1678120",
    "end": "1684029"
  },
  {
    "text": "oh it was the ask characters for calm so well everyone was saying we're going to",
    "start": "1684029",
    "end": "1691289"
  },
  {
    "text": "get rid of calm and do this new thing called dotnet there are some infiltrators but we're still kind of",
    "start": "1691289",
    "end": "1698909"
  },
  {
    "text": "like in common these the product teams at least the ones that came up with the exception numbers we're going to go",
    "start": "1698909",
    "end": "1705539"
  },
  {
    "text": "ahead and do debug we'd managed only we have a few options debug would make",
    "start": "1705539",
    "end": "1710610"
  },
  {
    "text": "specifically we'll also want to go in and look at native stuff and it's been",
    "start": "1710610",
    "end": "1717600"
  },
  {
    "text": "I'm going to go in and probably shoot to dumb and show us what cost the exception",
    "start": "1717600",
    "end": "1722690"
  },
  {
    "text": "and put it as the actual line of code that cost the exceptions that is awesome",
    "start": "1722690",
    "end": "1729600"
  },
  {
    "text": "that stuff that you get though if you have coal if you have the code on your",
    "start": "1729600",
    "end": "1735419"
  },
  {
    "text": "machine and you know you ran a debug version isn't and stuff like that you",
    "start": "1735419",
    "end": "1741720"
  },
  {
    "text": "would still get things like the call stack and things in Visual Studio and you would be in a familiar environment",
    "start": "1741720",
    "end": "1748100"
  },
  {
    "text": "but the code will take you exactly to the source so don't dismiss jump",
    "start": "1748100",
    "end": "1755279"
  },
  {
    "text": "debugging and Visual Studio or a theory on window Vicki okay that was crashes",
    "start": "1755279",
    "end": "1764840"
  },
  {
    "text": "and oh yeah we we should look at the Event Viewer because I say always check",
    "start": "1764840",
    "end": "1771750"
  },
  {
    "text": "the Event Viewer and let's have a look at what that looks like",
    "start": "1771750",
    "end": "1777980"
  },
  {
    "text": "so windows logs applications and this",
    "start": "1781510",
    "end": "1788720"
  },
  {
    "text": "was the exception and I'm going to put it up so grow up so if we would have",
    "start": "1788720",
    "end": "1798500"
  },
  {
    "text": "bothered looking at the Event Viewer who wouldn't be here at all because we didn't have to debug it all because we",
    "start": "1798500",
    "end": "1805100"
  },
  {
    "text": "had the call stack we had the exception everything but that's no fun so let's not look at the Event Viewer and capture",
    "start": "1805100",
    "end": "1813290"
  },
  {
    "text": "a dump on the clash and look at the folding stock and all that stuff okay so now we know everything we need to know",
    "start": "1813290",
    "end": "1820160"
  },
  {
    "text": "about crashes let's move on to performance issues performance issues",
    "start": "1820160",
    "end": "1827950"
  },
  {
    "text": "come in a couple of different forms like the app is not responding requests take",
    "start": "1827950",
    "end": "1833870"
  },
  {
    "text": "too long by the way if a request takes too long make sure you understand how long it",
    "start": "1833870",
    "end": "1840800"
  },
  {
    "text": "should take because otherwise you might end up is optimize saying forever and",
    "start": "1840800",
    "end": "1848830"
  },
  {
    "text": "then they might also come in the form of the CPU going haywire and again who did",
    "start": "1848830",
    "end": "1857660"
  },
  {
    "text": "it well they're two different types of of hangs or performance issues there's",
    "start": "1857660",
    "end": "1864110"
  },
  {
    "text": "the low CPU and there's a high CPU the low CPU is pretty evident we're not",
    "start": "1864110",
    "end": "1870800"
  },
  {
    "text": "doing anything we're being a siliceous the debuggers that are going to debug this problem so Greece waiting for",
    "start": "1870800",
    "end": "1876500"
  },
  {
    "text": "someone else to do something we're waiting on a deadlock and high CPU issues we'll look at busy threads doing",
    "start": "1876500",
    "end": "1885410"
  },
  {
    "text": "a lot of computations or stuff like that or more commonly doing a lot of garbage",
    "start": "1885410",
    "end": "1890720"
  },
  {
    "text": "collection and one way that you can get yourself into a high CPU and garbage",
    "start": "1890720",
    "end": "1896420"
  },
  {
    "text": "collection situation is by creating a lot of large objects because the garbage",
    "start": "1896420",
    "end": "1902240"
  },
  {
    "text": "collector will do full garbage collection every time and you allocate a large object and one way to allocate a",
    "start": "1902240",
    "end": "1910429"
  },
  {
    "text": "lot of large objects this is like tips and tricks if you want to have Foreman's issues its to go ahead and",
    "start": "1910429",
    "end": "1917930"
  },
  {
    "text": "concatenate strings in a loop because strings are immutable so if you just add",
    "start": "1917930",
    "end": "1923870"
  },
  {
    "text": "one character to a string allowed to create totally new strings and if you",
    "start": "1923870",
    "end": "1929600"
  },
  {
    "text": "look back to what we looked at that is pretty evident because everything was fact right after another right",
    "start": "1929600",
    "end": "1936020"
  },
  {
    "text": "we saw the addresses there was used like a tiny little bit of free space in between them we couldn't necessarily",
    "start": "1936020",
    "end": "1941960"
  },
  {
    "text": "expand the strings like ad infinitum so yeah don't don't come Cadenet strings in",
    "start": "1941960",
    "end": "1948860"
  },
  {
    "text": "the loop and when you troubleshoot it you're going to go through three steps",
    "start": "1948860",
    "end": "1954440"
  },
  {
    "text": "again so it's going to be like the three miracle steps to troubleshoot anything so determine if it's a high or a low CPU",
    "start": "1954440",
    "end": "1962210"
  },
  {
    "text": "issue more for yourself because then you'll know what you're looking for and then capture one or more dumps it might",
    "start": "1962210",
    "end": "1970430"
  },
  {
    "text": "be good to capture a couple of dumps to see sort of like did this thread",
    "start": "1970430",
    "end": "1975860"
  },
  {
    "text": "progress at all am I still waiting for the exact same thing that I was waiting for is the moment ago or did I go to",
    "start": "1975860",
    "end": "1984080"
  },
  {
    "text": "something new and then in this case look at all the facts because we don't",
    "start": "1984080",
    "end": "1989600"
  },
  {
    "text": "necessarily have a single culprit but cause an exception the trigger to dump we're going to use take a snapshot like",
    "start": "1989600",
    "end": "1996290"
  },
  {
    "text": "a picture that wasn't necessarily triggered so and by the way if you can",
    "start": "1996290",
    "end": "2002970"
  },
  {
    "text": "go ahead and performance profile well",
    "start": "2002970",
    "end": "2009100"
  },
  {
    "text": "let's have a look at how this looks okay let's get rid of him [Music]",
    "start": "2009100",
    "end": "2017669"
  },
  {
    "text": "and also my TweetDeck we're going to look at this HP night NBC application it",
    "start": "2017799",
    "end": "2026330"
  },
  {
    "text": "doesn't necessarily matter what it is but in this case we have an issue",
    "start": "2026330",
    "end": "2031549"
  },
  {
    "text": "whatever situation the word we have a page that is taking a little bit too long at times so what I'm going to do is",
    "start": "2031549",
    "end": "2039950"
  },
  {
    "text": "I'm going to go ahead and use a tool called nestling nothing is you something",
    "start": "2039950",
    "end": "2045380"
  },
  {
    "text": "I found on github that will send a random of not random they're going to",
    "start": "2045380",
    "end": "2051770"
  },
  {
    "text": "send requests to the server one after another essentially so I'm going to go",
    "start": "2051770",
    "end": "2057980"
  },
  {
    "text": "ahead and stress this using neckline by saying go ahead and pull up that page",
    "start": "2057980",
    "end": "2066128"
  },
  {
    "text": "use eight threads and that and do that for 10 seconds and we're going to see",
    "start": "2066129",
    "end": "2073368"
  },
  {
    "text": "what happens so I'll go ahead and remove the Event Viewer",
    "start": "2073369",
    "end": "2079898"
  },
  {
    "text": "it does not want to die so I'm going to look at task manager instead and go okay",
    "start": "2079899",
    "end": "2091388"
  },
  {
    "text": "so we are going to want to look at W 3 w P which is the IAS process and we're",
    "start": "2091389",
    "end": "2099200"
  },
  {
    "text": "going to specifically want to look at this column because this column is going to tell us how much CPU we're using and",
    "start": "2099200",
    "end": "2105730"
  },
  {
    "text": "let's run this and we'll look and if",
    "start": "2105730",
    "end": "2110869"
  },
  {
    "text": "this a high CPU or a low CPU hang kind of low CP so let's go ahead and do that",
    "start": "2110869",
    "end": "2120260"
  },
  {
    "text": "least one more time and this time we're going to actually get a memory dump up",
    "start": "2120260",
    "end": "2125390"
  },
  {
    "text": "the process so we're going to do create dump file and wait and there was the",
    "start": "2125390",
    "end": "2130670"
  },
  {
    "text": "memory dumb ok so now we're getting",
    "start": "2130670",
    "end": "2135710"
  },
  {
    "text": "ready to debug this and",
    "start": "2135710",
    "end": "2140710"
  },
  {
    "text": "I already prepared because I'm a good - so we have a memory done both taken at",
    "start": "2141450",
    "end": "2147900"
  },
  {
    "text": "the same exact same place here so what we wanted to do was we wanted to look at all these all the facts so we're going",
    "start": "2147900",
    "end": "2154980"
  },
  {
    "text": "to run til the star II is execute if you have an extension and bang see at our",
    "start": "2154980",
    "end": "2162059"
  },
  {
    "text": "stack which was dumped out all they managed threads and then we're going to",
    "start": "2162059",
    "end": "2167640"
  },
  {
    "text": "use our matrix size to kind of look okay so what is happening here or we could",
    "start": "2167640",
    "end": "2174839"
  },
  {
    "text": "you slow down and see that this thread for example is going to products then",
    "start": "2174839",
    "end": "2181140"
  },
  {
    "text": "calling in to get all products ISM data service and then sitting in a wait and",
    "start": "2181140",
    "end": "2187859"
  },
  {
    "text": "if we scroll past this by the way if you're debugging a lot you actually get good as looking at things while they're",
    "start": "2187859",
    "end": "2194880"
  },
  {
    "text": "scrolling really fast because you also did I mention lacy like you don't",
    "start": "2194880",
    "end": "2200160"
  },
  {
    "text": "actually want to go through and look at all these threads so all of them actually happen to sit in the exact same",
    "start": "2200160",
    "end": "2206849"
  },
  {
    "text": "locations and then we would go in and look at the code and what was going on well someone did something stupid",
    "start": "2206849",
    "end": "2213059"
  },
  {
    "text": "probably trying to get this thing to hang but it's now time to look at the",
    "start": "2213059",
    "end": "2221309"
  },
  {
    "text": "code so other ways we could do this is now go in for example would be bug dog",
    "start": "2221309",
    "end": "2226500"
  },
  {
    "text": "and choose again a crash hang analysis because this time is to hang remove the",
    "start": "2226500",
    "end": "2234059"
  },
  {
    "text": "old data file and choose this one instead and start the analysis and this",
    "start": "2234059",
    "end": "2243180"
  },
  {
    "text": "is now going to go through and do some like it's going to look at all the stacks and look for common issues that",
    "start": "2243180",
    "end": "2249299"
  },
  {
    "text": "it's things could be causing performance issues like excessive weights for like",
    "start": "2249299",
    "end": "2254670"
  },
  {
    "text": "excessive waste for example and it's",
    "start": "2254670",
    "end": "2260910"
  },
  {
    "text": "going to say okay so you have eight threads waiting in a monitor weight and",
    "start": "2260910",
    "end": "2267359"
  },
  {
    "text": "this is kind of useful because it was eight threads and I could have locked looked through them and I could have",
    "start": "2267359",
    "end": "2273059"
  },
  {
    "text": "examined them and seeing that it was thing but this thing will do that for me and again I mentioned Lacey yes so this",
    "start": "2273059",
    "end": "2283070"
  },
  {
    "text": "will help me out kind of figuring that out without having to do the work and I'll go in and I look at this and it's",
    "start": "2283070",
    "end": "2290870"
  },
  {
    "text": "going to tell me first off that all of these are the same like it groups them",
    "start": "2290870",
    "end": "2295940"
  },
  {
    "text": "together as being the same and then it also shows me that this was the stack on",
    "start": "2295940",
    "end": "2302270"
  },
  {
    "text": "that thread so again we're back to looking at the proper code let's go",
    "start": "2302270",
    "end": "2310310"
  },
  {
    "text": "ahead and use for fun also do this in the visual studio so I'll close the old",
    "start": "2310310",
    "end": "2316520"
  },
  {
    "text": "memory dump and I'm going to go ahead and and open up see open up file in this",
    "start": "2316520",
    "end": "2324770"
  },
  {
    "text": "case I'll actually pick the one that we just captured and I'll debug would",
    "start": "2324770",
    "end": "2330470"
  },
  {
    "text": "managed only again but something went wrong what went wrong it takers and now",
    "start": "2330470",
    "end": "2342890"
  },
  {
    "text": "could have been a serger too big process but this is actually a 64-bit process",
    "start": "2342890",
    "end": "2348140"
  },
  {
    "text": "because it was I asked but what what this is going to show me is the active",
    "start": "2348140",
    "end": "2354350"
  },
  {
    "text": "thread and we don't have an active threat here because we captured the dump",
    "start": "2354350",
    "end": "2360020"
  },
  {
    "text": "like a snapshot so we're going to have to use another feature in the visual",
    "start": "2360020",
    "end": "2367520"
  },
  {
    "text": "studio that's called debug windows parallel stacks if you guys seen this some okay",
    "start": "2367520",
    "end": "2376370"
  },
  {
    "text": "this is something that you can use while you step-by-step debug and this will",
    "start": "2376370",
    "end": "2382190"
  },
  {
    "text": "kind of give you that 10-foot view of all your threads and not use the one thread that you're normally on and what",
    "start": "2382190",
    "end": "2390560"
  },
  {
    "text": "this does is it kind of groups them together in this case we actually only have eight threads doing the exact same",
    "start": "2390560",
    "end": "2396860"
  },
  {
    "text": "thing because we're running eight concurrent threads bang this product",
    "start": "2396860",
    "end": "2403310"
  },
  {
    "text": "controller but the funny thing here is that if we have the code we can actually go in and",
    "start": "2403310",
    "end": "2409700"
  },
  {
    "text": "click on it and get to the proper location again right for me is Lisa's",
    "start": "2409700",
    "end": "2419200"
  },
  {
    "text": "Jesus so performance issues let's see it",
    "start": "2419200",
    "end": "2428599"
  },
  {
    "text": "high or low we thought it was a low CPU did it matter for this case maybe not but at least we know we're looking for",
    "start": "2428599",
    "end": "2435170"
  },
  {
    "text": "something that's waiting for something else right we captured Dom we look at",
    "start": "2435170",
    "end": "2440359"
  },
  {
    "text": "all the stacks and then if you have another type of issue you might want to",
    "start": "2440359",
    "end": "2445849"
  },
  {
    "text": "go into profiling instead like if you have issues that you can't necessarily",
    "start": "2445849",
    "end": "2451790"
  },
  {
    "text": "go through and stress to the point where",
    "start": "2451790",
    "end": "2458930"
  },
  {
    "text": "you can get a memory down while it's happening so before I do this I just",
    "start": "2458930",
    "end": "2464930"
  },
  {
    "text": "need to shut down a few things because I'm keeping the symbols and in that case",
    "start": "2464930",
    "end": "2472460"
  },
  {
    "text": "this one works so let's go ahead and do that one too it's going to stop this",
    "start": "2472460",
    "end": "2478790"
  },
  {
    "text": "debugger and say yes okay so what we're",
    "start": "2478790",
    "end": "2484400"
  },
  {
    "text": "going to do now is we're going to look at the same app actually I did not write this out I just wrote the the problems",
    "start": "2484400",
    "end": "2491450"
  },
  {
    "text": "with it and one of the problems I kind of spaced in this one is if you look at",
    "start": "2491450",
    "end": "2498470"
  },
  {
    "text": "the picture of the the president you'll notice that sometime it kind of sticks",
    "start": "2498470",
    "end": "2504730"
  },
  {
    "text": "like you have a situation where goes through fine and then from time to time it's it's stuck and obviously I can't",
    "start": "2504730",
    "end": "2513380"
  },
  {
    "text": "really reproduce this far enough to get a memory dump so we'll have to do profiling for this and I'm going to",
    "start": "2513380",
    "end": "2521119"
  },
  {
    "text": "start off with George Washington again so actually let me go ahead and shut that down all together so I'm going to",
    "start": "2521119",
    "end": "2527359"
  },
  {
    "text": "go ahead and open up the project and you could do this without having the the",
    "start": "2527359",
    "end": "2534830"
  },
  {
    "text": "project but you would be limited in what you could see so in fact let me go ahead and do this so",
    "start": "2534830",
    "end": "2543570"
  },
  {
    "text": "you can see so what I'm going to do is I'm going to go ahead and go to debug",
    "start": "2543570",
    "end": "2549180"
  },
  {
    "text": "and performance profiler I'm going to open that up and in performance profiler",
    "start": "2549180",
    "end": "2556200"
  },
  {
    "text": "I can do a couple of things I can either debug this and kind of start the process",
    "start": "2556200",
    "end": "2561990"
  },
  {
    "text": "and profile it or I could use something like a nice peanut process that was already running or another running app",
    "start": "2561990",
    "end": "2568619"
  },
  {
    "text": "or whatnot and then I have a couple of options for things that I can do like",
    "start": "2568619",
    "end": "2573960"
  },
  {
    "text": "look at the application timeline for exceptions and things like that or CPUs it's your memory usage I'm going to go",
    "start": "2573960",
    "end": "2581160"
  },
  {
    "text": "through the performance wizard and I already know because I know what the",
    "start": "2581160",
    "end": "2587520"
  },
  {
    "text": "problem is that this is going to be a low CPU situation so we have two options",
    "start": "2587520",
    "end": "2593040"
  },
  {
    "text": "when we go ahead and do profiling and one of the options is CPU sampling so",
    "start": "2593040",
    "end": "2598440"
  },
  {
    "text": "CPU sampling what it will do is it will go in at certain times like every so often and slice the stack and say who's",
    "start": "2598440",
    "end": "2606150"
  },
  {
    "text": "on top who's on top who's on top and it will record that and figure out that this problem like this function spent",
    "start": "2606150",
    "end": "2612750"
  },
  {
    "text": "this much time like this much CPU time and then we have what we're going to use",
    "start": "2612750",
    "end": "2618750"
  },
  {
    "text": "the best use for high CPU issues but we're going to use something called instrumentation an instrumentation we'll",
    "start": "2618750",
    "end": "2626190"
  },
  {
    "text": "go in and put in markers at a call of function and at the exit of a function",
    "start": "2626190",
    "end": "2631770"
  },
  {
    "text": "and it will record the proper elapsed time for that method so that's what we",
    "start": "2631770",
    "end": "2639750"
  },
  {
    "text": "want to look at and I'm going to do next next finish and then it's going to start",
    "start": "2639750",
    "end": "2646650"
  },
  {
    "text": "off the process and I'll go through and clip my way through some issues and I'm",
    "start": "2646650",
    "end": "2654030"
  },
  {
    "text": "going to stop profiling",
    "start": "2654030",
    "end": "2657260"
  },
  {
    "text": "and then as if by magic instead of going",
    "start": "2660470",
    "end": "2667410"
  },
  {
    "text": "to tell me exactly where my problems lies so in this case out of the total",
    "start": "2667410",
    "end": "2674040"
  },
  {
    "text": "time I spent I spent in the process I actually spent 63.8 Christmas fifty",
    "start": "2674040",
    "end": "2680850"
  },
  {
    "text": "three point oh eight percent waiting for something so in a and a task wait and",
    "start": "2680850",
    "end": "2686820"
  },
  {
    "text": "that was coming from a function called get color which was in I don't have been",
    "start": "2686820",
    "end": "2693230"
  },
  {
    "text": "help them Illyria with a saml but this is a converter that converted the party",
    "start": "2693230",
    "end": "2699540"
  },
  {
    "text": "denomination democratic-republican to a color so it would look pretty because I",
    "start": "2699540",
    "end": "2704910"
  },
  {
    "text": "do you x2 and so on so here already we",
    "start": "2704910",
    "end": "2710700"
  },
  {
    "text": "can go in and look at a code and with that we can see that most of our time",
    "start": "2710700",
    "end": "2716340"
  },
  {
    "text": "was actually spent in this weight this weight is of course fictional but it",
    "start": "2716340",
    "end": "2722880"
  },
  {
    "text": "could be waiting for a database or it could be waiting for another process or an API or something so profiling is awesome if you if you",
    "start": "2722880",
    "end": "2732690"
  },
  {
    "text": "can reproduce it in your machine and if it's a small nothing that you don't want to grab a memory dump okay and let's see",
    "start": "2732690",
    "end": "2744030"
  },
  {
    "text": "here and then the last one that's one",
    "start": "2744030",
    "end": "2749670"
  },
  {
    "text": "we're going to look at our memory leaks so a memory leak will also have a couple",
    "start": "2749670",
    "end": "2754920"
  },
  {
    "text": "of ways that it can manifest itself and one of them is out of memory exceptions",
    "start": "2754920",
    "end": "2762560"
  },
  {
    "text": "but you can also see things like slow response times because suddenly the GC",
    "start": "2762560",
    "end": "2768330"
  },
  {
    "text": "is used using us way too much time and or you can see something that is pretty",
    "start": "2768330",
    "end": "2776190"
  },
  {
    "text": "common that you see for example in task manager or in person that memory is just kind of growing",
    "start": "2776190",
    "end": "2784030"
  },
  {
    "text": "em and we want to investigate what's happening there so what I'm going to",
    "start": "2784030",
    "end": "2789850"
  },
  {
    "text": "show you them let's get in look at why this happens because we have a memory",
    "start": "2789850",
    "end": "2796120"
  },
  {
    "text": "management manager we kind of use dotnet because it has a memory manager as a service and because c-sharp is awesome",
    "start": "2796120",
    "end": "2803220"
  },
  {
    "text": "but we if we tell it if we don't tell it",
    "start": "2803220",
    "end": "2808750"
  },
  {
    "text": "to garbage collect or rather if we tell it to not garbage collect it won't garbage collect and a couple of ways to",
    "start": "2808750",
    "end": "2814660"
  },
  {
    "text": "tell something to not garbage collect is by adding things to cache or session",
    "start": "2814660",
    "end": "2821080"
  },
  {
    "text": "stage or adding things to pinned or static objects that will then hold on to",
    "start": "2821080",
    "end": "2826570"
  },
  {
    "text": "things or by blocking the finalizar lesson sure ways to get a memory leak as",
    "start": "2826570",
    "end": "2833950"
  },
  {
    "text": "well and then we have some other memory leaks that are a little bit more subtle like assembly leaks so an assembly leak",
    "start": "2833950",
    "end": "2842080"
  },
  {
    "text": "will happen for some constructs for example if you deserialize something it",
    "start": "2842080",
    "end": "2847870"
  },
  {
    "text": "might create a dynamic assembly or well a number of regular expressions might",
    "start": "2847870",
    "end": "2854320"
  },
  {
    "text": "create dynamic assemblies and if you do that enough and if you do that in in bad ways by using the wrong configurations",
    "start": "2854320",
    "end": "2862930"
  },
  {
    "text": "and things you'll end up with assembly leaks in that case you look at LM and see you I got so many assemblies that I",
    "start": "2862930",
    "end": "2869500"
  },
  {
    "text": "don't recognize okay so let's investigate that or you could go in and do have a native leak",
    "start": "2869500",
    "end": "2876010"
  },
  {
    "text": "so if you use a con component but you call and that has done new and then delete anything that would cause an",
    "start": "2876010",
    "end": "2883000"
  },
  {
    "text": "issue to if you have memory dump again the magic three-step classes will go",
    "start": "2883000",
    "end": "2891520"
  },
  {
    "text": "ahead and capture multiple dumps and the reason why we capture multiple dumps is we want to compare things we want to",
    "start": "2891520",
    "end": "2898600"
  },
  {
    "text": "compare how many artists do you have here how many objects do you have there because that's so much easier to compare",
    "start": "2898600",
    "end": "2905590"
  },
  {
    "text": "and see what you're leaving instead of having to figure out is this odd should I have like 10,000 strings is that",
    "start": "2905590",
    "end": "2913300"
  },
  {
    "text": "normal but if you see that if you can compare and actually find out what's leaking that's a lot more usable",
    "start": "2913300",
    "end": "2920280"
  },
  {
    "text": "and then we saw earlier in when the BG that I would run for example GC root and",
    "start": "2920280",
    "end": "2926520"
  },
  {
    "text": "figure out why things were still around and for native leaks you can use B back",
    "start": "2926520",
    "end": "2934080"
  },
  {
    "text": "to it has rules that you can set up so it will put in markers when you do new",
    "start": "2934080",
    "end": "2939510"
  },
  {
    "text": "and when you do delete and when you allocate a handle and things like that so that you can figure out where did you",
    "start": "2939510",
    "end": "2946290"
  },
  {
    "text": "go wrong what did you what did you mess up with so let's go ahead and do the",
    "start": "2946290",
    "end": "2953730"
  },
  {
    "text": "final investigation and with a memory leak and I'll start off in Visual Studio",
    "start": "2953730",
    "end": "2960480"
  },
  {
    "text": "X or sorry in window beachie so we'll go directly to dump heap stat because that",
    "start": "2960480",
    "end": "2967500"
  },
  {
    "text": "will tell us all the different objects are on leap and I'm going to do a little",
    "start": "2967500",
    "end": "2976500"
  },
  {
    "text": "trick let's see prefer DML 0 you don't",
    "start": "2976500",
    "end": "2982470"
  },
  {
    "text": "have to worry about this but this is just takes the performance bug in the window BG I actually found myself",
    "start": "2982470",
    "end": "2988410"
  },
  {
    "text": "debugging windbg win with the B key which yeah weird thing but then I",
    "start": "2988410",
    "end": "2993780"
  },
  {
    "text": "figured out these blue lines there are kind of neat because you can click them and they will do great things they can",
    "start": "2993780",
    "end": "3000140"
  },
  {
    "text": "also cause big performance issues if you want to if you want to enumerate a lot",
    "start": "3000140",
    "end": "3005780"
  },
  {
    "text": "of different objects at the same time so if you look at dumpy then and",
    "start": "3005780",
    "end": "3014320"
  },
  {
    "text": "troubleshoot a memory leak what you would do then is you would go through the object and say is anything here",
    "start": "3014320",
    "end": "3020480"
  },
  {
    "text": "looking kind of unusual and this is where your trick with the multiple dumps coming because then you have a chance to",
    "start": "3020480",
    "end": "3026540"
  },
  {
    "text": "compare them but I'm a seasoned pro so I know that having for example 20,000 HTTP",
    "start": "3026540",
    "end": "3035840"
  },
  {
    "text": "requests is very unusual unless you have 20,000 current requests coming in so",
    "start": "3035840",
    "end": "3045260"
  },
  {
    "text": "because they should go away once they are once they're served the traduced be and",
    "start": "3045260",
    "end": "3050620"
  },
  {
    "text": "removed and you would look at things like so there's a recurring number of",
    "start": "3050620",
    "end": "3057270"
  },
  {
    "text": "20,000 887 so the fact that I have so many HTTP requests and HTTP responses",
    "start": "3057270",
    "end": "3064530"
  },
  {
    "text": "probably means that they are connected somehow and if I get rid of the age to P request",
    "start": "3064530",
    "end": "3070270"
  },
  {
    "text": "I'll probably get rid of the age to peer responses too and then I'll go through and I look at things like I don't know",
    "start": "3070270",
    "end": "3080110"
  },
  {
    "text": "what else is there there's some work requests here I have something else ticked",
    "start": "3080110",
    "end": "3086460"
  },
  {
    "text": "okay so I have 20,000 new controllers so that's an object that I created that's",
    "start": "3086460",
    "end": "3093070"
  },
  {
    "text": "the one that actually handles the flash news request and that's what's where -",
    "start": "3093070",
    "end": "3098200"
  },
  {
    "text": "but let's kind of explain so if I have that many controllers that's why I have that many and that many HTTP requests",
    "start": "3098200",
    "end": "3106570"
  },
  {
    "text": "and such so I'm going to go ahead and dump out all of them and this is where",
    "start": "3106570",
    "end": "3112000"
  },
  {
    "text": "the whole preferred DML serie comes in so don t don t empty empty cells for",
    "start": "3112000",
    "end": "3118360"
  },
  {
    "text": "method table this was what we saw earlier and this kind of is what defines the class so don't he dump out anything",
    "start": "3118360",
    "end": "3125890"
  },
  {
    "text": "that has that method table and we wait we wait and then we go in here because",
    "start": "3125890",
    "end": "3135010"
  },
  {
    "text": "we're bored so go ahead and ask this one to do memory analysis at the same time",
    "start": "3135010",
    "end": "3140520"
  },
  {
    "text": "so let's go ahead and grab that same thing and start your and I'll see so",
    "start": "3140520",
    "end": "3147850"
  },
  {
    "text": "this is going to do now the same thing it's going to enumerate all the objects kind of figure out what it thinks I am",
    "start": "3147850",
    "end": "3155380"
  },
  {
    "text": "leaking this should be done in yeast",
    "start": "3155380",
    "end": "3162289"
  },
  {
    "text": "a little bit the bad thing about SOS is",
    "start": "3162289",
    "end": "3170150"
  },
  {
    "text": "that you can't actually cancel a command in here so you can sit here all day and",
    "start": "3170150",
    "end": "3175939"
  },
  {
    "text": "do control C and it won't happen so let's say I thought this was going to be",
    "start": "3175939",
    "end": "3182749"
  },
  {
    "text": "a little a little bit quicker so I'm going to go ahead and actually start up let's see if it was finished okay",
    "start": "3182749",
    "end": "3191119"
  },
  {
    "text": "so I'm going to start out the investigation also in the visual studio at the same time so in Visual Studio",
    "start": "3191119",
    "end": "3197989"
  },
  {
    "text": "I'll open up that same memory dome and I",
    "start": "3197989",
    "end": "3203449"
  },
  {
    "text": "had it at John dumb Adams okay so this",
    "start": "3203449",
    "end": "3211429"
  },
  {
    "text": "was one little sleeking and in this case I'm not going to do debug would managed not debug would mixed but I'm going to",
    "start": "3211429",
    "end": "3218660"
  },
  {
    "text": "do debug managed memory and what that will do that and it will also go through",
    "start": "3218660",
    "end": "3224839"
  },
  {
    "text": "and enumerate all of the objects it will also go through and enumerate all the routes so it will kind of run GC route",
    "start": "3224839",
    "end": "3232880"
  },
  {
    "text": "if you will in the background and kind of figure out why things are sticking",
    "start": "3232880",
    "end": "3238309"
  },
  {
    "text": "around so while that is running let's go back to to this one because now it's",
    "start": "3238309",
    "end": "3243739"
  },
  {
    "text": "done and we can now pick any of them in",
    "start": "3243739",
    "end": "3249289"
  },
  {
    "text": "theory we should pick all 20,000 but that's going to take a little longer",
    "start": "3249289",
    "end": "3255679"
  },
  {
    "text": "than we have so we're going to stick one and say GC route to figure out why that",
    "start": "3255679",
    "end": "3261529"
  },
  {
    "text": "is sticking around and that now gives us",
    "start": "3261529",
    "end": "3267469"
  },
  {
    "text": "a similar route stack that we saw with the with the string that we looked at",
    "start": "3267469",
    "end": "3273979"
  },
  {
    "text": "earlier difference here is that this news controller item it's stuck in",
    "start": "3273979",
    "end": "3279049"
  },
  {
    "text": "something called a cache item removed callback eventually if you look up here it will be it will be in proper cache",
    "start": "3279049",
    "end": "3288109"
  },
  {
    "text": "but at this point we will then go ahead and Google for cache item removed callback or talk to whoever did",
    "start": "3288109",
    "end": "3296130"
  },
  {
    "text": "and use controller and figure out do you know what this cache item removed callback is and they would say yeah you",
    "start": "3296130",
    "end": "3303900"
  },
  {
    "text": "know what if I look at this code what",
    "start": "3303900",
    "end": "3309480"
  },
  {
    "text": "I'm doing is I'm going in and I'm cashing a bunch of stuff with cache",
    "start": "3309480",
    "end": "3314940"
  },
  {
    "text": "stuff ad and at the end when whenever the cache item is ready to be removed",
    "start": "3314940",
    "end": "3321270"
  },
  {
    "text": "I want to go ahead and call back this method to clean up some other stuff so",
    "start": "3321270",
    "end": "3327480"
  },
  {
    "text": "that's the cache item removed callback don't worry about like the details are on cache item removed callback this is",
    "start": "3327480",
    "end": "3334080"
  },
  {
    "text": "one example of how you can sort of lose memory and then okay so why why would",
    "start": "3334080",
    "end": "3342180"
  },
  {
    "text": "that cost the news controller to stick around well if you are sitting there in",
    "start": "3342180",
    "end": "3347340"
  },
  {
    "text": "cash and say callback this function when you're done which is like in five",
    "start": "3347340",
    "end": "3352590"
  },
  {
    "text": "minutes or whatever then this object has to be around for you to be able to call a method on it right and and that is why",
    "start": "3352590",
    "end": "3360660"
  },
  {
    "text": "we're leaking this if we would instead have a static callback function we would",
    "start": "3360660",
    "end": "3365760"
  },
  {
    "text": "not have this leak we would not be here you could go to a different session and not have to worry about the memory leaks",
    "start": "3365760",
    "end": "3371910"
  },
  {
    "text": "at all but so that is how you troubleshoot them let's go ahead and",
    "start": "3371910",
    "end": "3378150"
  },
  {
    "text": "look at what debug die I said and I'm",
    "start": "3378150",
    "end": "3383490"
  },
  {
    "text": "going to refresh this to get the blocked content to show up",
    "start": "3383490",
    "end": "3390710"
  },
  {
    "text": "yes",
    "start": "3392050",
    "end": "3395050"
  },
  {
    "text": "okay so in in debug diag it does what we",
    "start": "3399730",
    "end": "3405500"
  },
  {
    "text": "did but it also does a few other things it runs a couple of different commands that if things are kind of useful for",
    "start": "3405500",
    "end": "3412010"
  },
  {
    "text": "you like figuring out you know how many obvious are ready for finalization that",
    "start": "3412010",
    "end": "3417620"
  },
  {
    "text": "might be interesting to you also might be interesting to you to figure out how",
    "start": "3417620",
    "end": "3422990"
  },
  {
    "text": "much memory you actually have in dotnet memory we could get this from a heap FCC",
    "start": "3422990",
    "end": "3428000"
  },
  {
    "text": "but this does it automatically for you without having to remember to do that gives you a few examples a blog post",
    "start": "3428000",
    "end": "3435110"
  },
  {
    "text": "that you should look at that might have to do with this a lot of them go to my",
    "start": "3435110",
    "end": "3440540"
  },
  {
    "text": "blog so if you ever want to go to my blog you can use run debug tag and pick any link in there and and then what it",
    "start": "3440540",
    "end": "3449720"
  },
  {
    "text": "will do is this will enumerate the heap and then it will go in and say these",
    "start": "3449720",
    "end": "3456350"
  },
  {
    "text": "things look kind of strange okay so for",
    "start": "3456350",
    "end": "3461390"
  },
  {
    "text": "example we know that we're sometimes leaked web UI or gigs so we're going to",
    "start": "3461390",
    "end": "3466910"
  },
  {
    "text": "mark those would read we know that sometimes the existing data are because this is based on your ristic information",
    "start": "3466910",
    "end": "3472460"
  },
  {
    "text": "from us debugging tons and tons and tons of memory dumps and then purple is",
    "start": "3472460",
    "end": "3477650"
  },
  {
    "text": "basically your own objects and in here it was kind of stick out and say you might want to look at this news",
    "start": "3477650",
    "end": "3483740"
  },
  {
    "text": "controller because you have like this many of them so that's what do you get",
    "start": "3483740",
    "end": "3492830"
  },
  {
    "text": "from debug tag but individual studio let's see what happened there so in",
    "start": "3492830",
    "end": "3498170"
  },
  {
    "text": "Visual Studio will enter and load it up to DOM and here I'm going to actually use the baseline dump this was a memory",
    "start": "3498170",
    "end": "3507260"
  },
  {
    "text": "job I took at the beginning of the process before the leak happened so now it's going to numerate and obviously",
    "start": "3507260",
    "end": "3513710"
  },
  {
    "text": "it's much smaller so nothing okay ignoring like this and have a look at",
    "start": "3513710",
    "end": "3521450"
  },
  {
    "text": "Bizness dead [Music] because soon as I shut this down like",
    "start": "3521450",
    "end": "3527900"
  },
  {
    "text": "everything bill will be will go away so if you have to memory dumps what you'll",
    "start": "3527900",
    "end": "3534859"
  },
  {
    "text": "get is the difference between them and it will for example say you know between these two you have leaked in this case",
    "start": "3534859",
    "end": "3545740"
  },
  {
    "text": "20,000 HTTP responses and it will actually give you down here so let me go",
    "start": "3545740",
    "end": "3552859"
  },
  {
    "text": "ahead and Windows Plus this - it will say okay most of these let's go ahead",
    "start": "3552859",
    "end": "3562940"
  },
  {
    "text": "and look at the news controllers instead so most of these in fact 20,000 out of",
    "start": "3562940",
    "end": "3569660"
  },
  {
    "text": "the 20,000 or so objects are routed in a cache item removed callback so this is",
    "start": "3569660",
    "end": "3576590"
  },
  {
    "text": "essentially going through and doing GC root on all of those objects and giving us the proper stats instead of us having",
    "start": "3576590",
    "end": "3583369"
  },
  {
    "text": "to go through and do that so Visual Studio is doing some real magic when it",
    "start": "3583369",
    "end": "3589250"
  },
  {
    "text": "comes to memories of debugging especially for memory leaks this particular feature is something that you",
    "start": "3589250",
    "end": "3595640"
  },
  {
    "text": "could use if you were f10 debugging too so if you get to a point where you see",
    "start": "3595640",
    "end": "3602030"
  },
  {
    "text": "okay so between like I'm going to stop here with on a breakpoint then you can go in into diagnostic tool kit take a",
    "start": "3602030",
    "end": "3609590"
  },
  {
    "text": "snapshot and then move on take another snapshot compare them and get this view",
    "start": "3609590",
    "end": "3615350"
  },
  {
    "text": "and figuring out figure out why something is sticking around okay so we",
    "start": "3615350",
    "end": "3623720"
  },
  {
    "text": "saw how we did that and then I just want to end off so now you have basically all the tools that you ever need to do these",
    "start": "3623720",
    "end": "3630650"
  },
  {
    "text": "crime scene investigations now I want to end off with a slide on I need some resources that you might want to look at",
    "start": "3630650",
    "end": "3637340"
  },
  {
    "text": "if you want to go further and debug so debug dies obviously if you want to",
    "start": "3637340",
    "end": "3642530"
  },
  {
    "text": "download that if you want to look at these slides I have them a",
    "start": "3642530",
    "end": "3647570"
  },
  {
    "text": "slideshare.net and if you want to try this for yourself all the demos that you've seen today",
    "start": "3647570",
    "end": "3653480"
  },
  {
    "text": "you have them under debugging demos on on my github account so with that thank",
    "start": "3653480",
    "end": "3659000"
  },
  {
    "text": "you very much it's been awesome having you and I don't think they have any",
    "start": "3659000",
    "end": "3669920"
  },
  {
    "text": "proper time for questions but if you want you can come up I'll be here",
    "start": "3669920",
    "end": "3675820"
  }
]