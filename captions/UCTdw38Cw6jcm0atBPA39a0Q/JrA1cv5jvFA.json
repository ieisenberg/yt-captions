[
  {
    "start": "0",
    "end": "410000"
  },
  {
    "text": "uh anyway so this is not larsa's talk he is in room five I have been moved here",
    "start": "4640",
    "end": "13500"
  },
  {
    "text": "didn't get the memo so I was over in Lars this room five minutes ago",
    "start": "13500",
    "end": "19020"
  },
  {
    "text": "and he's like didn't you get the email you're in room two okay so I made it on",
    "start": "19020",
    "end": "24779"
  },
  {
    "text": "time always good this is the Blazer server side deep dive and I know it says",
    "start": "24779",
    "end": "31349"
  },
  {
    "text": "Carl Franklin's blazer cookbook up there but what I've done is I don't have any slides I have a document in HTML",
    "start": "31349",
    "end": "38160"
  },
  {
    "text": "document with code snippets and directions and links and images and I'll",
    "start": "38160",
    "end": "46500"
  },
  {
    "text": "be giving that to you guys so you can do exactly what I'm doing here when you leave here today I've been I got on the",
    "start": "46500",
    "end": "55649"
  },
  {
    "text": "blazer bandwagon pretty early on the server side anyway the webassembly thing I've been",
    "start": "55649",
    "end": "61649"
  },
  {
    "text": "taking a closer look at lately but I've been messing around with the server side",
    "start": "61649",
    "end": "66960"
  },
  {
    "text": "stuff since the last summer I I was so",
    "start": "66960",
    "end": "73280"
  },
  {
    "text": "enamored of it that I went and redid all the podcasts back-end web stuff that I",
    "start": "73280",
    "end": "82920"
  },
  {
    "text": "had written previously in vanilla JavaScript and HTML and web api but I",
    "start": "82920",
    "end": "89400"
  },
  {
    "text": "redid the front-end in like a man week I was like I have never felt so productive",
    "start": "89400",
    "end": "95670"
  },
  {
    "text": "in my life with a with a front-end web technology not even web forms this is",
    "start": "95670",
    "end": "101400"
  },
  {
    "text": "just blowing blowing it out of the water for me so I'm going to show you we're",
    "start": "101400",
    "end": "107460"
  },
  {
    "text": "gonna build an application you know it's not going to do a whole lot but it's going to exercise all of the the things",
    "start": "107460",
    "end": "113759"
  },
  {
    "text": "that I've learned over the past months and we'll be going down into the system",
    "start": "113759",
    "end": "119909"
  },
  {
    "text": "and take a look at what's really going on under the hood which is what I think you're really really interested in so",
    "start": "119909",
    "end": "126960"
  },
  {
    "text": "this as I said is a cookbook this is from my my online workshop that I've",
    "start": "126960",
    "end": "133200"
  },
  {
    "text": "have been doing and just a little part of it it's a day workshop and the link is here so",
    "start": "133200",
    "end": "140239"
  },
  {
    "text": "what I'm going to do is just follow the instructions and I'm going to create a new project in Visual Studio 2019 and",
    "start": "140239",
    "end": "147379"
  },
  {
    "text": "it'll be a blazer app call band Booker so the whole idea here for this big",
    "start": "147379",
    "end": "154519"
  },
  {
    "text": "application is that yeah so this is",
    "start": "154519",
    "end": "162319"
  },
  {
    "text": "going to allow us to define instruments like piano guitar drums then musicians",
    "start": "162319",
    "end": "168109"
  },
  {
    "text": "that have that play those instruments and then bands that have those musicians",
    "start": "168109",
    "end": "174470"
  },
  {
    "text": "in them and the venues where the bands play and then bookings which links all",
    "start": "174470",
    "end": "180349"
  },
  {
    "text": "of those things together links you know abandon a venue and a date and the",
    "start": "180349",
    "end": "185750"
  },
  {
    "text": "particular musicians of that band they're gonna play that gig and the whole idea came out because I am in a",
    "start": "185750",
    "end": "191299"
  },
  {
    "text": "band and trying to get everybody in the band together it's a 10-piece band trying to get everybody together to",
    "start": "191299",
    "end": "198260"
  },
  {
    "text": "accept or reject a gig that comes along in a timely manner by email is just a",
    "start": "198260",
    "end": "204470"
  },
  {
    "text": "big pain it just doesn't work and so you know when some when my brother asks hey",
    "start": "204470",
    "end": "209959"
  },
  {
    "text": "is you know such and such playing this gig I'm like I don't know now I have to go search through Google Gmail and find",
    "start": "209959",
    "end": "217250"
  },
  {
    "text": "you know where they said yea or nay it was just a big problem so I figured this was a nice little exercise to go through",
    "start": "217250",
    "end": "224150"
  },
  {
    "text": "this building this app so that's what we're gonna do call band Booker",
    "start": "224150",
    "end": "231159"
  },
  {
    "text": "and you know like all blazer server-side blazer apps oh that's",
    "start": "234140",
    "end": "245120"
  },
  {
    "text": "awesome all right cool so let me let me do this again I don't know why that happened but",
    "start": "245120",
    "end": "250670"
  },
  {
    "text": "let me do this again it might be that there's already a project in that directory I don't know why I was in the",
    "start": "250670",
    "end": "258200"
  },
  {
    "text": "dev intersection directory okay so this is gonna be your your standard demo",
    "start": "258200",
    "end": "263210"
  },
  {
    "text": "first as long as this runs all right so",
    "start": "263210",
    "end": "270590"
  },
  {
    "text": "let's find a good place for it here we",
    "start": "270590",
    "end": "276350"
  },
  {
    "text": "go band Booker blazer server app this is",
    "start": "276350",
    "end": "294050"
  },
  {
    "text": "the latest and greatest vigil studio",
    "start": "294050",
    "end": "300699"
  },
  {
    "text": "I'll be talking about the differences between client side and server side as",
    "start": "307320",
    "end": "312930"
  },
  {
    "text": "well the first I want to just show you the quintessential blazer demo which is",
    "start": "312930",
    "end": "318620"
  },
  {
    "text": "the counter where you press a button and it updates a counter and we'll just take a look at what's going on under the hood",
    "start": "318620",
    "end": "324570"
  },
  {
    "text": "here so you can see I'm updating this counter I got this click Me button and",
    "start": "324570",
    "end": "331580"
  },
  {
    "text": "every time I click it increments alright simple event and so let's take a look",
    "start": "331580",
    "end": "337800"
  },
  {
    "text": "and see what's going on under the hood",
    "start": "337800",
    "end": "341300"
  },
  {
    "text": "yeah this is the code right here for the counter page which I will pull up here",
    "start": "343340",
    "end": "350420"
  },
  {
    "text": "so let's look at this what's going on here is we've got just an HTML button",
    "start": "352370",
    "end": "358590"
  },
  {
    "text": "right and rather than an on click without an @ sign we have an at on click",
    "start": "358590",
    "end": "365220"
  },
  {
    "text": "that @ sign basically is a blazer directive that's saying hey this is going to run code on the server and",
    "start": "365220",
    "end": "373430"
  },
  {
    "text": "blazars got to handle this rather than javascript if we left out the @ it would be just a JavaScript on",
    "start": "373430",
    "end": "379560"
  },
  {
    "text": "click so then you have this @ code block it doesn't have to be in the razor page",
    "start": "379560",
    "end": "386820"
  },
  {
    "text": "itself you can do code behind and I'll show you how to do that but it there it",
    "start": "386820",
    "end": "393120"
  },
  {
    "text": "is you have a current count you have a increment count which increments that",
    "start": "393120",
    "end": "398280"
  },
  {
    "text": "number and we're just displaying that in HTML and there's the current count so no",
    "start": "398280",
    "end": "408300"
  },
  {
    "text": "doubt you guys have seen this before not too interesting but let's talk about the",
    "start": "408300",
    "end": "414330"
  },
  {
    "text": "difference between client side blazer and server side blazer if this was client side blazer that code would be",
    "start": "414330",
    "end": "421170"
  },
  {
    "text": "running in the browser right and it would be compiled to webassembly",
    "start": "421170",
    "end": "426360"
  },
  {
    "text": "bytecode essentially it's not really compiled it's sort of interpreted but you get the idea the code is actually",
    "start": "426360",
    "end": "432060"
  },
  {
    "text": "c-sharp running in the browser here we're on the server okay so how does",
    "start": "432060",
    "end": "438210"
  },
  {
    "text": "that happen well the magic of that is signal our and signal our is a web is a",
    "start": "438210",
    "end": "446779"
  },
  {
    "text": "WebSockets framework right it uses WebSockets but it can also use other",
    "start": "446779",
    "end": "452599"
  },
  {
    "text": "means of doing what sockets do if you've ever done any sockets programming",
    "start": "452599",
    "end": "458009"
  },
  {
    "text": "sockets are the underlying architecture the transport your your the way that all",
    "start": "458009",
    "end": "464400"
  },
  {
    "text": "Internet programming applications that use the internet like browsers and email clients that that's how they access",
    "start": "464400",
    "end": "470699"
  },
  {
    "text": "tcp/ip is through a socket and you know when a browser makes a request to a web",
    "start": "470699",
    "end": "476939"
  },
  {
    "text": "site it opens a socket connection and then it you know sends a request it gets",
    "start": "476939",
    "end": "483539"
  },
  {
    "text": "a response and then that connection is closed by the server whereas with signal are we're using a web socket that is",
    "start": "483539",
    "end": "490939"
  },
  {
    "text": "connected and it stays connected and it stays open and as long as that socket is",
    "start": "490939",
    "end": "496919"
  },
  {
    "text": "open the client can send data to the server server can send data back to the client it's a two-way persistent",
    "start": "496919",
    "end": "504180"
  },
  {
    "text": "connection so this all happens magically for you under the hood so rather than",
    "start": "504180",
    "end": "510509"
  },
  {
    "text": "when you click that button rather than making an HTTP request to a server and",
    "start": "510509",
    "end": "515909"
  },
  {
    "text": "getting some some JSON back and then with JavaScript sort of changing the Dom",
    "start": "515909",
    "end": "521370"
  },
  {
    "text": "yourself what happens is it goes over that signal our connection and the",
    "start": "521370",
    "end": "526860"
  },
  {
    "text": "server is keeping a graph in memory of the Dom of the browser for every client",
    "start": "526860",
    "end": "532680"
  },
  {
    "text": "so it knows the state of the Dom in the browser executes the code and then does",
    "start": "532680",
    "end": "540209"
  },
  {
    "text": "a diff in the in that graph on the server to find out what has changed UI",
    "start": "540209",
    "end": "546839"
  },
  {
    "text": "wise in the browser and then it sends back over that same signal our connection all of the information that",
    "start": "546839",
    "end": "553410"
  },
  {
    "text": "Blaser needs to update the UI in the dom okay so all of this happens very quickly",
    "start": "553410",
    "end": "560970"
  },
  {
    "text": "and very actually inexpensively in terms of performance and in terms of data",
    "start": "560970",
    "end": "568980"
  },
  {
    "text": "that's actually traveling back and forth it's actually very efficient so that's the big difference between",
    "start": "568980",
    "end": "576170"
  },
  {
    "text": "server-side Blaser and client-side Blaser and there's just a couple of things to consider here the the hosting",
    "start": "576170",
    "end": "584040"
  },
  {
    "text": "model of the server has a few benefits I've already outlined the but download",
    "start": "584040",
    "end": "589889"
  },
  {
    "text": "size significantly smaller they you know the start-up size basically when you run",
    "start": "589889",
    "end": "595259"
  },
  {
    "text": "it you're you don't have to ship down the you know the blazer runtime which is",
    "start": "595259",
    "end": "603420"
  },
  {
    "text": "about four megabytes now but they're looking to get that under two megabytes so the app loads faster since",
    "start": "603420",
    "end": "611459"
  },
  {
    "text": "everything's running on the server you can take advantage of all of that the server has to offer code wise including",
    "start": "611459",
    "end": "617970"
  },
  {
    "text": "the architecture right so you can access your data stores and all of that stuff",
    "start": "617970",
    "end": "623430"
  },
  {
    "text": "without having to you know without being required to use a Web API or some other rest interface to get data because",
    "start": "623430",
    "end": "630269"
  },
  {
    "text": "you're already on the server so there's that advantage and then of course it",
    "start": "630269",
    "end": "637649"
  },
  {
    "text": "works on every just about every browser and even ones that don't support web",
    "start": "637649",
    "end": "643529"
  },
  {
    "text": "assembly so the downsides are that there's there may be latency issues",
    "start": "643529",
    "end": "650420"
  },
  {
    "text": "because you are making a network hop for every interaction no offline support so",
    "start": "650420",
    "end": "659279"
  },
  {
    "text": "if your users aren't connected to the Internet or the internet connection goes",
    "start": "659279",
    "end": "664319"
  },
  {
    "text": "down the application will cease to function and scalability has its own",
    "start": "664319",
    "end": "670889"
  },
  {
    "text": "challenges with with signal arm but we'll talk about that also an asp net",
    "start": "670889",
    "end": "678149"
  },
  {
    "text": "core server is required not necessarily a big deal these days this is a slide",
    "start": "678149",
    "end": "683999"
  },
  {
    "text": "that I stole from Ryan Nowak who works in the asp net core team and was according to him the second person to",
    "start": "683999",
    "end": "691410"
  },
  {
    "text": "ever work on the blazer project so just by comparison let's talk about bandwidth",
    "start": "691410",
    "end": "697709"
  },
  {
    "text": "and how much bandwidth these things consume streaming video is perhaps the",
    "start": "697709",
    "end": "704100"
  },
  {
    "text": "worst at 4k we're talking a lot you know what",
    "start": "704100",
    "end": "710110"
  },
  {
    "text": "is that 53 megabytes I don't know what Ted is",
    "start": "710110",
    "end": "715720"
  },
  {
    "text": "with 53,000 kilobytes that's 53 megabytes per second thousand kilobytes",
    "start": "715720",
    "end": "720730"
  },
  {
    "text": "per second for 320p and audio streaming audio is about 160",
    "start": "720730",
    "end": "727020"
  },
  {
    "text": "kbps but Blaser server one operation takes about 0.5 kbps so it really is",
    "start": "727020",
    "end": "734650"
  },
  {
    "text": "pretty efficient and if you want to take a look at the signal our traffic I wrote a blog post here on app V next where I",
    "start": "734650",
    "end": "744610"
  },
  {
    "text": "show you how to log the signal our traffic that's going back and forth over",
    "start": "744610",
    "end": "749890"
  },
  {
    "text": "the wire and we actually look and look at some of it as it's being logged and",
    "start": "749890",
    "end": "756000"
  },
  {
    "text": "there's not a whole lot but it is interesting nonetheless if you're into",
    "start": "756000",
    "end": "762630"
  },
  {
    "text": "if you're into that figuring out what what's going over the wire alright so",
    "start": "762630",
    "end": "771340"
  },
  {
    "start": "770000",
    "end": "831000"
  },
  {
    "text": "the difference between blazer server-side blazer and your traditional",
    "start": "771340",
    "end": "777720"
  },
  {
    "text": "asp net core raise our application MVC application is completely different",
    "start": "777720",
    "end": "784570"
  },
  {
    "text": "right so when a razor page or views rendered every line of that razor code",
    "start": "784570",
    "end": "790690"
  },
  {
    "text": "emits HTML in text form and then the server disposes of that page or view",
    "start": "790690",
    "end": "795700"
  },
  {
    "text": "instance including any state that was produced and another request for the",
    "start": "795700",
    "end": "801280"
  },
  {
    "text": "page occurs for instance when validation fails the entire page is rerender to",
    "start": "801280",
    "end": "806290"
  },
  {
    "text": "HTML again and the page is sent to the client so there's a lot more traffic going back and forth with an MVC",
    "start": "806290",
    "end": "812710"
  },
  {
    "text": "application than with a blazer server application we're basically talking about a spa where you don't have to do",
    "start": "812710",
    "end": "819700"
  },
  {
    "text": "any of the goo of accessing data in your web api and updating the client so",
    "start": "819700",
    "end": "826960"
  },
  {
    "text": "that's the magic of blazer server so",
    "start": "826960",
    "end": "832360"
  },
  {
    "start": "831000",
    "end": "926000"
  },
  {
    "text": "let's talk about scaling Microsoft did some tests and it turns out that just",
    "start": "832360",
    "end": "839110"
  },
  {
    "text": "without your code or your state or your data every connected client requires about",
    "start": "839110",
    "end": "845350"
  },
  {
    "text": "85k of overhead and this is a screenshot from Dan Roth's video that he did a",
    "start": "845350",
    "end": "851769"
  },
  {
    "text": "dotnet conf they did this test for appropriate latency and with with active",
    "start": "851769",
    "end": "861459"
  },
  {
    "text": "concurrent clients and they used two different instances server on in Azure",
    "start": "861459",
    "end": "870779"
  },
  {
    "text": "right the the D 1 V 2 standard which is",
    "start": "870779",
    "end": "876600"
  },
  {
    "text": "3.5 gigs of RAM could handle 5,000 concurrent active users but if they",
    "start": "876600",
    "end": "883540"
  },
  {
    "text": "upgraded that to a 14 gig server with 4 V CPUs 20,000 plus so also right we'll",
    "start": "883540",
    "end": "895569"
  },
  {
    "text": "talk about scaling out signal are but the real bottleneck seems to be memory",
    "start": "895569",
    "end": "901029"
  },
  {
    "text": "right so more memory means you can handle more concurrent clients with your",
    "start": "901029",
    "end": "908170"
  },
  {
    "text": "with your data so they found in this particular test which was a real test with real data that we got up to like",
    "start": "908170",
    "end": "915670"
  },
  {
    "text": "250 K per of memory per client so it's a",
    "start": "915670",
    "end": "921819"
  },
  {
    "text": "little bit different you got to do the math and think about that so to conserve memory usage you want to",
    "start": "921819",
    "end": "928629"
  },
  {
    "start": "926000",
    "end": "1044000"
  },
  {
    "text": "pay attention to how much memory is being used in your app per client right",
    "start": "928629",
    "end": "934569"
  },
  {
    "text": "so the worst thing you could do is allow the client to load up you know a million",
    "start": "934569",
    "end": "939730"
  },
  {
    "text": "records from your database in object form put them in a list and then display",
    "start": "939730",
    "end": "945129"
  },
  {
    "text": "them right in a select that would be the worst because now every instance you",
    "start": "945129",
    "end": "951249"
  },
  {
    "text": "know every concurrent client connection is taking up all of that memory so a",
    "start": "951249",
    "end": "956919"
  },
  {
    "text": "better idea is to use things like you know search boxes to not allow more than",
    "start": "956919",
    "end": "964209"
  },
  {
    "text": "so many records to be displayed on the page at once but you know this is this",
    "start": "964209",
    "end": "969790"
  },
  {
    "text": "should be standard procedure for you now any days anyways as web developers",
    "start": "969790",
    "end": "975790"
  },
  {
    "text": "you probably already know that but it it really you really have to pay attention to it and blazer so in additional in",
    "start": "975790",
    "end": "984220"
  },
  {
    "text": "addition to memory available WebSockets can also be depleted if the number of concurrent clients exceeds the number",
    "start": "984220",
    "end": "990400"
  },
  {
    "text": "available signal are connections so to scale that you might consider using the Azure signal are service completely",
    "start": "990400",
    "end": "997660"
  },
  {
    "text": "offloading the signal our service to assure so here's a link to an article",
    "start": "997660",
    "end": "1002820"
  },
  {
    "text": "that explains how to make that happen and you can read read this in your own",
    "start": "1002820",
    "end": "1009420"
  },
  {
    "text": "time but this basically shows you how to provision a signal our service and Azure",
    "start": "1009420",
    "end": "1016080"
  },
  {
    "text": "and how to use the secret sauce to in configuration to set your Azure",
    "start": "1016080",
    "end": "1023730"
  },
  {
    "text": "connection string and then you can see it just works now we're talking about",
    "start": "1023730",
    "end": "1029480"
  },
  {
    "text": "the signal our service that blazer uses internally that's what we're replacing",
    "start": "1029480",
    "end": "1034709"
  },
  {
    "text": "with as your signal arm so that's always a good idea if you you know planning on",
    "start": "1034709",
    "end": "1040410"
  },
  {
    "text": "making a really big app alright so let's",
    "start": "1040410",
    "end": "1045630"
  },
  {
    "start": "1044000",
    "end": "1115000"
  },
  {
    "text": "talk about state let's go back to our app here back to our old trusty counter",
    "start": "1045630",
    "end": "1058340"
  },
  {
    "text": "and you can see that this is working if I go to another page like here's the",
    "start": "1062220",
    "end": "1070150"
  },
  {
    "text": "home page and then go back to the counter what happened it's at zero again so all of the state goes away when you",
    "start": "1070150",
    "end": "1079570"
  },
  {
    "text": "navigate to another page in server side blazer that's what happens so you may",
    "start": "1079570",
    "end": "1086530"
  },
  {
    "text": "not want that and may be perfectly okay but you may not want that behavior you",
    "start": "1086530",
    "end": "1091930"
  },
  {
    "text": "may want them to go to all the pages and keep the state no matter what page they",
    "start": "1091930",
    "end": "1097000"
  },
  {
    "text": "go to so to ameliorate this we're going to create a service and offload all the",
    "start": "1097000",
    "end": "1105490"
  },
  {
    "text": "state into the service which will live one per client across all of the pages",
    "start": "1105490",
    "end": "1111130"
  },
  {
    "text": "and then we'll just inject that service and use it wherever we want so we'll",
    "start": "1111130",
    "end": "1117880"
  },
  {
    "start": "1115000",
    "end": "1138000"
  },
  {
    "text": "make a class we'll add a class here called app state and it's a very simple",
    "start": "1117880",
    "end": "1132190"
  },
  {
    "text": "class just has a clicks property alright",
    "start": "1132190",
    "end": "1138460"
  },
  {
    "start": "1138000",
    "end": "1310000"
  },
  {
    "text": "and now we're gonna go to the services startup CS and the services and we're",
    "start": "1138460",
    "end": "1144310"
  },
  {
    "text": "gonna call add scoped for app state and so this is how we're going to be able to",
    "start": "1144310",
    "end": "1151240"
  },
  {
    "text": "use this from wherever we are you can see there's already ad singleton for the",
    "start": "1151240",
    "end": "1157930"
  },
  {
    "text": "weather forecast service that's another demo I'll show you this one",
    "start": "1157930",
    "end": "1164429"
  },
  {
    "text": "the weather forecast service is just simply a class that retrieves data and",
    "start": "1165750",
    "end": "1175080"
  },
  {
    "text": "every time you go there you'll see a different random set of weather forecast",
    "start": "1175080",
    "end": "1184030"
  },
  {
    "text": "data okay but look at the difference that weather forecast service is a",
    "start": "1184030",
    "end": "1190060"
  },
  {
    "text": "singleton where as we're adding app state as scope so the difference there is a singleton",
    "start": "1190060",
    "end": "1197059"
  },
  {
    "text": "has one instance that's shared across all users all users all clients get the",
    "start": "1197059",
    "end": "1204440"
  },
  {
    "text": "same instance of that object whereas if you do add scoped now it's per client",
    "start": "1204440",
    "end": "1211059"
  },
  {
    "text": "right so every every client gets this a copy of this app state and wherever you",
    "start": "1211059",
    "end": "1219049"
  },
  {
    "text": "inject it you're accessing that same instance for that client okay there's",
    "start": "1219049",
    "end": "1225710"
  },
  {
    "text": "another one transient ad transient and that of course there is no state that that is",
    "start": "1225710",
    "end": "1232549"
  },
  {
    "text": "just a per page lifecycle so that would",
    "start": "1232549",
    "end": "1237650"
  },
  {
    "text": "work exactly if we used it we work exactly as the counter works right now",
    "start": "1237650",
    "end": "1243760"
  },
  {
    "text": "all right so let's update our counter",
    "start": "1243760",
    "end": "1249140"
  },
  {
    "text": "tracer to use this service and so you",
    "start": "1249140",
    "end": "1255500"
  },
  {
    "text": "can see I'm using the at inject directive right here here's the type app state and here's our variable app state",
    "start": "1255500",
    "end": "1263750"
  },
  {
    "text": "the current count has now at app State clicks increment count is still being called",
    "start": "1263750",
    "end": "1271970"
  },
  {
    "text": "but now instead of having a local variable we're using that app state and",
    "start": "1271970",
    "end": "1279850"
  },
  {
    "text": "incrementing that",
    "start": "1279850",
    "end": "1282880"
  },
  {
    "text": "and now I can increment it no problem I switched to home I come back to them",
    "start": "1287559",
    "end": "1296039"
  },
  {
    "text": "cool so that can be really important it's probably maybe the one of the first",
    "start": "1296669",
    "end": "1302980"
  },
  {
    "text": "things that you would do in a real application so yeah just talking about these things",
    "start": "1302980",
    "end": "1309639"
  },
  {
    "text": "all right so let's talk about how server-side Blaser handles unhandled",
    "start": "1309639",
    "end": "1317580"
  },
  {
    "start": "1310000",
    "end": "1433000"
  },
  {
    "text": "exceptions let's just create a an",
    "start": "1317580",
    "end": "1325119"
  },
  {
    "text": "exception here throw a new exception ouch",
    "start": "1325119",
    "end": "1331408"
  },
  {
    "text": "all right so it'll break in Visual Studio but let's just go and continue so",
    "start": "1340179",
    "end": "1346820"
  },
  {
    "text": "we can see more of like what would happen in the real world and you can see here an unhandled exception has occurred",
    "start": "1346820",
    "end": "1354200"
  },
  {
    "text": "see the browser dev tools for details but guess what the app stops working the",
    "start": "1354200",
    "end": "1361190"
  },
  {
    "text": "connection has been severed and take a look at this if we go to the browser tools right connection disconnected",
    "start": "1361190",
    "end": "1373549"
  },
  {
    "text": "right there so here's the exception ouch",
    "start": "1373549",
    "end": "1379279"
  },
  {
    "text": "right that's good but this is the most important thing to know begin and this",
    "start": "1379279",
    "end": "1385700"
  },
  {
    "text": "is by design that the signal our connection has been completely severed",
    "start": "1385700",
    "end": "1390919"
  },
  {
    "text": "but it's by designed because you're now your your code is now in a state that is",
    "start": "1390919",
    "end": "1398899"
  },
  {
    "text": "dangerous right it could be used as an attack vector unhandled exception has",
    "start": "1398899",
    "end": "1404090"
  },
  {
    "text": "occurred that may have occurred you know somewhere where you know there's",
    "start": "1404090",
    "end": "1409789"
  },
  {
    "text": "somebody's entering a credit card or putting an order through all right we don't know what the state of that is you",
    "start": "1409789",
    "end": "1415970"
  },
  {
    "text": "know if why would we allow the user to continue to use the application it just",
    "start": "1415970",
    "end": "1422539"
  },
  {
    "text": "opens up all sorts of possibilities for security threats so that's by design",
    "start": "1422539",
    "end": "1429398"
  },
  {
    "start": "1433000",
    "end": "1492000"
  },
  {
    "text": "alright so now let's get into the real application here we're going to add a couple of classes instrument and",
    "start": "1433419",
    "end": "1440600"
  },
  {
    "text": "musician I'll create a models folder first",
    "start": "1440600",
    "end": "1447250"
  },
  {
    "text": "and add to that instrument",
    "start": "1450800",
    "end": "1459590"
  },
  {
    "text": "and now another one musician",
    "start": "1465140",
    "end": "1472750"
  },
  {
    "text": "all right so instrument basically has an ID in a name musician has an ID and a",
    "start": "1480010",
    "end": "1487059"
  },
  {
    "text": "name and a list of instruments couldn't be simpler so let's do some UI for start starting",
    "start": "1487059",
    "end": "1496179"
  },
  {
    "start": "1492000",
    "end": "1604000"
  },
  {
    "text": "the UI to show a list of instruments and then we'll get a little bit more into it",
    "start": "1496179",
    "end": "1502380"
  },
  {
    "text": "so I'm gonna go to index that razor which is you know your first landing page we're just going to modify that",
    "start": "1502380",
    "end": "1510400"
  },
  {
    "text": "first of all here's the mark up with a select but let's go down to the code first I have a list of instruments and",
    "start": "1510400",
    "end": "1519419"
  },
  {
    "text": "there's a few overrides that you can do for lifecycle management one of them is uninitialized it can be a sync if you",
    "start": "1519419",
    "end": "1527530"
  },
  {
    "text": "want it to be a sync this is obviously you know when when everything's ready to",
    "start": "1527530",
    "end": "1533530"
  },
  {
    "text": "roll but there's another there's another a few other ones one of them is on",
    "start": "1533530",
    "end": "1538990"
  },
  {
    "text": "parameters set which you can pass parameters to pages alright and those",
    "start": "1538990",
    "end": "1546070"
  },
  {
    "text": "parameters are not set at uninitialized so they won't exist yet but anyway we're",
    "start": "1546070",
    "end": "1554169"
  },
  {
    "text": "going to create a new list of instruments and we're going to just set",
    "start": "1554169",
    "end": "1559270"
  },
  {
    "text": "some of these values in here guitar keyboards bass and drums up here in the",
    "start": "1559270",
    "end": "1565630"
  },
  {
    "text": "Select right we have this at for each of our instrument and instruments and we're",
    "start": "1565630",
    "end": "1572410"
  },
  {
    "text": "going to put an option in the Select for each one of those set the value to the",
    "start": "1572410",
    "end": "1577480"
  },
  {
    "text": "ID and the text to the name and no",
    "start": "1577480",
    "end": "1583660"
  },
  {
    "text": "JavaScript",
    "start": "1583660",
    "end": "1586440"
  },
  {
    "text": "pretty cool huh all right",
    "start": "1592290",
    "end": "1597780"
  },
  {
    "text": "well let's continue so we're gonna add a",
    "start": "1599429",
    "end": "1606520"
  },
  {
    "start": "1604000",
    "end": "1653000"
  },
  {
    "text": "few buttons for new edit and delete right below this select and we need",
    "start": "1606520",
    "end": "1615520"
  },
  {
    "text": "these methods now new instrument button click Edit instrument button click and delete button click we'll just create",
    "start": "1615520",
    "end": "1622120"
  },
  {
    "text": "those empty for now so we'll actually",
    "start": "1622120",
    "end": "1628720"
  },
  {
    "text": "run",
    "start": "1628720",
    "end": "1631169"
  },
  {
    "text": "and not doing too much here not at all",
    "start": "1635710",
    "end": "1640919"
  },
  {
    "text": "all right so let's continue and these are you can see these don't have any particular signature they're just void",
    "start": "1640919",
    "end": "1649260"
  },
  {
    "text": "all right so now we're going to add a",
    "start": "1649260",
    "end": "1655840"
  },
  {
    "start": "1653000",
    "end": "1674000"
  },
  {
    "text": "boolean disabled instrument edit button because the initial state of this we",
    "start": "1655840",
    "end": "1661960"
  },
  {
    "text": "should not allow a user to click edit or delete until one of the you know until",
    "start": "1661960",
    "end": "1670450"
  },
  {
    "text": "one of the items has been selected it doesn't make any sense so that's how it",
    "start": "1670450",
    "end": "1676090"
  },
  {
    "start": "1674000",
    "end": "1724000"
  },
  {
    "text": "will look right up upfront yeah and now",
    "start": "1676090",
    "end": "1682870"
  },
  {
    "text": "we have to modify the edit and delete button so that with the disabled attribute so they can pay attention to",
    "start": "1682870",
    "end": "1689200"
  },
  {
    "text": "that right so disabled equals at disable",
    "start": "1689200",
    "end": "1701260"
  },
  {
    "text": "instrument edit to button so now these",
    "start": "1701260",
    "end": "1712330"
  },
  {
    "text": "guys are in their proper state for you know now we have to do the rest of it which is when one item is selected we",
    "start": "1712330",
    "end": "1720039"
  },
  {
    "text": "will enable those buttons so we have to",
    "start": "1720039",
    "end": "1725470"
  },
  {
    "start": "1724000",
    "end": "1780000"
  },
  {
    "text": "have a selected instrument let's do that",
    "start": "1725470",
    "end": "1731158"
  },
  {
    "text": "so we have a selected instrument and an instrument selected method now this one",
    "start": "1733380",
    "end": "1740320"
  },
  {
    "text": "we're going to link in the UI in the select but you notice that there's a",
    "start": "1740320",
    "end": "1746590"
  },
  {
    "text": "change event args here and so the args value to string is going",
    "start": "1746590",
    "end": "1753100"
  },
  {
    "text": "to be past this value right there which",
    "start": "1753100",
    "end": "1758110"
  },
  {
    "text": "is the ID so now all I'm going to do is do a little link and say the selected",
    "start": "1758110",
    "end": "1765039"
  },
  {
    "text": "instrument is from X and instrument where the ID matches and pull out the first one and then",
    "start": "1765039",
    "end": "1772380"
  },
  {
    "text": "disable or enable the buttons accordingly so we have to modify the",
    "start": "1772380",
    "end": "1781960"
  },
  {
    "start": "1780000",
    "end": "1813000"
  },
  {
    "text": "select so that now on change calls",
    "start": "1781960",
    "end": "1790000"
  },
  {
    "text": "instruments selected that's the only",
    "start": "1790000",
    "end": "1795010"
  },
  {
    "text": "change right there boom our buttons",
    "start": "1795010",
    "end": "1806470"
  },
  {
    "text": "still don't do anything but now at least the enable/disable behavior works",
    "start": "1806470",
    "end": "1813240"
  },
  {
    "start": "1813000",
    "end": "1891000"
  },
  {
    "text": "alright so before we go any further let me show you how to do the code-behind thing so of course you know if you're",
    "start": "1813240",
    "end": "1820450"
  },
  {
    "text": "looking at this there's a couple of weird things first of all there's some strange visual studio highlighting here",
    "start": "1820450",
    "end": "1825550"
  },
  {
    "text": "that that is just drives me nuts a little bit I'm not sure why that is but also some things don't work like if I",
    "start": "1825550",
    "end": "1833740"
  },
  {
    "text": "have a variable here and I hit you know control period to pull up refactorings",
    "start": "1833740",
    "end": "1840730"
  },
  {
    "text": "nothing happens so this is a blatant sign that you know you are not in the",
    "start": "1840730",
    "end": "1848560"
  },
  {
    "text": "real visual studio code editor here this is the sort of a a modified half-assed",
    "start": "1848560",
    "end": "1854110"
  },
  {
    "text": "version of it so in order to do code behind it's pretty easy you just wherever your razor page is you add a",
    "start": "1854110",
    "end": "1862210"
  },
  {
    "text": "class that says what called you know whatever the razor file is and then a",
    "start": "1862210",
    "end": "1868210"
  },
  {
    "text": "dot CS at the end so index dot razor dot",
    "start": "1868210",
    "end": "1873640"
  },
  {
    "text": "CS and look at that it's all nested and",
    "start": "1873640",
    "end": "1878860"
  },
  {
    "text": "everything's ready to go now the thing is we can't call this index because",
    "start": "1878860",
    "end": "1886120"
  },
  {
    "text": "index is already a class for that razor page so we actually have to rename it to something else so I'm gonna call it",
    "start": "1886120",
    "end": "1892900"
  },
  {
    "start": "1891000",
    "end": "1925000"
  },
  {
    "text": "index code",
    "start": "1892900",
    "end": "1895710"
  },
  {
    "text": "so here's index code that has all of the same code in it and also derives from",
    "start": "1898410",
    "end": "1905620"
  },
  {
    "text": "component base has all the same code in it that we currently have in the code block in the index page itself right our",
    "start": "1905620",
    "end": "1915150"
  },
  {
    "text": "blank button handlers our instruments are uninitialized everything is exactly",
    "start": "1915150",
    "end": "1920320"
  },
  {
    "text": "the same now all we have to do is change",
    "start": "1920320",
    "end": "1928120"
  },
  {
    "start": "1925000",
    "end": "1980000"
  },
  {
    "text": "index razor to inherit from that code",
    "start": "1928120",
    "end": "1933330"
  },
  {
    "text": "and completely delete the code block so",
    "start": "1933450",
    "end": "1940480"
  },
  {
    "text": "now you can see inherits at inherits index code everything else exactly the",
    "start": "1940480",
    "end": "1945820"
  },
  {
    "text": "same here's our instruments here's our button but now we have this beautiful",
    "start": "1945820",
    "end": "1952890"
  },
  {
    "text": "full visual studio experience of editing",
    "start": "1952890",
    "end": "1958320"
  },
  {
    "text": "you know control period brings up the refactorings all that stuff and of",
    "start": "1958320",
    "end": "1965710"
  },
  {
    "text": "course it works just like before",
    "start": "1965710",
    "end": "1968850"
  },
  {
    "text": "all right so another change we're going to make is to show the selected",
    "start": "1979220",
    "end": "1985070"
  },
  {
    "start": "1980000",
    "end": "2011000"
  },
  {
    "text": "instrument as selected in the list because now we have a selected",
    "start": "1985070",
    "end": "1992360"
  },
  {
    "text": "instrument all right so let's reflect if",
    "start": "1992360",
    "end": "1997850"
  },
  {
    "text": "it gets set right then we're going to use the selected attribute otherwise",
    "start": "1997850",
    "end": "2005110"
  },
  {
    "text": "we're not going to use it okay so we're",
    "start": "2005110",
    "end": "2012640"
  },
  {
    "start": "2011000",
    "end": "2072000"
  },
  {
    "text": "going to start with the code to delete an instrument and that's here in the",
    "start": "2012640",
    "end": "2022480"
  },
  {
    "text": "delete instrument button click so if the",
    "start": "2022480",
    "end": "2028390"
  },
  {
    "text": "selected instrument is not know in other words we have one that's selected we're going to remove that from our",
    "start": "2028390",
    "end": "2033520"
  },
  {
    "text": "instruments collection excuse me and just an easy way out if we still have",
    "start": "2033520",
    "end": "2041380"
  },
  {
    "text": "instruments in the list we're going to set the selected instrument to the first one rather than trying to figure out you",
    "start": "2041380",
    "end": "2046990"
  },
  {
    "text": "know which one was before it or anything like that I guess we could set it to last might be better but you never know",
    "start": "2046990",
    "end": "2054490"
  },
  {
    "text": "you might be in the middle of the list all right so let's just see if that works oh it's not going to work yet",
    "start": "2054490",
    "end": "2060398"
  },
  {
    "text": "because we haven't wired up oh yeah yeah we have yeah yeah no work all right so",
    "start": "2060399",
    "end": "2066608"
  },
  {
    "text": "drums delete there we go yeah that was easy alright so now we're going to talk",
    "start": "2066609",
    "end": "2074858"
  },
  {
    "start": "2072000",
    "end": "2276000"
  },
  {
    "text": "about components we're going to actually build a component that will allow us to add an instrument or edit an instrument",
    "start": "2074859",
    "end": "2083138"
  },
  {
    "text": "you only field is name so when you see it's going to be very simple but we will",
    "start": "2083139",
    "end": "2089679"
  },
  {
    "text": "be able to use it as a component and after we do that for musician the musician will have its own editor but it",
    "start": "2089679",
    "end": "2097060"
  },
  {
    "text": "will be using a generic component that we can reuse with different types that's",
    "start": "2097060",
    "end": "2102550"
  },
  {
    "text": "going to be cool so we're going to add a new component called instrument editor",
    "start": "2102550",
    "end": "2110260"
  },
  {
    "text": "and it's going to be a RZR component it's a little bit different than what you might think what you might think is",
    "start": "2110260",
    "end": "2116490"
  },
  {
    "text": "when you right-click on pages and say add and it says raiser page that's not",
    "start": "2116490",
    "end": "2122220"
  },
  {
    "text": "what you want you want a new item over in web a RZR component that's going to",
    "start": "2122220",
    "end": "2131790"
  },
  {
    "text": "give you a a blazer raiser component",
    "start": "2131790",
    "end": "2136010"
  },
  {
    "text": "instrument editor okay I'm just gonna",
    "start": "2137690",
    "end": "2143990"
  },
  {
    "text": "replace that with my clipboard inheritance here so we have a boolean",
    "start": "2143990",
    "end": "2151790"
  },
  {
    "text": "show instrument panel this is one of our our you know our methods I'm sorry our",
    "start": "2151790",
    "end": "2160410"
  },
  {
    "text": "our fields here and we have these things called parameters these are essentially",
    "start": "2160410",
    "end": "2166079"
  },
  {
    "text": "public properties all right parameters are how you pass data in and out from",
    "start": "2166079",
    "end": "2173460"
  },
  {
    "text": "your component to your calling code and you also notice that three of these are",
    "start": "2173460",
    "end": "2179069"
  },
  {
    "text": "of type event callback so those are essentially event handlers or you know",
    "start": "2179069",
    "end": "2185550"
  },
  {
    "text": "events that the calling code can handle",
    "start": "2185550",
    "end": "2191240"
  },
  {
    "text": "way different than your standard c-sharp event model right easy actually much",
    "start": "2191240",
    "end": "2199619"
  },
  {
    "text": "easier all right well anyway we have one four cancel pressed instrument added",
    "start": "2199619",
    "end": "2204900"
  },
  {
    "text": "instrument updated this component here isn't actually going to do any management of your instrument list or",
    "start": "2204900",
    "end": "2212609"
  },
  {
    "text": "any data access or anything like that it's purely a UI component that's going to allow you to change the name and then",
    "start": "2212609",
    "end": "2221040"
  },
  {
    "text": "it will you know then it has these buttons one for submit and one for cancel also notice that the text where",
    "start": "2221040",
    "end": "2231750"
  },
  {
    "text": "is it the text of the button submit button text is is also something that we",
    "start": "2231750",
    "end": "2239760"
  },
  {
    "text": "can change right because you would either be add or update depending",
    "start": "2239760",
    "end": "2245630"
  },
  {
    "text": "which one we're doing and then we have public methods for a new instrument edit",
    "start": "2245630",
    "end": "2252680"
  },
  {
    "text": "instrument and we have the handlers for the submit button pressed and the cancel",
    "start": "2252680",
    "end": "2258170"
  },
  {
    "text": "button pressed and this is how we invoke the method invoked beat the event",
    "start": "2258170",
    "end": "2266440"
  },
  {
    "text": "instrument added invoke async so in here",
    "start": "2266440",
    "end": "2278480"
  },
  {
    "start": "2276000",
    "end": "2352000"
  },
  {
    "text": "we have these validation controls and you might have noticed this that in this",
    "start": "2278480",
    "end": "2285590"
  },
  {
    "text": "div we have instead of an input tag we",
    "start": "2285590",
    "end": "2291320"
  },
  {
    "text": "have an input text tag and there's also a couple things here that you may not",
    "start": "2291320",
    "end": "2297290"
  },
  {
    "text": "have seen before one is an edit form and within that data annotations validator",
    "start": "2297290",
    "end": "2303050"
  },
  {
    "text": "and a validation summary so this is blazars validation system and the the",
    "start": "2303050",
    "end": "2312770"
  },
  {
    "text": "edit form what's ever whatever is in an edit form that tells Blaser okay we're doing possible validation here the data",
    "start": "2312770",
    "end": "2320750"
  },
  {
    "text": "annotations validator says I want you to validate against the annotations that are in the model we don't have any yet",
    "start": "2320750",
    "end": "2327200"
  },
  {
    "text": "but we're gonna add them and we're gonna say that the maximum length of that name",
    "start": "2327200",
    "end": "2333200"
  },
  {
    "text": "field can be 50 characters and that's it so with using the input text it's",
    "start": "2333200",
    "end": "2339380"
  },
  {
    "text": "exactly like the input tag except that it has this extra validation stuff and",
    "start": "2339380",
    "end": "2345230"
  },
  {
    "text": "you're going to use the bind value to bind that so let's add some validation",
    "start": "2345230",
    "end": "2354050"
  },
  {
    "start": "2352000",
    "end": "2389000"
  },
  {
    "text": "to the instrument class that's a models",
    "start": "2354050",
    "end": "2359360"
  },
  {
    "text": "instrument so we're gonna use the system component",
    "start": "2359360",
    "end": "2365140"
  },
  {
    "text": "model data annotations namespace we're gonna add required as an attribute for",
    "start": "2365140",
    "end": "2370990"
  },
  {
    "text": "name so they can't get away with passing anything and then we're also gonna say that maximum number of characters is 50",
    "start": "2370990",
    "end": "2379210"
  },
  {
    "text": "and if they exceed that we even have an error message here very cool so far all",
    "start": "2379210",
    "end": "2389740"
  },
  {
    "start": "2389000",
    "end": "2522000"
  },
  {
    "text": "right so now the instrument editor code this is what I was just talking about this sort of the tour of the code one",
    "start": "2389740",
    "end": "2397060"
  },
  {
    "text": "thing you might notice is that I have a button type equals submit for the submit",
    "start": "2397060",
    "end": "2404050"
  },
  {
    "text": "button and button type equals button for the cancel button if you didn't put this",
    "start": "2404050",
    "end": "2409150"
  },
  {
    "text": "in here you RAZR would treat the cancel button also as a submit button and what",
    "start": "2409150",
    "end": "2415480"
  },
  {
    "text": "what you do with submit is right here on valid submit equals submit button",
    "start": "2415480",
    "end": "2421060"
  },
  {
    "text": "pressed but it's only going to happen if all the validations pass all right cool",
    "start": "2421060",
    "end": "2431880"
  },
  {
    "text": "so now let's go back to index raiser and we'll add the mark up to instantiate",
    "start": "2431880",
    "end": "2438520"
  },
  {
    "text": "that component",
    "start": "2438520",
    "end": "2441210"
  },
  {
    "text": "all right so we have an instrument error message we have to add we're gonna add",
    "start": "2444010",
    "end": "2450160"
  },
  {
    "text": "code for all of these things I guess I'll come back to this after we add that code so we get rid of the",
    "start": "2450160",
    "end": "2456460"
  },
  {
    "text": "squiggles in particular pay attention to at ref so let me go to my code behind",
    "start": "2456460",
    "end": "2463150"
  },
  {
    "text": "here all right so we have an instrument",
    "start": "2463150",
    "end": "2471760"
  },
  {
    "text": "editor this is the component that we just made instrument editor reference",
    "start": "2471760",
    "end": "2476890"
  },
  {
    "text": "called instrument editor and in a message and all sorts of other things",
    "start": "2476890",
    "end": "2483450"
  },
  {
    "text": "going back to index now that @r f equals instrument editor basically links our",
    "start": "2483450",
    "end": "2490660"
  },
  {
    "text": "code reference to this particular instance of the component so that's how",
    "start": "2490660",
    "end": "2497320"
  },
  {
    "text": "we can grab a reference to the component and then call methods on it these are",
    "start": "2497320",
    "end": "2502570"
  },
  {
    "text": "the parameters right here instrument equals selected instrument so",
    "start": "2502570",
    "end": "2508300"
  },
  {
    "text": "we're passing instrument as a parameter actually and cancel pressed and",
    "start": "2508300",
    "end": "2516010"
  },
  {
    "text": "instrument added instrument updated all of those things also need to fill in the",
    "start": "2516010",
    "end": "2524110"
  },
  {
    "start": "2522000",
    "end": "2536000"
  },
  {
    "text": "button click handlers for new and edit instrument which will be right here",
    "start": "2524110",
    "end": "2532170"
  },
  {
    "text": "and now we've also added a variable called disable instrument list and you",
    "start": "2536100",
    "end": "2541540"
  },
  {
    "text": "can use that to enable and disable the list of instruments while editing or adding so that we can use to disable the",
    "start": "2541540",
    "end": "2548830"
  },
  {
    "text": "list because we don't want to select an item and then say edit and then leave",
    "start": "2548830",
    "end": "2557080"
  },
  {
    "text": "this select statement enabled a select tag enables so that the user can click",
    "start": "2557080",
    "end": "2562780"
  },
  {
    "text": "on another one want that",
    "start": "2562780",
    "end": "2568380"
  },
  {
    "start": "2568000",
    "end": "2647000"
  },
  {
    "text": "now there's another thing here my code does which is a stupid JavaScript script",
    "start": "2568540",
    "end": "2573670"
  },
  {
    "text": "trick for setting focus oh yeah maybe it'll run right now maybe it won't let's",
    "start": "2573670",
    "end": "2579250"
  },
  {
    "text": "just see and I'll show you the difference between these two all right",
    "start": "2579250",
    "end": "2590350"
  },
  {
    "text": "so I click on guitar and I edit there it is but notice that the text guitar you",
    "start": "2590350",
    "end": "2596320"
  },
  {
    "text": "know this input is not in focus I have to actually click on it before I can do any editing would it be cool if it was",
    "start": "2596320",
    "end": "2605890"
  },
  {
    "text": "just in focus right but it turns out there is no focus method you can call on",
    "start": "2605890",
    "end": "2613830"
  },
  {
    "text": "these tags right I can't I can't get a",
    "start": "2613830",
    "end": "2619990"
  },
  {
    "text": "reference to the actual tag itself because that's in the DOM and they",
    "start": "2619990",
    "end": "2625630"
  },
  {
    "text": "generally frown on that so at this point in time blazer doesn't support that in",
    "start": "2625630",
    "end": "2631840"
  },
  {
    "text": "the box but you can use JavaScript Interop to achieve it and talking to Steve Sanderson",
    "start": "2631840",
    "end": "2639520"
  },
  {
    "text": "he says that's most likely coming along with some other things right so check",
    "start": "2639520",
    "end": "2645460"
  },
  {
    "text": "this out I'm going to add some JavaScript to the",
    "start": "2645460",
    "end": "2651700"
  },
  {
    "start": "2647000",
    "end": "2758000"
  },
  {
    "text": "main file instead of having an index.html we have an underscore host",
    "start": "2651700",
    "end": "2657190"
  },
  {
    "text": "CSS HTML and this is sort of the the main page template for everything and",
    "start": "2657190",
    "end": "2666640"
  },
  {
    "text": "I'm going to add this script here so I've got a window dot set focus method",
    "start": "2666640",
    "end": "2673000"
  },
  {
    "text": "and it passes an ID you know an ID of of",
    "start": "2673000",
    "end": "2678250"
  },
  {
    "text": "an element and instead of just calling element dot focus and elements select",
    "start": "2678250",
    "end": "2684060"
  },
  {
    "text": "there you'll notice that I'm doing a little trick here because we're going to",
    "start": "2684060",
    "end": "2689920"
  },
  {
    "text": "be calling this from a button click handler right the element to edit won't",
    "start": "2689920",
    "end": "2698560"
  },
  {
    "text": "even exist when you're in that it won't exist yet when in that button handler so you have to do",
    "start": "2698560",
    "end": "2705260"
  },
  {
    "text": "some asynchronous trick trickery to make this work so what I'm doing is I'm",
    "start": "2705260",
    "end": "2710420"
  },
  {
    "text": "calling this private function internal focus with a 10 millisecond timeout and",
    "start": "2710420",
    "end": "2716110"
  },
  {
    "text": "there I get the element by ID but right away the first time it's going to be no",
    "start": "2716110",
    "end": "2722420"
  },
  {
    "text": "and so then we're going to call ourselves in another 10 milliseconds",
    "start": "2722420",
    "end": "2727640"
  },
  {
    "text": "with a set timeout and exit and so this",
    "start": "2727640",
    "end": "2732680"
  },
  {
    "text": "is going to keep going on until such time as you know the element reference",
    "start": "2732680",
    "end": "2738980"
  },
  {
    "text": "comes back not know and then we'll set the focus and select and yep it's kind of a janky hack but it works and you",
    "start": "2738980",
    "end": "2747890"
  },
  {
    "text": "know let's just hope that we don't get into an infinite loop there but that would be your fault all right so here's",
    "start": "2747890",
    "end": "2759020"
  },
  {
    "start": "2758000",
    "end": "2774000"
  },
  {
    "text": "how we call JavaScript we inject this ijs runtime and that's going to be an",
    "start": "2759020",
    "end": "2764420"
  },
  {
    "text": "instrument editor because that's where we're doing this IJ s runtime and then we have a variable",
    "start": "2764420",
    "end": "2771440"
  },
  {
    "text": "J s that we can use and here's the code oh we have to give our input text",
    "start": "2771440",
    "end": "2779240"
  },
  {
    "start": "2774000",
    "end": "2801000"
  },
  {
    "text": "element an ID right instrument dot name so let's do that that's this guy right",
    "start": "2779240",
    "end": "2786050"
  },
  {
    "text": "here",
    "start": "2786050",
    "end": "2788290"
  },
  {
    "text": "come on what you doing I guess I selected that too all right",
    "start": "2791320",
    "end": "2797900"
  },
  {
    "text": "here we go so ID instrument dot name because that's what we're going to pass and now we're",
    "start": "2797900",
    "end": "2803900"
  },
  {
    "text": "going to in the new instrument and edit instrument we're going to await J s in",
    "start": "2803900",
    "end": "2808930"
  },
  {
    "text": "invoke void async void because it returns nothing but we could also do",
    "start": "2808930",
    "end": "2814279"
  },
  {
    "text": "invoke async and return a value so we",
    "start": "2814279",
    "end": "2819440"
  },
  {
    "text": "have that set focus that's what we're going to call so that is new instrument",
    "start": "2819440",
    "end": "2827539"
  },
  {
    "text": "and edit instrument right there so now",
    "start": "2827539",
    "end": "2833059"
  },
  {
    "text": "they've changed to have the async and return a task which is nothing and now",
    "start": "2833059",
    "end": "2841970"
  },
  {
    "text": "when we say new instrument and edit instrument we show the panel we can do",
    "start": "2841970",
    "end": "2848690"
  },
  {
    "text": "that set focus a little trick",
    "start": "2848690",
    "end": "2852519"
  },
  {
    "text": "mm that would be the same in webassembly",
    "start": "2858650",
    "end": "2869849"
  },
  {
    "text": "blazer as well nothing server-side about that okay what",
    "start": "2869849",
    "end": "2880890"
  },
  {
    "text": "that actually work let's say we go back to index raised RCS okay",
    "start": "2880890",
    "end": "2892670"
  },
  {
    "text": "make sure",
    "start": "2892670",
    "end": "2895880"
  },
  {
    "text": "keyboards keyboard update yeah yeah it",
    "start": "2899550",
    "end": "2906960"
  },
  {
    "text": "worked okay and we can delete so we can",
    "start": "2906960",
    "end": "2912119"
  },
  {
    "text": "also add there we go so our basic crud",
    "start": "2912119",
    "end": "2921210"
  },
  {
    "text": "operations are working so now let's talk about generic components this is really cool the musician editor has you know",
    "start": "2921210",
    "end": "2929160"
  },
  {
    "start": "2922000",
    "end": "2972000"
  },
  {
    "text": "the name but it also has that list of instruments right so I have this another",
    "start": "2929160",
    "end": "2936540"
  },
  {
    "text": "blog post that I wrote before well I'll grab this code first and this is",
    "start": "2936540",
    "end": "2945900"
  },
  {
    "text": "publicly available too in this blog post which is links right down here oh man",
    "start": "2945900",
    "end": "2952220"
  },
  {
    "text": "there's a lot of code here I'll just go to it it's an object picker dot blazer",
    "start": "2952220",
    "end": "2963540"
  },
  {
    "text": "I'm sorry dot app fie next dot com",
    "start": "2963540",
    "end": "2971240"
  },
  {
    "text": "here's the blog post so that is what the UI looks like right you have the list of",
    "start": "2971480",
    "end": "2978210"
  },
  {
    "start": "2972000",
    "end": "3227000"
  },
  {
    "text": "all instruments on the left the selected instruments on the right all of the",
    "start": "2978210",
    "end": "2983310"
  },
  {
    "text": "names of the instruments and when you select one you can add a single one had all of them or deselects all of them and",
    "start": "2983310",
    "end": "2991290"
  },
  {
    "text": "it moves the instruments from one side to the other but the cool thing is this is such a reusable component because I",
    "start": "2991290",
    "end": "2996960"
  },
  {
    "text": "don't want it just to be hard-coded for instruments I want to be able to use that for you know musicians in the band",
    "start": "2996960",
    "end": "3003740"
  },
  {
    "text": "editor right what musicians are in this band I want to be able to pick musicians so I wanted a generic thing and that's",
    "start": "3003740",
    "end": "3012080"
  },
  {
    "text": "exactly what we have here so we're going to build a generic component called object picker and let's just go do that",
    "start": "3012080",
    "end": "3022900"
  },
  {
    "text": "and I am object picker so the magic of",
    "start": "3023960",
    "end": "3042869"
  },
  {
    "text": "this starts with type / M at type parameter I'm using this type in",
    "start": "3042869",
    "end": "3057780"
  },
  {
    "text": "here is inferred okay and here's where it's inferred I have parameters which",
    "start": "3057780",
    "end": "3065549"
  },
  {
    "text": "again are properties right so I have this list of selected items which is a",
    "start": "3065549",
    "end": "3074280"
  },
  {
    "text": "list of T item this is a parameter so I'm gonna pass in my list of instruments it's gonna say ah T item is now",
    "start": "3074280",
    "end": "3081000"
  },
  {
    "text": "instrument so anywhere we're using T item as a as a type we know it's going",
    "start": "3081000",
    "end": "3087510"
  },
  {
    "text": "to be an instrument so I have the string property item type which we're gonna set",
    "start": "3087510",
    "end": "3094440"
  },
  {
    "text": "to instrument and then plural which will be instruments right so this is just for",
    "start": "3094440",
    "end": "3100049"
  },
  {
    "text": "UI purposes so we can say all instruments and selected instruments the text property name of the instrument",
    "start": "3100049",
    "end": "3106710"
  },
  {
    "text": "which is what shows up in the list I'm going to use reflection for this so that would be name and the value property",
    "start": "3106710",
    "end": "3113690"
  },
  {
    "text": "name which would be ID so we have our list of all items in our list of",
    "start": "3113690",
    "end": "3120390"
  },
  {
    "text": "selected items that we start with okay now we've got a tea item property",
    "start": "3120390",
    "end": "3127170"
  },
  {
    "text": "selected item which is going to be instrument in our case and then all of",
    "start": "3127170",
    "end": "3132660"
  },
  {
    "text": "the code to pull out the value or the text is right there with a little bit of",
    "start": "3132660",
    "end": "3138329"
  },
  {
    "text": "reflection item value of a of an item returns the get type get property of the",
    "start": "3138329",
    "end": "3146430"
  },
  {
    "text": "value get value to string and the same",
    "start": "3146430",
    "end": "3151770"
  },
  {
    "text": "with the text now remember I told you about this override on parameters",
    "start": "3151770",
    "end": "3157290"
  },
  {
    "text": "this is a good example of when you would use that you can't use on initialize because you don't know what T item is T",
    "start": "3157290",
    "end": "3163890"
  },
  {
    "text": "item is a parameter that's passed in right so as soon as the code sets that",
    "start": "3163890",
    "end": "3171510"
  },
  {
    "text": "all items are selected items this is going to this is going to fire so we'll",
    "start": "3171510",
    "end": "3176730"
  },
  {
    "text": "have well know that all items is an instrument we're not going to have anything hard-coded in here we're going",
    "start": "3176730",
    "end": "3182070"
  },
  {
    "text": "to use T item you know the ID all of",
    "start": "3182070",
    "end": "3187500"
  },
  {
    "text": "that so the mark-up itself is just a",
    "start": "3187500",
    "end": "3193710"
  },
  {
    "text": "table right of course could be anything you could be using you know bootstrap",
    "start": "3193710",
    "end": "3201540"
  },
  {
    "text": "grids or whatever but this one's just the table and then you've got the",
    "start": "3201540",
    "end": "3209610"
  },
  {
    "text": "buttons the list on each side the",
    "start": "3209610",
    "end": "3215790"
  },
  {
    "text": "handlers all that it's pretty cool where the heck was I oh yeah yeah I am",
    "start": "3215790",
    "end": "3226100"
  },
  {
    "text": "alright so now we're going to create musician editor which is going to have",
    "start": "3226550",
    "end": "3232230"
  },
  {
    "start": "3227000",
    "end": "3294000"
  },
  {
    "text": "an instance of this in it pages and new",
    "start": "3232230",
    "end": "3238410"
  },
  {
    "text": "item musician editor alright so this is",
    "start": "3238410",
    "end": "3251400"
  },
  {
    "text": "going to have the same kind of thing as the instrument editor except that after the name we're we have our object picker",
    "start": "3251400",
    "end": "3260150"
  },
  {
    "text": "instance and now we have all items",
    "start": "3260150",
    "end": "3266300"
  },
  {
    "text": "selected items right these are all based",
    "start": "3266300",
    "end": "3273060"
  },
  {
    "text": "on what we have in here so we're passing in all instruments we have a selected",
    "start": "3273060",
    "end": "3278340"
  },
  {
    "text": "instruments somewhere",
    "start": "3278340",
    "end": "3284030"
  },
  {
    "text": "all right edit add submit button pressed all that got our JavaScript focus all",
    "start": "3284030",
    "end": "3296730"
  },
  {
    "start": "3294000",
    "end": "3328000"
  },
  {
    "text": "right so now we're going to create a few mission a few musicians in that index",
    "start": "3296730",
    "end": "3302250"
  },
  {
    "text": "file in the code behind where we have this we'll get rid of that and replace",
    "start": "3302250",
    "end": "3311880"
  },
  {
    "text": "it so now we're adding the instruments but we're also adding musicians piano",
    "start": "3311880",
    "end": "3319710"
  },
  {
    "text": "Patti shredding Shelly thumping Pheo and banging Bob guess what",
    "start": "3319710",
    "end": "3327059"
  },
  {
    "text": "instruments they play all right so now we'll add the rest of the code in the index code behind to support the",
    "start": "3327059",
    "end": "3332579"
  },
  {
    "start": "3328000",
    "end": "3351000"
  },
  {
    "text": "musician UI right there and this is you",
    "start": "3332579",
    "end": "3339690"
  },
  {
    "text": "know the same stuff that you've seen before delete musician button click musician selected edit musician",
    "start": "3339690",
    "end": "3346410"
  },
  {
    "text": "cancelled added updated all that stuff all the goo and the markup to edit",
    "start": "3346410",
    "end": "3353460"
  },
  {
    "start": "3351000",
    "end": "3381000"
  },
  {
    "text": "musicians goes in the index file itself right below the instrument editor all",
    "start": "3353460",
    "end": "3363119"
  },
  {
    "text": "right so here's our musician select here's our new button edit button delete",
    "start": "3363119",
    "end": "3370770"
  },
  {
    "text": "button and then our musician the editor component we have a reference to it everything should be good in the world",
    "start": "3370770",
    "end": "3379520"
  },
  {
    "text": "so and the rest of this code just shows what that the rest of this document just",
    "start": "3380660",
    "end": "3387480"
  },
  {
    "start": "3381000",
    "end": "3481000"
  },
  {
    "text": "shows what the object picker is it goes through all the code in there",
    "start": "3387480",
    "end": "3393770"
  },
  {
    "text": "all right so we got our musicians here piano Patti let's edit piano Patti piano",
    "start": "3394480",
    "end": "3403480"
  },
  {
    "text": "Patti plays keyboards gonna update shredding Shelley plays guitar and of",
    "start": "3403480",
    "end": "3413710"
  },
  {
    "text": "course you know these all work as expected there's a lot of enabling and",
    "start": "3413710",
    "end": "3423760"
  },
  {
    "text": "disabling of buttons going on here thump and Theo plays bass banging Bob plays",
    "start": "3423760",
    "end": "3435339"
  },
  {
    "text": "drums all right let's what's that a new",
    "start": "3435339",
    "end": "3442250"
  },
  {
    "text": "instrument kazoo I knew a musician",
    "start": "3442250",
    "end": "3455380"
  },
  {
    "text": "creepy Carl plays kazoo there you go",
    "start": "3455380",
    "end": "3463579"
  },
  {
    "text": "and so if I you know I can edit these and you can see that they're associated",
    "start": "3463579",
    "end": "3468790"
  },
  {
    "text": "accordingly",
    "start": "3468790",
    "end": "3471790"
  },
  {
    "text": "all right so in the three minutes that are left I'll take any questions you",
    "start": "3473859",
    "end": "3479030"
  },
  {
    "text": "might have comments concerns yeah oh",
    "start": "3479030",
    "end": "3485079"
  },
  {
    "start": "3481000",
    "end": "3600000"
  },
  {
    "text": "yeah yeah check this out styling look at this bootstrap that",
    "start": "3487599",
    "end": "3499760"
  },
  {
    "text": "bootstrap min CSS right there just change it to your favorite bootstrap CSS",
    "start": "3499760",
    "end": "3506060"
  },
  {
    "text": "file and everything updates everything changes yeah that's what they use in terms of",
    "start": "3506060",
    "end": "3512440"
  },
  {
    "text": "using other CSS things like sass and all that I would urge you to check out the",
    "start": "3512440",
    "end": "3518690"
  },
  {
    "text": "sessions at dotnet can't focus on blazer because uh one of the guys there did a",
    "start": "3518690",
    "end": "3524390"
  },
  {
    "text": "great session on all the CSS things that you can do with blazer anyone else",
    "start": "3524390",
    "end": "3531640"
  },
  {
    "text": "question yeah",
    "start": "3531640",
    "end": "3535328"
  },
  {
    "text": "does the server know about it yes yeah",
    "start": "3540160",
    "end": "3548060"
  },
  {
    "text": "yeah and that's the whole there's a whole Interop layer but between JavaScript and blaze are just for that",
    "start": "3548060",
    "end": "3554060"
  },
  {
    "text": "purpose yeah and can go back the other way too",
    "start": "3554060",
    "end": "3559339"
  },
  {
    "text": "javascript can call netcode so yeah",
    "start": "3559339",
    "end": "3565119"
  },
  {
    "text": "javascript is dead long live javascript anyone else yeah",
    "start": "3565119",
    "end": "3575230"
  },
  {
    "text": "no that's a good question can you generate type constraints you know like",
    "start": "3577270",
    "end": "3582349"
  },
  {
    "text": "say I only want you know to allow i observables or whatever no you can't but",
    "start": "3582349",
    "end": "3590230"
  },
  {
    "text": "what did Ryan say about that I think he said that that is something that they're working on because a lot of people want",
    "start": "3590230",
    "end": "3596750"
  },
  {
    "text": "that feature yeah else you like it it's",
    "start": "3596750",
    "end": "3602540"
  },
  {
    "text": "good right it's good all right I'll see you later Thanks [Applause]",
    "start": "3602540",
    "end": "3611139"
  }
]