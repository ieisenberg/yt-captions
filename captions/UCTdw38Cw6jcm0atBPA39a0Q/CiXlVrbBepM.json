[
  {
    "text": "hello welcome my name is Daniel placed uh I work on theet the net team at Microsoft",
    "start": "1719",
    "end": "9400"
  },
  {
    "text": "and I'm going to talk about Ms build and some of the stuff that's been going on with that um we'll cover uh kind of the",
    "start": "9400",
    "end": "17640"
  },
  {
    "text": "journey that we had away from Ms build a little bit to project Jason and back and",
    "start": "17640",
    "end": "22800"
  },
  {
    "text": "why that happened uh and then a lot of the improvements that have come in Visual Studio 2017 and in that are",
    "start": "22800",
    "end": "31439"
  },
  {
    "text": "coming in update three uh for Ms build and net core and net standard projects",
    "start": "31439",
    "end": "38440"
  },
  {
    "text": "uh and then we'll look at basic Ms build Concepts so that you can understand how",
    "start": "38440",
    "end": "44160"
  },
  {
    "text": "to customize your build uh and we'll see how to investigate see what's going on with the build figure out what's going",
    "start": "44160",
    "end": "50520"
  },
  {
    "text": "wrong and uh we'll look at uh in these new style of projects kind of the",
    "start": "50520",
    "end": "55640"
  },
  {
    "text": "defaults some of the defaults that apply and how to modify those uh if you need",
    "start": "55640",
    "end": "61440"
  },
  {
    "text": "uh so I joined Microsoft in 2008 because I just love net and I was really excited",
    "start": "61440",
    "end": "67119"
  },
  {
    "text": "about it uh and I ended up on the MEF the managed extensibility framework team",
    "start": "67119",
    "end": "72920"
  },
  {
    "text": "uh that was one of the uh first open source uh net projects at Microsoft and",
    "start": "72920",
    "end": "80840"
  },
  {
    "text": "I say quote unquote un open source because it was open source in the sense",
    "start": "80840",
    "end": "86079"
  },
  {
    "text": "that uh periodically we would take the source and we would copy it over to clex",
    "start": "86079",
    "end": "91400"
  },
  {
    "text": "uh but there wasn't any mechanism to accept contributions uh and if you wanted to",
    "start": "91400",
    "end": "97200"
  },
  {
    "text": "change the source code uh and use your own version there was no really easy way",
    "start": "97200",
    "end": "103240"
  },
  {
    "text": "to recompile it with your changes and then drop it in as a replacement um so",
    "start": "103240",
    "end": "109719"
  },
  {
    "text": "uh I'm really happy with what we've been doing over the past several years uh with a Net Framework uh moving to you",
    "start": "109719",
    "end": "117119"
  },
  {
    "text": "know almost everything is open source it's open source by default uh getting lots of great contributions having",
    "start": "117119",
    "end": "122320"
  },
  {
    "text": "development in the open and everything uh but that doesn't mean that you know we've done everything perfectly there's",
    "start": "122320",
    "end": "128239"
  },
  {
    "text": "been uh some bumps along the way uh and uh so first I'm going to get into a",
    "start": "128239",
    "end": "134760"
  },
  {
    "text": "little bit of the background of of what we've been doing for context uh and so we have the Net Framework this is the",
    "start": "134760",
    "end": "141680"
  },
  {
    "text": "the platform that we have that has traditionally supported desktop and web apps uh mainly uh and then zamaron is",
    "start": "141680",
    "end": "150040"
  },
  {
    "text": "based on mono that's another net platform uh that supports uh IOS and",
    "start": "150040",
    "end": "156599"
  },
  {
    "text": "Android apps uh and then uh the new thing is net core this is a completely",
    "start": "156599",
    "end": "163200"
  },
  {
    "text": "open-source and crossplatform version of net it runs on Linux on Mac OS and on",
    "start": "163200",
    "end": "170840"
  },
  {
    "text": "Windows um and each of these kind of has different app models uh for the types of",
    "start": "170840",
    "end": "176159"
  },
  {
    "text": "apps you can build with it and they each have their own base libraries uh so",
    "start": "176159",
    "end": "181720"
  },
  {
    "text": "there's the Base Class Library set for for each of these Frameworks that has stuff like file IO and Collections and",
    "start": "181720",
    "end": "188720"
  },
  {
    "text": "Link and all of this basic net stuff that you're used to um and that the the",
    "start": "188720",
    "end": "196599"
  },
  {
    "text": "the reach of net is great but when you want to Target net having a separate Base Class library for each one wasn't",
    "start": "196599",
    "end": "203959"
  },
  {
    "text": "uh a great job and so a great thing to do and so what we have is net standard and this is basically a unified Base",
    "start": "203959",
    "end": "210799"
  },
  {
    "text": "Class Library uh that says that the same apis base apis will be available across",
    "start": "210799",
    "end": "216280"
  },
  {
    "text": "all of these St uh platforms um and uh if you've been following the past few",
    "start": "216280",
    "end": "222080"
  },
  {
    "text": "years for the past five or so years we had something called portable class libraries um and I worked on those too",
    "start": "222080",
    "end": "229080"
  },
  {
    "text": "and to me net standards is kind of the new and improved version of of portable class Library so it does do the same",
    "start": "229080",
    "end": "235599"
  },
  {
    "text": "things uh it's better uh and I don't have time to go into the details of that",
    "start": "235599",
    "end": "241400"
  },
  {
    "text": "but I'd be happy to talk to you about that afterwards um so but what we've been doing over the past couple years is",
    "start": "241400",
    "end": "247680"
  },
  {
    "text": "working on net core and and then net standard and when we uh were working on",
    "start": "247680",
    "end": "254239"
  },
  {
    "text": "net core we came up with this new project format called project. Json and",
    "start": "254239",
    "end": "260079"
  },
  {
    "text": "Ms build has traditionally been how you built net apps um but at the time Ms build wasn't open source uh it didn't",
    "start": "260079",
    "end": "266960"
  },
  {
    "text": "run crossplatform and uh it also had kind of a lot of baggage it was verbose hard to edit",
    "start": "266960",
    "end": "274720"
  },
  {
    "text": "project files manually and we were looking at uh tools like nodejs where it was really just simple you just edit a",
    "start": "274720",
    "end": "281000"
  },
  {
    "text": "simple text file and that's your project you don't need any complicated tools uh",
    "start": "281000",
    "end": "286039"
  },
  {
    "text": "and so we came up with this project format which was uh had a lot of great",
    "start": "286039",
    "end": "291120"
  },
  {
    "text": "features um so it's it's simple human editable project files um it doesn't",
    "start": "291120",
    "end": "297240"
  },
  {
    "text": "explicitly list each source code file um it just by default it'll just compile",
    "start": "297240",
    "end": "303680"
  },
  {
    "text": "all of the c or uh Visual Basic or whatever source files you have in the directory um it could produce new get",
    "start": "303680",
    "end": "311639"
  },
  {
    "text": "packages directly um traditionally what you would have to do to create a new new",
    "start": "311639",
    "end": "316759"
  },
  {
    "text": "get package would be to create a new spec file which listed all the things that would go inside the new get package",
    "start": "316759",
    "end": "323800"
  },
  {
    "text": "and the meta data about the new get package um but uh with this format all",
    "start": "323800",
    "end": "329120"
  },
  {
    "text": "of that information was just directly in the project file and you could just say pack this up and it would create a new get package uh and a project could",
    "start": "329120",
    "end": "336360"
  },
  {
    "text": "Target multiple Frameworks so we're introducing this new net core thing we still have the full NET Framework uh",
    "start": "336360",
    "end": "342400"
  },
  {
    "text": "maybe you have portable class libraries wwp zamaron um you could list multiple",
    "start": "342400",
    "end": "348600"
  },
  {
    "text": "Frameworks that it would Target and it would compile the project for each one of those uh which was pretty convenient",
    "start": "348600",
    "end": "355120"
  },
  {
    "text": "if you if you needed to light up platform specific functionality um",
    "start": "355120",
    "end": "360319"
  },
  {
    "text": "and it also let you switch uh you could have a reference to a net package but it",
    "start": "360319",
    "end": "365919"
  },
  {
    "text": "was easy to switch that that out with a local copy of the source so if you find a bug you just clone the source and then",
    "start": "365919",
    "end": "372360"
  },
  {
    "text": "now you're debugging you're fixing the bug and using that local copy so uh that had some some great",
    "start": "372360",
    "end": "379080"
  },
  {
    "text": "advantages but about a year ago we realized that uh we had the switch back",
    "start": "379080",
    "end": "384840"
  },
  {
    "text": "to Ms build and there were uh various reasons for that everything else in net",
    "start": "384840",
    "end": "390919"
  },
  {
    "text": "used Ms build and when we think about net standard we want you to be able to",
    "start": "390919",
    "end": "396319"
  },
  {
    "text": "write libraries that will run on net core but that will also run on NET",
    "start": "396319",
    "end": "401440"
  },
  {
    "text": "Framework and zamaron and wwp and so all project types need to be able to",
    "start": "401440",
    "end": "407720"
  },
  {
    "text": "reference net standard projects but references between something that was Project Json and Ms build in either",
    "start": "407720",
    "end": "414800"
  },
  {
    "text": "direction just we couldn't make that work well we had some hacks that kind of worked but uh it end to end it just",
    "start": "414800",
    "end": "421919"
  },
  {
    "text": "wasn't working very well um and then we have the tooling and the ID Visual Studio understands Ms build projects and",
    "start": "421919",
    "end": "429440"
  },
  {
    "text": "we had written a completely separate piece of project system in Visual Studio",
    "start": "429440",
    "end": "434639"
  },
  {
    "text": "that understood this kind of um but there wasn't a uniform way for tools to work with net projects and when you have",
    "start": "434639",
    "end": "441800"
  },
  {
    "text": "other idees other editors like the whole ecosystem was built around",
    "start": "441800",
    "end": "446919"
  },
  {
    "text": "msuil um and then Ms build uh has uh lots of extensibility",
    "start": "446919",
    "end": "455479"
  },
  {
    "text": "and power you can pretty much do anything you want with Ms build and uh",
    "start": "455479",
    "end": "460720"
  },
  {
    "text": "that wasn't really supported by project Jason so if you just want to compile a set of files for a project that works or",
    "start": "460720",
    "end": "467120"
  },
  {
    "text": "if you just want to do something some functionality that was pre-baked that we had thought of and implemented for you",
    "start": "467120",
    "end": "472759"
  },
  {
    "text": "then that worked in Project Json but if you wanted to extend your build pipeline",
    "start": "472759",
    "end": "477840"
  },
  {
    "text": "uh there wasn't a good end to end way of doing that for example uh some people",
    "start": "477840",
    "end": "483639"
  },
  {
    "text": "want to generate code files you got uh you're using protuff um and so you have a definition of of your protocols uh",
    "start": "483639",
    "end": "491240"
  },
  {
    "text": "before you compile your project you want to generate C code for those interfaces uh and then after you compile it you may",
    "start": "491240",
    "end": "498199"
  },
  {
    "text": "want to uh manipulate the I there's some ilil weaving projects like fodi which",
    "start": "498199",
    "end": "503919"
  },
  {
    "text": "will uh add I notify property changed or do other um transfer",
    "start": "503919",
    "end": "510240"
  },
  {
    "text": "on the result of your compilation uh and there were you could have like",
    "start": "510240",
    "end": "516800"
  },
  {
    "text": "scripts that would run before or after build but when you have a complex pipeline that starts to break down when",
    "start": "516800",
    "end": "522039"
  },
  {
    "text": "you want to support things like uh incremental builds uh only building what's changed or parallel builds uh and",
    "start": "522039",
    "end": "529680"
  },
  {
    "text": "things like that um and uh my pet peeve was that",
    "start": "529680",
    "end": "535480"
  },
  {
    "text": "project Jason did not support comments um that's something that if we had moved",
    "start": "535480",
    "end": "540640"
  },
  {
    "text": "forward with project Json I think we would have eventually fixed but the Json spec does not support comments so this",
    "start": "540640",
    "end": "546800"
  },
  {
    "text": "didn't support comments um so we said we told everyone hey we're",
    "start": "546800",
    "end": "552360"
  },
  {
    "text": "going to move back to Ms build um but this was Ms build this is new",
    "start": "552360",
    "end": "558320"
  },
  {
    "text": "project console app uh in NET Framework in Visual Studio",
    "start": "558320",
    "end": "563399"
  },
  {
    "text": "2015 um so that's quite a bit more verbose doesn't have those advantages",
    "start": "563399",
    "end": "568920"
  },
  {
    "text": "that project that Jason had and we said you know we know that project Jason has these great advantages and we're going",
    "start": "568920",
    "end": "573959"
  },
  {
    "text": "to bring them to Ms build uh but the joy of open development is that we announced",
    "start": "573959",
    "end": "581240"
  },
  {
    "text": "this change of Direction pretty much at the same time that we made it and before we had all of the details worked out of",
    "start": "581240",
    "end": "587920"
  },
  {
    "text": "how that would actually work so all we could really say was you know trust us it's going to be great um and judging by",
    "start": "587920",
    "end": "595279"
  },
  {
    "text": "the reaction online there were a lot of people who didn't really trust us uh and think it would be great and that's quite",
    "start": "595279",
    "end": "602000"
  },
  {
    "text": "understandable um but so since then we've worked on making lots of changes",
    "start": "602000",
    "end": "608279"
  },
  {
    "text": "uh to Ms build and to visual studio and the project system um and so what we have today as of Visual Studio 2017 are",
    "start": "608279",
    "end": "616079"
  },
  {
    "text": "Ms build projects that look like this um and so this has basically all of the",
    "start": "616079",
    "end": "622720"
  },
  {
    "text": "advantages that project Jason had now it's it's XML um so if you prefer Jason",
    "start": "622720",
    "end": "630160"
  },
  {
    "text": "uh I'm sorry about that but given that it's XML it's doesn't have lots of",
    "start": "630160",
    "end": "635440"
  },
  {
    "text": "verbosity it doesn't have lots of information that's not needed the uh philosophy behind this new style of",
    "start": "635440",
    "end": "642560"
  },
  {
    "text": "projects was to have sensible defaults that you could override if needed and so",
    "start": "642560",
    "end": "647600"
  },
  {
    "text": "the only thing you really need to specify about a project is what am I targeting what version of net core or",
    "start": "647600",
    "end": "653560"
  },
  {
    "text": "net standard or or what am I targeting um and here it's saying it's an exe it's",
    "start": "653560",
    "end": "658639"
  },
  {
    "text": "an app that's how you say it's an app um and so we've kept all of those",
    "start": "658639",
    "end": "665480"
  },
  {
    "text": "advantages of project. Json the one that we don't have entirely is swapping out",
    "start": "665480",
    "end": "671800"
  },
  {
    "text": "uh package references with Source uh you can kind of do that but uh we will",
    "start": "671800",
    "end": "677200"
  },
  {
    "text": "hopefully do work there eventually to to make that a bit better but everything else uh We've pretty much got and so",
    "start": "677200",
    "end": "684639"
  },
  {
    "text": "let's look at some of this so for context we we've made lots of",
    "start": "684639",
    "end": "690959"
  },
  {
    "text": "improvements uh and what they apply to right now is",
    "start": "690959",
    "end": "697519"
  },
  {
    "text": "net standard projects and net core projects and asp.net core projects that",
    "start": "697519",
    "end": "704399"
  },
  {
    "text": "run on theet framework that's what we support with this new style of project",
    "start": "704399",
    "end": "710880"
  },
  {
    "text": "it is possible to try to use it uh with other scenarios other full. NET",
    "start": "710880",
    "end": "717639"
  },
  {
    "text": "Framework projects and that's kind of a use at your own risk uh if you are hoping that a lot of the visual studio",
    "start": "717639",
    "end": "724240"
  },
  {
    "text": "features uh such as designers and stuff for wind fors WPF or classic asp.net uh",
    "start": "724240",
    "end": "731360"
  },
  {
    "text": "a lot of tooling and visual studio may not work um it might compile it will",
    "start": "731360",
    "end": "736920"
  },
  {
    "text": "probably compile uh but a lot of the tooling won't work and so we hope to bring this to more types of projects in",
    "start": "736920",
    "end": "743079"
  },
  {
    "text": "the future uh but right now that's what it it's supported for so let's take a look at this uh so here I have a project",
    "start": "743079",
    "end": "751560"
  },
  {
    "text": "uh and let's let's look at what the project file looks like so I'm going to right click on the project here in visual studio and uh I'm going to click",
    "start": "751560",
    "end": "758519"
  },
  {
    "text": "unload project right because that's what I have to do to see the project file but wait what's this edit handbell hero.",
    "start": "758519",
    "end": "764519"
  },
  {
    "text": "cor. CS project so I can edit this project file directly in Visual Studio without closing",
    "start": "764519",
    "end": "770959"
  },
  {
    "text": "it hey so what am I doing next uh so here and",
    "start": "771120",
    "end": "780199"
  },
  {
    "text": "you know the tools in Visual Studio still work uh so I can modify this project you know by going in solution",
    "start": "780199",
    "end": "786240"
  },
  {
    "text": "explore adding files and stuff but I can also just type if I want so if I want to add another uh package I can say package",
    "start": "786240",
    "end": "793079"
  },
  {
    "text": "reference include equals what do I want not the time",
    "start": "793079",
    "end": "799279"
  },
  {
    "text": "right and uh",
    "start": "800800",
    "end": "806480"
  },
  {
    "text": "okay uh and so now I I have a pack package reference to Nota time um now maybe I want to by default",
    "start": "807000",
    "end": "816199"
  },
  {
    "text": "you you see that I have a bunch of source files here but I and they're not",
    "start": "816199",
    "end": "821399"
  },
  {
    "text": "listed in the file but maybe I want to include something that's outside of this project folder so uh I prefer to put",
    "start": "821399",
    "end": "828279"
  },
  {
    "text": "this in a separate item group because it's a separate type of item but it could go with the package references so compile include equals do do/ common",
    "start": "828279",
    "end": "837600"
  },
  {
    "text": "mvvm Docs okay okay so I've typed this I have not saved so uh you know I'm going",
    "start": "837600",
    "end": "844639"
  },
  {
    "text": "to hit save and uh I have a pointer there yeah you'll see it show up there so let's",
    "start": "844639",
    "end": "851440"
  },
  {
    "text": "move the mouse here save oh that's not supposed to happen",
    "start": "851440",
    "end": "857680"
  },
  {
    "text": "whoa demo fail I must have had a syntax error there that",
    "start": "857680",
    "end": "864920"
  },
  {
    "text": "sucks yeah yeah that was my clicker I clipp down on the clicker which",
    "start": "865040",
    "end": "870160"
  },
  {
    "text": "eventually apparently gives me an",
    "start": "870160",
    "end": "874240"
  },
  {
    "text": "X okay so now we see that that file showed",
    "start": "879560",
    "end": "885199"
  },
  {
    "text": "up so just comment that out save it",
    "start": "886600",
    "end": "893120"
  },
  {
    "text": "disappears uncomment it save and it shows back up uh um okay well this is a a file you",
    "start": "893120",
    "end": "902600"
  },
  {
    "text": "know that's included from elsewhere and it shows up here and there's a little link symbol uh there but you know maybe",
    "start": "902600",
    "end": "908480"
  },
  {
    "text": "I don't want it mixed in with the rest of my source files in solution Explorer maybe I want to show it somewhere else",
    "start": "908480",
    "end": "914199"
  },
  {
    "text": "so uh base equals shared okay now",
    "start": "914199",
    "end": "921279"
  },
  {
    "text": "save so now that's saying put it in the shared folder uh and this is new that",
    "start": "921279",
    "end": "927199"
  },
  {
    "text": "specific feature is going to be new in update 3 of vs 2017 um so it won't work if you're just on the the RTM release",
    "start": "927199",
    "end": "933959"
  },
  {
    "text": "right now um but the the link metad data",
    "start": "933959",
    "end": "939240"
  },
  {
    "text": "here is where it shows it in Visual Studio but that needed to include like the the whole file name so now we've",
    "start": "939240",
    "end": "945480"
  },
  {
    "text": "added link base which will just be the start of the link and then if you have a glob it'll include any recursive folders",
    "start": "945480",
    "end": "952480"
  },
  {
    "text": "and then the file name in the extension okay now let's see what if I'm adding a",
    "start": "952480",
    "end": "961319"
  },
  {
    "text": "new file here so we're just going to copy a file here copy and as I paste it",
    "start": "961319",
    "end": "966600"
  },
  {
    "text": "you can watch and it'll show up there in solution explore",
    "start": "966600",
    "end": "970880"
  },
  {
    "text": "paste should hello there we go uh okay",
    "start": "972000",
    "end": "977680"
  },
  {
    "text": "so I can just move files around copy them to the project folder and they'll just show up uh but I I actually don't",
    "start": "977680",
    "end": "982959"
  },
  {
    "text": "want this file right um so I can right click and I can say exclude and it's removed and you can see",
    "start": "982959",
    "end": "990399"
  },
  {
    "text": "it just puts sorry it put it up here it just puts the exception to the",
    "start": "990399",
    "end": "997040"
  },
  {
    "text": "convention in the project file uh in VSS 2015 you could use wild cards uh at the",
    "start": "997040",
    "end": "1005199"
  },
  {
    "text": "MS build level to include source files and some people did that you know compile includes starstarstar",
    "start": "1005199",
    "end": "1010920"
  },
  {
    "text": "docs the issue with that is Visual Studio would happily read that but anytime it wanted to make any edit to it",
    "start": "1010920",
    "end": "1017160"
  },
  {
    "text": "it would just expand that out into a separate compile item for each file um",
    "start": "1017160",
    "end": "1022959"
  },
  {
    "text": "but now it kind of respects the defaults and just knows this is the piece that needs to be",
    "start": "1022959",
    "end": "1028480"
  },
  {
    "text": "changed uh okay oh man I made a mess of this project I just want to go back uh",
    "start": "1028480",
    "end": "1033880"
  },
  {
    "text": "to what I had before so I'm going to just get reset and it's going to reload in place",
    "start": "1033880",
    "end": "1040280"
  },
  {
    "text": "here presumably is that the right",
    "start": "1040280",
    "end": "1045480"
  },
  {
    "text": "folder y okay beta software here there we go uh",
    "start": "1045480",
    "end": "1052520"
  },
  {
    "text": "and so it's just reset back to where it was it doesn't ask me do you want to reload the project file or anything uh",
    "start": "1052520",
    "end": "1058520"
  },
  {
    "text": "it just reloads in place um and if I want to switch branches same",
    "start": "1058520",
    "end": "1065039"
  },
  {
    "text": "thing get check out move files I think move",
    "start": "1065039",
    "end": "1072160"
  },
  {
    "text": "code okay Enter and I moved all of those files to",
    "start": "1072160",
    "end": "1077400"
  },
  {
    "text": "a subdirectory i added a new package reference I retargeted from net standard 13 to 14 but it all just",
    "start": "1077400",
    "end": "1085400"
  },
  {
    "text": "works okay and then another feature uh that was in Project Json and that we",
    "start": "1085400",
    "end": "1090520"
  },
  {
    "text": "have is multi-targeting multi-targeting means to Target more than one framework",
    "start": "1090520",
    "end": "1097360"
  },
  {
    "text": "in a project and we used to kind of call this cross compiling but cross compiling",
    "start": "1097360",
    "end": "1103400"
  },
  {
    "text": "kind of has another accepted meaning it's like compiling on one architecture OS for another one like",
    "start": "1103400",
    "end": "1109240"
  },
  {
    "text": "from x86 to arm and so we decided to use the term multi-targeting for the net of",
    "start": "1109240",
    "end": "1114919"
  },
  {
    "text": "compiling it multiple times for different platform so all I have to do there is instead of Target framework",
    "start": "1114919",
    "end": "1120400"
  },
  {
    "text": "which is singular I change that to Target Frameworks which is plural and",
    "start": "1120400",
    "end": "1125520"
  },
  {
    "text": "then I can just have a semicolon separated list here uh so I want to also Target net 45 okay I'm going to save it",
    "start": "1125520",
    "end": "1134640"
  },
  {
    "text": "in that case it has to reload it but uh now this project targets",
    "start": "1134640",
    "end": "1140559"
  },
  {
    "text": "targets two Frameworks and if I go I don't know if I go in here um I",
    "start": "1140559",
    "end": "1148000"
  },
  {
    "text": "have this context drop down and so this shows the different Target Frameworks that I'm uh that I'm targeting and I can",
    "start": "1148000",
    "end": "1153919"
  },
  {
    "text": "switch between them and get intell ense and syntax highlighting and everything for each of those um and uh I also have",
    "start": "1153919",
    "end": "1163360"
  },
  {
    "text": "conditional compilation symbols based on that so I can say if net45 right",
    "start": "1163360",
    "end": "1170720"
  },
  {
    "text": "so that's great out right now because I'm in the net standard context but I switched to net45 and it's not great out",
    "start": "1170880",
    "end": "1176559"
  },
  {
    "text": "and intellisense and everything works the same way uh and that's probably going to give",
    "start": "1176559",
    "end": "1182360"
  },
  {
    "text": "me a compilation error so let's get rid of that because it needs that and uh then",
    "start": "1182360",
    "end": "1189559"
  },
  {
    "text": "creating a new get package right so uh I can just invoke the pack command pack",
    "start": "1189559",
    "end": "1196440"
  },
  {
    "text": "means create a package uh on this and it'll build it and it'll create a new get package",
    "start": "1196440",
    "end": "1204640"
  },
  {
    "text": "so start uh Windows plus okay so handle",
    "start": "1204640",
    "end": "1213760"
  },
  {
    "text": "here that core this is my project bin debug and here's my new get package so we see that we were compiling for",
    "start": "1213760",
    "end": "1220280"
  },
  {
    "text": "different Target Frameworks it's the same dll so it needs to have a different output path for each Target framework so",
    "start": "1220280",
    "end": "1226840"
  },
  {
    "text": "that's what these folders are uh under here uh and that's where the output goes but the new get package is for all",
    "start": "1226840",
    "end": "1233360"
  },
  {
    "text": "target Frameworks so we open that up and we see we have a n get package",
    "start": "1233360",
    "end": "1240360"
  },
  {
    "text": "that has the assemblies for the the Frameworks we're targeting so very easy to create a nouet package uh from a",
    "start": "1240360",
    "end": "1247679"
  },
  {
    "text": "project with multi-targeting if you",
    "start": "1247679",
    "end": "1251519"
  },
  {
    "text": "like okay",
    "start": "1254919",
    "end": "1258919"
  },
  {
    "text": "okay so what do you need where do all these tools come from there's there's a couple things to cover so visual studio",
    "start": "1264200",
    "end": "1271080"
  },
  {
    "text": "2017 that is the the first version of Visual Studio that has a lot of these features and uh update 3 is coming out",
    "start": "1271080",
    "end": "1278200"
  },
  {
    "text": "sometime soon uh and is going to have a little bit more uh and visual studio includes an MS",
    "start": "1278200",
    "end": "1285200"
  },
  {
    "text": "build which runs on the full framework that's the traditional version of M build uh it runs on full.net which means",
    "start": "1285200",
    "end": "1292080"
  },
  {
    "text": "it supports targeting all of the different platforms such as WP WPF zamar and uh",
    "start": "1292080",
    "end": "1300320"
  },
  {
    "text": "it's all built on that full framework Ms build uh and new in Visual Studio",
    "start": "1300320",
    "end": "1307799"
  },
  {
    "text": "2017 uh Visual Studio 2017 supports side by-side installs and so each copy of visual CA 2017 actually has its own",
    "start": "1307799",
    "end": "1314600"
  },
  {
    "text": "version of Ms build uh and you invoke it using just call it Ms build from a",
    "start": "1314600",
    "end": "1320360"
  },
  {
    "text": "visual studio command prompt and that'll set your path so that it's pointing to the corresponding version of Ms build",
    "start": "1320360",
    "end": "1325880"
  },
  {
    "text": "for that version of Visual Studio we also have the net core SDK uh",
    "start": "1325880",
    "end": "1331360"
  },
  {
    "text": "sometimes we call this the CLI or the command line interface uh and this is what you'll download uh if you go to",
    "start": "1331360",
    "end": "1338480"
  },
  {
    "text": "dot.net and and look at like the command line experience uh or it uh it's",
    "start": "1338480",
    "end": "1344240"
  },
  {
    "text": "available for mac and Linux as well as Windows so if you're doing crossplatform development this is what you'll use and",
    "start": "1344240",
    "end": "1350120"
  },
  {
    "text": "so the net core SDK includes a copy of Ms build uh that runs on net core and uh",
    "start": "1350120",
    "end": "1357440"
  },
  {
    "text": "you run it with the net command so the net command that's the net CLI and it has a lot of different commands one of",
    "start": "1357440",
    "end": "1363480"
  },
  {
    "text": "them is Ms build and that is basically the same as calling Ms build except it'll use the core version of Ms build",
    "start": "1363480",
    "end": "1372159"
  },
  {
    "text": "instead of the full framework hopefully normally it won't matter that much but when you start to",
    "start": "1372159",
    "end": "1377919"
  },
  {
    "text": "get into you're building projects that require tasks and targets that don't run on net core if you're trying to do some",
    "start": "1377919",
    "end": "1384080"
  },
  {
    "text": "of this stuff uh then it can matter and a lot of the other net commands are kind of implemented as wrappers over Ms build",
    "start": "1384080",
    "end": "1391320"
  },
  {
    "text": "uh so you know there's net clean there's net pack which invokes the pack Target",
    "start": "1391320",
    "end": "1397520"
  },
  {
    "text": "uh just like right clicking in visual studio and clicking pack that invokes the pack Target uh so a lot of the net",
    "start": "1397520",
    "end": "1404600"
  },
  {
    "text": "commands are implemented in terms of msuil and then there's microsoft. net.",
    "start": "1404600",
    "end": "1409720"
  },
  {
    "text": "SDK and that is what you so I I get that from here so SDK",
    "start": "1409720",
    "end": "1418320"
  },
  {
    "text": "equal microsoft. net. SDK that is what supports a lot of the simplification of",
    "start": "1418320",
    "end": "1425039"
  },
  {
    "text": "the project files MSU is a generic build engine which includes uh a lot of",
    "start": "1425039",
    "end": "1432840"
  },
  {
    "text": "functionality to build net apps uh but the way that we made the project file",
    "start": "1432840",
    "end": "1438480"
  },
  {
    "text": "file simpler is we put a lot of it in this SDK functionality now that uh that",
    "start": "1438480",
    "end": "1444279"
  },
  {
    "text": "SDK is delivered as part of the net core",
    "start": "1444279",
    "end": "1449320"
  },
  {
    "text": "SDK uh and in Visual Studio th000 Visual",
    "start": "1449320",
    "end": "1456200"
  },
  {
    "text": "Studio 2017 update 3 both the full framework Ms build and the net core Ms",
    "start": "1456200",
    "end": "1463159"
  },
  {
    "text": "build will use the this SDK from the not net core SD okay we",
    "start": "1463159",
    "end": "1468720"
  },
  {
    "text": "have a problem with naming if you've if you've noticed um but that means that if",
    "start": "1468720",
    "end": "1474679"
  },
  {
    "text": "you install the preview of Visual Studio 2017 update 3 today then to get the new",
    "start": "1474679",
    "end": "1482559"
  },
  {
    "text": "uh support for net standard 20 net core 20 uh and some of the new things we've",
    "start": "1482559",
    "end": "1489600"
  },
  {
    "text": "been doing in this project like that link base that I showed what you do is you install the update of this and that",
    "start": "1489600",
    "end": "1495679"
  },
  {
    "text": "will update Visual Studio will use that as well as the command line will use that and you'll get the new",
    "start": "1495679",
    "end": "1500880"
  },
  {
    "text": "functionality so you can update some of this functionality out of band and a lot of the net core support and net standard",
    "start": "1500880",
    "end": "1507679"
  },
  {
    "text": "support will come that way",
    "start": "1507679",
    "end": "1513399"
  },
  {
    "text": "uh global. Json so global. Json is used to select a specific version of the net",
    "start": "1514399",
    "end": "1521279"
  },
  {
    "text": "core SDK and it kind of applies to all folders below it uh unless there's another Global Json nested under there",
    "start": "1521279",
    "end": "1530320"
  },
  {
    "text": "generally you shouldn't need to do use this except if you're still using project Json uh then you need you need a",
    "start": "1531600",
    "end": "1538720"
  },
  {
    "text": "global Json with this in it to say I'm going to use this version of the net core SDK which supported project",
    "start": "1538720",
    "end": "1545760"
  },
  {
    "text": "Jason uh otherwise don't use it by default as my recommendation but if by",
    "start": "1545760",
    "end": "1552159"
  },
  {
    "text": "accident we make a breaking change then this is kind of the escape hatch that you installed a new version and it broke",
    "start": "1552159",
    "end": "1557960"
  },
  {
    "text": "something uh then you can use this to say no don't use that new version that I've inst installed use this exact version uh it's",
    "start": "1557960",
    "end": "1564720"
  },
  {
    "text": "not our intention to make breaking changes although in Ms build everything",
    "start": "1564720",
    "end": "1571120"
  },
  {
    "text": "is global so any change that we make could conceivably be a property name",
    "start": "1571120",
    "end": "1577520"
  },
  {
    "text": "that you happen to use for something else um but in practice uh we don't",
    "start": "1577520",
    "end": "1583799"
  },
  {
    "text": "expect there to be breaking changes in general um but you you've got an escape",
    "start": "1583799",
    "end": "1589039"
  },
  {
    "text": "hatch if you need it so let's cover some basics of Ms build properties uh so",
    "start": "1589039",
    "end": "1595760"
  },
  {
    "text": "properties go in a property group and they're basically scalar variables you've got a",
    "start": "1595760",
    "end": "1602880"
  },
  {
    "text": "name and you've got a single value that goes along with it properties can be based on other",
    "start": "1602880",
    "end": "1608679"
  },
  {
    "text": "properties uh so here we have a version set the 101 and then here for you know",
    "start": "1608679",
    "end": "1614960"
  },
  {
    "text": "the net four-part version we're adding a z to the end of it so the way that you",
    "start": "1614960",
    "end": "1620559"
  },
  {
    "text": "uh get the value of a property is with this synex you get the dollar and then in parentheses you have the name of the",
    "start": "1620559",
    "end": "1625919"
  },
  {
    "text": "property um and then here we're just setting file version to exactly the same",
    "start": "1625919",
    "end": "1631840"
  },
  {
    "text": "value as assembly version uh this Syntax for property value uh you can use that in a lot of",
    "start": "1631840",
    "end": "1639080"
  },
  {
    "text": "different places in Ms build most places where you can specify a string you can just put dollar property uh and get that",
    "start": "1639080",
    "end": "1645360"
  },
  {
    "text": "property value interpolated in there conditions uh so you can add a condition",
    "start": "1645360",
    "end": "1654000"
  },
  {
    "text": "attribute to uh to most things actually in Ms build so this is the defined constant property and that's the",
    "start": "1654000",
    "end": "1662159"
  },
  {
    "text": "compilation constants that will be passed to the compiler so here we're saying we're going to take the existing",
    "start": "1662159",
    "end": "1667279"
  },
  {
    "text": "value add a semicolon and net standard if the target framework is net standard to well you know this this is great that",
    "start": "1667279",
    "end": "1675720"
  },
  {
    "text": "we have that capability you know you can have arbitr conditions which is powerful and sometimes you need that uh the",
    "start": "1675720",
    "end": "1683080"
  },
  {
    "text": "syntax starts to get not so beautiful here and this normally wouldn't be too bad it's just that you know on the slide",
    "start": "1683080",
    "end": "1688840"
  },
  {
    "text": "the word wrapping is uh makes it a little bit ugly um you can also put",
    "start": "1688840",
    "end": "1694919"
  },
  {
    "text": "conditions on the property group so if you're working within the constraints of what can fit on a slide uh you could put",
    "start": "1694919",
    "end": "1700880"
  },
  {
    "text": "that condition on the property group and then it it doesn't have to word wrap as much um and it means the same thing",
    "start": "1700880",
    "end": "1709399"
  },
  {
    "text": "so properties are single values variables with single values basically",
    "start": "1711159",
    "end": "1717440"
  },
  {
    "text": "items items represent a list of values um and the element name is the item type",
    "start": "1717440",
    "end": "1724240"
  },
  {
    "text": "such as compile or content reference package reference it can be arbitrary um",
    "start": "1724240",
    "end": "1730240"
  },
  {
    "text": "so Ms build items compile these are what Ms build generally uses for your source files what's what's it going to pass to",
    "start": "1730240",
    "end": "1736559"
  },
  {
    "text": "the compiler uh content this is the content item type uh and then reference",
    "start": "1736559",
    "end": "1742279"
  },
  {
    "text": "now items may or may not refer to a file on",
    "start": "1742279",
    "end": "1748000"
  },
  {
    "text": "disk so these refer to a file on disk and usually it depends on the item type compile needs to be a file that exists",
    "start": "1748000",
    "end": "1753760"
  },
  {
    "text": "it's going to pass that to the compiler and if that file doesn't exist the compiler will complain reference here",
    "start": "1753760",
    "end": "1760600"
  },
  {
    "text": "well reference because of the way it's used by the build process it might be a file on dis or it might not so here I'm",
    "start": "1760600",
    "end": "1767200"
  },
  {
    "text": "referencing something that's going to resolve to Something in the in the reference assemblies uh and",
    "start": "1767200",
    "end": "1773360"
  },
  {
    "text": "so this isn't a literal file in my project but here I'm referencing a path",
    "start": "1773360",
    "end": "1778679"
  },
  {
    "text": "uh that's this dll on disk and so items might be files they might not be it",
    "start": "1778679",
    "end": "1784519"
  },
  {
    "text": "depends on which items they are and how they're used items can have me meta data on them",
    "start": "1784519",
    "end": "1790640"
  },
  {
    "text": "so uh and items go in item groups right properties go in property groups items",
    "start": "1790640",
    "end": "1796960"
  },
  {
    "text": "go in item groups uh items can have metad data so items",
    "start": "1796960",
    "end": "1802200"
  },
  {
    "text": "are a list of values uh and each value can have corresponding metad data so the",
    "start": "1802200",
    "end": "1808519"
  },
  {
    "text": "the value for this package reference item here is Newton soft Json and then the version is 102 uh so this is metad",
    "start": "1808519",
    "end": "1816960"
  },
  {
    "text": "data on that item uh metad data can be as of Ms build 15 can be specified via",
    "start": "1816960",
    "end": "1823760"
  },
  {
    "text": "an attribute like this uh it can also be specified as a a subelement here um you",
    "start": "1823760",
    "end": "1828799"
  },
  {
    "text": "know usually this attribute syntax is cleaner that's why we added it um but",
    "start": "1828799",
    "end": "1834279"
  },
  {
    "text": "sometimes you want want it like this especially if you want to put a condition on it um there's some cases where where you'd need to do that and",
    "start": "1834279",
    "end": "1840600"
  },
  {
    "text": "just because that's the traditional thing that's supported you'll you'll see that a lot if you just browse through",
    "start": "1840600",
    "end": "1846360"
  },
  {
    "text": "existing Ms build code uh so you can have wild cards for",
    "start": "1846360",
    "end": "1852440"
  },
  {
    "text": "items or Globs uh and so compile includes star star back star. s so this",
    "start": "1852440",
    "end": "1858880"
  },
  {
    "text": "means recursively anything and then you know any file that ends with cs",
    "start": "1858880",
    "end": "1864760"
  },
  {
    "text": "um and then uh content include all the text files and copy it to Output directory now copy to Output directory",
    "start": "1864760",
    "end": "1871840"
  },
  {
    "text": "that's metad data on that item or these item values that are going to be produced and the build system knows",
    "start": "1871840",
    "end": "1879840"
  },
  {
    "text": "about this this type of metad data now um so so when you have a a wild card",
    "start": "1879840",
    "end": "1886720"
  },
  {
    "text": "here a glob it'll search the file system for everything that matches that and then create an item value for each match",
    "start": "1886720",
    "end": "1894120"
  },
  {
    "text": "now uh this is uh actually got a problem here uh if you're going to end up",
    "start": "1894120",
    "end": "1901600"
  },
  {
    "text": "copying all of the text files to the output directory typically your output directory is under your project folder",
    "start": "1901600",
    "end": "1907960"
  },
  {
    "text": "so the first time you build it'll copy it there and then the second time you buil uh this would actually match in",
    "start": "1907960",
    "end": "1914159"
  },
  {
    "text": "your output directory so you'd have another text file which would probably then be copied to an output folder under",
    "start": "1914159",
    "end": "1920919"
  },
  {
    "text": "your output folder and each time you build you just get more files um so you can also exclude uh exclude things from",
    "start": "1920919",
    "end": "1928960"
  },
  {
    "text": "items uh usually when you're doing a wild card and so here um since I'm doing",
    "start": "1928960",
    "end": "1934240"
  },
  {
    "text": "it a couple times I I've defined a property which is the pattern that I'm",
    "start": "1934240",
    "end": "1939720"
  },
  {
    "text": "going to exclude so I'm saying everything under bin and everything other object the output in the intermediate folders and then I'm using",
    "start": "1939720",
    "end": "1946559"
  },
  {
    "text": "that property value in my item uh includes here so I'm saying include all",
    "start": "1946559",
    "end": "1952000"
  },
  {
    "text": "of the C files except the ones which are under the pattern specified by this",
    "start": "1952000",
    "end": "1957559"
  },
  {
    "text": "property uh so that kind of fixes the problem we talked about okay that's items so uh project",
    "start": "1957559",
    "end": "1966480"
  },
  {
    "text": "Imports so you have your project file but you can import other project files",
    "start": "1966480",
    "end": "1972960"
  },
  {
    "text": "and Ms build calls calls all of them project files uh usually we think think of the project file as just the main",
    "start": "1972960",
    "end": "1979440"
  },
  {
    "text": "thing your entry point that you're building um but the syntax is import project equals and then a path so you",
    "start": "1979440",
    "end": "1986480"
  },
  {
    "text": "might want to import some common Logic for everything in your repo you could do that by specifying the path here um",
    "start": "1986480",
    "end": "1995360"
  },
  {
    "text": "before we had these simplified projects every single project that you got near the end would have something like this",
    "start": "1995360",
    "end": "2002120"
  },
  {
    "text": "uh which would say import project all this Ms build tools path which is a built-in property to Ms build under them",
    "start": "2002120",
    "end": "2009039"
  },
  {
    "text": "is build installation and then microsoft. c. targets or Visual Basic or whatever uh and so this was how the",
    "start": "2009039",
    "end": "2017559"
  },
  {
    "text": "common build loog the the build logic specifically for The NET Framework in C was imported um now with the SDK",
    "start": "2017559",
    "end": "2025760"
  },
  {
    "text": "attribute the microsoft. net. SDK that we've added uh we kind of have implicit versions of those and so the syntax is a",
    "start": "2025760",
    "end": "2032720"
  },
  {
    "text": "lot cleaner and you don't have to have this kind of thing in your project file uh so you can see here it's the",
    "start": "2032720",
    "end": "2039039"
  },
  {
    "text": "extension is props here the extension is targets those are conventions uh Ms",
    "start": "2039039",
    "end": "2044200"
  },
  {
    "text": "build doesn't care what the file name is but uh the convention is props file",
    "start": "2044200",
    "end": "2049480"
  },
  {
    "text": "stands for where you put your properties and those are the things that are imported near the top so before the body",
    "start": "2049480",
    "end": "2056358"
  },
  {
    "text": "of your project is evaluated generally uh and then the targets would be what's generally imported uh at the bottom or",
    "start": "2056359",
    "end": "2064158"
  },
  {
    "text": "after the body of your project okay so how do you actually do something",
    "start": "2064159",
    "end": "2070280"
  },
  {
    "text": "in Ms build uh well that's tasks and targets so task is a a unit of action it",
    "start": "2070280",
    "end": "2076280"
  },
  {
    "text": "does something uh create a directory you know something with the file system maybe create a directory copy files call",
    "start": "2076280",
    "end": "2083720"
  },
  {
    "text": "the compiler uh or you know some arbitrary computation or action uh and",
    "start": "2083720",
    "end": "2089079"
  },
  {
    "text": "there's a lot of these that are built into Ms build uh but you can also write your own in C or you know another net",
    "start": "2089079",
    "end": "2095878"
  },
  {
    "text": "language uh now you can't have a task by itself tasks go inside targets uh so targets",
    "start": "2095879",
    "end": "2102920"
  },
  {
    "text": "group The tasks together and then they express the dependencies between those operations um and they do that with you",
    "start": "2102920",
    "end": "2110680"
  },
  {
    "text": "know depends on targets before targets and after Target so these are attributes that you can put on a Target to express",
    "start": "2110680",
    "end": "2117240"
  },
  {
    "text": "these are the dependencies between them uh and so the the set of targets that",
    "start": "2117240",
    "end": "2122800"
  },
  {
    "text": "run and the the order that they run depends on this graph of dependencies uh",
    "start": "2122800",
    "end": "2128040"
  },
  {
    "text": "and so it's close to a um uh a d a directed ayylic graph um if",
    "start": "2128040",
    "end": "2139359"
  },
  {
    "text": "there are any Cycles then you'll get an error um and uh you have top level",
    "start": "2139359",
    "end": "2146599"
  },
  {
    "text": "targets which are kind of the entry points which are the things that you build such as build clean rebuild",
    "start": "2146599",
    "end": "2152280"
  },
  {
    "text": "publish and pack and then those have you know dependencies and so when you say build it'll go through its dependencies",
    "start": "2152280",
    "end": "2159200"
  },
  {
    "text": "walking the graph until it's it's completed doing everything that it needs to do now each Target is run only once",
    "start": "2159200",
    "end": "2165319"
  },
  {
    "text": "and so if you run Target one and then you run Target two but they both of them depend on target three well then it's",
    "start": "2165319",
    "end": "2171920"
  },
  {
    "text": "going to run it's going to say I need to run Target one oh before I do that I need to run Target three and it'll run",
    "start": "2171920",
    "end": "2177160"
  },
  {
    "text": "Target three then it'll run Target one and then when it gets to Target Two it says oh I need to run Target three it",
    "start": "2177160",
    "end": "2182599"
  },
  {
    "text": "says I've already run that so A Target will never run more than once and single",
    "start": "2182599",
    "end": "2187920"
  },
  {
    "text": "build um and so you know I said there's a dependency graph so this is an example of of part of the default dependency",
    "start": "2187920",
    "end": "2195240"
  },
  {
    "text": "graph um and you know you can't see the details there but this is compile uh",
    "start": "2195240",
    "end": "2200480"
  },
  {
    "text": "compile depends on core compile which is what I think actually calls the compiler",
    "start": "2200480",
    "end": "2205640"
  },
  {
    "text": "uh it depends on resolve references which depends on resolve assembly references which depends on a bunch of",
    "start": "2205640",
    "end": "2210960"
  },
  {
    "text": "stuff so there's a bunch of stuff that goes into compiling uh and this is kind of the default set of stuff that it",
    "start": "2210960",
    "end": "2216319"
  },
  {
    "text": "needs to do uh so when you when you build a project",
    "start": "2216319",
    "end": "2221760"
  },
  {
    "text": "what targets does it run uh well by default uh it'll usually just run the build Target uh there's there's a list",
    "start": "2221760",
    "end": "2228800"
  },
  {
    "text": "of rules about what it'll run by default um but if you say Ms build or net Ms",
    "start": "2228800",
    "end": "2234520"
  },
  {
    "text": "build uh it'll usually have the the build Target as the the Target that it",
    "start": "2234520",
    "end": "2240599"
  },
  {
    "text": "runs uh you can specify which Target to run with the /t command line option So",
    "start": "2240599",
    "end": "2246079"
  },
  {
    "text": "/t Co and clean that'll run the clean Target um now you've got net and so just",
    "start": "2246079",
    "end": "2253800"
  },
  {
    "text": "watch out about the difference between net build and net Ms build I uh when I",
    "start": "2253800",
    "end": "2260119"
  },
  {
    "text": "started working with the net CLI I was just using do net build for a bunch of things that's what calls Ms build right",
    "start": "2260119",
    "end": "2267359"
  },
  {
    "text": "uh it turns out that that specifically invokes the build Target so when I tried to doet",
    "start": "2267359",
    "end": "2272839"
  },
  {
    "text": "buildt colon my custom Target it was running both both of them and I could",
    "start": "2272839",
    "end": "2278480"
  },
  {
    "text": "not figure out why and that's because it ended up translating into calling Ms build /t build because that's what this",
    "start": "2278480",
    "end": "2284560"
  },
  {
    "text": "does and then SLT my target which I had done so that's just something to run out uh watch out for uh to understand net Ms",
    "start": "2284560",
    "end": "2292680"
  },
  {
    "text": "build versus Net build now in the 2.0 uh net core",
    "start": "2292680",
    "end": "2298720"
  },
  {
    "text": "SDK uh most of the commands that need it",
    "start": "2298720",
    "end": "2303920"
  },
  {
    "text": "such as build or publish or pack will automatically do a new get restore",
    "start": "2303920",
    "end": "2311480"
  },
  {
    "text": "before actually running them so there's a net restore command which will run new get restore but in the 2.0 SDK you most",
    "start": "2311480",
    "end": "2317920"
  },
  {
    "text": "of the time won't need to do that net build net run anything that needs it",
    "start": "2317920",
    "end": "2323880"
  },
  {
    "text": "will basically do that for you uh but net Ms build would not net Ms build is kind of just raw invoke Ms build with",
    "start": "2323880",
    "end": "2330599"
  },
  {
    "text": "these arguments that I've specified so this is what a Target looks",
    "start": "2330599",
    "end": "2335880"
  },
  {
    "text": "like um so it's got a name uh and it can have before targets",
    "start": "2335880",
    "end": "2341359"
  },
  {
    "text": "after targets depend on targets so this is saying you know run this before prepare for publish so if you're",
    "start": "2341359",
    "end": "2347480"
  },
  {
    "text": "publishing somewhere in that graph of targets is probably a prepare for publish Target uh and then you put this",
    "start": "2347480",
    "end": "2353280"
  },
  {
    "text": "in your project file and it says run this target before that and then these are tasks so there's an exec task which",
    "start": "2353280",
    "end": "2361200"
  },
  {
    "text": "is built into Ms build and that means you know start this process call this",
    "start": "2361200",
    "end": "2366319"
  },
  {
    "text": "command uh and so here we're doing mpm install npm run build uh now this is a common kind of",
    "start": "2366319",
    "end": "2374240"
  },
  {
    "text": "thing you need to do you know run this script before and after this actually caused some issues because the way that Ms build",
    "start": "2374240",
    "end": "2381960"
  },
  {
    "text": "works is first it does evaluation of the project so it goes through and it walks",
    "start": "2381960",
    "end": "2388079"
  },
  {
    "text": "the project and walks through all of the the Imports uh and it builds up well what are the properties first and then",
    "start": "2388079",
    "end": "2394359"
  },
  {
    "text": "what are all the item values and then it starts to run the targets and targets can also have item groups and property",
    "start": "2394359",
    "end": "2400800"
  },
  {
    "text": "groups inside them that will modify that those at the time that the target is",
    "start": "2400800",
    "end": "2405880"
  },
  {
    "text": "running but if you don't do that then the values you get from the property from the properties and the items are",
    "start": "2405880",
    "end": "2412280"
  },
  {
    "text": "going to be whatever it evaluated that during evaluation before you ran any Targets and so what this command uh",
    "start": "2412280",
    "end": "2419880"
  },
  {
    "text": "Target ended up doing is npm install and npm run build that ended up you know uh",
    "start": "2419880",
    "end": "2425160"
  },
  {
    "text": "generating some JavaScript based on on typescript and putting that in the WW root",
    "start": "2425160",
    "end": "2430319"
  },
  {
    "text": "folder uh and by default everything in the WW root folder gets",
    "start": "2430319",
    "end": "2437079"
  },
  {
    "text": "published but that happens at evaluation and so what would happen is at your first build uh you wouldn't get the",
    "start": "2437079",
    "end": "2444280"
  },
  {
    "text": "files that were generated by this included in the publish because at the time it was evaluating that they weren't",
    "start": "2444280",
    "end": "2451480"
  },
  {
    "text": "there so that's the kind of uh more complicated thing you can run in we we've mostly fixed that uh but if you",
    "start": "2451480",
    "end": "2459640"
  },
  {
    "text": "had to do it yourself it could look something like this uh so how now we've added an item group to the Target which",
    "start": "2459640",
    "end": "2466000"
  },
  {
    "text": "is going to be this is inside a Target and it's going to be evaluated after these commands run and so here we're saying include",
    "start": "2466000",
    "end": "2473839"
  },
  {
    "text": "everything from ww root except what was already in the content item and also our",
    "start": "2473839",
    "end": "2480440"
  },
  {
    "text": "default item exclude so our our output and intermediate path and stuff would be excluded and here we see a new syntax so",
    "start": "2480440",
    "end": "2487400"
  },
  {
    "text": "like for dollars property name that's how you get the value of a property the",
    "start": "2487400",
    "end": "2493520"
  },
  {
    "text": "at symbol is how you get the values of an item so this will kind of expand into",
    "start": "2493520",
    "end": "2501160"
  },
  {
    "text": "everything that at this time was a was a Content item and so that says we don't",
    "start": "2501160",
    "end": "2506839"
  },
  {
    "text": "want to add these things twice but if it wasn't already in that we're going to add it again uh so that's that's useful",
    "start": "2506839",
    "end": "2513760"
  },
  {
    "text": "to understand how some of the stuff works uh this specific example you shouldn't need to do that because we've",
    "start": "2513760",
    "end": "2519400"
  },
  {
    "text": "built that into the web SDK okay uh so you've got a build and",
    "start": "2519400",
    "end": "2527920"
  },
  {
    "text": "that's not doing what you expect uh how do you how do you investigate what's going wrong um so three things",
    "start": "2527920",
    "end": "2536119"
  },
  {
    "text": "pre-process the project look at a log file or look at a binary or structured log uh so what we're going to do is is",
    "start": "2536119",
    "end": "2542440"
  },
  {
    "text": "we're going to look at that um so let's",
    "start": "2542440",
    "end": "2550520"
  },
  {
    "text": "see okay just get rid of the okay so I'm",
    "start": "2557400",
    "end": "2565280"
  },
  {
    "text": "going to build this so first what you might want to know is you know I've got",
    "start": "2565280",
    "end": "2570880"
  },
  {
    "text": "all of these Imports uh a lot of them come from Ms build some of them are from",
    "start": "2570880",
    "end": "2576400"
  },
  {
    "text": "this net DK some of them may come from new get package and you know who is",
    "start": "2576400",
    "end": "2582119"
  },
  {
    "text": "doing something who is setting this property value that isn't what I expect it to be or you know what does this",
    "start": "2582119",
    "end": "2588359"
  },
  {
    "text": "target look like um so a really uh useful thing you can do there is msbuild",
    "start": "2588359",
    "end": "2595760"
  },
  {
    "text": "PP which stands for pre-process uh and colon you give it a file name so Ms",
    "start": "2595760",
    "end": "2600800"
  },
  {
    "text": "build.xml okay so that when you do SL PP that that",
    "start": "2600800",
    "end": "2607400"
  },
  {
    "text": "doesn't actually run a build that just does a a walk through your project and",
    "start": "2607400",
    "end": "2612839"
  },
  {
    "text": "all of the Imports and then it creates a flattened uh XML file that shows you the",
    "start": "2612839",
    "end": "2618359"
  },
  {
    "text": "contents of everything that would have been part of that evaluation um so",
    "start": "2618359",
    "end": "2626319"
  },
  {
    "text": "okay so here we have it so this is the output of that pre-process um so here we can see like",
    "start": "2637880",
    "end": "2645440"
  },
  {
    "text": "this is the the path of what was pre-processed um and then we start seeing the contents of that project but",
    "start": "2645440",
    "end": "2652319"
  },
  {
    "text": "every time that there's an import uh then we'll jump into that import so here",
    "start": "2652319",
    "end": "2658440"
  },
  {
    "text": "uh we have that SDK equals statement so that gets uh that implicitly Imports",
    "start": "2658440",
    "end": "2665960"
  },
  {
    "text": "some files so it tells you what it's doing here and so that ends up importing this file and so now we're in this file",
    "start": "2665960",
    "end": "2672240"
  },
  {
    "text": "and now we're in the contents of this file so this comment comes from this SDK props file and we can see what it's",
    "start": "2672240",
    "end": "2678720"
  },
  {
    "text": "doing and then it's going to end up importing some other stuff so this is the import statement that was in that",
    "start": "2678720",
    "end": "2684440"
  },
  {
    "text": "file it's commented out uh and then it also has a comment that says well this is what it ended up importing um and so",
    "start": "2684440",
    "end": "2693319"
  },
  {
    "text": "this is basically going to show you everything that was affecting uh the your build uh and so if you want to know",
    "start": "2693319",
    "end": "2700400"
  },
  {
    "text": "you know who's setting a property you can kind of look for that although you",
    "start": "2700400",
    "end": "2706000"
  },
  {
    "text": "know I can't spell uh if you want a specific Target you can look for name",
    "start": "2706000",
    "end": "2713359"
  },
  {
    "text": "equals uh strong name right so this is a",
    "start": "2713359",
    "end": "2718880"
  },
  {
    "text": "target that's being injected from a n get package for example uh and you can",
    "start": "2718880",
    "end": "2723920"
  },
  {
    "text": "look at what it's actually doing what it's passing to it what do pass out of it um now uh sometimes if you're looking",
    "start": "2723920",
    "end": "2731160"
  },
  {
    "text": "for something that are in the common targets the targets files that come with Ms build uh those are sometimes kind of",
    "start": "2731160",
    "end": "2737359"
  },
  {
    "text": "long so you know where is this where is this actually coming from well you scroll up until you see this kind of",
    "start": "2737359",
    "end": "2743520"
  },
  {
    "text": "header uh and it shows you where uh if you end up looking at something in the common targets sometimes you'll have to",
    "start": "2743520",
    "end": "2749400"
  },
  {
    "text": "scroll up quite a bit okay so that shows you what was evaluated in your project",
    "start": "2749400",
    "end": "2757280"
  },
  {
    "text": "file but you know then what actually happened so then you want to create a log and so you can do uh I always do flp",
    "start": "2757280",
    "end": "2766520"
  },
  {
    "text": "verbosity or V equals diag um and you know you can look at the the command",
    "start": "2766520",
    "end": "2772359"
  },
  {
    "text": "line help for different options here but uh what this means is file logger",
    "start": "2772359",
    "end": "2779319"
  },
  {
    "text": "parameter so that means it's going to use a file logger um and the parameter it's going to pass to that is V",
    "start": "2779319",
    "end": "2784960"
  },
  {
    "text": "verbosity is diagnostic so that's the highest verbosity if I'm investigating something there's different verbos but",
    "start": "2784960",
    "end": "2790760"
  },
  {
    "text": "usually if I want to investigate something I just want the full level it's very verbose but it might have something I need it tells me exactly",
    "start": "2790760",
    "end": "2797960"
  },
  {
    "text": "what parameters were T passed to each task for example and what came out of them so it's usually",
    "start": "2797960",
    "end": "2803760"
  },
  {
    "text": "useful um so there I I did a build uh and then",
    "start": "2803760",
    "end": "2810920"
  },
  {
    "text": "here Ms build.log so you can specify the the the name of the log file but by",
    "start": "2810920",
    "end": "2816119"
  },
  {
    "text": "default it'll just be Ms build.log uh and then so this has lots of information",
    "start": "2816119",
    "end": "2821240"
  },
  {
    "text": "near the beginning it has uh all of the it's got property reassignments",
    "start": "2821240",
    "end": "2827720"
  },
  {
    "text": "which is something new uh but then it has initial properties so this is you know when it",
    "start": "2827720",
    "end": "2833160"
  },
  {
    "text": "evaluated the project file here are all the properties and their values uh and then initial",
    "start": "2833160",
    "end": "2839839"
  },
  {
    "text": "items right same thing for items uh so if we look for a compile uh so this had one compile item",
    "start": "2839839",
    "end": "2848000"
  },
  {
    "text": "program.cs um and this had uh you know this item the value was this and then",
    "start": "2848000",
    "end": "2854400"
  },
  {
    "text": "further indented these are the metad data uh on that item okay uh and then uh it will execute",
    "start": "2854400",
    "end": "2864200"
  },
  {
    "text": "the the target so here's where it starts actually building um and uh it's got a",
    "start": "2864200",
    "end": "2871280"
  },
  {
    "text": "bunch of targets that are skipped a t like most elements in Ms build a Target can have a condition on it so it's",
    "start": "2871280",
    "end": "2877040"
  },
  {
    "text": "saying well I would have executed this except it evaluated the condition evaluated defaults um and then when",
    "start": "2877040",
    "end": "2883680"
  },
  {
    "text": "there's actually something it does it says I'm running this task I'm passing this parameter to it uh if it has output",
    "start": "2883680",
    "end": "2890160"
  },
  {
    "text": "of that task you'll get that here it has all of that information now so that's great it's very detailed but um you know",
    "start": "2890160",
    "end": "2896880"
  },
  {
    "text": "I don't think anyone's going to love looking through this forbose log file and trying to figure out exactly what",
    "start": "2896880",
    "end": "2903040"
  },
  {
    "text": "happened um searching through text log files uh Is Not Great a lot of the",
    "start": "2903040",
    "end": "2908680"
  },
  {
    "text": "time",
    "start": "2908680",
    "end": "2911680"
  },
  {
    "text": "yeah um the question is is there time stamps uh I believe I'm surprised it's",
    "start": "2914440",
    "end": "2920280"
  },
  {
    "text": "not included um I don't know",
    "start": "2920280",
    "end": "2925450"
  },
  {
    "text": "[Music] specifically on the text log file I'm not sure um now there is this summary at",
    "start": "2925450",
    "end": "2933440"
  },
  {
    "text": "the end that tells you how long each uh Target and how long each task took uh so",
    "start": "2933440",
    "end": "2939200"
  },
  {
    "text": "that can help you as far as the performance um the uh Ms build supports arbitrary",
    "start": "2939200",
    "end": "2946720"
  },
  {
    "text": "loggers and so the logger has that information available it knows when each",
    "start": "2946720",
    "end": "2951839"
  },
  {
    "text": "event was raised um I'm not sure if there's an option on the uh text logger",
    "start": "2951839",
    "end": "2957920"
  },
  {
    "text": "to actually include that uh you know at each thing that it logs uh but it's",
    "start": "2957920",
    "end": "2965000"
  },
  {
    "text": "there um but like this is somewhat useful and is what we had to deal with",
    "start": "2965000",
    "end": "2972040"
  },
  {
    "text": "until recently um now we can say MSU",
    "start": "2972040",
    "end": "2977960"
  },
  {
    "text": "slbl and we'll do T rebuild okay so slbl means binary log so this creates a",
    "start": "2977960",
    "end": "2986880"
  },
  {
    "text": "binary log this is a compact log format uh it includes probably more information than",
    "start": "2986880",
    "end": "2994079"
  },
  {
    "text": "the the verbose log would do but it's a structured format um so you can't open",
    "start": "2994079",
    "end": "2999400"
  },
  {
    "text": "up it up and look at it in a text editor but you can have a tool that runs over it and analyze it or displays it and",
    "start": "2999400",
    "end": "3006040"
  },
  {
    "text": "that does include the timestamps and so you could you could do that uh this is this is new uh this is new in update 3",
    "start": "3006040",
    "end": "3014119"
  },
  {
    "text": "uh so if you have vs5 uh it won't support this slbl switch uh but uh 153",
    "start": "3014119",
    "end": "3020559"
  },
  {
    "text": "will uh and so by default it creates Ms build. binlog and you can create a",
    "start": "3020559",
    "end": "3027079"
  },
  {
    "text": "different name there um so but you you want to do something useful with that so",
    "start": "3027079",
    "end": "3032680"
  },
  {
    "text": "we have MS build structured log viewer okay so this is a tool to view",
    "start": "3032680",
    "end": "3040799"
  },
  {
    "text": "these binary logs and it uh it understands them and has a nice uh display",
    "start": "3040799",
    "end": "3047240"
  },
  {
    "text": "here I let's",
    "start": "3047240",
    "end": "3053799"
  },
  {
    "text": "see okay it's pretty visible uh so this",
    "start": "3054799",
    "end": "3060640"
  },
  {
    "text": "has basically the same information that you would have uh seen in that diagnostic log but now it's in a",
    "start": "3060640",
    "end": "3066040"
  },
  {
    "text": "structured format uh and so you can see it built this project and the initial",
    "start": "3066040",
    "end": "3071960"
  },
  {
    "text": "properties were these and the initial items were these uh and you know it'll",
    "start": "3071960",
    "end": "3077599"
  },
  {
    "text": "show The Meta data on them uh and then the targets that were",
    "start": "3077599",
    "end": "3082720"
  },
  {
    "text": "run it ran the rebuild Target and that caused it to run before rebuild clean this one and then build and so you can",
    "start": "3082720",
    "end": "3089200"
  },
  {
    "text": "see the the dependencies of the targets you can also whoops you can also search",
    "start": "3089200",
    "end": "3097119"
  },
  {
    "text": "so uh so if we want to say resolve assembly references right then you get results",
    "start": "3099799",
    "end": "3107160"
  },
  {
    "text": "here and everything that matched resolve assembly references and uh you can say I just want the the target with that name",
    "start": "3107160",
    "end": "3114440"
  },
  {
    "text": "uh and you can find specifically that Target um and then you can go into that and uh",
    "start": "3114440",
    "end": "3121680"
  },
  {
    "text": "so this has an item Group which added some items and then I ran this task well this task had these",
    "start": "3121680",
    "end": "3128040"
  },
  {
    "text": "parameters right so you can just drill down into all of the information it's a structured format so it's a lot easier",
    "start": "3128040",
    "end": "3133839"
  },
  {
    "text": "usually than scanning through this enormous log file uh so this is really super useful uh for for analyzing uh",
    "start": "3133839",
    "end": "3142160"
  },
  {
    "text": "your builds question yeah so I've been using this for three months yeah",
    "start": "3142160",
    "end": "3148480"
  },
  {
    "text": "it's but the biggest problem with this question I want to know why my project",
    "start": "3148480",
    "end": "3154200"
  },
  {
    "text": "rebuilds when I do an incremental build okay and there's so many blog posts about finding you got a C file missing",
    "start": "3154200",
    "end": "3161520"
  },
  {
    "text": "or something like this and this sort of covers it but even on the GitHub issues or requests one of the thing is it still",
    "start": "3161520",
    "end": "3168280"
  },
  {
    "text": "doesn't tell me why you have to look for is newer or some string description in",
    "start": "3168280",
    "end": "3174240"
  },
  {
    "text": "this file why can't you just tell us why it rebuilt if you got this file just tell us why it needs to be rebuilt uh so",
    "start": "3174240",
    "end": "3181599"
  },
  {
    "text": "the question is about incremental builds and how can you diagnose why it is",
    "start": "3181599",
    "end": "3187440"
  },
  {
    "text": "rebuilding something when you think it shouldn't have to do that work um why can't we just tell you hopefully we will",
    "start": "3187440",
    "end": "3194119"
  },
  {
    "text": "someday uh probably probably the binary log includes enough information for that",
    "start": "3194119",
    "end": "3201200"
  },
  {
    "text": "although I'm not absolutely sure uh but uh you know that's just",
    "start": "3201200",
    "end": "3207040"
  },
  {
    "text": "would be a great thing to have incremental builds uh are implemented by a a Target",
    "start": "3207040",
    "end": "3214960"
  },
  {
    "text": "another thing that the target can have is inputs and outputs and so Ms builds",
    "start": "3214960",
    "end": "3220160"
  },
  {
    "text": "incremental builds are based on timestamps and so if you have a Target that declares inputs and outputs then uh",
    "start": "3220160",
    "end": "3228280"
  },
  {
    "text": "then when it goes to run that Target it'll compare the time stamps of those files uh and if the outputs are all",
    "start": "3228280",
    "end": "3233839"
  },
  {
    "text": "newer than the inputs then then it won't actually run any of those tasks um it's",
    "start": "3233839",
    "end": "3240119"
  },
  {
    "text": "a good question I mean I don't have a great magic way to to solve that for you",
    "start": "3240119",
    "end": "3246240"
  },
  {
    "text": "yet uh okay I think that's that for that",
    "start": "3246400",
    "end": "3251400"
  },
  {
    "text": "demo okay so a couple more things uh common build logic uh so you know if you",
    "start": "3254040",
    "end": "3259839"
  },
  {
    "text": "have a repository with a bunch of different projects in it you know sometimes you want to use the same settings for all of them and something",
    "start": "3259839",
    "end": "3266079"
  },
  {
    "text": "like this is what we used to do uh and so there this is a built-in function so",
    "start": "3266079",
    "end": "3273599"
  },
  {
    "text": "this is a Syntax for calling some built-in functions in Ms build get directory name a file above uh and so",
    "start": "3273599",
    "end": "3280880"
  },
  {
    "text": "that says look in the MS build project directory and walk up the directory tree until you find a dir. targets file and",
    "start": "3280880",
    "end": "3287839"
  },
  {
    "text": "then return that directory name and then you know add the third. target to that so we're going to import that uh if it",
    "start": "3287839",
    "end": "3295720"
  },
  {
    "text": "exists so we have to have a condition with all of that repeated so that's useful and and you",
    "start": "3295720",
    "end": "3301400"
  },
  {
    "text": "don't you know you don't necessarily need to do that you could just specify dot dot dir. targets but then if you",
    "start": "3301400",
    "end": "3306480"
  },
  {
    "text": "change your hierarchy around and you put it one folder deeper or shallower then it stops working so this is more robust",
    "start": "3306480",
    "end": "3313359"
  },
  {
    "text": "very verose uh with MSU 15 probably uh you want to just use directory. build.",
    "start": "3313359",
    "end": "3319640"
  },
  {
    "text": "props and directory. build. targets uh so this is built into the common targets now and they will walk up the the",
    "start": "3319640",
    "end": "3327640"
  },
  {
    "text": "directory tree starting with your project directory and look for these file names directory. build.prop and",
    "start": "3327640",
    "end": "3332839"
  },
  {
    "text": "directory. build. targets uh and if it finds it it'll import them",
    "start": "3332839",
    "end": "3338838"
  },
  {
    "text": "automatically uh and of course the props will be imported very early and the targets file will be imported after most",
    "start": "3339400",
    "end": "3346440"
  },
  {
    "text": "everything else um and so what can you do with that uh you can have consistent package",
    "start": "3346440",
    "end": "3353160"
  },
  {
    "text": "versions uh so if you have a bunch of different projects and they reference a",
    "start": "3353160",
    "end": "3358319"
  },
  {
    "text": "lot of the same newg get packages maybe you want to use the same package versions across your projects and so you",
    "start": "3358319",
    "end": "3364559"
  },
  {
    "text": "can just declare a property uh that says this is the version of Newton soft I want to use and this is the version of",
    "start": "3364559",
    "end": "3369839"
  },
  {
    "text": "Nota time and in a project file then you have this version meta data but you use the property value here so this would be",
    "start": "3369839",
    "end": "3376559"
  },
  {
    "text": "common across your repo and then you have the package reference in the project that uses this common version",
    "start": "3376559",
    "end": "3381920"
  },
  {
    "text": "you could put a package reference in in your common logic if you wanted to",
    "start": "3381920",
    "end": "3387280"
  },
  {
    "text": "reference that package from every single project uh but here it lets you pick and choose and say if I'm using Newton soft",
    "start": "3387280",
    "end": "3393599"
  },
  {
    "text": "then I want that version uh another thing you can do is a",
    "start": "3393599",
    "end": "3399839"
  },
  {
    "text": "common output folder uh so by default the the output folder and",
    "start": "3399839",
    "end": "3405799"
  },
  {
    "text": "the intermediate folder will be under bin and obge in uh in your project folder a lot of people would prefer to",
    "start": "3405799",
    "end": "3412720"
  },
  {
    "text": "just have one folder that was like under the repo roof root uh so that it's it's",
    "start": "3412720",
    "end": "3418039"
  },
  {
    "text": "cleaner and so that they can just delete that folder get rid of everything reset everything so this is uh what you could",
    "start": "3418039",
    "end": "3423839"
  },
  {
    "text": "do you would put this in in a property group in directory. build. props uh repo root so this is a builtin MSU property",
    "start": "3423839",
    "end": "3431480"
  },
  {
    "text": "msbuild this file directory so it's what file am I evaluating right now give me that folder uh and so that's just a a",
    "start": "3431480",
    "end": "3439119"
  },
  {
    "text": "way we we create a repo root property um both because it's shorter and then in if",
    "start": "3439119",
    "end": "3444520"
  },
  {
    "text": "we're importing targets from other directories then we still have that reference to the repo route anyway uh",
    "start": "3444520",
    "end": "3450039"
  },
  {
    "text": "and then base output path and base intermediate output path um now this",
    "start": "3450039",
    "end": "3455799"
  },
  {
    "text": "would need to be in an SDK style project for I think base output path is new in",
    "start": "3455799",
    "end": "3461640"
  },
  {
    "text": "the Microsoft net. SDK um so you're saying put it under output and then Ms",
    "start": "3461640",
    "end": "3467480"
  },
  {
    "text": "build project name so Ms build project name is another built-in property and so if you're building my project. CSR then",
    "start": "3467480",
    "end": "3475039"
  },
  {
    "text": "Ms build project name will be my project uh and so this is if you want to have a separate folder for each uh for each",
    "start": "3475039",
    "end": "3483920"
  },
  {
    "text": "project under this common folder and so here we're specifying where the the bin folder is and then where the opt folder",
    "start": "3483920",
    "end": "3490760"
  },
  {
    "text": "is base intermediate output path um the microsoft. net SDK So when",
    "start": "3490760",
    "end": "3496680"
  },
  {
    "text": "you say project SDK equals this and I've said microsoft. Nets SDK if it's a web",
    "start": "3496680",
    "end": "3503119"
  },
  {
    "text": "project it'll be microsoft. net. sdk. web and that includes some additional",
    "start": "3503119",
    "end": "3508440"
  },
  {
    "text": "Logic for Web projects like handling the WW root folder uh and and some other",
    "start": "3508440",
    "end": "3513799"
  },
  {
    "text": "stuff um so but that will also use this",
    "start": "3513799",
    "end": "3519599"
  },
  {
    "text": "basic M SDK so the the there's common stuff that'll apply to both okay default",
    "start": "3519599",
    "end": "3525440"
  },
  {
    "text": "items so you know you didn't see compile items or embedded resource items in your project directly by default it'll just",
    "start": "3525440",
    "end": "3531160"
  },
  {
    "text": "include everything in that project folder uh and you know you can also include additional stuff outside of that",
    "start": "3531160",
    "end": "3538039"
  },
  {
    "text": "project folder and you can exclude stuff by saying compile remove equals fil name. CS or whatever you want uh you can",
    "start": "3538039",
    "end": "3545559"
  },
  {
    "text": "disable this entirely per item so enable default compile items set that defaults",
    "start": "3545559",
    "end": "3550960"
  },
  {
    "text": "and you won't get any default compile items enable default items set that defaults and you won't get any of those",
    "start": "3550960",
    "end": "3557640"
  },
  {
    "text": "defaults uh assembly attributes so when you're converting uh from existing",
    "start": "3557640",
    "end": "3563880"
  },
  {
    "text": "projects to SDK style projects you probably have an assembly info. CS under your properties folder or maybe under a",
    "start": "3563880",
    "end": "3570400"
  },
  {
    "text": "common folder or something that you've changed uh you don't need that anymore",
    "start": "3570400",
    "end": "3575599"
  },
  {
    "text": "uh we just have properties that uh during the build those properties",
    "start": "3575599",
    "end": "3580799"
  },
  {
    "text": "control assembly inutes attributes that get generated so usually that's better",
    "start": "3580799",
    "end": "3585960"
  },
  {
    "text": "uh but if you already have an assemblyinfo.cs and you want to keep using that you can disable that uh so",
    "start": "3585960",
    "end": "3592680"
  },
  {
    "text": "you can just into each attribute that would be disabled has a property that",
    "start": "3592680",
    "end": "3597880"
  },
  {
    "text": "you can set defaults to disable it or you can say generate assembly info set that defaults and that'll disable it all",
    "start": "3597880",
    "end": "3605119"
  },
  {
    "text": "together the default values of these come from properties like version file version company uh stuff like",
    "start": "3605119",
    "end": "3613400"
  },
  {
    "text": "that okay uh so I have this URL here um",
    "start": "3613400",
    "end": "3618839"
  },
  {
    "text": "and then I want to show you one more thing so this tinyurl.com",
    "start": "3618839",
    "end": "3624440"
  },
  {
    "text": "NC oo2 17- Ms build uh that's how you can get to this and this has some useful",
    "start": "3624440",
    "end": "3630039"
  },
  {
    "text": "links documentation structured log viewer which I showed um and I said that",
    "start": "3630039",
    "end": "3635680"
  },
  {
    "text": "that was a new thing in update 3 uh but Ms Bill also supports custom loggers and",
    "start": "3635680",
    "end": "3641400"
  },
  {
    "text": "so this project also has a custom logger so if you're using Ms build from vs 2017",
    "start": "3641400",
    "end": "3646520"
  },
  {
    "text": "or probably even earlier uh this project will let use a custom logger which will log the same information and then you'll",
    "start": "3646520",
    "end": "3653119"
  },
  {
    "text": "get the same kind of thing um project simplifier this is a workin project",
    "start": "3653119",
    "end": "3658520"
  },
  {
    "text": "progress tool but what it'll do is it'll take your project uh and evaluate it and",
    "start": "3658520",
    "end": "3663559"
  },
  {
    "text": "then figure out uh convert it to this new SDK style of project uh so if you want to take advantage of microsoft.",
    "start": "3663559",
    "end": "3670200"
  },
  {
    "text": "net. SDK this project will help you do that uh it's still a work in progress uh I tried it out you know at preparing for",
    "start": "3670200",
    "end": "3677720"
  },
  {
    "text": "this presentation uh and it left some stuff in there that I still wanted to delete uh but uh you know hopefully",
    "start": "3677720",
    "end": "3683760"
  },
  {
    "text": "that'll improve over time and it's still pretty useful um and then resources tips and the",
    "start": "3683760",
    "end": "3691000"
  },
  {
    "text": "documentation is actually pretty good if you want to learn and I think I'm over",
    "start": "3691000",
    "end": "3697798"
  },
  {
    "text": "time so thanks so much uh I'd love to talk to all of you about Ms build about",
    "start": "3699960",
    "end": "3706400"
  },
  {
    "text": "uh net net standard portable class libraries whatever you want um you can",
    "start": "3706400",
    "end": "3712359"
  },
  {
    "text": "email me you can contact me on Twitter you can come up afterwards uh and there's that link again uh thanks very",
    "start": "3712359",
    "end": "3717760"
  },
  {
    "text": "much don't forget to vote [Applause]",
    "start": "3717760",
    "end": "3722940"
  }
]