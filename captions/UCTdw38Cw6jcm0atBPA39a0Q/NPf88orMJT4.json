[
  {
    "start": "0",
    "end": "123000"
  },
  {
    "text": "hello thank you for coming there's at least at least 10 or 20 of you here so I",
    "start": "9200",
    "end": "17939"
  },
  {
    "text": "can only assume that some of you got lost this isn't a talk about agile or service so if you think it is you can",
    "start": "17939",
    "end": "24539"
  },
  {
    "text": "now leave I won't be offended ok good you'll stay so what I'm going to",
    "start": "24539",
    "end": "30510"
  },
  {
    "text": "talk about is C++ and some simple ideas to make C++ a little bit more observable",
    "start": "30510",
    "end": "38489"
  },
  {
    "text": "when we run it in production just house we can add some instrumentation to it so",
    "start": "38489",
    "end": "43799"
  },
  {
    "text": "we can get some data out of our code when it goes wrong and I think this is",
    "start": "43799",
    "end": "49589"
  },
  {
    "text": "necessary because in the C++ community we're doing a pretty bad job about talking about observability and",
    "start": "49589",
    "end": "56010"
  },
  {
    "text": "monitoring if you look at any other language community they're taking this sort of stuff really seriously and I",
    "start": "56010",
    "end": "62850"
  },
  {
    "text": "think we're sort of stuck with syslog and printf as our abstractions for monitoring and I think we need to do",
    "start": "62850",
    "end": "69270"
  },
  {
    "text": "better so there's not gonna be anything",
    "start": "69270",
    "end": "74399"
  },
  {
    "text": "in this talk that's necessarily groundbreaking it's going to be sort of basic stuff that you might come across but it's about adding a bit more",
    "start": "74399",
    "end": "81570"
  },
  {
    "text": "structure to what we're doing and sort of thinking a bit more about why we're doing it and not blindly just going into",
    "start": "81570",
    "end": "87929"
  },
  {
    "text": "these sort of three pillars that everyone's talking about but actually thinking where do these overlap and how",
    "start": "87929",
    "end": "93270"
  },
  {
    "text": "do we get the best data and how we do this in C++ my experience with C++ started off let's",
    "start": "93270",
    "end": "101969"
  },
  {
    "text": "say naively I for some reason quite enjoy doing it but I didn't find out",
    "start": "101969",
    "end": "107069"
  },
  {
    "text": "quite a long time that running it in production is hard I think you would all",
    "start": "107069",
    "end": "112409"
  },
  {
    "text": "agree it's a bit like a science fiction esque kind of wasteland where nothing is really there to help",
    "start": "112409",
    "end": "119340"
  },
  {
    "text": "you and there's a good chance you're gonna get hurt along the way so my first",
    "start": "119340",
    "end": "124799"
  },
  {
    "start": "123000",
    "end": "227000"
  },
  {
    "text": "attempt at C++ many years ago I knew two things about it I knew that I would be",
    "start": "124799",
    "end": "131760"
  },
  {
    "text": "programming C++ and I knew they were going to pay me to do it",
    "start": "131760",
    "end": "137569"
  },
  {
    "text": "that was basically all I had to know I had no idea what I was really letting myself in for as it turned out what I",
    "start": "137569",
    "end": "145219"
  },
  {
    "text": "was making was these network processing chips and how you make these chips looks",
    "start": "145219",
    "end": "155120"
  },
  {
    "text": "a little bit the same as how you make software you write this code and it",
    "start": "155120",
    "end": "161390"
  },
  {
    "text": "tells you and you tell in the code you describe what the logic of the chip is",
    "start": "161390",
    "end": "167870"
  },
  {
    "text": "and through a very expensive and laborious process you make a ASIC which",
    "start": "167870",
    "end": "174950"
  },
  {
    "text": "would end up in your laptop or servers or basically anywhere nowadays but this",
    "start": "174950",
    "end": "182180"
  },
  {
    "text": "process is extremely expensive I mean a conservative estimate from the company I worked out ten years ago was between",
    "start": "182180",
    "end": "189109"
  },
  {
    "text": "five and ten million dollars I have no idea if that's still true with the newer process modes or more advanced",
    "start": "189109",
    "end": "195530"
  },
  {
    "text": "techniques but it's really expensive so you want to get this right first time",
    "start": "195530",
    "end": "200810"
  },
  {
    "text": "you can't you really want to have as many attempts at making these as possible so what they did when they made",
    "start": "200810",
    "end": "208970"
  },
  {
    "text": "these chips is we test them very thoroughly and this as it turned out was",
    "start": "208970",
    "end": "215150"
  },
  {
    "text": "my job I was writing C++ to test the design for these chips before they",
    "start": "215150",
    "end": "221019"
  },
  {
    "text": "manufactured them and throw away a lot of money in the process",
    "start": "221019",
    "end": "226329"
  },
  {
    "start": "227000",
    "end": "326000"
  },
  {
    "text": "the problem with these chips is when something goes wrong they're very hard to debug you don't have a debugger you",
    "start": "227319",
    "end": "235400"
  },
  {
    "text": "can you can get some state out of it but not a lot you can't just throw on a",
    "start": "235400",
    "end": "240979"
  },
  {
    "text": "debug build it takes you ten million dollars to make the chip you're not gonna just make a debug version of the",
    "start": "240979",
    "end": "246470"
  },
  {
    "text": "chip and you can't just add some extra logging to find out what's going on either so what we do is we add",
    "start": "246470",
    "end": "255169"
  },
  {
    "text": "statistics to the chip lots and lots of statistics on everything number of bytes",
    "start": "255169",
    "end": "263389"
  },
  {
    "text": "we receive number of packets we receive that much as we can fit in the chip every we really want to get as much",
    "start": "263389",
    "end": "271060"
  },
  {
    "text": "information out of the chip after we've made it because there are certain things that you don't know just like is it just",
    "start": "271060",
    "end": "278050"
  },
  {
    "text": "like as we've software when it's running in production things will go wrong that you didn't expect or you might not be",
    "start": "278050",
    "end": "283270"
  },
  {
    "text": "able to reproduce in a test environment so let's contrast this to writing C++",
    "start": "283270",
    "end": "292540"
  },
  {
    "text": "actually writing C++ software not using it for testing our process of putting it",
    "start": "292540",
    "end": "300880"
  },
  {
    "text": "into production is a bit different we have to compile it package it deploy it",
    "start": "300880",
    "end": "306990"
  },
  {
    "text": "but do we often think about how much this costs yeah does it cost million",
    "start": "306990",
    "end": "313960"
  },
  {
    "text": "dollars thousand dollars one dollar you know it depends obviously on so much the",
    "start": "313960",
    "end": "320530"
  },
  {
    "text": "domain that you're working in but",
    "start": "320530",
    "end": "327220"
  },
  {
    "text": "there's a lot of reasons why it might actually be very expensive to deploy and change software there might be",
    "start": "327220",
    "end": "335850"
  },
  {
    "text": "restrictions on what software you can use in your production environment for example you might not be allowed to just",
    "start": "335850",
    "end": "341800"
  },
  {
    "text": "install some tool off of pip or some tool off of apt-get you might have to go",
    "start": "341800",
    "end": "347590"
  },
  {
    "text": "through some laborious validation process before being able to install something you know and good luck if",
    "start": "347590",
    "end": "354100"
  },
  {
    "text": "you're allowed to install a debugger you might be working the environment where there's very sensitive data involved now",
    "start": "354100",
    "end": "361000"
  },
  {
    "text": "if you're working on a database product and your database and your customer storing healthcare data it's very",
    "start": "361000",
    "end": "367390"
  },
  {
    "text": "unlikely you're even going to be allowed access to the server to work out what's going wrong you need to be able to take",
    "start": "367390",
    "end": "374110"
  },
  {
    "text": "some data out from your environment and work out from there what went wrong",
    "start": "374110",
    "end": "379770"
  },
  {
    "text": "embedded devices always tricky but improving a little bit the firmware",
    "start": "379770",
    "end": "385419"
  },
  {
    "text": "update for these things is usually slow and it's very risky because if the firmware update fails halfway through",
    "start": "385419",
    "end": "390580"
  },
  {
    "text": "then your device is now bricked so have to do building a lot of processes to",
    "start": "390580",
    "end": "396130"
  },
  {
    "text": "make sure this is robust as possible but it is still risky we don't want to be updating these devices all the time this might be why",
    "start": "396130",
    "end": "403660"
  },
  {
    "text": "we end up with insecure rooters in all of our homes but yeah that's the fact of it and now we're actually choosing to",
    "start": "403660",
    "end": "412630"
  },
  {
    "text": "prevent changes to our environments this concept of immutable infrastructure and",
    "start": "412630",
    "end": "419560"
  },
  {
    "text": "there's lots of advantages to doing this repeatability of deployments and such",
    "start": "419560",
    "end": "424590"
  },
  {
    "text": "but we are actually restricting ourselves and how we can debug it when it's in production if we can't then log",
    "start": "424590",
    "end": "431140"
  },
  {
    "text": "on to a server and extract some data or run some tests in it so when I think",
    "start": "431140",
    "end": "437920"
  },
  {
    "start": "436000",
    "end": "700000"
  },
  {
    "text": "about my checklist for production ready if it compiles is it production ready if",
    "start": "437920",
    "end": "444970"
  },
  {
    "text": "it's tested is it production ready well production ready doesn't mean bug-free",
    "start": "444970",
    "end": "451120"
  },
  {
    "text": "you can absolutely say that for a fact so you are going to need to diagnose",
    "start": "451120",
    "end": "457810"
  },
  {
    "text": "bugs when they happen in production and so I think if we're writing a checklist",
    "start": "457810",
    "end": "465130"
  },
  {
    "text": "for production ready we need to include that it is observable and that's what",
    "start": "465130",
    "end": "473770"
  },
  {
    "text": "we're going to focus on with this instrumentation what we're doing is we're trying to make the code observable",
    "start": "473770",
    "end": "481319"
  },
  {
    "text": "so what's instrumentation Wikipedia says",
    "start": "482520",
    "end": "487600"
  },
  {
    "text": "it's a collective term for measuring instruments used for indicating measuring recording physical quantities",
    "start": "487600",
    "end": "494130"
  },
  {
    "text": "in the context of computer programming instrumentation refers to an ability to",
    "start": "494130",
    "end": "500260"
  },
  {
    "text": "might or measure the level of a products performance good that's a good",
    "start": "500260",
    "end": "506350"
  },
  {
    "text": "definition I mean you can't go wrong with Wikipedia right I prefer to use the",
    "start": "506350",
    "end": "511960"
  },
  {
    "text": "definition from urban dictionary however what urban dictionary says is as this",
    "start": "511960",
    "end": "520000"
  },
  {
    "text": "little example at the bottom and they say hey John look at that expensive instrumentation but what urban",
    "start": "520000",
    "end": "525280"
  },
  {
    "text": "dictionary is if we're writing a C++ program we're very worried about the",
    "start": "525280",
    "end": "530680"
  },
  {
    "text": "overheads that we're carrying by instrumenting our source code because every time we add some",
    "start": "530680",
    "end": "537390"
  },
  {
    "text": "logging or some counting to our code we're slowing it down and something we really care about if you're writing C++",
    "start": "537390",
    "end": "542640"
  },
  {
    "text": "might be performance so Trust Urban",
    "start": "542640",
    "end": "548280"
  },
  {
    "text": "Dictionary was the best place for C++ advice instrumentation allows us to",
    "start": "548280",
    "end": "557250"
  },
  {
    "text": "observe deployed software it can check that it's working as we want it to it",
    "start": "557250",
    "end": "564150"
  },
  {
    "text": "allows us to diagnose what went wrong and how it went wrong and more importantly ideally the information we",
    "start": "564150",
    "end": "570540"
  },
  {
    "text": "get lets us restore our system back to a working state as fast as possible so that's one of our goals for this data so",
    "start": "570540",
    "end": "578850"
  },
  {
    "text": "really we're thinking about let's be more structured about what we're doing let's just not splash logging everywhere all over our code let's think about why",
    "start": "578850",
    "end": "586320"
  },
  {
    "text": "are we adding this instrumentation well this particular piece of instrumentation is so I can diagnose connection failures",
    "start": "586320",
    "end": "593100"
  },
  {
    "text": "to a database or file server let's say and this is in contrast to another goal",
    "start": "593100",
    "end": "600950"
  },
  {
    "text": "of observability which is measuring so we're measuring performance of our",
    "start": "600950",
    "end": "606870"
  },
  {
    "text": "software in production because quite often bugs aren't functional bugs but",
    "start": "606870",
    "end": "613170"
  },
  {
    "text": "it's because something's running too slowly and so in this case what we're looking to do is improve the performance",
    "start": "613170",
    "end": "620310"
  },
  {
    "text": "of our code over time we don't we're not looking for the root cause but we want",
    "start": "620310",
    "end": "625770"
  },
  {
    "text": "to observe a trend over time and see if we can improve our code make it faster",
    "start": "625770",
    "end": "632660"
  },
  {
    "text": "instrumentation is added to the source code what this means is it becomes part of your product it doesn't it's not",
    "start": "634740",
    "end": "642420"
  },
  {
    "text": "enabled you don't turn it on and off but you can maybe you can turn some more",
    "start": "642420",
    "end": "647670"
  },
  {
    "text": "detail on at runtime but it's always in your code it's not compiled out with n",
    "start": "647670",
    "end": "653070"
  },
  {
    "text": "debug for example always there it's in your production releases and it's ready for you when you need to to debug a",
    "start": "653070",
    "end": "659670"
  },
  {
    "text": "problem and there are alternatives to this you could experiment with the",
    "start": "659670",
    "end": "668190"
  },
  {
    "text": "compiler adding instrumentation for you and clang has quite a large amount of they call them sanitizers but what",
    "start": "668190",
    "end": "674700"
  },
  {
    "text": "they're doing is they're adding instrumentation to your code for you to debug memory leaks or erase conditions",
    "start": "674700",
    "end": "681500"
  },
  {
    "text": "that's instrumentation that's valuable just the same as D bugs are valuable but",
    "start": "681500",
    "end": "691020"
  },
  {
    "text": "we want to focus on what can we add to our code so it's always there and ready for us without having extra tooling so",
    "start": "691020",
    "end": "701730"
  },
  {
    "start": "700000",
    "end": "773000"
  },
  {
    "text": "printf please use printf so this is what",
    "start": "701730",
    "end": "710459"
  },
  {
    "text": "we think of as logging right and to be quite honest I find myself using",
    "start": "710459",
    "end": "716300"
  },
  {
    "text": "debuggers less and less I used to use it quite frequently but I've got so used to",
    "start": "716300",
    "end": "722010"
  },
  {
    "text": "not being reliant on them now and actually relying on logging or printf or",
    "start": "722010",
    "end": "728910"
  },
  {
    "text": "any of the other techniques to debug issues and we joked about it right you know printf debugging it's kind of a",
    "start": "728910",
    "end": "734400"
  },
  {
    "text": "meme I guess but I think it's valuable and I think it is actually a really good",
    "start": "734400",
    "end": "739560"
  },
  {
    "text": "way to think about debugging so logging",
    "start": "739560",
    "end": "745130"
  },
  {
    "text": "how it begins you'll get some message at some awful time of the night saying your",
    "start": "745130",
    "end": "750480"
  },
  {
    "text": "software is crashed and you'll ask why is it crashed what's in the log file and they'll tell you are stirred bad Alec",
    "start": "750480",
    "end": "759319"
  },
  {
    "text": "great what do I do now at some point",
    "start": "761019",
    "end": "766040"
  },
  {
    "text": "you'll ask them probably to reboot the server and then that might fix a problem",
    "start": "766040",
    "end": "771430"
  },
  {
    "start": "773000",
    "end": "998000"
  },
  {
    "text": "with logging what we're trying to do is we're trying to add a bit more information to what's happening in our",
    "start": "775089",
    "end": "780909"
  },
  {
    "text": "code let's say for example we have this function that processes some data",
    "start": "780909",
    "end": "787139"
  },
  {
    "text": "process file well when this function fails with some error message you get",
    "start": "787139",
    "end": "795309"
  },
  {
    "text": "some exception printed out permission denied that's going to be really useless",
    "start": "795309",
    "end": "801369"
  },
  {
    "text": "piece of information if it's included with a lot of other information or if",
    "start": "801369",
    "end": "806619"
  },
  {
    "text": "the user just sees permission denied permission denied from what so we you",
    "start": "806619",
    "end": "813609"
  },
  {
    "text": "know we do this and we might intercept the error and add some extra information",
    "start": "813609",
    "end": "821079"
  },
  {
    "text": "to the error at the site of the error because that's where we know most about or caused the error is where the error",
    "start": "821079",
    "end": "827619"
  },
  {
    "text": "originated so you might end up doing this add some print out so we can at",
    "start": "827619",
    "end": "833709"
  },
  {
    "text": "least see oh there was a file we were accessing a file when this error occurred and we can find out what file",
    "start": "833709",
    "end": "840809"
  },
  {
    "text": "and you can quite quickly from this realize that maybe your file permissions",
    "start": "840809",
    "end": "846729"
  },
  {
    "text": "were set up wrong with your file server or something like that you have a route to then go in debug what we might do in",
    "start": "846729",
    "end": "855219"
  },
  {
    "text": "addition to that is add some context to the entire operation that failed so we",
    "start": "855219",
    "end": "861489"
  },
  {
    "text": "definitely want information about the error but we also want information about the context that caused that operation",
    "start": "861489",
    "end": "866679"
  },
  {
    "text": "that caused the error so in this case maybe a connection from a particular user from a particular IP address that",
    "start": "866679",
    "end": "874449"
  },
  {
    "text": "would be very useful tonight because then when that and user starts complaining about why their connections",
    "start": "874449",
    "end": "880779"
  },
  {
    "text": "are failing we can actually find out why",
    "start": "880779",
    "end": "886079"
  },
  {
    "text": "from here we can then sanitize this client error because this permission denied is just going to confuse customers confuse clients we're not",
    "start": "886560",
    "end": "893020"
  },
  {
    "text": "going to like it very much so we can hide this away and we can give a nice error let's say the request failed",
    "start": "893020",
    "end": "898960"
  },
  {
    "text": "during i/o so something went wrong we remember reading the file the user doesn't want to know more than that and",
    "start": "898960",
    "end": "904750"
  },
  {
    "text": "if we tell them any more than that they might just get confused but what we do is we then keep all of the extra data in",
    "start": "904750",
    "end": "911380"
  },
  {
    "text": "a log file on the server so when the error occurs we can find out and obtain the more detailed information that will",
    "start": "911380",
    "end": "918340"
  },
  {
    "text": "help us but we don't conflate confuse the user too much and if you go get to a",
    "start": "918340",
    "end": "925510"
  },
  {
    "text": "point where this is becomes very structured then you might start tagging errors with particular codes you know if",
    "start": "925510",
    "end": "931210"
  },
  {
    "text": "you ever get an error from some Microsoft product then there'll be some code attached to the error and you can",
    "start": "931210",
    "end": "937840"
  },
  {
    "text": "then look at that code up in a database to find out the issue or perhaps how to",
    "start": "937840",
    "end": "942940"
  },
  {
    "text": "fix it and from here you start thinking oh this",
    "start": "942940",
    "end": "948769"
  },
  {
    "text": "is really useful let's build a library for it because of course you should so you see a lot of logging libraries but",
    "start": "948769",
    "end": "957949"
  },
  {
    "text": "to implement this logging and severity models that are based off the syslog standard that existed for such a long",
    "start": "957949",
    "end": "964009"
  },
  {
    "text": "time so we might be able to log our errors with some extra information and slightly differently from the info and",
    "start": "964009",
    "end": "971870"
  },
  {
    "text": "maybe it doesn't sort of the string formatting for us and this just this is",
    "start": "971870",
    "end": "978560"
  },
  {
    "text": "the status quo of logging I don't think it's really moved a whole lot particularly in I think C and C++ for",
    "start": "978560",
    "end": "985699"
  },
  {
    "text": "quite a long time if format string severity levels log rotation maybe you integrate them with",
    "start": "985699",
    "end": "991790"
  },
  {
    "text": "syslog and you can send them remotely and collect everything in one central place nice little features like that but",
    "start": "991790",
    "end": "998360"
  },
  {
    "text": "I think the whole thing is fundamentally flawed once you start scaling your",
    "start": "998360",
    "end": "1006639"
  },
  {
    "text": "system because if you ever get to a situation the way you have a growing",
    "start": "1006639",
    "end": "1012819"
  },
  {
    "text": "amount of log files which you will do if your system or software is successful",
    "start": "1012819",
    "end": "1017980"
  },
  {
    "text": "then it's gradually going to become harder and harder to read these log files and work out why something went",
    "start": "1017980",
    "end": "1026530"
  },
  {
    "text": "wrong I mean we're human after all we can't read this much data I think I made it small enough so you can't actually",
    "start": "1026530",
    "end": "1033069"
  },
  {
    "text": "read the text sort of prove a point so",
    "start": "1033069",
    "end": "1039280"
  },
  {
    "text": "the way we have been trying to resolve this as with magic we process all of",
    "start": "1039280",
    "end": "1047740"
  },
  {
    "text": "this data put it into some fancy database put it through all these text",
    "start": "1047740",
    "end": "1054789"
  },
  {
    "text": "passes maybe we're using machine learning on it now because you know you",
    "start": "1054789",
    "end": "1059860"
  },
  {
    "text": "should be but you know in seriousness what this",
    "start": "1059860",
    "end": "1066100"
  },
  {
    "text": "magic is it is a huge ecosystem of software and services that let you search through the day to an index it in",
    "start": "1066100",
    "end": "1072610"
  },
  {
    "text": "a structured way so you can do things like find errors that occurred on a particular host or on a particular component of your application it can",
    "start": "1072610",
    "end": "1080530"
  },
  {
    "text": "produce metrics and trends for you so at what time of the day of the most air was occurring for example and again produce",
    "start": "1080530",
    "end": "1088440"
  },
  {
    "text": "alerts so when something goes wrong you get an email or a slack message or a pager or a smoke signal or something",
    "start": "1088440",
    "end": "1095620"
  },
  {
    "text": "like that I still think there's a big",
    "start": "1095620",
    "end": "1101380"
  },
  {
    "start": "1098000",
    "end": "1258000"
  },
  {
    "text": "room for improvement here and this is I think becoming more popular as a concept",
    "start": "1101380",
    "end": "1106720"
  },
  {
    "text": "this idea of structured logging and it's really not that hard to get your head",
    "start": "1106720",
    "end": "1112030"
  },
  {
    "text": "around once you look at it it sort of common sense look at our log message",
    "start": "1112030",
    "end": "1119380"
  },
  {
    "text": "that we had from earlier user Steve IP something started a operational",
    "start": "1119380",
    "end": "1124930"
  },
  {
    "text": "connection and we had some log library produced this for us and it managed all",
    "start": "1124930",
    "end": "1131380"
  },
  {
    "text": "that information into a string for us and wrote it to a file or sent it to a server well what a lot of these systems",
    "start": "1131380",
    "end": "1141010"
  },
  {
    "text": "do is they parse this data for us into a more structured form because this structured data is much more easy to",
    "start": "1141010",
    "end": "1147430"
  },
  {
    "text": "index and search so we can have queries like find all the errors for user Steve",
    "start": "1147430",
    "end": "1155610"
  },
  {
    "text": "and so we end up writing these things these horrendous reg X patterns if",
    "start": "1155610",
    "end": "1161500"
  },
  {
    "text": "you've only used log stash you might be familiar with these things and you have to write a new one for every line of",
    "start": "1161500",
    "end": "1167920"
  },
  {
    "text": "logging you add throughout your application if you want to structure it and you want to analyze in any way which",
    "start": "1167920",
    "end": "1173440"
  },
  {
    "text": "is horrendous and what's more ridiculous is we already had the unstructured data at the start we already had a variable",
    "start": "1173440",
    "end": "1181480"
  },
  {
    "text": "called user in a variable called IP address so why did we then convert it to a string of text and then run it through",
    "start": "1181480",
    "end": "1187060"
  },
  {
    "text": "a regex parser on some you know cluster running this enormous",
    "start": "1187060",
    "end": "1192779"
  },
  {
    "text": "processing system and then put it back into a structured format at the end and this is the point of structured logging",
    "start": "1192779",
    "end": "1198820"
  },
  {
    "text": "then when you look at it like this it just seems obvious like why did we do this let's just take those fields that",
    "start": "1198820",
    "end": "1204009"
  },
  {
    "text": "we had and just omit them and cut that step out cut that step out and cut that",
    "start": "1204009",
    "end": "1209950"
  },
  {
    "text": "step out and this takes your log this takes your log data to such a higher",
    "start": "1209950",
    "end": "1216340"
  },
  {
    "text": "level of utility you don't need very complex software infrastructure to",
    "start": "1216340",
    "end": "1222369"
  },
  {
    "text": "analyze this structured data I mean a Python script would do a pretty good job you could put it into a database fairly",
    "start": "1222369",
    "end": "1230559"
  },
  {
    "text": "trivially just makes the data so much more useful so this is something I think",
    "start": "1230559",
    "end": "1236139"
  },
  {
    "text": "we should start talking more about with C++ because I mean there were new logging libraries that appear fairly",
    "start": "1236139",
    "end": "1241330"
  },
  {
    "text": "frequently I think one you know they crop up on a yearly basis but they're all of this same let's take some let's",
    "start": "1241330",
    "end": "1248559"
  },
  {
    "text": "format some text into some human readable form I think we should start",
    "start": "1248559",
    "end": "1254470"
  },
  {
    "text": "thinking about maybe we can do better than that",
    "start": "1254470",
    "end": "1257970"
  },
  {
    "start": "1258000",
    "end": "1403000"
  },
  {
    "text": "talking about making logging better and more structured we start having to talk",
    "start": "1261799",
    "end": "1268169"
  },
  {
    "text": "about tracing a little bit and these two things they kind of referred to as one",
    "start": "1268169",
    "end": "1273240"
  },
  {
    "text": "of the two of the three pillars you know you talking about logging metrics and chasing I think tracing is a",
    "start": "1273240",
    "end": "1279419"
  },
  {
    "text": "lot more related to logging BAM many of us realize and in its rawest form it's",
    "start": "1279419",
    "end": "1288720"
  },
  {
    "text": "just a form of logging you might log an operation with a start and an end this operation started now it",
    "start": "1288720",
    "end": "1295860"
  },
  {
    "text": "ended and usually what you can use this data for is you can work out what caused",
    "start": "1295860",
    "end": "1301230"
  },
  {
    "text": "an error and you can work out how long did the thing take there's usually the",
    "start": "1301230",
    "end": "1306270"
  },
  {
    "text": "two answers that you're looking for and a really good example of this one of my",
    "start": "1306270",
    "end": "1311940"
  },
  {
    "text": "favorite tools s trace did you ever not use this you should go and use it what",
    "start": "1311940",
    "end": "1320010"
  },
  {
    "text": "it lets you do is it lets you run the binary precompiled binary and it will",
    "start": "1320010",
    "end": "1326309"
  },
  {
    "text": "tell you what system calls your application is doing so if your",
    "start": "1326309",
    "end": "1331860"
  },
  {
    "text": "application at some point in its life cycle opens a file and writes to a file and it will quite helpfully print out",
    "start": "1331860",
    "end": "1338610"
  },
  {
    "text": "that you opened a file and what file you've opened and what Flags opened with",
    "start": "1338610",
    "end": "1345200"
  },
  {
    "text": "if you then read some data from the file it'll tell you that as well",
    "start": "1345200",
    "end": "1350750"
  },
  {
    "text": "it gives you this information it also gives you the return code of the system",
    "start": "1352450",
    "end": "1359080"
  },
  {
    "text": "call so you can actually see now which operations failed and which didn't so",
    "start": "1359080",
    "end": "1365350"
  },
  {
    "text": "maybe if the opening the file failed and you'll actually got to see why it failed it'll tell you how I failed because if I",
    "start": "1365350",
    "end": "1371470"
  },
  {
    "text": "didn't exist or the mission due ID but",
    "start": "1371470",
    "end": "1376779"
  },
  {
    "text": "also it gives you these timestamps so it'll give you a timestamp off in this case it gives you a timestamp of when the operation started in the duration of",
    "start": "1376779",
    "end": "1383590"
  },
  {
    "text": "the operation but quite commonly what you'll see is you'll get the start timestamp in the end time stamp it's the",
    "start": "1383590",
    "end": "1389830"
  },
  {
    "text": "same thing but then you can see okay was it particularly slow opening this file was it particularly slow reading the",
    "start": "1389830",
    "end": "1395739"
  },
  {
    "text": "date from this file really useful information",
    "start": "1395739",
    "end": "1400379"
  },
  {
    "start": "1403000",
    "end": "1602000"
  },
  {
    "text": "but racing evolves from logging if we",
    "start": "1404250",
    "end": "1410520"
  },
  {
    "text": "have some file operation like we had earlier we open a file and we do some",
    "start": "1410520",
    "end": "1415620"
  },
  {
    "text": "processing on it we might add a log to",
    "start": "1415620",
    "end": "1421110"
  },
  {
    "text": "that code to say okay now we're reading this file we might then later on decide",
    "start": "1421110",
    "end": "1429390"
  },
  {
    "text": "that we want to know when we've finished reading that file so we can work out either how long it took or we want to",
    "start": "1429390",
    "end": "1436890"
  },
  {
    "text": "know the error but might have come out of the operation did it succeed or did it pass did we get an error processing some data",
    "start": "1436890",
    "end": "1444150"
  },
  {
    "text": "in the file did the file not exist so on so we add some logging so when the",
    "start": "1444150",
    "end": "1449520"
  },
  {
    "text": "operation ended and now this starts to look an awful lot like tracing and so we",
    "start": "1449520",
    "end": "1458429"
  },
  {
    "text": "start inventing tools and libraries for this as well you might have some trace",
    "start": "1458429",
    "end": "1463980"
  },
  {
    "text": "utility lets you start to trace and add",
    "start": "1463980",
    "end": "1470250"
  },
  {
    "text": "some metadata to the trace here's the user here's the file name such-and-such",
    "start": "1470250",
    "end": "1476690"
  },
  {
    "text": "and sometimes these things called a span as well and then you can say when the",
    "start": "1476690",
    "end": "1483720"
  },
  {
    "text": "operation ended and we've C++ maybe we can have this done implicitly or explicitly you need the destructor when",
    "start": "1483720",
    "end": "1489990"
  },
  {
    "text": "it leaves the scope it could do it for us or we could do ourselves a minor",
    "start": "1489990",
    "end": "1496110"
  },
  {
    "text": "detail I don't think you should worry about too much and we can omit this data as logs if we",
    "start": "1496110",
    "end": "1504130"
  },
  {
    "text": "want to if we have a logging infrastructure all we're doing is providing a more structured way to",
    "start": "1504130",
    "end": "1509470"
  },
  {
    "text": "produce the data it's not fundamentally different you don't I don't think you",
    "start": "1509470",
    "end": "1514810"
  },
  {
    "text": "need to invest in a tracing system to take advantage of this because it is just a more structured version of",
    "start": "1514810",
    "end": "1521370"
  },
  {
    "text": "logging operations have a begin and an end so we can write it out in the same",
    "start": "1521370",
    "end": "1527890"
  },
  {
    "text": "way if we want to file we begin viral read and sure that looks fine",
    "start": "1527890",
    "end": "1536770"
  },
  {
    "text": "maybe if we already have some tools for processing structured logs we can apply it to here and do some analysis on those",
    "start": "1536770",
    "end": "1543180"
  },
  {
    "text": "quite commonly what we do with this sort of data is we don't omit the two events",
    "start": "1543180",
    "end": "1548560"
  },
  {
    "text": "but instead we'll just submit one event when the operation ends because they",
    "start": "1548560",
    "end": "1555430"
  },
  {
    "text": "always come in pairs we can say the operation ended at this point and it",
    "start": "1555430",
    "end": "1560830"
  },
  {
    "text": "started at this point or it ended at this point and it took this duration",
    "start": "1560830",
    "end": "1566490"
  },
  {
    "text": "just keeps the amount of volume in your log a bit lower and it makes analyzing",
    "start": "1566490",
    "end": "1571840"
  },
  {
    "text": "the data just a little bit easier the only disadvantage to this merging is that if an operation starts and is",
    "start": "1571840",
    "end": "1577960"
  },
  {
    "text": "taking a long time or potentially has hung for some reason then you don't ever get the information that the operation",
    "start": "1577960",
    "end": "1584200"
  },
  {
    "text": "started so you you just have to think about that trade-off of do you want to make the data easier to analyze and more",
    "start": "1584200",
    "end": "1591790"
  },
  {
    "text": "compact or do you want the ability to debug events which potentially haven't finished yet",
    "start": "1591790",
    "end": "1599159"
  },
  {
    "start": "1602000",
    "end": "1666000"
  },
  {
    "text": "tracing become more useful let me start talking about relationships and this is",
    "start": "1603590",
    "end": "1608990"
  },
  {
    "text": "when you might have come across the term distributed tracing we have a trace of",
    "start": "1608990",
    "end": "1616310"
  },
  {
    "text": "an operation that's occurring as part of a bigger operation to have this caused",
    "start": "1616310",
    "end": "1621770"
  },
  {
    "text": "by relationship this trace is caused by some other operation and in this case",
    "start": "1621770",
    "end": "1630200"
  },
  {
    "text": "what we do is fairly simple we just tag the operations with some sort of unique",
    "start": "1630200",
    "end": "1636170"
  },
  {
    "text": "identifier so we can create this relationship between the data there's a",
    "start": "1636170",
    "end": "1643610"
  },
  {
    "text": "few ways to do this and one of the hot topics at the moment is taking these",
    "start": "1643610",
    "end": "1649040"
  },
  {
    "text": "identifies but then passing them between services or micro services as we tend to",
    "start": "1649040",
    "end": "1655970"
  },
  {
    "text": "prefer to them so we can trace an operation actually passes through",
    "start": "1655970",
    "end": "1661730"
  },
  {
    "text": "multiple layers of a stack and again",
    "start": "1661730",
    "end": "1668000"
  },
  {
    "start": "1666000",
    "end": "1796000"
  },
  {
    "text": "this is sort of evolved so that we can just use a library to do this we might",
    "start": "1668000",
    "end": "1673370"
  },
  {
    "text": "have an operation on a trace object that lets us create a sub trace to create a trace within a trace or a span within a",
    "start": "1673370",
    "end": "1679940"
  },
  {
    "text": "span you might have heard that terminology but this is where it gets",
    "start": "1679940",
    "end": "1685900"
  },
  {
    "text": "even more confusing or interesting you can actually take this concept back to",
    "start": "1685900",
    "end": "1694280"
  },
  {
    "text": "the start to logging and start logging to a trace what does that actually mean",
    "start": "1694280",
    "end": "1700190"
  },
  {
    "text": "well all that means is you're writing a log entry with an identifier to an operation so you're creating this you",
    "start": "1700190",
    "end": "1706130"
  },
  {
    "text": "know you're creating this relationship potentially between the log such as an error or a warning and the operation that caused that error so this is kind",
    "start": "1706130",
    "end": "1714440"
  },
  {
    "text": "of confusing right because originally tracing evolved from doing logging and we wanted to structure it more and then",
    "start": "1714440",
    "end": "1721310"
  },
  {
    "text": "we got all the way to the end and now we're doing login using tracing frameworks so there's a lot more overlap",
    "start": "1721310",
    "end": "1730430"
  },
  {
    "text": "between these two things to the point and I've kind of thing the distinction is meaningless it's all about they're",
    "start": "1730430",
    "end": "1736340"
  },
  {
    "text": "some event occurring system and what are the relationships to other events in your system well that",
    "start": "1736340",
    "end": "1742580"
  },
  {
    "text": "caused by relationship is just one operation caused by another but then the",
    "start": "1742580",
    "end": "1747889"
  },
  {
    "text": "two log entries the two events that construct a trace is just well this one",
    "start": "1747889",
    "end": "1753019"
  },
  {
    "text": "is the start of the event this is the end and it causes this in the between and then there's a log error which was",
    "start": "1753019",
    "end": "1761510"
  },
  {
    "text": "caused by the fact you had to run that operation so it's all very tightly coupled together and this sort of comes",
    "start": "1761510",
    "end": "1770750"
  },
  {
    "text": "back to this idea that if you just think about what you're doing with the with logging and tracing you start to see if",
    "start": "1770750",
    "end": "1778460"
  },
  {
    "text": "you start to understand the reasons why you're putting a log message in a particular place while you're putting a debug log or why putting an info log or",
    "start": "1778460",
    "end": "1784850"
  },
  {
    "text": "an error log then you start to realize you can make this data much more structured much more useful and easier",
    "start": "1784850",
    "end": "1791240"
  },
  {
    "text": "to analyze well this lets us do is",
    "start": "1791240",
    "end": "1798769"
  },
  {
    "start": "1796000",
    "end": "1842000"
  },
  {
    "text": "reveal processing dependencies could have talked about a job to add a little bit we can say that we have some",
    "start": "1798769",
    "end": "1806389"
  },
  {
    "text": "operation and we can use that to trace errors back",
    "start": "1806389",
    "end": "1815300"
  },
  {
    "text": "to the original cause but it also is quite important for when you have",
    "start": "1815300",
    "end": "1821030"
  },
  {
    "text": "systems or a lot of concurrency and if you have operations that overlap each other you need robust ways of linking",
    "start": "1821030",
    "end": "1826570"
  },
  {
    "text": "the operations together if all of your operations don't occur in a strict time",
    "start": "1826570",
    "end": "1831650"
  },
  {
    "text": "order then you're going to need a way to realize that that operation was actually part of this one because they're going",
    "start": "1831650",
    "end": "1837890"
  },
  {
    "text": "to be overlapping operations and the",
    "start": "1837890",
    "end": "1844430"
  },
  {
    "start": "1842000",
    "end": "1980000"
  },
  {
    "text": "typical visualization for this is these little timelines you've probably seen pictures of these they're pretty useful",
    "start": "1844430",
    "end": "1850010"
  },
  {
    "text": "it's just another way of like letting our brains process a large amount of data and visualizations an incredibly",
    "start": "1850010",
    "end": "1857360"
  },
  {
    "text": "valuable tool for any data and trace data is no difference if we could write",
    "start": "1857360",
    "end": "1863630"
  },
  {
    "text": "a timeline to see when these file read operations are occurring and we can immediately see just by looking at this",
    "start": "1863630",
    "end": "1869570"
  },
  {
    "text": "you don't have to spend long is that the first ones slower than the second one and that they occur within the same two",
    "start": "1869570",
    "end": "1877190"
  },
  {
    "text": "minutes of each other or whatever if we",
    "start": "1877190",
    "end": "1882590"
  },
  {
    "text": "then extend that with these relationships we can see which file read operations are part of a bigger a macro",
    "start": "1882590",
    "end": "1890240"
  },
  {
    "text": "operation so this connection to our server actually does two separate files read operations it's kind of interesting",
    "start": "1890240",
    "end": "1897380"
  },
  {
    "text": "to know why is it reading the file twice does it need the file from does it need",
    "start": "1897380",
    "end": "1903350"
  },
  {
    "text": "the data from two files maybe it does maybe it doesn't and if you split it out",
    "start": "1903350",
    "end": "1909920"
  },
  {
    "text": "by some of the attributes that you've tagged the data with it so v-type the data with for example which user",
    "start": "1909920",
    "end": "1915470"
  },
  {
    "text": "initiated that connection then you can split this data up and you can say that",
    "start": "1915470",
    "end": "1921830"
  },
  {
    "text": "this data this operation this connection actually only read one file that's kind",
    "start": "1921830",
    "end": "1929150"
  },
  {
    "text": "of interesting so if the first user is complaining why is his operation taking longer here's a whole operation taking",
    "start": "1929150",
    "end": "1935150"
  },
  {
    "text": "longer then you can actually work out why it's reading two files and why is it",
    "start": "1935150",
    "end": "1941660"
  },
  {
    "text": "doing that maybe you can start asking questions",
    "start": "1941660",
    "end": "1945490"
  },
  {
    "text": "the distributed tracing aspect of it is the idea that these identifies allow you",
    "start": "1946860",
    "end": "1952690"
  },
  {
    "text": "to cross either process boundaries or node boundaries until you can trace back",
    "start": "1952690",
    "end": "1959740"
  },
  {
    "text": "let's say you have a remote database server you could infer that this",
    "start": "1959740",
    "end": "1965950"
  },
  {
    "text": "database request was caused by this connection and that database request was",
    "start": "1965950",
    "end": "1971679"
  },
  {
    "text": "necessary because it was implemented implementing some authentication server for example",
    "start": "1971679",
    "end": "1978360"
  },
  {
    "start": "1980000",
    "end": "2076000"
  },
  {
    "text": "but tracings not free and so we have to think a little bit about if if tracing",
    "start": "1985430",
    "end": "1992960"
  },
  {
    "text": "was free then we could just put it everywhere and trace everything but it's",
    "start": "1992960",
    "end": "1998450"
  },
  {
    "text": "not because every time we have some operation it has to be logged at least written to a file maybe it has to be",
    "start": "1998450",
    "end": "2005350"
  },
  {
    "text": "formatted into some text maybe we can optimize that maybe we can just have some just like binary format",
    "start": "2005350",
    "end": "2010780"
  },
  {
    "text": "for our logs and our traces and so we can make the overhead really small but as the number of occurrences of that",
    "start": "2010780",
    "end": "2017680"
  },
  {
    "text": "trace grow the overhead is going to grow you can't avoid that and this is why we",
    "start": "2017680",
    "end": "2025450"
  },
  {
    "text": "have to talk about things like sampling and aggregation so instead of logging",
    "start": "2025450",
    "end": "2033160"
  },
  {
    "text": "and recording every event we record every tenth or every hundredth or in",
    "start": "2033160",
    "end": "2039010"
  },
  {
    "text": "some systems you can start a request and add some metadata to the request so that",
    "start": "2039010",
    "end": "2046450"
  },
  {
    "text": "it causes the tracing to occur so you can instigate a request we're tracing enabled revamping or we can do a granade",
    "start": "2046450",
    "end": "2055060"
  },
  {
    "text": "on't care about every individual event maybe we will just want to know how many or how long the operation is taking on",
    "start": "2055060",
    "end": "2064990"
  },
  {
    "text": "average so we could take a one-minute average of all the durations for example",
    "start": "2064990",
    "end": "2070179"
  },
  {
    "text": "maybe that's enough information",
    "start": "2070179",
    "end": "2073919"
  },
  {
    "start": "2076000",
    "end": "2158000"
  },
  {
    "text": "this nicely leads us onto the topic of metrics this idea of aggregating events",
    "start": "2076440",
    "end": "2082079"
  },
  {
    "text": "into numbers instead of text or some sort of structured format good",
    "start": "2082079",
    "end": "2089608"
  },
  {
    "text": "take a step back metrics and just interesting numbers and we obtain them",
    "start": "2089609",
    "end": "2097138"
  },
  {
    "text": "by pulling them frequently or computing them over a time window so a one-minute",
    "start": "2097139",
    "end": "2102990"
  },
  {
    "text": "average for example or a total number of connections things like that",
    "start": "2102990",
    "end": "2109079"
  },
  {
    "text": "and you can see a lot of really nice examples of this in peach top another",
    "start": "2109079",
    "end": "2114349"
  },
  {
    "text": "excellent tool good debugging tool hate",
    "start": "2114349",
    "end": "2120150"
  },
  {
    "text": "top you can run on a server and it just tells you some useful metrics about the server gives you the CPU usage just a",
    "start": "2120150",
    "end": "2126720"
  },
  {
    "text": "number memory usage another number a",
    "start": "2126720",
    "end": "2132329"
  },
  {
    "text": "different unit process count how many processes are running or a server very",
    "start": "2132329",
    "end": "2138990"
  },
  {
    "text": "useful to know and even the uptime when",
    "start": "2138990",
    "end": "2144930"
  },
  {
    "text": "did your server last reboot or when was it last to be booted by some rogue IT admin again just another number number",
    "start": "2144930",
    "end": "2152190"
  },
  {
    "text": "of seconds since reboot",
    "start": "2152190",
    "end": "2156920"
  },
  {
    "text": "it's very flexible and the great thing about numbers is you can very easily",
    "start": "2159460",
    "end": "2164800"
  },
  {
    "text": "draw histories and trends of numbers as",
    "start": "2164800",
    "end": "2170319"
  },
  {
    "text": "example here shows the memory usage of a server in gigabytes and we can see",
    "start": "2170319",
    "end": "2175890"
  },
  {
    "text": "sometime the memory usage started growing rapidly and eventually we get",
    "start": "2175890",
    "end": "2181420"
  },
  {
    "text": "our stat bad Alec I wonder how this could have been avoided could it be",
    "start": "2181420",
    "end": "2186550"
  },
  {
    "text": "something to do with the fact that memory was growing well if you didn't have this graph you'd have no idea why",
    "start": "2186550",
    "end": "2192069"
  },
  {
    "text": "you got stirred bad eye look now you have a graph life's good so what",
    "start": "2192069",
    "end": "2198880"
  },
  {
    "text": "happened at 10:15 in the ideal world",
    "start": "2198880",
    "end": "2205059"
  },
  {
    "text": "what we'd be able to do guess we be able to set some threshold and say if our memory usage goes above 80% of the",
    "start": "2205059",
    "end": "2212200"
  },
  {
    "text": "server's memory then tell us and give us a big red warning in big bold letters",
    "start": "2212200",
    "end": "2218369"
  },
  {
    "text": "and then some diligent person or some",
    "start": "2218369",
    "end": "2224020"
  },
  {
    "text": "unlucky person who happened to be on call can go and fix it before the error happens",
    "start": "2224020",
    "end": "2231328"
  },
  {
    "text": "how we achieve this is just by collecting data but storing it over a time period so we store the history of",
    "start": "2234760",
    "end": "2241000"
  },
  {
    "text": "the data and it's actually a lot easier to store a very large history of numbers",
    "start": "2241000",
    "end": "2246070"
  },
  {
    "text": "than it is of text because numbers compress very well and you can aggregate",
    "start": "2246070",
    "end": "2251770"
  },
  {
    "text": "them instead of storing every single value you ever collected you could say",
    "start": "2251770",
    "end": "2259000"
  },
  {
    "text": "well I don't need to know the number the memory usage every 100 milliseconds only",
    "start": "2259000",
    "end": "2265420"
  },
  {
    "text": "when I'm looking at two weeks worth of memory usage I really only care about",
    "start": "2265420",
    "end": "2271270"
  },
  {
    "text": "what was the memory every five minutes because I'm more interested in the trend",
    "start": "2271270",
    "end": "2276780"
  },
  {
    "text": "so numbers are much easier to store in large volumes than text and from that",
    "start": "2276780",
    "end": "2285880"
  },
  {
    "text": "this data we can build analysis and look at trends what we want to do is because",
    "start": "2285880",
    "end": "2294220"
  },
  {
    "text": "you can find lots of really good monitoring systems that do this for you but at a server level so there are",
    "start": "2294220",
    "end": "2299410"
  },
  {
    "text": "monitor things like CPU usage and memory usage for you in network usage disk usage things like this all very useful",
    "start": "2299410",
    "end": "2304990"
  },
  {
    "text": "data but what we want to do is we want to add our own data to that so from our",
    "start": "2304990",
    "end": "2311050"
  },
  {
    "text": "C++ code we want to inject our own metrics into this system so that we can collect a trend for example or the",
    "start": "2311050",
    "end": "2317710"
  },
  {
    "text": "number of files we read or the number of connections that occur to our service we",
    "start": "2317710",
    "end": "2323560"
  },
  {
    "text": "can look at the trends of those and use those to debug issues when they occur",
    "start": "2323560",
    "end": "2328590"
  },
  {
    "start": "2329000",
    "end": "2403000"
  },
  {
    "text": "a common format for representing metrics is this one here open metrics simple text format what",
    "start": "2330710",
    "end": "2339170"
  },
  {
    "text": "more interesting is the information in the format so we give our metric a name",
    "start": "2339170",
    "end": "2344990"
  },
  {
    "text": "let's say temperature and if we have a temperature sensor on our servers we can",
    "start": "2344990",
    "end": "2351590"
  },
  {
    "text": "give it some tags so okay we have this temperature metric but which sensor is",
    "start": "2351590",
    "end": "2357560"
  },
  {
    "text": "the temperature for which hostname is their temperature for the value of",
    "start": "2357560",
    "end": "2364250"
  },
  {
    "text": "course say 24 degrees and we might also explicitly put the timestamp in there",
    "start": "2364250",
    "end": "2370880"
  },
  {
    "text": "what we might also do is we might just record the timestamp that we poll the data from and there's some trade-offs",
    "start": "2370880",
    "end": "2378110"
  },
  {
    "text": "there about whether well exactly how you do that and it depends a lot on the frequency that you want to hold data but",
    "start": "2378110",
    "end": "2384650"
  },
  {
    "text": "for this use case let's assume we're polling it fairly coarsely every second for example if you were polling data",
    "start": "2384650",
    "end": "2391070"
  },
  {
    "text": "maybe every Millis 10 milliseconds 100 milliseconds then capturing the timestamp of every one of those there",
    "start": "2391070",
    "end": "2397490"
  },
  {
    "text": "are better ways to do that",
    "start": "2397490",
    "end": "2400810"
  },
  {
    "start": "2403000",
    "end": "2505000"
  },
  {
    "text": "counters again libraries for these not a",
    "start": "2404390",
    "end": "2409760"
  },
  {
    "text": "revolutionary concept but you can find a few libraries they'll let you do this in",
    "start": "2409760",
    "end": "2416030"
  },
  {
    "text": "a fairly easy way I'm sort of going to express here my desire for a library and",
    "start": "2416030",
    "end": "2421640"
  },
  {
    "text": "sort of the fundamentals of how you might build one if you wanted to it's really not complicated it's quite common",
    "start": "2421640",
    "end": "2428450"
  },
  {
    "text": "that you might have a counter class of some sort and you can tag this with some metadata and then when you want to",
    "start": "2428450",
    "end": "2436460"
  },
  {
    "text": "record an occurrence of an event you increment the counter so we increment the number of files read",
    "start": "2436460",
    "end": "2443650"
  },
  {
    "text": "these counters typically just wrappers around integers and we make them atomic integers or some sort of thread-safe",
    "start": "2447460",
    "end": "2453400"
  },
  {
    "text": "integer if we have lots of threads in our application and we want to be asynchronously polling the numbers from",
    "start": "2453400",
    "end": "2459490"
  },
  {
    "text": "somewhere but what's important is that the increment operation that adding to a",
    "start": "2459490",
    "end": "2467020"
  },
  {
    "text": "counter is just incrementing an integer maybe an atomic integer if it has to be",
    "start": "2467020",
    "end": "2473130"
  },
  {
    "text": "we're keeping it as cheap as possible when you record an occurrence that you've read a file you're not sending an",
    "start": "2473130",
    "end": "2480010"
  },
  {
    "text": "event to some remote server you're not writing something to a log file you're keeping it as cheap as possible and this",
    "start": "2480010",
    "end": "2485230"
  },
  {
    "text": "is really useful if you're writing performance critical software because you can actually put counters in places",
    "start": "2485230",
    "end": "2490630"
  },
  {
    "text": "that you would think of fairly performance sensitive they don't restrict yourself we collect these",
    "start": "2490630",
    "end": "2500829"
  },
  {
    "text": "frequently using a method some sort of poll method on the counter typically we",
    "start": "2500829",
    "end": "2507460"
  },
  {
    "text": "will have a nother thread somewhere in application which will run through all the counters collect the values and then",
    "start": "2507460",
    "end": "2514869"
  },
  {
    "text": "we will emit them somewhere until we get a record of every second or two seconds",
    "start": "2514869",
    "end": "2520260"
  },
  {
    "text": "for example and it's okay for this",
    "start": "2520260",
    "end": "2526030"
  },
  {
    "text": "operation is a bit more heavyweight it's okay if we have to send this over a",
    "start": "2526030",
    "end": "2532599"
  },
  {
    "text": "network or write this to a file because we're doing it infrequently if we got a million events occurring a second we",
    "start": "2532599",
    "end": "2539799"
  },
  {
    "text": "don't have to do this heavy work a million times all we're doing a million times is incrementing the counter only",
    "start": "2539799",
    "end": "2546369"
  },
  {
    "text": "every second or every five seconds are we doing that heavyweight work of taking those numbers formatting them sending",
    "start": "2546369",
    "end": "2552490"
  },
  {
    "text": "them storing them which is extremely powerful and if you're thinking well I",
    "start": "2552490",
    "end": "2562020"
  },
  {
    "start": "2560000",
    "end": "2583000"
  },
  {
    "text": "bet that increment operation can be optimized even more than just incrementing an atomic integer then",
    "start": "2562020",
    "end": "2568960"
  },
  {
    "text": "you're right and somebody actually wrote an entire paper on just making counting things really fast so if you're really",
    "start": "2568960",
    "end": "2575829"
  },
  {
    "text": "interested then I recommend you read that safely you won't be as confused as",
    "start": "2575829",
    "end": "2581170"
  },
  {
    "text": "I was so where else can we put these",
    "start": "2581170",
    "end": "2586540"
  },
  {
    "start": "2583000",
    "end": "2630000"
  },
  {
    "text": "counters well I said we could actually put them in more places than you might expect so what if not only do we count",
    "start": "2586540",
    "end": "2594280"
  },
  {
    "text": "the number of times we read a file but the number of times we read a line from a file or a record from a file you know",
    "start": "2594280",
    "end": "2604510"
  },
  {
    "text": "maybe this is a critical but fairly heavyweight loop it's reading some data as processing it's pausing it so it's",
    "start": "2604510",
    "end": "2611319"
  },
  {
    "text": "not no there's some work going on in there is adding this increment to it",
    "start": "2611319",
    "end": "2616540"
  },
  {
    "text": "going to be a big overhead it actually might not be and if the data you're getting from that counter is valuable",
    "start": "2616540",
    "end": "2622390"
  },
  {
    "text": "enough then you might even take a tiny overhead but you know that's a trade-off",
    "start": "2622390",
    "end": "2627640"
  },
  {
    "text": "you have to make",
    "start": "2627640",
    "end": "2630210"
  },
  {
    "start": "2630000",
    "end": "2929000"
  },
  {
    "text": "the data when you start looking at this counter and you're actually running some",
    "start": "2632890",
    "end": "2638980"
  },
  {
    "text": "code start off at zero and then when",
    "start": "2638980",
    "end": "2644079"
  },
  {
    "text": "some operations come in you start reading lines from the file and the counter starts going up I'd say for",
    "start": "2644079",
    "end": "2650559"
  },
  {
    "text": "example we're pulling it every second or five seconds so this is useful we can",
    "start": "2650559",
    "end": "2657460"
  },
  {
    "text": "see that the we are reading lines and the numbers going up but of course we",
    "start": "2657460",
    "end": "2663339"
  },
  {
    "text": "can do much better than this and it's much more useful if we actually visualize this number now what we can",
    "start": "2663339",
    "end": "2669549"
  },
  {
    "text": "see is that the number of lines we're reading goes up at some fairly linear",
    "start": "2669549",
    "end": "2675069"
  },
  {
    "text": "rate and then stops and then goes up again that might be because we're",
    "start": "2675069",
    "end": "2680619"
  },
  {
    "text": "reading two files we can see a lot of information from this graph we can see",
    "start": "2680619",
    "end": "2685690"
  },
  {
    "text": "how many lines we're reading from the file as we read some lines and it levels off so we know we've finished and we",
    "start": "2685690",
    "end": "2692890"
  },
  {
    "text": "connect and we can see the rate that we're being at what they were able to read lines from a file and of course you",
    "start": "2692890",
    "end": "2700660"
  },
  {
    "text": "can graph that and now what you've done just by putting that simple counter in",
    "start": "2700660",
    "end": "2706390"
  },
  {
    "text": "one of your interesting processing loops you now get a really valuable",
    "start": "2706390",
    "end": "2711640"
  },
  {
    "text": "performance metric you can see the rate which your system is capable of reading lines from a file but not averaged over",
    "start": "2711640",
    "end": "2719440"
  },
  {
    "text": "the entire lifetime of your process but potentially per request or per user",
    "start": "2719440",
    "end": "2726359"
  },
  {
    "text": "because these two from this graph here is really hard to show really hard to",
    "start": "2726359",
    "end": "2733900"
  },
  {
    "text": "see that we're actually reading lines at a faster rate the second time around",
    "start": "2733900",
    "end": "2739809"
  },
  {
    "text": "than the first time around maybe that's because we got some disk cache helping us so we're not reading",
    "start": "2739809",
    "end": "2745329"
  },
  {
    "text": "everything from the disk then we have this sort of interesting lump in the",
    "start": "2745329",
    "end": "2751690"
  },
  {
    "text": "data it sort of in the first one it drops off a little bit and you would never have seen that if",
    "start": "2751690",
    "end": "2758269"
  },
  {
    "text": "all you were doing was taking the entire duration of the operation and dividing it by the number of lines you read",
    "start": "2758269",
    "end": "2764319"
  },
  {
    "text": "because you would see the average for the whole operation if you have this counter that's counting the individual",
    "start": "2764319",
    "end": "2770809"
  },
  {
    "text": "operations you can see how the rate changes if you have concurrent",
    "start": "2770809",
    "end": "2777799"
  },
  {
    "text": "operations in your system and you tag them with additional metadata for example which user is reading the file",
    "start": "2777799",
    "end": "2784269"
  },
  {
    "text": "or which fire you're reading then perhaps you couldn't actually see why",
    "start": "2784269",
    "end": "2790009"
  },
  {
    "text": "that's happening of course this is a contrived example but and with this data",
    "start": "2790009",
    "end": "2798769"
  },
  {
    "text": "you can then do some post-processing on it and if you did want to have by",
    "start": "2798769",
    "end": "2804410"
  },
  {
    "text": "average over a bigger duration then you can do it you've got the raw data and these metrics databases they're really",
    "start": "2804410",
    "end": "2809509"
  },
  {
    "text": "good they let you do all sorts of sort of aggregation functions on your data so you could say okay we'll give me the",
    "start": "2809509",
    "end": "2816490"
  },
  {
    "text": "rate died incapable of reading lines for the whole system for every user I don't",
    "start": "2816490",
    "end": "2822230"
  },
  {
    "text": "care about individual users that much and then maybe you're able to see an effect where you have to start with the",
    "start": "2822230",
    "end": "2828950"
  },
  {
    "text": "performance is a bit slow and then it gets better maybe because of some caching some effects like that so really",
    "start": "2828950",
    "end": "2837769"
  },
  {
    "text": "valuable and all we did to get all of this data was just add a counter to one part of our processing loop and of",
    "start": "2837769",
    "end": "2846710"
  },
  {
    "text": "course it wouldn't be complete if we didn't compare this and put this side by",
    "start": "2846710",
    "end": "2851750"
  },
  {
    "text": "side with the other fancy graph that we drew earlier that tracing data if we",
    "start": "2851750",
    "end": "2860059"
  },
  {
    "text": "know when the operations occur then we can then correlate for example ok this",
    "start": "2860059",
    "end": "2866390"
  },
  {
    "text": "file read these lines read always so we had that flat point in the graph it's",
    "start": "2866390",
    "end": "2872779"
  },
  {
    "text": "read some lines and it's read some more lines we can see that that was two separate operations and then we can use",
    "start": "2872779",
    "end": "2877849"
  },
  {
    "text": "that to disambiguate it from perhaps on pause and processing because I would then give us that sort of fall-off in",
    "start": "2877849",
    "end": "2883460"
  },
  {
    "text": "the rate as well so we bring all this information is course information there's fine grained information",
    "start": "2883460",
    "end": "2889700"
  },
  {
    "text": "together you can start getting really good picture and build really good visualizations that you can use to not",
    "start": "2889700",
    "end": "2897240"
  },
  {
    "text": "only debug performance issues but functional issues as well because remember if we're adding error",
    "start": "2897240",
    "end": "2904050"
  },
  {
    "text": "information to these traces then this would show up in this visualization as well we might see that this file read",
    "start": "2904050",
    "end": "2911130"
  },
  {
    "text": "operation failed and we make it either put a big red sign there or something like that becomes very easy to trace",
    "start": "2911130",
    "end": "2917820"
  },
  {
    "text": "back why at the top level the user saw an error I'm which error at the very low",
    "start": "2917820",
    "end": "2923640"
  },
  {
    "text": "level it caused that happen so I think",
    "start": "2923640",
    "end": "2931380"
  },
  {
    "text": "we finished these sort of little code snippets that I've shown or something that I think is",
    "start": "2931380",
    "end": "2939930"
  },
  {
    "text": "worth exploring a bit more and I'm kind of trying to work on building something",
    "start": "2939930",
    "end": "2945359"
  },
  {
    "text": "coherent out of this but I don't think the libraries out there are sufficient",
    "start": "2945359",
    "end": "2952259"
  },
  {
    "text": "enough for what we want to do to get the best quality data we have lots of",
    "start": "2952259",
    "end": "2957509"
  },
  {
    "text": "logging libraries we have splattering of metrics libraries but what I really want to do is to bring this together",
    "start": "2957509",
    "end": "2963329"
  },
  {
    "text": "and I think there's value in not treating these three pillars logging",
    "start": "2963329",
    "end": "2969269"
  },
  {
    "text": "metrics what's the other one tracie need",
    "start": "2969269",
    "end": "2974819"
  },
  {
    "text": "some more coffee not treating these three things are separate but actually seeing where they overlap and how the data can be used together for example",
    "start": "2974819",
    "end": "2984259"
  },
  {
    "text": "that process file or process line event maybe we sometimes want a detailed more",
    "start": "2984259",
    "end": "2992189"
  },
  {
    "text": "rich description of that as a lob or trace but maybe sometimes we just want",
    "start": "2992189",
    "end": "2997229"
  },
  {
    "text": "to count or the average duration and if we had a system or a library where we",
    "start": "2997229",
    "end": "3002329"
  },
  {
    "text": "could just annotate our code with this is an operation this is a connection this is something happening then we",
    "start": "3002329",
    "end": "3009559"
  },
  {
    "text": "actually choose what we want okay well now we want the very detailed output for this event but for this event we just",
    "start": "3009559",
    "end": "3015679"
  },
  {
    "text": "want account on average something like this so we can take as much detail as we",
    "start": "3015679",
    "end": "3022279"
  },
  {
    "text": "can afford based on the trade-offs",
    "start": "3022279",
    "end": "3025719"
  },
  {
    "start": "3027000",
    "end": "3200000"
  },
  {
    "text": "so developer observable software that's my number one point if you take anything away from this it does require some",
    "start": "3029340",
    "end": "3037270"
  },
  {
    "text": "effort it's not free do you have to think about where you put you know",
    "start": "3037270",
    "end": "3042940"
  },
  {
    "text": "instrumentation into your code but it does become incredibly valuable in production if you've ever used a",
    "start": "3042940",
    "end": "3048670"
  },
  {
    "text": "relational database you will know that as a feature of every relational database you can run a query and get an",
    "start": "3048670",
    "end": "3056410"
  },
  {
    "text": "enormous amount of statistics about it when they do that for a reason it's so when users complain the database is slow",
    "start": "3056410",
    "end": "3063690"
  },
  {
    "text": "they have the tools to explain why it's slow an instrumentation is a trade-off",
    "start": "3063690",
    "end": "3071530"
  },
  {
    "text": "especially if you're working on a system that has performance requirements you",
    "start": "3071530",
    "end": "3077260"
  },
  {
    "text": "have to be careful about where you put it and you have to pick the right type of instrumentation for the event or the region of code that you're instrumenting",
    "start": "3077260",
    "end": "3084240"
  },
  {
    "text": "and the techniques are complementary you don't just have to add source",
    "start": "3084240",
    "end": "3091210"
  },
  {
    "text": "instrumentation you don't just have to use externally added instrumentation or tools like s trace you can use both and",
    "start": "3091210",
    "end": "3098110"
  },
  {
    "text": "you should use both sure use debugger if you've got it use s trace if you've got",
    "start": "3098110",
    "end": "3103480"
  },
  {
    "text": "it use everything in your disposal but also prepare for when you don't have that luxury so like my closing thought",
    "start": "3103480",
    "end": "3113950"
  },
  {
    "text": "is try and debug in development as you would in production if you encounter a",
    "start": "3113950",
    "end": "3120790"
  },
  {
    "text": "bug in the cozy confines of your development environment then think about",
    "start": "3120790",
    "end": "3126910"
  },
  {
    "text": "ok if this bug happened when I deployed my code on a server but I have limited",
    "start": "3126910",
    "end": "3132880"
  },
  {
    "text": "access to and limited tooling available what metrics what logging would I need to debug Wow and then when it does",
    "start": "3132880",
    "end": "3141730"
  },
  {
    "text": "happen or something similar happens in production not only are you going to know what information is available to",
    "start": "3141730",
    "end": "3147790"
  },
  {
    "text": "you you're gonna know how to analyze that information to work out what went wrong and I think that's incredibly",
    "start": "3147790",
    "end": "3154330"
  },
  {
    "text": "valuable and for me that's everything if you have",
    "start": "3154330",
    "end": "3161770"
  },
  {
    "text": "any questions or suggestions then please email me or sometimes I hang out on a",
    "start": "3161770",
    "end": "3168250"
  },
  {
    "text": "CPP Lang slack channel I always put my email address up at talks but I don't think I've ever got one email from",
    "start": "3168250",
    "end": "3175180"
  },
  {
    "text": "anyone i HD I've even had people in the past tweet someone something about my",
    "start": "3175180",
    "end": "3180730"
  },
  {
    "text": "talk because I don't use Twitter or anything so I sort of find out things about my talk indirectly through other",
    "start": "3180730",
    "end": "3186520"
  },
  {
    "text": "people I'm not very good at this whole social media business so there you go feel free to email me that's fine or",
    "start": "3186520",
    "end": "3194070"
  },
  {
    "text": "slack it's fine as well thank you very much [Applause]",
    "start": "3194070",
    "end": "3202019"
  }
]