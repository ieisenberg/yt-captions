[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "hence the Phoenix and the reason I think that is really important is because the limits community for the last couple of",
    "start": "7790",
    "end": "14840"
  },
  {
    "text": "had all the fun that had all of the great automation I've had all of the great tooling and in the windows and",
    "start": "14840",
    "end": "21500"
  },
  {
    "text": "when deploying Windows applications especially legacy Windows and Dutton applications it's just a little bit more",
    "start": "21500",
    "end": "27860"
  },
  {
    "text": "difficult it's more time-consuming it's more problematic to automate and it's just more difficult",
    "start": "27860",
    "end": "33970"
  },
  {
    "text": "that is until Windows Server 2016 has come along and I've added some new functionality divided container support",
    "start": "33970",
    "end": "41059"
  },
  {
    "text": "they've got docker integration and that's made everything a lot simpler a lot easier to automate even more",
    "start": "41059",
    "end": "48290"
  },
  {
    "text": "traditional old-school Windows applications instead of your nice shiny dotnet cause of the world so my name is",
    "start": "48290",
    "end": "56600"
  },
  {
    "start": "55000",
    "end": "98000"
  },
  {
    "text": "Ben hall I am one of the organizers of docker Linda meet ups I'm also a",
    "start": "56600",
    "end": "62149"
  },
  {
    "text": "Microsoft MVP in cloud and big center management and more importantly I'm the",
    "start": "62149",
    "end": "67280"
  },
  {
    "text": "founder of Ocelot war we do a product called cut coder alongside many other",
    "start": "67280",
    "end": "72740"
  },
  {
    "text": "things like teaching people docker and helping them integrate containers but cut coder is a free interactive learning",
    "start": "72740",
    "end": "80450"
  },
  {
    "text": "platform for software developers it gives you a step-by-step tutorial about how you can learn things like kubernetes",
    "start": "80450",
    "end": "86090"
  },
  {
    "text": "docker and alongside that a interactive browser-based environment tell you that",
    "start": "86090",
    "end": "92720"
  },
  {
    "text": "you can play with everything and have everything set up without needing to download to install anything so what I'm",
    "start": "92720",
    "end": "98869"
  },
  {
    "start": "98000",
    "end": "138000"
  },
  {
    "text": "going to talk about today well I'm going to talk about how we can start automating deployment of applications on",
    "start": "98869",
    "end": "104690"
  },
  {
    "text": "Windows Server 2016 what that entails and what's actually happening in the DES covers so I'm going to first give you an",
    "start": "104690",
    "end": "110990"
  },
  {
    "text": "introduction into containers and give you some context into what we're talking about and then can move on to how we",
    "start": "110990",
    "end": "116660"
  },
  {
    "text": "deploy Windows applications and windows and applications inside of these containers discuss briefly the",
    "start": "116660",
    "end": "123080"
  },
  {
    "text": "differences and why window the Linux and Dockers slightly different and what's happening in the DES covers something",
    "start": "123080",
    "end": "129319"
  },
  {
    "text": "called hyper-v containers and then look towards scaling and towards the future and how Diggle will actually work in",
    "start": "129319",
    "end": "135319"
  },
  {
    "text": "reality and in production so containers what are containers well if we think of",
    "start": "135319",
    "end": "143480"
  },
  {
    "text": "the real world and we think of how the real world operates in terms of containers there's a huge big mess",
    "start": "143480",
    "end": "148580"
  },
  {
    "text": "metal shipping containers about this wide of their about this high terms of scaling and they have certain key",
    "start": "148580",
    "end": "155060"
  },
  {
    "text": "properties like for example they have doors in a certain location and they are",
    "start": "155060",
    "end": "161030"
  },
  {
    "text": "recreated inside they've got certain label within certain places so they could they can be scanned and more",
    "start": "161030",
    "end": "166850"
  },
  {
    "text": "importantly they've got four hooks in each of the corners if these hooks that allow them to be connected and allowed",
    "start": "166850",
    "end": "173210"
  },
  {
    "text": "them to create this very strong coherent unit that you can put on big massive shipping containers and send all the way",
    "start": "173210",
    "end": "179900"
  },
  {
    "text": "around a world without them falling in the sea most of the time but what's on",
    "start": "179900",
    "end": "185270"
  },
  {
    "text": "the inside of these doesn't really matter that much and like you don't really care and it doesn't really matter from the shipping company's point of",
    "start": "185270",
    "end": "192920"
  },
  {
    "text": "view it could be card it could be t-shirts it could be part built products what matters is that consistency from",
    "start": "192920",
    "end": "200030"
  },
  {
    "text": "the outside is that consistently that they all look the same the auditing size they can all be connected to in all of",
    "start": "200030",
    "end": "206959"
  },
  {
    "text": "the same way and it is consistency which makes its scale and makes it work and that's kind of what we're getting to",
    "start": "206959",
    "end": "213500"
  },
  {
    "text": "with in terms of software deployments and software containers what's winning on the inside of a container doesn't",
    "start": "213500",
    "end": "219440"
  },
  {
    "text": "really matter that much it could be a dotnet core application it could be a vb6 application it could be sequel",
    "start": "219440",
    "end": "227450"
  },
  {
    "text": "server what that doesn't matter what's important is a consistency about how we",
    "start": "227450",
    "end": "232519"
  },
  {
    "text": "start these focuses how we build these containers and how they work at scale and that's what we're aiming for and",
    "start": "232519",
    "end": "239150"
  },
  {
    "text": "that's what we're heading for if you think about the two types of virtualization containers take a type of",
    "start": "239150",
    "end": "246260"
  },
  {
    "start": "240000",
    "end": "386000"
  },
  {
    "text": "virtualization traditionally we're used to the hyper-v hypervisor based",
    "start": "246260",
    "end": "251840"
  },
  {
    "text": "virtualization for your ESX your then your hyper-v and while this has been",
    "start": "251840",
    "end": "259549"
  },
  {
    "text": "very successful it also comes with a huge amounts of overhead and kind of like a heaviness which comes along with",
    "start": "259549",
    "end": "265280"
  },
  {
    "text": "it and that's because in order to provide security and sandbox in and abstractions your host operating system",
    "start": "265280",
    "end": "271669"
  },
  {
    "text": "needs to have a hypervisor which then boots under the guest operating system and so in order to where to get your",
    "start": "271669",
    "end": "278210"
  },
  {
    "text": "flexibility you had butl this guest operating system with the in on what you was winning give it",
    "start": "278210",
    "end": "283490"
  },
  {
    "text": "windows it could take ten minutes to boot up in order to start your application and a thirst book based and",
    "start": "283490",
    "end": "289580"
  },
  {
    "text": "also to keep your guest operating-system happy you had to pre-allocate for a 16",
    "start": "289580",
    "end": "295070"
  },
  {
    "text": "gigabytes of ram 40 gig of this space and it was just a huge amount of overhead and with slowed everything down",
    "start": "295070",
    "end": "301820"
  },
  {
    "text": "and made it difficult to scale and made it difficult to be more dynamic and hence we ended up with long winning",
    "start": "301820",
    "end": "307400"
  },
  {
    "text": "virtual machines which lasted forever because they're too difficult to move around and move between different",
    "start": "307400",
    "end": "312980"
  },
  {
    "text": "services and kind of scaled more dynamically and so this is where the container mindset has come in I try to",
    "start": "312980",
    "end": "320300"
  },
  {
    "text": "make everything a lot more simpler more lightweight and a lot more flexible in terms of scaling and migrating workloads",
    "start": "320300",
    "end": "325820"
  },
  {
    "text": "and so instead of having a hypervisor a hyper-v we've now got a docker engine or",
    "start": "325820",
    "end": "331100"
  },
  {
    "text": "a container engine and the container engine contains and offers kernel",
    "start": "331100",
    "end": "336920"
  },
  {
    "text": "virtualization so instead of virtualizing the entire guest operating system with virtualizing the kernel and",
    "start": "336920",
    "end": "343580"
  },
  {
    "text": "so this allows us to take advantage of the host operating system kernel but still deliver sandboxing still delivered",
    "start": "343580",
    "end": "350690"
  },
  {
    "text": "security still deliver restrictions that what we used to from the security point",
    "start": "350690",
    "end": "356000"
  },
  {
    "text": "of view with virtual machines in terms of the container itself is that everything your application needs to",
    "start": "356000",
    "end": "361880"
  },
  {
    "text": "start so if you're deploying a dotnet application the container will contain the dotnet framework it would have",
    "start": "361880",
    "end": "367610"
  },
  {
    "text": "always of your built binaries that have have your all of your application configuration and everything in a",
    "start": "367610",
    "end": "373850"
  },
  {
    "text": "container it's separate from everything else so while one container could be running no GS and another could be",
    "start": "373850",
    "end": "379700"
  },
  {
    "text": "running no J 13:7 another could be reading net and all sandbox they're all isolated at all separate but containers",
    "start": "379700",
    "end": "387920"
  },
  {
    "start": "386000",
    "end": "423000"
  },
  {
    "text": "are not virtual machines they have key important difference and that is the overhead and that's the allocation",
    "start": "387920",
    "end": "393980"
  },
  {
    "text": "because you don't have this guest operating system and which requires booting up you don't have to wait 10",
    "start": "393980",
    "end": "400250"
  },
  {
    "text": "minutes for your projects to start anymore it starts instantly because of",
    "start": "400250",
    "end": "406280"
  },
  {
    "text": "this I like to think darker add more like a process manager more than anything fundamentally all you're doing",
    "start": "406280",
    "end": "412670"
  },
  {
    "text": "is starting processes you're just starting you're done application and darker providing that security that",
    "start": "412670",
    "end": "418610"
  },
  {
    "text": "packaging that consistency that we want from our viewpoint and duckin is the",
    "start": "418610",
    "end": "424850"
  },
  {
    "start": "423000",
    "end": "498000"
  },
  {
    "text": "tooling duck with something which had made all of this possible and made all of this ecosystem available to us",
    "start": "424850",
    "end": "431830"
  },
  {
    "text": "containers have been around in many different forms for the last 20 years they originated as a concept in freebsd",
    "start": "431830",
    "end": "438680"
  },
  {
    "text": "where the creator needed to be able to run freebsd alongside developing future",
    "start": "438680",
    "end": "443990"
  },
  {
    "text": "versions of it they wanted to do that in a very streamlined very fast very appropriate way and then they kind of",
    "start": "443990",
    "end": "450500"
  },
  {
    "text": "iterated multiple times they appeared as jails and zones and Solaris and then",
    "start": "450500",
    "end": "455810"
  },
  {
    "text": "Linux came along with Alexi and then Google and enhanced that with three",
    "start": "455810",
    "end": "461930"
  },
  {
    "text": "groups and namespaces to provide more security and more restrictions are more control over how these processes are",
    "start": "461930",
    "end": "468080"
  },
  {
    "text": "running and while it was all possible and it all down the Linux kernel you",
    "start": "468080",
    "end": "473270"
  },
  {
    "text": "kind of had to be really really passionate in order to be able to take advantage of it but you it would not the",
    "start": "473270",
    "end": "478940"
  },
  {
    "text": "easiest thing in the world in order to be able to deal with on a daily basis shamefully Tucker has now made that",
    "start": "478940",
    "end": "485120"
  },
  {
    "text": "simple document provide a set of tooling and a set of API s so that we can work with containers on a daily basis and we",
    "start": "485120",
    "end": "492200"
  },
  {
    "text": "can build our entire development lifecycle around them but doc is also realistic while it's a huge company and",
    "start": "492200",
    "end": "499310"
  },
  {
    "start": "498000",
    "end": "567000"
  },
  {
    "text": "they're doing many fantastic things they can't solve every single problem until they've got the mindset our batteries",
    "start": "499310",
    "end": "505700"
  },
  {
    "text": "included but removable out of the box they want you to have a great experience they want you to have all of the tooling",
    "start": "505700",
    "end": "512750"
  },
  {
    "text": "that all of the functionality there to get you and get you into production and help you solve real problems but if",
    "start": "512750",
    "end": "519890"
  },
  {
    "text": "you're talking to some like really expensive storage array or got weird",
    "start": "519890",
    "end": "525550"
  },
  {
    "text": "interesting networking problems that realistic that maybe that's not the most",
    "start": "525550",
    "end": "530630"
  },
  {
    "text": "appropriate problem for them to solve instead they rely on the ecosystem and the ecosystem which is building some",
    "start": "530630",
    "end": "536720"
  },
  {
    "text": "amazing companies we've solved the really interesting problems of dealing with networking at scale or dealing with",
    "start": "536720",
    "end": "543260"
  },
  {
    "text": "the interesting storage devices from the EMC s of the world for example and the dark I've made it open made",
    "start": "543260",
    "end": "550650"
  },
  {
    "text": "accessible I made their entire platform pluggable so that these thing can be easily swapped in and swapped out as you",
    "start": "550650",
    "end": "559080"
  },
  {
    "text": "grow in terms of complexity within your system and for me in terms of what",
    "start": "559080",
    "end": "565920"
  },
  {
    "text": "containers and darker and what's important there's three key concepts",
    "start": "565920",
    "end": "571399"
  },
  {
    "text": "firstly we have these docker containers and these are actually the winning processes which are FEM boxed and secure",
    "start": "573170",
    "end": "581160"
  },
  {
    "text": "and I've got all the isolations which we demand from our system these winning",
    "start": "581160",
    "end": "587310"
  },
  {
    "text": "posters start life as a docker image and fundamentally you can kind of think of",
    "start": "587310",
    "end": "592590"
  },
  {
    "text": "this as a layered lip file we'll get more into this in a moment but it has",
    "start": "592590",
    "end": "597630"
  },
  {
    "text": "got all of your configuration it's all of the files they've got all of your dependencies and instead of it just",
    "start": "597630",
    "end": "603240"
  },
  {
    "text": "being one huge zip file with everything required it's been broken down into layers if these layers allow us to reuse",
    "start": "603240",
    "end": "609630"
  },
  {
    "text": "and reuse lies different files between different projects and so you don't have to keep managing and installing the same",
    "start": "609630",
    "end": "616820"
  },
  {
    "text": "dotnet version for every single application we deploy instead that we can repurpose Donette dotnet",
    "start": "616820",
    "end": "624990"
  },
  {
    "text": "installation so it gets more space-saving it's quicker to deploy quicker to manage and all of these",
    "start": "624990",
    "end": "632550"
  },
  {
    "text": "images live inside the dock of registry so those familiar with the linux world then put a public documentary it's a",
    "start": "632550",
    "end": "638970"
  },
  {
    "text": "docker hub it's where all of the images live is where we can go to find discover and download applications which have",
    "start": "638970",
    "end": "646860"
  },
  {
    "text": "been pre-built pre-configured and we can also deploy and host our own docker registry internally and on our private",
    "start": "646860",
    "end": "653970"
  },
  {
    "text": "network many cloud providers for tillage or have data the service and this is where we keep our applications and keep",
    "start": "653970",
    "end": "660630"
  },
  {
    "text": "the images which we're building and this for that stuck at and in terms of",
    "start": "660630",
    "end": "666750"
  },
  {
    "start": "662000",
    "end": "687000"
  },
  {
    "text": "windows containers and the work which my crops are doing most of the work in with docker to make it part of the same",
    "start": "666750",
    "end": "673230"
  },
  {
    "text": "application it's not a fork is not a different distribution is part of the main darker release and we can see this",
    "start": "673230",
    "end": "680820"
  },
  {
    "text": "by looking at the docker source code and because everything is open source which",
    "start": "680820",
    "end": "686519"
  },
  {
    "text": "is amazing and you can kind of feed on the interesting aspects like we've now got windows directory and they're the",
    "start": "686519",
    "end": "691920"
  },
  {
    "text": "particular it's taken advantage of golang and so we can have targeted builds for windows for linux for OSX and",
    "start": "691920",
    "end": "699660"
  },
  {
    "text": "also we see some interesting things coming from Microsoft in terms of how they've changed and how they're dealing",
    "start": "699660",
    "end": "705660"
  },
  {
    "text": "with the container ecosystem that we've got a Windows i/o library publicly",
    "start": "705660",
    "end": "710700"
  },
  {
    "text": "available and github whittling go and we've got Microsoft hates CS shim which",
    "start": "710700",
    "end": "717300"
  },
  {
    "text": "is a host container service and it's an abstraction of the API to allow that docker and a Windows kernel to talk to",
    "start": "717300",
    "end": "723570"
  },
  {
    "text": "each other and so it's all open it all in the public and so we can currently start to see Microsoft's intention and",
    "start": "723570",
    "end": "730860"
  },
  {
    "text": "workflow in that their internal process in terms of how they're thinking about containers internally which i think is",
    "start": "730860",
    "end": "736740"
  },
  {
    "text": "really cool so what is actually coming in Windows 2016 and what's actually",
    "start": "736740",
    "end": "741899"
  },
  {
    "start": "738000",
    "end": "747000"
  },
  {
    "text": "coming along to make all of these containers possible and make life easier for ourselves so there's four new key",
    "start": "741899",
    "end": "748980"
  },
  {
    "start": "747000",
    "end": "776000"
  },
  {
    "text": "components which are coming Windows server core and Windows Nano these are",
    "start": "748980",
    "end": "754529"
  },
  {
    "text": "operating systems designed to run inside containers and to design to give us the",
    "start": "754529",
    "end": "760290"
  },
  {
    "text": "tooling which we need in order for our pulses to run and but also support all",
    "start": "760290",
    "end": "766200"
  },
  {
    "text": "of the traditional api which they would expect and there's two new ways of winning that windows containers and",
    "start": "766200",
    "end": "771720"
  },
  {
    "text": "there's Windows hyper-v containers and I'll get into the differences in a moment and just like our friends in a",
    "start": "771720",
    "end": "777779"
  },
  {
    "text": "Linux world the way Windows containers work and feel and operate are very very similar almost identical in many ways so",
    "start": "777779",
    "end": "785699"
  },
  {
    "text": "you've got your guest you've got your host operating system Windows Server 2016",
    "start": "785699",
    "end": "790770"
  },
  {
    "text": "that could be running on bare metal it could be running in - or it could be running wherever we desire on top of",
    "start": "790770",
    "end": "797640"
  },
  {
    "text": "that we've got the Windows kernel that the thing which is now being virtualized and broken up and got all of the new",
    "start": "797640",
    "end": "802890"
  },
  {
    "text": "hooks in there so that we can bring need containerized processes we've got the docker engine which is the build for Windows so",
    "start": "802890",
    "end": "810990"
  },
  {
    "text": "this is again got all the functionality which would expect some darker it's a complete support release and then on top of that we can",
    "start": "810990",
    "end": "818470"
  },
  {
    "text": "run our processes of individual containers or separated or Sam boxed or isolated without them interfering with",
    "start": "818470",
    "end": "826000"
  },
  {
    "text": "each other in terms of Windows hyper-v containers they offer an additional",
    "start": "826000",
    "end": "832600"
  },
  {
    "start": "827000",
    "end": "948000"
  },
  {
    "text": "level of security an additional level of protection so instead of this sharing",
    "start": "832600",
    "end": "838120"
  },
  {
    "text": "the same host kernel from our applications when those hyper-v containers allow us to wrap that",
    "start": "838120",
    "end": "843250"
  },
  {
    "text": "container inside a very small very lightweight virtual machine and this allows us to have a separate kernel and",
    "start": "843250",
    "end": "850180"
  },
  {
    "text": "it allows an additional layer of security if our particular deployment requirements desire it and thinking",
    "start": "850180",
    "end": "857920"
  },
  {
    "text": "about when you would use one of the other ones obviously Windows containers are everything which you need either",
    "start": "857920",
    "end": "865060"
  },
  {
    "text": "secure the scaleable that are highly automated there all of the things which we kind of desire from a deployment",
    "start": "865060",
    "end": "871630"
  },
  {
    "text": "technology Windows hyper-v containers are useful in two and potentially three circumstances one",
    "start": "871630",
    "end": "879430"
  },
  {
    "text": "is you're a platform of the service someone like Heroku or maybe a jaw and",
    "start": "879430",
    "end": "885490"
  },
  {
    "text": "your hosting third-party software which may be not as twisted and it would be if",
    "start": "885490",
    "end": "891880"
  },
  {
    "text": "it's running internally so this may be maliciously trying to exploit it in some interesting and wonderful ways the other",
    "start": "891880",
    "end": "899680"
  },
  {
    "text": "side is multi-tenancy where again you're winning on you've got multiple vendors",
    "start": "899680",
    "end": "905290"
  },
  {
    "text": "multiple partners which you're hosting and it could be very awkward if some how",
    "start": "905290",
    "end": "912010"
  },
  {
    "text": "they did manage to break out of a container and then manage to break into another competitors container running on",
    "start": "912010",
    "end": "917860"
  },
  {
    "text": "the same machine and that could just be a little bit embarrassing for everyone involved and so this is where we know",
    "start": "917860",
    "end": "923920"
  },
  {
    "text": "type of V containers come in is where you need an additional level of security additional level of auditing the",
    "start": "923920",
    "end": "930579"
  },
  {
    "text": "additional support just in case a day or day attack did come out and I contain a",
    "start": "930579",
    "end": "937209"
  },
  {
    "text": "breakout would be possible but for most of the time and most applications Windows Server containers will be",
    "start": "937209",
    "end": "944260"
  },
  {
    "text": "perfect and they'll get you at where we want to be so now we've got windows containers and",
    "start": "944260",
    "end": "950680"
  },
  {
    "text": "windows hard-to-see containers they allow us to run processes and they are able to start our applications so now we",
    "start": "950680",
    "end": "957580"
  },
  {
    "text": "need something to actually run inside of our container so the containers got everything which the application needs",
    "start": "957580",
    "end": "963460"
  },
  {
    "text": "in order to be able to start so we've got your application itself it's got the dotnet framework it's got the JVM if",
    "start": "963460",
    "end": "969880"
  },
  {
    "text": "you're running Java but alongside that it also needs an operating system because it expects your operating system",
    "start": "969880",
    "end": "975790"
  },
  {
    "text": "to be there the only things that docker and kernel virtualization is offering and providing the case container is the",
    "start": "975790",
    "end": "982930"
  },
  {
    "text": "kernel it didn't interact with the host operating system and the files on a host operating system in any way instead it's",
    "start": "982930",
    "end": "990610"
  },
  {
    "text": "completely sandbox completely abstracted and completely secure because the worst thing is you're winning a complaint",
    "start": "990610",
    "end": "997030"
  },
  {
    "text": "container which accidentally deletes all of it files which happens in an automated test build scenario sometimes",
    "start": "997030",
    "end": "1003720"
  },
  {
    "text": "and then that destroys your host which has happened many time when you're in in automated scripts if containers shared",
    "start": "1003720",
    "end": "1011190"
  },
  {
    "text": "the host operating system in any way that would kind of destroy your host and that would then lead to other containers",
    "start": "1011190",
    "end": "1016530"
  },
  {
    "text": "winning which wouldn't be ideal in order to live that sandbox in and that isolation the containers need to be able",
    "start": "1016530",
    "end": "1023070"
  },
  {
    "text": "to add have the upgrade system running inside of them or later j'en of the",
    "start": "1023070",
    "end": "1028230"
  },
  {
    "text": "operating system and that's version to start with it windows server core it's",
    "start": "1028230",
    "end": "1033270"
  },
  {
    "text": "nearly Windows 32 compatible which means it's got all of the legacy API it's got",
    "start": "1033270",
    "end": "1038459"
  },
  {
    "text": "everything which you your application would expect apart from a few interesting things like a fax server",
    "start": "1038459",
    "end": "1044370"
  },
  {
    "text": "which definitely doesn't need to be inside of the container doesn't really need to be inside windows . at the",
    "start": "1044370",
    "end": "1050190"
  },
  {
    "text": "moment but the idea being if it provides",
    "start": "1050190",
    "end": "1055500"
  },
  {
    "text": "all the same behavior it provides all the same tooling it's designed for you to be able to pick up an existing",
    "start": "1055500",
    "end": "1061320"
  },
  {
    "text": "application and type in a container and work and that's the ambition of what",
    "start": "1061320",
    "end": "1067140"
  },
  {
    "text": "we're driving for and then we got Windows Nano because yes where we need",
    "start": "1067140",
    "end": "1072570"
  },
  {
    "start": "1068000",
    "end": "1112000"
  },
  {
    "text": "to be able to support more traditional applications and traditional ap is not",
    "start": "1072570",
    "end": "1078300"
  },
  {
    "text": "all applications need them especially as we're looking forward woods done that call and moving towards",
    "start": "1078300",
    "end": "1084210"
  },
  {
    "text": "a more cooked down lightweight development process we need an operating system to match that and that's why",
    "start": "1084210",
    "end": "1090510"
  },
  {
    "text": "Windows Nano comes in everything has been really stripped down it's going down to like the core the key components",
    "start": "1090510",
    "end": "1097830"
  },
  {
    "text": "of what makes up Windows ie networking storage drivers the.net the",
    "start": "1097830",
    "end": "1103500"
  },
  {
    "text": "core CLR framework itself and as we thought it's a 24 the size it's more -",
    "start": "1103500",
    "end": "1108900"
  },
  {
    "text": "more lightweight it's much more easy to be deployed on but as we thought it didn't support every scenario every",
    "start": "1108900",
    "end": "1115500"
  },
  {
    "start": "1112000",
    "end": "1152000"
  },
  {
    "text": "application and so for me the - way to think about it if you're familiar with Linux like Windows server call Eden",
    "start": "1115500",
    "end": "1122760"
  },
  {
    "text": "bootie like it's a traditional operating system which had been around for last ten years and you'll get most",
    "start": "1122760",
    "end": "1129750"
  },
  {
    "text": "applications deployed onto it without any modifications required where Windows",
    "start": "1129750",
    "end": "1134970"
  },
  {
    "text": "Nano is like the alpine Linux it's like small cut down really shiny really new really fresh but you may have to make",
    "start": "1134970",
    "end": "1142350"
  },
  {
    "text": "some modifications to your application in order to be able to take advantage of it and so this is where I see the two",
    "start": "1142350",
    "end": "1147930"
  },
  {
    "text": "operating systems coming in and the two requirements and why they exist side-by-side so how do you install these",
    "start": "1147930",
    "end": "1154230"
  },
  {
    "text": "and how do we get started and how do we actually start playing with them so if you're willing Server 2016 you can add a",
    "start": "1154230",
    "end": "1162780"
  },
  {
    "text": "new module you can install the darker package restarting machine and budget",
    "start": "1162780",
    "end": "1167910"
  },
  {
    "text": "you have everything which you need in order to be able to start deploying Windows containers if you're willing on",
    "start": "1167910",
    "end": "1174420"
  },
  {
    "text": "a jewel there's Windows Server 2016 with container support this contains",
    "start": "1174420",
    "end": "1181050"
  },
  {
    "text": "everything set up everything which you quiet in order to be able to get started playing around deploying and building",
    "start": "1181050",
    "end": "1187530"
  },
  {
    "text": "buildings windows containers and so once you've got that server in place you've",
    "start": "1187530",
    "end": "1193770"
  },
  {
    "start": "1190000",
    "end": "1226000"
  },
  {
    "text": "got duck a client which is your command line interface and this can talk to you",
    "start": "1193770",
    "end": "1199110"
  },
  {
    "text": "window server or it can to Linux servers and so you can work on that from your guest operating system and talking to as",
    "start": "1199110",
    "end": "1206790"
  },
  {
    "text": "you're talking to Linux everything being it's like really lovely cross-platform ecosystem form your single machine and",
    "start": "1206790",
    "end": "1214530"
  },
  {
    "text": "then obviously the client will talk to the doc engine on one of those two that will in turn talk",
    "start": "1214530",
    "end": "1219720"
  },
  {
    "text": "to the colonel and that will in turn know how to start processes as he containerized ecosystems and alongside",
    "start": "1219720",
    "end": "1227070"
  },
  {
    "start": "1226000",
    "end": "1264000"
  },
  {
    "text": "that we've got the layered VIP foil as I'm going to refer to it today at the",
    "start": "1227070",
    "end": "1232230"
  },
  {
    "text": "docker image and so this will come from the registry which has got the all of",
    "start": "1232230",
    "end": "1237480"
  },
  {
    "text": "the support and all of the images which we need and we've got that as we extend",
    "start": "1237480",
    "end": "1242520"
  },
  {
    "text": "and as we build our container image and add our own applications and add our own customizations to it that gets added as",
    "start": "1242520",
    "end": "1249750"
  },
  {
    "text": "an additional layer on top and as such eventually when that starts from a",
    "start": "1249750",
    "end": "1255630"
  },
  {
    "text": "containers point of view it looks and feels like an entire Windows virtual machine but in reality it's running",
    "start": "1255630",
    "end": "1262050"
  },
  {
    "text": "inside of a container on a slightly",
    "start": "1262050",
    "end": "1268290"
  },
  {
    "start": "1264000",
    "end": "1377000"
  },
  {
    "text": "separate but similar completely unrelated note in Windows 10 we've got",
    "start": "1268290",
    "end": "1274380"
  },
  {
    "text": "Windows Linux subsystem the Windows Linux subsystem allowed this to rim bash and allow this to win Linux processes on",
    "start": "1274380",
    "end": "1281550"
  },
  {
    "text": "top of Windows this is completely separate to the work that windows are",
    "start": "1281550",
    "end": "1286590"
  },
  {
    "text": "doing in terms of container support but it's important to identify the differences on the reasons why the Linux",
    "start": "1286590",
    "end": "1294420"
  },
  {
    "text": "subsystem is taking Linux processes emulating them train changing we",
    "start": "1294420",
    "end": "1301020"
  },
  {
    "text": "implementing the system cause and recover and translating them to Windows system cause and so there's this layer",
    "start": "1301020",
    "end": "1308130"
  },
  {
    "text": "and abstraction in the middle in terms of what container support are offering",
    "start": "1308130",
    "end": "1313170"
  },
  {
    "text": "containers are native they allow you to run Windows applications natively on top",
    "start": "1313170",
    "end": "1320010"
  },
  {
    "text": "of Windows with proper hooks in eternal but what that means is that we can't",
    "start": "1320010",
    "end": "1326220"
  },
  {
    "text": "pick up an existing docker Linux based image and expect it to work on top of a",
    "start": "1326220",
    "end": "1332910"
  },
  {
    "text": "Windows Server 2016 machine because the linux image will expect a linux kernel",
    "start": "1332910",
    "end": "1340470"
  },
  {
    "text": "to be there and i will expect the linux hooks in the kernel unordered kind of",
    "start": "1340470",
    "end": "1346160"
  },
  {
    "text": "expected thing just in the same way that we can't pick up a Windows docket image and expect it",
    "start": "1346160",
    "end": "1352670"
  },
  {
    "text": "to win on Linux because we need a Windows kernel being there in the first",
    "start": "1352670",
    "end": "1357920"
  },
  {
    "text": "place and so that's why the virtualization and the kernel virtual h8 kernel virtualization comes into play",
    "start": "1357920",
    "end": "1364540"
  },
  {
    "text": "but in the future like this is a really cool technology and it will be interesting to see where Microsoft goals",
    "start": "1364540",
    "end": "1370970"
  },
  {
    "text": "in terms of where that's heading but it's not it's important not to confuse",
    "start": "1370970",
    "end": "1376310"
  },
  {
    "text": "the two so keep talking about these docker images and these windows docker",
    "start": "1376310",
    "end": "1381380"
  },
  {
    "start": "1377000",
    "end": "1439000"
  },
  {
    "text": "images but like what are they I let's start building and let's start playing",
    "start": "1381380",
    "end": "1386590"
  },
  {
    "text": "so when you have everything set up you've got your your image or you've installed Windows Server 2016 everything",
    "start": "1386590",
    "end": "1394610"
  },
  {
    "text": "fresh and everything's clean and everything's working so the first thing you can do is like type in docker images",
    "start": "1394610",
    "end": "1400540"
  },
  {
    "text": "and this will provide you with the two container based operating systems the",
    "start": "1400540",
    "end": "1406760"
  },
  {
    "text": "Windows server core which is that slightly larger installation slightly large docker image designed for most",
    "start": "1406760",
    "end": "1413660"
  },
  {
    "text": "applications and then nano server which is a cookie on lightweight version of it",
    "start": "1413660",
    "end": "1419690"
  },
  {
    "text": "and then you will also see the particular version number as a tag so this is the Windows version this is the",
    "start": "1419690",
    "end": "1425870"
  },
  {
    "text": "Windows build that we can use in order to track what's been updated what",
    "start": "1425870",
    "end": "1430880"
  },
  {
    "text": "particular version of security fixes were apps etc in order to take this",
    "start": "1430880",
    "end": "1436700"
  },
  {
    "text": "these images and turn them into a container we use docker rim and it allows us to start processes using that",
    "start": "1436700",
    "end": "1445040"
  },
  {
    "start": "1439000",
    "end": "1521000"
  },
  {
    "text": "image as our base as our foundation with everything set up and everything configured so if we do govern IT kind of",
    "start": "1445040",
    "end": "1453380"
  },
  {
    "text": "makes it interactive and attach the terminal that allows it inputs and input",
    "start": "1453380",
    "end": "1458510"
  },
  {
    "text": "to it Windows server core which is up for operating system versions a",
    "start": "1458510",
    "end": "1463670"
  },
  {
    "text": "traditional one let's say when a command prompt and in the nice lovely blue we've",
    "start": "1463670",
    "end": "1469430"
  },
  {
    "text": "got my parish l on my host which launched a container and in the black we've got the lovely traditional windows",
    "start": "1469430",
    "end": "1476630"
  },
  {
    "text": "command prompt which has got everything you would expect this is running inside of Tina it's got different host name to my",
    "start": "1476630",
    "end": "1485120"
  },
  {
    "text": "host operating system it got similar looking files i'ii iearn april program",
    "start": "1485120",
    "end": "1490370"
  },
  {
    "text": "files uses windows directory but it's completely isolated and completely separate to the files which are my host",
    "start": "1490370",
    "end": "1497300"
  },
  {
    "text": "operating system so if I decided to like format the windows container that would",
    "start": "1497300",
    "end": "1502429"
  },
  {
    "text": "be fine obviously the container would be not very useful at the end of it but it wouldn't have any devastating problems",
    "start": "1502429",
    "end": "1510190"
  },
  {
    "text": "to the rest of my application which written cat coda I'm fully familiar with how everyone tries to delete the",
    "start": "1510190",
    "end": "1516500"
  },
  {
    "text": "container if you look at what's running",
    "start": "1516500",
    "end": "1522440"
  },
  {
    "start": "1521000",
    "end": "1589000"
  },
  {
    "text": "inside the container and there's something called SSMS and which kind of",
    "start": "1522440",
    "end": "1528559"
  },
  {
    "text": "if you are familiar with how Linux container works in the Linux will do you",
    "start": "1528559",
    "end": "1534380"
  },
  {
    "text": "say what's winning inside of my container and then you'll generally you'll only have bash and you'll have PS",
    "start": "1534380",
    "end": "1540950"
  },
  {
    "text": "which is listing all the things winning windows because of the historical nature of Windows applications expect other",
    "start": "1540950",
    "end": "1548540"
  },
  {
    "text": "things to be there to support the winning of the application itself until you'll expect and see things like SVC",
    "start": "1548540",
    "end": "1555710"
  },
  {
    "text": "host for example and because it's Windows there'll be multiple different things of these working and to support",
    "start": "1555710",
    "end": "1561410"
  },
  {
    "text": "and to make sure is happy and there'll only be things like twisting installer I PowerShell which is what we running but",
    "start": "1561410",
    "end": "1568910"
  },
  {
    "text": "when you see it these are all positives running inside of the container again they're not shared not interacting with",
    "start": "1568910",
    "end": "1574700"
  },
  {
    "text": "other things happening on the system they're just there in order to support what Windows needs in order to be able",
    "start": "1574700",
    "end": "1581059"
  },
  {
    "text": "to win effectively so we've got something running we've got a command prompt which is great but not massively",
    "start": "1581059",
    "end": "1587990"
  },
  {
    "text": "useful so let's start building something and like let's be realistic if you're",
    "start": "1587990",
    "end": "1594760"
  },
  {
    "start": "1589000",
    "end": "1623000"
  },
  {
    "text": "the 90% of applications I imagine which will take an advantage of windows containers will be something which has",
    "start": "1594760",
    "end": "1601340"
  },
  {
    "text": "been historically deployed onto a system and wants to be modernized but still needs to be maintained and it still",
    "start": "1601340",
    "end": "1607580"
  },
  {
    "text": "needs to be supported in some way and the tenses of rewriting that inside dotnet core it's probably not going to",
    "start": "1607580",
    "end": "1613040"
  },
  {
    "text": "happen this year but you still want to be able to take advantage of the container support and all of the",
    "start": "1613040",
    "end": "1619340"
  },
  {
    "text": "knives tooling that comes with being able to deploy more effectively so I tried to find the oldest",
    "start": "1619340",
    "end": "1625610"
  },
  {
    "text": "application I could and I did it was the nerd dinner 2.0 application lovely build",
    "start": "1625610",
    "end": "1633230"
  },
  {
    "text": "and released in May 2010 which I kind of thought like that's not that long ago and I was I actually that is quite a",
    "start": "1633230",
    "end": "1640700"
  },
  {
    "text": "good long time ago we've got the author still actually works at Microsoft on the",
    "start": "1640700",
    "end": "1645860"
  },
  {
    "text": "team what to think is even more impressive not due to a coding habit at",
    "start": "1645860",
    "end": "1651799"
  },
  {
    "text": "all obviously and obviously this is an application and it's been like seven",
    "start": "1651799",
    "end": "1658580"
  },
  {
    "text": "years six years since I last looked at its application so welcoming number how any of it works at all let alone how to",
    "start": "1658580",
    "end": "1664700"
  },
  {
    "text": "get it running but thankfully John kind",
    "start": "1664700",
    "end": "1669980"
  },
  {
    "text": "of thought about this it's got all of the binaries which have been built at part of the package and that no package",
    "start": "1669980",
    "end": "1675830"
  },
  {
    "text": "managers involves so everything the application needs is in that VIP file so this made my life a lot simpler to start",
    "start": "1675830",
    "end": "1681830"
  },
  {
    "text": "with but for mentally I don't know how it works so let's turn it into a Windows container and let's see if we can go",
    "start": "1681830",
    "end": "1687620"
  },
  {
    "text": "back to those glorious days and have a nerd dinner again so the first thing",
    "start": "1687620",
    "end": "1693260"
  },
  {
    "start": "1692000",
    "end": "1709000"
  },
  {
    "text": "which we need is of the Windows Server 2016 so I'm going to use a jewel because",
    "start": "1693260",
    "end": "1699620"
  },
  {
    "text": "it's not that expensive and it's a lot quicker than getting everything set up on my macbook air especially for",
    "start": "1699620",
    "end": "1705830"
  },
  {
    "text": "prototyping and seeing how everything works until once it gets to that talk you obviously have this great configured",
    "start": "1705830",
    "end": "1712880"
  },
  {
    "start": "1709000",
    "end": "1747000"
  },
  {
    "text": "server because I'm running everything or I will be running as everything as",
    "start": "1712880",
    "end": "1718400"
  },
  {
    "text": "containers I don't need to do this the whole benefit what we find with",
    "start": "1718400",
    "end": "1723530"
  },
  {
    "text": "containers is my host operating system doesn't need to do anything anymore everything which I've got some",
    "start": "1723530",
    "end": "1729830"
  },
  {
    "text": "complexity some configuration required is doing inside of the container so all",
    "start": "1729830",
    "end": "1735260"
  },
  {
    "text": "of my hosts does is really bring docker and win containers and that's it and because I picked that image that data",
    "start": "1735260",
    "end": "1742490"
  },
  {
    "text": "center image with container support already everything is now in the only",
    "start": "1742490",
    "end": "1747890"
  },
  {
    "start": "1747000",
    "end": "1793000"
  },
  {
    "text": "thing which I did add was chocolatey now if you're not familiar with chocolate please this was like a",
    "start": "1747890",
    "end": "1753530"
  },
  {
    "text": "revelation to me when I came across it because instead of having to load up ie",
    "start": "1753530",
    "end": "1759950"
  },
  {
    "text": "and get around like security barriers to downloading that executable you don't need to do that anymore",
    "start": "1759950",
    "end": "1765470"
  },
  {
    "text": "which I only just really like this hence why I'm quite excited still about it if it's all if everyone else knew about it",
    "start": "1765470",
    "end": "1771470"
  },
  {
    "text": "then I'll get thrown off but you can use things like install git from the command line again and you can install docker",
    "start": "1771470",
    "end": "1777770"
  },
  {
    "text": "from the command line and the Ducker client and it's awesome and it's ah good great so I use this to install at",
    "start": "1777770",
    "end": "1783440"
  },
  {
    "text": "all so I could at least have an IDE on my box to actually have something working and it was basically a taco",
    "start": "1783440",
    "end": "1789770"
  },
  {
    "text": "install at all and I had everything set up working in a lovely nice way so now",
    "start": "1789770",
    "end": "1796280"
  },
  {
    "start": "1793000",
    "end": "1827000"
  },
  {
    "text": "we've got it - now let's start working with docker so we've got darker version so the windows build the windows build",
    "start": "1796280",
    "end": "1804110"
  },
  {
    "text": "of our container engine which is winning you do docker PS that lists all of the",
    "start": "1804110",
    "end": "1811580"
  },
  {
    "text": "winning processes all of the winning containers at the moment knitting is happening but we list docker images and",
    "start": "1811580",
    "end": "1817370"
  },
  {
    "text": "we'll see these nice windows server core latest and Windows Nano latest one",
    "start": "1817370",
    "end": "1822920"
  },
  {
    "text": "important thing to be number here is that latest isn't actually latest latest",
    "start": "1822920",
    "end": "1828590"
  },
  {
    "start": "1827000",
    "end": "1867000"
  },
  {
    "text": "I consider a little bit of a anti pattern because latest is a moving",
    "start": "1828590",
    "end": "1833900"
  },
  {
    "text": "target it's a tag which print to the latest release at a certain point of",
    "start": "1833900",
    "end": "1839360"
  },
  {
    "text": "time but if you're building on latest that means that it also changes as other",
    "start": "1839360",
    "end": "1846440"
  },
  {
    "text": "things that the packages iterate and so what could be Windows 10 one day could",
    "start": "1846440",
    "end": "1854090"
  },
  {
    "text": "be Windows 11 the next if windows 11 ever comes out I don't know how it works anymore but you get the idea and so",
    "start": "1854090",
    "end": "1860330"
  },
  {
    "text": "you've got this constant moving target and so you could accidentally introduced breaking changes because the latest had",
    "start": "1860330",
    "end": "1866420"
  },
  {
    "text": "has been moved upstream so instead if you look on docker hub and you look up all the images there's actually the",
    "start": "1866420",
    "end": "1872600"
  },
  {
    "start": "1867000",
    "end": "1902000"
  },
  {
    "text": "proper build numbers and propositioning and proper internationalization versions of each of the containers and so it",
    "start": "1872600",
    "end": "1879890"
  },
  {
    "text": "emits more accurate to pull down the latest build when you get started which was",
    "start": "1879890",
    "end": "1885620"
  },
  {
    "text": "released eight days ago because this way you can be confident got order latest security patches and all the latest",
    "start": "1885620",
    "end": "1890960"
  },
  {
    "text": "updates if you just start using the latest image which comes with it you may be slightly behind the curve and you may",
    "start": "1890960",
    "end": "1898940"
  },
  {
    "text": "be slightly and building upon an older version so to download the latest",
    "start": "1898940",
    "end": "1904160"
  },
  {
    "start": "1902000",
    "end": "1958000"
  },
  {
    "text": "version you do docker pull windows have",
    "start": "1904160",
    "end": "1909440"
  },
  {
    "text": "called you give the build number as a tag I'm using that colon colon syntax",
    "start": "1909440",
    "end": "1915740"
  },
  {
    "text": "and that will pull down the latest versions now notice that while my windows have a call base image is nine",
    "start": "1915740",
    "end": "1922730"
  },
  {
    "text": "gigabytes which yes it's quite big but at the same time it's also like the whole windows ecosystem or whole windows",
    "start": "1922730",
    "end": "1930140"
  },
  {
    "text": "installation the things which will download is only the additional layers which you don't already have so it'll",
    "start": "1930140",
    "end": "1936559"
  },
  {
    "text": "only download the security patches and the security fixes which has been added",
    "start": "1936559",
    "end": "1941650"
  },
  {
    "text": "upon that base build and so in this case we're only down in thin 900 Meg but it's",
    "start": "1941650",
    "end": "1946910"
  },
  {
    "text": "still not like insignificant but it's a much better than downloading ten gigabytes every single time instead",
    "start": "1946910",
    "end": "1953840"
  },
  {
    "text": "you're only downloading the changes and that doubter from what happened beforehand so now we need to build our",
    "start": "1953840",
    "end": "1961250"
  },
  {
    "start": "1958000",
    "end": "1991000"
  },
  {
    "text": "image and this is where our docker file comes in a docker file is a list of instructions with define how your",
    "start": "1961250",
    "end": "1968179"
  },
  {
    "text": "application can be built and an and deployed and running in an automated way and these instructions just define steps",
    "start": "1968179",
    "end": "1975410"
  },
  {
    "text": "that the poster should win to in order to take your nice clean fresh window",
    "start": "1975410",
    "end": "1981980"
  },
  {
    "text": "cervical container image and then have your application on top so this is what",
    "start": "1981980",
    "end": "1987440"
  },
  {
    "text": "we need in order to be able to deploy near dinner at a Windows container so to",
    "start": "1987440",
    "end": "1992780"
  },
  {
    "start": "1991000",
    "end": "2071000"
  },
  {
    "text": "start with we need to have iOS that seemed like a sensible point where it's",
    "start": "1992780",
    "end": "1998390"
  },
  {
    "text": "a full-blown dotnet MVC application and we see - I believe at that time I think",
    "start": "1998390",
    "end": "2006070"
  },
  {
    "text": "it would WT - so let's start so we just define our base image so this defines",
    "start": "2006070",
    "end": "2013650"
  },
  {
    "text": "all the dependencies which are potential need in order to be able to start your basically picking and we",
    "start": "2013650",
    "end": "2019629"
  },
  {
    "text": "expecting Windows server core or Windows Nano that's kind of load to bigger changes to biggest decisions at this",
    "start": "2019629",
    "end": "2026019"
  },
  {
    "text": "point in time and then we can burn additional instructions in order to be able to add and extend the base image in",
    "start": "2026019",
    "end": "2032799"
  },
  {
    "text": "this case I'm winning PowerShell I'm telling it to install a window feature web server which is a is so we've got it",
    "start": "2032799",
    "end": "2041139"
  },
  {
    "text": "for doc file we can do docker build give it a nice friendly name as is and tell",
    "start": "2041139",
    "end": "2046779"
  },
  {
    "text": "it to build and produce our docker image we're doing this so that it'll",
    "start": "2046779",
    "end": "2051940"
  },
  {
    "text": "applications would come along can reuse this iis installation and so we don't",
    "start": "2051940",
    "end": "2057128"
  },
  {
    "text": "have to keep installing Windows Server every single time we want to deploy it's kind of been cached for future versions",
    "start": "2057129",
    "end": "2064740"
  },
  {
    "text": "but thankfully Microsoft have also kind of thought about this being a common",
    "start": "2064740",
    "end": "2070000"
  },
  {
    "text": "scenario in a common use case and so they've already doing this for us and so they've already gone ahead and had build",
    "start": "2070000",
    "end": "2075429"
  },
  {
    "text": "that docker image so that we don't have to worry about how to take and how to have an image winning guy is so in the",
    "start": "2075429",
    "end": "2082898"
  },
  {
    "text": "hope docker hub which is a docker registry which is where all of the docker images live you go to the",
    "start": "2082899",
    "end": "2088960"
  },
  {
    "text": "Microsoft page or the micro profile you've got the is page and it tells you the instructions and it tells you the",
    "start": "2088960",
    "end": "2094960"
  },
  {
    "text": "commands to start and it tells you all its different versions so that the version for nano server and added",
    "start": "2094960",
    "end": "2100480"
  },
  {
    "start": "2096000",
    "end": "2109000"
  },
  {
    "text": "version for Windows server core depending on what you're targeting at the time so instead of building our",
    "start": "2100480",
    "end": "2107859"
  },
  {
    "text": "image we can target that image instead and so now our from our application",
    "start": "2107859",
    "end": "2114819"
  },
  {
    "text": "viewpoint it's basically saying I don't I need is installed in order for me to",
    "start": "2114819",
    "end": "2121119"
  },
  {
    "text": "be able to deploy this application successfully so just make sure that I is is they're running Windows server core",
    "start": "2121119",
    "end": "2127470"
  },
  {
    "text": "configured and make sure it's at the latest version build or make sure it's against if build version a 14 393 and",
    "start": "2127470",
    "end": "2137170"
  },
  {
    "text": "then just to make sure that everything's happy define the shell are you what to",
    "start": "2137170",
    "end": "2144069"
  },
  {
    "text": "use when you're running feature commands at PowerShell this allows us to take advantage of all",
    "start": "2144069",
    "end": "2150970"
  },
  {
    "text": "of the PowerShell functionality and the PowerShell scripting approach which we need so now is the eye is installed we",
    "start": "2150970",
    "end": "2158500"
  },
  {
    "text": "need to start customizing the face image depending on what my application requires or in this case John's",
    "start": "2158500",
    "end": "2164020"
  },
  {
    "text": "application so the first thing we'll need is done at framework and asp.net for five so just like you have with eye",
    "start": "2164020",
    "end": "2172000"
  },
  {
    "text": "is the thing which you do using traditional management console is go through tips boxes in order to pay up to",
    "start": "2172000",
    "end": "2178750"
  },
  {
    "text": "have that functionally built-in and so now we're automating it everything is scriptable everything is repeatable so",
    "start": "2178750",
    "end": "2185860"
  },
  {
    "text": "we're using a Windows install features in order to be able to have that and so when we do a build what we'll do now or",
    "start": "2185860",
    "end": "2193300"
  },
  {
    "text": "what dr. will do now is right okay I've got iis and at the end of this we'll say like right there is with Windows with",
    "start": "2193300",
    "end": "2201400"
  },
  {
    "text": "asp.net configured and installed and capable of winning applications which is",
    "start": "2201400",
    "end": "2206800"
  },
  {
    "text": "cool so now the next stage is we've got a is set org we need to configure it and",
    "start": "2206800",
    "end": "2211950"
  },
  {
    "text": "so we do this with this using the powershell commandlets",
    "start": "2211950",
    "end": "2218020"
  },
  {
    "text": "why i use the right word with PowerShell points excellent so the first thing to do is like remove the default website",
    "start": "2218020",
    "end": "2224140"
  },
  {
    "text": "because it's just clutter and we just don't need it hanging around second",
    "start": "2224140",
    "end": "2229210"
  },
  {
    "text": "thing is we need an up we need a directory where our application source code will live so we use mate directory",
    "start": "2229210",
    "end": "2235030"
  },
  {
    "text": "and no dinner and then we create a new website new iOS web site give it a nice friendly name say that it will be",
    "start": "2235030",
    "end": "2242380"
  },
  {
    "text": "running on port 80 the physical path will be no dinner and the application pool will be dotnet 4 5 and so this",
    "start": "2242380",
    "end": "2249490"
  },
  {
    "text": "should like if you've done any iOS automation previously with Windows 2013 or something this should start feeling",
    "start": "2249490",
    "end": "2255970"
  },
  {
    "text": "familiar it's kind of all were doing is customizing exactly the same way that we would with a traditional quote we've now",
    "start": "2255970",
    "end": "2265210"
  },
  {
    "text": "just defined out at the daka file and then finally to give some syntax and some heads-up about what ports are",
    "start": "2265210",
    "end": "2271720"
  },
  {
    "text": "exposed and reports processes winning with expose 80 and then finally we copy",
    "start": "2271720",
    "end": "2278130"
  },
  {
    "text": "the directory from our source code and copy from our host we copy the",
    "start": "2278130",
    "end": "2284600"
  },
  {
    "text": "source code from our host which is in a directory called nerd inner into our container and say play at C : no dinner",
    "start": "2284600",
    "end": "2291580"
  },
  {
    "text": "and so this is our like structions about how we need to deploy our application",
    "start": "2291580",
    "end": "2296600"
  },
  {
    "text": "and what needs to happen in order to be able to get it from a clean blank is",
    "start": "2296600",
    "end": "2301910"
  },
  {
    "text": "installation up to have anything running and everything configured and all the source code in all of the right places",
    "start": "2301910",
    "end": "2307940"
  },
  {
    "text": "so now we've got this we do use the docker build command so this duck a",
    "start": "2307940",
    "end": "2313340"
  },
  {
    "start": "2309000",
    "end": "2334000"
  },
  {
    "text": "build command will take that docker file execute each of the instructions and at the end of it we get this lovely shiny",
    "start": "2313340",
    "end": "2320120"
  },
  {
    "text": "docker image which should be capable of winning our application and so when you",
    "start": "2320120",
    "end": "2325730"
  },
  {
    "text": "run through it you'll see all of these instructions being made you'll see all of the output being created and at the",
    "start": "2325730",
    "end": "2332150"
  },
  {
    "text": "end we have this bucket image the docker image just like we did with Windows Server court",
    "start": "2332150",
    "end": "2337340"
  },
  {
    "start": "2334000",
    "end": "2418000"
  },
  {
    "text": "kelan's our command-line application can be ruined with duh Corinne we say we want to win it in the background because",
    "start": "2337340",
    "end": "2343580"
  },
  {
    "text": "it's a web service so like we want to win in the background we say we're on port 80 because it's web application so",
    "start": "2343580",
    "end": "2351020"
  },
  {
    "text": "we need to make port 80 available by default everything nice and boxed and everything is closed off and so we need",
    "start": "2351020",
    "end": "2356960"
  },
  {
    "text": "to be able to configure the right port and the right network configuration in",
    "start": "2356960",
    "end": "2362600"
  },
  {
    "text": "order to be able to access those processes again it's kind of we haven't if secure by default mentality and",
    "start": "2362600",
    "end": "2369140"
  },
  {
    "text": "that's what we're going with until we have to explicitly say what port back mappings we need to make available to",
    "start": "2369140",
    "end": "2374390"
  },
  {
    "text": "the public which hopefully will mitigate if you win in MongoDB or elasticsearch inside of a container so when this I",
    "start": "2374390",
    "end": "2383720"
  },
  {
    "text": "give it the name of the docker image which in this case I gave with the tag of nude dinner and so that's why we say",
    "start": "2383720",
    "end": "2389330"
  },
  {
    "text": "I'm winning and then I really felt like hood back in the dotnet world and",
    "start": "2389330",
    "end": "2394540"
  },
  {
    "text": "because it didn't win this would because I had forgot to update my connection",
    "start": "2394540",
    "end": "2402050"
  },
  {
    "text": "strings and terms like ah okay awesome duplications like ah fine",
    "start": "2402050",
    "end": "2407300"
  },
  {
    "text": "so when I need to make changes to my application what do I do so we've now got our contain a bill and container",
    "start": "2407300",
    "end": "2412730"
  },
  {
    "text": "winning and so when we want to make change when we want to release new versions we",
    "start": "2412730",
    "end": "2418130"
  },
  {
    "text": "would we make the changes and rebuild the image and this is where the ordering and the approach what we've taken in",
    "start": "2418130",
    "end": "2425030"
  },
  {
    "text": "terms of how we structured our dockerfile is important so instead of it going",
    "start": "2425030",
    "end": "2431690"
  },
  {
    "text": "through and reinstalling iis and reinstalling done a framework and recreate in the website because of how",
    "start": "2431690",
    "end": "2438920"
  },
  {
    "text": "doug has been created it got some built-in caching and it got some built-in mechanisms that know if",
    "start": "2438920",
    "end": "2446150"
  },
  {
    "text": "nothing's changed in the layers in the instructions above don't just repurpose",
    "start": "2446150",
    "end": "2452180"
  },
  {
    "text": "and reuse the existing image which came before it only create a new image when you drin",
    "start": "2452180",
    "end": "2457550"
  },
  {
    "text": "when he's copied in files which have changed because if something's changed on the outside into the container then",
    "start": "2457550",
    "end": "2463610"
  },
  {
    "text": "the likelihood we need to win through two commands in this case this is why we're seeing this using cash using cash",
    "start": "2463610",
    "end": "2469910"
  },
  {
    "text": "so everything went really quickly up until we do the copy and then that kind",
    "start": "2469910",
    "end": "2474980"
  },
  {
    "text": "of removes that previous container and we get that new shiny image this is now being fixed it now fixed a bug which was",
    "start": "2474980",
    "end": "2481850"
  },
  {
    "text": "due to connection strings problem and we have a lovely shiny new dinner",
    "start": "2481850",
    "end": "2487460"
  },
  {
    "start": "2483000",
    "end": "2594000"
  },
  {
    "text": "running inside of our container again now did he winning at a Windows",
    "start": "2487460",
    "end": "2494180"
  },
  {
    "text": "container because not that I don't trust John but it is a six year old",
    "start": "2494180",
    "end": "2501320"
  },
  {
    "text": "application may have some security problems you never know so if you wanted to add a little bit more security and",
    "start": "2501320",
    "end": "2507290"
  },
  {
    "text": "win it as a hyper-v container we just assigned the isolation mode and so now",
    "start": "2507290",
    "end": "2513620"
  },
  {
    "text": "when we start that container what doc will do is when it's talking to the Windows kernel instead of going like I",
    "start": "2513620",
    "end": "2520100"
  },
  {
    "text": "will just start a normal Windows container it will take the Windows hyper-v virtual machine that really",
    "start": "2520100",
    "end": "2526700"
  },
  {
    "text": "lightweight small sink that has already been kind of booted up and frozen in",
    "start": "2526700",
    "end": "2531880"
  },
  {
    "text": "memory in terms of like really cool lot to my patients at the hyper-v team - and",
    "start": "2531880",
    "end": "2536960"
  },
  {
    "text": "so then it will take that fork it will in free the deployer container onto",
    "start": "2536960",
    "end": "2542210"
  },
  {
    "text": "there and start it inside of that virtual machine so we get that separate kernel we get that added layer of",
    "start": "2542210",
    "end": "2547370"
  },
  {
    "text": "security and we can win nerd dinner and I like a really highly secure highly safe",
    "start": "2547370",
    "end": "2553300"
  },
  {
    "text": "environment and this all happens in milliseconds like there is no there's a",
    "start": "2553300",
    "end": "2559790"
  },
  {
    "text": "hundred millisecond brutal time when you're at in isolation but this is not like traditional Bruton a traditional",
    "start": "2559790",
    "end": "2566180"
  },
  {
    "text": "virtual machine it's very far so lightweight still with very minimum overhead the only thing that virtual",
    "start": "2566180",
    "end": "2571880"
  },
  {
    "text": "machine is doing it providing a different Windows kernel a different Windows kernel and if anything did break",
    "start": "2571880",
    "end": "2578180"
  },
  {
    "text": "out it's not writing it to disk everything stored in memory when that container gets closed and container gets",
    "start": "2578180",
    "end": "2583880"
  },
  {
    "text": "stopped that window VM was wrapping everything in gets thrown away missing it persisted to disk again to provide",
    "start": "2583880",
    "end": "2590780"
  },
  {
    "text": "that Moore's contain contain security lab and so now we've got our application",
    "start": "2590780",
    "end": "2596540"
  },
  {
    "start": "2594000",
    "end": "2623000"
  },
  {
    "text": "built and we fixed it and graduation working we went through it a few times and it's immutable right from now on",
    "start": "2596540",
    "end": "2603200"
  },
  {
    "text": "that images what will get promoted from our development environment to let's say",
    "start": "2603200",
    "end": "2608960"
  },
  {
    "text": "our continuous integration environment to our staging server to production any configuration tweaks which we need will",
    "start": "2608960",
    "end": "2615530"
  },
  {
    "text": "confine that environment variables or an outside-in fillets but the image itself",
    "start": "2615530",
    "end": "2620720"
  },
  {
    "text": "doesn't change and this makes it interesting when you talk about Windows updates because like well traditionally",
    "start": "2620720",
    "end": "2628220"
  },
  {
    "start": "2623000",
    "end": "2657000"
  },
  {
    "text": "when I you start a Windows VM we know Dog Day will happily keep myself secure and I would have to keep ourselves",
    "start": "2628220",
    "end": "2633470"
  },
  {
    "text": "updated so how does that work in a container operating way okay if it's a Folden instance and so Windows updates",
    "start": "2633470",
    "end": "2641720"
  },
  {
    "text": "are disabled again we don't what we build should be for them we should be able to repeat that build and have",
    "start": "2641720",
    "end": "2648710"
  },
  {
    "text": "exactly the same response and so if we've got Windows updates winning and deploying our own packages that kind of",
    "start": "2648710",
    "end": "2654680"
  },
  {
    "text": "breaks that mentality in that breaks out approach so this is where it's important to know the windows version number and",
    "start": "2654680",
    "end": "2660740"
  },
  {
    "start": "2657000",
    "end": "2745000"
  },
  {
    "text": "how that relate to what you're building at your base image so with our nurdinov",
    "start": "2660740",
    "end": "2667579"
  },
  {
    "text": "application we use the latest which was 14 393 and so um Microsoft website",
    "start": "2667579",
    "end": "2675319"
  },
  {
    "text": "they've got a hit history and a list of all of the different windows version numbers all of their secure IDs",
    "start": "2675319",
    "end": "2681309"
  },
  {
    "text": "everything what you need in order to know what your application was built upon and what version your",
    "start": "2681309",
    "end": "2687560"
  },
  {
    "text": "application was using when news isn't updated and you have like the Patch Tuesday traditional releases you'll now",
    "start": "2687560",
    "end": "2695780"
  },
  {
    "text": "have a new Windows server called base image and it'll have a new version number with a new tag and so the idea",
    "start": "2695780",
    "end": "2702349"
  },
  {
    "text": "being is that you would update your docker file you would increment that version number to be the latest you'd",
    "start": "2702349",
    "end": "2707990"
  },
  {
    "text": "rebuild your entire application which would take into those new fixes take",
    "start": "2707990",
    "end": "2713930"
  },
  {
    "text": "into account I'd need security features and then you would push that back through and redeploy that back for your",
    "start": "2713930",
    "end": "2719390"
  },
  {
    "text": "pipeline it's all about repeatability is all about that consistent way of building applications and making sure",
    "start": "2719390",
    "end": "2727520"
  },
  {
    "text": "that what we've built is exactly what's running in production and across servers without having these no flake instances",
    "start": "2727520",
    "end": "2735349"
  },
  {
    "text": "happening where everything is slightly different because things slightly changed at different points in time and",
    "start": "2735349",
    "end": "2740450"
  },
  {
    "text": "I think they rolled out and so that's how we get to that point with Windows containers in terms some operational",
    "start": "2740450",
    "end": "2747109"
  },
  {
    "text": "important details right we've got our containers that we need to be able to",
    "start": "2747109",
    "end": "2753470"
  },
  {
    "text": "persist some data sometimes and if we all we did was save data inside the container when we upgraded it and when",
    "start": "2753470",
    "end": "2760310"
  },
  {
    "text": "we deploy that new version the data would have been in the container which we stopped and removed and so we'd lose",
    "start": "2760310",
    "end": "2765560"
  },
  {
    "text": "all of that data too which is very embarrassing twist me from experience it's very embarrassing when that happens",
    "start": "2765560",
    "end": "2772280"
  },
  {
    "text": "so instead you can mount volumes and you can mount drives from the hosts and make",
    "start": "2772280",
    "end": "2777890"
  },
  {
    "text": "them available inside of the container and these are fundamentally thin links what we're doing is creating a symlink",
    "start": "2777890",
    "end": "2784160"
  },
  {
    "text": "from let's say C colon destination - o in our container - C : source inside of our host and so",
    "start": "2784160",
    "end": "2792440"
  },
  {
    "text": "that's how we can anything wrote to the destination directory in the container actually ends up on our source directory",
    "start": "2792440",
    "end": "2798770"
  },
  {
    "text": "and so now if we redeployed Andry rolled out our container we wouldn't lose any",
    "start": "2798770",
    "end": "2804710"
  },
  {
    "text": "data particularly useful for things like log files so we've got i net port blog files that can now end up on our host",
    "start": "2804710",
    "end": "2811430"
  },
  {
    "text": "operating system and so we can we use those just like with Linda's containers we can add more",
    "start": "2811430",
    "end": "2817770"
  },
  {
    "text": "security features if we need to and more security fence defenses who can limit how many people you shares and how much",
    "start": "2817770",
    "end": "2824040"
  },
  {
    "text": "CPU processes etc and we want the container to utilize so now we can start",
    "start": "2824040",
    "end": "2829170"
  },
  {
    "text": "delivering a quality of service across our deployment and to a customers or to",
    "start": "2829170",
    "end": "2836130"
  },
  {
    "text": "other applications because one container one we had to take out of the entire host we can start ringing French on it",
    "start": "2836130",
    "end": "2841920"
  },
  {
    "text": "to make sure that everyone gets an equal share we've got PowerShell API so again",
    "start": "2841920",
    "end": "2847500"
  },
  {
    "start": "2844000",
    "end": "2855000"
  },
  {
    "text": "we can hook that into an existing build scripts and our existing pipeline if we wanted to to start automating we can",
    "start": "2847500",
    "end": "2854190"
  },
  {
    "text": "contain a creation um and we can create new containers from PowerShell as well",
    "start": "2854190",
    "end": "2859440"
  },
  {
    "start": "2855000",
    "end": "2914000"
  },
  {
    "text": "so we don't have to use those dokgo build document Eli commands we can I use",
    "start": "2859440",
    "end": "2864960"
  },
  {
    "text": "the traditional PowerShell mentality which you wanted so when I tried to",
    "start": "2864960",
    "end": "2871859"
  },
  {
    "text": "deploy the Nerds in the first time we had our traditional a speed on that error message and now it's due to connection strings and that was because",
    "start": "2871859",
    "end": "2878369"
  },
  {
    "text": "we had a sequel server dependency which is pretty common am like sequel server is kind of like one of those things most",
    "start": "2878369",
    "end": "2886260"
  },
  {
    "text": "applications are going to need so how does that look inside of a darker world",
    "start": "2886260",
    "end": "2892160"
  },
  {
    "text": "so sequel server is stuck alized and we now have the beautiful case of",
    "start": "2892160",
    "end": "2898710"
  },
  {
    "text": "having sequel server for Windows containers and also sequel server for Linux containers with the recent port of",
    "start": "2898710",
    "end": "2905310"
  },
  {
    "text": "the sequel server for Linux you can now win both versions of a container depending on whether you want to talk",
    "start": "2905310",
    "end": "2911670"
  },
  {
    "text": "Windows hosts or Linux hosts just in the same way that we did with our nerd",
    "start": "2911670",
    "end": "2916890"
  },
  {
    "start": "2914000",
    "end": "2933000"
  },
  {
    "text": "dinner we can launch this we can say expose 1433 which is the sequel server",
    "start": "2916890",
    "end": "2924150"
  },
  {
    "text": "port we can find define a password we can accept the end-user license and agreement and that",
    "start": "2924150",
    "end": "2930560"
  },
  {
    "text": "will download and run everything and if we wanted to see what was happening in",
    "start": "2930560",
    "end": "2935580"
  },
  {
    "start": "2933000",
    "end": "2964000"
  },
  {
    "text": "the covers because it's already in the background we can do things like darker logs nerd in a DB and as I realized very",
    "start": "2935580",
    "end": "2943020"
  },
  {
    "text": "quickly sequel server had got a little bit more security awareness and what I",
    "start": "2943020",
    "end": "2948150"
  },
  {
    "text": "do and so it doesn't let you set the si password the password to kind of make sense until by using the log",
    "start": "2948150",
    "end": "2953700"
  },
  {
    "text": "could kind of see and start debugging what was happening in other covers and so everything which has been",
    "start": "2953700",
    "end": "2959280"
  },
  {
    "text": "traditionally were used to with in terms of debugging had been thought about and collected in terms of the API so we give",
    "start": "2959280",
    "end": "2965670"
  },
  {
    "start": "2964000",
    "end": "3001000"
  },
  {
    "text": "it a bit more of a secure password a password is young long yo I think I'd",
    "start": "2965670",
    "end": "2970800"
  },
  {
    "text": "watching Breaking Bad at the background or had Breaking Bad in my head some reason anyway so now Secret Service",
    "start": "2970800",
    "end": "2976950"
  },
  {
    "text": "started we've got the a Hague credentials and everything is happening so he's now this is how I got no dinner",
    "start": "2976950",
    "end": "2983130"
  },
  {
    "text": "working we had the front end I could talk to sequel server and it could deploy everything but we've got these",
    "start": "2983130",
    "end": "2989160"
  },
  {
    "text": "two containers and we've got these two dependencies and keep winning these really long commands that need to be",
    "start": "2989160",
    "end": "2994920"
  },
  {
    "text": "documented that needs to be stored somewhere or I'm going to keep going typos and forgetting what password is",
    "start": "2994920",
    "end": "3000650"
  },
  {
    "text": "and so this is where docker compose comes in docker compose allows you to",
    "start": "3000650",
    "end": "3006140"
  },
  {
    "start": "3001000",
    "end": "3050000"
  },
  {
    "text": "take all of these arguments and define them at the Yama file again using the amazing chocolaty we can install it from",
    "start": "3006140",
    "end": "3013010"
  },
  {
    "text": "the command line and go down and a download the executable which we need and to create the docker compose file or",
    "start": "3013010",
    "end": "3020120"
  },
  {
    "text": "to create the docker compose Gamal is everything you find which we would traditionally have entered using the",
    "start": "3020120",
    "end": "3026720"
  },
  {
    "text": "dock of wintermint we just assign and we just take it and [Music]",
    "start": "3026720",
    "end": "3032290"
  },
  {
    "text": "use the syntax to define our intentions so we define our docker image what we're",
    "start": "3032290",
    "end": "3038630"
  },
  {
    "text": "winning with the particular detergent number we define our passwords we define the ports which is required and any",
    "start": "3038630",
    "end": "3044570"
  },
  {
    "text": "dependencies which it needs and then we can use docker compose up which I enter that bucket bottom docker compose up and",
    "start": "3044570",
    "end": "3051290"
  },
  {
    "start": "3050000",
    "end": "3108000"
  },
  {
    "text": "that will deploy both applications at the same time and we'll have our winning application running happily in our",
    "start": "3051290",
    "end": "3058130"
  },
  {
    "text": "service but then I saw this I thought like that's not quite how I remember it",
    "start": "3058130",
    "end": "3063260"
  },
  {
    "text": "looking from the back in the day like that looks a bit weird and also not they successful so again this was winning IE",
    "start": "3063260",
    "end": "3069710"
  },
  {
    "text": "so again are you chocolaty installed Firefox and then it decided not to",
    "start": "3069710",
    "end": "3074960"
  },
  {
    "text": "render the mobile version and then it's like it's just like the good old days and nostalgia came flooding back for",
    "start": "3074960",
    "end": "3083450"
  },
  {
    "text": "the goodness and so this is now an outpatient and now wanted to make it available and make it public so it's",
    "start": "3083450",
    "end": "3090410"
  },
  {
    "text": "written on Azure and because when we launched it we did that - Pia and exposed port 80 so now we just need to",
    "start": "3090410",
    "end": "3097730"
  },
  {
    "text": "expose the windows the firewall in Azure expose port 80 and then near dinner kena",
    "start": "3097730",
    "end": "3105260"
  },
  {
    "text": "ruled the world using windows containers again I then got even a little bit more",
    "start": "3105260",
    "end": "3110360"
  },
  {
    "start": "3108000",
    "end": "3122000"
  },
  {
    "text": "confident and I'm running out time but wanted to deploy the asp.net music store",
    "start": "3110360",
    "end": "3116270"
  },
  {
    "text": "which has been migrated to dinette core so I just wanted to see how that looked inside of a Windows container so the",
    "start": "3116270",
    "end": "3123770"
  },
  {
    "text": "first thing which is important is because it focuses in on done at core we no longer need to have like the full",
    "start": "3123770",
    "end": "3132400"
  },
  {
    "text": "window server core installation we can now start targeting the more lightweight more quick down version we could we",
    "start": "3132400",
    "end": "3139430"
  },
  {
    "text": "don't need that quite as much of the windows functionality and the windows api and again we've got the docker file",
    "start": "3139430",
    "end": "3145340"
  },
  {
    "text": "which lists the instructions it's a little bit more complex due to the file paths but it's kind of still the same",
    "start": "3145340",
    "end": "3151120"
  },
  {
    "text": "we're adding some files add in our new get packaged with winning dotnet restore",
    "start": "3151120",
    "end": "3156770"
  },
  {
    "text": "which will go off and download it have our bill package we're adding the sample directory which contains all of the",
    "start": "3156770",
    "end": "3162860"
  },
  {
    "text": "source code we're building that using done net build and then at the bottom and defining how we start and how we're",
    "start": "3162860",
    "end": "3169160"
  },
  {
    "text": "in that application and so this even though it's a completely different",
    "start": "3169160",
    "end": "3175130"
  },
  {
    "text": "application what we're building you'll start to see these similar patterns and these similar approaches between what",
    "start": "3175130",
    "end": "3180710"
  },
  {
    "text": "we're trying to achieve and kind of come through its or describing what your",
    "start": "3180710",
    "end": "3186290"
  },
  {
    "text": "application is doing in the steps in order to be able to build up those layers to go from a blank installation",
    "start": "3186290",
    "end": "3193610"
  },
  {
    "text": "of dotnet to having your application or built and willing and again we could use",
    "start": "3193610",
    "end": "3199280"
  },
  {
    "text": "a compose to lift everything again just doing ducks combos up and that's how we",
    "start": "3199280",
    "end": "3204740"
  },
  {
    "text": "get to our winning application winning",
    "start": "3204740",
    "end": "3209930"
  },
  {
    "text": "in the cloud so now we've got this happy but it's only running on one service so how do we make that scale and how do we",
    "start": "3209930",
    "end": "3215960"
  },
  {
    "text": "scale out so the first thing we need to do is make the image available to elsewhere so",
    "start": "3215960",
    "end": "3221089"
  },
  {
    "start": "3218000",
    "end": "3232000"
  },
  {
    "text": "this is way you can push images to a private registry or private document",
    "start": "3221089",
    "end": "3227730"
  },
  {
    "text": "whether street or the hosted docker registry which I did here and you'll see I and CD build pipeline kind of look",
    "start": "3227730",
    "end": "3235020"
  },
  {
    "start": "3232000",
    "end": "3292000"
  },
  {
    "text": "something similar to this like a developer would do a git push this would",
    "start": "3235020",
    "end": "3240119"
  },
  {
    "text": "go into something like git lab or ping foundation server which would start",
    "start": "3240119",
    "end": "3245910"
  },
  {
    "text": "build your team your build agent no longer needs to have anything configured",
    "start": "3245910",
    "end": "3251010"
  },
  {
    "text": "because all of the configuration is doing inside of the docker file your build agent and it literally just needs",
    "start": "3251010",
    "end": "3257010"
  },
  {
    "text": "to be able to run docker build and that's the only configuration it needs in order to guide to build and test what",
    "start": "3257010",
    "end": "3263280"
  },
  {
    "text": "your application is doing so that would happen once I've been to the closely built the output will be your docker build image",
    "start": "3263280",
    "end": "3269099"
  },
  {
    "text": "which you can then push to like the private registry and then you can use",
    "start": "3269099",
    "end": "3274410"
  },
  {
    "text": "docker pool or docker compose up which will do-- grab the image and then deploy",
    "start": "3274410",
    "end": "3280079"
  },
  {
    "text": "it onto your target service and deploy it onto your target machines be it Windows Server 2016 or something cool",
    "start": "3280079",
    "end": "3286950"
  },
  {
    "text": "like a jewel container service for example but what about developers like",
    "start": "3286950",
    "end": "3294119"
  },
  {
    "start": "3292000",
    "end": "3307000"
  },
  {
    "text": "what if you don't want to run Windows Live core as your development environment which is a reasonable will",
    "start": "3294119",
    "end": "3302760"
  },
  {
    "text": "do more choice like Windows 10 is a really good operating system so let's take advantage of it and now Microsoft's",
    "start": "3302760",
    "end": "3308700"
  },
  {
    "start": "3307000",
    "end": "3315000"
  },
  {
    "text": "have announced and officially supported Windows containers work on Windows 10 to",
    "start": "3308700",
    "end": "3315119"
  },
  {
    "start": "3315000",
    "end": "3360000"
  },
  {
    "text": "install it all we need to do is install the optional features install containers",
    "start": "3315119",
    "end": "3320160"
  },
  {
    "text": "and then install Microsoft hyper-v containers download binary and",
    "start": "3320160",
    "end": "3325980"
  },
  {
    "text": "everything is happy we then have Windows container support running on Windows 10",
    "start": "3325980",
    "end": "3332490"
  },
  {
    "text": "and so now we can build the images that use in exactly the same way using the",
    "start": "3332490",
    "end": "3337530"
  },
  {
    "text": "same time to compose everything which we did before we'll build it and the reason this works is because it's taking",
    "start": "3337530",
    "end": "3343170"
  },
  {
    "text": "advantage of that Windows hyper-v container support so everything written to the hyper-v container",
    "start": "3343170",
    "end": "3349990"
  },
  {
    "text": "it kind of having a guest Colonel which had been designed for containers in a third place and so that's why didn't",
    "start": "3349990",
    "end": "3356470"
  },
  {
    "text": "interact with your Windows 10 deployment and that's why it can work and so now we",
    "start": "3356470",
    "end": "3361930"
  },
  {
    "start": "3360000",
    "end": "3393000"
  },
  {
    "text": "are yes so now we've got windows contain container support so we've got docker",
    "start": "3361930",
    "end": "3368110"
  },
  {
    "text": "for Windows which is the tooling which you download which is design for winning",
    "start": "3368110",
    "end": "3373360"
  },
  {
    "text": "docker on your development purposes and when you download it it generally downloads the Linux version",
    "start": "3373360",
    "end": "3378460"
  },
  {
    "text": "with support for learning Linux Tucker containers and to any if he did dock",
    "start": "3378460",
    "end": "3383680"
  },
  {
    "text": "version you'd have the server you'd have an architecture and you'd have like duck images which are designed for Linux I am",
    "start": "3383680",
    "end": "3391180"
  },
  {
    "text": "Mbutu and geniux ionic core in the command line you can now say wouldn't you've got Windows",
    "start": "3391180",
    "end": "3397810"
  },
  {
    "start": "3393000",
    "end": "3401000"
  },
  {
    "text": "containers so to switch to Windows containers and then this will point the",
    "start": "3397810",
    "end": "3404530"
  },
  {
    "text": "dark line to point to your Windows Server installation incident or your Windows Server support Windows container",
    "start": "3404530",
    "end": "3411280"
  },
  {
    "text": "support instead and so now when you do Talcott urchin we've got Windows architecture we've got",
    "start": "3411280",
    "end": "3418750"
  },
  {
    "text": "Windows images and everything is happy I mean like this really nice ecosystem and",
    "start": "3418750",
    "end": "3424270"
  },
  {
    "text": "support on our development into machines and this is an effect innocent you can be needing side by side it didn't stop",
    "start": "3424270",
    "end": "3430660"
  },
  {
    "text": "containers which are already running and so now we can have these two great worlds happening where we can deploy and",
    "start": "3430660",
    "end": "3436180"
  },
  {
    "text": "build our Linux containers and build and deploy our windows containers from the same development machine which i think",
    "start": "3436180",
    "end": "3442810"
  },
  {
    "text": "is pretty impressive and it just",
    "start": "3442810",
    "end": "3448800"
  },
  {
    "text": "so what does this look like in terms of the future and like where do I think",
    "start": "3449859",
    "end": "3455680"
  },
  {
    "start": "3453000",
    "end": "3481000"
  },
  {
    "text": "this is going so docker is everywhere Ducky's the like the hot cool new",
    "start": "3455680",
    "end": "3462400"
  },
  {
    "text": "deployment technology everywhere until we've got Linux support which has been around for last three years very much",
    "start": "3462400",
    "end": "3467859"
  },
  {
    "text": "Couture and great functionality we've now got Windows container support and so we can take the same mindset the same",
    "start": "3467859",
    "end": "3473950"
  },
  {
    "text": "approach and start packaging or Windows applications in an automated repeatable",
    "start": "3473950",
    "end": "3479619"
  },
  {
    "text": "way we can also now deploy ducted containers unto armed and IOT so it can",
    "start": "3479619",
    "end": "3485440"
  },
  {
    "start": "3481000",
    "end": "3496000"
  },
  {
    "text": "ploy them onto raspberry pi devices but there's also a startup are called resident dot IO which allows you to use",
    "start": "3485440",
    "end": "3491859"
  },
  {
    "text": "the same mentality and deploy them unto really IOT targeted devices we've got",
    "start": "3491859",
    "end": "3497529"
  },
  {
    "start": "3496000",
    "end": "3504000"
  },
  {
    "text": "window we've got sequel server as a container which runs both on Windows and Linux which is super impressive but what",
    "start": "3497529",
    "end": "3505539"
  },
  {
    "text": "about digital studio as a container like we've now got to contain it with work on Windows 10 and why do we now have to",
    "start": "3505539",
    "end": "3514900"
  },
  {
    "text": "keep downloading three gig four gig five gig installation files at Visual Studio which will then spend an hour two hours",
    "start": "3514900",
    "end": "3522160"
  },
  {
    "text": "installing to optimize itself and prepare itself why can't logically win at the container",
    "start": "3522160",
    "end": "3527170"
  },
  {
    "text": "Y commit just do a docker pull visual studio and a download all the files which we requires and runs inside of a",
    "start": "3527170",
    "end": "3533799"
  },
  {
    "text": "container which is all isolating sandbox from each other and so when we have different versions of our application",
    "start": "3533799",
    "end": "3539979"
  },
  {
    "text": "running one let's say in visual studio 2000",
    "start": "3539979",
    "end": "3545170"
  },
  {
    "text": "to modify and maintain our lovely applications and also keep up to date with our visual studio 2017 what if",
    "start": "3545170",
    "end": "3553900"
  },
  {
    "text": "those are containers they wouldn't interact it wouldn't interfere and it just happily work and as new service",
    "start": "3553900",
    "end": "3559329"
  },
  {
    "text": "packs were released you just download the layer instead of downloading and reinstalling the entire thing we have",
    "start": "3559329",
    "end": "3566229"
  },
  {
    "text": "this with Windows now so why can we start seeing it with Visual Studio and our development tools at the same time",
    "start": "3566229",
    "end": "3572140"
  },
  {
    "start": "3572000",
    "end": "3590000"
  },
  {
    "text": "and then we get to the point where everything as our container everything is written of container our build tools",
    "start": "3572140",
    "end": "3577599"
  },
  {
    "text": "our build scripts our build pipeline is all containerized we're winning team foundation server",
    "start": "3577599",
    "end": "3584049"
  },
  {
    "text": "and then that builds more containers and then we push it onto a jewel container service and that scales out and we can",
    "start": "3584049",
    "end": "3590859"
  },
  {
    "text": "deploy anywhere be in the cloud be it on premise or a hybrid of both but this is",
    "start": "3590859",
    "end": "3598180"
  },
  {
    "text": "a new willed and it's lots of moving parts there's lots of moving pieces and it can take a few a few attempts to",
    "start": "3598180",
    "end": "3605799"
  },
  {
    "text": "become familiar with a pipeline and so this is why we built caps coda this is why we've got lots of free",
    "start": "3605799",
    "end": "3612519"
  },
  {
    "text": "content there to make it accessible make it as easy to get started as possible and for you to start seeing the value of",
    "start": "3612519",
    "end": "3619059"
  },
  {
    "text": "containers and with that I've got lovely red flashing lights as well as someone",
    "start": "3619059",
    "end": "3624309"
  },
  {
    "text": "shouting at me so we've got four key points apart from one I didn't have time",
    "start": "3624309",
    "end": "3630699"
  },
  {
    "text": "to worry about we've got four key components we've got Windows server core and Windows Nano we've got the legacy",
    "start": "3630699",
    "end": "3636279"
  },
  {
    "text": "way which allowed it to an Emily application even if they're six seven years old and deployed as a Windows",
    "start": "3636279",
    "end": "3642130"
  },
  {
    "text": "container and have it automated and maintainable we've got Windows Nano four new cool applications that we can deploy",
    "start": "3642130",
    "end": "3649029"
  },
  {
    "text": "and target a Windows Server host operating system we've got Windows",
    "start": "3649029",
    "end": "3654190"
  },
  {
    "text": "containers which allows us to win them and I still a secure sell an isolated environment but with Windows hyper-v we",
    "start": "3654190",
    "end": "3661569"
  },
  {
    "text": "get a little bit more we don't have that shared kernel support which we did before we've got Windows containers winning on",
    "start": "3661569",
    "end": "3669190"
  },
  {
    "text": "Windows 10 so we can use them as part of our development environment test and build locally and have that pushed up",
    "start": "3669190",
    "end": "3675459"
  },
  {
    "text": "and then hold fingerprinting which is all about building and cloud and having workloads disputed and itself detecting",
    "start": "3675459",
    "end": "3682479"
  },
  {
    "text": "whether it should be and deploying Linux or should be deploying Windows containers and which holes to use unless",
    "start": "3682479",
    "end": "3688390"
  },
  {
    "text": "your container service but that's for the next talk in the next NBC during",
    "start": "3688390",
    "end": "3693940"
  },
  {
    "text": "that time in terms of my next set or what I'd recommend your next steps to be if you're one in a more obviously cat",
    "start": "3693940",
    "end": "3699519"
  },
  {
    "text": "coda because that's my baby if you want to try this and play around Windows server and assure it's probably the best",
    "start": "3699519",
    "end": "3705910"
  },
  {
    "text": "way to do it but it's really quick to get started everything been pre-configured and everything all of the",
    "start": "3705910",
    "end": "3711160"
  },
  {
    "text": "images are there for you to jump start and get started very quickly and then if you're more motivated at words and when",
    "start": "3711160",
    "end": "3717390"
  },
  {
    "text": "ten so you can install the tooling you can install a part and you can start playing around locally and if you have",
    "start": "3717390",
    "end": "3723360"
  },
  {
    "text": "any other questions my details are there I'm always available to provide more information but thank you very much for",
    "start": "3723360",
    "end": "3729240"
  },
  {
    "text": "your time and I hope you enjoyed the rest of your day [Applause]",
    "start": "3729240",
    "end": "3735860"
  }
]