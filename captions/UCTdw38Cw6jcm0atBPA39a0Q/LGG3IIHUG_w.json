[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "so my name is Jimmy you can find me at Twitter at JB guard the presentation a",
    "start": "9720",
    "end": "15330"
  },
  {
    "text": "pretty much anything I do you can find on my github github.com /a Bogart and I blog on Jimmy Bogart comm I also had a",
    "start": "15330",
    "end": "22230"
  },
  {
    "text": "whole bunch of blog posts still sitting around this site that is sometimes up on those techies calm most people know me",
    "start": "22230",
    "end": "29099"
  },
  {
    "text": "from some open source libraries of which I am deeply sorry if you are having to",
    "start": "29099",
    "end": "34170"
  },
  {
    "text": "use them today if you like them then oh you're welcome thank you for using them appreciate it so this is a story",
    "start": "34170",
    "end": "41550"
  },
  {
    "text": "working with my developers about a year ago or so where I had a developer come up to me and say this is for an",
    "start": "41550",
    "end": "48180"
  },
  {
    "text": "e-commerce website for the checkout page of this website they said Jimmy I I think there's",
    "start": "48180",
    "end": "54329"
  },
  {
    "text": "something wrong with these lines of code but I don't really know for sure can you come take a look so I took those look at",
    "start": "54329",
    "end": "61109"
  },
  {
    "text": "those six six very small little lines of innocuous code and said yes you got something really wrong on your",
    "start": "61109",
    "end": "66960"
  },
  {
    "start": "62000",
    "end": "62000"
  },
  {
    "text": "hands here a good job for reporting it out and so let's talk through ways in which we can fix these six little lines",
    "start": "66960",
    "end": "72330"
  },
  {
    "text": "of code now these are blind to code that probably anyone here is written I know I've earned them myself as well it looks",
    "start": "72330",
    "end": "78360"
  },
  {
    "text": "something like this these six little lines of code it starts out pretty simple this is for",
    "start": "78360",
    "end": "83700"
  },
  {
    "text": "the the page are the code that whenever you click checkout it takes your money and does all sorts of crazy things",
    "start": "83700",
    "end": "89640"
  },
  {
    "text": "behind the scenes it starts out pretty simple first I'm going to take your card information and find the customer from",
    "start": "89640",
    "end": "96209"
  },
  {
    "text": "the database right so far so good then I'm going to take that information from",
    "start": "96209",
    "end": "102390"
  },
  {
    "text": "your customer and the cart and build out a cart object and build out the order",
    "start": "102390",
    "end": "107399"
  },
  {
    "text": "based on your card details and your customer information alright so far so good nothing going wrong here the next",
    "start": "107399",
    "end": "114000"
  },
  {
    "text": "thing we do is we go ahead and post a payment to this stripe API stripe has a really nice dotnet so library they just",
    "start": "114000",
    "end": "120899"
  },
  {
    "text": "released actually this week excuse me alright so there go ahead and and post that payment to the API via stripe now",
    "start": "120899",
    "end": "128099"
  },
  {
    "text": "once that's successful because it's always successful of course we go ahead and then send you a thank-you email to",
    "start": "128099",
    "end": "134160"
  },
  {
    "text": "send grid because that also has a nice little API and finally there are some downstream systems and drowns downstream",
    "start": "134160",
    "end": "140580"
  },
  {
    "text": "people we need to notify so we go ahead and use rabbitmq to publish the message to the",
    "start": "140580",
    "end": "146220"
  },
  {
    "text": "bus and then finally because everything is good everything succeeded we go ahead",
    "start": "146220",
    "end": "151260"
  },
  {
    "text": "and show that nice little Thank You page and around all of this and some kind of",
    "start": "151260",
    "end": "156930"
  },
  {
    "text": "like action filter or something like that is a transaction that says go ahead",
    "start": "156930",
    "end": "162180"
  },
  {
    "text": "and say the changes once everything is successful now this set of code assumes",
    "start": "162180",
    "end": "167940"
  },
  {
    "text": "that everything always goes well that nothing ever fails so what the developer",
    "start": "167940",
    "end": "173460"
  },
  {
    "text": "came to me and said I think something's wrong because we're assuming that everything succeeds all the time and we",
    "start": "173460",
    "end": "178980"
  },
  {
    "text": "don't have any code that says what happens not if something fails but when something fails and one of the things I",
    "start": "178980",
    "end": "184980"
  },
  {
    "text": "always have in the back of my head when I'm building distributed systems is failure is always an option when",
    "start": "184980",
    "end": "190890"
  },
  {
    "start": "188000",
    "end": "188000"
  },
  {
    "text": "building these kind of things we have a reasonable understanding an idea that the application that we build is going",
    "start": "190890",
    "end": "196560"
  },
  {
    "text": "to be up and running we hope that the database is always up right your databases never go down right no of",
    "start": "196560",
    "end": "204060"
  },
  {
    "text": "course not never but those other systems that were talking to stripe and syn grid",
    "start": "204060",
    "end": "209940"
  },
  {
    "text": "and RabbitMQ those are the ones we have a lot less control on a lot less control over and we can't make those sort of",
    "start": "209940",
    "end": "217560"
  },
  {
    "text": "guarantees it says those different third-party providers are always going to be up for me I try to force to make",
    "start": "217560",
    "end": "223830"
  },
  {
    "text": "my systems up as much as possible but we don't have just unlimited money to make sure everything's up all the time and in",
    "start": "223830",
    "end": "229440"
  },
  {
    "text": "fact because Google can't even keep Gmail up 100% of the time if they can do",
    "start": "229440",
    "end": "234540"
  },
  {
    "text": "it then really what hope do we have for the rest of us like none whatsoever so I'm building six like this I try to",
    "start": "234540",
    "end": "241680"
  },
  {
    "text": "design them and build them in such a way - I assume failure is going to happen so",
    "start": "241680",
    "end": "247340"
  },
  {
    "text": "the developer and I sat down and said okay let's let's walk through these options like how bad can it get if",
    "start": "247340",
    "end": "252990"
  },
  {
    "text": "something goes wrong here and so we looked at all the different things that that six little lines of code touched",
    "start": "252990",
    "end": "258420"
  },
  {
    "text": "and said okay for each line of code what happens not if something goes wrong but when something goes wrong so this the",
    "start": "258420",
    "end": "267330"
  },
  {
    "text": "sixth of the lines of code are represented by this diagram where first we had that call to the database a couple calls actually to go ahead and",
    "start": "267330",
    "end": "273690"
  },
  {
    "text": "load up the customer information and create an order then we call it a set of third-party providers and then the last step down",
    "start": "273690",
    "end": "279240"
  },
  {
    "text": "here was to then commit that entire transaction so let's walk through each of these steps and say what happens when",
    "start": "279240",
    "end": "285180"
  },
  {
    "text": "that call fails when something goes wrong there so the first thing that can go wrong is that first call to the",
    "start": "285180",
    "end": "291210"
  },
  {
    "text": "database where I say go ahead and give me the customer information and build an order based on their carts what happens",
    "start": "291210",
    "end": "296970"
  },
  {
    "text": "when that fails well nothing too bad I mean the customer that's submitting the",
    "start": "296970",
    "end": "304200"
  },
  {
    "text": "order mate see some screen that says something went wrong please submit your transaction again which of course no one",
    "start": "304200",
    "end": "309870"
  },
  {
    "text": "ever does right because if it the credit card in there and I don't trust you to not charge my card twice but from a system perspective the transaction rolls",
    "start": "309870",
    "end": "317160"
  },
  {
    "text": "back and then the entire system is consistent so everything's good all",
    "start": "317160",
    "end": "323190"
  },
  {
    "text": "right so what happens when that's stripe API call fails when the stripe API call",
    "start": "323190",
    "end": "329430"
  },
  {
    "text": "fails is actually not too bad no money posts to the stripe API that is I don't",
    "start": "329430",
    "end": "334890"
  },
  {
    "text": "actually take money from the customer the transaction rolls back because there is an exception and then the system is",
    "start": "334890",
    "end": "340740"
  },
  {
    "text": "consistent I'm still not too bad the next one we're saying is where things",
    "start": "340740",
    "end": "345870"
  },
  {
    "text": "really start to go wrong what happens when syn grid fails that email service",
    "start": "345870",
    "end": "351000"
  },
  {
    "text": "provider has anyone had their email service provider go down for like a day",
    "start": "351000",
    "end": "356990"
  },
  {
    "text": "yes that has definitely happened to me and well no asking like hey guys what",
    "start": "356990",
    "end": "362520"
  },
  {
    "text": "happened to your API it's down for a day oh it's just some some unplanned maintenance oh thanks I appreciate that",
    "start": "362520",
    "end": "367920"
  },
  {
    "text": "note of heads up there so when this call fails what's happened we've already",
    "start": "367920",
    "end": "374490"
  },
  {
    "text": "posted the payment to stripe but the transaction rolls back so we've taken",
    "start": "374490",
    "end": "380730"
  },
  {
    "text": "their money but have no record of doing so that's probably not a good spot this is where people start calling you and",
    "start": "380730",
    "end": "386850"
  },
  {
    "text": "complaining and your manager starts yelling at you like while you're taking people's money without although maybe",
    "start": "386850",
    "end": "393570"
  },
  {
    "text": "the revenue numbers look good right like yeah my business is doing well just everyone hates us so at this point this",
    "start": "393570",
    "end": "400440"
  },
  {
    "text": "system is inconsistent things are messed up the next one rabbitmq going down now",
    "start": "400440",
    "end": "407730"
  },
  {
    "text": "this is one of those things again that I don't find the I have to put a lot of assumptions my",
    "start": "407730",
    "end": "412770"
  },
  {
    "text": "system to say if typically if my if my message broker goes down usually there's",
    "start": "412770",
    "end": "419280"
  },
  {
    "text": "something really wrong with my system but these kind of brokers aren't always able to be deployed and a highly",
    "start": "419280",
    "end": "424530"
  },
  {
    "text": "available a highly available manner especially RabbitMQ it's actually very difficult to get it to work correctly",
    "start": "424530",
    "end": "429570"
  },
  {
    "text": "and deployed in that manner and it's also on the default mode of working because by default used to like file",
    "start": "429570",
    "end": "436410"
  },
  {
    "text": "install and you assume everything's up but to actually get it to do this highly available mode you have to have a lot I",
    "start": "436410",
    "end": "442410"
  },
  {
    "text": "think you have to actually pay for it it's not even free so what happens if that goes down this is even worse we've",
    "start": "442410",
    "end": "450240"
  },
  {
    "text": "actually charged the customer via stripe we've told them about it via email but",
    "start": "450240",
    "end": "457620"
  },
  {
    "text": "the database transaction rolls back because of the exception so we have no record of this actually ever happening again not a great spot maybe have",
    "start": "457620",
    "end": "464639"
  },
  {
    "text": "revenue numbers look great they probably eventually go down because hey we're not actually shipping anything",
    "start": "464639",
    "end": "469860"
  },
  {
    "text": "to our customers now the last one this is where our thing is going to really",
    "start": "469860",
    "end": "475470"
  },
  {
    "text": "really really go wrong what happens when that final database transaction commit",
    "start": "475470",
    "end": "480720"
  },
  {
    "text": "fails well first of all we may make the assumption that says okay if we've",
    "start": "480720",
    "end": "487590"
  },
  {
    "text": "already been able to contact the database big to begin with I mean what's the likelihood of that transaction failing at the very end well there's a",
    "start": "487590",
    "end": "494970"
  },
  {
    "text": "lot of things that can go wrong things like constraint violations those are not actually evaluate until you commit the",
    "start": "494970",
    "end": "500010"
  },
  {
    "text": "transaction even just a network hiccup something going wrong or someone pulling the plug on the server because that",
    "start": "500010",
    "end": "505800"
  },
  {
    "text": "can't happen right like accidentally turn the server off that happens so it doesn't even matter like why that could",
    "start": "505800",
    "end": "511680"
  },
  {
    "text": "possibly fail we have to think about what happens when that fails well we've",
    "start": "511680",
    "end": "517349"
  },
  {
    "text": "already called stripe so we've charged the customer we've also notified them via an email to",
    "start": "517349",
    "end": "524430"
  },
  {
    "text": "say hey thank you for your order it'll be shipped to you soon and we've also notified downstream",
    "start": "524430",
    "end": "529620"
  },
  {
    "text": "systems to say hey there's an order that's came in go ahead and do your processing go ahead and ship it out but",
    "start": "529620",
    "end": "535940"
  },
  {
    "text": "because the transaction rolled back from the database we have no record of that any of those kind of things ever",
    "start": "535940",
    "end": "541530"
  },
  {
    "text": "happening except probably log files that's our last refuse refuge is",
    "start": "541530",
    "end": "547250"
  },
  {
    "text": "something the customer complains they said they didn't get their order what went wrong let's go troll through all",
    "start": "547250",
    "end": "552839"
  },
  {
    "text": "the little log files and see what the heck went wrong and everyone has Symantec logging here right they're able",
    "start": "552839",
    "end": "558000"
  },
  {
    "text": "to completely reproduce any kind of production action that's happened right everyone has that in place all the time",
    "start": "558000",
    "end": "563940"
  },
  {
    "text": "all the time oh yeah everything's exactly no we don't always have that in place we can't just reproduce any kind",
    "start": "563940",
    "end": "570360"
  },
  {
    "text": "of customer action on top of that we don't may not even have all the details things like the customers credit card",
    "start": "570360",
    "end": "576060"
  },
  {
    "text": "number we probably don't log that right probably hopefully yes so we have a",
    "start": "576060",
    "end": "583350"
  },
  {
    "text": "situation where all these downstream things have happened both from the customer perspective and our own",
    "start": "583350",
    "end": "588540"
  },
  {
    "text": "internal downstream system but the system is just completely hosed at this point it doesn't have any knowledge of",
    "start": "588540",
    "end": "593790"
  },
  {
    "text": "these things happening except for an angry customer and some log files and maybe even it's just the log files so",
    "start": "593790",
    "end": "601560"
  },
  {
    "text": "this is what I was showing what was shown to me about a year ago or so said I had all these things that could possibly go wrong something looks",
    "start": "601560",
    "end": "607880"
  },
  {
    "text": "something looks fishy but now we have to decide what do we do based on all these",
    "start": "607880",
    "end": "614130"
  },
  {
    "text": "different failures well the current choice we had in that system was just",
    "start": "614130",
    "end": "619940"
  },
  {
    "text": "yeah just like whatever let's just assume that everything's okay and if",
    "start": "619940",
    "end": "626640"
  },
  {
    "text": "something goes wrong then we'll just like send a sorry email something like that but for most businesses that I work",
    "start": "626640",
    "end": "632430"
  },
  {
    "text": "with especially ones that actually take money from customers which i think is probably the vast majority of businesses I don't know any ones that don't",
    "start": "632430",
    "end": "638070"
  },
  {
    "text": "actually take money just like throwing up your hands shirking your shoulders and saying yeah that's probably not too",
    "start": "638070",
    "end": "643800"
  },
  {
    "text": "good for business that's probably one of the things you end up on like at Roy hunts presentation sometime later about",
    "start": "643800",
    "end": "649079"
  },
  {
    "text": "how much you've screwed things up so we can't just we can't just throw up our hands and in fact the business probably",
    "start": "649079",
    "end": "656070"
  },
  {
    "text": "doesn't even know that we've done this we've made this choice maybe we're not made this choice explicitly but in our",
    "start": "656070",
    "end": "661320"
  },
  {
    "text": "code those six or lines of code means implicitly that we've just kind of given up here so going back to our picture in",
    "start": "661320",
    "end": "672959"
  },
  {
    "text": "an ideal world if there were no like laws of physics or anything like that we could put this entire operation in a",
    "start": "672959",
    "end": "680220"
  },
  {
    "text": "transaction so they're the entire set of steps everything on the screen either",
    "start": "680220",
    "end": "685560"
  },
  {
    "text": "succeeds or fails if it's fails then everything rolls back if it succeeds",
    "start": "685560",
    "end": "692100"
  },
  {
    "text": "then everything goes through and everyone's happy but we can't put the entire world in",
    "start": "692100",
    "end": "699269"
  },
  {
    "start": "698000",
    "end": "698000"
  },
  {
    "text": "transaction I know I've tried have anyone use like the WS transactions the webservice thing that works swimmingly",
    "start": "699269",
    "end": "706230"
  },
  {
    "text": "didn't it so in here ever used a distributed transaction coordinator than ms dtc yeah",
    "start": "706230",
    "end": "711870"
  },
  {
    "text": "yeah your operations people love that I know it never goes down so we can't just",
    "start": "711870",
    "end": "719070"
  },
  {
    "text": "put everything that we use inside this one single transaction even if it's possible that makes the entire operation",
    "start": "719070",
    "end": "725760"
  },
  {
    "text": "go really really slow in fact a lot of our a lot of our measurements show at",
    "start": "725760",
    "end": "730920"
  },
  {
    "text": "least an order of magnitude if not several orders of magnitude and performance drop whenever we try to put",
    "start": "730920",
    "end": "736800"
  },
  {
    "text": "everything that we have inside a single transaction but we have these third",
    "start": "736800",
    "end": "741899"
  },
  {
    "text": "party AAP eyes that don't support this kind of transactional behavior nor I don't think they ever want to so we",
    "start": "741899",
    "end": "747660"
  },
  {
    "text": "can't put everything we have in a transaction that's just not an option for us so what we have to do is assume",
    "start": "747660",
    "end": "754529"
  },
  {
    "start": "753000",
    "end": "753000"
  },
  {
    "text": "that any one of those things failed and then based on that assumption then decide okay what should we do from there",
    "start": "754529",
    "end": "761190"
  },
  {
    "text": "if we plan for the worst thing that could possibly happen that it should put",
    "start": "761190",
    "end": "767100"
  },
  {
    "start": "763000",
    "end": "763000"
  },
  {
    "text": "us in a good final end spot now when I'm looking at evaluating okay we want to do",
    "start": "767100",
    "end": "773550"
  },
  {
    "text": "something based on each of these things possibly going wrong we have to evaluate a few options based on what is available",
    "start": "773550",
    "end": "780660"
  },
  {
    "text": "and those different providers to do based on failures as well as what means the most sense based in our business",
    "start": "780660",
    "end": "787589"
  },
  {
    "text": "about what we what each failure option would satisfy their business goals now",
    "start": "787589",
    "end": "793800"
  },
  {
    "text": "luckily I didn't have to come up with any of this stuff all this failure mode failure options has already been put out",
    "start": "793800",
    "end": "799949"
  },
  {
    "text": "there and so the ones I was looking at was a paper from Gregor hope this one is your coffee shop doesn't use two-phase",
    "start": "799949",
    "end": "806640"
  },
  {
    "start": "800000",
    "end": "800000"
  },
  {
    "text": "commit and it describes what can happen in a real-world process when things fail and one of the different options we have",
    "start": "806640",
    "end": "812790"
  },
  {
    "text": "for dealing with that failure this paper used to be called Starbucks doesn't use two-phase commit but I think Starbucks",
    "start": "812790",
    "end": "818910"
  },
  {
    "text": "caught on to that and said we don't want to be in your failure paper so now it's",
    "start": "818910",
    "end": "824880"
  },
  {
    "text": "just your coffee shop doesn't use two-phase commit now in this paper describes trying to coordinate",
    "start": "824880",
    "end": "831300"
  },
  {
    "text": "activities between two different resources and one failing and what to do when that other resource fails whatever",
    "start": "831300",
    "end": "838860"
  },
  {
    "text": "options to be able to deal with that failure now the first option we have when we have two resources we're trying",
    "start": "838860",
    "end": "845460"
  },
  {
    "text": "to coordinate in an activity and the second one fails is simply to ignore the other failure and just keep on going now",
    "start": "845460",
    "end": "852750"
  },
  {
    "text": "form a business perspective this might seem a little weird to say we would just ignore failure and go on with our lives",
    "start": "852750",
    "end": "858690"
  },
  {
    "text": "but in reality in the real world we do have this kind of situation come up quite frequently where we're trying to",
    "start": "858690",
    "end": "863940"
  },
  {
    "text": "coordinate two activities something fails and we say well maybe the other thing wasn't that important maybe we can just keep on doing what we're we're",
    "start": "863940",
    "end": "869970"
  },
  {
    "text": "doing before and highly available systems ignore is a as a really good",
    "start": "869970",
    "end": "875640"
  },
  {
    "text": "option to look at to make sure that we can still have high throughput and not try to put the entire world in a single",
    "start": "875640",
    "end": "881040"
  },
  {
    "text": "coordinated action most business I know misses that I know don't really like",
    "start": "881040",
    "end": "886170"
  },
  {
    "text": "this option of just ignoring failures so this may not actually come up in real life a whole lot in our systems now the",
    "start": "886170",
    "end": "893280"
  },
  {
    "text": "second option we could look at is a retry when the second action fails we",
    "start": "893280",
    "end": "898530"
  },
  {
    "text": "can just try that second action again now this can present some problems for",
    "start": "898530",
    "end": "904830"
  },
  {
    "text": "us not every single action is retrial and for that second action we may not be",
    "start": "904830",
    "end": "911310"
  },
  {
    "text": "able to retry indefinitely we probably don't want to just keep trying this action till the end of time so there has",
    "start": "911310",
    "end": "918060"
  },
  {
    "text": "to be some logic about when should we stop trying to do this other action and can another action even be retried in",
    "start": "918060",
    "end": "924330"
  },
  {
    "text": "the first place our third option is an",
    "start": "924330",
    "end": "929430"
  },
  {
    "text": "undo so in this case we're not going to try the second option again we're gonna",
    "start": "929430",
    "end": "934800"
  },
  {
    "text": "have an undo or compensating action for that for that first thing that happens",
    "start": "934800",
    "end": "940370"
  },
  {
    "text": "this again assumes that the first action is undoable in the first place maybe that's not a transaction kind of",
    "start": "940370",
    "end": "946860"
  },
  {
    "text": "thing maybe there's an actual compensating action we can do something like I've turned the lights on the",
    "start": "946860",
    "end": "951870"
  },
  {
    "text": "compensating action would be to turn the lights back off again now the final one",
    "start": "951870",
    "end": "957120"
  },
  {
    "text": "that we have available for us is this coordinated activity this doesn't necessarily assume that we have a",
    "start": "957120",
    "end": "964280"
  },
  {
    "text": "transaction available to resources but what we can do is design a protocol that",
    "start": "964280",
    "end": "970050"
  },
  {
    "text": "says I'll have a multi-step process to coordinate these two things succeeding or failing and it'll always involve a",
    "start": "970050",
    "end": "977280"
  },
  {
    "text": "third party coordinator to ensure that these things happen so the first step in this in this protocol is to first ask",
    "start": "977280",
    "end": "984540"
  },
  {
    "text": "each resource to prepare a transaction now if anyone here has ever bought a home that escrow or mortgage agent is",
    "start": "984540",
    "end": "993800"
  },
  {
    "text": "serving as this coordinator they sit you down in a room and say okay do you have that either cashier's check or something",
    "start": "993800",
    "end": "1000860"
  },
  {
    "text": "that says I have the deposit for the house yes you verify you have the deposit they don't take it from me right",
    "start": "1000860",
    "end": "1006350"
  },
  {
    "text": "then they just they just they just make sure that you have it then they go to the seller and they say okay they have",
    "start": "1006350",
    "end": "1012710"
  },
  {
    "text": "the deposit is the final price okay with you you're good to sell and hopefully they don't back out of it because that",
    "start": "1012710",
    "end": "1018590"
  },
  {
    "text": "that's happened to me and that's a horrible feeling but hopefully they say yes we still want to sell the house for this amount and the discrete upon date",
    "start": "1018590",
    "end": "1025040"
  },
  {
    "text": "and now that we have both parties agreeing that they intend to do this transaction now we go back to each party",
    "start": "1025040",
    "end": "1031010"
  },
  {
    "text": "and say okay let's go ahead and commit this transaction that we're doing so I'll go ahead and take the money from",
    "start": "1031010",
    "end": "1036199"
  },
  {
    "text": "the person and I cry a little bit for all that money I just hand it over and for the seller side and they go ahead",
    "start": "1036200",
    "end": "1041480"
  },
  {
    "text": "and sign over that deed and haney the keys and facilitating all this is this",
    "start": "1041480",
    "end": "1047089"
  },
  {
    "text": "coordinator that we have this mortgage agent this escrow agent something like that now this is not a bulletproof this",
    "start": "1047089",
    "end": "1055640"
  },
  {
    "text": "is not a bulletproof protocol because on that second phase of the transaction the second phase of that commit something",
    "start": "1055640",
    "end": "1061850"
  },
  {
    "text": "could still get hiccup there so let's say I took the money from the person from the from the one buying the house",
    "start": "1061850",
    "end": "1068060"
  },
  {
    "text": "and I go to ask the seller okay you good to go and then they have second thoughts or they just leave the country for",
    "start": "1068060",
    "end": "1073190"
  },
  {
    "text": "whatever reason I've taken the person's money and maybe I've even cashed the",
    "start": "1073190",
    "end": "1078440"
  },
  {
    "text": "check but hopefully not and the other one is has failed and is no longer there and so",
    "start": "1078440",
    "end": "1084230"
  },
  {
    "text": "now I'm end this like still in between states so I'm even have to have even more compensating actions to be able to",
    "start": "1084230",
    "end": "1090620"
  },
  {
    "text": "roll those things back now in systems I work with that try to choose this option",
    "start": "1090620",
    "end": "1096340"
  },
  {
    "text": "this option only really works when that coordinator is very close and highly",
    "start": "1096340",
    "end": "1101480"
  },
  {
    "text": "available to the things that trying to coordinate the more I move that coordinator away from the things that's",
    "start": "1101480",
    "end": "1106880"
  },
  {
    "text": "trying to coordinate the more likely that this transaction is going to fail so when you deploy this kind of",
    "start": "1106880",
    "end": "1112730"
  },
  {
    "text": "environment you have to put things very close to each other to make sure that they succeed most the time now you're",
    "start": "1112730",
    "end": "1119600"
  },
  {
    "text": "not necessarily forced to do something like a distributed transaction coordinator for this kind of operation as long as I have something that can do",
    "start": "1119600",
    "end": "1126620"
  },
  {
    "text": "a similar kind of protocol this is a valid choice for us now I've gotten my",
    "start": "1126620",
    "end": "1133309"
  },
  {
    "text": "four options for dealing with failure my master plan here is to take each of",
    "start": "1133309",
    "end": "1140059"
  },
  {
    "start": "1137000",
    "end": "1137000"
  },
  {
    "text": "those four options and evaluate it against each of the steps I had on those six little lines of code and say for",
    "start": "1140059",
    "end": "1145850"
  },
  {
    "text": "each of those options one is this option for failure even a valid choice for us is it possible and two what does it make",
    "start": "1145850",
    "end": "1152600"
  },
  {
    "text": "sense in terms of the business transaction that we're trying to do here it's still important here that we talk",
    "start": "1152600",
    "end": "1158000"
  },
  {
    "text": "to the business to say basically these options what should we do here because the implications for failure and success",
    "start": "1158000",
    "end": "1165190"
  },
  {
    "text": "still will be bubbled up all the way to the business so I have to get them involved here hopefully not using terms",
    "start": "1165190",
    "end": "1171320"
  },
  {
    "text": "like distributed transaction coordinator because there's nothing that makes a a product owners eyes glazed over more",
    "start": "1171320",
    "end": "1177320"
  },
  {
    "text": "quickly and then starting to talked about DTC program protocols at least I hope you haven't done that so for each",
    "start": "1177320",
    "end": "1183980"
  },
  {
    "text": "of these external resources examine each of the possibilities for dealing with failures and pick the best option based",
    "start": "1183980",
    "end": "1190700"
  },
  {
    "start": "1184000",
    "end": "1184000"
  },
  {
    "text": "on the business requirements at hand it sound good okay so the first step and",
    "start": "1190700",
    "end": "1198549"
  },
  {
    "start": "1198000",
    "end": "1198000"
  },
  {
    "text": "our list of resources that could possibly fail is going to be stripe now",
    "start": "1198549",
    "end": "1204020"
  },
  {
    "text": "on the database side because we saw that if that piece failed the transaction wouldn't rollback and would be good to go I'll go ahead and say well we could",
    "start": "1204020",
    "end": "1210529"
  },
  {
    "text": "just use that normal debates transaction and call it a day but for the other third-party resources",
    "start": "1210529",
    "end": "1216190"
  },
  {
    "text": "let's go and see what are those different options for us so in our code",
    "start": "1216190",
    "end": "1221919"
  },
  {
    "text": "here just to just to remind you we had that set of transaction code hitting our",
    "start": "1221919",
    "end": "1226929"
  },
  {
    "text": "database so we do control and then after that database stuff then we have this call to the stripe API so the first",
    "start": "1226929",
    "end": "1234159"
  },
  {
    "text": "option looking at is to ignore it is wrap that stripe call in a try-catch and",
    "start": "1234159",
    "end": "1241360"
  },
  {
    "text": "if something fails just keep going on and do the next set of steps that",
    "start": "1241360",
    "end": "1246970"
  },
  {
    "text": "probably doesn't make a lot of sense for us to just ignore fail payment and then assume that we can go ahead and ship the",
    "start": "1246970",
    "end": "1252970"
  },
  {
    "text": "thing to the customer I assume we actually want to have a business that can take money from customers and stay",
    "start": "1252970",
    "end": "1259090"
  },
  {
    "text": "in business over time so just ignoring what failures and when payments fail is probably not a good thing for our",
    "start": "1259090",
    "end": "1264580"
  },
  {
    "text": "business so that's not why I would ever actually take to the business and say hey is it okay if we just like don't take money from customers is that cool I",
    "start": "1264580",
    "end": "1270429"
  },
  {
    "text": "probably get left out of the room so that's just thrown out the door immediately the section second option",
    "start": "1270429",
    "end": "1278019"
  },
  {
    "start": "1276000",
    "end": "1276000"
  },
  {
    "text": "for us on stripe is to retry now before I think about the code implications or",
    "start": "1278019",
    "end": "1284380"
  },
  {
    "text": "what this at this stripe API even supports it we do have to think about what if that if that retry is even",
    "start": "1284380",
    "end": "1292240"
  },
  {
    "text": "possible in our code so in in the stripe API basically what I'll do is I'll",
    "start": "1292240",
    "end": "1300250"
  },
  {
    "text": "Google the name of the resource and then retries and see what pops up now not",
    "start": "1300250",
    "end": "1307120"
  },
  {
    "text": "every single operation is retrial in the case of calling a stripe API if I call",
    "start": "1307120",
    "end": "1312429"
  },
  {
    "text": "the API twice and a retry it may be the first one-time doubts but I don't know if it actually succeeded or failed I",
    "start": "1312429",
    "end": "1318429"
  },
  {
    "text": "just I was waiting for response and never actually got it some failures are very quick some failures are slower and",
    "start": "1318429",
    "end": "1324460"
  },
  {
    "text": "those solar failures I can't necessarily make that assumption that it actually failed on the stripe side so what we",
    "start": "1324460",
    "end": "1331600"
  },
  {
    "text": "don't want to have happen is to take the customers money twice because almost",
    "start": "1331600",
    "end": "1336820"
  },
  {
    "text": "worse than taking their money once and not telling about it is taking the money twice and double charging them so if I",
    "start": "1336820",
    "end": "1344080"
  },
  {
    "text": "want to be able to call some kind of resource multiple times and still have it as if it only had that",
    "start": "1344080",
    "end": "1350740"
  },
  {
    "text": "operation happen once there's a term for this and it's called item Ponzi item",
    "start": "1350740",
    "end": "1356440"
  },
  {
    "text": "potency means they can do an operation multiple times and have the same end results item potency is not a medical",
    "start": "1356440",
    "end": "1361600"
  },
  {
    "text": "condition condition it's an actual thing we can do with our systems so what I'll",
    "start": "1361600",
    "end": "1366610"
  },
  {
    "text": "do is I just Google resource name and item potency and what comes up stripe",
    "start": "1366610",
    "end": "1373720"
  },
  {
    "text": "actually supports idempotent requests now the way they do this is they have to",
    "start": "1373720",
    "end": "1379210"
  },
  {
    "text": "have some way of correlating a request if I make it multiple times they can't just assume like oh you got",
    "start": "1379210",
    "end": "1385810"
  },
  {
    "text": "this call from the same provider from the same endpoint for the same amount within like five seconds that must be a",
    "start": "1385810",
    "end": "1391180"
  },
  {
    "text": "duplicate well they don't make that kind of assumption so what they can do though is is me have some way of saying based",
    "start": "1391180",
    "end": "1398830"
  },
  {
    "text": "on me calling your API multiple times this represents one logical business transaction and so they have this in the",
    "start": "1398830",
    "end": "1406180"
  },
  {
    "text": "form of an item potency key I pass to them some kind of unique identifier that",
    "start": "1406180",
    "end": "1411370"
  },
  {
    "text": "represents this business transaction and on their side if they received that request more than once they'll only",
    "start": "1411370",
    "end": "1417490"
  },
  {
    "text": "charge that customer for that one initial call now because just because",
    "start": "1417490",
    "end": "1424300"
  },
  {
    "text": "stripes supports that doesn't mean way to start calling it with any kind of random data we need to make sure that we pick something in our side for that item",
    "start": "1424300",
    "end": "1430480"
  },
  {
    "text": "potency key that represents that item potent action so what represents in our",
    "start": "1430480",
    "end": "1437200"
  },
  {
    "text": "system the business transaction of someone trying to place an order well it",
    "start": "1437200",
    "end": "1443470"
  },
  {
    "text": "could be a cart ID the cart ID represents that logical business",
    "start": "1443470",
    "end": "1449230"
  },
  {
    "text": "transaction of me at trying to place an order so maybe we can just straight-up use that as our item PO and Sukie or if",
    "start": "1449230",
    "end": "1457030"
  },
  {
    "text": "we don't have that maybe we just make something else up but something that logically represents me clicking that button and trying to place that order",
    "start": "1457030",
    "end": "1462940"
  },
  {
    "text": "and hopefully this kind of item potency key I would want to store along with all the rest of my business data but that",
    "start": "1462940",
    "end": "1470530"
  },
  {
    "text": "seems like a logical thing we can do is say the cart represents me trying to place an order so I will just pass the",
    "start": "1470530",
    "end": "1476830"
  },
  {
    "text": "cart ID isn't that as an item a king now no mercy no picture here do",
    "start": "1476830",
    "end": "1484810"
  },
  {
    "text": "you have me actually retrying this operation so we would still need to put some mechanism to be able to retry this",
    "start": "1484810",
    "end": "1491200"
  },
  {
    "text": "maybe it's on the client side when I click the button I would check to see if the call failed or succeeded and if it",
    "start": "1491200",
    "end": "1497380"
  },
  {
    "text": "failed I go ahead and just post the API call again or maybe there's something in my server side that is detecting",
    "start": "1497380",
    "end": "1503860"
  },
  {
    "text": "failures and then retrying this operation whatever it is by me using stripe API to be able to pass in and I",
    "start": "1503860",
    "end": "1510460"
  },
  {
    "text": "impose a key I can ensure that if I try to post this payment twice for the same cart it will only charge the customer",
    "start": "1510460",
    "end": "1516760"
  },
  {
    "text": "once so our third option we had ignore",
    "start": "1516760",
    "end": "1525460"
  },
  {
    "text": "which was not a good thing retry the third one is undo now undo",
    "start": "1525460",
    "end": "1532690"
  },
  {
    "start": "1530000",
    "end": "1530000"
  },
  {
    "text": "doesn't necessarily mean I have a rollback like database transaction it could also mean that there's some",
    "start": "1532690",
    "end": "1538150"
  },
  {
    "text": "compensating action that I do so for stripe what is a compensating action for",
    "start": "1538150",
    "end": "1544420"
  },
  {
    "text": "charging a customer refund yes",
    "start": "1544420",
    "end": "1549940"
  },
  {
    "text": "so for this resource that I'm looking at whatever might be I I tried to Google",
    "start": "1549940",
    "end": "1555580"
  },
  {
    "text": "what that compensating action could possibly be and so in this case stripe",
    "start": "1555580",
    "end": "1560950"
  },
  {
    "text": "with payments an undo of a payment a compensating action would be a refund in",
    "start": "1560950",
    "end": "1567190"
  },
  {
    "text": "stripe thankfully supports refunds directly out of the box so what was this",
    "start": "1567190",
    "end": "1574420"
  },
  {
    "text": "look like in our code in our code we put some kind of trycatch around the entire",
    "start": "1574420",
    "end": "1580180"
  },
  {
    "text": "payment processing and when something fails I would check to see if I had a",
    "start": "1580180",
    "end": "1585450"
  },
  {
    "text": "stripe payment based on that stripe payment object and if that payment",
    "start": "1585450",
    "end": "1590530"
  },
  {
    "text": "actually exists then I'll go ahead and call the straight stripe API to say refund this payment now in like real",
    "start": "1590530",
    "end": "1602350"
  },
  {
    "text": "systems they work with I don't I wouldn't necessarily refund them directly in this trycatch maybe I do something like mark the order as needing",
    "start": "1602350",
    "end": "1609310"
  },
  {
    "text": "a refund and a human goes and looks at it and says oh maybe we can actually charge the customer maybe it's okay for us to",
    "start": "1609310",
    "end": "1614810"
  },
  {
    "text": "continuous operation but for our purposes let's just assume that we can try catch and then undo that action",
    "start": "1614810",
    "end": "1621050"
  },
  {
    "text": "through the refund API call there's still a problem here though if you",
    "start": "1621050",
    "end": "1626750"
  },
  {
    "text": "remember in that for this first supple set of slides there is a database transaction around all of this somewhere",
    "start": "1626750",
    "end": "1634340"
  },
  {
    "text": "down like here or there or maybe over there somewhere is that action filter",
    "start": "1634340",
    "end": "1639740"
  },
  {
    "text": "that commits the transaction after those requests this controller action succeeds here and so that still has the",
    "start": "1639740",
    "end": "1646340"
  },
  {
    "text": "possibility of failure so what I'd want to do is actually pull in that transactional behavior into this set of",
    "start": "1646340",
    "end": "1652160"
  },
  {
    "text": "code so that around this entire a P I call I will have that database transaction set of code there so that if",
    "start": "1652160",
    "end": "1658610"
  },
  {
    "text": "the database transaction fails I can detect that and then go ahead and refund",
    "start": "1658610",
    "end": "1664280"
  },
  {
    "text": "the customer and rollback my transaction so far so good",
    "start": "1664280",
    "end": "1671410"
  },
  {
    "text": "so the question went up here is what happens if the rollback fails that's a",
    "start": "1672280",
    "end": "1679640"
  },
  {
    "text": "great question so let's look at the fourth option coordinate now that is a",
    "start": "1679640",
    "end": "1684980"
  },
  {
    "text": "that is a valid concern for us to say what happens when this call fails right",
    "start": "1684980",
    "end": "1691520"
  },
  {
    "text": "here so we might have some more compensating actions there maybe we actually do log it somewhere that is in",
    "start": "1691520",
    "end": "1697490"
  },
  {
    "text": "a highly available format eventually you have to get to the point where we tried as much as we can to capture this",
    "start": "1697490",
    "end": "1702710"
  },
  {
    "text": "operation that's happening and the failure modes but you can't ever guarantee that everything's gonna succeed all the time I mean I could try",
    "start": "1702710",
    "end": "1709190"
  },
  {
    "text": "to write the log to disk and the disk it is full and it isn't write the log so like eventually it should kind of be",
    "start": "1709190",
    "end": "1715520"
  },
  {
    "text": "like well we did our level best as long as we actually went through this process",
    "start": "1715520",
    "end": "1720650"
  },
  {
    "text": "a thought process of designing it and not just through our hands I think that's a valid thing we can do our",
    "start": "1720650",
    "end": "1729230"
  },
  {
    "text": "fourth option coordinates now we already said that this these API calls don't",
    "start": "1729230",
    "end": "1737270"
  },
  {
    "start": "1730000",
    "end": "1730000"
  },
  {
    "text": "support any kind of transactional behavior that as I can't put a begin transaction in transaction and have that",
    "start": "1737270",
    "end": "1743300"
  },
  {
    "text": "all just work magically but I may go ahead and dig in some more",
    "start": "1743300",
    "end": "1748510"
  },
  {
    "text": "to these API calls and say does it support something like that that's more maybe not not like a bit like a",
    "start": "1748510",
    "end": "1756549"
  },
  {
    "text": "transactional kind of behavior but do they support some kind of two-phase commit for payments and it turns out",
    "start": "1756549",
    "end": "1764500"
  },
  {
    "text": "that even the underlying ACH transactions support this kind of concept has anyone logged into their",
    "start": "1764500",
    "end": "1770770"
  },
  {
    "text": "bank account and seen a balance in a pending balance well the pending balance is pending",
    "start": "1770770",
    "end": "1776770"
  },
  {
    "text": "transactions that have not yet cleared for the day and stripe supports this concept out of the box it supports it in",
    "start": "1776770",
    "end": "1784929"
  },
  {
    "text": "the term of this they call it authorization and capture as a 2-step payment flow and the general idea is",
    "start": "1784929",
    "end": "1792549"
  },
  {
    "text": "that I have an initial call to the stripe API to authorize a charge which",
    "start": "1792549",
    "end": "1797830"
  },
  {
    "text": "basically is that that mortgage agent the escrow agent that has taken your money and put it to the side but not",
    "start": "1797830",
    "end": "1803230"
  },
  {
    "text": "quite charged yet just like I'm making sure that you have this money and then sometime in the future when I when I",
    "start": "1803230",
    "end": "1808690"
  },
  {
    "text": "actually want to go through the transaction I capture those charges and finally it's actually out of your accounts and give it to the other person",
    "start": "1808690",
    "end": "1817230"
  },
  {
    "text": "now this one does have business implications from the previous couple",
    "start": "1817350",
    "end": "1823360"
  },
  {
    "text": "steps in this case an authorization actually shows up and your bank account",
    "start": "1823360",
    "end": "1828820"
  },
  {
    "text": "is this like money that's not quite there but is there sort of thing so it want to make sure from the business",
    "start": "1828820",
    "end": "1833980"
  },
  {
    "text": "perspective they're ok with this we're not taking the money quite yet so the customers may go in and look at their account and see the money is not quite",
    "start": "1833980",
    "end": "1840100"
  },
  {
    "text": "taken out yet but hopefully the likelihood of that happening the",
    "start": "1840100",
    "end": "1846360"
  },
  {
    "text": "authorizations succeeding but the capture feeling is rather low and this won't actually ever affect the customer",
    "start": "1846360",
    "end": "1852880"
  },
  {
    "text": "hopefully but I still need to put that in front of my clients to make sure it's ok so what does that look like in our",
    "start": "1852880",
    "end": "1859149"
  },
  {
    "text": "code more try catches surprise surprise I would attempt to do all that stripe",
    "start": "1859149",
    "end": "1866590"
  },
  {
    "text": "transaction but instead of me instead of me charging their payment immediately and said I post an authorization to the",
    "start": "1866590",
    "end": "1873580"
  },
  {
    "text": "payment now assuming that is set of operation succeeds then I'll have the",
    "start": "1873580",
    "end": "1879370"
  },
  {
    "text": "second step and the the auth capture flow which was to capture their payments and actually take their money now I said we",
    "start": "1879370",
    "end": "1888070"
  },
  {
    "text": "had the question of what happens if that second call fails or the robach fail so I still would want to have some kind of logging here to say oops I try to",
    "start": "1888070",
    "end": "1894910"
  },
  {
    "text": "capture the money but it didn't work but this is and a little bit better spot than the previous one the previous one",
    "start": "1894910",
    "end": "1900040"
  },
  {
    "text": "would take their money but if something fails refund them this one will still take their money but not quite take it",
    "start": "1900040",
    "end": "1906730"
  },
  {
    "text": "all the way so an administrator could come back in and say let's go ahead and go to my my transactions that haven't",
    "start": "1906730",
    "end": "1913420"
  },
  {
    "text": "succeeded and go ahead and capture that money and I'll let the process and then keep going but this is this kind of",
    "start": "1913420",
    "end": "1921070"
  },
  {
    "text": "weird situation where I could authorize a customer's about accounts and have",
    "start": "1921070",
    "end": "1926200"
  },
  {
    "text": "that money kind of sitting in limbo so I'd still have to go back to my business to say which is the one that makes most sense for you so those are the four",
    "start": "1926200",
    "end": "1935740"
  },
  {
    "text": "options in terms of which one we would actually do we'd have to go to our business and talk to them which one",
    "start": "1935740",
    "end": "1941740"
  },
  {
    "text": "makes most sense for us next up is sin",
    "start": "1941740",
    "end": "1947140"
  },
  {
    "start": "1947000",
    "end": "1947000"
  },
  {
    "text": "grid sin Grid is an email service provider that provides a nice API interface for me to send emails to",
    "start": "1947140",
    "end": "1953710"
  },
  {
    "text": "customers template eyes them and all those sort of things as well so option",
    "start": "1953710",
    "end": "1958960"
  },
  {
    "text": "one ignore this one actually may be valid do we want our entire business",
    "start": "1958960",
    "end": "1966070"
  },
  {
    "text": "transaction to fail because I can't email someone probably not I'm probably",
    "start": "1966070",
    "end": "1972040"
  },
  {
    "text": "like well we took your money you probably get an email sometime in the future but I'm not gonna like not take your money just because I can't email",
    "start": "1972040",
    "end": "1978640"
  },
  {
    "text": "you do we really want to tie the uptime and business ability to conduct business",
    "start": "1978640",
    "end": "1984880"
  },
  {
    "text": "to a third party email service provider probably not so ignore could be a valid",
    "start": "1984880",
    "end": "1991360"
  },
  {
    "text": "option for us and so it'd just be a simple try catch try to call the stripe API or the SendGrid API and if SendGrid",
    "start": "1991360",
    "end": "1998800"
  },
  {
    "text": "fails this log an error but keep on going oops couldn't email you oh well",
    "start": "1998800",
    "end": "2003990"
  },
  {
    "text": "still gonna take your money",
    "start": "2003990",
    "end": "2007250"
  },
  {
    "text": "I still want to log it at least though so I can let my my overall",
    "start": "2009200",
    "end": "2015320"
  },
  {
    "text": "administrators know like hey API is down so probably stop emailing people all the",
    "start": "2015320",
    "end": "2020730"
  },
  {
    "text": "time and wait for that thing to come back up option two is to retry so this",
    "start": "2020730",
    "end": "2029550"
  },
  {
    "text": "is where I'd go again to Google email service provider SendGrid retry no hits",
    "start": "2029550",
    "end": "2036270"
  },
  {
    "text": "except for a lot of Stack Overflow posts asking if it supports it ok SendGrid idempotency lots of Stack",
    "start": "2036270",
    "end": "2042690"
  },
  {
    "text": "Overflow questions but no actual answers basically comes back to sin grid",
    "start": "2042690",
    "end": "2047720"
  },
  {
    "text": "explicitly decided not to support any kind of retrial behavior because what",
    "start": "2047720",
    "end": "2052980"
  },
  {
    "text": "their entire business models defined through is whenever you call my API I'm",
    "start": "2052980",
    "end": "2058500"
  },
  {
    "text": "gonna send an email as quickly as possible you call me twice that's two emails you",
    "start": "2058500",
    "end": "2064679"
  },
  {
    "text": "don't want to call me twice don't call me twice so we don't want to do retry",
    "start": "2064679",
    "end": "2069750"
  },
  {
    "text": "unless it's ok for has to have duplicate emails now this is again something go",
    "start": "2069750",
    "end": "2075120"
  },
  {
    "text": "back to the business to ask and say hey we can retry this behavior but we can't",
    "start": "2075120",
    "end": "2080760"
  },
  {
    "text": "guarantee that they only get that one email is that okay maybe yes maybe no but I need to have that business tell me",
    "start": "2080760",
    "end": "2086850"
  },
  {
    "text": "that option three is an undo no matter",
    "start": "2086850",
    "end": "2095580"
  },
  {
    "text": "how much we try we cannot unsend emails even though you have like Outlook",
    "start": "2095580",
    "end": "2101700"
  },
  {
    "text": "Exchange server has that ability like sometimes like people still read the email and then gets deleted and you're",
    "start": "2101700",
    "end": "2107130"
  },
  {
    "text": "like you try to send to everyone didn't you you actually see see the entire company so we can't we can't like undo",
    "start": "2107130",
    "end": "2114240"
  },
  {
    "text": "an email that won't make any sense like stead of send a follow-up email like I'm sorry I sent you that other email maybe",
    "start": "2114240",
    "end": "2120270"
  },
  {
    "start": "2119000",
    "end": "2119000"
  },
  {
    "text": "that's an option for us is like oops sorry apologize and and hopefully they",
    "start": "2120270",
    "end": "2125940"
  },
  {
    "text": "still stick with us as a business fourth",
    "start": "2125940",
    "end": "2131580"
  },
  {
    "text": "option is to coordinate I have no idea what this would mean in terms of emails",
    "start": "2131580",
    "end": "2136830"
  },
  {
    "text": "smtp certainly doesn't support it so we're just not if we can't this doesn't exist",
    "start": "2136830",
    "end": "2142380"
  },
  {
    "text": "we'll just keep going to the next thing so her final piece is RabbitMQ now it's",
    "start": "2142380",
    "end": "2150360"
  },
  {
    "start": "2147000",
    "end": "2147000"
  },
  {
    "text": "important here that I investigate the actual broker we're using because every kind of message broker is different in",
    "start": "2150360",
    "end": "2156150"
  },
  {
    "text": "the functionality they support on top of that every most message broker is different in in terms of what they",
    "start": "2156150",
    "end": "2162960"
  },
  {
    "text": "recommend that you actually do as well so rabbitmq for example prides itself on",
    "start": "2162960",
    "end": "2168090"
  },
  {
    "text": "speed and how do they achieve that speed by lowering the guarantees so RabbitMQ I",
    "start": "2168090",
    "end": "2175830"
  },
  {
    "text": "could through my options have that more transactional behavior that means that everything's going to get a lot slower",
    "start": "2175830",
    "end": "2181850"
  },
  {
    "text": "so I'll have to make that decision so the first option what could be to ignore I try to publish an event to the bus",
    "start": "2181850",
    "end": "2191610"
  },
  {
    "text": "onto RabbitMQ and maybe if it doesn't succeed I'll go ahead and mark that",
    "start": "2191610",
    "end": "2196860"
  },
  {
    "text": "order as hey someone needs to like kick that message down the road because it couldn't work here I'm gonna have to go",
    "start": "2196860",
    "end": "2205530"
  },
  {
    "text": "back to the business and say look sometimes RabbitMQ our broker can go down so is it okay if we have an",
    "start": "2205530",
    "end": "2212550"
  },
  {
    "text": "administrator page that goes through and finds orders that need to be like poked to be able to send this message maybe so",
    "start": "2212550",
    "end": "2219960"
  },
  {
    "text": "maybe not the next option is retry now",
    "start": "2219960",
    "end": "2226530"
  },
  {
    "text": "this becomes interesting because most message brokers that I work with don't",
    "start": "2226530",
    "end": "2231750"
  },
  {
    "text": "really have any concept of a retry a retry is like send the message again and",
    "start": "2231750",
    "end": "2236840"
  },
  {
    "text": "so what does it look like in in rabbitmq well for us if RabbitMQ fails for",
    "start": "2236840",
    "end": "2242790"
  },
  {
    "text": "whatever reason we can retry us to send that message but it doesn't necessarily mean that the first message actually failed there are cases where I send the",
    "start": "2242790",
    "end": "2250860"
  },
  {
    "text": "message but I haven't received that acknowledgement from rabbitmq that actually sent the message and so I wait",
    "start": "2250860",
    "end": "2256140"
  },
  {
    "text": "for the acknowledgement and like I didn't get one so let me go ahead and try it again but that could still mean that the first message actually went",
    "start": "2256140",
    "end": "2261240"
  },
  {
    "text": "through I just didn't wait long enough for that acknowledgement to come back so when looking at this option it's not not",
    "start": "2261240",
    "end": "2268380"
  },
  {
    "text": "just that I'm retrying rabbitmq it's actually means that I'm retrying everything that RabbitMQ is",
    "start": "2268380",
    "end": "2274380"
  },
  {
    "text": "talking to what down stream brokers as could possibly be so I'm not even thinking in terms of",
    "start": "2274380",
    "end": "2280620"
  },
  {
    "text": "does rabbitmq support any kind of retries I also have to think about what about downstream consumers can they also",
    "start": "2280620",
    "end": "2287550"
  },
  {
    "text": "support retries for this kind of operation and if I can't guarantee",
    "start": "2287550",
    "end": "2293130"
  },
  {
    "text": "absolutely that they can handle this kind of retry behavior then probably this isn't a good option for me if you",
    "start": "2293130",
    "end": "2300300"
  },
  {
    "text": "want to support this idea of at least once messaging over here I can send the",
    "start": "2300300",
    "end": "2306000"
  },
  {
    "text": "message at least one times on this side but only have it delivered and processed by each of these consumers on this side",
    "start": "2306000",
    "end": "2311460"
  },
  {
    "text": "there's a lot more smarts you have to put in these little arrows that I'll leave off as an exercise to the reader",
    "start": "2311460",
    "end": "2317060"
  },
  {
    "text": "smarts now some brokers do support this out of the box they're here using as your service bus",
    "start": "2317060",
    "end": "2324530"
  },
  {
    "text": "so many hang out to two hands so as your service bus does support the idea of",
    "start": "2324530",
    "end": "2330750"
  },
  {
    "text": "retries and the way they handle it is they'll actually buffer the messages upfront for like 30 seconds or so and so",
    "start": "2330750",
    "end": "2337620"
  },
  {
    "text": "if you send the same message twice within a given amount of time they can detect that and say okay whoops they",
    "start": "2337620",
    "end": "2342780"
  },
  {
    "text": "accidentally send me this twice so only actually delivers to the back end once but that again costs resources because I",
    "start": "2342780",
    "end": "2350100"
  },
  {
    "text": "have to store the messages somewhere and they don't want to store the messages forever because that's very expensive",
    "start": "2350100",
    "end": "2355170"
  },
  {
    "text": "right let me look at every single message sent ever and decide if this message has been sent before probably",
    "start": "2355170",
    "end": "2360510"
  },
  {
    "text": "not a thing you want to do in your systems so I only want to do that for a given amount of time but what happens if",
    "start": "2360510",
    "end": "2366030"
  },
  {
    "text": "I try to retry after 31 seconds well that means duplicate messages in the",
    "start": "2366030",
    "end": "2371370"
  },
  {
    "text": "back end so option 3 undo okay this is",
    "start": "2371370",
    "end": "2379140"
  },
  {
    "text": "another weird one what does it mean to undo a message similar to emails",
    "start": "2379140",
    "end": "2384780"
  },
  {
    "text": "I can't unsend a message to rabbitmq and then if I can't unsend a message I would",
    "start": "2384780",
    "end": "2392730"
  },
  {
    "text": "have some kind of weird compensating action on the bus like order created of",
    "start": "2392730",
    "end": "2398340"
  },
  {
    "start": "2394000",
    "end": "2394000"
  },
  {
    "text": "it second message oops I'm sorry order not actually created my bad event",
    "start": "2398340",
    "end": "2403430"
  },
  {
    "text": "probably not a thing we do in our systems so compensating message probably not going to work for us",
    "start": "2403430",
    "end": "2410690"
  },
  {
    "text": "now the final option is coordinates now some brokers do support a coordination",
    "start": "2410690",
    "end": "2417930"
  },
  {
    "text": "kind of activity that is I can in a kind of a two-phase commit distributed",
    "start": "2417930",
    "end": "2423240"
  },
  {
    "text": "transaction I can do some kind of transactional baby everybody here and then on my message broker I'm basically",
    "start": "2423240",
    "end": "2430140"
  },
  {
    "text": "putting my message but with my finger on it like I'm gonna put over here I'm not gonna set it yet and whenever I said",
    "start": "2430140",
    "end": "2435570"
  },
  {
    "text": "things to see isn't like okay you're good to go message to go out the door some messaging transports support this",
    "start": "2435570",
    "end": "2441840"
  },
  {
    "text": "kind of behavior and missed some cue does RabbitMQ does not again explicitly",
    "start": "2441840",
    "end": "2449640"
  },
  {
    "text": "they don't want to support that because it's a very expensive operation for me to be like putting my finger that message but like I'm not gonna send it",
    "start": "2449640",
    "end": "2455610"
  },
  {
    "text": "yet I could've sent it oh not now can go that's actually very expensive to do and a distributed system so if I try to do",
    "start": "2455610",
    "end": "2463140"
  },
  {
    "text": "that typically I see an order of magnitude drop and throughput and for my system I don't want to do that kind of thing radnik you doesn't support it",
    "start": "2463140",
    "end": "2469950"
  },
  {
    "text": "anyway so can't even consider it and in fact I'd say almost all the brokers I",
    "start": "2469950",
    "end": "2475950"
  },
  {
    "text": "deal with don't support this kind of distributed transaction coordinator transaction behavior so I want to take a",
    "start": "2475950",
    "end": "2485280"
  },
  {
    "start": "2485000",
    "end": "2485000"
  },
  {
    "text": "step back because we've looked at the different resources we're talking to all",
    "start": "2485280",
    "end": "2490380"
  },
  {
    "text": "the different options that we've all the different failure options and personally",
    "start": "2490380",
    "end": "2495720"
  },
  {
    "text": "I didn't find any of them to be that good like none of the none of the outcomes of any of those different",
    "start": "2495720",
    "end": "2501690"
  },
  {
    "text": "failure modes I thought that the business was actually gonna be okay with like they may be they be up here with like I guess we have to do that but that",
    "start": "2501690",
    "end": "2508650"
  },
  {
    "text": "kind of sucks so maybe maybe I should rethink the entire process and say what",
    "start": "2508650",
    "end": "2515880"
  },
  {
    "text": "if instead of me coupling all those six little lines of code together saying they all succeed or all fail can I avoid",
    "start": "2515880",
    "end": "2523230"
  },
  {
    "start": "2516000",
    "end": "2516000"
  },
  {
    "text": "these kind of failure modes but perhaps just breaking in my process into multiple steps now in most ecommerce",
    "start": "2523230",
    "end": "2533130"
  },
  {
    "text": "systems I work with they don't couple all these things together they don't couple the creation of the order with",
    "start": "2533130",
    "end": "2538980"
  },
  {
    "text": "the ability to successfully send an email with the ability to successfully charge a customer when actually worked",
    "start": "2538980",
    "end": "2545310"
  },
  {
    "text": "in a large e-commerce company about ten years ago or so we would we would be",
    "start": "2545310",
    "end": "2550590"
  },
  {
    "text": "measured our team was measured on its ability to have someone start the checkout process and completed",
    "start": "2550590",
    "end": "2556590"
  },
  {
    "text": "successfully in fact our bonuses were tied to that like literally we get bonus based on",
    "start": "2556590",
    "end": "2562290"
  },
  {
    "text": "making sure that everyone had started the checkout process completed it and anyone that started the checkout process",
    "start": "2562290",
    "end": "2568680"
  },
  {
    "text": "and like pulled out for whatever reason my little bonus would go down just a little bit it was very sad",
    "start": "2568680",
    "end": "2574670"
  },
  {
    "text": "so most ecommerce systems that use that you use on a daily basis right whenever",
    "start": "2574670",
    "end": "2580410"
  },
  {
    "text": "you get to that checkout flow it's a completely different user experience than everything else Amazon for example",
    "start": "2580410",
    "end": "2585930"
  },
  {
    "text": "away go all those like buy Kindle buy echo buy all this other junk that we're",
    "start": "2585930",
    "end": "2591180"
  },
  {
    "text": "selling you and collecting all your information from and saying when you hit that checkout button it's like all right things getting real we're gonna take",
    "start": "2591180",
    "end": "2597270"
  },
  {
    "text": "your money so let's get you on this train here you even have like a little progress bar on the tarp that's just like choo-choo here comes the money",
    "start": "2597270",
    "end": "2602820"
  },
  {
    "text": "train we're gonna take your money so when it worked in e-commerce when we were being measured on our ability to",
    "start": "2602820",
    "end": "2609330"
  },
  {
    "text": "make sure customers completed the checkout flow that meant that we turned off all of our validations like",
    "start": "2609330",
    "end": "2617070"
  },
  {
    "text": "literally if a cat walked across the keyboard we would we would still take your order we turn off any kind of",
    "start": "2617070",
    "end": "2622320"
  },
  {
    "text": "address verification like oh that's not an actual valid shipping address don't care give us your information oops I",
    "start": "2622320",
    "end": "2629160"
  },
  {
    "text": "transpose numbers and that credit card I put in don't care just give us your information Zoo one had that they turned",
    "start": "2629160",
    "end": "2636630"
  },
  {
    "text": "on and there they're quite they're front-end ecommerce sites the the Loon check or lunch egg I don't have an ounce",
    "start": "2636630",
    "end": "2642060"
  },
  {
    "text": "it where it's like if you transpose your numbers it's like oh that's not actually about a valid credit card number there's",
    "start": "2642060",
    "end": "2647190"
  },
  {
    "text": "some gonna check some and that thing there's nothing that angers a customer more than you telling them they don't",
    "start": "2647190",
    "end": "2652770"
  },
  {
    "text": "know how to type in a credit card number like I didn't type for that right what I'm going to check these 16 numbers and",
    "start": "2652770",
    "end": "2658500"
  },
  {
    "text": "see which one is is that like put my credit card up to the screen no so we just turned all that validation off and said just give me information and at the",
    "start": "2658500",
    "end": "2666960"
  },
  {
    "text": "end of it if something goes wrong and back in processing what do we do we'll call the customer and that's how",
    "start": "2666960",
    "end": "2674430"
  },
  {
    "text": "we went from like 75% fallouts it's like 99.999% just turn off all the validation",
    "start": "2674430",
    "end": "2680810"
  },
  {
    "text": "now we have to go back and look at our process and say what does it mean from a business perspective to break each of",
    "start": "2680810",
    "end": "2687330"
  },
  {
    "text": "these individual steps out as a separate process does that even make sense from a business perspective that we don't do",
    "start": "2687330",
    "end": "2692370"
  },
  {
    "text": "this in the context of a button click but we do it sometimes later now again",
    "start": "2692370",
    "end": "2697560"
  },
  {
    "text": "this is something we have to go back to our business to to evaluate these options and say based on each of these calls is it okay if I don't do that",
    "start": "2697560",
    "end": "2704550"
  },
  {
    "text": "right away what if I do that just a little bit in the future does that make sense from a strike perspective can I",
    "start": "2704550",
    "end": "2712800"
  },
  {
    "text": "can I take their money now or can I just take the money later well that may or may not be OK for the business the",
    "start": "2712800",
    "end": "2719130"
  },
  {
    "text": "business may say oh sure yeah you can you can take their money later or they may say you know what can you actually try to take their money now and if it",
    "start": "2719130",
    "end": "2726660"
  },
  {
    "text": "doesn't work then maybe you will go we'll have some back-end processing so",
    "start": "2726660",
    "end": "2732870"
  },
  {
    "text": "we'll do something like trying to post the payment to the end user but if something fails then we'll do is just",
    "start": "2732870",
    "end": "2738450"
  },
  {
    "text": "mark that order as having a payment failed and then some back-end processing probably human would go through and find",
    "start": "2738450",
    "end": "2744300"
  },
  {
    "text": "all the orders that have payment failed and then go ahead and charge the customer or cancel the order",
    "start": "2744300",
    "end": "2749520"
  },
  {
    "text": "perhaps what about SendGrid",
    "start": "2749520",
    "end": "2755840"
  },
  {
    "text": "is it ok if we send their e send an email to this person sometime in the",
    "start": "2755840",
    "end": "2761640"
  },
  {
    "text": "future do we have to send the email within the context of the button click is that customer clicking the button and",
    "start": "2761640",
    "end": "2767250"
  },
  {
    "text": "have their email client over my ok if I don't get an email within like 0.5 seconds something's wrong probably not",
    "start": "2767250",
    "end": "2773310"
  },
  {
    "text": "email is an asynchronous messaging system anyway and we probably don't have an expectation that within the context",
    "start": "2773310",
    "end": "2779640"
  },
  {
    "text": "of like clicking the button then we get that email delivered to us right away so",
    "start": "2779640",
    "end": "2785970"
  },
  {
    "text": "maybe let's not couple our ability to take an order from a customer to our",
    "start": "2785970",
    "end": "2791700"
  },
  {
    "text": "ability to send an email now one interesting thing we looked at here was",
    "start": "2791700",
    "end": "2797490"
  },
  {
    "text": "is there some way for me to is there some way for me to like kind of automatically send this email in the",
    "start": "2797490",
    "end": "2803010"
  },
  {
    "text": "future when do I actually want to send this email is that when the transaction succeeds maybe but in reality I want to",
    "start": "2803010",
    "end": "2810570"
  },
  {
    "text": "a your order was successful email when I've actually successfully processed their payment only when I've actually",
    "start": "2810570",
    "end": "2817410"
  },
  {
    "text": "taken their money do I want to tell them thank you for reorder if I haven't taken your money I'm not thinking you yet I",
    "start": "2817410",
    "end": "2822840"
  },
  {
    "text": "gotta give me the money then I'll thank you and not before well it turns out",
    "start": "2822840",
    "end": "2828120"
  },
  {
    "text": "that stripe has the ability for us when things when payments are successful to do other actions in this case field",
    "start": "2828120",
    "end": "2835380"
  },
  {
    "text": "webhooks so we could use hashtag server lists to have a web hook so when stripe",
    "start": "2835380",
    "end": "2844190"
  },
  {
    "text": "successfully processes a payment they call some other API call that we make in our hashtag service world and then then",
    "start": "2844190",
    "end": "2851610"
  },
  {
    "text": "go ahead and call the stripe API to send that email successfully now in actuality",
    "start": "2851610",
    "end": "2859400"
  },
  {
    "text": "we still have to evaluate all the failure modes of that web hook call like",
    "start": "2859400",
    "end": "2865380"
  },
  {
    "text": "if my API is down that's receiving the web hook will stripe retry that",
    "start": "2865380",
    "end": "2871020"
  },
  {
    "text": "operation I scrolled down here to the bottom and I didn't see any documentation about what they do in the",
    "start": "2871020",
    "end": "2876990"
  },
  {
    "text": "case of failure so if I don't know I have no idea what their failure modes are this may not be a good option for us",
    "start": "2876990",
    "end": "2882330"
  },
  {
    "text": "if I want to I guarantee that email gets sent the final one is RabbitMQ this",
    "start": "2882330",
    "end": "2891870"
  },
  {
    "text": "one's gonna be little bit funny and and our ability to try this operation in the future so the idea is that if RabbitMQ",
    "start": "2891870",
    "end": "2900720"
  },
  {
    "text": "is down I send the message to it sometime in the future but what does",
    "start": "2900720",
    "end": "2906330"
  },
  {
    "text": "that look like for me to send the message in the future well it could mean that instead of me storing the messages",
    "start": "2906330",
    "end": "2913380"
  },
  {
    "text": "and trying to send the message over here to RabbitMQ maybe I take those messages and just store them in my business",
    "start": "2913380",
    "end": "2919860"
  },
  {
    "text": "database and says okay let me go ahead and put the messages to be sent over here and if this call fails then",
    "start": "2919860",
    "end": "2925980"
  },
  {
    "text": "something is going and putting and pulling out these unsent messages out of the database this is actually known as",
    "start": "2925980",
    "end": "2934020"
  },
  {
    "text": "the auth box pattern in the out box pattern instead of me immediately sending these messages to these",
    "start": "2934020",
    "end": "2939960"
  },
  {
    "text": "downstream providers I instead store the messages temporarily in my business database and some other process",
    "start": "2939960",
    "end": "2947160"
  },
  {
    "text": "is taking those unsent messages and sending them downstream something like",
    "start": "2947160",
    "end": "2955140"
  },
  {
    "text": "this don't use this code it says really bad code but you get the idea code is pulling those unsent messages taking",
    "start": "2955140",
    "end": "2962790"
  },
  {
    "text": "these messages out of the database and then forwarding them on to our bus here",
    "start": "2962790",
    "end": "2970490"
  },
  {
    "text": "now this introduces more moving parts right I have to have this code somewhere probably in a more resilient format than",
    "start": "2971150",
    "end": "2977430"
  },
  {
    "text": "this that is polling for unsent messages and fording them on but what this allows me to do is completely eliminate the the",
    "start": "2977430",
    "end": "2984870"
  },
  {
    "text": "rabbitmq part of the equation out of my process so if it goes down I don't care whatsoever we can just",
    "start": "2984870",
    "end": "2990990"
  },
  {
    "text": "store the messages temporarily in a business database and have something that's kind of cleaning out cutting up things behind the scenes we're still not",
    "start": "2990990",
    "end": "3002240"
  },
  {
    "start": "3001000",
    "end": "3001000"
  },
  {
    "text": "there yet though I took that first step back I'm gonna take yet another step",
    "start": "3002240",
    "end": "3007880"
  },
  {
    "text": "back and say okay these are the different failure modes in that single context the button click what other",
    "start": "3007880",
    "end": "3013520"
  },
  {
    "text": "possible options are there for us to decouple these six lines of code from",
    "start": "3013520",
    "end": "3018680"
  },
  {
    "text": "each other right now there's still six lines of code as a couple to each other I've just temporarily remove some of",
    "start": "3018680",
    "end": "3024710"
  },
  {
    "text": "them from the processing are there other ways I can handle this overall business",
    "start": "3024710",
    "end": "3029900"
  },
  {
    "text": "transaction so in these kinds of processes I start",
    "start": "3029900",
    "end": "3036980"
  },
  {
    "text": "to look at can I defer these actions to sometime in the future one or more of",
    "start": "3036980",
    "end": "3042050"
  },
  {
    "text": "them in the options I've had hat I've had now I've kind of taken each individual one by itself but what I",
    "start": "3042050",
    "end": "3048830"
  },
  {
    "text": "could do is take a look at do way instead of me having all of my kind of check out order processing process",
    "start": "3048830",
    "end": "3054890"
  },
  {
    "text": "directly in that button click handler can I take that workflow of processing",
    "start": "3054890",
    "end": "3060500"
  },
  {
    "text": "an order and just completely remove it from the front-end code altogether and have some kind of back in a synchronous",
    "start": "3060500",
    "end": "3065870"
  },
  {
    "text": "workflow to actually process your order which is what like 95% of e-commerce",
    "start": "3065870",
    "end": "3071210"
  },
  {
    "text": "systems do they don't do everything in the context of a button click they take the thing you were trying to do and say",
    "start": "3071210",
    "end": "3077330"
  },
  {
    "text": "right we're going to have some a back-end processor they will take your information and actually process your order so again I have to go back to the",
    "start": "3077330",
    "end": "3085850"
  },
  {
    "text": "business and say look we had the possibility of performing this checkout flow instead of within the context your",
    "start": "3085850",
    "end": "3091970"
  },
  {
    "text": "button click but to do them offline for each of these things that we're doing in the button click can we do these offline",
    "start": "3091970",
    "end": "3098930"
  },
  {
    "text": "instead and it make that evaluation again stripe is it okay for us to",
    "start": "3098930",
    "end": "3104840"
  },
  {
    "text": "process this offline they trade off being that I don't take the money right away but I maximize the number of people they",
    "start": "3104840",
    "end": "3112400"
  },
  {
    "text": "can make it through the checkout process minimizing my fall out rates and maximizing my bonus hopefully right is",
    "start": "3112400",
    "end": "3120290"
  },
  {
    "text": "it okay for us to process that I'll find maybe sometimes it's not okay to process your money offline sometimes there's a",
    "start": "3120290",
    "end": "3126740"
  },
  {
    "text": "finite resource that I have to make sure that I charge your money right then things like airline reservations things",
    "start": "3126740",
    "end": "3134090"
  },
  {
    "text": "like concert tickets these are things that there's a certain amount of these",
    "start": "3134090",
    "end": "3140000"
  },
  {
    "text": "things in existence and so I really want to make sure I take your money right then because if I don't that could potentially mean I oversell and",
    "start": "3140000",
    "end": "3146480"
  },
  {
    "text": "accidentally have too many people buying tickets but you guess Airlines still do as well but so this is something have to",
    "start": "3146480",
    "end": "3155780"
  },
  {
    "text": "look at the overall business transaction to say does that even make sense is it okay for us to do that but for sure the",
    "start": "3155780",
    "end": "3162500"
  },
  {
    "text": "other two things are okay to do offline like I don't really care if I email them right away nor do I really care if I",
    "start": "3162500",
    "end": "3168860"
  },
  {
    "text": "notify downstream systems right away RabbitMQ especially I'm already using",
    "start": "3168860",
    "end": "3173960"
  },
  {
    "text": "asynchronous messaging so I can just delay that asynchronous messaging just a little bit more now we have to be able",
    "start": "3173960",
    "end": "3183830"
  },
  {
    "start": "3182000",
    "end": "3182000"
  },
  {
    "text": "to kick off this workflow somehow when I click the button on the page something has to take that order and",
    "start": "3183830",
    "end": "3191000"
  },
  {
    "text": "then start to do its processing now in this case the depending on the platform are using there could be a lot of",
    "start": "3191000",
    "end": "3197000"
  },
  {
    "text": "different possibilities for me to handle this if I manager for example you can",
    "start": "3197000",
    "end": "3202010"
  },
  {
    "text": "use Azure service bus and service workers to take that message and do something if I - self hosted environments I may be able to use a tool",
    "start": "3202010",
    "end": "3208880"
  },
  {
    "text": "like hangfire which allows me to do scheduled jobs and do some processing if I'm using",
    "start": "3208880",
    "end": "3214400"
  },
  {
    "text": "something like Python Django I can use celery if I'm using node I'm probably",
    "start": "3214400",
    "end": "3220820"
  },
  {
    "text": "using like left pad or something I think to do stuff I don't know so in this case I'm using hang fire hang",
    "start": "3220820",
    "end": "3227900"
  },
  {
    "text": "fire allows me to have scheduled jobs inside of an asp net application and so",
    "start": "3227900",
    "end": "3233090"
  },
  {
    "text": "I tell it based on this chrome sorry this cron format down here that I look up once and forget immediately and have",
    "start": "3233090",
    "end": "3239810"
  },
  {
    "text": "it execute on some recurring jobs who say let me go ahead and take those messages that say process the order and",
    "start": "3239810",
    "end": "3245690"
  },
  {
    "text": "then some send them in the future so it looks something like this now my initial",
    "start": "3245690",
    "end": "3253250"
  },
  {
    "text": "call to start the order is no longer going to do any of these things behind",
    "start": "3253250",
    "end": "3259760"
  },
  {
    "text": "the scenes it is literally just taking your information storing in a database and then something behind the scenes is",
    "start": "3259760",
    "end": "3265490"
  },
  {
    "text": "taking those unprocessed orders and then doing some kind of workflow magic behind the scenes to then go to all my",
    "start": "3265490",
    "end": "3271310"
  },
  {
    "text": "different providers and do stuff so the",
    "start": "3271310",
    "end": "3276800"
  },
  {
    "text": "last thing I like want to look at is what should this workflow do how should",
    "start": "3276800",
    "end": "3281990"
  },
  {
    "text": "i design this workflow there are a lot",
    "start": "3281990",
    "end": "3289220"
  },
  {
    "text": "of different patterns for these workflow options behind the scenes about three of",
    "start": "3289220",
    "end": "3294890"
  },
  {
    "text": "them are documented the rest are just like make it up as you go so I want to go through this workflow options say what makes sense for this kind of",
    "start": "3294890",
    "end": "3300980"
  },
  {
    "text": "operation the first workflow pattern we can look at is one known as a routing",
    "start": "3300980",
    "end": "3306170"
  },
  {
    "start": "3303000",
    "end": "3303000"
  },
  {
    "text": "slip and a rounding slip we have a sequence of operations and the sequence",
    "start": "3306170",
    "end": "3312800"
  },
  {
    "text": "is determined upfront by whatever initiates the process and as each step executes successfully it forwards that",
    "start": "3312800",
    "end": "3320480"
  },
  {
    "text": "process to the next step that message just they do the next thing so it looks something like this I'd have",
    "start": "3320480",
    "end": "3327500"
  },
  {
    "text": "each of these and some kind of back-end processing with their own message queue this initial task pushes a message out",
    "start": "3327500",
    "end": "3333140"
  },
  {
    "text": "to the first step the first step succeeds forwards the message on to the next step this one succeeds in a 4-time",
    "start": "3333140",
    "end": "3339170"
  },
  {
    "text": "that next step and this one succeeds and then then we're done",
    "start": "3339170",
    "end": "3343900"
  },
  {
    "text": "so we and the initial calling we'd actually say the individual steps you want to send to now this makes sense if",
    "start": "3345090",
    "end": "3353070"
  },
  {
    "text": "I can have some reasonable set of guarantees that all these steps are going to succeed or fail if I have any kind of alternate processing like what",
    "start": "3353070",
    "end": "3359610"
  },
  {
    "text": "if this one fails do something else then this kind of this kind of pattern doesn't really work that great because",
    "start": "3359610",
    "end": "3365700"
  },
  {
    "text": "now putting failure alternate logic inside each of these steps another",
    "start": "3365700",
    "end": "3373110"
  },
  {
    "start": "3373000",
    "end": "3373000"
  },
  {
    "text": "option is the saga pattern a saga is a way for us to have a long-running",
    "start": "3373110",
    "end": "3378780"
  },
  {
    "text": "business transaction broken up into a series of smaller transactions and each of this smaller transaction either",
    "start": "3378780",
    "end": "3384960"
  },
  {
    "text": "succeeds or fails in the case of a failure I have a series of undo actions",
    "start": "3384960",
    "end": "3390150"
  },
  {
    "text": "that rolls back that overall business transaction into the original state so the the kind of canonical example we see",
    "start": "3390150",
    "end": "3397710"
  },
  {
    "text": "out there is going to be booking a booking a trip when you book a trip you're going to book a rental car well",
    "start": "3397710",
    "end": "3404010"
  },
  {
    "text": "maybe not anymore maybe I'm just Boober I don't know we'll have a hotel and we'll have a flight and I can't get",
    "start": "3404010",
    "end": "3410640"
  },
  {
    "text": "everyone on the phone together on a conference call and be like all right everybody on the phone we're gonna book a trip that probably won't go over too",
    "start": "3410640",
    "end": "3416850"
  },
  {
    "text": "well they probably hang up on you so instead I break those up into a series of smaller operations and say first we have booked the rental car when that",
    "start": "3416850",
    "end": "3423600"
  },
  {
    "text": "succeeds we're gonna book the hotel when that's to see if we're gonna book the flight but if this this transaction",
    "start": "3423600",
    "end": "3429330"
  },
  {
    "text": "fails there's something wrong with my fight then I'll go ahead and undo the previous operations this is only",
    "start": "3429330",
    "end": "3436560"
  },
  {
    "text": "possible though if I have the ability to undo previous steps and as we saw what",
    "start": "3436560",
    "end": "3442350"
  },
  {
    "text": "feels like three hours ago we don't have the ability to undo all of our operations so this one I can't just take",
    "start": "3442350",
    "end": "3448110"
  },
  {
    "text": "this pattern out of the box the final pattern is the process manager pattern",
    "start": "3448110",
    "end": "3453420"
  },
  {
    "start": "3452000",
    "end": "3452000"
  },
  {
    "text": "which basically says well in all of those out-of-the-box ones works for you so you just to make it up this is also",
    "start": "3453420",
    "end": "3458670"
  },
  {
    "text": "known as just like workflow or state machine this is you're going to design explicitly what the pattern should look like and so in this case I have some",
    "start": "3458670",
    "end": "3468570"
  },
  {
    "text": "kind of central process manager that is managing these different operations in the back end everyone here has probably",
    "start": "3468570",
    "end": "3475620"
  },
  {
    "text": "already built something like this you have that table with an is processed flag and something's pulling it and",
    "start": "3475620",
    "end": "3480830"
  },
  {
    "text": "doing stuff behind the scenes you've already done something like this the",
    "start": "3480830",
    "end": "3487220"
  },
  {
    "text": "final a little wrinkle in our system is to decide how we want to coordinate these other activities in this case",
    "start": "3487220",
    "end": "3493490"
  },
  {
    "text": "there are now two more main patterns we can look at orchestration and",
    "start": "3493490",
    "end": "3498740"
  },
  {
    "start": "3498000",
    "end": "3498000"
  },
  {
    "text": "choreography orchestrations means that I am directing the flow of every single",
    "start": "3498740",
    "end": "3504500"
  },
  {
    "text": "step and choreography means that I am pushing an event out and then waiting",
    "start": "3504500",
    "end": "3510770"
  },
  {
    "text": "for everything to come back and tell me if it succeeds or fails so in in this",
    "start": "3510770",
    "end": "3517220"
  },
  {
    "text": "case I have to decide for each one of these interactions do I want to orchestrate that operation that is",
    "start": "3517220",
    "end": "3522530"
  },
  {
    "text": "directed exactly what it should do or do I just want to throw out a message and say when everything's done come back and",
    "start": "3522530",
    "end": "3528380"
  },
  {
    "text": "let me know so I would go back to a process and say based on the process we",
    "start": "3528380",
    "end": "3535160"
  },
  {
    "text": "intend to have do we need to orchestrate that activity to make sure it happens and know when it succeeds or fails or",
    "start": "3535160",
    "end": "3540710"
  },
  {
    "text": "can we just choreograph it and just say let's let the message be free and then go on with our day based on a process",
    "start": "3540710",
    "end": "3548810"
  },
  {
    "text": "coupling I can look at stripe as a thing I want to directly orchestrate I want to",
    "start": "3548810",
    "end": "3554480"
  },
  {
    "text": "know when stripe succeeds or fails because only when stripe Sassy's or fails do we want to do these downstream",
    "start": "3554480",
    "end": "3560120"
  },
  {
    "text": "operations so let's put some control on this operation and then these other two are going to be just sending a message",
    "start": "3560120",
    "end": "3567110"
  },
  {
    "text": "out the door so our final process would look like this we have that initial call",
    "start": "3567110",
    "end": "3574100"
  },
  {
    "text": "to the API to create the order and stored in the database at this point though the customer sees - Thank You",
    "start": "3574100",
    "end": "3579950"
  },
  {
    "text": "page and they're going on with our day behind the scenes we're going to have a",
    "start": "3579950",
    "end": "3585190"
  },
  {
    "text": "our back-end task processor that's looking for unprocessed manages unprocess orders and kicking off this",
    "start": "3585190",
    "end": "3592520"
  },
  {
    "text": "back-end process manager the back-end process manager is going to read the order information out of the database",
    "start": "3592520",
    "end": "3598630"
  },
  {
    "text": "make that call to stripe and based on their call returned from stripe say did you succeed or fail if that stripe call",
    "start": "3598630",
    "end": "3606050"
  },
  {
    "text": "failed then may we mark the order as having needing process to be payment manually but we and stop the process and say you know",
    "start": "3606050",
    "end": "3612590"
  },
  {
    "text": "what if stripe fails don't do any other is these downstream operations if it",
    "start": "3612590",
    "end": "3618170"
  },
  {
    "text": "does succeed then we go ahead and just call these other things now the final",
    "start": "3618170",
    "end": "3623630"
  },
  {
    "text": "piece I have is I was using RabbitMQ as a means to notify downstream systems but",
    "start": "3623630",
    "end": "3630590"
  },
  {
    "text": "it turns out syn grid is another kind of downstream system I can notify so what I",
    "start": "3630590",
    "end": "3635600"
  },
  {
    "text": "do is actually piggyback on top of it that initial publishing of that message",
    "start": "3635600",
    "end": "3641180"
  },
  {
    "text": "and have send grid just do the exact same thing now you might ask what do we",
    "start": "3641180",
    "end": "3648590"
  },
  {
    "text": "actually go with in our real-world scenario in a real-world scenario we ran",
    "start": "3648590",
    "end": "3653720"
  },
  {
    "text": "out of time and budget about 60 slides ago in actual big of e-commerce",
    "start": "3653720",
    "end": "3660560"
  },
  {
    "text": "companies this is the exact thing that we do behind the scenes we have just taking your order information upfront",
    "start": "3660560",
    "end": "3665900"
  },
  {
    "text": "but having a back-end process actually do the work in our example we went with the the refund option trycatch refund",
    "start": "3665900",
    "end": "3673040"
  },
  {
    "text": "because that's all we had time to do so the more of the story from all this is",
    "start": "3673040",
    "end": "3679220"
  },
  {
    "text": "yes it's super easy to build distributed systems now and that it's possible but that doesn't mean that failures can't",
    "start": "3679220",
    "end": "3685580"
  },
  {
    "text": "happen so when you're building systems that have to talk to each other think through the possible failure modes and",
    "start": "3685580",
    "end": "3690920"
  },
  {
    "text": "design the overall interaction based on what the business needs and also based",
    "start": "3690920",
    "end": "3697070"
  },
  {
    "text": "on what's actually possible with those other resources so thank you very much this has been six lines of fail that got",
    "start": "3697070",
    "end": "3703550"
  },
  {
    "text": "multiplied into probably 50 lines of code but that's okay our business is happy we get to keep her job thank you",
    "start": "3703550",
    "end": "3709850"
  },
  {
    "text": "very much you",
    "start": "3709850",
    "end": "3715760"
  }
]