[
  {
    "text": "hello everyone thanks thanks for coming my name is mark seaman and if you want to know more about me",
    "start": "4880",
    "end": "10080"
  },
  {
    "text": "there's information there on blog.dk so so this talk is about",
    "start": "10080",
    "end": "15599"
  },
  {
    "text": "software development productivity so that's a problem that we often need to",
    "start": "15599",
    "end": "20800"
  },
  {
    "text": "solve at least you know most of us don't really feel that we are as productive as software developers as",
    "start": "20800",
    "end": "27359"
  },
  {
    "text": "we'd like to be and in general our managers and other stakeholders tend to believe that we're",
    "start": "27359",
    "end": "32880"
  },
  {
    "text": "not nearly as productive as we ought to be um so that's um that's the um problem",
    "start": "32880",
    "end": "38160"
  },
  {
    "text": "that i'm going to try to address today and i'm not going to say i'm not going to claim",
    "start": "38160",
    "end": "43360"
  },
  {
    "text": "that that's the only problem that we have in software development i'm also not going to claim that the",
    "start": "43360",
    "end": "48879"
  },
  {
    "text": "solution that i'm going to propose is the only way to address that problem far from it but we just have to start at one place",
    "start": "48879",
    "end": "55600"
  },
  {
    "text": "and sort of work from there so why aren't we as productive as we'd",
    "start": "55600",
    "end": "61199"
  },
  {
    "text": "like to be and there's probably lots of different reasons for that but one of them is that we spend a lot",
    "start": "61199",
    "end": "66640"
  },
  {
    "text": "of time reading existing code you could say we waste a lot of time reading existing code so robertson",
    "start": "66640",
    "end": "73119"
  },
  {
    "text": "martin for example writes in one of his books the ratio of time spent reading versus writing is",
    "start": "73119",
    "end": "78880"
  },
  {
    "text": "well over ten to one and i don't know where i get where i get those numbers from i think he may just",
    "start": "78880",
    "end": "85119"
  },
  {
    "text": "pull them out of a hat but i think you know still um the ratios you know sounds",
    "start": "85119",
    "end": "91439"
  },
  {
    "text": "you know fair let's just go with that for an example anyway it's a way to talk about things",
    "start": "91439",
    "end": "97360"
  },
  {
    "text": "um so um what happens to your productivity if this is true and where should you",
    "start": "97360",
    "end": "102880"
  },
  {
    "text": "prioritize your effort now one way we can try to illustrate that is with a little graph like this",
    "start": "102880",
    "end": "108560"
  },
  {
    "text": "one so i have you know 10 orange boxes representing the time that you are spending",
    "start": "108560",
    "end": "115439"
  },
  {
    "text": "reading code and then one green box representing the time you're spending writing new code",
    "start": "115439",
    "end": "121280"
  },
  {
    "text": "and that's a ten to one ratio so often when you have",
    "start": "121280",
    "end": "126479"
  },
  {
    "text": "software vendors or language designers or library authors talk about productivity they will often",
    "start": "126479",
    "end": "133120"
  },
  {
    "text": "tell you that you need to um they will often tell you that you have they have solutions for you that will enable you",
    "start": "133120",
    "end": "138879"
  },
  {
    "text": "to write code faster or you know write code in a more efficient manner",
    "start": "138879",
    "end": "143920"
  },
  {
    "text": "so um if you just you know hypothetically imagine that you could in you know decrease the time you have to",
    "start": "143920",
    "end": "150080"
  },
  {
    "text": "spend writing code with 50 you know with with 50 or you know you can actually well that's",
    "start": "150080",
    "end": "155200"
  },
  {
    "text": "a doubling of um of um of productivity um but if you could do that that's sort of like a",
    "start": "155200",
    "end": "161040"
  },
  {
    "text": "hypothetical experiment that you know thought experiment that's not actually going to happen um but that would mean you know that's a 50 reduction in in the",
    "start": "161040",
    "end": "167920"
  },
  {
    "text": "time you spend writing code and as we can tell from this graph that's probably not really you know",
    "start": "167920",
    "end": "174640"
  },
  {
    "text": "that's that that sounds like a lot but it's really more like 4.5 percent and you know 50 that's probably not",
    "start": "174640",
    "end": "181680"
  },
  {
    "text": "going to happen that's not really realistic you know you can get you know improvements in efficiency in in terms",
    "start": "181680",
    "end": "189360"
  },
  {
    "text": "of writing software and so on but probably not by 50",
    "start": "189360",
    "end": "194400"
  },
  {
    "text": "now don't get me wrong i am i'll take all the improvements that i can get so uh you know if i have a vendor that",
    "start": "194400",
    "end": "200560"
  },
  {
    "text": "comes out with a new ide that i think is better than the one that i'm using at the moment i'll take that uh if there's",
    "start": "200560",
    "end": "206319"
  },
  {
    "text": "a new language that comes comes around that or you know language features that come around that makes me more productive fine i'll take all of that",
    "start": "206319",
    "end": "213920"
  },
  {
    "text": "it's just that i don't think we should um imagine or you know we shouldn't be under the illusion that",
    "start": "213920",
    "end": "220239"
  },
  {
    "text": "those things are really what's gonna matter in terms of our productivity if we want to be more productive",
    "start": "220239",
    "end": "226720"
  },
  {
    "text": "there is a you know the elephant in the room is we have to do something about readability if we can you know decrease",
    "start": "226720",
    "end": "232239"
  },
  {
    "text": "the time we spend reading existing code we can actually become much more productive and so that's uh that's what",
    "start": "232239",
    "end": "238400"
  },
  {
    "text": "this talk is about now um how do you write readable code and how",
    "start": "238400",
    "end": "243760"
  },
  {
    "text": "do you determine whether code is readable or not um that's not that's not an easy question",
    "start": "243760",
    "end": "250319"
  },
  {
    "text": "to answer but but let's try to look at an example so um here's some some",
    "start": "250319",
    "end": "255439"
  },
  {
    "text": "example code and i would claim that this is readable and then someone else would come by and say well that's it it's completely",
    "start": "255439",
    "end": "261919"
  },
  {
    "text": "unreadable because it's the sharp code and or maybe i put the curly brackets in",
    "start": "261919",
    "end": "268800"
  },
  {
    "text": "the wrong place and that's unreadable for that for those reasons or whatever um",
    "start": "268800",
    "end": "274320"
  },
  {
    "text": "but you know that's not really gonna you know help us to move forward if we have those um discussions that are",
    "start": "274320",
    "end": "281360"
  },
  {
    "text": "basically you know based on opinion so we you know one person could say i really like this this is readable code",
    "start": "281360",
    "end": "287280"
  },
  {
    "text": "because i wrote it and then someone else would come by and say i don't like this at all you know for various reasons and then the first",
    "start": "287280",
    "end": "293360"
  },
  {
    "text": "one will say but it is readable and the next one will say no it's not um so this kind of kindergarten you know level of",
    "start": "293360",
    "end": "299919"
  },
  {
    "text": "you know discussion is not really what's going to take us further so we need to have a you know we need to instrumentalize the way that we can talk",
    "start": "299919",
    "end": "306639"
  },
  {
    "text": "about these things um so so we we need to have a vocabulary that we can use in order to you know figure out is this",
    "start": "306639",
    "end": "313680"
  },
  {
    "text": "readable or not so um um what i'm going to try to do is to",
    "start": "313680",
    "end": "319039"
  },
  {
    "text": "talk you through you know what happens in the brain when we you know are exposed to code like this",
    "start": "319039",
    "end": "325120"
  },
  {
    "text": "so all code that i'm going to show you here is from my book code that fits in your brain code the vision head sorry",
    "start": "325120",
    "end": "330800"
  },
  {
    "text": "which is right here and um it's the same code base that goes",
    "start": "330800",
    "end": "337120"
  },
  {
    "text": "as an example all the way through the book and that's also the code that you're going to see here it's an online restaurant a reservation",
    "start": "337120",
    "end": "343360"
  },
  {
    "text": "system which is a rest api never mind that's not really that important but just if you wanted",
    "start": "343360",
    "end": "349280"
  },
  {
    "text": "all right so what happens if we are you know confronted with code that we haven't seen before so um what uh most research seems to",
    "start": "349280",
    "end": "356160"
  },
  {
    "text": "indicate is that you the brain starts to engage in a process called tracing or you know basically cognitive compilation",
    "start": "356160",
    "end": "363120"
  },
  {
    "text": "it's as though you know we in the brain are trying to run a little interpreter or an emulator trying to understand you",
    "start": "363120",
    "end": "369520"
  },
  {
    "text": "know what happens in this code what happens if if you know um this value is that and and so on",
    "start": "369520",
    "end": "376479"
  },
  {
    "text": "so the brain tries to you know to make sense of these things um so um",
    "start": "376479",
    "end": "383440"
  },
  {
    "text": "i'm going to spend some time talking about this code and the point is i'm i'm trying to talk about you know what happens in the brain and you know",
    "start": "383440",
    "end": "391199"
  },
  {
    "text": "how we read code so it's it sounds like i'm walking you through the algorithm which is actually not the point i'm",
    "start": "391199",
    "end": "397199"
  },
  {
    "text": "walking you through how do we actually read and understand code so one of the things we might notice is",
    "start": "397199",
    "end": "402880"
  },
  {
    "text": "first of all okay so this is a method it has a name it's called allocate it returns an innumerable of table uh",
    "start": "402880",
    "end": "409039"
  },
  {
    "text": "takes an iron mobile reservation as input so if there are any people in this audience who are not",
    "start": "409039",
    "end": "414479"
  },
  {
    "text": "you know dot net developers ionum mobile is basically just a collection um and reservation and table are you",
    "start": "414479",
    "end": "421919"
  },
  {
    "text": "know objects domain objects that we haven't seen yet um i'm actually not going to show you those",
    "start": "421919",
    "end": "427120"
  },
  {
    "text": "um but then you know when we start tracing through the code you know this cognitive compilation will notice that",
    "start": "427120",
    "end": "433840"
  },
  {
    "text": "one of the things that happens here is that there's this object called allocation which is a list of table",
    "start": "433840",
    "end": "440000"
  },
  {
    "text": "and a list object in net is something that can change state we can you know erase",
    "start": "440000",
    "end": "445360"
  },
  {
    "text": "all the elements inside of the list or we can add new things to it or we can remove or reorder things and do all",
    "start": "445360",
    "end": "452080"
  },
  {
    "text": "sorts of things so if we're trying to understand what's happening in this code we we might",
    "start": "452080",
    "end": "457120"
  },
  {
    "text": "notice that hey this is something that i need to keep track of you know that's this made this has state",
    "start": "457120",
    "end": "462720"
  },
  {
    "text": "and this state may change and since i haven't scanned through the rest of the code yet i haven't actually",
    "start": "462720",
    "end": "468080"
  },
  {
    "text": "figured out whether the state of this object may impact whether i go in one way or the other so you know keeping",
    "start": "468080",
    "end": "474720"
  },
  {
    "text": "track of state is really important because otherwise i can't you know cognitively compile the code",
    "start": "474720",
    "end": "481199"
  },
  {
    "text": "so that's one thing to keep keep track of now there's a for each loop and if",
    "start": "481199",
    "end": "486400"
  },
  {
    "text": "reservation is is empty we just fall all the way through and we don't and you know execute any of the indented code",
    "start": "486400",
    "end": "492400"
  },
  {
    "text": "on the other hand if we have at least one object in reservations we will now try to find a table in the allocation",
    "start": "492400",
    "end": "499440"
  },
  {
    "text": "that fits a particular reservation quantity and you know the find method will return",
    "start": "499440",
    "end": "505360"
  },
  {
    "text": "null if it can't find anything so we have to check for that as well so this little thing where it says if",
    "start": "505360",
    "end": "511440"
  },
  {
    "text": "table is curly brackets that's sort of like a c sharp little pawn basically that means if if table is",
    "start": "511440",
    "end": "518000"
  },
  {
    "text": "something basically meaning if table is not null so we're checking for null there and if",
    "start": "518000",
    "end": "523360"
  },
  {
    "text": "it's null if it's not something again we fall through and we don't execute the indented code but otherwise",
    "start": "523360",
    "end": "529680"
  },
  {
    "text": "we do indeed you know execute the indented code so we remove a table we remove the table that we found from the",
    "start": "529680",
    "end": "535519"
  },
  {
    "text": "allocation and add it back in but then now with the reservation associated with it",
    "start": "535519",
    "end": "540800"
  },
  {
    "text": "so there's a little bit of local state mutation going on here but it's sort of like it's okay we're keeping track of",
    "start": "540800",
    "end": "546160"
  },
  {
    "text": "one thing in our brain and and that seems to be fairly okay",
    "start": "546160",
    "end": "551360"
  },
  {
    "text": "so to summarize the three pathways through the code and some of you will probably also already recognize that",
    "start": "551360",
    "end": "556560"
  },
  {
    "text": "that's this is called this kind of analysis is called cyclomatic complexity so cyclomatic complexity basically gives",
    "start": "556560",
    "end": "562560"
  },
  {
    "text": "you this idea you know how many different pathways are there through the code and you can think of that as um",
    "start": "562560",
    "end": "568640"
  },
  {
    "text": "as sort of like three different execution paths that all coexist at the same time so it's almost",
    "start": "568640",
    "end": "574959"
  },
  {
    "text": "like three dimensions sort of superimposed on top of each other so if we have cyclomatic complexity too large",
    "start": "574959",
    "end": "581279"
  },
  {
    "text": "um we're probably gonna going to get overloaded mentally if we're trying to understand what's going on and likewise",
    "start": "581279",
    "end": "588160"
  },
  {
    "text": "if we have to keep track of too much stuff you know too many variables like allocation then we're probably going to",
    "start": "588160",
    "end": "594240"
  },
  {
    "text": "get overloaded our brains will probably not be able to you know perform that cognitive compilation of the code",
    "start": "594240",
    "end": "599360"
  },
  {
    "text": "because we're not able to trace through the code um so the problem is the question is uh",
    "start": "599360",
    "end": "606560"
  },
  {
    "text": "now we have at least two ways of quantifying you know the complexity of code i have cyclomatic complexity and i",
    "start": "606560",
    "end": "611920"
  },
  {
    "text": "also have this thing where we can ask ourselves you know how many objects do we need to keep track of in order to",
    "start": "611920",
    "end": "617279"
  },
  {
    "text": "understand what's happening and it seems like this code is you know we have cyclomatic complexity of three",
    "start": "617279",
    "end": "623600"
  },
  {
    "text": "and we have basically one mutable object that we're keeping track of so that sounds like it's probably okay and i",
    "start": "623600",
    "end": "629200"
  },
  {
    "text": "would claim that this is okay because the threshold is a little bit higher you know what fits in our short-term memory",
    "start": "629200",
    "end": "636560"
  },
  {
    "text": "and there's a lot of research that seems to indicate that maybe we can keep track of about seven things in our short-term",
    "start": "636560",
    "end": "643279"
  },
  {
    "text": "memory this is based on a paper by george miller called the magical number seven",
    "start": "643279",
    "end": "648640"
  },
  {
    "text": "plus minus two which dates back from 1956 based on lots of experiments with with people you know where they were",
    "start": "648640",
    "end": "655519"
  },
  {
    "text": "asked to keep track of various different things in their short-term memory so the limit you know sits around seven",
    "start": "655519",
    "end": "662399"
  },
  {
    "text": "uh we can keep track of about seven things in our short-term memory",
    "start": "662399",
    "end": "667440"
  },
  {
    "text": "now miller didn't he miller wanted to and ask people to",
    "start": "668560",
    "end": "674560"
  },
  {
    "text": "you know keep track of various different things you ask ask them to remember random numbers for example and but you could also ask people to remember other",
    "start": "674560",
    "end": "681680"
  },
  {
    "text": "things for example colors and so on so it doesn't have to be numbers uh we could you know actually think about",
    "start": "681680",
    "end": "687760"
  },
  {
    "text": "these things as just you know what we call chunks of information so it doesn't have to be you know very primitive",
    "start": "687760",
    "end": "693440"
  },
  {
    "text": "numbers like digits for example but it could actually be words or colors or you know",
    "start": "693440",
    "end": "698880"
  },
  {
    "text": "things in the physical world so while i keep talking i'm just going to switch over here and start a little animation",
    "start": "698880",
    "end": "707519"
  },
  {
    "text": "so we can keep track about you know seven things in our short-term memory",
    "start": "707519",
    "end": "713519"
  },
  {
    "text": "when you start a completely new code base when you write the first you know hello world you know line of code that",
    "start": "713519",
    "end": "718800"
  },
  {
    "text": "may be one thing and that you know sort of fits in your short term memory but as you add more",
    "start": "718800",
    "end": "724079"
  },
  {
    "text": "and more decisions more and more you know features to your code base you very quickly come to a point where",
    "start": "724079",
    "end": "731519"
  },
  {
    "text": "there's more than seven things going on you know a realistic code base probably has you know seven thousand things going",
    "start": "731519",
    "end": "737360"
  },
  {
    "text": "on and maybe seven million things going on there's way more than that you can fit in your short-term memory",
    "start": "737360",
    "end": "743760"
  },
  {
    "text": "so the question is you know how do we deal with that you know how do we deal with the fact that there's going to be",
    "start": "743760",
    "end": "749120"
  },
  {
    "text": "much more going on in a code base than fits in our short-term memory",
    "start": "749120",
    "end": "755279"
  },
  {
    "text": "so basically as far as i can tell we have two options either we can rely on long-term memory",
    "start": "755279",
    "end": "762320"
  },
  {
    "text": "or you know the other option i'll get back to in a moment so i think relying on long-term memory",
    "start": "762320",
    "end": "767760"
  },
  {
    "text": "that's long-term memory is a completely different kind of beast long-term memory no one",
    "start": "767760",
    "end": "773279"
  },
  {
    "text": "really knows exactly what the capacity of it is it's not that precise you can actually you know warp and and forget",
    "start": "773279",
    "end": "779360"
  },
  {
    "text": "things or remember things wrong and and things like that but it seems like it has a really big capacity",
    "start": "779360",
    "end": "785440"
  },
  {
    "text": "and i remember i was once you know engaged with a client who wanted me to help them with their",
    "start": "785440",
    "end": "790560"
  },
  {
    "text": "legacy code base and i got to interview some of the people on the team and",
    "start": "790560",
    "end": "795920"
  },
  {
    "text": "and one of the one of the people one of the team members that i got a chance to talk to was the newest member",
    "start": "795920",
    "end": "801760"
  },
  {
    "text": "of the of the team he had been there for two two two years",
    "start": "801760",
    "end": "807040"
  },
  {
    "text": "so i asked him so when you started i was still recent in his memory when you",
    "start": "807040",
    "end": "812839"
  },
  {
    "text": "started um how long did it take you before you could you know you felt that you could",
    "start": "812839",
    "end": "818320"
  },
  {
    "text": "do something in this code base on your own without help from your you know your peers and he said well that took me",
    "start": "818320",
    "end": "824720"
  },
  {
    "text": "three three months he you know he didn't even hesitate he said three months um so i think he spent those three",
    "start": "824720",
    "end": "830959"
  },
  {
    "text": "months you know painstakingly trying to commit the structure of that code base",
    "start": "830959",
    "end": "836000"
  },
  {
    "text": "to his long-term memory which is you know quite uh you know maybe not infinite but you know arbitrarily large",
    "start": "836000",
    "end": "842720"
  },
  {
    "text": "um so that sort of works it's just that it's a lot it takes a lot of time and this is one of the reasons why we spend",
    "start": "842720",
    "end": "848720"
  },
  {
    "text": "a lot of time reading existing code because there's just a lot of stuff to commit to your long-term memory and in",
    "start": "848720",
    "end": "854480"
  },
  {
    "text": "order to if you know effect efficiently you know commit something to your long-term memory you have to you know",
    "start": "854480",
    "end": "860560"
  },
  {
    "text": "study it and keep on repeating the exercise in order to understand how things work",
    "start": "860560",
    "end": "866000"
  },
  {
    "text": "um and another problem we have with long-term memory is that once we've committed something to long-term memory",
    "start": "866000",
    "end": "871920"
  },
  {
    "text": "it's always tends to stay there so once you've understood how you know the structure of a large-scale code base",
    "start": "871920",
    "end": "878240"
  },
  {
    "text": "once you've committed that to long-term memory then if one of your colleagues come by and changes things the code no",
    "start": "878240",
    "end": "885360"
  },
  {
    "text": "longer fits the mental image you have of it and now it becomes even more difficult to reconcile",
    "start": "885360",
    "end": "891760"
  },
  {
    "text": "what you have in your long-term memory with the current state of the code so again you have to sort of re-read things",
    "start": "891760",
    "end": "897519"
  },
  {
    "text": "over and over again so while it's possible to work with the code base that where you know thousands or millions of",
    "start": "897519",
    "end": "903839"
  },
  {
    "text": "things are going on you sort of have to rely on your long-term memory and that slows you down so that's one of the",
    "start": "903839",
    "end": "908880"
  },
  {
    "text": "options to deal with this sort of problem now the other option to deal with this problem is to say well what if",
    "start": "908880",
    "end": "915360"
  },
  {
    "text": "we wanted what if we decided that instead of relying on long-term memory we could rely on our short-term memory",
    "start": "915360",
    "end": "924160"
  },
  {
    "text": "that would that would make a you know a lot of things much easier because our short-term memory is sort of ephemeral",
    "start": "924639",
    "end": "930320"
  },
  {
    "text": "uh you know you load something into your short-term memory and you keep it around you know long enough that you",
    "start": "930320",
    "end": "935839"
  },
  {
    "text": "can do whatever it is that you need to do with that information and then as soon as you you know go and do something",
    "start": "935839",
    "end": "941040"
  },
  {
    "text": "else you forget about that stuff as well so what if we could structure the code in such a way that we could you know",
    "start": "941040",
    "end": "946639"
  },
  {
    "text": "load it in you know when we look at it it all fits in short-term memory and",
    "start": "946639",
    "end": "952160"
  },
  {
    "text": "then we can work with it we can do what it is that we'd like to do without you know using our short-term memory and then once we've you know",
    "start": "952160",
    "end": "958800"
  },
  {
    "text": "committed the change to git and pushed it away we can go and do something else and we forget about it and that means",
    "start": "958800",
    "end": "964639"
  },
  {
    "text": "you know the next time we come by and look at that code it takes a couple of minutes to sort of reload it into your",
    "start": "964639",
    "end": "969680"
  },
  {
    "text": "to your brain again to your short-term memory um but but you don't have to engage your long-term memory and that",
    "start": "969680",
    "end": "974720"
  },
  {
    "text": "also means that if someone else you know what if one of your colleagues came by at the same time and changed that code you're not being",
    "start": "974720",
    "end": "981600"
  },
  {
    "text": "confused because you've you've already forgotten about it so when you see it again you know if the colleague also",
    "start": "981600",
    "end": "987360"
  },
  {
    "text": "tried to respect the cognitive constraints of our short-term memory then you should you",
    "start": "987360",
    "end": "994000"
  },
  {
    "text": "should be able to read the code and you know deal with it using your short term memory",
    "start": "994000",
    "end": "999519"
  },
  {
    "text": "now while i've been talking about this you've noticed that this grid is starting to take shape here i",
    "start": "999519",
    "end": "1005120"
  },
  {
    "text": "added a lot of those chunks and i just keep you know this simulation just keeps on adding things",
    "start": "1005120",
    "end": "1010880"
  },
  {
    "text": "and you can see that it starts to resemble you know honeycomb so what happens if we say well we need to you",
    "start": "1010880",
    "end": "1016959"
  },
  {
    "text": "know isolate at most seven things and um and just deal with that so i'm going to",
    "start": "1016959",
    "end": "1023279"
  },
  {
    "text": "switch back here and if we isolate at most seven things we get a figure that that looks like this",
    "start": "1023279",
    "end": "1030558"
  },
  {
    "text": "so um so i call this a hex flower because it looks a little bit like a flower but just made up out of hexagons and you can think of",
    "start": "1030559",
    "end": "1037600"
  },
  {
    "text": "that as each of those cells representing basically a register in your short-term memory so your short-term memory is a",
    "start": "1037600",
    "end": "1043918"
  },
  {
    "text": "byte a 7-bit byte that is that was a thing once",
    "start": "1043919",
    "end": "1049120"
  },
  {
    "text": "so that's what you have to do with so if we want to you know instrumentalize or make it a",
    "start": "1049200",
    "end": "1055520"
  },
  {
    "text": "little bit more objective in the way we talk about whether or not code is readable",
    "start": "1055520",
    "end": "1060640"
  },
  {
    "text": "we should you know think about you know how can we respect that cognitive constraint and we can use this you know",
    "start": "1060640",
    "end": "1066400"
  },
  {
    "text": "little figure here as a symbol of that so just to be clear i'm not saying that you know",
    "start": "1066400",
    "end": "1072400"
  },
  {
    "text": "the the magical number seven plus minus two is not you know seven is not that magical most of what i'm going to say here is",
    "start": "1072400",
    "end": "1078799"
  },
  {
    "text": "doesn't really rely on the number being exactly seven you know it could be five or nine or whatever",
    "start": "1078799",
    "end": "1084559"
  },
  {
    "text": "but um but seven gives us this nice figure as well so i'm just going to go with that all right so um when we look at code",
    "start": "1084559",
    "end": "1092160"
  },
  {
    "text": "we are going to look at code at various different levels of abstraction and you know the cognitive constraints",
    "start": "1092160",
    "end": "1098000"
  },
  {
    "text": "that we can only deal with seven things in our short-term memory you know that always applies you know our brain",
    "start": "1098000",
    "end": "1103520"
  },
  {
    "text": "doesn't care about the level of abstraction of the code that we're looking at so if we want to respect you",
    "start": "1103520",
    "end": "1109120"
  },
  {
    "text": "know the limitations of our short-term memory we should always structure code so that that there's the most seven",
    "start": "1109120",
    "end": "1114320"
  },
  {
    "text": "things going on because otherwise we can't trace the code but there's gonna be you know deeper",
    "start": "1114320",
    "end": "1120320"
  },
  {
    "text": "levels of abstraction so if you're looking at things at a high level of abstraction we also understand that each of those cells let's say",
    "start": "1120320",
    "end": "1126400"
  },
  {
    "text": "the the upper right one that's going to contain you know more complexity so if",
    "start": "1126400",
    "end": "1131600"
  },
  {
    "text": "we want to zoom in on that you know again at that level it needs to respect the constraint that we can keep track of",
    "start": "1131600",
    "end": "1137679"
  },
  {
    "text": "of most seven things uh so again we should be able to do that at you know all sorts of levels of abstraction so",
    "start": "1137679",
    "end": "1143760"
  },
  {
    "text": "again if we zoom in again we might actually encounter some real code",
    "start": "1143760",
    "end": "1149440"
  },
  {
    "text": "so i chose to start with this create method because this is sort of like the the lowest level of detail uh this",
    "start": "1149600",
    "end": "1156480"
  },
  {
    "text": "there's not a lot of abstraction hidden behind this so this is a this is a method that sits on a class",
    "start": "1156480",
    "end": "1163360"
  },
  {
    "text": "that has the responsibility of you know saving and retrieving data from a database from a sql server database",
    "start": "1163360",
    "end": "1170880"
  },
  {
    "text": "um so you could ask yourself again the question is this code readable you know does it fit in your short-term memory",
    "start": "1170880",
    "end": "1178320"
  },
  {
    "text": "and now that we have a few ways of instrumentalizing or quantifying these things we can you know start to ask",
    "start": "1178320",
    "end": "1184559"
  },
  {
    "text": "those questions you know what for example what's the cyclomatic complexity of of this code and the cyclomatic",
    "start": "1184559",
    "end": "1189600"
  },
  {
    "text": "complexity is two there's two pathways through this code either reservation is null and that results in one outcome and all",
    "start": "1189600",
    "end": "1196559"
  },
  {
    "text": "reservation is not null and that results in another outcome and i know that there might be exceptions thrown so i'm just",
    "start": "1196559",
    "end": "1202720"
  },
  {
    "text": "going to ignore that for now for various reasons uh so we can say the cyclomatic complexity is two so that's sort of like",
    "start": "1202720",
    "end": "1209520"
  },
  {
    "text": "two uh you know parallel dimensions that exists superimposed on top of each other we can probably keep",
    "start": "1209520",
    "end": "1215600"
  },
  {
    "text": "track of that if we can keep track of seven things um this method represents two different things",
    "start": "1215600",
    "end": "1221200"
  },
  {
    "text": "um so that's that's one thing that we could try to do uh so in that you know if we if we if we choose to use that",
    "start": "1221200",
    "end": "1227120"
  },
  {
    "text": "measurement we could say this is readable because there's less than seven things going on but there might be other things going on",
    "start": "1227120",
    "end": "1233440"
  },
  {
    "text": "so what we can also do is you know i talked about this thing where we do tracing and we try to keep track of you",
    "start": "1233440",
    "end": "1239039"
  },
  {
    "text": "know object state so what we can do is as a very crude you know kind of measurement we can count",
    "start": "1239039",
    "end": "1245120"
  },
  {
    "text": "all the variables so we can say uh well so there's the restaurant id that's a perimeter um that's that's a very very",
    "start": "1245120",
    "end": "1252000"
  },
  {
    "text": "blah that's so that's the thing we need to keep track of there's a reservation there's another",
    "start": "1252000",
    "end": "1257200"
  },
  {
    "text": "parameter we need to keep track of that there's something called the connection string that we use to create a sql",
    "start": "1257200",
    "end": "1264240"
  },
  {
    "text": "connection so that's a string uh it's uh it's actually a read-only property and",
    "start": "1264240",
    "end": "1269280"
  },
  {
    "text": "for those of you who are not you know c-sharp developers a property here is just a glorified class field so just",
    "start": "1269280",
    "end": "1274720"
  },
  {
    "text": "think of it like that but it's it's read only so it can't change and you know strings in general don't change",
    "start": "1274720",
    "end": "1281440"
  },
  {
    "text": "so this just contains information about you know how to connect to the database and we use that to create a connection object and i'll just keep keep on",
    "start": "1281440",
    "end": "1287919"
  },
  {
    "text": "counting here create reservation sql is another string that contains the actual you know t sql code that will be",
    "start": "1287919",
    "end": "1293919"
  },
  {
    "text": "executed against the database and we use that and the connection to create a command object so and and then you know",
    "start": "1293919",
    "end": "1300320"
  },
  {
    "text": "from there on there no more you know variables so that's all the variables that are in scope here",
    "start": "1300320",
    "end": "1306080"
  },
  {
    "text": "um so um so after that you know if we trace things you know how many things are",
    "start": "1306080",
    "end": "1311919"
  },
  {
    "text": "actually changing state so the command object changes state six times because we add you know parameters we bind each",
    "start": "1311919",
    "end": "1318480"
  },
  {
    "text": "of the parameters to that values um but it's it's quite easy to follow and then you know towards the end where",
    "start": "1318480",
    "end": "1325039"
  },
  {
    "text": "we go contact open async we actually change the state of the connection as well so it you know starts off being",
    "start": "1325039",
    "end": "1330640"
  },
  {
    "text": "closed and now it's open but but it's it's quite easy to follow because that's not too much stuff going",
    "start": "1330640",
    "end": "1337039"
  },
  {
    "text": "on and um so again if we if we think of seven as being the limits that we have",
    "start": "1337039",
    "end": "1343440"
  },
  {
    "text": "you know there's you know there's fewer things going on here so it fits in our in our head",
    "start": "1343440",
    "end": "1349200"
  },
  {
    "text": "um before we move on you might say okay but really you know something like",
    "start": "1349200",
    "end": "1354880"
  },
  {
    "text": "restaurant id the one that i've labeled one with the number one that's a mute that's an integer that's",
    "start": "1354880",
    "end": "1360480"
  },
  {
    "text": "immutable it's not going to change state so we don't really need to keep track of the state of it because it's not going",
    "start": "1360480",
    "end": "1365679"
  },
  {
    "text": "to change and the same thing goes for the connection string and the create reservation sql those label three and",
    "start": "1365679",
    "end": "1371760"
  },
  {
    "text": "five there are strings they're immutable they're not going to change so really if you want to be a little bit",
    "start": "1371760",
    "end": "1377679"
  },
  {
    "text": "more sophisticated you can say all right so we only need to keep track of three things reservation",
    "start": "1377679",
    "end": "1384000"
  },
  {
    "text": "con and command but then again if you go and actually read the implementation of the",
    "start": "1384000",
    "end": "1389760"
  },
  {
    "text": "reservation class you'll notice that that's a an immutable object uh it's a value object and it's a domain object that i",
    "start": "1389760",
    "end": "1396559"
  },
  {
    "text": "created in that particular way because i know that immutable you know objects have a lot of benefits and one of them",
    "start": "1396559",
    "end": "1403039"
  },
  {
    "text": "is that you you know that they're not going to change so you don't really have to expend that much mental energy to",
    "start": "1403039",
    "end": "1408159"
  },
  {
    "text": "sort of you know when you're trying to understand what the code does you don't have to you know worry does it change",
    "start": "1408159",
    "end": "1413360"
  },
  {
    "text": "because you know it's not going to change so really there's only two things that that will change the command object",
    "start": "1413360",
    "end": "1419120"
  },
  {
    "text": "and the and the the connection and the command objects and they actually do change here so if we want to be more sophisticated",
    "start": "1419120",
    "end": "1425600"
  },
  {
    "text": "we could argue there's only really two things going on so this is very readable for that reason it fits in your head",
    "start": "1425600",
    "end": "1431120"
  },
  {
    "text": "but if we're just being crude we just count all the variables because this is easier you know you don't need a tool for that you can just do that when",
    "start": "1431120",
    "end": "1436880"
  },
  {
    "text": "you're looking at the code so we can try to enumerate all of those or we can you know try to assign each of",
    "start": "1436880",
    "end": "1442559"
  },
  {
    "text": "those variables to each of those you know cells in the higgs flower and we can say okay they all fit",
    "start": "1442559",
    "end": "1448640"
  },
  {
    "text": "there we have room for seven we only used six so we have wicked this fits in our head for that reason",
    "start": "1448640",
    "end": "1456240"
  },
  {
    "text": "all right so um so the hex flower here is basically a symbol of you know things that that fit in your",
    "start": "1457200",
    "end": "1463520"
  },
  {
    "text": "head now i showed you i you know i start start by showing you this create method because",
    "start": "1463520",
    "end": "1469039"
  },
  {
    "text": "that's sort of like the lowest level of granularity there's really a lot not a lot of user code hidden behind that that",
    "start": "1469039",
    "end": "1474559"
  },
  {
    "text": "thing there's only framework code like you know sql connection sql command and things like that you typically don't go",
    "start": "1474559",
    "end": "1480080"
  },
  {
    "text": "and read the code of a framework code but then you might say well you know but",
    "start": "1480080",
    "end": "1486640"
  },
  {
    "text": "at a higher level of abstraction we have code that calls that create method that we just looked at",
    "start": "1486640",
    "end": "1493200"
  },
  {
    "text": "and if there's you know if there are six variables involved in understanding what",
    "start": "1493200",
    "end": "1498480"
  },
  {
    "text": "the create method does doesn't that compound you know if we look at it from the next level so if you imagine that",
    "start": "1498480",
    "end": "1504000"
  },
  {
    "text": "we're looking at it from from the next level now and you know in one of those cells we have this create method sitting",
    "start": "1504000",
    "end": "1509440"
  },
  {
    "text": "that you know uses you know six uh you know variables in itself and then we have something else sitting in one of",
    "start": "1509440",
    "end": "1514799"
  },
  {
    "text": "the other cells because we are calling another method and that you know maybe represents you know complexity of four",
    "start": "1514799",
    "end": "1520400"
  },
  {
    "text": "and then you can add ten and four together that you know exceeds that blows the budget so you can't do that so it's very very",
    "start": "1520400",
    "end": "1526320"
  },
  {
    "text": "important to make sure to design the code in such a way that when when you zoom out and",
    "start": "1526320",
    "end": "1531600"
  },
  {
    "text": "look at things at a higher level of abstraction you know what looks you know a little bit complex",
    "start": "1531600",
    "end": "1537679"
  },
  {
    "text": "at the detail level should just you know become one thing it should become one chunk you know you should somehow be",
    "start": "1537679",
    "end": "1542960"
  },
  {
    "text": "able to represent that in your brain as being just one thing because otherwise it doesn't work",
    "start": "1542960",
    "end": "1548159"
  },
  {
    "text": "so you should be able to zoom out uh you know one level or you should be able to you know keep on zooming out",
    "start": "1548159",
    "end": "1554400"
  },
  {
    "text": "in your in your code base and every time you look at a higher level of abstraction you know you still have to",
    "start": "1554400",
    "end": "1559520"
  },
  {
    "text": "you know take into account that the brain is organized in the way that it does and it has the limitations that the",
    "start": "1559520",
    "end": "1565039"
  },
  {
    "text": "brain actually has so i'm going to return to the problem or the question of you know how do you",
    "start": "1565039",
    "end": "1570720"
  },
  {
    "text": "assign things so that they um that they don't leak their complexity",
    "start": "1570720",
    "end": "1576559"
  },
  {
    "text": "but i'm going to do this in 10 minutes 10 15 minutes i'm going to talk about something else first so",
    "start": "1576559",
    "end": "1583440"
  },
  {
    "text": "again we we looked at the most uh detailed level of granularity on the other hand we also want to be able to",
    "start": "1583440",
    "end": "1589840"
  },
  {
    "text": "zoom out to you know basically um maybe the entry point of the application and say",
    "start": "1589840",
    "end": "1595520"
  },
  {
    "text": "we also need to organize code at a very high level of abstraction so that it fits in our head",
    "start": "1595520",
    "end": "1600880"
  },
  {
    "text": "so if you've ever worked with asp.net core you've probably seen code like this this is basically generated by wizard i",
    "start": "1600880",
    "end": "1606480"
  },
  {
    "text": "didn't write this code myself i just had you know visual studio write it for me but we can still sort of analyze",
    "start": "1606480",
    "end": "1612720"
  },
  {
    "text": "and see does this fit in our head so first of all if you know a little bit about asp.net.com you don't have to for",
    "start": "1612720",
    "end": "1618000"
  },
  {
    "text": "this talk but if you did you probably know that all the interesting stuff will happen inside a class called startup and",
    "start": "1618000",
    "end": "1623760"
  },
  {
    "text": "we look at that in a moment but otherwise we can try to enumerate you know what else is going on here and",
    "start": "1623760",
    "end": "1629360"
  },
  {
    "text": "there's really only three things so it's that's that's that's good um we don't have a problem with this with this",
    "start": "1629360",
    "end": "1635760"
  },
  {
    "text": "main entry point now if we're interested in the startup class",
    "start": "1635760",
    "end": "1641120"
  },
  {
    "text": "we want to be able to have a look at that so we're looking at a thing that has a slightly um you know um a slightly",
    "start": "1641120",
    "end": "1648240"
  },
  {
    "text": "more granular level of abstraction and again if we want to if we hope that this code is organized in the same way that",
    "start": "1648240",
    "end": "1654559"
  },
  {
    "text": "it respects our short-term memory limit we shouldn't have if we go and look at",
    "start": "1654559",
    "end": "1659679"
  },
  {
    "text": "startup we shouldn't have to remember that there's arcs and web builder involved so it's also very important to make sure",
    "start": "1659679",
    "end": "1666640"
  },
  {
    "text": "that whenever you zoom in and something all all the surrounding stuff stuff sort of goes out of scope in terms of you",
    "start": "1666640",
    "end": "1672960"
  },
  {
    "text": "know what you have to you know require of your brain so this is the public api of the startup",
    "start": "1672960",
    "end": "1678480"
  },
  {
    "text": "class we can just again simply enumerate those two methods here that's a constructor that takes a configuration",
    "start": "1678480",
    "end": "1685279"
  },
  {
    "text": "object and then you know later on exposes that configuration object so again if we try to enumerate that that's",
    "start": "1685279",
    "end": "1691039"
  },
  {
    "text": "basically things you know three things going on so that fits now configure services uh",
    "start": "1691039",
    "end": "1697760"
  },
  {
    "text": "again i'm not trying to talk you through how this organ this application is organized i'm mostly trying to give you",
    "start": "1697760",
    "end": "1704720"
  },
  {
    "text": "some examples of you know how do you organize code so that you keep on respecting that there can't be more than",
    "start": "1704720",
    "end": "1711039"
  },
  {
    "text": "you know approximately seven things going on so again you can try to have this little quantification where you can say well",
    "start": "1711039",
    "end": "1717919"
  },
  {
    "text": "how can we can we discuss whether something like what we're looking at right now is this readable or not so you",
    "start": "1717919",
    "end": "1724640"
  },
  {
    "text": "could ask again you know various questions like you know what's the cyclomatic complexity of this thing you know how many you know alternative",
    "start": "1724640",
    "end": "1731200"
  },
  {
    "text": "pathways do we have through this code and there's no branching there's no looping so we basically just you know",
    "start": "1731200",
    "end": "1736960"
  },
  {
    "text": "run all the way through um i know there's a little bit you know towards the end there that you can't see",
    "start": "1736960",
    "end": "1742399"
  },
  {
    "text": "um i'm going to reveal that in a moment but there's no surprises there trust me on that so cyclomatic complexity of one",
    "start": "1742399",
    "end": "1748640"
  },
  {
    "text": "that's as low as you can get so so that's fine we can also try to enumerate again just the crude thing of",
    "start": "1748640",
    "end": "1754480"
  },
  {
    "text": "enumerating all the you know the variables that are involved and it turns out that we have six of those as well so",
    "start": "1754480",
    "end": "1760320"
  },
  {
    "text": "so we're good on that account now i want to stress here that you know these measurements that i'm talking",
    "start": "1760320",
    "end": "1766559"
  },
  {
    "text": "about these attempts at quantification like cyclomatic complexity or counting the variables and you know other things",
    "start": "1766559",
    "end": "1772000"
  },
  {
    "text": "like that you might also want to look at your lines of code you probably have to divide that into",
    "start": "1772000",
    "end": "1778000"
  },
  {
    "text": "segments in order to make it you know fit with seven but that's a different story now but what i want to say about",
    "start": "1778000",
    "end": "1783679"
  },
  {
    "text": "this is that you know this is um you know these these things are not",
    "start": "1783679",
    "end": "1790640"
  },
  {
    "text": "there in order to be rigid rules these are you know",
    "start": "1790640",
    "end": "1796720"
  },
  {
    "text": "tools you can use in order to give yourself a vocabulary so that you can discuss things with your colleagues if",
    "start": "1796720",
    "end": "1801840"
  },
  {
    "text": "you if you want to have a discussion with a colleague you know where is where you feel that you know a particular method that",
    "start": "1801840",
    "end": "1808799"
  },
  {
    "text": "you're looking at is growing too complicated and you want to split it up into you know a couple of helper methods",
    "start": "1808799",
    "end": "1814080"
  },
  {
    "text": "and the other car your colleagues you know says well that's i don't feel that way you know again if one says you know",
    "start": "1814080",
    "end": "1819919"
  },
  {
    "text": "i feel this and the other one says i feel that you you're not having a discussion you just you know you're at the kindergarten level so you need to",
    "start": "1819919",
    "end": "1826640"
  },
  {
    "text": "have some sort of vocabulary where you can talk about these things and this is a way you can talk about these things",
    "start": "1826640",
    "end": "1832399"
  },
  {
    "text": "now again you have to agree uh on the premise here but but it moves you a little bit you know closer to being able",
    "start": "1832399",
    "end": "1838480"
  },
  {
    "text": "to actually have good discussions about code right so i would say this code is",
    "start": "1838480",
    "end": "1844640"
  },
  {
    "text": "readable for for those various reasons um so as you can tell towards the end here",
    "start": "1844640",
    "end": "1849760"
  },
  {
    "text": "there's nothing you know more interesting going on there so towards the end what we basically have is a",
    "start": "1849760",
    "end": "1854799"
  },
  {
    "text": "table of contents so we're still working on a very high level of abstraction in the sense that there's nothing that",
    "start": "1854799",
    "end": "1860720"
  },
  {
    "text": "really tells you what's going on in the you know the details of the system but it's sort of like it's it's like a table",
    "start": "1860720",
    "end": "1867279"
  },
  {
    "text": "of contents that tell you you know why where can you go if you want to learn about you know various different things",
    "start": "1867279",
    "end": "1872880"
  },
  {
    "text": "so for example if this is a risk api if you want to know whether or not you need to you know log on in order to be able",
    "start": "1872880",
    "end": "1880159"
  },
  {
    "text": "to use this rest api or if it allows you know anonymous access you might say okay",
    "start": "1880159",
    "end": "1885200"
  },
  {
    "text": "configure authorization that sounds like a reasonable you know next place to visit",
    "start": "1885200",
    "end": "1890640"
  },
  {
    "text": "so maybe you want to go and have a look at that method now when you do that again you know all",
    "start": "1890640",
    "end": "1895919"
  },
  {
    "text": "this this stuff that surrounds it at the moment shouldn't you know be important if you go and look at configure",
    "start": "1895919",
    "end": "1901519"
  },
  {
    "text": "authorization only what happens inside of configure authorization should be you know important so what you see is all",
    "start": "1901519",
    "end": "1908080"
  },
  {
    "text": "there is uh as a condiment says the same thing goes with configure repository you know if you wanna you",
    "start": "1908080",
    "end": "1913840"
  },
  {
    "text": "know about the persistence system in in this um in this code base you might go there and",
    "start": "1913840",
    "end": "1918880"
  },
  {
    "text": "again when you go there you should have this expectation that you don't have to understand what happened in configure",
    "start": "1918880",
    "end": "1924399"
  },
  {
    "text": "authorization or what's later on gonna happen in configure clock you know if you go to configure repository you",
    "start": "1924399",
    "end": "1930799"
  },
  {
    "text": "should again be met with a you know a piece of code that respects uh the limitations of your short-term memory so",
    "start": "1930799",
    "end": "1937919"
  },
  {
    "text": "at most seven things should be going on so this is sort of just an idea that keeps on repeating this is a little bit",
    "start": "1937919",
    "end": "1944320"
  },
  {
    "text": "of an ad hoc enumeration but the idea is that you should always have um [Music]",
    "start": "1944320",
    "end": "1950399"
  },
  {
    "text": "you know if you can organize the code so that there's no more than seven things going on you know you have a much better chance of",
    "start": "1950399",
    "end": "1956320"
  },
  {
    "text": "not having to rely that much on the long-term memory and you can mostly rely on your short-term memory",
    "start": "1956320",
    "end": "1962240"
  },
  {
    "text": "now i promise to get back to this question of how do we ensure that things that",
    "start": "1962240",
    "end": "1968880"
  },
  {
    "text": "have you know a level of complexity at one level of abstraction when we look at it from the next level out",
    "start": "1968880",
    "end": "1974320"
  },
  {
    "text": "it should just look like one thing because otherwise we you know we can't have you know complexity leak through",
    "start": "1974320",
    "end": "1980240"
  },
  {
    "text": "because if if that's uh if that happens the code uh no longer fits in our head",
    "start": "1980240",
    "end": "1986320"
  },
  {
    "text": "so um so we can you know again imagine that one of those cells is represented for example by this allocate method that",
    "start": "1986320",
    "end": "1992240"
  },
  {
    "text": "we looked at before and i would claim that this the method not",
    "start": "1992240",
    "end": "1997440"
  },
  {
    "text": "only fits in your head but it also collapses into one thing you know you can actually you know as viewed from the",
    "start": "1997440",
    "end": "2003360"
  },
  {
    "text": "outside you can think of that as just one chunk of information and there's a reason for that",
    "start": "2003360",
    "end": "2010399"
  },
  {
    "text": "now the first before we do that let's talk a little bit about the complexity just to recap",
    "start": "2010399",
    "end": "2015679"
  },
  {
    "text": "so we already established that the cyclomatic complexity of this method is three so that's fine that's well within the",
    "start": "2015679",
    "end": "2022080"
  },
  {
    "text": "limit limits of of our short-term memory but again if you imagine that this complexity leaks through you know if you",
    "start": "2022080",
    "end": "2029360"
  },
  {
    "text": "have to think about all three you know states all three behaviors of this method you know superimposed on",
    "start": "2029360",
    "end": "2035279"
  },
  {
    "text": "each other if you have to think of that when you call the allocate method that means that you know you already expended",
    "start": "2035279",
    "end": "2041600"
  },
  {
    "text": "three out of your budget of seven uh in your calling code so you can't really allow that sort of you know complexity",
    "start": "2041600",
    "end": "2048800"
  },
  {
    "text": "to um to escape the scope of of the implementation details",
    "start": "2048800",
    "end": "2053839"
  },
  {
    "text": "and again also if we want to use this accrued method of just enumerating all the objects i know there's really only",
    "start": "2053839",
    "end": "2060720"
  },
  {
    "text": "one object that can actually change state but if we just use the crude method of counting all the things you'll",
    "start": "2060720",
    "end": "2066240"
  },
  {
    "text": "notice that there are six of those as well so you may be wondering now you know why why why are there always six",
    "start": "2066240",
    "end": "2073280"
  },
  {
    "text": "things in all the examples that i've shown you and the reasons for that is that all the code that i've written for the book i've you know i followed these",
    "start": "2073280",
    "end": "2080320"
  },
  {
    "text": "this principle where you know whenever whenever i started to get near a threshold of seven i would refactor the",
    "start": "2080320",
    "end": "2086398"
  },
  {
    "text": "code so that i would uh always be you know almost always be um",
    "start": "2086399",
    "end": "2091919"
  },
  {
    "text": "below seven in terms of complexity so often you know if i have something where you know there's six of something going",
    "start": "2091919",
    "end": "2097839"
  },
  {
    "text": "on i'm just setting i'm just letting it sit as it is and then you know if i add a seventh thing i would often go and you",
    "start": "2097839",
    "end": "2104640"
  },
  {
    "text": "know prematurely refactor it so that it's ready to be um changed again in the",
    "start": "2104640",
    "end": "2109680"
  },
  {
    "text": "future that's a little bit of a digression though but again you know if we have six things",
    "start": "2109680",
    "end": "2115359"
  },
  {
    "text": "going on here we can't let you know that knowledge um that there's six six things",
    "start": "2115359",
    "end": "2120400"
  },
  {
    "text": "going on you know you should not as a caller if you want to call the allocate method you should not be required",
    "start": "2120400",
    "end": "2127359"
  },
  {
    "text": "to understand that there are those six things going on because again if if that's a requirement",
    "start": "2127359",
    "end": "2133280"
  },
  {
    "text": "the code is not going to fit in your short-term memory so when we look at allocate from the",
    "start": "2133280",
    "end": "2139280"
  },
  {
    "text": "outside it must you know compact it must you know collapse into just one chunk of",
    "start": "2139280",
    "end": "2145280"
  },
  {
    "text": "information that's how we need our brains to be able to treat it that way",
    "start": "2145280",
    "end": "2150320"
  },
  {
    "text": "and i believe that i can make the argument that this code you know fits that description so the first the first",
    "start": "2150320",
    "end": "2155520"
  },
  {
    "text": "thing is that this code has no side effects this particular method",
    "start": "2155520",
    "end": "2160960"
  },
  {
    "text": "we can go look go back and look for side effects so side effects are all the things that change the state of the system",
    "start": "2160960",
    "end": "2166640"
  },
  {
    "text": "so if you you know write a file as a disk that changes the state of the system if you send an email to a customer that",
    "start": "2166640",
    "end": "2173359"
  },
  {
    "text": "changes the state of the system if you're repainting something on the on the monitor that actually changes the state of the system um so that's you",
    "start": "2173359",
    "end": "2180560"
  },
  {
    "text": "know if you write to the console that changes the state of the system maybe okay so there's a little bit of a",
    "start": "2180560",
    "end": "2185760"
  },
  {
    "text": "philosophical discussion there it's it's sort of like you know if a tree falls in a in a forest and no one's around you",
    "start": "2185760",
    "end": "2191520"
  },
  {
    "text": "know does it make a sound so it's a little bit like that you know if you if you log to the console",
    "start": "2191520",
    "end": "2197040"
  },
  {
    "text": "but no one looks at the console it's not actually a side effect does that count or not so you can sort of have those",
    "start": "2197040",
    "end": "2202240"
  },
  {
    "text": "discussions because there's always going to be the side effect of code executing that you know um you know electrons are going to move",
    "start": "2202240",
    "end": "2208480"
  },
  {
    "text": "around in the physical world so you know some sort of side effect you always have will have but you know noticeable side effects",
    "start": "2208480",
    "end": "2216000"
  },
  {
    "text": "there's there's no emails being sent here there's no uh you know files being written there's no you know",
    "start": "2216000",
    "end": "2221839"
  },
  {
    "text": "screens being repainted here just uh some calculation stuff going on so there's no side effects here so",
    "start": "2221839",
    "end": "2227920"
  },
  {
    "text": "that's that's one thing another property that this code has is that um",
    "start": "2227920",
    "end": "2233359"
  },
  {
    "text": "it's deterministic so we define that as having the you know the same inputs will always produce the",
    "start": "2233359",
    "end": "2239520"
  },
  {
    "text": "same outputs let's go back and have a look at that again so what are typical sources of",
    "start": "2239520",
    "end": "2245119"
  },
  {
    "text": "determinist to non-deterministic behavior so for example if you rely on the system clock",
    "start": "2245119",
    "end": "2251119"
  },
  {
    "text": "now that's non-deterministic because the time changes all the time so if you have code that relies on you know",
    "start": "2251119",
    "end": "2256640"
  },
  {
    "text": "it does it it does you know a different thing if it's sunday then if it's monday that's non-deterministic behavior or you",
    "start": "2256640",
    "end": "2263359"
  },
  {
    "text": "know if it checks the dates or you know the year or things like that you know that's not deterministic because it relies on the system clock",
    "start": "2263359",
    "end": "2270560"
  },
  {
    "text": "the same thing goes for random numbers if you have any sort of random number generator involved that's non-deterministic it's almost you know a",
    "start": "2270560",
    "end": "2277359"
  },
  {
    "text": "tautology there but also if you do any sort of reading",
    "start": "2277359",
    "end": "2282400"
  },
  {
    "text": "from io if you read from a file or if you read from a database that's also non-deterministic because you know",
    "start": "2282400",
    "end": "2288480"
  },
  {
    "text": "imagine reading from a file the input is the file name and you can go and read from the file",
    "start": "2288480",
    "end": "2293680"
  },
  {
    "text": "and you return the contents and then you have the same action one more time the same file name but then the contents of",
    "start": "2293680",
    "end": "2300480"
  },
  {
    "text": "the file has changed in the meantime so now you return something else you know by the definition the same",
    "start": "2300480",
    "end": "2305920"
  },
  {
    "text": "input should always produce the same output that's non-deterministic if you're reading from a file",
    "start": "2305920",
    "end": "2311119"
  },
  {
    "text": "so anything that that performs i o so reading from a file you know querying a database you know querying a you know a",
    "start": "2311119",
    "end": "2317359"
  },
  {
    "text": "web service all of that uh is also out of the picture that's nondeterministic behavior but we",
    "start": "2317359",
    "end": "2323520"
  },
  {
    "text": "have none of that here there's no random numbers being generated we don't rely on the system clock we don't do i o",
    "start": "2323520",
    "end": "2330320"
  },
  {
    "text": "okay so together we now have two properties you know we we have no side effects and we have",
    "start": "2330320",
    "end": "2337200"
  },
  {
    "text": "deterministic behavior we we call that a pure function and this is interesting in terms of",
    "start": "2337200",
    "end": "2343839"
  },
  {
    "text": "whether or not you know details leak because you know pure functions are what we call referentially transparent and",
    "start": "2343839",
    "end": "2350240"
  },
  {
    "text": "what that what does that mean so referential transparency means that the function call is equal to its result",
    "start": "2350240",
    "end": "2357119"
  },
  {
    "text": "so you know this from mathematics you know that you know two plus two is always full",
    "start": "2357119",
    "end": "2362240"
  },
  {
    "text": "and if i ask you for example you know what's four times five you'd probably say it's",
    "start": "2362240",
    "end": "2367920"
  },
  {
    "text": "20 and how did you know that now you probably didn't actually perform the",
    "start": "2367920",
    "end": "2373599"
  },
  {
    "text": "calculation though the calculation here is that you go um 5 plus 5 plus 5 plus 5. you do that you",
    "start": "2373599",
    "end": "2381200"
  },
  {
    "text": "know four times that's the calculation but you don't have to do that because you've memorized the multiplication",
    "start": "2381200",
    "end": "2386240"
  },
  {
    "text": "table because the result is all you need you don't have you don't need to do the calculation you just need the result",
    "start": "2386240",
    "end": "2392560"
  },
  {
    "text": "and this is sort of the same thing here is that if you know the inputs already then then you don't need to perform the",
    "start": "2392560",
    "end": "2397599"
  },
  {
    "text": "calculation you can just you know use the result so the result is the same as the function",
    "start": "2397599",
    "end": "2405040"
  },
  {
    "text": "so going back to allocate here this is a pure function and that means",
    "start": "2405440",
    "end": "2410560"
  },
  {
    "text": "we can regard all of this stuff as being just um equal to the output that produces it",
    "start": "2410560",
    "end": "2417440"
  },
  {
    "text": "produces an innumerable table that's basically a collection of tables so",
    "start": "2417440",
    "end": "2422560"
  },
  {
    "text": "we don't really need to understand exactly how it arrives at that is we just need to understand that you know the output of this function is just one",
    "start": "2422560",
    "end": "2428880"
  },
  {
    "text": "thing it's a collection of tables so that's a chunk of information a collection of tables we can think of that as being one thing",
    "start": "2428880",
    "end": "2436640"
  },
  {
    "text": "so referential transparency is is a really good way of making sure that",
    "start": "2436839",
    "end": "2442079"
  },
  {
    "text": "things you know that complexity doesn't leak you know you can have a a pure function that has cyclomatic",
    "start": "2442079",
    "end": "2448640"
  },
  {
    "text": "complexity of 73 if all you if if that's what you want but if it produces a single output and what else can it do if",
    "start": "2448640",
    "end": "2455599"
  },
  {
    "text": "it's a function now that thing is just one output and and you don't have to think about you know",
    "start": "2455599",
    "end": "2460720"
  },
  {
    "text": "how did it arrive at that you know output you can just think about it as the as the chunk of information",
    "start": "2460720",
    "end": "2467680"
  },
  {
    "text": "um that's not you know you can't write everything as pure functions you also need other things as well but you know",
    "start": "2467680",
    "end": "2472960"
  },
  {
    "text": "in general we can say how do we you know design things so that you know the complexity that's you know",
    "start": "2472960",
    "end": "2479359"
  },
  {
    "text": "inside of a thing doesn't leak through you know we haven't we have a word for that it's called encapsulation you know",
    "start": "2479359",
    "end": "2486319"
  },
  {
    "text": "this is the idea behind object-oriented encapsulation is that you are not supposed to be you know to understand",
    "start": "2486319",
    "end": "2492480"
  },
  {
    "text": "the inner workings of an object you just you're just supposed to be able to interact with it with and not caring",
    "start": "2492480",
    "end": "2499200"
  },
  {
    "text": "about how it's implemented and if you want to implement it you go and have a look at that implementation but then you don't have to care about",
    "start": "2499200",
    "end": "2505280"
  },
  {
    "text": "the callers or the environment just the inputs and the output so so in general encapsulation and more",
    "start": "2505280",
    "end": "2511680"
  },
  {
    "text": "specifically you know write as many pure functions as as you can that's really going to help you you know follow this",
    "start": "2511680",
    "end": "2517920"
  },
  {
    "text": "design principle of not having too many things going on",
    "start": "2517920",
    "end": "2523800"
  },
  {
    "text": "all right so to summarize uh we need to be able to you know organize code so that at every level you",
    "start": "2524240",
    "end": "2530240"
  },
  {
    "text": "know whether we zoom in or out it should be organized so that it respects our short term memory capacity",
    "start": "2530240",
    "end": "2535839"
  },
  {
    "text": "and which is you know about seven we should be able to zoom in as we did before we should be able to zoom all the",
    "start": "2535839",
    "end": "2541440"
  },
  {
    "text": "way out um to the to the entry point but if we think about you know just some",
    "start": "2541440",
    "end": "2547839"
  },
  {
    "text": "arbitrary level of abstraction here you know again our brains don't care about the",
    "start": "2547839",
    "end": "2554160"
  },
  {
    "text": "abstraction level we we just need to make sure that we respect the the constraints that we",
    "start": "2554160",
    "end": "2559440"
  },
  {
    "text": "actually have in our brain now obviously we understand that even if we organize the code in such a way that",
    "start": "2559440",
    "end": "2565200"
  },
  {
    "text": "there are only seven things going on you know within you know behind each of those you know seven cells that we're looking at",
    "start": "2565200",
    "end": "2571760"
  },
  {
    "text": "here there might be more things going on it's very likely that that's the case so you",
    "start": "2571760",
    "end": "2577839"
  },
  {
    "text": "might you know for example you know at the most if we respect this design principle all the way through you know at the next level down there's 49 things",
    "start": "2577839",
    "end": "2584800"
  },
  {
    "text": "going on but we just don't you know have to think about that in our short-term memory but that's actually the case but then you",
    "start": "2584800",
    "end": "2591440"
  },
  {
    "text": "know each of each of those you know seven cells might again you know contain another higgs flower and each of those",
    "start": "2591440",
    "end": "2597520"
  },
  {
    "text": "hex flowers might contain another hex flower so this this is a fractal you know i",
    "start": "2597520",
    "end": "2602720"
  },
  {
    "text": "call that the hicks flower fractal and if you came here and thought you know fractal architecture is something with",
    "start": "2602720",
    "end": "2608079"
  },
  {
    "text": "mantle broad sets or things like that and you think this is not a fractal um here's another fractal that's very well",
    "start": "2608079",
    "end": "2613760"
  },
  {
    "text": "known within the mathematical communities it's called the snowflake it's quite obvious why it's",
    "start": "2613760",
    "end": "2619440"
  },
  {
    "text": "called the snowflake but uh you probably noticed that we basically just take each uh straight line and we subdivide",
    "start": "2619440",
    "end": "2625760"
  },
  {
    "text": "it by adding you know a little you know triangular hump on it and then we just keep on doing that so you can keep on",
    "start": "2625760",
    "end": "2631520"
  },
  {
    "text": "zooming in on the um on the edge of the  snowflake and it'll just keep keep on repeating the same pattern um you",
    "start": "2631520",
    "end": "2638560"
  },
  {
    "text": "know forever you know i stopped rendering at about five or six levels deep here but that's the idea and the same thing goes",
    "start": "2638560",
    "end": "2645359"
  },
  {
    "text": "with the hex you know the higgs flower fractal here i stopped rendering after four levels deep because if i add a",
    "start": "2645359",
    "end": "2651440"
  },
  {
    "text": "fifth level i've tried uh then it basically just becomes one green blob uh so it's not that interesting to look at",
    "start": "2651440",
    "end": "2658000"
  },
  {
    "text": "um but anyway that's that's sort of why i call it fractal architecture because it's actually they are fractals but it's",
    "start": "2658000",
    "end": "2663920"
  },
  {
    "text": "more like a way of thinking about you know how to structure code uh so that it sort of you know keeps on um",
    "start": "2663920",
    "end": "2670400"
  },
  {
    "text": "respecting this uh self-repeating uh self-similar pattern at all levels of abstraction",
    "start": "2670400",
    "end": "2676400"
  },
  {
    "text": "um because we only have that much that much compa you know capacity in our brain in",
    "start": "2676400",
    "end": "2682160"
  },
  {
    "text": "our short term memory you can keep track of seven things so we should write code that you know you know respects that in a code that",
    "start": "2682160",
    "end": "2688640"
  },
  {
    "text": "fits in your head which which is also the title of my new book which is right here and you can get it wherever good books",
    "start": "2688640",
    "end": "2695280"
  },
  {
    "text": "are sold so um that's basically what i have but i am i",
    "start": "2695280",
    "end": "2701280"
  },
  {
    "text": "you know i left rooms for some questions and answers and then if you don't have any questions and answers you can get you know out of the room before everyone",
    "start": "2701280",
    "end": "2707760"
  },
  {
    "text": "else um but for those of you who might be interested i brought two copies of the book and i'm going to give them a",
    "start": "2707760",
    "end": "2713040"
  },
  {
    "text": "wave for people who ask you know nice questions and i'm not going to be too discriminate so basically the first two",
    "start": "2713040",
    "end": "2718640"
  },
  {
    "text": "people who get you know asks a decent question will will get the copy of the book um so um you can ask me basically you know",
    "start": "2718640",
    "end": "2725200"
  },
  {
    "text": "something about the talk or you can ask me about anything else but if you have you know questions about something else",
    "start": "2725200",
    "end": "2730319"
  },
  {
    "text": "maybe wait with those until later so um are there any questions",
    "start": "2730319",
    "end": "2736079"
  },
  {
    "text": "yes sir",
    "start": "2736079",
    "end": "2739319"
  },
  {
    "text": "from within the class does that not end up kind of you need to",
    "start": "2746400",
    "end": "2752160"
  },
  {
    "text": "understand the restrictions of the class like the level higher above to",
    "start": "2752160",
    "end": "2757920"
  },
  {
    "text": "know whether or not that property is going to have an impact because maybe someone",
    "start": "2757920",
    "end": "2764640"
  },
  {
    "text": "could come and try and change it",
    "start": "2764640",
    "end": "2767680"
  },
  {
    "text": "right so me so let me try to rephrase this so that everyone else can hear it and also to see if i understood the question",
    "start": "2772160",
    "end": "2778160"
  },
  {
    "text": "correctly so in one of the examples i show i'm using a read-only property you know the connection string i suppose",
    "start": "2778160",
    "end": "2783920"
  },
  {
    "text": "that's the one you're thinking about",
    "start": "2783920",
    "end": "2788040"
  },
  {
    "text": "oh yeah there's another example where where i use a you know collection of tables and i turn that into a list",
    "start": "2789200",
    "end": "2795200"
  },
  {
    "text": "that is also a read-only property by the way um so your question is you know if if i'm sort of taking you know you know",
    "start": "2795200",
    "end": "2801440"
  },
  {
    "text": "properties or class fields into scope in my method um is is that a problem",
    "start": "2801440",
    "end": "2808079"
  },
  {
    "text": "and um and you know what what happens if you know if other people come and change that later on",
    "start": "2808079",
    "end": "2815400"
  },
  {
    "text": "yeah so so yeah so so you further on say that you know in order in order for all of that to fit in my brain i have to",
    "start": "2829040",
    "end": "2835119"
  },
  {
    "text": "understand that this is a read-only property and it's sort of available in the class um fair enough yeah um",
    "start": "2835119",
    "end": "2841280"
  },
  {
    "text": "i think you know at the level of um analysis that i showed you know it's it's definitely a variable that it's in",
    "start": "2841280",
    "end": "2847839"
  },
  {
    "text": "scope uh so in that case it it just counts towards my budget if you will and that's what i did um but you can also",
    "start": "2847839",
    "end": "2854720"
  },
  {
    "text": "say at a slightly you know if you take one step back and look at the you know the overall object um the object should",
    "start": "2854720",
    "end": "2861760"
  },
  {
    "text": "fit in your in your head as well in in the sense that you need to um you need to understand you know what's",
    "start": "2861760",
    "end": "2867440"
  },
  {
    "text": "actually available in the object you know what what sort of you know read-only properties are there or you know settable properties if that's the",
    "start": "2867440",
    "end": "2873280"
  },
  {
    "text": "case and what members are actually there so i think this this way of looking at things applies to",
    "start": "2873280",
    "end": "2879520"
  },
  {
    "text": "all sorts of different levels you know i showed you the public api of the startup class for example because i think it's",
    "start": "2879520",
    "end": "2884800"
  },
  {
    "text": "important to also organize objects so that if when you look at the public api you",
    "start": "2884800",
    "end": "2890480"
  },
  {
    "text": "don't want a list of 42 methods that you know is exposed by a given object because then you know it becomes",
    "start": "2890480",
    "end": "2896960"
  },
  {
    "text": "difficult to fit in your head again because there's just too much stuff going on and also it's pretty likely",
    "start": "2896960",
    "end": "2902160"
  },
  {
    "text": "that an object like that's a god object that has low cohesion so it should probably be refactored but that's sort",
    "start": "2902160",
    "end": "2907359"
  },
  {
    "text": "of like a a different story um but i don't know if there's going to be any feedback if i come by and and and give",
    "start": "2907359",
    "end": "2914160"
  },
  {
    "text": "you that but you know you're welcome to come by and and pick it up oh you're coming right now so i might actually",
    "start": "2914160",
    "end": "2919200"
  },
  {
    "text": "just give it to you all right thank you sure all right anyone else let's see uh yes there in the back",
    "start": "2919200",
    "end": "2927400"
  },
  {
    "text": "right okay so the question i'm sorry yeah so so yeah so you're asking if i",
    "start": "2939440",
    "end": "2946559"
  },
  {
    "text": "understand correctly you know in the face of polymorphism um interfaces or inheritance",
    "start": "2946559",
    "end": "2952960"
  },
  {
    "text": "you might have you know a single interface a single abstract class but it might actually have you know an unbounded number of you know implement",
    "start": "2952960",
    "end": "2960400"
  },
  {
    "text": "at least more than seven yeah um i think this is where um thinking about you know protocols become uh",
    "start": "2960400",
    "end": "2968839"
  },
  {
    "text": "important um one of the things that i also talk about in the book is um you know around api design um it's quite",
    "start": "2968839",
    "end": "2976000"
  },
  {
    "text": "important to think about uh invariance so pre and post conditions so",
    "start": "2976000",
    "end": "2981680"
  },
  {
    "text": "right and then you know this thing called the liskop substitution principle tends to come in here",
    "start": "2981680",
    "end": "2987200"
  },
  {
    "text": "because if you can imagine an interface for example you can say hey let's define an interface that you know my client",
    "start": "2987200",
    "end": "2992640"
  },
  {
    "text": "code interacts with and i might have various different implementations of that interface but all the implementations must uh you know fulfill",
    "start": "2992640",
    "end": "2999920"
  },
  {
    "text": "the same contract in the sense that you know the invariance must remain true you know the the preconditions and the post",
    "start": "2999920",
    "end": "3005839"
  },
  {
    "text": "conditions exposed by each of those um each of those uh you know",
    "start": "3005839",
    "end": "3012160"
  },
  {
    "text": "implementations must be the same so the the list of substitution principles says that you know",
    "start": "3012160",
    "end": "3017280"
  },
  {
    "text": "things that are more derived um should be let's say more taught it's basically also the you know",
    "start": "3017280",
    "end": "3023839"
  },
  {
    "text": "postal law you know it must be you know more tolerant of input or more restrictive and output so it's sort of like rema it keeps on",
    "start": "3023839",
    "end": "3030480"
  },
  {
    "text": "um uh it keeps on um fulfilling the same contract",
    "start": "3030480",
    "end": "3036240"
  },
  {
    "text": "so there's this idea of you know an interface on abstract based class representing a contract with some stated",
    "start": "3036240",
    "end": "3041359"
  },
  {
    "text": "rules and and basically uh that also means again that if you're looking at the call",
    "start": "3041359",
    "end": "3046480"
  },
  {
    "text": "side where you want to call into an interface method you should you should be",
    "start": "3046480",
    "end": "3053280"
  },
  {
    "text": "you should be able to think about that as saying well if i as a caller fulfill the preconditions then i expect the",
    "start": "3053280",
    "end": "3060000"
  },
  {
    "text": "implementation whatever it is to you know guarantee that the post conditions are going to be you know what they're",
    "start": "3060000",
    "end": "3065200"
  },
  {
    "text": "supposed to be and then again you know exactly what happens and you know which one of the 21 implementations that i",
    "start": "3065200",
    "end": "3072400"
  },
  {
    "text": "actually end up using shouldn't really be important at that level of granularity so it still becomes just one",
    "start": "3072400",
    "end": "3078000"
  },
  {
    "text": "thing if if that answers your question i know that was a little bit of a ram you know",
    "start": "3078000",
    "end": "3083200"
  },
  {
    "text": "ramble because i was trying to figure out you know how to sort of answer the question um but i hope that i",
    "start": "3083200",
    "end": "3088480"
  },
  {
    "text": "gave you a decent answer there um if i did then please come and collect",
    "start": "3088480",
    "end": "3093680"
  },
  {
    "text": "your book when you have the time all right um i don't have any more books to um",
    "start": "3093680",
    "end": "3099359"
  },
  {
    "text": "to um you know hand out uh i do have a few more minutes uh so if if you have more questions then i'll be",
    "start": "3099359",
    "end": "3106160"
  },
  {
    "text": "happy to yes sir",
    "start": "3106160",
    "end": "3109799"
  },
  {
    "text": "is there i'm sorry can you shout a little bit more yeah i'm getting old my hearing is not as good as it's supposed um",
    "start": "3120000",
    "end": "3129960"
  },
  {
    "text": "yeah so so if if i may rephrase just you asking you know am i did that was i am i able to follow",
    "start": "3141839",
    "end": "3148880"
  },
  {
    "text": "this you know idea throughout or you know um does it sometimes happen that i",
    "start": "3148880",
    "end": "3153920"
  },
  {
    "text": "have to compromise on this principle for various different reasons is that a good you know rephrase uh you know",
    "start": "3153920",
    "end": "3160640"
  },
  {
    "text": "okay yeah sure um i am i think i was you know for the code base",
    "start": "3160640",
    "end": "3166480"
  },
  {
    "text": "for the book i think i was quite successful in following the you know this uh most of those rules almost you",
    "start": "3166480",
    "end": "3172640"
  },
  {
    "text": "know throughout and i said almost uh and this has also been my experience with uh",
    "start": "3172640",
    "end": "3177920"
  },
  {
    "text": "with you know coaching teams and writing all the other you know code for production views um",
    "start": "3177920",
    "end": "3184720"
  },
  {
    "text": "it's it's more often than not possible to follow this design principle",
    "start": "3184720",
    "end": "3190079"
  },
  {
    "text": "but again you know it's it's an idea it's a rule of thumb it's a guiding principle and i don't want to make it a",
    "start": "3190079",
    "end": "3196480"
  },
  {
    "text": "hard rule that you must follow because they could you know you will always have edge cases uh and i respect that you",
    "start": "3196480",
    "end": "3202559"
  },
  {
    "text": "know its cases will occur but you know in my experience you can follow this much more than you actually thought",
    "start": "3202559",
    "end": "3208480"
  },
  {
    "text": "possible um but again with with exceptions prop probably",
    "start": "3208480",
    "end": "3213680"
  },
  {
    "text": "all right should we take one more and then you can still get a you know get out of here before uh other people or",
    "start": "3213680",
    "end": "3218800"
  },
  {
    "text": "yes",
    "start": "3218800",
    "end": "3221800"
  },
  {
    "text": "you're right okay so does this work with you know something like clean architecture for example um so i must",
    "start": "3225839",
    "end": "3231280"
  },
  {
    "text": "admit that i actually haven't read robert c martin's book clean architecture yet but lots of people are asking about that as and as i understand",
    "start": "3231280",
    "end": "3237920"
  },
  {
    "text": "clean architecture it's it's very reminiscent of portland adapters um and",
    "start": "3237920",
    "end": "3243280"
  },
  {
    "text": "yes i you know you know those things i i feel you know go um very well together",
    "start": "3243280",
    "end": "3250640"
  },
  {
    "text": "all right i think i'm going to let you off now and if if you want to talk to me i'm i'll just hang around here and",
    "start": "3250640",
    "end": "3256960"
  },
  {
    "text": "you're welcome to come and talk to me but thanks for coming",
    "start": "3256960",
    "end": "3261880"
  },
  {
    "text": "you",
    "start": "3270559",
    "end": "3272640"
  }
]