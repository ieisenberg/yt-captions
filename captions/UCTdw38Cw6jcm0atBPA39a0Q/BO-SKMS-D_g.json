[
  {
    "text": "okay can you hear me yeah okay so hi everybody my name is Lori's crow",
    "start": "9320",
    "end": "17930"
  },
  {
    "text": "I'm a developer advocate at ready slabs and I live in Italy these are the",
    "start": "17930",
    "end": "23599"
  },
  {
    "text": "languages that I play with the most social media stuff and a picture of me",
    "start": "23599",
    "end": "28849"
  },
  {
    "text": "doing scuba diving so let's get into the stuff because I have a lot of things to",
    "start": "28849",
    "end": "34940"
  },
  {
    "text": "say I'm sorry I know it's the last day the last session but I tried to sell me that one as much as I could so normally",
    "start": "34940",
    "end": "42110"
  },
  {
    "text": "when people talk about communication patterns in distributed systems they mostly talk about inter-service",
    "start": "42110",
    "end": "48019"
  },
  {
    "text": "communication that is service a communicating to service B that's fine especially because there are a lot of",
    "start": "48019",
    "end": "53120"
  },
  {
    "text": "things to say on the subject like who is supposed to do what and who D takes the share language etc in this session",
    "start": "53120",
    "end": "58999"
  },
  {
    "text": "though I want to zoom in on a single instance on a single service sorry and in fact whether you have a hundred micro",
    "start": "58999",
    "end": "64760"
  },
  {
    "text": "services or just one big monolith it doesn't matter because I want to focus on what happens inside a single service",
    "start": "64760",
    "end": "71390"
  },
  {
    "text": "so let's zoom in on service a and forget all about other services when we pick",
    "start": "71390",
    "end": "77420"
  },
  {
    "text": "inside the box of a service we rediscover that services are actually made up of different pieces working",
    "start": "77420",
    "end": "82640"
  },
  {
    "text": "together and in this image we have two instances of the same application with a load balancer sitting in front of them",
    "start": "82640",
    "end": "88820"
  },
  {
    "text": "and this could be two containers or could be two processes in case of processes you wouldn't replicate also",
    "start": "88820",
    "end": "94880"
  },
  {
    "text": "the HTTP server but the idea is that you are scaling out you have more than one instance and the details on how you",
    "start": "94880",
    "end": "102259"
  },
  {
    "text": "deploy them don't really matter for the scope of this presentation so let me",
    "start": "102259",
    "end": "108829"
  },
  {
    "text": "give you one very common example and while doing so also introduced the fundamental practice of making",
    "start": "108829",
    "end": "114490"
  },
  {
    "text": "applications stateless so let's say that",
    "start": "114490",
    "end": "120890"
  },
  {
    "text": "your application is an Commerce website we have a item catalog that sits in the",
    "start": "120890",
    "end": "126770"
  },
  {
    "text": "database and each user has a shopping cart that they can fill by browsing the website now where should the shopping",
    "start": "126770",
    "end": "133850"
  },
  {
    "text": "cart leave a reasonable so we'll be inside the session but there are some important details to consider first of",
    "start": "133850",
    "end": "140690"
  },
  {
    "text": "all enabling sessions in ethnic core is very easy it's just two lines of configuration",
    "start": "140690",
    "end": "146409"
  },
  {
    "text": "here you can see obsession and then your session to enable the middleware and",
    "start": "146409",
    "end": "151510"
  },
  {
    "text": "with this configuration the session state is stored in the application memory and it's connected to a specific",
    "start": "151510",
    "end": "158090"
  },
  {
    "text": "client by a cookie that contains the session ID similar concept will supply if you are using Djibouti so the concept",
    "start": "158090",
    "end": "165500"
  },
  {
    "text": "of session is this is an example geared towards web applications are necessarily",
    "start": "165500",
    "end": "170930"
  },
  {
    "text": "API applications but the concept still applies so after we are done enabling it",
    "start": "170930",
    "end": "179569"
  },
  {
    "text": "we can access the session object from the HTTP context of a request and this",
    "start": "179569",
    "end": "184849"
  },
  {
    "text": "session object will be the same across different requests coming from the same browser if you google shopping cart ask",
    "start": "184849",
    "end": "191989"
  },
  {
    "text": "net you can find plenty of tutorials that tell you to do cars this way but there are a few problems a couple of",
    "start": "191989",
    "end": "197359"
  },
  {
    "text": "problems with this setup the first one is that if you keep the data in memory then you bring upon yourself a ton of",
    "start": "197359",
    "end": "203680"
  },
  {
    "text": "operational problems if we have more than one instance of our application",
    "start": "203680",
    "end": "209389"
  },
  {
    "text": "like we scale out like in the picture then we will need to route all requests coming from the same session to the same",
    "start": "209389",
    "end": "215840"
  },
  {
    "text": "instance because otherwise the user will lose their card or even worse if you start bouncing requests sometimes they",
    "start": "215840",
    "end": "222560"
  },
  {
    "text": "go to instance one sometimes they go to instance two they will start having an inconsistent card which is even worse",
    "start": "222560",
    "end": "228530"
  },
  {
    "text": "so also deploying updates is going to be more painful because every time your",
    "start": "228530",
    "end": "234889"
  },
  {
    "text": "sort of service sessions containing it will disappear and you will need to configure a load balancer to do sticky",
    "start": "234889",
    "end": "241370"
  },
  {
    "text": "sessions which are going to make dynamic scanning reading annoying if that wasn't already enough so the fix for this is",
    "start": "241370",
    "end": "247699"
  },
  {
    "text": "simple just move the data inside the fast memory database and this way you",
    "start": "247699",
    "end": "252829"
  },
  {
    "text": "won't need sticky sessions and more nowadays you would probably use Redis for this there are some alternatives",
    "start": "252829",
    "end": "258320"
  },
  {
    "text": "sure and you can also store the cards inside your main database it's like it's not legal but yes there are a few",
    "start": "258320",
    "end": "266990"
  },
  {
    "text": "exceptions where you have a huge very complicated card and you want to keep it with the rest of your data but generally",
    "start": "266990",
    "end": "273620"
  },
  {
    "text": "speaking cards tend to be something the session information so you don't want to",
    "start": "273620",
    "end": "278779"
  },
  {
    "text": "persist like all the stuff and think for example delivery or other food delivery services",
    "start": "278779",
    "end": "284660"
  },
  {
    "text": "either a user completes an order in a few minutes or they want to talk so there is no big reason to persist the",
    "start": "284660",
    "end": "291710"
  },
  {
    "text": "car overnight so in a student car to enable this ability caching again it's a",
    "start": "291710",
    "end": "298820"
  },
  {
    "text": "couple of lines or a couple of statements the same more than two lines but not many are distributed memory",
    "start": "298820",
    "end": "304130"
  },
  {
    "text": "cache to enable disputed caching and add stock exchange readies cache to",
    "start": "304130",
    "end": "309850"
  },
  {
    "text": "configure readies as a back-end for your distributed caching Stack Exchange is",
    "start": "309850",
    "end": "315500"
  },
  {
    "text": "part of it method name because asp net core is using the latest client",
    "start": "315500",
    "end": "320660"
  },
  {
    "text": "developed by them so now you can use the session object just as you did before",
    "start": "320660",
    "end": "325850"
  },
  {
    "text": "but we do have the benefit that the session will now be accessible from all application instances so no more sticky",
    "start": "325850",
    "end": "331820"
  },
  {
    "text": "sessions if you remember i mentioned two problems the first one we just solved by",
    "start": "331820",
    "end": "337850"
  },
  {
    "text": "moving in sessions to Redis but there the second ones to standing and that is in a snit court sessions or browser",
    "start": "337850",
    "end": "344060"
  },
  {
    "text": "sessions not user sessions so this means that if we were to save the card the",
    "start": "344060",
    "end": "349670"
  },
  {
    "text": "card state directly in the session object the same user would see two different cards when logged in from two",
    "start": "349670",
    "end": "355520"
  },
  {
    "text": "different devices normally think you would want your users to be able to continue building their order once they",
    "start": "355520",
    "end": "360770"
  },
  {
    "text": "get home and switch device maybe from a phone to PC or or tablet again the fix",
    "start": "360770",
    "end": "366830"
  },
  {
    "text": "not is a no particularly involved all we need to do is to keep inside the session or reference to the user ID and then use",
    "start": "366830",
    "end": "373190"
  },
  {
    "text": "that information to store and load card data from the I distributed cache interface in this code I'm injecting an",
    "start": "373190",
    "end": "379160"
  },
  {
    "text": "I distributed cache into my controller and then I'm able to access it notice that the cache is not session specific",
    "start": "379160",
    "end": "385760"
  },
  {
    "text": "like HTTP contest doc dot session was so you need to specify in the key name",
    "start": "385760",
    "end": "391670"
  },
  {
    "text": "whose card you are trying to fetch so now we have the card that is user",
    "start": "391670",
    "end": "398720"
  },
  {
    "text": "session specific and not even not browser session specific anymore now users can are able to use different",
    "start": "398720",
    "end": "406340"
  },
  {
    "text": "devices to continue built-in order and they won't experience any service degradation if you are scanning",
    "start": "406340",
    "end": "412040"
  },
  {
    "text": "dynamically in the meantime so congratulations this is how you set up dissipated caching in your system it's really just",
    "start": "412040",
    "end": "418850"
  },
  {
    "text": "a configuration option basically so before we move on to the next subject I just want to encourage you to read the",
    "start": "418850",
    "end": "424580"
  },
  {
    "text": "official documentation to see well as its needed to do a proper production deployment and also some of the generic",
    "start": "424580",
    "end": "430760"
  },
  {
    "text": "methods that I was using of course like get card our extension methods that you are supposed to write and this",
    "start": "430760",
    "end": "437060"
  },
  {
    "text": "documentation explains you how to do it it's mostly about serialization so okay",
    "start": "437060",
    "end": "443870"
  },
  {
    "text": "we spent enough time talking about sessions and I won I think it was important to talk a little about",
    "start": "443870",
    "end": "450130"
  },
  {
    "text": "sessions because everybody has to deal with those problems and also because sessions are in caching our real",
    "start": "450130",
    "end": "457520"
  },
  {
    "text": "coordination problems but there's an industry we understand them fairly well and when a problem is well understood",
    "start": "457520",
    "end": "463640"
  },
  {
    "text": "then you get an easy configuration option in your framework but not every problem that we encounter is just as",
    "start": "463640",
    "end": "469820"
  },
  {
    "text": "easy so let's talk about the kind of problems for which you don't find a configuration option in the dotnet core",
    "start": "469820",
    "end": "476050"
  },
  {
    "text": "as I mention in the beginning I think we don't give enough love to inter service coordination problems and as a",
    "start": "476050",
    "end": "481910"
  },
  {
    "text": "consequence it's not trivial to the host pace of patterns and problems there we can encounter in this scenario for this",
    "start": "481910",
    "end": "488540"
  },
  {
    "text": "reason I'd like to mention a couple of more examples to help us muscles help us map the space a little bit I don't want",
    "start": "488540",
    "end": "495770"
  },
  {
    "text": "to get too much into the details of next one because it's a very deep rabbit hole but I mentioned the main problems",
    "start": "495770",
    "end": "502130"
  },
  {
    "text": "associated with it and there is live chat applications IRC style I hope everybody here has a chance to try or",
    "start": "502130",
    "end": "508640"
  },
  {
    "text": "see in the past or more recently because it's still alive I'm using it and I'm",
    "start": "508640",
    "end": "514280"
  },
  {
    "text": "not alone but just make it clear this is what iris looks like it's just text and",
    "start": "514280",
    "end": "521140"
  },
  {
    "text": "messages are not persisted on server because you're supposed to see only messages sent while you were online and",
    "start": "521140",
    "end": "527000"
  },
  {
    "text": "connected these connections are organizing channels so you connect to a server join a channel or create a new",
    "start": "527000",
    "end": "532970"
  },
  {
    "text": "one or drink more than one and then you are able to chat with other people in the same channels as you are so going",
    "start": "532970",
    "end": "539240"
  },
  {
    "text": "back to the contents of our service box if our application is now chat server so",
    "start": "539240",
    "end": "544700"
  },
  {
    "text": "we're not doing e-commerce and now we repeat it if we scale down like",
    "start": "544700",
    "end": "549920"
  },
  {
    "text": "in the picture how do we make messages sent to one instance reach other instances in the Commerce example there",
    "start": "549920",
    "end": "556820"
  },
  {
    "text": "was no communication between users so we could just be simply distribute requests across multiple instances and that was",
    "start": "556820",
    "end": "563450"
  },
  {
    "text": "it we just needed to take care of the shared State but now if a user is connected to instance one and another",
    "start": "563450",
    "end": "569090"
  },
  {
    "text": "one is connected to instance two and they are in the same Channel how do we make them communicate I might say why",
    "start": "569090",
    "end": "576080"
  },
  {
    "text": "don't we just distribute channels among different instances and have clients make multiple connections if they want",
    "start": "576080",
    "end": "581900"
  },
  {
    "text": "to join multiple channels so you could say if you want to connect two channels a and B you have to connect two instance",
    "start": "581900",
    "end": "587510"
  },
  {
    "text": "one if you want to join channels C and D you have to connect instance two but",
    "start": "587510",
    "end": "596180"
  },
  {
    "text": "guess what I'm doing these introduces a lot of operational problems because now you must be able to address individual",
    "start": "596180",
    "end": "602660"
  },
  {
    "text": "instances and either your clients know how to do this all your love manager knows how to route connections correctly",
    "start": "602660",
    "end": "609140"
  },
  {
    "text": "and it's the session situation all over again but with the only difference that",
    "start": "609140",
    "end": "614330"
  },
  {
    "text": "were before we needed sticky sessions now we need some other kind of routing policy based on the channel name and",
    "start": "614330",
    "end": "621250"
  },
  {
    "text": "like before if you should download an instance you don't just disconnect a few users you're going to completely kill a",
    "start": "621250",
    "end": "626990"
  },
  {
    "text": "few channels which is going to make it hard to do dynamic scaling and if you think about it in this case probably",
    "start": "626990",
    "end": "633830"
  },
  {
    "text": "your clients are going to hold long-running connections to your services something like WebSockets it's",
    "start": "633830",
    "end": "639170"
  },
  {
    "text": "a chat application of the role and so you're going to disconnect somebody while doing dynamic and I'm scaling this",
    "start": "639170",
    "end": "645800"
  },
  {
    "text": "has to happen but one thing is disconnect a few people for a moment another thing is to kill an inter channel completely and you cannot even",
    "start": "645800",
    "end": "653240"
  },
  {
    "text": "design a graceful shutdown procedure for this for this configuration for this",
    "start": "653240",
    "end": "658700"
  },
  {
    "text": "case because to do graceful shutdown you would need to migrate channel from an",
    "start": "658700",
    "end": "663740"
  },
  {
    "text": "instant from the instance that you're shutting down to another one and the only way to do that is we have some kind",
    "start": "663740",
    "end": "670070"
  },
  {
    "text": "of coordination between two instances which is what we were trying to avoid in the beginning so we're back to square one actually square zero so in the",
    "start": "670070",
    "end": "677870"
  },
  {
    "text": "session situations by moving sessions to a distribute the cash we were able to remove a lot of internal",
    "start": "677870",
    "end": "683360"
  },
  {
    "text": "tension in the system and in this other example being able to connect to any channel from any instance has the same",
    "start": "683360",
    "end": "689330"
  },
  {
    "text": "effect because it is what allows us to treat the instances as cattle not as",
    "start": "689330",
    "end": "694430"
  },
  {
    "text": "pets we don't want to have to address instances individually so what we want",
    "start": "694430",
    "end": "702710"
  },
  {
    "text": "is a way to keep a connection up in between all instances and when one receives a new message it can then",
    "start": "702710",
    "end": "708200"
  },
  {
    "text": "broadcast it to all other instances in other words we want to pub sub system now it might surprise you but there",
    "start": "708200",
    "end": "715100"
  },
  {
    "text": "aren't that many pub sub implementations out there pure pops up and more often not one you",
    "start": "715100",
    "end": "721520"
  },
  {
    "text": "will find our queue implementations message queue implementations that also support pops up as a routing scheme",
    "start": "721520",
    "end": "727090"
  },
  {
    "text": "which is fine in general but it becomes unsustainable when you want both high throughput and low latency like in the",
    "start": "727090",
    "end": "733190"
  },
  {
    "text": "case of a real-time chat application pubert sub is a synchronous",
    "start": "733190",
    "end": "738380"
  },
  {
    "text": "fire-and-forget communication pattern where producers publish messages on a channel and all the consumers subscribe",
    "start": "738380",
    "end": "745550"
  },
  {
    "text": "to the channel receiving a message but because it's fire-and-forget there are",
    "start": "745550",
    "end": "751310"
  },
  {
    "text": "no acknowledgments no acts and because it's synchronous there is no persistence",
    "start": "751310",
    "end": "756560"
  },
  {
    "text": "so if you if your client loses its connection or NASA just broadcasted in the meantime will be lost for that",
    "start": "756560",
    "end": "762770"
  },
  {
    "text": "client all these things quite limiting but the truth is that when this is all you need",
    "start": "762770",
    "end": "767930"
  },
  {
    "text": "every other extra feature will potentially introduce leh and complexity with no benefit for you so during qsg",
    "start": "767930",
    "end": "777680"
  },
  {
    "text": "are two very cool socket libraries for implementing pub/sub and a few other messaging patterns they are also",
    "start": "777680",
    "end": "782810"
  },
  {
    "text": "proculus libraries meaning that participants must know how to connect to each other directly they're very cool",
    "start": "782810",
    "end": "789400"
  },
  {
    "text": "there are also very low levels or they are used to basically build networking tools ready pop sub is a brokered",
    "start": "789400",
    "end": "796580"
  },
  {
    "text": "version of pub/sub so you brought readies itself acts as the brokers or every participant connected to Redis and",
    "start": "796580",
    "end": "802520"
  },
  {
    "text": "then ready to us the message routing and I can show you how to use it it's very simple see they can do that correctly so",
    "start": "802520",
    "end": "809750"
  },
  {
    "text": "first of all I have to launch ready server you can see from the cool graphic that it's running also I can show your best practice for",
    "start": "809750",
    "end": "817170"
  },
  {
    "text": "demonizing processes it is so ready CLI is the command-line client for I this",
    "start": "817170",
    "end": "823530"
  },
  {
    "text": "I'm gonna launch two instances and I'm gonna subscribe to channel in one and",
    "start": "823530",
    "end": "829380"
  },
  {
    "text": "that is a simple as sub scribe to maybe ashtag readies the ashtag it's not",
    "start": "829380",
    "end": "838440"
  },
  {
    "text": "mandatory I'm just using it because we were talking about IRC IRC channel start",
    "start": "838440",
    "end": "844560"
  },
  {
    "text": "with a hashtag outside however you want to call it so now this client is connected to pub/sub and subscribe to",
    "start": "844560",
    "end": "851580"
  },
  {
    "text": "the channel Redis so in this order client I can simply publish channel",
    "start": "851580",
    "end": "859440"
  },
  {
    "text": "hashtag Reddy's message hello the moment",
    "start": "859440",
    "end": "864960"
  },
  {
    "text": "is in the message the other channel the other client receives it say it very simple you can also do something more",
    "start": "864960",
    "end": "871590"
  },
  {
    "text": "interesting there is also I recommend not clear but another one called the",
    "start": "871590",
    "end": "877610"
  },
  {
    "text": "SUBSCRIBE and I can P subscribe the P stands for pattern I can pattern",
    "start": "877610",
    "end": "883860"
  },
  {
    "text": "subscribe to every channel the start with bound R so every channel starts with R now if I send a message to Redis",
    "start": "883860",
    "end": "894180"
  },
  {
    "text": "a receive it if I send a message to read it I receive it but if I'm man if the",
    "start": "894180",
    "end": "903810"
  },
  {
    "text": "message is sent to NDC I don't receive it because it doesn't match the pattern",
    "start": "903810",
    "end": "909600"
  },
  {
    "text": "very simple and keep in mind pattern subscribing to a pattern it's not",
    "start": "909600",
    "end": "915720"
  },
  {
    "text": "allocating extra my or is not creating topics there is not none of this stuff channel names in in",
    "start": "915720",
    "end": "922590"
  },
  {
    "text": "in pure pops up there are just simple strings to that the system pattern matches to decide the routing there is",
    "start": "922590",
    "end": "928650"
  },
  {
    "text": "no resource allocation behind this",
    "start": "928650",
    "end": "932420"
  },
  {
    "text": "okay going back to the presentation so",
    "start": "933879",
    "end": "939259"
  },
  {
    "text": "in the case of our chat application then pub/sub is exactly what the application",
    "start": "939259",
    "end": "945230"
  },
  {
    "text": "needs in the sense of a sub is IRC just for applications and not for humans and",
    "start": "945230",
    "end": "951319"
  },
  {
    "text": "I'm sure that there are many applications silently screaming the need if your first stop for solving this went",
    "start": "951319",
    "end": "957949"
  },
  {
    "text": "to Kafka or unserved our enterprise service bus like in service bus or something else just you",
    "start": "957949",
    "end": "965869"
  },
  {
    "text": "read this blog posted abroad for our technical blog in it I discussed the",
    "start": "965869",
    "end": "971059"
  },
  {
    "text": "differences between 0 mq rabid Kafka and a few others and I talked about which",
    "start": "971059",
    "end": "976790"
  },
  {
    "text": "problem is best solved by each and I also recommend it if you want to know",
    "start": "976790",
    "end": "982040"
  },
  {
    "text": "more about the difference between pure pub/sub and a system that is something else that also supports pub/sub is a",
    "start": "982040",
    "end": "988850"
  },
  {
    "text": "routing scheme because the differences are not real so even streams and ESPs are important",
    "start": "988850",
    "end": "995839"
  },
  {
    "text": "fundamental communication mechanisms between different services but my point",
    "start": "995839",
    "end": "1001779"
  },
  {
    "text": "is that top sub is equally important when coordinating instances of the same server of the same service and it's",
    "start": "1001779",
    "end": "1008920"
  },
  {
    "text": "assumed that we don't spend enough time talking about it so let me show you another example that highlights how",
    "start": "1008920",
    "end": "1014619"
  },
  {
    "text": "useful humble pub/sub can be we covered two extremes of the space and my next",
    "start": "1014619",
    "end": "1020920"
  },
  {
    "text": "example is going to be closer to sessions the concept is not new but I wanted to give it a call I wanted to",
    "start": "1020920",
    "end": "1026168"
  },
  {
    "text": "give a cool name to my take on solving it so I called it memory oak so what",
    "start": "1026169",
    "end": "1031209"
  },
  {
    "text": "some amount of time why should you care well there is a problem called cache stampede that you might have heard of",
    "start": "1031209",
    "end": "1036610"
  },
  {
    "text": "and it's something that happens when a service is under heavy load and there is a cache miss on a popular radio so",
    "start": "1036610",
    "end": "1044139"
  },
  {
    "text": "normally on a cache miss you generate an updated version of the missing value and put it back in the cache the problem is",
    "start": "1044139",
    "end": "1049720"
  },
  {
    "text": "that generating that value is not mediate and in the meantime another instance could be trying to do the same thing resulting in duplicate work so if",
    "start": "1049720",
    "end": "1056529"
  },
  {
    "text": "you look at the picture you can see and see if I can use my mouse oh yeah I can so you can see that this instance the",
    "start": "1056529",
    "end": "1062440"
  },
  {
    "text": "one right on the Redis is trying to get through from Redis oops trying to get who from red this",
    "start": "1062440",
    "end": "1070059"
  },
  {
    "text": "doesn't find it then goes on the database retreats the value and saves it",
    "start": "1070059",
    "end": "1076000"
  },
  {
    "text": "back into Redis but in the meantime there's a second instance that is also trying to find four credits doesn't find",
    "start": "1076000",
    "end": "1082179"
  },
  {
    "text": "it and then it does the same thing and this work is completely useless it's just duplicate work so this is a cache",
    "start": "1082179",
    "end": "1088840"
  },
  {
    "text": "stampede and under heavy load this behavior makes things got worse because you are bound to have more and more",
    "start": "1088840",
    "end": "1095200"
  },
  {
    "text": "requests piling up for popular values and popular missing values and this is going to cause more to placate work and",
    "start": "1095200",
    "end": "1101440"
  },
  {
    "text": "if you're eating your database you're going to even slow down more producing",
    "start": "1101440",
    "end": "1107110"
  },
  {
    "text": "that value which is going to enlarge make it wider your Stampede window so",
    "start": "1107110",
    "end": "1113200"
  },
  {
    "text": "it's a vicious cycle and how do we break out of it there are a few different ways",
    "start": "1113200",
    "end": "1119110"
  },
  {
    "text": "to mitigate this problem some require good statistical knowledge of your domain so I'll skip them because they",
    "start": "1119110",
    "end": "1124600"
  },
  {
    "text": "are too specific in a way and this leaves us with everybody's most dreaded part of concurrency locks by one you may",
    "start": "1124600",
    "end": "1132850"
  },
  {
    "text": "not well you might not like them they're the diet of choice for for philosophers out of five so they're not that bad but",
    "start": "1132850",
    "end": "1140710"
  },
  {
    "text": "all jokes aside locks can be useful when used with persimmony so by protecting",
    "start": "1140710",
    "end": "1147760"
  },
  {
    "text": "each value with a lock we ensure that only one process can hit database and that completely prevents the stampede so",
    "start": "1147760",
    "end": "1154840"
  },
  {
    "text": "our skin at that point would be I tried to search for full-on righties I don't find it so before going blindly",
    "start": "1154840",
    "end": "1162940"
  },
  {
    "text": "hitting it on to the database I try to acquire a lock for foo if I and I only",
    "start": "1162940",
    "end": "1168850"
  },
  {
    "text": "go on to the database if I cry now if I if I can acquire that lock so ok",
    "start": "1168850",
    "end": "1177190"
  },
  {
    "text": "this sounds simple on paper a concurrence is never easy right so let",
    "start": "1177190",
    "end": "1182559"
  },
  {
    "text": "me show you how to do locks with trellis",
    "start": "1182559",
    "end": "1186690"
  },
  {
    "text": "so ready this is a key value store right there are a few different data types the simple one is our strings of course so I",
    "start": "1191410",
    "end": "1199100"
  },
  {
    "text": "can set swing I can set foo - hello",
    "start": "1199100",
    "end": "1204430"
  },
  {
    "text": "these crates full I can get then fool if I get foo I get my hello back super easy",
    "start": "1204430",
    "end": "1210920"
  },
  {
    "text": "I can also delete it okay I can also do something more I can do",
    "start": "1210920",
    "end": "1216650"
  },
  {
    "text": "set lock call okay lock column foo -",
    "start": "1216650",
    "end": "1223780"
  },
  {
    "text": "right but I can say I want to set it only if the key does not exist before",
    "start": "1223780",
    "end": "1231110"
  },
  {
    "text": "because otherwise it would override the existing key so with this command I get",
    "start": "1231110",
    "end": "1236840"
  },
  {
    "text": "to play the first time but let's say I try again and instead of hi I try Xiao",
    "start": "1236840",
    "end": "1242110"
  },
  {
    "text": "this time I don't get ok I get Neil and if I try to get full sorry lock column I",
    "start": "1242110",
    "end": "1251470"
  },
  {
    "text": "get high I don't get chow because the NX option not existing makes the command",
    "start": "1251470",
    "end": "1258410"
  },
  {
    "text": "work only if the key does not exist yet this is enough to make a lock but not",
    "start": "1258410",
    "end": "1264170"
  },
  {
    "text": "enough because in a distributed system a lock that never expires is useless",
    "start": "1264170",
    "end": "1269450"
  },
  {
    "text": "because something is going to blow up and acquire the lock forever otherwise so you need a locks that expire over",
    "start": "1269450",
    "end": "1276500"
  },
  {
    "text": "time and that's as simple as adding another option so I can delete this",
    "start": "1276500",
    "end": "1282020"
  },
  {
    "text": "weird lock and now I can create a lock listen let's",
    "start": "1282020",
    "end": "1290930"
  },
  {
    "text": "start with the chattel value and I create it with an expired so I can expire it after five seconds so",
    "start": "1290930",
    "end": "1297580"
  },
  {
    "text": "now I create the value I can get it but",
    "start": "1297580",
    "end": "1304190"
  },
  {
    "text": "after five seconds the key doesn't exist anymore and I can get it anymore so the key word the block was released this is",
    "start": "1304190",
    "end": "1310250"
  },
  {
    "text": "actually a lease unlock but this is what it's useful to have so very simple it's",
    "start": "1310250",
    "end": "1315680"
  },
  {
    "text": "one command two options you can also specify the expire in more than just",
    "start": "1315680",
    "end": "1320780"
  },
  {
    "text": "seconds can be more precise than that but that's easier to present so when I'm",
    "start": "1320780",
    "end": "1326000"
  },
  {
    "text": "back to our sample code this becomes this the value is probably best if it's",
    "start": "1326000",
    "end": "1334580"
  },
  {
    "text": "a unique ID or something like this because then you can know if that lock knowing that the lock exists doesn't",
    "start": "1334580",
    "end": "1340070"
  },
  {
    "text": "tell you if you are the one holding it or not so a unique value helps you it's called financing had to understand",
    "start": "1340070",
    "end": "1346550"
  },
  {
    "text": "that and avoid doing work about doing like a right try this if you're not the",
    "start": "1346550",
    "end": "1352370"
  },
  {
    "text": "one holding a lock anymore so now what",
    "start": "1352370",
    "end": "1357440"
  },
  {
    "text": "do we do if we don't quire the lock well in that case there it means that there is somebody that somebody else that's",
    "start": "1357440",
    "end": "1364010"
  },
  {
    "text": "producing the value and if only there was a way to get notified when they're done right and if you think about it",
    "start": "1364010",
    "end": "1372020"
  },
  {
    "text": "possibly is exactly what we need in that situation we just want a live notification we don't want to be woken",
    "start": "1372020",
    "end": "1377630"
  },
  {
    "text": "up at 5:00 because there's our hard drives are filled with undelivered messages it's only something useful",
    "start": "1377630",
    "end": "1383390"
  },
  {
    "text": "while the application is still alive the instance is still alive so for the sake of completeness if we were able to",
    "start": "1383390",
    "end": "1390950"
  },
  {
    "text": "acquire the lock we should also then publish on pub/sub that we are done so this is a more complete version of that",
    "start": "1390950",
    "end": "1397370"
  },
  {
    "text": "code so you may now ask okay how much am i over simplifying this code well I'm",
    "start": "1397370",
    "end": "1406010"
  },
  {
    "text": "not over simplifying that much there are only two things that I'm not showing one is time of handling because okay the",
    "start": "1406010",
    "end": "1411800"
  },
  {
    "text": "local expires that's cool but you cannot stay forever waiting on pub/sub for a notification that it's never going to",
    "start": "1411800",
    "end": "1418250"
  },
  {
    "text": "come potentially so you need to timeout out of that the second one is that you need",
    "start": "1418250",
    "end": "1424810"
  },
  {
    "text": "to check for the key again inside radius after you subscribe let me show you this a little bit better so the whole scheme",
    "start": "1424810",
    "end": "1430630"
  },
  {
    "text": "is if I get foo I try to get food from readies I find it I'm done if I don't",
    "start": "1430630",
    "end": "1436270"
  },
  {
    "text": "find it I thought to occur the lock if I can't acquire the lock then I subscribe but between when I try to get foo and",
    "start": "1436270",
    "end": "1443560"
  },
  {
    "text": "when I subscribed there is a small window in which the other process might have finished producing foo and sent out",
    "start": "1443560",
    "end": "1451150"
  },
  {
    "text": "an application and it would miss it because I'm not yet subscribed so after you subscribe we need to get full again",
    "start": "1451150",
    "end": "1458770"
  },
  {
    "text": "to make sure to basically close that window that's one way of something it also alternative ways so oh sorry",
    "start": "1458770",
    "end": "1469150"
  },
  {
    "text": "skipping one part so basically what my implementation does is this all you need",
    "start": "1469150",
    "end": "1475870"
  },
  {
    "text": "to do is provide do work in this part here your function that does produce the work and inside your fraction you can do",
    "start": "1475870",
    "end": "1482950"
  },
  {
    "text": "whatever you want you don't you are not constrained to only take values out of a database you could produce them in other",
    "start": "1482950",
    "end": "1489040"
  },
  {
    "text": "ways you could run our file store it on a CDN and just then put a link inside radius as example and this brings me why",
    "start": "1489040",
    "end": "1497590"
  },
  {
    "text": "I call it memory Ock because it's memorization in a distributed context so",
    "start": "1497590",
    "end": "1502900"
  },
  {
    "text": "it requires locking memorization was locking if you never heard of memorization which is it's not the type",
    "start": "1502900",
    "end": "1507970"
  },
  {
    "text": "it's memorization not memorization you can search for it on Wikipedia long",
    "start": "1507970",
    "end": "1513940"
  },
  {
    "text": "story short it's the concept of caching function calls and so instead you run a",
    "start": "1513940",
    "end": "1519760"
  },
  {
    "text": "function once and then you save that out put inside a dictionary and use the",
    "start": "1519760",
    "end": "1524920"
  },
  {
    "text": "input that you give to that function as the key so the next time somebody is given the same input to your function",
    "start": "1524920",
    "end": "1530110"
  },
  {
    "text": "you just return the cash value from a dictionary instead of running the function again I'm slightly abusing the term because",
    "start": "1530110",
    "end": "1537430"
  },
  {
    "text": "usually this is a mathematical concept that applies to pure functions here's nothing exactly the same but in practice",
    "start": "1537430",
    "end": "1543220"
  },
  {
    "text": "can work you can use the same concept to apply caching to normal functions",
    "start": "1543220",
    "end": "1548820"
  },
  {
    "text": "so the code is available on github Christoph - Nettie is my account on",
    "start": "1548820",
    "end": "1554170"
  },
  {
    "text": "github and the repository is called readies - Malik I have two implementations up there one is a shift",
    "start": "1554170",
    "end": "1559960"
  },
  {
    "text": "Sharpe implementation one is a go implementation it's interesting to look at the two implementations and see how",
    "start": "1559960",
    "end": "1566200"
  },
  {
    "text": "concurrency is handled differently between different in different ecosystems and also they can",
    "start": "1566200",
    "end": "1574450"
  },
  {
    "text": "interoperate so you can have go be producing a value and in the meantime have a few c-sharp instances waiting for",
    "start": "1574450",
    "end": "1581380"
  },
  {
    "text": "the gunk shown to complete because they are gonna communicate through pub/sub and so they stick to the language the",
    "start": "1581380",
    "end": "1589540"
  },
  {
    "text": "only thing you have to be careful about is using a sane serious sterilization protocol because you will need to",
    "start": "1589540",
    "end": "1595780"
  },
  {
    "text": "serialize and deserialize stuff from both languages so I want to say a couple",
    "start": "1595780",
    "end": "1602320"
  },
  {
    "text": "of words about Redis this is the 2019",
    "start": "1602320",
    "end": "1607390"
  },
  {
    "text": "stack overflow survey and like last year right this has been voted the most loved database and if you've never heard about",
    "start": "1607390",
    "end": "1613810"
  },
  {
    "text": "Reddy's or you've only used it for caching you might ask yourself why is that is it because it's fast a lot of",
    "start": "1613810",
    "end": "1620620"
  },
  {
    "text": "people are selling religious fast but I don't think that's the case I think it's because it helps you solve these types",
    "start": "1620620",
    "end": "1627130"
  },
  {
    "text": "of coordination problems in easy with ease with simplicity and because it's",
    "start": "1627130",
    "end": "1632980"
  },
  {
    "text": "fast Redis is all about simplicity which keep in mind doesn't mean making things",
    "start": "1632980",
    "end": "1639250"
  },
  {
    "text": "easy it means making things not more complicated than they have to be even",
    "start": "1639250",
    "end": "1645100"
  },
  {
    "text": "when you're doing not easy things like concurrency Redis gives you small orthogonal pieces then you then compose",
    "start": "1645100",
    "end": "1651700"
  },
  {
    "text": "together to make a perfect felishj solution for your use case and then from that you get speed maintainability a",
    "start": "1651700",
    "end": "1657550"
  },
  {
    "text": "reliability or all the good stuff also going back to our spectrum that I were",
    "start": "1657550",
    "end": "1664630"
  },
  {
    "text": "showing of coordination problems inside a single service you can see that there",
    "start": "1664630",
    "end": "1670000"
  },
  {
    "text": "is a big hole in there so what's in it the answer is I have no idea I don't",
    "start": "1670000",
    "end": "1675220"
  },
  {
    "text": "know I think we don't talk enough about this stuff and I yeah I can come up with a couple more examples",
    "start": "1675220",
    "end": "1682320"
  },
  {
    "text": "in my previous jobs and probably there's a piece of literature out there that has a few more but there are not",
    "start": "1682320",
    "end": "1691350"
  },
  {
    "text": "configuration options in a framework and you might have seen some of these situations and maybe not recognized it",
    "start": "1691350",
    "end": "1698850"
  },
  {
    "text": "one thing that I noticed is that when you don't get coordination right you end up with operational problems so if you",
    "start": "1698850",
    "end": "1705720"
  },
  {
    "text": "think about past systems that you worked on that had that were nasty to operate",
    "start": "1705720",
    "end": "1712890"
  },
  {
    "text": "and maybe that was because coordination within the service was not handled correctly so if you can think of some",
    "start": "1712890",
    "end": "1720720"
  },
  {
    "text": "let me know because I would love to give an updated version of this presentation where I just enumerate the problems and",
    "start": "1720720",
    "end": "1726720"
  },
  {
    "text": "the relative configuration option in a slot net that would be nice to have so",
    "start": "1726720",
    "end": "1732690"
  },
  {
    "text": "before I show you the code quick commercial break I work for a company called Redis labs we are a company of",
    "start": "1732690",
    "end": "1737970"
  },
  {
    "text": "people that love Redis and we also work class right these experts bring each",
    "start": "1737970",
    "end": "1743580"
  },
  {
    "text": "statement I know but while we employ the creative readies and tourettes so got to shoot the town for something",
    "start": "1743580",
    "end": "1749730"
  },
  {
    "text": "but it's not just in everybody in Redis Labs has a ton of experience with Redis and we're also hiring so if you love",
    "start": "1749730",
    "end": "1756630"
  },
  {
    "text": "readies let me know you don't have to be a world-class expert don't worry because we can make one out of you what do we do",
    "start": "1756630",
    "end": "1763800"
  },
  {
    "text": "we developed Redis enterprise and also if you read these modules that work also",
    "start": "1763800",
    "end": "1769200"
  },
  {
    "text": "on open source Redis and Redis Enterprise is basically readies +",
    "start": "1769200",
    "end": "1774780"
  },
  {
    "text": "enterprise stuff on top and you can have it as a software and run it yourself on",
    "start": "1774780",
    "end": "1780120"
  },
  {
    "text": "communities which are flavor you like or you can't have world-class experts run it for you as a service dbaas",
    "start": "1780120",
    "end": "1786960"
  },
  {
    "text": "or in your V PC at a bless DCP is your",
    "start": "1786960",
    "end": "1792050"
  },
  {
    "text": "name it you can have it ok let's go on to code and demo this part I didn't",
    "start": "1792050",
    "end": "1799830"
  },
  {
    "text": "rehearse so bear with me I'll try to do my best I can see that the resolution is",
    "start": "1799830",
    "end": "1805920"
  },
  {
    "text": "even better than I anticipated so I can zoom in a little bit to make it easier for you maybe yes ok so this is a",
    "start": "1805920",
    "end": "1814700"
  },
  {
    "text": "controller I just set up a very basic project with the.net command line tool",
    "start": "1814890",
    "end": "1822150"
  },
  {
    "text": "and this is just a very simple query controller I can show you the interface of my radius numeric class so different",
    "start": "1822150",
    "end": "1832320"
  },
  {
    "text": "to what I showed in the slides I'm just doing one extra thing which is I'm",
    "start": "1832320",
    "end": "1840150"
  },
  {
    "text": "giving a name space to our items inside radius named sizes are cool so this",
    "start": "1840150",
    "end": "1845340"
  },
  {
    "text": "allows you to deal with different objects with ease so the naming scheme",
    "start": "1845340",
    "end": "1851040"
  },
  {
    "text": "becomes then I created here already smell ugh to cache query object so in",
    "start": "1851040",
    "end": "1856950"
  },
  {
    "text": "this example I'm cashing query object so I create a radius by malach I say that this the tag for this type of objects is",
    "start": "1856950",
    "end": "1864330"
  },
  {
    "text": "query so the naming scheme becomes query column foo is the key that will all the",
    "start": "1864330",
    "end": "1870120"
  },
  {
    "text": "value query - lock solid slash lock column foo is the name of the lock key",
    "start": "1870120",
    "end": "1877830"
  },
  {
    "text": "and query slash not if is the name of the notification channel as you can see",
    "start": "1877830",
    "end": "1885270"
  },
  {
    "text": "the usage interface is very simple you define timeout for your request and then",
    "start": "1885270",
    "end": "1891330"
  },
  {
    "text": "just invoke get resource you give it a resource ID how long should the request",
    "start": "1891330",
    "end": "1896970"
  },
  {
    "text": "wait before time going in timeout and you supply a function inside your function you generate your value so in",
    "start": "1896970",
    "end": "1905010"
  },
  {
    "text": "this case real example would be going on to the database and faction the query",
    "start": "1905010",
    "end": "1910890"
  },
  {
    "text": "set but here I'm just gonna sleep to simulate the type of work and in the end your function has to return what you",
    "start": "1910890",
    "end": "1918570"
  },
  {
    "text": "want to cash in try this so what the value is and for how long that value should be cached before expiring I can",
    "start": "1918570",
    "end": "1927720"
  },
  {
    "text": "show you this running so I can launch the project",
    "start": "1927720",
    "end": "1934460"
  },
  {
    "text": "okay I'm also using curl to great",
    "start": "1936830",
    "end": "1942720"
  },
  {
    "text": "request for Aldo deathcore app I'm using the - key up - K option because I",
    "start": "1942720",
    "end": "1949590"
  },
  {
    "text": "haven't stopped properly HTTP luckily I have no certificates so that allows me",
    "start": "1949590",
    "end": "1956519"
  },
  {
    "text": "to use it nevertheless so here I'm calling query simple foo so pretty",
    "start": "1956519",
    "end": "1961889"
  },
  {
    "text": "simple - is is this handler here that I was showing you before query simple",
    "start": "1961889",
    "end": "1968659"
  },
  {
    "text": "let's see what happens I'm gonna launch it at the same time what kind at the same time from both",
    "start": "1968659",
    "end": "1975980"
  },
  {
    "text": "consoles so you will see that calling it twice he's gonna cause working hard to",
    "start": "1975980",
    "end": "1983909"
  },
  {
    "text": "show up only once and they will both return the value at the same time that",
    "start": "1983909",
    "end": "1990000"
  },
  {
    "text": "comments that log line is something I defined in here so this function only executes once one of the two clients go",
    "start": "1990000",
    "end": "1997620"
  },
  {
    "text": "through lock executed job the other one was just waiting on box up extremely simple there's another example which is",
    "start": "1997620",
    "end": "2006049"
  },
  {
    "text": "the external controller the external controller uses get externally managed",
    "start": "2006049",
    "end": "2012200"
  },
  {
    "text": "resource and the idea is that maybe in your handler you don't you're not the",
    "start": "2012200",
    "end": "2019940"
  },
  {
    "text": "one that is going to produce the value maybe you have an external executable that is going to produce it something",
    "start": "2019940",
    "end": "2025760"
  },
  {
    "text": "like PDF generating library for example and so here I'm just invoking the",
    "start": "2025760",
    "end": "2032990"
  },
  {
    "text": "command which in in this case it's a Python script that it's gonna run a stammer so one of those tools of natural",
    "start": "2032990",
    "end": "2041000"
  },
  {
    "text": "language processing that gives you the radix of a word remove suffixes and and",
    "start": "2041000",
    "end": "2047720"
  },
  {
    "text": "that's it I don't even here I'm not even waiting for it to complete executing I don't care because that executable is",
    "start": "2047720",
    "end": "2054888"
  },
  {
    "text": "going to communicate with the rest of the system through pops up so let me show you the script is actually here and",
    "start": "2054889",
    "end": "2060888"
  },
  {
    "text": "stammer dot P I is just Python script that uses the a and ldk stammer",
    "start": "2060889",
    "end": "2068050"
  },
  {
    "text": "produces the stem of input value and uses the appropriate scheme to set up",
    "start": "2068050",
    "end": "2074138"
  },
  {
    "text": "set the key with the value and produce a notification on pops up so let me try to",
    "start": "2074139",
    "end": "2079628"
  },
  {
    "text": "run this in this case it's e XD - C keep",
    "start": "2079629",
    "end": "2089888"
  },
  {
    "text": "forgetting standard okay cool next stammer singing I'm gonna choose",
    "start": "2089889",
    "end": "2097660"
  },
  {
    "text": "singing as a word I don't do the same here e XD",
    "start": "2097660",
    "end": "2111210"
  },
  {
    "text": "actually anyway I'm gonna do it twice whatever again",
    "start": "2114080",
    "end": "2120360"
  },
  {
    "text": "steamer shows up only once in or the log line and you can see that both got the",
    "start": "2120360",
    "end": "2127620"
  },
  {
    "text": "result from a Python script and it's very easy to integrate this stuff because the only integration surface is",
    "start": "2127620",
    "end": "2135020"
  },
  {
    "text": "one client library into commands subscribe and publish let me show you",
    "start": "2135020",
    "end": "2141120"
  },
  {
    "text": "what I do in practice inside my implementation so the go implementation",
    "start": "2141120",
    "end": "2147600"
  },
  {
    "text": "is a full-fledged galang module so you can actually import it if you're using a",
    "start": "2147600",
    "end": "2152610"
  },
  {
    "text": "new version of go I haven't done all the work on the necessary work to do it also",
    "start": "2152610",
    "end": "2157770"
  },
  {
    "text": "in c-sharp because also because in the shop probably to make this useful you would need to do all the end to get the",
    "start": "2157770",
    "end": "2164670"
  },
  {
    "text": "encapsulation right I'm lazy so I I just did the minimal amount of work to show",
    "start": "2164670",
    "end": "2170400"
  },
  {
    "text": "what what the actual algorithm is so let me start with the main body of our",
    "start": "2170400",
    "end": "2177120"
  },
  {
    "text": "function which is get resource which is the implementation that works behind the scenes under behind a few public",
    "start": "2177120",
    "end": "2184770"
  },
  {
    "text": "interfaces so first we and it's one one slides almost so first we check if the",
    "start": "2184770",
    "end": "2193080"
  },
  {
    "text": "resource available on Redis if we find it we return immediately if you don't find it then we try to acquire the lock",
    "start": "2193080",
    "end": "2198330"
  },
  {
    "text": "if we get the lock then we do the job the difference is that if it's an",
    "start": "2198330",
    "end": "2203370"
  },
  {
    "text": "externally managed job so we just read invoke an external process and that process is gonna do the publishing then",
    "start": "2203370",
    "end": "2210390"
  },
  {
    "text": "we don't do anything otherwise if it's a c-sharp function like the first example that I showed you then we take the",
    "start": "2210390",
    "end": "2217170"
  },
  {
    "text": "result from that function this is our this is our do work function that you passed in as an input as a anonymous",
    "start": "2217170",
    "end": "2224940"
  },
  {
    "text": "function then we run it take the value and store it inside radius respecting",
    "start": "2224940",
    "end": "2230760"
  },
  {
    "text": "the TPL the time to leave that you defined for it and that's pretty much it",
    "start": "2230760",
    "end": "2239670"
  },
  {
    "text": "for that case in case we don't find we don't acquire the lock we can't acquire",
    "start": "2239670",
    "end": "2244930"
  },
  {
    "text": "so then we have to subscribe to pop sub and I'm doing this with this setup",
    "start": "2244930",
    "end": "2250990"
  },
  {
    "text": "notification function these thing here things get a bit more involved as I will",
    "start": "2250990",
    "end": "2256120"
  },
  {
    "text": "show you later but the main end time of handling again very simple I create a",
    "start": "2256120",
    "end": "2264310"
  },
  {
    "text": "time out test and then I await on both the time out task and the time out and",
    "start": "2264310",
    "end": "2269320"
  },
  {
    "text": "the task that should come back with a result from the identification the first one that returns is the one that is",
    "start": "2269320",
    "end": "2275470"
  },
  {
    "text": "gonna decide what happens with this method so if it's time out we're gonna throw out them at a session if it's not",
    "start": "2275470",
    "end": "2281950"
  },
  {
    "text": "a time out we just return the value and we're done so it has to be all a sink",
    "start": "2281950",
    "end": "2287950"
  },
  {
    "text": "await because you can return the value immediately if you run the function if you are the one producing the value but",
    "start": "2287950",
    "end": "2293230"
  },
  {
    "text": "if you're not the one producing the value of course you need a task or something along those lines so set up a",
    "start": "2293230",
    "end": "2301090"
  },
  {
    "text": "notification is a bit more involved because we are not so using the status",
    "start": "2301090",
    "end": "2306640"
  },
  {
    "text": "change client if you just call subscribe ten times you will instantiate 10",
    "start": "2306640",
    "end": "2312850"
  },
  {
    "text": "connections there and each is going to subscribe to one channel and you don't want to do that you want one connection",
    "start": "2312850",
    "end": "2318280"
  },
  {
    "text": "that subscribes multiple channels in this case I'm subscribing with a pattern so I'm subscribing to all resources of",
    "start": "2318280",
    "end": "2326110"
  },
  {
    "text": "the type that are handled by by this controller so with the query type this",
    "start": "2326110",
    "end": "2331810"
  },
  {
    "text": "would subscribe to all channels that start with query selection not've so",
    "start": "2331810",
    "end": "2338980"
  },
  {
    "text": "internally I'm gonna basically multiplex that connection I'm gonna keep in memory",
    "start": "2338980",
    "end": "2345330"
  },
  {
    "text": "dictionary that contains for each channel a list of tasks that are",
    "start": "2345330",
    "end": "2351340"
  },
  {
    "text": "awaiting for a notification coming for the in that channel so there is a there",
    "start": "2351340",
    "end": "2358390"
  },
  {
    "text": "is a dictionary then that is shared I can show it on top when I see it this is",
    "start": "2358390",
    "end": "2363520"
  },
  {
    "text": "a concurrent dictionary it has to be concurrent dictionary because you could schedule all of this function in",
    "start": "2363520",
    "end": "2369070"
  },
  {
    "text": "different threads you could undo concurrency however you want on while calling the functions so",
    "start": "2369070",
    "end": "2375190"
  },
  {
    "text": "we need to ensure that we don't do something wrong by touching by having two threads",
    "start": "2375190",
    "end": "2380870"
  },
  {
    "text": "touching the same dictionary at the same time unless it's a concurrent dictionary and concurrently Chinese basically give",
    "start": "2380870",
    "end": "2387170"
  },
  {
    "text": "you this add or update function which is interesting because basically you give",
    "start": "2387170",
    "end": "2394250"
  },
  {
    "text": "it the key that you want to block create or change inside your dictionary and",
    "start": "2394250",
    "end": "2399530"
  },
  {
    "text": "then you give it a lambda function in which you do the you apply the change",
    "start": "2399530",
    "end": "2405320"
  },
  {
    "text": "that you want it's very easy then it's a one-liner and this way and completely",
    "start": "2405320",
    "end": "2411410"
  },
  {
    "text": "avoiding any kind of weird coordination weird concurrency problem within c-sharp",
    "start": "2411410",
    "end": "2418010"
  },
  {
    "text": "so after I subscribe to the notification then I check again on the database if",
    "start": "2418010",
    "end": "2423500"
  },
  {
    "text": "the key is available as I told you before because I there is that small window that would otherwise make this",
    "start": "2423500",
    "end": "2432490"
  },
  {
    "text": "algorithm wrong let me show you where I set up the the pub/sub subscription here",
    "start": "2432490",
    "end": "2442910"
  },
  {
    "text": "I'm creating a Redis channel I'm telling to the client that it's a pattern",
    "start": "2442910",
    "end": "2448190"
  },
  {
    "text": "Channel so the star should not be taken literally like if you use subscribe and a star not be subscribed then the star",
    "start": "2448190",
    "end": "2455750"
  },
  {
    "text": "will have a literal meaning will not have the pattern meaning the usual pattern meaning meaning any type any",
    "start": "2455750",
    "end": "2462860"
  },
  {
    "text": "character after me after the previous one so when I subscribe I just give it a",
    "start": "2462860",
    "end": "2470230"
  },
  {
    "text": "handler function and that handler function has to basically do only one",
    "start": "2470230",
    "end": "2477710"
  },
  {
    "text": "thing receive and I receive a message the message will contain in it you will",
    "start": "2477710",
    "end": "2483620"
  },
  {
    "text": "receive then to which channel the message was sent because you subscribe",
    "start": "2483620",
    "end": "2489140"
  },
  {
    "text": "to a pattern so you have to know which precise channel the message was sent to and then the actual message body and",
    "start": "2489140",
    "end": "2494870"
  },
  {
    "text": "here all I'm doing is trying to remove that key in order to obtain a wait list",
    "start": "2494870",
    "end": "2501740"
  },
  {
    "text": "and then I'm just gonna iterate over the wait list and resolve all tests within",
    "start": "2501740",
    "end": "2509390"
  },
  {
    "text": "it one other interesting thing is that usually if you just create a normal tasks tasks are supposed to be resolved",
    "start": "2509390",
    "end": "2516080"
  },
  {
    "text": "by functions that do normally IO in this case we are treating a special type of",
    "start": "2516080",
    "end": "2521990"
  },
  {
    "text": "task that is manually triggered by us at a later stage here we're triggering it",
    "start": "2521990",
    "end": "2527030"
  },
  {
    "text": "but let me show you where I instantiate it here I'm creating a task completion",
    "start": "2527030",
    "end": "2533180"
  },
  {
    "text": "source which is the type of task that then exposes a method to manually trigger it by using try set result",
    "start": "2533180",
    "end": "2541070"
  },
  {
    "text": "there's also a few methods to fail it and do all the normal stuff that you expect from from tasks so before I",
    "start": "2541070",
    "end": "2551110"
  },
  {
    "text": "include the top let me show you one last example it's a bit corny but I took the",
    "start": "2551110",
    "end": "2557330"
  },
  {
    "text": "time to write it and I wanted to show it I created another handler which contains",
    "start": "2557330",
    "end": "2563840"
  },
  {
    "text": "as I said a corny joke so text slash joke so take a look at what happens in",
    "start": "2563840",
    "end": "2573710"
  },
  {
    "text": "the dotnet run console so the great nut",
    "start": "2573710",
    "end": "2581750"
  },
  {
    "text": "net current time is speaking to us and it's asking us to determine if one is a",
    "start": "2581750",
    "end": "2587330"
  },
  {
    "text": "prime number or not so it's up to us to find that solution I'll give you a",
    "start": "2587330",
    "end": "2593870"
  },
  {
    "text": "moment to think about this in the meantime I'm gonna open Redis already",
    "start": "2593870",
    "end": "2601000"
  },
  {
    "text": "awry so it is up to us raise your hand",
    "start": "2601000",
    "end": "2607970"
  },
  {
    "text": "if you think that one is not a prime number if it is if you don't care okay a",
    "start": "2607970",
    "end": "2617540"
  },
  {
    "text": "few no to sorry is it like it's a yes well let's see so",
    "start": "2617540",
    "end": "2626300"
  },
  {
    "text": "I have to set ext dot one two yes and",
    "start": "2626300",
    "end": "2633100"
  },
  {
    "text": "then publish to X",
    "start": "2633100",
    "end": "2642230"
  },
  {
    "text": "t / not if con 1 yes do we make it in",
    "start": "2642230",
    "end": "2649800"
  },
  {
    "text": "time yes we did and at the end of the day or current time doesn't even care",
    "start": "2649800",
    "end": "2657570"
  },
  {
    "text": "but this is to showcase that the integration surface is so small that I",
    "start": "2657570",
    "end": "2662850"
  },
  {
    "text": "can do it in a client come online easily so that's that's it thank you very much",
    "start": "2662850",
    "end": "2669540"
  },
  {
    "text": "for listening [Applause]",
    "start": "2669540",
    "end": "2677360"
  },
  {
    "text": "sure",
    "start": "2677360",
    "end": "2680360"
  },
  {
    "text": "so I'm subscribing for the channel would be a cleanup procedure that you do when you are shutting down your service",
    "start": "2684210",
    "end": "2690780"
  },
  {
    "text": "basically or when you are destroying the instance of a specific radius memo LOC",
    "start": "2690780",
    "end": "2697400"
  },
  {
    "text": "object in general you don't subscribe to the single one to the single channel",
    "start": "2697400",
    "end": "2703110"
  },
  {
    "text": "because you are subscribed to a pattern so you want to get all notifications coming to the red pattern and the",
    "start": "2703110",
    "end": "2709680"
  },
  {
    "text": "SUBSCRIBE and subscribe in a sense I'm doing it manually inside my handler by",
    "start": "2709680",
    "end": "2715560"
  },
  {
    "text": "removing from the dictionary object the list of colors of cortines whatever you",
    "start": "2715560",
    "end": "2722580"
  },
  {
    "text": "want to call them frames waiting for a notification on that channel so that's in a way my unsubscription that happens",
    "start": "2722580",
    "end": "2731330"
  },
  {
    "text": "are there any other questions since not",
    "start": "2731330",
    "end": "2737970"
  },
  {
    "text": "so then thank you very much",
    "start": "2737970",
    "end": "2741530"
  }
]