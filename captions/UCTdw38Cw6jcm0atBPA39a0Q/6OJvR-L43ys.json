[
  {
    "start": "0",
    "end": "159000"
  },
  {
    "text": "hey everyone welcome to myself talk in NDC about architecting your next single",
    "start": "3870",
    "end": "11309"
  },
  {
    "text": "page application my name is Dinah sure but we'll get to the details a little later and we'll start with a little bit",
    "start": "11309",
    "end": "18810"
  },
  {
    "text": "of an agenda on what we're going to talk about today so we're going to start",
    "start": "18810",
    "end": "24240"
  },
  {
    "text": "about the state of single page applications and maybe JavaScript in general just so we'll be on the same",
    "start": "24240",
    "end": "30449"
  },
  {
    "text": "line and then we're going to talk about some of the best practices for building",
    "start": "30449",
    "end": "36030"
  },
  {
    "text": "single page applications I'm trying to highlight every time that I'm saying things that are my specific well",
    "start": "36030",
    "end": "44700"
  },
  {
    "text": "opinions but I might not always catch these so if you flag anything that seems",
    "start": "44700",
    "end": "51570"
  },
  {
    "text": "suspicious feel free to ask questions at the end of the presentation the last part really is about choosing",
    "start": "51570",
    "end": "57930"
  },
  {
    "text": "or how to choose your next single paid application library because there's a few tips there and I think a lot of us",
    "start": "57930",
    "end": "64978"
  },
  {
    "text": "makes those mistakes om at the end we're going to have a short question session",
    "start": "64979",
    "end": "71820"
  },
  {
    "text": "there's a mic here if that doesn't work details for contacting me are on the",
    "start": "71820",
    "end": "78179"
  },
  {
    "text": "next slide and feel free to send me emails or tweets so let's start my name",
    "start": "78179",
    "end": "83969"
  },
  {
    "text": "is guy nature I work as a consultant in a company called a code value in Israel I worked at in London for several years",
    "start": "83969",
    "end": "91350"
  },
  {
    "text": "and I've been doing single paid applications from the very beginning from when that one came out in around",
    "start": "91350",
    "end": "98509"
  },
  {
    "text": "2010 I think this is my email this is my twitter my twitter is calling locked so",
    "start": "98509",
    "end": "105719"
  },
  {
    "text": "if you tweet to me it's not and I'm not answering it's not that I don't like you it's that twitter doesn't like me I",
    "start": "105719",
    "end": "111179"
  },
  {
    "text": "can't open it without my Israeli team so it'll take a few days I'd like to start",
    "start": "111179",
    "end": "118679"
  },
  {
    "text": "my presentations with some reassuring world so trust me I'm a lawyer I do this",
    "start": "118679",
    "end": "126060"
  },
  {
    "text": "generally for two purposes a because I think people believe that lawyers are",
    "start": "126060",
    "end": "131720"
  },
  {
    "text": "trustworthy people and the other part is that I'm obviously",
    "start": "131720",
    "end": "137250"
  },
  {
    "text": "made mistakes in the past but I'm willing to admit them and move on and I think that's a good thing when we're",
    "start": "137250",
    "end": "142590"
  },
  {
    "text": "trying to talk about how to learn from past experience says when building",
    "start": "142590",
    "end": "148050"
  },
  {
    "text": "single page applications so with that short intro let's start with actually",
    "start": "148050",
    "end": "153360"
  },
  {
    "text": "and presenting the subject we're talking about so what's the state of single paid applications and we'll start we start",
    "start": "153360",
    "end": "161459"
  },
  {
    "start": "159000",
    "end": "159000"
  },
  {
    "text": "with a little bit of history the first examples of single page applications in the wild are from 2002 which is quite a",
    "start": "161459",
    "end": "169410"
  },
  {
    "text": "while ago I think if you go to Wikipedia there are actually still examples you can go to and load examples from that",
    "start": "169410",
    "end": "178140"
  },
  {
    "text": "time they weren't very successful partially because the browsers that were",
    "start": "178140",
    "end": "183660"
  },
  {
    "text": "available back then like Internet Explorer 6 weren't the best example of modern web browsers but it's also the",
    "start": "183660",
    "end": "191310"
  },
  {
    "text": "fact that JavaScript itself wasn't quite up to the task now that doesn't mean",
    "start": "191310",
    "end": "196380"
  },
  {
    "text": "that there weren't any interactive websites they would simply be built using different solutions like flash",
    "start": "196380",
    "end": "204830"
  },
  {
    "text": "2003 we have Firefox 2006 we have jQuery and cause a browser compatibilities",
    "start": "204830",
    "end": "211260"
  },
  {
    "text": "finally a most resolved and 2009 is when modern JavaScript is finally arriving",
    "start": "211260",
    "end": "218070"
  },
  {
    "text": "into existence and very shortly after that the two main libraries that started",
    "start": "218070",
    "end": "224040"
  },
  {
    "text": "the entire revolution of single page applications they come out I don't know",
    "start": "224040",
    "end": "229530"
  },
  {
    "text": "how many of you had the opportunity to use backbone GS or angularjs two very",
    "start": "229530",
    "end": "234930"
  },
  {
    "text": "different libraries but they became immensely popular very quickly and what",
    "start": "234930",
    "end": "240600"
  },
  {
    "text": "follows were dozens of other single page application libraries and million active",
    "start": "240600",
    "end": "246570"
  },
  {
    "text": "projects as we speak at the moment that also led to something called JavaScript",
    "start": "246570",
    "end": "251880"
  },
  {
    "text": "fatigue which I assume most of you have heard of it's the idea that as a JavaScript developer you need to",
    "start": "251880",
    "end": "257340"
  },
  {
    "text": "reinvent yourself every other day because a new library is coming out it also talks about the fact that building",
    "start": "257340",
    "end": "264630"
  },
  {
    "text": "a single paid application or a JavaScript application is extremely complicated because we're using a",
    "start": "264630",
    "end": "270249"
  },
  {
    "text": "whole set of tools like grant or webpack or Babel just to get the application",
    "start": "270249",
    "end": "275559"
  },
  {
    "text": "already for puzzles and we're going to touch that in my next slide so these are",
    "start": "275559",
    "end": "283959"
  },
  {
    "start": "283000",
    "end": "283000"
  },
  {
    "text": "the statistics of weekly and p.m. downloads of the top single page application libraries and there's a lot",
    "start": "283959",
    "end": "291249"
  },
  {
    "text": "of interesting details here and now I'm going to start by saying that I'm not a hundred percent sure that the NPM weekly",
    "start": "291249",
    "end": "297669"
  },
  {
    "text": "download is the best statistic of the the size of a community or the size of the individual libraries but it was the",
    "start": "297669",
    "end": "304989"
  },
  {
    "text": "best data I could find online and we start at the very top with react which",
    "start": "304989",
    "end": "311199"
  },
  {
    "text": "has nearly 2.5 million weekly downloads which is bigger than the rest of the",
    "start": "311199",
    "end": "316209"
  },
  {
    "text": "entire single page application community it's been around for five years and that's actually quite interesting",
    "start": "316209",
    "end": "322959"
  },
  {
    "text": "because when we're talking about JavaScript fatigue and the fact that we need to invent ourselves every so often",
    "start": "322959",
    "end": "330299"
  },
  {
    "text": "react is they did the exact opposite it's been around for five years and while it did have some changes over the",
    "start": "330299",
    "end": "336219"
  },
  {
    "text": "years it's been mostly very stable if we",
    "start": "336219",
    "end": "341409"
  },
  {
    "text": "go back if we go on to angular and view the next two contenders they're both been around for a while",
    "start": "341409",
    "end": "348129"
  },
  {
    "text": "it's funny that view is generally considered the new kid on the block but has actually been around longer than",
    "start": "348129",
    "end": "353969"
  },
  {
    "text": "angular 2 or the modern version of angular but even angular 2 which is the",
    "start": "353969",
    "end": "359709"
  },
  {
    "text": "angular 6 at the moment which is the newest addition assuming we we know",
    "start": "359709",
    "end": "365019"
  },
  {
    "text": "Angela GS has been around for almost two years now the interesting point here is",
    "start": "365019",
    "end": "370209"
  },
  {
    "text": "that the number of weekly download summits vary drastically so from 2.5",
    "start": "370209",
    "end": "375399"
  },
  {
    "text": "million down to 680 a and 18 down to 360",
    "start": "375399",
    "end": "380639"
  },
  {
    "text": "which just showed it comes to show you that even though there's a lot of new",
    "start": "380639",
    "end": "385719"
  },
  {
    "text": "libraries out there the vast majority of production-ready applications do not use",
    "start": "385719",
    "end": "391929"
  },
  {
    "text": "them it doesn't mean that these new libraries aren't good and you shouldn't play with them but I don't think anyone",
    "start": "391929",
    "end": "398589"
  },
  {
    "text": "actually is going to expect you to build your next single vacation using a library that just came",
    "start": "398589",
    "end": "404129"
  },
  {
    "text": "out angularjs and backbone are a funny",
    "start": "404129",
    "end": "409679"
  },
  {
    "text": "surprise because both of them are no longer on in active development and both have hundreds of thousands of whiskey",
    "start": "409679",
    "end": "416189"
  },
  {
    "text": "downloads again a bet boom GS is that library that's almost eight years old",
    "start": "416189",
    "end": "421439"
  },
  {
    "text": "and still has more than 200,000 weekly downloads which isn't again a a good",
    "start": "421439",
    "end": "427579"
  },
  {
    "text": "demonstration of the angular of the JavaScript fatigue and the fact that we need to rewrite ourselves every other",
    "start": "427579",
    "end": "433739"
  },
  {
    "text": "day and then we have M Beltre s which is been around from almost the very beginning and has slowly been phasing",
    "start": "433739",
    "end": "440699"
  },
  {
    "text": "out it used to be the third biggest library but it's quite far from their",
    "start": "440699",
    "end": "447389"
  },
  {
    "text": "number at the moment and then we have react which is basically a faster copy of react with the same API with 53,000",
    "start": "447389",
    "end": "456979"
  },
  {
    "text": "weekly downloads other libraries like him Elya or elm has considerably less",
    "start": "456979",
    "end": "465019"
  },
  {
    "text": "downloads which means again that really anything below these libraries is",
    "start": "465019",
    "end": "471989"
  },
  {
    "text": "unlikely to see a considerable production use in single page applications the second part of the",
    "start": "471989",
    "end": "479999"
  },
  {
    "text": "JavaScript fatigue is all about the tooling and how much pain you have to go",
    "start": "479999",
    "end": "485129"
  },
  {
    "text": "through when you want to set up a new application but this again isn't really the case these days with I think from",
    "start": "485129",
    "end": "493909"
  },
  {
    "text": "2016 we act hastily axial I and you know to practically came out with a CLI of",
    "start": "493909",
    "end": "500339"
  },
  {
    "text": "its own and and all the way all the other libraries also provide you with a",
    "start": "500339",
    "end": "505379"
  },
  {
    "text": "a CLI that basically abstract all these tools so we still use webpack we still",
    "start": "505379",
    "end": "511229"
  },
  {
    "text": "use babel but we don't need to directly interact with them unless we decide to do something that's considerably",
    "start": "511229",
    "end": "518099"
  },
  {
    "text": "different from what these realize are offering now these realize aren't perfect but in most use cases I can come",
    "start": "518099",
    "end": "526589"
  },
  {
    "text": "and start a production ready app within minutes",
    "start": "526589",
    "end": "531558"
  },
  {
    "text": "so let's start talking about the actual best practices for for building single",
    "start": "532069",
    "end": "537920"
  },
  {
    "text": "page applications and we'd say we start with something that gonna sound quite",
    "start": "537920",
    "end": "543319"
  },
  {
    "text": "obvious to to many of you but small useable components is a thing that we",
    "start": "543319",
    "end": "548540"
  },
  {
    "text": "need to discuss and we need to discuss it for two things a small usable components weren't a",
    "start": "548540",
    "end": "554720"
  },
  {
    "text": "thing when single page application initially started so backbone did not have that concept and angular kinda had",
    "start": "554720",
    "end": "562220"
  },
  {
    "text": "that concept but it didn't really come into properly youth until much later and",
    "start": "562220",
    "end": "567949"
  },
  {
    "text": "react made it popular in 2013 so in a modern single page application almost",
    "start": "567949",
    "end": "574819"
  },
  {
    "text": "everything we're building is a component which is basically user defined Dom",
    "start": "574819",
    "end": "580009"
  },
  {
    "text": "element it's small it's composable is reusable and we interact with it via the",
    "start": "580009",
    "end": "586910"
  },
  {
    "text": "template so we have inputs and outputs to every component this means that we",
    "start": "586910",
    "end": "593839"
  },
  {
    "start": "593000",
    "end": "593000"
  },
  {
    "text": "have a couple of requirements to build a usable component and we'll go over them",
    "start": "593839",
    "end": "600639"
  },
  {
    "text": "so the first one is to be able to easily switch the datasource because if you look to the right to the drop down",
    "start": "600639",
    "end": "607279"
  },
  {
    "text": "example if my the usable component is hard-coded to a list of countries it's",
    "start": "607279",
    "end": "612740"
  },
  {
    "text": "not very usable because as soon as I need to have a list of cities I'll need",
    "start": "612740",
    "end": "618050"
  },
  {
    "text": "to rewrite a new component it needs to be configurable so again it doesn't",
    "start": "618050",
    "end": "624199"
  },
  {
    "text": "always have to support it because some components simply don't need a configuration but the ability in this",
    "start": "624199",
    "end": "629930"
  },
  {
    "text": "case for example to have the drop-down move to the side or to the top is a configuration that we need to support it",
    "start": "629930",
    "end": "638660"
  },
  {
    "text": "needs to notify us on data change because when we change the data within a component we don't want to automatically",
    "start": "638660",
    "end": "645709"
  },
  {
    "text": "modify the data in the app and we'll get to that a little further down but we do need to know about a change so some sort",
    "start": "645709",
    "end": "653300"
  },
  {
    "text": "of an event notification or callback system is a requirement and the last but",
    "start": "653300",
    "end": "659089"
  },
  {
    "text": "certainly not least is a contain CSS because if we get to a point where dropping a component within a page",
    "start": "659089",
    "end": "665780"
  },
  {
    "text": "modifies the the design of the page then we have a very big problem and this component is no longer reusable because",
    "start": "665780",
    "end": "673190"
  },
  {
    "text": "it has a drastic effect on our pages in",
    "start": "673190",
    "end": "678620"
  },
  {
    "start": "678000",
    "end": "678000"
  },
  {
    "text": "order to do that we start by using something called a container presentation a model component which",
    "start": "678620",
    "end": "686630"
  },
  {
    "text": "again started with react or wittily a community when they found out that they",
    "start": "686630",
    "end": "692210"
  },
  {
    "text": "needed a way of making those components very usable the idea is that we have a",
    "start": "692210",
    "end": "698480"
  },
  {
    "text": "component and that's called the container component that doesn't have a lot of visual effects it Masek li think",
    "start": "698480",
    "end": "706700"
  },
  {
    "text": "of it as a page it decides to lay out where to put the individual components but that's roughly all it does from a",
    "start": "706700",
    "end": "713930"
  },
  {
    "text": "view perspective the other part of its walk is how to handle all the data first",
    "start": "713930",
    "end": "719150"
  },
  {
    "text": "with the data store and secondly with the component itself so it will pass the",
    "start": "719150",
    "end": "725150"
  },
  {
    "text": "the modified data to each component and receive the EM events or modifications",
    "start": "725150",
    "end": "731990"
  },
  {
    "text": "when these components change and decide what to do with the data the",
    "start": "731990",
    "end": "737060"
  },
  {
    "text": "presentational components on the other hand are as small as possible they have",
    "start": "737060",
    "end": "742550"
  },
  {
    "text": "a single responsibility so we were trying to avoid a scenario where the same component is able to do multiple or",
    "start": "742550",
    "end": "749720"
  },
  {
    "text": "provide multiple solutions because it makes the component larger and generally should be speak to multiple components",
    "start": "749720",
    "end": "757030"
  },
  {
    "text": "it handles the look and feel it has minimal logic so whenever you have logic",
    "start": "757030",
    "end": "762860"
  },
  {
    "text": "you want to put within a presentational component you should try to put it externally in a utility file why because",
    "start": "762860",
    "end": "771080"
  },
  {
    "text": "a lot of times this logic can be shared among multiple components and shouldn't",
    "start": "771080",
    "end": "776570"
  },
  {
    "text": "be contained within your component it means to be reusable obviously and we",
    "start": "776570",
    "end": "782180"
  },
  {
    "text": "get to the point where we're talking about one-way data-binding so all of the top frameworks which is library react",
    "start": "782180",
    "end": "789770"
  },
  {
    "text": "and library angular he add and view Jas are all support automatically a while",
    "start": "789770",
    "end": "795350"
  },
  {
    "text": "a one-way data-binding which means that whenever the container component or the parent component changes data the child",
    "start": "795350",
    "end": "802790"
  },
  {
    "text": "component automatically gets updated however if the child component changes its data the parent is not immediately",
    "start": "802790",
    "end": "810020"
  },
  {
    "text": "affected and we're going to show you an example or talk about an example why this is important the result looks",
    "start": "810020",
    "end": "818240"
  },
  {
    "text": "something like this there's not much to it but basically the blue container is",
    "start": "818240",
    "end": "825470"
  },
  {
    "text": "our container component the green components are the presentational components and we can see that each of",
    "start": "825470",
    "end": "832160"
  },
  {
    "text": "those green elements has inputs and outputs that allow us to control and",
    "start": "832160",
    "end": "838070"
  },
  {
    "text": "decide how it's rendered whereas the container component does the interaction with the data provider so so far quite",
    "start": "838070",
    "end": "845120"
  },
  {
    "text": "simple scope styles on the other hand are a much more difficult situation now",
    "start": "845120",
    "end": "853420"
  },
  {
    "start": "846000",
    "end": "846000"
  },
  {
    "text": "angular and view offers scope CSS from the get-go angular will automatically",
    "start": "853420",
    "end": "859370"
  },
  {
    "text": "scope the CSS you assigned to a component with you you have a container of you file and you can add a scoped",
    "start": "859370",
    "end": "866920"
  },
  {
    "text": "method to the styles and even become come em scoped react doesn't come with a",
    "start": "866920",
    "end": "873770"
  },
  {
    "text": "built-in option but there's a couple of libraries that will allow you to get the exact same results the problem begins",
    "start": "873770",
    "end": "881510"
  },
  {
    "text": "when you're trying to take this scoped CSS scoped style and turn your component",
    "start": "881510",
    "end": "888830"
  },
  {
    "text": "into a more usable component in the sense that when I created a red button",
    "start": "888830",
    "end": "895370"
  },
  {
    "text": "and I put it within a certain element I want the background color to be blue which is a very obvious requirement but",
    "start": "895370",
    "end": "902630"
  },
  {
    "text": "becomes quite difficult when you're using scope styles because the way scoped Styles work is that the scope CSS",
    "start": "902630",
    "end": "909980"
  },
  {
    "text": "becomes very specific and overriding it becomes quite difficult initially we had",
    "start": "909980",
    "end": "916820"
  },
  {
    "text": "a way of piercing that scoped Styles using the triple arrows but these have",
    "start": "916820",
    "end": "923810"
  },
  {
    "text": "become no longer relevant within CSS angular slowly",
    "start": "923810",
    "end": "929320"
  },
  {
    "text": "during them view still EPM supports them but you should avoid them because once",
    "start": "929320",
    "end": "934890"
  },
  {
    "text": "the standards decide to stop using the solution it's likely that the rest of",
    "start": "934890",
    "end": "940810"
  },
  {
    "text": "the libraries will follow suit it leaves you with two real options on how to",
    "start": "940810",
    "end": "946180"
  },
  {
    "text": "modify these your style component the first way is using an extremely specific",
    "start": "946180",
    "end": "953020"
  },
  {
    "text": "set of CSS rules which can still overwrite the style scope and the other",
    "start": "953020",
    "end": "959110"
  },
  {
    "text": "is to define which properties within the component can change and modify them",
    "start": "959110",
    "end": "965080"
  },
  {
    "text": "using valuables that you all properties that you pass into the component neither",
    "start": "965080",
    "end": "970240"
  },
  {
    "text": "of these options is perfect and we are looking for better solutions but that's the best option or the best solution we",
    "start": "970240",
    "end": "977110"
  },
  {
    "text": "found so far out of for general knowledge the reason why the triple",
    "start": "977110",
    "end": "982210"
  },
  {
    "text": "arrows or the piercing capability was removed from CSS was because it people",
    "start": "982210",
    "end": "987670"
  },
  {
    "text": "determined it's too powerful and was being misused in many cases to things",
    "start": "987670",
    "end": "993160"
  },
  {
    "text": "that are not really related to scoped styles but needed to be said BEM",
    "start": "993160",
    "end": "999520"
  },
  {
    "text": "I don't know how many of you have familiar with block element modifier it's a concept within CSS that tells you",
    "start": "999520",
    "end": "1007470"
  },
  {
    "text": "how to name your CSS classes and is used to ensure that you have a reusable and",
    "start": "1007470",
    "end": "1015000"
  },
  {
    "text": "understandable stylesheet I think the vast majority of projects that I've",
    "start": "1015000",
    "end": "1021150"
  },
  {
    "text": "worked with that had usable and mm CSS styles used them and I highly encourage",
    "start": "1021150",
    "end": "1027959"
  },
  {
    "text": "you to have a look and read about this solution you don't need any library it's",
    "start": "1027959",
    "end": "1033120"
  },
  {
    "text": "pure syntax the other things that and this is purely my opinion is assassin",
    "start": "1033120",
    "end": "1040709"
  },
  {
    "text": "less assassin less our proposals for CSS that added a few interesting",
    "start": "1040709",
    "end": "1046680"
  },
  {
    "text": "functionalities first one being valuables but variables are now mostly",
    "start": "1046680",
    "end": "1053490"
  },
  {
    "text": "supported within CSS in all major browsers so that's making a specific",
    "start": "1053490",
    "end": "1059970"
  },
  {
    "text": "capability less relevant and the other thing was the ability to have a hierarchical representation of",
    "start": "1059970",
    "end": "1067850"
  },
  {
    "text": "your classes so instead of doing a button that read you could do button and",
    "start": "1067850",
    "end": "1074360"
  },
  {
    "text": "then with end up parameter the curly brackets have the classes which allows you to",
    "start": "1074360",
    "end": "1081680"
  },
  {
    "text": "write a much more simple CSS and not more readable a stylesheet but at least in my experience usually",
    "start": "1081680",
    "end": "1090700"
  },
  {
    "text": "leads to the creation of very deep nesting and creates a set of classes",
    "start": "1090700",
    "end": "1098300"
  },
  {
    "text": "that are completely unusable in other parts of your application now this is",
    "start": "1098300",
    "end": "1103580"
  },
  {
    "text": "this can be solved by simply ensuring that you're using sass and less properly",
    "start": "1103580",
    "end": "1108680"
  },
  {
    "text": "but since I think 9 out of 10 project I've been working on did not do that I I",
    "start": "1108680",
    "end": "1114080"
  },
  {
    "text": "kind of tend to advise to avoid it altogether if you do use if you do",
    "start": "1114080",
    "end": "1119840"
  },
  {
    "text": "decide to use sass or less please try to avoid nesting or at least limit it to",
    "start": "1119840",
    "end": "1124970"
  },
  {
    "text": "one or two levels let's move to the next",
    "start": "1124970",
    "end": "1130970"
  },
  {
    "text": "slide composition over inheritance now",
    "start": "1130970",
    "end": "1137950"
  },
  {
    "start": "1133000",
    "end": "1133000"
  },
  {
    "text": "composition over inheritance isn't really specific to single page applications or any of the libraries",
    "start": "1137950",
    "end": "1143750"
  },
  {
    "text": "we're talking about but it becomes really useful when you're talking about smaller useable components and it",
    "start": "1143750",
    "end": "1150740"
  },
  {
    "text": "specifically being recommended by both react and view the idea is that we move",
    "start": "1150740",
    "end": "1157070"
  },
  {
    "text": "the logic or as much of the logic outside of the component and then again",
    "start": "1157070",
    "end": "1162590"
  },
  {
    "text": "have very small components that we can easily use relate and test not going to",
    "start": "1162590",
    "end": "1169400"
  },
  {
    "text": "go into details about composition of an inheritance because there's a lot of information out there I will say that",
    "start": "1169400",
    "end": "1175400"
  },
  {
    "text": "there are some cases where inheritance is needed or can be helpful and all of the libraries do support inheritance but",
    "start": "1175400",
    "end": "1182480"
  },
  {
    "text": "generally speaking if you get to a point where you're using inheritance within components it's very likely you're doing",
    "start": "1182480",
    "end": "1188390"
  },
  {
    "text": "something wrong and you need to visit this before you decide to move ahead",
    "start": "1188390",
    "end": "1194770"
  },
  {
    "start": "1196000",
    "end": "1196000"
  },
  {
    "text": "and this is probably the bigger part where we're trying to look at how",
    "start": "1196780",
    "end": "1203480"
  },
  {
    "text": "components walk within different libraries again the big three and",
    "start": "1203480",
    "end": "1209000"
  },
  {
    "text": "highlight some of the things that we can learn all that I found important so the",
    "start": "1209000",
    "end": "1214190"
  },
  {
    "text": "template engines view and angular use a very similar templating engine react",
    "start": "1214190",
    "end": "1219800"
  },
  {
    "text": "decided to use JSX which is an XML HTML type thing it's a little scary at first",
    "start": "1219800",
    "end": "1226100"
  },
  {
    "text": "but the learning curve is quite easy so I wouldn't use that specific change as a",
    "start": "1226100",
    "end": "1232370"
  },
  {
    "text": "reason to avoid using react if you do like JSX UJS does support the use of JSX",
    "start": "1232370",
    "end": "1240290"
  },
  {
    "text": "using a third-party M tagging so templating engine has some differences",
    "start": "1240290",
    "end": "1246020"
  },
  {
    "text": "but isn't really a big issue so I'm going to put that aside and talk about something slightly more important so",
    "start": "1246020",
    "end": "1253040"
  },
  {
    "text": "when you're looking at the MVC there is a very basic notion of the separation",
    "start": "1253040",
    "end": "1263330"
  },
  {
    "text": "between views and controllers and that's been the case for many many years and",
    "start": "1263330",
    "end": "1269420"
  },
  {
    "text": "angular is built based on that notion but when react came out they basically said listen in 99% of the cases the",
    "start": "1269420",
    "end": "1278270"
  },
  {
    "text": "controller and the view are tightly coupled those very few use cases where I'll take the same template and pass a",
    "start": "1278270",
    "end": "1285320"
  },
  {
    "text": "different controller to it on the other hand if I put the view and the",
    "start": "1285320",
    "end": "1290960"
  },
  {
    "text": "controller together in single file it becomes a lot easier to see how small or",
    "start": "1290960",
    "end": "1297110"
  },
  {
    "text": "big or component is becoming because in many cases a component with very few",
    "start": "1297110",
    "end": "1302810"
  },
  {
    "text": "JavaScript lines we include a lot of HTML and that's generally a bad sign",
    "start": "1302810",
    "end": "1308740"
  },
  {
    "text": "so what happened is that since the reactivation in 2013 we have a a joint",
    "start": "1308740",
    "end": "1317920"
  },
  {
    "text": "view and controller within react components and view TS went when it came",
    "start": "1317920",
    "end": "1324410"
  },
  {
    "text": "out or at least these days recommend you to use the same strategy with the creation of the dot",
    "start": "1324410",
    "end": "1330860"
  },
  {
    "text": "view files and the ability to have your template and your JavaScript within the same file why am I telling you all of",
    "start": "1330860",
    "end": "1338540"
  },
  {
    "text": "this I don't think that separate views are going to become a thing anytime in",
    "start": "1338540",
    "end": "1344120"
  },
  {
    "text": "the future but if you're using angular your ability to put the views within the",
    "start": "1344120",
    "end": "1349760"
  },
  {
    "text": "a controller are very limited what I want you to try and avoid is and I've",
    "start": "1349760",
    "end": "1356420"
  },
  {
    "text": "seen it done before is people who are trying to take the views outside of react and UJS",
    "start": "1356420",
    "end": "1361970"
  },
  {
    "text": "components and that's probably something you're going to regret in the future because that goes very much against",
    "start": "1361970",
    "end": "1368540"
  },
  {
    "text": "where the community has decided to go forward with the next point is classes",
    "start": "1368540",
    "end": "1376430"
  },
  {
    "text": "versus objects so I'm not going to go into details about how classes came into",
    "start": "1376430",
    "end": "1383300"
  },
  {
    "text": "being within JavaScript but I will say that classes aren't and in help out of",
    "start": "1383300",
    "end": "1389840"
  },
  {
    "text": "JavaScript and that inheritance within JavaScript works quite differently than",
    "start": "1389840",
    "end": "1395210"
  },
  {
    "text": "other languages and while he acting angular both decided to adopt the",
    "start": "1395210",
    "end": "1401360"
  },
  {
    "text": "classes syntax beauteous is very much against it now I'll start by saying oh",
    "start": "1401360",
    "end": "1407930"
  },
  {
    "text": "I'll add that you can use classes with UJS but you shouldn't and I'll tell you",
    "start": "1407930",
    "end": "1413810"
  },
  {
    "text": "why the reason why few TAS is very much against the use of classes is that",
    "start": "1413810",
    "end": "1420320"
  },
  {
    "text": "classes don't really add much in the sense of chimera of capabilities or code",
    "start": "1420320",
    "end": "1427190"
  },
  {
    "text": "size or performance really and they gave two examples of angular and react when",
    "start": "1427190",
    "end": "1433550"
  },
  {
    "text": "when they explain that so angular really liked classes but was unable to build",
    "start": "1433550",
    "end": "1440240"
  },
  {
    "text": "the component they wanted with es6 classes and had to add decorators in",
    "start": "1440240",
    "end": "1445490"
  },
  {
    "text": "order to define a component now I don't know if you've seen an angular 2 component or have had experience with",
    "start": "1445490",
    "end": "1453530"
  },
  {
    "text": "decorators within other languages but decorators are currently not part of a",
    "start": "1453530",
    "end": "1458570"
  },
  {
    "text": "Java Script and if you're going to base your library on capabilities the town",
    "start": "1458570",
    "end": "1464389"
  },
  {
    "text": "currency palette of mainstream JavaScript it means that classes themselves have a bit of an issue the",
    "start": "1464389",
    "end": "1471259"
  },
  {
    "text": "second thing is react in classes react were the first company to adopt classes",
    "start": "1471259",
    "end": "1478250"
  },
  {
    "text": "or made the big scene about the dopping adopting classes we didn't react but if",
    "start": "1478250",
    "end": "1484610"
  },
  {
    "text": "you're going to check the react codebase you'll find something quite funny react doesn't use classes within its codebase",
    "start": "1484610",
    "end": "1492799"
  },
  {
    "text": "because as they said they didn't really find much use of classes within their",
    "start": "1492799",
    "end": "1498620"
  },
  {
    "text": "codebase and when they did find use for classes within their codebase the",
    "start": "1498620",
    "end": "1504200"
  },
  {
    "text": "performance wasn't good enough so I some people started saying that in 2018 what",
    "start": "1504200",
    "end": "1511610"
  },
  {
    "text": "we're going to see is the abolish of class uses within libraries I I highly",
    "start": "1511610",
    "end": "1516740"
  },
  {
    "text": "doubt that's going to happen at the same time I will not advise you to try and force the use of classes it's still",
    "start": "1516740",
    "end": "1523730"
  },
  {
    "text": "something slightly broken with the way it's currently being implemented and used let's move on to commit a component",
    "start": "1523730",
    "end": "1532100"
  },
  {
    "text": "communication so we act an angular both take a very specific approach within",
    "start": "1532100",
    "end": "1539059"
  },
  {
    "text": "react you pass in callbacks to your child components that are then being called whereas angular uses centimeters",
    "start": "1539059",
    "end": "1546850"
  },
  {
    "text": "view supports both there's no big advantages of either at least none that",
    "start": "1546850",
    "end": "1552649"
  },
  {
    "text": "I've seen though you can verify callbacks which isn't something you can do with an event a meter so I can verify",
    "start": "1552649",
    "end": "1559549"
  },
  {
    "text": "that my parent component passed in a call there but I can't know how many",
    "start": "1559549",
    "end": "1564710"
  },
  {
    "text": "people if any registered as to my event commit oh it's not a big thing because",
    "start": "1564710",
    "end": "1571039"
  },
  {
    "text": "I've never actually seen that being used but that's something yet you can keep in mind and the last thing is bulbs if",
    "start": "1571039",
    "end": "1579860"
  },
  {
    "text": "you've used react in the past one of the most popular / annoying things about",
    "start": "1579860",
    "end": "1585500"
  },
  {
    "text": "react is that pops properties that you pass in to react are immutable and if",
    "start": "1585500",
    "end": "1590779"
  },
  {
    "text": "you want to make any modification you have to copy them to the internal state and then use them where if we've been angular",
    "start": "1590779",
    "end": "1599119"
  },
  {
    "text": "you're more than free to mutate your properties and with you again you can",
    "start": "1599119",
    "end": "1604929"
  },
  {
    "text": "modify your port 40 but you will get a warning saying that you probably shouldn't do that and and you shouldn't",
    "start": "1604929",
    "end": "1612769"
  },
  {
    "text": "please do not mutate your properties and the reason for that is the one-way binding we talked about so if you get a",
    "start": "1612769",
    "end": "1621200"
  },
  {
    "text": "set of properties and you start to modifying them directly within your component they're not going to affect",
    "start": "1621200",
    "end": "1627379"
  },
  {
    "text": "the parent component however if the parent component changes it will override the changes that you were",
    "start": "1627379",
    "end": "1633080"
  },
  {
    "text": "making within your component because of one-way binding this can result in lost",
    "start": "1633080",
    "end": "1639529"
  },
  {
    "text": "data in quite a few scenarios though it's less likely to happen if you don't",
    "start": "1639529",
    "end": "1644749"
  },
  {
    "text": "have a synchronous actions within your apps so unless you have WebSockets or",
    "start": "1644749",
    "end": "1649999"
  },
  {
    "text": "some polling system within your app it's unlikely to happen but once you're aware",
    "start": "1649999",
    "end": "1656389"
  },
  {
    "text": "of this danger continuing to use these mutations will likely end in a bug",
    "start": "1656389",
    "end": "1663320"
  },
  {
    "text": "sometimes in the future that will be very hard to debug because these things",
    "start": "1663320",
    "end": "1668539"
  },
  {
    "text": "are quite hard to replicate especially when a synchronous actions am",
    "start": "1668539",
    "end": "1675099"
  },
  {
    "text": "related the last part that has thats",
    "start": "1675099",
    "end": "1682639"
  },
  {
    "start": "1678000",
    "end": "1678000"
  },
  {
    "text": "related to components within single paid applications is web components I don't",
    "start": "1682639",
    "end": "1688580"
  },
  {
    "text": "know how many of you were in the previous lecture here that was about a",
    "start": "1688580",
    "end": "1693619"
  },
  {
    "text": "rise of web components but the technology has been in discussion for",
    "start": "1693619",
    "end": "1699440"
  },
  {
    "text": "many many years and is finally coming into full tation it's not a single standard it's a couple and it will allow",
    "start": "1699440",
    "end": "1707779"
  },
  {
    "text": "us to create custom Dom elements directly within our browsers without the",
    "start": "1707779",
    "end": "1713659"
  },
  {
    "text": "need of a third-party library it's still not fully supported within all libraries",
    "start": "1713659",
    "end": "1719059"
  },
  {
    "text": "within all browsers but you do have libraries like stencil that will allow",
    "start": "1719059",
    "end": "1724190"
  },
  {
    "text": "you to do that and angular 6 is now officially supporting the ability to ex both web components why are they",
    "start": "1724190",
    "end": "1731510"
  },
  {
    "text": "interesting for two reasons one because part of the reason why components across",
    "start": "1731510",
    "end": "1737660"
  },
  {
    "text": "all libraries are starting to look the same is because they're all starting to",
    "start": "1737660",
    "end": "1742850"
  },
  {
    "text": "comply with the web component standard because all of these libraries want to be able to export and import these web",
    "start": "1742850",
    "end": "1748760"
  },
  {
    "text": "components and the second thing is that while these libraries especially angular does allow you to export web components",
    "start": "1748760",
    "end": "1755750"
  },
  {
    "text": "we're not there quite yet so an angular 6 web component will still include a",
    "start": "1755750",
    "end": "1761840"
  },
  {
    "text": "vast majority of angular 6 within it which may quickly make it the world largest drop-down component in size so",
    "start": "1761840",
    "end": "1771110"
  },
  {
    "text": "be aware of this it will start creeping in within I think a matter of months and",
    "start": "1771110",
    "end": "1778429"
  },
  {
    "text": "it means that a more and more things will become similar within the components of different libraries second",
    "start": "1778429",
    "end": "1787669"
  },
  {
    "text": "thing we're going to talk about is state management and the need to have one so",
    "start": "1787669",
    "end": "1793400"
  },
  {
    "text": "it's a funny thing that within the top three libraries only vue.js comes with",
    "start": "1793400",
    "end": "1799160"
  },
  {
    "text": "of an official state management system whereas both react and angular allow you",
    "start": "1799160",
    "end": "1805520"
  },
  {
    "text": "to make the decision whether you want one or not but if you look at the market",
    "start": "1805520",
    "end": "1811130"
  },
  {
    "text": "these days state management is a very big thing and in the vast majority of",
    "start": "1811130",
    "end": "1816169"
  },
  {
    "text": "libraries out there you will see some form of state management system implemented now this started in around",
    "start": "1816169",
    "end": "1824140"
  },
  {
    "text": "2014 when Facebook introduces flux which is a new form or an alternative to MVC",
    "start": "1824140",
    "end": "1832600"
  },
  {
    "text": "that focuses on unidirectional data flow now I'm not going to again go into",
    "start": "1832600",
    "end": "1838520"
  },
  {
    "text": "details about sucks because that kind of goes beyond the scope of our presentation but I will focus on one",
    "start": "1838520",
    "end": "1846669"
  },
  {
    "text": "main difference and this is the way the store the data layer interacts with view",
    "start": "1846669",
    "end": "1852970"
  },
  {
    "text": "in traditional MVC the view was the view of the controller was able to directly",
    "start": "1852970",
    "end": "1858830"
  },
  {
    "text": "modify the data within your data stores we caused a lot of problems to Facebook",
    "start": "1858830",
    "end": "1865260"
  },
  {
    "text": "where a single change would trigger a whole set of cascading effects because",
    "start": "1865260",
    "end": "1871170"
  },
  {
    "text": "each of those data models will then update its own views and other data models and it became very difficult to",
    "start": "1871170",
    "end": "1879000"
  },
  {
    "text": "debug problems in the app because a part of the app could very easily go out of",
    "start": "1879000",
    "end": "1885270"
  },
  {
    "text": "state they wouldn't receive an update because of a bug but no error would be shown to the user and 30 minutes later",
    "start": "1885270",
    "end": "1892020"
  },
  {
    "text": "the user complains about the problem where a certain component isn't acting the way it should but you have no idea",
    "start": "1892020",
    "end": "1898380"
  },
  {
    "text": "what caused the problem in order to handle data changes you have an action",
    "start": "1898380",
    "end": "1904770"
  },
  {
    "text": "in a dispatcher that basically means that when a view of a controller wants to make a data modification it doesn't",
    "start": "1904770",
    "end": "1911250"
  },
  {
    "text": "do it directly it requests to change with the data that's needed to perform the change in the store eventually",
    "start": "1911250",
    "end": "1918390"
  },
  {
    "text": "decides how that chain is implemented the data is first changed throughout the",
    "start": "1918390",
    "end": "1923850"
  },
  {
    "text": "app and then the views are updated so",
    "start": "1923850",
    "end": "1931760"
  },
  {
    "start": "1930000",
    "end": "1930000"
  },
  {
    "text": "why flux was a very nice idea very few people are using flux directly and in",
    "start": "1931760",
    "end": "1938100"
  },
  {
    "text": "fact Facebook itself for a very long time recommended the use of three ducts Redux is a form of a refined version of",
    "start": "1938100",
    "end": "1945810"
  },
  {
    "text": "flux that uses the same concept with a few changes immutability of the data",
    "start": "1945810",
    "end": "1952620"
  },
  {
    "text": "source is one of them a single data source is another and it's the most",
    "start": "1952620",
    "end": "1957630"
  },
  {
    "text": "popular solution out there today at the same time there's a new set of solutions",
    "start": "1957630",
    "end": "1963690"
  },
  {
    "text": "that are still based on flux roughly but have embraced the concepts of reactivity",
    "start": "1963690",
    "end": "1971750"
  },
  {
    "text": "they also let boil plate and do contain a little bit more magic you can see a",
    "start": "1971750",
    "end": "1979200"
  },
  {
    "text": "mob x4 react view X which is the built-in solution for view GS and ng XS",
    "start": "1979200",
    "end": "1986060"
  },
  {
    "text": "all of them are easier to use than the original flux or redux but they're all",
    "start": "1986060",
    "end": "1994170"
  },
  {
    "text": "slightly newer doesn't mean that you shouldn't use them but it does mean that depending on the",
    "start": "1994170",
    "end": "2001309"
  },
  {
    "text": "library you're choosing there's probably a best solution so Mobile's for",
    "start": "2001309",
    "end": "2007900"
  },
  {
    "text": "small/medium react apps is absolutely fine if you're going to build a very large application it might still be",
    "start": "2007900",
    "end": "2015350"
  },
  {
    "text": "better to use redux and still still a lot more experience with that UJS the",
    "start": "2015350",
    "end": "2021799"
  },
  {
    "text": "fact that they have a built in state management makes UX the best solution in",
    "start": "2021799",
    "end": "2027170"
  },
  {
    "text": "my opinion redux can walk with them view yes but the integration is much less",
    "start": "2027170",
    "end": "2034250"
  },
  {
    "text": "seamless and for angular you have an TRX which was the original variation of",
    "start": "2034250",
    "end": "2041990"
  },
  {
    "text": "redux it's still in use it's still the most popular solution for angular and ng",
    "start": "2041990",
    "end": "2048878"
  },
  {
    "text": "ng XS is the newer alternative which again offers a slightly more comfortable",
    "start": "2048879",
    "end": "2055898"
  },
  {
    "text": "use all of these solutions come with a very powerful set of dev tools and the",
    "start": "2055899",
    "end": "2063679"
  },
  {
    "text": "first thing I would recommend is to learn how to use that because it's an excellent way to debug your application",
    "start": "2063679",
    "end": "2070270"
  },
  {
    "text": "we have usually connected those dev tools to an external logging system so",
    "start": "2070270",
    "end": "2076878"
  },
  {
    "text": "when an arrow is provided a when an error happens even when a remote user we",
    "start": "2076879",
    "end": "2082730"
  },
  {
    "text": "can still get all the interactions all these actions that the user has done and that can vastly improve the way you can",
    "start": "2082730",
    "end": "2091040"
  },
  {
    "text": "debug your system and this is might be a little controversial because not",
    "start": "2091040",
    "end": "2098210"
  },
  {
    "text": "everyone likes them but I highly recommend to always use a state management system the reason for that is",
    "start": "2098210",
    "end": "2105500"
  },
  {
    "text": "quite simple apps tend to grow they don't tend to shrink so even if you're",
    "start": "2105500",
    "end": "2110660"
  },
  {
    "text": "building a relatively small application or even a prototype there's a good chance that this will continue to evolve",
    "start": "2110660",
    "end": "2117320"
  },
  {
    "text": "and very little chance it'll shrink over the years which means that it's better",
    "start": "2117320",
    "end": "2123260"
  },
  {
    "text": "to start a little with a little more business to our app and and be able to easily grow then to start",
    "start": "2123260",
    "end": "2130760"
  },
  {
    "text": "an app that doesn't include some core capabilities that will make our lives as",
    "start": "2130760",
    "end": "2135950"
  },
  {
    "text": "developers much harder in the future",
    "start": "2135950",
    "end": "2140020"
  },
  {
    "text": "structuring your project this is a really small one so the first examples",
    "start": "2141609",
    "end": "2151369"
  },
  {
    "text": "we've seen on how to structure folders within applications was done based on",
    "start": "2151369",
    "end": "2157790"
  },
  {
    "text": "the come on the type of the files so you had a folder for components a folder for",
    "start": "2157790",
    "end": "2163640"
  },
  {
    "text": "directive a folder for utilities and this kind of world for very small application but completely fails when",
    "start": "2163640",
    "end": "2171140"
  },
  {
    "text": "you grow to a large set of modules and",
    "start": "2171140",
    "end": "2177040"
  },
  {
    "text": "today we generally advise to build application using by grouping of the",
    "start": "2177040",
    "end": "2184450"
  },
  {
    "text": "feature you're developing those two varieties one of them just drops all the",
    "start": "2184450",
    "end": "2191000"
  },
  {
    "text": "files within a single feature the other for louder features you do break down the libraries based on their types it",
    "start": "2191000",
    "end": "2199849"
  },
  {
    "text": "means that it makes it a lot easier for users to find the files that will use em",
    "start": "2199849",
    "end": "2206300"
  },
  {
    "text": "looking for two things that you want to remember when doing this a avoid using",
    "start": "2206300",
    "end": "2213050"
  },
  {
    "text": "capitalization for file names and library names some operating systems do",
    "start": "2213050",
    "end": "2218270"
  },
  {
    "text": "not differentiate between lowercase and uppercase files and library names and if",
    "start": "2218270",
    "end": "2225470"
  },
  {
    "text": "you have two people and submit the same file name one with capital letters and the other in lowercase",
    "start": "2225470",
    "end": "2231740"
  },
  {
    "text": "get will make your life very very sad it happened to me more than once and it's",
    "start": "2231740",
    "end": "2238369"
  },
  {
    "text": "one of those things that you really want to avoid the other thing is to avoid deep nesting so doing organizing your",
    "start": "2238369",
    "end": "2247540"
  },
  {
    "text": "directories by features is actually excellent and if you have a feature that's currently specifically only used",
    "start": "2247540",
    "end": "2253849"
  },
  {
    "text": "within a feature you can put it there within that folder structure but don't",
    "start": "2253849",
    "end": "2259010"
  },
  {
    "text": "go any further than that because features do tell - then show up in other areas of the",
    "start": "2259010",
    "end": "2264390"
  },
  {
    "text": "code and it becomes really hard to find the feature when there's four or five levels deep nesting which moves us to",
    "start": "2264390",
    "end": "2275580"
  },
  {
    "text": "the last part of well our last rule and it's all to do with admin maintenance",
    "start": "2275580",
    "end": "2281970"
  },
  {
    "text": "and it's not really a single hole but a set of best practices that you really should adhere to and we start with",
    "start": "2281970",
    "end": "2289470"
  },
  {
    "start": "2288000",
    "end": "2288000"
  },
  {
    "text": "static typing now I think the well most",
    "start": "2289470",
    "end": "2294720"
  },
  {
    "text": "controversial but possibly the best thing with angular 2 is that it forces users to use em typescript if you've not",
    "start": "2294720",
    "end": "2302370"
  },
  {
    "text": "used type script it's identical to JavaScript but you have static typing for your variables they react or",
    "start": "2302370",
    "end": "2310410"
  },
  {
    "text": "Facebook has a an alternative library called flow both can be used with",
    "start": "2310410",
    "end": "2316050"
  },
  {
    "text": "whichever library you choose to use and it makes the development process M",
    "start": "2316050",
    "end": "2322260"
  },
  {
    "text": "easier and more importantly it makes it a lot easier to onboard new developers",
    "start": "2322260",
    "end": "2329280"
  },
  {
    "text": "or maintain the app because it's a lot easier to see which data which variables",
    "start": "2329280",
    "end": "2336660"
  },
  {
    "text": "each component expects it does come with a certain cost especially if you've",
    "start": "2336660",
    "end": "2341940"
  },
  {
    "text": "never used static typing in JavaScript but the gains are relatively high and",
    "start": "2341940",
    "end": "2348210"
  },
  {
    "text": "since any serious application is going to spend a lot more time in maintenance",
    "start": "2348210",
    "end": "2354270"
  },
  {
    "text": "than in development that extra effort is worthwhile the second part is long-term",
    "start": "2354270",
    "end": "2363420"
  },
  {
    "start": "2361000",
    "end": "2361000"
  },
  {
    "text": "support or LTS which i think is quite a",
    "start": "2363420",
    "end": "2368520"
  },
  {
    "text": "big problem with single page applications but isn't really discussed so LTS is the support period after an",
    "start": "2368520",
    "end": "2377520"
  },
  {
    "text": "app or after library went out of active development and this is the period where",
    "start": "2377520",
    "end": "2383850"
  },
  {
    "text": "you just get critical bug fixes and security patches and the same situation",
    "start": "2383850",
    "end": "2389880"
  },
  {
    "text": "at the moment with the single page libraries is that you don't get it or barely get it",
    "start": "2389880",
    "end": "2395430"
  },
  {
    "text": "angular being the most generous offering a year-long support if you currently",
    "start": "2395430",
    "end": "2400500"
  },
  {
    "text": "offers about nine months for the Dom aggression between view one and two and",
    "start": "2400500",
    "end": "2406079"
  },
  {
    "text": "react doesn't actually talk about it at all that means that you can never stop",
    "start": "2406079",
    "end": "2411089"
  },
  {
    "text": "upgrading your app because once you stop doing that you're losing critical security flaw at",
    "start": "2411089",
    "end": "2417690"
  },
  {
    "text": "all you might be leaving your ad vulnerable to critical security flaws it",
    "start": "2417690",
    "end": "2423480"
  },
  {
    "text": "means that there's an extra cost of developing single page applications at the moment that a lot of people are not",
    "start": "2423480",
    "end": "2428940"
  },
  {
    "text": "discussing and it's something that you should be aware of when you're starting the development just to clarify if you",
    "start": "2428940",
    "end": "2438000"
  },
  {
    "text": "compare these to other libraries or other solutions out there whether it's",
    "start": "2438000",
    "end": "2443880"
  },
  {
    "text": "node J S or Django or Ruby on Rails you'll see much longer them support",
    "start": "2443880",
    "end": "2452220"
  },
  {
    "text": "periods unit testing so unit testing I",
    "start": "2452220",
    "end": "2459690"
  },
  {
    "start": "2454000",
    "end": "2454000"
  },
  {
    "text": "always laughed at unit testing is one of the questions you will always hear in a job interview but when you challenge the",
    "start": "2459690",
    "end": "2467040"
  },
  {
    "text": "interviewer and ask so how many unitest do you actually write in your javascript code they tend to tell you that they're",
    "start": "2467040",
    "end": "2473579"
  },
  {
    "text": "planning to start doing that tomorrow but they haven't quite gotten to it yet and we've been doing it for a couple of",
    "start": "2473579",
    "end": "2479579"
  },
  {
    "text": "years now and I think it's time to move on again we're talking about applications that are being used by",
    "start": "2479579",
    "end": "2486290"
  },
  {
    "text": "banks by energy companies that quite often have critical impact on the life",
    "start": "2486290",
    "end": "2494700"
  },
  {
    "text": "of our users and the fact that we're still kind of smiling and saying yeah",
    "start": "2494700",
    "end": "2500280"
  },
  {
    "text": "back-end developers can can do unit tests we don't really need them at the moment isn't a great sign of maturity",
    "start": "2500280",
    "end": "2506700"
  },
  {
    "text": "for the community that doesn't mean that I'm always writing as many unit tests as",
    "start": "2506700",
    "end": "2512790"
  },
  {
    "text": "I should I'm at fault here as anyone else but you should give them a go",
    "start": "2512790",
    "end": "2519359"
  },
  {
    "text": "unit tests have become considerably simpler than they were at the beginning angularjs unit testing were not",
    "start": "2519359",
    "end": "2526680"
  },
  {
    "text": "a pleasant thing to do angular2 fixed a lot of these problems and all the",
    "start": "2526680",
    "end": "2532560"
  },
  {
    "text": "libraries use a lovely similar set of",
    "start": "2532560",
    "end": "2538340"
  },
  {
    "text": "tools for the unit testing process so while I think react uses jest which is",
    "start": "2538340",
    "end": "2546300"
  },
  {
    "text": "very much similar to Jasmine the rest use Jasmine so if you know how to do to write unit tests in one ivory your half",
    "start": "2546300",
    "end": "2553440"
  },
  {
    "text": "ways to knowing how to use it in every other library it's it's it's another",
    "start": "2553440",
    "end": "2559710"
  },
  {
    "text": "high investment initially but again the returns are quite high which brings us",
    "start": "2559710",
    "end": "2567930"
  },
  {
    "text": "to the last part of the talk and this is choosing your next seal pate application",
    "start": "2567930",
    "end": "2573450"
  },
  {
    "text": "and the obvious first question I always hear which is performance I don't",
    "start": "2573450",
    "end": "2580140"
  },
  {
    "text": "believe that performance is a good question to ask when talking about single applications and I'm going to",
    "start": "2580140",
    "end": "2585870"
  },
  {
    "text": "explain to you why with two examples the first one is the fact that there's about",
    "start": "2585870",
    "end": "2593340"
  },
  {
    "text": "ten maybe a little more libraries that are faster than react angular of you",
    "start": "2593340",
    "end": "2598520"
  },
  {
    "text": "with some of these libraries having a considerable performance difference in",
    "start": "2598520",
    "end": "2604530"
  },
  {
    "text": "fact there's a library called surplus I don't know if anyone heard about it the",
    "start": "2604530",
    "end": "2609930"
  },
  {
    "text": "chose that they can use JSX remove the virtual Dom react users and be 20% faster in some cases and that's",
    "start": "2609930",
    "end": "2617130"
  },
  {
    "text": "significant and even though they've been out for a while now and not a single developer in the home I think is using",
    "start": "2617130",
    "end": "2623370"
  },
  {
    "text": "them no I think you should I think the top three libraries that we've been",
    "start": "2623370",
    "end": "2629790"
  },
  {
    "text": "talking about I'll fast enough and while performance issues do exist they",
    "start": "2629790",
    "end": "2635160"
  },
  {
    "text": "generally do not come from the form problems within the library itself they",
    "start": "2635160",
    "end": "2641040"
  },
  {
    "text": "generally come with either improperly using that library or using bad",
    "start": "2641040",
    "end": "2647610"
  },
  {
    "text": "calculations or animations within your own code the top three libraries react",
    "start": "2647610",
    "end": "2654750"
  },
  {
    "text": "you and angular perform Ashley the same so choosing one over the other because",
    "start": "2654750",
    "end": "2659920"
  },
  {
    "text": "you think it performs better isn't something that told water I'm using a",
    "start": "2659920",
    "end": "2666670"
  },
  {
    "text": "specific test that I found online it seems to be the most comprehensive test it goes and compels quite a few",
    "start": "2666670",
    "end": "2674799"
  },
  {
    "text": "libraries and you can run it on your local machine and so you're free to have a look it also compels a lot of parameters the",
    "start": "2674799",
    "end": "2682809"
  },
  {
    "start": "2682000",
    "end": "2682000"
  },
  {
    "text": "second thing about performance is low time I don't know how many of you have",
    "start": "2682809",
    "end": "2688000"
  },
  {
    "text": "heard about gdpr you probably got some emails from random companies wanting to be your friends or",
    "start": "2688000",
    "end": "2694750"
  },
  {
    "text": "remain your friends you probably ignore them so there's a story going online",
    "start": "2694750",
    "end": "2699970"
  },
  {
    "text": "about a big US newspaper called USA Today and USA Today couldn't be battle",
    "start": "2699970",
    "end": "2706510"
  },
  {
    "text": "making Auto modification for the EU and they just simply dropped all the ads and",
    "start": "2706510",
    "end": "2712750"
  },
  {
    "text": "all the tracking within their website only for the EU cm citizens and the",
    "start": "2712750",
    "end": "2719890"
  },
  {
    "text": "difference was about five minutes so the size the site went down from 5.2",
    "start": "2719890",
    "end": "2725290"
  },
  {
    "text": "megabyte to 500k in a day now that doesn't mean that when you're coming to",
    "start": "2725290",
    "end": "2731829"
  },
  {
    "text": "choose your next single page library or built in your library at that that the",
    "start": "2731829",
    "end": "2736990"
  },
  {
    "text": "size of the files you're going to send to the users are not relevant they are at the same time I've had too many",
    "start": "2736990",
    "end": "2744040"
  },
  {
    "text": "conversations or arguments about a 10k difference in a world where any",
    "start": "2744040",
    "end": "2750849"
  },
  {
    "text": "production app adds so much crap that it just isn't relevant",
    "start": "2750849",
    "end": "2756329"
  },
  {
    "text": "so yes keep track of what you're putting inside your app and yes the fact that",
    "start": "2756329",
    "end": "2761380"
  },
  {
    "text": "pre-act is a 3 K library is great but I wouldn't necessarily drop react for",
    "start": "2761380",
    "end": "2766660"
  },
  {
    "text": "pre-act just because I gained 20 K or 50",
    "start": "2766660",
    "end": "2772150"
  },
  {
    "text": "K in the end process let's talk about better criterias so community size npm",
    "start": "2772150",
    "end": "2781960"
  },
  {
    "start": "2776000",
    "end": "2776000"
  },
  {
    "text": "downloads is an excellent way of checking it but you can also look at github stars and follows you can also",
    "start": "2781960",
    "end": "2790240"
  },
  {
    "text": "look at places like Stack Overflow to see how people are asking questions about the",
    "start": "2790240",
    "end": "2795420"
  },
  {
    "text": "library you want to use and how many answers are actually being submitted",
    "start": "2795420",
    "end": "2800750"
  },
  {
    "text": "learning resources are very important especially if you want to onboard new",
    "start": "2800750",
    "end": "2805770"
  },
  {
    "text": "developers there's plenty of online videos that will go and teach you how to",
    "start": "2805770",
    "end": "2811319"
  },
  {
    "text": "use every type of library out there the number quality and how recently they",
    "start": "2811319",
    "end": "2817829"
  },
  {
    "text": "were written is very important because in things like angular and angularjs but",
    "start": "2817829",
    "end": "2824369"
  },
  {
    "text": "even with things like Redux or react there have been changes over the years and using a three four year old video is",
    "start": "2824369",
    "end": "2831300"
  },
  {
    "text": "generally an elephant irrelevant",
    "start": "2831300",
    "end": "2837290"
  },
  {
    "text": "additional capabilities I didn't talk covered the core capabilities that",
    "start": "2837290",
    "end": "2843119"
  },
  {
    "text": "create a single page application there's a lot of additional capabilities that can come with the library that can be",
    "start": "2843119",
    "end": "2850050"
  },
  {
    "text": "for management dependency injection arrow handling which are only supported",
    "start": "2850050",
    "end": "2857400"
  },
  {
    "text": "by some of the libraries if you're going to use a very heavily dependent forms",
    "start": "2857400",
    "end": "2863520"
  },
  {
    "text": "application and you know might be the best solution out there you do need to be aware that no matter which library",
    "start": "2863520",
    "end": "2870540"
  },
  {
    "text": "you are going to use you're likely to use third-party solutions so I wouldn't",
    "start": "2870540",
    "end": "2876450"
  },
  {
    "text": "be too worried about the fact that react is automatically bundled with whatever",
    "start": "2876450",
    "end": "2882450"
  },
  {
    "text": "with a hooter that is third-party because that's quite standard and angular which is supposed to provide you",
    "start": "2882450",
    "end": "2889980"
  },
  {
    "text": "with everything doesn't come with state management and frankly as other broken internationalization library which means",
    "start": "2889980",
    "end": "2896940"
  },
  {
    "text": "that if you need to support international organization you're probably going to use a third-party supplier anyway and the last point is is",
    "start": "2896940",
    "end": "2907319"
  },
  {
    "text": "personal preferences so I mean your past experiences are going to significantly",
    "start": "2907319",
    "end": "2914220"
  },
  {
    "text": "affect which level you're going to select and that's not a bad thing if you",
    "start": "2914220",
    "end": "2919230"
  },
  {
    "text": "have a lot of experience with dotnet the move to and to angular is generally",
    "start": "2919230",
    "end": "2924390"
  },
  {
    "text": "considered the more painless and you should be aware of these limitations and kind of brace them",
    "start": "2924390",
    "end": "2929750"
  },
  {
    "text": "instead of fighting them and remember that the fact that angular only has six",
    "start": "2929750",
    "end": "2936080"
  },
  {
    "text": "hundred thousand weekly download of you only three hundred thousand weekly downloads versus the 2.5 million doesn't",
    "start": "2936080",
    "end": "2943910"
  },
  {
    "text": "really make your angular any less acceptable for your daily use because",
    "start": "2943910",
    "end": "2951140"
  },
  {
    "text": "none of them is likely to go away in the near future and all of them have a large",
    "start": "2951140",
    "end": "2957230"
  },
  {
    "text": "enough community that will be able to support whatever development you're going to make with this we move to the",
    "start": "2957230",
    "end": "2965090"
  },
  {
    "text": "questions part the presentations already online on the following URL this is my",
    "start": "2965090",
    "end": "2972410"
  },
  {
    "text": "email this is my Twitter account you can tweet to me I will not answer in the next week and that's it if anyone has",
    "start": "2972410",
    "end": "2981020"
  },
  {
    "text": "questions this is the mic and I will do my best to find how to turn it on yes",
    "start": "2981020",
    "end": "2993310"
  },
  {
    "text": "thank you so raise your hands if you have questions if no one has questions",
    "start": "2993310",
    "end": "2999880"
  },
  {
    "text": "someone do have a question I can't see with all the light shines directly in my",
    "start": "2999880",
    "end": "3005859"
  },
  {
    "text": "eyes can you speak a little louder I you",
    "start": "3005859",
    "end": "3016600"
  },
  {
    "text": "mentioned that angular is the best choice for developers it's like the",
    "start": "3016600",
    "end": "3021970"
  },
  {
    "text": "simplest jump why is it so I think that the fact that angular was created with",
    "start": "3021970",
    "end": "3028300"
  },
  {
    "text": "typescript means that a lot of the only test dependency injections and it has a",
    "start": "3028300",
    "end": "3035230"
  },
  {
    "text": "lot of core concepts that are much more familiar to dotnet developers whereas TM",
    "start": "3035230",
    "end": "3042280"
  },
  {
    "text": "react where you need to reinvent the entire application and put together a",
    "start": "3042280",
    "end": "3048310"
  },
  {
    "text": "lot of different libraries is more daunting to to.net users the same with",
    "start": "3048310",
    "end": "3054190"
  },
  {
    "text": "UJ s because you don't have classes and suddenly they go outside of the",
    "start": "3054190",
    "end": "3059440"
  },
  {
    "text": "zone it doesn't mean that they won't be able to learn UJS it just we scare them",
    "start": "3059440",
    "end": "3064720"
  },
  {
    "text": "a little more and maybe take them a little longer any other questions",
    "start": "3064720",
    "end": "3072840"
  },
  {
    "text": "the question was what's the best utility for testing in angular I assume unit testing I've been using",
    "start": "3079360",
    "end": "3085540"
  },
  {
    "text": "jasmine forever I can't say if it's the best I mean they're all doing roughly",
    "start": "3085540",
    "end": "3091540"
  },
  {
    "text": "the same thing just writing tests is probably what you need to do and everything else is kind of we will fall",
    "start": "3091540",
    "end": "3098980"
  },
  {
    "text": "into place once you get used to the syntax I've not seen any significant",
    "start": "3098980",
    "end": "3104530"
  },
  {
    "text": "differences at least yes in all of these",
    "start": "3104530",
    "end": "3110710"
  },
  {
    "text": "libraries you now mount the components the question was do you mount a component in angular the answer is yes",
    "start": "3110710",
    "end": "3116050"
  },
  {
    "text": "and it goes across the board any other questions",
    "start": "3116050",
    "end": "3121510"
  },
  {
    "text": "I think those",
    "start": "3121510",
    "end": "3125580"
  },
  {
    "text": "right thanks for the talk I have a question about the state management and",
    "start": "3128470",
    "end": "3134079"
  },
  {
    "text": "mainly the side effects how do handle side effects a synchronous operations and since we're talking about",
    "start": "3134079",
    "end": "3141760"
  },
  {
    "text": "SBA's when you navigate away from one page to another you don't want to kind",
    "start": "3141760",
    "end": "3149710"
  },
  {
    "text": "of tie tidy up after yourself maybe you have some requests pending we don't you",
    "start": "3149710",
    "end": "3154810"
  },
  {
    "text": "just want to disregard them and move on to the next page so yeah that's the question okay",
    "start": "3154810",
    "end": "3160510"
  },
  {
    "text": "so how do you handle side effect is a question that kind of started with redux",
    "start": "3160510",
    "end": "3167829"
  },
  {
    "text": "and immutable datastore and he's being treated slightly differently within",
    "start": "3167829",
    "end": "3174569"
  },
  {
    "text": "every solution out there so I can't really give a clear answer to that we",
    "start": "3174569",
    "end": "3183280"
  },
  {
    "text": "Docs has funk and I forgot those another one this specifically helps you yeah to",
    "start": "3183280",
    "end": "3190780"
  },
  {
    "text": "handle side effects and I think a more big have something called side effect or",
    "start": "3190780",
    "end": "3200170"
  },
  {
    "text": "something like that which effects I think that allows you to handle effects when an action happens",
    "start": "3200170",
    "end": "3206560"
  },
  {
    "text": "but each one of them has a specific way of handling those side effects they do",
    "start": "3206560",
    "end": "3212349"
  },
  {
    "text": "it mostly the same they just have slightly different names I've seen",
    "start": "3212349",
    "end": "3217720"
  },
  {
    "text": "people who are too battled with the side effect and they decided to take them out",
    "start": "3217720",
    "end": "3224410"
  },
  {
    "text": "of redux so the original object calls does not a fire in action only the result I",
    "start": "3224410",
    "end": "3231780"
  },
  {
    "text": "wouldn't go down that route it just makes it maybe a little simple at the beginning but you lose a whole set of",
    "start": "3231780",
    "end": "3238930"
  },
  {
    "text": "actions and the ability to track what happened your problem anything else or",
    "start": "3238930",
    "end": "3247750"
  },
  {
    "text": "shall we call it today you're right okay the question is about",
    "start": "3247750",
    "end": "3260690"
  },
  {
    "text": "end-to-end testing I'll be honest and say that I've only done in to end testing with angular and angularjs I've",
    "start": "3260690",
    "end": "3267080"
  },
  {
    "text": "used both tact or it's a very easy way to set up a set of sanity checks so",
    "start": "3267080",
    "end": "3275690"
  },
  {
    "text": "end-to-end testing basically means that I have a script that controls the browser and tells me whether expected",
    "start": "3275690",
    "end": "3283550"
  },
  {
    "text": "things happened so I make several large flows in the app like registration like",
    "start": "3283550",
    "end": "3289580"
  },
  {
    "text": "adding a comment and I verified that I'm able to add a comment even after changes",
    "start": "3289580",
    "end": "3295520"
  },
  {
    "text": "happen to the app it's really good again for the initial I mean if you don't have",
    "start": "3295520",
    "end": "3301730"
  },
  {
    "text": "unit tests it's an excellent way of adding some form of testing because it means that when you make these changes",
    "start": "3301730",
    "end": "3307810"
  },
  {
    "text": "you can at least be certain that the main flows of the app just walk",
    "start": "3307810",
    "end": "3313570"
  },
  {
    "text": "maintaining it is extremely painful because every change you make to the UI will require you to change sometimes",
    "start": "3313570",
    "end": "3321350"
  },
  {
    "text": "quite a few of these tests so I mean I'd",
    "start": "3321350",
    "end": "3326870"
  },
  {
    "text": "start with unit tests unless you don't have any and you have a already a premade app at which point yes I'm",
    "start": "3326870",
    "end": "3334100"
  },
  {
    "text": "starting with end-to-end tests might be the easiest way of adding some sanity to",
    "start": "3334100",
    "end": "3340430"
  },
  {
    "text": "your development process I hope that answers that question that's it um so it's been a pleasure I",
    "start": "3340430",
    "end": "3348500"
  },
  {
    "text": "hope you enjoyed the talk there's a box outside put the correct colors based on how well or badly you think I've given",
    "start": "3348500",
    "end": "3357140"
  },
  {
    "text": "this talk and I'll be around for questions later thank you very much [Applause]",
    "start": "3357140",
    "end": "3368288"
  }
]