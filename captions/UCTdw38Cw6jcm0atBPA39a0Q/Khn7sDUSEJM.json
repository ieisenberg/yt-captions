[
  {
    "text": "ah the screen is on and you can hear me fantastic okay people will keep coming",
    "start": "6320",
    "end": "13010"
  },
  {
    "text": "in for a minute but I'll probably get started and so hello everyone nice to",
    "start": "13010",
    "end": "19850"
  },
  {
    "text": "see you thank you for coming here I hope this is going to be a fun way to end the first day of the conference for you so",
    "start": "19850",
    "end": "26960"
  },
  {
    "text": "my name is Steve and I work on this thing this blazer product so I'm on the",
    "start": "26960",
    "end": "32990"
  },
  {
    "text": "asp net team at Microsoft and we've been developing blazer for a couple of years now and it's kind of released and kind",
    "start": "32990",
    "end": "40579"
  },
  {
    "text": "of not released but we'll talk more about that in a minute just so I can tailor my introduction to",
    "start": "40579",
    "end": "45770"
  },
  {
    "text": "you a little bit can you do our quick hands up if you feel that you know what blazer is about like you've heard the",
    "start": "45770",
    "end": "50780"
  },
  {
    "text": "big idea like okay so almost everyone alright um and also for my personal",
    "start": "50780",
    "end": "56030"
  },
  {
    "text": "interests hands up if you've actually used it or tried it out in any way that's alright that's pretty much half of the people",
    "start": "56030",
    "end": "62390"
  },
  {
    "text": "here so that's pretty cool so it's becoming a little bit tricky to decide how to do talks about blazer because",
    "start": "62390",
    "end": "67880"
  },
  {
    "text": "we're at the point now where so many people know about the basics that you can't really just do a whole talk about",
    "start": "67880",
    "end": "73670"
  },
  {
    "text": "that but at the same time there's still quite a lot of people that need to catch up so the kind of middle ground that I",
    "start": "73670",
    "end": "79070"
  },
  {
    "text": "want to strike in this talk to set your expectations is for about the first 15",
    "start": "79070",
    "end": "84079"
  },
  {
    "text": "minutes or so 10 to 15 minutes we're going to go through some of the basic ideas like what's the point of this",
    "start": "84079",
    "end": "89240"
  },
  {
    "text": "thing why does it exist what does it look like what can you do with it and we'll do a bit of programming in",
    "start": "89240",
    "end": "94490"
  },
  {
    "text": "some simple cases and then after that for the remaining part of the talk we'll go into some more advanced scenarios and",
    "start": "94490",
    "end": "100369"
  },
  {
    "text": "we'll look at some future things that we haven't actually shipped yet some cool experimental things that we're working",
    "start": "100369",
    "end": "107090"
  },
  {
    "text": "towards so you can get a sense of where this is going so to start off with this",
    "start": "107090",
    "end": "112520"
  },
  {
    "text": "little intro section let me give you a quick history lesson so I want you to think back in time cast your minds back",
    "start": "112520",
    "end": "119840"
  },
  {
    "text": "like as far as you can possibly remember your earliest memories it's like 2017 or",
    "start": "119840",
    "end": "125450"
  },
  {
    "text": "there abouts and think about what it was like back then back in those days if you were trying to make a rich web application",
    "start": "125450",
    "end": "132680"
  },
  {
    "text": "show up in someone's browser well if you wanted it to be interactive in any way you would have to use one of these",
    "start": "132680",
    "end": "138140"
  },
  {
    "text": "things so you'd be using something like angular or react or view and you would be building what is basically a",
    "start": "138140",
    "end": "144770"
  },
  {
    "text": "JavaScript application and maybe you think well yeah my code wasn't actually",
    "start": "144770",
    "end": "149780"
  },
  {
    "text": "JavaScript back then and was using typescript or flow or something else well yeah that's cool but that does",
    "start": "149780",
    "end": "155240"
  },
  {
    "text": "compile to JavaScript so at runtime the semantics of your application are JavaScript and that's just the way",
    "start": "155240",
    "end": "161330"
  },
  {
    "text": "things were and that's fine people were very successful and they're led happy and fulfilled lives with that but it's",
    "start": "161330",
    "end": "166760"
  },
  {
    "text": "kind of a shame if the only language that you can use is just one thing cuz you know software is a rich world we've",
    "start": "166760",
    "end": "172490"
  },
  {
    "text": "got many different kinds of languages frameworks tool chains and the web would be a richer place if there were more",
    "start": "172490",
    "end": "179570"
  },
  {
    "text": "options available and so that's why this exciting little thing came onto the scene at the start of 2017 which is",
    "start": "179570",
    "end": "186350"
  },
  {
    "text": "webassembly a bytecode format for the web so it's a new type of code that can run in a browser it's not JavaScript",
    "start": "186350",
    "end": "192590"
  },
  {
    "text": "it's a kind of byte code that you can compile to from whatever sort of language or ecosystem you want as long",
    "start": "192590",
    "end": "199070"
  },
  {
    "text": "as you can compile to web assembly you can run inside the browser so back then",
    "start": "199070",
    "end": "204230"
  },
  {
    "text": "at the start of 2017 when this was happening quite a lot of people started getting excited with ideas like well",
    "start": "204230",
    "end": "209989"
  },
  {
    "text": "does this mean that we could run dotnet inside a browser again but this time without any sort of plugins just in a",
    "start": "209989",
    "end": "215420"
  },
  {
    "text": "pure standards-compliant way and I was one of the people who got very excited about that I started doing some",
    "start": "215420",
    "end": "221000"
  },
  {
    "text": "prototyping and I thought actually yeah there is a way that we can do this we can make applications run inside a",
    "start": "221000",
    "end": "228200"
  },
  {
    "text": "browser we need three ingredients to make this work and the ingredients are one web assembly which is great because",
    "start": "228200",
    "end": "235310"
  },
  {
    "text": "we've got that in fact we've had that for you know two to three years now this has been shipping a standard in all",
    "start": "235310",
    "end": "241160"
  },
  {
    "text": "up-to-date browsers both desktop and mobile so that's basically a solved problem the next thing we need is some",
    "start": "241160",
    "end": "247310"
  },
  {
    "text": "kind of dotnet runtime so what I found to my surprise and delight that without",
    "start": "247310",
    "end": "253250"
  },
  {
    "text": "very much work it was possible to compile a dotnet runtime to web assembly and once you've done that you can load",
    "start": "253250",
    "end": "259640"
  },
  {
    "text": "normal dotnet assemblies into it and execute them inside your browser which is amazing if the only thing you want to",
    "start": "259640",
    "end": "266930"
  },
  {
    "text": "do is print messages to the console which is not exactly what I wanted to do I had slightly broader",
    "start": "266930",
    "end": "273250"
  },
  {
    "text": "aspirations that I wanted to build actual rich you eyes and so that needed a UI framework and that's where this",
    "start": "273250",
    "end": "278560"
  },
  {
    "text": "thing comes in blazer so blazer is a UI framework for dotnet it's not the",
    "start": "278560",
    "end": "283840"
  },
  {
    "text": "ability to run dotnet on web assembly that's a separate thing blazer is a UI framework and it can run on web assembly",
    "start": "283840",
    "end": "289630"
  },
  {
    "text": "but it can run in other places too so if you are running in a browser and web assembly then because you're already",
    "start": "289630",
    "end": "295840"
  },
  {
    "text": "there in the browser you can build a UI just by having blazed a call-out to the Dom API for you and that's just gonna",
    "start": "295840",
    "end": "302650"
  },
  {
    "text": "work and this is the original hosting model for blazer it's called client-side blazer or blazer",
    "start": "302650",
    "end": "308110"
  },
  {
    "text": "webassembly as we call it now that's the original type of blazer but it's not the only type because while we were doing",
    "start": "308110",
    "end": "314470"
  },
  {
    "text": "this we realize that we've got something pretty flexible here and we can run your blazer applications in other ways as",
    "start": "314470",
    "end": "319990"
  },
  {
    "text": "well so another thing that we could do is we could take your blazer components and we",
    "start": "319990",
    "end": "325570"
  },
  {
    "text": "could run them on a server in a cloud somewhere and then when they want to render some UI into someone's browser",
    "start": "325570",
    "end": "331690"
  },
  {
    "text": "well they can reach out across the Internet through a real-time WebSocket signal our connection and cause the UI",
    "start": "331690",
    "end": "337900"
  },
  {
    "text": "to appear there inside people's browsers and that is server-side laser so we're",
    "start": "337900",
    "end": "343210"
  },
  {
    "text": "going to be talking a little bit more in this talk about the differences between these two models and why you should pick one or the other depending on your",
    "start": "343210",
    "end": "349390"
  },
  {
    "text": "situation but before we really get to that I want to start looking at some code cuz we haven't done any coding yet",
    "start": "349390",
    "end": "354910"
  },
  {
    "text": "and I've had enough for some slides so let's have a go at building an actual UI",
    "start": "354910",
    "end": "360550"
  },
  {
    "text": "using the blazer programming model and the scenario I want to take on is budget",
    "start": "360550",
    "end": "366580"
  },
  {
    "text": "allocation okay sounds unbelievably boring but imagine the situation right the situation is this next week you go",
    "start": "366580",
    "end": "373390"
  },
  {
    "text": "back to your company and you adopt blazer and as an immediate result of that you inevitably become dramatically",
    "start": "373390",
    "end": "379780"
  },
  {
    "text": "more successful okay and then following on from that is a another immediate result you have loads more money than",
    "start": "379780",
    "end": "385870"
  },
  {
    "text": "you ever did before which is one of the problems there you know we can all relate to and so we have to decide then what we're going to do with all this",
    "start": "385870",
    "end": "391900"
  },
  {
    "text": "extra money we need to somehow give it out to all the staff as bonuses but who gets the bonuses how much do they get",
    "start": "391900",
    "end": "397300"
  },
  {
    "text": "well that's the budget allocation problem that we're going to solve and there are this is a real-world problem",
    "start": "397300",
    "end": "402400"
  },
  {
    "text": "people try to build you eyes to do this kind of thing and an example of a real world ui4 budget allocation is this so I got",
    "start": "402400",
    "end": "409890"
  },
  {
    "text": "this picture off the internet it's it's the humble jumbo bundle three just a snappy name and when you buy that you",
    "start": "409890",
    "end": "416580"
  },
  {
    "text": "get to choose how your money gets distributed across these different budget items so how about we try and",
    "start": "416580",
    "end": "423960"
  },
  {
    "text": "build something like that using the blazer programming model just now and then we'll get a sense of what it's like to use so I'm going to switch",
    "start": "423960",
    "end": "431070"
  },
  {
    "text": "over to my IDE and you can see I'm using Visual Studio and when there's windows here but you don't have to do that you",
    "start": "431070",
    "end": "437130"
  },
  {
    "text": "can equally well use vs code on Linux or Mac or and windows if you want you can use vs for Mac if you like and I'm just",
    "start": "437130",
    "end": "444720"
  },
  {
    "text": "gonna use vo some windows because I'm familiar with that and this is my application I'm gonna start it up first",
    "start": "444720",
    "end": "450360"
  },
  {
    "text": "and then we'll look at a little bit of the code inside there so if I run it you'll see this may be familiar to many",
    "start": "450360",
    "end": "456930"
  },
  {
    "text": "of you certainly those of you who have seen blazer before this is pretty much the default file new project that you",
    "start": "456930",
    "end": "463380"
  },
  {
    "text": "get when you create a new blazer project and it's got a few pages in there it's got some example stuff like at this button that you can click on and it",
    "start": "463380",
    "end": "469440"
  },
  {
    "text": "counts it an example affecting some data from the server and that's very well but",
    "start": "469440",
    "end": "475110"
  },
  {
    "text": "it's kind of boring and I don't want to talk about it too much because I've talked about a million times and you can see plenty of information about this on",
    "start": "475110",
    "end": "481380"
  },
  {
    "text": "the internet already so what I want us to look at really is this bonus splitter page that we're going to implement so",
    "start": "481380",
    "end": "488730"
  },
  {
    "text": "where's the code for that then well this is the project here and let's get the",
    "start": "488730",
    "end": "494010"
  },
  {
    "text": "hang on that way all right so this is a blazer application in this case it's a blazer server application so my code",
    "start": "494010",
    "end": "500760"
  },
  {
    "text": "here is going to be running on the server and it's going to be updating the UI dynamically over a socket connection but you won't really be able to tell",
    "start": "500760",
    "end": "506880"
  },
  {
    "text": "that's happening because it's very fast but the same code would work equally well on blazer webassembly doesn't",
    "start": "506880",
    "end": "512580"
  },
  {
    "text": "really make much difference now what have we got in here what is the code well it's a bunch of c-sharp files and",
    "start": "512580",
    "end": "518700"
  },
  {
    "text": "RAZR files so razor files are the components in a blazer application and blazer is a component UI framework you",
    "start": "518700",
    "end": "525480"
  },
  {
    "text": "build a set of components that contain other components it's just a big tree of components all the way down and the one",
    "start": "525480",
    "end": "531030"
  },
  {
    "text": "we want to work on is this bonus dot razor and you can see doesn't have very much in there right now the only",
    "start": "531030",
    "end": "537270"
  },
  {
    "text": "interesting thing really we've got is this page directive says this is the thing that will be displayed if you are at the URL bois de",
    "start": "537270",
    "end": "543450"
  },
  {
    "text": "bonus and that is indeed the URL that I map so that's why that markup is getting displayed okay so let's put some logic",
    "start": "543450",
    "end": "550890"
  },
  {
    "text": "in here now because this is a razor file I can put in some c-sharp code that will",
    "start": "550890",
    "end": "557100"
  },
  {
    "text": "run wherever my application is running and I want to model the idea of this",
    "start": "557100",
    "end": "562110"
  },
  {
    "text": "this budget situation so what we gonna do well let's start by defining the total amount of money that we're trying",
    "start": "562110",
    "end": "568680"
  },
  {
    "text": "to allocate and we're gonna say we'll have a million pounds that we need to give out dollars or whatever units of currency you like and I need to know who",
    "start": "568680",
    "end": "576270"
  },
  {
    "text": "are the candidates for receiving this money so I've defined this class called",
    "start": "576270",
    "end": "581820"
  },
  {
    "text": "budget item which has got a name and an amount and we're going to set up a list of them so we can model our scenario",
    "start": "581820",
    "end": "589050"
  },
  {
    "text": "okay so we want to give some money to developers some to managers and some to salespeople and now I can use that to",
    "start": "589050",
    "end": "595980"
  },
  {
    "text": "write a little bit of UI so up here in my razor markup I can start writing out some normal HTML so I'm never div with",
    "start": "595980",
    "end": "603300"
  },
  {
    "text": "class equals budget and if I want to make a list of things well I can use a",
    "start": "603300",
    "end": "608880"
  },
  {
    "text": "normal C sharp for each statement so for each of our item in budget items we can",
    "start": "608880",
    "end": "615380"
  },
  {
    "text": "omit some markup to those and the markup that I'm going to omit is going to look",
    "start": "615380",
    "end": "620760"
  },
  {
    "text": "like this so for each thing I'm gonna display the name and the amount of money which is formatted as currency with zero",
    "start": "620760",
    "end": "627780"
  },
  {
    "text": "decimal places and then we'll just have this little to-do message over here so let's run that now and see if that",
    "start": "627780",
    "end": "633240"
  },
  {
    "text": "actually does render something so we reload and yes okay",
    "start": "633240",
    "end": "639210"
  },
  {
    "text": "can you still hear me okay yeah okay sounds weird to me up here right so we",
    "start": "639210",
    "end": "644370"
  },
  {
    "text": "can see we've got these three categories now developers managers and sales they've got no money and we need to make an editor and the kind of editor that we",
    "start": "644370",
    "end": "651210"
  },
  {
    "text": "want to make if you remember looks like this so we want to have these horizontal sliders and the way we can do sliders in",
    "start": "651210",
    "end": "658500"
  },
  {
    "text": "HTML is to use the input type equals range input type equals range and if you",
    "start": "658500",
    "end": "667650"
  },
  {
    "text": "want to use one of these it starts at zero and you need to specify a maximum value that it goes up to and I'm going",
    "start": "667650",
    "end": "673110"
  },
  {
    "text": "to goes up to the total budget we can also specify the minimum increments step so",
    "start": "673110",
    "end": "679810"
  },
  {
    "text": "we don't need to go up in individual pounds or fractions of pounds honestly we've got so much money now we don't",
    "start": "679810",
    "end": "684820"
  },
  {
    "text": "care about any unit that's less than a thousand pounds at a time and then finally we need to put this data",
    "start": "684820",
    "end": "690730"
  },
  {
    "text": "somewhere so I'm gonna use Blazers built-in bind to set up a two-way binding between this slider and the",
    "start": "690730",
    "end": "698230"
  },
  {
    "text": "amount that's on my item like that okay let's try that out and see if we built a",
    "start": "698230",
    "end": "704560"
  },
  {
    "text": "nice budget editor okay so we've got these sliders and it does actually update the values on our underlying",
    "start": "704560",
    "end": "712150"
  },
  {
    "text": "model which is cool but it's not very cool just yet actually it's pretty awful right now",
    "start": "712150",
    "end": "717900"
  },
  {
    "text": "it's nearly impossible to enter any specific amount of money because you see that the numbers don't even update until",
    "start": "717900",
    "end": "723640"
  },
  {
    "text": "I release the mouse so that's pretty terrible why is that well that is because Blazer is built on normal web",
    "start": "723640",
    "end": "730390"
  },
  {
    "text": "technologies and let the bind attribute here that is by default connected to the",
    "start": "730390",
    "end": "736330"
  },
  {
    "text": "browser's change event on that element and if you know web programming you may know that the change event will only",
    "start": "736330",
    "end": "742720"
  },
  {
    "text": "fire when the user moves away from the component or when they let go of their mouse on a slider so that's not the",
    "start": "742720",
    "end": "748060"
  },
  {
    "text": "event I want to listen to I want to listen to a different event which is standard in the browser and I can do",
    "start": "748060",
    "end": "753880"
  },
  {
    "text": "that by saying the bind event I want to listen for is on input okay so let's see",
    "start": "753880",
    "end": "759640"
  },
  {
    "text": "what effect that has now on the UI so now as I move these sliders you'll see that the number now updates in real time",
    "start": "759640",
    "end": "767170"
  },
  {
    "text": "which is a lot better but we still got a series of UX problems with this but one",
    "start": "767170",
    "end": "772360"
  },
  {
    "text": "of them is how do I know when I've allocated all the money like I maybe I don't know whether that adds up to a million or not my my arithmetic is not",
    "start": "772360",
    "end": "779170"
  },
  {
    "text": "that good so let's display the amount of money that remains to be allocated and we can",
    "start": "779170",
    "end": "784900"
  },
  {
    "text": "do this quite easily so NC shop we can define a property called remaining and",
    "start": "784900",
    "end": "790660"
  },
  {
    "text": "we'll compute that by starting with the total budget and we'll subtract the sum of all the items that we've assigned so",
    "start": "790660",
    "end": "797650"
  },
  {
    "text": "far and then we can display that on the screen inside a span like this the remaining amount is that formatted as a",
    "start": "797650",
    "end": "804400"
  },
  {
    "text": "currency okay let's see if that makes things a little better now so we've got a million remaining and as we",
    "start": "804400",
    "end": "810610"
  },
  {
    "text": "move this that amount goes down so that's pretty good but we've still got more problems for",
    "start": "810610",
    "end": "815709"
  },
  {
    "text": "example nothing stops our user right now allocating even more money than they've actually got like I've done yeah so how",
    "start": "815709",
    "end": "822519"
  },
  {
    "text": "can I stop them from doing that make sure they don't over spend their budget well I want to change the maximum value",
    "start": "822519",
    "end": "829180"
  },
  {
    "text": "that you're allowed to assign and what I'm going to say is for each item you are allowed to assign the the amount",
    "start": "829180",
    "end": "836889"
  },
  {
    "text": "that you have already assigned to that Plus at most the remaining amount okay",
    "start": "836889",
    "end": "842649"
  },
  {
    "text": "hopefully that makes sense you've already got this much and this is how much is remaining maximally when you are",
    "start": "842649",
    "end": "848320"
  },
  {
    "text": "editing this particular thing so let's see the effect of that now and I warn you it's pretty weird at this point so",
    "start": "848320",
    "end": "854740"
  },
  {
    "text": "let's see I'm gonna give quite a lot of money to developers because obviously they're great and then I'll start",
    "start": "854740",
    "end": "860350"
  },
  {
    "text": "assigning some money to the managers and watch what happens okay so if I move it right up to the end well",
    "start": "860350",
    "end": "867220"
  },
  {
    "text": "okay so it's good in the sense that I wasn't able to exceed my budget anymore and I fact I can't even assign any money",
    "start": "867220",
    "end": "872769"
  },
  {
    "text": "to the salespeople now because you know there's nothing left but it's also like mad because these two sliders they",
    "start": "872769",
    "end": "880240"
  },
  {
    "text": "appear to be in the same place so you'd think they represent the same amount of money but they don't they represent different amounts because the scale",
    "start": "880240",
    "end": "885940"
  },
  {
    "text": "factors have changed now depending on how I edited it so what I'm going to do is a cool little trick which is maybe",
    "start": "885940",
    "end": "892990"
  },
  {
    "text": "hard to understand at first but just go with me I want to change the horizontal scale of these elements so that they",
    "start": "892990",
    "end": "899139"
  },
  {
    "text": "compensates for the different max values that I'm assigning to them so don't worry if you don't quite follow this",
    "start": "899139",
    "end": "905709"
  },
  {
    "text": "code you can think about it later and ponder on the maths behind it it's not too bad so we're saying the width of",
    "start": "905709",
    "end": "912310"
  },
  {
    "text": "each item is going to be in proportion to the maximum amount that could be on that item so even if you don't quite",
    "start": "912310",
    "end": "919240"
  },
  {
    "text": "follow that hopefully you'll appreciate the effect let's see what happens now so as I move the developers amount you'll",
    "start": "919240",
    "end": "925120"
  },
  {
    "text": "see that the remaining space on the other ones goes down now to compensate for it so if there's only a small amount",
    "start": "925120",
    "end": "931510"
  },
  {
    "text": "of money left there's only a very small slider that I can set up for the sales people which is cool and I quite like",
    "start": "931510",
    "end": "937329"
  },
  {
    "text": "this as a UX because it really makes you think carefully about what you're doing so if you decide that you need to give more money to one group",
    "start": "937329",
    "end": "944710"
  },
  {
    "text": "you have to think first about where you're taking it away from so in this case I would say well you know these",
    "start": "944710",
    "end": "949840"
  },
  {
    "text": "people at the bottom they're not really adding any value so let's move that down there and then you know we can put it where it where it belongs okay that's",
    "start": "949840",
    "end": "956140"
  },
  {
    "text": "good so we've made a pretty decent little user experience here but there's still one problem left at least maybe",
    "start": "956140",
    "end": "962440"
  },
  {
    "text": "several but at least one and that's why if our user is not being very smart today and they just don't even allocate",
    "start": "962440",
    "end": "968080"
  },
  {
    "text": "all the money and they're just leaving some money on the table for no reason at all how can we stop them from doing that",
    "start": "968080",
    "end": "973300"
  },
  {
    "text": "well let's say that we want to have a Save button at the bottom of our UI so",
    "start": "973300",
    "end": "978340"
  },
  {
    "text": "I'm gonna have a button with the captions save and I'm not gonna wire up any behavior to it but what I will say",
    "start": "978340",
    "end": "983470"
  },
  {
    "text": "is that this button will be disabled if the remaining amount is greater than",
    "start": "983470",
    "end": "989410"
  },
  {
    "text": "zero it's a very simple and intuitive way of controlling the state of that button come back and reload and you'll",
    "start": "989410",
    "end": "995290"
  },
  {
    "text": "see that the Save button is disabled right now but if I allocate all the money then it becomes enabled disabled",
    "start": "995290",
    "end": "1001680"
  },
  {
    "text": "enabled disabled enabled and we've hopefully achieved our goals there so we've created something that's quite a",
    "start": "1001680",
    "end": "1008190"
  },
  {
    "text": "lot like this real world example and we've done so in pretty straightforward",
    "start": "1008190",
    "end": "1013590"
  },
  {
    "text": "and intuitive code not very much code the only difficult bit about is this weird expression on style there so I",
    "start": "1013590",
    "end": "1020580"
  },
  {
    "text": "hope that gives you a sense of what the Blazer programming model looks like and how it allows you to combine normal HTML",
    "start": "1020580",
    "end": "1027380"
  },
  {
    "text": "normal Dom type features with some c-sharp and then we can run that wherever we want whether it's on the",
    "start": "1027380",
    "end": "1033540"
  },
  {
    "text": "server or whether it's inside web assembly the other bit about blazer that I've not really got into just yet is the",
    "start": "1033540",
    "end": "1039569"
  },
  {
    "text": "fact that it's a component based framework so we've only been working on this one component and we're not really",
    "start": "1039569",
    "end": "1045209"
  },
  {
    "text": "showing you how we can split stuff up into lots of components and reuse them from each other and to do that I want to",
    "start": "1045209",
    "end": "1051510"
  },
  {
    "text": "move on to a slightly bigger a more interesting example so that previous",
    "start": "1051510",
    "end": "1056760"
  },
  {
    "text": "application was running on blazer server and now want to move on to a bigger scenario that's going to be running on",
    "start": "1056760",
    "end": "1062790"
  },
  {
    "text": "blazer webassembly and as we do that I'll show you some cool features that are not actually part of the framework",
    "start": "1062790",
    "end": "1068190"
  },
  {
    "text": "yeah but things that we're thinking about including in the future and hopefully you can give us some feedback",
    "start": "1068190",
    "end": "1073200"
  },
  {
    "text": "about so what will the scenario be well I thought it would be quite fun to do some",
    "start": "1073200",
    "end": "1079010"
  },
  {
    "text": "things that doesn't actually even run inside a normal computer at all something that doesn't run inside a normal browser I would like to do",
    "start": "1079010",
    "end": "1085790"
  },
  {
    "text": "something that runs on a specialized bit of hardware just for a change and the scenario that came to mind for me was",
    "start": "1085790",
    "end": "1092030"
  },
  {
    "text": "this so how many of you have ever used one of these devices in your actual lives yeah so they're not that unusual",
    "start": "1092030",
    "end": "1098590"
  },
  {
    "text": "they've been around for a few years now this photo is from Waitrose but I think I've already also seen them in ASDA so",
    "start": "1098590",
    "end": "1104870"
  },
  {
    "text": "don't worry it's not just a middle-class thing you can even use them if you're from up north like me and if you're not",
    "start": "1104870",
    "end": "1111590"
  },
  {
    "text": "familiar with this the way it works is you go into the supermarket and you're going to do some shopping but you're an",
    "start": "1111590",
    "end": "1117020"
  },
  {
    "text": "impatient person and you don't want to go to the checkout at the end because standing in line is just the worst thing",
    "start": "1117020",
    "end": "1122240"
  },
  {
    "text": "that you can do so what happens instead is you go into the supermarket and near the entrance you see this big Bank of",
    "start": "1122240",
    "end": "1128300"
  },
  {
    "text": "devices and you walk over and you pick one of them up and it turns on and then while you're going around the",
    "start": "1128300",
    "end": "1133880"
  },
  {
    "text": "supermarket doing your shopping each time you want to buy something you scan its barcode with your scanner and the",
    "start": "1133880",
    "end": "1139820"
  },
  {
    "text": "device displays a list of items that are in your trolley right now and it shows you the price the amount that you spent",
    "start": "1139820",
    "end": "1145580"
  },
  {
    "text": "altogether and then when you finish doing your shopping and you're ready to go home you don't have to go and stand",
    "start": "1145580",
    "end": "1151280"
  },
  {
    "text": "in line and wait for someone to scan all your stuff all you do now is you go over",
    "start": "1151280",
    "end": "1156380"
  },
  {
    "text": "to the payment area and you scan your order onto the payment machine you put",
    "start": "1156380",
    "end": "1161690"
  },
  {
    "text": "your card in you pay and you walk out and you didn't have to queue up so that's that's the scenario and what",
    "start": "1161690",
    "end": "1167330"
  },
  {
    "text": "we're gonna do in the next 20 minutes or so is build some of the UI that would run",
    "start": "1167330",
    "end": "1172580"
  },
  {
    "text": "on one of these devices and hopefully as we go I'll be able to give you a few reasons why blazer webassembly would",
    "start": "1172580",
    "end": "1179060"
  },
  {
    "text": "actually be a really good fit for this in the real world okay so let's switch over to the application",
    "start": "1179060",
    "end": "1186770"
  },
  {
    "text": "that we're going to be working on now obviously we don't have time to build that completely from scratch right now so I've already started preparing a",
    "start": "1186770",
    "end": "1194150"
  },
  {
    "text": "starting point for us here and what have I got in this solution then well I've got three projects in here but ignore",
    "start": "1194150",
    "end": "1201500"
  },
  {
    "text": "the test one for now we'll get to that later we've got the server to client I'm just gonna start up my serve",
    "start": "1201500",
    "end": "1207559"
  },
  {
    "text": "and I know that's kind of hard to to make sense of but there we go alright so the server in this case is",
    "start": "1207559",
    "end": "1214360"
  },
  {
    "text": "the thing that's responsible for having all the product inventory data so there's too much data for us to actually",
    "start": "1214360",
    "end": "1220220"
  },
  {
    "text": "put on one of these little devices so there's going to be some kind of back-end server that our client application to make requests to to get",
    "start": "1220220",
    "end": "1227179"
  },
  {
    "text": "information about whatever Goods the user has scanned and that can be updated you know whenever we want now as it",
    "start": "1227179",
    "end": "1233059"
  },
  {
    "text": "happens I've implemented it with a subpoena core but I didn't have to I could have used any server-side technology we want for that because",
    "start": "1233059",
    "end": "1239539"
  },
  {
    "text": "Blaser as a client doesn't really care what your server is but you know I'm kind of familiar with it's been at core so that's why I've chosen to do that and",
    "start": "1239539",
    "end": "1246559"
  },
  {
    "text": "then I've also got blazer client and this is a blazer webassembly application and inside there we've got",
    "start": "1246559",
    "end": "1252950"
  },
  {
    "text": "basically the same stuff that we had in our other application which was running on the server so we've got the same kind",
    "start": "1252950",
    "end": "1258919"
  },
  {
    "text": "of razor files and c-sharp files and inside there we're going to be doing the same component or intent programming so",
    "start": "1258919",
    "end": "1266029"
  },
  {
    "text": "let's just try starting this up and see what it looks like before we look at some code so if I launch that in my",
    "start": "1266029",
    "end": "1271220"
  },
  {
    "text": "browser now you'll see we get this blazer Mart and it's ready to go so I user can now start using it now if",
    "start": "1271220",
    "end": "1278389"
  },
  {
    "text": "you remember in the real world the display will probably be sort of a portrait orientation like this or",
    "start": "1278389",
    "end": "1284960"
  },
  {
    "text": "something but we don't really care about that that's just a matter of CSS so for the rest of this talk will just continue",
    "start": "1284960",
    "end": "1290899"
  },
  {
    "text": "displaying it full screen in landscape mode and as you can see the only feature",
    "start": "1290899",
    "end": "1295970"
  },
  {
    "text": "of our application that we want to expose to users is the ability to scan groceries now I've also got this",
    "start": "1295970",
    "end": "1301940"
  },
  {
    "text": "autocomplete thing that I'll show you later but we wouldn't have that in the real world in the real world users are just going to be using a barcode scanner",
    "start": "1301940",
    "end": "1307759"
  },
  {
    "text": "so to get a sense of what that's actually like I've got a barcode scanner and I've got some groceries such as this",
    "start": "1307759",
    "end": "1314779"
  },
  {
    "text": "tin of beans so if I scan the barcode on this beans you can see that immediately",
    "start": "1314779",
    "end": "1319820"
  },
  {
    "text": "my application jumps into life and it says ok you've scanned something and",
    "start": "1319820",
    "end": "1324980"
  },
  {
    "text": "it's started to work but it's not really working correctly yeah you can see it says fake product instead of telling me",
    "start": "1324980",
    "end": "1331159"
  },
  {
    "text": "what I actually scanned and so how does any of this work let's see some of the code that's behind there and I'd say the",
    "start": "1331159",
    "end": "1337909"
  },
  {
    "text": "best place to start with understanding this is this component that I've created called appraiser that's my top level",
    "start": "1337909",
    "end": "1344299"
  },
  {
    "text": "root component in this application and if we look in there you'll see that we've got a series of other things so up",
    "start": "1344299",
    "end": "1351259"
  },
  {
    "text": "at the top we've got this search box that's obviously corresponds to the thing up there on the screen and then",
    "start": "1351259",
    "end": "1357080"
  },
  {
    "text": "below that we're doing the same thing that we did in the budget example where we're using a normal for each loop to",
    "start": "1357080",
    "end": "1363139"
  },
  {
    "text": "say for each of the things in your cart we're going to display this other component that I've created called cart row display and then below that if",
    "start": "1363139",
    "end": "1369889"
  },
  {
    "text": "there's anything in your cart will display a footer so you may remember that initially there was nothing in my",
    "start": "1369889",
    "end": "1376309"
  },
  {
    "text": "car and I didn't have any footer on the screen and so this if test was false but when I come along and I scan something",
    "start": "1376309",
    "end": "1383119"
  },
  {
    "text": "then that test will become true and the item will become part of the UI okay pretty straightforward stuff but why",
    "start": "1383119",
    "end": "1390230"
  },
  {
    "text": "does it say fake product that doesn't really seem right well let's see what the flow is when this when you scan an",
    "start": "1390230",
    "end": "1397070"
  },
  {
    "text": "item so our search box will raise this custom event or callback called item",
    "start": "1397070",
    "end": "1402649"
  },
  {
    "text": "chosen and I've wired that up here to this handle item chosen method and down",
    "start": "1402649",
    "end": "1407720"
  },
  {
    "text": "here you can see that and it receives an enormous tree and is literally just the",
    "start": "1407720",
    "end": "1423169"
  },
  {
    "text": "number that's printed at the bottom of a barcode so that's what the barcode scanner is providing to us here and that's all we know about what this scans",
    "start": "1423169",
    "end": "1429799"
  },
  {
    "text": "so far and then we're going to try and add that to their car so I factored out the logic to that for that into this",
    "start": "1429799",
    "end": "1436519"
  },
  {
    "text": "domain type called cart which is just a normal see Sharpe method see shop class and if we have a look inside there then",
    "start": "1436519",
    "end": "1443629"
  },
  {
    "text": "let's see what that thing actually does okay so you can see that I've got a little bit of business logic it's kind",
    "start": "1443629",
    "end": "1449480"
  },
  {
    "text": "of boring stuff and I don't want to get into it too much my logic is if you've already got one of these in your cart",
    "start": "1449480",
    "end": "1454639"
  },
  {
    "text": "then we'll increase the quantity of it and if you haven't then we're going to start fetching it from the server and you can see I've got this retry loop",
    "start": "1454639",
    "end": "1460789"
  },
  {
    "text": "we'll talk more about that later the relevant bit right now is this but this is where we're going to actually fetch",
    "start": "1460789",
    "end": "1466549"
  },
  {
    "text": "some data from the server and as you can see it's all very fake right now so we're just waiting a little bit to",
    "start": "1466549",
    "end": "1472580"
  },
  {
    "text": "pretend that we're doing some meta data access and then we returning this fake data so how can we actually get",
    "start": "1472580",
    "end": "1478850"
  },
  {
    "text": "real data from the back-end server well there's one very straightforward",
    "start": "1478850",
    "end": "1484010"
  },
  {
    "text": "and obvious way which is probably something that you've most of you have done probably many times in your careers if you want to get data from a server",
    "start": "1484010",
    "end": "1489980"
  },
  {
    "text": "there's a good chance that you would make an HTTP request to it and you would have it return some JSON data to you and",
    "start": "1489980",
    "end": "1495320"
  },
  {
    "text": "that's great that absolutely works it's very straightforward it's by far the most common way of doing this kind of",
    "start": "1495320",
    "end": "1501679"
  },
  {
    "text": "data access from Blaise a web sembly up or any other kind of spa and that's great but there are some drawbacks to",
    "start": "1501679",
    "end": "1508549"
  },
  {
    "text": "doing this kind of Jason over at DDP kind of approach today to access one of",
    "start": "1508549",
    "end": "1513740"
  },
  {
    "text": "the drawbacks is that JSON is not a very efficient way of representing data is a",
    "start": "1513740",
    "end": "1518960"
  },
  {
    "text": "very verbose way of representing data that's designed for humans and it's not even got all that much control of a",
    "start": "1518960",
    "end": "1524929"
  },
  {
    "text": "precision of certain things like numbers and dates and such so is it's not necessarily the most efficient way that",
    "start": "1524929",
    "end": "1530570"
  },
  {
    "text": "we could represent our data on the wire and the other thing is when you make these requests how do you know what URL",
    "start": "1530570",
    "end": "1536720"
  },
  {
    "text": "to make the request to and even if you know the URL how do you know what HTTP method to use and even if you know that",
    "start": "1536720",
    "end": "1542419"
  },
  {
    "text": "when the response comes back do you know what the different status codes might be and what they're supposed to mean well",
    "start": "1542419",
    "end": "1547790"
  },
  {
    "text": "maybe you do but it's quite a lot to manage and there's no real formal system for tracking all this it's kind of a",
    "start": "1547790",
    "end": "1553820"
  },
  {
    "text": "very much alike at an informal best efforts kind of system so you might think well hasn't anybody invented a",
    "start": "1553820",
    "end": "1560750"
  },
  {
    "text": "better way of doing this isn't there perhaps a more modern way of connecting my client and my back-end server in a",
    "start": "1560750",
    "end": "1566090"
  },
  {
    "text": "more performant and strongly-typed way and the answer to that is yeah absolutely there are loads of ways you",
    "start": "1566090",
    "end": "1572390"
  },
  {
    "text": "can do that people soap soap it's one of them yeah we could do so people have invented many different ways of doing",
    "start": "1572390",
    "end": "1578780"
  },
  {
    "text": "that over the years and one of them that has really started to get a lot of traction recently anyone guess what I'm",
    "start": "1578780",
    "end": "1584780"
  },
  {
    "text": "going to say GFP C so the S peanut team did a lot of work in the three Oh time",
    "start": "1584780",
    "end": "1590480"
  },
  {
    "text": "frame to make G RPC work really well on a spinet course server and just in the last week we've announced some",
    "start": "1590480",
    "end": "1597260"
  },
  {
    "text": "experimental preview packages that give you support for G RPC web now G apply C web is a subset or a slight variation on",
    "start": "1597260",
    "end": "1605450"
  },
  {
    "text": "G RPC that you could use from browser-based applications and I've got a browser-based application",
    "start": "1605450",
    "end": "1610770"
  },
  {
    "text": "here so how about we have a go at doing some G RPC from our client application okay so how can we do that well on the",
    "start": "1610770",
    "end": "1618420"
  },
  {
    "text": "server I've already got a little bit of G RPC stuff going on if we look in this",
    "start": "1618420",
    "end": "1623580"
  },
  {
    "text": "proto's directory you can see inventory dot proto and that's how we define a G",
    "start": "1623580",
    "end": "1629340"
  },
  {
    "text": "RPC service proto is a language independent format for describing a set",
    "start": "1629340",
    "end": "1634620"
  },
  {
    "text": "of endpoints that can be called and it's strongly typed and it does some cool stuff for you for example you can",
    "start": "1634620",
    "end": "1641310"
  },
  {
    "text": "automatically code generate code that can be run on the server and the client to wire all this stuff up together now",
    "start": "1641310",
    "end": "1647640"
  },
  {
    "text": "at the moment I've only got one endpoint it's called autocomplete and that's the thing that is replying if I start typing",
    "start": "1647640",
    "end": "1653490"
  },
  {
    "text": "into this box up here so I can just you know start adding stuff from the drop",
    "start": "1653490",
    "end": "1658560"
  },
  {
    "text": "from the drop down you wouldn't have that in the real world but it's kind of helpful during development to be able to just type stuff and not use a barcode",
    "start": "1658560",
    "end": "1664530"
  },
  {
    "text": "scanner all the time anyway I want to get real Product data from the server now so I'm going to add a new endpoint",
    "start": "1664530",
    "end": "1671250"
  },
  {
    "text": "on the server and I'm going to define it like this it's called product details it will take a product details request and",
    "start": "1671250",
    "end": "1677850"
  },
  {
    "text": "return the product details response and I haven't defined those yet so let's do that",
    "start": "1677850",
    "end": "1682860"
  },
  {
    "text": "my definition will look like this the request will be the article number from the client that's all and then the",
    "start": "1682860",
    "end": "1688740"
  },
  {
    "text": "response will be a product pretty straightforward stuff okay so let's build that now and once I've done that I",
    "start": "1688740",
    "end": "1695340"
  },
  {
    "text": "can start filling in a server-side implementation for it and like I said this is designed to tie-in with code",
    "start": "1695340",
    "end": "1701430"
  },
  {
    "text": "generation so on the server you'll see I've got this class already called inventory service which inherits from",
    "start": "1701430",
    "end": "1706830"
  },
  {
    "text": "inventory base and that is automatically provided for me by the tooling which",
    "start": "1706830",
    "end": "1712080"
  },
  {
    "text": "means now if added the new endpoint I can type override and you'll see that intelligence says hey why don't you",
    "start": "1712080",
    "end": "1718290"
  },
  {
    "text": "consider supplying some logic for product details okay so I will what logic do I want on the server well I can",
    "start": "1718290",
    "end": "1725670"
  },
  {
    "text": "do something pretty simple I can do the following I can say ok this is going to be a sync",
    "start": "1725670",
    "end": "1731550"
  },
  {
    "text": "for a start I'm gonna add a bit of a delay because if I don't it's all gonna be too fast and you won't be able to see",
    "start": "1731550",
    "end": "1736710"
  },
  {
    "text": "the loading states that we're going through so we'll just do that then we'll do a lookup in the database to get the product object and we can",
    "start": "1736710",
    "end": "1743760"
  },
  {
    "text": "return that to the client and that's all there is to it on the server great so now I've changed my server I'm going to",
    "start": "1743760",
    "end": "1749760"
  },
  {
    "text": "have to restart that and then I want to put some logic into the client to actually call it and that's pretty",
    "start": "1749760",
    "end": "1756210"
  },
  {
    "text": "straightforward too because again we are able to make use of this code generation stuff so if I go into my cart data type",
    "start": "1756210",
    "end": "1763920"
  },
  {
    "text": "here my domain object you'll see that in the constructor I'm receiving from the",
    "start": "1763920",
    "end": "1770100"
  },
  {
    "text": "dependency injection system an instance of inventory client and that is code generated I don't have to write that and",
    "start": "1770100",
    "end": "1776220"
  },
  {
    "text": "if I go down here I can now call a method on it so let's get rid of all this fake logic here and we'll see what",
    "start": "1776220",
    "end": "1782850"
  },
  {
    "text": "methods are on the inventory client well you'll see that we've got autocomplete and autocomplete async but what's",
    "start": "1782850",
    "end": "1788790"
  },
  {
    "text": "happened to our product details why don't we have that surely we should by now well I didn't recompile so that",
    "start": "1788790",
    "end": "1794250"
  },
  {
    "text": "hasn't been regenerated yet but now every compiled you'll see now we've got autocomplete and we've got product details and we can call that from our",
    "start": "1794250",
    "end": "1801030"
  },
  {
    "text": "client so the logic we're going to want on the client looks a bit like this we",
    "start": "1801030",
    "end": "1806160"
  },
  {
    "text": "are going to construct a product details request with that article number we will make a request to the server and we'll",
    "start": "1806160",
    "end": "1812790"
  },
  {
    "text": "get the product back out of the response so let's see what happens now and whether this stuff actually works so",
    "start": "1812790",
    "end": "1819270"
  },
  {
    "text": "I'll come back over here and I'm going to scan my beans again and this time what do we get we get beans so it",
    "start": "1819270",
    "end": "1826500"
  },
  {
    "text": "actually works we've got our server and our client talking GRP see yeah and so my user can now go around and do",
    "start": "1826500",
    "end": "1832590"
  },
  {
    "text": "the rest of their shopping so in case you're wondering I'm working on a bit of an experimental dessert recipe right now",
    "start": "1832590",
    "end": "1838320"
  },
  {
    "text": "so with my beans I want to wrap them delicately in a parcel of ready to roll icing and then to really bring out the",
    "start": "1838320",
    "end": "1845190"
  },
  {
    "text": "flavors I'm gonna need a bit of this Thai fish sauce which I think will go really well but actually I'm just going",
    "start": "1845190",
    "end": "1851430"
  },
  {
    "text": "to need just a bit more of that to really you know make the flavors a pop okay so we have been able to make our",
    "start": "1851430",
    "end": "1859980"
  },
  {
    "text": "bigger application there speak G RPC between the client and the server and we get some benefits from that like we've",
    "start": "1859980",
    "end": "1866370"
  },
  {
    "text": "got much more efficient network traffic now and we get this strongly type interoperability between the server and",
    "start": "1866370",
    "end": "1871860"
  },
  {
    "text": "I claim excuse me okay so let's move off on that to the next subject that I want to talk",
    "start": "1871860",
    "end": "1877950"
  },
  {
    "text": "about and this is going to be to do with testing which it's clearly a very important subject if you want to write",
    "start": "1877950",
    "end": "1883380"
  },
  {
    "text": "some high quality software and one of our design goals for blazer from the very beginning has been to make sure",
    "start": "1883380",
    "end": "1889350"
  },
  {
    "text": "that you can test your blazer components in a very productive and satisfying kind of way so how could you do that well",
    "start": "1889350",
    "end": "1895680"
  },
  {
    "text": "traditionally there's two main approaches that you could use for testing some kind of UI component you",
    "start": "1895680",
    "end": "1901140"
  },
  {
    "text": "could do unit level testing because Blazer components are just classes so you could use a normal unit testing",
    "start": "1901140",
    "end": "1906990"
  },
  {
    "text": "framework to new up an instance of your component and then start calling methods on him and that's cool but it's quite",
    "start": "1906990",
    "end": "1912810"
  },
  {
    "text": "low level and it doesn't give you any way of interacting with the rendered output you can't say I want to simulate",
    "start": "1912810",
    "end": "1917940"
  },
  {
    "text": "clicking on a button or something because there aren't even any buttons so that doesn't you know it's very",
    "start": "1917940",
    "end": "1923160"
  },
  {
    "text": "low-level way of doing testing the other more high-level way you could do it is to do some kind of browser automation",
    "start": "1923160",
    "end": "1928590"
  },
  {
    "text": "using something like selenium which is something that we do a lot on the team that's building this because we need to",
    "start": "1928590",
    "end": "1933810"
  },
  {
    "text": "check that the framework actually works so we've got a lot of experience of setting up this very big suite of selenium based browser automation tests",
    "start": "1933810",
    "end": "1940680"
  },
  {
    "text": "and it's all very good in the sense that it's high level and you can work in terms of CSS selectors and clicking on",
    "start": "1940680",
    "end": "1946170"
  },
  {
    "text": "buttons and things but it does have the drawback that these tests tend to be quite slow to execute it can take maybe",
    "start": "1946170",
    "end": "1952500"
  },
  {
    "text": "a full second to execute each test and unless you're very careful about how you do it is easy to fall into the trap of",
    "start": "1952500",
    "end": "1958800"
  },
  {
    "text": "making tests that are a bit flaky because they accidentally depend on some details of the order in which things are",
    "start": "1958800",
    "end": "1964980"
  },
  {
    "text": "rendered all the timings of things and we've had to fight with that quite a lot so this gets us thinking can we design",
    "start": "1964980",
    "end": "1971700"
  },
  {
    "text": "something that gives you a way of testing your components that has got the speed and robustness of unit tests",
    "start": "1971700",
    "end": "1977280"
  },
  {
    "text": "combined with the kind of high-level expressiveness that you get with browser automation so let's have a look at an",
    "start": "1977280",
    "end": "1984060"
  },
  {
    "text": "experimental version of something like that so I've got here this third project",
    "start": "1984060",
    "end": "1989580"
  },
  {
    "text": "called laser mark test and I'm going to load that and if we look in there you'll see I've got this test class called car",
    "start": "1989580",
    "end": "1996180"
  },
  {
    "text": "tests and it's going to be using X unit as the test framework and I'm also using this experimental thing called test hope",
    "start": "1996180",
    "end": "2003990"
  },
  {
    "text": "and what that allows me to do is say I want to mount an instance of my",
    "start": "2003990",
    "end": "2009210"
  },
  {
    "text": "component in this test environment it's not an actual browser but we're going to be able to simulate what happens in",
    "start": "2009210",
    "end": "2015870"
  },
  {
    "text": "terms of rendering and user interactions okay so you'll remember this app component from earlier app is the root",
    "start": "2015870",
    "end": "2022230"
  },
  {
    "text": "component of my application so I'm basically testing the whole thing I could test individual components at once",
    "start": "2022230",
    "end": "2027750"
  },
  {
    "text": "or I can test complete groups of applications just whatever a level of the tree I choose to use as the entry",
    "start": "2027750",
    "end": "2033780"
  },
  {
    "text": "point so here here I'm testing the whole thing and I'm saying that if we look for all the elements with the cart item",
    "start": "2033780",
    "end": "2039720"
  },
  {
    "text": "class we won't find any because by default the car is empty that's why I'm testing here okay",
    "start": "2039720",
    "end": "2045300"
  },
  {
    "text": "the next test is a bit more detailed this is going to test what happens when",
    "start": "2045300",
    "end": "2050639"
  },
  {
    "text": "the user scans something so just like before we get an instance of our test component our app component and this",
    "start": "2050640",
    "end": "2057149"
  },
  {
    "text": "time I'm going to do a bit of fancy mocking stuff where I'm going to intercept any requests that are made to",
    "start": "2057150",
    "end": "2062850"
  },
  {
    "text": "the backend so that I can simulate different kinds of responses coming back or in this case I'm gonna simulate there",
    "start": "2062850",
    "end": "2068639"
  },
  {
    "text": "is no response let's come back and then I want to simulate what happens when the user scan something now if you were",
    "start": "2068640",
    "end": "2074399"
  },
  {
    "text": "wondering how this barcode scanner actually works before all it is is it just simulates a keyboard so if I scan",
    "start": "2074400",
    "end": "2080669"
  },
  {
    "text": "if I scan these beams right now then in my IDE you'll see the number gets typed out by that so that's all the barcode",
    "start": "2080670",
    "end": "2087570"
  },
  {
    "text": "scanner is doing and I can simulate that same action by typing into this search",
    "start": "2087570",
    "end": "2093240"
  },
  {
    "text": "input a fake EAN okay then I submit the form just by pressing enter like the barcode scanner",
    "start": "2093240",
    "end": "2098910"
  },
  {
    "text": "does and then I can say okay if we look for the cart items now it's not gonna be empty anymore there will be one and it",
    "start": "2098910",
    "end": "2105270"
  },
  {
    "text": "will say loading on it okay that sounds believable right and then thirdly and",
    "start": "2105270",
    "end": "2110460"
  },
  {
    "text": "finally we can simply can test what will happen when the server replies so I'm in the same situation as before except this",
    "start": "2110460",
    "end": "2117180"
  },
  {
    "text": "time I'm going to simulate the server replying with this particular data and now I can check that inside the UI that",
    "start": "2117180",
    "end": "2123900"
  },
  {
    "text": "particular product name has shown up on a certain element in the rendered output okay so let's see if this stuff actually",
    "start": "2123900",
    "end": "2130200"
  },
  {
    "text": "works shall we these are standard dotnet unit tests so they will run in any dotnet test Runner",
    "start": "2130200",
    "end": "2135750"
  },
  {
    "text": "for example you can run them inside the test Runner that's built into vs or on the command line whatever you",
    "start": "2135750",
    "end": "2141869"
  },
  {
    "text": "like and I'm running them now it has to compile and then it runs and you can see that they've all passed and the nice",
    "start": "2141869",
    "end": "2148320"
  },
  {
    "text": "thing about this is that it's very fast so the first one might take a little while to get started up because you know",
    "start": "2148320",
    "end": "2153450"
  },
  {
    "text": "it's still jetting and all that but once it gets going they're really really fast so we're talking single-digit",
    "start": "2153450",
    "end": "2158910"
  },
  {
    "text": "milliseconds here and it's going to be very robust because there's no out of process activity at all it's all",
    "start": "2158910",
    "end": "2164550"
  },
  {
    "text": "completely synchronous in process you shouldn't get flaky behaviors okay so that's nice but can we use this to",
    "start": "2164550",
    "end": "2172020"
  },
  {
    "text": "actually aid our development process in any practical way for example does this",
    "start": "2172020",
    "end": "2177300"
  },
  {
    "text": "mean that we can now do test-driven development well I'm not claiming that you always should do tests of and",
    "start": "2177300",
    "end": "2182820"
  },
  {
    "text": "development or necessarily think you even ever should I'm not giving you any opinion about that right now all I'm saying is if you did want to do",
    "start": "2182820",
    "end": "2188940"
  },
  {
    "text": "that sort of thing then hopefully the tooling and the platform and all the libraries that we've given to you should",
    "start": "2188940",
    "end": "2194640"
  },
  {
    "text": "support whatever workflow you want so let's imagine that we do want to do a bit of test-driven development right now",
    "start": "2194640",
    "end": "2199710"
  },
  {
    "text": "and the feature I want to add is this one this remove item button you'll",
    "start": "2199710",
    "end": "2205230"
  },
  {
    "text": "notice that if I click this button right now I'm clicking it nothing happens at all because I haven't implemented",
    "start": "2205230",
    "end": "2210690"
  },
  {
    "text": "anything just yet so what behavior would we want to have well for UX that I want",
    "start": "2210690",
    "end": "2216840"
  },
  {
    "text": "around removing is if the user wants to remove an item I don't want them to be able to just pick from the screen which",
    "start": "2216840",
    "end": "2222630"
  },
  {
    "text": "item they're removing because if they do that they might make a mistake and remove the wrong item and then they'll get completely confused and they'll just",
    "start": "2222630",
    "end": "2229500"
  },
  {
    "text": "have a disaster in the in the shop so what I want them to do instead is when they say they want to remove stuff I",
    "start": "2229500",
    "end": "2235200"
  },
  {
    "text": "want them to have to scan the item that they're taking out of their trolley so you know the CCTV people can watch and",
    "start": "2235200",
    "end": "2240780"
  },
  {
    "text": "see that they scan and then they put it back and they really did actually put it back yeah that's how it actually works in the shops as well so I want when I",
    "start": "2240780",
    "end": "2248280"
  },
  {
    "text": "click on the remove item button for the whole UI to switch into a different mode which is about removing stuff now and then they scan and then it will switch",
    "start": "2248280",
    "end": "2254640"
  },
  {
    "text": "back into the normal mode so that's quite a complicated UX flow there and since that's a bit complicated I'm going",
    "start": "2254640",
    "end": "2262020"
  },
  {
    "text": "to feel better if I can define that using tests so I'm going to start by defining another test just now and it's",
    "start": "2262020",
    "end": "2269430"
  },
  {
    "text": "going to be called can remove item and for this test again we'll simulate being in this situation",
    "start": "2269430",
    "end": "2274890"
  },
  {
    "text": "where there's an item in the cart and then I'm going to write some assertions so I'm going to say that by default",
    "start": "2274890",
    "end": "2281490"
  },
  {
    "text": "there won't be any overlay covering the screen because how I'm going to implement this is when you go into this",
    "start": "2281490",
    "end": "2287250"
  },
  {
    "text": "remove mode there's going to be an overlay that fills the whole screen and displays a message but we're not in that mode by default so that should be null",
    "start": "2287250",
    "end": "2293880"
  },
  {
    "text": "and if we run this test now should it pass any opinions quick no yes people",
    "start": "2293880",
    "end": "2300990"
  },
  {
    "text": "say yes and they are right because there is no overlay by default I haven't implemented that so it's going",
    "start": "2300990",
    "end": "2306150"
  },
  {
    "text": "to pass okay so following this test-driven counter process I'm going to add some more assertions until they",
    "start": "2306150",
    "end": "2312390"
  },
  {
    "text": "start failing so this time I'm going to simulate clicking on the remove item button and now this overlay should not",
    "start": "2312390",
    "end": "2319440"
  },
  {
    "text": "be null anymore it should be there I should be on the screen and there should be some text in it that says scan an",
    "start": "2319440",
    "end": "2324570"
  },
  {
    "text": "item to remove and if I run the tests again now well this time we don't expect it to pass because we certainly haven't",
    "start": "2324570",
    "end": "2330690"
  },
  {
    "text": "implemented any of that stuff just yet so this time when it runs the test fails and does it give us a good explanation",
    "start": "2330690",
    "end": "2337680"
  },
  {
    "text": "well it says the element does not have an event handler for the event on click",
    "start": "2337680",
    "end": "2343470"
  },
  {
    "text": "OK and the actual line of code that is throwing that is this one here so you",
    "start": "2343470",
    "end": "2348990"
  },
  {
    "text": "can see it makes sense right you're trying to click on this item but that item doesn't even listen for",
    "start": "2348990",
    "end": "2354270"
  },
  {
    "text": "clicks so it makes no sense and we're just going to fail the test so I'm gonna go over it now to this remove item",
    "start": "2354270",
    "end": "2361050"
  },
  {
    "text": "button and I'm gonna put in an actual click handler so I'm gonna use at on click because the handler is gonna be a",
    "start": "2361050",
    "end": "2367230"
  },
  {
    "text": "dotnet handler and not like that which could be a JavaScript one and inside there I'm gonna say let's call a method",
    "start": "2367230",
    "end": "2373140"
  },
  {
    "text": "called enter remove mode all right now I'm gonna have to define that method",
    "start": "2373140",
    "end": "2378450"
  },
  {
    "text": "otherwise the IDE and the compiler will start complaining at me as you can see look that doesn't exist so let's define",
    "start": "2378450",
    "end": "2384090"
  },
  {
    "text": "this method and what is it going to do well it's going to do a pretty simple thing I'm just going to set a flag to",
    "start": "2384090",
    "end": "2390060"
  },
  {
    "text": "true and I haven't actually defined that flag yet so let's do that okay and that's all for now let's see how far",
    "start": "2390060",
    "end": "2396990"
  },
  {
    "text": "test starts passing so we'll run the test again and this time we know there is a click handler so it shouldn't fail",
    "start": "2396990",
    "end": "2402480"
  },
  {
    "text": "for the same reason Atlee and this time does it pass no it still fails and this time it says there was a",
    "start": "2402480",
    "end": "2409079"
  },
  {
    "text": "not null assertion failure on this line here so again it makes sense they",
    "start": "2409079",
    "end": "2414450"
  },
  {
    "text": "overlay did not appear so the test should fail all right let's make the overlay appear this time so again using",
    "start": "2414450",
    "end": "2420510"
  },
  {
    "text": "normal razor syntax I'm gonna say if we're in the remove mode I'm gonna display an overlay with this markup",
    "start": "2420510",
    "end": "2426329"
  },
  {
    "text": "inside it now if you are wondering what overlay is is this a built in framework feature no it is not it's a very simple",
    "start": "2426329",
    "end": "2433319"
  },
  {
    "text": "component that I've put in my application here called overlay and it just renders this div with this class of",
    "start": "2433319",
    "end": "2438420"
  },
  {
    "text": "overlay and it puts whatever child conte inside that you want and in this case the content I want is this paragraph",
    "start": "2438420",
    "end": "2443940"
  },
  {
    "text": "here so let's try running our test yet again well it's passive this time well",
    "start": "2443940",
    "end": "2450450"
  },
  {
    "text": "let's see after it recompiles then this time it does pass good all right great",
    "start": "2450450",
    "end": "2458160"
  },
  {
    "text": "so we're making some progress but this is not the whole Fleur that I want to test I want to test what happens now if",
    "start": "2458160",
    "end": "2464220"
  },
  {
    "text": "we scan an item while we're in the remove mode so let's add a little bit of logic for that I'm going to say alright",
    "start": "2464220",
    "end": "2472109"
  },
  {
    "text": "I'll simulate the barcode scanner in the same way that I did before scanning the same item that we've got in the cart and",
    "start": "2472109",
    "end": "2478470"
  },
  {
    "text": "this time we should say that the cart has now become empty because we removed the thing for it and then the overlay",
    "start": "2478470",
    "end": "2485279"
  },
  {
    "text": "should go away as well let's run the test yet again and see whether it passes",
    "start": "2485279",
    "end": "2490289"
  },
  {
    "text": "now of course it should not because we haven't implemented the actual removal feature so it doesn't so let's implement",
    "start": "2490289",
    "end": "2496829"
  },
  {
    "text": "that right now how is that going to work well I'm gonna change my handle item chosen a little bit I'll say if in",
    "start": "2496829",
    "end": "2503819"
  },
  {
    "text": "remove mode is in remove mode then we'll do something and if we're not then we'll",
    "start": "2503819",
    "end": "2509339"
  },
  {
    "text": "do what we were doing before and the logic I'm going to have now is cart dot remove item and we'll pass that article",
    "start": "2509339",
    "end": "2516270"
  },
  {
    "text": "number through to there and we can say then the is in remove mode can go back to being false so that we're not in that",
    "start": "2516270",
    "end": "2522329"
  },
  {
    "text": "mode anymore okay so as far as I'm aware we've now implemented this feature correctly so let's try that out and see",
    "start": "2522329",
    "end": "2529260"
  },
  {
    "text": "if our test is any happier this time and the answer is the test passes great so we've now",
    "start": "2529260",
    "end": "2535980"
  },
  {
    "text": "implemented this removed feature and we know it works because the unit test says so we don't even need to look at it in a",
    "start": "2535980",
    "end": "2541470"
  },
  {
    "text": "browser because we have that much confidence right no I actually do want to see it I'm sure you want to see it as",
    "start": "2541470",
    "end": "2546630"
  },
  {
    "text": "well so let's try it now let's say I've got some beans and some fish sauce then",
    "start": "2546630",
    "end": "2552090"
  },
  {
    "text": "I've killed my web server so that's not so good at it let's bring that back up so look you come and now I'm going to",
    "start": "2552090",
    "end": "2560130"
  },
  {
    "text": "scan my things again there and there and I decided that I don't really need those",
    "start": "2560130",
    "end": "2565470"
  },
  {
    "text": "beans because Thai fish sauce is nutritious enough on its own so we'll get rid of the beans and you can see it",
    "start": "2565470",
    "end": "2572220"
  },
  {
    "text": "actually works so excellent alright so that is about testing and there's a",
    "start": "2572220",
    "end": "2578430"
  },
  {
    "text": "third area that I want to go onto now so another area that we haven't actually",
    "start": "2578430",
    "end": "2583470"
  },
  {
    "text": "shipped anything useful for but we are planning to do so by the time this stuff ships which won't be too long is around",
    "start": "2583470",
    "end": "2589950"
  },
  {
    "text": "progressive web applications or PWS so that's a pretty hot area in the front-end world at the moment has been",
    "start": "2589950",
    "end": "2595920"
  },
  {
    "text": "for a year or two and these PWA api's are ways of doing desktop like things",
    "start": "2595920",
    "end": "2602040"
  },
  {
    "text": "from inside a web browser and the most famous thing that you can do with the",
    "start": "2602040",
    "end": "2607050"
  },
  {
    "text": "PWA api's is make your application work offline that's kind of the headline feature for PWA is in general and that",
    "start": "2607050",
    "end": "2613920"
  },
  {
    "text": "would actually be really useful for us with this application because how does these devices work anyway well",
    "start": "2613920",
    "end": "2620430"
  },
  {
    "text": "presumably they work by connecting to the in-store Wi-Fi so Wi-Fi is not 100%",
    "start": "2620430",
    "end": "2626550"
  },
  {
    "text": "reliable what happens if a shopper comes into the shop they pick up one of these devices",
    "start": "2626550",
    "end": "2631560"
  },
  {
    "text": "and they're about to start using it but at that very moment it can't connect to the Wi-Fi what's the user experience",
    "start": "2631560",
    "end": "2637650"
  },
  {
    "text": "going to be like in that case well we can find out we can simulate it so I'm going to tell my browser to simulate",
    "start": "2637650",
    "end": "2643440"
  },
  {
    "text": "being offline and we'll see what the user experience for our shopper is now it's now not a great user experience I",
    "start": "2643440",
    "end": "2650580"
  },
  {
    "text": "think you'll agree so can we do a little bit better than that can we work offline well yes that's what our PWA api's are",
    "start": "2650580",
    "end": "2658710"
  },
  {
    "text": "going to let us do and the point of me showing you this is really just because blazer is a standard it's just using",
    "start": "2658710",
    "end": "2664620"
  },
  {
    "text": "standard web technologies there's nothing special or dependent on a server with it you can",
    "start": "2664620",
    "end": "2670200"
  },
  {
    "text": "use all the same PW air features that you would from any other front-end application so if we want to work offline we can use something called a",
    "start": "2670200",
    "end": "2677010"
  },
  {
    "text": "serviceworker sustained a javascript api and i've already got this serviceworker file in my project here so that's a big",
    "start": "2677010",
    "end": "2685200"
  },
  {
    "text": "chunk of javascript and you might be thinking hang on a minute what this has meant to be a darknet",
    "start": "2685200",
    "end": "2690690"
  },
  {
    "text": "thing is it why are you now showing me this massive block of JavaScript I don't want to see that well I can sympathize",
    "start": "2690690",
    "end": "2696119"
  },
  {
    "text": "with that to some extent there's a good reason why the serviceworker is best to write in JavaScript and not in dotnet and that's because a serviceworker runs",
    "start": "2696119",
    "end": "2703530"
  },
  {
    "text": "in a completely separate context to your application it's not running as part of your page at all so even though your",
    "start": "2703530",
    "end": "2709770"
  },
  {
    "text": "page normally has a dotnet runtime inside it the serviceworker does not and theoretically you could load up a dotnet",
    "start": "2709770",
    "end": "2716190"
  },
  {
    "text": "runtime inside your serviceworker if you wanted but honestly this is 40 lines of code is that too much and the other",
    "start": "2716190",
    "end": "2723540"
  },
  {
    "text": "thing is you don't really even have to write these things yourself because service workers are very boilerplate T",
    "start": "2723540",
    "end": "2729089"
  },
  {
    "text": "kind of things so if you go online and you do a web search for a serviceworker",
    "start": "2729089",
    "end": "2734520"
  },
  {
    "text": "cookbook serviceworker boilerplate that kind of thing you'll find lots of examples of standard service workers",
    "start": "2734520",
    "end": "2740010"
  },
  {
    "text": "that other people have written that do standard things like making your application work offline so that's what",
    "start": "2740010",
    "end": "2745410"
  },
  {
    "text": "I've done here I've got this pretty much boilerplate serviceworker and I want to add a reference to it in my application and the way you do that",
    "start": "2745410",
    "end": "2752040"
  },
  {
    "text": "is with a little bit of markup in your host page so I'm gonna say okay browser I want you to use the serviceworker",
    "start": "2752040",
    "end": "2758309"
  },
  {
    "text": "api's to register this serviceworker here and now we've done that if we look",
    "start": "2758309",
    "end": "2763710"
  },
  {
    "text": "in the browser console and reload you'll see it now says installing serviceworker and that code is now going to run in a",
    "start": "2763710",
    "end": "2770099"
  },
  {
    "text": "separate context to my page and in fact the browser will use it whenever it's trying to make any network requests to",
    "start": "2770099",
    "end": "2776400"
  },
  {
    "text": "our domain so if I hit reload you'll see every time there's a request to my domain now we get these little messages",
    "start": "2776400",
    "end": "2782369"
  },
  {
    "text": "because I've put some logging inside that serviceworker just to say we can see that we're trying to make this request and because that serviceworker",
    "start": "2782369",
    "end": "2789480"
  },
  {
    "text": "contains the logic to work offline to cache all this stuff and replay it if you can't reach the network let's see",
    "start": "2789480",
    "end": "2795720"
  },
  {
    "text": "what happens now if we are actually offline so I'll press this offline bone again and they'll hit reload and this time we do not get the",
    "start": "2795720",
    "end": "2803130"
  },
  {
    "text": "error message in fact the application just comes up and it works absolutely fine so that's pretty cool",
    "start": "2803130",
    "end": "2809210"
  },
  {
    "text": "or is it well some of you may be thinking hmm so Steve you think you're",
    "start": "2809210",
    "end": "2815010"
  },
  {
    "text": "very clever don't you making your application works offline but you're not clever in fact what you've done is stupid and",
    "start": "2815010",
    "end": "2820200"
  },
  {
    "text": "pointless because what's gonna happen now the user is gonna start walking around the shop and they'll start scanning groceries and what's going to",
    "start": "2820200",
    "end": "2826170"
  },
  {
    "text": "happen because you can't reach the server can you okay I accept that is a valid point so what's actually going to",
    "start": "2826170",
    "end": "2833310"
  },
  {
    "text": "happen in reality so the users going to go around and they're going to start scanning stuff so I'll scan these beans and you can see we",
    "start": "2833310",
    "end": "2840150"
  },
  {
    "text": "cannot reach the server anymore so that's sad boohoo but the good news is we're still running all of our arbitrary",
    "start": "2840150",
    "end": "2847050"
  },
  {
    "text": "application logic here even though we're offline we're still running Garnett code and because there's a little bit of",
    "start": "2847050",
    "end": "2852090"
  },
  {
    "text": "retry logic in there if the user later walks into an area of the shop where they do have Wi-Fi access then even",
    "start": "2852090",
    "end": "2858420"
  },
  {
    "text": "without having to scan their stuff again you'll see that it recovers and it fills in the car and completes the operation",
    "start": "2858420",
    "end": "2864359"
  },
  {
    "text": "correctly so we haven't achieved a miracle there we weren't able to reach the server even while we were offline",
    "start": "2864359",
    "end": "2870090"
  },
  {
    "text": "but we have been able to make ourselves reasonably resilient to certain kinds of network outages which is the best I",
    "start": "2870090",
    "end": "2876840"
  },
  {
    "text": "think that you could realistically hope to do so that's pretty nice ok what else can we do with this people beware api's",
    "start": "2876840",
    "end": "2883830"
  },
  {
    "text": "well the other most famous thing that you can do with them is you can make your application installable so instead",
    "start": "2883830",
    "end": "2889920"
  },
  {
    "text": "of accessing it through a browser the user can access it as if it was a natively installed app on their Windows",
    "start": "2889920",
    "end": "2895980"
  },
  {
    "text": "Start menu their Mac dock or their iPhone or Android home screens and that's just a standard feature their",
    "start": "2895980",
    "end": "2902520"
  },
  {
    "text": "browsers and operating systems provide to us so that's pretty good for us because when our customers are shoppers",
    "start": "2902520",
    "end": "2908220"
  },
  {
    "text": "are using this app we don't want them to think they're using a web browser we don't want them to see an address bar because you know they'll probably just",
    "start": "2908220",
    "end": "2913859"
  },
  {
    "text": "start using it for something totally unrelated so we want it to feel like a native up of its own so I'm going to do",
    "start": "2913859",
    "end": "2919920"
  },
  {
    "text": "that with one of these manifest files standard PW err feature I'll give my application a name define an icon and",
    "start": "2919920",
    "end": "2926460"
  },
  {
    "text": "some colors and stuff and then I'm going to rent register that in my index.html page",
    "start": "2926460",
    "end": "2931960"
  },
  {
    "text": "I'm going to use one of these link tags like that and we'll see now what effect that has on the application so just",
    "start": "2931960",
    "end": "2938349"
  },
  {
    "text": "before I reload I want you to watch carefully see these two icons up here well when I reload there's going to be a",
    "start": "2938349",
    "end": "2943839"
  },
  {
    "text": "third one so I hit reload and you can see this little + fingers appeared now and if you click on that it prompts us",
    "start": "2943839",
    "end": "2949359"
  },
  {
    "text": "do we want to install this into the operating system and I'm gonna say yep I sure do and that's now gonna pop up with",
    "start": "2949359",
    "end": "2956500"
  },
  {
    "text": "its own window it doesn't have a browser address bar it's got its own color themes and everything and it is a real application it's our same application as",
    "start": "2956500",
    "end": "2962980"
  },
  {
    "text": "before and the user now if they want to can find it from their Start menu like",
    "start": "2962980",
    "end": "2968170"
  },
  {
    "text": "that and that will come up on its own and you know it really does work it has all the functionality that we had before",
    "start": "2968170",
    "end": "2973890"
  },
  {
    "text": "so that's pretty nice so that is all I'm",
    "start": "2973890",
    "end": "2978970"
  },
  {
    "text": "gonna have time to tell you about when it comes to this blazer mark thing so we've been seeing how we can use some of",
    "start": "2978970",
    "end": "2984580"
  },
  {
    "text": "these things that we haven't actually shipped yet to take a blazer webassembly application and make it do cooler stuff",
    "start": "2984580",
    "end": "2990310"
  },
  {
    "text": "than you would normally be able to do okay so let's now for the rest of the",
    "start": "2990310",
    "end": "2996160"
  },
  {
    "text": "talk try and broaden our minds a few notches further because so far I've only",
    "start": "2996160",
    "end": "3001830"
  },
  {
    "text": "really told you about a couple of things and there's actually a much bigger and more exciting world out there so do you",
    "start": "3001830",
    "end": "3008790"
  },
  {
    "text": "remember back back in the day when we had this slide earlier on in the talk okay so I said that I would talk to you",
    "start": "3008790",
    "end": "3015510"
  },
  {
    "text": "about the differences between these two models and and when you can use them well the first question is have these",
    "start": "3015510",
    "end": "3020970"
  },
  {
    "text": "things even shipped yeah are these supported products well the answer to that is that for server-side Blaser yes",
    "start": "3020970",
    "end": "3027810"
  },
  {
    "text": "that has shipped that shipped as part of dotnet Koryo which was out in september/october ish last year so this",
    "start": "3027810",
    "end": "3034710"
  },
  {
    "text": "has been a shipped supported product for about four months now so yes that is",
    "start": "3034710",
    "end": "3039780"
  },
  {
    "text": "absolutely a fully support thing for client-side blaze a web assembly that is currently still in preview but I know",
    "start": "3039780",
    "end": "3047280"
  },
  {
    "text": "it's been improved for absolutely ages and yes we desperately want to actually ship this we finally got an actual",
    "start": "3047280",
    "end": "3053160"
  },
  {
    "text": "committed release date it's not very far away from now it's in May this year so just a few more months to go until that",
    "start": "3053160",
    "end": "3058830"
  },
  {
    "text": "is shipped and supported as well okay so the next question to ask is which of",
    "start": "3058830",
    "end": "3064859"
  },
  {
    "text": "these two models is actually the right one for your situation and before I answer that I just want to really emphasize this key",
    "start": "3064859",
    "end": "3070960"
  },
  {
    "text": "point that you've got to get into your mind which is it's not really an either-or situation it's the same",
    "start": "3070960",
    "end": "3076390"
  },
  {
    "text": "programming model that's going to work in both environments so if you buy into the idea of building a blazer UI then",
    "start": "3076390",
    "end": "3082150"
  },
  {
    "text": "you can choose to run it on the server or you can choose to run it on the client you can start on the server and move to the client you can start on the",
    "start": "3082150",
    "end": "3087970"
  },
  {
    "text": "client and move to the server you can even in some crazy advanced cases create an application that does both at once if",
    "start": "3087970",
    "end": "3093069"
  },
  {
    "text": "you want to so that's the flexibility that you're getting by buying into this pattern but still the question is which",
    "start": "3093069",
    "end": "3099460"
  },
  {
    "text": "one still is the one that you would actually want to use well it depends on your situation obviously so when it",
    "start": "3099460",
    "end": "3104650"
  },
  {
    "text": "comes to server-side Blaser that's going to be the best choice for you if your users have got a reliable low latency",
    "start": "3104650",
    "end": "3110859"
  },
  {
    "text": "connection to your server and the reason why it's going to be the best in that case is because it's much much simpler",
    "start": "3110859",
    "end": "3116859"
  },
  {
    "text": "you don't have to actually send the dotnet runtime into the browser you don't have to send your own code into the browser everything's running on the",
    "start": "3116859",
    "end": "3123430"
  },
  {
    "text": "server in a much more predictable and controlled environment and the UI updates are just being streamed over the",
    "start": "3123430",
    "end": "3128950"
  },
  {
    "text": "wire down into the browser so that's a very straightforward solution for you and it means that you can work with very",
    "start": "3128950",
    "end": "3134799"
  },
  {
    "text": "low powered devices because they're not really doing any significant work so that's nice on the other hand the best",
    "start": "3134799",
    "end": "3142000"
  },
  {
    "text": "situation for doing client-side blair's a web assembly is going to be in cases where you want to not rely on access to",
    "start": "3142000",
    "end": "3149079"
  },
  {
    "text": "the server so if you want to actually work offline then you absolutely need to be running on webassembly Leykis there's",
    "start": "3149079",
    "end": "3154720"
  },
  {
    "text": "no server in that case or if you need to have incredibly fast fine-grained UI updates then blaze a web assembly is",
    "start": "3154720",
    "end": "3161380"
  },
  {
    "text": "going to be the best choice for you there as well because you don't have to wait for any traffic network traffic in order to update the UI and the other",
    "start": "3161380",
    "end": "3168549"
  },
  {
    "text": "cool thing about blazer on webassembly is to do with hosting so when you publish your webassembly app there is no",
    "start": "3168549",
    "end": "3175900"
  },
  {
    "text": "specific server requirement it's just a set of static files as far as your server is concerned so you don't need",
    "start": "3175900",
    "end": "3181750"
  },
  {
    "text": "dotnet on the server you don't need anything in particular on the server you just need to be able to serve files so you could host it on something like a",
    "start": "3181750",
    "end": "3188170"
  },
  {
    "text": "CDN or a blob store or anything else like that and to prove that to you let me show you in my browser now if I load",
    "start": "3188170",
    "end": "3194650"
  },
  {
    "text": "this bookmark blazer Mart live you'll see that actually opens my site just like before and it",
    "start": "3194650",
    "end": "3199960"
  },
  {
    "text": "works just like before but have a look at the URL there you'll see that this has actually been hosted on github pages",
    "start": "3199960",
    "end": "3206040"
  },
  {
    "text": "which as you can understand is a very very cheap way of hosting your application it's free its globally",
    "start": "3206040",
    "end": "3211450"
  },
  {
    "text": "distributed and ablaze the webassembly application can be served from that just like it can be served from anywhere else",
    "start": "3211450",
    "end": "3216820"
  },
  {
    "text": "so that's one of the cool things okay now so far I've only talked to you about",
    "start": "3216820",
    "end": "3223780"
  },
  {
    "text": "ways of running your application inside a browser but Blaser is a more flexible programming model than just that you can",
    "start": "3223780",
    "end": "3230260"
  },
  {
    "text": "run it in other places too what if you didn't want to make something that people load in their browser you don't",
    "start": "3230260",
    "end": "3235660"
  },
  {
    "text": "want to be subject to normal browser sandbox limitations but you actually want to make a native application running regular native code and have",
    "start": "3235660",
    "end": "3243160"
  },
  {
    "text": "that pop up on a user's desktop for example you won't want to build something like an electron application",
    "start": "3243160",
    "end": "3248950"
  },
  {
    "text": "with Blaser well we've been doing quite a bit of experimentation with that recently and we've got some samples for",
    "start": "3248950",
    "end": "3254440"
  },
  {
    "text": "you to try out if you're interested so we've got a sample of doing blazer with electron we've got a sample of something",
    "start": "3254440",
    "end": "3259450"
  },
  {
    "text": "called web window which is like a very lightweight alternative to electron it's very experimental but it involves it",
    "start": "3259450",
    "end": "3266170"
  },
  {
    "text": "doesn't involve bundling a browser it doesn't involve bundling node so it's a much more lightweight way of bringing up",
    "start": "3266170",
    "end": "3271690"
  },
  {
    "text": "a desktop application that contains a blazer UI if you want so see those samples if you want and then in this",
    "start": "3271690",
    "end": "3278170"
  },
  {
    "text": "bottom right corner but there's something even more future and elaborate and we haven't really even done it yet",
    "start": "3278170",
    "end": "3284560"
  },
  {
    "text": "but I want to talk about anyway and so what if we don't want to use web-based rendering technology at all we don't",
    "start": "3284560",
    "end": "3290859"
  },
  {
    "text": "want to use HTML and CSS why if we wanted to make a native mobile application for iOS or Android or or",
    "start": "3290859",
    "end": "3297730"
  },
  {
    "text": "even a native desktop application and instead of rendering through web technologies we want to render native OS",
    "start": "3297730",
    "end": "3305099"
  },
  {
    "text": "components well we've got a sample of that as well and just to really emphasize neither the hybrid northern",
    "start": "3305099",
    "end": "3311349"
  },
  {
    "text": "native options are committed products yet these are just experiments but we do really want to get your feedback about",
    "start": "3311349",
    "end": "3317109"
  },
  {
    "text": "whether these things should be made into real products and I want to show you an example of something called mobile",
    "start": "3317109",
    "end": "3323440"
  },
  {
    "text": "blazer bindings which is a collaboration between the xamarin team who mostly did the work and the blazer team who just",
    "start": "3323440",
    "end": "3329470"
  },
  {
    "text": "get to take credit and I'll show you how we music to build a native iOS application",
    "start": "3329470",
    "end": "3335829"
  },
  {
    "text": "using blazer as a programming model so let's switch back into the IDE for the last time now and I'm gonna load",
    "start": "3335829",
    "end": "3342460"
  },
  {
    "text": "something called blazer mobile app which is not the most creative name and inside there you'll see I've got three projects",
    "start": "3342460",
    "end": "3348910"
  },
  {
    "text": "I've got blaze a mobile app which is a blazer application so it contains a bunch of razor files and c-sharp files",
    "start": "3348910",
    "end": "3354190"
  },
  {
    "text": "and it's the same programming model that you know and love by now and we've also got Android and iOS projects there is a",
    "start": "3354190",
    "end": "3360819"
  },
  {
    "text": "really any significant amount of coding those two at the bottom they're just little shell wrapper applications that",
    "start": "3360819",
    "end": "3366280"
  },
  {
    "text": "know how to start up on each of those two operating systems and I'm gonna use the iOS one right now so I'll show you",
    "start": "3366280",
    "end": "3372250"
  },
  {
    "text": "the code in a minute but first I want to show you the app actually running so all being well I'm gonna be able to make my",
    "start": "3372250",
    "end": "3379420"
  },
  {
    "text": "phone screen appear in front of your just now let's see if this works okay yeah very good okay so this is a iPhone",
    "start": "3379420",
    "end": "3387310"
  },
  {
    "text": "a normal iPhone you know them does all the normal I for any things and I've built this application here and deployed",
    "start": "3387310",
    "end": "3392890"
  },
  {
    "text": "it onto my phone so if I start that up when that comes up that is not running inside a browser there's no wk webview",
    "start": "3392890",
    "end": "3399369"
  },
  {
    "text": "or any other kind of browser rendering technology this is native iOS elements and we've got all the usual kind of demo",
    "start": "3399369",
    "end": "3405520"
  },
  {
    "text": "things in here so I've got this button I can tap on it and it says how many times I've clicked it I can move on to the",
    "start": "3405520",
    "end": "3411400"
  },
  {
    "text": "to-do list we'll do that in a minute and we've got calculator so that's all just being rendered using Blaser components",
    "start": "3411400",
    "end": "3417790"
  },
  {
    "text": "and it works cool what about this to-do list well it's just you know the usual",
    "start": "3417790",
    "end": "3423160"
  },
  {
    "text": "industry standard to-do list that we always have to show let's add some stuff to the list so we'll have stuff okay and",
    "start": "3423160",
    "end": "3429790"
  },
  {
    "text": "I'm gonna tap on this Add button what will it do oh what a shocker what a disappointment we haven't yet implemented the add item",
    "start": "3429790",
    "end": "3436420"
  },
  {
    "text": "feature which means we're going to have to implement it just now as a demo okay so let's have a look at some of the code",
    "start": "3436420",
    "end": "3442690"
  },
  {
    "text": "in this application well let's start with this counter right here now if you",
    "start": "3442690",
    "end": "3448480"
  },
  {
    "text": "are familiar with the brave blaze a programming model this should look pretty familiar to you this is pretty much the same as the web-based counter",
    "start": "3448480",
    "end": "3455440"
  },
  {
    "text": "with one kind of important difference so inside the code block here we've got exactly the same code as normal just",
    "start": "3455440",
    "end": "3461200"
  },
  {
    "text": "normal c-sharp code that's gotta count in an increment count button and above that we've got markup but it's not HTML this time and",
    "start": "3461200",
    "end": "3469410"
  },
  {
    "text": "in fact I cannot use HTML even if I wanted to because there is no browser here the only thing I can use are these",
    "start": "3469410",
    "end": "3475680"
  },
  {
    "text": "native iOS elements and the ones I'm using are this stack layout this label",
    "start": "3475680",
    "end": "3480930"
  },
  {
    "text": "and a button so we've got a label that says how many times you've clicked and a button that when you click it it cause",
    "start": "3480930",
    "end": "3486000"
  },
  {
    "text": "increment count and that behaves in exactly the way that you think it should okay and what about the to-do list well",
    "start": "3486000",
    "end": "3492210"
  },
  {
    "text": "there's a bit more going on with this one let's just go through it step by step okay so to get started with we've",
    "start": "3492210",
    "end": "3498450"
  },
  {
    "text": "got this to-do item class here with the usual is done and text properties on it we've got a list of to-do items and",
    "start": "3498450",
    "end": "3504960"
  },
  {
    "text": "we've got a new text string where the user can enter some new text and up at",
    "start": "3504960",
    "end": "3510030"
  },
  {
    "text": "the top here we've got this entry which is the thing that the xamarin team uses to mean text box and we've bound that to",
    "start": "3510030",
    "end": "3517230"
  },
  {
    "text": "this new text field there and then I've got a button that says when you click it will call add item and inside on out add",
    "start": "3517230",
    "end": "3524280"
  },
  {
    "text": "item we're rendering this little popup message so let's fill in an actual implementation there so I'm going to say",
    "start": "3524280",
    "end": "3530340"
  },
  {
    "text": "to-do items dot add new to-do item and we'll set the text on there to be the",
    "start": "3530340",
    "end": "3536520"
  },
  {
    "text": "new text okay and then I want the text box to get cleared out so I'm going to say a new text goes back to being its",
    "start": "3536520",
    "end": "3543810"
  },
  {
    "text": "default value of not okay I also need to actually display these items and because this is not zamel I",
    "start": "3543810",
    "end": "3551100"
  },
  {
    "text": "don't have to do any complicated stuff with bindings or whatever if I want to iterate over things and make a list well",
    "start": "3551100",
    "end": "3556530"
  },
  {
    "text": "I just go for each with normalcy shop syntax for each item in to-do items I'm",
    "start": "3556530",
    "end": "3561990"
  },
  {
    "text": "going to render a to-do list item and the thing that I'm going to pass to that is the item okay very good so that's",
    "start": "3561990",
    "end": "3570660"
  },
  {
    "text": "pretty much all I have to do but I'm just going to do one more thing because I like to I'm going to also display the number of items that have not been",
    "start": "3570660",
    "end": "3577170"
  },
  {
    "text": "completed yet so I'm gonna say we'll get your to-do items and we'll count all the",
    "start": "3577170",
    "end": "3582180"
  },
  {
    "text": "ones in it for which the is done property is still false okay now let's",
    "start": "3582180",
    "end": "3587520"
  },
  {
    "text": "try compiling that now and we'll see if that actually builds and hopefully it will it does okay now I've also got that",
    "start": "3587520",
    "end": "3595410"
  },
  {
    "text": "version of it on my phone as well so I'm going to start that up and we'll see what happens now so if I",
    "start": "3595410",
    "end": "3602200"
  },
  {
    "text": "go into this to-do list now and I start entering something so I'm think this time when I tap on the Add button you'll",
    "start": "3602200",
    "end": "3608950"
  },
  {
    "text": "see it does actually show up in my list and I can do more things let's herb laser is let's just do this third day",
    "start": "3608950",
    "end": "3616660"
  },
  {
    "text": "you get to the lobby okay cool that makes total sense to me don't about you and then I can start toggling these",
    "start": "3616660",
    "end": "3623290"
  },
  {
    "text": "buttons and it all works you see the the number of dates as I do that and we have all the usual scrolling and stuff so",
    "start": "3623290",
    "end": "3629740"
  },
  {
    "text": "we've been able to create a native feeling iOS application using the blazer",
    "start": "3629740",
    "end": "3635080"
  },
  {
    "text": "programming model and without having to use any sort of web rendering technology okay so that is it that's all we have",
    "start": "3635080",
    "end": "3643870"
  },
  {
    "text": "time for today so I hope some of that has been interesting and useful for you if you want to learn more about this",
    "start": "3643870",
    "end": "3649840"
  },
  {
    "text": "stuff if you want to learn more about blazer then go to blazer on net if you want the code and the slides from this talk then go to the URL that's up there",
    "start": "3649840",
    "end": "3656860"
  },
  {
    "text": "and you can download that and see that for yourself so I hope that's been fun and I hope you have a really good rest",
    "start": "3656860",
    "end": "3662860"
  },
  {
    "text": "of the conference thank you for coming",
    "start": "3662860",
    "end": "3666900"
  },
  {
    "text": "[Applause]",
    "start": "3669810",
    "end": "3673199"
  }
]