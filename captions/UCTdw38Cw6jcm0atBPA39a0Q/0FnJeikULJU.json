[
  {
    "text": "my name is uh don webbie i'm technical evangelist with devexpress and uh yeah i hope i can give you some more",
    "start": "3199",
    "end": "9360"
  },
  {
    "text": "inspiration on uh some maybe some optimizations in your own code",
    "start": "9360",
    "end": "14799"
  },
  {
    "text": "i'm going to be talking about generics and abstract classes in c-sharp and typically not on how to",
    "start": "14799",
    "end": "22160"
  },
  {
    "text": "use existing generics and abstract classes but how to set up your own",
    "start": "22160",
    "end": "27760"
  },
  {
    "text": "generic classes how to deal with that and i'll show you uh how you can actually optimize existing",
    "start": "27760",
    "end": "34239"
  },
  {
    "text": "code so i'm going to be showing you some code and i'm going to refactor that and you'll see that there is a lot of redone and code",
    "start": "34239",
    "end": "41840"
  },
  {
    "text": "gone at the end of this session and i hope i give yeah that that'll give you some some",
    "start": "41840",
    "end": "48640"
  },
  {
    "text": "inspiration to to take a look at your own code and maybe you can put in some optimizations yourself",
    "start": "48640",
    "end": "55920"
  },
  {
    "text": "so let's let's first start uh on an abstract class and by the way this this",
    "start": "55920",
    "end": "61359"
  },
  {
    "text": "code can actually be applied on all sorts of c sharp projects whether it is blazer or net or net core or",
    "start": "61359",
    "end": "69360"
  },
  {
    "text": "it's it's a generic yeah it's a generic thing on the dot-net framework",
    "start": "69360",
    "end": "74880"
  },
  {
    "text": "or in the c-sharp language typically so let's let's first start on what is an abstract class well uh has",
    "start": "74880",
    "end": "82960"
  },
  {
    "text": "is there any of you that didn't use an abstract class before ah most of you did cool",
    "start": "82960",
    "end": "89520"
  },
  {
    "text": "all right so it is typically a class which which does not which has a declaration",
    "start": "89520",
    "end": "97520"
  },
  {
    "text": "but doesn't have an implementation on a specific member so it is also typically a",
    "start": "97520",
    "end": "104640"
  },
  {
    "text": "a type which serves as a base for a class hierarchy and it cannot be instantiated because",
    "start": "104640",
    "end": "111439"
  },
  {
    "text": "it's obviously not finished yet and yeah a simple example i had to",
    "start": "111439",
    "end": "118880"
  },
  {
    "text": "freshen up your minds a bit i have a bit of code here and what you'll see",
    "start": "118880",
    "end": "123920"
  },
  {
    "text": "is i've got a shape which is marked the class itself should be marked as",
    "start": "123920",
    "end": "129440"
  },
  {
    "text": "abstract here and it's got a",
    "start": "129440",
    "end": "134959"
  },
  {
    "text": "a an abstract property in this case which is called the area",
    "start": "134959",
    "end": "140319"
  },
  {
    "text": "so that one is abstract as well in the tostring method i'm actually",
    "start": "140319",
    "end": "145680"
  },
  {
    "text": "using that that area property but i don't know at this stage what it",
    "start": "145680",
    "end": "151519"
  },
  {
    "text": "is so if i would scroll a bit down i will now have the rectangle shape",
    "start": "151519",
    "end": "157920"
  },
  {
    "text": "which is derived from the shape and what i've done is i have implemented",
    "start": "157920",
    "end": "164080"
  },
  {
    "text": "that area property which is in this case the width times the height so it's pretty straightforward",
    "start": "164080",
    "end": "170560"
  },
  {
    "text": "and i didn't need to redo the two string methods well same goes for a circle as",
    "start": "170560",
    "end": "175680"
  },
  {
    "text": "we all know the area of a circle is calculated different from from the rectangle so",
    "start": "175680",
    "end": "182400"
  },
  {
    "text": "this is in a nutshell what an abstract class is and you can apply this on methods properties",
    "start": "182400",
    "end": "188239"
  },
  {
    "text": "of a class but what you'll find is when you when you combine this with",
    "start": "188239",
    "end": "194480"
  },
  {
    "text": "generics you'll see that that the design time experience inside visual studio as well",
    "start": "194480",
    "end": "200959"
  },
  {
    "text": "as visual studio code gives you quite a couple of really nice features that enables you and your",
    "start": "200959",
    "end": "206879"
  },
  {
    "text": "co-developers to write code more efficiently because it's all uh yeah very very nice",
    "start": "206879",
    "end": "214080"
  },
  {
    "text": "done but you'll see that a bit later",
    "start": "214080",
    "end": "217599"
  },
  {
    "text": "so let's let's uh let's take a look at the generic type so what is",
    "start": "219280",
    "end": "225120"
  },
  {
    "text": "generics well it is it is yeah it's it's more like a coding",
    "start": "225120",
    "end": "231200"
  },
  {
    "text": "template okay so you can define a class which holds some types that you might want to",
    "start": "231200",
    "end": "236879"
  },
  {
    "text": "change later on so maybe it's got like a property of a specific type but in a in a descendant class you might want to",
    "start": "236879",
    "end": "243599"
  },
  {
    "text": "have another type of that particular property and what we can do is we can create some",
    "start": "243599",
    "end": "249360"
  },
  {
    "text": "sort of a code template a compiler code template",
    "start": "249360",
    "end": "255120"
  },
  {
    "text": "and it is once you master this technique it is a really efficient way for reusing code in",
    "start": "255120",
    "end": "262400"
  },
  {
    "text": "a typesafe way and that is one of the most important things because that saves compile time errors",
    "start": "262400",
    "end": "268800"
  },
  {
    "text": "because it is all strongly typed if you set it up properly well",
    "start": "268800",
    "end": "275599"
  },
  {
    "text": "obviously this is giving you a compiler error and this is considered to be type safe",
    "start": "275680",
    "end": "282560"
  },
  {
    "text": "because the compiler will already complain you're declaring an integer and you're trying to put a string into it",
    "start": "282560",
    "end": "288000"
  },
  {
    "text": "and that will obviously not go an unsafe way of",
    "start": "288000",
    "end": "293280"
  },
  {
    "text": "getting rid of this issue is by not declaring that that variable as an",
    "start": "293280",
    "end": "298320"
  },
  {
    "text": "integer but as an object because you can store everything in it but then you'll lose a couple of great features",
    "start": "298320",
    "end": "304880"
  },
  {
    "text": "inside visual studio because now official studio yeah you can do whatever you want visual studio won't",
    "start": "304880",
    "end": "310560"
  },
  {
    "text": "complain but you'll encounter runtime issues right and with generics you can solve",
    "start": "310560",
    "end": "316639"
  },
  {
    "text": "that really really nice and also the compiler and the net",
    "start": "316639",
    "end": "321680"
  },
  {
    "text": "framework deals very efficiently with generic types there are other languages and",
    "start": "321680",
    "end": "328000"
  },
  {
    "text": "development environments as well that have generics but yeah i mean",
    "start": "328000",
    "end": "333600"
  },
  {
    "text": "the c-sharp or at least a.net runtime is dealing very efficiently with it so it",
    "start": "333600",
    "end": "338639"
  },
  {
    "text": "will actually treat it as a generic class and it will only at runtime instantiate",
    "start": "338639",
    "end": "345440"
  },
  {
    "text": "a class where you where you specify the generic and it will it will",
    "start": "345440",
    "end": "350880"
  },
  {
    "text": "not do a lot of overhead for that and that is that's something which is really cool",
    "start": "350880",
    "end": "357199"
  },
  {
    "text": "well i'm pretty sure that all of you have been dealing with generics by now",
    "start": "358319",
    "end": "363440"
  },
  {
    "text": "because obviously the.net framework uses a whole bunch of generics",
    "start": "363440",
    "end": "369919"
  },
  {
    "text": "only to start with a startup file where you configure all kinds of things",
    "start": "369919",
    "end": "375199"
  },
  {
    "text": "that is typically all using generics the list",
    "start": "375199",
    "end": "380400"
  },
  {
    "text": "of tea is a much used thing uh that is generic as well i mean you",
    "start": "380400",
    "end": "385919"
  },
  {
    "text": "can put whatever type in this list but what we're going to talk about is how we can create our own class which",
    "start": "385919",
    "end": "392479"
  },
  {
    "text": "will use generic types as well a tuple is an example",
    "start": "392479",
    "end": "398000"
  },
  {
    "text": "the function and the action are really cool things which are are are used quite a bit",
    "start": "398000",
    "end": "405919"
  },
  {
    "text": "in the internals of the framework as well and then obviously the dictionary is a great example of",
    "start": "405919",
    "end": "412479"
  },
  {
    "text": "generics as well with the later versions of.net core",
    "start": "412479",
    "end": "418240"
  },
  {
    "text": "there is the span of t to deal with memory allocations and so on",
    "start": "418240",
    "end": "424400"
  },
  {
    "text": "well as i mentioned the configuration file i've",
    "start": "424400",
    "end": "429759"
  },
  {
    "text": "let me open up my visual studio and show you a small application here",
    "start": "429759",
    "end": "437840"
  },
  {
    "text": "so if we can see this is uh this is the program file now i should",
    "start": "438800",
    "end": "443919"
  },
  {
    "text": "actually use the startup startup file for this and what we see is there is a whole",
    "start": "443919",
    "end": "451120"
  },
  {
    "text": "bunch of generic stuff going on here already configuration of entity framework uh a whole bunch of other",
    "start": "451120",
    "end": "457599"
  },
  {
    "text": "things so yeah it's it's really really really a good thing",
    "start": "457599",
    "end": "465240"
  },
  {
    "text": "all right so yeah let's let's see what we can do to to",
    "start": "466879",
    "end": "472080"
  },
  {
    "text": "create that generic code and let me see yeah let's let's uh switch over to visual",
    "start": "472080",
    "end": "478800"
  },
  {
    "text": "studio now all right so what i've done i've set up a small demo",
    "start": "478800",
    "end": "484000"
  },
  {
    "text": "application and uh the application is set up to be using entity framework it's nothing nothing",
    "start": "484000",
    "end": "491440"
  },
  {
    "text": "exciting there i'm connecting to the chinook open data open source database which also music some invoices and some",
    "start": "491440",
    "end": "498160"
  },
  {
    "text": "other stuff and i have obviously since i work for devexpress i've used our",
    "start": "498160",
    "end": "504560"
  },
  {
    "text": "devexpress project template to set up this application so this is in a nutshell how it looks it",
    "start": "504560",
    "end": "512080"
  },
  {
    "text": "cut a bunch of invoices here i also create you can actually edit",
    "start": "512080",
    "end": "517200"
  },
  {
    "text": "those invoices but that's not really a thing here",
    "start": "517200",
    "end": "522640"
  },
  {
    "text": "i have customers as well and how did i set this up well i have used one of the things that come with",
    "start": "522640",
    "end": "530720"
  },
  {
    "text": "devexpress which is a scaffolding tool i will show you how that works but then",
    "start": "530720",
    "end": "537120"
  },
  {
    "text": "we will redo the whole scaffolding part in making it generic and so the way that i did this did this",
    "start": "537120",
    "end": "544640"
  },
  {
    "text": "is i went to the controllers let me see if i got the",
    "start": "544640",
    "end": "550800"
  },
  {
    "text": "right project yeah",
    "start": "550800",
    "end": "553760"
  },
  {
    "text": "and i will be adding a controller in this case",
    "start": "556959",
    "end": "562959"
  },
  {
    "text": "i'm going to be adding a devextreme api controller which comes with a with our",
    "start": "562959",
    "end": "568000"
  },
  {
    "text": "product and now because i've set up entity framework already to connect to a",
    "start": "568000",
    "end": "574240"
  },
  {
    "text": "certain database i will be able to pick any of those",
    "start": "574240",
    "end": "579600"
  },
  {
    "text": "entities create a controller",
    "start": "579600",
    "end": "585040"
  },
  {
    "text": "and what it now does is it has created a complete web api controller for me",
    "start": "587839",
    "end": "596320"
  },
  {
    "text": "to perform crud operations so i can i can get the data out of the database",
    "start": "596320",
    "end": "602079"
  },
  {
    "text": "and i can also post put and delete and as you can see this has been",
    "start": "602079",
    "end": "608160"
  },
  {
    "text": "scaffolded and obviously scaffolding can be really cool",
    "start": "608160",
    "end": "613519"
  },
  {
    "text": "because it can save you a lot of time but if i would take a look at one of the",
    "start": "613519",
    "end": "618959"
  },
  {
    "text": "other controllers that i already scaffolded for instance the invoice",
    "start": "618959",
    "end": "624320"
  },
  {
    "text": "controller you will see that because it's scaffolded",
    "start": "624320",
    "end": "630560"
  },
  {
    "text": "it's all pretty much the same let me",
    "start": "630560",
    "end": "634399"
  },
  {
    "text": "it is all pretty much the same but slightly different you see but there is still a lot of code involved and i mean",
    "start": "637200",
    "end": "644079"
  },
  {
    "text": "it's all it's a lot but obviously that's one of the things with",
    "start": "644079",
    "end": "649440"
  },
  {
    "text": "scaffolding i mean it will poop out like a whole bunch of code in seconds and it will save you some work",
    "start": "649440",
    "end": "655120"
  },
  {
    "text": "but once you start developing or expanding your application",
    "start": "655120",
    "end": "660160"
  },
  {
    "text": "you might want to change some of the behavior the behavioral things",
    "start": "660160",
    "end": "665440"
  },
  {
    "text": "and you might want to change the behavior of the scaffolding and then is obviously when the fun begins because",
    "start": "665440",
    "end": "671040"
  },
  {
    "text": "you need to change all the controllers you need to go all over the scaffold code",
    "start": "671040",
    "end": "677120"
  },
  {
    "text": "and that's not going to be cool so this is also where generics is like a",
    "start": "677120",
    "end": "683040"
  },
  {
    "text": "really really nice thing one of the other things",
    "start": "683040",
    "end": "688399"
  },
  {
    "text": "that bothers me a bit about this template and i mean don't get me wrong this stuff is great obviously",
    "start": "688399",
    "end": "695279"
  },
  {
    "text": "but with such a solution that we offer you typically don't want to include like a",
    "start": "695279",
    "end": "700800"
  },
  {
    "text": "whole framework to go with it uh it's it's like a scaffolder it gives you an idea on how it works and",
    "start": "700800",
    "end": "706959"
  },
  {
    "text": "you can start customizing it from there but if we also would ship out like a whole bunch of base classes you need to",
    "start": "706959",
    "end": "712880"
  },
  {
    "text": "get into that as well so for this purpose this is fine now but for like a real application if",
    "start": "712880",
    "end": "720880"
  },
  {
    "text": "if you use it for a prototype it's fine but if you want to get on with it and create like a bigger application i would",
    "start": "720880",
    "end": "726240"
  },
  {
    "text": "certainly yeah check whether it we can change that",
    "start": "726240",
    "end": "731680"
  },
  {
    "text": "one of the other things which is yeah something which i would not",
    "start": "731680",
    "end": "736959"
  },
  {
    "text": "encourage is",
    "start": "736959",
    "end": "741040"
  },
  {
    "text": "the results of this get this is returning an anonymous",
    "start": "742320",
    "end": "749120"
  },
  {
    "text": "object basically so this is there is no design pattern involved in dto maybe you want to perform dto and",
    "start": "749120",
    "end": "756800"
  },
  {
    "text": "and abstract that a bit away from the from the actual data layer so",
    "start": "756800",
    "end": "762320"
  },
  {
    "text": "i typically have like two two things to do here i wanna be able to use the dto",
    "start": "762320",
    "end": "767440"
  },
  {
    "text": "design pattern to transform the data entities out of the database into like the objects being returned",
    "start": "767440",
    "end": "774800"
  },
  {
    "text": "and obviously i want to have less of this enormous amount of code",
    "start": "774800",
    "end": "781200"
  },
  {
    "text": "and so for that i have also already configured and implemented auto mapper automapper is one of the",
    "start": "781200",
    "end": "788000"
  },
  {
    "text": "most used tools to perform dto transformations and i've already configured that so in",
    "start": "788000",
    "end": "794880"
  },
  {
    "text": "my folders if you see it in the project folder i have set up the entity framework models here i have set up a",
    "start": "794880",
    "end": "802160"
  },
  {
    "text": "number of dto models which also start with dto and i mean in this case it's uh",
    "start": "802160",
    "end": "808880"
  },
  {
    "text": "yeah quite simple but it is just to give you an impression on how to approach this",
    "start": "808880",
    "end": "814160"
  },
  {
    "text": "and what i've also done obviously is i have configured the",
    "start": "814160",
    "end": "819519"
  },
  {
    "text": "mapping profile for automapper and it's obviously nice",
    "start": "819519",
    "end": "825279"
  },
  {
    "text": "to mention that you can see that also autumn mapper greatly depends on generics",
    "start": "825279",
    "end": "832079"
  },
  {
    "text": "all right so if you want to know more about the auto memory configuration they've got some excellent documentation",
    "start": "832560",
    "end": "838160"
  },
  {
    "text": "and actually you can probably still ask the author because he's on the",
    "start": "838160",
    "end": "844079"
  },
  {
    "text": "conference as well so you can ask him a dozen questions on this",
    "start": "844079",
    "end": "850320"
  },
  {
    "text": "all right so the first thing we'll do is i'm gonna chop up the data access and",
    "start": "850320",
    "end": "856399"
  },
  {
    "text": "the actual operation on the on the web api endpoints and for that i have",
    "start": "856399",
    "end": "862000"
  },
  {
    "text": "decided to also set up an in this case an ef data store and",
    "start": "862000",
    "end": "867519"
  },
  {
    "text": "this brings us to our first generic thing and that is we're going to create",
    "start": "867519",
    "end": "872959"
  },
  {
    "text": "a generic interface so how do we create a generic interface",
    "start": "872959",
    "end": "879839"
  },
  {
    "text": "well this is quite simple i'm just specifying my my interface name",
    "start": "879839",
    "end": "886320"
  },
  {
    "text": "and i can specify a whole bunch of generic types so in this case i'm using the t key",
    "start": "886320",
    "end": "892800"
  },
  {
    "text": "and the t model because that can change maybe the key type in some scenarios",
    "start": "892800",
    "end": "898639"
  },
  {
    "text": "could be like of a type string or maybe it's a a unique identifier or maybe it's an",
    "start": "898639",
    "end": "904240"
  },
  {
    "text": "integer here but this t is an important thing that might be",
    "start": "904240",
    "end": "909760"
  },
  {
    "text": "generic and one of the other things that i've specified is the model so this interface",
    "start": "909760",
    "end": "916639"
  },
  {
    "text": "is going to be implementing a couple of things which we'll see later on but we have this key and this model and this",
    "start": "916639",
    "end": "922959"
  },
  {
    "text": "model is the dto model type but",
    "start": "922959",
    "end": "928880"
  },
  {
    "text": "we also want to put up a couple of restrictions so that the key should be a type which should be",
    "start": "928880",
    "end": "935360"
  },
  {
    "text": "able to be compared with another type in the store we might need to look up a certain entity",
    "start": "935360",
    "end": "941600"
  },
  {
    "text": "for updating or deleting or whatsoever so we should be able to resolve that and in that case it",
    "start": "941600",
    "end": "948560"
  },
  {
    "text": "is one of the things that you can do is that you can specify a where class on",
    "start": "948560",
    "end": "954720"
  },
  {
    "text": "your interface declaration and in this case i'm specifying that the",
    "start": "954720",
    "end": "960639"
  },
  {
    "text": "t key can only be of the type equatable and what that means is that the key",
    "start": "960639",
    "end": "967600"
  },
  {
    "text": "of the objects that we're going to deal with cannot be of a type of of a complex",
    "start": "967600",
    "end": "972639"
  },
  {
    "text": "type because they are typically not implementing the i equatable interface",
    "start": "972639",
    "end": "977839"
  },
  {
    "text": "so an integer can be put in here or a string or a unique identifier",
    "start": "977839",
    "end": "984639"
  },
  {
    "text": "those kind of types and also the model",
    "start": "984639",
    "end": "989920"
  },
  {
    "text": "that should not be like a simple type because we are dealing with dto so we want to have like a real thing so for",
    "start": "989920",
    "end": "996800"
  },
  {
    "text": "that i can put in a second constraint on my generic types and in this case the t model can only be",
    "start": "996800",
    "end": "1004480"
  },
  {
    "text": "a type which is an actual class so it can't be a string",
    "start": "1004480",
    "end": "1009600"
  },
  {
    "text": "um it should have a a constructor without any parameters",
    "start": "1009600",
    "end": "1016160"
  },
  {
    "text": "that's the new with the uh with the brackets so",
    "start": "1016160",
    "end": "1021600"
  },
  {
    "text": "yeah we've pretty much created our first generic interface",
    "start": "1021600",
    "end": "1027918"
  },
  {
    "text": "we're going to be adding a couple of things later on but let's do the same thing with the class and the class is",
    "start": "1027919",
    "end": "1035678"
  },
  {
    "text": "going to be slightly different because what we'll see here is that i've specified a bit more",
    "start": "1035679",
    "end": "1042959"
  },
  {
    "text": "and this this data store will actually help me this is going to be something which i can query i can pass",
    "start": "1042959",
    "end": "1050320"
  },
  {
    "text": "in a dto object and it will make sure that it will be updated correctly in the database",
    "start": "1050320",
    "end": "1056240"
  },
  {
    "text": "or inserted or deleted and so this is typically my store and my store is depending on the db context",
    "start": "1056240",
    "end": "1063360"
  },
  {
    "text": "so that's also why i have specified now a tef context together with the key and",
    "start": "1063360",
    "end": "1068400"
  },
  {
    "text": "the model but also the db model because we need to do the mapping and the system needs to know how that works",
    "start": "1068400",
    "end": "1075039"
  },
  {
    "text": "and so for that i have now specified four generic types",
    "start": "1075039",
    "end": "1081840"
  },
  {
    "text": "and obviously it is implementing that same interface and because that interface has some restrictions put on",
    "start": "1081840",
    "end": "1087440"
  },
  {
    "text": "those specific types i need to put on the same ones here as well so",
    "start": "1087440",
    "end": "1093679"
  },
  {
    "text": "in this case i'm also putting up a restriction on the tef context which should be a descendant of the db context",
    "start": "1093679",
    "end": "1100559"
  },
  {
    "text": "so we can use this like in other projects as well the key is the same restriction as the",
    "start": "1100559",
    "end": "1106559"
  },
  {
    "text": "interface the model is the same as the one on the interface and this one yeah",
    "start": "1106559",
    "end": "1111840"
  },
  {
    "text": "it should also be a class and obviously entity framework just deals with plain objects okay so we",
    "start": "1111840",
    "end": "1118720"
  },
  {
    "text": "can't like make that any any tighter basically",
    "start": "1118720",
    "end": "1123840"
  },
  {
    "text": "so now we can actually start using our genera or implementing our generic class and also i have made this abstract",
    "start": "1124240",
    "end": "1133760"
  },
  {
    "text": "because there are a couple of things that in this base class i don't know yet and we'll find out a bit later what that",
    "start": "1133840",
    "end": "1139919"
  },
  {
    "text": "is um let's first",
    "start": "1139919",
    "end": "1145200"
  },
  {
    "text": "put in a couple of things i will be dealing with autumn mapper and i will be dealing with the",
    "start": "1145200",
    "end": "1150880"
  },
  {
    "text": "db context so i'll use constructor injection i've set up automapper ndb and the",
    "start": "1150880",
    "end": "1157919"
  },
  {
    "text": "entity framework to be available in the dependency injection so i will be using",
    "start": "1157919",
    "end": "1165360"
  },
  {
    "text": "the constructor injection to get references to it and store them",
    "start": "1165360",
    "end": "1171919"
  },
  {
    "text": "then one of the other things that we'll need is a couple of helper models and this is",
    "start": "1172559",
    "end": "1178559"
  },
  {
    "text": "also something this is a a really simple example on how to use your own generic",
    "start": "1178559",
    "end": "1184880"
  },
  {
    "text": "type so at a certain stage i need to create a new model a new",
    "start": "1184880",
    "end": "1191440"
  },
  {
    "text": "dto model and remember that t-model that is a generic type so instead of dealing with",
    "start": "1191440",
    "end": "1197360"
  },
  {
    "text": "like a real type here i'm just using one of those t-model",
    "start": "1197360",
    "end": "1202400"
  },
  {
    "text": "generic types and i can actually do this the new model",
    "start": "1202400",
    "end": "1208720"
  },
  {
    "text": "i can create a new instance of this type which i don't know yet i mean it's going",
    "start": "1208720",
    "end": "1213760"
  },
  {
    "text": "to be happening in a in an implementation somewhere",
    "start": "1213760",
    "end": "1219120"
  },
  {
    "text": "i can use this construction to create a new model because i put up a constraint",
    "start": "1219120",
    "end": "1227600"
  },
  {
    "text": "this if i would remove this one",
    "start": "1228080",
    "end": "1232720"
  },
  {
    "text": "you'll already see that",
    "start": "1233360",
    "end": "1238559"
  },
  {
    "text": "i get the red curl the curly line okay so this is one of the great design time",
    "start": "1238559",
    "end": "1243600"
  },
  {
    "text": "features that visual studio is giving you like okay this can't be done if i can't put up that new thing on the",
    "start": "1243600",
    "end": "1250960"
  },
  {
    "text": "constraints i should use the activator create instance yada yada and the whole bells",
    "start": "1250960",
    "end": "1257039"
  },
  {
    "text": "and whistles but if i now just specify that neo in the constraints and that's for this case it's perfectly fine",
    "start": "1257039",
    "end": "1264480"
  },
  {
    "text": "it's also fine with the compiler and so this is how quickly also visual",
    "start": "1264480",
    "end": "1271200"
  },
  {
    "text": "studio picks this up and it's it's going away one of the other things that i'll need",
    "start": "1271200",
    "end": "1278960"
  },
  {
    "text": "i uh i need to locate an entity",
    "start": "1278960",
    "end": "1285200"
  },
  {
    "text": "in the database by key and again what you see here is i'm actually using two of those uh generic",
    "start": "1285200",
    "end": "1292240"
  },
  {
    "text": "types which is the db model as well as the t key type",
    "start": "1292240",
    "end": "1297600"
  },
  {
    "text": "and i'm just using it as if they were like real types here and because of the constraints i can actually use a couple",
    "start": "1297600",
    "end": "1304720"
  },
  {
    "text": "of things i have specifically pointed out that the db model",
    "start": "1304720",
    "end": "1311280"
  },
  {
    "text": "is a class and i have also specified the db context",
    "start": "1311280",
    "end": "1317120"
  },
  {
    "text": "of being of the type tdb context so that means that i can now use the",
    "start": "1317120",
    "end": "1323440"
  },
  {
    "text": "find on the db context with the generic type that i'm looking",
    "start": "1323440",
    "end": "1329840"
  },
  {
    "text": "for and the key",
    "start": "1329840",
    "end": "1334080"
  },
  {
    "text": "you see so this is actually just working with the types that you were already making generic but instead of real types",
    "start": "1335280",
    "end": "1342240"
  },
  {
    "text": "you are dealing with these generic types so let's put up a couple of other things here",
    "start": "1342240",
    "end": "1347600"
  },
  {
    "text": "this is an interesting as well because at a certain stage i need to query the data store to select a number of albums",
    "start": "1347600",
    "end": "1353679"
  },
  {
    "text": "or invoices or whatsoever and with this i will just follow the approach of entity framework and use the",
    "start": "1353679",
    "end": "1361520"
  },
  {
    "text": "iqueryable of type tdb model",
    "start": "1361520",
    "end": "1366640"
  },
  {
    "text": "and i'll just call the generic method which comes with the db context of entity framework and i pass in that tdb",
    "start": "1366960",
    "end": "1373280"
  },
  {
    "text": "model type and so this is all yeah",
    "start": "1373280",
    "end": "1378720"
  },
  {
    "text": "not strongly bound to a specific entity yet",
    "start": "1378720",
    "end": "1384400"
  },
  {
    "text": "so let's see there is a couple of more things that we'll need and one of the things is",
    "start": "1384880",
    "end": "1390240"
  },
  {
    "text": "obviously because that is that's one of the things i want to query based on the dto object",
    "start": "1390240",
    "end": "1398480"
  },
  {
    "text": "but then that needs to be transformed that run time to the entity framework models",
    "start": "1398480",
    "end": "1404960"
  },
  {
    "text": "right because at the front i'm dealing with the dtl objects and that is also why auto mapper is",
    "start": "1404960",
    "end": "1411200"
  },
  {
    "text": "getting quite nice so this one will actually query based on the t model class you see that",
    "start": "1411200",
    "end": "1419039"
  },
  {
    "text": "and i've also made this one public instead of protected",
    "start": "1419039",
    "end": "1424639"
  },
  {
    "text": "and now i'm actually using one of the automapper features here",
    "start": "1425120",
    "end": "1430720"
  },
  {
    "text": "and this allows me to query based on the dto object on the front but it will be",
    "start": "1430720",
    "end": "1435919"
  },
  {
    "text": "transformed by automapper into the entity framework models and this is a",
    "start": "1435919",
    "end": "1441520"
  },
  {
    "text": "very cool feature i'd say because then you are actually abstracting away the data",
    "start": "1441520",
    "end": "1446640"
  },
  {
    "text": "layer from the front end a couple of other things that i",
    "start": "1446640",
    "end": "1453919"
  },
  {
    "text": "also need to do i need to get back to this first one because i need to add this one to my interface which i will do",
    "start": "1453919",
    "end": "1460320"
  },
  {
    "text": "right now",
    "start": "1460320",
    "end": "1462960"
  },
  {
    "text": "let's see and this one will need it as well",
    "start": "1468640",
    "end": "1473840"
  },
  {
    "text": "so i don't need to stop it",
    "start": "1474720",
    "end": "1479360"
  },
  {
    "text": "so i don't need to do that any later um yeah let's um",
    "start": "1479840",
    "end": "1486880"
  },
  {
    "text": "let's put in another one this is a bit of an odd one and i obviously did show the entire code that was scaffolded but",
    "start": "1486880",
    "end": "1494400"
  },
  {
    "text": "here i am actually introducing a local generic type so this is also one",
    "start": "1494400",
    "end": "1500320"
  },
  {
    "text": "of the things that will work in this case this this t",
    "start": "1500320",
    "end": "1506720"
  },
  {
    "text": "is only generic available within this methods and still i'm also able",
    "start": "1506960",
    "end": "1513440"
  },
  {
    "text": "to put some constraints on it as well",
    "start": "1513440",
    "end": "1518960"
  },
  {
    "text": "i'm going to use this as well but we'll get back to that a bit later but it does",
    "start": "1519039",
    "end": "1524080"
  },
  {
    "text": "show you how you can actually have like this one particular method which allows you to specify",
    "start": "1524080",
    "end": "1530480"
  },
  {
    "text": "another extra generic type and",
    "start": "1530480",
    "end": "1535679"
  },
  {
    "text": "what i can do now is i can use automapper again",
    "start": "1535760",
    "end": "1540960"
  },
  {
    "text": "to query based on that t type basically projected back to the entity framework",
    "start": "1540960",
    "end": "1547440"
  },
  {
    "text": "models and then query the database",
    "start": "1547440",
    "end": "1551360"
  },
  {
    "text": "all right so this one i should also put straight away",
    "start": "1553840",
    "end": "1558880"
  },
  {
    "text": "to the interface",
    "start": "1558880",
    "end": "1561760"
  },
  {
    "text": "let's do that here so",
    "start": "1567679",
    "end": "1573760"
  },
  {
    "text": "we have done the query part basically so we now have a generic data store which will do that",
    "start": "1573760",
    "end": "1579919"
  },
  {
    "text": "i will also want to query and get a model back by key so in this",
    "start": "1579919",
    "end": "1586640"
  },
  {
    "text": "case i'm going to be using that create model method that i declared earlier",
    "start": "1586640",
    "end": "1592640"
  },
  {
    "text": "and i will locate this by using the ef get by key and auto mapper will transform that into",
    "start": "1592640",
    "end": "1599760"
  },
  {
    "text": "that t model type okay so this is still all very very generic code",
    "start": "1599760",
    "end": "1606159"
  },
  {
    "text": "and for this one we should also add that immediately to the data store",
    "start": "1606159",
    "end": "1613840"
  },
  {
    "text": "yeah all right okay so now i'm going to introduce you another",
    "start": "1615120",
    "end": "1621120"
  },
  {
    "text": "generic feature and this is something that you have used before i'm pretty sure about it but this is looking quite",
    "start": "1621120",
    "end": "1630080"
  },
  {
    "text": "quite complex specifically the declaration",
    "start": "1630559",
    "end": "1638320"
  },
  {
    "text": "so if you take a good look at this what i am trying to do here is i want to",
    "start": "1638320",
    "end": "1645440"
  },
  {
    "text": "execute some function that's going to happen a bit later on within a transaction so basically when i",
    "start": "1645440",
    "end": "1653200"
  },
  {
    "text": "want to update any of the entity framework models in the database",
    "start": "1653200",
    "end": "1660159"
  },
  {
    "text": "or delete it or update it or whatever i want i want this to happen within that",
    "start": "1660159",
    "end": "1665840"
  },
  {
    "text": "transaction and the interesting thing here is that this",
    "start": "1665840",
    "end": "1672320"
  },
  {
    "text": "first parameter looks quite complex on the declaration side of things",
    "start": "1672320",
    "end": "1678559"
  },
  {
    "text": "but this actually is a function which",
    "start": "1678559",
    "end": "1684159"
  },
  {
    "text": "passes in that ef data store with all the generic parameters",
    "start": "1684159",
    "end": "1691279"
  },
  {
    "text": "and it will return the type yeah which it returns but this looks",
    "start": "1691279",
    "end": "1697120"
  },
  {
    "text": "quite strange but you'll see a bit later in code that this is a very powerful feature",
    "start": "1697120",
    "end": "1702640"
  },
  {
    "text": "that allows you to basically do whatever you want within this function and return whatever you want in this function",
    "start": "1702640",
    "end": "1709600"
  },
  {
    "text": "because of this generic signature and this is this is done on a function i",
    "start": "1709600",
    "end": "1714799"
  },
  {
    "text": "have a similar one this will not return anything but it",
    "start": "1714799",
    "end": "1720640"
  },
  {
    "text": "will still do something huh so this let's go back to this one so what we do",
    "start": "1720640",
    "end": "1727440"
  },
  {
    "text": "here is i have this work parameter in this case it is of a type function so",
    "start": "1727440",
    "end": "1733600"
  },
  {
    "text": "it can return something and the other one is quite similar",
    "start": "1733600",
    "end": "1738880"
  },
  {
    "text": "except that instead of returning this t this parameter will be an action so this",
    "start": "1738880",
    "end": "1746000"
  },
  {
    "text": "this work will not return anything but it will just do something within this transaction there but that perk is going",
    "start": "1746000",
    "end": "1752080"
  },
  {
    "text": "to be executed here and then it will do a commit in this",
    "start": "1752080",
    "end": "1757760"
  },
  {
    "text": "case or whatever so the declaration looks",
    "start": "1757760",
    "end": "1762799"
  },
  {
    "text": "a bit complex but you'll see in code how this actually works so let's",
    "start": "1762799",
    "end": "1769840"
  },
  {
    "text": "go a bit further before we can use that code there is one thing",
    "start": "1769840",
    "end": "1775440"
  },
  {
    "text": "that we don't know yet in this base class and that is how to set the model key",
    "start": "1775440",
    "end": "1783200"
  },
  {
    "text": "on a particular model so what i'll just do here is i mark this as being abstract i don't know what it's",
    "start": "1783200",
    "end": "1790080"
  },
  {
    "text": "going to be i mean for if i want to update an invoice i have this invoice model and it's got",
    "start": "1790080",
    "end": "1796159"
  },
  {
    "text": "an invoice id property but if i have an album",
    "start": "1796159",
    "end": "1801200"
  },
  {
    "text": "it might have an album id and so those properties are different could be different",
    "start": "1801200",
    "end": "1807279"
  },
  {
    "text": "but i want my code to be type safe so that is why i am uh",
    "start": "1807279",
    "end": "1813840"
  },
  {
    "text": "making this one abstract and in the in the derived class of this",
    "start": "1813840",
    "end": "1819600"
  },
  {
    "text": "you will see that it is really not a lot of work to implement it",
    "start": "1819600",
    "end": "1824720"
  },
  {
    "text": "i'll add this one to the interface as well and stop",
    "start": "1824720",
    "end": "1830240"
  },
  {
    "text": "reloading i have another one which will return the key and it's the",
    "start": "1830240",
    "end": "1838000"
  },
  {
    "text": "same for the album it can be the album id and for an invoice it can be invoice id and again i've made this one abstract",
    "start": "1838000",
    "end": "1845120"
  },
  {
    "text": "as well then there is one thing and that's uh",
    "start": "1845120",
    "end": "1851279"
  },
  {
    "text": "the one to set uh to get the key out of the model",
    "start": "1851279",
    "end": "1858640"
  },
  {
    "text": "because theoretically with dto you could be working with the entity",
    "start": "1858640",
    "end": "1863840"
  },
  {
    "text": "framework model which has an id field but maybe you want to have it on the dto's album id so those keys could be",
    "start": "1863840",
    "end": "1870480"
  },
  {
    "text": "different from the model the entity framework model versus db model so i've made this one abstract as well",
    "start": "1870480",
    "end": "1877360"
  },
  {
    "text": "and now with these in place",
    "start": "1877360",
    "end": "1882880"
  },
  {
    "text": "i can create a generic update methods",
    "start": "1883039",
    "end": "1889440"
  },
  {
    "text": "insert method basically and this also brings us to this transcend transactional execute",
    "start": "1889440",
    "end": "1897919"
  },
  {
    "text": "with the with the difficult signature to read so what i am doing here and this is",
    "start": "1898640",
    "end": "1904159"
  },
  {
    "text": "obviously quite nice is that this first parameter work is receiving two",
    "start": "1904159",
    "end": "1910159"
  },
  {
    "text": "parameters i specified that in the signature above so check it out a bit later",
    "start": "1910159",
    "end": "1916159"
  },
  {
    "text": "and this is the code which is going to be executed and as you can see because i pass in those two",
    "start": "1916159",
    "end": "1921840"
  },
  {
    "text": "parameters here i have access to the db context i have access to all the things",
    "start": "1921840",
    "end": "1927200"
  },
  {
    "text": "that i need to update that model and one of the other things that i've",
    "start": "1927200",
    "end": "1932640"
  },
  {
    "text": "done is i have passed in a an array of models so i can update like",
    "start": "1932640",
    "end": "1937919"
  },
  {
    "text": "a whole bunch of them in one go and so this is that parameter of the",
    "start": "1937919",
    "end": "1943840"
  },
  {
    "text": "transactional execute and in this case it is the first one that was returning the t so that is the",
    "start": "1943840",
    "end": "1950960"
  },
  {
    "text": "result uh and but if you want to do something which doesn't necessarily update or",
    "start": "1950960",
    "end": "1956559"
  },
  {
    "text": "return anything uh yeah you can use the other one and in this case the result",
    "start": "1956559",
    "end": "1963279"
  },
  {
    "text": "is a type ef result there was a little class that i put on top of it and why is that of type ef result",
    "start": "1963279",
    "end": "1970880"
  },
  {
    "text": "because in the end",
    "start": "1970880",
    "end": "1974840"
  },
  {
    "text": "i'm returning that ef result and that is why the result but if i",
    "start": "1976080",
    "end": "1982240"
  },
  {
    "text": "would return an integer if i would change this return uh 10 for instance then that t would be",
    "start": "1982240",
    "end": "1988880"
  },
  {
    "text": "changing an integer so this already works design time very nice",
    "start": "1988880",
    "end": "1994880"
  },
  {
    "text": "and the ef result is just a simple object returning success true or false i mean in a real application you might",
    "start": "1994880",
    "end": "2000640"
  },
  {
    "text": "want to check which items have been updated and which not whatever so you might want to",
    "start": "2000640",
    "end": "2007120"
  },
  {
    "text": "expand that a bit but all very very generic still",
    "start": "2007120",
    "end": "2014080"
  },
  {
    "text": "well you can imagine that the update method is doing a similar thing so i'm not",
    "start": "2014080",
    "end": "2019840"
  },
  {
    "text": "going to spend too much time on that but what we'll see here is that we look up",
    "start": "2019840",
    "end": "2025919"
  },
  {
    "text": "the model key so this brings us to this abstract method i need a model key before i can actually look that up",
    "start": "2026240",
    "end": "2032480"
  },
  {
    "text": "in the in the database and if i found it i will map it",
    "start": "2032480",
    "end": "2038799"
  },
  {
    "text": "from the dto model into the entity framework model and i'll save it and so again with that transaction",
    "start": "2038799",
    "end": "2046640"
  },
  {
    "text": "execute method well then the last thing that we'll do here",
    "start": "2046640",
    "end": "2054638"
  },
  {
    "text": "is the delete methods well for the delete we basically only",
    "start": "2054639",
    "end": "2061679"
  },
  {
    "text": "need the ids so i thought okay i'll do an array of ids of type t key",
    "start": "2061679",
    "end": "2067358"
  },
  {
    "text": "and yeah pretty much the same in this case it will do the transactional execute as",
    "start": "2067359",
    "end": "2072638"
  },
  {
    "text": "well but it will just locate the models and it will delete it you see so",
    "start": "2072639",
    "end": "2079760"
  },
  {
    "text": "then because we want to use create a weight and async as well i have",
    "start": "2079839",
    "end": "2085679"
  },
  {
    "text": "put in a couple of methods which will allow us to async await the same stuff",
    "start": "2085679",
    "end": "2091200"
  },
  {
    "text": "as well and with this yeah we have actually set up our",
    "start": "2091200",
    "end": "2097118"
  },
  {
    "text": "generic data store so how does this work in in in practice",
    "start": "2097119",
    "end": "2102400"
  },
  {
    "text": "basically well if i would now go to the invoice controller",
    "start": "2102400",
    "end": "2109359"
  },
  {
    "text": "i can go to here no not the invoice controller the",
    "start": "2111440",
    "end": "2117280"
  },
  {
    "text": "invoice store i've created a class of type invoice store and what i now do",
    "start": "2117280",
    "end": "2124960"
  },
  {
    "text": "i'm going to create this class",
    "start": "2125359",
    "end": "2129400"
  },
  {
    "text": "and this is how i am able to yeah to implement this this ef data store",
    "start": "2131280",
    "end": "2137280"
  },
  {
    "text": "in this case it is already specified that i am using the shenouk database context which site configured",
    "start": "2137280",
    "end": "2144880"
  },
  {
    "text": "the invoice entity has a primary key of type integer my dto invoice is the class that i will",
    "start": "2144880",
    "end": "2152800"
  },
  {
    "text": "be projecting on the front and the invoice is the entity framework model",
    "start": "2152800",
    "end": "2160079"
  },
  {
    "text": "now what you also see now is that there is a couple of red",
    "start": "2160079",
    "end": "2165839"
  },
  {
    "text": "scribbly lines and let's first take a look at this one others a couple of",
    "start": "2165839",
    "end": "2171040"
  },
  {
    "text": "typos here let me first get these out of the way",
    "start": "2171040",
    "end": "2178480"
  },
  {
    "text": "i need to change this in the demo sites but okay so they're all gone",
    "start": "2180960",
    "end": "2187760"
  },
  {
    "text": "and now they're double let's get rid of these as well",
    "start": "2187760",
    "end": "2194560"
  },
  {
    "text": "all right so and this is a really cool feature because you already saw it with the",
    "start": "2194560",
    "end": "2199839"
  },
  {
    "text": "abstract class that i was demoing in the beginning it is already complaining that something is not cool here",
    "start": "2199839",
    "end": "2205839"
  },
  {
    "text": "and if i would hover over what we'll see is yeah there is some stuff not being implemented because it was being",
    "start": "2205839",
    "end": "2212240"
  },
  {
    "text": "abstract and now you'll get a really nice thing",
    "start": "2212240",
    "end": "2217680"
  },
  {
    "text": "because if i first say add a missing constructor i need a",
    "start": "2217680",
    "end": "2222880"
  },
  {
    "text": "constructor obviously stop",
    "start": "2222880",
    "end": "2229720"
  },
  {
    "text": "can i just stop that thing for",
    "start": "2229839",
    "end": "2233760"
  },
  {
    "text": "ah okay anyway so i just implemented the constructor and what you see is that",
    "start": "2235599",
    "end": "2242160"
  },
  {
    "text": "that genome context is now used as a parameter so it is now become strongly",
    "start": "2242160",
    "end": "2247760"
  },
  {
    "text": "typed and we go to we take this a step further because if i now go again to here and i",
    "start": "2247760",
    "end": "2255760"
  },
  {
    "text": "will implement the abstract class and this is also quite cool because you know",
    "start": "2255760",
    "end": "2261119"
  },
  {
    "text": "exactly where you're dealing with this is the only stuff that i need to implement",
    "start": "2261119",
    "end": "2268160"
  },
  {
    "text": "and if i do this i have a full data store which allows me to deal with",
    "start": "2269040",
    "end": "2274640"
  },
  {
    "text": "in this case invoices so well this is quite",
    "start": "2274640",
    "end": "2281119"
  },
  {
    "text": "quite simple and what's also interesting now is that you see that the generic base type has been closed it's not",
    "start": "2281119",
    "end": "2287760"
  },
  {
    "text": "generic anymore it is now all strongly typed this is the model i'm dealing with",
    "start": "2287760",
    "end": "2294800"
  },
  {
    "text": "this is another model i'm dealing with this key is an integer because i specified it on top so it is",
    "start": "2294800",
    "end": "2301520"
  },
  {
    "text": "basic it's it's typically a coding template once you combine abstract and and",
    "start": "2301520",
    "end": "2307599"
  },
  {
    "text": "generics together with uh with each other and the only thing i need to do now is i",
    "start": "2307599",
    "end": "2313119"
  },
  {
    "text": "can return in this case modeled and i have",
    "start": "2313119",
    "end": "2319920"
  },
  {
    "text": "everything available here so this is obviously very powerful and it saves you quite a bit of",
    "start": "2319920",
    "end": "2328320"
  },
  {
    "text": "compile time errors okay so let's say model dots well what was it again",
    "start": "2328320",
    "end": "2334480"
  },
  {
    "text": "invoice id equals key so now i'm actually dealing with",
    "start": "2334480",
    "end": "2340400"
  },
  {
    "text": "strongly typed things",
    "start": "2340400",
    "end": "2344480"
  },
  {
    "text": "let's do this one as well return model dot invoice id",
    "start": "2346320",
    "end": "2352320"
  },
  {
    "text": "and yeah with this approach my base classes don't need to inherit from",
    "start": "2352320",
    "end": "2357599"
  },
  {
    "text": "anything that i would need to make this work now i'm just dealing with generic types",
    "start": "2357599",
    "end": "2363280"
  },
  {
    "text": "i now have code completion here on the specific types that i have been specifying",
    "start": "2363280",
    "end": "2368720"
  },
  {
    "text": "and this is the only thing i need to do so before we can actually apply this on",
    "start": "2368720",
    "end": "2375119"
  },
  {
    "text": "the uh on the application",
    "start": "2375119",
    "end": "2381040"
  },
  {
    "text": "do the customer store quickly as well and this is typically it's it's not really a lot different in",
    "start": "2381040",
    "end": "2387359"
  },
  {
    "text": "this case i'm dealing again with the new context integer type dto customer instead of",
    "start": "2387359",
    "end": "2394079"
  },
  {
    "text": "customer and yeah now it's pretty much the same deal",
    "start": "2394079",
    "end": "2399599"
  },
  {
    "text": "i can just say implement at the constructor",
    "start": "2399599",
    "end": "2405759"
  },
  {
    "text": "stop reloading and uh and implements",
    "start": "2407119",
    "end": "2413599"
  },
  {
    "text": "the abstract class so now these classes only implement code",
    "start": "2413599",
    "end": "2419680"
  },
  {
    "text": "that is specifically for these classes and you have gotten rid of a bunch of redundant",
    "start": "2419680",
    "end": "2425920"
  },
  {
    "text": "code before we can actually apply this on the application there is another thing i",
    "start": "2425920",
    "end": "2431680"
  },
  {
    "text": "need to do but i will quickly go over that and that is the base controller",
    "start": "2431680",
    "end": "2437359"
  },
  {
    "text": "i've also decided to set up a base controller and again",
    "start": "2437359",
    "end": "2444000"
  },
  {
    "text": "i will follow the same approach as i did with the with the store the base controller has a key type it has a",
    "start": "2444000",
    "end": "2452160"
  },
  {
    "text": "model and it has a store type so i need an invoice controller obviously",
    "start": "2452160",
    "end": "2457520"
  },
  {
    "text": "to deal with invoices i need a customer controller to to deal with customers etc",
    "start": "2457520",
    "end": "2462880"
  },
  {
    "text": "okay so again i have now specified that this t store is only of a type i data",
    "start": "2462880",
    "end": "2469440"
  },
  {
    "text": "store of t key t model so i can't use",
    "start": "2469440",
    "end": "2475520"
  },
  {
    "text": "the customer store on the invoice controller because those declarations don't match",
    "start": "2475520",
    "end": "2482000"
  },
  {
    "text": "you'll get a design time error that that won't work so this is quite safe",
    "start": "2482000",
    "end": "2488400"
  },
  {
    "text": "coding wise in this case i will",
    "start": "2488400",
    "end": "2493599"
  },
  {
    "text": "also use constructor injection in this case i need the uh",
    "start": "2493599",
    "end": "2502079"
  },
  {
    "text": "i only need the data store so let me quickly insert it like this",
    "start": "2502160",
    "end": "2508838"
  },
  {
    "text": "and there's a couple of other things that i will do in this case i exposed the data store the primary key",
    "start": "2509040",
    "end": "2516240"
  },
  {
    "text": "pagination and the primary key that is something that was in common in the original codes and that has to do",
    "start": "2516240",
    "end": "2524000"
  },
  {
    "text": "with the remote paging sorting grouping but that is more like a devexpress thing i won't go too much over that right now",
    "start": "2524000",
    "end": "2530640"
  },
  {
    "text": "but i'm just putting it in then i'm gonna put in the error message",
    "start": "2530640",
    "end": "2535920"
  },
  {
    "text": "to get full error messages something which was in all the controllers so that was a bit redundant code",
    "start": "2535920",
    "end": "2542720"
  },
  {
    "text": "so i'm just putting it in here and another thing i'm putting in here is the populate model and the populate",
    "start": "2542720",
    "end": "2549040"
  },
  {
    "text": "model is because the the controller the invoice controller if you want to do",
    "start": "2549040",
    "end": "2555359"
  },
  {
    "text": "an update here it receives json",
    "start": "2555359",
    "end": "2561440"
  },
  {
    "text": "and that needs to be deserialized into a model and for that we're going to be using that populate model thing",
    "start": "2561440",
    "end": "2569520"
  },
  {
    "text": "so just a couple of helper things here [Music]",
    "start": "2570800",
    "end": "2576319"
  },
  {
    "text": "again i do want to have access to the create model so in this case i could also call the main data store t-model i",
    "start": "2576319",
    "end": "2583040"
  },
  {
    "text": "don't know why i did that and the iqueryable i make it available",
    "start": "2583040",
    "end": "2588560"
  },
  {
    "text": "as a method on the controller as well now we're gonna actually read the yeah",
    "start": "2588560",
    "end": "2595839"
  },
  {
    "text": "remove some of the redundant codes by implementing the get method and in this case i'm not decorating we're not",
    "start": "2595839",
    "end": "2602079"
  },
  {
    "text": "dealing with it with a controller so i'm not decorating in this base class the",
    "start": "2602079",
    "end": "2607599"
  },
  {
    "text": "method with http gets i will also not do that",
    "start": "2607599",
    "end": "2613760"
  },
  {
    "text": "with the post and the update",
    "start": "2613760",
    "end": "2619200"
  },
  {
    "text": "and the delete there was something that was",
    "start": "2619200",
    "end": "2627599"
  },
  {
    "text": "why is this giving me this error",
    "start": "2628319",
    "end": "2632680"
  },
  {
    "text": "should be okay let me see uh i am on purpose not decorating these",
    "start": "2634560",
    "end": "2640960"
  },
  {
    "text": "attributes on the base controller because maybe there is this one controller that doesn't allow you to",
    "start": "2640960",
    "end": "2647200"
  },
  {
    "text": "update or insert or whatever so you need to explicitly do that on the actual controller which is deriving from this",
    "start": "2647200",
    "end": "2653760"
  },
  {
    "text": "one all right so with this in place i still",
    "start": "2653760",
    "end": "2661040"
  },
  {
    "text": "don't know why this is do i really need to",
    "start": "2661040",
    "end": "2666560"
  },
  {
    "text": "do it like this",
    "start": "2667359",
    "end": "2670920"
  },
  {
    "text": "of course yeah yeah yeah i needed to do the await and async",
    "start": "2676240",
    "end": "2682800"
  },
  {
    "text": "methods i needed to put that obviously in the interface which i",
    "start": "2682800",
    "end": "2688720"
  },
  {
    "text": "didn't do so let me do that right now",
    "start": "2688720",
    "end": "2696640"
  },
  {
    "text": "all right",
    "start": "2701920",
    "end": "2705078"
  },
  {
    "text": "okay",
    "start": "2708400",
    "end": "2710720"
  },
  {
    "text": "all right so all the all those issues have gone now so i have quickly implemented a generic base controller as",
    "start": "2715200",
    "end": "2722640"
  },
  {
    "text": "well which is dealing with the store so i've actually abstracted that that original code a bit",
    "start": "2722640",
    "end": "2729440"
  },
  {
    "text": "as well so you can uh yeah you have that separated",
    "start": "2729440",
    "end": "2734560"
  },
  {
    "text": "and now we can actually start with the fun stuff um the data stores need to be",
    "start": "2734560",
    "end": "2740240"
  },
  {
    "text": "configured in this case uh i will first in my startup",
    "start": "2740240",
    "end": "2748000"
  },
  {
    "text": "i will deal first with the invoice and the customers i think",
    "start": "2748240",
    "end": "2754800"
  },
  {
    "text": "so now i can use the di to add my info store which will now be",
    "start": "2754800",
    "end": "2763119"
  },
  {
    "text": "injected in a controller which demands an eye data store which deals with dto",
    "start": "2763119",
    "end": "2768240"
  },
  {
    "text": "invoices the thing the same goes for the customer store so i've now configured my two",
    "start": "2768240",
    "end": "2776720"
  },
  {
    "text": "custom stores to be used with dependency injection if i would now go back to my controller",
    "start": "2776720",
    "end": "2783040"
  },
  {
    "text": "we can definitely slice up some code which is always nice to do",
    "start": "2783040",
    "end": "2789839"
  },
  {
    "text": "so in this case i will go to my invoice controller",
    "start": "2790240",
    "end": "2796400"
  },
  {
    "text": "and i will change this",
    "start": "2796400",
    "end": "2801880"
  },
  {
    "text": "to base controller and as you can see you will have the full",
    "start": "2803200",
    "end": "2808640"
  },
  {
    "text": "code hinting i'm dealing with an integer",
    "start": "2808640",
    "end": "2813920"
  },
  {
    "text": "i'm dealing with a dto uh invoice in this case",
    "start": "2813920",
    "end": "2819040"
  },
  {
    "text": "and the store is going to be my uh a data store let me",
    "start": "2819040",
    "end": "2826559"
  },
  {
    "text": "let me copy that over from the dependency injection",
    "start": "2827760",
    "end": "2834240"
  },
  {
    "text": "where was it yeah",
    "start": "2835520",
    "end": "2839240"
  },
  {
    "text": "okay this should be injected and this will obviously result in the invoice store because i configured that",
    "start": "2848079",
    "end": "2855520"
  },
  {
    "text": "like that",
    "start": "2855520",
    "end": "2858839"
  },
  {
    "text": "see and now i can let me quickly put this one aside",
    "start": "2867280",
    "end": "2874160"
  },
  {
    "text": "like this",
    "start": "2875839",
    "end": "2878559"
  },
  {
    "text": "i'm not sure why it is now complaining",
    "start": "2885440",
    "end": "2891720"
  },
  {
    "text": "yeah so what you'll see is that i have implemented a constructor and i need to override a couple of things here",
    "start": "2908400",
    "end": "2915359"
  },
  {
    "text": "uh this one is still a bit weird why it can't be found",
    "start": "2915359",
    "end": "2921440"
  },
  {
    "text": "wait a sec okay let me switch up",
    "start": "2924160",
    "end": "2930799"
  },
  {
    "text": "did i miss something there it must it must be",
    "start": "2936000",
    "end": "2942520"
  },
  {
    "text": "let me let me get rid of this and let me start all over again here so",
    "start": "2945200",
    "end": "2950559"
  },
  {
    "text": "i was implementing the base controller and the base controller deals with the integer the dto invoice",
    "start": "2950559",
    "end": "2957440"
  },
  {
    "text": "i'm not sure why i can't find the dto invoice",
    "start": "2957440",
    "end": "2962960"
  },
  {
    "text": "did i uh yeah i probably uh didn't got it in the name",
    "start": "2964559",
    "end": "2970680"
  },
  {
    "text": "yeah i can probably do it like this",
    "start": "2971119",
    "end": "2974720"
  },
  {
    "text": "all right so yeah we're back in business wow yeah",
    "start": "2977359",
    "end": "2982880"
  },
  {
    "text": "okay so i've now specified this base controller and let's",
    "start": "2982880",
    "end": "2988720"
  },
  {
    "text": "implement the constructor first to get that all set up everything is okay here",
    "start": "2988720",
    "end": "2994960"
  },
  {
    "text": "and now what i can do is i can override oh no i first need to implement an",
    "start": "2994960",
    "end": "3000400"
  },
  {
    "text": "abstract thing override the gets",
    "start": "3000400",
    "end": "3005599"
  },
  {
    "text": "why do i need to override the gap because i need to decorate it with the http i'm i have decided to do that on",
    "start": "3005680",
    "end": "3011440"
  },
  {
    "text": "purpose because now i can specify per controller",
    "start": "3011440",
    "end": "3016558"
  },
  {
    "text": "yeah that it should be available for get or",
    "start": "3017359",
    "end": "3022400"
  },
  {
    "text": "something else then i will do the same you know what i'm going to copy that one",
    "start": "3023680",
    "end": "3029280"
  },
  {
    "text": "over from my finished demo that saves a bit of work here and there",
    "start": "3029280",
    "end": "3036400"
  },
  {
    "text": "um so the invoice controller is",
    "start": "3036800",
    "end": "3045040"
  },
  {
    "text": "going to look like",
    "start": "3045040",
    "end": "3052040"
  },
  {
    "text": "this this is going to be way shorter because what i've done now",
    "start": "3054240",
    "end": "3059920"
  },
  {
    "text": "is i have overwritten the appropriate methods",
    "start": "3059920",
    "end": "3066440"
  },
  {
    "text": "and there is one method that needs a bit of attention i have mentioned that before",
    "start": "3072960",
    "end": "3080160"
  },
  {
    "text": "at the beginning when implementing the store so let me do it like this",
    "start": "3080240",
    "end": "3085520"
  },
  {
    "text": "so and that is the customer lookup but what we'll see now is that we have actually reduced this entire controller",
    "start": "3085520",
    "end": "3094799"
  },
  {
    "text": "the code that was in here so all this code is all",
    "start": "3095359",
    "end": "3101520"
  },
  {
    "text": "obsolete basically and this goes for all controllers now so",
    "start": "3101520",
    "end": "3106880"
  },
  {
    "text": "i'm not sure what will be faster scaffolding enough another controller are just implementing",
    "start": "3106880",
    "end": "3113520"
  },
  {
    "text": "one of these interfaces one of these base classes i mean all this code",
    "start": "3113520",
    "end": "3120480"
  },
  {
    "text": "can now go away",
    "start": "3120480",
    "end": "3126960"
  },
  {
    "text": "because this is the only thing that is left and as i mentioned i created this",
    "start": "3129040",
    "end": "3136960"
  },
  {
    "text": "this query method with a local generic type remember in the ef store well and that is because i",
    "start": "3136960",
    "end": "3144400"
  },
  {
    "text": "need a customer lookup to populate in the data grid you probably missed it",
    "start": "3144400",
    "end": "3150000"
  },
  {
    "text": "when i was showing the application so what we can do now as well is because we need a customer store here as well",
    "start": "3150000",
    "end": "3158000"
  },
  {
    "text": "we can actually expand this one",
    "start": "3158000",
    "end": "3162960"
  },
  {
    "text": "with having a second parameter well let me just show you that in the finished demo because we are almost through our",
    "start": "3163520",
    "end": "3169520"
  },
  {
    "text": "time as well this was the invoice controller",
    "start": "3169520",
    "end": "3176160"
  },
  {
    "text": "so what i've done here is i've just used constructor injection to get access",
    "start": "3177119",
    "end": "3183680"
  },
  {
    "text": "to the customer store as well and instead of getting a full dto",
    "start": "3183680",
    "end": "3190800"
  },
  {
    "text": "customer object back i just need a simple object and if i would check this",
    "start": "3190800",
    "end": "3195920"
  },
  {
    "text": "class up that was already in the dto classes it typically just has a value a first",
    "start": "3195920",
    "end": "3202800"
  },
  {
    "text": "name and a last name while the full dto customer obviously has a bit more",
    "start": "3202800",
    "end": "3208240"
  },
  {
    "text": "information so because of that local type that i used on the query method i'll be able to use",
    "start": "3208240",
    "end": "3215359"
  },
  {
    "text": "auto mapper and the configured auto mapper entities to get another type of customer object back as well",
    "start": "3215359",
    "end": "3223839"
  },
  {
    "text": "and yeah so with this in place you can imagine that you can actually",
    "start": "3223839",
    "end": "3229119"
  },
  {
    "text": "yeah reduce quite a bunch of code and in this particular scenario i have reduced it to",
    "start": "3229119",
    "end": "3235680"
  },
  {
    "text": "like what is it five percent of the remaining code and obviously i have the base classes uh",
    "start": "3235680",
    "end": "3242640"
  },
  {
    "text": "prepared to be fully generic and i can actually implement it strongly",
    "start": "3242640",
    "end": "3248000"
  },
  {
    "text": "typed on my actual implementation",
    "start": "3248000",
    "end": "3253119"
  },
  {
    "text": "and with this in place what we'll see is",
    "start": "3253119",
    "end": "3259440"
  },
  {
    "text": "let me quickly put this in so the application runs again i'll copy this over",
    "start": "3259760",
    "end": "3265839"
  },
  {
    "text": "to the other one",
    "start": "3266400",
    "end": "3269599"
  },
  {
    "text": "here it's starting to what",
    "start": "3276839",
    "end": "3284240"
  },
  {
    "text": "sorry",
    "start": "3289599",
    "end": "3292599"
  },
  {
    "text": "a bit where am i missing something oh",
    "start": "3295680",
    "end": "3301760"
  },
  {
    "text": "yeah you're totally right",
    "start": "3301760",
    "end": "3306040"
  },
  {
    "text": "yeah so and with this in place we yeah we have typically the same application as before",
    "start": "3307200",
    "end": "3313280"
  },
  {
    "text": "when i use the scaffolding feature with like a whole bunch of redundant code and the application will still behave the",
    "start": "3313280",
    "end": "3319680"
  },
  {
    "text": "same except that it is way easier now for instance one of the things that i didn't",
    "start": "3319680",
    "end": "3325680"
  },
  {
    "text": "touch is obviously maybe you want to do some validation yeah you could put in",
    "start": "3325680",
    "end": "3331920"
  },
  {
    "text": "fluent validation or whatever which works great with with generic types as well you could actually implement that",
    "start": "3331920",
    "end": "3338160"
  },
  {
    "text": "into that data store that base data store and have that system figure it out at",
    "start": "3338160",
    "end": "3343599"
  },
  {
    "text": "runtime um this was not what i was gonna show",
    "start": "3343599",
    "end": "3348640"
  },
  {
    "text": "yeah so here we have the same application i mean for the front there is typically",
    "start": "3348640",
    "end": "3353839"
  },
  {
    "text": "nothing changed except for the fact that under the hood we have separated the the classes that are used on the front and",
    "start": "3353839",
    "end": "3360559"
  },
  {
    "text": "in the data grid from the actual entity framework models and we can have other validation",
    "start": "3360559",
    "end": "3366720"
  },
  {
    "text": "settings on the dto models besides and versus the validation rules on the",
    "start": "3366720",
    "end": "3372880"
  },
  {
    "text": "entity framework models and yeah there is a bit of an abstraction there",
    "start": "3372880",
    "end": "3379040"
  },
  {
    "text": "but for the front yeah the application is just the same",
    "start": "3379040",
    "end": "3384640"
  },
  {
    "text": "and uh yeah so with this this is the customer by the way so the customer id is actually a lookup which is calling",
    "start": "3384720",
    "end": "3391599"
  },
  {
    "text": "that method that i was talking about you see",
    "start": "3391599",
    "end": "3397359"
  },
  {
    "text": "and with this i think we are i am pretty much done with",
    "start": "3398799",
    "end": "3405359"
  },
  {
    "text": "explaining what i was going to explain let me see if the bullets we have touched all the bullets here",
    "start": "3405359",
    "end": "3412640"
  },
  {
    "text": "i was going to explain what i was going to do yeah and with this i uh yeah i'm pretty much",
    "start": "3416160",
    "end": "3423200"
  },
  {
    "text": "done in uh in refactoring my code into generic abstract classes which allows",
    "start": "3423200",
    "end": "3428400"
  },
  {
    "text": "you to only implement the specific differences between implementations here and there",
    "start": "3428400",
    "end": "3435520"
  },
  {
    "text": "um yeah and if you want to play around with this code i mean feel free i have this full demo including the starting",
    "start": "3435520",
    "end": "3441599"
  },
  {
    "text": "point as well as the end project it is available on this github repository",
    "start": "3441599",
    "end": "3447599"
  },
  {
    "text": "yeah check it out and and see if you can use it your own applications if you can",
    "start": "3447599",
    "end": "3453200"
  },
  {
    "text": "optimize your own code and make your uh your code a bit more maintainable",
    "start": "3453200",
    "end": "3459520"
  },
  {
    "text": "so are there any questions so far",
    "start": "3459520",
    "end": "3463839"
  },
  {
    "text": "in that case thank you for your attention and",
    "start": "3465760",
    "end": "3471640"
  }
]