[
  {
    "text": "well last session of NDC hell you guys have you been having fun today was it anyone learnt anything you very",
    "start": "9610",
    "end": "19160"
  },
  {
    "text": "good right so how many people here because",
    "start": "19160",
    "end": "24769"
  },
  {
    "text": "they're only about yeah how many people here have actually written an interactive application before something",
    "start": "24769",
    "end": "30890"
  },
  {
    "text": "that involved actually having input coming from you user and doing stuff with it you know all that anyone",
    "start": "30890",
    "end": "37449"
  },
  {
    "text": "business application any kind of cool right so I'm speaking to the choir",
    "start": "37449",
    "end": "42559"
  },
  {
    "text": "everybody understands what I'm going to talk now that's good so what I'm going",
    "start": "42559",
    "end": "49280"
  },
  {
    "text": "to do is I'm going to take a little business application and I'm gonna dissect it and put it back together and",
    "start": "49280",
    "end": "54860"
  },
  {
    "text": "then maybe it'll be better than when we started with it and hopefully along the",
    "start": "54860",
    "end": "61070"
  },
  {
    "text": "way we will talk about what we did some principles and so on and see if we can",
    "start": "61070",
    "end": "66229"
  },
  {
    "text": "learn something new so in my past life",
    "start": "66229",
    "end": "72280"
  },
  {
    "text": "right right so in my past life I used to be a consultant anyone seen what a blob eyes is anyone",
    "start": "80580",
    "end": "87660"
  },
  {
    "text": "does anyone know what a blue eyes yeah so Scott lash in one of my friends is in the room over there doing his own",
    "start": "87660",
    "end": "94200"
  },
  {
    "text": "talk cause boring line of business applications right and usually it's",
    "start": "94200",
    "end": "101760"
  },
  {
    "text": "something like order processing I mean insurance claims management or leave application backing or something like",
    "start": "101760",
    "end": "108240"
  },
  {
    "text": "that and you know customers would come to me and want one of these things done and most of these minor business",
    "start": "108240",
    "end": "116910"
  },
  {
    "text": "applications they're obviously very interactive they tend to want to process",
    "start": "116910",
    "end": "123990"
  },
  {
    "text": "you know some thousand of these you know in some time period right you know tax",
    "start": "123990",
    "end": "129780"
  },
  {
    "text": "return so so many thousand tax returns a year or so many invoices a month or something like that right so there's",
    "start": "129780",
    "end": "136890"
  },
  {
    "text": "usually some element of scale associated with it that you have to design the thing for and then there's the concept",
    "start": "136890",
    "end": "143700"
  },
  {
    "text": "of a business rule which is kind of specified in terms of everyday life because you know people have been doing",
    "start": "143700",
    "end": "149730"
  },
  {
    "text": "insurance you know three or four hundred years or something before computers anyway and so they want to apply the",
    "start": "149730",
    "end": "155010"
  },
  {
    "text": "same business rules in the computer process so even if you go and try and",
    "start": "155010",
    "end": "160380"
  },
  {
    "text": "get admitted in hospital they want you to fill out a form that looks very much like the paper form that they used to",
    "start": "160380",
    "end": "165690"
  },
  {
    "text": "fill out fifty years ago right and so the business logic is sort of very",
    "start": "165690",
    "end": "172019"
  },
  {
    "text": "domain-specific and people basically",
    "start": "172019",
    "end": "177440"
  },
  {
    "text": "want to keep the existing ones so they tend to be a bit complex and you don't necessarily fully understand the",
    "start": "177650",
    "end": "184050"
  },
  {
    "text": "complexity of the domain so this requirements are usually presented to",
    "start": "184050",
    "end": "189209"
  },
  {
    "text": "you progressively now to make things worse I was actually a consultant with a",
    "start": "189209",
    "end": "195630"
  },
  {
    "text": "development team overseas so they definitely give everything to you piecemeal right so you can't get it you",
    "start": "195630",
    "end": "202860"
  },
  {
    "text": "can't understand the whole system upfront you can't design everything upfront you've got to spend a fair bit of time building something that they",
    "start": "202860",
    "end": "209970"
  },
  {
    "text": "need right now but leave yourself enough wiggle room in order to be able to accommodate change",
    "start": "209970",
    "end": "215989"
  },
  {
    "text": "later we're definitely not writing fire-and-forget kind of things now",
    "start": "215989",
    "end": "221080"
  },
  {
    "text": "usually when you have this kind of a system what lands up happening is that the systems are key dates you know the",
    "start": "221080",
    "end": "226760"
  },
  {
    "text": "big guys they go off and they talk about scale and they talk about should we you know design for the cloud and what kind",
    "start": "226760",
    "end": "233420"
  },
  {
    "text": "of clusters do we need and how much memory and what kind of databases should we use what's our failover strategy and",
    "start": "233420",
    "end": "239510"
  },
  {
    "text": "this and that and most of it centers around you know some very interesting problems and most of its and spend",
    "start": "239510",
    "end": "245090"
  },
  {
    "text": "centers around spending money so you buy a new kid and you do all kinds of cool stuff the capability side that's most of",
    "start": "245090",
    "end": "253670"
  },
  {
    "text": "us developers and systems and I mean applications engineer's will try and design the system in such a way that it",
    "start": "253670",
    "end": "261169"
  },
  {
    "text": "meets all the requirements that the customer needs and does so in a way that",
    "start": "261169",
    "end": "267500"
  },
  {
    "text": "gives us you know as I said earlier wiggle room so we bring craftsmanship into it we bring rules of experience",
    "start": "267500",
    "end": "274370"
  },
  {
    "text": "we'll bring you know Best of Breed technologies whatever it is we look at new stuff that's happening but most of",
    "start": "274370",
    "end": "280400"
  },
  {
    "text": "it is really I've done this before it doesn't work we have to do it this way and that's the learning process that we",
    "start": "280400",
    "end": "287539"
  },
  {
    "text": "all you know yet conferences like this you guys can relate to what I'm saying right cool so at some point we actually",
    "start": "287539",
    "end": "297680"
  },
  {
    "text": "finish this thing off it's a good thing we you know apply TDD and BDD we do on",
    "start": "297680",
    "end": "303949"
  },
  {
    "text": "the domain driven design and all of that bring the whole thing kill it up and running have a shipping party right",
    "start": "303949",
    "end": "310580"
  },
  {
    "text": "Consultants get sent home everybody the team moves on to something new and then",
    "start": "310580",
    "end": "316550"
  },
  {
    "text": "thing goes into production and there's some team in there who has a vague",
    "start": "316550",
    "end": "322870"
  },
  {
    "text": "relationship with the team that wrote the stuff in the first place and some",
    "start": "322870",
    "end": "327919"
  },
  {
    "text": "change request comes in and that's when everything starts falling apart right and I think the reality that we",
    "start": "327919",
    "end": "336110"
  },
  {
    "text": "have to understand is that things starting to fall apart is not a necessarily a function of bad coding",
    "start": "336110",
    "end": "341930"
  },
  {
    "text": "practices or anything like that in the please you.your you cannot build something and make it future-proof",
    "start": "341930",
    "end": "350159"
  },
  {
    "text": "perfect today it's just not possible to do that and the reason for that is",
    "start": "350159",
    "end": "355629"
  },
  {
    "text": "simply because of this we have human communication that's the problem",
    "start": "355629",
    "end": "361800"
  },
  {
    "text": "somebody has to communicate the specs to us that's lived with ambiguity then",
    "start": "361800",
    "end": "367179"
  },
  {
    "text": "somebody writes some code that's dependent on the specs and that's an interpretive function of understanding",
    "start": "367179",
    "end": "375610"
  },
  {
    "text": "the spec so the person now who's reading the code has to deduce intent has to",
    "start": "375610",
    "end": "382930"
  },
  {
    "text": "deduce context right has to figure out what the breadcrumbs are so that they",
    "start": "382930",
    "end": "388300"
  },
  {
    "text": "can do this thing make the change and then once they make the change",
    "start": "388300",
    "end": "393819"
  },
  {
    "text": "they've got leave bread crumbs for the next person that comes along and there's a new mystery that needs to be solved",
    "start": "393819",
    "end": "399490"
  },
  {
    "text": "you know six months down the line why this line of code is here is there the developer do something clever they",
    "start": "399490",
    "end": "405639"
  },
  {
    "text": "understand something more about the nuances of the system that he put the score in or did he just not get it and",
    "start": "405639",
    "end": "411639"
  },
  {
    "text": "dizzily introduced about I mean we don't know just by looking at it so the only hope for actually doing anything at all",
    "start": "411639",
    "end": "419610"
  },
  {
    "text": "must be to try and communicate better and that is you've got to make stuff",
    "start": "419610",
    "end": "425579"
  },
  {
    "text": "declare intent and formalism as early in the process as possible now we've",
    "start": "425579",
    "end": "432759"
  },
  {
    "text": "started with the whole you know let's not have a spec written in word let's write BDD and do stuff because then the",
    "start": "432759",
    "end": "440229"
  },
  {
    "text": "spec becomes a live kind of document and that's a good thing but that doesn't really inform us about the quality of",
    "start": "440229",
    "end": "446979"
  },
  {
    "text": "the code and how the code is actually going to degenerate over time because when someone makes a change they are not",
    "start": "446979",
    "end": "453099"
  },
  {
    "text": "necessarily communicating everything they can with the change and comments not really help let's be fair about that",
    "start": "453099",
    "end": "459689"
  },
  {
    "text": "right so what does better really look like we want to write systems that make",
    "start": "459689",
    "end": "467289"
  },
  {
    "text": "it easier to reason about the application that we're building reason about what we're trying to do and then",
    "start": "467289",
    "end": "473319"
  },
  {
    "text": "when you make a the approach that you take and the chord",
    "start": "473319",
    "end": "478860"
  },
  {
    "text": "that you have and the platform that you've built this thing on better make sure that this change is done safely so",
    "start": "478860",
    "end": "485699"
  },
  {
    "text": "you don't introduce unnecessary side-effects into the system the third",
    "start": "485699",
    "end": "492689"
  },
  {
    "text": "one's the most contentious you know it should not involve a wholesale change on what you're doing right now so this",
    "start": "492689",
    "end": "499529"
  },
  {
    "text": "isn't to talk about where I say you should start programming Haskell you should but not because of this or if",
    "start": "499529",
    "end": "506969"
  },
  {
    "text": "sure you should not because of this right the the the need for the change it",
    "start": "506969",
    "end": "513300"
  },
  {
    "text": "is not special you won't get the benefits that you want just by changing wholesale everything that you do so what",
    "start": "513300",
    "end": "521039"
  },
  {
    "text": "we need to do is find a way to communicate intent and raise the level of clarity of what we want to do and",
    "start": "521039",
    "end": "528259"
  },
  {
    "text": "that's kind of the background for where we are right now or what I want to do so",
    "start": "528259",
    "end": "534689"
  },
  {
    "text": "with that in mind let's build a bank right I have only three business rules I",
    "start": "534689",
    "end": "544970"
  },
  {
    "text": "am putting on my custom and only three business rules right a bank account",
    "start": "544970",
    "end": "552000"
  },
  {
    "text": "should have an initial balance of zero it can support deposits of money without",
    "start": "552000",
    "end": "559050"
  },
  {
    "text": "limit when you deposits a certain amount",
    "start": "559050",
    "end": "564319"
  },
  {
    "text": "your balance will be increased by that amount if the balance is positive then",
    "start": "564319",
    "end": "570480"
  },
  {
    "text": "I'll support withdrawal and you can take some money out and the balance will be decreased by the amount that you take I",
    "start": "570480",
    "end": "578600"
  },
  {
    "text": "don't think the requirements get any simpler than that does anyone have a semantic problem with those rules no",
    "start": "578600",
    "end": "588019"
  },
  {
    "text": "okay so how do we build an application that would do this now I don't know if any",
    "start": "588019",
    "end": "595470"
  },
  {
    "text": "hope you'll came to the talk we did a three o'clock on Orleans and we talked about the difference between stateful",
    "start": "595470",
    "end": "600899"
  },
  {
    "text": "and stateless and so on so forth so I'm just going to assume that you're dealing with standard best-of-breed",
    "start": "600899",
    "end": "608360"
  },
  {
    "text": "today and we're going to go with you know building a service-oriented thing or something so we'll build a bank",
    "start": "608360",
    "end": "613910"
  },
  {
    "text": "account service sounds reasonable yeah so I have a bank account service",
    "start": "613910",
    "end": "624110"
  },
  {
    "text": "this is what my first rule looks like when I initialize my bank account there",
    "start": "624110",
    "end": "629870"
  },
  {
    "text": "has a balance of zero and I've got to save it somewhere so in a standard SOA",
    "start": "629870",
    "end": "637430"
  },
  {
    "text": "kind of thing this this sounds reasonable and you want to have the fundamental problems with this no good",
    "start": "637430",
    "end": "646420"
  },
  {
    "text": "deposit please will shout out if",
    "start": "647800",
    "end": "654680"
  },
  {
    "text": "anything's unreasonable right so we have",
    "start": "654680",
    "end": "660290"
  },
  {
    "text": "this concept of this now let's say we've not just written this web service right",
    "start": "660290",
    "end": "665899"
  },
  {
    "text": "we've got TDD in place we've got mocking I've tested the order this thing we can do what we want to make sure that this",
    "start": "665899",
    "end": "672529"
  },
  {
    "text": "thing is running production stable but",
    "start": "672529",
    "end": "677660"
  },
  {
    "text": "we've had the party people have gone home right and some junior guy is now taking over the maintenance of this",
    "start": "677660",
    "end": "683300"
  },
  {
    "text": "thing and the first change request comes in all its support closing a bank",
    "start": "683300",
    "end": "688970"
  },
  {
    "text": "account and here again two simple rules",
    "start": "688970",
    "end": "694100"
  },
  {
    "text": "a closed bank account shouldn't allow you to do anything on it and bank",
    "start": "694100",
    "end": "700399"
  },
  {
    "text": "account requires a zero balance before we should close it it's just simple rules now when agile shop right so",
    "start": "700399",
    "end": "708860"
  },
  {
    "text": "somebody actually puts this card out then there's a team that sits down and figures out what you need to do in order",
    "start": "708860",
    "end": "714529"
  },
  {
    "text": "to make this thing happen again shout if anything here is unreasonable right",
    "start": "714529",
    "end": "719890"
  },
  {
    "text": "you've got to create a property you've got to modify all the existing code to win it the test to make sure that",
    "start": "719890",
    "end": "725380"
  },
  {
    "text": "existing this are talking about closed or non closed bank accounts then you write all right new tests for the bank",
    "start": "725380",
    "end": "731990"
  },
  {
    "text": "accounts that are going to be closed ensure that they don't accept deposit and withdraw right modify the service",
    "start": "731990",
    "end": "738589"
  },
  {
    "text": "code and then add a test to verify clothes then write the code",
    "start": "738589",
    "end": "746110"
  },
  {
    "text": "right any of this am i forgotten something it looks good fair bit of work but it's dead and I've",
    "start": "746110",
    "end": "753949"
  },
  {
    "text": "captured everything initialize what",
    "start": "753949",
    "end": "763819"
  },
  {
    "text": "happens if I bring a bank account in and it turns out to be if it turns out to",
    "start": "763819",
    "end": "770060"
  },
  {
    "text": "exist but it's closed already now a normal person would not have asked",
    "start": "770060",
    "end": "777829"
  },
  {
    "text": "that question but somebody was skilled at maintaining this code would realize hey this change is coming in this is",
    "start": "777829",
    "end": "785209"
  },
  {
    "text": "likely to come down the pike sometime soon so let me while I'm looking at the code put a flag in you're saying something",
    "start": "785209",
    "end": "791509"
  },
  {
    "text": "else we may have to look at something and the beer of course junior guy is looks at the spec is is clearly says",
    "start": "791509",
    "end": "798139"
  },
  {
    "text": "that a closed account should not allow anything right no I don't know the reactivation the trusty old beard like",
    "start": "798139",
    "end": "806870"
  },
  {
    "text": "me and say ok that may change we'll see what happens so then we say ok if the",
    "start": "806870",
    "end": "815029"
  },
  {
    "text": "bank account is closed make sure that we don't proceed further and we do that for",
    "start": "815029",
    "end": "821420"
  },
  {
    "text": "deposit and withdraw and then we write code what happens if you try to close a",
    "start": "821420",
    "end": "827509"
  },
  {
    "text": "closed bank account well somebody says it should be an OP should be implemented",
    "start": "827509",
    "end": "834829"
  },
  {
    "text": "or by returning or should be implemented or by just calling all the way through",
    "start": "834829",
    "end": "839949"
  },
  {
    "text": "I'm belaboring this point to show you that a reasonable set of rules that was",
    "start": "839949",
    "end": "846079"
  },
  {
    "text": "very simple and clear to understand leads to ambiguity with the best",
    "start": "846079",
    "end": "854180"
  },
  {
    "text": "intentions in play and this is the state of reality now think about this when you",
    "start": "854180",
    "end": "861829"
  },
  {
    "text": "don't have everything in together and you can see how everything is going to",
    "start": "861829",
    "end": "867860"
  },
  {
    "text": "just the entropy is just going into the system and systems are going to fall apart so",
    "start": "867860",
    "end": "874630"
  },
  {
    "text": "let's on the plane coming from I would",
    "start": "874630",
    "end": "879830"
  },
  {
    "text": "say this is the first source of pain is because we started by trying to deal with skin in the first place so in our",
    "start": "879830",
    "end": "886820"
  },
  {
    "text": "previous talk at 3 o'clock we talked about our and we were all babes in arms in you know cs101 we landed up going to",
    "start": "886820",
    "end": "895420"
  },
  {
    "text": "the school and they gave us this old manual and they said everything's going to be golden from now on you know we got",
    "start": "895420",
    "end": "901340"
  },
  {
    "text": "a encapsulation abstraction data hiding inheritance and all of that not and so we started writing code that embodied",
    "start": "901340",
    "end": "908900"
  },
  {
    "text": "all those principles we had controlled access to make changes we had full control of the object data in place what",
    "start": "908900",
    "end": "915980"
  },
  {
    "text": "operations are supported and everything was self-contained and then we went to",
    "start": "915980",
    "end": "922270"
  },
  {
    "text": "ride our two machines and all of a sudden you have to go stateless so you",
    "start": "922270",
    "end": "931970"
  },
  {
    "text": "put the guts of the thing the data in the object in some separate store have",
    "start": "931970",
    "end": "937910"
  },
  {
    "text": "multiple services that stood in the front of the thing and now the logic lives in the service the data lives",
    "start": "937910",
    "end": "944270"
  },
  {
    "text": "somewhere else you call it separation of concerns everyone's happy people write books and all of that but in reality",
    "start": "944270",
    "end": "950570"
  },
  {
    "text": "what's happened is you invited a whole bunch of really dangerous people to your party and now you're trying to figure",
    "start": "950570",
    "end": "955970"
  },
  {
    "text": "out strategies to how to how to deal with those people right so we gave up",
    "start": "955970",
    "end": "962480"
  },
  {
    "text": "controlled access and we got concurrency headaches so now we've got you know",
    "start": "962480",
    "end": "968810"
  },
  {
    "text": "optimistic locking and all the other joys that comes with that we give away",
    "start": "968810",
    "end": "975070"
  },
  {
    "text": "abstractions so we could get scale and we give away abstraction by taking out all the logic and putting it somewhere",
    "start": "975070",
    "end": "981470"
  },
  {
    "text": "else and then we have the elegance of just doing the object-oriented Ness of",
    "start": "981470",
    "end": "987230"
  },
  {
    "text": "it and we we put in an ORM the OMS got leaky abstractions everywhere along the",
    "start": "987230",
    "end": "993170"
  },
  {
    "text": "line it's not really an object you still have to deal with this idea of persistence and all of the other garbage",
    "start": "993170",
    "end": "998810"
  },
  {
    "text": "that goes with it so we have some major issues so let's look through the world through",
    "start": "998810",
    "end": "1004390"
  },
  {
    "text": "slightly different lenses at the right if I wrote the thing as an object that's what it look like you know it's",
    "start": "1004390",
    "end": "1010820"
  },
  {
    "text": "got a banker and ID balance a constructor a private property tells you",
    "start": "1010820",
    "end": "1016100"
  },
  {
    "text": "if it's closed or not methods to do deposit withdrawn closed and just to be",
    "start": "1016100",
    "end": "1021620"
  },
  {
    "text": "correct I opened out what withdrawal looks like and that's kind of exactly what you do everything self-contained",
    "start": "1021620",
    "end": "1027350"
  },
  {
    "text": "you can't mutate balance without going through one of these things all right you have a hell of a lot more control",
    "start": "1027350",
    "end": "1033530"
  },
  {
    "text": "over what's going on and it's not likely that the thing is going to go out of hand easily everything all the changes",
    "start": "1033530",
    "end": "1041089"
  },
  {
    "text": "aren't in one place but I'm actually not oh and the service for this would look",
    "start": "1041089",
    "end": "1050750"
  },
  {
    "text": "like this notice that all it's doing is the is calling deposit on the object",
    "start": "1050750",
    "end": "1056750"
  },
  {
    "text": "itself and now immediately we've done two things we've taken away the deposit",
    "start": "1056750",
    "end": "1063050"
  },
  {
    "text": "the business this account does not exist business or the account exists already",
    "start": "1063050",
    "end": "1068270"
  },
  {
    "text": "is not really a concern of the object itself it's a concern of your storage",
    "start": "1068270",
    "end": "1073760"
  },
  {
    "text": "this is part of the leaky abstraction that's coming in why should the bank account be worried about whether it",
    "start": "1073760",
    "end": "1080540"
  },
  {
    "text": "exists somewhere else that's some representation of the storage that's the problem here right so",
    "start": "1080540",
    "end": "1087440"
  },
  {
    "text": "by separating this thing out we've already said that we're going to push all of the storage related stuff out a",
    "start": "1087440",
    "end": "1093740"
  },
  {
    "text": "little bit and try and contain the business logic inside of it into the into the object everyone with this offer",
    "start": "1093740",
    "end": "1101500"
  },
  {
    "text": "you guys probably already do this right so none of this may not may be new but I",
    "start": "1101500",
    "end": "1108110"
  },
  {
    "text": "want to point out these two pieces in here I think this is the place in",
    "start": "1108110",
    "end": "1114530"
  },
  {
    "text": "Denmark it smells there's a red bit and a green with can",
    "start": "1114530",
    "end": "1122810"
  },
  {
    "text": "anyone so from what I have for most people be comfortable in this code by",
    "start": "1122810",
    "end": "1128120"
  },
  {
    "text": "the way and that's perfectly all right I'm only trying to be a little bit more nitpicky on it I think that the red bit",
    "start": "1128120",
    "end": "1135230"
  },
  {
    "text": "has something to do with the structure of the object and behavior and the green bit is about its",
    "start": "1135230",
    "end": "1142100"
  },
  {
    "text": "performance its capability what it's actually doing to the data that it's",
    "start": "1142100",
    "end": "1147140"
  },
  {
    "text": "holding and I think those are two actually separate concerns they're not the same thing but given the way in",
    "start": "1147140",
    "end": "1155299"
  },
  {
    "text": "which we've built our object structure in the languages that we use we can't",
    "start": "1155299",
    "end": "1160399"
  },
  {
    "text": "really separate those two I wanna introduce two kind of big issue another",
    "start": "1160399",
    "end": "1165769"
  },
  {
    "text": "$64 one's the affordance and the capability these are actually representations of the two things the",
    "start": "1165769",
    "end": "1171110"
  },
  {
    "text": "affordances what an object allows you to do to it and the capability is what the",
    "start": "1171110",
    "end": "1176899"
  },
  {
    "text": "object does to what the object itself does and separating those two out I",
    "start": "1176899",
    "end": "1183169"
  },
  {
    "text": "think goes a long way towards helping us understand what the system does a little",
    "start": "1183169",
    "end": "1188809"
  },
  {
    "text": "bit better right so let's rewrite the",
    "start": "1188809",
    "end": "1194990"
  },
  {
    "text": "thing as a table you know and you can see that there's a form of the the object that is in zero balance when it's",
    "start": "1194990",
    "end": "1203149"
  },
  {
    "text": "in zero balance I can close the account at which point the balance stays unchanged if it's if I deposit into a",
    "start": "1203149",
    "end": "1211820"
  },
  {
    "text": "zero balance it goes into a positive Alun state and I increase the balance and those are two different things those",
    "start": "1211820",
    "end": "1219679"
  },
  {
    "text": "are actually two different things so if I do this and I try to map out the affordance of it and the capability of",
    "start": "1219679",
    "end": "1226039"
  },
  {
    "text": "it the first thing that leaps out is that you're not writing one class you're",
    "start": "1226039",
    "end": "1231860"
  },
  {
    "text": "actually writing a separate class for each of the forms of the system but",
    "start": "1231860",
    "end": "1239389"
  },
  {
    "text": "you've only got the one object so how do you separate the things out and make it",
    "start": "1239389",
    "end": "1244880"
  },
  {
    "text": "so that the object shape-shifts itself into the shape that you want so I'm just",
    "start": "1244880",
    "end": "1254570"
  },
  {
    "text": "going to put this there I've taken the table and I've just made it look like a",
    "start": "1254570",
    "end": "1260409"
  },
  {
    "text": "little different right does anyone have",
    "start": "1260409",
    "end": "1266240"
  },
  {
    "text": "a problem with the last four sections can anyone tell me that that",
    "start": "1266240",
    "end": "1272240"
  },
  {
    "text": "last four sections different from the table they're not they're actually the",
    "start": "1272240",
    "end": "1277550"
  },
  {
    "text": "same just reimplemented this piece in with curly braces okay",
    "start": "1277550",
    "end": "1285490"
  },
  {
    "text": "in the meanwhile I'm going to take a short digression now",
    "start": "1285490",
    "end": "1292990"
  },
  {
    "text": "I happen to be a big fan of our shop and we have a way of modeling choices so in",
    "start": "1305360",
    "end": "1314050"
  },
  {
    "text": "in the world the f-sharp and the Haskell in this color world there is a special",
    "start": "1314050",
    "end": "1320360"
  },
  {
    "text": "type of there's a special kind of type that allows you to model choices and those types are difficult to do in",
    "start": "1320360",
    "end": "1329300"
  },
  {
    "text": "languages like C sharp in Java you can do them they take a lot of effort and there's a lot of work that you need to",
    "start": "1329300",
    "end": "1335960"
  },
  {
    "text": "put in place to make that work properly and there's a reason why we need this",
    "start": "1335960",
    "end": "1341150"
  },
  {
    "text": "because if you look at the set of things that we want to deal with if you look at",
    "start": "1341150",
    "end": "1348170"
  },
  {
    "text": "the bank account object itself it's really one of four different types as we",
    "start": "1348170",
    "end": "1355010"
  },
  {
    "text": "just pointed out there for independent little pieces of work of little shapes of of that object and in some sense you",
    "start": "1355010",
    "end": "1363770"
  },
  {
    "text": "can model that using Union types they called Union types of choice types right",
    "start": "1363770",
    "end": "1371740"
  },
  {
    "text": "we also have a restriction kind of situation now most most of you anyone",
    "start": "1371740",
    "end": "1377870"
  },
  {
    "text": "here to have have you used Java okay so you know the extends keyword explicitly",
    "start": "1377870",
    "end": "1384650"
  },
  {
    "text": "says that a derived class is the base class plus something the C shop guys",
    "start": "1384650",
    "end": "1389930"
  },
  {
    "text": "just used : and that that meaning is kind of lost right an extension by",
    "start": "1389930",
    "end": "1397550"
  },
  {
    "text": "inheritance is a traditional object-oriented concept you we need to understand that well right but with",
    "start": "1397550",
    "end": "1405110"
  },
  {
    "text": "Union times you can actually restrict a type as a subset of another type so you",
    "start": "1405110",
    "end": "1412670"
  },
  {
    "text": "know if I have three choices red amber and green I can say that two colors that",
    "start": "1412670",
    "end": "1419450"
  },
  {
    "text": "represent when I have to actually break and stop or read an amber I can actually make that modeling choice so you need",
    "start": "1419450",
    "end": "1427730"
  },
  {
    "text": "restriction types and union types and the announcement I have is that you can",
    "start": "1427730",
    "end": "1434510"
  },
  {
    "text": "now do this in sireesha we actually have the to do this this is not an official see",
    "start": "1434510",
    "end": "1440820"
  },
  {
    "text": "shout release yet but it's an open-source project that I've basically",
    "start": "1440820",
    "end": "1446490"
  },
  {
    "text": "worked on and you can now start writing stuff like that now with the end of that digression we can go back to this and",
    "start": "1446490",
    "end": "1453150"
  },
  {
    "text": "look at it as a set of choices if you look at the message a message is either",
    "start": "1453150",
    "end": "1458910"
  },
  {
    "text": "a deposit message a withdrawal message or a closed message we know this",
    "start": "1458910",
    "end": "1465200"
  },
  {
    "text": "similarly the set of states is a set of choices the set of events I mean set of",
    "start": "1465200",
    "end": "1471330"
  },
  {
    "text": "messages handled in each state is a is again a choice type the set of valid",
    "start": "1471330",
    "end": "1476970"
  },
  {
    "text": "return values is also a choice type and so by looking at this from a type and",
    "start": "1476970",
    "end": "1482910"
  },
  {
    "text": "driven perspective we can actually generate the various shapes of the",
    "start": "1482910",
    "end": "1488820"
  },
  {
    "text": "object and put it all together and we do that by basically building the class",
    "start": "1488820",
    "end": "1496350"
  },
  {
    "text": "hierarchy in c-sharp that looks like that using a tool because writing all of this stuff my hand is actually where a",
    "start": "1496350",
    "end": "1503760"
  },
  {
    "text": "good bit of pain comes from if you look at the kind of work that you would",
    "start": "1503760",
    "end": "1508890"
  },
  {
    "text": "normally have to do you know traditional web application a good amount of work that you're doing is actually hand",
    "start": "1508890",
    "end": "1514590"
  },
  {
    "text": "rolling this logic implicitly into the code and I'm trying to get it out so we can make it as general as possible and",
    "start": "1514590",
    "end": "1521130"
  },
  {
    "text": "you can write say for example the shape of a an active message handler only",
    "start": "1521130",
    "end": "1527130"
  },
  {
    "text": "handles deposit and withdrawal and it has special types for its result and we",
    "start": "1527130",
    "end": "1533730"
  },
  {
    "text": "can generate all of that for you I'll show you how it's done but it's just",
    "start": "1533730",
    "end": "1539730"
  },
  {
    "text": "move on how you inject the capability though is exactly like this if you think",
    "start": "1539730",
    "end": "1545640"
  },
  {
    "text": "of the active deposit result as an enum of some sort you can tell that it's",
    "start": "1545640",
    "end": "1552480"
  },
  {
    "text": "actually the sub it has only one element in it which is active and depositing",
    "start": "1552480",
    "end": "1560250"
  },
  {
    "text": "money into an active account can only leave it in an active State so the whole",
    "start": "1560250",
    "end": "1565800"
  },
  {
    "text": "idea of you having to cut and copy and move things around and and unfortunate state-transition",
    "start": "1565800",
    "end": "1572520"
  },
  {
    "text": "somewhere in your code is completely eliminated by using this approach and",
    "start": "1572520",
    "end": "1577910"
  },
  {
    "text": "that means also that you don't have to write the test to ever say I'm in an",
    "start": "1577910",
    "end": "1584040"
  },
  {
    "text": "active state I can never get to a closed state because there's actually no way of",
    "start": "1584040",
    "end": "1589410"
  },
  {
    "text": "representing the fact that this withdrawal function ever puts you in a state where you are closed so giving you",
    "start": "1589410",
    "end": "1598650"
  },
  {
    "text": "the type safety goes one step further in making sure that the changes that you",
    "start": "1598650",
    "end": "1604740"
  },
  {
    "text": "are about to make are going to be safe and supported so what have we done we've",
    "start": "1604740",
    "end": "1610950"
  },
  {
    "text": "kind of dissected the system and buy a little bit of sleep hand and hand waving",
    "start": "1610950",
    "end": "1615960"
  },
  {
    "text": "I've told you that we can declaratively specify a state machine I may not be",
    "start": "1615960",
    "end": "1621570"
  },
  {
    "text": "worth anything right now but just take my word for it for the next two minutes",
    "start": "1621570",
    "end": "1626720"
  },
  {
    "text": "from that state machine I can automatically derive the types that enforce the safety of the code that it",
    "start": "1626720",
    "end": "1633360"
  },
  {
    "text": "generates and the safety of the code that you will have to write in order to make that work and doing that has",
    "start": "1633360",
    "end": "1640200"
  },
  {
    "text": "removed a great deal of hand written boilerplate logic that you would have to do to handle the if cases you know the",
    "start": "1640200",
    "end": "1648090"
  },
  {
    "text": "read bits that I showed you earlier all of those are taken away out of the equation even remove the entire classes",
    "start": "1648090",
    "end": "1655020"
  },
  {
    "text": "of tests were ensuring that transitions that cannot happen cannot be represented",
    "start": "1655020",
    "end": "1663530"
  },
  {
    "text": "and then by decoupling the capability and affordance you are only limited to",
    "start": "1663530",
    "end": "1670010"
  },
  {
    "text": "handwriting the capability piece the affordance part of it the shape-shifting",
    "start": "1670010",
    "end": "1675059"
  },
  {
    "text": "se aspect of the solution is actually taken care of by the compiler the",
    "start": "1675059",
    "end": "1682170"
  },
  {
    "text": "compiler of this new language and of course once we're done with that we can",
    "start": "1682170",
    "end": "1688050"
  },
  {
    "text": "actually take a look at the FSM and realize that it's just a representation",
    "start": "1688050",
    "end": "1693900"
  },
  {
    "text": "that we can analyze by ourselves so for example we can say hey we're looking at",
    "start": "1693900",
    "end": "1699300"
  },
  {
    "text": "this state machine you are never going to get to that state it may have handlers in it but it's no",
    "start": "1699300",
    "end": "1708030"
  },
  {
    "text": "longer needed in the code so how many people have looked at existing code and",
    "start": "1708030",
    "end": "1714200"
  },
  {
    "text": "wonder whether function is actually being used anywhere oh whether we are",
    "start": "1714200",
    "end": "1720539"
  },
  {
    "text": "capable of just blindly removing this block of code because it doesn't seem to be hit anywhere and tests don't fail because I can remove it and then it goes",
    "start": "1720539",
    "end": "1728100"
  },
  {
    "text": "boom in production because somebody's still got some old ways another thing that runs and puts it in a an illegal",
    "start": "1728100",
    "end": "1733470"
  },
  {
    "text": "State this will remove entire classes of that kind of analysis and make it easy",
    "start": "1733470",
    "end": "1740309"
  },
  {
    "text": "for you to reason about the changing shape of your object because you've declaratively put it somewhere where",
    "start": "1740309",
    "end": "1746640"
  },
  {
    "text": "someone can reason about it also infinite loops when I receive this",
    "start": "1746640",
    "end": "1753750"
  },
  {
    "text": "message and it goes into that state that state moves to another state and another state and another state and then the",
    "start": "1753750",
    "end": "1760049"
  },
  {
    "text": "only way to get back is to go back into this so you're now stuck in a loop that's got five or six messages in there",
    "start": "1760049",
    "end": "1765890"
  },
  {
    "text": "you can't look at that by looking at code and deducing that easily it's just",
    "start": "1765890",
    "end": "1771390"
  },
  {
    "text": "not possible to do that you can't expect somebody to do that and so you come up with novel ways of actually testing the",
    "start": "1771390",
    "end": "1778679"
  },
  {
    "text": "thing and doing all of that all of it is complete nonsense because you can you can evaluate the shape of these states",
    "start": "1778679",
    "end": "1786919"
  },
  {
    "text": "well before you even generate code for it to tell you whether you're going to have a system that will have an infinite",
    "start": "1786919",
    "end": "1793409"
  },
  {
    "text": "loop in it so by doing all of this we're actually you know and and the last one is most",
    "start": "1793409",
    "end": "1798780"
  },
  {
    "text": "important is we guarantee that if you change the set of something it changes a",
    "start": "1798780",
    "end": "1804510"
  },
  {
    "text": "type which means something is going to break in compile time which means you have to deliberately go and look at the",
    "start": "1804510",
    "end": "1812010"
  },
  {
    "text": "impact of your change in its code in the code before you can actually ship it again which means that you can write",
    "start": "1812010",
    "end": "1818700"
  },
  {
    "text": "code with some level of certainty that a change that you made to the behavior of",
    "start": "1818700",
    "end": "1823890"
  },
  {
    "text": "something was dealt with deliberately as you went through the whole development",
    "start": "1823890",
    "end": "1829799"
  },
  {
    "text": "process so the cost of doing this of course was that we had write our own language to do it",
    "start": "1829799",
    "end": "1835140"
  },
  {
    "text": "I'm very simple I'm going to dive into Orleans now but does anyone have any",
    "start": "1835140",
    "end": "1842580"
  },
  {
    "text": "questions so far is anyone still awake excellent all",
    "start": "1842580",
    "end": "1849510"
  },
  {
    "text": "right so let me outline Orleans in a slide and and my co-presenter Sergei",
    "start": "1849510",
    "end": "1856980"
  },
  {
    "text": "here will probably look at it and wonder if you must talk to me again",
    "start": "1856980",
    "end": "1862380"
  },
  {
    "text": "so basically to put it in very succinct terms Orleans is object-orientation",
    "start": "1862380",
    "end": "1868710"
  },
  {
    "text": "across machine boundaries in object orientation you have an object you deal",
    "start": "1868710",
    "end": "1874290"
  },
  {
    "text": "with it by through a reference the reference happens to be an address in memory in Orleans you deal with an",
    "start": "1874290",
    "end": "1879690"
  },
  {
    "text": "object or a reference happens to be hidden from you you deal with the reference in memory that object could be",
    "start": "1879690",
    "end": "1886410"
  },
  {
    "text": "anywhere in the cluster but the programming model is literally this that it's that simple that's really what I",
    "start": "1886410",
    "end": "1893429"
  },
  {
    "text": "want to leave you with the salient part of it it's basically a traditional programming paradigm you call messages",
    "start": "1893429",
    "end": "1900690"
  },
  {
    "text": "on it everything is built-in with asynchrony because you know distribution is involve involves asynchrony we",
    "start": "1900690",
    "end": "1908460"
  },
  {
    "text": "embrace that right from the start right Orleans will take care of your object so",
    "start": "1908460",
    "end": "1913860"
  },
  {
    "text": "think of it as garbage collection in the cloud it's got that so base and the one",
    "start": "1913860",
    "end": "1920250"
  },
  {
    "text": "thing that's very interesting is that Orleans will guarantee single-threaded access to members of its object so you",
    "start": "1920250",
    "end": "1925470"
  },
  {
    "text": "don't have any concurrency headaches so you just remove the entire concurrency problem decorative persistence allows",
    "start": "1925470",
    "end": "1933480"
  },
  {
    "text": "you to save the object state in in the cloud on the disk whatever storage",
    "start": "1933480",
    "end": "1940799"
  },
  {
    "text": "platform you want so it's entirely possible for you to write this thing and deal with it you know at terabyte scale",
    "start": "1940799",
    "end": "1947850"
  },
  {
    "text": "without having to leave the principles of object orientation that you learnt in CS 101 I think that's a very compelling",
    "start": "1947850",
    "end": "1954480"
  },
  {
    "text": "proposition but I'm about to make it even more compelling at this point anyway when you could run at scale and",
    "start": "1954480",
    "end": "1960720"
  },
  {
    "text": "then we write an idiomatic seizure so it's all familiar stuff no one's asking you to do anything funky if you want to",
    "start": "1960720",
    "end": "1966780"
  },
  {
    "text": "do it now have you can you do after at all the you can do all of this f is a shot",
    "start": "1966780",
    "end": "1972049"
  },
  {
    "text": "what we do is we take this FSM and and generate the code for writing an Orleans",
    "start": "1972049",
    "end": "1978600"
  },
  {
    "text": "grain that has the shape-shifting behavior that I pointed out earlier built into it and that's what I'm going",
    "start": "1978600",
    "end": "1986460"
  },
  {
    "text": "to show you right now right so let me",
    "start": "1986460",
    "end": "1996570"
  },
  {
    "text": "see I'm going to we will see that all",
    "start": "1996570",
    "end": "2016970"
  },
  {
    "text": "right the first stop point of call is God is the visual studio marketplace",
    "start": "2016970",
    "end": "2028490"
  },
  {
    "text": "this tool already exists it's up in the registry marketplace if you got Visual Studio 2015 you can download tool and",
    "start": "2028490",
    "end": "2036559"
  },
  {
    "text": "it's um it's inversion point eight at the moment but it will get improved the",
    "start": "2036559",
    "end": "2044900"
  },
  {
    "text": "codes in github and I'm not connected",
    "start": "2044900",
    "end": "2050200"
  },
  {
    "text": "that's the code in github I'll give you all these things but basically that's",
    "start": "2052300",
    "end": "2057830"
  },
  {
    "text": "what it is and the c-sharp Union type stuff there is is there as well as I",
    "start": "2057830",
    "end": "2064608"
  },
  {
    "text": "mentioned earlier so what we will do is we'll fire up this video",
    "start": "2064609",
    "end": "2071500"
  },
  {
    "text": "sorry can everyone see that do you want me to",
    "start": "2084600",
    "end": "2090770"
  },
  {
    "text": "zoom in further cool so here's a bank",
    "start": "2090770",
    "end": "2100550"
  },
  {
    "text": "account which we knew about before whatever they specified we specified",
    "start": "2100550",
    "end": "2107330"
  },
  {
    "text": "that it has an identifier so this is the objects handle that we're talking about right we're going to operate on the",
    "start": "2107330",
    "end": "2115040"
  },
  {
    "text": "balance we're going to process these messages cynically in that state these",
    "start": "2115040",
    "end": "2121550"
  },
  {
    "text": "are the four states that it can be in the handler speech of those so I'm going to take the second and there's a custom",
    "start": "2121550",
    "end": "2138980"
  },
  {
    "text": "tool that comes when you install the v6 and you install the nougat package to",
    "start": "2138980",
    "end": "2144380"
  },
  {
    "text": "get this reference and we just save this",
    "start": "2144380",
    "end": "2149600"
  },
  {
    "text": "file and lo and behold the code",
    "start": "2149600",
    "end": "2154970"
  },
  {
    "text": "associated with each of the states and",
    "start": "2154970",
    "end": "2160690"
  },
  {
    "text": "the Union types and all of that is written in code that you can actually debug so you can put a debugger in this",
    "start": "2160690",
    "end": "2167240"
  },
  {
    "text": "if you like to figure out what the heck is going on at some point in time right",
    "start": "2167240",
    "end": "2172480"
  },
  {
    "text": "and I would assume that by the time you get to the point we say it's five hundred six lines of code and if you try",
    "start": "2172480",
    "end": "2178550"
  },
  {
    "text": "and look at what's actually being John it's a fairly complex piece of work but you didn't have to do any of it and the",
    "start": "2178550",
    "end": "2185000"
  },
  {
    "text": "net-net of that is that you can generate a partial class and it'll tell you hey",
    "start": "2185000",
    "end": "2192560"
  },
  {
    "text": "I've done all of the hard work for you please",
    "start": "2192560",
    "end": "2199750"
  },
  {
    "text": "what am I gonna do one of us and it",
    "start": "2207589",
    "end": "2214890"
  },
  {
    "text": "tells you that in the overrun state I can only do a deposit and if I try to",
    "start": "2214890",
    "end": "2222780"
  },
  {
    "text": "return anything other than something from overdrawn deposit result sorry",
    "start": "2222780",
    "end": "2240290"
  },
  {
    "text": "hey I'm just going to look at this I'm showing you this enum the overdrawn",
    "start": "2252620",
    "end": "2259010"
  },
  {
    "text": "state basically allows you to go from an overrun state to an active state or a",
    "start": "2259010",
    "end": "2264830"
  },
  {
    "text": "zero balance state it does not let you go to closed which is the rule that we",
    "start": "2264830",
    "end": "2271730"
  },
  {
    "text": "said earlier when we handling an overdrawn message the only thing I should be able to do is put a deposit on",
    "start": "2271730",
    "end": "2277520"
  },
  {
    "text": "it and depending on how much I deposit I should be able to either stay overdrawn",
    "start": "2277520",
    "end": "2284450"
  },
  {
    "text": "if I didn't put enough money I'll go to 0 if I put in exactly how much I owed or go to a positive State if I put in more",
    "start": "2284450",
    "end": "2291010"
  },
  {
    "text": "so it's not even possible for me to write a state here that's my mistake",
    "start": "2291010",
    "end": "2298130"
  },
  {
    "text": "closes the account and the reason why this is possible is because of that we",
    "start": "2298130",
    "end": "2303680"
  },
  {
    "text": "hold restriction type thing because at the end of the day the state machine message handler still has to return a",
    "start": "2303680",
    "end": "2310990"
  },
  {
    "text": "state a real state but I need a subset of the set the set of states for this",
    "start": "2310990",
    "end": "2318350"
  },
  {
    "text": "specific purpose and that's kind of where the restriction types come in if",
    "start": "2318350",
    "end": "2323810"
  },
  {
    "text": "you didn't have restriction types you could not make this strong guarantee that you can you know if it was just an",
    "start": "2323810",
    "end": "2330590"
  },
  {
    "text": "enum and you return something you could potentially return anything you wanted it's because this is a restricted type",
    "start": "2330590",
    "end": "2337190"
  },
  {
    "text": "that you're able to make the strong guarantee that the transitions are all",
    "start": "2337190",
    "end": "2342500"
  },
  {
    "text": "well understood right from the start right anyway so here's an example of the",
    "start": "2342500",
    "end": "2349970"
  },
  {
    "text": "Union in place and to give you an idea of what I what it takes to implement the",
    "start": "2349970",
    "end": "2356180"
  },
  {
    "text": "Union that's what it takes to implement the Union so there is a reason why nobody writes Union type since Asia",
    "start": "2356180",
    "end": "2362930"
  },
  {
    "text": "because for a single item Union it takes 45 lines of code and most of its boilerplate and they will get pretty old",
    "start": "2362930",
    "end": "2369260"
  },
  {
    "text": "pretty fast and you probably cut and paste stuff and it'll be draw and make mistakes but a compiler like this can I",
    "start": "2369260",
    "end": "2377600"
  },
  {
    "text": "think do the work now if I went in and actually read the business logic we",
    "start": "2377600",
    "end": "2385400"
  },
  {
    "text": "could make sure that this thing could actually be testable and run also the individual functions",
    "start": "2385400",
    "end": "2391339"
  },
  {
    "text": "here are actually so well constrained that you almost never have to mark",
    "start": "2391339",
    "end": "2396680"
  },
  {
    "text": "anything you know there's nothing to mock it say put the bank account in the overdrawn state and then try to make",
    "start": "2396680",
    "end": "2403339"
  },
  {
    "text": "this this change to see what happens you already put in a condition in the conditional state where a simple unit",
    "start": "2403339",
    "end": "2410540"
  },
  {
    "text": "test will suffice so by using an advanced technique like using DSL to do",
    "start": "2410540",
    "end": "2416180"
  },
  {
    "text": "this stuff we can actually make things much much more efficient and much much",
    "start": "2416180",
    "end": "2423619"
  },
  {
    "text": "safer right now I'm actually done with the orléans part of it and with with the",
    "start": "2423619",
    "end": "2431720"
  },
  {
    "text": "state machines part of it I anticipated a bunch of questions and if there's anyone who's really interested in",
    "start": "2431720",
    "end": "2437780"
  },
  {
    "text": "figuring out how this stuff works I'm happy to show you that as well so it's",
    "start": "2437780",
    "end": "2443359"
  },
  {
    "text": "over to you guys any questions from anyone on anything so",
    "start": "2443359",
    "end": "2458329"
  },
  {
    "text": "okay so basically there's a there is there's a concept of an algebraic data",
    "start": "2458329",
    "end": "2463849"
  },
  {
    "text": "type okay and then algebraic data type basically is a way of building bigger",
    "start": "2463849",
    "end": "2470329"
  },
  {
    "text": "types from smaller types there are two ways of doing it and c-sharp people we only know of one way which is we create a class or a",
    "start": "2470329",
    "end": "2477200"
  },
  {
    "text": "struct that has a bunch of properties and if you think about it the cardinality of that set is actually the",
    "start": "2477200",
    "end": "2484609"
  },
  {
    "text": "product of the cardinality of each of the members so those things are called product types union types are the dual",
    "start": "2484609",
    "end": "2492859"
  },
  {
    "text": "of that they are the sum and as far as I am aware c-sharp doesn't have a road in",
    "start": "2492859",
    "end": "2499609"
  },
  {
    "text": "this roadmap a way of putting union types in there but if you have some",
    "start": "2499609",
    "end": "2504829"
  },
  {
    "text": "types million types together you can build up a type algebra that's actually pretty expressive and you can actually",
    "start": "2504829",
    "end": "2511250"
  },
  {
    "text": "restrict a lot of issues you can make as Scott lashes input set you can make",
    "start": "2511250",
    "end": "2517460"
  },
  {
    "text": "illegal states representable which is kind of the example that i have it's not possible to",
    "start": "2517460",
    "end": "2523990"
  },
  {
    "text": "actually model a failure case and make the thing compile it's impossible to",
    "start": "2523990",
    "end": "2529450"
  },
  {
    "text": "actually get into that state so in terms",
    "start": "2529450",
    "end": "2534490"
  },
  {
    "text": "of the relationship c-sharp itself doesn't have union types it this is a",
    "start": "2534490",
    "end": "2540730"
  },
  {
    "text": "visual studio tool so you can actually run it with visual studio if you want there is also a command-line tool in the",
    "start": "2540730",
    "end": "2547000"
  },
  {
    "text": "in the v6 package that allows you to basically run I'm sorry in the nougat",
    "start": "2547000",
    "end": "2552910"
  },
  {
    "text": "package that allows you to run against the FSM file manually and generate the",
    "start": "2552910",
    "end": "2557950"
  },
  {
    "text": "code so you don't need Visual Studio to run with this it's just that it's a convenient because every time you make a",
    "start": "2557950",
    "end": "2563140"
  },
  {
    "text": "change the visual studio engine will kick in and actually generate the code for you right but it's basically written",
    "start": "2563140",
    "end": "2573430"
  },
  {
    "text": "in such a way that you can pretty much run anywhere including water and stuff we have",
    "start": "2573430",
    "end": "2579120"
  },
  {
    "text": "okay does anyone want to know how this works you want to see there so the",
    "start": "2588220",
    "end": "2594200"
  },
  {
    "text": "secret behind this is actually a whole ton of f shop so I'm probably going to lose a whole bunch of people maybe I'll",
    "start": "2594200",
    "end": "2599990"
  },
  {
    "text": "end the talk here because they are videoing it and then we can talk about you can show the code later or put",
    "start": "2599990",
    "end": "2607910"
  },
  {
    "text": "everyone want to see their tool does everyone want to see it okay",
    "start": "2607910",
    "end": "2614650"
  },
  {
    "text": "okay let me finish the presentation and with this formal acknowledgment so let",
    "start": "2623560",
    "end": "2630080"
  },
  {
    "text": "me yeah so I have to acknowledge a lot",
    "start": "2630080",
    "end": "2635090"
  },
  {
    "text": "of people who helped me to get this across the line Ascot lash and of course is the huge",
    "start": "2635090",
    "end": "2640220"
  },
  {
    "text": "influence on a whole bunch of things I have colleagues I haven't told in mark",
    "start": "2640220",
    "end": "2645440"
  },
  {
    "text": "and George who basically maybe they're pausing and getting the rest of it going Sergey of course in an invaluable",
    "start": "2645440",
    "end": "2652700"
  },
  {
    "text": "resource as far as the orderly inside of it goes and I work for Microsoft and they've graciously let me actually",
    "start": "2652700",
    "end": "2659320"
  },
  {
    "text": "present here so I'm actually presenting on behalf of Microsoft so thank you to",
    "start": "2659320",
    "end": "2665120"
  },
  {
    "text": "them and those are the links if anyone wants them and I'll make them available",
    "start": "2665120",
    "end": "2670400"
  },
  {
    "text": "to you later as well we just hit 50 minutes ago so I've got five minutes or",
    "start": "2670400",
    "end": "2677180"
  },
  {
    "text": "so cool let me just fire this thing up",
    "start": "2677180",
    "end": "2682370"
  },
  {
    "text": "Oakley",
    "start": "2682370",
    "end": "2685000"
  },
  {
    "text": "so the actual work required more to create the DSL and to PA's it is",
    "start": "2695180",
    "end": "2703670"
  },
  {
    "text": "actually very very small indeed",
    "start": "2703670",
    "end": "2707650"
  },
  {
    "text": "so this is the language representation internally where I have identifies and",
    "start": "2719250",
    "end": "2726090"
  },
  {
    "text": "datatype names and elements and blocks and messages and so on and so forth and I built that using a Basel II 50",
    "start": "2726090",
    "end": "2737369"
  },
  {
    "text": "lines of code that actually walks through the text and causes the elements",
    "start": "2737369",
    "end": "2743340"
  },
  {
    "text": "out into the object and then I analyze the validity of the thing because you",
    "start": "2743340",
    "end": "2750570"
  },
  {
    "text": "don't want to have transitions to states that don't exist in so on generate code",
    "start": "2750570",
    "end": "2756390"
  },
  {
    "text": "that doesn't compile and the state machine itself has these properties as",
    "start": "2756390",
    "end": "2765810"
  },
  {
    "text": "you can tell you know this is how I build up the various pipe names and so on because I use Union types I can",
    "start": "2765810",
    "end": "2774480"
  },
  {
    "text": "actually directly use the class declaration of the Union type itself I'm just using the Union type as a library",
    "start": "2774480",
    "end": "2780480"
  },
  {
    "text": "and this generates the code so here's actually the constructor of the Great",
    "start": "2780480",
    "end": "2787290"
  },
  {
    "text": "Green Green State class and gets injected into the into the thing so if",
    "start": "2787290",
    "end": "2792480"
  },
  {
    "text": "you look at the green state class which was in but if you look at the grain",
    "start": "2792480",
    "end": "2800339"
  },
  {
    "text": "State class this actually generates the audience but basically says that it means a grain State it needs a grain",
    "start": "2800339",
    "end": "2806520"
  },
  {
    "text": "interface and so on and so forth and each of those things so the grain",
    "start": "2806520",
    "end": "2811710"
  },
  {
    "text": "interface which basically looks at the various methods it's actually this piece of code so each piece of the code",
    "start": "2811710",
    "end": "2819990"
  },
  {
    "text": "generation doesn't look like much and that's one of the beauties of using F sharp for this because it's very",
    "start": "2819990",
    "end": "2826050"
  },
  {
    "text": "succinct then you can actually all these funny-looking things that you see here",
    "start": "2826050",
    "end": "2831210"
  },
  {
    "text": "are actually Roslyn calls and you don't recognize it as Roslyn because I hidden all the ugliness hue and do something",
    "start": "2831210",
    "end": "2837720"
  },
  {
    "text": "that makes it look like something that it actually will generate so for example",
    "start": "2837720",
    "end": "2843240"
  },
  {
    "text": "in this case I generate an error method that calls through and has the type of",
    "start": "2843240",
    "end": "2850830"
  },
  {
    "text": "task of the data type name which if you look if you remember the code that I wrote is",
    "start": "2850830",
    "end": "2857440"
  },
  {
    "text": "exactly what was generated out and so there's more of that and we eventually",
    "start": "2857440",
    "end": "2862930"
  },
  {
    "text": "just generate code using awesome means",
    "start": "2862930",
    "end": "2868950"
  },
  {
    "text": "that's kind of how it works for the questions confused everybody what mark",
    "start": "2872670",
    "end": "2881229"
  },
  {
    "text": "Simmons looking very pleased so I'm happy yeah what is yes",
    "start": "2881229",
    "end": "2889799"
  },
  {
    "text": "correct I've dispensed with the",
    "start": "2898630",
    "end": "2903869"
  },
  {
    "text": "pleasantly of making F sharp being able to call that deal natively so the C",
    "start": "2903869",
    "end": "2911109"
  },
  {
    "text": "sharp one is actually separate from their sha-1 oh yeah yeah for sure",
    "start": "2911109",
    "end": "2928569"
  },
  {
    "text": "actually so that code is actually not here it's in the C sure it's in the it's",
    "start": "2928569",
    "end": "2937779"
  },
  {
    "text": "actually in this in the C shop do types a different project entirely but",
    "start": "2937779",
    "end": "2943960"
  },
  {
    "text": "actually deal with that and use pattern matching to do a whole bunch of stuff so the types are actually fully closed",
    "start": "2943960",
    "end": "2950950"
  },
  {
    "text": "you can't extend a deal even though it's written in C sure nothing else",
    "start": "2950950",
    "end": "2963239"
  },
  {
    "text": "oh no no no so why are liens so the most",
    "start": "2965640",
    "end": "2974759"
  },
  {
    "text": "important thing stems back also there's there's several pieces to answer the problem right the first one is this when",
    "start": "2974759",
    "end": "2982710"
  },
  {
    "text": "you write an interactive system the whole idea of the shape-shifting Ness of",
    "start": "2982710",
    "end": "2988109"
  },
  {
    "text": "the object and removing the capability and the affordance and big coupling those two that's kind of a very",
    "start": "2988109",
    "end": "2993480"
  },
  {
    "text": "important property and so it's an approach for doing the development that",
    "start": "2993480",
    "end": "2998759"
  },
  {
    "text": "I don't really like now another thing I really like is to be able to be able to",
    "start": "2998759",
    "end": "3003950"
  },
  {
    "text": "build applications at scale easily using the same kind of principles or",
    "start": "3003950",
    "end": "3009950"
  },
  {
    "text": "principles that allow for that kind of affordance and capability deep decoupling so because it is easy you",
    "start": "3009950",
    "end": "3017359"
  },
  {
    "text": "have taken a problem that is interactive in nature and made it an object-oriented",
    "start": "3017359",
    "end": "3022609"
  },
  {
    "text": "problem and then I've taken the object or in paradigm that's exposed by Orleans and it's just a natural fit to put the",
    "start": "3022609",
    "end": "3030170"
  },
  {
    "text": "two in place but any other object-oriented system can also be",
    "start": "3030170",
    "end": "3035420"
  },
  {
    "text": "generated you know the language the the DSL is language agnostic so pauses",
    "start": "3035420",
    "end": "3040789"
  },
  {
    "text": "language agnostic the code generator is positive hmm it's the only thing that generates Orleans you can quite easily",
    "start": "3040789",
    "end": "3047089"
  },
  {
    "text": "plug in another code generator on the same ast in fact what I wanted to do if",
    "start": "3047089",
    "end": "3052369"
  },
  {
    "text": "I had the time before doing this talk was to process the ast using a graph",
    "start": "3052369",
    "end": "3057410"
  },
  {
    "text": "mechanism so I could just draw the state machine out and it's very easy to do that and basically it opens out the",
    "start": "3057410",
    "end": "3066019"
  },
  {
    "text": "ability for us to write code that is easy to reason about because we're talking about it at an abstraction level",
    "start": "3066019",
    "end": "3073069"
  },
  {
    "text": "that removes ambiguity about its behavior and that's really the key piece",
    "start": "3073069",
    "end": "3078920"
  },
  {
    "text": "and this whole thing is trying to promote and lift and declare the intent",
    "start": "3078920",
    "end": "3084829"
  },
  {
    "text": "in such a way that we can actually reason about it without having to dig through the code so so there's its",
    "start": "3084829",
    "end": "3092299"
  },
  {
    "text": "audience because Orleans is the most elegant way of actually building that Torian scalable approach but you can",
    "start": "3092299",
    "end": "3099489"
  },
  {
    "text": "definitely apply to any other scenario that you want",
    "start": "3099489",
    "end": "3104069"
  },
  {
    "text": "you know you kind of need the restricted pipes because if you don't you have no way of actually modeling valid",
    "start": "3121070",
    "end": "3127520"
  },
  {
    "text": "transitions the valid transitions piece the safety type safety and the valid",
    "start": "3127520",
    "end": "3133100"
  },
  {
    "text": "transitions piece is kind of the thing if you look at the state machines out there all of them effectively take I'm",
    "start": "3133100",
    "end": "3139730"
  },
  {
    "text": "in a state I take a message I go to another state there's no way to tell that the set of states that are going to",
    "start": "3139730",
    "end": "3145370"
  },
  {
    "text": "is a valid set of states you can only do that by modeling it as a type problem and saying this set is actually a",
    "start": "3145370",
    "end": "3151550"
  },
  {
    "text": "restriction of this set and that's a very critical difference in this approach every other day every other",
    "start": "3151550",
    "end": "3157370"
  },
  {
    "text": "projects in so far shall we break early",
    "start": "3157370",
    "end": "3166900"
  },
  {
    "text": "cool thank you so much",
    "start": "3166900",
    "end": "3170829"
  }
]