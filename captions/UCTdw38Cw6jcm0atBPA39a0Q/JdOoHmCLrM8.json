[
  {
    "text": "hi everybody i'm todd i said hello to a bunch of you on the way in um",
    "start": "3199",
    "end": "10240"
  },
  {
    "text": "how cool is it to be back at ndc like i i was here what three years ago and then i did it",
    "start": "10240",
    "end": "17039"
  },
  {
    "text": "once online this is so good to be back i'm sure you've heard like every speaker today say that but i think it's awesome",
    "start": "17039",
    "end": "23600"
  },
  {
    "text": "um this afternoon we're going to talk about modern web applications and how to make them more observable now i don't",
    "start": "23600",
    "end": "30480"
  },
  {
    "text": "mean the term in like javascript you know nerdy dev sense of like observables",
    "start": "30480",
    "end": "35680"
  },
  {
    "text": "i mean in the terms of like making software that we understand how it works understand how it fails understand how",
    "start": "35680",
    "end": "42000"
  },
  {
    "text": "the users interact with it and how do we make it better but the term observability is really",
    "start": "42000",
    "end": "48480"
  },
  {
    "text": "buzzwordy these days just about every you know vendor in the monitoring and devops space uses it to",
    "start": "48480",
    "end": "54160"
  },
  {
    "text": "mean something how many of you have heard the word how many of you are a hundred percent",
    "start": "54160",
    "end": "60239"
  },
  {
    "text": "confident that you know exactly what it means yeah i don't i'm not 100 confident that",
    "start": "60239",
    "end": "66320"
  },
  {
    "text": "i know exactly what it means either but here is the definition that i'm going with for",
    "start": "66320",
    "end": "71600"
  },
  {
    "text": "the purpose of this the observability is a trait of software",
    "start": "71600",
    "end": "77280"
  },
  {
    "text": "and it's how well we can know the state performance and behavior of a system",
    "start": "77280",
    "end": "83040"
  },
  {
    "text": "without having to stop it from running so this isn't debugging or testing we're not like stopping the system and putting",
    "start": "83040",
    "end": "89439"
  },
  {
    "text": "our debuggers on it and running it to figure out how the crap did this ever happen it's how do we know what happened",
    "start": "89439",
    "end": "95119"
  },
  {
    "text": "while it was happening how do we know how fast our web page is right now how do we know how many times our checkout",
    "start": "95119",
    "end": "101360"
  },
  {
    "text": "page fails that sort of thing in many ways this is what i personally",
    "start": "101360",
    "end": "106960"
  },
  {
    "text": "have always considered monitoring to be but i might have had a different definition of monitoring than a lot of",
    "start": "106960",
    "end": "113119"
  },
  {
    "text": "people and in general i think this seems like a really great thing the systems that i have personally worked with that",
    "start": "113119",
    "end": "119759"
  },
  {
    "text": "had a high level of observability were always way better than the ones that we were guessing at the ones that you know",
    "start": "119759",
    "end": "126479"
  },
  {
    "text": "we'd get a bug and we'd be like i have no idea where to even start with this",
    "start": "126479",
    "end": "131599"
  },
  {
    "text": "but often when people are talking about observability they're talking about their.net application their python",
    "start": "131599",
    "end": "137840"
  },
  {
    "text": "application their their services their back end how do we take this concept and bring it into the web bring it into",
    "start": "137840",
    "end": "144319"
  },
  {
    "text": "this crazy world of web browsers and javascript and things not running like we expect them to",
    "start": "144319",
    "end": "151680"
  },
  {
    "text": "and so the analogy for this talk and the analogy for web applications that i'm",
    "start": "151920",
    "end": "157760"
  },
  {
    "text": "going to use are that web apps are a lot like icebergs",
    "start": "157760",
    "end": "164480"
  },
  {
    "text": "some icebergs and some web applications are small this is one of my favorite small web",
    "start": "164959",
    "end": "170879"
  },
  {
    "text": "applications it's at partypartypartyparty.party and if you haven't been there it was",
    "start": "170879",
    "end": "175920"
  },
  {
    "text": "made by a good friend of mine named lemon it's a it's a super simple application it's got this big button",
    "start": "175920",
    "end": "181120"
  },
  {
    "text": "that when you click on it it says party and the more times you click on it the more it fills up the party meter and it",
    "start": "181120",
    "end": "187360"
  },
  {
    "text": "yells party at you now don't do it here because it makes a lot of noise and it goes into full-on party mode but uh your",
    "start": "187360",
    "end": "194480"
  },
  {
    "text": "board between sessions have a look at partypartypartyparty.party now this app you can see the code for",
    "start": "194480",
    "end": "201360"
  },
  {
    "text": "it's it's public on github it's it's small it's easy you can see exactly how it works you can fit the entire set in",
    "start": "201360",
    "end": "207760"
  },
  {
    "text": "your mind and so it's not hard to to reason about but other applications like other",
    "start": "207760",
    "end": "213360"
  },
  {
    "text": "icebergs are huge so big that one developer could not possibly ever understand how it all",
    "start": "213360",
    "end": "220560"
  },
  {
    "text": "works together so one example is target.com which is a big retailer in the area that i'm from",
    "start": "220560",
    "end": "226959"
  },
  {
    "text": "and it does so much it does coupons it remembers whether or not you have",
    "start": "226959",
    "end": "232159"
  },
  {
    "text": "ordered diapers recently and will give you coupons for them it plans what does it think it's gonna buy it's got all",
    "start": "232159",
    "end": "237599"
  },
  {
    "text": "kinds of semi-creepy things that it might know about you and what you plan to buy because they're scarily good at it",
    "start": "237599",
    "end": "246080"
  },
  {
    "text": "regardless of what size web app we're working with sometimes web apps are outright",
    "start": "246080",
    "end": "253360"
  },
  {
    "text": "like this one which i always felt like was an iceberg flipping off the canadians as it walked as it floated by",
    "start": "253360",
    "end": "260239"
  },
  {
    "text": "does anybody else see that no",
    "start": "260239",
    "end": "265520"
  },
  {
    "text": "regardless all web applications can be kind of treacherous to work in they're unpredictable there's subtle",
    "start": "265600",
    "end": "271759"
  },
  {
    "text": "bugs and cracks that can break apart in unpredictable ways we don't always know how our users are going to use it",
    "start": "271759",
    "end": "278080"
  },
  {
    "text": "and they all have terrible bits of code terrible skeletons that they're hiding some obviously are more literal than",
    "start": "278080",
    "end": "284720"
  },
  {
    "text": "others this is a reindeer skeleton emerging from an iceberg in norway",
    "start": "284720",
    "end": "290080"
  },
  {
    "text": "but most importantly web applications like icebergs have a lot going on just below the surface",
    "start": "290080",
    "end": "296800"
  },
  {
    "text": "only one-eighth of an iceberg is visible above the water and while the ratio of front-end code to",
    "start": "296800",
    "end": "302240"
  },
  {
    "text": "back-end code for our apps will vary quite a bit we all know there's tons of complexity happening",
    "start": "302240",
    "end": "308720"
  },
  {
    "text": "and behind our apis but when companies have talked about observability in their devops or",
    "start": "308720",
    "end": "315039"
  },
  {
    "text": "operations teams or whatever they've always focused below the water line understanding the myriad of services",
    "start": "315039",
    "end": "322080"
  },
  {
    "text": "that make up a system their platforms the performance the activity the capacity and all the",
    "start": "322080",
    "end": "328080"
  },
  {
    "text": "interconnections between them and this is all super important for highly efficient operations",
    "start": "328080",
    "end": "334960"
  },
  {
    "text": "but ultimately the user as cool as our services might be",
    "start": "334960",
    "end": "340000"
  },
  {
    "text": "the user doesn't give a crap about any of that the user is interacting with the website they want to see",
    "start": "340000",
    "end": "346880"
  },
  {
    "text": "what is going on when they hit the search button they want to see the search button work they don't care that the inventory service is offline or that",
    "start": "346880",
    "end": "354080"
  },
  {
    "text": "it has slowed down the search button throws an error not your services offline",
    "start": "354080",
    "end": "360479"
  },
  {
    "text": "because of this because the users interact with the website not your services the client side is often",
    "start": "360479",
    "end": "366319"
  },
  {
    "text": "where issues are first triaged we see this in a lot of support teams like tickets will come in and get assigned to",
    "start": "366319",
    "end": "372400"
  },
  {
    "text": "the web team because that's where the issue manifests itself even though it you know it's really you know the",
    "start": "372400",
    "end": "378080"
  },
  {
    "text": "database team or the service team or whatever and because users perceive our system here they perceive it from the front end",
    "start": "378080",
    "end": "385360"
  },
  {
    "text": "observability on the web gives us insight into the real user experience how things are really running not how we",
    "start": "385360",
    "end": "392080"
  },
  {
    "text": "think they're running from our back end perspective most devops people view their system",
    "start": "392080",
    "end": "397600"
  },
  {
    "text": "from below which is you know some super interesting shots but we get to see the shape of our systems",
    "start": "397600",
    "end": "403680"
  },
  {
    "text": "and how they move from underneath but we're often too deep we don't know what the user's perspective of our",
    "start": "403680",
    "end": "410720"
  },
  {
    "text": "services are observing our systems from the web from the client side on the other hand we get",
    "start": "410720",
    "end": "418319"
  },
  {
    "text": "to see how they are actually running how they really matter you see how everything fits together",
    "start": "418319",
    "end": "426000"
  },
  {
    "text": "so perspective is what i'm advocating for the perspective of observing your",
    "start": "426479",
    "end": "431520"
  },
  {
    "text": "client-side systems is also observing your systems from where your users observe your systems that's where they",
    "start": "431520",
    "end": "438319"
  },
  {
    "text": "care about the most let me tell you a real story about a system i built not that long ago i was",
    "start": "438319",
    "end": "443680"
  },
  {
    "text": "building this data reporting system and we had a bunch of back-end services on azure",
    "start": "443680",
    "end": "449520"
  },
  {
    "text": "and a a web client to talk to them it was all pretty great we were doing a big platform as a service thing uh using a",
    "start": "449520",
    "end": "456160"
  },
  {
    "text": "bunch of native functionality for it and i wanted to have like a status agent",
    "start": "456160",
    "end": "462080"
  },
  {
    "text": "something that would interrogate our services and tell me whether that they were online with all the different",
    "start": "462080",
    "end": "467360"
  },
  {
    "text": "pieces and parts all the different third parties i needed was everything running correctly",
    "start": "467360",
    "end": "472400"
  },
  {
    "text": "so i built one in azure we were bought in on the platform we built something it monitored our",
    "start": "472400",
    "end": "477599"
  },
  {
    "text": "services everything looked great the agent would tell us everything is okay",
    "start": "477599",
    "end": "483360"
  },
  {
    "text": "but often because the agent was sitting in that same warm sheltered network as our",
    "start": "483360",
    "end": "489599"
  },
  {
    "text": "services the actual users could not access our system to our end users it",
    "start": "489599",
    "end": "494879"
  },
  {
    "text": "looked down even though all of our service reporting or our status our status pages were all showing green",
    "start": "494879",
    "end": "502240"
  },
  {
    "text": "how infuriating is that when you know the cloud is down you are positive it is",
    "start": "502240",
    "end": "507360"
  },
  {
    "text": "down but you go to their status page and they show all green that's what this is that's that's why",
    "start": "507360",
    "end": "512719"
  },
  {
    "text": "this happens is they build monitoring agents inside their own clouds so that obviously it was garbage and we",
    "start": "512719",
    "end": "519919"
  },
  {
    "text": "didn't want to do any of that so we tried something else we took our agents and we moved them out into other regions",
    "start": "519919",
    "end": "526160"
  },
  {
    "text": "in the cloud we put them in other places to monitor thinking now if it goes down we'll know",
    "start": "526160",
    "end": "533279"
  },
  {
    "text": "but a lot of those different regions still rely on say the same geographical networks are the same",
    "start": "533440",
    "end": "540880"
  },
  {
    "text": "global networks and so uh like uh global round rob or global",
    "start": "540880",
    "end": "548480"
  },
  {
    "text": "what's the term global dns if the issue is at global dns level all of your agents internally could still be",
    "start": "548480",
    "end": "555120"
  },
  {
    "text": "working but the clients themselves fail how we end up doing this at the end the",
    "start": "555120",
    "end": "560720"
  },
  {
    "text": "only way to get a real solid perspective on whether or not things were working was to move the agent directly into the",
    "start": "560720",
    "end": "567839"
  },
  {
    "text": "client side so the clients themselves were reporting on whether or not the back-end services were off online and",
    "start": "567839",
    "end": "573920"
  },
  {
    "text": "they were taking that data and if the backend services were offline they would store it offline and forward it later",
    "start": "573920",
    "end": "580160"
  },
  {
    "text": "and we built a dedicated api on a server running in somebody's basement that got",
    "start": "580160",
    "end": "585200"
  },
  {
    "text": "this stuff which was totally discreet from where the actual service was running there was",
    "start": "585200",
    "end": "591440"
  },
  {
    "text": "no two things that could go down other than the internet as a whole where both the server and eric's basement and",
    "start": "591440",
    "end": "598320"
  },
  {
    "text": "microsoft azure would both be offline at the same time",
    "start": "598320",
    "end": "604040"
  },
  {
    "text": "okay so because of the perspective because client side is the paramount thing for",
    "start": "606480",
    "end": "613040"
  },
  {
    "text": "the user and because the client side is a triage point for problems in your overall",
    "start": "613040",
    "end": "618320"
  },
  {
    "text": "application and because the symptoms of all your back end service problems will manifest",
    "start": "618320",
    "end": "623519"
  },
  {
    "text": "themselves in the client side i'm arguing that not only should client-side observatory observability be",
    "start": "623519",
    "end": "631839"
  },
  {
    "text": "a thing that you add to your devops work to your monitoring work but it should be the first thing you do it's the most",
    "start": "631839",
    "end": "638560"
  },
  {
    "text": "important thing to monitor it's the thing that the user actually cares about the most but it's not always the easiest thing to",
    "start": "638560",
    "end": "645440"
  },
  {
    "text": "do so that's what we're going to talk about today",
    "start": "645440",
    "end": "652160"
  },
  {
    "text": "so today we're going to talk a bit about first the general architecture of a client-side application just so we have",
    "start": "654000",
    "end": "660720"
  },
  {
    "text": "some common context on how to plug in different observability tools into it",
    "start": "660720",
    "end": "665920"
  },
  {
    "text": "then we're going to look at error and exception tracking and how we can use that",
    "start": "665920",
    "end": "671760"
  },
  {
    "text": "performance monitoring and usage analytics which are three you know categories of",
    "start": "671760",
    "end": "678240"
  },
  {
    "text": "tools that are widely available today and they tackle different parts of things",
    "start": "678240",
    "end": "683600"
  },
  {
    "text": "finally we're going to look at some limitations on on what we can do what we can and cannot do on the client side and",
    "start": "683600",
    "end": "689200"
  },
  {
    "text": "how to move past them sound okay i know that was a long preamble but",
    "start": "689200",
    "end": "695440"
  },
  {
    "text": "that's where we got we got here okay who am i if you don't know who i am my name is todd each gardner",
    "start": "695440",
    "end": "701920"
  },
  {
    "text": "i am what you would call a full iceberg developer i do both the front end and the back end",
    "start": "701920",
    "end": "707360"
  },
  {
    "text": "i am from stillwater minnesota in the united states uh which is right nearby ndc minnesota",
    "start": "707360",
    "end": "713839"
  },
  {
    "text": "and where that happens i spend a lot of my time working on a couple of things i built track js which",
    "start": "713839",
    "end": "720320"
  },
  {
    "text": "is javascript air monitoring we've sponsored ndc a bunch of times more recently i built a tool called",
    "start": "720320",
    "end": "726240"
  },
  {
    "text": "request metrics which is doing performance monitoring",
    "start": "726240",
    "end": "731600"
  },
  {
    "text": "and i make pubconf who's been to pubconf only a few people",
    "start": "731600",
    "end": "738000"
  },
  {
    "text": "pubcomp is great i take all the speaker or a bunch of the speakers who are super entertaining and i put them in a bar and",
    "start": "738000",
    "end": "743440"
  },
  {
    "text": "i say you don't actually have to teach anybody you just have to make people laugh and then i give everybody a bunch of",
    "start": "743440",
    "end": "748639"
  },
  {
    "text": "beer and that works strangely anyway there's one of those on friday if",
    "start": "748639",
    "end": "754639"
  },
  {
    "text": "you want to check that out um as i'm going through if you see something you like or you don't like and",
    "start": "754639",
    "end": "761279"
  },
  {
    "text": "you want to argue with me i'd appreciate if you take a photo of it tweet share it lets me know what parts are good what",
    "start": "761279",
    "end": "767040"
  },
  {
    "text": "parts are bad what parts you hate that sort of thing it also helps promote the event if you put",
    "start": "767040",
    "end": "772399"
  },
  {
    "text": "ndc london on it okay so let's talk about the architecture of",
    "start": "772399",
    "end": "778399"
  },
  {
    "text": "the website no matter how many services you have in your back end you have way more",
    "start": "778399",
    "end": "784880"
  },
  {
    "text": "instances of your web app way more every browser is another instance of",
    "start": "784880",
    "end": "790720"
  },
  {
    "text": "your application responsible for the experience of exactly one user and some are running on really fast",
    "start": "790720",
    "end": "797279"
  },
  {
    "text": "hardware on good networks and others are running on android 4.1",
    "start": "797279",
    "end": "802800"
  },
  {
    "text": "in elevators in the middle of nowhere but they all have the same general",
    "start": "802800",
    "end": "808480"
  },
  {
    "text": "structure the client environment that we're running on is the browser it's our",
    "start": "808480",
    "end": "813519"
  },
  {
    "text": "runtime everything we do is managed by it and limited by it most importantly the browser allows us",
    "start": "813519",
    "end": "819839"
  },
  {
    "text": "to build the user interface you know the html or whatever that we're drawing buttons and css with",
    "start": "819839",
    "end": "825360"
  },
  {
    "text": "uh we create the elements the styling the animation the click events all those sort of things",
    "start": "825360",
    "end": "831040"
  },
  {
    "text": "and to that to make that work we hook it up over the network we get our data from our servers we perform actions we post",
    "start": "831040",
    "end": "838160"
  },
  {
    "text": "things whatever to all those other fine services lurking below the water line",
    "start": "838160",
    "end": "843440"
  },
  {
    "text": "these are things like fetch xhr jsonp websockets http requests all that sort of stuff",
    "start": "843440",
    "end": "850079"
  },
  {
    "text": "and how we do this is by gluing the user interface to the network interactions",
    "start": "850079",
    "end": "855120"
  },
  {
    "text": "with our application code which is fundamentally all that most web apps are",
    "start": "855120",
    "end": "860160"
  },
  {
    "text": "is a bunch of glue between ui and network transactions with fancy stuff in between",
    "start": "860160",
    "end": "866959"
  },
  {
    "text": "and sometimes we can either even reach out to other client-side applications embedding third-parties in our code or",
    "start": "867279",
    "end": "873199"
  },
  {
    "text": "iframes or sometimes even like socket connections directly if you want to do something really unique and cool",
    "start": "873199",
    "end": "879360"
  },
  {
    "text": "these are the big components i mean i'm obviously being super elementary about all this if you're in web dev you're",
    "start": "879360",
    "end": "885040"
  },
  {
    "text": "like you're way over simplifying this yeah i'm just trying to get us a common language to talk about",
    "start": "885040",
    "end": "892480"
  },
  {
    "text": "these are the big components but any one of these can break and cause problems for our users there's different classes",
    "start": "892480",
    "end": "898959"
  },
  {
    "text": "of bugs that impact each of these application code is run on javascript",
    "start": "898959",
    "end": "905279"
  },
  {
    "text": "and javascript has no bugs in it at all it's a rock solid language with with no issues um",
    "start": "905279",
    "end": "912320"
  },
  {
    "text": "except for of course you know async execution and functional contacts and",
    "start": "912320",
    "end": "917519"
  },
  {
    "text": "ever changing syntax errors are inevitable in javascript even for the most disciplined developers even",
    "start": "917519",
    "end": "923839"
  },
  {
    "text": "if you use typescript it's still going to happen networks that we run on are super",
    "start": "923839",
    "end": "929519"
  },
  {
    "text": "volatile it's not running in our data center on mainline connections it's running on our phones on",
    "start": "929519",
    "end": "935519"
  },
  {
    "text": "crappy mobile networks in on bad coverage areas sometimes we run",
    "start": "935519",
    "end": "940880"
  },
  {
    "text": "inside of a corporate environment that has intrusive proxies that are changing headers on the way out and that causes",
    "start": "940880",
    "end": "946639"
  },
  {
    "text": "all kinds of issues third parties uh most web applications",
    "start": "946639",
    "end": "952720"
  },
  {
    "text": "depend on one or more third parties for checkout or advertising or social interactions or forms or what have you",
    "start": "952720",
    "end": "960800"
  },
  {
    "text": "and those third parties update their code and they don't usually tell you when they're going to do it",
    "start": "960800",
    "end": "966959"
  },
  {
    "text": "so when those integrations go down we need to make sure our web applications can fall back gracefully or at least",
    "start": "966959",
    "end": "972240"
  },
  {
    "text": "know that the integration is different and finally users",
    "start": "972240",
    "end": "977839"
  },
  {
    "text": "users software is so much easier if we didn't have all these damned users",
    "start": "977839",
    "end": "983839"
  },
  {
    "text": "users do odd and unexpected things they might even manipulate their experience with browser plugins and",
    "start": "983920",
    "end": "990639"
  },
  {
    "text": "changing the the markup in and out of your your your server to do different things",
    "start": "990639",
    "end": "998079"
  },
  {
    "text": "browser bugs themselves are rare but they do happen more likely there's a",
    "start": "998079",
    "end": "1004560"
  },
  {
    "text": "incompatibility that we failed to account for there are still i mean i know most browsers have like",
    "start": "1004560",
    "end": "1010959"
  },
  {
    "text": "said chromium is one but there are still five other implementations of browsers that",
    "start": "1010959",
    "end": "1016160"
  },
  {
    "text": "are out there and they all have subtle differences in their capability their performance and",
    "start": "1016160",
    "end": "1022079"
  },
  {
    "text": "even how their apis work especially around new stuff since users get to control",
    "start": "1022079",
    "end": "1028959"
  },
  {
    "text": "what runtime they're running we don't get to say like thou shalt run chrome 100 on a mac at this resolution",
    "start": "1028959",
    "end": "1036880"
  },
  {
    "text": "they're going to run on whatever they want so we have this complicated environment",
    "start": "1036880",
    "end": "1044160"
  },
  {
    "text": "of millions of clients that can break in unpredictable ways but this environment",
    "start": "1044160",
    "end": "1049520"
  },
  {
    "text": "is paramount to our users so what do we do",
    "start": "1049520",
    "end": "1054640"
  },
  {
    "text": "we need to observe it we need to see how it's going to run in their hands and how do we know when it breaks how it breaks",
    "start": "1055360",
    "end": "1061520"
  },
  {
    "text": "and how to make it better so let's dive into that let's start with error tracking",
    "start": "1061520",
    "end": "1067280"
  },
  {
    "text": "when i say error tracking what do i mean i mean that we're going to record",
    "start": "1067280",
    "end": "1073600"
  },
  {
    "text": "we're going to record exceptional states in our ui our network our app code or the browser",
    "start": "1073600",
    "end": "1080559"
  },
  {
    "text": "as they happen we're going to record when those states occur in the hands of real users",
    "start": "1080559",
    "end": "1085600"
  },
  {
    "text": "and pull them back for developers to understand when the user clicked on something that we never expected them to click on we",
    "start": "1085600",
    "end": "1092000"
  },
  {
    "text": "should know when that network request returned to 500 and it shouldn't have ever returned to 500",
    "start": "1092000",
    "end": "1097600"
  },
  {
    "text": "we should know when the browser hit you know out of memory limitations because we have a secret leak",
    "start": "1097600",
    "end": "1104160"
  },
  {
    "text": "uh we should know that's what i mean by error tracking",
    "start": "1104160",
    "end": "1109840"
  },
  {
    "text": "so to discuss air tracking and observability in general we need an example",
    "start": "1110320",
    "end": "1115600"
  },
  {
    "text": "so here's a local company to me it's called minnesota pure clear",
    "start": "1115600",
    "end": "1121440"
  },
  {
    "text": "they make those really cool blocks of ice you know the ones that are like this big and are going the really expensive",
    "start": "1121440",
    "end": "1128000"
  },
  {
    "text": "like 15 pound cocktails the ones that like you drop it into the cocktail and you see right through it you don't even know it's there you know what i'm",
    "start": "1128000",
    "end": "1134320"
  },
  {
    "text": "talking about yeah this is one of the companies that make that which i felt was very appropriate now i",
    "start": "1134320",
    "end": "1140559"
  },
  {
    "text": "don't have any direct connection to it i'm aware of their architecture and how it's put together i did not build it i don't work for them",
    "start": "1140559",
    "end": "1147600"
  },
  {
    "text": "but they make fantastic ice anyway their application operates both",
    "start": "1147600",
    "end": "1153760"
  },
  {
    "text": "website and server side above and below the water above the water they have three core",
    "start": "1153760",
    "end": "1159039"
  },
  {
    "text": "pages a product page a checkout page and shopping cart page and that's powered by a customer service",
    "start": "1159039",
    "end": "1166160"
  },
  {
    "text": "a product service and an order service should look really simple like it's not",
    "start": "1166160",
    "end": "1171200"
  },
  {
    "text": "very complicated it's a simple e-commerce site there even is a third-party dependency",
    "start": "1171200",
    "end": "1177840"
  },
  {
    "text": "on stripe to handle credit card payments during the checkout flow so how do we use error tracking to",
    "start": "1177840",
    "end": "1184640"
  },
  {
    "text": "better understand minnesota ice let's look at some example",
    "start": "1184640",
    "end": "1191120"
  },
  {
    "text": "errors that they have experienced first and then we'll see how do we capture these",
    "start": "1191120",
    "end": "1197280"
  },
  {
    "text": "first here's an error stripe is not defined this happens on their checkout page",
    "start": "1197280",
    "end": "1205200"
  },
  {
    "text": "and it happens right after page load how would stripe not be defined if we",
    "start": "1205200",
    "end": "1210240"
  },
  {
    "text": "trace the source code for this error we can see it comes from a bit of javascript like this",
    "start": "1210240",
    "end": "1216880"
  },
  {
    "text": "so we load the script from stripe and then we're configuring our credit card form",
    "start": "1217200",
    "end": "1222880"
  },
  {
    "text": "stripe.configure with their key so how is stripe not defined how does this ever break",
    "start": "1222880",
    "end": "1229919"
  },
  {
    "text": "well it breaks when that url fails to load the url can fail",
    "start": "1229919",
    "end": "1235039"
  },
  {
    "text": "the load for lots of reasons it can fail because stripe is down not super likely but it happens",
    "start": "1235039",
    "end": "1241919"
  },
  {
    "text": "it can happen because the network dropped sometimes a network drop on your phone will cause one request of a web page to",
    "start": "1241919",
    "end": "1248559"
  },
  {
    "text": "fail it's not an all or nothing thing a lot of developers on web on mobile web think",
    "start": "1248559",
    "end": "1254159"
  },
  {
    "text": "that it's an all or nothing thing like the user has a poor connection so they try and go to the page it's not going to",
    "start": "1254159",
    "end": "1259360"
  },
  {
    "text": "work no sometimes it could work 99 of the way but when it goes to make a dns request",
    "start": "1259360",
    "end": "1266080"
  },
  {
    "text": "to a new domain like stripe.com that's when it fails and so everything on the page worked except stripe",
    "start": "1266080",
    "end": "1273039"
  },
  {
    "text": "or it could just be like some proxy between here and there manipulated things for whatever reason that script can fail to",
    "start": "1273039",
    "end": "1280000"
  },
  {
    "text": "load and when it does stripe just never gets defined your credit card application doesn't",
    "start": "1280000",
    "end": "1286960"
  },
  {
    "text": "know how to handle it or does it just take a bunch of credit card numbers and post them nowhere when strike does not",
    "start": "1286960",
    "end": "1292720"
  },
  {
    "text": "get defined have we ever even tested it so javascript is blowing up because",
    "start": "1292720",
    "end": "1298960"
  },
  {
    "text": "stripe did not get defined this error impacted the checkout page and prevented some users from giving",
    "start": "1298960",
    "end": "1305200"
  },
  {
    "text": "them money which is you know the whole point",
    "start": "1305200",
    "end": "1310320"
  },
  {
    "text": "services especially third-party services are never 100 reliable and there was a bug here",
    "start": "1310320",
    "end": "1316880"
  },
  {
    "text": "where they did not have a graceful fallback for when stripe was offline let's look at another example",
    "start": "1316880",
    "end": "1323840"
  },
  {
    "text": "here's a really common runtime error that a lot of sites have unexpected token angle bracket",
    "start": "1323840",
    "end": "1331120"
  },
  {
    "text": "and minnesota ice would have this error as well on the shopping cart page",
    "start": "1331120",
    "end": "1336559"
  },
  {
    "text": "and it looks like that this air often happens right after an ajax request to",
    "start": "1336559",
    "end": "1342400"
  },
  {
    "text": "slash customers if we trace this error we would see some",
    "start": "1342400",
    "end": "1347679"
  },
  {
    "text": "code like this now this is the old xhr way to do it i know there's like cool fetch ways to do",
    "start": "1347679",
    "end": "1353919"
  },
  {
    "text": "it but i like this way so we're creating a new xmlhp requests we're saying hey when",
    "start": "1353919",
    "end": "1360720"
  },
  {
    "text": "this is done i want you to parse the response and go and it blows up when it says",
    "start": "1360720",
    "end": "1367760"
  },
  {
    "text": "hey this this thing i got back is not like unexpected uh what was it",
    "start": "1367760",
    "end": "1374400"
  },
  {
    "text": "unexpected token angle bracket how would an angle bracket get the start of this json",
    "start": "1374400",
    "end": "1380640"
  },
  {
    "text": "how would our api why would an api return an angle bracket instead of json",
    "start": "1380640",
    "end": "1385840"
  },
  {
    "text": "error pages your apis are often fronted by nginx or",
    "start": "1386799",
    "end": "1392400"
  },
  {
    "text": "apache or whatever to do reverse proxy high availability things and when they are not configured",
    "start": "1392400",
    "end": "1398559"
  },
  {
    "text": "correctly or when their service is down they'll return something like this and if we return something like this and",
    "start": "1398559",
    "end": "1404799"
  },
  {
    "text": "try and pass it into a json formatter that's what starts with and so we're trying to parse html",
    "start": "1404799",
    "end": "1413840"
  },
  {
    "text": "an error like this impacted an important bit of ui and showed us a bug that we needed to",
    "start": "1415600",
    "end": "1420799"
  },
  {
    "text": "handle api errors more gracefully but it also showed us a",
    "start": "1420799",
    "end": "1426159"
  },
  {
    "text": "failure condition in our customer service that we might have not known that when the service as a whole is down",
    "start": "1426159",
    "end": "1433600"
  },
  {
    "text": "it's not that we're not returning it's that we're returning malformed data",
    "start": "1433600",
    "end": "1439120"
  },
  {
    "text": "error tracking gives us a better perspective into the completeness of our client-side application for our",
    "start": "1440559",
    "end": "1445840"
  },
  {
    "text": "customers it shows us you know browser incompatibilities logical errors",
    "start": "1445840",
    "end": "1451039"
  },
  {
    "text": "third-party service failures api availability it can even show you like how many users",
    "start": "1451039",
    "end": "1456720"
  },
  {
    "text": "are impacted by a bug and it gives you like real time and historical views of what's offline and",
    "start": "1456720",
    "end": "1463120"
  },
  {
    "text": "broken so how do we do this what do we what do we do to get this we need to understand how error tracking",
    "start": "1463120",
    "end": "1469919"
  },
  {
    "text": "would plug into the web how do we how do we get this information out of our applications",
    "start": "1469919",
    "end": "1475919"
  },
  {
    "text": "fortunately there isn't a unified way to get errors",
    "start": "1475919",
    "end": "1481440"
  },
  {
    "text": "from a website there's not like one ultimate event handler that tells you about every single way an application",
    "start": "1481440",
    "end": "1486720"
  },
  {
    "text": "can break no one could have imagined that a language designed in 10 days could ever",
    "start": "1486720",
    "end": "1492640"
  },
  {
    "text": "break so error handling was not part of the original spec",
    "start": "1492640",
    "end": "1498000"
  },
  {
    "text": "but there could be lots of ways an app breaks it could be a globally unhandled exception which is what most people",
    "start": "1498000",
    "end": "1503120"
  },
  {
    "text": "would think of but it could also be a rejected promise or a network request that failed or somebody wrote something",
    "start": "1503120",
    "end": "1510080"
  },
  {
    "text": "directly to error.or console.error and thought hey that's good enough",
    "start": "1510080",
    "end": "1516159"
  },
  {
    "text": "but each of these failure conditions reveals themselves in different ways",
    "start": "1516159",
    "end": "1521279"
  },
  {
    "text": "and so because error tracking doesn't really plug in super easily an agent would have to do some interesting things",
    "start": "1521279",
    "end": "1527520"
  },
  {
    "text": "to capture all the different kinds of errors like this",
    "start": "1527520",
    "end": "1532880"
  },
  {
    "text": "like this here's how we would capture errors written to console so a lot of libraries will just say hey someone",
    "start": "1533600",
    "end": "1539679"
  },
  {
    "text": "something blows up i'm going to say console.error with some message but how do we listen to that the only",
    "start": "1539679",
    "end": "1546080"
  },
  {
    "text": "real way to listen to it is to intercept when or intercept console.error and we",
    "start": "1546080",
    "end": "1551679"
  },
  {
    "text": "can do that dangerously easy in javascript we grab a reference to the original function so",
    "start": "1551679",
    "end": "1558159"
  },
  {
    "text": "original error is window.console.air and then we just smash right on top of it even though it's a native function we",
    "start": "1558159",
    "end": "1564240"
  },
  {
    "text": "just redefine it to be our own thing and say all right whatever you pass in there now i'm going to make an error off",
    "start": "1564240",
    "end": "1570400"
  },
  {
    "text": "of it and send it off to my service and then i'll go ahead and let it print to the console",
    "start": "1570400",
    "end": "1575840"
  },
  {
    "text": "and you can see wrapping this wrapping xhr wrapping promise",
    "start": "1575840",
    "end": "1581039"
  },
  {
    "text": "wrapping a whole bunch of other things in order to capture all the different places that javascript can blow up",
    "start": "1581039",
    "end": "1588799"
  },
  {
    "text": "but even once you have that error they're not always the easiest to understand",
    "start": "1588880",
    "end": "1595600"
  },
  {
    "text": "browser errors are kind of weird especially once you've minified your code and it's",
    "start": "1595600",
    "end": "1601520"
  },
  {
    "text": "asynchronously running so here'd be like a stack trace of an error that you'd see",
    "start": "1601520",
    "end": "1606720"
  },
  {
    "text": "and i don't know how to read that i don't know what that means i don't really want to figure out what's at column 5 838 563",
    "start": "1606720",
    "end": "1615679"
  },
  {
    "text": "that's terrible so when you build an error tracking agent",
    "start": "1615679",
    "end": "1621600"
  },
  {
    "text": "of some kind once you've wrapped things you should probably have a way to add some additional context so that you",
    "start": "1621600",
    "end": "1627760"
  },
  {
    "text": "don't depend on that stack trace so that send air function could do some other things like adding",
    "start": "1627760",
    "end": "1634240"
  },
  {
    "text": "metadata so when an error happens when when something exceptional happens you're not just sending a cryptic error",
    "start": "1634240",
    "end": "1640960"
  },
  {
    "text": "message you're sending what's the current state from react",
    "start": "1640960",
    "end": "1646559"
  },
  {
    "text": "what's the current session information what's the current form state what's the current user tell me any sort of global",
    "start": "1646559",
    "end": "1653840"
  },
  {
    "text": "state information you have and include it with the air so that the developers when they see this",
    "start": "1653840",
    "end": "1660320"
  },
  {
    "text": "can reason about what the heck is going on that led to the situation",
    "start": "1660320",
    "end": "1665679"
  },
  {
    "text": "so once you have an agent that does some things you can gather up all of these errors from your app you need to send",
    "start": "1667760",
    "end": "1673679"
  },
  {
    "text": "them somewhere well one great way to do that is by sending them to a logging and metrics api i do",
    "start": "1673679",
    "end": "1680559"
  },
  {
    "text": "this in a lot of applications that i build there's just an api that can take a handful of strings or a string and a",
    "start": "1680559",
    "end": "1685919"
  },
  {
    "text": "number or something like that that's for recording metrics from elsewhere in the app that i think are interesting",
    "start": "1685919",
    "end": "1691679"
  },
  {
    "text": "so you might record a log message or you might record that check-in took 538 milliseconds or",
    "start": "1691679",
    "end": "1698960"
  },
  {
    "text": "whatever and you can store these in you know a database table or elastic search or whatever",
    "start": "1698960",
    "end": "1705200"
  },
  {
    "text": "and keep them for your own reporting purposes something like elastic kibana is actually really really great for this",
    "start": "1705200",
    "end": "1711600"
  },
  {
    "text": "and i've used that a bunch here's actually a cabana dashboard i have for an application that i do this with",
    "start": "1711600",
    "end": "1718399"
  },
  {
    "text": "but the downside of this is cabana is kind of intimidating when you first get started especially to like get the",
    "start": "1718399",
    "end": "1724240"
  },
  {
    "text": "queries that you need going and it doesn't have all the things you need like the data structure and the",
    "start": "1724240",
    "end": "1729520"
  },
  {
    "text": "dashboards and the alerts when something terrible is happening that you need to respond to so there's lots of other tools available",
    "start": "1729520",
    "end": "1736320"
  },
  {
    "text": "in this space obviously i build one i think it's cool",
    "start": "1736320",
    "end": "1743919"
  },
  {
    "text": "but yeah uh moving on uh performance monitoring",
    "start": "1743919",
    "end": "1748960"
  },
  {
    "text": "air tracking tells us when our applications and apis fail but maybe they're all working but",
    "start": "1748960",
    "end": "1755760"
  },
  {
    "text": "they're just kind of slow how do we know how do we respond to that",
    "start": "1755760",
    "end": "1760880"
  },
  {
    "text": "an error wouldn't necessarily be thrown just because something took too long",
    "start": "1760880",
    "end": "1766159"
  },
  {
    "text": "so let's turn to performance monitoring to answer that question what do i mean when i say performance",
    "start": "1766159",
    "end": "1774960"
  },
  {
    "text": "performance is measuring the user perceived timings not necessarily their",
    "start": "1776640",
    "end": "1782399"
  },
  {
    "text": "actual timings but what was the user's perception of timings",
    "start": "1782399",
    "end": "1788480"
  },
  {
    "text": "to the experience that they're having to to network transactions user flows and",
    "start": "1789440",
    "end": "1795440"
  },
  {
    "text": "functions oftentimes an application can perform quite poorly but we can trick them into thinking it's",
    "start": "1795440",
    "end": "1802559"
  },
  {
    "text": "faster with interesting animations and loading messages and you know when you're first launching a",
    "start": "1802559",
    "end": "1809440"
  },
  {
    "text": "uh when you're first launching a roku how many people have a roku",
    "start": "1809440",
    "end": "1814480"
  },
  {
    "text": "when you first install a roku and you hit the button to like say okay i'm signed in i'm all done it shows you this",
    "start": "1814480",
    "end": "1820799"
  },
  {
    "text": "little loading message with all kinds of like really nerdy phrases about like reticulating splines the lining flux",
    "start": "1820799",
    "end": "1826640"
  },
  {
    "text": "capacitors uh all the things that it's not really doing but it's entertaining to watch",
    "start": "1826640",
    "end": "1832240"
  },
  {
    "text": "well it takes 40 seconds to do whatever it is it's doing and so the perception is that it's not quite as slow as it is",
    "start": "1832240",
    "end": "1841679"
  },
  {
    "text": "the most important metric that most people care about in web performance is page load it's the oldest one",
    "start": "1844000",
    "end": "1850720"
  },
  {
    "text": "and page load is just how long does it take between the start of a page navigation until",
    "start": "1850720",
    "end": "1856240"
  },
  {
    "text": "when the page load event is fired to when it thinks all the things that it needed to load are done",
    "start": "1856240",
    "end": "1861919"
  },
  {
    "text": "and it's still super important but there were lots of ways to game page load to like",
    "start": "1861919",
    "end": "1867679"
  },
  {
    "text": "screw around with it if you were lazy loading a bunch of stuff often like if you were building a",
    "start": "1867679",
    "end": "1873440"
  },
  {
    "text": "single page application like an angular react application your page load event could be like super fast because your",
    "start": "1873440",
    "end": "1879760"
  },
  {
    "text": "page load was like when here's the plain html page came down page load done",
    "start": "1879760",
    "end": "1884880"
  },
  {
    "text": "and then all of the stuff got drawn and a thousand little boxes opened with spinners in each one and it was",
    "start": "1884880",
    "end": "1890880"
  },
  {
    "text": "painfully slow but your page load was really fast so page load didn't work for everybody",
    "start": "1890880",
    "end": "1898559"
  },
  {
    "text": "more recently google has introduced a new set of performance metrics called",
    "start": "1898559",
    "end": "1903760"
  },
  {
    "text": "the core web vitals how many of you have heard or worked with the core web vitals",
    "start": "1903760",
    "end": "1909039"
  },
  {
    "text": "couple people good so the core web vitals are four new metrics meant to measure the different",
    "start": "1909039",
    "end": "1915519"
  },
  {
    "text": "ways that a web page can be slow because it turns out there's lots of wages ways that a page can be slow",
    "start": "1915519",
    "end": "1923200"
  },
  {
    "text": "these uh particular measures are often shown as part of like google lighthouse or page speed insights so the four",
    "start": "1924480",
    "end": "1930960"
  },
  {
    "text": "metrics are first contentful paint and largest contentful paint these two are measuring",
    "start": "1930960",
    "end": "1936480"
  },
  {
    "text": "when different things are put on the screen the first is when does the first meaningful content hit the screen how",
    "start": "1936480",
    "end": "1941840"
  },
  {
    "text": "long does it take before essentially the initial document has come down and we know enough css to render something",
    "start": "1941840",
    "end": "1949440"
  },
  {
    "text": "so when first contentful paint happens the user knows that the page is going to load",
    "start": "1949440",
    "end": "1955519"
  },
  {
    "text": "eventually this request hasn't just gone to nowhere largest contentful paint is a proxy for",
    "start": "1955519",
    "end": "1962559"
  },
  {
    "text": "when do we think the most important content has has been loaded we don't necessarily know what is the",
    "start": "1962559",
    "end": "1968240"
  },
  {
    "text": "most important content there's no way to really programmatically know that but we use the largest so when is the largest",
    "start": "1968240",
    "end": "1974240"
  },
  {
    "text": "bit of the screen the main hero image the headline the first paragraph of text",
    "start": "1974240",
    "end": "1979279"
  },
  {
    "text": "whatever it happens to be when has that loaded and google has set metrics on what it",
    "start": "1979279",
    "end": "1984960"
  },
  {
    "text": "thinks are good and bad values of that so your first contentful paint should happen",
    "start": "1984960",
    "end": "1990399"
  },
  {
    "text": "faster than one second and the largest less than two and a half seconds which is",
    "start": "1990399",
    "end": "1996000"
  },
  {
    "text": "fast there's not a lot of websites that actually do that reliably the other two are a little bit more",
    "start": "1996000",
    "end": "2002159"
  },
  {
    "text": "complicated cls is the cumulative layout shift which we'll talk about more but it's basically",
    "start": "2002159",
    "end": "2009120"
  },
  {
    "text": "how much is your web page shifting around as different things load in",
    "start": "2009120",
    "end": "2014159"
  },
  {
    "text": "you probably experience this with great frustration reading a content aggregator or a newspaper or anything that as",
    "start": "2014159",
    "end": "2021440"
  },
  {
    "text": "you're scrolling down trying to read the story an ad gets jumped injected in right before the paragraph you're about",
    "start": "2021440",
    "end": "2027600"
  },
  {
    "text": "to read or you're about to click on something and they move something in the way and you end up clicking on an ad on accident",
    "start": "2027600",
    "end": "2034240"
  },
  {
    "text": "that's layout shift and google's saying you can't do that anymore that sucks",
    "start": "2034240",
    "end": "2039519"
  },
  {
    "text": "the last one is first input delay and it's kind of a measure of saying",
    "start": "2039519",
    "end": "2044960"
  },
  {
    "text": "stop putting so much damn javascript on your pages it's saying how much javascript is",
    "start": "2044960",
    "end": "2050638"
  },
  {
    "text": "needing to be parsed and understood by the browser in order for the first time the user does",
    "start": "2050639",
    "end": "2056158"
  },
  {
    "text": "something the first time they scroll they click they hover the first time a user does something on the page how long does it",
    "start": "2056159",
    "end": "2063118"
  },
  {
    "text": "take the browser to figure out what the heck it should do like where should it even route the event is somebody",
    "start": "2063119",
    "end": "2068398"
  },
  {
    "text": "listening to this should i call your function should i not call your function there's that inherent browser delay in",
    "start": "2068399",
    "end": "2075040"
  },
  {
    "text": "figuring out what your javascript does and it should be really really fast we're actually measuring",
    "start": "2075040",
    "end": "2080878"
  },
  {
    "text": "kind of the performance of the browser in real terms we're measuring how fast the browser is running but we're using",
    "start": "2080879",
    "end": "2087280"
  },
  {
    "text": "that to indirectly measure how much javascript did you put on this page",
    "start": "2087280",
    "end": "2092638"
  },
  {
    "text": "so what's really important about these these four metrics even if you're not familiar with them",
    "start": "2092639",
    "end": "2098160"
  },
  {
    "text": "google is using these today google captures these four metrics as part of googlebot when it crawls your",
    "start": "2098160",
    "end": "2104000"
  },
  {
    "text": "page and your rankings are influenced by these scores the performance of your page does affect",
    "start": "2104000",
    "end": "2110079"
  },
  {
    "text": "your rankings today it began in march it has already started shifting things",
    "start": "2110079",
    "end": "2115839"
  },
  {
    "text": "google of course is very cagey about exactly how much big of an influence it is but there have been a lot of",
    "start": "2115839",
    "end": "2121839"
  },
  {
    "text": "anecdotal reports of people slipping off rankings because of poor performance and a lot of companies are",
    "start": "2121839",
    "end": "2127200"
  },
  {
    "text": "starting to take this very very seriously",
    "start": "2127200",
    "end": "2131480"
  },
  {
    "text": "so how do we know what our scores are web performance all of these things are",
    "start": "2133040",
    "end": "2138960"
  },
  {
    "text": "measured natively by the browser there's api as part of this web performance is a much newer concept",
    "start": "2138960",
    "end": "2145359"
  },
  {
    "text": "than errors and we've had a bunch of things built directly into the browser to capture them so it's a lot easier to",
    "start": "2145359",
    "end": "2151200"
  },
  {
    "text": "do we still need to write some sort of an agent that'll run on our our website to uh to",
    "start": "2151200",
    "end": "2157920"
  },
  {
    "text": "plug in and gather these metrics and forward that data out but it can be a lot simpler",
    "start": "2157920",
    "end": "2165760"
  },
  {
    "text": "our agent isn't really invasive we don't have to stomp on top of console or over override what a promise is",
    "start": "2165760",
    "end": "2173119"
  },
  {
    "text": "we really just need to interact with this one api called the performance api window.performance",
    "start": "2173119",
    "end": "2179720"
  },
  {
    "text": "window.performance is already capturing just about everything we need it's got a functional called get entries",
    "start": "2179720",
    "end": "2186480"
  },
  {
    "text": "which if you go into a website open up your chrome console and type performance.get entries there's all kinds of really cool stuff in there",
    "start": "2186480",
    "end": "2192400"
  },
  {
    "text": "essentially all of the information that would be in your network tab in the debugger tools is",
    "start": "2192400",
    "end": "2197760"
  },
  {
    "text": "available programmatically as performance dot get entries how long the page took how long dns ssl",
    "start": "2197760",
    "end": "2205359"
  },
  {
    "text": "server delay you know how long every phase of every request took every ajax request every image",
    "start": "2205359",
    "end": "2211839"
  },
  {
    "text": "request every font request all the third parties anything that you want to measure is available inside that performance",
    "start": "2211839",
    "end": "2218640"
  },
  {
    "text": "and so we can really capture everything that we need by saying performance.git entries grab this big",
    "start": "2218640",
    "end": "2225280"
  },
  {
    "text": "hunk of data send to the server maybe you want to filter that down to",
    "start": "2225280",
    "end": "2230320"
  },
  {
    "text": "only care about some things but everything that we need is right there",
    "start": "2230320",
    "end": "2235839"
  },
  {
    "text": "once you have that data you need to again send it somewhere this could be that same custom logging",
    "start": "2236640",
    "end": "2243440"
  },
  {
    "text": "api i do this a bunch uh again elastic and cabana are are great for this here",
    "start": "2243440",
    "end": "2249440"
  },
  {
    "text": "is actually a logging dashboard that i have for a website",
    "start": "2249440",
    "end": "2254800"
  },
  {
    "text": "that's recording various different uh load times on different pages",
    "start": "2254800",
    "end": "2260079"
  },
  {
    "text": "alternatively because there's no other you know alerting or advanced reporting",
    "start": "2260079",
    "end": "2266240"
  },
  {
    "text": "built into this and you have to kind of do it a bunch yourself i kind of started one of these too",
    "start": "2266240",
    "end": "2273040"
  },
  {
    "text": "it's called request metrics we give you the agent and everything so you don't build that yourself",
    "start": "2273040",
    "end": "2278640"
  },
  {
    "text": "and it shows you a lot of these sort of things we're trying to like tell you when things are breaking in very simple",
    "start": "2278640",
    "end": "2284960"
  },
  {
    "text": "plain english sort of ways like here's what slows you down",
    "start": "2284960",
    "end": "2290560"
  },
  {
    "text": "but what sort of things can we learn from this what kind of things do we learn from performance monitoring",
    "start": "2290720",
    "end": "2296240"
  },
  {
    "text": "well let's look at a couple of different performance issues and how they manifest themselves",
    "start": "2296240",
    "end": "2302320"
  },
  {
    "text": "the first kind of problem is just a simple general performance slow performance slowdown in page load time",
    "start": "2302320",
    "end": "2310320"
  },
  {
    "text": "for example what if we saw a slow performance in the checkout page",
    "start": "2310320",
    "end": "2316400"
  },
  {
    "text": "there's lots of users but maybe they don't all have the same experience",
    "start": "2316400",
    "end": "2321920"
  },
  {
    "text": "in a lot of performance tooling elasticsearch uh you know",
    "start": "2321920",
    "end": "2328640"
  },
  {
    "text": "uh crux which is the built-in one they're the chrome user experience report uh speed curve request metrics",
    "start": "2328640",
    "end": "2334720"
  },
  {
    "text": "all of them will show a lot of this data in what's called a flame chart who's interacted with a flame chart",
    "start": "2334720",
    "end": "2340480"
  },
  {
    "text": "before anybody they're really cool but they're kind of hard to just glance at",
    "start": "2340480",
    "end": "2346720"
  },
  {
    "text": "sometimes a flame chart like this right here is meant to represent the performance of a whole bunch of users at once and the",
    "start": "2346720",
    "end": "2354320"
  },
  {
    "text": "hotter the flame so like the warmer the colors the worse the user experiences so",
    "start": "2354320",
    "end": "2359520"
  },
  {
    "text": "like the volume of a chart is showing how many people interacted at this given time",
    "start": "2359520",
    "end": "2365280"
  },
  {
    "text": "and how warm each bar is how many how much more red and orange and yellow is in it is how slow they had it",
    "start": "2365280",
    "end": "2372880"
  },
  {
    "text": "and this chart is actually showing a significant slowdown but it's kind of hard to see it",
    "start": "2372880",
    "end": "2378880"
  },
  {
    "text": "it's not quite like there's just almost too much information in a flame chart",
    "start": "2378880",
    "end": "2384640"
  },
  {
    "text": "and so for that reason i don't really like them i don't think they're i think they're more cool than useful",
    "start": "2384640",
    "end": "2390880"
  },
  {
    "text": "so instead i like to look at some things in terms of like median and 75th percentile and 95th",
    "start": "2390880",
    "end": "2397920"
  },
  {
    "text": "percentile i know you weren't expecting math",
    "start": "2397920",
    "end": "2403040"
  },
  {
    "text": "percentiles are like super important when you talk about performance",
    "start": "2403040",
    "end": "2408079"
  },
  {
    "text": "when you do averages which is you know you're naively getting into something you're like i need to boil all these",
    "start": "2408720",
    "end": "2414079"
  },
  {
    "text": "numbers down i'm just gonna take the average the average hides a lot of really good data the average",
    "start": "2414079",
    "end": "2420000"
  },
  {
    "text": "takes like a handful of people are having like an awesome time and most people have like a really crappy time",
    "start": "2420000",
    "end": "2426319"
  },
  {
    "text": "the average is like you're fine and that's not all true that's not all",
    "start": "2426319",
    "end": "2431599"
  },
  {
    "text": "what you wanted to know it's it's hiding real data instead the median or if you were to",
    "start": "2431599",
    "end": "2437359"
  },
  {
    "text": "take every bit of data and order it and then once you've gotten halfway through your data that's the median so",
    "start": "2437359",
    "end": "2444560"
  },
  {
    "text": "your normal user half of your users had this experience or better",
    "start": "2444560",
    "end": "2449680"
  },
  {
    "text": "that's what the median is saying the median number is half of your users are having this experience or even faster",
    "start": "2449680",
    "end": "2455440"
  },
  {
    "text": "the 75th percentile or p75 this is what google uses for just about everything when google's trying to boil you down to",
    "start": "2455440",
    "end": "2461839"
  },
  {
    "text": "a number they're not they're saying they're using the p75 and so it's 75 percent of your users again you've taken",
    "start": "2461839",
    "end": "2468400"
  },
  {
    "text": "all of your data and lined it up and once you're 75 percent of the way in that's the number so 75 percent of your",
    "start": "2468400",
    "end": "2474560"
  },
  {
    "text": "users or most of your users had this experience or better and 95 is really about saying what your",
    "start": "2474560",
    "end": "2481599"
  },
  {
    "text": "worst experience is it's not really your worst because you would just take the last thing off the list but",
    "start": "2481599",
    "end": "2488480"
  },
  {
    "text": "the last thing off the list is usually like ridiculous and noisy and it's like this user took two years to load your",
    "start": "2488480",
    "end": "2493599"
  },
  {
    "text": "page like no they didn't somebody is like messing with something uh so 95th is what we usually use to",
    "start": "2493599",
    "end": "2499599"
  },
  {
    "text": "talk about this is the worst experience that people have had and so what we're seeing here from this",
    "start": "2499599",
    "end": "2506079"
  },
  {
    "text": "report on the checkout page is that the median or or normal user slowed from",
    "start": "2506079",
    "end": "2511440"
  },
  {
    "text": "what used to be about two seconds to load the page to about five seconds",
    "start": "2511440",
    "end": "2516720"
  },
  {
    "text": "the 75th percentile which is what i think is the most important uh is 75 percent of your users",
    "start": "2516720",
    "end": "2523520"
  },
  {
    "text": "experience that or better slowed from 5 to 10 seconds and the worst users the 95th slowed from",
    "start": "2523520",
    "end": "2530240"
  },
  {
    "text": "10 to over 20 seconds to load a page who would wait 20 seconds to check out",
    "start": "2530240",
    "end": "2535760"
  },
  {
    "text": "some fancy ice like if you're making a like you bail and you just go get some crushed",
    "start": "2535760",
    "end": "2541119"
  },
  {
    "text": "ice and you move on with your day you don't wait that long for fancy ice i mean it's cool but it's not that cool",
    "start": "2541119",
    "end": "2547760"
  },
  {
    "text": "so the checkout page is obviously slowing down and this is this is a big deal this is",
    "start": "2547760",
    "end": "2553119"
  },
  {
    "text": "where minnesota ice makes money you make money at your checkout page so there's lots of different reasons it",
    "start": "2553119",
    "end": "2559440"
  },
  {
    "text": "could slow down it could be server delays it could be a slower third party it could be way too much javascript",
    "start": "2559440",
    "end": "2566560"
  },
  {
    "text": "hopefully your tooling can give you clues on what that is but what we really know is that it's",
    "start": "2566560",
    "end": "2572000"
  },
  {
    "text": "slowed down actually from the end user perspective we're not measuring the performance of a service we're measuring",
    "start": "2572000",
    "end": "2577920"
  },
  {
    "text": "that the actual user exp or experience slower times",
    "start": "2577920",
    "end": "2583040"
  },
  {
    "text": "let's have a look at another performance problem example",
    "start": "2583040",
    "end": "2588079"
  },
  {
    "text": "we're going to talk about communicative layout shift the core web vital this is one of the many ways the website",
    "start": "2588319",
    "end": "2594319"
  },
  {
    "text": "can be slow super annoying let me show you",
    "start": "2594319",
    "end": "2599839"
  },
  {
    "text": "specifically what that means here's a little example of layout shift so i'm trying to like",
    "start": "2599839",
    "end": "2605040"
  },
  {
    "text": "click on this button to do something awesome and every time i get close i'm like all right oh oh fancy haircuts i",
    "start": "2605040",
    "end": "2611200"
  },
  {
    "text": "didn't want to click on fancy oh studly's flower garden get out of here ed",
    "start": "2611200",
    "end": "2617040"
  },
  {
    "text": "this is annoyingly common on websites to do this and i don't know if they're doing it",
    "start": "2617040",
    "end": "2622400"
  },
  {
    "text": "accidentally like their ad servers are just stupid slow and they load in later or they're doing it intentionally i kind",
    "start": "2622400",
    "end": "2628720"
  },
  {
    "text": "of think they might be doing it intentionally to get clicks but regardless this is layout shift",
    "start": "2628720",
    "end": "2634400"
  },
  {
    "text": "so it's measuring how much of the dom so that button how much of the dom is moving and how much how",
    "start": "2634400",
    "end": "2641760"
  },
  {
    "text": "what percentage of the page is being moved so how far is it moving and how much is moving",
    "start": "2641760",
    "end": "2647359"
  },
  {
    "text": "and so it's a complicated equation that comes out to what kind of looks like a percentage score but it's not exactly",
    "start": "2647359",
    "end": "2654079"
  },
  {
    "text": "that we measure this as the camilles of",
    "start": "2654079",
    "end": "2659280"
  },
  {
    "text": "layout shift so we take together every single time something moved as part of the page's",
    "start": "2659280",
    "end": "2665200"
  },
  {
    "text": "lifetime usually the first 30 seconds or so is when we stop counting um",
    "start": "2665200",
    "end": "2671040"
  },
  {
    "text": "all the different times something has have moved and how far it moved and we calculate that all together into a",
    "start": "2671040",
    "end": "2676240"
  },
  {
    "text": "number that's somewhere between zero and one google defined what the different good",
    "start": "2676240",
    "end": "2682079"
  },
  {
    "text": "and poor ranges are for that and we get to see that users have all kinds of different experiences not everybody has",
    "start": "2682079",
    "end": "2688800"
  },
  {
    "text": "the same thing sometimes the page loads really fast and has little layout shift",
    "start": "2688800",
    "end": "2693839"
  },
  {
    "text": "other times it's really slow and things are coming in asynchronously and shifting things",
    "start": "2693839",
    "end": "2699839"
  },
  {
    "text": "around what we can see is that users have been having a worse experience lately the",
    "start": "2699839",
    "end": "2705040"
  },
  {
    "text": "current time period we are solidly in that yellow improve category whereas",
    "start": "2705040",
    "end": "2710560"
  },
  {
    "text": "before we were we were pretty good we were fine things are shifting around more now than",
    "start": "2710560",
    "end": "2715920"
  },
  {
    "text": "they were previously this is usually caused by",
    "start": "2715920",
    "end": "2721040"
  },
  {
    "text": "content that is loaded asynchronously like maybe a striped checkout form used to load really fast and just come in as",
    "start": "2721040",
    "end": "2727760"
  },
  {
    "text": "part of the layout and maybe it's just 200 milliseconds slower now and now it comes in after the first bit of the page",
    "start": "2727760",
    "end": "2734400"
  },
  {
    "text": "has rendered and we're pushing a bunch of the frame down so it could be solved by",
    "start": "2734400",
    "end": "2740640"
  },
  {
    "text": "just reserving the amount of space you need on the page and letting it load in correctly",
    "start": "2740640",
    "end": "2747720"
  },
  {
    "text": "let's move on to the third component of client-side observability usage analytics and this is where the first",
    "start": "2748880",
    "end": "2755440"
  },
  {
    "text": "two come together in more of business terms usage analytics",
    "start": "2755440",
    "end": "2761520"
  },
  {
    "text": "is measuring all the user traffic movement and actions through our web",
    "start": "2761520",
    "end": "2766960"
  },
  {
    "text": "pages and our web app as a whole it's done usually from a project management or a marketing perspective",
    "start": "2766960",
    "end": "2773200"
  },
  {
    "text": "these are typically the people who do usage analytics but super valuable for everybody else super valuable for",
    "start": "2773200",
    "end": "2778400"
  },
  {
    "text": "developer teams as well because it lets us see how people actually use the things that we built",
    "start": "2778400",
    "end": "2785920"
  },
  {
    "text": "usage analytics is the easiest kind of thing to make because we don't really have to plug into the browser much at",
    "start": "2785920",
    "end": "2792800"
  },
  {
    "text": "all we just need a function to record when something interesting has happened",
    "start": "2792800",
    "end": "2798160"
  },
  {
    "text": "so it might look something like this we have an agent that gets downloaded and we call analytics.sendevent",
    "start": "2798160",
    "end": "2806000"
  },
  {
    "text": "this might look super familiar because this is exactly what google analytics is you download ga and it makes",
    "start": "2806000",
    "end": "2812640"
  },
  {
    "text": "ga available and you call send and you send it things on page load you send it the page view",
    "start": "2812640",
    "end": "2818160"
  },
  {
    "text": "event when the user hits the checkout button you send the checkout event whatever and we're just counting those",
    "start": "2818160",
    "end": "2823920"
  },
  {
    "text": "things how often they happen the agent just provides this api so we can record things",
    "start": "2823920",
    "end": "2830240"
  },
  {
    "text": "whenever an event is captured it needs to get forwarded off to your services so it knows what to do",
    "start": "2830240",
    "end": "2836240"
  },
  {
    "text": "storing it in a structure you can use elastic cabana again i've done that a bunch i have a system right now where",
    "start": "2836240",
    "end": "2842319"
  },
  {
    "text": "i built my own uh analytics api uh and i think it's kind of neat and it works",
    "start": "2842319",
    "end": "2847520"
  },
  {
    "text": "really well because i am kind of down on google analytics right now but obviously a lot of people use google",
    "start": "2847520",
    "end": "2853359"
  },
  {
    "text": "analytics and it's great cloudflare also has a free one if you use their stack or fathom",
    "start": "2853359",
    "end": "2859280"
  },
  {
    "text": "is a privacy first analytics provider i'm not affiliated with them in any way but their stuff is pretty cool",
    "start": "2859280",
    "end": "2867040"
  },
  {
    "text": "thousands more there's so many analytics services on the market but why should you bother spending your",
    "start": "2867440",
    "end": "2873599"
  },
  {
    "text": "time if you're not already doing some sort of analytics why should you care",
    "start": "2873599",
    "end": "2878720"
  },
  {
    "text": "the most important question that analytics answers and why it's important to combine that with performance and air",
    "start": "2878720",
    "end": "2884640"
  },
  {
    "text": "tracking is it tells us whether or not a change was acceptable to the users",
    "start": "2884640",
    "end": "2891040"
  },
  {
    "text": "so often when we see errors or performance degradations we're like well yeah that happened",
    "start": "2891040",
    "end": "2897040"
  },
  {
    "text": "it's not so bad i guess i mean it doesn't really impact things i can still use the app let's not fix it",
    "start": "2897040",
    "end": "2904319"
  },
  {
    "text": "analytics tells us whether or not we can get away with not fixing something or whether something is really really important and it's affecting the bottom",
    "start": "2904319",
    "end": "2910720"
  },
  {
    "text": "line here's an example from minnesota ice",
    "start": "2910720",
    "end": "2915838"
  },
  {
    "text": "analytics uses a concept called the funnel to tell us this and i know this is a scary marketing term for some of us",
    "start": "2916480",
    "end": "2922559"
  },
  {
    "text": "but it's really not that hard the funnel is basically a concept of like a bunch of things will",
    "start": "2922559",
    "end": "2930000"
  },
  {
    "text": "happen and we measure how many of them how many people start this series of events and how many people end this",
    "start": "2930000",
    "end": "2936640"
  },
  {
    "text": "series of events so if we define a funnel as hey all the traffic that lands on a page all the",
    "start": "2936640",
    "end": "2942640"
  },
  {
    "text": "traffic that lands on minnesota ice.com",
    "start": "2942640",
    "end": "2948240"
  },
  {
    "text": "some of those people will complete all the things they'll add the shop the add the ice to their cart they'll go to the",
    "start": "2948240",
    "end": "2954160"
  },
  {
    "text": "checkout page they'll give us a credit card number they'll give us a shipping address and they will complete and we will make some money off of them",
    "start": "2954160",
    "end": "2960720"
  },
  {
    "text": "and a bunch of other people are not going to do one or more of those steps and they will abandon the funnel they",
    "start": "2960720",
    "end": "2965839"
  },
  {
    "text": "will abandon the shopping cart this teaches us how effective our app is",
    "start": "2965839",
    "end": "2973040"
  },
  {
    "text": "at getting the user to complete a task which is ultimately what we're all trying to do right we're all trying to",
    "start": "2973040",
    "end": "2978480"
  },
  {
    "text": "make apps that are really effective at convincing people to do something",
    "start": "2978480",
    "end": "2985640"
  },
  {
    "text": "the checkout flow is super important and it's important for basically all e-commerce",
    "start": "2985760",
    "end": "2991200"
  },
  {
    "text": "customers so let's look at analytics there checkout is comprised of the checkout",
    "start": "2991200",
    "end": "2998160"
  },
  {
    "text": "page the integration with stripe and orders api so let's look how analytics will see",
    "start": "2998160",
    "end": "3004800"
  },
  {
    "text": "whether or not this is working if we define all of our if we define our funnel as all the traffic that first",
    "start": "3004800",
    "end": "3011839"
  },
  {
    "text": "lands on the checkout page the other steps in this funnel could be like they entered the payment method",
    "start": "3011839",
    "end": "3018000"
  },
  {
    "text": "they provided a shipping address and they selected a shipping method today if we looked at their analytics so",
    "start": "3018000",
    "end": "3025200"
  },
  {
    "text": "they've plugged in a google analytics agent they're counting one thing they're counting how many people end up on the",
    "start": "3025200",
    "end": "3030319"
  },
  {
    "text": "other side and they're taking the ratio between them they'll give us the conversion rate or how many people fall",
    "start": "3030319",
    "end": "3035520"
  },
  {
    "text": "all the way through 25 of them will come all the way to purchases which",
    "start": "3035520",
    "end": "3041040"
  },
  {
    "text": "is is really good for an e-commerce site they're actually they perform really really well",
    "start": "3041040",
    "end": "3046400"
  },
  {
    "text": "the rest the other 75 percent of people who start a checkout flow abandon in e-com it's called cart abandonment",
    "start": "3046400",
    "end": "3055240"
  },
  {
    "text": "so that's pretty good they're doing pretty good now when things change this number can",
    "start": "3056319",
    "end": "3061839"
  },
  {
    "text": "answer the question is that change acceptable earlier we saw in performance monitoring",
    "start": "3061839",
    "end": "3068400"
  },
  {
    "text": "that the checkout page used to perform in about four seconds when a user hit a page it would load in about four seconds",
    "start": "3068400",
    "end": "3075359"
  },
  {
    "text": "for most users but now that was down to 10 seconds",
    "start": "3075359",
    "end": "3080880"
  },
  {
    "text": "now 10 seconds i mean it's not the worst but it's not good it's going to feel kind of kind of slow kind of crappy",
    "start": "3080880",
    "end": "3088880"
  },
  {
    "text": "maybe maybe ice buyers are going to be okay with that is that acceptable analytics will answer that for us",
    "start": "3088880",
    "end": "3095359"
  },
  {
    "text": "because we can look and say okay when it was loading at four seconds that's when we had a 25 conversion rate",
    "start": "3095359",
    "end": "3102800"
  },
  {
    "text": "that was good we like that",
    "start": "3102800",
    "end": "3106920"
  }
]