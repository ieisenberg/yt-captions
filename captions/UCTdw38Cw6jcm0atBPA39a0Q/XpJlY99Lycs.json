[
  {
    "start": "0",
    "end": "96000"
  },
  {
    "text": "hello can you'all hear me awesome did everybody have good lunch yeah",
    "start": "6520",
    "end": "12040"
  },
  {
    "text": "everybody's gonna fall asleep now this'll be great no okay cool we're going to talk about CSS today and we're",
    "start": "12040",
    "end": "18240"
  },
  {
    "text": "specifically going to look at some of the new features that are either upcoming um or just put into the",
    "start": "18240",
    "end": "25119"
  },
  {
    "text": "browsers so the way I pick the set that I uh it's not an inclusive set there's more stuff coming out in CSS all the",
    "start": "25119",
    "end": "30920"
  },
  {
    "text": "time the way I picked what I'm going to present is basically I looked at does it have at least one browser that has it",
    "start": "30920",
    "end": "36440"
  },
  {
    "text": "implemented so that we can play with it like that was one of the criterias that I used because um and I specifically",
    "start": "36440",
    "end": "42960"
  },
  {
    "text": "went for ones where you don't have to enable Flags because I learned a long time ago I was just putting Flags in on",
    "start": "42960",
    "end": "48520"
  },
  {
    "text": "my on my main developer I use Chrome and so I was putting it mainly on my Chrome machine and then I then I was getting",
    "start": "48520",
    "end": "54559"
  },
  {
    "text": "you know QA telling me well it might work on your machine but it doesn't work on anybody else's and so I learned to",
    "start": "54559",
    "end": "60320"
  },
  {
    "text": "have um different browsers for different flags like so I have the Developer Edition for Canary for where I put my",
    "start": "60320",
    "end": "66240"
  },
  {
    "text": "flags and my other one which is you know the standard um everyday people has um",
    "start": "66240",
    "end": "71880"
  },
  {
    "text": "so I specifically picked ones that don't require Flags so that they can be tested without messing up you know environments",
    "start": "71880",
    "end": "77759"
  },
  {
    "text": "and ending up in that situation um I am Martine dowon I am uh been a front-end",
    "start": "77759",
    "end": "83200"
  },
  {
    "text": "developer for basically my entire career I started out in Psychology moved into code and then ended up as a US UI",
    "start": "83200",
    "end": "90720"
  },
  {
    "text": "designer developer and mainly focus on CSS and accessibility so let's get right on to",
    "start": "90720",
    "end": "97439"
  },
  {
    "text": "it uh some of the very some of the new cool stuff that came out recently is a bunch of new pseudo classes is where has",
    "start": "97439",
    "end": "104960"
  },
  {
    "text": "and a change to the inth syntax so let's take a look at those is is um basically",
    "start": "104960",
    "end": "111320"
  },
  {
    "text": "takes a list of arguments and allows us to go ahead and check uh against that",
    "start": "111320",
    "end": "117159"
  },
  {
    "text": "list if any of the uh elements in inside of it or any of the selectors inside of",
    "start": "117159",
    "end": "122479"
  },
  {
    "text": "it apply and if it applies then the code gets applied the big difference between",
    "start": "122479",
    "end": "127600"
  },
  {
    "text": "is and where isn't its specificity so a crit recap on how specificity actually",
    "start": "127600",
    "end": "133560"
  },
  {
    "text": "uh is calculated is you basically have and I omitted it in the this context but",
    "start": "133560",
    "end": "138760"
  },
  {
    "text": "technically you have a fourth number which is any styles that are directly applied to the element via Styles",
    "start": "138760",
    "end": "144280"
  },
  {
    "text": "element that would be the fourth fourth number but basically you have IDs class pseudo class and attribute and then El",
    "start": "144280",
    "end": "149800"
  },
  {
    "text": "elements you get three uh you get your three numbers and basically the biggest number wins um so in this particular",
    "start": "149800",
    "end": "157120"
  },
  {
    "text": "case we can look at the specificity uh just a paragraph tag is just a tag so",
    "start": "157120",
    "end": "162280"
  },
  {
    "text": "it's going to have 0 01 content is 0 one 0 because it's a class and then an ID",
    "start": "162280",
    "end": "167400"
  },
  {
    "text": "would be one z z therefore ID is the most specific thing that we have now",
    "start": "167400",
    "end": "172760"
  },
  {
    "text": "with that what happen the big difference between is and where is that where no matter what you have in that list the",
    "start": "172760",
    "end": "178519"
  },
  {
    "text": "specificity for the select stays zero so it's super easy to override so it's a really nice way to get like a base set",
    "start": "178519",
    "end": "185360"
  },
  {
    "text": "of of styles on a set of elements that is going to be super easy to customize later on for a corner case or whatever",
    "start": "185360",
    "end": "190680"
  },
  {
    "text": "else is is on the other hand whatever the most specific thing in the list is",
    "start": "190680",
    "end": "195720"
  },
  {
    "text": "so in this case it would be the the copy right is going to end up being what takes uh how specific that selector is",
    "start": "195720",
    "end": "203480"
  },
  {
    "text": "so it's very easy to end up in a situation where that's going to be very difficult to override because now you're",
    "start": "203480",
    "end": "208840"
  },
  {
    "text": "dealing with you know a specificity as soon as you have an ID in there for example it's going to be a very high",
    "start": "208840",
    "end": "214120"
  },
  {
    "text": "specificity you're going to have a hard time with writing anything else against it afterwards so let's look at a",
    "start": "214120",
    "end": "219480"
  },
  {
    "text": "practical example one that I love to use with is and wear um is to go ahead and set my links because then I can just go",
    "start": "219480",
    "end": "226280"
  },
  {
    "text": "ahead and put a wear link or visit it and have my and have my list so this is really convenient when you end up with",
    "start": "226280",
    "end": "232720"
  },
  {
    "text": "things like especially if that selector is going to be in the middle of a set of selectors so like you say you have may",
    "start": "232720",
    "end": "238200"
  },
  {
    "text": "be my container and then you you know a several list of things inside of that container then you're not having to",
    "start": "238200",
    "end": "243480"
  },
  {
    "text": "write container a link container a visited you can just say container a and then where link visited or whatever else",
    "start": "243480",
    "end": "249720"
  },
  {
    "text": "is so that's a really convenient way to use that and kind of helps with that that repetitiveness in terms of the code",
    "start": "249720",
    "end": "256160"
  },
  {
    "text": "but the output would be very similar just to know at the end of this I do have a slide that has a QR code with a",
    "start": "256160",
    "end": "262840"
  },
  {
    "text": "GitHub repo with all of the code that is presented in the talk so you can see like the examples as they",
    "start": "262840",
    "end": "268600"
  },
  {
    "text": "work um next click click click no click",
    "start": "268600",
    "end": "275479"
  },
  {
    "text": "click click okay so the um support on this as I said a lot of what I'm um",
    "start": "275479",
    "end": "280600"
  },
  {
    "text": "going to be talking about today has very limited support so uh for each of the concepts I'll go ahead and show the",
    "start": "280600",
    "end": "286039"
  },
  {
    "text": "support uh these I pulled yesterday so they should still be legit but basically I pulled of the all",
    "start": "286039",
    "end": "293280"
  },
  {
    "text": "of these off of can I use so um that's a very good resource and you see that for the most part we're generally okay um",
    "start": "293280",
    "end": "300960"
  },
  {
    "text": "you're looking at 91% of the population so it's pretty safe to start using those depending on your use case I'm just",
    "start": "300960",
    "end": "306639"
  },
  {
    "text": "ignoring IE as part of this conversation because I's dead I think we can all agree on that yes sign of Life yeah okay",
    "start": "306639",
    "end": "313759"
  },
  {
    "text": "I don't know about y'all but I celebrated I I mean legitimately celebrated um all right next one is has",
    "start": "313759",
    "end": "322479"
  },
  {
    "text": "so has is really fun because what it allows to do is check for if something",
    "start": "322479",
    "end": "327520"
  },
  {
    "text": "if a descendant or a sibling has has um uh has a particular selector so back in",
    "start": "327520",
    "end": "334919"
  },
  {
    "text": "and I'm going to date myself but that's okay how many of you remember CSS 2 how many of you remember CSS like when",
    "start": "334919",
    "end": "342440"
  },
  {
    "text": "CSS 3 came out what was y''s favorite feature out of css3 for me it was rounded Corners I",
    "start": "342440",
    "end": "349280"
  },
  {
    "text": "don't know I know it's lame but it was rounded Corners anyway and I remember back then saying very specifically as I",
    "start": "349280",
    "end": "355479"
  },
  {
    "text": "was helping uh or or mentoring other developers you will never be able to select based on The Descendant it'll",
    "start": "355479",
    "end": "361520"
  },
  {
    "text": "never happen just forget about it it's never going to happen well I guess I get to eat my words and go find all of those",
    "start": "361520",
    "end": "367360"
  },
  {
    "text": "people I've told that to because it's now we can actually do that so let's look at a at a concrete example of this",
    "start": "367360",
    "end": "373120"
  },
  {
    "text": "and I have two examples for this one and the first one is and I love to use it for this is label has required so if you",
    "start": "373120",
    "end": "380479"
  },
  {
    "text": "have a label with an nested input I can look at the required property and put",
    "start": "380479",
    "end": "386560"
  },
  {
    "text": "that little red asterisk that always gets forgotten and it's never consistent because we always forget to put it on",
    "start": "386560",
    "end": "391840"
  },
  {
    "text": "and just programmatically do that um so that we can have the little red asteris before all of our required Fields so",
    "start": "391840",
    "end": "398560"
  },
  {
    "text": "that allows me to look at inside of my label if it has a required and then do something about it what's really cool",
    "start": "398560",
    "end": "405680"
  },
  {
    "text": "about this is you can also do it when it comes to Sibling relationships so what if I don't Nest my inputs what if I",
    "start": "405680",
    "end": "412479"
  },
  {
    "text": "simply have label input I can actually put combinators inside of here and",
    "start": "412479",
    "end": "417680"
  },
  {
    "text": "inside of my has to say hey I'm looking for a label that has a sibling of something with the required property and",
    "start": "417680",
    "end": "424879"
  },
  {
    "text": "then go ahead and ask my asteris so we can totally start putting combinators and for those who are um used to sass",
    "start": "424879",
    "end": "431840"
  },
  {
    "text": "like we don't put the Amper sand for saying the self like we can just go ahead and just go straight into the",
    "start": "431840",
    "end": "437599"
  },
  {
    "text": "combinator I know this looks kind of weird because we're used to having something before it um but this",
    "start": "437599",
    "end": "443000"
  },
  {
    "text": "absolutely works the downside to has is Firefox and Firefox still does not",
    "start": "443000",
    "end": "449960"
  },
  {
    "text": "support it and does not seem to it's um it does have a flag uh I have yet to",
    "start": "449960",
    "end": "456280"
  },
  {
    "text": "make it work I don't know if the flag is buggy or what the in the world is going on with it I've yet to even with the",
    "start": "456280",
    "end": "462840"
  },
  {
    "text": "flag en able get it to work but basically if you have to support Firefox you're still going to have to wait on",
    "start": "462840",
    "end": "468280"
  },
  {
    "text": "that one bottle of",
    "start": "468280",
    "end": "473120"
  },
  {
    "text": "water next all right the next Comin uh",
    "start": "473639",
    "end": "479800"
  },
  {
    "text": "selector we're going to look at is nth child which now has the of ability so",
    "start": "479800",
    "end": "485000"
  },
  {
    "text": "this of keyword what that allows us to do a specifically go for look for something with a particular attribute to",
    "start": "485000",
    "end": "493560"
  },
  {
    "text": "it so in this case I'm looking for the second child that has an attri that has",
    "start": "493560",
    "end": "500440"
  },
  {
    "text": "a class of active so if we look we have the first one we have the second third",
    "start": "500440",
    "end": "506560"
  },
  {
    "text": "and I put it on Fifth so second third and fifth have the active attribute and so if I do an a n Li n Child 2 of active",
    "start": "506560",
    "end": "515518"
  },
  {
    "text": "it's only going to consider the ones with the active class that's super",
    "start": "515519",
    "end": "521000"
  },
  {
    "text": "powerful if you end up with a list of things where you're actually looking for like if you wanted to do like first",
    "start": "521000",
    "end": "526839"
  },
  {
    "text": "child is first child but if you're looking for um let's say you have a list of blog posts and you want the first of",
    "start": "526839",
    "end": "533640"
  },
  {
    "text": "a specific type so maybe the first one that has of I my blog is categorized by",
    "start": "533640",
    "end": "539640"
  },
  {
    "text": "um by technology so it's like if I wanted to do specifically call out the first CSS one I could go ahead and look",
    "start": "539640",
    "end": "545839"
  },
  {
    "text": "for my first one that has a class of CSS even if it's not the first one in the",
    "start": "545839",
    "end": "551640"
  },
  {
    "text": "list for example any questions so far feel free to like raise your hands",
    "start": "551640",
    "end": "557680"
  },
  {
    "text": "up because it's a lot easier for me to answer the question when the code is up than to go find the slide later so",
    "start": "557680",
    "end": "563040"
  },
  {
    "text": "definitely go ahead and ask um this one's actually fairly well supported it is still considered experimental and and",
    "start": "563040",
    "end": "569519"
  },
  {
    "text": "Opera but we're looking at a pretty decent um a pretty decent support on it",
    "start": "569519",
    "end": "575000"
  },
  {
    "text": "so that one's uh pretty much good to go container queries who has actually",
    "start": "575000",
    "end": "580839"
  },
  {
    "start": "578000",
    "end": "948000"
  },
  {
    "text": "gotten to play with container queries who's gotten to play with them in the wild",
    "start": "580839",
    "end": "587079"
  },
  {
    "text": "yay nice um so container queries um are basically allow us to consider the size",
    "start": "587079",
    "end": "595320"
  },
  {
    "text": "um there so there's two types there's uh size based and style-based we'll talk about style based in a minute I'm going to start with the size based because",
    "start": "595320",
    "end": "601480"
  },
  {
    "text": "that one is much better supported at this time and so basically it allows us to look at the size of a container and",
    "start": "601480",
    "end": "607399"
  },
  {
    "text": "determine and and set Styles accordingly it's it's a media query essentially right um and it allow and it works very",
    "start": "607399",
    "end": "613959"
  },
  {
    "text": "similarly in terms of what you're going to put in here is going be the same thing that you would put in any kind of media query your Min your max your and",
    "start": "613959",
    "end": "620920"
  },
  {
    "text": "so on and so forth um the thing that you need to do though is you have to make sure to define the container you have to",
    "start": "620920",
    "end": "627480"
  },
  {
    "text": "decide what element is going to to be containered so the browser knows what to listen to right and that we're going to",
    "start": "627480",
    "end": "632880"
  },
  {
    "text": "do using container type you can optionally name the container so if you have multiple containers that need to",
    "start": "632880",
    "end": "638519"
  },
  {
    "text": "act differently in different sizes you can name them you don't have to um the",
    "start": "638519",
    "end": "643680"
  },
  {
    "text": "container type you can do inline uh inline size or block and so what they've done is they've moved away from the",
    "start": "643680",
    "end": "650360"
  },
  {
    "text": "horizontal versus vertical type of language and so now we're talking about inline versus block and that has to do",
    "start": "650360",
    "end": "656600"
  },
  {
    "text": "with the direction of writing so if we think about English for example where we write or where we write from left to",
    "start": "656600",
    "end": "663200"
  },
  {
    "text": "right had to think about that one um where we write from left to right our inline is going to be um your uh left",
    "start": "663200",
    "end": "670639"
  },
  {
    "text": "your width and your block is going to be your height right um in terms of if you",
    "start": "670639",
    "end": "676160"
  },
  {
    "text": "were to say take um some of the Asian languages um write can write top to",
    "start": "676160",
    "end": "681519"
  },
  {
    "text": "bottom right in that case if your language is going from top to bottom then your inline would actually be your",
    "start": "681519",
    "end": "687040"
  },
  {
    "text": "vertical and your block would be your horizontal so it's all based on the language Direction um flexbox works that",
    "start": "687040",
    "end": "693720"
  },
  {
    "text": "way as well where Flex start versus Flex end it's all related to your your direction so if you're writing from",
    "start": "693720",
    "end": "699600"
  },
  {
    "text": "right to left it's inverted it's gets a little trippy if it's something you're not Paradigm you're not used to but",
    "start": "699600",
    "end": "705360"
  },
  {
    "text": "anywh who so your container size can be inline or can be size so inline is going to be your your horizontal size is going",
    "start": "705360",
    "end": "711600"
  },
  {
    "text": "to be both both ways so how do we apply that well we can",
    "start": "711600",
    "end": "716959"
  },
  {
    "text": "use I'm using the example of this list of Tex tags which I've basically put a grid layout together and just stuck the",
    "start": "716959",
    "end": "722320"
  },
  {
    "text": "tags in two different places and so what I'm looking at is I've set my tag",
    "start": "722320",
    "end": "727360"
  },
  {
    "text": "container over here my div class tags to being a type inline so it's going to look at the width um because it's what's",
    "start": "727360",
    "end": "734199"
  },
  {
    "text": "in lur myum but let's pretend it's English um and it's going to go ahead",
    "start": "734199",
    "end": "739399"
  },
  {
    "text": "and based on based on the container width I'm going to go ahead and do a display Flex instead of having them",
    "start": "739399",
    "end": "745079"
  },
  {
    "text": "vertically um stacked now notice that I actually put a div around here and",
    "start": "745079",
    "end": "751160"
  },
  {
    "text": "that's because this being a media query the it needs to have something to select",
    "start": "751160",
    "end": "757440"
  },
  {
    "text": "in order to put you know your Styles against so you can't actually put your Styles directly on the container because",
    "start": "757440",
    "end": "764279"
  },
  {
    "text": "it's not the container is what's giving you the query now you have to go ahead and select something inside of that",
    "start": "764279",
    "end": "770760"
  },
  {
    "text": "container so it's as sometimes in terms of code like when I first started playing with container queries I kept on",
    "start": "770760",
    "end": "776199"
  },
  {
    "text": "like why can't I just put a different background color on this or whatever and it's because it's a media query right",
    "start": "776199",
    "end": "781440"
  },
  {
    "text": "you have to you still have to put a selector here and it has to be a child of that container in some way",
    "start": "781440",
    "end": "790360"
  },
  {
    "text": "right um container queries are at this point",
    "start": "790760",
    "end": "796199"
  },
  {
    "text": "pretty well supported when it comes to size um obviously it depends on how far back your users are um but generally",
    "start": "796199",
    "end": "803839"
  },
  {
    "text": "speaking we're pretty much there uh when it comes to sty queries however that's going to be a different story um and",
    "start": "803839",
    "end": "810839"
  },
  {
    "text": "very different so there's um currently the ones that I was able to get to work in at least a browser are the property",
    "start": "810839",
    "end": "818480"
  },
  {
    "text": "um custom property ones where we actually check for does the element have a custom property and you can check it",
    "start": "818480",
    "end": "824680"
  },
  {
    "text": "against the property and its value um there I think it looks like based on the",
    "start": "824680",
    "end": "830600"
  },
  {
    "text": "specification we may be able to do it later on on like specific sty a lot more",
    "start": "830600",
    "end": "836320"
  },
  {
    "text": "options in terms of what styles we're looking for but current apparently the only one that I was able to get at least",
    "start": "836320",
    "end": "841600"
  },
  {
    "text": "a browser to have something on was the custom property one so let's take a look at how that might work over here we have",
    "start": "841600",
    "end": "847800"
  },
  {
    "text": "an example of a list of think like um I had to take my car to the shop and so I",
    "start": "847800",
    "end": "853160"
  },
  {
    "text": "was like O Let's do little cards about a car cars at a shop being worked on right and so it was like um so we have the",
    "start": "853160",
    "end": "859839"
  },
  {
    "text": "ones where the users are waiting for it it's done or it's in progress right and so based on the fact that in in the I",
    "start": "859839",
    "end": "867759"
  },
  {
    "text": "can put a style that tells it hey the status is in progress and then I can query for that and make edits on my",
    "start": "867759",
    "end": "873720"
  },
  {
    "text": "style in this case I'm changing the color and the icon based on the style being applied to it this could also be",
    "start": "873720",
    "end": "879480"
  },
  {
    "text": "incredibly powerful for things like um if you're doing theme based especially uh you know especially if you're doing",
    "start": "879480",
    "end": "885480"
  },
  {
    "text": "something a little bit more fancy than light and dark mode um if you're skinning an app for maybe a white uh",
    "start": "885480",
    "end": "891880"
  },
  {
    "text": "White la bing an application where you can have based on the user you know what your brand is going to be or something",
    "start": "891880",
    "end": "897600"
  },
  {
    "text": "like that um this could be very powerful because then you can just check what that value is and go forth and Conquer",
    "start": "897600",
    "end": "902839"
  },
  {
    "text": "and have some very specific styles on that support support not great Safari",
    "start": "902839",
    "end": "910880"
  },
  {
    "text": "and Firefox are out um so that that's a pretty large percent of percentage of your use Cas use case at that point",
    "start": "910880",
    "end": "917800"
  },
  {
    "text": "they're looking at globally right now only about 65% of the population has that so that's very much a play with uh",
    "start": "917800",
    "end": "924160"
  },
  {
    "text": "unless you've got the luxury of being told yeah the only thing we support is Chrome um yeah I've been there I've had a couple",
    "start": "924160",
    "end": "931240"
  },
  {
    "text": "contracts like that but usually they're internal tools um",
    "start": "931240",
    "end": "936959"
  },
  {
    "text": "where the company says this is an internal tool and you know the only thing it supports is X and that's",
    "start": "936959",
    "end": "942880"
  },
  {
    "text": "actually a really fun situation to be in because you get to play with a lot more new",
    "start": "942880",
    "end": "948079"
  },
  {
    "start": "948000",
    "end": "1080000"
  },
  {
    "text": "toys um nesting so who all uses SAS or less or",
    "start": "948079",
    "end": "954440"
  },
  {
    "text": "Su equivalent so we're all familiar with if we've played with those we know how cool nesting is nesting is now coming to",
    "start": "954440",
    "end": "961000"
  },
  {
    "text": "CSS so that'll be super cool the thing is though um if nesting is something",
    "start": "961000",
    "end": "966600"
  },
  {
    "text": "that you often do iness or less notice that even though iness or L this would be redundant I wouldn't need to actually",
    "start": "966600",
    "end": "973440"
  },
  {
    "text": "go ahead and say I want the self and then you know whatever in the CSS as far",
    "start": "973440",
    "end": "979839"
  },
  {
    "text": "as I can in CSS nesting as far as I can tell you would you have to put it in otherwise it doesn't know what to do",
    "start": "979839",
    "end": "985399"
  },
  {
    "text": "with it um so worth noting that that is definitely a thing so the above code and",
    "start": "985399",
    "end": "990600"
  },
  {
    "text": "the below code are basically um the the same um as much as I forgot to take that",
    "start": "990600",
    "end": "997240"
  },
  {
    "text": "out you actually don't need a container type in this particular case um unlike the um container um unlike the size",
    "start": "997240",
    "end": "1005680"
  },
  {
    "text": "container query uh I totally just forgot to take it out on the slide in the copy paste you don't actually have to define",
    "start": "1005680",
    "end": "1011480"
  },
  {
    "text": "the container in this uh any kind of container or anything in this case it just works",
    "start": "1011480",
    "end": "1017319"
  },
  {
    "text": "um yeah any questions feel like I'm going really fast okay um here's an example of",
    "start": "1017319",
    "end": "1025720"
  },
  {
    "text": "basically being able to Nest all the thing notice that I was able to oh that's why I had the container in there notice that I can go ahead and Nest my",
    "start": "1025720",
    "end": "1032438"
  },
  {
    "text": "contain my media query inside of the nesting as well that totally works so in this case I'm saying hey my container",
    "start": "1032439",
    "end": "1038520"
  },
  {
    "text": "although I still have to define the container if I'm going to Nest a container I still have to do that this the same rules apply but I can go ahead",
    "start": "1038520",
    "end": "1044798"
  },
  {
    "text": "and Nest uh media queries I can nest whatever I want inside of my nest so that works very similar to Sasser lless",
    "start": "1044799",
    "end": "1051160"
  },
  {
    "text": "in that regard except for that hole you have to have the emper sand does that make sense to everybody clear as much",
    "start": "1051160",
    "end": "1057360"
  },
  {
    "text": "yes okay support um Firefox you're going",
    "start": "1057360",
    "end": "1062400"
  },
  {
    "text": "to be hearing this a lot I used to like um but at least it is on the road map",
    "start": "1062400",
    "end": "1068840"
  },
  {
    "text": "it's coming so there's at least hope it's coming so that'll be cool um so far you're looking about 75% of the",
    "start": "1068840",
    "end": "1075320"
  },
  {
    "text": "population so back to that whole it depends on what you are saying you are going to",
    "start": "1075320",
    "end": "1080440"
  },
  {
    "start": "1080000",
    "end": "1542000"
  },
  {
    "text": "support typography who here loves typography yay we're going to do some",
    "start": "1080440",
    "end": "1086559"
  },
  {
    "text": "fun stuff yes this one of my it's it's one of my like pet topics um so the",
    "start": "1086559",
    "end": "1092720"
  },
  {
    "text": "first one is text balance uh which basically I've so there's limitations to text balance the first one is the number",
    "start": "1092720",
    "end": "1099640"
  },
  {
    "text": "of lines like if you put text balance on a huge paragraph it's not going to work out for you because there's a cap as to",
    "start": "1099640",
    "end": "1105880"
  },
  {
    "text": "how long how many lines you've got before it's like yeah I don't need to balance this it's a bloody paragraph I'm",
    "start": "1105880",
    "end": "1111400"
  },
  {
    "text": "moving on uh for Chrome it's four or chromium it's four lines uh each but the",
    "start": "1111400",
    "end": "1116640"
  },
  {
    "text": "where the cap is is browser specific um but basically what it does is you do a",
    "start": "1116640",
    "end": "1122080"
  },
  {
    "text": "text WP balance this is without it this is with it it's going to take and try to make all of the lines about the same",
    "start": "1122080",
    "end": "1128559"
  },
  {
    "text": "size uh works really great for headers um those sorts of things when you don't have to have that you know that one",
    "start": "1128559",
    "end": "1133880"
  },
  {
    "text": "character that's like because the line's too long and it's hanging on the end uh looks kind of of ugly um that allows it",
    "start": "1133880",
    "end": "1140440"
  },
  {
    "text": "to not do that um the thing to keep in mind though is that it does not prevent",
    "start": "1140440",
    "end": "1145880"
  },
  {
    "text": "really long lines right so if you're trying to to decrease your if you're",
    "start": "1145880",
    "end": "1151440"
  },
  {
    "text": "trying to make it nice and Balan in a and not take up the full width of the screen you're still going to have to cap",
    "start": "1151440",
    "end": "1156679"
  },
  {
    "text": "your your your screen like the width right it's not going to do anything to affect the width so it's only going to",
    "start": "1156679",
    "end": "1162480"
  },
  {
    "text": "take effect once you start wrapping naturally does that make sense okay",
    "start": "1162480",
    "end": "1168320"
  },
  {
    "text": "support is garbage um however this is one of those that I went I've gone ahead",
    "start": "1168320",
    "end": "1174200"
  },
  {
    "text": "and started putting it in because it fill it doesn't do anything it doesn't break anything if you're going to put it",
    "start": "1174200",
    "end": "1179840"
  },
  {
    "text": "that's the nice thing with um with a lot of these is it's not going to break anything uh if you go ahead and put it in and when it does become available in",
    "start": "1179840",
    "end": "1186880"
  },
  {
    "text": "that browser it'll just magically start working um so that is one of those that's definitely really good for that",
    "start": "1186880",
    "end": "1192640"
  },
  {
    "text": "uh because obviously Safari and Firefox are like nope so you're looking only looking about again half the population",
    "start": "1192640",
    "end": "1199320"
  },
  {
    "text": "will have access to that initial letter um initial letter it",
    "start": "1199320",
    "end": "1207240"
  },
  {
    "text": "comes in combination with first letter um and this is really helpful for doing Drop caps does everybody know what a",
    "start": "1207240",
    "end": "1213039"
  },
  {
    "text": "drop cap is Yes No Maybe So I don't know all right it's that first letter that um",
    "start": "1213039",
    "end": "1219480"
  },
  {
    "text": "for those who uh I've ever seen those illuminations that nice big letter that's at the beginning and super ornate",
    "start": "1219480",
    "end": "1224679"
  },
  {
    "text": "and pretty um historically to do that it was like a game of floats and random",
    "start": "1224679",
    "end": "1230240"
  },
  {
    "text": "like I don't know um I have an entire talk that I can pretty much throw away because of this property which is uh",
    "start": "1230240",
    "end": "1236200"
  },
  {
    "text": "which shows exactly how to do the float and the alignments and the change because you're using a different font or whatever now it's just like oh that's",
    "start": "1236200",
    "end": "1242480"
  },
  {
    "text": "cool we have this magical property which take two numbers it's basically going to take how big do you want the letter and",
    "start": "1242480",
    "end": "1248280"
  },
  {
    "text": "these are number of lines so these are going to be in ajur you can't do two and a half lines it wants an iner and then",
    "start": "1248280",
    "end": "1254440"
  },
  {
    "text": "how and then the sink which is where on the alignment like how many lines up or down you're going to go in terms of the",
    "start": "1254440",
    "end": "1260520"
  },
  {
    "text": "letter so how this works is this first letter over here I went ahead and just put one number so it's because I only",
    "start": "1260520",
    "end": "1267159"
  },
  {
    "text": "put one number it assumes that it's the same number for both so it's going to be three lines one two three and a sync of",
    "start": "1267159",
    "end": "1272679"
  },
  {
    "text": "three so it's going to ahead and take the line down three three lines so that it's basically in line I did have to go",
    "start": "1272679",
    "end": "1278159"
  },
  {
    "text": "ahead and give it a little bit of margin um because otherwise the text is really really close but that's easy enough um",
    "start": "1278159",
    "end": "1284840"
  },
  {
    "text": "the CH property is fairly recent but it's been around for a little bit um for those who don't know what it is it is",
    "start": "1284840",
    "end": "1290799"
  },
  {
    "text": "the it looks at the width of the zero for the alphabet that you're using and",
    "start": "1290799",
    "end": "1296600"
  },
  {
    "text": "that is what its value is so it's a it's a unit of measure that is relative to specifically to the whatever alphabet",
    "start": "1296600",
    "end": "1303159"
  },
  {
    "text": "you're using and whatever size it is so it's relative to your current size alphabet weight etc etc so it's really",
    "start": "1303159",
    "end": "1309600"
  },
  {
    "text": "nice in terms of creating U margin and padding if you want it to be relative to the size of the text you're currently",
    "start": "1309600",
    "end": "1315559"
  },
  {
    "text": "using um so that's so in this this particular case it's a perfect use case for using CH because it's going to be",
    "start": "1315559",
    "end": "1322000"
  },
  {
    "text": "relative if I change whatever this is the default sansera for Chrome but if I",
    "start": "1322000",
    "end": "1327480"
  },
  {
    "text": "changed it to something fancy or whatever it would specifically go for that but it has the same limitations as",
    "start": "1327480",
    "end": "1332840"
  },
  {
    "text": "M's which it's going to go with whatever your current so if you have two different let's say I wanted to put a",
    "start": "1332840",
    "end": "1338240"
  },
  {
    "text": "different style on this if I wanted to put it like a fancy cursive something or",
    "start": "1338240",
    "end": "1343279"
  },
  {
    "text": "another right to make it super fancy um then it the CH would be relative to that",
    "start": "1343279",
    "end": "1348880"
  },
  {
    "text": "Al the whatever the that current letter is and not the rest so it's got that that same as M's right where it's",
    "start": "1348880",
    "end": "1355559"
  },
  {
    "text": "depending on what you're in um the second one um I went ahead and specified a different line in sync so it is still",
    "start": "1355559",
    "end": "1362240"
  },
  {
    "text": "three tall but I gave it a sync of two so it sticks up right because it's only going down two lines and but there you",
    "start": "1362240",
    "end": "1368440"
  },
  {
    "text": "go but it's line magic um I did try playing with negatives negative does not seem to do anything so you can't shrink",
    "start": "1368440",
    "end": "1374919"
  },
  {
    "text": "it and you can't make it go up but there you go you're looking looking for in positive indes",
    "start": "1374919",
    "end": "1381640"
  },
  {
    "text": "essentially support is terrible um so the the end lbl is it",
    "start": "1381679",
    "end": "1390000"
  },
  {
    "text": "does you can there's more to it coming as really the end lbl and so it's a limited implementation in Chrome you can",
    "start": "1390000",
    "end": "1397240"
  },
  {
    "text": "get it to work um the example I showed here does work in Chrome I've not tested it in the others but basically you're",
    "start": "1397240",
    "end": "1403840"
  },
  {
    "text": "looking at very limited um fancy and I did manage to make it work without any",
    "start": "1403840",
    "end": "1409000"
  },
  {
    "text": "pre there's no prefixes on this one like this exact code will work in Chrome outside of that it's pretty well",
    "start": "1409000",
    "end": "1417039"
  },
  {
    "text": "garbage so it's it has to do with um one it",
    "start": "1422679",
    "end": "1429720"
  },
  {
    "text": "the if you want to change like it looks like the spe as far as I can tell and",
    "start": "1429720",
    "end": "1435679"
  },
  {
    "text": "I'd have to reread the specification it looks like eventually you should be able to actually change the font as part of",
    "start": "1435679",
    "end": "1440799"
  },
  {
    "text": "the whole entire thing so that it can do instead of like",
    "start": "1440799",
    "end": "1446080"
  },
  {
    "text": "um like okay the old version before the before this was basically to take the",
    "start": "1446080",
    "end": "1452720"
  },
  {
    "text": "letter do first uh first line first letter or first to type first uh whatever uh first letter and then go",
    "start": "1452720",
    "end": "1459679"
  },
  {
    "text": "ahead and change your font change your size change your line height change your sty and change the um whatever alphabet",
    "start": "1459679",
    "end": "1466240"
  },
  {
    "text": "for fancy or whatever uh font you were using for something fancy and then play",
    "start": "1466240",
    "end": "1471360"
  },
  {
    "text": "around with it and adjust it until it floated and then play around and adjust it until it looked right whether you was",
    "start": "1471360",
    "end": "1476480"
  },
  {
    "text": "using margin or position relative or whatever but basically fiddle with it until it looked right was pretty much",
    "start": "1476480",
    "end": "1482880"
  },
  {
    "text": "the magic um it looks like what they want to be able to do is eventually get the font in there so that we we don't",
    "start": "1482880",
    "end": "1490080"
  },
  {
    "text": "end up with those line Heights line height issues because in the construction of a font the size of the",
    "start": "1490080",
    "end": "1495559"
  },
  {
    "text": "glyph how tall how so the size of the glyph itself and the amount of white",
    "start": "1495559",
    "end": "1500720"
  },
  {
    "text": "space that's included in the size of that glyph though the line height and everything is all defined in the font so",
    "start": "1500720",
    "end": "1507919"
  },
  {
    "text": "if you have a 12o font that is um let's say a 12-point font Times New Roman and",
    "start": "1507919",
    "end": "1514880"
  },
  {
    "text": "a 12o font uh comic Sands if you were to put those two the same paragraph in both",
    "start": "1514880",
    "end": "1520480"
  },
  {
    "text": "you'll notice they're not the same size right you're not going to have it's not going to take up the same amount of space um and so that's that's I think",
    "start": "1520480",
    "end": "1527320"
  },
  {
    "text": "they're going down that direction of fixing that but don't don't quote me on that I haven't dug too far deep in",
    "start": "1527320",
    "end": "1533880"
  },
  {
    "text": "because I mean the support is still ultimate garage but it looks really",
    "start": "1533880",
    "end": "1541200"
  },
  {
    "text": "cool all right transform properties who here likes animations because a lot of",
    "start": "1541200",
    "end": "1546799"
  },
  {
    "start": "1542000",
    "end": "1652000"
  },
  {
    "text": "this next is going to be about animations this is super simple and",
    "start": "1546799",
    "end": "1552399"
  },
  {
    "text": "super cool what we used to have to write as transform yada ya they're not properties we can just write them",
    "start": "1552399",
    "end": "1557799"
  },
  {
    "text": "properties which is Mak from a from a pure like um functionality perspective",
    "start": "1557799",
    "end": "1564640"
  },
  {
    "text": "they're exactly the same they take the same properties they do the same they do the same thing um like and they have all",
    "start": "1564640",
    "end": "1570760"
  },
  {
    "text": "of the same you know amount like this whole thing where we take up space versus don't take up space and all that",
    "start": "1570760",
    "end": "1576279"
  },
  {
    "text": "fun stuff it's all the same as it was before it's just a change in um both of them still work I don't they're not",
    "start": "1576279",
    "end": "1582600"
  },
  {
    "text": "deprecating the other one it's just a different way of writing it that's a little bit more shorthand and for some",
    "start": "1582600",
    "end": "1587679"
  },
  {
    "text": "people a little bit easier to read um but yeah so that's",
    "start": "1587679",
    "end": "1592840"
  },
  {
    "text": "cool and the support is actually decent I know",
    "start": "1593080",
    "end": "1598360"
  },
  {
    "text": "right it's pretty the last time I'm going to say the I know there's one more with good support one more",
    "start": "1598360",
    "end": "1605880"
  },
  {
    "text": "yes",
    "start": "1607559",
    "end": "1610559"
  },
  {
    "text": "yeah I think you do Transition rotate because at that point that's your property right at because you're in your",
    "start": "1612720",
    "end": "1619080"
  },
  {
    "text": "transform you're targeting a specific property um same with your animates so you're it's oh well animates a key frame",
    "start": "1619080",
    "end": "1626399"
  },
  {
    "text": "anyway but you can totally put these in key frames but yeah you're it's the property name so yeah I would assume it",
    "start": "1626399",
    "end": "1631640"
  },
  {
    "text": "would but I would assume that if you're going to do that you have to use it as a property like you can't do a transform",
    "start": "1631640",
    "end": "1638080"
  },
  {
    "text": "rotate if you if you can't use rotate if you're using",
    "start": "1638080",
    "end": "1643320"
  },
  {
    "text": "you'd have to do transform if you're using the transform and you'd have to do rotate if using the",
    "start": "1643320",
    "end": "1648960"
  },
  {
    "text": "rotate yeah um so yeah that one actually good",
    "start": "1648960",
    "end": "1654720"
  },
  {
    "start": "1652000",
    "end": "1967000"
  },
  {
    "text": "support scroll driven animations those are super fun um fair warning before I",
    "start": "1654720",
    "end": "1660000"
  },
  {
    "text": "put these I have gifs they go on forever if that's not a thing for you I apologize but there is a lot a decent",
    "start": "1660000",
    "end": "1665960"
  },
  {
    "text": "bit of motion on the upcoming slides all right so scroll timeline",
    "start": "1665960",
    "end": "1673480"
  },
  {
    "text": "scroll timeline is really cool and these I I have links to the slides the um once",
    "start": "1673480",
    "end": "1678720"
  },
  {
    "text": "we're done but the basically what allows us to do is look how far something has scrolled and basically add Styles and",
    "start": "1678720",
    "end": "1686519"
  },
  {
    "text": "animate things accordingly So based on how far down the page you've scrolled and based on what that comp scroll",
    "start": "1686519",
    "end": "1693039"
  },
  {
    "text": "completion is we can go ahead and make some CSS changes so super basic example is I have a bunch",
    "start": "1693039",
    "end": "1700760"
  },
  {
    "text": "of text and this uh at the top I just have and this is 100% done in CSS I'm",
    "start": "1700760",
    "end": "1706159"
  },
  {
    "text": "looking at okay how far down have you scrolled and I'm going to show you a progress bar for how far down you've scrolled and so the and then I'm",
    "start": "1706159",
    "end": "1714080"
  },
  {
    "text": "changing the background color which is totally washed out on this screen but trust me we're making a nice little rainbow with the background",
    "start": "1714080",
    "end": "1720360"
  },
  {
    "text": "color um but basically What's Happening Here is we're going to go ahead and do",
    "start": "1720360",
    "end": "1725760"
  },
  {
    "text": "we're going to do a key frame some more over here a key frame um so we have our key frame that um for the for the",
    "start": "1725760",
    "end": "1733399"
  },
  {
    "text": "progress bar that goes ahead and has its transform I'm just doing a dumb scale transform from zero to all the way",
    "start": "1733399",
    "end": "1740120"
  },
  {
    "text": "across right and then for the background I'm just basically it's my rainbow right",
    "start": "1740120",
    "end": "1745960"
  },
  {
    "text": "just as as you go down the list it's the rainbow so the animation still works the exact same way as it does before where",
    "start": "1745960",
    "end": "1752039"
  },
  {
    "text": "you're you're you're calling your animation you put your animation L name um in terms of how long it takes we go",
    "start": "1752039",
    "end": "1759600"
  },
  {
    "text": "with Auto and then I just told it to be linear because it works well for scroll",
    "start": "1759600",
    "end": "1765200"
  },
  {
    "text": "um animation timeline that's where that's the new property that's telling it hey I want you to animate and I want",
    "start": "1765200",
    "end": "1772000"
  },
  {
    "text": "you to use scroll we can also use view which we'll talk about in the next couple of slid but that's saying based",
    "start": "1772000",
    "end": "1777519"
  },
  {
    "text": "on the scroll go ahead and do this um you can name these you can name what your scroll um area is so this is just",
    "start": "1777519",
    "end": "1784480"
  },
  {
    "text": "being done on the on the general uh on the general body right but let's say you",
    "start": "1784480",
    "end": "1790039"
  },
  {
    "text": "have a situation where you have your um where you've got a layout in a grid for example and so your body isn't what's",
    "start": "1790039",
    "end": "1796799"
  },
  {
    "text": "scrolling and you may have to Define where your scroll is you can go ahead and name that if you want to um and go",
    "start": "1796799",
    "end": "1803279"
  },
  {
    "text": "ahead and name your timeline uh which is what um that's where that timeline name is",
    "start": "1803279",
    "end": "1810159"
  },
  {
    "text": "going to be when you name your timeline you have to start with two dashes that's",
    "start": "1810159",
    "end": "1815399"
  },
  {
    "text": "the after that you can name it whatever you want uh but it has to start with two",
    "start": "1815399",
    "end": "1821159"
  },
  {
    "text": "dashes um but so that's that's a way to basically based on the scroll and a",
    "start": "1821159",
    "end": "1827000"
  },
  {
    "text": "scroll position go ahead and change your Styles we can be super convenient for either showing a progress through a",
    "start": "1827000",
    "end": "1832840"
  },
  {
    "text": "document maybe or um if you have some animations as you're showing cards maybe go through for some repetitiveness uh to",
    "start": "1832840",
    "end": "1840039"
  },
  {
    "text": "prevent you know the repetitiveness the other option is view so last time we had scroll and this time I put View and I'm",
    "start": "1840039",
    "end": "1847360"
  },
  {
    "text": "saying block which is my horizontal right because we're assuming we're in English and we're writing in normal",
    "start": "1847360",
    "end": "1853080"
  },
  {
    "text": "English fashion and you'll notice that is the same idea right you have a key frame where you have an animation um",
    "start": "1853080",
    "end": "1859279"
  },
  {
    "text": "also that auto and then we're going to go but this time we're going to give it a function of view and so what happens",
    "start": "1859279",
    "end": "1865559"
  },
  {
    "text": "with a function of view is that you'll notice that as much as I'm scrolling the P the colors stay the same like the the",
    "start": "1865559",
    "end": "1872360"
  },
  {
    "text": "the it's kind of it's kind of trippy because basically it looks like I have some kind of background and I'm just scrolling squares on it or scrolling",
    "start": "1872360",
    "end": "1878679"
  },
  {
    "text": "white lines on it but what's happening is that based on the position in the",
    "start": "1878679",
    "end": "1883919"
  },
  {
    "text": "view the animation is taking place so this is a great way to U be able to do",
    "start": "1883919",
    "end": "1889000"
  },
  {
    "text": "like flip animations as something comes into View flip and comes out of view um",
    "start": "1889000",
    "end": "1894039"
  },
  {
    "text": "that sort of trickery um yeah so that's the the big",
    "start": "1894039",
    "end": "1899480"
  },
  {
    "text": "one there um the thing with animations which I totally violated in this talk",
    "start": "1899480",
    "end": "1905120"
  },
  {
    "text": "because I'm flipping animations all over the place um is be aware of your users's preferences and do especially when",
    "start": "1905120",
    "end": "1912559"
  },
  {
    "text": "you're dealing because a lot of these are based on motion so a lot of times we animate even more motion into it right",
    "start": "1912559",
    "end": "1919159"
  },
  {
    "text": "uh when we're doing these so do make sure you're checking for um prefers reduced motion and be be kind to people",
    "start": "1919159",
    "end": "1925919"
  },
  {
    "text": "that have uh prefers reduced motion enabled uh when you're doing uh this",
    "start": "1925919",
    "end": "1931080"
  },
  {
    "text": "sort of fancy schmancy stuff any questions with that oh and support is pretty well garbage at this point the",
    "start": "1931080",
    "end": "1937480"
  },
  {
    "text": "cool thing though with these is again you can put those in and they will take effect whenever they take effect right",
    "start": "1937480",
    "end": "1943960"
  },
  {
    "text": "um a lot of um a lot of these are available with flags um but that's that's pretty much",
    "start": "1943960",
    "end": "1952200"
  },
  {
    "text": "where we're at at this particular point in time in terms of the support uh scroll and view the individual functions",
    "start": "1952200",
    "end": "1958440"
  },
  {
    "text": "do have slightly different support so do check those out as well uh when you're going through",
    "start": "1958440",
    "end": "1965760"
  },
  {
    "start": "1967000",
    "end": "2265000"
  },
  {
    "text": "stuff scroll stamp that's the last one with a lot of with a a lot of support um",
    "start": "1968039",
    "end": "1975440"
  },
  {
    "text": "scho snap and allows for snap snapping a container um just so y'all know scroll snap is really sweet but if it's done",
    "start": "1975440",
    "end": "1982399"
  },
  {
    "text": "wrong it makes the ux terrible so lots of testing with scroll snap because it can prevent you from being able to",
    "start": "1982399",
    "end": "1989039"
  },
  {
    "text": "actually read the full content um ran into a website that does that not that long ago oh we should probably go",
    "start": "1989039",
    "end": "1994559"
  },
  {
    "text": "through the property um the container needs Dimensions because it needs to know what to snap in so even if you're",
    "start": "1994559",
    "end": "2000519"
  },
  {
    "text": "doing it on body you need to give it some sort of Dimensions doing 100% view height is perfectly fine but it needs to",
    "start": "2000519",
    "end": "2008080"
  },
  {
    "text": "have some understanding of what is my size uh obviously percentages and variable Heights being perfectly fine um",
    "start": "2008080",
    "end": "2015360"
  },
  {
    "text": "there's two options mandatory and proximity this is where you're going to end up with issues if you have it set to",
    "start": "2015360",
    "end": "2021559"
  },
  {
    "text": "mandatory and your whatever content you have is larger than your viewport it",
    "start": "2021559",
    "end": "2026960"
  },
  {
    "text": "will snap and it will snap to the next one and it will snap to the next one and that bottom part that's not in viewport",
    "start": "2026960",
    "end": "2033240"
  },
  {
    "text": "will never be able to get reached so that is where that is where you can end up with some issues with mandatory",
    "start": "2033240",
    "end": "2039519"
  },
  {
    "text": "versus proximity uh depending on what size of depending on the size of what it",
    "start": "2039519",
    "end": "2044639"
  },
  {
    "text": "is you're snapping so if you're snapping an image and you know that your image is 80% of your re width by 50% of your",
    "start": "2044639",
    "end": "2050878"
  },
  {
    "text": "width no matter what then you're perfectly fine mandatory all day long but um yeah if you don't know what your",
    "start": "2050879",
    "end": "2056839"
  },
  {
    "text": "size is going to be proximity is probably a better safer bet um you can",
    "start": "2056839",
    "end": "2062320"
  },
  {
    "text": "in this like if you do a sticky header or something and you need to and because it'll snap to the top of the container",
    "start": "2062320",
    "end": "2068760"
  },
  {
    "text": "right so whatever whatever you're telling it to snap to um so if you need to give that some padding for whatever",
    "start": "2068760",
    "end": "2075079"
  },
  {
    "text": "reason there's scroll padding it's scroll padding top scroll padding left right and bottom um I don't think that",
    "start": "2075079",
    "end": "2081398"
  },
  {
    "text": "they have a short hand for that yet which is kind of obnoxious I'd need to double check um but last time I looked",
    "start": "2081399",
    "end": "2086919"
  },
  {
    "text": "it did not have a short hand yet and scroll snap a line determines where you're going to snap so that thing that",
    "start": "2086919",
    "end": "2092040"
  },
  {
    "text": "you're snapping do you want it to snap in the middle do you want it to snap from the top of the thing or at the bottom of the thing um so that that's a",
    "start": "2092040",
    "end": "2099599"
  },
  {
    "text": "where you can play with where you're snapping and how um is um gives you a little bit of fun so a kind of an",
    "start": "2099599",
    "end": "2106119"
  },
  {
    "text": "oversimplified example I have a container that has paragraphs or basically so my cont uh you know in a",
    "start": "2106119",
    "end": "2113280"
  },
  {
    "text": "grid my height obviously the height is really important because otherwise it will not work um and I go ahead and give",
    "start": "2113280",
    "end": "2119960"
  },
  {
    "text": "it my overflow y so that I can give it the Overflow and so see here I give it",
    "start": "2119960",
    "end": "2125359"
  },
  {
    "text": "the scroll snap type which takes the direction I wanted to snap so as I'm scrolling in the y direction so from top",
    "start": "2125359",
    "end": "2132359"
  },
  {
    "text": "to bottom and at proximity so it's if it gets close enough go ahead and snap how",
    "start": "2132359",
    "end": "2137440"
  },
  {
    "text": "close is proximity depends on the browser so uh that is purely an utterly",
    "start": "2137440",
    "end": "2143280"
  },
  {
    "text": "browser specific and then I gave it scroll padding top so that it doesn't otherwise this line would be right there",
    "start": "2143280",
    "end": "2150359"
  },
  {
    "text": "when it's Scrolls um it would be at the very top of the container to give it some breathing room but as you can see as I'm trying to scroll it it will go",
    "start": "2150359",
    "end": "2157680"
  },
  {
    "text": "ahead and if if it can snap and it's close enough it'll go ahead and snap but it'll still go ahead and let me read the",
    "start": "2157680",
    "end": "2164040"
  },
  {
    "text": "rest of the content if I had put mandatory it would not um any questions on that because",
    "start": "2164040",
    "end": "2170400"
  },
  {
    "text": "that one's super powerful",
    "start": "2170400",
    "end": "2173559"
  },
  {
    "text": "yes that is browser specific and it depends on if you're using the actual",
    "start": "2175800",
    "end": "2180880"
  },
  {
    "text": "scroll bar or the scroll wheel there's a lot of factors if you're clicking and dragging the scroll bar it'll wait till",
    "start": "2180880",
    "end": "2187800"
  },
  {
    "text": "wherever you stop on the scroll bar and then if it's close enough cuz I'm using proximity here if it's close enough to",
    "start": "2187800",
    "end": "2193760"
  },
  {
    "text": "snap it will um if it was mandatory then it would snap to whatever the closest thing it can snap to would be yeah so it",
    "start": "2193760",
    "end": "2200280"
  },
  {
    "text": "depends on there's there's a lot of factors there but generally speaking it's going to wait till you're done scrolling and then snap once you stop",
    "start": "2200280",
    "end": "2206880"
  },
  {
    "text": "the scroll any other questions all right um support's really",
    "start": "2206880",
    "end": "2213839"
  },
  {
    "text": "good actually even like that one shocked me like like seriously",
    "start": "2213839",
    "end": "2221640"
  },
  {
    "text": "why like why but um no I I will I will",
    "start": "2221640",
    "end": "2227160"
  },
  {
    "text": "have another celebration the day that can I use decides they're done even putting it on the list that'll be like",
    "start": "2227160",
    "end": "2233119"
  },
  {
    "text": "then it'll be truly truly dead um but no um support's really good um it obviously",
    "start": "2233119",
    "end": "2239520"
  },
  {
    "text": "works you're looking at uh roughly about 90 you know 95 is 94% of the population",
    "start": "2239520",
    "end": "2246680"
  },
  {
    "text": "and again it's one of those things if you put it in and it's not supported it'll users will get it when",
    "start": "2246680",
    "end": "2253079"
  },
  {
    "text": "they get it um it's one of those where I don't just be careful how you use it and",
    "start": "2253079",
    "end": "2260640"
  },
  {
    "text": "when you making sure that your content can be read like it can be really test carefully with",
    "start": "2260640",
    "end": "2266240"
  },
  {
    "start": "2265000",
    "end": "2462000"
  },
  {
    "text": "it lastly we have new units um and those are Dynamic viewport",
    "start": "2266240",
    "end": "2272240"
  },
  {
    "text": "units so view if we do a dumb view height which has been around for quite",
    "start": "2272240",
    "end": "2277520"
  },
  {
    "text": "some time right 100 view height the problem is it doesn't take in consideration in Mobile those uh",
    "start": "2277520",
    "end": "2283359"
  },
  {
    "text": "toolbars right and so you end up with historically the the perfect example is dialogues where you can't get to the",
    "start": "2283359",
    "end": "2289560"
  },
  {
    "text": "bottom of the dialogue because it was based on the view height because the tool bars in the way um so now we have",
    "start": "2289560",
    "end": "2296000"
  },
  {
    "text": "um one two three four six I can count yay six new units to go ahead and uh",
    "start": "2296000",
    "end": "2301720"
  },
  {
    "text": "help with that which is small view height with in each of them have their you know height and width right so you",
    "start": "2301720",
    "end": "2307440"
  },
  {
    "text": "have small view height small view width so that's going to be the smallest available space um if you take out any",
    "start": "2307440",
    "end": "2313800"
  },
  {
    "text": "toolbars that may be there or any OS specific uh or system specific wow the",
    "start": "2313800",
    "end": "2319560"
  },
  {
    "text": "wind um system specific stuff so in this case or in this example between these",
    "start": "2319560",
    "end": "2324680"
  },
  {
    "text": "two arrows would be the small view height right because it's the smallest available space anytime those um",
    "start": "2324680",
    "end": "2331400"
  },
  {
    "text": "toolbars may or may not appear that's the thing even if they're not available like if it's somebody at has it as Auto",
    "start": "2331400",
    "end": "2337359"
  },
  {
    "text": "height or something small view height would take that into consideration large view height is the",
    "start": "2337359",
    "end": "2342400"
  },
  {
    "text": "largest one that you would have you know outside of your to toolbar and dynamic view height which is my favorite just",
    "start": "2342400",
    "end": "2348079"
  },
  {
    "text": "figures it out you don't have to think about it um it's going to basically be",
    "start": "2348079",
    "end": "2353200"
  },
  {
    "text": "whatever is Avail whatever height is available at that time um now keep in mind this does not include the keyboard",
    "start": "2353200",
    "end": "2360200"
  },
  {
    "text": "so it does not take in consider it does not take into consideration whether the keyboard is",
    "start": "2360200",
    "end": "2366079"
  },
  {
    "text": "visible or not so it's like it like it's out you're not going to it's not going",
    "start": "2366079",
    "end": "2371400"
  },
  {
    "text": "to suddenly change the view hey because you have the keyboard out right so it's sans's keyboard um so the keyboard will",
    "start": "2371400",
    "end": "2377880"
  },
  {
    "text": "still take up the extra space so you still want to take that into account depending on what you're doing but these",
    "start": "2377880",
    "end": "2383720"
  },
  {
    "text": "are really super cool um because they kind of solve that whole toolbar problem which has been I don't know about y'all",
    "start": "2383720",
    "end": "2389800"
  },
  {
    "text": "but it's been the bane of my existence for quite some time especially on",
    "start": "2389800",
    "end": "2394960"
  },
  {
    "text": "iOS so dumb example you use it the same way you did view height you just put a D",
    "start": "2394960",
    "end": "2400720"
  },
  {
    "text": "in front of it um support's really good um so and",
    "start": "2400720",
    "end": "2407079"
  },
  {
    "text": "it's one of those where how you would do a fallback super easy is you would do height 100 view height and hope it works",
    "start": "2407079",
    "end": "2413119"
  },
  {
    "text": "and then you do your Dynamic view height because if it's not supported it'll fall back to your view height um and so",
    "start": "2413119",
    "end": "2418280"
  },
  {
    "text": "that's when you if you're concerned that not all your users have access to it yet um you can totally do a super easy",
    "start": "2418280",
    "end": "2424680"
  },
  {
    "text": "fallback for and be in Fairly good shape because um I don't know like Opera Mini",
    "start": "2424680",
    "end": "2431480"
  },
  {
    "text": "is act like there's a couple of see how a lot of the browsers that would be androidy and phony type browsers phone",
    "start": "2431480",
    "end": "2438480"
  },
  {
    "text": "related browsers do not have the support yet so totally still worth having some kind of",
    "start": "2438480",
    "end": "2444040"
  },
  {
    "text": "fallback so we covered a bunch of stuff we covered all of that so pseudo element",
    "start": "2444040",
    "end": "2449079"
  },
  {
    "text": "is where has an in the child um container queries and style queries nesting typography transforms and a",
    "start": "2449079",
    "end": "2456480"
  },
  {
    "text": "bunch of scroll stuff and dynamic viewp and the new Dynamic viewport Heights so",
    "start": "2456480",
    "end": "2462760"
  },
  {
    "text": "code where you can find the code samples of all the thing I",
    "start": "2462760",
    "end": "2467520"
  },
  {
    "text": "showed yay cool where you can find blog articles and uh a bunch of like my",
    "start": "2483079",
    "end": "2490920"
  },
  {
    "text": "latest book tiny CSS projects and uh a bunch of other stuff related to",
    "start": "2490920",
    "end": "2497520"
  },
  {
    "text": "CSS and any social media links if we all want to stalk me they're all going to be on",
    "start": "2499280",
    "end": "2505920"
  },
  {
    "text": "there and I will happily take any questions if you have them",
    "start": "2505920",
    "end": "2513319"
  },
  {
    "text": "yes",
    "start": "2515240",
    "end": "2518240"
  },
  {
    "text": "the the St so the Stell containers um the the size one the the size ones",
    "start": "2529800",
    "end": "2536280"
  },
  {
    "text": "obviously are for component driven architecture are great the size ones the one use case I can think that is really",
    "start": "2536280",
    "end": "2542559"
  },
  {
    "text": "helpful for those are uh instances where you don't have control over the HTML um",
    "start": "2542559",
    "end": "2548280"
  },
  {
    "text": "which is kind of rare but if you're dealing with um any kind of uh content",
    "start": "2548280",
    "end": "2554520"
  },
  {
    "text": "that's coming from a CMS for example um or that could be generated or HTML that",
    "start": "2554520",
    "end": "2559760"
  },
  {
    "text": "could be generated by the user so think like a some kind of HTML input type",
    "start": "2559760",
    "end": "2565119"
  },
  {
    "text": "situation or um a whsy wig type situation that's the one use case I can",
    "start": "2565119",
    "end": "2570559"
  },
  {
    "text": "think of where because yes the first time I looked at them I was like you I'm like you just choose a class like this is overly comp complicated for no good",
    "start": "2570559",
    "end": "2577119"
  },
  {
    "text": "reason just whatever you're using to dynamically generate the the property use a class and call it a day yeah I had",
    "start": "2577119",
    "end": "2583520"
  },
  {
    "text": "the same thought um but I can the one use case I could see where that would be helpful is when you don't control the",
    "start": "2583520",
    "end": "2589280"
  },
  {
    "text": "HTML for whatever reason if it's being generated by something um or if it's um",
    "start": "2589280",
    "end": "2595000"
  },
  {
    "text": "coming from a CMS or user provided in some way VIA whsy wig or something like that I could see that being helpful",
    "start": "2595000",
    "end": "2601160"
  },
  {
    "text": "where your the containing body would have me you could pass it through a containing body I suppose uh that's",
    "start": "2601160",
    "end": "2608599"
  },
  {
    "text": "that's the one I could see that I could see but yeah I'm I'm with you on the I'm",
    "start": "2608599",
    "end": "2614920"
  },
  {
    "text": "I haven't found a for sure like hard clad this cannot be done any any other way uh for",
    "start": "2614920",
    "end": "2620960"
  },
  {
    "text": "sure yes",
    "start": "2620960",
    "end": "2628760"
  },
  {
    "text": "yes I have not heard I don't",
    "start": "2635079",
    "end": "2640440"
  },
  {
    "text": "know oh I'm sorry okay uh sorry the question was um",
    "start": "2640480",
    "end": "2647359"
  },
  {
    "text": "for the D Dynamic viewport Heights and widths um the um whether or not there",
    "start": "2647359",
    "end": "2653319"
  },
  {
    "text": "was plans to have those have a unit that includes the size of the keyboard and I",
    "start": "2653319",
    "end": "2658359"
  },
  {
    "text": "don't I don't know honestly um I would assume that eventually because there's",
    "start": "2658359",
    "end": "2663680"
  },
  {
    "text": "enough demand but I don't know for sure",
    "start": "2663680",
    "end": "2668000"
  },
  {
    "text": "yes me personally uh the question was do I use uh if I personally use scss or",
    "start": "2671760",
    "end": "2677880"
  },
  {
    "text": "just plain CSS and it depends on the project um generally speaking I lean towards scss simply because well nesting",
    "start": "2677880",
    "end": "2685920"
  },
  {
    "text": "was a big reason for years and years um there's still a couple of things like if",
    "start": "2685920",
    "end": "2691400"
  },
  {
    "text": "functions um at like each um the ability to do maps that aren't there in CSS that",
    "start": "2691400",
    "end": "2698640"
  },
  {
    "text": "I still use SAS for but a lot of times um what I'll consider is do I need it and how complicated do I want my build",
    "start": "2698640",
    "end": "2705440"
  },
  {
    "text": "process to be and that will generally dictate uh which direction I go uh if",
    "start": "2705440",
    "end": "2711000"
  },
  {
    "text": "I'm using I do a lot in angular so since SAS comes out of the box in angular I'll just go down I mean I'll just go ahead",
    "start": "2711000",
    "end": "2717280"
  },
  {
    "text": "and do it because it's there um and definitely make use of that but it just it depends on the project but I tend to",
    "start": "2717280",
    "end": "2723559"
  },
  {
    "text": "lean towards the SAS um just because of historically the nesting more than",
    "start": "2723559",
    "end": "2729800"
  },
  {
    "text": "anything",
    "start": "2729800",
    "end": "2732800"
  },
  {
    "text": "yes um the question is in SAS when you you when you nest and you do the % it",
    "start": "2743800",
    "end": "2749160"
  },
  {
    "text": "generates a new it essentially generates the the CSS n nested is that the same in",
    "start": "2749160",
    "end": "2755280"
  },
  {
    "text": "CSS so CSS at that point it would be the like it's the native language there's no recompilation to be done so it like",
    "start": "2755280",
    "end": "2762119"
  },
  {
    "text": "historically the reason why when you nest in SAS uh what it spits out is unnested and goes ahead and gives you",
    "start": "2762119",
    "end": "2768599"
  },
  {
    "text": "your however long uh tree of of you know list of of selectors it needs to have is",
    "start": "2768599",
    "end": "2774839"
  },
  {
    "text": "because CSS did not support nesting um so I would I could see eventually if the",
    "start": "2774839",
    "end": "2779920"
  },
  {
    "text": "support is if the support gets good enough in the browsers I could see eventually SAS updating their code to go",
    "start": "2779920",
    "end": "2787559"
  },
  {
    "text": "ahead and not bother with that flattening um in the nesting U but that's so no when you're writing the",
    "start": "2787559",
    "end": "2794079"
  },
  {
    "text": "nesting in CSS there's no compile to be done it it just",
    "start": "2794079",
    "end": "2799280"
  },
  {
    "text": "works any other questions awesome well thank you very",
    "start": "2799280",
    "end": "2804839"
  },
  {
    "text": "much you've been awesome I will be around um all the uh during the entire conference so don't hesitate to come say",
    "start": "2804839",
    "end": "2811440"
  },
  {
    "text": "hi and if you come up with anything else afterwards thank you very much",
    "start": "2811440",
    "end": "2817800"
  },
  {
    "text": "[Applause]",
    "start": "2818550",
    "end": "2821659"
  }
]