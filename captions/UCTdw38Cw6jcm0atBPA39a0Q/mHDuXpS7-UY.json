[
  {
    "text": "all right um i think it's time to start our talk um hello everyone my name is meta atamal",
    "start": "640",
    "end": "7919"
  },
  {
    "text": "i'm a developer advocate at google i'm based in london and and this is one of my favorite",
    "start": "7919",
    "end": "13440"
  },
  {
    "text": "conferences i've been to nbc many versions are in the same different places but especially nc oslo",
    "start": "13440",
    "end": "19520"
  },
  {
    "text": "i've been there in the last i think four years or so um so it's kind of weird this year that",
    "start": "19520",
    "end": "25439"
  },
  {
    "text": "we are all stuck at home but i'm glad that at least um this year we can still get to do it in an online",
    "start": "25439",
    "end": "32880"
  },
  {
    "text": "way um i'm gonna be asking you to ask",
    "start": "32880",
    "end": "38239"
  },
  {
    "text": "if you have any questions please ask them on slack and i think we are in conference room seven",
    "start": "38239",
    "end": "43680"
  },
  {
    "text": "or at least that's where i'm going to look at now and i'll take a pause once in a while",
    "start": "43680",
    "end": "48800"
  },
  {
    "text": "and just check if there's a question there and i'll try to answer it there and if you have time at the end",
    "start": "48800",
    "end": "54559"
  },
  {
    "text": "again i'll check it and answer there and after the talk as well i'll go there and just hang out in this slack for a little",
    "start": "54559",
    "end": "60320"
  },
  {
    "text": "bit um let me just share my presentation okay",
    "start": "60320",
    "end": "65360"
  },
  {
    "text": "so today we're going to be talking about eventing with k native and cloud run um we're going to start with basics so",
    "start": "65360",
    "end": "73119"
  },
  {
    "text": "i'm not going to assume that you know okay native i'm not going to assume that you know cloud runs so i'm going to start with covering what k nato and cloud run",
    "start": "73119",
    "end": "79439"
  },
  {
    "text": "are in case you don't know um then we're going to get into k native eventing part um again starting",
    "start": "79439",
    "end": "86479"
  },
  {
    "text": "from the basics but then towards the end we're going to get into more advanced kind of topics and in the end well there will be demos",
    "start": "86479",
    "end": "93439"
  },
  {
    "text": "throughout the presentation but in the end i hope to show you a couple of demos",
    "start": "93439",
    "end": "98640"
  },
  {
    "text": "where we'll try to bring it all together if you want to get the presentation it's",
    "start": "98640",
    "end": "104799"
  },
  {
    "text": "already on speaker deck i already uploaded there um these samples and the demos that i'm going to show",
    "start": "104799",
    "end": "110479"
  },
  {
    "text": "they're actually already on github and i'm going to share the link at the end of the presentation so everything that i'm going to talk",
    "start": "110479",
    "end": "116320"
  },
  {
    "text": "about they're already out there and i also blog on my personal blog um",
    "start": "116320",
    "end": "122240"
  },
  {
    "text": "you nowadays usually about like a native so if you're interested feel free to follow me on my blog and twitter as well",
    "start": "122240",
    "end": "129440"
  },
  {
    "text": "all right so let's do the introduction first um about what is k native and",
    "start": "129440",
    "end": "136000"
  },
  {
    "text": "cloud run is but before that let's talk about serverless and containers um i don't have to tell you what",
    "start": "136000",
    "end": "141760"
  },
  {
    "text": "serverless is i mean everyone talks about serverless nowadays but in a nutshell when we think about",
    "start": "141760",
    "end": "148400"
  },
  {
    "text": "serverless we are thinking about no infrastructure management meaning",
    "start": "148400",
    "end": "153519"
  },
  {
    "text": "there's some servers out there somewhere and someone manages them but we don't have to care about it",
    "start": "153519",
    "end": "159120"
  },
  {
    "text": "the base level security is handled for us we only pay for what you use you know",
    "start": "159120",
    "end": "166480"
  },
  {
    "text": "this is the operational way of thinking about serverless at the same time you know if you're building serverless",
    "start": "166480",
    "end": "173280"
  },
  {
    "text": "services you're usually talking about services so they're service based that are event driven that i get",
    "start": "173280",
    "end": "179519"
  },
  {
    "text": "that are get triggered by certain events and these services are usually statements so this is kind of what you expect from",
    "start": "179519",
    "end": "186480"
  },
  {
    "text": "a serverless kind of framework um like lambda or azure functions or google cloud",
    "start": "186480",
    "end": "193040"
  },
  {
    "text": "functions now on the other hand we have this containerized world",
    "start": "193040",
    "end": "198720"
  },
  {
    "text": "where we took our virtual virtual machine based applications we broke them down into smaller pieces",
    "start": "198720",
    "end": "205760"
  },
  {
    "text": "we containerized these pieces and then we put them into containers",
    "start": "205760",
    "end": "210799"
  },
  {
    "text": "with whatever they need so the application and its dependencies got into containers then it became much easier to move these",
    "start": "210799",
    "end": "217599"
  },
  {
    "text": "applications around and the beauty of containers is that as you know they allow you to use pretty much any",
    "start": "217599",
    "end": "224400"
  },
  {
    "text": "language you want any library you want and there's a rich ecosystem around containers um",
    "start": "224400",
    "end": "230159"
  },
  {
    "text": "such as kubernetes istio canada that i'm going to talk about today so that's why people are also doing",
    "start": "230159",
    "end": "236000"
  },
  {
    "text": "stuff with containers and when you look at the state or software development you had to make a choice from the",
    "start": "236000",
    "end": "242239"
  },
  {
    "text": "beginning right you either went with serverless if you could",
    "start": "242239",
    "end": "247280"
  },
  {
    "text": "um and if you could do that you get all the benefits of serverless like manage security manage infrastructure things",
    "start": "247280",
    "end": "253599"
  },
  {
    "text": "like that but when you're running in a serverless kind of environment you're constrained on what you can do first you need to",
    "start": "253599",
    "end": "261440"
  },
  {
    "text": "express your application in in terms of functions usually these",
    "start": "261440",
    "end": "266560"
  },
  {
    "text": "are small functions that you deploy fit into that model it's great but then",
    "start": "266560",
    "end": "275120"
  },
  {
    "text": "if you don't for whatever reason then you kind of fall back to containers so serverless gives you the velocity and",
    "start": "275120",
    "end": "282960"
  },
  {
    "text": "um all this managed features to go fast um but then if you cannot use it the",
    "start": "282960",
    "end": "288400"
  },
  {
    "text": "fallback is containers which gives you the flexibility that you need with the languages and frameworks and",
    "start": "288400",
    "end": "293520"
  },
  {
    "text": "everything but then you kind of lose the benefits of serverless so you had to make this choice upfront and it wasn't a nice choice to make",
    "start": "293520",
    "end": "299360"
  },
  {
    "text": "to be honest um so that's why projects like k native and cloud run exist",
    "start": "299360",
    "end": "304800"
  },
  {
    "text": "the whole premise okay native is to bring serverless features to containers so the",
    "start": "304800",
    "end": "310560"
  },
  {
    "text": "unit of deployment in k native it's a container whatever you can put in a container it",
    "start": "310560",
    "end": "316080"
  },
  {
    "text": "can run on okay native but you you basically get the benefits",
    "start": "316080",
    "end": "321520"
  },
  {
    "text": "of running the container in a serverless way and we'll see what that means as we go along",
    "start": "321520",
    "end": "326800"
  },
  {
    "text": "so okay native itself it's an open source project um and it runs everywhere there's",
    "start": "326800",
    "end": "331840"
  },
  {
    "text": "kubernetes but then there's something called cloud run which is the managed version okay native on google cloud",
    "start": "331840",
    "end": "338240"
  },
  {
    "text": "so if you are running in open source if you have your own kubernetes cluster you'll probably look into k native and",
    "start": "338240",
    "end": "344080"
  },
  {
    "text": "use that but if you are on google cloud then cloud run implements k native so the apis and",
    "start": "344080",
    "end": "349919"
  },
  {
    "text": "everything is very similar but it's much more managed so in in k nato you create a cluster in cloud run",
    "start": "349919",
    "end": "355199"
  },
  {
    "text": "you don't have to create a cluster and everything is much easier in cloud run with the caveat that you are running in google cloud",
    "start": "355199",
    "end": "361199"
  },
  {
    "text": "and then there's something in the middle called cloud run on amphos which is k native on google google",
    "start": "361199",
    "end": "367280"
  },
  {
    "text": "kubernetes engine which is the a managed version of kubernetes on google cloud so if you want to stay in kubernetes",
    "start": "367280",
    "end": "373680"
  },
  {
    "text": "ecosystem but you want to do it in the cloud then you would choose cloud manager on first so we give people this spectrum of",
    "start": "373680",
    "end": "380240"
  },
  {
    "text": "choice depending on where you want to be if you want to go on prem you can use k native as is and it's open source",
    "start": "380240",
    "end": "386160"
  },
  {
    "text": "if you want to be in the cloud in a fully managed kind of environment you can be in cloud run and then if you want to be somewhere in",
    "start": "386160",
    "end": "392080"
  },
  {
    "text": "middle where you want to have your own kubernetes cluster but you still want to host it in the cloud",
    "start": "392080",
    "end": "397199"
  },
  {
    "text": "then you can look into cloud run on ad plus now today i am mainly focusing on k-native itself",
    "start": "397199",
    "end": "403039"
  },
  {
    "text": "so i'm not going to talk about anything special about cloud run but pretty much everything i talked",
    "start": "403039",
    "end": "408080"
  },
  {
    "text": "about you can do them on cloud run and you can do them in an easier way for for the most part",
    "start": "408080",
    "end": "413680"
  },
  {
    "text": "um so everything i say they pretty much apply to cloud brand as well so just keep that in mind but i'm just",
    "start": "413680",
    "end": "418800"
  },
  {
    "text": "focusing on k youtube because i don't know where people run so i don't want to assume that you're on google cloud you probably aren't so",
    "start": "418800",
    "end": "425199"
  },
  {
    "text": "that's why okay so as i mentioned k native uh it's a kubernetes-based open source",
    "start": "425199",
    "end": "431199"
  },
  {
    "text": "building blocks for serverless it's on github it's an open source project it was started by google",
    "start": "431199",
    "end": "436240"
  },
  {
    "text": "but then vmware red hat and bunch of other companies and people they are contributing to it so you can also",
    "start": "436240",
    "end": "442319"
  },
  {
    "text": "contribute if you like and decay nato stack looks like this at",
    "start": "442319",
    "end": "447360"
  },
  {
    "text": "the bottom layer we have kubernetes um that's the kind of the platform where things run",
    "start": "447360",
    "end": "453120"
  },
  {
    "text": "then on top of that you need to install a gateway um k native it doesn't try to solve networking problems",
    "start": "453120",
    "end": "459360"
  },
  {
    "text": "it doesn't try to figure out how to get traffic from outside to your container instead it relies on a",
    "start": "459360",
    "end": "465440"
  },
  {
    "text": "gateway like istio blue or ambassador you can use many different gateways you can install on",
    "start": "465440",
    "end": "471039"
  },
  {
    "text": "top and canada will work with that so once you have kubernetes and the gateway dependency then you",
    "start": "471039",
    "end": "478240"
  },
  {
    "text": "install k-nato components and there are two components okay native uh k-native serving",
    "start": "478240",
    "end": "483599"
  },
  {
    "text": "and kinetic eventing uh we're going to talk about eventing more in this talk but i'm going to mention canadian",
    "start": "483599",
    "end": "489120"
  },
  {
    "text": "surfing and show you a quick demo at the beginning so that you have an idea of what clinical serving is because k native eventing kind of builds",
    "start": "489120",
    "end": "496720"
  },
  {
    "text": "on topokey native serving so you have to understand connective serving first before you can actually make sense okay native",
    "start": "496720",
    "end": "502800"
  },
  {
    "text": "eventing so once you install those two components you can use k native but as i mentioned there are products",
    "start": "502800",
    "end": "509120"
  },
  {
    "text": "that are being built on top okay native on google cloud and other clouds as well um so if you're running",
    "start": "509120",
    "end": "515599"
  },
  {
    "text": "in a cloud you might want to check the cloud provider to see what kind of candidate implementations they have",
    "start": "515599",
    "end": "521599"
  },
  {
    "text": "and maybe use that instead if you want all right so let's just briefly talk",
    "start": "521599",
    "end": "527200"
  },
  {
    "text": "about serving um and i'll show you a quick demo and then we'll get into k native eventing and then we'll go from there so k-nature",
    "start": "527200",
    "end": "534480"
  },
  {
    "text": "serving what is what is it um it basically allows you to deploy",
    "start": "534480",
    "end": "539680"
  },
  {
    "text": "um containers in a serverless way uh so what you do is you define a k-native service",
    "start": "539680",
    "end": "545920"
  },
  {
    "text": "in this kinetic service you define your container image and then you also define your container",
    "start": "545920",
    "end": "552240"
  },
  {
    "text": "your service configuration and then you tell canada okay this is my service with this container",
    "start": "552240",
    "end": "557920"
  },
  {
    "text": "this configuration just deployed and k-net it figures out all the rest so it depletes a container in a",
    "start": "557920",
    "end": "563680"
  },
  {
    "text": "kubernetes spot it configures traffic to get to that pod um it sets",
    "start": "563680",
    "end": "569120"
  },
  {
    "text": "automatic scaling for your pot so it's so your container would scale down to zero if no one uses it for",
    "start": "569120",
    "end": "575040"
  },
  {
    "text": "60 seconds it will scale up to n that you define and then you get basic configuration and",
    "start": "575040",
    "end": "582320"
  },
  {
    "text": "revision management so every time you change the configuration of your service and deploy you'll get a new revision and",
    "start": "582320",
    "end": "589920"
  },
  {
    "text": "then once you have multiple revisions of your service you can do traffic splitting within them so in a nutshell you deploy a container",
    "start": "589920",
    "end": "596640"
  },
  {
    "text": "get traffic rather to it get automatic scaling get configuration revision management",
    "start": "596640",
    "end": "601680"
  },
  {
    "text": "and get traffic splitting between them now the basic block building blocks okay",
    "start": "601680",
    "end": "608959"
  },
  {
    "text": "nato serving is as i mentioned you have service at the top this is a k native service it's not a kubernetes service",
    "start": "608959",
    "end": "615680"
  },
  {
    "text": "um there's also the notion of services and kubernetes but k native service is something higher level than converting to service",
    "start": "615680",
    "end": "622480"
  },
  {
    "text": "so this service has a configuration um that points to the container image and other",
    "start": "622480",
    "end": "628720"
  },
  {
    "text": "things and then you deploy the service and configuration together into what's called a revision so this",
    "start": "628720",
    "end": "634560"
  },
  {
    "text": "revision is kind of like the snapshot of your service and the configuration at that given time then k-nato will create a route and it",
    "start": "634560",
    "end": "641440"
  },
  {
    "text": "will send traffic to this revision so all the traffic goes to this revision every time you change your configuration",
    "start": "641440",
    "end": "647279"
  },
  {
    "text": "and deploy again it will create a new revision and the route will get updated to that revision",
    "start": "647279",
    "end": "652560"
  },
  {
    "text": "but of course once you have multiple revisions you can change this route yourself and you can do things like",
    "start": "652560",
    "end": "657680"
  },
  {
    "text": "traffic splitting or a b testing if you like so this is k native in a nutshell and just to give you a quick idea on how",
    "start": "657680",
    "end": "664320"
  },
  {
    "text": "this actually works um so if this is my",
    "start": "664320",
    "end": "672320"
  },
  {
    "text": "github project that i'm going to share with the link with you it's a canadian tutorial where i show how to install k-native um",
    "start": "672320",
    "end": "679600"
  },
  {
    "text": "on google cloud and i'll also show you a lot of examples on canada serving canadian eventing candidate eventing with google",
    "start": "679600",
    "end": "686399"
  },
  {
    "text": "cloud and also built because there used to be something called k native build",
    "start": "686399",
    "end": "691600"
  },
  {
    "text": "but then it turned into its own project called tecton pipelines it's a way to do cicd pipelines on kubernetes so i show",
    "start": "691600",
    "end": "699680"
  },
  {
    "text": "some examples of that but right now i want to show you a quick example of hello world serving so let's imagine that you have a simple",
    "start": "699680",
    "end": "705920"
  },
  {
    "text": "very simple hello world application how do you deploy that container using k-native",
    "start": "705920",
    "end": "711839"
  },
  {
    "text": "well first you have to write the code of your application in this case i have it in c-sharp and",
    "start": "711839",
    "end": "716880"
  },
  {
    "text": "python um let me actually show you the c-sharp one quickly because it's easy enough so if you look at this startup.cs well",
    "start": "716880",
    "end": "724639"
  },
  {
    "text": "let's actually look at program.cs first so first your app reads a port environment",
    "start": "724639",
    "end": "730480"
  },
  {
    "text": "variable if it's there it will try to bind to that if it's not then it will bind to a port 8080",
    "start": "730480",
    "end": "736079"
  },
  {
    "text": "this is the contract okay native so that's why we have to do it then we bind to zero zero zero and that",
    "start": "736079",
    "end": "741760"
  },
  {
    "text": "port um and that's it really and then in startup",
    "start": "741760",
    "end": "747200"
  },
  {
    "text": "what we do is when we get a get request we check an envelope variable called target",
    "start": "748079",
    "end": "753760"
  },
  {
    "text": "if it's there we'll say hello target so in this case it will be the version number hello v1",
    "start": "753760",
    "end": "759920"
  },
  {
    "text": "and if it's not there we'll just say hello world so it's something very simple um to deploy this app first we built the",
    "start": "759920",
    "end": "766240"
  },
  {
    "text": "docker container and we push it to docker and then we need to create a service yaml file this service demo file defines",
    "start": "766240",
    "end": "773440"
  },
  {
    "text": "the k native service next let me actually show you this in my vs code so here service top v1",
    "start": "773440",
    "end": "781360"
  },
  {
    "text": "you can see that it's using a native api the kind is a k native service this is the name of the service hello world",
    "start": "781360",
    "end": "787680"
  },
  {
    "text": "this is the um namespace that gets installed into in this case the default namespace and",
    "start": "787680",
    "end": "794480"
  },
  {
    "text": "this is the configuration of the service so it points to this image that i already push and this is the environment target v1",
    "start": "794480",
    "end": "801040"
  },
  {
    "text": "right so to deploy to to deploy this service um i come to my console and i have my",
    "start": "801040",
    "end": "808320"
  },
  {
    "text": "service v1 here and before we do that i'm going to watch a couple of things so i'm watching kubernetes pods k native",
    "start": "808320",
    "end": "815440"
  },
  {
    "text": "service configuration revision and route so let's just watch that and see what we have",
    "start": "815440",
    "end": "820880"
  },
  {
    "text": "we'll see a couple of um pods already running these are pods that i need for kinetic eventing that i already set up",
    "start": "820880",
    "end": "826880"
  },
  {
    "text": "so you can ignore them for now just let's just assume that they're not there and then when i do quick ctl apply and service",
    "start": "826880",
    "end": "834880"
  },
  {
    "text": "v1 so this will deploy my hello world service and you'll see that right away this this",
    "start": "834880",
    "end": "841360"
  },
  {
    "text": "is creating a pod and the pod is running it created a service called hello world",
    "start": "841360",
    "end": "846560"
  },
  {
    "text": "it created a configuration it created a revision and this revision is generation one",
    "start": "846560",
    "end": "851920"
  },
  {
    "text": "meaning it's the first um revision and it also created the route so all the things that i talked about",
    "start": "851920",
    "end": "857199"
  },
  {
    "text": "it's already created and if you do like curl you'll see it says hello v1 so we deployed our service",
    "start": "857199",
    "end": "863839"
  },
  {
    "text": "um if you ever use kubernetes yourself you know that this is much easier than kubernetes because all with it just",
    "start": "863839",
    "end": "872560"
  },
  {
    "text": "create the yaml file and just say deploy this yaml and and then all the details are like creating the pods and services and",
    "start": "872560",
    "end": "878880"
  },
  {
    "text": "configurations and istio routing all that is done for us which is much easier than using kubernetes yourself",
    "start": "878880",
    "end": "885360"
  },
  {
    "text": "now if we do a change to our configuration so for example let me um let's do a configuration change",
    "start": "885360",
    "end": "895279"
  },
  {
    "text": "here so anytime you change the configuration it will create a new revision for example let's do a couple of changes",
    "start": "896839",
    "end": "904399"
  },
  {
    "text": "one service v2 so in this second version of",
    "start": "904399",
    "end": "910160"
  },
  {
    "text": "the service we are changing the environment uh variable from target v1 to b2",
    "start": "910160",
    "end": "915920"
  },
  {
    "text": "and then let's say in the third one we change the image from version one to version three so we",
    "start": "915920",
    "end": "922639"
  },
  {
    "text": "are creating a new image that has a new code in it so we're doing a code change um if we do these kind of changes uh",
    "start": "922639",
    "end": "929839"
  },
  {
    "text": "first of all let's do the v2 one here it is apply service v2",
    "start": "929839",
    "end": "937040"
  },
  {
    "text": "now you can see that once i apply the change immediately it's creating a new pod and then you can",
    "start": "937040",
    "end": "943120"
  },
  {
    "text": "also see that the previous part is terminating the previous part is for the version one and we haven't used version one for 60",
    "start": "943120",
    "end": "950320"
  },
  {
    "text": "seconds so it's auto scaling down to zero but then we have the new one running um with the",
    "start": "950320",
    "end": "958399"
  },
  {
    "text": "new configuration and you can see that we still have the revision one but no one is using it now and then we have the second",
    "start": "958399",
    "end": "964079"
  },
  {
    "text": "generation the second version of it and then if you do a curl then you can see that it says hello b2 so we did this",
    "start": "964079",
    "end": "970800"
  },
  {
    "text": "configuration change again in terms of code changes in service with",
    "start": "970800",
    "end": "975839"
  },
  {
    "text": "v3 we point to another container image and if you deploy that",
    "start": "975839",
    "end": "982639"
  },
  {
    "text": "it's the same thing it creates a new revision it creates a new container and then once this container is running",
    "start": "982639",
    "end": "988720"
  },
  {
    "text": "if we do a curl again now it says by v3 because we change the code from",
    "start": "988720",
    "end": "994000"
  },
  {
    "text": "hello to buy so you can see that this kind of stuff level of changing your code and",
    "start": "994000",
    "end": "999040"
  },
  {
    "text": "updating your code becomes really easy uh with k native and this is what k native",
    "start": "999040",
    "end": "1004399"
  },
  {
    "text": "serving enables you to do so that's all i want to say about canadian serving but i just want to point out here that",
    "start": "1004399",
    "end": "1010720"
  },
  {
    "text": "you know if you want to learn about traffic splitting auto scaling deploying to cloud run using grp see with knitted so there's",
    "start": "1010720",
    "end": "1017120"
  },
  {
    "text": "all these other things that you can do with it so feel free to check out uh if you're interested but let's move on to k native eventing",
    "start": "1017120",
    "end": "1023360"
  },
  {
    "text": "because that's what we care about here today all right so what is k native eventing",
    "start": "1023360",
    "end": "1028640"
  },
  {
    "text": "um kinetic eventing basically allows you to connect a bunch of different event sources to",
    "start": "1028640",
    "end": "1036000"
  },
  {
    "text": "different event consumers in your cluster and that's really all there is to it um these event",
    "start": "1036000",
    "end": "1041839"
  },
  {
    "text": "sources they can be internal event sources in your cluster so they can be services in your cluster that generates",
    "start": "1041839",
    "end": "1048558"
  },
  {
    "text": "events or they could be external events that you can read into your cluster",
    "start": "1048559",
    "end": "1053679"
  },
  {
    "text": "for example you can read like github messages or you can read i don't know pops up messages something",
    "start": "1053679",
    "end": "1059120"
  },
  {
    "text": "externally to a cluster and you can pull them into your cluster and we'll see how that works as we go along now once you",
    "start": "1059120",
    "end": "1065360"
  },
  {
    "text": "pull these messages in or once you generate them then you can choose how to deliver them to",
    "start": "1065360",
    "end": "1071120"
  },
  {
    "text": "consumers so there's a different there's a few different ways of how you can route the messages to your consumers",
    "start": "1071120",
    "end": "1077440"
  },
  {
    "text": "and there's a few different ways of how you can persist them because do you want in-memory messages or do you want um",
    "start": "1077440",
    "end": "1084880"
  },
  {
    "text": "pops up driven message messages so there's a few different ways of how we can actually send messages from",
    "start": "1084880",
    "end": "1090720"
  },
  {
    "text": "sources to consumers and we'll take a look at these as we go along",
    "start": "1090720",
    "end": "1096080"
  },
  {
    "text": "all right um so let's look at the terminology okay native event thing so when you get kinetic eventing",
    "start": "1096160",
    "end": "1102480"
  },
  {
    "text": "um there's a few things that you need to know um and kind of understand before things start making sense so let's just go",
    "start": "1102480",
    "end": "1108720"
  },
  {
    "text": "through them one by one and then i'm gonna i mean this is gonna be a little bit of slides but we need to cover them before",
    "start": "1108720",
    "end": "1114400"
  },
  {
    "text": "we actually get to the demo so just bear with me as we as we go along with this now first of all there's this notion of",
    "start": "1114400",
    "end": "1120400"
  },
  {
    "text": "cloud events in k native eventing um i will talk more about i will talk",
    "start": "1120400",
    "end": "1125600"
  },
  {
    "text": "all of these in in detail in the next slides but basically cloud events is the format of the messages in canadian eventing",
    "start": "1125600",
    "end": "1133200"
  },
  {
    "text": "there is this notion of event sources these are the things that produce events or read events from",
    "start": "1133200",
    "end": "1139120"
  },
  {
    "text": "outside there's the notion of services um these are basically either",
    "start": "1139120",
    "end": "1144480"
  },
  {
    "text": "k native or kubernetes services they're consumers of these events um now i'm going to skip channel",
    "start": "1144480",
    "end": "1151520"
  },
  {
    "text": "subscription and i'll come back to them there is broker and trigger so broker is",
    "start": "1151520",
    "end": "1156559"
  },
  {
    "text": "cut is the event mesh in your namespace it basically sits in your namespace",
    "start": "1156559",
    "end": "1162000"
  },
  {
    "text": "and it receives the messages by default in your namespace and then once those messages are in your",
    "start": "1162000",
    "end": "1167919"
  },
  {
    "text": "namespace then you can create triggers to those um um to those messages",
    "start": "1167919",
    "end": "1173600"
  },
  {
    "text": "and you can send them to event to your services so you can basically",
    "start": "1173600",
    "end": "1180000"
  },
  {
    "text": "route from broker to your services using a trigger so trigger allows you to make the connection to the broker but",
    "start": "1180000",
    "end": "1186160"
  },
  {
    "text": "it also allows you to filter messages so usually these are the things that you should care about but under the",
    "start": "1186160",
    "end": "1192720"
  },
  {
    "text": "covers there's also these things called channels and subscriptions um channel defines the persistence layer so",
    "start": "1192720",
    "end": "1199520"
  },
  {
    "text": "it defines how messages travel within your system are they traveling in memory",
    "start": "1199520",
    "end": "1204720"
  },
  {
    "text": "are they traveling in kafka kind of backbone while they're traveling in google cloud pops up so you can configure that using",
    "start": "1204720",
    "end": "1211120"
  },
  {
    "text": "channels and the subscriptions they kind of define an interest in the channel so if",
    "start": "1211120",
    "end": "1218880"
  },
  {
    "text": "you're interested in messages in the channel you would create a subscription to it now normally you don't have to care",
    "start": "1218880",
    "end": "1224559"
  },
  {
    "text": "about channel subscription and these are kind of done for you under the covers as you create brokers and",
    "start": "1224559",
    "end": "1230159"
  },
  {
    "text": "triggers okay but in earlier versions okay native you you did have to create your channels",
    "start": "1230159",
    "end": "1236880"
  },
  {
    "text": "and subscriptions yourself and that's why i'm talking about them now and also you know when you create broken trigger",
    "start": "1236880",
    "end": "1243600"
  },
  {
    "text": "under the scenes they are creating subscriptions so it's good to know about them so that's why i'm talking about",
    "start": "1243600",
    "end": "1248640"
  },
  {
    "text": "them right now but again normally you would only care about broker and trigger and not so much about channels and subscriptions",
    "start": "1248640",
    "end": "1256000"
  },
  {
    "text": "now as i mentioned the event format in k native is cloud event and cloud event it's an open source",
    "start": "1256000",
    "end": "1261440"
  },
  {
    "text": "event eventing format um it's on cloud events or io",
    "start": "1261440",
    "end": "1266960"
  },
  {
    "text": "and the basic format of cloud event kind of looks like this so there's the version which is",
    "start": "1266960",
    "end": "1273200"
  },
  {
    "text": "basically 1.0 now it used to be 0.2 0.5 but now it's 1.0",
    "start": "1273200",
    "end": "1278640"
  },
  {
    "text": "and i think stabilize is the version of the cloud event then all the cloud events they need to have type",
    "start": "1278640",
    "end": "1285120"
  },
  {
    "text": "source and i think yeah id and type so these are kind of the the the fields that they all need to",
    "start": "1285120",
    "end": "1292720"
  },
  {
    "text": "have so the type of the message where it's coming from and then the unique idea of the of the",
    "start": "1292720",
    "end": "1298799"
  },
  {
    "text": "message and then the data of the cloud event is the thing that",
    "start": "1298799",
    "end": "1304400"
  },
  {
    "text": "actually holds the message that you care about for example in this case we have different kinds of messages coming in sdp github",
    "start": "1304400",
    "end": "1310480"
  },
  {
    "text": "google container storage kind of events they all come in and then they they get read by native",
    "start": "1310480",
    "end": "1317200"
  },
  {
    "text": "sources and then they get converted into cloud events and then in the data field you will see the github payload right so",
    "start": "1317200",
    "end": "1324400"
  },
  {
    "text": "once these messages hit to the broker you will basically just deal with cloud events from then on",
    "start": "1324400",
    "end": "1330320"
  },
  {
    "text": "and then your services we will only care about um cloud events and they will only look at",
    "start": "1330320",
    "end": "1335600"
  },
  {
    "text": "usually the data field and get what they need from the data field so this is the format of cloud events",
    "start": "1335600",
    "end": "1340880"
  },
  {
    "text": "and it's kind of a simple format you can actually within your services you can create",
    "start": "1340880",
    "end": "1346720"
  },
  {
    "text": "these cloud events and send them out yourself as well if you want now in terms of",
    "start": "1346720",
    "end": "1352080"
  },
  {
    "text": "event sources um so these are the things that read events into your community into your",
    "start": "1352080",
    "end": "1357919"
  },
  {
    "text": "k-nato cluster there's a bunch of them this is not the full list the full list is at this link you can",
    "start": "1357919",
    "end": "1364799"
  },
  {
    "text": "take a look but you can read a lot of different things so you can read for example apache",
    "start": "1364799",
    "end": "1370080"
  },
  {
    "text": "kafka messages you can read google cloud pops up messages you can read i don't know kubernetes",
    "start": "1370080",
    "end": "1376320"
  },
  {
    "text": "events or google cloud storage events so there's a lot of things that you can read externally and you can bring them",
    "start": "1376320",
    "end": "1382559"
  },
  {
    "text": "into your k native cluster now once the once you read them in um",
    "start": "1382559",
    "end": "1389679"
  },
  {
    "text": "they will and they will get to a service and this service is either",
    "start": "1389679",
    "end": "1396400"
  },
  {
    "text": "um a canadian service or a community service it can be both um and",
    "start": "1396400",
    "end": "1403280"
  },
  {
    "text": "of course how it gets there i'm gonna explain later uh and it it depends whether you know",
    "start": "1403280",
    "end": "1409520"
  },
  {
    "text": "it's um it could be a subscribers i mean in this case we had a trigger and this trigger talks to a broker in",
    "start": "1409520",
    "end": "1416320"
  },
  {
    "text": "this case it's talking to the default broker and the subscriber it's a k native",
    "start": "1416320",
    "end": "1421360"
  },
  {
    "text": "service and i know this is a candidate service because the api version is decay native api but if i comment this out and then put",
    "start": "1421360",
    "end": "1428559"
  },
  {
    "text": "this other one in the api version v1 then at that point you would be expecting a humanities service so you",
    "start": "1428559",
    "end": "1434559"
  },
  {
    "text": "can you can swap each one of them you can either have a kubernetes server okay native service and in this case this is a subscriber to",
    "start": "1434559",
    "end": "1441360"
  },
  {
    "text": "the trigger but then you can also have event sources directly talking to this to the services",
    "start": "1441360",
    "end": "1446960"
  },
  {
    "text": "and then that will be defined as a sync as an event sync so how do you define the service and how",
    "start": "1446960",
    "end": "1452640"
  },
  {
    "text": "how the messages get to it depends how you connect things and we'll look at some examples of that but eventually these services are the",
    "start": "1452640",
    "end": "1458640"
  },
  {
    "text": "ones that will consume these events now channel is the persistence layer",
    "start": "1458640",
    "end": "1464799"
  },
  {
    "text": "um it defines how things travel for example in all of my demos i",
    "start": "1464799",
    "end": "1471120"
  },
  {
    "text": "use in-memory channel in memory because it's easy but in production you wouldn't use it",
    "start": "1471120",
    "end": "1477120"
  },
  {
    "text": "because you don't want to lose messages so maybe you want to use a kafka channel or you want to use a popsum",
    "start": "1477120",
    "end": "1482640"
  },
  {
    "text": "google pop sub channel so there's a lot of options here and depending on what kind of kind of channel you use um you need to have different",
    "start": "1482640",
    "end": "1490320"
  },
  {
    "text": "configurations and different setup for it so you need to look into this before you deploy your k native instance",
    "start": "1490320",
    "end": "1498000"
  },
  {
    "text": "in production so there is this notion of default channel um so broker is the thing that will receive",
    "start": "1498000",
    "end": "1505679"
  },
  {
    "text": "messages and brokers they can have default channels you configure default channel",
    "start": "1505679",
    "end": "1511120"
  },
  {
    "text": "and usually you would do that at the beginning so you would create your channel and then you would configure your broker to use that default channel",
    "start": "1511120",
    "end": "1517200"
  },
  {
    "text": "and then you would forget about the channel you don't really need to care about channels as much from then on because everything",
    "start": "1517200",
    "end": "1522799"
  },
  {
    "text": "is done under the covers and then there's this notion of",
    "start": "1522799",
    "end": "1528480"
  },
  {
    "text": "subscriptions um subscriptions they connect services",
    "start": "1528480",
    "end": "1534720"
  },
  {
    "text": "to the channels for example in this case we have a subscription and it's talking to it's make creating a",
    "start": "1534720",
    "end": "1541919"
  },
  {
    "text": "subscription to the in-memory channel called channel and then the subscriber is a service so",
    "start": "1541919",
    "end": "1547039"
  },
  {
    "text": "basically service will get messages from the channel um you would do this if you had to create",
    "start": "1547039",
    "end": "1552880"
  },
  {
    "text": "your channels and subscriptions manually but then usually again this is not something that you have to",
    "start": "1552880",
    "end": "1558000"
  },
  {
    "text": "worry about it too much yourself and subscription also has this notion of event replies",
    "start": "1558000",
    "end": "1564240"
  },
  {
    "text": "meaning you know this defines um you know that this service will get",
    "start": "1564240",
    "end": "1570080"
  },
  {
    "text": "the messages but then you can also define that you know when this service processes this message it can it will send the",
    "start": "1570080",
    "end": "1577120"
  },
  {
    "text": "output to another channel um and i'll show you an example of that shortly so it's not just consuming the messages",
    "start": "1577120",
    "end": "1582559"
  },
  {
    "text": "but you can also reply to messages um and then get the reply sent to other places if",
    "start": "1582559",
    "end": "1588159"
  },
  {
    "text": "you want all right so broker is the thing that you should normally care about",
    "start": "1588159",
    "end": "1594799"
  },
  {
    "text": "um so there is broker is basically um this thing that combines like channel",
    "start": "1594799",
    "end": "1601600"
  },
  {
    "text": "and event replies and filters into the into a single thing um you would inject a broker into your",
    "start": "1601600",
    "end": "1608559"
  },
  {
    "text": "namespace by by adding a label to your namespace and then when once you have the label to",
    "start": "1608559",
    "end": "1614799"
  },
  {
    "text": "your namespace your broker will be created and it will be injected and then it will be waiting for messages to come in",
    "start": "1614799",
    "end": "1620720"
  },
  {
    "text": "um it's typically one broker namespace so if you have multiple namespaces",
    "start": "1620720",
    "end": "1625840"
  },
  {
    "text": "you'll have multiple brokers and then these brokers they have a known url so this url that the broker has",
    "start": "1625840",
    "end": "1631520"
  },
  {
    "text": "for example in this case the name of the broker is default and this default refers to the fact that",
    "start": "1631520",
    "end": "1637360"
  },
  {
    "text": "this is in default namespace so using this url you can actually send messages to the broker",
    "start": "1637360",
    "end": "1642720"
  },
  {
    "text": "from different services and then then broker will route them to other services depending on the triggers that are",
    "start": "1642720",
    "end": "1648640"
  },
  {
    "text": "defined so usually this is something that you would need to care about and then trigger um defines",
    "start": "1648640",
    "end": "1656960"
  },
  {
    "text": "who gets the messages from the broker and then also defines a filtering mechanism right so in this case if you'd be",
    "start": "1656960",
    "end": "1664080"
  },
  {
    "text": "defining a trigger and let's imagine he didn't have a filter here uh if we had a subscriber",
    "start": "1664080",
    "end": "1670480"
  },
  {
    "text": "then this service which is also called filter will get all the messages from the",
    "start": "1670480",
    "end": "1675840"
  },
  {
    "text": "default broker right but then if you define a filter like this and then the filter type so this refers",
    "start": "1675840",
    "end": "1682799"
  },
  {
    "text": "to the typo the cloud event and the type is uh google cloud search object finalizer",
    "start": "1682799",
    "end": "1688799"
  },
  {
    "text": "this is the event that gets triggered when you save an image to a google cloud cloud storage bucket",
    "start": "1688799",
    "end": "1694640"
  },
  {
    "text": "so that's the type of the event that's that's the type of the cloud event that will be sent so we are filtering on those so only",
    "start": "1694640",
    "end": "1700720"
  },
  {
    "text": "this kind of messages will get to the to the service you can do that as well again trigger is something that you",
    "start": "1700720",
    "end": "1707440"
  },
  {
    "text": "would need to care about along with the broker all right so these are the kind of the main things uh about knitting",
    "start": "1707440",
    "end": "1712880"
  },
  {
    "text": "eventing and now i want to look at how you can actually set up different delivery methods so how the messages get",
    "start": "1712880",
    "end": "1719679"
  },
  {
    "text": "from one place another place using different methods now these are actually my names i i came up",
    "start": "1719679",
    "end": "1726080"
  },
  {
    "text": "with these names because in when you look at native events and documentation um it's kind of",
    "start": "1726080",
    "end": "1732000"
  },
  {
    "text": "i think it's getting better now but uh at the beginning it wasn't clear like what you should use when they had they had this all these",
    "start": "1732000",
    "end": "1739520"
  },
  {
    "text": "different methods and it wasn't clear like what was the best um",
    "start": "1739520",
    "end": "1745360"
  },
  {
    "text": "the way i see it is that broker and trigger delivery is the thing that you should care about but then this simple and complex little",
    "start": "1745360",
    "end": "1751919"
  },
  {
    "text": "way i call them they could be useful as well depending on your use case because sometimes you want to do something very simple",
    "start": "1751919",
    "end": "1758320"
  },
  {
    "text": "and for that this simply delivery works but then um sometimes like you really need to",
    "start": "1758320",
    "end": "1764000"
  },
  {
    "text": "work with at the broker trigger level so usually i would say you simple airway something you might",
    "start": "1764000",
    "end": "1769919"
  },
  {
    "text": "need to use broker and trigger does everything that this complex does but i'm going to show you the complex as",
    "start": "1769919",
    "end": "1776159"
  },
  {
    "text": "well just so that you have an idea of what happens under the covers of broker and trigger okay let me check the time quickly",
    "start": "1776159",
    "end": "1784320"
  },
  {
    "text": "all right so we still have 30 minutes which is good all right so in simple therapy really uh what we are doing is that we have an",
    "start": "1784320",
    "end": "1791440"
  },
  {
    "text": "event source and we connected event source to a service k native or community service",
    "start": "1791440",
    "end": "1797279"
  },
  {
    "text": "directly right so that i call it simple because it's very simple to understand but at the same time it's it's also very",
    "start": "1797279",
    "end": "1803840"
  },
  {
    "text": "fragile um because your you're there's no persistence layer here right",
    "start": "1803840",
    "end": "1809520"
  },
  {
    "text": "it's everything is in memory so if source goes down if the service goes down then things can can get lost um so it's",
    "start": "1809520",
    "end": "1817360"
  },
  {
    "text": "useful for simple use cases where you don't care about persistence or whether you want to do something but",
    "start": "1817360",
    "end": "1822960"
  },
  {
    "text": "it doesn't have to happen all the time but it's limited i don't think i would use this in production",
    "start": "1822960",
    "end": "1828640"
  },
  {
    "text": "if things are critical but it's still useful in certain use cases and this is also one-to-one so you can",
    "start": "1828640",
    "end": "1835039"
  },
  {
    "text": "have one source one service but if you need to send them same message to multiple services then you cannot use this this kind of",
    "start": "1835039",
    "end": "1841279"
  },
  {
    "text": "delivery now in this in the second delivery method",
    "start": "1841279",
    "end": "1846960"
  },
  {
    "text": "i call it complexity in here you can do one too many so what you do is instead of going from source",
    "start": "1846960",
    "end": "1852640"
  },
  {
    "text": "to service you introduce a channel in the middle and this channel it can be an in-memory",
    "start": "1852640",
    "end": "1858399"
  },
  {
    "text": "channel it doesn't have to be something persistent but if you want it can also be a kafka type of channel as well",
    "start": "1858399",
    "end": "1864240"
  },
  {
    "text": "and then once you have the channel the source talks to the channel so it will send the message to the channel and then from the channel um you would",
    "start": "1864240",
    "end": "1871919"
  },
  {
    "text": "create subscriptions and you'll link services to them so so you will have two subscriptions to services",
    "start": "1871919",
    "end": "1877760"
  },
  {
    "text": "and then the message would come in and it would be basically fanned out to a couple of services now you can also",
    "start": "1877760",
    "end": "1884640"
  },
  {
    "text": "reply to events and i mentioned this when i was explaining subscriptions so in this case for example we are",
    "start": "1884640",
    "end": "1889840"
  },
  {
    "text": "sending the message again to the channel we have two subscriptions but then service two when it gets the",
    "start": "1889840",
    "end": "1895440"
  },
  {
    "text": "message it will reply back with another cloud event and this reply",
    "start": "1895440",
    "end": "1901120"
  },
  {
    "text": "you can in subscription you can define it so that it will go to another channel right so",
    "start": "1901120",
    "end": "1906640"
  },
  {
    "text": "this reply ends up in another channel and from this channel you can create a subscription",
    "start": "1906640",
    "end": "1912000"
  },
  {
    "text": "and the subscription can go to another service right so you can see that there's um there's a lot of things that",
    "start": "1912000",
    "end": "1920080"
  },
  {
    "text": "you can do and but but at the same time you things are getting more complicated because we have to create",
    "start": "1920080",
    "end": "1925360"
  },
  {
    "text": "multiple channels now we have to create multiple subscriptions and trying to keep track of all of this",
    "start": "1925360",
    "end": "1931039"
  },
  {
    "text": "can get quite complicated even for simple use cases like this so that's why they introduced the broker",
    "start": "1931039",
    "end": "1937679"
  },
  {
    "text": "and trigger delivery so in brokerage trigger delivery what you have is a broker in the namespace",
    "start": "1937679",
    "end": "1944960"
  },
  {
    "text": "the source sends the message to the broker and then the services create triggers",
    "start": "1944960",
    "end": "1950000"
  },
  {
    "text": "with filters and specify what kind of messages they're interested in",
    "start": "1950000",
    "end": "1955120"
  },
  {
    "text": "so in this case uh trigger one and trigger two they're interested they're filtering on these kind of messages",
    "start": "1955120",
    "end": "1960320"
  },
  {
    "text": "and any service can reply back so service 2 is replying back with um this kind of message and since",
    "start": "1960320",
    "end": "1967519"
  },
  {
    "text": "we have the filters uh this message goes back to the broker as if it's a new message and trigger one and trigger two won't",
    "start": "1967519",
    "end": "1973919"
  },
  {
    "text": "get it because they're filtering on these kind of messages but trigger three will get it because it's filtering only this this kind of",
    "start": "1973919",
    "end": "1979440"
  },
  {
    "text": "message right so when you look at this use case in this use case they are doing the same thing",
    "start": "1979440",
    "end": "1984640"
  },
  {
    "text": "right you have fan out to two services and one event reply that goes to another service but here we need to create two",
    "start": "1984640",
    "end": "1991760"
  },
  {
    "text": "channels three subscriptions and we have to set the event reply whereas here we are just creating a broker and three",
    "start": "1991760",
    "end": "1998240"
  },
  {
    "text": "triggers and then things just work so that's why this is an easier way of dealing with um",
    "start": "1998240",
    "end": "2004080"
  },
  {
    "text": "with messages and actually um let me show you some demos on this on this so let me go",
    "start": "2004080",
    "end": "2010080"
  },
  {
    "text": "back to my presentation so let's take a look at",
    "start": "2010080",
    "end": "2019840"
  },
  {
    "text": "so this is this is again part of my tutorial um let's look at the simple one first so you remember in the simple one",
    "start": "2020640",
    "end": "2026960"
  },
  {
    "text": "we go from source to service directly so in this case i'm defining a",
    "start": "2026960",
    "end": "2033200"
  },
  {
    "text": "source source.yaml and the kind is a ping source pingsource it's a source that sends",
    "start": "2033200",
    "end": "2040320"
  },
  {
    "text": "a json data on a schedule so here you define the schedule i think this means it's every one minute",
    "start": "2040320",
    "end": "2047840"
  },
  {
    "text": "and then the data is just a message that says hello world from ping so",
    "start": "2047840",
    "end": "2053118"
  },
  {
    "text": "this is what the source will send and here we are defining a sync right you see like here it's not no",
    "start": "2053119",
    "end": "2059040"
  },
  {
    "text": "subscription it's a sync it's a direct connection and this thing is like a native service",
    "start": "2059040",
    "end": "2064240"
  },
  {
    "text": "called service and if you look at service.yaml then this is just a k-nato service",
    "start": "2064240",
    "end": "2070158"
  },
  {
    "text": "that's basically an event display it will display the received messages um let me deploy",
    "start": "2070159",
    "end": "2076560"
  },
  {
    "text": "this so you can take a look um i don't think we need to say anymore so let's exit this and um",
    "start": "2076560",
    "end": "2084398"
  },
  {
    "text": "what i want to do is let me go to",
    "start": "2084399",
    "end": "2089760"
  },
  {
    "text": "eventing and let's go to simple so kubernetes apply and i will",
    "start": "2089760",
    "end": "2097118"
  },
  {
    "text": "create the source create the service so you can see that the service and the source are created",
    "start": "2097119",
    "end": "2102320"
  },
  {
    "text": "and let's just paint source let's look at the ping source it's ready and the sync is going to be",
    "start": "2102320",
    "end": "2108400"
  },
  {
    "text": "this service and if you do render service you can see the hello world is there as well",
    "start": "2108400",
    "end": "2113520"
  },
  {
    "text": "and if you look at the pods the this is my service pod and let's actually look at",
    "start": "2113520",
    "end": "2118880"
  },
  {
    "text": "the logs of the service",
    "start": "2118880",
    "end": "2122160"
  },
  {
    "text": "so now this is waiting for an event to come in and within a minute hopefully if things",
    "start": "2124400",
    "end": "2129680"
  },
  {
    "text": "are good it should receive the message so let's just wait for that to happen",
    "start": "2129680",
    "end": "2135760"
  },
  {
    "text": "hopefully it won't take too long and then in the meantime i can show you the other example the",
    "start": "2136960",
    "end": "2145200"
  },
  {
    "text": "complex example so in that case what we wanted to do is",
    "start": "2145200",
    "end": "2151250"
  },
  {
    "text": "[Music] we create a channel so this is an in-memory channel and we have a source again the ping",
    "start": "2151250",
    "end": "2157920"
  },
  {
    "text": "source with the same kind of message but the chat that but now this sync is not a",
    "start": "2157920",
    "end": "2164000"
  },
  {
    "text": "service but it's the channel then we create two services service one this is a",
    "start": "2164000",
    "end": "2170079"
  },
  {
    "text": "community service service to another candidate service and the subscriptions",
    "start": "2170079",
    "end": "2175119"
  },
  {
    "text": "so in the subscription we are connecting this channel to this subscriber and in this",
    "start": "2175119",
    "end": "2181599"
  },
  {
    "text": "subscription we are connecting again to the same channel but the service is different so once we set this up um it will do fan",
    "start": "2181599",
    "end": "2188800"
  },
  {
    "text": "out um like i explained let's go back to our example and see",
    "start": "2188800",
    "end": "2194240"
  },
  {
    "text": "if we actually see the message yeah so we see the message as you can see it was waiting then it received this",
    "start": "2194240",
    "end": "2201200"
  },
  {
    "text": "cloud event and then this is the id this is the source it's you can see this from ping",
    "start": "2201200",
    "end": "2206560"
  },
  {
    "text": "source and this is the type of the message and then the data is the data that um that we passed",
    "start": "2206560",
    "end": "2213119"
  },
  {
    "text": "in so it seems like it's working so let's delete this service source and then",
    "start": "2213119",
    "end": "2222560"
  },
  {
    "text": "sometimes yeah for some reason the source uh the sources that they hang up on deletion but let's let's take",
    "start": "2222960",
    "end": "2229680"
  },
  {
    "text": "a look at resource",
    "start": "2229680",
    "end": "2233599"
  },
  {
    "text": "let me try again source so we'll let that happen in the",
    "start": "2235760",
    "end": "2241920"
  },
  {
    "text": "background but in the meantime uh so that was complex now i want to show you the one with the reply so in the reply",
    "start": "2241920",
    "end": "2249680"
  },
  {
    "text": "it was the same kind of setup so we have one channel second channel there in memory one",
    "start": "2249680",
    "end": "2255119"
  },
  {
    "text": "service second service but this service doesn't reply it when it receives a message it will",
    "start": "2255119",
    "end": "2261280"
  },
  {
    "text": "create a cloud event and send a message back and maybe i will show you the code for that and the service three",
    "start": "2261280",
    "end": "2266880"
  },
  {
    "text": "it's another event display the source is a pin source um that basically just pings the first",
    "start": "2266880",
    "end": "2273520"
  },
  {
    "text": "channel the subscription one connects service one to channel one subscription two this is more",
    "start": "2273520",
    "end": "2279440"
  },
  {
    "text": "interesting so this connects service two to channel one",
    "start": "2279440",
    "end": "2284720"
  },
  {
    "text": "and then it connects the reply or service to this is the reply to second channel",
    "start": "2284720",
    "end": "2290720"
  },
  {
    "text": "right so when service two replies it will go to the second channel so that's how you do event replies",
    "start": "2290720",
    "end": "2295920"
  },
  {
    "text": "and subscription three will just connect service 3 to channel 2 and that's it so this um we can actually",
    "start": "2295920",
    "end": "2302640"
  },
  {
    "text": "try this out if our service our service is deleted",
    "start": "2302640",
    "end": "2307839"
  },
  {
    "text": "so let me go to complex with reply and let's just first create the channels",
    "start": "2307839",
    "end": "2316640"
  },
  {
    "text": "and then let's create the services source 2 source 3.",
    "start": "2318480",
    "end": "2326960"
  },
  {
    "text": "then let's create the subscriptions",
    "start": "2326960",
    "end": "2330400"
  },
  {
    "text": "and then finally let's create the source the actual ping source all right so if you look at",
    "start": "2333200",
    "end": "2341359"
  },
  {
    "text": "let's do this look at the pods they're running um and if you look at the logs of",
    "start": "2341359",
    "end": "2347440"
  },
  {
    "text": "service one you should just wait right now",
    "start": "2347440",
    "end": "2354079"
  },
  {
    "text": "it actually already received the message so you can see they receive the message and the interesting one is service too",
    "start": "2354079",
    "end": "2362320"
  },
  {
    "text": "if you look at the logs of service too",
    "start": "2362320",
    "end": "2367990"
  },
  {
    "text": "[Applause] now this one it received the cloud event",
    "start": "2367990",
    "end": "2374000"
  },
  {
    "text": "and then it's replying the cloud event that says this is a canadian reply so this is an",
    "start": "2374000",
    "end": "2379119"
  },
  {
    "text": "event reply and then thirdly let's look at the third service",
    "start": "2379119",
    "end": "2385519"
  },
  {
    "text": "service three see if it received it'll reply",
    "start": "2385680",
    "end": "2390240"
  },
  {
    "text": "you can see that this one we see the cloud event and this is the k network live so you receive the event",
    "start": "2392079",
    "end": "2397119"
  },
  {
    "text": "so it seems like it's working um again let me just delete this stuff because i like things",
    "start": "2397119",
    "end": "2404560"
  },
  {
    "text": "clean in my cluster and so this one yamo",
    "start": "2404560",
    "end": "2411599"
  },
  {
    "text": "studio source three ammo let's delete the subscription",
    "start": "2411599",
    "end": "2418640"
  },
  {
    "text": "now finally let's delete the source all right everything is gone and then the last one i i want to let's",
    "start": "2421920",
    "end": "2427440"
  },
  {
    "text": "check the time here i still have a little bit of time last one i want to show you is the broker one so this was",
    "start": "2427440",
    "end": "2432560"
  },
  {
    "text": "um complex with reply but with broker things become much easier so let's look at the broker one so in",
    "start": "2432560",
    "end": "2438640"
  },
  {
    "text": "broker first of all i already injected a broker in my name space and if i do tell get broker you will see",
    "start": "2438640",
    "end": "2446000"
  },
  {
    "text": "that there's a broker in my namespace i do that by labeling my namespace so if i do cube ct i'll get in space",
    "start": "2446000",
    "end": "2453440"
  },
  {
    "text": "default i don't know how i see um",
    "start": "2453440",
    "end": "2458640"
  },
  {
    "text": "what i see i just want to see the label yeah so if you if i look at the default",
    "start": "2458640",
    "end": "2464000"
  },
  {
    "text": "namespace the label is k native event injection enabled by enab by doing that",
    "start": "2464000",
    "end": "2469359"
  },
  {
    "text": "i am adding a broker to my namespace then um",
    "start": "2469359",
    "end": "2474960"
  },
  {
    "text": "i have three services and let me actually show you the code here um just look up broker so service one",
    "start": "2474960",
    "end": "2481920"
  },
  {
    "text": "is the same as like event display one service to event display with the reply service three is event",
    "start": "2481920",
    "end": "2487920"
  },
  {
    "text": "display again the source is a ping source now this sync is not a channel anymore it's",
    "start": "2487920",
    "end": "2493200"
  },
  {
    "text": "broker in my default name space trigger one um is triggering on ping",
    "start": "2493200",
    "end": "2499520"
  },
  {
    "text": "events so it will receive the pinging events there's no reply uh trigger two it will also get ping",
    "start": "2499520",
    "end": "2505920"
  },
  {
    "text": "events and then trigger three it will only get high from cognitive events so this is",
    "start": "2505920",
    "end": "2512560"
  },
  {
    "text": "the event replay that we're able to see so that's how you can set filters with triggers and that's how you make sure that",
    "start": "2512560",
    "end": "2518160"
  },
  {
    "text": "things are getting to the right surfaces so if we do this let's again create first let's create",
    "start": "2518160",
    "end": "2525119"
  },
  {
    "text": "the services service to service three",
    "start": "2525119",
    "end": "2530480"
  },
  {
    "text": "and let's also create source and finally connect source to",
    "start": "2530480",
    "end": "2537839"
  },
  {
    "text": "from broker to to triggers to services so let's create the triggers",
    "start": "2537839",
    "end": "2544240"
  },
  {
    "text": "all right and now if we look at services they're there oh let me delete hello",
    "start": "2546480",
    "end": "2553280"
  },
  {
    "text": "because we don't need anymore all right and then let's look at the triggers you can see that trigger is ready they",
    "start": "2553280",
    "end": "2559920"
  },
  {
    "text": "are talking to the default broker and i can see that trigger one is looking to service one trigger two service two so on and so",
    "start": "2559920",
    "end": "2565839"
  },
  {
    "text": "forth now just to look at that this actually works i'm sorry",
    "start": "2565839",
    "end": "2572000"
  },
  {
    "text": "let's look at the logo service three and if everything worked it should get the message",
    "start": "2572000",
    "end": "2579520"
  },
  {
    "text": "of the event reply yeah you can see that you receive the cloud event and this is",
    "start": "2579520",
    "end": "2584960"
  },
  {
    "text": "kennedy event reply all right cool again let me delete my stuff",
    "start": "2584960",
    "end": "2591280"
  },
  {
    "text": "service one service two search three let's actually do it all at",
    "start": "2591280",
    "end": "2597200"
  },
  {
    "text": "once source trigger one three two three three all right so we're",
    "start": "2597200",
    "end": "2606480"
  },
  {
    "text": "back all right now what i want to talk about now is something called k native gcp project",
    "start": "2606480",
    "end": "2614160"
  },
  {
    "text": "and this is another open source project and what what it does is that it it kind of makes reading google cloud",
    "start": "2614160",
    "end": "2621920"
  },
  {
    "text": "events much easier it gives you configuration and it also gives you some event sources",
    "start": "2621920",
    "end": "2628720"
  },
  {
    "text": "by default and you can use these event source sources to pull messages into um into your cluster",
    "start": "2628720",
    "end": "2636319"
  },
  {
    "text": "so this cloud pops up source read pops up messages from google cloud storage source reads storage events",
    "start": "2636319",
    "end": "2643359"
  },
  {
    "text": "scheduler source reads class scheduler events so on and so forth so you can see that we have the sources and i actually built",
    "start": "2643359",
    "end": "2650000"
  },
  {
    "text": "a couple of demos using this event so i want to show you those because in these demos you can see how everything really comes together",
    "start": "2650000",
    "end": "2657440"
  },
  {
    "text": "so in this first demo i don't know if i will have time let's check i don't know if i will have time to show",
    "start": "2657440",
    "end": "2662880"
  },
  {
    "text": "both of them but i'll talk about them and then we'll maybe look at one of them but the source code is out there in my",
    "start": "2662880",
    "end": "2669040"
  },
  {
    "text": "tutorial so in this image processing pipeline what i'm doing is that end users",
    "start": "2669040",
    "end": "2674880"
  },
  {
    "text": "they save some images to a search bucket this is images input bucket and then we",
    "start": "2674880",
    "end": "2683040"
  },
  {
    "text": "once the in the image is saved this can generate an event and we read",
    "start": "2683040",
    "end": "2689599"
  },
  {
    "text": "that event using google cloud storage source so that event gets to k native using the source",
    "start": "2689599",
    "end": "2695839"
  },
  {
    "text": "and then it goes to the broker and from broker it goes to an ak native service called filter now this",
    "start": "2695839",
    "end": "2701680"
  },
  {
    "text": "filter will receive the message and we'll look at the message and say okay is this message a safe message",
    "start": "2701680",
    "end": "2707839"
  },
  {
    "text": "and it will use a vision api which is a machine learning api in google cloud",
    "start": "2707839",
    "end": "2712960"
  },
  {
    "text": "and it will determine whether this image is a violent image or whether it's",
    "start": "2712960",
    "end": "2718079"
  },
  {
    "text": "a it's an adult image or anything like that and if not then it will pass the message on and the way it passes on is basically",
    "start": "2718079",
    "end": "2725040"
  },
  {
    "text": "creates a new cloud event and then it says it sends it back to the broker and says okay this there's a new image that's been",
    "start": "2725040",
    "end": "2732319"
  },
  {
    "text": "uploaded you can work with that now the resizer and the i have two other services resizer and labeler",
    "start": "2732319",
    "end": "2738960"
  },
  {
    "text": "these will be listening for this event this cloud event and resize that once it receives the",
    "start": "2738960",
    "end": "2744000"
  },
  {
    "text": "event it will resize the image so the images are big so it will make it smaller",
    "start": "2744000",
    "end": "2749200"
  },
  {
    "text": "using um i forgot the name of the library but in an image something library um we can",
    "start": "2749200",
    "end": "2755440"
  },
  {
    "text": "take a look and then it will save it to an output folder output cluster so we'll resize the image and save it here",
    "start": "2755440",
    "end": "2762079"
  },
  {
    "text": "and it will also generate a new message um and send it to the broker and it will say okay i have this resize image",
    "start": "2762079",
    "end": "2769040"
  },
  {
    "text": "and now there's another service called watermarker that will receive this resize event and it will take the resize",
    "start": "2769040",
    "end": "2775280"
  },
  {
    "text": "image from from here and it will add a water mic on top of the image and the watchmaker",
    "start": "2775280",
    "end": "2780720"
  },
  {
    "text": "will just say google cloud platform and then it will say that images as well similarly once the filter sends the message the",
    "start": "2780720",
    "end": "2787440"
  },
  {
    "text": "label will receive the message and it will again use the vision api and it will extract the labels out of the image so",
    "start": "2787440",
    "end": "2794720"
  },
  {
    "text": "it will figure out what the image is about and then it will save those labels as a text file to the output",
    "start": "2794720",
    "end": "2800480"
  },
  {
    "text": "images output so you can see that there's a it's event driven so saving an image triggers the event and",
    "start": "2800480",
    "end": "2805839"
  },
  {
    "text": "then filter sends other events so it's all event driven and in the end we will have one image here and then we should have",
    "start": "2805839",
    "end": "2812640"
  },
  {
    "text": "resize image water mic image and the labels of the image so i built this using k native",
    "start": "2812640",
    "end": "2819119"
  },
  {
    "text": "let's take a look at it and then if we have time we can look at the other example as well so here it's under image processing",
    "start": "2819119",
    "end": "2828839"
  },
  {
    "text": "pipeline so i explained this whole workflow here um",
    "start": "2828839",
    "end": "2834319"
  },
  {
    "text": "first we create some storage buckets so this is bucket one for the input and bucket two for the output then we need to create a google",
    "start": "2834319",
    "end": "2840880"
  },
  {
    "text": "cloud storage store so this is the thing that will read messages into our cluster um let me show you the",
    "start": "2840880",
    "end": "2846880"
  },
  {
    "text": "yaml file for this quickly so the yamo is this is the kind of the event source",
    "start": "2846880",
    "end": "2852720"
  },
  {
    "text": "so google cloud search source you give it a name this is the bucket that is listening and then once",
    "start": "2852720",
    "end": "2858000"
  },
  {
    "text": "it receives an event it sends it to the broker in your namespace right and then once that's done um",
    "start": "2858000",
    "end": "2865200"
  },
  {
    "text": "we already have a broker injected in our namespace so the broker is there we enable the vision api in our cluster",
    "start": "2865200",
    "end": "2871920"
  },
  {
    "text": "and then we create our services um the filter service um let's actually look at the code just",
    "start": "2871920",
    "end": "2879040"
  },
  {
    "text": "quickly well maybe you can look at the configuration first so first",
    "start": "2879040",
    "end": "2885599"
  },
  {
    "text": "the service configuration um it just points to the image and then it",
    "start": "2885599",
    "end": "2891119"
  },
  {
    "text": "also points to the bucket like where we're going to find the images because we need that in our code bypass",
    "start": "2891119",
    "end": "2898000"
  },
  {
    "text": "it is environmental and then the trigger will basically",
    "start": "2898000",
    "end": "2904000"
  },
  {
    "text": "the name of the trigger is filter then it will filter on object finalize so only when the images are saved in the",
    "start": "2904000",
    "end": "2910240"
  },
  {
    "text": "bucket and it will send it to the service filter and then in the code",
    "start": "2910240",
    "end": "2917839"
  },
  {
    "text": "in startup this is where we this is when we receive the event um",
    "start": "2918000",
    "end": "2925280"
  },
  {
    "text": "basically we receive an http post and then i have this event reader it's basically",
    "start": "2925280",
    "end": "2932319"
  },
  {
    "text": "cloud event reader class this will read the cloud event in our um in our in the body then from the",
    "start": "2932319",
    "end": "2940960"
  },
  {
    "text": "cloud event we figure out the bucket bucket of the image and the name of the image",
    "start": "2940960",
    "end": "2947920"
  },
  {
    "text": "and if if we receive notifications from other buckets then we just ignore it",
    "start": "2947920",
    "end": "2954240"
  },
  {
    "text": "and if not then we figure out where this image lives so that's the search url and then we call this method called",
    "start": "2954240",
    "end": "2961839"
  },
  {
    "text": "is picture safe uh in this method we create a vision client so this is the",
    "start": "2961839",
    "end": "2967280"
  },
  {
    "text": "client talk to vision api and then we call detect safe search async and we point to the",
    "start": "2967280",
    "end": "2972800"
  },
  {
    "text": "image and then this returns us some response and then we basically look at you know is this image an adult image is",
    "start": "2972800",
    "end": "2979920"
  },
  {
    "text": "it likely no is it medical is it spoof is a violence whatever it is and if all of these are wrong then",
    "start": "2979920",
    "end": "2986480"
  },
  {
    "text": "we say okay this picture is safe and then then if it's not safe we just",
    "start": "2986480",
    "end": "2991680"
  },
  {
    "text": "return but if it's safe then we create this body so this body says this is the bucket this is name and",
    "start": "2991680",
    "end": "2998640"
  },
  {
    "text": "we write it out and um this event writer it's a cloud um",
    "start": "2998640",
    "end": "3004480"
  },
  {
    "text": "you don't see it here but basically it's a cloud event writer so it will write this request as a cloud event right and this will go to the broker and",
    "start": "3004480",
    "end": "3010720"
  },
  {
    "text": "then it will get to get to other services that are listed in there so that's filter service",
    "start": "3010720",
    "end": "3016480"
  },
  {
    "text": "um then resizer will receive the message and resize it",
    "start": "3016480",
    "end": "3021680"
  },
  {
    "text": "and then water micro will take it and at the watermark and the labeler will",
    "start": "3021680",
    "end": "3026720"
  },
  {
    "text": "take it and extract the labels i mean the code for them are pretty much the same let's just look at the water marker just",
    "start": "3026720",
    "end": "3032319"
  },
  {
    "text": "quickly so that you get an idea of that as well uh image water marker",
    "start": "3032319",
    "end": "3038240"
  },
  {
    "text": "c sharp but and by the way i mean the only difference in motor marker is that if you look at the trigger it's looking for these final resize",
    "start": "3038240",
    "end": "3046400"
  },
  {
    "text": "type messages right it only works on resize images so that's what it listens for and then",
    "start": "3046400",
    "end": "3052559"
  },
  {
    "text": "if you look at the code startup",
    "start": "3052559",
    "end": "3057599"
  },
  {
    "text": "again it receives the cloud event and then it reads the bucket where you should",
    "start": "3058079",
    "end": "3064240"
  },
  {
    "text": "find the image then it uses um then it downloads the",
    "start": "3064240",
    "end": "3070079"
  },
  {
    "text": "the image they resize the image and then it uses this um which which flavor is",
    "start": "3070079",
    "end": "3076960"
  },
  {
    "text": "that yes six layers image sharp image shape it says c sharp image processing library which is pretty good um",
    "start": "3076960",
    "end": "3083200"
  },
  {
    "text": "it uses that and then it adds a water mic to the image by using this called apply scaling",
    "start": "3083200",
    "end": "3088640"
  },
  {
    "text": "watermark and the watermark is i don't know where i defined it i think i define",
    "start": "3088640",
    "end": "3094559"
  },
  {
    "text": "somewhere here yeah this is the watermark i guess uh somewhere here i i define",
    "start": "3095280",
    "end": "3100319"
  },
  {
    "text": "what the watermark is which is um google cloud platform and then we save it um",
    "start": "3100319",
    "end": "3107040"
  },
  {
    "text": "we save the image and then we upload it to google cloud storage right this is what it does and oh yeah",
    "start": "3107040",
    "end": "3112160"
  },
  {
    "text": "here here that's where we define it i think this is where we do the watermark but you can read the code later if you like",
    "start": "3112160",
    "end": "3117760"
  },
  {
    "text": "all right so let's see if this actually works and let me just double check the time i don't have that much time but",
    "start": "3117760",
    "end": "3122800"
  },
  {
    "text": "let's just run this and see if we can make it work",
    "start": "3122800",
    "end": "3128400"
  },
  {
    "text": "so processing pipelines i have to be query processing and image processing so let's look at image processing",
    "start": "3128559",
    "end": "3135119"
  },
  {
    "text": "um first let's define the source so cloud storage source",
    "start": "3135119",
    "end": "3140640"
  },
  {
    "text": "and if you say get cloud storage source",
    "start": "3140640",
    "end": "3147599"
  },
  {
    "text": "you can see that storage source image is input it should be ready soon it's not ready right now um",
    "start": "3147599",
    "end": "3154319"
  },
  {
    "text": "it's worrisome that it's not revision is missing but let's let's see what happens um then the broker in the namespace",
    "start": "3154319",
    "end": "3162640"
  },
  {
    "text": "should be there yes then let's go to filter and create the filter service",
    "start": "3162640",
    "end": "3170319"
  },
  {
    "text": "and then create the trigger so this creates the filter and let's go to labeler create the",
    "start": "3170319",
    "end": "3177760"
  },
  {
    "text": "labeler service and the trigger and do the same for resizer",
    "start": "3177760",
    "end": "3183680"
  },
  {
    "text": "and then do the same with watermarker so once this all of",
    "start": "3183680",
    "end": "3189440"
  },
  {
    "text": "this is done let me see if my source working because the source is not working yeah",
    "start": "3189440",
    "end": "3196880"
  },
  {
    "text": "oh it's still something is wrong with source um let me delete that",
    "start": "3196880",
    "end": "3208079"
  },
  {
    "text": "let's delete and apply again i don't know something hopefully it is working um now let's look at our",
    "start": "3208079",
    "end": "3215920"
  },
  {
    "text": "parts you can see that filter labeler besides the watermark are running um hopefully it should work but let's",
    "start": "3215920",
    "end": "3224079"
  },
  {
    "text": "let's try if not then we will have to you have to believe me that it actually",
    "start": "3224079",
    "end": "3229760"
  },
  {
    "text": "works so now i can go to my console then i have cloud storage",
    "start": "3229760",
    "end": "3236079"
  },
  {
    "text": "go to storage and then you can see there's k native images input folder and in here i'm going to upload a file",
    "start": "3236079",
    "end": "3243839"
  },
  {
    "text": "um [Music] let's",
    "start": "3243839",
    "end": "3247839"
  },
  {
    "text": "pictures and let's upload this picture i don't know if you can see but basically it's a",
    "start": "3248880",
    "end": "3254240"
  },
  {
    "text": "it's a beach with sunshine and mountains in the background so now we are uploading this and if",
    "start": "3254240",
    "end": "3261280"
  },
  {
    "text": "everything works which i'm a little bit skeptical but we can check",
    "start": "3261280",
    "end": "3266400"
  },
  {
    "text": "so let's look at the codes again and let's look at the logs of filter",
    "start": "3266400",
    "end": "3273839"
  },
  {
    "text": "okay it actually is working yeah so if you look at the filter it received the client event the source",
    "start": "3276559",
    "end": "3282319"
  },
  {
    "text": "is um this the type is a cloud storage event and this is the data um",
    "start": "3282319",
    "end": "3290559"
  },
  {
    "text": "of the cloud event and from there it extracted the fact that this is uh the beach.jpg and then it figured out",
    "start": "3290559",
    "end": "3297280"
  },
  {
    "text": "that it's it's a safe picture and then it replied back with this cloud",
    "start": "3297280",
    "end": "3302640"
  },
  {
    "text": "event where it says bucket and the name so it passes that on now if you look at other other ones crystal logs",
    "start": "3302640",
    "end": "3311839"
  },
  {
    "text": "resizer",
    "start": "3311839",
    "end": "3314480"
  },
  {
    "text": "a resizer received this file sorry besides i received this type of",
    "start": "3319440",
    "end": "3325599"
  },
  {
    "text": "event file uploaded from filter and then it downloads the image then resize to 400 400",
    "start": "3325599",
    "end": "3332400"
  },
  {
    "text": "and then uploads to to the bucket to the output bucket and then it replies back with okay this image is resized and then if",
    "start": "3332400",
    "end": "3339839"
  },
  {
    "text": "you look at the water marker",
    "start": "3339839",
    "end": "3349838"
  },
  {
    "text": "watermarker only looks for this type of messages file resize then it will basically read this",
    "start": "3352319",
    "end": "3361040"
  },
  {
    "text": "resize image and it will add a watermark and upload it and finally if you look at the labeler",
    "start": "3361040",
    "end": "3368240"
  },
  {
    "text": "oh we cannot look at the label sorry because the pod went away it's scaled down but you can see that",
    "start": "3368559",
    "end": "3374960"
  },
  {
    "text": "it actually works so let's go back to our console so this is the input but if you",
    "start": "3374960",
    "end": "3380559"
  },
  {
    "text": "look at the output folder bucket you can see that we",
    "start": "3380559",
    "end": "3386160"
  },
  {
    "text": "have three images so this 400 to 400 is the resize image it's smaller and",
    "start": "3386160",
    "end": "3393839"
  },
  {
    "text": "then the one with the watermark has google cloud platform in it",
    "start": "3393839",
    "end": "3399200"
  },
  {
    "text": "and then the labels is the labeler and if you look at the labels",
    "start": "3399200",
    "end": "3405839"
  },
  {
    "text": "you i don't know if you can see this but basically it says sky body of water see nature cause water sunset horizon so",
    "start": "3405839",
    "end": "3412559"
  },
  {
    "text": "these are the labels that it extracted from our image um i have four minutes um",
    "start": "3412559",
    "end": "3418960"
  },
  {
    "text": "sorry i didn't get to the questions but i will look at them after the talk and i will answer them in",
    "start": "3418960",
    "end": "3424720"
  },
  {
    "text": "slack but and there's another processing pipeline that i want to talk about that you can take a look at it",
    "start": "3424720",
    "end": "3430640"
  },
  {
    "text": "after the talk if you're interested now in this one what i do is that i set up class scheduler that on a",
    "start": "3430640",
    "end": "3437040"
  },
  {
    "text": "schedule calls a query runner and this query runner it will run a query in bigquery bigquery",
    "start": "3437040",
    "end": "3445119"
  },
  {
    "text": "it's a data warehousing solution on google cloud it has public data sets one of those data sets",
    "start": "3445119",
    "end": "3451920"
  },
  {
    "text": "it's um it's called a covet 19 data set so all the",
    "start": "3451920",
    "end": "3457200"
  },
  {
    "text": "all the corona cases from all countries so we'll query that and we'll figure out",
    "start": "3457200",
    "end": "3463440"
  },
  {
    "text": "which cases exist for the countries that i specified in this case i specified uk",
    "start": "3463440",
    "end": "3468559"
  },
  {
    "text": "because i live in the uk and then it will create that and save it to a table and then this then it will send a",
    "start": "3468559",
    "end": "3475839"
  },
  {
    "text": "message to a chart creator and this chat creator will read this data for uk",
    "start": "3475839",
    "end": "3481440"
  },
  {
    "text": "and then it will create a chart out of that and it will save it to a bucket and then once it goes to the bucket this will",
    "start": "3481440",
    "end": "3486880"
  },
  {
    "text": "create a notification um to notify your service and this will use and send grind",
    "start": "3486880",
    "end": "3492079"
  },
  {
    "text": "send grid to send an email to end users i did this because i wanted to know the number of cases in uk",
    "start": "3492079",
    "end": "3498000"
  },
  {
    "text": "um every day so every 5 pm this runs and it gives me a nice chart that i can look",
    "start": "3498000",
    "end": "3503280"
  },
  {
    "text": "at so i don't have to check it myself which is nice and in in the end if you wanna i think i might have an example of",
    "start": "3503280",
    "end": "3510000"
  },
  {
    "text": "this um",
    "start": "3510000",
    "end": "3513760"
  },
  {
    "text": "if i go back here the chart that you're gonna get um i didn't spend too much time with it",
    "start": "3515280",
    "end": "3520720"
  },
  {
    "text": "i can make it nicer but basically if you take a quick look",
    "start": "3520720",
    "end": "3526079"
  },
  {
    "text": "on the charts let's see if an exam yeah so there's a chart from cyprus and united kingdom",
    "start": "3527440",
    "end": "3533040"
  },
  {
    "text": "so it will be basically something like this where it shows like the cases in the united kingdom i want",
    "start": "3533040",
    "end": "3538319"
  },
  {
    "text": "to improve this and make it better but uh i run out of time okay",
    "start": "3538319",
    "end": "3544720"
  },
  {
    "text": "then um i i probably won't cover this but in canada there's sequence the notion of",
    "start": "3544720",
    "end": "3550079"
  },
  {
    "text": "sequence where you can chain multiple surfaces together and then there's this notion of parallel",
    "start": "3550079",
    "end": "3556480"
  },
  {
    "text": "where you can you you can run some you can run things in parallel with multiple services so",
    "start": "3556480",
    "end": "3562400"
  },
  {
    "text": "you can do like branching basically so you can take a look at these as well if you like they're quite useful for certain use",
    "start": "3562400",
    "end": "3568480"
  },
  {
    "text": "cases um so that's all i have time for unfortunately um but as i mentioned if",
    "start": "3568480",
    "end": "3573760"
  },
  {
    "text": "you want to get the tech it's already on speaker deck if you want to get to my tutorial this",
    "start": "3573760",
    "end": "3579440"
  },
  {
    "text": "is the link this is the link to k-native documentation and everything i talked about they're",
    "start": "3579440",
    "end": "3584960"
  },
  {
    "text": "pretty much supported in on cloud run as well and i have a separate tutorial for that uh feel free to get it there as well",
    "start": "3584960",
    "end": "3591520"
  },
  {
    "text": "thanks for listening and now i'm gonna switch to um slack and try to answer",
    "start": "3591520",
    "end": "3599200"
  },
  {
    "text": "offline in slack on if you had any questions so thanks very much",
    "start": "3599200",
    "end": "3605440"
  }
]