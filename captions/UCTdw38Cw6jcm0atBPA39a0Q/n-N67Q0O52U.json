[
  {
    "start": "0",
    "end": "195000"
  },
  {
    "text": "hey y'all I am so excited to be joining you from the US and to be helping close",
    "start": "170",
    "end": "6600"
  },
  {
    "text": "out this amazing NDC Porto conference and thank you for joining my session I",
    "start": "6600",
    "end": "13049"
  },
  {
    "text": "hope you're doing well and staying safe",
    "start": "13049",
    "end": "18080"
  },
  {
    "text": "hello I'm in recovery for type coercion an automatic semicolon insertion and my",
    "start": "20270",
    "end": "28830"
  },
  {
    "text": "name is David maybe you're like me and",
    "start": "28830",
    "end": "34940"
  },
  {
    "text": "you've been too burned a time or two by JavaScript burned in development and in",
    "start": "34940",
    "end": "41550"
  },
  {
    "text": "production well JavaScript has caused many a developer more than a fair share of",
    "start": "41550",
    "end": "49010"
  },
  {
    "text": "indigestion over the years my first",
    "start": "49010",
    "end": "54090"
  },
  {
    "text": "introduction to JavaScript was around 1997 at that time I was a visual basic",
    "start": "54090",
    "end": "60960"
  },
  {
    "text": "developer and I started building web apps with ASP active server pages",
    "start": "60960",
    "end": "67710"
  },
  {
    "text": "what would we what we would now refer to as classic ASP and I kept reading about",
    "start": "67710",
    "end": "75420"
  },
  {
    "text": "people doing this thing called dynamic HTML and I wanted to learn how to make",
    "start": "75420",
    "end": "82650"
  },
  {
    "text": "my websites more dynamic dynamic cursors alert boxes rollover buttons objects",
    "start": "82650",
    "end": "92220"
  },
  {
    "text": "that bounced around on the screen the more obnoxious the better am i right",
    "start": "92220",
    "end": "98570"
  },
  {
    "text": "well my career really started to take off and get serious as a web developer",
    "start": "98570",
    "end": "104970"
  },
  {
    "text": "around the dot-com in the early 2000s I",
    "start": "104970",
    "end": "110369"
  },
  {
    "text": "joined a hot start up to build an interactive commercial web app and I",
    "start": "110369",
    "end": "116040"
  },
  {
    "text": "needed to support both Internet Explorer and Netscape it seemed like so many cool",
    "start": "116040",
    "end": "124170"
  },
  {
    "text": "companies were having great success with javascript I wanted to be a cool development but it was a it sure was a",
    "start": "124170",
    "end": "132480"
  },
  {
    "text": "struggle to learn and there was a lot of trial and error with JavaScript anything goes and it",
    "start": "132480",
    "end": "142049"
  },
  {
    "text": "often does if you are a web developer around this time you probably remember",
    "start": "142049",
    "end": "147799"
  },
  {
    "text": "sites like dynamic drive I spent countless hours trying to understand the",
    "start": "147799",
    "end": "155489"
  },
  {
    "text": "JavaScript code I lifted from sites like dynamic drive and they worked on their",
    "start": "155489",
    "end": "162000"
  },
  {
    "text": "websites examples and everything but when I tasted the exact same code into my app",
    "start": "162000",
    "end": "169670"
  },
  {
    "text": "it didn't work and I couldn't figure out why JavaScript is amazing except when it",
    "start": "169670",
    "end": "178590"
  },
  {
    "text": "isn't there's quirks and weirdness in the JavaScript language that continue to",
    "start": "178590",
    "end": "185819"
  },
  {
    "text": "exist even to this day unexpected behavior and baffle even the most",
    "start": "185819",
    "end": "191760"
  },
  {
    "text": "seasoned JavaScript development let's take a look at a few of those examples",
    "start": "191760",
    "end": "198150"
  },
  {
    "start": "195000",
    "end": "279000"
  },
  {
    "text": "of that were key behavior javascript has a special value named man in a n which",
    "start": "198150",
    "end": "205139"
  },
  {
    "text": "stands for not a number which is not to be confused with null or undefined",
    "start": "205139",
    "end": "212879"
  },
  {
    "text": "so given this statement if the variable F is not a number is NaN then the entire",
    "start": "212879",
    "end": "222329"
  },
  {
    "text": "operation of the result will be man which can lead to lots of fun time",
    "start": "222329",
    "end": "229579"
  },
  {
    "text": "sometimes it's very difficult to find where the man is occurring in your code",
    "start": "229579",
    "end": "237500"
  },
  {
    "text": "and it's you know maybe you're looking for some clues so how can we test in our",
    "start": "237500",
    "end": "244169"
  },
  {
    "text": "code for man it's it's not a number but what what's the underlying value of man",
    "start": "244169",
    "end": "250769"
  },
  {
    "text": "what can we test for is man greater than or equal to zero no is it less than or equal to zero no",
    "start": "250769",
    "end": "259370"
  },
  {
    "text": "is what's the type of the man object",
    "start": "259370",
    "end": "265520"
  },
  {
    "text": "it's a number gee thanks a lot JavaScript for making",
    "start": "265520",
    "end": "273810"
  },
  {
    "text": "our lives soon easy to use this this tools in math",
    "start": "273810",
    "end": "280440"
  },
  {
    "start": "279000",
    "end": "326000"
  },
  {
    "text": "we have something we call commutative properties so mathematically true if we",
    "start": "280440",
    "end": "286380"
  },
  {
    "text": "take a plus B and you know these these are equal statements right order of",
    "start": "286380",
    "end": "292920"
  },
  {
    "text": "operations and everything in JavaScript when we evaluate this type of statement",
    "start": "292920",
    "end": "298110"
  },
  {
    "text": "it's not always predictable there's cases where it's true and there's cases where it can be false so if we were to",
    "start": "298110",
    "end": "305580"
  },
  {
    "text": "say you know in is this code true or false no it doesn't always equal true if we",
    "start": "305580",
    "end": "315750"
  },
  {
    "text": "try to look at is point 1 plus point 2 equal to 0.3 no it's not what what is",
    "start": "315750",
    "end": "328160"
  },
  {
    "start": "326000",
    "end": "400000"
  },
  {
    "text": "0.1 plus point 2 and in JavaScript it's point 3 something it's not this is not",
    "start": "328160",
    "end": "336750"
  },
  {
    "text": "just a JavaScript problem this is floating math floating point math and",
    "start": "336750",
    "end": "342510"
  },
  {
    "text": "for computers as hard apparently seems like we were smart people we should be",
    "start": "342510",
    "end": "348180"
  },
  {
    "text": "able to figure these things out this is the kind of stuff that we still have to deal with here's an example if we round",
    "start": "348180",
    "end": "356160"
  },
  {
    "text": "this gigantic number we get 0 as we",
    "start": "356160",
    "end": "362820"
  },
  {
    "text": "would expect you know it's it's less than 0.5 so you know it's going to round down to 0 however if we around this very",
    "start": "362820",
    "end": "372210"
  },
  {
    "text": "long number and if you notice the only thing that changes between the two",
    "start": "372210",
    "end": "378300"
  },
  {
    "text": "numbers is the very last place from 2 to 3 if we round this number in JavaScript",
    "start": "378300",
    "end": "385010"
  },
  {
    "text": "we get 1 and tested I've got 99 problems",
    "start": "385010",
    "end": "392520"
  },
  {
    "text": "but JavaScript ain't one point zero zero zero zero zero zero zero zero",
    "start": "392520",
    "end": "399260"
  },
  {
    "start": "400000",
    "end": "437000"
  },
  {
    "text": "let's let's talk about sorting and JavaScript if we were to sort this array of two and ten we would get ten and two",
    "start": "400410",
    "end": "409690"
  },
  {
    "text": "as we would expect because javascript is being really helpful in ignoring the",
    "start": "409690",
    "end": "414970"
  },
  {
    "text": "fact that these are numbers not instead of strings um if we map things like an",
    "start": "414970",
    "end": "423970"
  },
  {
    "text": "array of strings and we we want to parse these numbers we would expect an array",
    "start": "423970",
    "end": "429460"
  },
  {
    "text": "of of tens right you know we get something silly like like this Thanks",
    "start": "429460",
    "end": "436120"
  },
  {
    "text": "JavaScript and then the you know there there are types inside JavaScript and",
    "start": "436120",
    "end": "443700"
  },
  {
    "start": "437000",
    "end": "485000"
  },
  {
    "text": "there's this type of operator that helps us to determine what these types are so",
    "start": "443700",
    "end": "449110"
  },
  {
    "text": "if we say what's the type of undefined it's it's undefined type of true that's a boolean type of string it's a it's a",
    "start": "449110",
    "end": "456970"
  },
  {
    "text": "string so far so good a type of one is a number but if we say",
    "start": "456970",
    "end": "462670"
  },
  {
    "text": "type of an object well it's an object and that's that's great if we say type",
    "start": "462670",
    "end": "468280"
  },
  {
    "text": "of would array it's an object type of null",
    "start": "468280",
    "end": "474180"
  },
  {
    "text": "it's an object the black art of figuring",
    "start": "474180",
    "end": "479830"
  },
  {
    "text": "out the type of variables I don't know good luck and then we've got things like",
    "start": "479830",
    "end": "488550"
  },
  {
    "start": "485000",
    "end": "537000"
  },
  {
    "text": "you know we've got this helpful operator called number number is supposed to",
    "start": "488550",
    "end": "494620"
  },
  {
    "text": "convert things over to the numeric values of these things so if we take",
    "start": "494620",
    "end": "501730"
  },
  {
    "text": "null and pass it to number on the other end we get zero so Nowell must be zero",
    "start": "501730",
    "end": "509290"
  },
  {
    "text": "right it must be equal to zero no no is null greater than zero",
    "start": "509290",
    "end": "515729"
  },
  {
    "text": "no is no less than zero no there's no",
    "start": "515729",
    "end": "522159"
  },
  {
    "text": "greater than or equal to zero this one is true I have no idea",
    "start": "522159",
    "end": "529710"
  },
  {
    "text": "less than or equal to zero it's not zero but it's somewhere I don't",
    "start": "529800",
    "end": "536589"
  },
  {
    "text": "know and then we've got these weird concepts in in the JavaScript language",
    "start": "536589",
    "end": "541930"
  },
  {
    "start": "537000",
    "end": "565000"
  },
  {
    "text": "like false e truthy and falsy values false no is considered to be a false e",
    "start": "541930",
    "end": "550390"
  },
  {
    "text": "value undefined is false e empty string and B equal to false zero is false",
    "start": "550390",
    "end": "560040"
  },
  {
    "text": "Nandy false yeah good luck and then",
    "start": "560040",
    "end": "566279"
  },
  {
    "start": "565000",
    "end": "620000"
  },
  {
    "text": "there's things like you know powerful features in the JavaScript language like regular expressions you know I have a",
    "start": "566279",
    "end": "574000"
  },
  {
    "text": "problem I'll solve it with a regular expression now I've got nan problems so",
    "start": "574000",
    "end": "580360"
  },
  {
    "text": "we take something like this we have whack equal to this regular expression of a we want to test the",
    "start": "580360",
    "end": "587500"
  },
  {
    "text": "string JavaScript and yes there is an a in JavaScript and then we test we turn",
    "start": "587500",
    "end": "595870"
  },
  {
    "text": "around we test another string and that's false",
    "start": "595870",
    "end": "601889"
  },
  {
    "text": "what well it turns out that the regular expression object itself maintains state",
    "start": "602190",
    "end": "609940"
  },
  {
    "text": "and so the index changed from underneath this that's can be really helpful and",
    "start": "609940",
    "end": "616300"
  },
  {
    "text": "hard to easy to to figure out and then",
    "start": "616300",
    "end": "621940"
  },
  {
    "start": "620000",
    "end": "660000"
  },
  {
    "text": "we got some syntax quirks like you know we've got this function we want to return an object and what should this",
    "start": "621940",
    "end": "630279"
  },
  {
    "text": "troll return when we call this function it returns undefined what I thought we",
    "start": "630279",
    "end": "637839"
  },
  {
    "text": "were returning an object well JavaScript tries to be really helpful and there's",
    "start": "637839",
    "end": "645670"
  },
  {
    "text": "no you know syntax matters and so it",
    "start": "645670",
    "end": "651130"
  },
  {
    "text": "sees this return statement with nothing else after it and thinks oh well I need",
    "start": "651130",
    "end": "656290"
  },
  {
    "text": "to insert a semicolon here thanks JavaScript let's talk about arrays",
    "start": "656290",
    "end": "662310"
  },
  {
    "start": "660000",
    "end": "728000"
  },
  {
    "text": "arrays are dynamic in JavaScript that's pretty cool you can just start stuffing things into",
    "start": "662310",
    "end": "668380"
  },
  {
    "text": "arrays like if we want to index one and change that value to one our index 3 and",
    "start": "668380",
    "end": "677680"
  },
  {
    "text": "get that a value of 2 we can do all we can willy-nilly add things to an array",
    "start": "677680",
    "end": "683860"
  },
  {
    "text": "and when we're done we can take array dot length to figure out how many items",
    "start": "683860",
    "end": "689380"
  },
  {
    "text": "are in our array and we get 11 11 items",
    "start": "689380",
    "end": "694870"
  },
  {
    "text": "in our array um this almost makes sense right",
    "start": "694870",
    "end": "701910"
  },
  {
    "text": "maybe well we can do some weird things with arrays - we can index negative 1 we",
    "start": "702210",
    "end": "709720"
  },
  {
    "text": "can say array dot s we can start just really nearly adding properties to our",
    "start": "709720",
    "end": "715900"
  },
  {
    "text": "array and when we take a read out length now what's what's our length now it's",
    "start": "715900",
    "end": "723490"
  },
  {
    "text": "still 11 why javascript has been around",
    "start": "723490",
    "end": "732490"
  },
  {
    "start": "728000",
    "end": "960000"
  },
  {
    "text": "for years and we're smart people right why haven't we fixed these things how",
    "start": "732490",
    "end": "740350"
  },
  {
    "text": "did this happen javascript arguably the",
    "start": "740350",
    "end": "747220"
  },
  {
    "text": "most important most universal most pervasive language in computer science",
    "start": "747220",
    "end": "754870"
  },
  {
    "text": "history so far if it's so important why is it so terrible at times well let's",
    "start": "754870",
    "end": "763780"
  },
  {
    "text": "look back at the birth of JavaScript it's a classic example of how so many things get created in software and it's",
    "start": "763780",
    "end": "772840"
  },
  {
    "text": "funny but it's the kind of funny that makes you want to cry this is Marc",
    "start": "772840",
    "end": "779890"
  },
  {
    "text": "Andreessen he was at the University of Illinois and was one of the people who",
    "start": "779890",
    "end": "785350"
  },
  {
    "text": "created the very first internet browser the NCSA mosaic Marc later moved to",
    "start": "785350",
    "end": "792580"
  },
  {
    "text": "Silicon Valley and he helped start a little company named next",
    "start": "792580",
    "end": "799040"
  },
  {
    "text": "in February of 1995 mark hires a man",
    "start": "799040",
    "end": "804180"
  },
  {
    "text": "named Brandon Ike Brandon was hired to create a scripting language for Netscape",
    "start": "804180",
    "end": "811500"
  },
  {
    "text": "the original plan was to implement scheme a dialect of lisp in May of 1995",
    "start": "811500",
    "end": "819630"
  },
  {
    "text": "and recent calls in Brendan and says Randall pants",
    "start": "819630",
    "end": "825150"
  },
  {
    "text": "we need a demo of that new scripting language like yesterday it's Brendan sir",
    "start": "825150",
    "end": "832440"
  },
  {
    "text": "sure thing scheme and Netscape is going to be awesome",
    "start": "832440",
    "end": "838490"
  },
  {
    "text": "Brande forum your hilarious scheme in the browser oh man you've got me going",
    "start": "843540",
    "end": "850110"
  },
  {
    "text": "there seriously though it's got to look like Java let's call it mocha mocha Java",
    "start": "850110",
    "end": "856410"
  },
  {
    "text": "get it we need a demo by the end of next week people aren't convinced that this thing",
    "start": "856410",
    "end": "862440"
  },
  {
    "text": "is going to fly I'm gonna need you to come in on Saturday ok and Sunday dude",
    "start": "862440",
    "end": "868760"
  },
  {
    "text": "so what does Brendan did he does what any of us would do in this situation he",
    "start": "868760",
    "end": "877920"
  },
  {
    "text": "works like a heroic machine through the",
    "start": "877920",
    "end": "885450"
  },
  {
    "text": "nights and ten days ten whole days later",
    "start": "885450",
    "end": "894380"
  },
  {
    "text": "he delivers mocha the first version of JavaScript was created in ten days",
    "start": "894380",
    "end": "901170"
  },
  {
    "text": "that's both incredibly amazing and absolutely horrified good work boogaloo",
    "start": "901170",
    "end": "911090"
  },
  {
    "text": "ship it but SERDES only do I still need",
    "start": "911090",
    "end": "916920"
  },
  {
    "text": "to ship it it's the most classic move in",
    "start": "916920",
    "end": "924030"
  },
  {
    "text": "all program ship it Moka was supposed to be for amateurs and designers anyway who",
    "start": "924030",
    "end": "931140"
  },
  {
    "text": "cares if it's but the real professionals are going to use Java Java is the future twist Java it",
    "start": "931140",
    "end": "943140"
  },
  {
    "text": "was supposed to be language for the web for the browser and we know how that",
    "start": "943140",
    "end": "949170"
  },
  {
    "text": "played out Java the applets rimmer you know right once they'll everywhere well",
    "start": "949170",
    "end": "959910"
  },
  {
    "text": "I think it's interesting to look at some of the other things on the timeline during the early days of JavaScript",
    "start": "959910",
    "end": "967220"
  },
  {
    "start": "960000",
    "end": "1092000"
  },
  {
    "text": "after mocha is is created in ten days it goes through a couple of iterations I",
    "start": "967220",
    "end": "973830"
  },
  {
    "text": "mean the code itself doesn't really change but it goes through a couple of names they got renamed to live script",
    "start": "973830",
    "end": "980880"
  },
  {
    "text": "for a little while and then JavaScript in December of 95",
    "start": "980880",
    "end": "986220"
  },
  {
    "text": "Netscape releases I think it was version 2 beta 1 or something like that that",
    "start": "986220",
    "end": "991860"
  },
  {
    "text": "includes JavaScript well Microsoft takes notice and they see",
    "start": "991860",
    "end": "998220"
  },
  {
    "text": "this cool new scripting language that's in Netscape and they decide to reverse",
    "start": "998220",
    "end": "1003860"
  },
  {
    "text": "engineer what Netscape has has done and but if you remember this if you were",
    "start": "1003860",
    "end": "1010850"
  },
  {
    "text": "around this time they didn't call it javascript javascript is trademarked by sun so they called theirs jscript well",
    "start": "1010850",
    "end": "1020510"
  },
  {
    "text": "Microsoft did such a good job of reverse engineering that they reversed",
    "start": "1020510",
    "end": "1027829"
  },
  {
    "text": "engineered everything down to the littlest detail including all the quirks",
    "start": "1027829",
    "end": "1035510"
  },
  {
    "text": "and and things that JavaScript did weird now this prompted Netscape to go on the",
    "start": "1035510",
    "end": "1046400"
  },
  {
    "text": "defense so Netscape is seeing how a Microsoft work at least around this this time in",
    "start": "1046400",
    "end": "1052640"
  },
  {
    "text": "history Microsoft's classic example of strategy of embracing spending and",
    "start": "1052640",
    "end": "1059720"
  },
  {
    "text": "extinguishing technology right Netscape knows if Microsoft has their",
    "start": "1059720",
    "end": "1066780"
  },
  {
    "text": "they'll run away with the language and you know ultimately destroy it or or",
    "start": "1066780",
    "end": "1073270"
  },
  {
    "text": "certainly you know replace it with something else or you know who knows how that may have turned out so in an offensive move",
    "start": "1073270",
    "end": "1080440"
  },
  {
    "text": "against Microsoft Netscape decides to standardize the JavaScript language so",
    "start": "1080440",
    "end": "1086770"
  },
  {
    "text": "they went and talked to the obvious candidate for the standardization the w3c and the w3c he responds with well",
    "start": "1086770",
    "end": "1096940"
  },
  {
    "start": "1092000",
    "end": "1200000"
  },
  {
    "text": "know things we have more important things to focus on like marquee and the",
    "start": "1096940",
    "end": "1104950"
  },
  {
    "text": "blink tag well thanks w3c keep keep up the good work we'll move on so Netscape this",
    "start": "1104950",
    "end": "1116260"
  },
  {
    "text": "approaches ACMA International which is a standards based organization in sweet",
    "start": "1116260",
    "end": "1121990"
  },
  {
    "text": "and Eknath takes on the project and they",
    "start": "1121990",
    "end": "1127420"
  },
  {
    "text": "form what's called the tc39 this is the technical steering committee for the",
    "start": "1127420",
    "end": "1133030"
  },
  {
    "text": "JavaScript language and eventually after a little while of work the tc39 creates",
    "start": "1133030",
    "end": "1140080"
  },
  {
    "text": "a document called Eknath 260 equi 262 is is what we have is it's what continues",
    "start": "1140080",
    "end": "1147640"
  },
  {
    "text": "to evolve to this day it is the formal language spec for the JavaScript",
    "start": "1147640",
    "end": "1154270"
  },
  {
    "text": "language now the reason is called Eknath and we hear this strange word used a lot",
    "start": "1154270",
    "end": "1164100"
  },
  {
    "text": "JavaScript you know again at this time and still is to this day although it's",
    "start": "1164100",
    "end": "1170080"
  },
  {
    "text": "you know it's arguably unenforceable javascript is a trademark of sun and they couldn't use JavaScript as the name",
    "start": "1170080",
    "end": "1178690"
  },
  {
    "text": "of the language in the spec so they named it Etna script this is where",
    "start": "1178690",
    "end": "1184780"
  },
  {
    "text": "Eklund script comes from ACMA script is the language specification JavaScript as",
    "start": "1184780",
    "end": "1191050"
  },
  {
    "text": "we find in browsers is just one of several implementations of that standard",
    "start": "1191050",
    "end": "1200430"
  },
  {
    "start": "1200000",
    "end": "1434000"
  },
  {
    "text": "so oh you know fast forward a little bit",
    "start": "1200430",
    "end": "1206850"
  },
  {
    "text": "Eckman releases es2 and 1998 it's basically",
    "start": "1207000",
    "end": "1212050"
  },
  {
    "text": "just some updates for ISO certification and then we get ps3 in 99 which includes",
    "start": "1212050",
    "end": "1219490"
  },
  {
    "text": "some things like regex try/catch and some better string handling now moving",
    "start": "1219490",
    "end": "1225790"
  },
  {
    "text": "forward in time we we look at es5 was adds strict mode and reduces some of the",
    "start": "1225790",
    "end": "1233170"
  },
  {
    "text": "quirkiness of the language there's JSON library support added and es6 is a major",
    "start": "1233170",
    "end": "1240400"
  },
  {
    "text": "update adding classes and generators and arrow functions promises and many more",
    "start": "1240400",
    "end": "1246490"
  },
  {
    "text": "features wait hang on a second what the crap 10 years between es3 and",
    "start": "1246490",
    "end": "1256030"
  },
  {
    "text": "es5 man if you were a web developer doing during these years that's a long",
    "start": "1256030",
    "end": "1262720"
  },
  {
    "text": "time and it was a real struggle right to",
    "start": "1262720",
    "end": "1268570"
  },
  {
    "text": "build web applications using ES 3 until es 5 came along so what happened here",
    "start": "1268570",
    "end": "1276250"
  },
  {
    "text": "well Microsoft won the first browser wars with ie6 around 2001 and basically",
    "start": "1276250",
    "end": "1284520"
  },
  {
    "text": "they sat back to watch the world burn Microsoft won but we as web developers",
    "start": "1284520",
    "end": "1291490"
  },
  {
    "text": "lost by 2008 now you know es 4 was being",
    "start": "1291490",
    "end": "1297490"
  },
  {
    "text": "worked on and by 2008 es 4 was was so big and so complex and there was no",
    "start": "1297490",
    "end": "1306070"
  },
  {
    "text": "consensus among the members of the standards committee and for technical",
    "start": "1306070",
    "end": "1311860"
  },
  {
    "text": "and political reasons you know there was we there was representatives from",
    "start": "1311860",
    "end": "1318700"
  },
  {
    "text": "Microsoft and Yahoo and Adobe that were all part of the committee so an",
    "start": "1318700",
    "end": "1324160"
  },
  {
    "text": "important decision was made to abandon es 4 and they took some incremental",
    "start": "1324160",
    "end": "1331090"
  },
  {
    "text": "changes that was slated for ESA and renamed it es5 and set the path",
    "start": "1331090",
    "end": "1337990"
  },
  {
    "text": "forward well there's an interesting side note here if you remember during those",
    "start": "1337990",
    "end": "1346090"
  },
  {
    "text": "days Macromedia flash was a plugin that once dominated the web people created amazing",
    "start": "1346090",
    "end": "1353880"
  },
  {
    "text": "interactive interfaces and games with this animation plug-in what you couldn't do with JavaScript you know you you",
    "start": "1353880",
    "end": "1360760"
  },
  {
    "text": "solved with with flash in flash if you were building anything more than maybe a",
    "start": "1360760",
    "end": "1366550"
  },
  {
    "text": "cartoon you needed to use its programming language called ActionScript",
    "start": "1366550",
    "end": "1371850"
  },
  {
    "text": "which looked a lot like JavaScript that's because ActionScript was another",
    "start": "1371850",
    "end": "1381100"
  },
  {
    "text": "implementation of the Ekman script standard so between 1999 and 2009 the",
    "start": "1381100",
    "end": "1389290"
  },
  {
    "text": "developers at flash were early implementers adopters of the proposed es",
    "start": "1389290",
    "end": "1395500"
  },
  {
    "text": "for spec and they were helping to push the language forward by 2006",
    "start": "1395500",
    "end": "1402330"
  },
  {
    "text": "ActionScript 3 had classes and interfaces it had a type system there",
    "start": "1402330",
    "end": "1409780"
  },
  {
    "text": "were news default function parameters modules packages it had a lot of great",
    "start": "1409780",
    "end": "1419020"
  },
  {
    "text": "language feature flash developers could argue that what they had in 2006 is",
    "start": "1419020",
    "end": "1427630"
  },
  {
    "text": "still better than what we have in JavaScript today les takes a quick look",
    "start": "1427630",
    "end": "1436300"
  },
  {
    "start": "1434000",
    "end": "1582000"
  },
  {
    "text": "at a few other major milestones of the web that helped to influence JavaScript",
    "start": "1436300",
    "end": "1441340"
  },
  {
    "text": "over the years in 2001 we talked about Internet Explorer 6 coming out and you know that",
    "start": "1441340",
    "end": "1448630"
  },
  {
    "text": "helped or hurt in some cases you know set Java the JavaScript language for a",
    "start": "1448630",
    "end": "1456640"
  },
  {
    "text": "long time but around 2004 we see some",
    "start": "1456640",
    "end": "1461860"
  },
  {
    "text": "tools like Firefox comes out and there's a web developer tools it gets created the Firefox browser",
    "start": "1461860",
    "end": "1467920"
  },
  {
    "text": "and Gmail comes out on Gmail along with Google Maps and you know took the",
    "start": "1467920",
    "end": "1476650"
  },
  {
    "text": "browser apps to a whole new level never thought possible and they demonstrated",
    "start": "1476650",
    "end": "1482290"
  },
  {
    "text": "to the world what the browser was capable jQuery made a huge impact on web",
    "start": "1482290",
    "end": "1489940"
  },
  {
    "text": "developers because it was for the you know it wasn't the only library that did",
    "start": "1489940",
    "end": "1496120"
  },
  {
    "text": "this but this is you know it jQuery really took off in popularity but it was",
    "start": "1496120",
    "end": "1502270"
  },
  {
    "text": "sort of we know jQuery gave us a single API that normalized the differences",
    "start": "1502270",
    "end": "1509350"
  },
  {
    "text": "between the browser's jQuery and its popular plug-in community made web",
    "start": "1509350",
    "end": "1515320"
  },
  {
    "text": "application development accessible taking away a lot of pain not all of the",
    "start": "1515320",
    "end": "1521980"
  },
  {
    "text": "pain but a lot of it but web apps could be built by mere mortals like like you",
    "start": "1521980",
    "end": "1529390"
  },
  {
    "text": "and me with the help of jQuery and then around 2008 Google Chrome Kames comes",
    "start": "1529390",
    "end": "1538090"
  },
  {
    "text": "along and it takes the web by storm Microsoft has been coasting on ie6 for",
    "start": "1538090",
    "end": "1544390"
  },
  {
    "text": "years and people are desperate for a better browser the chrome adoption grows so quickly that it stirs Microsoft to",
    "start": "1544390",
    "end": "1551860"
  },
  {
    "text": "start releasing new versions of ie and in 2009 we get the es 5 harmony and",
    "start": "1551860",
    "end": "1561450"
  },
  {
    "text": "around this time the Internet Explorer 8 comes out and then you know there's a",
    "start": "1561450",
    "end": "1568500"
  },
  {
    "text": "just for a reference there is a 15 year gap between HTML 4.1 CSS 2 and then the",
    "start": "1568500",
    "end": "1577630"
  },
  {
    "text": "release of HTML 5 but that's that's a whole nother story let's let's go back",
    "start": "1577630",
    "end": "1583390"
  },
  {
    "start": "1582000",
    "end": "1960000"
  },
  {
    "text": "to the tc39 there's 10 years between es 3 es 5 and then there's another 6 years",
    "start": "1583390",
    "end": "1591940"
  },
  {
    "text": "from es 5 the es 6 the tc39 knew that",
    "start": "1591940",
    "end": "1598780"
  },
  {
    "text": "they needed to fix their process and but adding new features of the",
    "start": "1598780",
    "end": "1604390"
  },
  {
    "text": "JavaScript language is not a trivial task the first rule of the tc39 Fight",
    "start": "1604390",
    "end": "1612040"
  },
  {
    "text": "Club is don't break the internet",
    "start": "1612040",
    "end": "1619380"
  },
  {
    "text": "backwards compatibility has always been one of the highest priorities when",
    "start": "1619380",
    "end": "1625690"
  },
  {
    "text": "making changes to the language which is why some of the work e behavior still",
    "start": "1625690",
    "end": "1630910"
  },
  {
    "text": "exists it can't it continues to exist on purpose it's codified in the spec",
    "start": "1630910",
    "end": "1639390"
  },
  {
    "text": "because if they fixed it it would break code all over the world",
    "start": "1639390",
    "end": "1647100"
  },
  {
    "text": "that expects that weird quirky behavior the internet would collapse and the",
    "start": "1647100",
    "end": "1653170"
  },
  {
    "text": "world would explode I submit my hypothesis that the Deathstar",
    "start": "1653170",
    "end": "1659160"
  },
  {
    "text": "super weapon is actually a very powerful JavaScript emitter that's right the tc39",
    "start": "1659160",
    "end": "1670420"
  },
  {
    "text": "committee is made up of developers implementers framework authors and",
    "start": "1670420",
    "end": "1675940"
  },
  {
    "text": "academics the Eknath 262 document is currently more than 1,200 pages since",
    "start": "1675940",
    "end": "1684180"
  },
  {
    "text": "2015 the tc39 has been on a better process that has had a better process in",
    "start": "1684180",
    "end": "1690520"
  },
  {
    "text": "place and they do things like they meet every two months they meet for three",
    "start": "1690520",
    "end": "1695920"
  },
  {
    "text": "days at a time the discussions are time boxed the entire process is open and you",
    "start": "1695920",
    "end": "1702700"
  },
  {
    "text": "can follow their progress through their repos and meeting notes so everything's",
    "start": "1702700",
    "end": "1708790"
  },
  {
    "text": "done out in the open in order for a new",
    "start": "1708790",
    "end": "1713950"
  },
  {
    "text": "idea for the JavaScript language to make it into the Ekman script standard that",
    "start": "1713950",
    "end": "1720730"
  },
  {
    "text": "idea has to be moved through a series of stages stage 0 is the first stage and of",
    "start": "1720730",
    "end": "1729100"
  },
  {
    "text": "course the tc39 process is a zero-based index a bunch of nerds state zero is the idea",
    "start": "1729100",
    "end": "1738950"
  },
  {
    "text": "stage also known as the strawman state lots of new ideas get submitted at stage",
    "start": "1738950",
    "end": "1745760"
  },
  {
    "text": "zero and in stage one is the proposal state there's an agreed-upon version",
    "start": "1745760",
    "end": "1753290"
  },
  {
    "text": "draft of this idea a proposal essentially states what the problem is",
    "start": "1753290",
    "end": "1758870"
  },
  {
    "text": "how it might be solved and some of the known technical challenges a polyfill",
    "start": "1758870",
    "end": "1764750"
  },
  {
    "text": "might be created as a proof of concept and a polyfill is like a JavaScript",
    "start": "1764750",
    "end": "1769790"
  },
  {
    "text": "library that demonstrates how this new idea might behave or look at this time a",
    "start": "1769790",
    "end": "1777170"
  },
  {
    "text": "champion of it on the tc39 is selected to take ownership and to see",
    "start": "1777170",
    "end": "1784040"
  },
  {
    "text": "this proposal through the rest of the state in stage 2 this is the the formal",
    "start": "1784040",
    "end": "1792710"
  },
  {
    "text": "spec stage a specification draft has created the syntax and semantics and",
    "start": "1792710",
    "end": "1800210"
  },
  {
    "text": "backwards compatibility all that those kinds of details are are stressed out as",
    "start": "1800210",
    "end": "1807650"
  },
  {
    "text": "part of the idea and then stage 3 is called the candidate stage the",
    "start": "1807650",
    "end": "1814310"
  },
  {
    "text": "specification has been finished and this this is a signal to the rest of the",
    "start": "1814310",
    "end": "1820250"
  },
  {
    "text": "world that they can start you know trying to implement this new change in",
    "start": "1820250",
    "end": "1828440"
  },
  {
    "text": "the specification and get real-world usage and feedback so at this time",
    "start": "1828440",
    "end": "1834890"
  },
  {
    "text": "browsers and other implementations of Java Script or Eggman script and choose",
    "start": "1834890",
    "end": "1841520"
  },
  {
    "text": "to add these new this new feature usually it's behind a feature flag or a",
    "start": "1841520",
    "end": "1847250"
  },
  {
    "text": "plug-in here and or something like that so that people can test it and this is where we see chrome add new features to",
    "start": "1847250",
    "end": "1853940"
  },
  {
    "text": "do v8 which is the chrome JavaScript engine behind feature flags you can turn",
    "start": "1853940",
    "end": "1860120"
  },
  {
    "text": "those on or off and in node.js which also uses chrome v8 as its engine though",
    "start": "1860120",
    "end": "1867620"
  },
  {
    "text": "feature flags can be used like command line switches now when something reaches",
    "start": "1867620",
    "end": "1876200"
  },
  {
    "text": "stage 3 it's very close to being in the",
    "start": "1876200",
    "end": "1881210"
  },
  {
    "text": "spec but it it's it's still no guarantee that this is going to make it into the",
    "start": "1881210",
    "end": "1887540"
  },
  {
    "text": "final standard no there's enough feedback if there's enough feedback that that comes back to say this you know",
    "start": "1887540",
    "end": "1894350"
  },
  {
    "text": "this is not ready for production this is not ready for the real world then then some proposals may never reach",
    "start": "1894350",
    "end": "1903800"
  },
  {
    "text": "the next stage or they may stay in that stage for a long time until it's",
    "start": "1903800",
    "end": "1910240"
  },
  {
    "text": "finished so when something gets the stage 4 it is finished you know there",
    "start": "1910240",
    "end": "1917210"
  },
  {
    "text": "are acceptance tests that are added to another project called test 262 and",
    "start": "1917210",
    "end": "1923290"
  },
  {
    "text": "there there has to be at least two implementations that pass these",
    "start": "1923290",
    "end": "1928340"
  },
  {
    "text": "acceptance tests it's ready for the next release of the language spec and APR is",
    "start": "1928340",
    "end": "1934280"
  },
  {
    "text": "created for the Eknath 262 document now the cadence that the tc39 has been on",
    "start": "1934280",
    "end": "1941990"
  },
  {
    "text": "since 2015 is the stage 4 candidates our",
    "start": "1941990",
    "end": "1947690"
  },
  {
    "text": "selections are made in January of that year and the new edition of the Aetna",
    "start": "1947690",
    "end": "1953300"
  },
  {
    "text": "262 document is released in June and that means that we will soon have yes",
    "start": "1953300",
    "end": "1961030"
  },
  {
    "start": "1960000",
    "end": "2313000"
  },
  {
    "text": "2020 we've had es 2015 2016 2017 2018",
    "start": "1961030",
    "end": "1966880"
  },
  {
    "text": "2019 and now at 2020 the decisions for ES 2020 have been made and the latest",
    "start": "1966880",
    "end": "1974000"
  },
  {
    "text": "features have made it to stage 4 some are already available the 2020 spec will",
    "start": "1974000",
    "end": "1980929"
  },
  {
    "text": "be published in a couple of months and if you're interested in knowing there are several new features worth looking",
    "start": "1980929",
    "end": "1989480"
  },
  {
    "text": "at one is optional chaining this is how we can this feature allows us to safely",
    "start": "1989480",
    "end": "1996710"
  },
  {
    "text": "access deeply nested properties in a JavaScript object so imagine you have a JavaScript",
    "start": "1996710",
    "end": "2004120"
  },
  {
    "text": "object like this one and address some of the properties on the address or maybe",
    "start": "2004120",
    "end": "2009910"
  },
  {
    "text": "the address itself is optional of course everything in JavaScript is optional but",
    "start": "2009910",
    "end": "2016510"
  },
  {
    "text": "you know what I'm saying in the past to access a property deep in the object",
    "start": "2016510",
    "end": "2021940"
  },
  {
    "text": "such as the city you would have to test every property along the way to make sure it wasn't null or undefined",
    "start": "2021940",
    "end": "2029490"
  },
  {
    "text": "the optional chaining can express in one statement how to get access to an",
    "start": "2029490",
    "end": "2036309"
  },
  {
    "text": "optional property but we don't have to test every single every single parent",
    "start": "2036309",
    "end": "2042490"
  },
  {
    "text": "along the way there's a new feature called knowledge coalescing it allows",
    "start": "2042490",
    "end": "2049300"
  },
  {
    "text": "you to test values that are specifically no or undefined in the past we've had",
    "start": "2049300",
    "end": "2056470"
  },
  {
    "text": "this this using the two pipes we can say is this thing false E or or not and you",
    "start": "2056470",
    "end": "2067628"
  },
  {
    "text": "know if anything that's that can be false no undefined empty strings zero all",
    "start": "2067629",
    "end": "2076480"
  },
  {
    "text": "those kinds of things then you would get the default value but if you only want",
    "start": "2076480",
    "end": "2082780"
  },
  {
    "text": "to test no undefined you can now use double question marks you test for",
    "start": "2082780",
    "end": "2090280"
  },
  {
    "text": "specifically null or undefined one thing to note if you're a no js'",
    "start": "2090280",
    "end": "2096669"
  },
  {
    "text": "developer nodejs 14 wasn't just released this this past week and it includes",
    "start": "2096669",
    "end": "2104200"
  },
  {
    "text": "optional chaining and knowledge coalescing because those are available in the newer versions of chrome v8",
    "start": "2104200",
    "end": "2112530"
  },
  {
    "text": "JavaScript engine which is what as i've mentioned for what ojs uses there's also",
    "start": "2112530",
    "end": "2119530"
  },
  {
    "text": "a global this which is a consistent way of accessing the global object",
    "start": "2119530",
    "end": "2124570"
  },
  {
    "text": "regardless of your environment so in the browser there's the window object in a",
    "start": "2124570",
    "end": "2130359"
  },
  {
    "text": "web worker there's the self object and in nodejs there's the global so now global this gives you one thing",
    "start": "2130359",
    "end": "2139090"
  },
  {
    "text": "you can use in case your modules or codes going to be used across multiple",
    "start": "2139090",
    "end": "2144340"
  },
  {
    "text": "environments there's a new promise dot all settled which is similar to promise",
    "start": "2144340",
    "end": "2151060"
  },
  {
    "text": "to all which we've had in the past it takes an array of promises and it resolves when all those promises have",
    "start": "2151060",
    "end": "2157210"
  },
  {
    "text": "finished however when using promise not all if one of those promises is rejected",
    "start": "2157210",
    "end": "2163440"
  },
  {
    "text": "then it returns immediately and and it's over promise that all settled waits",
    "start": "2163440",
    "end": "2169870"
  },
  {
    "text": "until all the promises have returned regardless if they are resolved or",
    "start": "2169870",
    "end": "2175360"
  },
  {
    "text": "rejected there's a new feature called dynamic imports which allows us to",
    "start": "2175360",
    "end": "2181290"
  },
  {
    "text": "dynamically import modules and that import syntax is a promise that we can",
    "start": "2181290",
    "end": "2189400"
  },
  {
    "text": "use either the promise syntax or use async and await so in the second example",
    "start": "2189400",
    "end": "2196270"
  },
  {
    "text": "here we had a a button listener click event which means that that module",
    "start": "2196270",
    "end": "2203470"
  },
  {
    "text": "reported on Jas is only going to get loaded if someone clicks on the there's",
    "start": "2203470",
    "end": "2212500"
  },
  {
    "text": "also a match all for regular expressions now I can't go into the details for the",
    "start": "2212500",
    "end": "2218920"
  },
  {
    "text": "sake of time but trust me this one statement this one line is saving a ton",
    "start": "2218920",
    "end": "2227200"
  },
  {
    "text": "of code that you would have to do in order to do the what what this new match",
    "start": "2227200",
    "end": "2233020"
  },
  {
    "text": "all function does now and then there's a new data type called big int and in the",
    "start": "2233020",
    "end": "2242230"
  },
  {
    "text": "past the largest integer value you could have in JavaScript was 2 to the 53rd",
    "start": "2242230",
    "end": "2247630"
  },
  {
    "text": "power minus 1 that's a really big number but it turns out we sometimes need",
    "start": "2247630",
    "end": "2257230"
  },
  {
    "text": "numbers bigger than that and so big int is now a native feature of the",
    "start": "2257230",
    "end": "2262870"
  },
  {
    "text": "JavaScript language that allows us to deal with bigger integers",
    "start": "2262870",
    "end": "2268140"
  },
  {
    "text": "any really arbitrarily large injure there's two ways of declared against you",
    "start": "2268140",
    "end": "2274140"
  },
  {
    "text": "can use the big int instructor or you can use the letter n on the end of a",
    "start": "2274140",
    "end": "2279540"
  },
  {
    "text": "number to signal to the JavaScript compiler our engine that this this",
    "start": "2279540",
    "end": "2289410"
  },
  {
    "text": "number is a big int value okay",
    "start": "2289410",
    "end": "2295070"
  },
  {
    "text": "despite the weirdness and the Ward's of JavaScript there are amazing things that",
    "start": "2295070",
    "end": "2303000"
  },
  {
    "text": "continue to be created with the language I mentioned this earlier but",
    "start": "2303000",
    "end": "2308720"
  },
  {
    "text": "applications like Google Gmail on Google",
    "start": "2308720",
    "end": "2314910"
  },
  {
    "text": "Maps Google sheets these change the landscape or web developers and saw it",
    "start": "2314910",
    "end": "2322050"
  },
  {
    "text": "you know help us to realize what we can do with the browsers in the JavaScript",
    "start": "2322050",
    "end": "2328440"
  },
  {
    "text": "language NASA is using nodejs to help analyze spacesuit data and to",
    "start": "2328440",
    "end": "2336450"
  },
  {
    "start": "2329000",
    "end": "2351000"
  },
  {
    "text": "make astronauts more safe JavaScript making astronauts more safe it's a bold",
    "start": "2336450",
    "end": "2344370"
  },
  {
    "text": "move I I have to admit but that's what's",
    "start": "2344370",
    "end": "2350070"
  },
  {
    "text": "being done at Woods law states that any application that can be written in",
    "start": "2350070",
    "end": "2356160"
  },
  {
    "start": "2351000",
    "end": "2365000"
  },
  {
    "text": "JavaScript will eventually be written in JavaScript and this self-fulfilling",
    "start": "2356160",
    "end": "2362120"
  },
  {
    "text": "prophecy is no more true than things like emulators you there are entire",
    "start": "2362120",
    "end": "2370290"
  },
  {
    "start": "2365000",
    "end": "2392000"
  },
  {
    "text": "operating systems that have been created using pure JavaScript there's a DOS",
    "start": "2370290",
    "end": "2377280"
  },
  {
    "text": "implementation there's a Linux implementation there's a Commodore 64 emulator and god help us",
    "start": "2377280",
    "end": "2383730"
  },
  {
    "text": "there's Windows 95 there are so many things you can do with JavaScript",
    "start": "2383730",
    "end": "2389070"
  },
  {
    "text": "whether you need to or not and there's things like Internet of Things with",
    "start": "2389070",
    "end": "2395460"
  },
  {
    "text": "libraries like johnny-five and node-red you can do me",
    "start": "2395460",
    "end": "2400869"
  },
  {
    "text": "music using a tool like banje s I have a personal project on charter that takes",
    "start": "2400869",
    "end": "2408279"
  },
  {
    "text": "chord charts and in court pro text format and turns them into beautifully",
    "start": "2408279",
    "end": "2413410"
  },
  {
    "text": "formatted yes uhm JavaScript works great for doing things like that there's games",
    "start": "2413410",
    "end": "2420849"
  },
  {
    "text": "and then there's desktop apps like Visual Studio code github desktop and",
    "start": "2420849",
    "end": "2426880"
  },
  {
    "text": "the slack desktop app those are all examples of apps created with electron",
    "start": "2426880",
    "end": "2432210"
  },
  {
    "text": "which is essentially node.js and chromium or the rendering and that only",
    "start": "2432210",
    "end": "2440200"
  },
  {
    "text": "just scratches the surface of what you can do with with JavaScript you can build really anything you can think of",
    "start": "2440200",
    "end": "2448480"
  },
  {
    "text": "that you can build with JavaScript you build with a programming language you could probably build it javascript may",
    "start": "2448480",
    "end": "2457059"
  },
  {
    "text": "not always be the best choice for a given thing but you can do it and the power is there JavaScript can be",
    "start": "2457059",
    "end": "2466470"
  },
  {
    "text": "challenging but it's getting better all the time and I think the JavaScript language that",
    "start": "2466470",
    "end": "2474099"
  },
  {
    "text": "we have today is far far better than what we had years ago and we went",
    "start": "2474099",
    "end": "2480249"
  },
  {
    "text": "through those years of es 3 and I find",
    "start": "2480249",
    "end": "2485799"
  },
  {
    "text": "that javascript is now a joy to work with most of them now here are some of",
    "start": "2485799",
    "end": "2495789"
  },
  {
    "text": "my thoughts on the future of JavaScript in the life of JavaScript so far we've",
    "start": "2495789",
    "end": "2502749"
  },
  {
    "text": "seen the language evolved and the influenced by a number of other",
    "start": "2502749",
    "end": "2507819"
  },
  {
    "text": "languages and libraries browsers and technologies and in the past couple of",
    "start": "2507819",
    "end": "2515470"
  },
  {
    "start": "2514000",
    "end": "2540000"
  },
  {
    "text": "years typescript has gained a lot of momentum typescript does seem to be becoming the",
    "start": "2515470",
    "end": "2523359"
  },
  {
    "text": "standard for a type system for JavaScript if you listen to the",
    "start": "2523359",
    "end": "2528789"
  },
  {
    "text": "typescript believers you might be convinced that it solves all the problems",
    "start": "2528789",
    "end": "2534280"
  },
  {
    "text": "in JavaScript I don't know I wouldn't go that far",
    "start": "2534280",
    "end": "2539470"
  },
  {
    "text": "um Eric Eliot well-known author speaker",
    "start": "2539470",
    "end": "2545020"
  },
  {
    "start": "2540000",
    "end": "2614000"
  },
  {
    "text": "and open source developer in the JavaScript community he wrote a article called the typescript",
    "start": "2545020",
    "end": "2552070"
  },
  {
    "text": "tax it's a cost-benefit analysis of using pine script based on his",
    "start": "2552070",
    "end": "2559180"
  },
  {
    "text": "experience now his experience can be different from other people's experience",
    "start": "2559180",
    "end": "2565300"
  },
  {
    "text": "and is different so it's it's the scenario of well it depends right but",
    "start": "2565300",
    "end": "2573190"
  },
  {
    "text": "Eric Elliot makes the case that contrary to a lot of hype out there typescript",
    "start": "2573190",
    "end": "2580210"
  },
  {
    "text": "projects can introduce more friction",
    "start": "2580210",
    "end": "2585369"
  },
  {
    "text": "instead of less friction they can introduce more time can take more time to onboard new developers and argues",
    "start": "2585369",
    "end": "2594790"
  },
  {
    "text": "that a type system for JavaScript will only prevent a small prevent a small",
    "start": "2594790",
    "end": "2602589"
  },
  {
    "text": "percentage of bugs the bigger more",
    "start": "2602589",
    "end": "2607660"
  },
  {
    "text": "costly bugs can't be prevented by a type system it turns out you know if you",
    "start": "2607660",
    "end": "2617500"
  },
  {
    "start": "2614000",
    "end": "2683000"
  },
  {
    "text": "think about it any language a language that's dynamic or a language that's",
    "start": "2617500",
    "end": "2622869"
  },
  {
    "text": "static it doesn't matter um can't for save you from making mistakes I recently",
    "start": "2622869",
    "end": "2631510"
  },
  {
    "text": "had a conversation with a developer who said years of using typescript that he",
    "start": "2631510",
    "end": "2638080"
  },
  {
    "text": "wishes his development team go back to using plain JavaScript so I've heard",
    "start": "2638080",
    "end": "2644920"
  },
  {
    "text": "lots and lots of stories from both sides of the spectrum typescript is great can",
    "start": "2644920",
    "end": "2651760"
  },
  {
    "text": "do a lot of great things that can help you to move faster it can help with large scale projects that can help you",
    "start": "2651760",
    "end": "2658900"
  },
  {
    "text": "to reduce friction when refactoring code or it can also increase friction",
    "start": "2658900",
    "end": "2667770"
  },
  {
    "text": "and cause frustration it could be you know just like the language of the",
    "start": "2667770",
    "end": "2673830"
  },
  {
    "text": "JavaScript language itself some of those things can be solved by education and experience and and disciplines well",
    "start": "2673830",
    "end": "2684080"
  },
  {
    "text": "regardless I there are some benefits to typescript I see the typescript",
    "start": "2684080",
    "end": "2691910"
  },
  {
    "text": "is continuing to have impact on the web developer community I find it",
    "start": "2691910",
    "end": "2698940"
  },
  {
    "text": "interesting that there are members of the tc39 who use typescript and my",
    "start": "2698940",
    "end": "2705060"
  },
  {
    "text": "prediction is that we may start to see the most valuable ideas in typescript",
    "start": "2705060",
    "end": "2712140"
  },
  {
    "text": "begin to make their way into Ekman script and if that happens will there",
    "start": "2712140",
    "end": "2720060"
  },
  {
    "text": "continue to be a strong case for typescript I look forward to a day when",
    "start": "2720060",
    "end": "2726530"
  },
  {
    "text": "maybe we no longer need to use a tool like typescript we have everything that",
    "start": "2726530",
    "end": "2732660"
  },
  {
    "text": "we need in the Java you know the pure JavaScript regardless I believe that",
    "start": "2732660",
    "end": "2741930"
  },
  {
    "start": "2739000",
    "end": "2770000"
  },
  {
    "text": "there is a strong case for investing in JavaScript the good the power the",
    "start": "2741930",
    "end": "2748620"
  },
  {
    "text": "flexibility the university allottee that it's everywhere those things in my mind",
    "start": "2748620",
    "end": "2756240"
  },
  {
    "text": "far outweigh the negatives the language as I mentioned before has improved",
    "start": "2756240",
    "end": "2762720"
  },
  {
    "text": "tremendously in recent years and I believe it's only going to get better",
    "start": "2762720",
    "end": "2769610"
  },
  {
    "text": "thank you javascript for enriching our lives or keeping us on our toes and for",
    "start": "2770030",
    "end": "2778680"
  },
  {
    "text": "making us humble when we're tempted to believe that we have it all figured out I believe that all of us and technology",
    "start": "2778680",
    "end": "2791130"
  },
  {
    "start": "2787000",
    "end": "2830000"
  },
  {
    "text": "have an incredible opportunity and a responsibility to make a positive impact",
    "start": "2791130",
    "end": "2796440"
  },
  {
    "text": "on our workplaces our community and the world I challenged you to take the things that",
    "start": "2796440",
    "end": "2803099"
  },
  {
    "text": "you've been learning at NDC Porto you share your experiences with others and",
    "start": "2803099",
    "end": "2808290"
  },
  {
    "text": "you help make our world a better place for everyone wherever you are I hope you",
    "start": "2808290",
    "end": "2815940"
  },
  {
    "text": "stay safe you cherish the time that you have with your loved ones you make the most of the gifts and the talents that",
    "start": "2815940",
    "end": "2823020"
  },
  {
    "text": "you are blessed with and you get out there and you be awesome if you have any",
    "start": "2823020",
    "end": "2832079"
  },
  {
    "start": "2830000",
    "end": "2846000"
  },
  {
    "text": "questions please ask me on slack and I will answer them the best I can thanks everyone and I hope you have a",
    "start": "2832079",
    "end": "2839369"
  },
  {
    "text": "great rest of your day",
    "start": "2839369",
    "end": "2842240"
  }
]