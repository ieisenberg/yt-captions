[
  {
    "text": "not quite yeah hello everybody those lights are",
    "start": "8230",
    "end": "14760"
  },
  {
    "text": "really bright they're really really bright we're here to talk about something that doesn't work yet so there",
    "start": "14760",
    "end": "22830"
  },
  {
    "text": "might be some imagination required shooting certain parts of this talk no",
    "start": "22830",
    "end": "29849"
  },
  {
    "text": "no it's all going to work just fine so we've David Damien Microsoft Ethernet",
    "start": "29849",
    "end": "35220"
  },
  {
    "text": "eight love of luck we've spoken to probably many of you and lots of people",
    "start": "35220",
    "end": "40680"
  },
  {
    "text": "attending see as of how to use about signal are very something very fond to both of our hearts I'm having a chance",
    "start": "40680",
    "end": "46320"
  },
  {
    "text": "to work on it for a while we've been busy chipping a spinet core but we're back working on signal or again or at",
    "start": "46320",
    "end": "53940"
  },
  {
    "text": "least some people are so we here to talk to you about the plans for signal are in",
    "start": "53940",
    "end": "59129"
  },
  {
    "text": "the world of Ethernet core and we're going to look quite a lot at the underpinnings of this new signal our",
    "start": "59129",
    "end": "65880"
  },
  {
    "text": "world something that we've currently called a spy net core sockets you can",
    "start": "65880",
    "end": "71520"
  },
  {
    "text": "throw all of your abuse at us around how we're terrible at naming but that's what it's called right now Ethernet core sockets so let's dive right in",
    "start": "71520",
    "end": "78990"
  },
  {
    "text": "and I will warn right out front I said there is a super super early like a lot",
    "start": "78990",
    "end": "84930"
  },
  {
    "text": "of this stuff is incredibly aspirational all right so everything you're seeing",
    "start": "84930",
    "end": "90659"
  },
  {
    "text": "here probably will change some of it I mean the concept hopefully will will stick around but some things here might",
    "start": "90659",
    "end": "97259"
  },
  {
    "text": "change over the coming months so signal are as it is right we all know what signal our is real-time web framework",
    "start": "97259",
    "end": "104280"
  },
  {
    "text": "for each p.net C sharp client C++ client as of a couple years ago JavaScript",
    "start": "104280",
    "end": "109860"
  },
  {
    "text": "client Java client which are vaguely good but it's there and as you know a",
    "start": "109860",
    "end": "115200"
  },
  {
    "text": "great way of building real-time application a real-time web functionality into your application when",
    "start": "115200",
    "end": "120960"
  },
  {
    "text": "we set out to build the new signal art the one in ethernet cord there were we learnt a lot over building two major",
    "start": "120960",
    "end": "127170"
  },
  {
    "text": "versions of signal arm and there were some things that given our time again we",
    "start": "127170",
    "end": "132780"
  },
  {
    "text": "would choose not to do this time and so we have an opportunity now to kind of start afresh with new eyes with a whole",
    "start": "132780",
    "end": "139590"
  },
  {
    "text": "bunch of years behind us after having built the last signal so there's a few things that you're not going to see",
    "start": "139590",
    "end": "145239"
  },
  {
    "text": "next time we know more jQuery dependency which people have been very vocally had",
    "start": "145239",
    "end": "152140"
  },
  {
    "text": "seen her opinions on on github for a while we're starting out with no j.crew this time so there will be a new",
    "start": "152140",
    "end": "157420"
  },
  {
    "text": "JavaScript claim no more Auto reconnect with message replay this is one of the",
    "start": "157420",
    "end": "162700"
  },
  {
    "text": "things that signal I did for you before where if a connection was made to the",
    "start": "162700",
    "end": "168489"
  },
  {
    "text": "server and then for whatever reason the connection dropped with the physical underlying connection dropped the client",
    "start": "168489",
    "end": "174189"
  },
  {
    "text": "would attempt to reconnect underneath the same logical connection from your point of view and try to make that look",
    "start": "174189",
    "end": "180519"
  },
  {
    "text": "seamless you in the client and that required a lot of gymnastics on the server we had to store messages that",
    "start": "180519",
    "end": "186670"
  },
  {
    "text": "were otherwise would have been sent to that client that weren't being sent right now and it really before signal",
    "start": "186670",
    "end": "192790"
  },
  {
    "text": "our to do a lot of things that you would more typically associate with a durable messaging platform then with just a",
    "start": "192790",
    "end": "198340"
  },
  {
    "text": "real-time messaging platform and while it worked okay it really did complicates",
    "start": "198340",
    "end": "204819"
  },
  {
    "text": "the the design of signal on the server and it was frankly a bug farm there were a lot of issues in supporting this this",
    "start": "204819",
    "end": "211540"
  },
  {
    "text": "reconnect problem it also led to issues of memory use and people wouldn't quite understand why there was so much memory",
    "start": "211540",
    "end": "217810"
  },
  {
    "text": "being used in the server it was because you know we have to store these messages for clients that are in this phase of reconnecting those things were",
    "start": "217810",
    "end": "223840"
  },
  {
    "text": "configurable but it was just an area that we felt when we looked at people's code and how they were using it it just",
    "start": "223840",
    "end": "229629"
  },
  {
    "text": "wasn't necessary for us to do it in the framework you're better off leaving concerns like do I want messages to be",
    "start": "229629",
    "end": "235900"
  },
  {
    "text": "able to be stored for particular clients and then replayed on connect as an application concern and if we make the",
    "start": "235900",
    "end": "241120"
  },
  {
    "text": "framework more flexible composed of better pieces you can plug those at that logic in yourself so that's not going to",
    "start": "241120",
    "end": "247359"
  },
  {
    "text": "happen by default it will still happen for one particular transport the long polling transport you have to do it for",
    "start": "247359",
    "end": "253379"
  },
  {
    "text": "but that will very specifically be done just for that transport rather than being a core part of signaler which it",
    "start": "253379",
    "end": "259060"
  },
  {
    "text": "was in the beginning no more hub state we had a feature wasn't really used much from what we saw",
    "start": "259060",
    "end": "265419"
  },
  {
    "text": "which basically enabled you to have the client in the server both party on a",
    "start": "265419",
    "end": "270669"
  },
  {
    "text": "shared state bag you know you might see sharp on the server and JavaScript or C sharp in the client and it would get",
    "start": "270669",
    "end": "277000"
  },
  {
    "text": "round trips anytime to state changed between any message going through quiet and server it was a bit",
    "start": "277000",
    "end": "283279"
  },
  {
    "text": "messy it wasn't a particularly nice thing for us to support and because how",
    "start": "283279",
    "end": "289039"
  },
  {
    "text": "many people used it we're just not going to do it this time around unless you know lots of people scream at us and they come out of the woodwork and say we",
    "start": "289039",
    "end": "295099"
  },
  {
    "text": "really want upstate then we can look at bringing something back no more Multi hub end points so previously in signaler you would create",
    "start": "295099",
    "end": "301550"
  },
  {
    "text": "you know a series of hubs you might have more than one and then you would connect to the hub end point on the server and",
    "start": "301550",
    "end": "308959"
  },
  {
    "text": "all your hub traffic would go over that end point by default now that seemed like a good idea at the time but the",
    "start": "308959",
    "end": "314689"
  },
  {
    "text": "reality is that confused almost everybody and everyone would always use terminology like I'm connecting my",
    "start": "314689",
    "end": "319969"
  },
  {
    "text": "clients to this hub and reality you were never connecting clients to a specific hub you were just connecting clients and",
    "start": "319969",
    "end": "325129"
  },
  {
    "text": "we did all the work of trying to figure out what hubs you know all that we are routing all the hub traffic over that",
    "start": "325129",
    "end": "330379"
  },
  {
    "text": "single connection it meant we had to multiplex multiple hubs over one connection which meant we needed a complex sort of payload type and",
    "start": "330379",
    "end": "337069"
  },
  {
    "text": "envelope that knew the hub tier ladder data bar it made things complicated and it didn't really give us much benefit",
    "start": "337069",
    "end": "342499"
  },
  {
    "text": "and so in the new world you when you create employ when you create hubs you get a specific URL to a hub basically",
    "start": "342499",
    "end": "348409"
  },
  {
    "text": "right and nice and easy no more single scale out model so we had this one thing",
    "start": "348409",
    "end": "355849"
  },
  {
    "text": "in the old signal R which was message bus and it was the root of the world and if you ran in memory you had an in-memory message bus and then we had",
    "start": "355849",
    "end": "362509"
  },
  {
    "text": "these pluggable scale-out providers which kind of replaced or augmented the one true message busting all messages",
    "start": "362509",
    "end": "368239"
  },
  {
    "text": "for signal I in a little signal Oh world were routed through this one message bus and that's really because we started out",
    "start": "368239",
    "end": "375979"
  },
  {
    "text": "designing signal R for long polling right in the beginning everything was designed around how long polling worked because WebSockets didn't begin when we",
    "start": "375979",
    "end": "382789"
  },
  {
    "text": "didn't but it didn't exist when we started with signal and that's also the same reason why we did Auto reconnect previously was because you needed it for",
    "start": "382789",
    "end": "389209"
  },
  {
    "text": "long polling let again over time the single model scale out it causes issues",
    "start": "389209",
    "end": "394759"
  },
  {
    "text": "the way that we do it in signal our today doesn't scale particularly well it only scales well for certain payload",
    "start": "394759",
    "end": "400849"
  },
  {
    "text": "types so if you're building a system where you just send out broadcasts to all the connected clients and you're in",
    "start": "400849",
    "end": "407389"
  },
  {
    "text": "control on the server side or when that happens it scales pretty well okay assuming you're only doing you know a message every few",
    "start": "407389",
    "end": "413629"
  },
  {
    "text": "or you control the payload size that's fine as soon as you start building something more collaborative where you",
    "start": "413629",
    "end": "418789"
  },
  {
    "text": "have clients sending messages to each other or they're in control of what's going on that just doesn't work okay",
    "start": "418789",
    "end": "424819"
  },
  {
    "text": "because you can't control the rate of messages going through the message bus and if you've got lots of different people trying to send messages at the",
    "start": "424819",
    "end": "431270"
  },
  {
    "text": "same time the way we did it is that you know you have lots and lots of servers scaling out your traffic they all share",
    "start": "431270",
    "end": "437599"
  },
  {
    "text": "a message bus and every message to any server to any client goes over to every single server so you can't for example",
    "start": "437599",
    "end": "443750"
  },
  {
    "text": "have all the really busy people on one server and all the lots of busy people on another server signal I didn't know",
    "start": "443750",
    "end": "450020"
  },
  {
    "text": "it just sent messages to every single server so you would get to a point where that just wouldn't scale and if you wanted to do anything else you had to",
    "start": "450020",
    "end": "455419"
  },
  {
    "text": "throw all that away and just do something completely custom which was not great now we had some teams in Microsoft build systems where it can",
    "start": "455419",
    "end": "462379"
  },
  {
    "text": "took the entire server done because they had the button scaler on on the cloud get one team hit on entire address time",
    "start": "462379",
    "end": "469460"
  },
  {
    "text": "while you're having this are building scale up by all oh my default I'm kind of said you know that that is kind of",
    "start": "469460",
    "end": "475460"
  },
  {
    "text": "the knife solution if you have skill that is very superior to your workload yes kind of have your own logic to understand what which things should go",
    "start": "475460",
    "end": "482210"
  },
  {
    "text": "into it which servers and then things go better that way yeah and so they redesign those stuff with our help and now they have a very nice scalable",
    "start": "482210",
    "end": "488090"
  },
  {
    "text": "system that works in as well but yeah so we don't have a place like one out of the box that works around this simple",
    "start": "488090",
    "end": "494960"
  },
  {
    "text": "scale that model that we expect everyone to do we have a totally new model and we'll show you an example this later",
    "start": "494960",
    "end": "500000"
  },
  {
    "text": "which is much more pluggable and we'll ship you own one based on Redis and moisture will show you the different strategies but we think this is going to",
    "start": "500000",
    "end": "505969"
  },
  {
    "text": "be set us up for a much better sort of scale point in the future and the last thing is no support for multi server",
    "start": "505969",
    "end": "511550"
  },
  {
    "text": "ping pong so when you have a scale out scenario and you've got clients that might be connected to one server for one",
    "start": "511550",
    "end": "517640"
  },
  {
    "text": "part of the connection but when they send the next message they ping pong to a different server because they're being load-balanced in the old world that",
    "start": "517640",
    "end": "524029"
  },
  {
    "text": "would work because all the servers were sharing a single message bus and we maintained sort of enough state or we",
    "start": "524029",
    "end": "529160"
  },
  {
    "text": "would recreate State on the new servers when you ping pong from under the other doesn't work in the new world we require",
    "start": "529160",
    "end": "534920"
  },
  {
    "text": "by default that you have to have sticky sessions enabled when doing scale out it turns out not to be too much of a",
    "start": "534920",
    "end": "540800"
  },
  {
    "text": "problem in the real world from what we've seen so far and the reality is if you did want to enable a ping pong you",
    "start": "540800",
    "end": "546770"
  },
  {
    "text": "could write code to do that yourself anyway the new system is fairly flexible so you could get in there and rehydrate",
    "start": "546770",
    "end": "552320"
  },
  {
    "text": "things if you wanted to and make that work again but out of the box it's going to require you to have sticky sessions",
    "start": "552320",
    "end": "557630"
  },
  {
    "text": "alright so that's all the bad news the socket change not really bad things are going to different things different",
    "start": "557630",
    "end": "562699"
  },
  {
    "text": "things here's all the new stuff some people have wanted for a long time that we're actually going to do this time so binary data support is coming and we",
    "start": "562699",
    "end": "569329"
  },
  {
    "text": "have support for that already I think actually so you'll be able to send and receive binary data it'll be host agnostic so you'll now be",
    "start": "569329",
    "end": "576589"
  },
  {
    "text": "able to run signal are the signal on infrastructure or the ethernet sockets infrastructure doesn't isn't really tie",
    "start": "576589",
    "end": "582560"
  },
  {
    "text": "to HP it sorry isn't tied to HTTP the programming model that you use hubs endpoints they don't talk HTTP they just",
    "start": "582560",
    "end": "590329"
  },
  {
    "text": "deal with connections okay and you can host those on whatever you like and I'll show you an architecture diagram in a minute that might make that a little",
    "start": "590329",
    "end": "596149"
  },
  {
    "text": "clearer that will enable us to do things like Oh Connect TCP clients to signal ah okay which is really nice has something",
    "start": "596149",
    "end": "602089"
  },
  {
    "text": "people are wondering for a long time this low-level API under hubs we ripped",
    "start": "602089",
    "end": "607279"
  },
  {
    "text": "out the persistent connection API that was what we had in the old signal that was prior to HTTP we have a new API",
    "start": "607279",
    "end": "613130"
  },
  {
    "text": "called endpoints okay and we'll show you some examples of endpoint endpoints are very very flexible and there's a now the",
    "start": "613130",
    "end": "618529"
  },
  {
    "text": "building block of essentially what will become all non-http workloads that run",
    "start": "618529",
    "end": "623870"
  },
  {
    "text": "on Ethernet core which was something that we aspire to do by the end of the year we'll use this endpoints API that",
    "start": "623870",
    "end": "630199"
  },
  {
    "text": "we're starting out with in signaler our supporting multiple protocols and formats so today signal is basically",
    "start": "630199",
    "end": "636770"
  },
  {
    "text": "just speaks Jason right if you have signal oh it's always text and it's always Jason and we own the shape of the",
    "start": "636770",
    "end": "642260"
  },
  {
    "text": "messages in the new world that's going to be a lot more pluggable so if you're at the end point a level you can do",
    "start": "642260",
    "end": "647449"
  },
  {
    "text": "whatever you like right you can send protobuf you can send Jason you can send custom protocols and your endpoint code",
    "start": "647449",
    "end": "654350"
  },
  {
    "text": "could look the same no matter what type of connection is currently connected to it so you can literally have different connections",
    "start": "654350",
    "end": "659510"
  },
  {
    "text": "from different clients that speak different languages all go through to the same endpoint which is kind of nice",
    "start": "659510",
    "end": "665510"
  },
  {
    "text": "you have to write code to do it but out of the box you can get that but something like hubs we will most likely",
    "start": "665510",
    "end": "671360"
  },
  {
    "text": "ship both a Jason and a protobuf version of hubs out of the box and you'll be able to have a single hub with multiple",
    "start": "671360",
    "end": "677779"
  },
  {
    "text": "different clients talking to it speaking either or protobuf which is kind of nice support for pure WebSocket clients so",
    "start": "677779",
    "end": "685310"
  },
  {
    "text": "today when you build signal I you have a JavaScript client that we produce and you use it and you kind of have to use",
    "start": "685310",
    "end": "691850"
  },
  {
    "text": "the client if you don't use the client it's practically impossible to connect to a signalized server okay that requires you have a jQuery dependency",
    "start": "691850",
    "end": "697910"
  },
  {
    "text": "and yadda yadda yadda in the new world we want to make it possible to say well if I have a WebSocket if let's assume",
    "start": "697910",
    "end": "703310"
  },
  {
    "text": "the best-case scenario I have a WebSocket it's full duplex it has framing it has all these nice",
    "start": "703310",
    "end": "708410"
  },
  {
    "text": "features that we want in a transport okay let's assume that's the default why don't we build a system where I can just",
    "start": "708410",
    "end": "714350"
  },
  {
    "text": "connect you with a WebSocket and then as long as I speak the same protocol as the endpoint that you've connected to that's",
    "start": "714350",
    "end": "720440"
  },
  {
    "text": "all you should need right you don't need any other client code from us so that's what we've done if you want to speak in",
    "start": "720440",
    "end": "726590"
  },
  {
    "text": "a different transport if you want to use service and events or long polling then sure you're going to need a small client",
    "start": "726590",
    "end": "732110"
  },
  {
    "text": "library to emulate that connection for you just like we had in signal or evolved and then if you want to speak to hubs you'll need a library that formats",
    "start": "732110",
    "end": "740600"
  },
  {
    "text": "hub messages okay so you can send hub invocation to the server and you can receive hyper implications from the",
    "start": "740600",
    "end": "746210"
  },
  {
    "text": "server and maybe even send results back which is also a new feature that we're looking at doing so that's kind of nice",
    "start": "746210",
    "end": "752180"
  },
  {
    "text": "and we're going to use some of these features and some of the demos we have after these slides so that's the next thing returning results from client",
    "start": "752180",
    "end": "758210"
  },
  {
    "text": "method invocations one of the first things that people often ask when they program the signal are is they type their code on the server that looks like",
    "start": "758210",
    "end": "764300"
  },
  {
    "text": "it's invoking a method on the client right clients are all dot something or client stop this client ID call this method and they want to get a result",
    "start": "764300",
    "end": "770960"
  },
  {
    "text": "back they expect to be able to get a result back from the client we never supported that but David just spent the last hour and a half hacking that",
    "start": "770960",
    "end": "777290"
  },
  {
    "text": "feature into the new signal autonomy that we want to do and we have done it yet I thought what am i grateful you're",
    "start": "777290",
    "end": "782300"
  },
  {
    "text": "done with that can you make that work yeah and so we actually have I think something working that climate demonstrates what that might look like",
    "start": "782300",
    "end": "787700"
  },
  {
    "text": "rebored it's terrible but it's a very interesting idea to effectively turn",
    "start": "787700",
    "end": "794090"
  },
  {
    "text": "signal rather than being a client-server technology it's basically just a full",
    "start": "794090",
    "end": "799160"
  },
  {
    "text": "duplex pipe right and it has two parties and it might be that the server has the",
    "start": "799160",
    "end": "804740"
  },
  {
    "text": "server and your system has lots of different things connected to it so it is logically the server but from any",
    "start": "804740",
    "end": "810080"
  },
  {
    "text": "given connections point of view it's just two parties and they're calling each other back thought you're kind of doing RPC back",
    "start": "810080",
    "end": "815330"
  },
  {
    "text": "and forward right opens up some really interesting programming paradigms especially when you consider async/await",
    "start": "815330",
    "end": "821000"
  },
  {
    "text": "on the server and async/await in the client with typescript you can just call a method in c-sharp that's actually a",
    "start": "821000",
    "end": "827720"
  },
  {
    "text": "typescript method in the client or wait that and then the client can do some work as a result of that method being",
    "start": "827720",
    "end": "832850"
  },
  {
    "text": "invoked block on some UI and the client and then return a result back to the server who's just sitting in an async",
    "start": "832850",
    "end": "839000"
  },
  {
    "text": "you know state machine waiting for the result for the client you can block the entire server from blocking on so now you could deadlock you with your server",
    "start": "839000",
    "end": "844760"
  },
  {
    "text": "that's pretty good by writing bad JavaScript we can do that isn't that great yeah we're not kidding I'm right",
    "start": "844760",
    "end": "851660"
  },
  {
    "text": "thank you so la we were as I said typescript so we've rewritten the client from scratch it's a completely new",
    "start": "851660",
    "end": "857510"
  },
  {
    "text": "JavaScript client which is a few written in typescript and I think the demo that you're going to show later you actually broke the code in part script as well so",
    "start": "857510",
    "end": "863960"
  },
  {
    "text": "you get a lovely typescript experience when writing your client code which is great and then lastly as I mentioned",
    "start": "863960",
    "end": "869660"
  },
  {
    "text": "before as a result of dumping our or dropping our one model tries to sue all",
    "start": "869660",
    "end": "876140"
  },
  {
    "text": "scale-out design we have a much we think much more flexible design for doing scale up which should allow you to",
    "start": "876140",
    "end": "882230"
  },
  {
    "text": "either drop in pre-configured things that do scale out in drastically different ways or write your own scale",
    "start": "882230",
    "end": "887690"
  },
  {
    "text": "out that's really suited to your particular workload without you having to reinvent the world which is kind of",
    "start": "887690",
    "end": "893540"
  },
  {
    "text": "nice so what does this look like so in its basic it's sort of basic",
    "start": "893540",
    "end": "898670"
  },
  {
    "text": "architecture for the low level stuff or a snake called sockets in general right at the bottom you have a host okay so",
    "start": "898670",
    "end": "904610"
  },
  {
    "text": "that everything else is host agnostic really so okay someone is hosting you all right then",
    "start": "904610",
    "end": "909620"
  },
  {
    "text": "you have transports transports of things that know how to get bytes out of something turn them into something that",
    "start": "909620",
    "end": "916760"
  },
  {
    "text": "can be passed further up the stack it's pretty straightforward WebSockets is a transport for example you want have a TCP transport transport",
    "start": "916760",
    "end": "923360"
  },
  {
    "text": "typically or belong to a host right so HTTP host of some description will speak",
    "start": "923360",
    "end": "928610"
  },
  {
    "text": "various HTTP transports all right now in existing signaler we only had an HTTP host and we only had HDD transports okay",
    "start": "928610",
    "end": "936080"
  },
  {
    "text": "we had four of them then you have the the the gray arrows which David convinced me or didn't but insisted was",
    "start": "936080",
    "end": "943850"
  },
  {
    "text": "better than another block in there yes the actual connection object so we do have a type quarter connection and that",
    "start": "943850",
    "end": "949449"
  },
  {
    "text": "effectively sits in between transports and endpoints and that's what you program against inside your endpoint",
    "start": "949449",
    "end": "955459"
  },
  {
    "text": "class so then we have endpoints which is what you program with if you're building a low-level thing and then we have this",
    "start": "955459",
    "end": "961339"
  },
  {
    "text": "other thing on the side that you can optionally use called for matters which Devo is not quite sure about yet but I",
    "start": "961339",
    "end": "967490"
  },
  {
    "text": "like the idea of a lot and so we're still having big debates about how far we'll go with this format I think the",
    "start": "967490",
    "end": "972829"
  },
  {
    "text": "idea is that they're effectively like serializers but they understand the connection and they understand metadata",
    "start": "972829",
    "end": "979309"
  },
  {
    "text": "from the connection so a connection can say hey I've connected on this transport and I'm going to pass you a string that",
    "start": "979309",
    "end": "984920"
  },
  {
    "text": "says this is the protocol I want to I want to talk okay independent of the transport type and then somewhere else",
    "start": "984920",
    "end": "990470"
  },
  {
    "text": "in the system you can say well I'm going to register a formatter that understands this protocol name and can produce this",
    "start": "990470",
    "end": "996019"
  },
  {
    "text": "key like this C sharp object so that in your endpoint you can just say okay I",
    "start": "996019",
    "end": "1001059"
  },
  {
    "text": "have a connection I don't care what protocol it speaks just ask the system for a formatter that can read the T that",
    "start": "1001059",
    "end": "1006339"
  },
  {
    "text": "I want all right so your endpoint code becomes very generic just like control flow reading your objects writing out",
    "start": "1006339",
    "end": "1012339"
  },
  {
    "text": "your objects you don't have to worry about protocols and transports those types of things you just read and write T's okay and then all that logic to deal",
    "start": "1012339",
    "end": "1019600"
  },
  {
    "text": "with bytes and how to turn a bite into this T and vice versa is all in the format of system and we have some examples about it all see that and then",
    "start": "1019600",
    "end": "1026110"
  },
  {
    "text": "on top of all that is the high level API that if you've used signal are you typically would use as hubs okay you",
    "start": "1026110",
    "end": "1031418"
  },
  {
    "text": "just write hubs and all this other stuff taken care of for you so with something",
    "start": "1031419",
    "end": "1036520"
  },
  {
    "text": "like signal R where it's let's plug into the two different hosts underneath on the left-hand side we have HTTP",
    "start": "1036520",
    "end": "1042760"
  },
  {
    "text": "transport so we have web host which is the API in a spinet call that boots a",
    "start": "1042760",
    "end": "1048159"
  },
  {
    "text": "snit core and talks HTTP and then on top of that you have middleware okay that sits in the ethernet cord request",
    "start": "1048159",
    "end": "1053919"
  },
  {
    "text": "pipeline and there will be a middleware it'll basically be the signal our middleware so all the sockets middleware",
    "start": "1053919",
    "end": "1059440"
  },
  {
    "text": "I should obtain and it will have a bunch of transports and the three that we're going to support a WebSocket server sent events and long polling for is a frame",
    "start": "1059440",
    "end": "1065919"
  },
  {
    "text": "the fourth one we have killed no you're out the back and we beat it to death iframe was an abomination yay it really",
    "start": "1065919",
    "end": "1073000"
  },
  {
    "text": "was that was probably the biggest one of biggest bug farm transit bugs and like no one uses ie anymore so we're fine",
    "start": "1073000",
    "end": "1079860"
  },
  {
    "text": "they can use one polling it's all good it's all good on the right-hand side in",
    "start": "1080200",
    "end": "1086480"
  },
  {
    "text": "an alternate stack in the same application I can have a different host so I have a TCP server I that speaks or",
    "start": "1086480",
    "end": "1092720"
  },
  {
    "text": "the TCP transport of some description right and then they both sides of these both talk to the same hub endpoint that",
    "start": "1092720",
    "end": "1099230"
  },
  {
    "text": "hub and point code is agnostic to whoever is giving it bites it doesn't care right and so this way we can have a",
    "start": "1099230",
    "end": "1105920"
  },
  {
    "text": "bunch of hubs that you write up in the top right hand corner that's generally where you'll live and you can fire up a",
    "start": "1105920",
    "end": "1111170"
  },
  {
    "text": "TCP server fire up an ethernet core server or can TCP call it server inside network maker or server which is kind of",
    "start": "1111170",
    "end": "1116870"
  },
  {
    "text": "cool and you can accept connections from different types of clients and you can imagine extending this to various other",
    "start": "1116870",
    "end": "1123170"
  },
  {
    "text": "types of transport so we have examples of MQTT endpoints that speak in PTT",
    "start": "1123170",
    "end": "1128510"
  },
  {
    "text": "funnily enough AMQP is another protocol that comes up or you can write your own custom protocols which we have an",
    "start": "1128510",
    "end": "1133910"
  },
  {
    "text": "example of here which we'll do in a minute okay it's time for demos demo that's all the slides all right so I'm",
    "start": "1133910",
    "end": "1139160"
  },
  {
    "text": "going to start out with a demo of I hope works because I'm using like physical",
    "start": "1139160",
    "end": "1144200"
  },
  {
    "text": "hardware so anything's go wrong this is basically a board that has a Wi-Fi chip",
    "start": "1144200",
    "end": "1150140"
  },
  {
    "text": "on it and then a bunch of resistors and capacitors there's really not much else on it it's basically a Wi-Fi board that",
    "start": "1150140",
    "end": "1155360"
  },
  {
    "text": "runs Lua from what of it as far as I know right this was given to me by a guy on the signal of team he's been playing",
    "start": "1155360",
    "end": "1161090"
  },
  {
    "text": "around this and he's actually blogged about this this last week so if you look at this and go I had that board at home",
    "start": "1161090",
    "end": "1166850"
  },
  {
    "text": "this looks amazing or I like the idea of this then you'll be able to follow on so I just plugged it into my machine the way it works is",
    "start": "1166850",
    "end": "1174260"
  },
  {
    "text": "it actually connects to Wi-Fi so I'm going to open up the hotspot on my phone because I can't get it connect to the",
    "start": "1174260",
    "end": "1179630"
  },
  {
    "text": "conference Wi-Fi so I've been doing this through my phone actually already on and I'm going to open putty down here and",
    "start": "1179630",
    "end": "1186520"
  },
  {
    "text": "I'm going to connect to this profile here so this is the name of a board it's",
    "start": "1186520",
    "end": "1193820"
  },
  {
    "text": "the esp8266 knowed something board something something so I'm going to try",
    "start": "1193820",
    "end": "1200660"
  },
  {
    "text": "and open it and then I have a lure initialization script and then I have to hit the reset button for it to work currently there we go so it has a Lua",
    "start": "1200660",
    "end": "1208370"
  },
  {
    "text": "script that runs on boot which connects it to the Wi-Fi and so you can see here it has a bunch",
    "start": "1208370",
    "end": "1213620"
  },
  {
    "text": "of modules it has WebSockets it has Wi-Fi and some other stuff all right so",
    "start": "1213620",
    "end": "1218630"
  },
  {
    "text": "then what I'm going to do is I'm going to run do file and I have a social weather dot Lua file that's already on",
    "start": "1218630",
    "end": "1226010"
  },
  {
    "text": "this board and if I've given it enough time to connect to the Wi-Fi it's very mean I'm literally talking",
    "start": "1226010",
    "end": "1232460"
  },
  {
    "text": "over comport to this board right now so I'm gonna hit enter and I'm going to hope that it connects to my server in Asia because I have a server up running",
    "start": "1232460",
    "end": "1239240"
  },
  {
    "text": "an adder which will see the guy says it's connected so that's good it's a good start so I have my app here running",
    "start": "1239240",
    "end": "1245240"
  },
  {
    "text": "so I'm going to connect another client I have a c-sharp client here so we'll run that one so that says it's connected as",
    "start": "1245240",
    "end": "1251090"
  },
  {
    "text": "well so that's a good start you know every time I resize this window I regret it somewhere down here is my text nope",
    "start": "1251090",
    "end": "1258590"
  },
  {
    "text": "up here come on yeah I lost my text",
    "start": "1258590",
    "end": "1265390"
  },
  {
    "text": "scroll scroll is there a trick what you do I resize the window under you I'll",
    "start": "1265390",
    "end": "1271220"
  },
  {
    "text": "control f5 again and just live with it being big how's that out all right so that's that and then over here somewhere",
    "start": "1271220",
    "end": "1276710"
  },
  {
    "text": "I have the actual server app so let's reboot that alright so I have my web app",
    "start": "1276710",
    "end": "1282350"
  },
  {
    "text": "running up in Asia and I have my lure board connected over my phone's Wi-Fi and then I have a c-sharp app running on",
    "start": "1282350",
    "end": "1290390"
  },
  {
    "text": "the console if I come up here and hit send report if all goes well they all update which they did which is great ok",
    "start": "1290390",
    "end": "1296840"
  },
  {
    "text": "now what's interesting here that you can't see is they're all speaking different protocols alright so the",
    "start": "1296840",
    "end": "1304270"
  },
  {
    "text": "JavaScript in this page is speaking Jason that's sending Jason back and forth a pretty standard if you've ever",
    "start": "1304270",
    "end": "1309830"
  },
  {
    "text": "done signals that's what it does the c-sharp app is actually using protobufs anyone use protobuf in any of",
    "start": "1309830",
    "end": "1316280"
  },
  {
    "text": "their stuff ok a few hands ok so protobuf what our protocol buffers was made by Google and it's a very a binary",
    "start": "1316280",
    "end": "1323330"
  },
  {
    "text": "format very highly packed very highly all laid out nicely for running over the wire and there's a c-sharp library for",
    "start": "1323330",
    "end": "1330140"
  },
  {
    "text": "it and you basically decline a decline you define a shape of your thing like",
    "start": "1330140",
    "end": "1336740"
  },
  {
    "text": "this using a dot profile and then it generates c-sharp for you ok so this program here is using protobuf opening",
    "start": "1336740",
    "end": "1343010"
  },
  {
    "text": "up a WebSocket connection you can see down here client web socket and speaking protobuf over that means not",
    "start": "1343010",
    "end": "1348230"
  },
  {
    "text": "much code like it's pretty straightforward and then when it gets the message from the server over here it spits it out in the in the console and",
    "start": "1348230",
    "end": "1357230"
  },
  {
    "text": "if I hit enter over here it'll send so I can hit enter and it sends one and I should share that one get updated over",
    "start": "1357230",
    "end": "1363260"
  },
  {
    "text": "here and I should see this one I got a second one down here under the last one which is a Lua script is speaking a",
    "start": "1363260",
    "end": "1369260"
  },
  {
    "text": "custom protocol it's actually a pipe delimited protocol that's just written into this into this application and so",
    "start": "1369260",
    "end": "1376310"
  },
  {
    "text": "I've got a little command here that I have to run so I have to send over the active WebSocket so I'll see WebSocket",
    "start": "1376310",
    "end": "1382960"
  },
  {
    "text": "send and then there's a pipe delimited protocol I send the the temperature in Fahrenheit so I'll say it's 44 degrees I",
    "start": "1382960",
    "end": "1390080"
  },
  {
    "text": "don't know what it is I don't know Fahrenheit - which I think is the weather it's",
    "start": "1390080",
    "end": "1396140"
  },
  {
    "text": "partly cloudy or sunny or something like that zero which is I think V I can't",
    "start": "1396140",
    "end": "1403130"
  },
  {
    "text": "remember it's something else it's there's four fields one two and maybe it's the client I can't remember and the",
    "start": "1403130",
    "end": "1408830"
  },
  {
    "text": "last one is the zip code and I'll just use the redmond zip code then I have to end that with a new line and then I'll",
    "start": "1408830",
    "end": "1414140"
  },
  {
    "text": "close that off and so I'm just typing into my comport down here now if I send that that went up to the server came",
    "start": "1414140",
    "end": "1420860"
  },
  {
    "text": "back down to this client and was also reported out over here in the prototype client and it was updated here in my",
    "start": "1420860",
    "end": "1428240"
  },
  {
    "text": "page over here okay so I've got three different clients using three different languages and three different protocols",
    "start": "1428240",
    "end": "1433640"
  },
  {
    "text": "and three different connection techniques all speaking to the same endpoint so what does the endpoint code look like because that's really what it",
    "start": "1433640",
    "end": "1440120"
  },
  {
    "text": "comes down to is you want your endpoint to be fairly straightforward right let's zoom this in a bit alright we're not",
    "start": "1440120",
    "end": "1447650"
  },
  {
    "text": "done I don't know how much that's like that's way too much my control seems a little over zealous there all right so",
    "start": "1447650",
    "end": "1453140"
  },
  {
    "text": "effectively I have my endpoint derived from endpoint here I get in this persistent connection lifetime manager",
    "start": "1453140",
    "end": "1459260"
  },
  {
    "text": "thing all this API is very much in progress okay so what are these types",
    "start": "1459260",
    "end": "1464270"
  },
  {
    "text": "only exists in this sample right because we're literally building apps writing boilerplate and then deciding what",
    "start": "1464270",
    "end": "1470420"
  },
  {
    "text": "boilerplate we want to get rid of okay so there's a lot of stuff spread out all over the place but the concept of an endpoint is pretty solid that's going to",
    "start": "1470420",
    "end": "1476480"
  },
  {
    "text": "stick around all right we have this idea but thing called a format resolve this is the thing I will use to get the various to say when I want to",
    "start": "1476480",
    "end": "1483500"
  },
  {
    "text": "read a tee off the wire please plan the right format for that and then a logger so I can log stuff out when someone",
    "start": "1483500",
    "end": "1490010"
  },
  {
    "text": "connects to this end point I get a connection object I register it with the lifetime manager so I can track these",
    "start": "1490010",
    "end": "1496010"
  },
  {
    "text": "connections pretty simple then I await process requests and you can see this looks a lot like socket",
    "start": "1496010",
    "end": "1502190"
  },
  {
    "text": "programming you're basically just sit in a loop and you read stuff off the socket okay so if you ever done TCP socket",
    "start": "1502190",
    "end": "1507950"
  },
  {
    "text": "programming this is pretty similar except this is a think it's just a nice async/await read loop which makes it",
    "start": "1507950",
    "end": "1513530"
  },
  {
    "text": "much much nicer so now that I'm in here on ER a certain route certain connection reading requests I say get me the",
    "start": "1513530",
    "end": "1521060"
  },
  {
    "text": "formatter for the weather report please which is my c-sharp type that I created and passed in metadata from the",
    "start": "1521060",
    "end": "1526460"
  },
  {
    "text": "connection so we could look up the right formatter and then sit in the while loop and say please read me off the current",
    "start": "1526460",
    "end": "1532100"
  },
  {
    "text": "connection a message which is a new low-level primitive it's what you get",
    "start": "1532100",
    "end": "1537350"
  },
  {
    "text": "off connections as a message I have a buffer on it and then I copy from that buffer into a memory stream so I can",
    "start": "1537350",
    "end": "1543320"
  },
  {
    "text": "pass that memory stream through to the formatter and have the formatter read the bytes in that stream and turn them",
    "start": "1543320",
    "end": "1548630"
  },
  {
    "text": "into what I asked for which was a weather report so this is a little clunky right now I'd like this to really",
    "start": "1548630",
    "end": "1554330"
  },
  {
    "text": "sort of be like two lines of code rather than the four or five it is now but you get the idea and then finally once I've",
    "start": "1554330",
    "end": "1560060"
  },
  {
    "text": "read that I can turn around and say to my lifetime manager please send this weather report to all the other clients to a listening right now okay pretty",
    "start": "1560060",
    "end": "1566930"
  },
  {
    "text": "straightforward really really simple to do none of the nasty pausing stuff is in here this is just the basic control flow",
    "start": "1566930",
    "end": "1573140"
  },
  {
    "text": "it's kind of like you can your controller right in MVC all the other stuff was like dealing with the input",
    "start": "1573140",
    "end": "1578510"
  },
  {
    "text": "and output like that would usually be a model binder or a formatter in MVC world very similar here so my formatter for my",
    "start": "1578510",
    "end": "1586790"
  },
  {
    "text": "weather report is here somewhere up here protobuf weather stream so here's the one that speaks protobufs so I have a",
    "start": "1586790",
    "end": "1593390"
  },
  {
    "text": "formatter for weather report per protocols I've got one for Jason one for protobufs and one for my custom pipe",
    "start": "1593390",
    "end": "1599900"
  },
  {
    "text": "delimited ones so here it is here here's the custom one I wrote for pipe it's kind of like a serializer if you've ever",
    "start": "1599900",
    "end": "1605390"
  },
  {
    "text": "written a serializer in.net for a specific type and you serialize to xml and or something else or you see all",
    "start": "1605390",
    "end": "1610460"
  },
  {
    "text": "those two jason or something else because these are all being sort of coordinate by a single single thing called the",
    "start": "1610460",
    "end": "1615560"
  },
  {
    "text": "format a resolver so yeah that's kind of cool poppin all right so I know you've got some demos now fellow hack stuff is",
    "start": "1615560",
    "end": "1621590"
  },
  {
    "text": "probably going to work a lot where kind of devil if we switch over to the other machine please",
    "start": "1621590",
    "end": "1627280"
  },
  {
    "text": "alright let's kind of go the fate of very nice very nice so some very professional so I thought",
    "start": "1627310",
    "end": "1633320"
  },
  {
    "text": "was your Mac I feel relaxed as a Mac I realized fades in when everything else so this is a sigma solution on its neck",
    "start": "1633320",
    "end": "1639560"
  },
  {
    "text": "or as we speak right now is very experimental there's tons of stuff on here that doesn't work in fact you",
    "start": "1639560",
    "end": "1644750"
  },
  {
    "text": "coined it in about three hours ago wasn't it completely broken it's still kind of cool to be broken by smoke and",
    "start": "1644750",
    "end": "1650120"
  },
  {
    "text": "mirrors you can't tell so I have a sample here called it's Apple it has a very basic setup for a socket",
    "start": "1650120",
    "end": "1656120"
  },
  {
    "text": "wrench Sigler let's look at the start pops this the something so I did so",
    "start": "1656120",
    "end": "1661340"
  },
  {
    "text": "ignore these for now so kind of ignore this I had socket which is like the the services required for for its neck or",
    "start": "1661340",
    "end": "1668870"
  },
  {
    "text": "socket I add signal error and I can say I want to add these for matters which are called implication ad absurdum",
    "start": "1668870",
    "end": "1674150"
  },
  {
    "text": "reasons but they kind of still in very much in flight ignores this kind of the stuff is just a lot of things that can",
    "start": "1674150",
    "end": "1680900"
  },
  {
    "text": "see ads and stuff I can talk heard above our taught lines and these are kind of a very Sigma specific for matter for the",
    "start": "1680900",
    "end": "1687320"
  },
  {
    "text": "invocations so I guess this is kind of method name this is the result so you",
    "start": "1687320",
    "end": "1693200"
  },
  {
    "text": "have a looked at the traffic in a signal or app like you look at the Jason has like a knob a method a for M method a",
    "start": "1693200",
    "end": "1699170"
  },
  {
    "text": "for I right Lang right kind of same thing but are different or much yeah yeah so there's an advisory that's that",
    "start": "1699170",
    "end": "1706730"
  },
  {
    "text": "is comes it out for scale up later I will show as a bunch of stuff out of that services I've not for now and",
    "start": "1706730",
    "end": "1713180"
  },
  {
    "text": "configure there's a new app that you signaler which takes roads and now you're mapping individual hugs to individually um you",
    "start": "1713180",
    "end": "1720290"
  },
  {
    "text": "have actual route it's a route builder yes nice so we actually use routing to map and individual hubs two endpoints",
    "start": "1720290",
    "end": "1726590"
  },
  {
    "text": "versus the old model where you had a slash house by default that was there for all all hugs I'm a big change from",
    "start": "1726590",
    "end": "1732770"
  },
  {
    "text": "before the lower level API is you sockets and you still map and points with you you re still map the URL with",
    "start": "1732770",
    "end": "1739310"
  },
  {
    "text": "the amount employees are hubs the wave map hubs works is map hub actually calls map endpoint and it mapped the hub",
    "start": "1739310",
    "end": "1745910"
  },
  {
    "text": "endpoint so every single help you get to and point it's kind of a nice model for composing this kind of system let's run",
    "start": "1745910",
    "end": "1753290"
  },
  {
    "text": "a sample and see what it does wearing you think cattle directly and I think I have luck and turned on because",
    "start": "1753290",
    "end": "1759470"
  },
  {
    "text": "logging is awesome let's see there's a messaging a sample",
    "start": "1759470",
    "end": "1764840"
  },
  {
    "text": "and a signal example next thing this has a raw endpoint that does kind of a chat but with raw endpoint and it has",
    "start": "1764840",
    "end": "1770690"
  },
  {
    "text": "different transports all I'll boot up all three service in event so you get to see on the screen know up today long",
    "start": "1770690",
    "end": "1778070"
  },
  {
    "text": "polling here and WebSocket it feels like",
    "start": "1778070",
    "end": "1784910"
  },
  {
    "text": "five years ago oh my god same demo memory see website if it's kind of broken oh it works now",
    "start": "1784910",
    "end": "1790220"
  },
  {
    "text": "perfect of good they say hi okay nothing but up oh let's talk this part",
    "start": "1790220",
    "end": "1797810"
  },
  {
    "text": "just refer tend if it works like this pretend everything is God daily super",
    "start": "1797810",
    "end": "1805850"
  },
  {
    "text": "brainless debug on stage nope there's some stuff I said open so exactly oh my",
    "start": "1805850",
    "end": "1813800"
  },
  {
    "text": "gosh is completely busted but just a  it so every else works it's kind of nice so",
    "start": "1813800",
    "end": "1820460"
  },
  {
    "text": "it's a it's a chat pretty basic example for hubs is the same thing that there's",
    "start": "1820460",
    "end": "1826550"
  },
  {
    "text": "a clock sample that just pumps octet connect I come to that OneNote let's skip the phones to chat for now chat is",
    "start": "1826550",
    "end": "1832310"
  },
  {
    "text": "working oh god that's a little button so it just works oh yeah wonderful my pockets works fine",
    "start": "1832310",
    "end": "1838790"
  },
  {
    "text": "I can do this open up a new URL hit transport long folding put these",
    "start": "1838790",
    "end": "1845720"
  },
  {
    "text": "side-by-side connect this side works do",
    "start": "1845720",
    "end": "1853400"
  },
  {
    "text": "one more do server-sent events connect",
    "start": "1853400",
    "end": "1858890"
  },
  {
    "text": "this zob warrior because i'll just like this little stuff it always works so it's a code look the same as before",
    "start": "1858890",
    "end": "1865250"
  },
  {
    "text": "little bit the code we look at a little bit different then maybe the endpoint code so tad bit different okay all right",
    "start": "1865250",
    "end": "1872180"
  },
  {
    "text": "let's start off the ten point so I have an endpoints folder here over the net with one endpoint commented endpoint and",
    "start": "1872180",
    "end": "1877640"
  },
  {
    "text": "what it does it has a connection list because I want to throw all connections I can do a loop and then broadcast for",
    "start": "1877640",
    "end": "1882840"
  },
  {
    "text": "each one in previous Sigma we had a bus as Damien was saying so broadcast really was like a publish to that bus and that",
    "start": "1882840",
    "end": "1889260"
  },
  {
    "text": "bus was pluggable so if you're if you want Redis it was a publisher editor if you're on a bus service bus in this",
    "start": "1889260",
    "end": "1895530"
  },
  {
    "text": "model we want to be because one bus up altogether so what we did was we made it so we made it feel more like a TPP so",
    "start": "1895530",
    "end": "1903060"
  },
  {
    "text": "when you joined so when a question guess get about to an endpoint you can score lift up connections and then just do a",
    "start": "1903060",
    "end": "1909270"
  },
  {
    "text": "for loop and call broadcast which one so the old signal was much more of a very high fabric lab system at its heart but",
    "start": "1909270",
    "end": "1915360"
  },
  {
    "text": "you you dealt with it like pub/sub this is much more akin to what we're really trying to go for originally but we never",
    "start": "1915360",
    "end": "1920670"
  },
  {
    "text": "did which was just it looks like I'm programming on sockets I don't know who's feeding me this locket I don't know if it's TCP or something else but",
    "start": "1920670",
    "end": "1926790"
  },
  {
    "text": "it's just a socket and so this is really getting us closer to that so in that world this is stateful like this connection",
    "start": "1926790",
    "end": "1932610"
  },
  {
    "text": "object this endpoint I have I'm going to get this connection per connection and I can put them away on the server in",
    "start": "1932610",
    "end": "1937740"
  },
  {
    "text": "memory accordingly and list and if I want to broadcast I just go and go through them now if you want to build a",
    "start": "1937740",
    "end": "1943650"
  },
  {
    "text": "pub sub system on top of that you can and we did that with hard hubs is actually based on pub sub and that's",
    "start": "1943650",
    "end": "1948870"
  },
  {
    "text": "what enables us to make it very easy now I plug in other things but at this layer you just get ecology Lister's or",
    "start": "1948870",
    "end": "1955020"
  },
  {
    "text": "something you can or you don't have to use if you don't want to you just have an endpoint you get a connection and you write a while loop and everything else",
    "start": "1955020",
    "end": "1961080"
  },
  {
    "text": "is up to you all the magic is in the transports underneath if it came in on WebSockets you don't know if it came in",
    "start": "1961080",
    "end": "1966390"
  },
  {
    "text": "a long polling you don't know we take care of all that the transport you just focus on writing your while loop by",
    "start": "1966390",
    "end": "1971850"
  },
  {
    "text": "typically so the reason that sticky it's important is because since your stats all you have to be on the same server",
    "start": "1971850",
    "end": "1976860"
  },
  {
    "text": "for all connections this list if it was on one server and then you fit servers you wouldn't get the same list of",
    "start": "1976860",
    "end": "1981990"
  },
  {
    "text": "Corrections oh no Colin so it's like socket programming exactly so let's put a breakpoint see you how this whole thing",
    "start": "1981990",
    "end": "1987780"
  },
  {
    "text": "works hit f5",
    "start": "1987780",
    "end": "1992120"
  },
  {
    "text": "let's do this much work just in a bit",
    "start": "1993860",
    "end": "2000640"
  },
  {
    "text": "loading very slowly then it connects",
    "start": "2000789",
    "end": "2007059"
  },
  {
    "text": "today perfect so whenever - comes in the",
    "start": "2007059",
    "end": "2012200"
  },
  {
    "text": "the hosting layer tells the transport hey tension joined a crit section called",
    "start": "2012200",
    "end": "2018049"
  },
  {
    "text": "unconnected async and this code is supposed to run for as long as a question is life so when it stops",
    "start": "2018049",
    "end": "2024440"
  },
  {
    "text": "returns it means that the connection is dead so in it so might end point I throw this term connections for the endpoint",
    "start": "2024440",
    "end": "2030080"
  },
  {
    "text": "itself and then it broadcast to all connections that sometimes joined all this does is it right horrible ugly code",
    "start": "2030080",
    "end": "2037009"
  },
  {
    "text": "ignore that buffer stuff for no it is a for loop and does write AT&T mention the",
    "start": "2037009",
    "end": "2043549"
  },
  {
    "text": "underlying API that we're using is a new API called channels it's in core FX lab if you've never heard of corpus lab it's",
    "start": "2043549",
    "end": "2049190"
  },
  {
    "text": "kind of a playground for experimental features in.net we actually some of them are becoming very much less experiment tomorrow yeah",
    "start": "2049190",
    "end": "2055398"
  },
  {
    "text": "some are becoming real somewhere somewhere just there for fun so core FX lab done it quickest love",
    "start": "2055399",
    "end": "2062059"
  },
  {
    "text": "there's a bunch of things on here they're kind of cool I'm the one to think they're on here is a system threading tasks channels and this is",
    "start": "2062059",
    "end": "2068690"
  },
  {
    "text": "what we build Sigma on top of well focus on top hooks and what it basically is if anyone use goes channels go has channels",
    "start": "2068690",
    "end": "2075440"
  },
  {
    "text": "they don't any when you go yeah right yeah she knows I'm from a bicycle on that I mean just think about it as a",
    "start": "2075440",
    "end": "2080829"
  },
  {
    "text": "formalized way to do a publish and consume a model so you get a readable",
    "start": "2080829",
    "end": "2086148"
  },
  {
    "text": "channel on a writable channel and once it does bright one one still is read and you can push out about objects back and",
    "start": "2086149",
    "end": "2092839"
  },
  {
    "text": "forth between the booster and consumer so the way it works and in socket is the",
    "start": "2092839",
    "end": "2098450"
  },
  {
    "text": "endpoint is kind of the middleman if you can actually your place your so I can kind of show that um I think into your",
    "start": "2098450",
    "end": "2104359"
  },
  {
    "text": "slide right now keep it up as we flip back to the other screen please mister tech no no no",
    "start": "2104359",
    "end": "2115299"
  },
  {
    "text": "almost okay no okay sorry that's that's fine so the",
    "start": "2118630",
    "end": "2124820"
  },
  {
    "text": "endpoint itself has to transport and the transport hazardous all right so the",
    "start": "2124820",
    "end": "2129830"
  },
  {
    "text": "endpoints have a transport and the transports have the endpoints a channel so you have so each each side has one",
    "start": "2129830",
    "end": "2137390"
  },
  {
    "text": "side of the others so the transport is reading from the application and right into the actual socket and the applications in the transport are into",
    "start": "2137390",
    "end": "2143750"
  },
  {
    "text": "the actual application so foot back light by the machine that place thank you so when you do a write you do transport",
    "start": "2143750",
    "end": "2152180"
  },
  {
    "text": "and the different way to consume the actual data you can do writing read a sink right I think after you throw if if",
    "start": "2152180",
    "end": "2158180"
  },
  {
    "text": "the connection is gone so so to avoid that I did a away wait to write a string and then try right",
    "start": "2158180",
    "end": "2163400"
  },
  {
    "text": "this pattern just like you not throw exceptions up for channel closes so this code just says I'm going to loop over",
    "start": "2163400",
    "end": "2169640"
  },
  {
    "text": "every connection and then try to write each one as it comes by does that right",
    "start": "2169640",
    "end": "2174890"
  },
  {
    "text": "click succeeds it just breaks up break into the link keeps going it's a very simple loop if I send data hey it does",
    "start": "2174890",
    "end": "2186140"
  },
  {
    "text": "wait for read yield I get the message back from the channel I put in the you",
    "start": "2186140",
    "end": "2191510"
  },
  {
    "text": "think is disposable and I broadcast so it's very simple pattern we remove the connection which group when it goes away",
    "start": "2191510",
    "end": "2198460"
  },
  {
    "text": "when the connection itself dies select I",
    "start": "2198460",
    "end": "2203600"
  },
  {
    "text": "close this brother if s is a hat out by",
    "start": "2203600",
    "end": "2211640"
  },
  {
    "text": "design simplicity supports what kind of crash the whole thing unwinds and it's",
    "start": "2211640",
    "end": "2218690"
  },
  {
    "text": "cleaned up normally that's a very simple and point obvious showed on this end",
    "start": "2218690",
    "end": "2223730"
  },
  {
    "text": "point code works for any transport so if I were to make the TTB transport or the WebSocket is long polling whatever",
    "start": "2223730",
    "end": "2230180"
  },
  {
    "text": "transport all the same code where all things it's a transfers job to take the actual data from the underlying network",
    "start": "2230180",
    "end": "2236570"
  },
  {
    "text": "and socket enter into a message object that's passed on to the actual arm transfer connection so to show you some",
    "start": "2236570",
    "end": "2242510"
  },
  {
    "text": "code Acton Sigler itself may be the most simple code shows like server sent events",
    "start": "2242510",
    "end": "2248210"
  },
  {
    "text": "some sockets if you look at the dispatcher and just put it all they",
    "start": "2248210",
    "end": "2254210"
  },
  {
    "text": "create Lisa doesn't look too hard when data comes in from the from the TV",
    "start": "2254210",
    "end": "2260510"
  },
  {
    "text": "connection for a slash send we find the connection society and we just call wait",
    "start": "2260510",
    "end": "2266690"
  },
  {
    "text": "to write a link so remember I told you that the the the transfer itself has the application so so the transport says I'm",
    "start": "2266690",
    "end": "2273620"
  },
  {
    "text": "going to wait to write on the application and then call try write on the applications channel so that will",
    "start": "2273620",
    "end": "2279710"
  },
  {
    "text": "yield the the reading on the other side of the Army's got two sides I'm the transport you're the application",
    "start": "2279710",
    "end": "2285440"
  },
  {
    "text": "I call write someone you call read someone gave me a message ship you've called read and then I call write on you",
    "start": "2285440",
    "end": "2291620"
  },
  {
    "text": "giving your read releases release get nothing get better and I go back to listening yep things over here sample",
    "start": "2291620",
    "end": "2297530"
  },
  {
    "text": "rate and the other way around if we reverse it if you look at the service internet chance for it pretty simple",
    "start": "2297530",
    "end": "2303520"
  },
  {
    "text": "there's a wall of all appear as it says wait to read from the application and whenever I read data I just end it over",
    "start": "2303520",
    "end": "2309560"
  },
  {
    "text": "the wall once in socket burg all my up forever here we are loop",
    "start": "2309560",
    "end": "2315170"
  },
  {
    "text": "primitives that just as luke loop members I wigs it or anything you just have to throw or break and that sounds awful it's while true and like",
    "start": "2315170",
    "end": "2323000"
  },
  {
    "text": "everywhere in this code like I guess someone's while away that's not too bad a lot of it yeah well long us still lot",
    "start": "2323000",
    "end": "2328430"
  },
  {
    "text": "still luxurious basically Walter yeah lovers but that's very simple if you",
    "start": "2328430",
    "end": "2333680"
  },
  {
    "text": "look at the code in signalized that we had to write before async/await right and before we had this quite a",
    "start": "2333680",
    "end": "2340400"
  },
  {
    "text": "socket layer it was horrific like we had jumps we had go to I'm not kidding you it was actually the easiest way to do",
    "start": "2340400",
    "end": "2346310"
  },
  {
    "text": "when they think about the got is you write the go-to like I'm not listed pocket alright I go to Bob Hazen is",
    "start": "2346310",
    "end": "2352220"
  },
  {
    "text": "awesome it was the only way to make that code maintain a ball to the fact and it was very fast because when I stack frames it was always in the same stack",
    "start": "2352220",
    "end": "2358460"
  },
  {
    "text": "frame so all right so let's show something a little bit different let's show TCP transport so I have this end",
    "start": "2358460",
    "end": "2364160"
  },
  {
    "text": "point message that point CMM point I'll be happen before I'm going to run again the server and if you look closely at",
    "start": "2364160",
    "end": "2371150"
  },
  {
    "text": "the logs for those of you who saw it this thing right here starting PPP",
    "start": "2371150",
    "end": "2378180"
  },
  {
    "text": "you see it because this is TCP service running in the application that starts on fly closer than two so this new",
    "start": "2378180",
    "end": "2385170"
  },
  {
    "text": "feature internet core isn't I mean in Internet core 2.0 that isn't really out in the future in the future it doesn't",
    "start": "2385170",
    "end": "2390299"
  },
  {
    "text": "example come out called a hosted service so trying to refactor it's in a core to be more non HTTP based model so you can",
    "start": "2390299",
    "end": "2397920"
  },
  {
    "text": "host you know your other thing pvp endpoints here so especially a server host yeah server",
    "start": "2397920",
    "end": "2403170"
  },
  {
    "text": "host a generic server host a second of any pain points any server it could be background code it clock round code yep another socket can be anything because",
    "start": "2403170",
    "end": "2409319"
  },
  {
    "text": "part of that we added a new API called I hosted service to look at my chart class if you add one of these things you get",
    "start": "2409319",
    "end": "2416400"
  },
  {
    "text": "called I never start but whenever we boot the application we call start never we care don't you call stop so it's very",
    "start": "2416400",
    "end": "2421410"
  },
  {
    "text": "simple interface like it's nothing it's the start stop what if you do is you have a place to",
    "start": "2421410",
    "end": "2427529"
  },
  {
    "text": "write code no that kind of runs for non HDB things so background things like for",
    "start": "2427529",
    "end": "2432809"
  },
  {
    "text": "example this clock example i inject an eye hub context which is very similar a few decimal before we can get the Sigler",
    "start": "2432809",
    "end": "2439369"
  },
  {
    "text": "quiet aside in the hub itself it's kind of like a singleton that subscribes to the last time foundation but gets",
    "start": "2439369",
    "end": "2446520"
  },
  {
    "text": "resolved immediately also right right yeah it's a very stable thing that traffic connections so you can actually",
    "start": "2446520",
    "end": "2451619"
  },
  {
    "text": "broadcast them on demand for the clock service just it's Michael to service itself I would never start hopping I",
    "start": "2451619",
    "end": "2457980"
  },
  {
    "text": "make a timer and on tick I just broadcast to the all client set or listening and I'll stop I dispose",
    "start": "2457980",
    "end": "2463289"
  },
  {
    "text": "so when you have di so you just yeah I can eject all context that you want it very clean waiting to get services and",
    "start": "2463289",
    "end": "2469710"
  },
  {
    "text": "do an on HTTP thing in the same application space on top of that I just built this like five minutes ago this TV",
    "start": "2469710",
    "end": "2476549"
  },
  {
    "text": "people to serve it like very tcp car service tcp this is the one we're going to ship it says adrian let's see is",
    "start": "2476549",
    "end": "2482490"
  },
  {
    "text": "awesome it's beautiful it's pushing code all right so what this thing does it just takes an endpoint type which is any",
    "start": "2482490",
    "end": "2488670"
  },
  {
    "text": "endpoint type in your system and it resolves it in the container first thing it does wanna start it creates a new age",
    "start": "2488670",
    "end": "2494789"
  },
  {
    "text": "and you tcp listener and it runs this loop but it says get connections whenever that happens run don't do this",
    "start": "2494789",
    "end": "2501299"
  },
  {
    "text": "very often the funeral you're doing as off awesome whenever a client comes in",
    "start": "2501299",
    "end": "2507569"
  },
  {
    "text": "it creates two connections one for the transport off the application simply speak up before then it makes a new connection object",
    "start": "2507569",
    "end": "2513810"
  },
  {
    "text": "cause the end point the end point on that today sink get the network stream",
    "start": "2513810",
    "end": "2518850"
  },
  {
    "text": "and then starts to task that's say I'm going to continually recent reefing the application Emmerich's to transport and",
    "start": "2518850",
    "end": "2524280"
  },
  {
    "text": "vice versa so this is effectively it's full duplex i/o the device I can be reading and writing at the same time which is why there's always like to see",
    "start": "2524280",
    "end": "2530580"
  },
  {
    "text": "two things from the same time okay and then basically this thing is trying to shut down gracefully in case anything",
    "start": "2530580",
    "end": "2536010"
  },
  {
    "text": "dies so if you if the read died is kill the entire thing at the right let's cut the entire thing at the app by first",
    "start": "2536010",
    "end": "2541290"
  },
  {
    "text": "kill the entire thing so very complex feeling yeah yeah that's risky",
    "start": "2541290",
    "end": "2547920"
  },
  {
    "text": "language and then the loot looks like this I have right to transport it if we take a network stream reads by top of it",
    "start": "2547920",
    "end": "2553740"
  },
  {
    "text": "1k of bytes and then it says I'm going to call transfer dot right and this will this will call the same code in the",
    "start": "2553740",
    "end": "2560010"
  },
  {
    "text": "actual endpoint saying I got there from some other transfer way so why should be able to do now is connect from WebSocket",
    "start": "2560010",
    "end": "2567600"
  },
  {
    "text": "just work it it's working out perfect I touch it meltem putty and then I'll launch this",
    "start": "2567600",
    "end": "2575100"
  },
  {
    "text": "thing so now you've connected to a socket suck it okay okay okay here this work oh wow",
    "start": "2575100",
    "end": "2583650"
  },
  {
    "text": "so it's better going over the socket and it should print out yeah there you go  server HTTP hosted service three",
    "start": "2583650",
    "end": "2590430"
  },
  {
    "text": "bytes came in from the connection so again it's it's a single endpoint single point you wrote one import my same update in",
    "start": "2590430",
    "end": "2596880"
  },
  {
    "text": "middleware and you'll maps it to TCP yep so that's one place where you write the code for the endpoint okay it's the same",
    "start": "2596880",
    "end": "2603420"
  },
  {
    "text": "instance so the state is the same usually the same instance of the class yeah so the foil is going over at the TCP connection and the one from the",
    "start": "2603420",
    "end": "2609420"
  },
  {
    "text": "browser and but very undoing a broad cache so unified API same model different different um so this is part",
    "start": "2609420",
    "end": "2616830"
  },
  {
    "text": "of a bigger effort that was going on is in a net core sort of to and beyond that we want to take a lot of the one of the",
    "start": "2616830",
    "end": "2622110"
  },
  {
    "text": "primitives and ideas that we built for a spinet core logging configuration hosting di pipelines for middleware",
    "start": "2622110",
    "end": "2628500"
  },
  {
    "text": "configuration all the patterns options building blah blah blah we want to take all those things and wrap it up and use",
    "start": "2628500",
    "end": "2634980"
  },
  {
    "text": "it outside of HTTP because we don't always speak HTTP right especially in the world of soccer and containers and",
    "start": "2634980",
    "end": "2640380"
  },
  {
    "text": "IOT and Microsoft is at and pub/sub and all that type of stuff we want to take all that nice goodness that we did",
    "start": "2640380",
    "end": "2645720"
  },
  {
    "text": "loading cloud applications and spread it out to other things and this is the very very early beginnings of this very very",
    "start": "2645720",
    "end": "2652680"
  },
  {
    "text": "early but you can see the potential here so that was kind of cool okay so hub hub hubs so hubs are a",
    "start": "2652680",
    "end": "2660390"
  },
  {
    "text": "little bit different but just enough to anybody free to annoy you differently right but they're pretty slow for you to",
    "start": "2660390",
    "end": "2665970"
  },
  {
    "text": "be we kind of got over dynamic it was kind of cool kind of gimmicky and kind",
    "start": "2665970",
    "end": "2673020"
  },
  {
    "text": "of nice to look at but hard to look at hard to debug hard to get a sense for so you have this wonderful method called",
    "start": "2673020",
    "end": "2678720"
  },
  {
    "text": "invoke I think that in the string it's not trying to at all but you can't get a job then we plan to have support for a",
    "start": "2678720",
    "end": "2685530"
  },
  {
    "text": "hub of T do we not have that yet no like okay we're going to have that yeah somebody fault today hub is help give",
    "start": "2685530",
    "end": "2693270"
  },
  {
    "text": "you a client object and plan to all clients out-group client sought client clients whatever we have from before everything's all that stuff that group",
    "start": "2693270",
    "end": "2699420"
  },
  {
    "text": "oh good intellisense that's a bug you know this is a bug all because of waits",
    "start": "2699420",
    "end": "2705000"
  },
  {
    "text": "on the next line yeah yeah clients thought so all is client there's group",
    "start": "2705000",
    "end": "2710700"
  },
  {
    "text": "remember to move the code about when you finish it's fine right be a fix up for",
    "start": "2710700",
    "end": "2716609"
  },
  {
    "text": "that move code one-liner bonus and this property is typed to whatever the T is",
    "start": "2716609",
    "end": "2722849"
  },
  {
    "text": "here right all right so if I do have dynamic in the future you can get your",
    "start": "2722849",
    "end": "2728460"
  },
  {
    "text": "old code right we actually had that in old signal alright we added support for T of get my own hub yeah so we just have",
    "start": "2728460",
    "end": "2733920"
  },
  {
    "text": "my own use that by the way in the or signaler you can normally talk you can declare an interface public interface my",
    "start": "2733920",
    "end": "2740099"
  },
  {
    "text": "client my client stuff it could be hello",
    "start": "2740099",
    "end": "2747109"
  },
  {
    "text": "and you can see a hub of I client stuff anyone have used that in the old signal",
    "start": "2747109",
    "end": "2753330"
  },
  {
    "text": "signal or - yeah so that will be the basis of the new signal are instead of dynamic being the default it'll be the",
    "start": "2753330",
    "end": "2759630"
  },
  {
    "text": "string based in change one Wizards fault they'll only hit the ching this one prefer dynamic I mean so will support",
    "start": "2759630",
    "end": "2766589"
  },
  {
    "text": "dynamic you can pass into amicus of T so you'll always be able to get back to that so if you're porting an app you don't want to change it you'll just be",
    "start": "2766589",
    "end": "2772710"
  },
  {
    "text": "able to derive from harbor dynamic instead of yeah yep put your code is do have a dynamic and I and be happy that",
    "start": "2772710",
    "end": "2778050"
  },
  {
    "text": "over time you can get Bugman right another close um okay so we",
    "start": "2778050",
    "end": "2784250"
  },
  {
    "text": "call things they think no and in Sigma everyone we had to Virgin to calling things a thing I don't know why it would",
    "start": "2784250",
    "end": "2789319"
  },
  {
    "text": "be native but we were kind of hardcore but I really the whole thing's a saint we can't call anything no we do because everyone knows does so you know whatever",
    "start": "2789319",
    "end": "2796130"
  },
  {
    "text": "invocation is what's called skin api so look pretty similar so on connected all",
    "start": "2796130",
    "end": "2801710"
  },
  {
    "text": "in both clients are all that invoke a singly because of broadcast his same idea of blah left blood joins send sent",
    "start": "2801710",
    "end": "2809720"
  },
  {
    "text": "a groove join group different those methods are just ones on your hub right but the clients are going to call those",
    "start": "2809720",
    "end": "2815059"
  },
  {
    "text": "ones right so that's the other ones are overrides yeah exactly so run this again",
    "start": "2815059",
    "end": "2823750"
  },
  {
    "text": "our bill uses gulp and it destroys the performance with the bill this one does basically should make a",
    "start": "2825400",
    "end": "2831440"
  },
  {
    "text": "increment look at this thing we should make it incremental the worst thing ever sender use gulp how do you do don't hook",
    "start": "2831440",
    "end": "2839240"
  },
  {
    "text": "any name is bill look at this thing it's like 17 seconds 17 seconds to Dooley nothing good node looks Weiss",
    "start": "2839240",
    "end": "2851210"
  },
  {
    "text": "I'm time to think it's not gulping it's just the way it's configured in the date build scripts are we holding our own we're probably holding it wrong okay all",
    "start": "2851210",
    "end": "2859460"
  },
  {
    "text": "right there at the hub I took a breakpoint shouldn't a nice lie if you want to say anything this is a great",
    "start": "2859460",
    "end": "2866960"
  },
  {
    "text": "point okay protip the last that the",
    "start": "2866960",
    "end": "2872809"
  },
  {
    "text": "first one is always the correct one dozen matter what is it's the first one in the list if you have more than one it's always the first one I best right",
    "start": "2872809",
    "end": "2879980"
  },
  {
    "text": "look at it always is I always it I didn't believe you do that every time rather than trying to look up the",
    "start": "2879980",
    "end": "2885019"
  },
  {
    "text": "process ID and stuff I just tweak the first one it's probably is right so I can trust me alright so hit f5 the client went away",
    "start": "2885019",
    "end": "2892599"
  },
  {
    "text": "connection left connect somebody joined very basic I'll",
    "start": "2892599",
    "end": "2901039"
  },
  {
    "text": "do a broadcast everyone reaches me again apply at all I will send to a group this",
    "start": "2901039",
    "end": "2908869"
  },
  {
    "text": "is the worse like ey ever it's the same as the really bad you why we wrote for the first they still haven't we did I copied the",
    "start": "2908869",
    "end": "2914750"
  },
  {
    "text": "code literally took the phone well this is the message and I think this is the group name so I shouldn't get anything",
    "start": "2914750",
    "end": "2923060"
  },
  {
    "text": "now send the group wonderful on to join a group I say group I click the joint C",
    "start": "2923060",
    "end": "2931130"
  },
  {
    "text": "group button look you guys pretty you'd join group you haven't got any better doing you",
    "start": "2931130",
    "end": "2936320"
  },
  {
    "text": "eyes in five years I know yeah looks like now I'm in the group so it works it's pretty cool so signor hasn't",
    "start": "2936320",
    "end": "2946220"
  },
  {
    "text": "changed out that much a few few tweaks groups got a group remove one big change we made you can only ask the group",
    "start": "2946220",
    "end": "2953180"
  },
  {
    "text": "inside the hub itself groups are super hard so yeah so it's one of those areas",
    "start": "2953180",
    "end": "2958880"
  },
  {
    "text": "we have a big bug farm in the old stuff and yeah the biggest issues we still have is in the old world groups was a think because when you add it to a",
    "start": "2958880",
    "end": "2965960"
  },
  {
    "text": "group or remove from a group it sent a message through the bus so that you could add as a client that was on a",
    "start": "2965960",
    "end": "2971270"
  },
  {
    "text": "different server to a group or remove them from a group but that required that they get a message and send an ACK and",
    "start": "2971270",
    "end": "2976640"
  },
  {
    "text": "that meant that a lot of people would like a wait groups like you're doing here actually and it would hang because",
    "start": "2976640",
    "end": "2983600"
  },
  {
    "text": "you want a wet group by add that and then sent it then it seems as if maybe rear-ended roses they get that message right if you have a two servers and a",
    "start": "2983600",
    "end": "2989600"
  },
  {
    "text": "client over here client over here and you groups that add on that client over there and the server goes down when you",
    "start": "2989600",
    "end": "2995090"
  },
  {
    "text": "I wait the way and you await the group dies what you never get like you'll get every 30-second timeout but who time",
    "start": "2995090",
    "end": "3000610"
  },
  {
    "text": "though and it was like a bug farm so there you go yeah I mean even what just",
    "start": "3000610",
    "end": "3006340"
  },
  {
    "text": "wasn't what people expected yeah thanks so we got rid of that for now we'll see what people will see how people react to",
    "start": "3006340",
    "end": "3012760"
  },
  {
    "text": "it but react nothing they don't care good we're fine alright so other sample",
    "start": "3012760",
    "end": "3019930"
  },
  {
    "text": "I plot service you get stops before it does a tick every second and principal",
    "start": "3019930",
    "end": "3024970"
  },
  {
    "text": "ticks so same application background service here's a clock and differently",
    "start": "3024970",
    "end": "3034720"
  },
  {
    "text": "long folding well I'll point it because why not goes why not",
    "start": "3034720",
    "end": "3040680"
  },
  {
    "text": "now is it real hub we're still in hub so the hub okay looking back on service the clock",
    "start": "3041320",
    "end": "3047110"
  },
  {
    "text": "service is broadcasting every second the tick's to all the clients in sync yeah that's pretty basic in the old",
    "start": "3047110",
    "end": "3055090"
  },
  {
    "text": "world to do that you had to call a static API yep Global horse that gets updated with the horse is dead",
    "start": "3055090",
    "end": "3061870"
  },
  {
    "text": "we have Janus of using a 2d limo struggling yeah so now you're just basically here statics so if you statics",
    "start": "3061870",
    "end": "3068260"
  },
  {
    "text": "you're not going to like us anymore we do Gotham you can't test seaguar don't",
    "start": "3068260",
    "end": "3074110"
  },
  {
    "text": "need statics anymore in HMA yeah we're so it's fine all right so we should be to each other we got scale out to create I'll scale oh",
    "start": "3074110",
    "end": "3080230"
  },
  {
    "text": "ok the imperfect lane demo to try if I ready let's get ready your arm so I'm",
    "start": "3080230",
    "end": "3087100"
  },
  {
    "text": "going to do this magic line anyone use Redis today with Sigma so scale that",
    "start": "3087100",
    "end": "3093130"
  },
  {
    "text": "just like mine where who ad already we need something else so scale out the signal Siegel server thing whatsoever yep service bus you know no one okay",
    "start": "3093130",
    "end": "3102610"
  },
  {
    "text": "there's less key treat everyone else isn't scaling out that I've this one one server doesn't you signal others to you",
    "start": "3102610",
    "end": "3107860"
  },
  {
    "text": "to take a nap okay cool okay let's see what I can do so Redis",
    "start": "3107860",
    "end": "3114930"
  },
  {
    "text": "via chocolaty is the best thing ever reddish server",
    "start": "3114930",
    "end": "3119950"
  },
  {
    "text": "front of server Redis CLI let's monitor",
    "start": "3119950",
    "end": "3125010"
  },
  {
    "text": "what's happening launch the application you're running too late put this up or",
    "start": "3125010",
    "end": "3135610"
  },
  {
    "text": "off my fingers",
    "start": "3135610",
    "end": "3138240"
  },
  {
    "text": "building go you could have commented",
    "start": "3140760",
    "end": "3148570"
  },
  {
    "text": "that stuff out for the purposes of the demo by the way we use typescript which is beautiful it is view is wonderful",
    "start": "3148570",
    "end": "3154870"
  },
  {
    "text": "yeah they think away is like the best thing who's using tip you're doing client-side color he's not even tax rate yet but thinks they probably should at",
    "start": "3154870",
    "end": "3161620"
  },
  {
    "text": "some point okay okay you really like you need to be assured I was a ionically high high tech sector and then I",
    "start": "3161620",
    "end": "3167140"
  },
  {
    "text": "converted I thought I was lying now I am a full convert alright so let's look at",
    "start": "3167140",
    "end": "3172840"
  },
  {
    "text": "the monitor because that shows actually what happened was happening oh the clock the clock clock is destroying the the",
    "start": "3172840",
    "end": "3178990"
  },
  {
    "text": "money I won't win zoom and you could turn it off let me cook clock play it off and reboot through my link up run",
    "start": "3178990",
    "end": "3185350"
  },
  {
    "text": "again",
    "start": "3185350",
    "end": "3187590"
  },
  {
    "text": "dead that air dead time typescript yeah",
    "start": "3196289",
    "end": "3203559"
  },
  {
    "text": "very nice they sink a wave yeah oh no I",
    "start": "3203559",
    "end": "3208809"
  },
  {
    "text": "didn't use it cuz it worked somewhere else yeah I'd use it it's in the client it's in the clients all over the client",
    "start": "3208809",
    "end": "3214150"
  },
  {
    "text": "so we use it sink away it like everywhere if I could find it somewhere there's anything start oh my gosh",
    "start": "3214150",
    "end": "3222180"
  },
  {
    "text": "prepared okay over finished whatever you are ready there's a bunch of sleep stuff happening here we are again",
    "start": "3222299",
    "end": "3229599"
  },
  {
    "text": "oh client what I own on here I see okay clock is dead perfect",
    "start": "3229599",
    "end": "3235089"
  },
  {
    "text": "good okay let's open up hubs connect so",
    "start": "3235089",
    "end": "3242619"
  },
  {
    "text": "quiet connects and we subscribe to inventors itself we subscribe to the",
    "start": "3242619",
    "end": "3247719"
  },
  {
    "text": "individual signals that for that specific connection so this is a big",
    "start": "3247719",
    "end": "3252759"
  },
  {
    "text": "difference from last time right so now the server has one connection to Rytas which is the same as last time but it",
    "start": "3252759",
    "end": "3258849"
  },
  {
    "text": "has multiple subscriptions we also to a dynamic write multiple subscriptions to writers to pub/sub which are dynamic",
    "start": "3258849",
    "end": "3264699"
  },
  {
    "text": "based on the connections that connect right in the signals that come up so like a hub is a signal to sockets",
    "start": "3264699",
    "end": "3269890"
  },
  {
    "text": "sampled a hub search at any groups any connection IDs they're all different signal area and we basically dynamically",
    "start": "3269890",
    "end": "3276309"
  },
  {
    "text": "create and destroy subscriptions to write us on the fly so that any given server is only subscribing to the",
    "start": "3276309",
    "end": "3282670"
  },
  {
    "text": "messages that it has clients that care about that's the big change from prior versions and this is kind of one",
    "start": "3282670",
    "end": "3288609"
  },
  {
    "text": "implementation we had one where we had a row discussion for every connection on",
    "start": "3288609",
    "end": "3293769"
  },
  {
    "text": "the right client which is kind of insane but of probably those it works apparently it is yeah yeah but this is",
    "start": "3293769",
    "end": "3299680"
  },
  {
    "text": "one connection multiple subscriptions you could do a connection per client right which we did do and it worked but",
    "start": "3299680",
    "end": "3305170"
  },
  {
    "text": "we think there's a little nicer so I said to the send broadcast la publish",
    "start": "3305170",
    "end": "3312249"
  },
  {
    "text": "curators if I disconnect the client sometimes very live in the actual things",
    "start": "3312249",
    "end": "3319059"
  },
  {
    "text": "and without works if you have a new abstraction in signal are called a bad name it's a it's a very name",
    "start": "3319059",
    "end": "3327250"
  },
  {
    "text": "we'll come up with a bed in the hub like my manager and what difference does give you full control of the entire lifecycle of the hub so anytime someone joins a",
    "start": "3327250",
    "end": "3333700"
  },
  {
    "text": "hub anytime someone's connection one hub anything someone import anything from a hub it goes through this abstraction basically when your Navi clients thought",
    "start": "3333700",
    "end": "3340720"
  },
  {
    "text": "anything maaan anything goes anything goes through this thing right and so you can just replace this thing and take",
    "start": "3340720",
    "end": "3346210"
  },
  {
    "text": "over complete control of how hubs send their messages this is how you do scale out now all right your buddy's getting",
    "start": "3346210",
    "end": "3351580"
  },
  {
    "text": "under the covers ready fault default annotation as an example has a list of connections and whenever everyone you",
    "start": "3351580",
    "end": "3357880"
  },
  {
    "text": "mean yep yep all my someone joins we just add to the list when someone removes you from the list for a broadcast we do a fourth overall",
    "start": "3357880",
    "end": "3363940"
  },
  {
    "text": "connections that are currently on on that server and we just send all sent each one of them yep that's kind of a",
    "start": "3363940",
    "end": "3370510"
  },
  {
    "text": "bit very basic implementation you could have one that use the old model where you had a bus so the whole idea is that",
    "start": "3370510",
    "end": "3376630"
  },
  {
    "text": "you can implement different kinds of strategies based on what you think is best for your hub documentation and this",
    "start": "3376630",
    "end": "3382510"
  },
  {
    "text": "is all the hub layer previously dis underpinned all the signal uh right but the sockets layers they said we're really trying to go for the computer",
    "start": "3382510",
    "end": "3388570"
  },
  {
    "text": "socket like abstraction which has transports that our pluggable but we're not opinionated about this type of thing like you would if you want to do this at",
    "start": "3388570",
    "end": "3395170"
  },
  {
    "text": "the endpoint layer you would just create another type take that into your endpoint and just funnel everything through yourself that's what the hub in",
    "start": "3395170",
    "end": "3400540"
  },
  {
    "text": "point the hub endpoint literally has one of these whatever one was registered creates it and funnels everything through it and does all the hub",
    "start": "3400540",
    "end": "3406390"
  },
  {
    "text": "discovery and that's basically the hub endpoint no you write a quads a skillet that was like sequel yeah so I'm at a",
    "start": "3406390",
    "end": "3411580"
  },
  {
    "text": "different scale at provider that used sequel server to store a table of active connections so you could actually query",
    "start": "3411580",
    "end": "3417520"
  },
  {
    "text": "the database and say just give me all the connections that there are right now give me their user names give me all the signals there that they're interested in",
    "start": "3417520",
    "end": "3423790"
  },
  {
    "text": "and then it connected to Raiders to actually do the sending of messages right so it was a stateful scale-out",
    "start": "3423790",
    "end": "3429040"
  },
  {
    "text": "system where state was in a persistent thing and all the messages went through writers so it's a super flexible now and",
    "start": "3429040",
    "end": "3434740"
  },
  {
    "text": "there's not a lot of code like great fault one is a couple hundred lines the reddest one is probably less than the quadratus is pretty simple simple",
    "start": "3434740",
    "end": "3440920"
  },
  {
    "text": "whereas the old message bar system was horribly complements in and went through",
    "start": "3440920",
    "end": "3446200"
  },
  {
    "text": "many many iterations to try and make it better and less bug pronestyl buggy and it still buggy I mean it works fine the",
    "start": "3446200",
    "end": "3452230"
  },
  {
    "text": "scale that one in particular was particularly complicated um okay a couple harmless 300 business Redis",
    "start": "3452230",
    "end": "3460310"
  },
  {
    "text": "there's a bunch of stuff an example of what groups do whenever you add join a group in Redis it adds it adds a",
    "start": "3460310",
    "end": "3467060"
  },
  {
    "text": "subscription to that connection in Redis so if we look at the thing here and I and I join a group actually join gufu",
    "start": "3467060",
    "end": "3476980"
  },
  {
    "text": "disconnect in the connect first join group subscribes to focus on salute at",
    "start": "3476980",
    "end": "3483860"
  },
  {
    "text": "gufu and I can broadcast to that group",
    "start": "3483860",
    "end": "3489190"
  },
  {
    "text": "since a group go through Redis for the publish so you have full control of the entire lifecycle of of every four up",
    "start": "3489190",
    "end": "3495470"
  },
  {
    "text": "connect disconnects sends receives the entire thing we want to enable you to taxi round-trip data to the client in",
    "start": "3495470",
    "end": "3502280"
  },
  {
    "text": "case you want to round-trip cursors if you want to apply implement you're on somebody for four reconnect and you can",
    "start": "3502280",
    "end": "3508340"
  },
  {
    "text": "round-trip you the last cursor you solve for messages you can actually get the entire cycle in the lifetime I could effectively get back to the old signal",
    "start": "3508340",
    "end": "3514250"
  },
  {
    "text": "our behavior yeah because we're going to add enough hooks for you to do that so I won't say reliable messaging but you",
    "start": "3514250",
    "end": "3520010"
  },
  {
    "text": "know commissioning and okay so you've got one last thing so there's a minute in the harbor general okay so 60 seconds",
    "start": "3520010",
    "end": "3526970"
  },
  {
    "text": "this dental makes no sense but let's just do anyway so remember I said that what we wanted to enable was the ability",
    "start": "3526970",
    "end": "3532070"
  },
  {
    "text": "to when you invoke a method in a client to get a result back alright which is",
    "start": "3532070",
    "end": "3537620"
  },
  {
    "text": "kind of crazy on the server I invoke some browser and I get a result back we",
    "start": "3537620",
    "end": "3543320"
  },
  {
    "text": "hacked something to go Fowler hacks on imagine you want to use an image leverage because there's no network and",
    "start": "3543320",
    "end": "3549490"
  },
  {
    "text": "you want to invoke JavaScript in a browser and send the image back okay",
    "start": "3549490",
    "end": "3556640"
  },
  {
    "text": "ridiculous but nothing is magic yeah why would you want to use that just use what's in the browser right so actually",
    "start": "3556640",
    "end": "3564710"
  },
  {
    "text": "when we first built signal I'll Phil hack the first happy right was how do I get stuff back from the client I'm trying to build a game and I want the",
    "start": "3564710",
    "end": "3570050"
  },
  {
    "text": "server to say ask a question from all the clients and just sit there and wait until the clients an earlier crazy and we thought he was crazy and that fly",
    "start": "3570050",
    "end": "3575960"
  },
  {
    "text": "these later we're building it so I finally so Phil is right Phil was right it's actually pretty cool let's put a",
    "start": "3575960",
    "end": "3581360"
  },
  {
    "text": "break my hair so game needs to two players let's client to clients the person",
    "start": "3581360",
    "end": "3587420"
  },
  {
    "text": "always let augment it perfect all right two brothers okay",
    "start": "3587420",
    "end": "3596390"
  },
  {
    "text": "game the civil button disabled their game here alright the button should become enabled",
    "start": "3596390",
    "end": "3602670"
  },
  {
    "text": "at some point so it's a breakpoint it's going to start the game so it invokes on all clients in the game so far the asked",
    "start": "3602670",
    "end": "3608760"
  },
  {
    "text": "question Matt asked and it doesn't win any say now when any of those half yield",
    "start": "3608760",
    "end": "3614340"
  },
  {
    "text": "summer one alright so the first little button when it's the game so since I'm doing myself this is going",
    "start": "3614340",
    "end": "3620640"
  },
  {
    "text": "to be super dumb but if I'm fast enough I can win so I click me and the task",
    "start": "3620640",
    "end": "3629940"
  },
  {
    "text": "videos but with that that actually a wit that away it was like waiting on the client to respond I think earnest but",
    "start": "3629940",
    "end": "3636540"
  },
  {
    "text": "it's actually sitting they waited she just way too small this is blow your mind this is a crazed way on the clan to respond so the client responded with a",
    "start": "3636540",
    "end": "3642330"
  },
  {
    "text": "click button and then it used to happen stuff from the server and we get a result back and somebody one connection",
    "start": "3642330",
    "end": "3648300"
  },
  {
    "text": "nine one seven congratulations you won even the price right and then if I hit a",
    "start": "3648300",
    "end": "3655500"
  },
  {
    "text": "five you win yeah the other one who's",
    "start": "3655500",
    "end": "3660830"
  },
  {
    "text": "alright that's it can we put back to this machine please just for the end here got one more slide",
    "start": "3660830",
    "end": "3666020"
  },
  {
    "text": "alright so the timeline for this is as you can probably tell this is in development right now we are hope to",
    "start": "3666020",
    "end": "3672750"
  },
  {
    "text": "preview this about mid this year and I with a goal to release it by the end of",
    "start": "3672750",
    "end": "3677880"
  },
  {
    "text": "the year so a speed of 200 is currently slated for around the middle of the year so we're targeting this will not release",
    "start": "3677880",
    "end": "3683430"
  },
  {
    "text": "at a cm at the same time there's a lot this is too much work to do and it's being underpinned by a whole bunch of stuff in FX labs which just isn't ready",
    "start": "3683430",
    "end": "3690180"
  },
  {
    "text": "yet but we're we're hoping that by the end of the year signal our encore and the stuff underneath will be ready if",
    "start": "3690180",
    "end": "3695790"
  },
  {
    "text": "you want to track along with the madness as it is right now while we still figure all this stuff out you can do that on github we're active development there's a team",
    "start": "3695790",
    "end": "3702270"
  },
  {
    "text": "of like 4 people working on this every day right now at slash HDNet slash signal so thanks very much for coming",
    "start": "3702270",
    "end": "3708720"
  },
  {
    "text": "and putting up with the craziness it is a work in progress project but yet this is the last talk and we'll see you all",
    "start": "3708720",
    "end": "3714210"
  },
  {
    "text": "guys next year so thanks [Applause]",
    "start": "3714210",
    "end": "3723359"
  }
]