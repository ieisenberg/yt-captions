[
  {
    "start": "0",
    "end": "113000"
  },
  {
    "text": "hi everyone welcome to my talk on a practical guide to graph databases",
    "start": "5250",
    "end": "10879"
  },
  {
    "text": "before we get started here I guess has anybody here use the graph database before which one did you use neo anybody",
    "start": "10879",
    "end": "19110"
  },
  {
    "text": "else so so this is a new topic for most people I mean so let me tell you a",
    "start": "19110",
    "end": "25020"
  },
  {
    "text": "little bit about myself my name is Dave Mac burger I'm an architect and a architect in a full-stack developer I've",
    "start": "25020",
    "end": "30630"
  },
  {
    "text": "been developing for full-stack software for about 20 years now that's everything",
    "start": "30630",
    "end": "36239"
  },
  {
    "text": "from high performance low latency distributed data platforms through high-performance web apps built on top",
    "start": "36239",
    "end": "42149"
  },
  {
    "text": "of those who you know standard line of business and enterprise applications for the past couple years",
    "start": "42149",
    "end": "47670"
  },
  {
    "text": "my focus is building on building out distributed high-performance big data",
    "start": "47670",
    "end": "52739"
  },
  {
    "text": "platforms pretty particularly those built on top of graph databases that's",
    "start": "52739",
    "end": "57870"
  },
  {
    "text": "why I'm here to talk to you because graph databases are kind of my thing they're the thing I really enjoy working with and I like helping other people use",
    "start": "57870",
    "end": "66300"
  },
  {
    "text": "them to their fullest potential so for the past couple years I had been working as a consultant basically through a",
    "start": "66300",
    "end": "73439"
  },
  {
    "text": "variety of companies from financial sector to oil and gas to bioinformatics",
    "start": "73439",
    "end": "80090"
  },
  {
    "text": "helping them use graph databases to the inside their systems to their fullest potential currently I'm the chief",
    "start": "80090",
    "end": "86460"
  },
  {
    "text": "Software Architect for a company called gene by gene we are a bioinformatics company that specializes in genetic",
    "start": "86460",
    "end": "92520"
  },
  {
    "text": "genealogy and we're using a graph day we're basically working on breaking up our monolithic sequel server net",
    "start": "92520",
    "end": "99329"
  },
  {
    "text": "application and as part of that we're using a graph database to help out where",
    "start": "99329",
    "end": "104490"
  },
  {
    "text": "it makes the most sense to speed up that process so as I said what we're here to",
    "start": "104490",
    "end": "110310"
  },
  {
    "text": "talk about today is graph databases so why well graph databases are a hot thing",
    "start": "110310",
    "end": "115799"
  },
  {
    "start": "113000",
    "end": "113000"
  },
  {
    "text": "they're probably the hottest thing in data stores right now I know data stores are not you know the sexiest technology",
    "start": "115799",
    "end": "121170"
  },
  {
    "text": "out there but as we all know having your data store work well solid and fast is",
    "start": "121170",
    "end": "126659"
  },
  {
    "text": "great the best thing you can have with your data store is that nobody knows it exists that it just works for everybody",
    "start": "126659",
    "end": "131870"
  },
  {
    "text": "so this chart shows basically different types of data stores and their popularity since January of 20",
    "start": "131870",
    "end": "138830"
  },
  {
    "text": "13 in that time the prom popularity of graph databases has jumped eight hundred percent I've been working with graph",
    "start": "138830",
    "end": "145490"
  },
  {
    "text": "databases almost exclusively for three years or so and I can tell you in the past year they've actually gotten significantly more traction than they",
    "start": "145490",
    "end": "151880"
  },
  {
    "text": "had in the previous two years that I worked with them previous two years there was a lot of companies that were working and using them as a little proof",
    "start": "151880",
    "end": "158090"
  },
  {
    "text": "of concept little research projects things like that now companies are coming out and they're using them in full-on production mode especially with",
    "start": "158090",
    "end": "164240"
  },
  {
    "text": "the release of Amazon Neptune and I as cosmos DB's gremlin API it's really",
    "start": "164240",
    "end": "170450"
  },
  {
    "text": "provided kind of legitimacy to them as a first-class datastore that people are really seriously considering for",
    "start": "170450",
    "end": "176750"
  },
  {
    "text": "projects are working on so you can't have a car talk about graph databases without talking a little bit about graph",
    "start": "176750",
    "end": "183560"
  },
  {
    "text": "theory because graph databases are based on graph theory graph theory is that mathematical construct we probably all",
    "start": "183560",
    "end": "189440"
  },
  {
    "text": "learned and met back in university and forgot it's quickly thereafter but basically what it comes down to it was",
    "start": "189440",
    "end": "195290"
  },
  {
    "text": "invented by this guy Leonardo Euler and the famous seven bridges of k√∂nigsberg his problem and basically what it did is",
    "start": "195290",
    "end": "201410"
  },
  {
    "text": "it came up with a system allowing you to abstract out basically it was allowing",
    "start": "201410",
    "end": "206720"
  },
  {
    "text": "you to abstract out real world concepts into abstract nodes nodes and relationships between things which are",
    "start": "206720",
    "end": "212480"
  },
  {
    "text": "called nodes as a nodes and edges in graph in graph theory why does that matter well a graph data story it's a",
    "start": "212480",
    "end": "218959"
  },
  {
    "text": "type of no sequel datastore and it's based on using those structures to build efficient methods to traverse and",
    "start": "218959",
    "end": "225200"
  },
  {
    "text": "represent those relationships so when you look at it and what I think of is",
    "start": "225200",
    "end": "230630"
  },
  {
    "start": "229000",
    "end": "229000"
  },
  {
    "text": "the no sequel spectrum you go from the data complexity of being the most simple to the most complex and the complexity",
    "start": "230630",
    "end": "236600"
  },
  {
    "text": "really comes down to how data is related to one another the simplest and you have a key value store this is your your Redis your react your DynamoDB your",
    "start": "236600",
    "end": "243920"
  },
  {
    "text": "aerospike it's basically where your data has no relation other than to itself you get a little bit more complex you want",
    "start": "243920",
    "end": "249890"
  },
  {
    "text": "to have some relations between other fields other properties you get something like a wide column or a column",
    "start": "249890",
    "end": "255470"
  },
  {
    "text": "oriented data store this is something like Cassandra Apache HBase or Google Cloud BigTable get a little more complex",
    "start": "255470",
    "end": "263120"
  },
  {
    "text": "as far as relationships go you get a document database the document allows you to have complex relationships with",
    "start": "263120",
    "end": "268460"
  },
  {
    "text": "inside a document and even some minor joining across documents but when it comes down to it each entity is",
    "start": "268460",
    "end": "274370"
  },
  {
    "text": "a document itself then you get to the relational database the relational database is what we all know we've all",
    "start": "274370",
    "end": "279409"
  },
  {
    "text": "done used for many many years we're all very familiar with how they work in the basic constructs around them this is",
    "start": "279409",
    "end": "284750"
  },
  {
    "text": "your sequel servers you're Postgres is your Oracle's you're my sequels what we all probably use every day in our normal",
    "start": "284750",
    "end": "289940"
  },
  {
    "text": "day-to-day work and then you have graph graph allows you to deal with come more complex relationships that are",
    "start": "289940",
    "end": "295819"
  },
  {
    "text": "effectively and efficiently stored in a relational database what why is that what do I mean when I say that I mean relations are in the name of a",
    "start": "295819",
    "end": "302060"
  },
  {
    "text": "relational database they should be very good at actually storing them well the truth that when it comes down to it is in a relational database your relations",
    "start": "302060",
    "end": "309199"
  },
  {
    "text": "are not first-class citizens your relations cannot have properties and metadata to themselves whereas in a",
    "start": "309199",
    "end": "314990"
  },
  {
    "text": "graph database they are first-class citizens they're allowed to maintain their own med data in their own properties as their relate as they're on",
    "start": "314990",
    "end": "322819"
  },
  {
    "text": "that relationship itself as opposed to having to do something like a bridge table so in you know in a state and a",
    "start": "322819",
    "end": "327919"
  },
  {
    "text": "standard ordered product sort of order system in a relational database you have an order table you would have a products",
    "start": "327919",
    "end": "334039"
  },
  {
    "text": "table and then you have what I tend to call like a bridge table that would contain the order details it would be maybe the quantity the order day the",
    "start": "334039",
    "end": "340370"
  },
  {
    "text": "number of product you know the price paper product in a graph database you're actually able to eliminate that need for",
    "start": "340370",
    "end": "345529"
  },
  {
    "text": "that third table and have just a node that represents the order and no that represents the product and an edge",
    "start": "345529",
    "end": "350870"
  },
  {
    "text": "between them that is that the product was ordered on that edge you're able to put that metadata about how that actual",
    "start": "350870",
    "end": "357050"
  },
  {
    "text": "you know the product the quantity that was ordered the date it was ordered things like that on that edge itself and",
    "start": "357050",
    "end": "362210"
  },
  {
    "text": "use that when you're doing what's called a traversal which is the the graph equivalent of a query to pull that data",
    "start": "362210",
    "end": "368719"
  },
  {
    "text": "back out and filter on it so what why would you use a graph database well you",
    "start": "368719",
    "end": "375169"
  },
  {
    "start": "371000",
    "end": "371000"
  },
  {
    "text": "go on Google you'll find tons of examples of different use cases for graph databases these are just a couple that I thought I would highlight the",
    "start": "375169",
    "end": "381830"
  },
  {
    "text": "first one here is network analysis this is your friends of friends problem this is we all been on Facebook we've all",
    "start": "381830",
    "end": "387110"
  },
  {
    "text": "been on LinkedIn we've all seen the you know people you may know or people that you know know this person sort of thing",
    "start": "387110",
    "end": "392599"
  },
  {
    "text": "that that's a network analysis problem this is also referred to as the six degrees of Kevin Bacon problem you know",
    "start": "392599",
    "end": "398090"
  },
  {
    "text": "every actor is related to Kevin Bacon within six degrees of separation this is that that's this sort of problem graph",
    "start": "398090",
    "end": "404000"
  },
  {
    "text": "databases are very good at solving this sort of problem because they're very good at traversing those relationships between things you'll hear me say that a lot doing this",
    "start": "404000",
    "end": "411259"
  },
  {
    "text": "talk because it's really kind of if you if you keep one key fact out of this that's probably the most important thing if your problem is about traversing or",
    "start": "411259",
    "end": "417979"
  },
  {
    "text": "how things are related then graph database may be a good solution to your problem you know another common one is a",
    "start": "417979",
    "end": "423139"
  },
  {
    "text": "recommendation engine because a recommendation engine is all about pattern matching and finding relationships between things because a",
    "start": "423139",
    "end": "428719"
  },
  {
    "text": "recommendation what do you want to do when you build a recommendation you want to find a profile of someone who's bought items that are similar to your",
    "start": "428719",
    "end": "434569"
  },
  {
    "text": "items and then find the other things that they've purchased that you haven't purchased so you can give them a more accurate representation or a more",
    "start": "434569",
    "end": "441409"
  },
  {
    "text": "accurate recommendation of what they should get fraud detection on fraud detection is a very common use case for",
    "start": "441409",
    "end": "446989"
  },
  {
    "text": "a graph database because fraud detection at its heart is really comparing a set of known transactions to a set of known",
    "start": "446989",
    "end": "452569"
  },
  {
    "text": "fraudulent transactions and seeing how much they overlap and how similar they are to one another one that kind of",
    "start": "452569",
    "end": "458629"
  },
  {
    "text": "surprised me when I first got into it was master data management you wouldn't necessarily think of master data management as a graph problem but it",
    "start": "458629",
    "end": "465049"
  },
  {
    "text": "actually fits in the graph space pretty well why is that because graph wouldn't in master date a man is a problem when",
    "start": "465049",
    "end": "470719"
  },
  {
    "text": "you really get down to it is all about figuring out that entity a in system a equals company B and system B equals",
    "start": "470719",
    "end": "478729"
  },
  {
    "text": "entity C and in system C so it's all about relating those items together so when you make a change to one you're",
    "start": "478729",
    "end": "484610"
  },
  {
    "text": "able to link them together to find out how that though all those things are talking about the same one item so now",
    "start": "484610",
    "end": "493579"
  },
  {
    "text": "that we know a little bit about graph databases I wanted to talk a bit about the graph ecosystem I call it a ecosystem because it's large the craft",
    "start": "493579",
    "end": "501079"
  },
  {
    "text": "ecosystem is very large and it's rapidly growing this slide up here I last count",
    "start": "501079",
    "end": "506629"
  },
  {
    "text": "when I was putting it together I'm not sure I got all of them but there was 43 different graphed data stores up there",
    "start": "506629",
    "end": "512289"
  },
  {
    "text": "this when I originally built this slide a couple of weeks ago I have I can't I",
    "start": "512289",
    "end": "517339"
  },
  {
    "text": "knew a 32 which I thought was pretty impressive on myself I threw it out to some of the people I know on Twitter that also worked the graph databases",
    "start": "517339",
    "end": "523370"
  },
  {
    "text": "within a day I got another 10 that I'd never even heard of on this so that's what I mean it's a very large in a very",
    "start": "523370",
    "end": "529970"
  },
  {
    "text": "rapidly growing ecosystem and a lot I mean a lot of these have been around for a long time a lot of these are brand new",
    "start": "529970",
    "end": "535939"
  },
  {
    "text": "so it's continually evolving and each one is print from the others in certain",
    "start": "535939",
    "end": "541100"
  },
  {
    "text": "distinct ways so in order to kind of help out with this talk I decided to put",
    "start": "541100",
    "end": "546230"
  },
  {
    "text": "him into some big buckets these are the buckets that I chose if you ask for different people in the graph space you'll get four different sets of block",
    "start": "546230",
    "end": "551690"
  },
  {
    "text": "gifts but the ones I basically chose were the big buckets where it's either a graph framework or it's a graph database",
    "start": "551690",
    "end": "557150"
  },
  {
    "text": "and then inside a graph database it's either an RDF triple store or a labeled property model graph we'll go into the",
    "start": "557150",
    "end": "563030"
  },
  {
    "text": "details of what those things mean here in a second the first one to talk about",
    "start": "563030",
    "end": "568910"
  },
  {
    "start": "567000",
    "end": "567000"
  },
  {
    "text": "is the difference between a database and a framework when I'm talking about a",
    "start": "568910",
    "end": "574190"
  },
  {
    "text": "graph database I'm talking about a system where the data is both persisted and processed by that system this is",
    "start": "574190",
    "end": "580070"
  },
  {
    "text": "very similar to what we all think of this kind of a sequel database or other relational database it's good for real-time querying and it handles both",
    "start": "580070",
    "end": "587090"
  },
  {
    "text": "transactional and analytical type workloads on the other hand you have a framework the biggest difference in my",
    "start": "587090",
    "end": "593570"
  },
  {
    "text": "mind between a framework and a database is that a framework does not persist the data it just processes it using graph",
    "start": "593570",
    "end": "599930"
  },
  {
    "text": "algorithms so the data for a framework is loaded from something like your data Lake your data warehouse your Hadoop",
    "start": "599930",
    "end": "605840"
  },
  {
    "text": "file system is a pretty common one that allows it to work on enormous size data sets because you're just loading the",
    "start": "605840",
    "end": "612500"
  },
  {
    "text": "data from something else and usually running it on a distributed analytics engine something like a spark it's",
    "start": "612500",
    "end": "618230"
  },
  {
    "text": "allowed to work on enormous data sets that are too big to fit even on a cluster of servers that you would need for something to run them that same",
    "start": "618230",
    "end": "625250"
  },
  {
    "text": "analytical work loading it you know in an actual database itself so because you have to load the data because it takes",
    "start": "625250",
    "end": "631310"
  },
  {
    "text": "time to do that it's really on frameworks are really useful for analytical workloads not really transactional workloads when you get",
    "start": "631310",
    "end": "639830"
  },
  {
    "start": "637000",
    "end": "637000"
  },
  {
    "text": "down to databases there's two basic types of databases there's an RDF triple store in a label property graph or a",
    "start": "639830",
    "end": "645080"
  },
  {
    "text": "label property model graph in an already F triple store each entity in in the",
    "start": "645080",
    "end": "650690"
  },
  {
    "text": "graph is a triple that triples contains a subject object predicate that that's what consists that's what your triple",
    "start": "650690",
    "end": "656750"
  },
  {
    "text": "consists of this comes from the Semantic Web it's actually got aa there's a w3c",
    "start": "656750",
    "end": "662150"
  },
  {
    "text": "standard for our it's for RDF the resource description framework RDF grow",
    "start": "662150",
    "end": "668150"
  },
  {
    "text": "data stores when I think of them I think that they're great for inferring relationships between things that you main",
    "start": "668150",
    "end": "673260"
  },
  {
    "text": "know that their relationship existed prior you on the other side you have labeled property model graphs labeled",
    "start": "673260",
    "end": "678870"
  },
  {
    "text": "property model graphs work on two different types of entities they work on nodes and edges when it works on nodes",
    "start": "678870",
    "end": "685410"
  },
  {
    "text": "and edges you have nodes edges they also have properties that can be associated with either nodes or edges and this",
    "start": "685410",
    "end": "690840"
  },
  {
    "text": "concept of a label a label is associated with a node or an edge to give it a type so it's kind of like a schema thing",
    "start": "690840",
    "end": "698090"
  },
  {
    "text": "where you're able to assign nodes of specific types with specific properties",
    "start": "698090",
    "end": "703850"
  },
  {
    "text": "they're great for can basically label property monographs are great for efficiently being able to traverse",
    "start": "703850",
    "end": "709550"
  },
  {
    "text": "relationships that you already know you can do inference to a degree with labelled property model graphs but",
    "start": "709550",
    "end": "715530"
  },
  {
    "text": "really when it comes down to it they're better at working with other better at rapidly and effectively traversing data",
    "start": "715530",
    "end": "720810"
  },
  {
    "text": "that are relationships that you know so here's an example of the same same data",
    "start": "720810",
    "end": "726330"
  },
  {
    "text": "model using in an RDF triple store in a labeled property model graph so if you start here at this node that says Bob on",
    "start": "726330",
    "end": "732480"
  },
  {
    "text": "the on the RDF side you know if I want to find out what what is it that Bob drive so well Bob drives a Ford and a",
    "start": "732480",
    "end": "738600"
  },
  {
    "text": "Ford is a car so I'm able to refer infer from that relationship that Bob drives a car on the other hand on the labeled",
    "start": "738600",
    "end": "746550"
  },
  {
    "text": "property graph side you'll see I have a node that if type person where the name has it has a property that the name is",
    "start": "746550",
    "end": "753270"
  },
  {
    "text": "Bob an edge that an edge that's directed towards car and that cars make is a Ford",
    "start": "753270",
    "end": "760320"
  },
  {
    "text": "so I'm able to both so as you can kind of see they both show the same information in slightly different manners so now that we know a little bit",
    "start": "760320",
    "end": "769350"
  },
  {
    "text": "about the different types of data data stores are out there how do I get my",
    "start": "769350",
    "end": "774690"
  },
  {
    "text": "data out I mean that's kind of the next question once I know what the different things are how do I get my dad out graph",
    "start": "774690",
    "end": "780180"
  },
  {
    "text": "query languages is an area where the graph ecosystem starts to get a little complicated and I say it's complicated",
    "start": "780180",
    "end": "786960"
  },
  {
    "text": "because in there R is no standard graph query language across all of the things like there is for sequel I when you",
    "start": "786960",
    "end": "792750"
  },
  {
    "text": "write sequel for one database there might be slight differences across databases but in general it's very",
    "start": "792750",
    "end": "797790"
  },
  {
    "text": "transparent very easy to move from one to the other with slight modifications to your queries graph data stores that's",
    "start": "797790",
    "end": "804240"
  },
  {
    "text": "not true as you see up here I had kind of bucketed into file different uh types of graph Korean languages the first one being sparkle",
    "start": "804240",
    "end": "811040"
  },
  {
    "text": "Sparkle is probably the only one up there that I would say is is a standard for RDF Tripp well it's the only one",
    "start": "811040",
    "end": "817700"
  },
  {
    "text": "that's out there that I would say is sort of a standard because it's the standard for RDF triple stores it's part of that w3c standard so it's wellspect",
    "start": "817700",
    "end": "824210"
  },
  {
    "text": "out and respected by any of the RDF triple stores that I'm aware of as I said it comes from the it comes from the",
    "start": "824210",
    "end": "829760"
  },
  {
    "text": "Semantic Web and it's that w3c standard when you get to label property monographs the it gets a lot murkier as far as how",
    "start": "829760",
    "end": "836660"
  },
  {
    "text": "you get your data the most common one you'll probably run into and what neo4j uses is a language called cipher so",
    "start": "836660",
    "end": "843470"
  },
  {
    "text": "cipher was actually created by neo4j to query their datastore I think it was",
    "start": "843470",
    "end": "848960"
  },
  {
    "text": "about three two and a half three years ago they open sourced the site the spec",
    "start": "848960",
    "end": "853970"
  },
  {
    "text": "into what's called open cipher so it's now an open-source spec that's there's a committee that decides it it's a very",
    "start": "853970",
    "end": "860720"
  },
  {
    "text": "declarative language so it's very much like sequel it's probably the easiest of the labeled property monograph ones to",
    "start": "860720",
    "end": "867320"
  },
  {
    "text": "use for a new person coming on board and because of that and the popularity of neo4j it's probably the most popular one",
    "start": "867320",
    "end": "874310"
  },
  {
    "text": "that you'll find out there in the wild it's certainly the one you'll find the best documentation on the next most most",
    "start": "874310",
    "end": "879800"
  },
  {
    "text": "common one you'll run into is gremlin gremlin is part of the Apache tinker pop project which is a very interesting and",
    "start": "879800",
    "end": "886580"
  },
  {
    "text": "complex project because it's a database a graph query language and a graph engine all at the same time it's both an",
    "start": "886580",
    "end": "894980"
  },
  {
    "text": "imperative and a declarative language you most often find it the imperative syntax used as the declarative syntax is",
    "start": "894980",
    "end": "902150"
  },
  {
    "text": "a little bit complex to get working correctly it's a very powerful language it's very composable you can basically",
    "start": "902150",
    "end": "908570"
  },
  {
    "text": "get any information you out with out of it that you need out of your graph but it's got a steep learning curve it takes",
    "start": "908570",
    "end": "914600"
  },
  {
    "text": "quite a bit of effort to really get very efficient at writing it it's the one that's implemented by I believe the most",
    "start": "914600",
    "end": "921290"
  },
  {
    "text": "number of data stores out there I believe there's more that there's more that implement tinker the tinker pops gremlin then cipher but I said the this",
    "start": "921290",
    "end": "928760"
  },
  {
    "text": "is a constantly evolving landscape so that number may be changing that's what both cosmos DB and M AWS Neptune use is",
    "start": "928760",
    "end": "936380"
  },
  {
    "text": "they're 13 core pop enabled the other one you'll find out there on a few data stores is graph QL",
    "start": "936380",
    "end": "942290"
  },
  {
    "text": "in my mind graph QL is better used to as a query language for rest endpoints than",
    "start": "942290",
    "end": "947809"
  },
  {
    "text": "really a query language for graph databases but there are a few graph databases that use it as the native query language to get data out and the",
    "start": "947809",
    "end": "954649"
  },
  {
    "text": "last one is just a big bucket of kind of everything else there's a lot of data stores out there that implement their",
    "start": "954649",
    "end": "960799"
  },
  {
    "text": "own specific data store specific graph query language they're almost always",
    "start": "960799",
    "end": "965899"
  },
  {
    "text": "based off of some sort of sequel but they're specific to a single system",
    "start": "965899",
    "end": "971019"
  },
  {
    "text": "there is a movement that's out there very recently called gql which stands",
    "start": "971019",
    "end": "976369"
  },
  {
    "text": "for graph query language is is to basically an attempt to create a standard for property model graph query",
    "start": "976369",
    "end": "981860"
  },
  {
    "text": "languages much like sparkle but when I say it's very new I mean within the past month this proposals come out so there's",
    "start": "981860",
    "end": "988790"
  },
  {
    "text": "really other than a semi agreement across companies to make it work there isn't any actual there's no",
    "start": "988790",
    "end": "994999"
  },
  {
    "text": "implementation of it yet so what you're",
    "start": "994999",
    "end": "1002230"
  },
  {
    "text": "seeing here is a very simple graph query written in all five different languages",
    "start": "1002230",
    "end": "1007600"
  },
  {
    "text": "all five different languages up there this is a simple I want to find a friend of my friends or I want to find all the",
    "start": "1007600",
    "end": "1013989"
  },
  {
    "text": "friends of my friends I should say so the first one you'll see here is sparkle one of the things about Sparkle is",
    "start": "1013989",
    "end": "1020980"
  },
  {
    "text": "because it comes from the Semantic Web every entity and sparkle is a URI so the",
    "start": "1020980",
    "end": "1026409"
  },
  {
    "text": "very first part here where you see this prefix fo AF basically that's saying anywhere you see fo AF and your query",
    "start": "1026409",
    "end": "1032589"
  },
  {
    "text": "prefix this on top of it are before it so it makes your query significantly easier to read because I don't want to",
    "start": "1032589",
    "end": "1038558"
  },
  {
    "text": "read HTTP colon slash slash every time I'm trying to write out a property name",
    "start": "1038559",
    "end": "1043918"
  },
  {
    "text": "so basically a prefix is that onto everything and then it's a simple select we're very very sequel like in syntax in",
    "start": "1043919",
    "end": "1050590"
  },
  {
    "text": "order to pull your data back right below that what you'll see is cypher as you",
    "start": "1050590",
    "end": "1055899"
  },
  {
    "text": "can see it's a very declarative language where you're basically saying I want to match things that match this pattern you'll notice that anything this has",
    "start": "1055899",
    "end": "1063870"
  },
  {
    "text": "surounded brackets represents a node anything that has anything that has",
    "start": "1063870",
    "end": "1070149"
  },
  {
    "text": "square brackets represents the late on an edge so it's saying find me a person then find me then go out the",
    "start": "1070149",
    "end": "1076540"
  },
  {
    "text": "friend edge what the start is there the start to is it's actually saying go out",
    "start": "1076540",
    "end": "1081880"
  },
  {
    "text": "the friend edge twice so I'm gonna go from a person across the friend edge to another person and then across a friend",
    "start": "1081880",
    "end": "1087130"
  },
  {
    "text": "edge again to another person and then return me those that person's name below",
    "start": "1087130",
    "end": "1093220"
  },
  {
    "text": "that you'll see gremlin in it's imperative syntax gremlin has this concept where it's all the air queries",
    "start": "1093220",
    "end": "1100150"
  },
  {
    "text": "and gremlin will either start with a GV or GE what that stands for is basically in my graph give me all the vertices or",
    "start": "1100150",
    "end": "1108130"
  },
  {
    "text": "give me all the edges and then it then filters down based on that based on the",
    "start": "1108130",
    "end": "1113410"
  },
  {
    "text": "next what are called steps so it's basically saying find me everything that has a label of person and then go out",
    "start": "1113410",
    "end": "1119440"
  },
  {
    "text": "the friend edge two times each each item here or each thing here is called a step",
    "start": "1119440",
    "end": "1124600"
  },
  {
    "text": "in gremlin terms dee doop my values and then return me the name graph QL as you",
    "start": "1124600",
    "end": "1131710"
  },
  {
    "text": "can see is very JSON in nature it's basically a JSON specification of the data you want to receive back on the",
    "start": "1131710",
    "end": "1137920"
  },
  {
    "text": "last I'm done here is I believe Orient DB sin sequel syntax so a lot of them look very similar to this but as I said",
    "start": "1137920",
    "end": "1144100"
  },
  {
    "text": "these are kind of very datastore specific so they may be different based on which one you're looking at the last",
    "start": "1144100",
    "end": "1156640"
  },
  {
    "start": "1155000",
    "end": "1155000"
  },
  {
    "text": "part of the graph ecosystem I kind of wanted to touch on was the different visualization options out there now that",
    "start": "1156640",
    "end": "1162220"
  },
  {
    "text": "you know what the basis of your database is you know how to get the data out of your data store what do you do with it",
    "start": "1162220",
    "end": "1168280"
  },
  {
    "text": "how do you see it graph data in it by its very nature is very visual I mean",
    "start": "1168280",
    "end": "1173650"
  },
  {
    "text": "with sequel data you can pretty much see you can see it and you could see it in a you know rows of data on a screen for",
    "start": "1173650",
    "end": "1179320"
  },
  {
    "text": "all that really matters because it's very it's it's tabular in that nature graph date is all about relationships",
    "start": "1179320",
    "end": "1185110"
  },
  {
    "text": "between things to being able to visualize those relationships is really important in order to be able to effectively understand what's going on",
    "start": "1185110",
    "end": "1191640"
  },
  {
    "text": "there's a couple of desktop tools out there once open source called gessie the",
    "start": "1191640",
    "end": "1197770"
  },
  {
    "text": "other one out there is a relatively newcomer it's called Arcade Analytics they both build best desktop tools or well okay it's actually a web based tool",
    "start": "1197770",
    "end": "1203890"
  },
  {
    "text": "but it allows you to basically enter if we work with your with your data to basically play with it and figure out",
    "start": "1203890",
    "end": "1211900"
  },
  {
    "text": "what's going on and dig into it and real interactive sort of thing on a desktop",
    "start": "1211900",
    "end": "1217779"
  },
  {
    "text": "so it's more for data exploration then kind of an end user system in the middle",
    "start": "1217779",
    "end": "1224500"
  },
  {
    "text": "you have one that that supports both has both a web tool and a desktop tool Tom Sawyer software and Lync curious are the",
    "start": "1224500",
    "end": "1231340"
  },
  {
    "text": "two most common ones that I've run into in this space and then you have ones that you're very good for basically",
    "start": "1231340",
    "end": "1238029"
  },
  {
    "text": "doing web visualizations d3 probably most people here that do web development is probably heard of d3 d3 actually has",
    "start": "1238029",
    "end": "1243820"
  },
  {
    "text": "some really powerful tools for integrating with graph databases Cambridge intelligence has a tool called",
    "start": "1243820",
    "end": "1249520"
  },
  {
    "text": "key lines which is a basically it's not graph specific but it's very heavy to leaning towards graph visualizations",
    "start": "1249520",
    "end": "1255870"
  },
  {
    "text": "Sigma GIS and why works or another or two other companies out there that also have very deep integrations into",
    "start": "1255870",
    "end": "1262200"
  },
  {
    "text": "visualizing graph data so what do I mean by visualizing graph data well",
    "start": "1262200",
    "end": "1267370"
  },
  {
    "text": "visualizing graph data is really really thought about the two up on the right of the screen here isn't these I always",
    "start": "1267370",
    "end": "1272890"
  },
  {
    "text": "call these no charts basically you're showing nodes and edges whose the relationships in between one thing I",
    "start": "1272890",
    "end": "1279309"
  },
  {
    "text": "want to make sure that we trap you don't necessarily fall into is just because you're grout your data is a graph doesn't mean you need to represent it to",
    "start": "1279309",
    "end": "1285760"
  },
  {
    "text": "your end-user graph as a graph and that's where the one on the Left comes in this is actually a demo that",
    "start": "1285760",
    "end": "1292090"
  },
  {
    "text": "Keeneland's puts out that's basically hotspots of crimes and I think Chicago",
    "start": "1292090",
    "end": "1297480"
  },
  {
    "text": "over time as you can see the data underneath it is powered by a graph but",
    "start": "1297480",
    "end": "1302740"
  },
  {
    "text": "the data as you're seeing it makes more sense to user as a heat map so to use or",
    "start": "1302740",
    "end": "1311049"
  },
  {
    "text": "not to use a graph database that's the question we're all here to answer probably so everything is a graph if you",
    "start": "1311049",
    "end": "1319840"
  },
  {
    "text": "walk out if you go look on the internet you'll see this is written up there a lot this concept that everything is a graph my colleagues and I have been",
    "start": "1319840",
    "end": "1326770"
  },
  {
    "text": "guilty of kind of promoting this concept that everything is graphs well it's true everything in the world is pretty much a",
    "start": "1326770",
    "end": "1332799"
  },
  {
    "text": "graph because everything's things related to other things which is what a graph makes up what we really should",
    "start": "1332799",
    "end": "1338110"
  },
  {
    "text": "have done when talking about it from a tech perspective is added but that doesn't mean you should use the graph to solve it",
    "start": "1338110",
    "end": "1343370"
  },
  {
    "text": "graph databases are great in certain scenarios and they're not great in other scenarios it's not that you can't do it",
    "start": "1343370",
    "end": "1348890"
  },
  {
    "text": "in a graph database it's just probably not the optimal tool for many use cases so so how do you know which ones it's",
    "start": "1348890",
    "end": "1356930"
  },
  {
    "text": "good for and which ones it's not well it really comes down to exploring the questions it's you know doing some deep exploration into the questions you're",
    "start": "1356930",
    "end": "1362960"
  },
  {
    "text": "trying to answer will really help you learn or help you not only learn how to better solve your problem but lead you",
    "start": "1362960",
    "end": "1369140"
  },
  {
    "text": "towards the right answer for the data story you want to use for to solve that type of problem so let's say you want to",
    "start": "1369140",
    "end": "1374870"
  },
  {
    "text": "do a search or a selection type problem you know give me everyone that works in a specific company or find me everyone",
    "start": "1374870",
    "end": "1380240"
  },
  {
    "text": "the first name like John or find me all stores within 200 miles of you know Oslo Norway well this is you should probably",
    "start": "1380240",
    "end": "1388190"
  },
  {
    "text": "just use your relational database or if you have a search server something like an elastic search or a solar there farm were out there far more tuned to you",
    "start": "1388190",
    "end": "1397610"
  },
  {
    "text": "answer this sort of question very effectively and efficiently let's say",
    "start": "1397610",
    "end": "1403670"
  },
  {
    "text": "you want to talk about you want to have a related data question you want to find you know what's the easiest way for median should B be introduced into this",
    "start": "1403670",
    "end": "1409400"
  },
  {
    "text": "executive maybe you want to you know get introduced to an executive in your LinkedIn you know and you look at your LinkedIn contacts and you want to find",
    "start": "1409400",
    "end": "1415340"
  },
  {
    "text": "out how to get between two people or how do two people inside a company know each other you know how has a company this",
    "start": "1415340",
    "end": "1421460"
  },
  {
    "text": "company related to that company inside my CRM system well this is this is where a graph answers your question I mean if",
    "start": "1421460",
    "end": "1427760"
  },
  {
    "text": "you listen to what I said the word you'll hear come up over and over again is relations relations are really what",
    "start": "1427760",
    "end": "1433640"
  },
  {
    "text": "graph databases are about aggregation queries I mean how many of these do we",
    "start": "1433640",
    "end": "1439310"
  },
  {
    "text": "all write in probably a single week you know how many companies are in my system what are the average sales for each day",
    "start": "1439310",
    "end": "1444890"
  },
  {
    "text": "or you know with the number of transactions processed in a day I always think of these sorts of questions as these these are executive dashboard",
    "start": "1444890",
    "end": "1450800"
  },
  {
    "text": "questions these are the type of things you want to show up on an exec you on a dashboard that gets surfaced up to the executive level so they can quickly see",
    "start": "1450800",
    "end": "1456800"
  },
  {
    "text": "how the system is working this is where your relational database shines this is",
    "start": "1456800",
    "end": "1461930"
  },
  {
    "text": "what relational databases are optimized to do is these sorts of queries use your relational database where it makes the",
    "start": "1461930",
    "end": "1467150"
  },
  {
    "text": "most sense pattern-matching you know who is who has",
    "start": "1467150",
    "end": "1472769"
  },
  {
    "start": "1469000",
    "end": "1469000"
  },
  {
    "text": "a similar profile to me maybe this is your product recommendation who you know who who has a similar shopping pattern to my shopping pattern or does this",
    "start": "1472769",
    "end": "1479009"
  },
  {
    "text": "transaction look like it's fraudulent or is this user the same as this user well",
    "start": "1479009",
    "end": "1484249"
  },
  {
    "text": "this one's a little more complicated this one can really depend it could be a graph it could be your search server if",
    "start": "1484249",
    "end": "1490710"
  },
  {
    "text": "I had to look at these three questions I'd say the first who probably leaned towards a graph to me and the last one probably leans towards using a search",
    "start": "1490710",
    "end": "1496230"
  },
  {
    "text": "server something like an elastic search to answer that question can you answer all these questions with the graph absolutely is it necessarily the right",
    "start": "1496230",
    "end": "1503190"
  },
  {
    "text": "solution to your problem maybe maybe not clustering centrality and influence you",
    "start": "1503190",
    "end": "1511019"
  },
  {
    "start": "1507000",
    "end": "1507000"
  },
  {
    "text": "know who's the most influential person I know on LinkedIn you know what equipment in my network is going to be has the largest impact if it breaks you know",
    "start": "1511019",
    "end": "1517649"
  },
  {
    "text": "what parts fail at the same time this is right this is in in the center of the wheelhouse where we're graph",
    "start": "1517649",
    "end": "1523350"
  },
  {
    "text": "databases exceed the abilities of something like a relational database these are this is where graph database",
    "start": "1523350",
    "end": "1528539"
  },
  {
    "text": "is really shine is these sorts of questions as well as the other ones I talked about but this one to me is far",
    "start": "1528539",
    "end": "1534749"
  },
  {
    "text": "and away the easiest one to answer what yes this is a graph that you want to do you want to use I should say so you're",
    "start": "1534749",
    "end": "1541739"
  },
  {
    "text": "still not sure so what you see here is some work based on a flow chart that my",
    "start": "1541739",
    "end": "1547440"
  },
  {
    "text": "colleague dr. Denis Gosnell worked on and it's pretty much you know what kind of questions you're answering are you",
    "start": "1547440",
    "end": "1552690"
  },
  {
    "text": "answering those executive dashboarding questions you know if you're answering those executive dashboarding questions use your relational database it probably",
    "start": "1552690",
    "end": "1559950"
  },
  {
    "text": "it's optimized for handling those it there's been around for 40 years all the tools exist all the tools work with them",
    "start": "1559950",
    "end": "1565080"
  },
  {
    "text": "use those to the best of their ability are you dealing with more data exploration questions or more trying to",
    "start": "1565080",
    "end": "1571470"
  },
  {
    "text": "find insight in intelligence in your data well then you may want to look at a graph so what are you going to do with",
    "start": "1571470",
    "end": "1576989"
  },
  {
    "text": "it then if you you know you want to use a graph database you don't know what kind of questions you can answer are you gonna answer questions that are really",
    "start": "1576989",
    "end": "1582480"
  },
  {
    "text": "about analyzing large portions your data are you gonna load all of the connections on LinkedIn into your graph",
    "start": "1582480",
    "end": "1588299"
  },
  {
    "text": "and then try to find who is the person that has the most influence across the entire system well if you're gonna do",
    "start": "1588299",
    "end": "1593879"
  },
  {
    "text": "that sort of questioning where you're really looking at large sections or the",
    "start": "1593879",
    "end": "1599669"
  },
  {
    "text": "entirety of your graph and we're going to answer it that's where a graph framework comes those sorts of questions are are optimal",
    "start": "1599669",
    "end": "1606680"
  },
  {
    "text": "ones to use a graph framework to help answer or are you trying to do one that I want to find out how Bob's related to",
    "start": "1606680",
    "end": "1613190"
  },
  {
    "text": "Jane or James related to Tom and I want to show the answers to an end user and say a CRM system or something like that",
    "start": "1613190",
    "end": "1619370"
  },
  {
    "text": "but sort of storing and querying operation is where a graph data store you know graph database itself is",
    "start": "1619370",
    "end": "1625070"
  },
  {
    "text": "probably the right tool if you're trying to do both at the same time you need to go back to the beginning and better to",
    "start": "1625070",
    "end": "1630110"
  },
  {
    "text": "find your questions because you're trying to answer two different types of questions with the same solution as I",
    "start": "1630110",
    "end": "1635750"
  },
  {
    "text": "said I spent a lot of the past couple of years working as a consultant and the one I see more often than not is this",
    "start": "1635750",
    "end": "1641990"
  },
  {
    "text": "one which is I sold this to management as a graph problem so we're using a graph database to solve it as I said you",
    "start": "1641990",
    "end": "1647930"
  },
  {
    "text": "can solve any of these problems we've talked about with a graph database it just may not be your optimal solution",
    "start": "1647930",
    "end": "1654250"
  },
  {
    "text": "are you still confused well do you care about the relationships between entities",
    "start": "1654250",
    "end": "1660170"
  },
  {
    "text": "more than the entities themselves if you were gonna model this in your relational database would this take multiple joins",
    "start": "1660170",
    "end": "1666110"
  },
  {
    "text": "you know five or six joins to get the data out or you would you have to write a recursive CTE to do it is the",
    "start": "1666110",
    "end": "1672290"
  },
  {
    "text": "structure of your data continuously evolving one of the real strengths of graph databases is their flexibility",
    "start": "1672290",
    "end": "1678050"
  },
  {
    "text": "when it comes to data and schema we'll talk about that here in a few minutes but it it allows for the continuous",
    "start": "1678050",
    "end": "1684200"
  },
  {
    "text": "evolution of your data and your schema much easier than a relational database and is your domain a natural fit for a",
    "start": "1684200",
    "end": "1689570"
  },
  {
    "text": "graph is it is it one of those ones we talked about or one of the ones you can find online if you can answer yes too",
    "start": "1689570",
    "end": "1694760"
  },
  {
    "text": "many you know probably two of these questions you probably have a good good fit for a graph database so now the next",
    "start": "1694760",
    "end": "1706040"
  },
  {
    "text": "natural question comes down to can't you just do this in sequel well the answer is yes I mean none of the questions I've",
    "start": "1706040",
    "end": "1711890"
  },
  {
    "text": "brought up yet have them something that hasn't already been resolved in a sequel at least once or twice by people so",
    "start": "1711890",
    "end": "1718760"
  },
  {
    "start": "1718000",
    "end": "1718000"
  },
  {
    "text": "let's take a look at it let's take a look at the Northwind data model I mean we've all probably seen the Northwind data model so many times we know it by",
    "start": "1718760",
    "end": "1725750"
  },
  {
    "text": "heart at this point but here's a comparison of what a simplified",
    "start": "1725750",
    "end": "1730790"
  },
  {
    "text": "Northwind data model schema looks like in a relational database and then in a graph database",
    "start": "1730790",
    "end": "1737470"
  },
  {
    "text": "so let's shoot what does a simple search or selection look like well a simple search or selection query you know",
    "start": "1737559",
    "end": "1743719"
  },
  {
    "text": "pretty straightforward sequel queries you know give me these values from this table with a symbol inner join between",
    "start": "1743719",
    "end": "1749929"
  },
  {
    "text": "the two this is the comparable gremlin and cipher to match that same to answer",
    "start": "1749929",
    "end": "1755779"
  },
  {
    "text": "that same question as you can see there's probably you know this is a really straightforward sequel a sequel",
    "start": "1755779",
    "end": "1761929"
  },
  {
    "text": "query probably don't necessarily need to use the power of a graph database to answer this question as I said it can",
    "start": "1761929",
    "end": "1767899"
  },
  {
    "text": "work it can't answer it probably not necessarily what you want to do in the first step you know give me the top five",
    "start": "1767899",
    "end": "1774529"
  },
  {
    "text": "order products this is an aggregation type query same sort of thing still pretty straightforward sequel I'm guessing probably everybody in this room",
    "start": "1774529",
    "end": "1780379"
  },
  {
    "text": "has no problem writing this sequel without even looking up what syntax this is you know it's a simple select top",
    "start": "1780379",
    "end": "1786229"
  },
  {
    "text": "with a couple of inner joins in an order by if you look at the gremlin and them in the cipher yet again it's pretty",
    "start": "1786229",
    "end": "1792049"
  },
  {
    "text": "straightforward all you're doing is basically defining what sort of pattern you want to find in the graph and then returning the values this is where you",
    "start": "1792049",
    "end": "1800419"
  },
  {
    "text": "start seeing the power of of a graph database I want to find products that I that I haven't are purchased by other",
    "start": "1800419",
    "end": "1806959"
  },
  {
    "text": "people that I have yet purchased yet so what you're starting to run into where these sequel queries start becoming not",
    "start": "1806959",
    "end": "1813649"
  },
  {
    "text": "fun to write not fun to maintain and not particularly perform it you know this is an interior this is a Select inside of",
    "start": "1813649",
    "end": "1820309"
  },
  {
    "text": "select with multiple group and order buys multiple where Clause as multiple joins under takes a while to sit down",
    "start": "1820309",
    "end": "1827179"
  },
  {
    "text": "and just understand and read what this is for anyone trying to figure this out don't worry I'll share the slide so you",
    "start": "1827179",
    "end": "1832369"
  },
  {
    "text": "can actually look at them in detail because the text gets very small in order to fit in on a slide if you look",
    "start": "1832369",
    "end": "1837739"
  },
  {
    "text": "at the gremlin or the cipher query as you can see they're much simpler they're much easier to read they're much more",
    "start": "1837739",
    "end": "1842869"
  },
  {
    "text": "fluid to be able to read through this information to pull out the data in fact about on the gremlin query it's only the",
    "start": "1842869",
    "end": "1850129"
  },
  {
    "text": "first four lines that actually answer the question the last three lines are",
    "start": "1850129",
    "end": "1855409"
  },
  {
    "text": "just pulling out and grouping the data and on the cipher query it's only the first three lines it takes to answer the",
    "start": "1855409",
    "end": "1861379"
  },
  {
    "text": "question and the last three lines are for grouping and ordering by",
    "start": "1861379",
    "end": "1866829"
  },
  {
    "text": "this one is this one is not a north wind data model query but this is an example",
    "start": "1866970",
    "end": "1872950"
  },
  {
    "text": "of how you can take a recursive CTE and make it a far easier query in a graph",
    "start": "1872950",
    "end": "1878250"
  },
  {
    "text": "this is basically I want to see all my employers supervisors and the levels so",
    "start": "1878250",
    "end": "1883450"
  },
  {
    "text": "the way you do this in sequel is you basically have a you know a temporary table with a recursive CTE that's filling that table as it's looping",
    "start": "1883450",
    "end": "1889930"
  },
  {
    "text": "through an unknown number of times in order to get from you or to get from an employee to the top of that that",
    "start": "1889930",
    "end": "1895570"
  },
  {
    "text": "employees management chain I don't know if any of you have ever had to write these or maintain them they're not fun",
    "start": "1895570",
    "end": "1901630"
  },
  {
    "text": "they're near impossible to get right no one knows how they work and they're magic until they don't work and then you",
    "start": "1901630",
    "end": "1909100"
  },
  {
    "text": "lose all your hair trying to figure it out as you can see the gremlin on the the other side is far easier to read far",
    "start": "1909100",
    "end": "1917020"
  },
  {
    "text": "easier to maintain and actually far more performant because recursive CTS are extremely are strongly not performing",
    "start": "1917020",
    "end": "1924160"
  },
  {
    "text": "they chew up your database resources and the actually the current project I'm working on is replacing our family tree",
    "start": "1924160",
    "end": "1931050"
  },
  {
    "text": "which was written in sequel using recursive CT ease with gremlin for this specific reason it scales but it allows",
    "start": "1931050",
    "end": "1938320"
  },
  {
    "text": "us to scale better it allows us to take some load off of our sequel server that's serving are the rest of our",
    "start": "1938320",
    "end": "1944200"
  },
  {
    "text": "application so now that you know a bit",
    "start": "1944200",
    "end": "1951100"
  },
  {
    "text": "about the use cases for a databases and a bit about what you may and may not want to do with it where do you start",
    "start": "1951100",
    "end": "1957750"
  },
  {
    "text": "well the logical place to start is choosing your datastore you know this is",
    "start": "1958380",
    "end": "1964690"
  },
  {
    "text": "where you kind of have to make an initial decision are you gonna do you know is your problem a framework problem is it an RDF problem is it a property",
    "start": "1964690",
    "end": "1971680"
  },
  {
    "text": "model problem our label property model graph problem what sort of high availability requirements do you have",
    "start": "1971680",
    "end": "1977710"
  },
  {
    "text": "what sort of transaction volume do you have what sort of data size are you dealing with the answer to those",
    "start": "1977710",
    "end": "1983110"
  },
  {
    "text": "questions will really tell you whether you're able to work with a database that's that fits on a single server",
    "start": "1983110",
    "end": "1989100"
  },
  {
    "text": "whether you need one that has a single server with read replicas or whether you need a fully distributed system",
    "start": "1989100",
    "end": "1996930"
  },
  {
    "text": "all of those exist for any of those things if you can get away with doing it on a single server you're obviously",
    "start": "1997030",
    "end": "2002890"
  },
  {
    "text": "gonna have far less headache then if you have to do go on the fully distributed method but the fully distribute method",
    "start": "2002890",
    "end": "2009880"
  },
  {
    "text": "gives you high availability things and other things and then you want to do a hosted around premise as far as I'm",
    "start": "2009880",
    "end": "2015820"
  },
  {
    "text": "aware there is hosted versions of many of the data stores I showed up there probably at least a quarter to a third",
    "start": "2015820",
    "end": "2023020"
  },
  {
    "text": "of them have a hosted version out somewhere as I mentioned Amazon AWS has",
    "start": "2023020",
    "end": "2028570"
  },
  {
    "text": "Neptune that actually just went general availability about a week ago or two weeks ago cosmos DB has a gremlin API on",
    "start": "2028570",
    "end": "2036580"
  },
  {
    "text": "top of it there's other ones out there for there's hosted versions of neo4j there's hosted versions of on attacks",
    "start": "2036580",
    "end": "2042480"
  },
  {
    "text": "any of the graph frameworks can be used on top of almost all of the graph",
    "start": "2042480",
    "end": "2047500"
  },
  {
    "text": "frameworks use Apache spark under the covers Apache spark is a hosted product in several places and you can run it on",
    "start": "2047500",
    "end": "2053349"
  },
  {
    "text": "top of that so what are some of the concerns you have when thinking about a datastore data consistency with",
    "start": "2053349",
    "end": "2062108"
  },
  {
    "start": "2055000",
    "end": "2055000"
  },
  {
    "text": "relational databases you get you the data consistency that's known as acid consistency stands for atomic consistent",
    "start": "2062109",
    "end": "2069368"
  },
  {
    "text": "isolated and durable basically what it means is as soon as your data is written it's a very pessimistic way to actually",
    "start": "2069369",
    "end": "2075280"
  },
  {
    "text": "do data consistency because but what it guarantees you as soon as your data is written that data is consistent across",
    "start": "2075280",
    "end": "2081158"
  },
  {
    "text": "everything and will always be there it's been written it's been durable it's been durably written to disk and it's",
    "start": "2081159",
    "end": "2087250"
  },
  {
    "text": "consistent across everything in no sequel data stores a lot of them have made trade-offs of consistent are of for",
    "start": "2087250",
    "end": "2095589"
  },
  {
    "text": "higher availability that have made trade-offs to other parts of the of acid compliance it comes the one you'll see",
    "start": "2095589",
    "end": "2102940"
  },
  {
    "text": "out there light is it's called base compliance I know I didn't come up with a name but yes you know it stands for",
    "start": "2102940",
    "end": "2108220"
  },
  {
    "text": "base availability so the system is available almost all of the time it's got soft state which means that you're",
    "start": "2108220",
    "end": "2113380"
  },
  {
    "text": "not necessarily write consistent or read consistent but that you're eventually can in the e stands for eventual",
    "start": "2113380",
    "end": "2119500"
  },
  {
    "text": "consistency which means that that of that data will eventually become consistent across all the different areas so knowing whether you need acid",
    "start": "2119500",
    "end": "2127060"
  },
  {
    "text": "compliance or not or what parts of see compliance you need really will help",
    "start": "2127060",
    "end": "2132190"
  },
  {
    "text": "aid in your figuring out which data store you want to use because if you need full asset compliance there are",
    "start": "2132190",
    "end": "2137290"
  },
  {
    "text": "certain data graph databases out there that's that provides that and if you need it you've automatically narrowed your search down from 43 to a very small",
    "start": "2137290",
    "end": "2144970"
  },
  {
    "text": "number once you kind of have that that number once you kind of are able to",
    "start": "2144970",
    "end": "2150610"
  },
  {
    "text": "narrow down your choices to a smaller number really explore those choices each of the choices have very different pros",
    "start": "2150610",
    "end": "2159040"
  },
  {
    "text": "and cons to them if anyone has any specific questions we can come talk to me afterwards but I don't have time to",
    "start": "2159040",
    "end": "2165340"
  },
  {
    "text": "go through them all of all of the different pros and cons of all of them here but really explore your choices",
    "start": "2165340",
    "end": "2171670"
  },
  {
    "text": "understand what you're choosing and what you're giving up by doing that by that choice and then beware the operational",
    "start": "2171670",
    "end": "2177820"
  },
  {
    "text": "overhead craft databases I don't want to say they have more operational overhead than their relational databases but",
    "start": "2177820",
    "end": "2184090"
  },
  {
    "text": "their operational overhead is can be non it can be non insignificant especially",
    "start": "2184090",
    "end": "2189460"
  },
  {
    "text": "if you're dealing with highly distributed ones it's also something that is not familiar to most most organizations most organizations have",
    "start": "2189460",
    "end": "2196180"
  },
  {
    "text": "DBAs or people that act as DBAs or people that have done DBA work in the past and know how to make those systems",
    "start": "2196180",
    "end": "2202150"
  },
  {
    "text": "run graph databases nobody has that guy that everyone has to learn that you know",
    "start": "2202150",
    "end": "2207430"
  },
  {
    "text": "somebody on the team has to be the guy that has to learn all of those things in order to make it work so make sure you take you factor that in when you're",
    "start": "2207430",
    "end": "2213280"
  },
  {
    "text": "making your decision so once you kind of made the choice as to what data store",
    "start": "2213280",
    "end": "2219190"
  },
  {
    "text": "you're gonna use it's time to do a little bit of data modeling the",
    "start": "2219190",
    "end": "2226810"
  },
  {
    "text": "statement you'll often see about graph database modeling for graph databases is it's whiteboard friendly this is really",
    "start": "2226810",
    "end": "2233080"
  },
  {
    "text": "true and that's because your your data model in your graph because it so naturally fits into the real world",
    "start": "2233080",
    "end": "2238750"
  },
  {
    "text": "domain tends to be very close to your conceptual model I always say I always kind of put a little qualifier on there",
    "start": "2238750",
    "end": "2245950"
  },
  {
    "text": "and say it really needs to be a pragmatic conceptual model because in ideal world you could basically take",
    "start": "2245950",
    "end": "2251770"
  },
  {
    "text": "your conceptual model and make it your graph data model in the real world you have to apply the fact that your graph",
    "start": "2251770",
    "end": "2257170"
  },
  {
    "text": "database stores data in certain ways it has certain optimizations that or certain optimizations or features that",
    "start": "2257170",
    "end": "2262810"
  },
  {
    "text": "it has have that you really need to take into account when you're working with your conceptual model or with your conceptual",
    "start": "2262810",
    "end": "2268839"
  },
  {
    "text": "model when you're when you make that India graph data model you also have to take into account how you're going to traverse your data so one of the things",
    "start": "2268839",
    "end": "2275319"
  },
  {
    "text": "with a graph data is the performance of your query is going to be directly related to the amount of the graph that",
    "start": "2275319",
    "end": "2281650"
  },
  {
    "text": "you actually query at any one time in order to answer your question if you query a hundred nodes and edges in order",
    "start": "2281650",
    "end": "2287290"
  },
  {
    "text": "to answer your query it's gonna take twice as long as if you query 50 so if you're able to make your model if you're",
    "start": "2287290",
    "end": "2292690"
  },
  {
    "text": "able to know that the queries you're most likely to be hitting are the ones you hit most often and you're able to",
    "start": "2292690",
    "end": "2298060"
  },
  {
    "text": "optimize your model in some ways for that it's definitely something you want to look at if you have nothing you know",
    "start": "2298060",
    "end": "2303970"
  },
  {
    "text": "if you're starting from an existing system and you don't really know where to start but the first thing I'd suggest you do is just migrate your relational",
    "start": "2303970",
    "end": "2309940"
  },
  {
    "text": "model if you migrate your relational model across it will work what you want to do then on either whether you want",
    "start": "2309940",
    "end": "2316450"
  },
  {
    "text": "migrate your relational model across or which you start with your own conceptual model is really iterate iterate iterate on actually on your data model iterating",
    "start": "2316450",
    "end": "2323890"
  },
  {
    "text": "on your data model is a really common practice in graph data modeling that",
    "start": "2323890",
    "end": "2328900"
  },
  {
    "text": "isn't quite as common in the relational data model a lot of big enterprise is in a relational model you kick the data",
    "start": "2328900",
    "end": "2335829"
  },
  {
    "text": "modeling over to another team that team does their work send you back this is the data model you're going to use and you go and build your application in a",
    "start": "2335829",
    "end": "2342880"
  },
  {
    "text": "graph data world you really have to be able to has to be a much more interactive because as I said knowing how you're traversing your data directly",
    "start": "2342880",
    "end": "2349089"
  },
  {
    "text": "affects your query performance so being able to iterate on that data model to get the most performant and optimized",
    "start": "2349089",
    "end": "2355780"
  },
  {
    "text": "model for your system is something you really need to make sure you you build into your plan things to be concerned",
    "start": "2355780",
    "end": "2363849"
  },
  {
    "start": "2362000",
    "end": "2362000"
  },
  {
    "text": "about in data modeling um the one that almost every you almost every new graph",
    "start": "2363849",
    "end": "2372490"
  },
  {
    "text": "datum our new person to graph does that I see consistently is what's known as",
    "start": "2372490",
    "end": "2377980"
  },
  {
    "text": "symmetric relationships so in graph data modeling most graph data modeling all",
    "start": "2377980",
    "end": "2384400"
  },
  {
    "text": "the great data stores use what's called directed edges that means that you have an inverted hex and an out vertex to the",
    "start": "2384400",
    "end": "2390280"
  },
  {
    "text": "edge goes from one vertex in your system to another vertex in your system what you'll see a lot of people",
    "start": "2390280",
    "end": "2395740"
  },
  {
    "text": "especially new to graph do is they'll put one edge that goes from you know vertex a to vertex B and an edge occurs",
    "start": "2395740",
    "end": "2401500"
  },
  {
    "text": "from vertex B to vertex a that both represent the same logical construct integral just because the edge has a",
    "start": "2401500",
    "end": "2409390"
  },
  {
    "text": "direction doesn't mean you need to you can only traverse it in that direction so you can traverse an edge both of the",
    "start": "2409390",
    "end": "2414760"
  },
  {
    "text": "in direction in the out direction so there's no need to duplicate that relationship so you don't need to use",
    "start": "2414760",
    "end": "2420400"
  },
  {
    "text": "symmetric edge relationships if the edge if there's an edge going between two vertex is in both directions and they mean the same thing get rid of one of",
    "start": "2420400",
    "end": "2426940"
  },
  {
    "text": "them the next thing to always think is to look out for what I call hidden or",
    "start": "2426940",
    "end": "2432670"
  },
  {
    "text": "anaemic relationships this will happen especially if you migrate your relational database directly across your",
    "start": "2432670",
    "end": "2437800"
  },
  {
    "text": "relational database model directly across so what is it a hidden or an emic relationship well let's go back to that",
    "start": "2437800",
    "end": "2443890"
  },
  {
    "text": "initial constructs I talked about where you had an order table a products table in an order details table if you",
    "start": "2443890",
    "end": "2449230"
  },
  {
    "text": "migrated that straight across you'd have three different vertexes I'll you have two different types of edges those none",
    "start": "2449230",
    "end": "2455920"
  },
  {
    "text": "of those edges would have any properties about them they would have no metadata on because because you now have a graph",
    "start": "2455920",
    "end": "2462820"
  },
  {
    "text": "model those graph you can get rid of that one vertex and put those properties on to that as edges which will make that",
    "start": "2462820",
    "end": "2468670"
  },
  {
    "text": "edge and you know a fully-fledged part of your graph additionally adding those properties to",
    "start": "2468670",
    "end": "2475900"
  },
  {
    "text": "the edges can be a way to speed up your query because if you have to go you know as opposed to having go from a vertex to",
    "start": "2475900",
    "end": "2482710"
  },
  {
    "text": "an edge to a vertex to answer our filtering question I can go from a vertex to an edge so I've now just",
    "start": "2482710",
    "end": "2487840"
  },
  {
    "text": "topped out 50% of my traversals I can answer that quite I can filter in and out traverse in there now nodes quicker",
    "start": "2487840",
    "end": "2494530"
  },
  {
    "text": "if you're able to put those properties on the edges one of the other things",
    "start": "2494530",
    "end": "2500050"
  },
  {
    "text": "you'll hear about when you hear about graph data modeling is this concept of a super node a super node is often",
    "start": "2500050",
    "end": "2507220"
  },
  {
    "text": "referred to as the justin beaver node it what it is is it's a node in a graph that has a disproportionately high",
    "start": "2507220",
    "end": "2513609"
  },
  {
    "text": "number of incident edges to the other graph surrounding I know that problem made no sense to anybody that just what",
    "start": "2513609",
    "end": "2520330"
  },
  {
    "text": "I said so let me explain it a little bit so an incident edge in a graph is a graph an edge that either is coming in",
    "start": "2520330",
    "end": "2526300"
  },
  {
    "text": "or going out of a note pretty straightforward a super node is when you have one node",
    "start": "2526300",
    "end": "2531830"
  },
  {
    "text": "that contains like ten or a hundred or a thousand times more edges than the",
    "start": "2531830",
    "end": "2536930"
  },
  {
    "text": "average and why does that a problem or well let me give you an example of it a really common example I like to use",
    "start": "2536930",
    "end": "2542030"
  },
  {
    "text": "for this is addresses let's say you have an address and you have a country associate with that address if you",
    "start": "2542030",
    "end": "2548990"
  },
  {
    "text": "wanted to be you know if you want to be a purist of graph day of graph theory and graph modelling that country would be its own node but let's say you're in",
    "start": "2548990",
    "end": "2557000"
  },
  {
    "text": "Norway and maybe you shipped to Norway and Sweden let's say you've shipped 150 million orders well now you're gonna",
    "start": "2557000",
    "end": "2562040"
  },
  {
    "text": "have a hundred and fifty million edges either going into or going out of Norway or Sweden notes like there's a lot",
    "start": "2562040",
    "end": "2569110"
  },
  {
    "text": "that's gonna be drastically more than anything else in your graph and it's gonna return a problem if you want to",
    "start": "2569110",
    "end": "2575600"
  },
  {
    "text": "basically filter down data based like a filter or have traversals that go",
    "start": "2575600",
    "end": "2581510"
  },
  {
    "text": "through that node to filter out data so if you want add answer questions like what's the country for this address you'd be ok because you're only doing",
    "start": "2581510",
    "end": "2587690"
  },
  {
    "text": "you're following a single edge incident are you fine a single edge in to get one piece of",
    "start": "2587690",
    "end": "2593240"
  },
  {
    "text": "data but if you want to say filing every order that's been placed in this city",
    "start": "2593240",
    "end": "2598370"
  },
  {
    "text": "inside Sweden you'd start in Sweden edge then you'd look out 75 million orders and then you'd have to filter it down",
    "start": "2598370",
    "end": "2605000"
  },
  {
    "text": "after that as you can see that's quickly gonna become a very non performant query or not perform a traversal so in that",
    "start": "2605000",
    "end": "2612350"
  },
  {
    "text": "sort of scenario a lot of times what you end up doing is you'll denormalize that data onto that edge said this is kind of",
    "start": "2612350",
    "end": "2618170"
  },
  {
    "text": "where that pragmatic part of your data modelling needs to come in where you're looking at the way you're going to query",
    "start": "2618170",
    "end": "2624440"
  },
  {
    "text": "your data and adjusting your model accordingly schema schema is kind of a",
    "start": "2624440",
    "end": "2631060"
  },
  {
    "text": "hot topic in in graph the graph world if you go out and you read most of the data literature or most of the the sales",
    "start": "2631060",
    "end": "2638030"
  },
  {
    "text": "literature on you know data stores they'll talk about how there's ski our graph datastore a lot of them will talk about how their schema lists and how the",
    "start": "2638030",
    "end": "2644570"
  },
  {
    "text": "schema can constantly evolve that's true I'm not necessarily saying that having that ability is bad but you're if you if",
    "start": "2644570",
    "end": "2653240"
  },
  {
    "text": "your data store doesn't enforce a set of schema maya my suggestion is to make your applications enforce it and why is",
    "start": "2653240",
    "end": "2659540"
  },
  {
    "text": "that because if I have seven different applications writing to the same graph I",
    "start": "2659540",
    "end": "2664670"
  },
  {
    "text": "don't want to go out seven different edges to find out what product was ordered by somebody because application",
    "start": "2664670",
    "end": "2670009"
  },
  {
    "text": "a called it one thing an application be called it a different thing just for the act just for the simplicity of the of",
    "start": "2670009",
    "end": "2676309"
  },
  {
    "text": "the thing enforce that schema at your application level and because you're",
    "start": "2676309",
    "end": "2681410"
  },
  {
    "text": "doing that you can make it general because the fact that you have the ability to add properties on top of",
    "start": "2681410",
    "end": "2687259"
  },
  {
    "text": "those edges you can most of the time instead of adding specific edges you can add more general edge with a property of",
    "start": "2687259",
    "end": "2693650"
  },
  {
    "text": "a type or something like you know maybe you have a person with phone numbers well ince opposed to having a home phone",
    "start": "2693650",
    "end": "2699410"
  },
  {
    "text": "address a work phone address a mobile phone sorry not address a home phone edge a work phone edge a mobile phone",
    "start": "2699410",
    "end": "2704779"
  },
  {
    "text": "edge you can make a single the edge that just cuz has phone and it has different types inside of it it allows you to",
    "start": "2704779",
    "end": "2711019"
  },
  {
    "text": "answer questions like give me all the phone numbers for somebody or give me only the mobile phone number for somebody just as easily and much more",
    "start": "2711019",
    "end": "2717890"
  },
  {
    "text": "performant than trying to do it with three or four different edges so what",
    "start": "2717890",
    "end": "2727369"
  },
  {
    "text": "next now I told you a little bit about you know how to what to think about when you choose a data store which thing",
    "start": "2727369",
    "end": "2733789"
  },
  {
    "text": "about when you kind of do your data modeling unfortunately until you choose your data store what's next is really",
    "start": "2733789",
    "end": "2740059"
  },
  {
    "text": "dependent what comes next is very is really understanding what the data store",
    "start": "2740059",
    "end": "2745730"
  },
  {
    "text": "can do for you understanding the constraints of that data store or understanding the feature set it offers you know certain ones that offer things",
    "start": "2745730",
    "end": "2752390"
  },
  {
    "text": "like unique constraints others don't understanding that stuff is really what needs to be what you need to work",
    "start": "2752390",
    "end": "2758029"
  },
  {
    "text": "through next and since there isn't really a general statement can't go into",
    "start": "2758029",
    "end": "2763250"
  },
  {
    "text": "too much detail so kind of give a little bit of a summary what are the good",
    "start": "2763250",
    "end": "2770240"
  },
  {
    "text": "things about graph databases I mean I just spent the last probably 30 minutes here telling you why not to use a graph database but as I said I'm I like graph",
    "start": "2770240",
    "end": "2777769"
  },
  {
    "text": "databases I think they're very good at solving problems part of that is graphs are really flexible it's very easy and generally",
    "start": "2777769",
    "end": "2784700"
  },
  {
    "text": "it's very easy to extend your model to add additional attributes to add objects allowing you know your data to your data",
    "start": "2784700",
    "end": "2791539"
  },
  {
    "text": "in your data schema to evolve at a rapid pace that isn't easily done inside a relational database they're really great at",
    "start": "2791539",
    "end": "2798560"
  },
  {
    "text": "searching for relationships between items but if that's not what you want to show search they're probably not the",
    "start": "2798560",
    "end": "2803750"
  },
  {
    "text": "right solution they're a natural fit for many domains and in those domains you'll",
    "start": "2803750",
    "end": "2809510"
  },
  {
    "text": "find the things you know it's much easier and more natural to work through a graph database than it is to",
    "start": "2809510",
    "end": "2814970"
  },
  {
    "text": "necessarily try and force that into a relational database you know I always think of the relational database it's",
    "start": "2814970",
    "end": "2819980"
  },
  {
    "text": "the old the old idiom that if you know all you have is a hammer everything is a nail well hopefully you know that",
    "start": "2819980",
    "end": "2828080"
  },
  {
    "text": "relational database is our is our hammer we've all used that hammer we can put whatever we want we can use whatever we we can put whatever we want into it",
    "start": "2828080",
    "end": "2834020"
  },
  {
    "text": "doesn't make it the right tool for the job you know hopefully what you'll get out of this talk is at least a little bit of an understanding of what graph",
    "start": "2834020",
    "end": "2839750"
  },
  {
    "text": "databases are good for and now you have another tool when you'll tool about for when it's the right choice what are some",
    "start": "2839750",
    "end": "2847880"
  },
  {
    "text": "of the bad things about graph databases well the different options about graph databases scale very differently it's",
    "start": "2847880",
    "end": "2853460"
  },
  {
    "text": "very specific to the data store unfortunately there's no like rule of thumb I can give you where if you have this size thing you want this specific",
    "start": "2853460",
    "end": "2860000"
  },
  {
    "text": "thing the team working on early has to learn a new mindset it's a different way",
    "start": "2860000",
    "end": "2865130"
  },
  {
    "text": "of thinking looking at your data it's a different way of thinking about your how you query your data and it takes times a",
    "start": "2865130",
    "end": "2870860"
  },
  {
    "text": "tie takes teams time to learn that and it's still a very immature space as I",
    "start": "2870860",
    "end": "2877310"
  },
  {
    "text": "said you know it's constantly evolving it's very the tooling is not as mature",
    "start": "2877310",
    "end": "2882380"
  },
  {
    "text": "as some is what we're all used to for relational databases I mean relational databases have been around for in their current form probably about 40 or 50",
    "start": "2882380",
    "end": "2888380"
  },
  {
    "text": "years now they obviously have optimizations that far exceed what exists in the graph data space you know",
    "start": "2888380",
    "end": "2895400"
  },
  {
    "text": "the graph dated space has been around maybe 10 12 years for the property model graphs the tooling out there is nowhere",
    "start": "2895400",
    "end": "2902930"
  },
  {
    "text": "near as robust it's now in near ease easy to use I like to think of graph databases is kind of like teenagers you",
    "start": "2902930",
    "end": "2909890"
  },
  {
    "text": "can eventually get what you need out of them but sometimes it seems a lot harder than you actually want it to be oh you think it should be and then the ugly so",
    "start": "2909890",
    "end": "2919160"
  },
  {
    "text": "the ugly part is really the lack of documentation there's lots of really good documentation out there for people",
    "start": "2919160",
    "end": "2924410"
  },
  {
    "text": "that are brand-new to graph databases and people that are expert at graph there's really a lack of good documentation for people that know a",
    "start": "2924410",
    "end": "2930740"
  },
  {
    "text": "little bit but not enough it's an area that's really had there's a there's a big hole that I'm hoping to work with",
    "start": "2930740",
    "end": "2938390"
  },
  {
    "text": "people to help fill that hole the ecosystem is vast it's splintered and",
    "start": "2938390",
    "end": "2943820"
  },
  {
    "text": "it's rapidly evolving because of the immaturity of the space and because it's not as well defined set of standards and",
    "start": "2943820",
    "end": "2950120"
  },
  {
    "text": "things like that it changes all the time as I said it's very hard to keep up with some of the paces and you know the other",
    "start": "2950120",
    "end": "2957590"
  },
  {
    "text": "part here is hopefully it's helped a little bit but it's kind of hard for new users to tell good use cases versus bad use cases usually the way you do it is",
    "start": "2957590",
    "end": "2964580"
  },
  {
    "text": "by making the wrong choice so here's",
    "start": "2964580",
    "end": "2970550"
  },
  {
    "start": "2970000",
    "end": "2970000"
  },
  {
    "text": "some of my advice from kind of the trenches you know graph data stores may be great to solve your problem but",
    "start": "2970550",
    "end": "2975680"
  },
  {
    "text": "really make sure you understand what your problem is first make sure you expect when you're planning out and you",
    "start": "2975680",
    "end": "2982190"
  },
  {
    "text": "know a date an application development plan or application development lifecycle make sure you build in time for trial and error there's gonna be a",
    "start": "2982190",
    "end": "2988820"
  },
  {
    "text": "lot of trial and error you may start with one data store and find out it's not really the right choice for you and you need to switch to a second one you",
    "start": "2988820",
    "end": "2993920"
  },
  {
    "text": "may need to do that to a third one make sure you plan in time to do that",
    "start": "2993920",
    "end": "2999250"
  },
  {
    "text": "your data model is going to evolve plan for it you know as I said it's not you know a lot of enterprise applications",
    "start": "2999250",
    "end": "3005080"
  },
  {
    "text": "that you know data models are kind of set by a different team and then that's just what you build against that's not really the way it works in a graph",
    "start": "3005080",
    "end": "3011080"
  },
  {
    "text": "database at least not the way to get an efficient data model don't underestimate",
    "start": "3011080",
    "end": "3016270"
  },
  {
    "text": "the time it takes your team bring your team up speed I've been guilty of making this mistake with teams I've worked with is thinking you know oh this will take",
    "start": "3016270",
    "end": "3023380"
  },
  {
    "text": "them a week and it takes some two months as I said there's not a lot of great documentation out there sometimes the",
    "start": "3023380",
    "end": "3029980"
  },
  {
    "text": "tooling is a lot harder it's a lot more immature it a lot of it's very specific to a single to a single data store so if",
    "start": "3029980",
    "end": "3038230"
  },
  {
    "text": "you use data store and you learned how to use that tool and now you can figure it out that's not the right one you got to go to a different data store that has",
    "start": "3038230",
    "end": "3044530"
  },
  {
    "text": "a different set of tools that you need to learn how to use and you know graph databases are in a silver bullet you'll",
    "start": "3044530",
    "end": "3050500"
  },
  {
    "text": "go out there and you'll see if you go out on the web you'll see lots of things where people are claiming that craft databases will solve all your problems",
    "start": "3050500",
    "end": "3056470"
  },
  {
    "text": "and everything's you know unicorns and rainbows reality is there good for some things they're not as good",
    "start": "3056470",
    "end": "3062710"
  },
  {
    "text": "for other things and being able to kind of understand that and be able to say maybe this isn't a good use for a graph",
    "start": "3062710",
    "end": "3069250"
  },
  {
    "text": "database or maybe this part of this problem is good or use for a graph database and this part is I want to use my relational database for so really",
    "start": "3069250",
    "end": "3076150"
  },
  {
    "text": "common pattern I've run into is to use a some sort of graph database as part of a polygon persistence mechanism so that's",
    "start": "3076150",
    "end": "3085270"
  },
  {
    "text": "everything I had for you guys today are there any questions so the question was",
    "start": "3085270",
    "end": "3107590"
  },
  {
    "text": "is it common to see a part of a report reporting or a data warehouse database data lake something like that being",
    "start": "3107590",
    "end": "3114490"
  },
  {
    "text": "written in a graph database actually usually I don't see that written to a graph database as much is usually the",
    "start": "3114490",
    "end": "3119710"
  },
  {
    "text": "way I've seen that done is it's written someone uses a graph framework to do processing on it and then stores the",
    "start": "3119710",
    "end": "3124840"
  },
  {
    "text": "results of that processing out to a relational database sometimes a graph database but usually",
    "start": "3124840",
    "end": "3130330"
  },
  {
    "text": "most of the big heavy number crunching is done with a framework because especially we start talking about very",
    "start": "3130330",
    "end": "3136240"
  },
  {
    "text": "large data warehouses are very large data lakes it's a lot it can be a lot of data and it can be depending on the",
    "start": "3136240",
    "end": "3142510"
  },
  {
    "text": "question trying to answer it can take a lot of time to process through it",
    "start": "3142510",
    "end": "3146820"
  },
  {
    "text": "anybody else",
    "start": "3150000",
    "end": "3153180"
  },
  {
    "text": "so the question was is query time predictable across the number of notes",
    "start": "3158660",
    "end": "3164450"
  },
  {
    "text": "the answer to that question is in most cases yes it is sort of I mean like",
    "start": "3164450",
    "end": "3171390"
  },
  {
    "text": "anything else it's a computer if you have 90 things running on the computer and you don't have enough CPU power no but basically given everything being",
    "start": "3171390",
    "end": "3178080"
  },
  {
    "text": "equal yeah you can usually assume that twice as money did much data is going to take twice as long to process I know",
    "start": "3178080",
    "end": "3187230"
  },
  {
    "text": "it's a loaded question so the question",
    "start": "3187230",
    "end": "3199530"
  },
  {
    "text": "was is scaling the only thing I used to differentiate when choosing a graph database which graph database I choose",
    "start": "3199530",
    "end": "3205350"
  },
  {
    "text": "it's not the only thing I use but it's definitely a very it's definitely one of the biggest concerns because if you want",
    "start": "3205350",
    "end": "3212520"
  },
  {
    "text": "something that has high availability well that immediately removes certain ones that don't support that sort of thing if you need if you have something",
    "start": "3212520",
    "end": "3218910"
  },
  {
    "text": "that has you know transactional you know extremely high read and write trends a right transaction level certain",
    "start": "3218910",
    "end": "3225990"
  },
  {
    "text": "databases don't support you know multiple right replicas the other option",
    "start": "3225990",
    "end": "3231180"
  },
  {
    "text": "is you know what if there's familiarity in the team as far as any familiarity",
    "start": "3231180",
    "end": "3236760"
  },
  {
    "text": "with graph databases you know I know like there was one person up here that's used neo4j for so if all else being",
    "start": "3236760",
    "end": "3243090"
  },
  {
    "text": "equal if we have familiarity on the team of some that actually knows how to use this product I would probably choose the product that they know over other",
    "start": "3243090",
    "end": "3248820"
  },
  {
    "text": "products and the other one that comes down to is licensing costs as always you",
    "start": "3248820",
    "end": "3254760"
  },
  {
    "text": "know things cost money what's what's the expertise of the team just so you know",
    "start": "3254760",
    "end": "3260030"
  },
  {
    "text": "on that that slide show I that slide that showed all the graphs databases that is a combination of both commercial",
    "start": "3260030",
    "end": "3266280"
  },
  {
    "text": "and open source some of those are open source some of those are commercial some of those have open source versions of a",
    "start": "3266280",
    "end": "3272160"
  },
  {
    "text": "commercial product so it's kind of a there's a variety of different options out there that you can use to help make",
    "start": "3272160",
    "end": "3279030"
  },
  {
    "text": "that decision as well",
    "start": "3279030",
    "end": "3281840"
  },
  {
    "text": "anybody else okay then thank you very",
    "start": "3284180",
    "end": "3291170"
  },
  {
    "text": "much if anybody has any questions or wants",
    "start": "3291170",
    "end": "3296690"
  },
  {
    "text": "any more specific details feel free to come on down and talk to me",
    "start": "3296690",
    "end": "3301450"
  },
  {
    "text": "you",
    "start": "3308250",
    "end": "3310310"
  }
]