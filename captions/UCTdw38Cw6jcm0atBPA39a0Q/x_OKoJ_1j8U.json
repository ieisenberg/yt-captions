[
  {
    "text": "good morning again uh so nice for me to have you all here uh listening to me",
    "start": "0",
    "end": "7560"
  },
  {
    "text": "talking about grpc what it is and why you should maybe have a look at it",
    "start": "7560",
    "end": "12660"
  },
  {
    "text": "yeah so who am I I'm from Romania I'm an independent consultant",
    "start": "12660",
    "end": "17699"
  },
  {
    "text": "um I organize a.net user group I teach.net and I blog from time to time not as I often as often as I would like",
    "start": "17699",
    "end": "25260"
  },
  {
    "text": "to but I've been busy doing this I said while I'm on maternity leave I will do",
    "start": "25260",
    "end": "32099"
  },
  {
    "text": "something important to my career and I did that so A book aimed at uh beginners",
    "start": "32099",
    "end": "38780"
  },
  {
    "text": "talking about all kind of things around web and web API so if you know someone that might",
    "start": "38780",
    "end": "46260"
  },
  {
    "text": "benefit from reading that cool so I'm gonna start with the story because I like stories and since I",
    "start": "46260",
    "end": "54660"
  },
  {
    "text": "started developing with dotnet web forms does that sound familiar",
    "start": "54660",
    "end": "61620"
  },
  {
    "text": "yeah I'm sure it sounds familiar yeah so uh back in the days we had monoliths with",
    "start": "61620",
    "end": "68400"
  },
  {
    "text": "web forms because that's how the framework used to work but with the monoliths that we have back",
    "start": "68400",
    "end": "75060"
  },
  {
    "text": "then everything was very easy at least for me as a junior developer and I will have to",
    "start": "75060",
    "end": "81960"
  },
  {
    "text": "ask you who here enjoyed or enjoys why not working with monoliths",
    "start": "81960",
    "end": "88680"
  },
  {
    "text": "I I'll be the first one saying that admitting it why well because it is it",
    "start": "88680",
    "end": "95159"
  },
  {
    "text": "it gives us an easy life as developers everything gets in the same code base everything is in there you do not have",
    "start": "95159",
    "end": "101820"
  },
  {
    "text": "to worry that you will break something if you change something you don't have to orchestrate things",
    "start": "101820",
    "end": "106920"
  },
  {
    "text": "um like yeah Services other services so on the deal with the monolith is that",
    "start": "106920",
    "end": "114600"
  },
  {
    "text": "it's hard to scale in specific scenario you can scale it but will cost a lot for",
    "start": "114600",
    "end": "121040"
  },
  {
    "text": "components of the system that well maybe are not used that much so the scaling",
    "start": "121040",
    "end": "127320"
  },
  {
    "text": "for that is just waste of money okay so we started from this kind of",
    "start": "127320",
    "end": "133379"
  },
  {
    "text": "architectures where everything was self-contained we had web forms we had MVC that pretty much did the same thing",
    "start": "133379",
    "end": "139800"
  },
  {
    "text": "yeah it tried The Logical separation of the code but in the end everything was on the server side the HTML was",
    "start": "139800",
    "end": "147599"
  },
  {
    "text": "outputted from the from the server side and so on and then we realized that the",
    "start": "147599",
    "end": "154020"
  },
  {
    "text": "next big thing is to split the front end and the back end into two separate",
    "start": "154020",
    "end": "159480"
  },
  {
    "text": "things so then we started to adopt the next big thing back then like rest apis",
    "start": "159480",
    "end": "166019"
  },
  {
    "text": "yeah so I'm gonna ask another thing who here develops rest apis",
    "start": "166019",
    "end": "172580"
  },
  {
    "text": "so who here really develops the rest API respecting all the constraints that the rest should have",
    "start": "173060",
    "end": "178680"
  },
  {
    "text": "mm-hmm yeah exactly so I'll be the oh I see one hand here good for you",
    "start": "178680",
    "end": "185959"
  },
  {
    "text": "okay that's awesome yeah but let's admit it",
    "start": "186420",
    "end": "192239"
  },
  {
    "text": "most of us did the same thing we're basically having not rest API we call",
    "start": "192239",
    "end": "197819"
  },
  {
    "text": "them restful apis but we have HTTP apis that return Json yeah that's what we",
    "start": "197819",
    "end": "203940"
  },
  {
    "text": "have so since we have that and we all know that the future is distributed well",
    "start": "203940",
    "end": "211739"
  },
  {
    "text": "then we started to kind of have things like this one front end that consumes a lot of",
    "start": "211739",
    "end": "217440"
  },
  {
    "text": "back-ends then another architecture kind of appeared we have back-ends for front",
    "start": "217440",
    "end": "223620"
  },
  {
    "text": "ends and things like that and then we started to have a microservice architectures yeah having small things",
    "start": "223620",
    "end": "231239"
  },
  {
    "text": "that serve Json to be consumed by a consumer that usually is a client app or",
    "start": "231239",
    "end": "237599"
  },
  {
    "text": "why not is another server because that's basically what grpc were going to be",
    "start": "237599",
    "end": "243360"
  },
  {
    "text": "yeah so the main purpose of grpc would be to be consumed by another server",
    "start": "243360",
    "end": "249720"
  },
  {
    "text": "in the role of a consumer yes and then there might be systems that",
    "start": "249720",
    "end": "255900"
  },
  {
    "text": "have this kind of polyglot infrastructure architecture so we might",
    "start": "255900",
    "end": "262919"
  },
  {
    "text": "have like a net consuming a goal service and stuff like that",
    "start": "262919",
    "end": "268560"
  },
  {
    "text": "yeah so we might have that have you ever seen it in real life like dotnet that app",
    "start": "268560",
    "end": "276360"
  },
  {
    "text": "consuming something from java you've seen it yeah but you see there",
    "start": "276360",
    "end": "281820"
  },
  {
    "text": "are not a lot of us that have seen this this exotic thing uh in real life yeah",
    "start": "281820",
    "end": "287460"
  },
  {
    "text": "because we all know that we all have rest for everything and rest or HTTP",
    "start": "287460",
    "end": "293280"
  },
  {
    "text": "apis supposedly uh talk in Json which is common for any kind of",
    "start": "293280",
    "end": "299280"
  },
  {
    "text": "um language framework that we might need an encounter so",
    "start": "299280",
    "end": "305580"
  },
  {
    "text": "I might ask you okay so why are you here why am I here talking about grpc because",
    "start": "305580",
    "end": "311280"
  },
  {
    "text": "we all have rest right so what's wrong with it why shouldn't we",
    "start": "311280",
    "end": "316800"
  },
  {
    "text": "use rest for everything yeah if you have a messaging our sector that you're using buses queues and stuff like that yeah",
    "start": "316800",
    "end": "322800"
  },
  {
    "text": "that's another level but when you start with microservices the first thing that you do is to create an HTTP client",
    "start": "322800",
    "end": "330180"
  },
  {
    "text": "get data from one side to another because that's the normal step to do and then once you evolve your architecture",
    "start": "330180",
    "end": "336600"
  },
  {
    "text": "then you might actually use the message broker yeah so there's nothing wrong",
    "start": "336600",
    "end": "342300"
  },
  {
    "text": "with rest but we kind of use it everywhere yeah and because we use it everywhere we might have like not so",
    "start": "342300",
    "end": "350400"
  },
  {
    "text": "Performance Services or we might as well have a look at other technologies that",
    "start": "350400",
    "end": "355860"
  },
  {
    "text": "might bring an extra uh benefit for us yeah and we all know that there are",
    "start": "355860",
    "end": "361500"
  },
  {
    "text": "other Technologies out there that can maybe I know fit our solution without",
    "start": "361500",
    "end": "366600"
  },
  {
    "text": "business requirements and so on so here we go introducing a remote procedure",
    "start": "366600",
    "end": "372600"
  },
  {
    "text": "call uh well a remote procedure call it's not a thing that's new it has been around",
    "start": "372600",
    "end": "379919"
  },
  {
    "text": "since I don't know 70s or something like that yeah the whole purpose of an RPC system",
    "start": "379919",
    "end": "386819"
  },
  {
    "text": "or RPC concept is to make the system look and",
    "start": "386819",
    "end": "392160"
  },
  {
    "text": "behave like their a monolith yeah so you have a distributed system and using a",
    "start": "392160",
    "end": "398580"
  },
  {
    "text": "remote procedure calls you might get the feeling that you have the whole uh thing in one place",
    "start": "398580",
    "end": "404639"
  },
  {
    "text": "yeah so let's have a look at some code yeah so what we have here is an order we",
    "start": "404639",
    "end": "411240"
  },
  {
    "text": "call a create order we have a payment status that we want uh to process the",
    "start": "411240",
    "end": "417539"
  },
  {
    "text": "payment for and if that payment is successful yeah well we might arrange the shipping for it yeah I named it",
    "start": "417539",
    "end": "424560"
  },
  {
    "text": "maybe not so uh so good but if we look at this code there's nothing telling us that there",
    "start": "424560",
    "end": "430919"
  },
  {
    "text": "might be a network involved whenever we call the method yeah it's just call a method approach we're calling the",
    "start": "430919",
    "end": "437039"
  },
  {
    "text": "process payment for the specific order we arranged the shipping for this specific order so it's just method calls",
    "start": "437039",
    "end": "444720"
  },
  {
    "text": "it's not the new HTTP client it's not visible that we're behind the scenes or doing HTTP requests right so this is",
    "start": "444720",
    "end": "453300"
  },
  {
    "text": "what RPC has a concept does it has a network that it becomes hidden",
    "start": "453300",
    "end": "460020"
  },
  {
    "text": "once we uh we use it so RPC would make the code look local",
    "start": "460020",
    "end": "465660"
  },
  {
    "text": "right we process the payments it looks like it's in the same system like it's in",
    "start": "465660",
    "end": "471060"
  },
  {
    "text": "there yeah so it has this look at feel of color method take their instantiate",
    "start": "471060",
    "end": "477120"
  },
  {
    "text": "something called the method and so on yeah because the the main goal of an RPC",
    "start": "477120",
    "end": "482639"
  },
  {
    "text": "is to have a distributed system behave behave like a monolith okay and since",
    "start": "482639",
    "end": "488460"
  },
  {
    "text": "it's doing that the communication through the network it's transparent it's not like it's",
    "start": "488460",
    "end": "495000"
  },
  {
    "text": "yeah you look through it you're not seeing that is there so here we are introducing grpc",
    "start": "495000",
    "end": "502500"
  },
  {
    "text": "so grpc starting to in 2001 so it's not that new anymore it's new in our.net",
    "start": "502500",
    "end": "508800"
  },
  {
    "text": "ecosystem uh it all was open source like many other projects that we currently use and",
    "start": "508800",
    "end": "515520"
  },
  {
    "text": "well fast forwarding a few years we got it in.net in 2019.",
    "start": "515520",
    "end": "521880"
  },
  {
    "text": "since then um I will tell you that a lot of the tooling that you is used for grpc",
    "start": "521880",
    "end": "528300"
  },
  {
    "text": "improved so now things are way stable so now I can use the thing in production because",
    "start": "528300",
    "end": "533580"
  },
  {
    "text": "also the tooling helps me but back then things weren't that stable",
    "start": "533580",
    "end": "539519"
  },
  {
    "text": "so there was to me at least there was nothing that would have made me sad okay",
    "start": "539519",
    "end": "545279"
  },
  {
    "text": "I'm gonna use this tomorrow in a production environment yeah but nowadays if you ask me the same thing I would say",
    "start": "545279",
    "end": "550920"
  },
  {
    "text": "yes I'm using this and I'm gonna use this for specific scenarios",
    "start": "550920",
    "end": "556440"
  },
  {
    "text": "what is grpc so grpc is called contract based and it means that we will have no",
    "start": "556440",
    "end": "563279"
  },
  {
    "text": "more right click add reference package so on uh it the only thing that will be",
    "start": "563279",
    "end": "569339"
  },
  {
    "text": "common between all our project using grpc will be a file yeah how would you",
    "start": "569339",
    "end": "576540"
  },
  {
    "text": "distribute that file well it's up to you I'm going to talk about it by the end",
    "start": "576540",
    "end": "581940"
  },
  {
    "text": "it uses HTTP to by default it was especially made for this which will make it faster and now we're going to say",
    "start": "581940",
    "end": "589200"
  },
  {
    "text": "okay but I can also use HTTP 2 with a web API right yeah well",
    "start": "589200",
    "end": "596220"
  },
  {
    "text": "you can use HTTP 2 with a web API but it won't use the the protocol at its",
    "start": "596220",
    "end": "601440"
  },
  {
    "text": "fullest another thing that is very nice about grpc is that it has a different",
    "start": "601440",
    "end": "607440"
  },
  {
    "text": "serialization called protobuf which will give you a smaller payload I did a few",
    "start": "607440",
    "end": "613800"
  },
  {
    "text": "tests and it gave me for the same data about 50 50",
    "start": "613800",
    "end": "620420"
  },
  {
    "text": "smaller payload which is big I mean you're gonna reduce your",
    "start": "620420",
    "end": "625860"
  },
  {
    "text": "data transfer over the network with 50 which is awesome and if you top that with compression it becomes even better",
    "start": "625860",
    "end": "633660"
  },
  {
    "text": "and another thing is that is available in many languages it does code generation out of the box",
    "start": "633660",
    "end": "639300"
  },
  {
    "text": "it will generate client for you and the code that you're specifying there and it's all done by the the compiler the",
    "start": "639300",
    "end": "646380"
  },
  {
    "text": "protoc compiler okay so where does the grpc concept fits",
    "start": "646380",
    "end": "651480"
  },
  {
    "text": "in so how do we introduce in in our system so with ABI we had the client we",
    "start": "651480",
    "end": "657660"
  },
  {
    "text": "had the server but now in between those we will have something that is common and known by by both parties we will",
    "start": "657660",
    "end": "665700"
  },
  {
    "text": "have this protophile which is a file with a special syntax so basically the",
    "start": "665700",
    "end": "671040"
  },
  {
    "text": "the thing that is common it will be in between you'll have a file that is known both to the consumer and both of the",
    "start": "671040",
    "end": "677160"
  },
  {
    "text": "server yeah that's it so if with web API for example I know I've seen it in the",
    "start": "677160",
    "end": "683579"
  },
  {
    "text": "teams that I've worked with they created nugget packages to distribute HTTP clients",
    "start": "683579",
    "end": "689760"
  },
  {
    "text": "strongly typed ones they have retrial policy already involved in there but the",
    "start": "689760",
    "end": "695519"
  },
  {
    "text": "thing with that it was that the library that's supposed to be just the client to",
    "start": "695519",
    "end": "701160"
  },
  {
    "text": "be sent and used in every um microservice tended to I don't know to reinhairit",
    "start": "701160",
    "end": "709140"
  },
  {
    "text": "business logic which wasn't that nice yeah so",
    "start": "709140",
    "end": "714420"
  },
  {
    "text": "since you do not have the possibility of I don't know Distributing nugget packages and you have only this file",
    "start": "714420",
    "end": "719880"
  },
  {
    "text": "you're not prone to errors you won't have spaghetti code in your in your system",
    "start": "719880",
    "end": "725160"
  },
  {
    "text": "so how the protophile looks like it's fairly strange",
    "start": "725160",
    "end": "730380"
  },
  {
    "text": "it's a fairly different terminology but in the end this file will be generated",
    "start": "730380",
    "end": "735480"
  },
  {
    "text": "and it will be it will output c-sharp code yeah so it will output classes the",
    "start": "735480",
    "end": "743640"
  },
  {
    "text": "first thing that you have to do is to specify the syntax version for the protocol buffers then you need to",
    "start": "743640",
    "end": "748800"
  },
  {
    "text": "specify if you want the namespace under which the class will be generated",
    "start": "748800",
    "end": "754320"
  },
  {
    "text": "and then you will need to specify what are you exposing what are your",
    "start": "754320",
    "end": "759839"
  },
  {
    "text": "operations what are the the types that you want to Define in here so you do",
    "start": "759839",
    "end": "764880"
  },
  {
    "text": "that by simply specifying the service keyword the name of the service and you're going to say hey I have an RPC",
    "start": "764880",
    "end": "771540"
  },
  {
    "text": "method because this is what we expose name compute Fibonacci of type requested",
    "start": "771540",
    "end": "778079"
  },
  {
    "text": "number that Returns the Fibonacci result uh the thing here is that you cannot",
    "start": "778079",
    "end": "783420"
  },
  {
    "text": "have operation that have no uh parameters you would have to have something even though if that something",
    "start": "783420",
    "end": "789839"
  },
  {
    "text": "is empty yeah so you will Define a type that has no properties inside it",
    "start": "789839",
    "end": "796680"
  },
  {
    "text": "or use the the things that are already uh created by Google a message as you'll",
    "start": "796680",
    "end": "804600"
  },
  {
    "text": "see here the requested number is the name and then inside it you have like a",
    "start": "804600",
    "end": "809639"
  },
  {
    "text": "field yeah but that is not a field it will become a property once the protocol",
    "start": "809639",
    "end": "814700"
  },
  {
    "text": "compiler will run and the requested number will become a",
    "start": "814700",
    "end": "819720"
  },
  {
    "text": "c-sharp class that you will be able to use yeah the thing is in 32 number equals",
    "start": "819720",
    "end": "825180"
  },
  {
    "text": "one that is not an assignment that is uh the order in the binary",
    "start": "825180",
    "end": "830220"
  },
  {
    "text": "string yeah so once you add many properties you",
    "start": "830220",
    "end": "835260"
  },
  {
    "text": "will add them and you will equal the number and the word that you want to have it in the binary string",
    "start": "835260",
    "end": "841019"
  },
  {
    "text": "yeah so this is how it looks like it we will have a look at some code right away",
    "start": "841019",
    "end": "846480"
  },
  {
    "text": "okay so um now you have to know another syntax now",
    "start": "846480",
    "end": "852540"
  },
  {
    "text": "you have to Define files new files and these files are the ones that are getting distributed to your system yeah",
    "start": "852540",
    "end": "859860"
  },
  {
    "text": "so how you distribute them because you will have no more right click add reference or install nugget package",
    "start": "859860",
    "end": "865800"
  },
  {
    "text": "well some people are having separate repositories for it and some people are just pointing",
    "start": "865800",
    "end": "872279"
  },
  {
    "text": "um I'm just referencing these files from a specific location on the disk on the network or somewhere on the web",
    "start": "872279",
    "end": "880740"
  },
  {
    "text": "okay we're gonna see that in action uh soon enough one of the powers of grpc is that is",
    "start": "880740",
    "end": "887459"
  },
  {
    "text": "used as the protocol behind the scenes and it provides something that it's called grpc types or modes",
    "start": "887459",
    "end": "895320"
  },
  {
    "text": "which are four of them one of them is stream is unary that",
    "start": "895320",
    "end": "901199"
  },
  {
    "text": "makes client server request response pattern that we know yeah from the web API and the second the next three ones",
    "start": "901199",
    "end": "908699"
  },
  {
    "text": "can be named as streaming types because those will do streaming",
    "start": "908699",
    "end": "914699"
  },
  {
    "text": "first one will be the service streaming then client streaming and then a combination of these two the thing is",
    "start": "914699",
    "end": "921240"
  },
  {
    "text": "whenever streaming happens it happens on one TCP connection",
    "start": "921240",
    "end": "926339"
  },
  {
    "text": "yeah so what will happen is that a consumer usually still a server",
    "start": "926339",
    "end": "933240"
  },
  {
    "text": "will issue requests that request will be uh processed and you'll send the",
    "start": "933240",
    "end": "938639"
  },
  {
    "text": "response back yeah how do you define such method in your service protofile",
    "start": "938639",
    "end": "944459"
  },
  {
    "text": "well easy you say that it's a RPC you give it a name you give it an input and",
    "start": "944459",
    "end": "949680"
  },
  {
    "text": "you also give a return type that you also need to Define the deal is the consumer needs to",
    "start": "949680",
    "end": "956940"
  },
  {
    "text": "initiate the communication yeah so it the server cannot say hey I'm going to send you messages no it doesn't work",
    "start": "956940",
    "end": "963420"
  },
  {
    "text": "like that server streaming is a client initiating",
    "start": "963420",
    "end": "968940"
  },
  {
    "text": "opening a communication Channel the server receiving uh that request and",
    "start": "968940",
    "end": "975420"
  },
  {
    "text": "then it will answer one answer with several things over the same connection so this is streaming it will stream",
    "start": "975420",
    "end": "981899"
  },
  {
    "text": "bytes of data so it's not signalr it cannot like broadcast to different",
    "start": "981899",
    "end": "988440"
  },
  {
    "text": "clients but the clients can open a communication Channel and it will reuse the same connection",
    "start": "988440",
    "end": "994920"
  },
  {
    "text": "server streaming can be written just by using by addict",
    "start": "994920",
    "end": "1001040"
  },
  {
    "text": "the stream keyword near to the the part that you wanted if you want to respond with a stream of outputs then you add",
    "start": "1001040",
    "end": "1008360"
  },
  {
    "text": "the stream stream keyword to the part that you want it to be streamed",
    "start": "1008360",
    "end": "1013820"
  },
  {
    "text": "client streaming Works in a similar manner but this time the clients sends",
    "start": "1013820",
    "end": "1019459"
  },
  {
    "text": "several pieces of data over the same connection and the server will respond with only one thing yeah",
    "start": "1019459",
    "end": "1026298"
  },
  {
    "text": "so uh how do you write that by adding the stream keyword to the part that will",
    "start": "1026299",
    "end": "1033020"
  },
  {
    "text": "be streamed okay think about scenarios where we need to upload big uh",
    "start": "1033020",
    "end": "1039079"
  },
  {
    "text": "data like I don't know uploading a movie uh a recording or something like that we",
    "start": "1039079",
    "end": "1045380"
  },
  {
    "text": "can chunk the big data and several pieces and we can stream it to the server that would be a good scenario or",
    "start": "1045380",
    "end": "1052340"
  },
  {
    "text": "another thing maybe upload data from different sensors in the iot scenarios",
    "start": "1052340",
    "end": "1059360"
  },
  {
    "text": "think about it you're opening a connection towards the server to send something and you send something very",
    "start": "1059360",
    "end": "1065900"
  },
  {
    "text": "often with RPC or grpc you might as well just open a connection and whenever you have",
    "start": "1065900",
    "end": "1071840"
  },
  {
    "text": "something to send you will send over the same connection so it won't be like new connection new connection new connection",
    "start": "1071840",
    "end": "1077900"
  },
  {
    "text": "every time it will be just one connection and whenever you have something to say send you'll reuse the",
    "start": "1077900",
    "end": "1084020"
  },
  {
    "text": "the same connection bi-directional it works combining the",
    "start": "1084020",
    "end": "1089960"
  },
  {
    "text": "two um parts and how do we write that just by adding",
    "start": "1089960",
    "end": "1095900"
  },
  {
    "text": "the same keyword to the input and to the output that's it okay so uh",
    "start": "1095900",
    "end": "1102620"
  },
  {
    "text": "let's demo some things",
    "start": "1102620",
    "end": "1105880"
  },
  {
    "text": "I think I'm gonna just make sure that everyone sees what I have",
    "start": "1109100",
    "end": "1115160"
  },
  {
    "text": "here okay gonna try to zoom it in",
    "start": "1115160",
    "end": "1123080"
  },
  {
    "text": "at the default project with Visual Studio at least it has the things that",
    "start": "1123080",
    "end": "1130100"
  },
  {
    "text": "we already know it has the programs yes it has an app settings but it will have",
    "start": "1130100",
    "end": "1135260"
  },
  {
    "text": "no no controllers folder like web API does it will have a produce folder and a",
    "start": "1135260",
    "end": "1140840"
  },
  {
    "text": "Services yeah so let's have a look here in the products for uh folder you add",
    "start": "1140840",
    "end": "1148280"
  },
  {
    "text": "your protocol buffer files yeah so I hope this is visible",
    "start": "1148280",
    "end": "1154640"
  },
  {
    "text": "far back that's the best I can do",
    "start": "1154640",
    "end": "1159799"
  },
  {
    "text": "okay so I have a service named greeter with four methods",
    "start": "1159799",
    "end": "1165919"
  },
  {
    "text": "one of them is unary server streaming you'll see that it has only an input but it returns a stream of",
    "start": "1165919",
    "end": "1176200"
  },
  {
    "text": "responses so it's going to be once again and several things out this is gonna how",
    "start": "1176200",
    "end": "1182000"
  },
  {
    "text": "it's gonna work on the client stream it's the other way around it has a lot of inputs and it will return",
    "start": "1182000",
    "end": "1189200"
  },
  {
    "text": "only one thing out and in the bi-directional part it will be many ins many outs yeah so depending",
    "start": "1189200",
    "end": "1196700"
  },
  {
    "text": "on uh what we have the message is that are",
    "start": "1196700",
    "end": "1201740"
  },
  {
    "text": "defined I call them requests I call them I gave them like a single property",
    "start": "1201740",
    "end": "1206780"
  },
  {
    "text": "because the purpose was to show you how it really works not to make complicated things",
    "start": "1206780",
    "end": "1212140"
  },
  {
    "text": "once you define these messages you can Define like your types your correspondent",
    "start": "1212140",
    "end": "1218059"
  },
  {
    "text": "um from your c-sharp classes in here you can import them just like you would do",
    "start": "1218059",
    "end": "1223220"
  },
  {
    "text": "for with CSS files yeah you import one here there one thing there and you're",
    "start": "1223220",
    "end": "1229280"
  },
  {
    "text": "gonna work in the end you can also Define like nested types if that's the",
    "start": "1229280",
    "end": "1234440"
  },
  {
    "text": "case so maybe the request will have another property that is of type message and so on and so forth",
    "start": "1234440",
    "end": "1241940"
  },
  {
    "text": "what happens is whenever you build this in this thing something will be",
    "start": "1241940",
    "end": "1247220"
  },
  {
    "text": "generated for you you'll find that generated file under",
    "start": "1247220",
    "end": "1253940"
  },
  {
    "text": "here in the debug object debug net version that you have you'll see that",
    "start": "1253940",
    "end": "1259340"
  },
  {
    "text": "there will be like two separate classes generated on build so what Visual Studio",
    "start": "1259340",
    "end": "1265580"
  },
  {
    "text": "does is to run a proto-c CLI command and obtain this so you can also do it by",
    "start": "1265580",
    "end": "1271100"
  },
  {
    "text": "hand if you want without using visual studio okay and this classes have a funky",
    "start": "1271100",
    "end": "1277880"
  },
  {
    "text": "looking uh yeah we do not I advise you not to modify this because",
    "start": "1277880",
    "end": "1285020"
  },
  {
    "text": "otherwise the results won't be predictable client your PC here",
    "start": "1285020",
    "end": "1291860"
  },
  {
    "text": "the same this is the generated is you see the classes are generated as",
    "start": "1291860",
    "end": "1297500"
  },
  {
    "text": "being partial it they have the name that you generated you have the service the",
    "start": "1297500",
    "end": "1302960"
  },
  {
    "text": "namespace in there and stuff like that okay so what do we",
    "start": "1302960",
    "end": "1308120"
  },
  {
    "text": "do with this generated code because okay we obtained that but we also need to",
    "start": "1308120",
    "end": "1313460"
  },
  {
    "text": "give it an implementation because it's not only necessary okay I'm gonna do the definition here who you work with soap",
    "start": "1313460",
    "end": "1320900"
  },
  {
    "text": "services having that wizal file yeah",
    "start": "1320900",
    "end": "1326299"
  },
  {
    "text": "I could say that I might be opinionated but this protocol might be the version",
    "start": "1326299",
    "end": "1331340"
  },
  {
    "text": "the modern version of The Whistle yes because if we look at that",
    "start": "1331340",
    "end": "1336740"
  },
  {
    "text": "we see what we're exposing yeah there will be a method called say hello that will receive this as an input and we'll",
    "start": "1336740",
    "end": "1343400"
  },
  {
    "text": "output that as an output yeah so uh it's our job to take the",
    "start": "1343400",
    "end": "1349100"
  },
  {
    "text": "generated code and to give an actual implementation to be used further yeah",
    "start": "1349100",
    "end": "1354260"
  },
  {
    "text": "so what we're going to do we will create a service and then once we create the service we",
    "start": "1354260",
    "end": "1360740"
  },
  {
    "text": "will have to register it and uh startup to be bundled yeah and when we",
    "start": "1360740",
    "end": "1367700"
  },
  {
    "text": "do that we might go ahead and say hey I needed to extend greater greater base",
    "start": "1367700",
    "end": "1373460"
  },
  {
    "text": "greater base is automatically generated is the funky looking code that we've seen yeah and in there if we write hey public",
    "start": "1373460",
    "end": "1380900"
  },
  {
    "text": "override something it will give us what we have to be",
    "start": "1380900",
    "end": "1387500"
  },
  {
    "text": "generated yeah in here I already wrote the code for every method but if I",
    "start": "1387500",
    "end": "1393679"
  },
  {
    "text": "haven't done that I would be prompted hey you",
    "start": "1393679",
    "end": "1398960"
  },
  {
    "text": "can overwrite the say hello yeah so the say hello method it will be an override",
    "start": "1398960",
    "end": "1404659"
  },
  {
    "text": "from the base that is generated with protossif compiler uh it hasn't",
    "start": "1404659",
    "end": "1411140"
  },
  {
    "text": "I don't know what happens it has a request a request um as a parameter and it has a second",
    "start": "1411140",
    "end": "1417980"
  },
  {
    "text": "parameter that we cannot get rid of cold server called context",
    "start": "1417980",
    "end": "1424400"
  },
  {
    "text": "okay what's happening my laptop is acting out",
    "start": "1424400",
    "end": "1429740"
  },
  {
    "text": "which is not cool at all okay and the server call context it's something that relates to the grpc",
    "start": "1429740",
    "end": "1436400"
  },
  {
    "text": "request itself you can obtain from there for example the actual HTTP context that we all know",
    "start": "1436400",
    "end": "1443059"
  },
  {
    "text": "from web API or MVC we can call the context parameter get HTTP context and",
    "start": "1443059",
    "end": "1448940"
  },
  {
    "text": "we will get everything in there we can access the headers we can access everything that's HTTP related and we",
    "start": "1448940",
    "end": "1455120"
  },
  {
    "text": "all know and we can even access the current users if we have authentication in place yeah",
    "start": "1455120",
    "end": "1461200"
  },
  {
    "text": "or if we have client certificates and stuff like that",
    "start": "1461200",
    "end": "1466820"
  },
  {
    "text": "okay so now that we have the server and by the way you're going to have access",
    "start": "1466820",
    "end": "1472580"
  },
  {
    "text": "to this code at the end so no uh no need to take pictures or something like that okay what I'm gonna show you is I have a",
    "start": "1472580",
    "end": "1481100"
  },
  {
    "text": "few console apps running one of them will be the server that I",
    "start": "1481100",
    "end": "1487880"
  },
  {
    "text": "just show you um running let me clear this out so I'm going to dot net",
    "start": "1487880",
    "end": "1494380"
  },
  {
    "text": "sorry run no build",
    "start": "1494380",
    "end": "1499000"
  },
  {
    "text": "and what's gonna happen is that it's gonna listen on this port so now once my",
    "start": "1499580",
    "end": "1505520"
  },
  {
    "text": "grpc server is up I can do grpc request to it and how will I do that just by",
    "start": "1505520",
    "end": "1512360"
  },
  {
    "text": "using other console apps what I have in here is a unary console",
    "start": "1512360",
    "end": "1518840"
  },
  {
    "text": "application so nothing fancy but I want you to see",
    "start": "1518840",
    "end": "1526100"
  },
  {
    "text": "that under the dependencies I have no dependency to my server so",
    "start": "1526100",
    "end": "1532039"
  },
  {
    "text": "basically it doesn't know which the server where is the server what is the server code and stuff like that it",
    "start": "1532039",
    "end": "1537440"
  },
  {
    "text": "doesn't know yeah the only thing that this specific project knows is where is my protocol protocol file basically yeah",
    "start": "1537440",
    "end": "1545360"
  },
  {
    "text": "so if I right click and say when I did the project I'm gonna see a thing here",
    "start": "1545360",
    "end": "1552639"
  },
  {
    "text": "say hey I'm going to include from the server project products folder a file",
    "start": "1552919",
    "end": "1559100"
  },
  {
    "text": "name grid and here I'm going to behave like I am oh wow",
    "start": "1559100",
    "end": "1565460"
  },
  {
    "text": "exactly go like I'm a client so I'm going to be a client for um for for a server another thing that",
    "start": "1565460",
    "end": "1572840"
  },
  {
    "text": "we could do in here which is fairly new in visual studio and it helps a lot is to Simply say right click",
    "start": "1572840",
    "end": "1580100"
  },
  {
    "text": "add and you'll say add service reference and from here you're going to see this",
    "start": "1580100",
    "end": "1585980"
  },
  {
    "text": "prompt that is going to ask you hey what do you want to add an open API a WCF or",
    "start": "1585980",
    "end": "1591200"
  },
  {
    "text": "a grpc and if you click grpc it's going to prompt you to browse and find the",
    "start": "1591200",
    "end": "1598039"
  },
  {
    "text": "file that you want to be visible to this specific project and if you click browse",
    "start": "1598039",
    "end": "1604159"
  },
  {
    "text": "um you're gonna go to the server part you're going to see the protocol file select the grid Proto",
    "start": "1604159",
    "end": "1611900"
  },
  {
    "text": "and in here you can select what kind what code you wanted to have client",
    "start": "1611900",
    "end": "1617480"
  },
  {
    "text": "server content server or messages only so only the types that you define the request or the response kind",
    "start": "1617480",
    "end": "1624919"
  },
  {
    "text": "you're gonna click finish and you'll see it's gonna install or not a few projects that's an older version",
    "start": "1624919",
    "end": "1631400"
  },
  {
    "text": "uh but in the end it will make the classes generated",
    "start": "1631400",
    "end": "1637340"
  },
  {
    "text": "for you discoverable in this project so you can either do that and it will work",
    "start": "1637340",
    "end": "1642679"
  },
  {
    "text": "if you have a new project or you can either go and just edit this and add by hand the location of the file and the",
    "start": "1642679",
    "end": "1650000"
  },
  {
    "text": "fact that this is a client on the server side I'm going to show you the difference for this",
    "start": "1650000",
    "end": "1656659"
  },
  {
    "text": "on the server side if you edit the project file you'll notice that it has pretty much",
    "start": "1656659",
    "end": "1662120"
  },
  {
    "text": "the same thing yeah so it points to the grid protophile and it says that this in here behaves",
    "start": "1662120",
    "end": "1669440"
  },
  {
    "text": "like a server so that's what it makes a specific project be the client so the",
    "start": "1669440",
    "end": "1675140"
  },
  {
    "text": "consumer of a service or the service itself yeah and every time you need to uh you want",
    "start": "1675140",
    "end": "1681320"
  },
  {
    "text": "and need to add another protocol file you need to make sure that you include it in here to be discoverable",
    "start": "1681320",
    "end": "1687320"
  },
  {
    "text": "um and also that you register the service okay",
    "start": "1687320",
    "end": "1692419"
  },
  {
    "text": "things code related since I show you how you can add",
    "start": "1692419",
    "end": "1698539"
  },
  {
    "text": "and reference a protocol file I can also show you how you can consume a specific",
    "start": "1698539",
    "end": "1705400"
  },
  {
    "text": "service so what's going to happen using this grpcnet client this is the Nugget",
    "start": "1705400",
    "end": "1712820"
  },
  {
    "text": "package that you will need to install in order to make something work with grpc to consume grpc Services you can say hey",
    "start": "1712820",
    "end": "1719960"
  },
  {
    "text": "I need for this specific address our server will run under this port",
    "start": "1719960",
    "end": "1725600"
  },
  {
    "text": "I needed to create the channel so it's a communication Channel yeah so once you create that and pass options to it you",
    "start": "1725600",
    "end": "1732380"
  },
  {
    "text": "can also send for example that um you can configure retry policies in",
    "start": "1732380",
    "end": "1737720"
  },
  {
    "text": "there out of the box hedging policies you can pass here there are like",
    "start": "1737720",
    "end": "1743720"
  },
  {
    "text": "authentication things like token bearers stuff like that so that's a HTTP level",
    "start": "1743720",
    "end": "1751159"
  },
  {
    "text": "below you'll see that we are creating clients that are pretty much similar to",
    "start": "1751159",
    "end": "1756380"
  },
  {
    "text": "what we use in web API clients you'll create a client you'll instantiate the client pass the address stuff like that",
    "start": "1756380",
    "end": "1762620"
  },
  {
    "text": "and then just call methods that's what happens here so greater",
    "start": "1762620",
    "end": "1767659"
  },
  {
    "text": "greater client it is part of those funky looking classes generated from our protophile",
    "start": "1767659",
    "end": "1774620"
  },
  {
    "text": "and we'll simply pass the channel in it and then we need to create our request passive value and just",
    "start": "1774620",
    "end": "1782000"
  },
  {
    "text": "call the the user client and call the method that we we want so we're going to call him",
    "start": "1782000",
    "end": "1788299"
  },
  {
    "text": "here say hello passing in the request okay so you see here the client has what",
    "start": "1788299",
    "end": "1794659"
  },
  {
    "text": "we defined the protofile bi-directional client stream uh server stream and so on",
    "start": "1794659",
    "end": "1801500"
  },
  {
    "text": "yeah so uh the client itself used from another app want to know if you",
    "start": "1801500",
    "end": "1808360"
  },
  {
    "text": "implemented the actual Logic for the specific method but once you defined it in here it will",
    "start": "1808360",
    "end": "1816320"
  },
  {
    "text": "be visible and discoverable but it will draw exceptions that hey yeah it's not implemented",
    "start": "1816320",
    "end": "1821960"
  },
  {
    "text": "yeah so it's up to you to provide the actual logic in your service",
    "start": "1821960",
    "end": "1827539"
  },
  {
    "text": "getting back to our demo service listening and on the right side I'm gonna have",
    "start": "1827539",
    "end": "1835039"
  },
  {
    "text": "another client app that will do will run our console consumer",
    "start": "1835039",
    "end": "1840860"
  },
  {
    "text": "so I'm going to dotnet run yeah so what we see here is that is",
    "start": "1840860",
    "end": "1848419"
  },
  {
    "text": "sending a message and it gets back a response with Oslo value which is the value that we sent",
    "start": "1848419",
    "end": "1856299"
  },
  {
    "text": "and it also adds another thing uh the the server that it runs because I'm",
    "start": "1856299",
    "end": "1861679"
  },
  {
    "text": "always I'm gonna show you the the client load balancing okay so let's see what happened on the",
    "start": "1861679",
    "end": "1867980"
  },
  {
    "text": "server side because that's very important I'm gonna try and do this on the server side",
    "start": "1867980",
    "end": "1875000"
  },
  {
    "text": "we will see that these are HTTP too yeah so that's the port that it runs on it is",
    "start": "1875000",
    "end": "1882799"
  },
  {
    "text": "a post request so every time you're using uh you're making a grpc call it will be an actual",
    "start": "1882799",
    "end": "1890659"
  },
  {
    "text": "post request so you cannot have like get requests put updates batch delete and",
    "start": "1890659",
    "end": "1897500"
  },
  {
    "text": "some stuff like that which comes with a drawback having posts",
    "start": "1897500",
    "end": "1903320"
  },
  {
    "text": "means you'll have no caching yeah so the only thing that you'll benefit from is the small payload the",
    "start": "1903320",
    "end": "1909980"
  },
  {
    "text": "serialization and pretty much that's it and you'll see that it calls the end",
    "start": "1909980",
    "end": "1915320"
  },
  {
    "text": "point um greater grid say hello this is the end point it's not an actual endpoint",
    "start": "1915320",
    "end": "1921799"
  },
  {
    "text": "it's an operation over the network and it has the application grpc mime type in here yeah so that will",
    "start": "1921799",
    "end": "1930200"
  },
  {
    "text": "happen every uh single time you do call grpc operation",
    "start": "1930200",
    "end": "1936500"
  },
  {
    "text": "okay so that's what happens on the server side you'll see here with that I turned in um",
    "start": "1936500",
    "end": "1943880"
  },
  {
    "text": "the trace logging option and it it does and writes every single step that it uh",
    "start": "1943880",
    "end": "1951140"
  },
  {
    "text": "so it's ending the message it serialized the server response it has this amount",
    "start": "1951140",
    "end": "1956299"
  },
  {
    "text": "of size and then it compresses the message with the gzip and coding",
    "start": "1956299",
    "end": "1961700"
  },
  {
    "text": "and then it actually sends the message and then it finished executing the",
    "start": "1961700",
    "end": "1967159"
  },
  {
    "text": "endpoint and stuff like that so you can get all these small steps just by turning the logging on on Trace",
    "start": "1967159",
    "end": "1975380"
  },
  {
    "text": "on this next part since we're having urinary we will have to have a look at",
    "start": "1975380",
    "end": "1983179"
  },
  {
    "text": "the client string for example the client streaming is super easy so basically you're calling the method",
    "start": "1983179",
    "end": "1990500"
  },
  {
    "text": "and the simple logic that I could add in here is just to have a for Loop that",
    "start": "1990500",
    "end": "1996620"
  },
  {
    "text": "will write to the request stream every for every eye that I send a new",
    "start": "1996620",
    "end": "2002260"
  },
  {
    "text": "request type and then I'm going to wait uh for the requesting to be complete and",
    "start": "2002260",
    "end": "2008380"
  },
  {
    "text": "well just I I'm going to write in the console let's see that in action",
    "start": "2008380",
    "end": "2013659"
  },
  {
    "text": "okay so units done the server is still listening and on the client stream",
    "start": "2013659",
    "end": "2021220"
  },
  {
    "text": "I'm gonna do the same dot net run",
    "start": "2021220",
    "end": "2027120"
  },
  {
    "text": "hoping this won't and what I want you to see on the left side on the server part that it moves",
    "start": "2029080",
    "end": "2037179"
  },
  {
    "text": "yeah it receives things from the client and it will keep receiving things until",
    "start": "2037179",
    "end": "2042460"
  },
  {
    "text": "our I gets to the maximum value fingers crossed we're going to wait a",
    "start": "2042460",
    "end": "2047740"
  },
  {
    "text": "bit okay and it stopped it it said that okay it's",
    "start": "2047740",
    "end": "2056158"
  },
  {
    "text": "gzipped the thing received the message reading the message no message to return",
    "start": "2056159",
    "end": "2061839"
  },
  {
    "text": "stuff like that and in here uh this number is the last",
    "start": "2061839",
    "end": "2067300"
  },
  {
    "text": "value the server receives so it's one single response to the client yeah in",
    "start": "2067300",
    "end": "2072638"
  },
  {
    "text": "here we sent many many many many many many messages from the client the server will still be listening and",
    "start": "2072639",
    "end": "2080679"
  },
  {
    "text": "on the right hand side we're going to try the server side server streaming server streaming means",
    "start": "2080679",
    "end": "2086580"
  },
  {
    "text": "that once the client issues the request it will receive a lot of things back so",
    "start": "2086580",
    "end": "2092740"
  },
  {
    "text": "I'm going to dotnet run you see the server sends things",
    "start": "2092740",
    "end": "2099220"
  },
  {
    "text": "and the client sees those things and write them into console",
    "start": "2099220",
    "end": "2105660"
  },
  {
    "text": "that's is the same scenario with an I that goes",
    "start": "2105700",
    "end": "2111160"
  },
  {
    "text": "back and I hope I didn't add too many too many",
    "start": "2111160",
    "end": "2116740"
  },
  {
    "text": "eyes in there okay stop it now where are we gonna stop",
    "start": "2116740",
    "end": "2123579"
  },
  {
    "text": "it I know it stops itself okay so uh this is what the server sent back so this is",
    "start": "2123579",
    "end": "2130300"
  },
  {
    "text": "the last value and there's another thing that we're gonna talk about um",
    "start": "2130300",
    "end": "2135400"
  },
  {
    "text": "in a few minutes okay let's see how the",
    "start": "2135400",
    "end": "2140560"
  },
  {
    "text": "client code looks like for this server streaming it uses the same approach",
    "start": "2140560",
    "end": "2147099"
  },
  {
    "text": "it opens the channel yeah it passes in the address where it can find the server",
    "start": "2147099",
    "end": "2152260"
  },
  {
    "text": "and then it simply calls the server stream with a new request yeah",
    "start": "2152260",
    "end": "2158079"
  },
  {
    "text": "and for which response received it will write the response in the console yeah",
    "start": "2158079",
    "end": "2164079"
  },
  {
    "text": "so this is a simple code just awaiting and reading from the response stream yes",
    "start": "2164079",
    "end": "2170140"
  },
  {
    "text": "on one part it's writing to the response stream and this is reading for the from",
    "start": "2170140",
    "end": "2175480"
  },
  {
    "text": "the response stream okay let's see also on the server side how",
    "start": "2175480",
    "end": "2181000"
  },
  {
    "text": "the service looks like so server stream yeah writes a message and writes in the",
    "start": "2181000",
    "end": "2187660"
  },
  {
    "text": "response to to push things to the client yeah um you'll see here that you have the",
    "start": "2187660",
    "end": "2195280"
  },
  {
    "text": "request so the type that you get in and then you have a server stream uh",
    "start": "2195280",
    "end": "2200859"
  },
  {
    "text": "I server stream writer which means that you need to use that to write just like you would use it with a memory stream",
    "start": "2200859",
    "end": "2206160"
  },
  {
    "text": "and then the server called context that you cannot get rid of it it will be there the only thing that will be funny",
    "start": "2206160",
    "end": "2214359"
  },
  {
    "text": "about it the server called context it's when you're going to implement like unit test over grpc you will have to to pass",
    "start": "2214359",
    "end": "2221380"
  },
  {
    "text": "that also as a parameter okay and uh bi-directional one",
    "start": "2221380",
    "end": "2228579"
  },
  {
    "text": "um I'm gonna demo soon enough so you have an eye stream stream reader you have to",
    "start": "2228579",
    "end": "2234460"
  },
  {
    "text": "read from the the consumer and you'll have to write back and you'll have the the context in there",
    "start": "2234460",
    "end": "2242320"
  },
  {
    "text": "and then uh while you still have things in the request stream because the one",
    "start": "2242320",
    "end": "2248079"
  },
  {
    "text": "that initially is the communication channel is the client so you'll have to see while I have something to read from I'm going to also write what I can",
    "start": "2248079",
    "end": "2254380"
  },
  {
    "text": "receive so that's the the biggest logic in here you can accept access the current uh",
    "start": "2254380",
    "end": "2262300"
  },
  {
    "text": "message from the grpc channel by using request stream dot current so that will",
    "start": "2262300",
    "end": "2268420"
  },
  {
    "text": "give you um the type that is sent in uh request usually",
    "start": "2268420",
    "end": "2274660"
  },
  {
    "text": "okay let's see how that looks like so we have the server listening and then we",
    "start": "2274660",
    "end": "2279760"
  },
  {
    "text": "have the bi-directional one which is going to do the same dot net run",
    "start": "2279760",
    "end": "2286859"
  },
  {
    "text": "yeah so what I want you to see is that it's sending an eye going to this value and then um the server says okay I'm",
    "start": "2287920",
    "end": "2294280"
  },
  {
    "text": "gonna I received this and send basically the value back uh one thing I'm going to run it again with the no build this time",
    "start": "2294280",
    "end": "2303160"
  },
  {
    "text": "since save some time I'm gonna run it again until I get a",
    "start": "2303160",
    "end": "2309400"
  },
  {
    "text": "scrambled uh kind of looking yeah finally",
    "start": "2309400",
    "end": "2315760"
  },
  {
    "text": "you you'll see here that it's it looks like it's not in order yeah but in fact the order is guaranteed",
    "start": "2315760",
    "end": "2323320"
  },
  {
    "text": "once you're sending uh data the data received on the server side is guaranteed yeah so it's not uh scrambled",
    "start": "2323320",
    "end": "2331420"
  },
  {
    "text": "around so as you can see here it's still in order sending seven then sending eight then sending nine yeah and on the",
    "start": "2331420",
    "end": "2339579"
  },
  {
    "text": "server side server said it receives zero then one then two and three and stuff",
    "start": "2339579",
    "end": "2345220"
  },
  {
    "text": "like that so they're not saying like Okay I received the first one and then the seventh one and stuff like that it's",
    "start": "2345220",
    "end": "2350619"
  },
  {
    "text": "it's in order even though the order is kind of combined okay",
    "start": "2350619",
    "end": "2356920"
  },
  {
    "text": "what else I need to show you here if you have questions I'm here",
    "start": "2356920",
    "end": "2363460"
  },
  {
    "text": "um one thing getting back to the internals of grpc",
    "start": "2363460",
    "end": "2369400"
  },
  {
    "text": "there are a few things that they brag about and they that you",
    "start": "2369400",
    "end": "2375760"
  },
  {
    "text": "need to know for example in grpc the status codes are not the status codes that we know",
    "start": "2375760",
    "end": "2382960"
  },
  {
    "text": "and that might be like confusing when it comes to uh grpc you will have like 16",
    "start": "2382960",
    "end": "2389619"
  },
  {
    "text": "status codes specific to the grpc request itself and then on top of that",
    "start": "2389619",
    "end": "2394839"
  },
  {
    "text": "you have the HTTP ones that we all know like 404 401 403 that we all use with",
    "start": "2394839",
    "end": "2400599"
  },
  {
    "text": "web API yeah another thing is um everything related to data validation",
    "start": "2400599",
    "end": "2408099"
  },
  {
    "text": "and uh bad things happening in grpc it's an",
    "start": "2408099",
    "end": "2415119"
  },
  {
    "text": "exception you'll throw exceptions every time a thing that doesn't work as expected yeah so you'll have to filter",
    "start": "2415119",
    "end": "2422800"
  },
  {
    "text": "that if you have a specific need for example I should be in here",
    "start": "2422800",
    "end": "2430359"
  },
  {
    "text": "one of them in here yeah so on the bi-directional",
    "start": "2430359",
    "end": "2436720"
  },
  {
    "text": "one you'll see that I am using a try cats block and say hey in case of an RPC",
    "start": "2436720",
    "end": "2442960"
  },
  {
    "text": "exception do something but now we have the option of just filtering if the status code is",
    "start": "2442960",
    "end": "2449619"
  },
  {
    "text": "canceled write this so you can do that for every other",
    "start": "2449619",
    "end": "2454720"
  },
  {
    "text": "things that you need for example if the data that you're sending is not valid throw an exception and catch it on the",
    "start": "2454720",
    "end": "2461320"
  },
  {
    "text": "client side one thing is that once you're putting in production you'll have to map the status codes",
    "start": "2461320",
    "end": "2467260"
  },
  {
    "text": "with messages that you add to a middleware maybe to create like a",
    "start": "2467260",
    "end": "2472359"
  },
  {
    "text": "generic way of treating exception in writing error codes",
    "start": "2472359",
    "end": "2477760"
  },
  {
    "text": "okay another thing that word needs to be mentioned is that you can cancel",
    "start": "2477760",
    "end": "2486359"
  },
  {
    "text": "requests you can specify for example for each a call that hey if I do not get a",
    "start": "2486660",
    "end": "2494140"
  },
  {
    "text": "response back in this amount of time kill it so treat it as okay I do not",
    "start": "2494140",
    "end": "2500440"
  },
  {
    "text": "care anymore it takes too much time also you can't pour call to send a",
    "start": "2500440",
    "end": "2506560"
  },
  {
    "text": "cancellation token so if something takes too much you can like always forget",
    "start": "2506560",
    "end": "2511960"
  },
  {
    "text": "about it and this is a for every method that you can Define in",
    "start": "2511960",
    "end": "2518500"
  },
  {
    "text": "there another thing besides um",
    "start": "2518500",
    "end": "2523540"
  },
  {
    "text": "RPC extra exceptions it's going to display yeah",
    "start": "2523540",
    "end": "2531099"
  },
  {
    "text": "um is around interceptors you'll have an additional way of injecting yourself in",
    "start": "2531099",
    "end": "2536140"
  },
  {
    "text": "the request pipeline besides middlewares you can intercept and write code to intercept what uh the calls Port type",
    "start": "2536140",
    "end": "2543880"
  },
  {
    "text": "you can intercept unary calls on the consuming part you can do logging and",
    "start": "2543880",
    "end": "2549520"
  },
  {
    "text": "add authorization details in there and then you can intercept the server side",
    "start": "2549520",
    "end": "2555040"
  },
  {
    "text": "just right before the the method is executed so you can add a read in there",
    "start": "2555040",
    "end": "2560440"
  },
  {
    "text": "like headers or add other headers and stuff like that so that will be run after the middleware run so it's somehow",
    "start": "2560440",
    "end": "2567520"
  },
  {
    "text": "at a lower level than um the framework middlewares",
    "start": "2567520",
    "end": "2573339"
  },
  {
    "text": "okay request headers it will be still request headers at the protocol level",
    "start": "2573339",
    "end": "2579599"
  },
  {
    "text": "response headers the same but you'll have an additional um way of sending metadata called response",
    "start": "2579599",
    "end": "2587859"
  },
  {
    "text": "trailers this can be attached under the formal key of key value pairs",
    "start": "2587859",
    "end": "2593980"
  },
  {
    "text": "like this these are simply you can add them from",
    "start": "2593980",
    "end": "2599440"
  },
  {
    "text": "the server implementation you can also read them there if needed",
    "start": "2599440",
    "end": "2604480"
  },
  {
    "text": "okay let me minimize this like this",
    "start": "2604480",
    "end": "2610420"
  },
  {
    "text": "so you'll have like this type this is the type that they decided to use metadata and a metadata entry you add",
    "start": "2610420",
    "end": "2618339"
  },
  {
    "text": "the key and you add a value and then just simply write into the context",
    "start": "2618339",
    "end": "2623680"
  },
  {
    "text": "response trailer and add this key value right and on the client side the",
    "start": "2623680",
    "end": "2630640"
  },
  {
    "text": "consuming party where is it here yeah see we found some",
    "start": "2630640",
    "end": "2635800"
  },
  {
    "text": "trailer values in the grpc response this is the the header that I added and I checked if",
    "start": "2635800",
    "end": "2643900"
  },
  {
    "text": "those are there or not okay there are other things that you can",
    "start": "2643900",
    "end": "2650380"
  },
  {
    "text": "tweak for the any grpc request for example you can specify uh that the",
    "start": "2650380",
    "end": "2656680"
  },
  {
    "text": "maximum message size is an amount that is suitable for you",
    "start": "2656680",
    "end": "2661859"
  },
  {
    "text": "there is a a guideline somehow that no message size should be more than one",
    "start": "2661859",
    "end": "2668440"
  },
  {
    "text": "megabyte because otherwise you'll see performance penalties so it's not intended for you",
    "start": "2668440",
    "end": "2674560"
  },
  {
    "text": "to transfer gigabytes of data over grpc messages yeah there are other Technologies for that but you can chunk",
    "start": "2674560",
    "end": "2682420"
  },
  {
    "text": "that gigabyte into one megabyte pieces and send over the the network",
    "start": "2682420",
    "end": "2689079"
  },
  {
    "text": "um maximum send message size the same it can be configured then you can configure",
    "start": "2689079",
    "end": "2694359"
  },
  {
    "text": "for example compression level the compression algorithm and to specify",
    "start": "2694359",
    "end": "2699460"
  },
  {
    "text": "your own compression provider if you want and of course you can add the type",
    "start": "2699460",
    "end": "2704500"
  },
  {
    "text": "of interceptors that um you need here security wise uh whatever your web API",
    "start": "2704500",
    "end": "2712180"
  },
  {
    "text": "supports grpc supports it too but you will have two options you will have it",
    "start": "2712180",
    "end": "2717819"
  },
  {
    "text": "at the channel level so at the HTTP level and then you can have something at a more granular one or over the single",
    "start": "2717819",
    "end": "2725980"
  },
  {
    "text": "TCP call yeah so you have HTTP and then grpc called inside it",
    "start": "2725980",
    "end": "2732339"
  },
  {
    "text": "uh it supports azer Eddie you can have client certificates identity server jvt",
    "start": "2732339",
    "end": "2737380"
  },
  {
    "text": "I should remove the token from there or oauth open ID connect everything that is",
    "start": "2737380",
    "end": "2744400"
  },
  {
    "text": "um is available pretty much and it covers a lot of scenarios what grpc should do awesome besides this",
    "start": "2744400",
    "end": "2751119"
  },
  {
    "text": "so besides this grpc transcoding so basically it will allow you to have an",
    "start": "2751119",
    "end": "2757599"
  },
  {
    "text": "internal grpc service exposing the browser without any additional tools the",
    "start": "2757599",
    "end": "2763060"
  },
  {
    "text": "thing with that is that yet is not so stable so if you combine it with any other things around the your jrpc",
    "start": "2763060",
    "end": "2771760"
  },
  {
    "text": "service it might act out and not work as I found out found out with my",
    "start": "2771760",
    "end": "2777880"
  },
  {
    "text": "workshop okay so just a sec in here",
    "start": "2777880",
    "end": "2783400"
  },
  {
    "text": "yeah so you will have like this is the address of the server and then you can",
    "start": "2783400",
    "end": "2788800"
  },
  {
    "text": "configure like the endpoint you wanted it to run",
    "start": "2788800",
    "end": "2794160"
  },
  {
    "text": "come on Zoom help me out a bit yeah so I said that I wanted to be",
    "start": "2794380",
    "end": "2799540"
  },
  {
    "text": "exposed under V1 greeter and the name is the the parameter yeah so if I add here",
    "start": "2799540",
    "end": "2805599"
  },
  {
    "text": "instead of name I don't know Madrid it will be display",
    "start": "2805599",
    "end": "2812260"
  },
  {
    "text": "whoops whoops I need to run this the Box start new",
    "start": "2812260",
    "end": "2817660"
  },
  {
    "text": "instance",
    "start": "2817660",
    "end": "2819960"
  },
  {
    "text": "yeah hello Madrid uh how I added this wonderful feature is",
    "start": "2824020",
    "end": "2829780"
  },
  {
    "text": "just by simply installing a nugget package related to transcoding",
    "start": "2829780",
    "end": "2835480"
  },
  {
    "text": "so in here it's called Microsoft asp.core grpc transcoding they couldn't have made this more longer",
    "start": "2835480",
    "end": "2842140"
  },
  {
    "text": "yeah add a few more segments and you just have it in here so this is the",
    "start": "2842140",
    "end": "2849339"
  },
  {
    "text": "RPC say hello returns reply that we've seen before but this time we have the option of exposing it as a get request",
    "start": "2849339",
    "end": "2857619"
  },
  {
    "text": "under this specific endpoint yeah you can also do that you can also do a post",
    "start": "2857619",
    "end": "2862839"
  },
  {
    "text": "you can also do a put a delete just by adding it in here um the thing is whatever name you're",
    "start": "2862839",
    "end": "2870040"
  },
  {
    "text": "specifying in here like to be bound from the endpoint itself it will need to be present in the",
    "start": "2870040",
    "end": "2877900"
  },
  {
    "text": "hello request input in here yeah so if you add here another name ID",
    "start": "2877900",
    "end": "2883720"
  },
  {
    "text": "or ID or something like that that it's not",
    "start": "2883720",
    "end": "2888119"
  },
  {
    "text": "um in the type you see this is the name that I'm gonna be bound under here",
    "start": "2888819",
    "end": "2896140"
  },
  {
    "text": "I'm waiting for it to be disappeared so to disappear I try come on",
    "start": "2896140",
    "end": "2903780"
  },
  {
    "text": "okay so Zoom it doesn't want to behave this morning",
    "start": "2905619",
    "end": "2911619"
  },
  {
    "text": "yeah so it needs to have a okay yay it worked so the name is also",
    "start": "2911619",
    "end": "2920140"
  },
  {
    "text": "present in the field of the hello request which hello request is the input of our method yeah so it will have to be",
    "start": "2920140",
    "end": "2927520"
  },
  {
    "text": "uh there there's the cat though it's not that easy just install a package and it will work by itself the catch is is that",
    "start": "2927520",
    "end": "2935980"
  },
  {
    "text": "you will need by hand to paste a few things and those few things are this",
    "start": "2935980",
    "end": "2942220"
  },
  {
    "text": "I think they haven't yet invested in the tooling and we have to do manual work if we have this specific scenario for",
    "start": "2942220",
    "end": "2949660"
  },
  {
    "text": "example we need to have the Google folder inside it we need to have an API folder and inside the API folder we need",
    "start": "2949660",
    "end": "2956319"
  },
  {
    "text": "to have two protocol files these are basically the ones that help with transcoding yeah the thing is you'll",
    "start": "2956319",
    "end": "2962859"
  },
  {
    "text": "have to do it just once and then you're going to copy the whole structure in your project uh yet I hope that they will improve",
    "start": "2962859",
    "end": "2971260"
  },
  {
    "text": "this and another thing is that in your gritter uh file you'll have to import it so this",
    "start": "2971260",
    "end": "2979839"
  },
  {
    "text": "is how import work this is how you add other files to your current file and stuff like that it's just an import",
    "start": "2979839",
    "end": "2985780"
  },
  {
    "text": "directive pointing to the specific specific folder in the the current project",
    "start": "2985780",
    "end": "2991420"
  },
  {
    "text": "okay another thing that's supposed to be uh nice about grpc and it's actually",
    "start": "2991420",
    "end": "2998740"
  },
  {
    "text": "nice but I'm not seeing it having a real applicability it's client-side load balancing and let",
    "start": "2998740",
    "end": "3006420"
  },
  {
    "text": "me show you something done with the transcoding and have this extras so",
    "start": "3006420",
    "end": "3014119"
  },
  {
    "text": "I'm going to start with retry policy first because that's even nice so you",
    "start": "3014119",
    "end": "3019920"
  },
  {
    "text": "can specify a retry policy out of the box say I'm gonna have a maximum tense",
    "start": "3019920",
    "end": "3025619"
  },
  {
    "text": "of two initial back off maximum back off and the retrievable status code for me",
    "start": "3025619",
    "end": "3031619"
  },
  {
    "text": "are this like unavailable and deadline exceeded you can have many of them in",
    "start": "3031619",
    "end": "3037560"
  },
  {
    "text": "there so what you're going to do is just to pass this retry policy when you",
    "start": "3037560",
    "end": "3043140"
  },
  {
    "text": "create the channel yeah so we're gonna uh pass the retry policy as the channel",
    "start": "3043140",
    "end": "3048800"
  },
  {
    "text": "options here I'm going to do it here because I didn't prepare it yet",
    "start": "3048800",
    "end": "3057180"
  },
  {
    "text": "so method configs I'm going to open another project that",
    "start": "3057180",
    "end": "3062520"
  },
  {
    "text": "already has it yeah so you can specify either um hedging policy or your tripology and",
    "start": "3062520",
    "end": "3070500"
  },
  {
    "text": "it will simply work the thing is you won't be able to see it from the outside",
    "start": "3070500",
    "end": "3077339"
  },
  {
    "text": "because the retry is internal so you won't see anything logged in around it but you won't have like to",
    "start": "3077339",
    "end": "3084900"
  },
  {
    "text": "install a poly or something like that it will have itself like in in grpc library",
    "start": "3084900",
    "end": "3091760"
  },
  {
    "text": "I think that I think will be the last thing that I'm going to show you today it's around a client-side load balancing",
    "start": "3091760",
    "end": "3099240"
  },
  {
    "text": "this is the thing that I told you I'm not seeing it as having a real applicability with client-side load balancing you're",
    "start": "3099240",
    "end": "3106440"
  },
  {
    "text": "basically moving the awareness of where what are the servers on the client",
    "start": "3106440",
    "end": "3113339"
  },
  {
    "text": "yeah so I don't think that the clients would be aware whether his options but",
    "start": "3113339",
    "end": "3119220"
  },
  {
    "text": "okay I can connect there I can connect there when the load balancing policies the",
    "start": "3119220",
    "end": "3125160"
  },
  {
    "text": "load balancing concepts are supposed to be transparent okay you're going to",
    "start": "3125160",
    "end": "3130380"
  },
  {
    "text": "connect and you're going to be served from somewhere do you care from where as long as you get a response back",
    "start": "3130380",
    "end": "3137339"
  },
  {
    "text": "um no you shouldn't care yeah but in here we can configure for example a",
    "start": "3137339",
    "end": "3142380"
  },
  {
    "text": "static resolver Factory we're going to say hey I know that I will have an instance of the server running on this",
    "start": "3142380",
    "end": "3148559"
  },
  {
    "text": "address and another instance of my server running on this address yeah so I'm",
    "start": "3148559",
    "end": "3155400"
  },
  {
    "text": "gonna this is what you'll have to do if you have console apps like me if you have an",
    "start": "3155400",
    "end": "3160920"
  },
  {
    "text": "MVC or a web API or something else you won't have to do the all the wiring",
    "start": "3160920",
    "end": "3167040"
  },
  {
    "text": "okay you're gonna say that I have a single term resolver Factor this is my Factory and then when you create the",
    "start": "3167040",
    "end": "3173460"
  },
  {
    "text": "channel you have to say that hey um I have this balancing config I want you",
    "start": "3173460",
    "end": "3179940"
  },
  {
    "text": "to to use the round robin config you also can use the pick first but that",
    "start": "3179940",
    "end": "3185640"
  },
  {
    "text": "wouldn't be like your load balancing you always gonna pick the first server in there and then uh just pass it in the factor",
    "start": "3185640",
    "end": "3193680"
  },
  {
    "text": "build a service provider that you just uh created in here yeah so what's going to",
    "start": "3193680",
    "end": "3200760"
  },
  {
    "text": "happen is whenever you create a client with the channel that has all the options",
    "start": "3200760",
    "end": "3206280"
  },
  {
    "text": "it will know to connect to the server on to the second server and to the third",
    "start": "3206280",
    "end": "3211440"
  },
  {
    "text": "server that you have in something like that so let's see we have a server instance running",
    "start": "3211440",
    "end": "3217020"
  },
  {
    "text": "and then we should have a second service we should have",
    "start": "3217020",
    "end": "3222599"
  },
  {
    "text": "is a keyword okay I'm gonna um this I'm gonna have the same server",
    "start": "3222599",
    "end": "3229800"
  },
  {
    "text": "running but under this um this URL so five thousand and five thousand and",
    "start": "3229800",
    "end": "3236280"
  },
  {
    "text": "two",
    "start": "3236280",
    "end": "3238520"
  },
  {
    "text": "because I need to pass it no build",
    "start": "3241619",
    "end": "3247338"
  },
  {
    "text": "I pass it Noble While You're Building okay",
    "start": "3247579",
    "end": "3254660"
  },
  {
    "text": "just a sec I'm gonna clear this out I stopped Visual Studio because it's",
    "start": "3256920",
    "end": "3262020"
  },
  {
    "text": "either you run it from the console or you end the double quotes indeed",
    "start": "3262020",
    "end": "3268339"
  },
  {
    "text": "what do you want what is it's locked",
    "start": "3270720",
    "end": "3278838"
  },
  {
    "text": "I remove no build but it should have worked without it apparently I didn't pray to the demo",
    "start": "3279059",
    "end": "3286260"
  },
  {
    "text": "goes too much and now it works ah okay",
    "start": "3286260",
    "end": "3292319"
  },
  {
    "text": "fingers crossed no field please",
    "start": "3292319",
    "end": "3299940"
  },
  {
    "text": "okay so it's listening on this we have the the first one to make run",
    "start": "3299940",
    "end": "3305339"
  },
  {
    "text": "so run no build because this is the default okay yay we have two several instances",
    "start": "3305339",
    "end": "3312920"
  },
  {
    "text": "this port and this one so listening and",
    "start": "3312920",
    "end": "3318000"
  },
  {
    "text": "what I'm gonna do is run the awesome app that knows about these two servers",
    "start": "3318000",
    "end": "3324599"
  },
  {
    "text": "with the same options.net run no build",
    "start": "3324599",
    "end": "3330660"
  },
  {
    "text": "because otherwise I do not know what's gonna happen okay yay and it said that hello back",
    "start": "3330660",
    "end": "3336839"
  },
  {
    "text": "with Oslo value from localhost this port and if I run it again hopefully",
    "start": "3336839",
    "end": "3342839"
  },
  {
    "text": "in one of the times it should be the other Port around which is this",
    "start": "3342839",
    "end": "3348900"
  },
  {
    "text": "yeah so we know how to balance it himself which is rather nice",
    "start": "3348900",
    "end": "3354900"
  },
  {
    "text": "okay so this is what uh supposed to to do",
    "start": "3354900",
    "end": "3361440"
  },
  {
    "text": "good okay what are the benefits and I'm gonna wrap",
    "start": "3361440",
    "end": "3368520"
  },
  {
    "text": "it up so benefits would be around performance size and the data that you're transferring over the network I",
    "start": "3368520",
    "end": "3374700"
  },
  {
    "text": "did some tests and if you also compressed compress the the response you'll end up like only one-fourth of",
    "start": "3374700",
    "end": "3382260"
  },
  {
    "text": "the entire message you would have with web API it's good for polyglot environments but as we've seen we we",
    "start": "3382260",
    "end": "3389880"
  },
  {
    "text": "don't even have that in real life it will have low Network usage because this the small payload it's awesome for",
    "start": "3389880",
    "end": "3398339"
  },
  {
    "text": "point-to-point communication and it's awesome if you're using http apis",
    "start": "3398339",
    "end": "3403520"
  },
  {
    "text": "on your Downstream apis so you might have have a look at maybe you can try to",
    "start": "3403520",
    "end": "3410220"
  },
  {
    "text": "to switch it to grpc in one of the cases it uses uh HTTP to multiplexing under",
    "start": "3410220",
    "end": "3418020"
  },
  {
    "text": "the hood which is nice it's contract based supports different streaming types over",
    "start": "3418020",
    "end": "3423599"
  },
  {
    "text": "the single TCP connection and it's already it can be configured with HTTP",
    "start": "3423599",
    "end": "3428819"
  },
  {
    "text": "3. yeah so I don't know about you but um I just got my hand around the HTTP 2 and",
    "start": "3428819",
    "end": "3434099"
  },
  {
    "text": "now they're talking about the next version HTTP 3. so it's hard to keep up",
    "start": "3434099",
    "end": "3439319"
  },
  {
    "text": "to be fair um it will still have a temporal copying so you'll still need the server to be up",
    "start": "3439319",
    "end": "3445859"
  },
  {
    "text": "in order to be served from it um you might forget that there is Network involved and you might abuse the",
    "start": "3445859",
    "end": "3452160"
  },
  {
    "text": "calls it's humor readable now because Postman it has a version of",
    "start": "3452160",
    "end": "3460079"
  },
  {
    "text": "it allows you to do grpc requests directly from that you need better testing and you need to treat the the",
    "start": "3460079",
    "end": "3466380"
  },
  {
    "text": "status codes that you receive an exceptions it will have no more caching so if you want caching you might have a",
    "start": "3466380",
    "end": "3473819"
  },
  {
    "text": "look at the middle layer that caches your data stuff like that which might add the next or complexity in your",
    "start": "3473819",
    "end": "3479400"
  },
  {
    "text": "system okay you'll have a single point of Truth which is in a way it's good you have the",
    "start": "3479400",
    "end": "3485040"
  },
  {
    "text": "protophile that will be the the truth for everything so when and why do you RPC",
    "start": "3485040",
    "end": "3492839"
  },
  {
    "text": "there are specific cases but if you currently have like a web API responding",
    "start": "3492839",
    "end": "3498000"
  },
  {
    "text": "to another web API you might give this a try to see how it goes and maybe it will",
    "start": "3498000",
    "end": "3504599"
  },
  {
    "text": "benefit your system yeah so I truly believe that when it comes to distributed systems everything is about",
    "start": "3504599",
    "end": "3511200"
  },
  {
    "text": "trade-offs so you won't have like a silver bullet to fix everything around",
    "start": "3511200",
    "end": "3516299"
  },
  {
    "text": "your system but we really need to know the tools that we have at our hand to be",
    "start": "3516299",
    "end": "3521700"
  },
  {
    "text": "able to make informed decision when it comes to our evolving the architecture or simply just writing a simple API",
    "start": "3521700",
    "end": "3527220"
  },
  {
    "text": "being at a grpc or web API itself next steps would be to have for you to have a",
    "start": "3527220",
    "end": "3533460"
  },
  {
    "text": "look at these things it might be it might appear on your radar in the next few",
    "start": "3533460",
    "end": "3539359"
  },
  {
    "text": "years maybe and you have these two books that may be worth having a look Mark Randall wrote",
    "start": "3539359",
    "end": "3546900"
  },
  {
    "text": "one of them if you have WCF it might also be a good fit to try grpc instead",
    "start": "3546900",
    "end": "3554160"
  },
  {
    "text": "and thanks for listening thank you for being here you have the resources in here",
    "start": "3554160",
    "end": "3560900"
  }
]