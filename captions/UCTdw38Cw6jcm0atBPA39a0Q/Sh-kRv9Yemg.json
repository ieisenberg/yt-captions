[
  {
    "start": "0",
    "end": "78000"
  },
  {
    "text": "all right so um good morning everyone thanks for coming a very 93 cent for",
    "start": "3259",
    "end": "11040"
  },
  {
    "text": "quite a while first time speaker sort of data access and excited so go easy on me",
    "start": "11040",
    "end": "16790"
  },
  {
    "text": "we'll be talking about containerized applications now and we'll be talking about how to properly design and",
    "start": "16790",
    "end": "24690"
  },
  {
    "text": "structure when container as an application in such a way that you won't lose data and data and storage is an",
    "start": "24690",
    "end": "32820"
  },
  {
    "text": "issue when it comes down to containers and applications and something that you",
    "start": "32820",
    "end": "38309"
  },
  {
    "text": "need to consider when you're removing your architecture from those big servers",
    "start": "38309",
    "end": "43339"
  },
  {
    "text": "that you used to run and move them over to containers well discuss what",
    "start": "43339",
    "end": "48690"
  },
  {
    "text": "containers are give us a good basis for our discussions and we'll talk about",
    "start": "48690",
    "end": "54510"
  },
  {
    "text": "build containerized applications and then we'll move on to storage options and see what kinds of solutions we have",
    "start": "54510",
    "end": "60469"
  },
  {
    "text": "when we want to run our containers applications we'll finish we'll finish up our talk with a use case will",
    "start": "60469",
    "end": "67170"
  },
  {
    "text": "actually take real live use case and see how we build the solutions to keep it",
    "start": "67170",
    "end": "74160"
  },
  {
    "text": "running even though it's still in a container so um talking points um basic",
    "start": "74160",
    "end": "81690"
  },
  {
    "start": "78000",
    "end": "131000"
  },
  {
    "text": "introduction Who am I well is there an idea we'll give some introduction to containers containers",
    "start": "81690",
    "end": "88170"
  },
  {
    "text": "101 will dive into some theory of what containers are actually are how they",
    "start": "88170",
    "end": "94650"
  },
  {
    "text": "work how they function how it can build them how we can put files or manipulate them or run them we look at how some of",
    "start": "94650",
    "end": "103320"
  },
  {
    "text": "the challenges of running a distributed system break down small containers and lots of containers one of some of the challenges",
    "start": "103320",
    "end": "110390"
  },
  {
    "text": "the wave minor counter will move on to storage picking the storage solutions",
    "start": "110390",
    "end": "115560"
  },
  {
    "text": "we'll take a look at several solutions with written examples when and how to use the proper solution for each case",
    "start": "115560",
    "end": "123270"
  },
  {
    "text": "I'll take a look at these case and then we'll summarize and have some questions",
    "start": "123270",
    "end": "128629"
  },
  {
    "text": "alright so let's get started um this is me my name is Caleb Odell and",
    "start": "128629",
    "end": "134319"
  },
  {
    "start": "131000",
    "end": "185000"
  },
  {
    "text": "I'm singer DevOps consultant at a company called code value or an Israeli based company I'll talk about the next",
    "start": "134319",
    "end": "141760"
  },
  {
    "text": "slide I've been doing a lot of containerized work as a past year year",
    "start": "141760",
    "end": "147610"
  },
  {
    "text": "and a half a couple of systems planning and production some on staging some one testing all kinds of interesting use",
    "start": "147610",
    "end": "154090"
  },
  {
    "text": "cases of containers as per the application lifecycle I do a lot of",
    "start": "154090",
    "end": "160480"
  },
  {
    "text": "designing infrastructure design and to support those containers applications",
    "start": "160480",
    "end": "166120"
  },
  {
    "text": "some are on-premise systems running in the local data center summer cloud deployments as your AWS other than that",
    "start": "166120",
    "end": "174880"
  },
  {
    "text": "I did talks and I teach me and I try and",
    "start": "174880",
    "end": "181410"
  },
  {
    "text": "so that's basically me cause value where",
    "start": "181410",
    "end": "187750"
  },
  {
    "text": "an Israeli based services company with the professional services in the software world everything from URI",
    "start": "187750",
    "end": "194980"
  },
  {
    "text": "unique software design agile mentoring and process implementations DevOps you",
    "start": "194980",
    "end": "202930"
  },
  {
    "text": "name it and we also have a extension called auth code which is a visual study extension physician debugging and with",
    "start": "202930",
    "end": "210459"
  },
  {
    "text": "the ton of cool features link debugging heads-up display all kinds of interesting stuff we have a booth in the",
    "start": "210459",
    "end": "217959"
  },
  {
    "text": "entrance to the floor go check it out really cool features of great great",
    "start": "217959",
    "end": "224139"
  },
  {
    "text": "stuff all right so that's basically me and us so let's talk about it about",
    "start": "224139",
    "end": "233139"
  },
  {
    "start": "230000",
    "end": "365000"
  },
  {
    "text": "containerized application those are containerized okay that's the way you be used to build software okay now this is",
    "start": "233139",
    "end": "240549"
  },
  {
    "text": "a pretty common setup for you know just any self resistant we have your three layers your three tier setup you have",
    "start": "240549",
    "end": "246819"
  },
  {
    "text": "your presentation layer you have your business there and you have your data layer the presentation layer it's pretty",
    "start": "246819",
    "end": "253090"
  },
  {
    "text": "common it's pretty standard it's nothing you make about that your presentation layer is the interface the",
    "start": "253090",
    "end": "258400"
  },
  {
    "text": "graphical interface that you use or interacts with the system all your heavy lifting or your logic or your code data",
    "start": "258400",
    "end": "266120"
  },
  {
    "text": "manipulation happens in business layer the data store actually stores that data",
    "start": "266120",
    "end": "272080"
  },
  {
    "text": "long-term now the problem is such setup or one of the problems with the",
    "start": "272080",
    "end": "278210"
  },
  {
    "text": "old-school big fat monolithic setups it's really hard to build these things",
    "start": "278210",
    "end": "284740"
  },
  {
    "text": "now writing the code by actually building it compiling the solution the solution can have hundreds of projects",
    "start": "284740",
    "end": "291740"
  },
  {
    "text": "if you want to change one line of code we have to build that solution from scratch basically you got coupling",
    "start": "291740",
    "end": "299479"
  },
  {
    "text": "inside your projects they reference one another or the reference other projects and other solutions you got a big giant",
    "start": "299479",
    "end": "305629"
  },
  {
    "text": "mess of components that you can't really easily reuse if you want to introduce",
    "start": "305629",
    "end": "310819"
  },
  {
    "text": "new features if you want to fix bugs you have to build that solution again again compile the whole system and climate is",
    "start": "310819",
    "end": "317270"
  },
  {
    "text": "one big unit to the staging environment it goes through a pretty long cycle an",
    "start": "317270",
    "end": "324469"
  },
  {
    "text": "app of lifecycle just to get your system up to production 16 your code oh introducing a new feature it's hard okay",
    "start": "324469",
    "end": "332419"
  },
  {
    "text": "because having experience has been working with the clients and they have this big monolithic applications it's",
    "start": "332419",
    "end": "338360"
  },
  {
    "text": "hard it's really hard to build this system which has like hundreds of dependencies NuGet packages references",
    "start": "338360",
    "end": "346779"
  },
  {
    "text": "dependencies on databases it's kind of looted it's a mess oK we've been doing",
    "start": "346779",
    "end": "352400"
  },
  {
    "text": "it for a while it's a mess a solution okay so let's not work in this big",
    "start": "352400",
    "end": "358659"
  },
  {
    "text": "monolithic fad application let's try to break it down and the solution is",
    "start": "358659",
    "end": "364370"
  },
  {
    "text": "actually breaking me down to small components Thanks each one of those huge",
    "start": "364370",
    "end": "370009"
  },
  {
    "text": "layers and just break it up to simple components small components atomic units the each component does just one thing",
    "start": "370009",
    "end": "378169"
  },
  {
    "text": "okay and there's a high cohesion it's very granular it's very small it's very atomic this also means that I can",
    "start": "378169",
    "end": "385610"
  },
  {
    "text": "work on each component independently of the other system no dependencies or very",
    "start": "385610",
    "end": "391159"
  },
  {
    "text": "low dependencies between two components I can actually build a whole lifecycle",
    "start": "391159",
    "end": "398009"
  },
  {
    "text": "for each component so then it is this is a really new concept in software design",
    "start": "398009",
    "end": "404639"
  },
  {
    "text": "and the microservices concept we've been doing it for a while we haven't called",
    "start": "404639",
    "end": "409680"
  },
  {
    "text": "it micro services we call it service-oriented application massara for a while but micro services actually is",
    "start": "409680",
    "end": "416520"
  },
  {
    "text": "an extreme so means take that service break it down to very very very small",
    "start": "416520",
    "end": "422280"
  },
  {
    "text": "components build and develop its components its component on its own",
    "start": "422280",
    "end": "427970"
  },
  {
    "text": "independently from the rest of the system now the problem with such a setup",
    "start": "427970",
    "end": "434849"
  },
  {
    "text": "micro service serve it's hard to deploy it to production if you had early",
    "start": "434849",
    "end": "441120"
  },
  {
    "text": "previously we have that presentation there with one chunk you build it it",
    "start": "441120",
    "end": "446550"
  },
  {
    "text": "took it the deployment you deployed it to your environment now we have to deploy a lot of small atomic units each",
    "start": "446550",
    "end": "454110"
  },
  {
    "text": "one has to be packaged each one has to have its own dependencies binaries its",
    "start": "454110",
    "end": "459990"
  },
  {
    "text": "libraries each one has to be packaged independently from the rest of the system sorry so that so what are",
    "start": "459990",
    "end": "471900"
  },
  {
    "text": "containers then and how do they help us build these applications there's distribute these applications containers",
    "start": "471900",
    "end": "478620"
  },
  {
    "text": "and we'll discuss them in just a bit are exactly that missing piece in the deployment cycle it can help me actually",
    "start": "478620",
    "end": "485280"
  },
  {
    "text": "package and isolate each micro services and deploy it independently from the",
    "start": "485280",
    "end": "492180"
  },
  {
    "text": "rest of my system all right so that's the high level view overview let's take",
    "start": "492180",
    "end": "499830"
  },
  {
    "text": "a theoretical spin - what containers are those are containers whether it's a shipping yard",
    "start": "499830",
    "end": "507180"
  },
  {
    "text": "in England I think summer",
    "start": "507180",
    "end": "511490"
  },
  {
    "text": "all right so containers well theoretically and very very very",
    "start": "514930",
    "end": "520789"
  },
  {
    "start": "516000",
    "end": "712000"
  },
  {
    "text": "high-level look at the containers containers are basically a method of",
    "start": "520789",
    "end": "525829"
  },
  {
    "text": "operating system-level virtualization that's fairly complex enzymes let's",
    "start": "525829",
    "end": "533360"
  },
  {
    "text": "break it down a bit take vo missions okay a virtual machine is basically a computer it's a virtual",
    "start": "533360",
    "end": "540620"
  },
  {
    "text": "appears there's not physical hardware that's associated with that virtual machine it runs on a hypervisor software",
    "start": "540620",
    "end": "548269"
  },
  {
    "text": "component that actually mitigates between my machine and the hardware requirements on the method it emulates",
    "start": "548269",
    "end": "554660"
  },
  {
    "text": "there's all the resources for mine and from my machine for my virtual machine I",
    "start": "554660",
    "end": "560389"
  },
  {
    "text": "have the chance appealed and virgin ram answer this storage I got everything I need to run lines answer machine",
    "start": "560389",
    "end": "567490"
  },
  {
    "text": "containers on the other hand are similar in that in that way that they actually virtualized and isolated but they don't",
    "start": "567490",
    "end": "575420"
  },
  {
    "text": "require a hypervisor in order to run you don't need to emulate a whole computer just to run a container instance it's",
    "start": "575420",
    "end": "582470"
  },
  {
    "text": "small it's isolated and it runs directly on the kernel that means it's really",
    "start": "582470",
    "end": "589250"
  },
  {
    "text": "quick it gets the resources directly from the kernel now containers actually allow us",
    "start": "589250",
    "end": "595250"
  },
  {
    "text": "to run applications in resource isolated processes very similar to virtual",
    "start": "595250",
    "end": "600620"
  },
  {
    "text": "machines these are isolated from the rest of the operating system then unlike",
    "start": "600620",
    "end": "606079"
  },
  {
    "text": "virtual machines then I have this huge computer this huge machine that multi-process this is a simple process",
    "start": "606079",
    "end": "612110"
  },
  {
    "text": "very small that happens in the OS level alright that isolation encapsulation is",
    "start": "612110",
    "end": "619160"
  },
  {
    "text": "achieved using two features called namespaces and control groups let's basically give us something like",
    "start": "619160",
    "end": "625040"
  },
  {
    "text": "this all right this this little box over",
    "start": "625040",
    "end": "630470"
  },
  {
    "text": "here that's a container alright that's a namespace which is isolated from the",
    "start": "630470",
    "end": "636259"
  },
  {
    "text": "rest of processes and the system now the process is running inside namespace can",
    "start": "636259",
    "end": "642050"
  },
  {
    "text": "affect processes outside of that namespace meaning that the process is running inside the container can affect or",
    "start": "642050",
    "end": "649839"
  },
  {
    "text": "modify other processes in the system the other processes can affect those inside",
    "start": "649839",
    "end": "655750"
  },
  {
    "text": "the namespace inside the container but not the other way around and that's the isolation and the encapsulation that we",
    "start": "655750",
    "end": "662170"
  },
  {
    "text": "get by using your container okay it's a single process which has sub-tree of",
    "start": "662170",
    "end": "667839"
  },
  {
    "text": "itself but that's basically it right so whenever you hear the word container",
    "start": "667839",
    "end": "673959"
  },
  {
    "text": "this is it okay small namespace that is the confines a",
    "start": "673959",
    "end": "679089"
  },
  {
    "text": "subset of the process stream now control groups is the counterpart of noise and",
    "start": "679089",
    "end": "684490"
  },
  {
    "text": "namespace control groups actually allocate resources from the operating",
    "start": "684490",
    "end": "689769"
  },
  {
    "text": "system to that namespace meaning how much RAM does my namespace use I want CB",
    "start": "689769",
    "end": "696130"
  },
  {
    "text": "how much I am what's networking how much storage okay so there's two features and",
    "start": "696130",
    "end": "703180"
  },
  {
    "text": "a counterpart they actually complete one another all right so those are",
    "start": "703180",
    "end": "709390"
  },
  {
    "text": "containers but how do we build them and how to run them so the containers",
    "start": "709390",
    "end": "715930"
  },
  {
    "start": "712000",
    "end": "855000"
  },
  {
    "text": "actually are well actually running so in order to build one we have to use an",
    "start": "715930",
    "end": "721390"
  },
  {
    "text": "image right now an image you can think of images think of an image as a blueprint pruning a container okay",
    "start": "721390",
    "end": "728920"
  },
  {
    "text": "it holds all the relevant information than my container needs in order to run",
    "start": "728920",
    "end": "735510"
  },
  {
    "text": "you can think of it as the image is the design time construct and the container",
    "start": "735510",
    "end": "741370"
  },
  {
    "text": "is the actual runtime constructs okay so the class of an instant a ssin of that class it's basically just a file",
    "start": "741370",
    "end": "749620"
  },
  {
    "text": "okay it's a compressed file which has everything inside of the code of the",
    "start": "749620",
    "end": "756310"
  },
  {
    "text": "dependencies all the references the my code actually needs in order to run now",
    "start": "756310",
    "end": "763089"
  },
  {
    "text": "there's other ways to build an image urn using the text file is pretty the most out is it is :",
    "start": "763089",
    "end": "768699"
  },
  {
    "text": "you write the inside your text files you declare what the things you need inside your image is a basically just a set of",
    "start": "768699",
    "end": "774790"
  },
  {
    "text": "instructions and how to build an image think of all the usual things you did when selling on",
    "start": "774790",
    "end": "780480"
  },
  {
    "text": "the new server okay you go out and you install the updates and security patches and stuff like that then you go out and",
    "start": "780480",
    "end": "787589"
  },
  {
    "text": "install all the third-party dependencies you need a framework you need whatever you cook needs and then finally you put",
    "start": "787589",
    "end": "795149"
  },
  {
    "text": "your code inside that so there's like an image it's pretty much the same thing okay I started this base something okay",
    "start": "795149",
    "end": "804089"
  },
  {
    "text": "and then I put in here I put inside that my dependencies and my third party is my",
    "start": "804089",
    "end": "809430"
  },
  {
    "text": "name's Mike Lammers and I just put my clothes in silence i package it and fun that's the base of",
    "start": "809430",
    "end": "815760"
  },
  {
    "text": "all containers containers aren't mutually exclusive to an image meaning I",
    "start": "815760",
    "end": "821459"
  },
  {
    "text": "can run several containers from the same image okay now a key point to this image",
    "start": "821459",
    "end": "828899"
  },
  {
    "text": "container thing that images are available meaning you can't change them",
    "start": "828899",
    "end": "834180"
  },
  {
    "text": "once you build that five people anyone which is great you can't change the over",
    "start": "834180",
    "end": "839730"
  },
  {
    "text": "a build file it's really if I have changes in my account I just build any",
    "start": "839730",
    "end": "845310"
  },
  {
    "text": "image put the updated code inside that okay all right so to sum it up what's",
    "start": "845310",
    "end": "857190"
  },
  {
    "start": "855000",
    "end": "1017000"
  },
  {
    "text": "the benefits of actually using containers well the first and foremost main benefit is using containers it's",
    "start": "857190",
    "end": "863820"
  },
  {
    "text": "really really fast all right so start at times fast shutdown times it takes about half a",
    "start": "863820",
    "end": "870150"
  },
  {
    "text": "second to second to get a running container once you have that image on your computer okay just put in the",
    "start": "870150",
    "end": "877380"
  },
  {
    "text": "command on the command interface on your CLI then you got a container okay again this is an a-list level",
    "start": "877380",
    "end": "884520"
  },
  {
    "text": "virtualization you don't have to go through the hypervisor okay just create the namespace allocate the relevancy",
    "start": "884520",
    "end": "890339"
  },
  {
    "text": "group and you guys can carry you get your container so",
    "start": "890339",
    "end": "895810"
  },
  {
    "text": "really fat where is really scalable because it really fast meaning I can have like five six seven eight instances",
    "start": "895810",
    "end": "903100"
  },
  {
    "text": "of that same container and that image that we just discussed can contain just",
    "start": "903100",
    "end": "909430"
  },
  {
    "text": "assess of microbeads okay and then the whole computer I mean the whole operating system that has things or",
    "start": "909430",
    "end": "916170"
  },
  {
    "text": "baggage that I don't need okay only two and a half gigabytes of Windows server just to run five BLM's",
    "start": "916170",
    "end": "923160"
  },
  {
    "text": "and I need compatibility two printers or whatever I can use just stuff my code",
    "start": "923160",
    "end": "930190"
  },
  {
    "text": "actions needs my diner is my parents and my madam Michael all right and again the",
    "start": "930190",
    "end": "936550"
  },
  {
    "text": "process isolation we discussed earlier which means they flying container crashes or I made a new one",
    "start": "936550",
    "end": "942880"
  },
  {
    "text": "it doesn't affect the rest of the system so these are main benefits of using containers and that's actually much",
    "start": "942880",
    "end": "949660"
  },
  {
    "text": "makes them so so perfect in a micro service based operating table okay my",
    "start": "949660",
    "end": "956860"
  },
  {
    "text": "code and service based design they're small they're Atomics of granular it",
    "start": "956860",
    "end": "962440"
  },
  {
    "text": "boot up really fast really fast and they're really easy to scale and we please but micro services and",
    "start": "962440",
    "end": "971860"
  },
  {
    "text": "distributed systems have challenges major challenges and while again once we got our head wrapped around the concept",
    "start": "971860",
    "end": "979030"
  },
  {
    "text": "of containers let's move on to someone's challenges of running a dis to be a system alright so we got like a bunch of",
    "start": "979030",
    "end": "992110"
  },
  {
    "text": "containers running there's all like three servers we used to have in the old days where we knew exactly where each",
    "start": "992110",
    "end": "999250"
  },
  {
    "text": "one of them is what kind of operating system it runs what's it storage needs patches they",
    "start": "999250",
    "end": "1005790"
  },
  {
    "text": "want to give you guys a bunch of containers running which is great because one it's capable one small we",
    "start": "1005790",
    "end": "1012209"
  },
  {
    "text": "wanted greater now there are some new challenges and we need to consider now",
    "start": "1012209",
    "end": "1017970"
  },
  {
    "start": "1017000",
    "end": "1054000"
  },
  {
    "text": "these three challenges or issues or challenges of every system okay",
    "start": "1017970",
    "end": "1023310"
  },
  {
    "text": "you can break them every system to basically the three main pillars",
    "start": "1023310",
    "end": "1028500"
  },
  {
    "text": "same thing needs to run in its computer means meaning with each CPU needs rent",
    "start": "1028500",
    "end": "1033880"
  },
  {
    "text": "the actual stuff that runs in from code you need to network to communicate with other components in that system or",
    "start": "1033880",
    "end": "1040959"
  },
  {
    "text": "external and they need storage now first is the main issue of our tottemo will",
    "start": "1040959",
    "end": "1047860"
  },
  {
    "text": "further dive into it later but let's briefly talk about compute and networking okay so um compute well yes",
    "start": "1047860",
    "end": "1057779"
  },
  {
    "start": "1054000",
    "end": "1200000"
  },
  {
    "text": "several issues we need to discuss over you need to attend to in the compute section you have to make sure your have",
    "start": "1057779",
    "end": "1065440"
  },
  {
    "text": "resources enough resources that your code needs in order to run and it means",
    "start": "1065440",
    "end": "1070720"
  },
  {
    "text": "it has enough memory it has enough CP it and you have to allocate the resources to the components to actually use them",
    "start": "1070720",
    "end": "1078240"
  },
  {
    "text": "now one of the main tools you can do that as we're using scaling okay those",
    "start": "1078240",
    "end": "1085149"
  },
  {
    "text": "are you're familiar with the scaling concept it means how much dynamically allocation resources I can do or how to",
    "start": "1085149",
    "end": "1093640"
  },
  {
    "text": "do it to a single component Eckener is vertically which means more and more CPU",
    "start": "1093640",
    "end": "1100360"
  },
  {
    "text": "that instance or I can do it horizontally meaning more instances okay",
    "start": "1100360",
    "end": "1105370"
  },
  {
    "text": "take a look like a matrix it grows on the y and x axis okay vertically and",
    "start": "1105370",
    "end": "1111909"
  },
  {
    "text": "horizontally okay more instances or more power to one instance more instances",
    "start": "1111909",
    "end": "1121090"
  },
  {
    "text": "means you need more machines obviously okay maybe more hosts we can place all",
    "start": "1121090",
    "end": "1126940"
  },
  {
    "text": "your instance in something well vertical means I need to be here and instance more resources to that",
    "start": "1126940",
    "end": "1133899"
  },
  {
    "text": "instance now scaling horizontal staring at that's an issue over itself and it's",
    "start": "1133899",
    "end": "1142149"
  },
  {
    "text": "actually a little more complex problem and you might imagine because once we grow multiple instruments we need to",
    "start": "1142149",
    "end": "1148270"
  },
  {
    "text": "start thinking about placement that we place instances we got like a bunch of holes let's say that time change tendons",
    "start": "1148270",
    "end": "1155980"
  },
  {
    "text": "running inside of our system and we are like a thousand containers so we need to allocate those containers",
    "start": "1155980",
    "end": "1161970"
  },
  {
    "text": "place them on the host Sparkie or intelligently or maybe just distribute",
    "start": "1161970",
    "end": "1167640"
  },
  {
    "text": "them Italy so it's an issue all by himself and its container placement okay",
    "start": "1167640",
    "end": "1173220"
  },
  {
    "text": "where they put them once I got other issues like how to keep them alive how",
    "start": "1173220",
    "end": "1180090"
  },
  {
    "text": "to get their heartbeat is in our life is dead if it's dead let's schedule a new",
    "start": "1180090",
    "end": "1185640"
  },
  {
    "text": "one let's put any one how do I replace all containers with new one I do update the system the roaming do it",
    "start": "1185640",
    "end": "1193140"
  },
  {
    "text": "black out a lot of concerns around that alright let's talk about network some of",
    "start": "1193140",
    "end": "1202050"
  },
  {
    "start": "1200000",
    "end": "1323000"
  },
  {
    "text": "the challenges we realize discover or my channel and running a distributed system you need some kind of mechanism for",
    "start": "1202050",
    "end": "1207990"
  },
  {
    "text": "discovery ok maybe you have all your components running in the system and you need to find one another way to",
    "start": "1207990",
    "end": "1213660"
  },
  {
    "text": "communicate with one another ok my dear is over rest calls am i doing it keep it",
    "start": "1213660",
    "end": "1219930"
  },
  {
    "text": "disappear whatever protocol but they need to somehow find one another it's like ok",
    "start": "1219930",
    "end": "1225540"
  },
  {
    "text": "where are you I'm there okay here's my IP great and when you're running a distributed system a lot of containers",
    "start": "1225540",
    "end": "1232220"
  },
  {
    "text": "that becomes a real issue okay how does how does one component finds the other",
    "start": "1232220",
    "end": "1237720"
  },
  {
    "text": "one in its how do we keep that list of services relevant when containers are",
    "start": "1237720",
    "end": "1244580"
  },
  {
    "text": "replaced when they move between hosts and they die when you should really",
    "start": "1244580",
    "end": "1250230"
  },
  {
    "text": "start up the service discovering furniture growling again love you so",
    "start": "1250230",
    "end": "1258060"
  },
  {
    "text": "much so discovery but how does data flow inside my system how does my system communicate with",
    "start": "1258060",
    "end": "1264690"
  },
  {
    "text": "external services or internally policies firewalls ports so like that all the",
    "start": "1264690",
    "end": "1272490"
  },
  {
    "text": "issues revolve around security are we running HTTP or not is my network secure",
    "start": "1272490",
    "end": "1278940"
  },
  {
    "text": "or regarding SSL certification what's the trust level between components inside my system load",
    "start": "1278940",
    "end": "1285480"
  },
  {
    "text": "balancing some other challenges another challenge which is even more of a",
    "start": "1285480",
    "end": "1291420"
  },
  {
    "text": "challenge now that we're running in containers because we got like eight instance of that same container how do we balance",
    "start": "1291420",
    "end": "1298030"
  },
  {
    "text": "load on that instances okay how do we grow again scale and connect that load",
    "start": "1298030",
    "end": "1305289"
  },
  {
    "text": "balancer to our scale to our instances there are other challenges revolving",
    "start": "1305289",
    "end": "1311500"
  },
  {
    "text": "around network these are just example of definitely we need to consider a third",
    "start": "1311500",
    "end": "1323710"
  },
  {
    "start": "1323000",
    "end": "1406000"
  },
  {
    "text": "pillar is storage every non-trivial application in the end of it has to keep",
    "start": "1323710",
    "end": "1329470"
  },
  {
    "text": "data somewhere okay it could be user details okay it's may",
    "start": "1329470",
    "end": "1334690"
  },
  {
    "text": "password ID which you probably saw in the database it could be files image files PDF files just static regular",
    "start": "1334690",
    "end": "1343000"
  },
  {
    "text": "files whatever it is if the end of it will have to keep your data somewhere if you're keeping your days somewhere you",
    "start": "1343000",
    "end": "1349390"
  },
  {
    "text": "have to make it available to those instances that need that data okay now",
    "start": "1349390",
    "end": "1355299"
  },
  {
    "text": "again we're running in a distributed system multiple hosts that means that that data needs to be available from",
    "start": "1355299",
    "end": "1361900"
  },
  {
    "text": "multiple places okay well discussing the delay durability I want to my data to be there",
    "start": "1361900",
    "end": "1368289"
  },
  {
    "text": "when I needed okay I don't wanted to get corrupted and I want to get it erased and I want to get",
    "start": "1368289",
    "end": "1373840"
  },
  {
    "text": "deleted I wanted to be there when I need it and of course scaling as my system",
    "start": "1373840",
    "end": "1380710"
  },
  {
    "text": "grows my data stores and my storage needs also group which means I need to",
    "start": "1380710",
    "end": "1385799"
  },
  {
    "text": "somehow think of a mechanism that can allow me to scale my data accordingly",
    "start": "1385799",
    "end": "1391330"
  },
  {
    "text": "with the scale of next system again other issues revolving around our storage but some of the challenges are",
    "start": "1391330",
    "end": "1406520"
  },
  {
    "start": "1406000",
    "end": "1428000"
  },
  {
    "text": "so it's those options storage solutions or storage options what kind of",
    "start": "1406520",
    "end": "1413150"
  },
  {
    "text": "mechanisms do we have some of them are old-school okay some of them are solutions that",
    "start": "1413150",
    "end": "1419450"
  },
  {
    "text": "we've been doing for a while and argue some of them are a bit different when",
    "start": "1419450",
    "end": "1424460"
  },
  {
    "text": "we're talking about containerized applications so the first solution or maybe the most trivial and strays for",
    "start": "1424460",
    "end": "1432530"
  },
  {
    "start": "1428000",
    "end": "1576000"
  },
  {
    "text": "one just put your files in the container okay it's cheap clothes you don't have",
    "start": "1432530",
    "end": "1439250"
  },
  {
    "text": "to do really anything just files that are stored inside that containers control group of name space it's really",
    "start": "1439250",
    "end": "1445730"
  },
  {
    "text": "fast because again you don't have to go somewhere else to look for your data it's there on your local disk and",
    "start": "1445730",
    "end": "1454720"
  },
  {
    "text": "there's no sub specific configuration just as you always did just save your",
    "start": "1454720",
    "end": "1460309"
  },
  {
    "text": "file to the file system and just read it from that file system that's like the",
    "start": "1460309",
    "end": "1465440"
  },
  {
    "text": "most trivial and Beeville simple storage solution now the cons of that issue is",
    "start": "1465440",
    "end": "1471830"
  },
  {
    "text": "you can't share that data again it's bound it's inside that namespace inside",
    "start": "1471830",
    "end": "1477470"
  },
  {
    "text": "that control group and no other containers can read or access that data unless expressly allowed and again this",
    "start": "1477470",
    "end": "1486650"
  },
  {
    "text": "has very low durability containers a very short lift okay it can die which",
    "start": "1486650",
    "end": "1492320"
  },
  {
    "text": "means a schedule anyone will have to start the new container we can get replaced which means I now have to take",
    "start": "1492320",
    "end": "1501110"
  },
  {
    "text": "down the old one and start at the new containers so the durability using in",
    "start": "1501110",
    "end": "1506660"
  },
  {
    "text": "container storage option is very little when should you consider using in",
    "start": "1506660",
    "end": "1513620"
  },
  {
    "text": "container storage well static files okay static files are part of your image you",
    "start": "1513620",
    "end": "1519710"
  },
  {
    "text": "don't really have to keep them somewhere else they're already inside the image and once you get up or start up a new",
    "start": "1519710",
    "end": "1525950"
  },
  {
    "text": "container from that image those static files will be there so there's nest",
    "start": "1525950",
    "end": "1531590"
  },
  {
    "text": "storage consideration as you have to take when using static files cache data",
    "start": "1531590",
    "end": "1537210"
  },
  {
    "text": "again sketch data it's very disposable just you know the next time I can't care",
    "start": "1537210",
    "end": "1543150"
  },
  {
    "text": "and startup just build your catch you're running and I have to keep it somewhere",
    "start": "1543150",
    "end": "1548429"
  },
  {
    "text": "else and to save it or consider or design a whole solution around cache",
    "start": "1548429",
    "end": "1554160"
  },
  {
    "text": "data another option is manually and clustered application we means that my instances",
    "start": "1554160",
    "end": "1560490"
  },
  {
    "text": "now find and share data between themselves and then data will require an",
    "start": "1560490",
    "end": "1566970"
  },
  {
    "text": "external or storage options a great",
    "start": "1566970",
    "end": "1576870"
  },
  {
    "start": "1576000",
    "end": "1655000"
  },
  {
    "text": "example of using container based storage in elasticsearch okay if you're not",
    "start": "1576870",
    "end": "1582420"
  },
  {
    "text": "familiar Laster search your last search is a database sort or storage mechanism",
    "start": "1582420",
    "end": "1588570"
  },
  {
    "text": "there is especially designed and optimized to deal with textual data now",
    "start": "1588570",
    "end": "1595140"
  },
  {
    "text": "plastic size comes by design in the clustered model which means I can run",
    "start": "1595140",
    "end": "1600210"
  },
  {
    "text": "multiple instances of that same elastic search and they know how to share data",
    "start": "1600210",
    "end": "1605580"
  },
  {
    "text": "between themselves which means there's one instance dies the other have has",
    "start": "1605580",
    "end": "1610980"
  },
  {
    "text": "copies or replicas of that same data you're not losing anything so even if I",
    "start": "1610980",
    "end": "1618360"
  },
  {
    "text": "haven't designed a persistent storage for elastic search and I'm just running",
    "start": "1618360",
    "end": "1623370"
  },
  {
    "text": "it inside the containers again those containers can find one another so this discovered we discussed another",
    "start": "1623370",
    "end": "1629610"
  },
  {
    "text": "and they know how to share data with windows self using index is a replication all kinds of neat stuff okay",
    "start": "1629610",
    "end": "1636200"
  },
  {
    "text": "if you're now running in clustered application nothing you can't afford to do okay",
    "start": "1636200",
    "end": "1642240"
  },
  {
    "text": "that's maybe the main Kinane point here if you want if you can't afford to lose",
    "start": "1642240",
    "end": "1649020"
  },
  {
    "text": "it then put in a compare okay put it somewhere else",
    "start": "1649020",
    "end": "1654110"
  },
  {
    "text": "where you can put it well again got couple of options you can put it on the host okay those containers they running",
    "start": "1654110",
    "end": "1661790"
  },
  {
    "start": "1655000",
    "end": "1860000"
  },
  {
    "text": "on someone okay they're running on some kind of a beer some kind of operating system so you can just put those files",
    "start": "1661790",
    "end": "1668690"
  },
  {
    "text": "on that okay did that computer style system this is great because it we now",
    "start": "1668690",
    "end": "1675410"
  },
  {
    "text": "share volumes or share files between containers they are running on the same",
    "start": "1675410",
    "end": "1681049"
  },
  {
    "text": "host again you have to do a special configuration about the sharing just to",
    "start": "1681049",
    "end": "1686240"
  },
  {
    "text": "just make sure okay that folder of that mountain point is a shared mount point",
    "start": "1686240",
    "end": "1692510"
  },
  {
    "text": "and all the containers can access that folder it's really fast again it's on",
    "start": "1692510",
    "end": "1698450"
  },
  {
    "text": "the host level saying is the container based storage there's no network calls",
    "start": "1698450",
    "end": "1703850"
  },
  {
    "text": "there's no dad whistle overhead stuff like that it's on the local disk you can",
    "start": "1703850",
    "end": "1709490"
  },
  {
    "text": "just read right to that disk now the comments here is that data is down",
    "start": "1709490",
    "end": "1715910"
  },
  {
    "text": "through the host place okay which means leave your host machine dies because as",
    "start": "1715910",
    "end": "1721160"
  },
  {
    "text": "maintenance because of failure because of whatever that data is lost okay so again it's a bit better the",
    "start": "1721160",
    "end": "1728809"
  },
  {
    "text": "durability that we got a deep in container solution but again it's down to the hosts life okay which means when",
    "start": "1728809",
    "end": "1736460"
  },
  {
    "text": "people want to move from let's say on-premise data center over to the cloud",
    "start": "1736460",
    "end": "1741710"
  },
  {
    "text": "they'll have to take on my grade that deal with you okay it does require some",
    "start": "1741710",
    "end": "1747049"
  },
  {
    "text": "additional configuration it isn't that complex configuration but it's a bit of an overhead when you're using it when I",
    "start": "1747049",
    "end": "1755090"
  },
  {
    "text": "use em when should you consider to use it really really really a good example",
    "start": "1755090",
    "end": "1760910"
  },
  {
    "text": "of using host based solution it's for longest okay just write all your logs to a central point on that host I have a",
    "start": "1760910",
    "end": "1768620"
  },
  {
    "text": "log harvester just look at that folder and ship it out there into the central",
    "start": "1768620",
    "end": "1774740"
  },
  {
    "text": "this moment it's a great example of using shared storage announced or a",
    "start": "1774740",
    "end": "1779780"
  },
  {
    "text": "cycle set up okay so I feel set up basically means I have two containers okay there's one another one of them",
    "start": "1779780",
    "end": "1786590"
  },
  {
    "text": "stitches the other web reads that Lee okay now in order to keep that data available for",
    "start": "1786590",
    "end": "1794570"
  },
  {
    "text": "both containers that can use host storage okay so let's say I have an application that reads tweets on Twitter",
    "start": "1794570",
    "end": "1800540"
  },
  {
    "text": "okay one part of it is the actual API caller that pulls the tweets from",
    "start": "1800540",
    "end": "1807980"
  },
  {
    "text": "Twitter and the other component raised those streets and displays them to the",
    "start": "1807980",
    "end": "1814070"
  },
  {
    "text": "user in the list or whatever okay so I have two containers here and one fetches",
    "start": "1814070",
    "end": "1819620"
  },
  {
    "text": "the please save them on a shared host folder and the container of that",
    "start": "1819620",
    "end": "1824660"
  },
  {
    "text": "displacement just read from there and this place okay that's a sidecar set up",
    "start": "1824660",
    "end": "1829960"
  },
  {
    "text": "which is great if you have two components they actually use or need",
    "start": "1829960",
    "end": "1835300"
  },
  {
    "text": "some kind of shared volume to really write data to okay you have a place innovation here because",
    "start": "1835300",
    "end": "1842690"
  },
  {
    "text": "again when we discuss compute earlier if you're running a multiple host cluster",
    "start": "1842690",
    "end": "1848780"
  },
  {
    "text": "okay we have to make sure those two dependent containers end up on the same host machine because we need to read and",
    "start": "1848780",
    "end": "1855590"
  },
  {
    "text": "write from save data store okay a great example is solve it for D is the load",
    "start": "1855590",
    "end": "1863270"
  },
  {
    "start": "1860000",
    "end": "1908000"
  },
  {
    "text": "harasser very similar to and functionality speaking very similar to",
    "start": "1863270",
    "end": "1868340"
  },
  {
    "text": "locks - apology elk step slow G we can run it in a container again and head and",
    "start": "1868340",
    "end": "1876620"
  },
  {
    "text": "look at a shared folder the oak containers right there logs to just",
    "start": "1876620",
    "end": "1881930"
  },
  {
    "text": "picks up those locks from natural volume shut them out to elasticsearch or",
    "start": "1881930",
    "end": "1887000"
  },
  {
    "text": "whatever maybe get your centrioles logging anymore in place and you don't need to interfere would be handle",
    "start": "1887000",
    "end": "1893360"
  },
  {
    "text": "containers you need to grab send your hand inside a container and grab those logs so settlers log saved on the host",
    "start": "1893360",
    "end": "1900440"
  },
  {
    "text": "and so they can read the fast on the host and ship them out",
    "start": "1900440",
    "end": "1906370"
  },
  {
    "start": "1908000",
    "end": "2098000"
  },
  {
    "text": "all right if there's option or a third solution is it isn't an external storage",
    "start": "1908440",
    "end": "1914570"
  },
  {
    "text": "okay again this is the most random Bell proofing technique that we have we've",
    "start": "1914570",
    "end": "1920870"
  },
  {
    "text": "been doing it for a while now most of our application used some kind of external storage it can be s3",
    "start": "1920870",
    "end": "1928750"
  },
  {
    "text": "metamorphoses and meta you name it okay there's a storage and that's",
    "start": "1928750",
    "end": "1934070"
  },
  {
    "text": "externally from our system there is accessible to all our environment for",
    "start": "1934070",
    "end": "1940460"
  },
  {
    "text": "computers or a hosts running in that system we can share it on all Health's",
    "start": "1940460",
    "end": "1946669"
  },
  {
    "text": "not just one hosted anyone can access that data store it's scalable okay just",
    "start": "1946669",
    "end": "1952760"
  },
  {
    "text": "putting any disk then you can do storage okay if you're running on if you require provider lets it be easier because you",
    "start": "1952760",
    "end": "1959330"
  },
  {
    "text": "get scale as the box you may need to configure a do anything special about it and it's durable again if you back up it",
    "start": "1959330",
    "end": "1966980"
  },
  {
    "text": "it's one centralized storage just back it up if you have some issues with it along the way just restore the backup",
    "start": "1966980",
    "end": "1974360"
  },
  {
    "text": "and you're done okay cloud providers have that scalability and durability already built in so it's a great",
    "start": "1974360",
    "end": "1981470"
  },
  {
    "text": "solution when you're running on up and cloud that you find it the columns here",
    "start": "1981470",
    "end": "1986659"
  },
  {
    "text": "there's some additional configuration substantial ok we have to set up the external storage if to buy hardware is",
    "start": "1986659",
    "end": "1993770"
  },
  {
    "text": "running on premise it's not as you have to configure your cloud providers storage options you have to configure a",
    "start": "1993770",
    "end": "2000909"
  },
  {
    "text": "host and say network or some kind of mechanism that they can access that",
    "start": "2000909",
    "end": "2006130"
  },
  {
    "text": "those latency that can be an issue okay again you're not reading from the local",
    "start": "2006130",
    "end": "2012250"
  },
  {
    "text": "disk you're reading from place on the network so you might get some encounter",
    "start": "2012250",
    "end": "2017380"
  },
  {
    "text": "some latency or performance issues okay read/write locks",
    "start": "2017380",
    "end": "2022870"
  },
  {
    "text": "if one instance writes to a file can the other instance read from that file or if",
    "start": "2022870",
    "end": "2028149"
  },
  {
    "text": "we both write to the same file the same time who has precedence who has a lock",
    "start": "2028149",
    "end": "2034090"
  },
  {
    "text": "on that site what concerns that needs to be",
    "start": "2034090",
    "end": "2039290"
  },
  {
    "text": "when you wear with external shared storage now when you use whenever you",
    "start": "2039290",
    "end": "2045980"
  },
  {
    "text": "have clinical data okay we have data that you can't afford to lose and you",
    "start": "2045980",
    "end": "2051860"
  },
  {
    "text": "need to stare store it and save it for long term tailors time put it externally",
    "start": "2051860",
    "end": "2057889"
  },
  {
    "text": "okay it's not down to a host life it's not bound to container lives it's an",
    "start": "2057890",
    "end": "2063290"
  },
  {
    "text": "external it has its own life cycle its own management it's on mating cycles and",
    "start": "2063290",
    "end": "2068870"
  },
  {
    "text": "it's a headache of Albin by itself but it's their long-term and skinnable and",
    "start": "2068870",
    "end": "2075860"
  },
  {
    "text": "durable tons of options for external storage we mentioned s3 we mentioned NFS",
    "start": "2075860",
    "end": "2083330"
  },
  {
    "text": "storage blobstore is running around here tons of external storage options all",
    "start": "2083330",
    "end": "2092629"
  },
  {
    "text": "right",
    "start": "2092630",
    "end": "2094809"
  },
  {
    "start": "2098000",
    "end": "2141000"
  },
  {
    "text": "that's a very use case ok this was actually part of the work at this for",
    "start": "2098140",
    "end": "2103550"
  },
  {
    "text": "the client and the story goes from terminalia the whole application web",
    "start": "2103550",
    "end": "2111140"
  },
  {
    "text": "based application the dates and calculations on maps okay I'd like this",
    "start": "2111140",
    "end": "2116600"
  },
  {
    "text": "giant matter of your country it drew a polygon inside that that's nap",
    "start": "2116600",
    "end": "2122270"
  },
  {
    "text": "it's said when I say that a signal crease data get some image manipulation it's from all kinds of crazy stuff but",
    "start": "2122270",
    "end": "2129320"
  },
  {
    "text": "in order to run that these maps and those queries and polygons then is some",
    "start": "2129320",
    "end": "2135020"
  },
  {
    "text": "kind of GIS engine geographical information system okay I decided to use Gale sir okay um does",
    "start": "2135020",
    "end": "2143750"
  },
  {
    "start": "2141000",
    "end": "2205000"
  },
  {
    "text": "the wanted to do it inside a container and Gale server by design is a stateful",
    "start": "2143750",
    "end": "2149450"
  },
  {
    "text": "application it needs to save its maps data store somewhere and we we had to",
    "start": "2149450",
    "end": "2154610"
  },
  {
    "text": "design a whole solution how to run game server inside a container so that's game server it's all open source you can find",
    "start": "2154610",
    "end": "2162230"
  },
  {
    "text": "it online it's a java application it runs on top of the tomcat web server the",
    "start": "2162230",
    "end": "2167300"
  },
  {
    "text": "application itself okay the server behind Java server underneath",
    "start": "2167300",
    "end": "2172540"
  },
  {
    "text": "does all the heavy lifting on the data manipulation and retrieval so it's stuff",
    "start": "2172540",
    "end": "2177650"
  },
  {
    "text": "like that the client is just too thin in a REST API call client and those calls",
    "start": "2177650",
    "end": "2184400"
  },
  {
    "text": "are processed by the server map data file stuff like that are all saved and",
    "start": "2184400",
    "end": "2191390"
  },
  {
    "text": "stored in a file system ok some kind of file system it can be local can be",
    "start": "2191390",
    "end": "2196790"
  },
  {
    "text": "remote with those stores actually are designed in a file system so the",
    "start": "2196790",
    "end": "2203000"
  },
  {
    "text": "solution is actually a two-part solution the first part was actually billing that",
    "start": "2203000",
    "end": "2208490"
  },
  {
    "start": "2205000",
    "end": "2257000"
  },
  {
    "text": "Gale server client that instance inside the container ok we based that on top of",
    "start": "2208490",
    "end": "2215630"
  },
  {
    "text": "official town cat image and we just went on and grabbed the static files of your",
    "start": "2215630",
    "end": "2222680"
  },
  {
    "text": "server and place them inside image but you say below is an actual s crap from the text file the darker file we used to",
    "start": "2222680",
    "end": "2231200"
  },
  {
    "text": "build an image again it's just a set of instructions and how to build an image",
    "start": "2231200",
    "end": "2236360"
  },
  {
    "text": "and then run instructions if that that W get thing if it goes out to the Internet",
    "start": "2236360",
    "end": "2242030"
  },
  {
    "text": "pulls down from the air service files or zip and then in fact from inside that",
    "start": "2242030",
    "end": "2248000"
  },
  {
    "text": "image so those are the static files case again with your server client and",
    "start": "2248000",
    "end": "2253130"
  },
  {
    "text": "handles there is a REST API calls the",
    "start": "2253130",
    "end": "2258800"
  },
  {
    "start": "2257000",
    "end": "2346000"
  },
  {
    "text": "other part was actually designed with datastore okay we based on the NFS as much file system share this is",
    "start": "2258800",
    "end": "2265820"
  },
  {
    "text": "on-premise systems within the cloud based system so we have an NFS accelerating system we basically just",
    "start": "2265820",
    "end": "2273550"
  },
  {
    "text": "said ok this is a give server folder and we mounted that chair to the host an",
    "start": "2273550",
    "end": "2280700"
  },
  {
    "text": "only data center so they can access that and share that was the actual vocal",
    "start": "2280700",
    "end": "2286370"
  },
  {
    "text": "command we used and to run it okay the - the flag means it's attached to",
    "start": "2286370",
    "end": "2291590"
  },
  {
    "text": "this macro process that's - v flag that's the actual interesting part let's",
    "start": "2291590",
    "end": "2296750"
  },
  {
    "text": "the volume maps ok which means we have a mount for code NFS share Gale server data and it's",
    "start": "2296750",
    "end": "2304360"
  },
  {
    "text": "mounted and convicted a nurse storage of guilt server and that host mount was",
    "start": "2304360",
    "end": "2309460"
  },
  {
    "text": "actually an offence announced okay so we had the container not in the host folder",
    "start": "2309460",
    "end": "2315130"
  },
  {
    "text": "which mounted an adventure as a great set up because again if Gale server dies",
    "start": "2315130",
    "end": "2320760"
  },
  {
    "text": "crashes from some reason and another one is being good enough to replace it it",
    "start": "2320760",
    "end": "2326620"
  },
  {
    "text": "can access that same data store and it shared around all instances of get",
    "start": "2326620",
    "end": "2332050"
  },
  {
    "text": "server all right so that summarize",
    "start": "2332050",
    "end": "2345070"
  },
  {
    "text": "things up okay um containers are shows with this okay by design their shows",
    "start": "2345070",
    "end": "2351910"
  },
  {
    "start": "2346000",
    "end": "2442000"
  },
  {
    "text": "please okay it's not some bug or flaw in the system in the content by designers",
    "start": "2351910",
    "end": "2357820"
  },
  {
    "text": "on it which is great because again when we're running adjustable occations and we just wanna fix one line of code we",
    "start": "2357820",
    "end": "2365590"
  },
  {
    "text": "just start building your image start at the new container and there you go okay",
    "start": "2365590",
    "end": "2372000"
  },
  {
    "text": "never put critical data inside your containers okay because they're",
    "start": "2372000",
    "end": "2377110"
  },
  {
    "text": "shortlist okay the things which you can afford to lose casually static files stuff like",
    "start": "2377110",
    "end": "2383680"
  },
  {
    "text": "that okay host they say okay they go down for maintenance they crash they fail they",
    "start": "2383680",
    "end": "2390550"
  },
  {
    "text": "die they burn up in flames okay then put stuff there tip again not stuff that you actually care about that",
    "start": "2390550",
    "end": "2397450"
  },
  {
    "text": "you actually want to keep long term okay if possible use cloud provided storage",
    "start": "2397450",
    "end": "2404110"
  },
  {
    "text": "solutions they're scalable durable on the maintenance headache that's not your",
    "start": "2404110",
    "end": "2409450"
  },
  {
    "text": "problem anymore it's your cloud provider problem okay but performance of the nation okay when",
    "start": "2409450",
    "end": "2417070"
  },
  {
    "text": "you're using external storage and we'll consider that performance test bit say",
    "start": "2417070",
    "end": "2422350"
  },
  {
    "text": "they it meets your expectations and your criteria when you decide between those",
    "start": "2422350",
    "end": "2427960"
  },
  {
    "text": "storage options lowers remember when you're running a distributed system",
    "start": "2427960",
    "end": "2433220"
  },
  {
    "text": "distributed storage as well okay has to be accessible absolutely build has to be",
    "start": "2433220",
    "end": "2439310"
  },
  {
    "text": "durable well that's it um questions if you had",
    "start": "2439310",
    "end": "2447020"
  },
  {
    "start": "2442000",
    "end": "2926000"
  },
  {
    "text": "any Wow have a great audience",
    "start": "2447020",
    "end": "2453040"
  },
  {
    "text": "[Music] now I said the docker containers get",
    "start": "2453040",
    "end": "2460670"
  },
  {
    "text": "their risk of Sal occations from the from the host you can use 150 you can use to you can use fight yeah yeah you",
    "start": "2460670",
    "end": "2470630"
  },
  {
    "text": "can you can grow it vertically okay up to the to the resources you have in your",
    "start": "2470630",
    "end": "2477200"
  },
  {
    "text": "system share volume between containers",
    "start": "2477200",
    "end": "2493310"
  },
  {
    "text": "you put data in the data and then you can like destroy the container and then we can it's the same data so as I said",
    "start": "2493310",
    "end": "2501920"
  },
  {
    "text": "that the challenge with that is open data containers can sometimes be deleted",
    "start": "2501920",
    "end": "2507589"
  },
  {
    "text": "by mistake don't put it in their bones better",
    "start": "2507589",
    "end": "2514490"
  },
  {
    "text": "models are great data volumes is a XO is a great concept around containers it basically means I can have a container a",
    "start": "2514490",
    "end": "2521180"
  },
  {
    "text": "data container okay and other containers can mount or share that data container",
    "start": "2521180",
    "end": "2527270"
  },
  {
    "text": "okay it's kind of like host-based storage but in containers okay that",
    "start": "2527270",
    "end": "2532310"
  },
  {
    "text": "files in storage inside a container Raymond all the other instances just look at that containers and shared okay",
    "start": "2532310",
    "end": "2539210"
  },
  {
    "text": "now what happens to that data container dice well your data isn't really lost okay it saves in belukha file system so",
    "start": "2539210",
    "end": "2546410"
  },
  {
    "text": "when you build up a new container it can access that same data volume fishes",
    "start": "2546410",
    "end": "2552589"
  },
  {
    "text": "around this and it's not real scalable okay when you're running a multiple hosts you need to make sure that that",
    "start": "2552589",
    "end": "2559070"
  },
  {
    "text": "data container is available and kinds of hosts which can cause some",
    "start": "2559070",
    "end": "2564190"
  },
  {
    "text": "great overhead and performance issues that's one thing and the other thing you might have some orphaned data volumes",
    "start": "2564190",
    "end": "2571660"
  },
  {
    "text": "around and from deleted or obsolete data containers it's a great great options",
    "start": "2571660",
    "end": "2577390"
  },
  {
    "text": "for mocking okay we need me to you know mark a data store and you don't want to",
    "start": "2577390",
    "end": "2582640"
  },
  {
    "text": "set up a whole new server or you know put some additional software on your",
    "start": "2582640",
    "end": "2588910"
  },
  {
    "text": "computer mocking is a great great option or great use case and for using data container",
    "start": "2588910",
    "end": "2594640"
  },
  {
    "text": "just build a new image in the container put your mark data inside the container and every time you need to write API",
    "start": "2594640",
    "end": "2600970"
  },
  {
    "text": "calls or fetch that data it can just start at the container that has that data inside it is a little scalable and",
    "start": "2600970",
    "end": "2607720"
  },
  {
    "text": "it isn't really doable so not really production greater yeah",
    "start": "2607720",
    "end": "2617310"
  },
  {
    "text": "database well girls are is kind of the database okay that's great that's why it's a great use case keep your file",
    "start": "2626190",
    "end": "2636270"
  },
  {
    "text": "okay even a database and in an SQL Server database in the end of it it has filed",
    "start": "2637140",
    "end": "2645220"
  },
  {
    "text": "as to keep somewhere as LDF or MVS files or whatever okay and it can keep those",
    "start": "2645220",
    "end": "2650230"
  },
  {
    "text": "files on external storage okay which means you're safe okay again this",
    "start": "2650230",
    "end": "2656619"
  },
  {
    "text": "is critical data it's crucial data I would have done it I'm going to put in the host probably written on an external",
    "start": "2656619",
    "end": "2663580"
  },
  {
    "text": "sponge yep you can you can performance",
    "start": "2663580",
    "end": "2677830"
  },
  {
    "text": "to be a sucky thing your detested but again if it's not critical data to",
    "start": "2677830",
    "end": "2687070"
  },
  {
    "text": "though it's not real-time data okay the yoke scuri okay if it gets like a half a",
    "start": "2687070",
    "end": "2692890"
  },
  {
    "text": "second delay it's fine that's okay it isn't crucial in a time-based data then it's great okay put it outside okay",
    "start": "2692890",
    "end": "2699780"
  },
  {
    "text": "if it's critical data this need some additional consideration subtype",
    "start": "2699780",
    "end": "2706990"
  },
  {
    "text": "critically they're all great Laplanders",
    "start": "2706990",
    "end": "2720240"
  },
  {
    "text": "ubuntu soda is highly tested okay most new docker container features or mostly",
    "start": "2720810",
    "end": "2727210"
  },
  {
    "text": "Ana tested on Ubuntu server I have a great great experiment sentence some to",
    "start": "2727210",
    "end": "2733570"
  },
  {
    "text": "seven Red Hat has some issues with running Ducker very very very very leash",
    "start": "2733570",
    "end": "2741520"
  },
  {
    "text": "use cases stuff like that the most modern Linux systems with 4.0 kernels on",
    "start": "2741520",
    "end": "2748600"
  },
  {
    "text": "above can run containers pretty much great now witness sorry does not guys why with",
    "start": "2748600",
    "end": "2754210"
  },
  {
    "text": "us that can be whatever you want you",
    "start": "2754210",
    "end": "2760330"
  },
  {
    "text": "don't really even need an operating system inside the container offerings insulin is a very convenient base for a",
    "start": "2760330",
    "end": "2767920"
  },
  {
    "text": "container image because by default operating system has a lot of what my",
    "start": "2767920",
    "end": "2774460"
  },
  {
    "text": "codes really me and network interfaces and it has environment variables and a bunch of",
    "start": "2774460",
    "end": "2780550"
  },
  {
    "text": "stuff that my codes agent meets so usually we base our images on top of an",
    "start": "2780550",
    "end": "2786460"
  },
  {
    "text": "operating system okay let's take a bundle for example and then put my dependencies on top of that ability and",
    "start": "2786460",
    "end": "2793360"
  },
  {
    "text": "then put markers on top of those dependencies and you get an image that already has an operating system inside",
    "start": "2793360",
    "end": "2799210"
  },
  {
    "text": "it isn't a requirement you can deal with all the operating systems okay I've seen projects are basically just",
    "start": "2799210",
    "end": "2806200"
  },
  {
    "text": "compiled binary inside a container it's a binary in a box okay and that binary has everything he needs to run okay",
    "start": "2806200",
    "end": "2813580"
  },
  {
    "text": "proxy HTTP a winner okay so binary in a box again containers are more of",
    "start": "2813580",
    "end": "2821440"
  },
  {
    "text": "packaging mechanism and distribution mechanism when an actual environment to",
    "start": "2821440",
    "end": "2827680"
  },
  {
    "text": "run the code you really need an operating system this I want the bells",
    "start": "2827680",
    "end": "2845470"
  },
  {
    "text": "get really really really hazy I've been",
    "start": "2845470",
    "end": "2850780"
  },
  {
    "text": "doing it on my personal computer okay I understand which has darker on a",
    "start": "2850780",
    "end": "2856330"
  },
  {
    "text": "vacation it works it should work fine",
    "start": "2856330",
    "end": "2861880"
  },
  {
    "text": "okay as long as containers are agnostic to the operating system okay",
    "start": "2861880",
    "end": "2867460"
  },
  {
    "text": "they're agnostic to the host okay the same way that virtual machines are agnostic to the hardware okay you got a",
    "start": "2867460",
    "end": "2873550"
  },
  {
    "text": "hypervisor that actually does the resource allocation between the virtual machine and the physical hardware containers are agnostic to the operating",
    "start": "2873550",
    "end": "2880450"
  },
  {
    "text": "system okay then we'll really care if it's Alex what kind of flavor is Linux or whatever and the D don't even care if",
    "start": "2880450",
    "end": "2886390"
  },
  {
    "text": "it's a virtual physical machine it's a visible the variable subscribe oh it is",
    "start": "2886390",
    "end": "2892450"
  },
  {
    "text": "yeah it's new she's not great that's my completed them right a better",
    "start": "2892450",
    "end": "2899170"
  },
  {
    "text": "solution will be running es6 which is a vmware solution on top of your hardware",
    "start": "2899170",
    "end": "2905050"
  },
  {
    "text": "and then your virtual machines can you just drop with this you know didn't really need it as a mediator",
    "start": "2905050",
    "end": "2913140"
  },
  {
    "text": "well great guys you've been a great audience thank you very much keep your data safe",
    "start": "2914040",
    "end": "2922140"
  }
]