[
  {
    "text": "so welcome everyone thank you so much for attending this talk um it's going to be a little bit of a",
    "start": "2820",
    "end": "9120"
  },
  {
    "text": "deep dive into durable functions and durable functions are really fun to work",
    "start": "9120",
    "end": "14880"
  },
  {
    "text": "with but when you come to it especially like me from a.net background and you",
    "start": "14880",
    "end": "20699"
  },
  {
    "text": "think you understand how an application works and then you notice that it works in a very different manner so we are going to talk about that and hopefully",
    "start": "20699",
    "end": "27720"
  },
  {
    "text": "that will help you understand some of the caveats some of the issues that you can have when you develop functions like",
    "start": "27720",
    "end": "34260"
  },
  {
    "text": "that your able functions like that so my name is William I work for",
    "start": "34260",
    "end": "39420"
  },
  {
    "text": "Microsoft for azure and today we are going to do a brief recap about Azure function but that's",
    "start": "39420",
    "end": "45780"
  },
  {
    "text": "going to be brief so if we if you have never worked with Azure functions before",
    "start": "45780",
    "end": "50879"
  },
  {
    "text": "um expect that we will go pretty fast into the hard stuff into the you know",
    "start": "50879",
    "end": "56160"
  },
  {
    "text": "the Advent stuff right nonetheless we will just talk a little bit about functions and I think that you should be",
    "start": "56160",
    "end": "62219"
  },
  {
    "text": "able to catch up as we go then after that we'll talk about durable functions",
    "start": "62219",
    "end": "67439"
  },
  {
    "text": "in itself we'll understand why they were even developed all right they came later than functions as an extension to the",
    "start": "67439",
    "end": "74400"
  },
  {
    "text": "the Azure function framework or whatever you want to call that and then we'll",
    "start": "74400",
    "end": "80400"
  },
  {
    "text": "talk about how those durable functions actually work what com what components are inside those some patterns that you",
    "start": "80400",
    "end": "88500"
  },
  {
    "text": "can execute with those because a durable function is essentially a workflow",
    "start": "88500",
    "end": "93780"
  },
  {
    "text": "orchestrator and so you can have using those workflows different patterns that",
    "start": "93780",
    "end": "98880"
  },
  {
    "text": "you can create and combine by the way and then we'll see that's going to be the major portion of the talk some tips",
    "start": "98880",
    "end": "105060"
  },
  {
    "text": "and tricks like what is going wrong and why and how can you fix it essentially",
    "start": "105060",
    "end": "110520"
  },
  {
    "text": "and this is all based on stuffs that I had to go through myself where I cracked my head for a while because I didn't",
    "start": "110520",
    "end": "116759"
  },
  {
    "text": "understand why this properties was null even though I said it before okay so",
    "start": "116759",
    "end": "122159"
  },
  {
    "text": "these kind of things all right so let's talk quickly about Azure functions Azure functions are a",
    "start": "122159",
    "end": "127860"
  },
  {
    "text": "serverless offering that we have on Azure it's not the only serverless offering it's one of many uh it's a",
    "start": "127860",
    "end": "134760"
  },
  {
    "text": "serverless offering which allows you to write code without having to worry too much about where that code is going to",
    "start": "134760",
    "end": "140040"
  },
  {
    "text": "run roughly said so it allows you to avoid thinking too",
    "start": "140040",
    "end": "146160"
  },
  {
    "text": "much about the infrastructure all right you're going to create your function application the only thing you have to",
    "start": "146160",
    "end": "151379"
  },
  {
    "text": "say is all right is it going to be Linux or Windows that's pretty much it and then after that okay maybe you have",
    "start": "151379",
    "end": "158819"
  },
  {
    "text": "to say you want consumption or something else we'll talk about that but essentially this is pretty simple and",
    "start": "158819",
    "end": "164400"
  },
  {
    "text": "then you say this is where I want my function application to run you know it's the newest Western us Western",
    "start": "164400",
    "end": "169860"
  },
  {
    "text": "Europe you know Africa etc etc and uh and then that's it it runs pretty much",
    "start": "169860",
    "end": "176580"
  },
  {
    "text": "okay so you don't have to worry about it also the cool thing is that those",
    "start": "176580",
    "end": "181739"
  },
  {
    "text": "functional applications are going to scale on demand so what it means is that if you're let's say a startup and you",
    "start": "181739",
    "end": "187980"
  },
  {
    "text": "have code out there like you know some apis or something and you don't have a",
    "start": "187980",
    "end": "193920"
  },
  {
    "text": "lot of visitors you're going to pay essentially almost nothing you're probably going to stay inside the free",
    "start": "193920",
    "end": "199980"
  },
  {
    "text": "tier what what we call the free tier of azure function which means that per month we give you a certain number of",
    "start": "199980",
    "end": "205379"
  },
  {
    "text": "executions which are free you're going to pay maybe a little something for the storage because okay the code has to be",
    "start": "205379",
    "end": "212159"
  },
  {
    "text": "stored somewhere but this is minimal and then on the other hand if suddenly you get successful and you need really a",
    "start": "212159",
    "end": "218819"
  },
  {
    "text": "large number of function instances to support you know the Demand right to to",
    "start": "218819",
    "end": "224159"
  },
  {
    "text": "cover all the requests then we are going to just give you those instances at some",
    "start": "224159",
    "end": "229500"
  },
  {
    "text": "point you're going to exceed the free tier which means you're going to start paying but of course paying is okay when",
    "start": "229500",
    "end": "234840"
  },
  {
    "text": "you make money right so it kind of kind of makes sense and because we build you on demand for",
    "start": "234840",
    "end": "242760"
  },
  {
    "text": "what you actually use they those are pretty cheap to run uh in fact we build you by the second so if you run a",
    "start": "242760",
    "end": "249060"
  },
  {
    "text": "function for 33 seconds we're not going to Blu for a minute we build you for 33 seconds of function runtime okay so it's",
    "start": "249060",
    "end": "256739"
  },
  {
    "text": "very cost efficient but like everything there are some",
    "start": "256739",
    "end": "262079"
  },
  {
    "text": "caveats and there are some compromises that you need to do let's talk first of all about other",
    "start": "262079",
    "end": "268919"
  },
  {
    "text": "Azure serverless Services because we have many of those and so this allows you to run a lot of services without",
    "start": "268919",
    "end": "274680"
  },
  {
    "text": "having to worry too much about the infrastructure for example logic app logic apps allow you to build workflows",
    "start": "274680",
    "end": "281100"
  },
  {
    "text": "but with blocks and the cool thing with logic apps is that they have a lot of connectors so you can for example very",
    "start": "281100",
    "end": "287820"
  },
  {
    "text": "easily log into I don't know Microsoft teams and then do something with messages or Gmail and send messages or",
    "start": "287820",
    "end": "295860"
  },
  {
    "text": "in my case I do a lot of work with data Explorer it's like a huge database that we have you can log into there or etc",
    "start": "295860",
    "end": "303660"
  },
  {
    "text": "etc we have hundreds of connectors very convenient to use another example if is",
    "start": "303660",
    "end": "309300"
  },
  {
    "text": "kubernetes right so we have Azure kubernetes services that you can run in",
    "start": "309300",
    "end": "314400"
  },
  {
    "text": "a serverless manner Azure Cosmos DB can run in the serverless manner as well",
    "start": "314400",
    "end": "320360"
  },
  {
    "text": "signal R I talked about it at the user group you know on Tuesday you can a",
    "start": "320360",
    "end": "326820"
  },
  {
    "text": "deploy signalr this is a an event messaging solution that you add",
    "start": "326820",
    "end": "332699"
  },
  {
    "text": "typically in a classic way you added that into an asp.net application you needed a server to run that now you can",
    "start": "332699",
    "end": "339240"
  },
  {
    "text": "actually deploy that as a standalone service and it runs serverless and then finally static web apps which allow you",
    "start": "339240",
    "end": "346199"
  },
  {
    "text": "to deploy some static content to the web you know HTML CSS JavaScript images Etc",
    "start": "346199",
    "end": "352860"
  },
  {
    "text": "and then run it without having to worry about maintaining the web server so those are just some of the examples to",
    "start": "352860",
    "end": "359940"
  },
  {
    "text": "explain to you a little bit the advantage of serverless however like I said those Azure",
    "start": "359940",
    "end": "365400"
  },
  {
    "text": "functions they're pretty awesome but they have some limitations and one of the limitations especially if you run",
    "start": "365400",
    "end": "372120"
  },
  {
    "text": "those functions in what we call consumption mode meaning this is a mode where you pay exactly for what you use",
    "start": "372120",
    "end": "378360"
  },
  {
    "text": "that's a true serverless way of running functions if you want there are other ways that you can set up you can set up",
    "start": "378360",
    "end": "385440"
  },
  {
    "text": "a consumption mode in premium version which means you're going to pay more but",
    "start": "385440",
    "end": "391740"
  },
  {
    "text": "then some of the limitations are going to be less for example the timeout is going to be longer Etc and then there is",
    "start": "391740",
    "end": "397560"
  },
  {
    "text": "also a way to set functions with an app service plan but in that case you kind of lose all the benefits of the",
    "start": "397560",
    "end": "404400"
  },
  {
    "text": "serverless mode right so let's talk about the consumption mode which is really the serverless mode",
    "start": "404400",
    "end": "410520"
  },
  {
    "text": "the first thing which can be annoying you may have noticed that or heard about it is what we call the cold start there",
    "start": "410520",
    "end": "416160"
  },
  {
    "text": "is uh you know because we want to save money to save you money when the",
    "start": "416160",
    "end": "422280"
  },
  {
    "text": "function is not used he goes to sleep and waking the function from the sleep can take a couple of seconds now it's",
    "start": "422280",
    "end": "428819"
  },
  {
    "text": "not a huge time and to be honest our Engineers have worked really hard to reduce the cold start it's not as bad as",
    "start": "428819",
    "end": "435000"
  },
  {
    "text": "it used to be nonetheless if you want to do some really real time for example",
    "start": "435000",
    "end": "440099"
  },
  {
    "text": "monitoring of a system or something like that those two seconds are in the way and they are a little bit annoying okay",
    "start": "440099",
    "end": "446580"
  },
  {
    "text": "I'm saying two seconds I didn't measure it it's a couple of seconds let's say right a few seconds",
    "start": "446580",
    "end": "452340"
  },
  {
    "text": "so that is an issue in itself another thing which is really annoying with functions is that we are not going",
    "start": "452340",
    "end": "458580"
  },
  {
    "text": "to allow you to run them for very long five minutes is the timeout in",
    "start": "458580",
    "end": "464220"
  },
  {
    "text": "consumption mode all right if you pay premium it can go to 10 minutes and what it means is that if your",
    "start": "464220",
    "end": "470280"
  },
  {
    "text": "function has really a long running task like let's say you want to update hundreds of documents and then save",
    "start": "470280",
    "end": "476400"
  },
  {
    "text": "those documents to a database whatever you're probably going to reach the timeout so it's not great for these kind",
    "start": "476400",
    "end": "482099"
  },
  {
    "text": "of tasks also another thing which is really annoying when you think about how to",
    "start": "482099",
    "end": "487979"
  },
  {
    "text": "structure your application is that those functions are stateless all right so when the function wakes up when it's",
    "start": "487979",
    "end": "493800"
  },
  {
    "text": "called by a trigger it's going to obtain state from somewhere it can be a database it can be if it's an HTTP",
    "start": "493800",
    "end": "500099"
  },
  {
    "text": "function it can be an HTTP request it can be I don't know blob storage things",
    "start": "500099",
    "end": "505440"
  },
  {
    "text": "like that then it's going to process it's going to save the state somewhere again and then of that it's going to go",
    "start": "505440",
    "end": "512339"
  },
  {
    "text": "back to sleep the next time a function want to take over it's going to have to do the same thing and it's a little bit",
    "start": "512339",
    "end": "519000"
  },
  {
    "text": "difficult to coordinate them to say all right I want to start function a and then I want to start function B you can",
    "start": "519000",
    "end": "525600"
  },
  {
    "text": "do it but it's a little bit tricky to do all right so there is no orchestration and the word is said orchestration that",
    "start": "525600",
    "end": "532260"
  },
  {
    "text": "the the keyword of durable functions all right so this is why durable functions were created so how did I come to",
    "start": "532260",
    "end": "539760"
  },
  {
    "text": "durable functions and why did I use it in production the most I would say this",
    "start": "539760",
    "end": "545940"
  },
  {
    "text": "is a series of page that we have on microsoft.com it runs at docs.microsoft.com events all right and",
    "start": "545940",
    "end": "554880"
  },
  {
    "text": "what we want you to do there is say all right we have hundreds of sessions in our primary events ignite build Etc and",
    "start": "554880",
    "end": "563160"
  },
  {
    "text": "those sessions leave online for a while but after a while we couldn't really see them anymore so we want to Archive them",
    "start": "563160",
    "end": "570060"
  },
  {
    "text": "we want to keep them forever or at least as long as Microsoft leaves which is probably going to be forever let's face",
    "start": "570060",
    "end": "575459"
  },
  {
    "text": "it so how can we do that and in an",
    "start": "575459",
    "end": "580920"
  },
  {
    "text": "automated manner if we can right so you have to imagine that in order to do that the workflow is I'm going to go",
    "start": "580920",
    "end": "587760"
  },
  {
    "text": "and hit an API which is going to give me some Json the Json is going to be a list",
    "start": "587760",
    "end": "593519"
  },
  {
    "text": "of 300 sessions roughly for ignite for example and then for each session I need",
    "start": "593519",
    "end": "599580"
  },
  {
    "text": "to check has it already been streamed in which case I can publish it otherwise",
    "start": "599580",
    "end": "605519"
  },
  {
    "text": "I have to wait all right so if I can publish it I need to create a page the page is made in markdown and then this",
    "start": "605519",
    "end": "613200"
  },
  {
    "text": "page I'm going to check it in to commit it check-in is an old word from visual Soul save time sorry I'm old I'm going",
    "start": "613200",
    "end": "620760"
  },
  {
    "text": "to commit it like you youngsters say to commit it into GitHub and when we commit",
    "start": "620760",
    "end": "626880"
  },
  {
    "text": "into GitHub it's going to kick a process which isn't building the docs.microsoft.com pages that is an",
    "start": "626880",
    "end": "633720"
  },
  {
    "text": "automation that is already existing so of course if I have 300 pages to create it takes a long time all right I",
    "start": "633720",
    "end": "640440"
  },
  {
    "text": "need to create the page and I need to compare with the existing version in GitHub to see if I need to commit it or not etc etc it takes a long time",
    "start": "640440",
    "end": "648000"
  },
  {
    "text": "it's the first time I ran this took me 33 minutes on my Surface Pro now granted this is not a very fast machine",
    "start": "648000",
    "end": "655079"
  },
  {
    "text": "but the funny thing is that I wanted to run this every 30 minutes so if the whole thing takes 33 minutes I have a",
    "start": "655079",
    "end": "661500"
  },
  {
    "text": "problem right this is another example of one of those pages so basically we were creating",
    "start": "661500",
    "end": "666839"
  },
  {
    "text": "multiple Pages some some indexes and send the pages themselves so the solution to that is to optimize",
    "start": "666839",
    "end": "674880"
  },
  {
    "text": "that to parallelize everything and saying all right if I want to create 300 pages I don't need to create them one",
    "start": "674880",
    "end": "682079"
  },
  {
    "text": "after the other I can create them all together I just need 300 functions and that's cool because this is how",
    "start": "682079",
    "end": "688260"
  },
  {
    "text": "functions work I'm going to get as many as I need but of course I'm going to need something to coordinate the whole",
    "start": "688260",
    "end": "693420"
  },
  {
    "text": "thing all right so the way that the durable function works it's actually a composite of",
    "start": "693420",
    "end": "699360"
  },
  {
    "text": "multiple functions the first thing is that you're going to start the whole thing for example via an",
    "start": "699360",
    "end": "705540"
  },
  {
    "text": "HTTP request in which case you take an HTTP triggered function or maybe a timer",
    "start": "705540",
    "end": "711000"
  },
  {
    "text": "Trigger or maybe a q trigger Etc we have essentially this is just a normal function all right like anything that",
    "start": "711000",
    "end": "718440"
  },
  {
    "text": "you that can that can trigger a function you can use there and then this function is going to start",
    "start": "718440",
    "end": "724380"
  },
  {
    "text": "another function which we call the orchestrator now this one is a special",
    "start": "724380",
    "end": "729540"
  },
  {
    "text": "type of trigger it needs to be started from a function application and you get an orchestration",
    "start": "729540",
    "end": "736380"
  },
  {
    "text": "context as a parameter of that this is something which is managed by the system",
    "start": "736380",
    "end": "742260"
  },
  {
    "text": "now the orchestrator is where you define the workflow of your function",
    "start": "742260",
    "end": "747300"
  },
  {
    "text": "application and you're going to execute multiple activities so the orchestrator is going",
    "start": "747300",
    "end": "753300"
  },
  {
    "text": "to start the first activity based on your code and then notice that the orchestrator is",
    "start": "753300",
    "end": "759360"
  },
  {
    "text": "not there anymore it goes to sleep why do we put the orchestrator to sleep it's to save money again we don't want the",
    "start": "759360",
    "end": "765839"
  },
  {
    "text": "orchestrator to run and wait for the result no no the orchestrator goes to sleep like this you pay only for the",
    "start": "765839",
    "end": "773040"
  },
  {
    "text": "activity trigger and then when the activity trigger is done when it's finished the system is",
    "start": "773040",
    "end": "779279"
  },
  {
    "text": "going to restart the orchestrator okay and then the orchestrator is going",
    "start": "779279",
    "end": "784380"
  },
  {
    "text": "to go in the code and say all right now I need to start the second activity and then it's going to go to sleep and",
    "start": "784380",
    "end": "790740"
  },
  {
    "text": "then when the activity is finished the orchestrator is going to be restarted again etc etc third activity finally the",
    "start": "790740",
    "end": "798000"
  },
  {
    "text": "orchestrator is started again last time to check that everything was correct clean up and then done all right so keep",
    "start": "798000",
    "end": "807000"
  },
  {
    "text": "that in mind because it's important to understand some of the things you will see in the demo the orchestrator goes to",
    "start": "807000",
    "end": "812579"
  },
  {
    "text": "sleep every time okay so when you want to do workflows on",
    "start": "812579",
    "end": "819300"
  },
  {
    "text": "Azure this is not the only way that you can do workflows another example if things like power ups and especially",
    "start": "819300",
    "end": "825060"
  },
  {
    "text": "power automate for example you can build workflows logic app already mentioned it but durable functions are a way to build",
    "start": "825060",
    "end": "832740"
  },
  {
    "text": "workflows with code and so it's quite convenient for developers which I'm going to assume you all are to an extent",
    "start": "832740",
    "end": "839339"
  },
  {
    "text": "at least if you're comfortable with code and you can of course build those with the c-sharp like I'm going to do in the",
    "start": "839339",
    "end": "846300"
  },
  {
    "text": "demos but also JavaScript Java and other supported languages all right",
    "start": "846300",
    "end": "852720"
  },
  {
    "text": "so let's talk about the patterns that you can do because I talked about workflows which means that you can combine those functions in different",
    "start": "852720",
    "end": "858600"
  },
  {
    "text": "ways so one pattern which is used a lot is function chaining Now function chaining is something that you can",
    "start": "858600",
    "end": "864480"
  },
  {
    "text": "actually do with normal functions you can say all right I'm going to start the first function",
    "start": "864480",
    "end": "870000"
  },
  {
    "text": "and then the first function is going to save state for example to blob storage and then when the blob changes it's",
    "start": "870000",
    "end": "876300"
  },
  {
    "text": "going to kick the second function which is going to do something and save to another blob storage and then that's",
    "start": "876300",
    "end": "881820"
  },
  {
    "text": "going to kick the third function so doable but a little bit cumbersome on the other hand with durable functions",
    "start": "881820",
    "end": "888300"
  },
  {
    "text": "it's very easy because you don't have to worry about saving to storage that's going to happen automatically by the",
    "start": "888300",
    "end": "893820"
  },
  {
    "text": "system every time you return something from an activity function it's going to be stored into Azure blob storage",
    "start": "893820",
    "end": "900120"
  },
  {
    "text": "automatically so you don't have to worry about it so when you read the code the code is way cleaner it's going to be I'm",
    "start": "900120",
    "end": "906779"
  },
  {
    "text": "going to execute function one and then I'm going to execute function 2 using the return value of function one okay",
    "start": "906779",
    "end": "912839"
  },
  {
    "text": "but of course under the covers there is a whole lot of serialization and this",
    "start": "912839",
    "end": "918420"
  },
  {
    "text": "realization happening and we'll talk about that another pattern and that's the one that",
    "start": "918420",
    "end": "924660"
  },
  {
    "text": "I was using for the for my docs.microsoft.com example this is fan",
    "start": "924660",
    "end": "930120"
  },
  {
    "text": "out fan in so here what you're going to say you're going to prepare a number of",
    "start": "930120",
    "end": "935220"
  },
  {
    "text": "activities and then you're going to run them all at once and then you're going to wait until you can decide either one",
    "start": "935220",
    "end": "943500"
  },
  {
    "text": "of them is completed and I knew continue or all of them are completed and then you gather the result in a big list and",
    "start": "943500",
    "end": "950279"
  },
  {
    "text": "then you continue and the beauty of it all is that of course you can combine those patterns",
    "start": "950279",
    "end": "956100"
  },
  {
    "text": "and then you can have you know function chaining and then you fan out and then you fan in again and then you do some",
    "start": "956100",
    "end": "962040"
  },
  {
    "text": "more function chaining etc etc essentially as much as you want the beauty of it is that you won't have time",
    "start": "962040",
    "end": "967860"
  },
  {
    "text": "out on the whole thing because every function has a five minutes timeout you",
    "start": "967860",
    "end": "973500"
  },
  {
    "text": "see so if you do function chaining with 300 functions and each one has a five",
    "start": "973500",
    "end": "979079"
  },
  {
    "text": "minute timeout essentially you have a total of you know I cannot even do the mass it's too big 1500 minutes okay",
    "start": "979079",
    "end": "987839"
  },
  {
    "text": "so that is pretty cool all right so let's see a demo first of all I'm going to show you those",
    "start": "987839",
    "end": "993420"
  },
  {
    "text": "workflows and how the um how the functions work and after that we'll go into the the caveats and the tips and",
    "start": "993420",
    "end": "999540"
  },
  {
    "text": "tricks and everything all right so for the demo I prepared",
    "start": "999540",
    "end": "1004820"
  },
  {
    "text": "a solution here and by the way this repo is public you will get the link at the",
    "start": "1004820",
    "end": "1009980"
  },
  {
    "text": "end of the presentation and you will also get the slides and everything I mean to put my glasses because apparently I'm very old now I cannot see",
    "start": "1009980",
    "end": "1016639"
  },
  {
    "text": "my screen anymore sorry it's a symptom it's my first month with glassy so I'm not used to them yet",
    "start": "1016639",
    "end": "1023600"
  },
  {
    "text": "all right so first let's start with function chaining",
    "start": "1023600",
    "end": "1028640"
  },
  {
    "text": "function chaining is going to show you how it goes and oh yeah maybe before we start I should show you actually how how",
    "start": "1028640",
    "end": "1034400"
  },
  {
    "text": "to create a function a durable function application because this is a good place to get started so in visual studio for",
    "start": "1034400",
    "end": "1040880"
  },
  {
    "text": "example you're going to create a new project all right you're going to say I want to take a natural function",
    "start": "1040880",
    "end": "1046520"
  },
  {
    "text": "application this is just a standard Azure function application and before you need to add the durable function",
    "start": "1046520",
    "end": "1053299"
  },
  {
    "text": "extension as an extension explicitly manually but now you don't need that anymore it's just part of the SDK",
    "start": "1053299",
    "end": "1059900"
  },
  {
    "text": "alright so if you install the latest version of the SDK everything is there already I'm just going to create whatever",
    "start": "1059900",
    "end": "1066740"
  },
  {
    "text": "function that is and then instead of selecting the standard triggers that we know like Q trigger HTTP trigger blob",
    "start": "1066740",
    "end": "1074299"
  },
  {
    "text": "trigger Etc I'm going to select a durable function orchestration you can select for durable functions you",
    "start": "1074299",
    "end": "1082580"
  },
  {
    "text": "need storage so that is important for a standard function application you can",
    "start": "1082580",
    "end": "1087620"
  },
  {
    "text": "create it and you can say none for the for the storage okay that's going to work except of course if you explicitly",
    "start": "1087620",
    "end": "1094640"
  },
  {
    "text": "need storage but for the durable function application you need storage because it's going to rely on storage",
    "start": "1094640",
    "end": "1100280"
  },
  {
    "text": "for a lot of things we are going to check that out in a moment okay so you can of course run locally with a storage",
    "start": "1100280",
    "end": "1106039"
  },
  {
    "text": "emulator or you can just browse for an actual Azure storage account all right",
    "start": "1106039",
    "end": "1113360"
  },
  {
    "text": "cool so I'm going to create that and when it's created you're going to",
    "start": "1113360",
    "end": "1119539"
  },
  {
    "text": "have some boilerplate code like we say so let's start at the bottom you have here",
    "start": "1119539",
    "end": "1125840"
  },
  {
    "text": "an HTTP trigger application this is the one that that is going to start the whole orchestration now you could",
    "start": "1125840",
    "end": "1131960"
  },
  {
    "text": "replace that with something else with a timer trigger for example if you want your code to run every half an hour or",
    "start": "1131960",
    "end": "1137360"
  },
  {
    "text": "something and this one is going to be get or pull so basically it's just a standard",
    "start": "1137360",
    "end": "1142460"
  },
  {
    "text": "function what it's going to do it's going to call here start new async all",
    "start": "1142460",
    "end": "1147500"
  },
  {
    "text": "right and start new I think is going to take the name of the orchestrator function",
    "start": "1147500",
    "end": "1153380"
  },
  {
    "text": "this is all based on string but you can replace that with name of and then you're you're good to go and the",
    "start": "1153380",
    "end": "1158840"
  },
  {
    "text": "orchestrator function is here so you see it is defined with function name Function One this function one here",
    "start": "1158840",
    "end": "1165520"
  },
  {
    "text": "corresponds to the one that I have here then the trigger function is going to",
    "start": "1165520",
    "end": "1172880"
  },
  {
    "text": "return create check status response we'll talk about that in a second forget",
    "start": "1172880",
    "end": "1178520"
  },
  {
    "text": "it for now essentially what you need to know is that the HTTP trigger is going to start the orchestrator and then it's",
    "start": "1178520",
    "end": "1183679"
  },
  {
    "text": "done it goes back to sleep treat on the value and then it goes back to sleep the orchestrator in turn",
    "start": "1183679",
    "end": "1190760"
  },
  {
    "text": "this is where you define your workflow so here we have a function chaining and you see the way that you start an",
    "start": "1190760",
    "end": "1197539"
  },
  {
    "text": "activity function is by calling context that's something that you get here is",
    "start": "1197539",
    "end": "1203240"
  },
  {
    "text": "the orchestration context dot call activity async and then",
    "start": "1203240",
    "end": "1208520"
  },
  {
    "text": "you say what is the return value the return type of this activity function",
    "start": "1208520",
    "end": "1213620"
  },
  {
    "text": "and then you say the name of the function which is again a string and then you can pass a parameter",
    "start": "1213620",
    "end": "1219740"
  },
  {
    "text": "and the parameter can be anything that is serializable and here there is a keyword serializable because we'll talk",
    "start": "1219740",
    "end": "1226400"
  },
  {
    "text": "about serialization in a moment and then let's say this one it's like",
    "start": "1226400",
    "end": "1231860"
  },
  {
    "text": "the orchestrator is actually going to wait for the result of the first one because there is a weight here all right",
    "start": "1231860",
    "end": "1238700"
  },
  {
    "text": "then after that it's going to go into the second one with another parameter and then it's",
    "start": "1238700",
    "end": "1243919"
  },
  {
    "text": "going to go into the third one and then when it's done it's going to return the result which is an array of output a",
    "start": "1243919",
    "end": "1248960"
  },
  {
    "text": "list of outputs the activity trigger is here it's just a standard function but",
    "start": "1248960",
    "end": "1254840"
  },
  {
    "text": "which has here activity trigger instead of having HTTP trigger like the previous one or timer trigger you define it with",
    "start": "1254840",
    "end": "1261320"
  },
  {
    "text": "activity trigger and then you can get a parameter one parameter and then the log",
    "start": "1261320",
    "end": "1267980"
  },
  {
    "text": "and here you can do run code if you want to return something you can do that in",
    "start": "1267980",
    "end": "1273020"
  },
  {
    "text": "that case it was defined as a string which explains why I have string here in",
    "start": "1273020",
    "end": "1278240"
  },
  {
    "text": "the uh in the type okay so that's basically your function your durable function application",
    "start": "1278240",
    "end": "1285260"
  },
  {
    "text": "now let's see a few patterns and a few things so here I have essentially the same code but I cleaned it up a little",
    "start": "1285260",
    "end": "1291080"
  },
  {
    "text": "bit and I put some breakpoints inside it I'm going to start that in debug mode",
    "start": "1291080",
    "end": "1298120"
  },
  {
    "text": "and in order to run this code I'm going to use a cool extension in Visual Studio",
    "start": "1298640",
    "end": "1304159"
  },
  {
    "text": "code which is called rest client I don't know if you know it essentially it's Postman but except you put everything in",
    "start": "1304159",
    "end": "1309919"
  },
  {
    "text": "one text file it's a little bit easier so here I have this extension which means that I Define an HTTP file and",
    "start": "1309919",
    "end": "1316820"
  },
  {
    "text": "then I can do a get I can do post I can do all kinds of things directly from here all right so let's start let's wait here",
    "start": "1316820",
    "end": "1323780"
  },
  {
    "text": "for the this uh function application to start here we go you see that I have quite a lot of stuff in here this is all",
    "start": "1323780",
    "end": "1330320"
  },
  {
    "text": "the examples I'm going to show you and I have a breakpoint in the HTTP",
    "start": "1330320",
    "end": "1335840"
  },
  {
    "text": "start so I'm going to click on the first one so now I'm inside",
    "start": "1335840",
    "end": "1342320"
  },
  {
    "text": "let me open that to have a little bit more space I'm inside the HTTP trigger application",
    "start": "1342320",
    "end": "1348320"
  },
  {
    "text": "if I click on F5 it's going to start the orchestrator and then it's going to go",
    "start": "1348320",
    "end": "1353600"
  },
  {
    "text": "back to sleep so let's do that here we go now I'm inside the orchestrator the first function is done you see it",
    "start": "1353600",
    "end": "1360980"
  },
  {
    "text": "returned already something it returned 202 which means essentially okay but it's",
    "start": "1360980",
    "end": "1367039"
  },
  {
    "text": "not the same simple okay it's okay it's accepted that's what the function application returns if it starts",
    "start": "1367039",
    "end": "1372500"
  },
  {
    "text": "correctly and then it returns here a little bit of a Json payload we'll go back to that in",
    "start": "1372500",
    "end": "1377960"
  },
  {
    "text": "a second essentially it's a collection of of URLs all right we'll talk about that a little bit later",
    "start": "1377960",
    "end": "1384380"
  },
  {
    "text": "now I'm inside the orchestrator so I'm going to go to the next call and here it says I'm",
    "start": "1384380",
    "end": "1391039"
  },
  {
    "text": "going to call the activity called function chaining say hello with a parameter Tokyo so let's do that",
    "start": "1391039",
    "end": "1398360"
  },
  {
    "text": "F5 now I'm inside phone I'm inside function chaining say hello the parameter is",
    "start": "1398360",
    "end": "1404480"
  },
  {
    "text": "equal to Tokyo that's correct so now what do you think will happen if I press F5 if I go here and check the code I was",
    "start": "1404480",
    "end": "1412700"
  },
  {
    "text": "here on 925 I would expect to go to line 28 that's the normal way that the",
    "start": "1412700",
    "end": "1417919"
  },
  {
    "text": "function that an application works in.net however if I press F5",
    "start": "1417919",
    "end": "1423620"
  },
  {
    "text": "I'm going back to line 21. this is because the orchestrator went to",
    "start": "1423620",
    "end": "1429020"
  },
  {
    "text": "sleep because you we don't want you to pay for the LK straighter when it doesn't work okay so the orchestrator went to sleep",
    "start": "1429020",
    "end": "1435919"
  },
  {
    "text": "so the next time the system has to restart the orchestrator but this time the orchestrator",
    "start": "1435919",
    "end": "1442279"
  },
  {
    "text": "is going to say oh call activity are seeing function chaining say hello with parameter Tokyo I already did that so",
    "start": "1442279",
    "end": "1449059"
  },
  {
    "text": "now I'm not going to go into this function instead I'm going to obtain that state from Storage via a",
    "start": "1449059",
    "end": "1455539"
  },
  {
    "text": "deserialization process okay so now my output here has one",
    "start": "1455539",
    "end": "1462200"
  },
  {
    "text": "value which is hello Tokyo and I'm going to run the second one the second one has never been executed yet so if I press F5",
    "start": "1462200",
    "end": "1469820"
  },
  {
    "text": "I'm going to go into the into the the function and this time the parameter is",
    "start": "1469820",
    "end": "1474919"
  },
  {
    "text": "equal to Seattle if I press F5 again I go back to the beginning of my orchestrator",
    "start": "1474919",
    "end": "1480799"
  },
  {
    "text": "but this time the first one has been done the second one has been done now I have two values and now I need to run",
    "start": "1480799",
    "end": "1488179"
  },
  {
    "text": "the third one all right let's click",
    "start": "1488179",
    "end": "1493460"
  },
  {
    "text": "I'm back in the beginning of the orchestrator the third one has been done the output has three values I can press",
    "start": "1493460",
    "end": "1501140"
  },
  {
    "text": "F5 and now I'm done so you see this is quite confusing the",
    "start": "1501140",
    "end": "1506179"
  },
  {
    "text": "first time you debug you're like wait I already did that why do you go back there you know because it's not a normal",
    "start": "1506179",
    "end": "1512600"
  },
  {
    "text": "application it's a function application where we optimize each step of the way okay cool",
    "start": "1512600",
    "end": "1519919"
  },
  {
    "text": "so let's talk about the flow",
    "start": "1519919",
    "end": "1523840"
  },
  {
    "text": "so here I have essentially pretty much the same thing except that I put a delay of 10 seconds in every every time I call",
    "start": "1525440",
    "end": "1532880"
  },
  {
    "text": "this function like this gives me a little bit time to show you what happens remember this return value here that I",
    "start": "1532880",
    "end": "1539900"
  },
  {
    "text": "get when I execute my starter application it has a collection of URI",
    "start": "1539900",
    "end": "1545179"
  },
  {
    "text": "the first URI is something that you can always call and here it's going to give me some",
    "start": "1545179",
    "end": "1551779"
  },
  {
    "text": "information about the function itself oops foreign",
    "start": "1551779",
    "end": "1558278"
  },
  {
    "text": "what is the name of the function application what is the instance ID this is the ID of the Run",
    "start": "1559100",
    "end": "1565760"
  },
  {
    "text": "then it tells me what is the statute for that in that case it's done already I finished it",
    "start": "1565760",
    "end": "1571220"
  },
  {
    "text": "and then it's going to give me here the output so at any time you can call that",
    "start": "1571220",
    "end": "1577940"
  },
  {
    "text": "value so if you have a long running function application you can call and then you're going to get the status is running and",
    "start": "1577940",
    "end": "1584419"
  },
  {
    "text": "then your the output is not done yet so let's demonstrate that if now I start the second one",
    "start": "1584419",
    "end": "1592658"
  },
  {
    "text": "okay the second one is starting but it's going to take 30 seconds to complete so",
    "start": "1593900",
    "end": "1599120"
  },
  {
    "text": "during that time I have time to go and get the statues this one is the status is running and the output is null",
    "start": "1599120",
    "end": "1606200"
  },
  {
    "text": "because it's not finished yet so I can wait until it's completed you",
    "start": "1606200",
    "end": "1611720"
  },
  {
    "text": "see the first one is complete second one is complete I sing the third one",
    "start": "1611720",
    "end": "1617000"
  },
  {
    "text": "is not quite complete yet we just need to wait a little bit more so if I was refreshing I would still get running now",
    "start": "1617000",
    "end": "1623360"
  },
  {
    "text": "it's done and now I can refresh that and I have completed and then I have here the",
    "start": "1623360",
    "end": "1629299"
  },
  {
    "text": "output okay so this is one way to monitor your function application by pulling this URI",
    "start": "1629299",
    "end": "1636679"
  },
  {
    "text": "the other URI that we get are a way to send an event to your",
    "start": "1636679",
    "end": "1642860"
  },
  {
    "text": "function application so you can see if I have a long running function application I can click this with event name here",
    "start": "1642860",
    "end": "1650240"
  },
  {
    "text": "and that's going to actually contact the function application and say oh there is an event that's convenient especially if",
    "start": "1650240",
    "end": "1655700"
  },
  {
    "text": "you want to monitor something and you say all right the way to monitor is basically to send events to the function",
    "start": "1655700",
    "end": "1660860"
  },
  {
    "text": "application which is long running and like this you're going to collect immediately without delay there is no",
    "start": "1660860",
    "end": "1666740"
  },
  {
    "text": "wake up time here because the function is already running okay uh other things you can do is terminate",
    "start": "1666740",
    "end": "1673580"
  },
  {
    "text": "a function application if you have a long running application and you want to stop it you can click that and it's",
    "start": "1673580",
    "end": "1678620"
  },
  {
    "text": "going to terminate it you can Purge the history we'll talk about that in a moment this is one of",
    "start": "1678620",
    "end": "1685159"
  },
  {
    "text": "the tips and tricks I want to show you so you can say all right I want to to clean the history of this function and",
    "start": "1685159",
    "end": "1690860"
  },
  {
    "text": "finally you can restart it okay good so that is the flow now let's see",
    "start": "1690860",
    "end": "1698240"
  },
  {
    "text": "the fan out fan in this one is really cool I like that it's",
    "start": "1698240",
    "end": "1705080"
  },
  {
    "text": "almost the same but you see the biggest difference is that here there is no await keyword I'm not waiting for the",
    "start": "1705080",
    "end": "1711980"
  },
  {
    "text": "result of my activity what it means is that here I'm going to obtain a task of",
    "start": "1711980",
    "end": "1717740"
  },
  {
    "text": "string but I didn't start the task yet and I can create as many as I want I'm",
    "start": "1717740",
    "end": "1723679"
  },
  {
    "text": "going to ask to add them to a list of task of strings all right by the way I",
    "start": "1723679",
    "end": "1729440"
  },
  {
    "text": "don't know if your old.net developer there is equivalent code to do that in JavaScript okay I'm really a.net person",
    "start": "1729440",
    "end": "1734899"
  },
  {
    "text": "but but you can do exactly the same in JavaScript right to be clear and once I have collected all my tasks",
    "start": "1734899",
    "end": "1742640"
  },
  {
    "text": "I'm going to start them which in.net we do by saying task dot when all when all",
    "start": "1742640",
    "end": "1748820"
  },
  {
    "text": "means I want to start everything and I'm going to wait until every one of them is complete",
    "start": "1748820",
    "end": "1753980"
  },
  {
    "text": "you could also stay things like oops when any for example I want to start",
    "start": "1753980",
    "end": "1760580"
  },
  {
    "text": "everything and then as soon as one is complete I'm going to continue the execution of the orchestrator",
    "start": "1760580",
    "end": "1766899"
  },
  {
    "text": "okay so let's run this oh and to demonstrate what happens here I have the same code",
    "start": "1768020",
    "end": "1774919"
  },
  {
    "text": "but this time I'm going to wait for a random value between 5 and 10 seconds",
    "start": "1774919",
    "end": "1780500"
  },
  {
    "text": "okay so let's say that the first time I start this",
    "start": "1780500",
    "end": "1786039"
  },
  {
    "text": "let's see what we get I'm going to start this all right here we have we are going to wait at least five seconds until",
    "start": "1786440",
    "end": "1792860"
  },
  {
    "text": "something happens all right it says Tokyo Seattle and London",
    "start": "1792860",
    "end": "1798799"
  },
  {
    "text": "then the next time I'm going to start that wait five seconds at least",
    "start": "1798799",
    "end": "1804799"
  },
  {
    "text": "and then it's going to say so before we had Tokyo Seattle London now we have Seattle",
    "start": "1804799",
    "end": "1811220"
  },
  {
    "text": "Tokyo London basically those functions are executed they take as much time as they need",
    "start": "1811220",
    "end": "1817340"
  },
  {
    "text": "within the five minutes timeout and then when they come back we show the result okay so that's a way to optimize what",
    "start": "1817340",
    "end": "1824960"
  },
  {
    "text": "the system did here is that it gave me three instances of activity functions if",
    "start": "1824960",
    "end": "1830240"
  },
  {
    "text": "I need 300 it's going to give me 300 if I need 3 million it's going to give me 3 million now of course you're going to",
    "start": "1830240",
    "end": "1835940"
  },
  {
    "text": "pay for the time that it takes to execute all right but it scales",
    "start": "1835940",
    "end": "1843220"
  },
  {
    "text": "okay so let's go back to the presentation",
    "start": "1843220",
    "end": "1848799"
  },
  {
    "text": "and let's talk about a couple of additional patterns",
    "start": "1849140",
    "end": "1854200"
  },
  {
    "text": "here this is pretty much what I showed you where you're going to start you're going to do some work and then you're",
    "start": "1854539",
    "end": "1861260"
  },
  {
    "text": "going to get the statues using one of those Uris that I showed you okay so basically you can always interrogate",
    "start": "1861260",
    "end": "1867500"
  },
  {
    "text": "what's going on in the in the application other patterns essentially every time you want to monitor a system",
    "start": "1867500",
    "end": "1874279"
  },
  {
    "text": "you have patterns you can program a workflow to do that human interaction is",
    "start": "1874279",
    "end": "1880340"
  },
  {
    "text": "pretty much a random thing because you don't know when the person is going to press a button so you have to wait for",
    "start": "1880340",
    "end": "1885440"
  },
  {
    "text": "that person so this is also this kind of patterns aggregator when you have a lot of events and you want to aggregate them",
    "start": "1885440",
    "end": "1891860"
  },
  {
    "text": "all for example before doing some work at the end I'll give you a link to the",
    "start": "1891860",
    "end": "1897080"
  },
  {
    "text": "document where we show those patterns and then there is some some implementation examples as well okay",
    "start": "1897080",
    "end": "1903500"
  },
  {
    "text": "good so let's go into tips and tricks and understand a few of the issues that you",
    "start": "1903500",
    "end": "1910340"
  },
  {
    "text": "can have with those function the first thing was of course the flow is not what you would expect when you",
    "start": "1910340",
    "end": "1917539"
  },
  {
    "text": "are used to code an application which which runs in a Serial manner okay the",
    "start": "1917539",
    "end": "1923539"
  },
  {
    "text": "orchestrator goes to sleep so that's the first caveat second thing",
    "start": "1923539",
    "end": "1928700"
  },
  {
    "text": "when the orchestrator runs it needs to run in a deterministic manner otherwise",
    "start": "1928700",
    "end": "1934340"
  },
  {
    "text": "you're going to get some weird results we'll talk about that in a moment",
    "start": "1934340",
    "end": "1939500"
  },
  {
    "text": "when you have an error inside the function and you want to debug Etc there",
    "start": "1939500",
    "end": "1944720"
  },
  {
    "text": "are some weird things that can happen and again we'll talk about that in a moment serialization is a big deal because",
    "start": "1944720",
    "end": "1952460"
  },
  {
    "text": "every time you return something from a function or every time you pass a parameter to a function it's going to be",
    "start": "1952460",
    "end": "1958039"
  },
  {
    "text": "serialized to Json stored into Azure storage and then deserialize and give them to the instance of the function and",
    "start": "1958039",
    "end": "1964640"
  },
  {
    "text": "this is all invisible to you you're not going to see it but you're going to see the side effects of that so we'll talk",
    "start": "1964640",
    "end": "1970760"
  },
  {
    "text": "about that you cannot wait in the orchestrator",
    "start": "1970760",
    "end": "1975820"
  },
  {
    "text": "except on seeing on tasks created by the context so this is also a big deal if",
    "start": "1975820",
    "end": "1981740"
  },
  {
    "text": "you're in the orchestrator and you want to call an uh an HTTP endpoint using an",
    "start": "1981740",
    "end": "1987260"
  },
  {
    "text": "HTTP client you cannot do that in the orchestrator you need to create an activity for that we'll talk that talk",
    "start": "1987260",
    "end": "1993260"
  },
  {
    "text": "about that with an example finally a few tricks for debugging because when you run 300 functions at the same time I can",
    "start": "1993260",
    "end": "2000039"
  },
  {
    "text": "tell you that it's really hard to debug what's happening because they are going to walk on top of each other okay",
    "start": "2000039",
    "end": "2006039"
  },
  {
    "text": "good so let's see a little bit about that come on here we go",
    "start": "2006039",
    "end": "2012960"
  },
  {
    "text": "all right so first thing I want to show you is this non-deterministic versus",
    "start": "2013059",
    "end": "2020320"
  },
  {
    "text": "deterministic what does it even mean here I'm inside the orchestrator",
    "start": "2020320",
    "end": "2027220"
  },
  {
    "text": "and I'm getting a variable here I get username that it could be anything",
    "start": "2027220",
    "end": "2033360"
  },
  {
    "text": "from the machine on which I'm running well you cannot do that because the",
    "start": "2033360",
    "end": "2040059"
  },
  {
    "text": "orchestrator is going to run many times there is no guarantee at all that the next time the orchestrator runs that",
    "start": "2040059",
    "end": "2046360"
  },
  {
    "text": "it's going to be on the same machine it could be in a totally different Data Center you don't know it depends on how you you",
    "start": "2046360",
    "end": "2052898"
  },
  {
    "text": "know it's going to be in a given region all right that's going to be for example is us2 or whatever but it can be in a",
    "start": "2052899",
    "end": "2058780"
  },
  {
    "text": "totally different building because we optimize functions we we start them whether it's capacity",
    "start": "2058780",
    "end": "2065500"
  },
  {
    "text": "so it's going to run on in on one server the first time then it's going to go back to sleep an activity function is",
    "start": "2065500",
    "end": "2071020"
  },
  {
    "text": "going to start on a totally different servers and it's going to go back to sleep then you're going to start the orchestrator again but this time in a",
    "start": "2071020",
    "end": "2077260"
  },
  {
    "text": "different building okay so you cannot rely on anything from the machine if you",
    "start": "2077260",
    "end": "2083200"
  },
  {
    "text": "try to get for example the IP address on the of the machine on which it is running you cannot do that in the",
    "start": "2083200",
    "end": "2088658"
  },
  {
    "text": "orchestrator you shouldn't do you're going to get some warnings it's going to run but it's going to have some unexpected side effects okay",
    "start": "2088659",
    "end": "2096280"
  },
  {
    "text": "so don't do that instead what you should do",
    "start": "2096280",
    "end": "2101859"
  },
  {
    "text": "you can get this information when you start the whole thing because",
    "start": "2101859",
    "end": "2107380"
  },
  {
    "text": "the trigger applique is a trigger function it's going to start only once and then you're going to pack the",
    "start": "2107380",
    "end": "2113140"
  },
  {
    "text": "information for example let's imagine that this is the IP address that you want to have right of the machine where",
    "start": "2113140",
    "end": "2118240"
  },
  {
    "text": "it started you're going to collect that you're going to save that in an object that can be serialized",
    "start": "2118240",
    "end": "2124359"
  },
  {
    "text": "and then you're going to give this information to the orchestrator when it starts as a",
    "start": "2124359",
    "end": "2130660"
  },
  {
    "text": "parameter then the orchestrator can retrieve that value",
    "start": "2130660",
    "end": "2137859"
  },
  {
    "text": "but the good thing is that the next time the orchestra starts it's going to retrieve the value from the same storage",
    "start": "2137859",
    "end": "2144280"
  },
  {
    "text": "where it was stored by the activity by the by the start function so it's going",
    "start": "2144280",
    "end": "2149920"
  },
  {
    "text": "to be exactly the same value you guarantee that it's the same value okay simple things like date time dot now",
    "start": "2149920",
    "end": "2158380"
  },
  {
    "text": "getting the current time when the function was started if you do that in the orchestrator",
    "start": "2158380",
    "end": "2163720"
  },
  {
    "text": "it does not make any sense because the orchestrator runs many times right so you want to do that in the in the",
    "start": "2163720",
    "end": "2169960"
  },
  {
    "text": "function which starts it all the other thing that you shouldn't do and I put this code that was so gleeful",
    "start": "2169960",
    "end": "2176859"
  },
  {
    "text": "when I saw that because I actually saw that in a in a code review I did",
    "start": "2176859",
    "end": "2182800"
  },
  {
    "text": "somebody was saving a local file in a function application that doesn't make any sense what does local mean",
    "start": "2182800",
    "end": "2189220"
  },
  {
    "text": "in the context of the cloud you don't know the next time the orchestrator is going to run this is going to be a",
    "start": "2189220",
    "end": "2194440"
  },
  {
    "text": "totally different machine this far I guarantee you it's not going to be there all right scody is going to actually run",
    "start": "2194440",
    "end": "2200079"
  },
  {
    "text": "but the file is going to disappear okay so don't do that what you want to do",
    "start": "2200079",
    "end": "2205599"
  },
  {
    "text": "instead well you want to save in a known location for example online storage",
    "start": "2205599",
    "end": "2211660"
  },
  {
    "text": "could be a blob storage could be a database could be something well you have one single endpoint and you know",
    "start": "2211660",
    "end": "2217720"
  },
  {
    "text": "this endpoint is going to be there all right so think about that when you when you design your function",
    "start": "2217720",
    "end": "2224560"
  },
  {
    "text": "okay the other thing is when you have an error now this one is a little bit tricky",
    "start": "2224560",
    "end": "2230800"
  },
  {
    "text": "because I'm going to run here the first activity",
    "start": "2230800",
    "end": "2236619"
  },
  {
    "text": "but I added some code here which says okay if the parameter is CIO I want you to crash",
    "start": "2236619",
    "end": "2243880"
  },
  {
    "text": "the whole application okay so I'm going to run here with the first",
    "start": "2243880",
    "end": "2249099"
  },
  {
    "text": "one the first one is Tokyo it's going to run fine second one is Seattle is going to crash",
    "start": "2249099",
    "end": "2254740"
  },
  {
    "text": "now what happens when you crash an application like that there is a run in",
    "start": "2254740",
    "end": "2259839"
  },
  {
    "text": "the storage which is interrupted which didn't complete",
    "start": "2259839",
    "end": "2265000"
  },
  {
    "text": "and so the next time you start your application it's probably not always but",
    "start": "2265000",
    "end": "2270520"
  },
  {
    "text": "probably going to try to complete the Run okay because this is all stateless the",
    "start": "2270520",
    "end": "2277720"
  },
  {
    "text": "orchestrator is going to ask the storage hey where are you now oh I already did activity number one you",
    "start": "2277720",
    "end": "2284320"
  },
  {
    "text": "need to do activity number two now the problem is when you debug when you when you develop",
    "start": "2284320",
    "end": "2290500"
  },
  {
    "text": "maybe you go and you modify the code here and you change it and you say all right instead of you fix the bug and",
    "start": "2290500",
    "end": "2297700"
  },
  {
    "text": "here instead I say hello from photo name for example well when you run",
    "start": "2297700",
    "end": "2303820"
  },
  {
    "text": "it again the state for the first run was old it doesn't have the front portal saying right because it's Old State so",
    "start": "2303820",
    "end": "2310720"
  },
  {
    "text": "so it is very confusing clearly said in order to solve that and first of all",
    "start": "2310720",
    "end": "2316060"
  },
  {
    "text": "why does it happen let me show you so when you create a function application like that it also creates a few things in storage",
    "start": "2316060",
    "end": "2324160"
  },
  {
    "text": "the first thing that we can look at is a container so let's refresh",
    "start": "2324160",
    "end": "2330640"
  },
  {
    "text": "okay you see those test Hub name up please and Lizzies those are blob",
    "start": "2330640",
    "end": "2336280"
  },
  {
    "text": "containers well you have the state of your application is is serialized there",
    "start": "2336280",
    "end": "2341500"
  },
  {
    "text": "are also some cues which are created those queues control the execute the execution of it all",
    "start": "2341500",
    "end": "2348520"
  },
  {
    "text": "and finally there are some tables where you also have some history and the and the instances",
    "start": "2348520",
    "end": "2354640"
  },
  {
    "text": "in most cases you don't need to worry about those things this is invisible to you you don't care it's taken care of by",
    "start": "2354640",
    "end": "2360820"
  },
  {
    "text": "the system one thing you don't want to do you don't want to delete those because if you delete those your function is not going",
    "start": "2360820",
    "end": "2366820"
  },
  {
    "text": "to run anymore your application it's going to to give you an error the next time it starts you and to say oh I",
    "start": "2366820",
    "end": "2372220"
  },
  {
    "text": "cannot get a lease on the container that's what it means it means it doesn't find the container so don't delete those",
    "start": "2372220",
    "end": "2377440"
  },
  {
    "text": "unless you really know what you're doing okay and the problem here that we have is",
    "start": "2377440",
    "end": "2383859"
  },
  {
    "text": "that the state is saved including the error state so one thing that you can do to clean",
    "start": "2383859",
    "end": "2391000"
  },
  {
    "text": "the state remember we had one of those URI which",
    "start": "2391000",
    "end": "2396760"
  },
  {
    "text": "said Purge history delete URI so this is the URI that you can run",
    "start": "2396760",
    "end": "2403420"
  },
  {
    "text": "and that's going to clean the state but the problem is you cannot just click on it because it needs a delete method",
    "start": "2403420",
    "end": "2409960"
  },
  {
    "text": "so the people who implemented that deleted them very proper way from from a rest standpoint they asked for a delete",
    "start": "2409960",
    "end": "2415839"
  },
  {
    "text": "method but for us it's a little bit annoying because I cannot just click on the link the if I click it's going to be",
    "start": "2415839",
    "end": "2421540"
  },
  {
    "text": "a get and then it's going to tell me I don't know what to do with that I need a delete so essentially what I'm saying",
    "start": "2421540",
    "end": "2426700"
  },
  {
    "text": "here is I never use it I'm sorry to say instead what you can do let me show you",
    "start": "2426700",
    "end": "2431800"
  },
  {
    "text": "a trick you can actually configure you see the name of the Hub here it's called test",
    "start": "2431800",
    "end": "2438760"
  },
  {
    "text": "Hub name okay that's a default name what you can do is that you can tell the",
    "start": "2438760",
    "end": "2445540"
  },
  {
    "text": "the function what it should use for a name and so to do that you're going to add in",
    "start": "2445540",
    "end": "2450640"
  },
  {
    "text": "the host here oops wrong location [Music] in the host here you're going to add",
    "start": "2450640",
    "end": "2457839"
  },
  {
    "text": "this extension durable task Hub name and this value here which has percent at",
    "start": "2457839",
    "end": "2465819"
  },
  {
    "text": "the beginning and at the end it means I want to take a value from the environment variables",
    "start": "2465819",
    "end": "2472000"
  },
  {
    "text": "okay so it's not a fixed name it's going to to read the value from environment variables",
    "start": "2472000",
    "end": "2477220"
  },
  {
    "text": "then the next step is to actually Define this environment variable and you do that in the configuration of the",
    "start": "2477220",
    "end": "2482619"
  },
  {
    "text": "function for example here I already defined it it was not doing anything because it was",
    "start": "2482619",
    "end": "2489040"
  },
  {
    "text": "you know not activated but now it's going to go into my my",
    "start": "2489040",
    "end": "2494740"
  },
  {
    "text": "application configuration and then it's going to read the value so that's going to be the name of the Hub and here I",
    "start": "2494740",
    "end": "2500800"
  },
  {
    "text": "give a name that I can increment so every time I run and I go into a narrow State and then it starts behaving",
    "start": "2500800",
    "end": "2507099"
  },
  {
    "text": "erratically while going I increment it and then at some point at the end of the",
    "start": "2507099",
    "end": "2512140"
  },
  {
    "text": "day I go into my storage and I delete all the old State because I don't need it anymore that's the most direct way I",
    "start": "2512140",
    "end": "2517900"
  },
  {
    "text": "found to do that otherwise what you can do is get Postman or get whatever do a delete copy and paste the URL call the",
    "start": "2517900",
    "end": "2525099"
  },
  {
    "text": "delete and every time it's another URL because every time it's a different run and it's a little bit cumbersome in my opinion so when you debug when you",
    "start": "2525099",
    "end": "2531400"
  },
  {
    "text": "develop I don't have time for that so now if I run this",
    "start": "2531400",
    "end": "2536880"
  },
  {
    "text": "okay just going to take a second to start and let's run something which works for",
    "start": "2537000",
    "end": "2544839"
  },
  {
    "text": "example the Sun out fan in for example ah let's let's just run the function chaining this is the fastest",
    "start": "2544839",
    "end": "2552000"
  },
  {
    "text": "uh okay just need to wait for the function application to start so here I'm running things totally locally by",
    "start": "2552000",
    "end": "2558940"
  },
  {
    "text": "the way um once you deploy to Azure it runs in exactly the same manner of course I will need to remember to set also these",
    "start": "2558940",
    "end": "2565900"
  },
  {
    "text": "variables the environment variable now it's only local all right when I deploy to Azure I need to set that also or else",
    "start": "2565900",
    "end": "2572140"
  },
  {
    "text": "I will have an error okay so now if I start this it is running and now if I go back into",
    "start": "2572140",
    "end": "2578260"
  },
  {
    "text": "the storage and refresh you see now I have another one so now I can go and delete those ones",
    "start": "2578260",
    "end": "2584859"
  },
  {
    "text": "safely because I know they are not used anymore okay so that's okay but if I delete",
    "start": "2584859",
    "end": "2590380"
  },
  {
    "text": "those ones the ones that are used then my function application again is going to stop working so don't do that same",
    "start": "2590380",
    "end": "2596500"
  },
  {
    "text": "thing with the cues all right and same thing with the oh with the containers",
    "start": "2596500",
    "end": "2601900"
  },
  {
    "text": "here you have the containers here so those that are not used you can delete them",
    "start": "2601900",
    "end": "2609099"
  },
  {
    "text": "okay so that is about the the history of your whole application if you want",
    "start": "2609099",
    "end": "2616240"
  },
  {
    "text": "now serialization this one is my favorite example so let's start that",
    "start": "2616240",
    "end": "2622319"
  },
  {
    "text": "uh I need to stop this one because otherwise I have two instances on the same port that's not going to work I",
    "start": "2622319",
    "end": "2628720"
  },
  {
    "text": "start this one in debug mode all right and so what I'm going to do here in the",
    "start": "2628720",
    "end": "2634180"
  },
  {
    "text": "code I'm going to say all right I want to call an activity but I want to give it here a parameter",
    "start": "2634180",
    "end": "2641260"
  },
  {
    "text": "and this parameter is a simple parameter it's a simple class here with just one property and here I'm going to get the",
    "start": "2641260",
    "end": "2649180"
  },
  {
    "text": "parameter from from the the input value and then I'm going to show it and then I'm going to",
    "start": "2649180",
    "end": "2655599"
  },
  {
    "text": "do something with it okay so that's all nice and good but if I run",
    "start": "2655599",
    "end": "2660880"
  },
  {
    "text": "this I'm going to have some unexpected side effects let's do that click all right so now I'm",
    "start": "2660880",
    "end": "2668500"
  },
  {
    "text": "inside here I have my info object my info object has a value Tokyo everything's good I'm going to call the",
    "start": "2668500",
    "end": "2675220"
  },
  {
    "text": "function and now I'm inside here and you see I get object reference not set to an",
    "start": "2675220",
    "end": "2680380"
  },
  {
    "text": "instance of an object what the heck well the problem is that info",
    "start": "2680380",
    "end": "2685660"
  },
  {
    "text": "the name is null so what happened here well what happened here is that I fell",
    "start": "2685660",
    "end": "2692079"
  },
  {
    "text": "victim to something which is a little bit annoying in.net of course in JavaScript you won't have this particular problem",
    "start": "2692079",
    "end": "2698440"
  },
  {
    "text": "which is that Json serializer cannot access properties which are not public",
    "start": "2698440",
    "end": "2705280"
  },
  {
    "text": "okay internal is a value which says everything that is inside the assembly can access it everything which is",
    "start": "2705280",
    "end": "2711280"
  },
  {
    "text": "outside of the assembly cannot access it so the Json serializer is running outside of the assembly it's not going",
    "start": "2711280",
    "end": "2716319"
  },
  {
    "text": "to be able to access it it can get the value correctly but it cannot set it",
    "start": "2716319",
    "end": "2723040"
  },
  {
    "text": "so that's why it's null okay and now I can tell you by experience you can spend",
    "start": "2723040",
    "end": "2729099"
  },
  {
    "text": "a lot of time why the heck because properties at class is going to be somewhere else in another file and you",
    "start": "2729099",
    "end": "2735579"
  },
  {
    "text": "don't think about it and then suddenly it's like oh wait if it's null maybe it's because it's not accessible okay so",
    "start": "2735579",
    "end": "2742420"
  },
  {
    "text": "here the problem is easy to solve I'm going to remove the internal all right",
    "start": "2742420",
    "end": "2747940"
  },
  {
    "text": "but you see the tools sometimes they work against you right if here I have this info class and I say oh that's",
    "start": "2747940",
    "end": "2753760"
  },
  {
    "text": "really cool I want to also add the country and then it's going to tell me I don't",
    "start": "2753760",
    "end": "2759099"
  },
  {
    "text": "know what country is at least in a second it should okay now it tells me oh",
    "start": "2759099",
    "end": "2764260"
  },
  {
    "text": "I don't know what country is so I'm going to say oh this is cool I'm using visual studio I can refactor I'm going",
    "start": "2764260",
    "end": "2769420"
  },
  {
    "text": "to press Ctrl Dot and then generate property country well when it generates those properties",
    "start": "2769420",
    "end": "2775660"
  },
  {
    "text": "it sets them to internal by default so you're going to fall into that multiple times until it's finally into your head",
    "start": "2775660",
    "end": "2782619"
  },
  {
    "text": "or at least into my head I have a hard head okay so be careful about those things serialization can re-bite you",
    "start": "2782619",
    "end": "2790839"
  },
  {
    "text": "if you don't pay attention to that another thing with serialization which is refund",
    "start": "2790839",
    "end": "2797380"
  },
  {
    "text": "you see here I have an object I have a learn Life series okay and learn Life Series has a modules property which is a",
    "start": "2797380",
    "end": "2805720"
  },
  {
    "text": "list of learn Life module and as you would do when you do object oriented you would probably have a",
    "start": "2805720",
    "end": "2812560"
  },
  {
    "text": "property in there which is a parent like this you can easily refer to the parent so you have a collection of objects and",
    "start": "2812560",
    "end": "2818560"
  },
  {
    "text": "each object has a reference to the parent that's cool that's what programming by reference allows you to",
    "start": "2818560",
    "end": "2823839"
  },
  {
    "text": "do which is really nice the problem when you serialize that or when you try to that it's going to",
    "start": "2823839",
    "end": "2831280"
  },
  {
    "text": "fail because you're going to try to serialize the series which is going to serialize all the",
    "start": "2831280",
    "end": "2838180"
  },
  {
    "text": "children but each children has a reference to the parent so it's going to serialize the parent which is going to",
    "start": "2838180",
    "end": "2843460"
  },
  {
    "text": "serialize all the children which is going to serve um it just doesn't do it it just crashes",
    "start": "2843460",
    "end": "2850180"
  },
  {
    "text": "yeah okay so it's going to tell you there is a recursion recurring property or something like",
    "start": "2850180",
    "end": "2856839"
  },
  {
    "text": "that let's see actually so the good thing with this error at least is that the the error message is is pretty",
    "start": "2856839",
    "end": "2864700"
  },
  {
    "text": "pretty easy to understand so I'm going to go and do that and then you see the red here this is",
    "start": "2864700",
    "end": "2870700"
  },
  {
    "text": "error right it says self-referencing Loop detected for property parent with",
    "start": "2870700",
    "end": "2876579"
  },
  {
    "text": "type durable function tricks model Baba learn live series and then it tells you also which instance is a problem so at",
    "start": "2876579",
    "end": "2883240"
  },
  {
    "text": "least it's easy to understand so instead what you need to do is I'm going to go into my module",
    "start": "2883240",
    "end": "2891819"
  },
  {
    "text": "and I'm going to set here the parent to Json ignore I'm going to say don't",
    "start": "2891819",
    "end": "2896980"
  },
  {
    "text": "sterilize that okay but of course if I don't serialize it when I want to use it",
    "start": "2896980",
    "end": "2903760"
  },
  {
    "text": "now I'm going to have to set it before I actually do my work so here in",
    "start": "2903760",
    "end": "2910960"
  },
  {
    "text": "the activity I'm going to go and I'm going to restore this property so that when I do my work the value is actually",
    "start": "2910960",
    "end": "2917500"
  },
  {
    "text": "known okay otherwise of course it's going to crash with a no reference exception so again those are just side",
    "start": "2917500",
    "end": "2923260"
  },
  {
    "text": "effects of the fact of the fact that the durable function extensions use",
    "start": "2923260",
    "end": "2928619"
  },
  {
    "text": "serialization in the background and because you don't really notice it because everything is a little bit",
    "start": "2928619",
    "end": "2934900"
  },
  {
    "text": "hidden that can come and bite you okay so that's why I'm saying those things to you",
    "start": "2934900",
    "end": "2940540"
  },
  {
    "text": "all right what is the next example the next thing I wanted to show you is awaiting",
    "start": "2940540",
    "end": "2946720"
  },
  {
    "text": "orchestrator so in order to do that I'm going to run this again and then let's",
    "start": "2946720",
    "end": "2952000"
  },
  {
    "text": "see the code SO waiting in orchestrator you can do",
    "start": "2952000",
    "end": "2957280"
  },
  {
    "text": "that only if what you await on either tasks it that is created by this idea",
    "start": "2957280",
    "end": "2962920"
  },
  {
    "text": "able orchestration context so here it's fine on line 24 I'm waiting",
    "start": "2962920",
    "end": "2969960"
  },
  {
    "text": "you see what happened this one is funny that's exactly what I was talking to you about before I didn't press anything I",
    "start": "2969960",
    "end": "2977319"
  },
  {
    "text": "press F5 to run my application and then it started doing something without my permission",
    "start": "2977319",
    "end": "2984160"
  },
  {
    "text": "well it was attempting to finish a run that was not completed before that's exactly what I was telling you it has",
    "start": "2984160",
    "end": "2990640"
  },
  {
    "text": "some history in the storage and it remembered hey I didn't finish that one I'm just going to finish it I'm sure",
    "start": "2990640",
    "end": "2996460"
  },
  {
    "text": "Logan will be happy that I finish it actually I'm not okay but okay because I",
    "start": "2996460",
    "end": "3001740"
  },
  {
    "text": "didn't press on Purge history or I didn't change the the value so here not",
    "start": "3001740",
    "end": "3007200"
  },
  {
    "text": "a huge deal because I fixed the serialization issue I can actually run it it's going to run",
    "start": "3007200",
    "end": "3012720"
  },
  {
    "text": "okay now it's done otherwise I would have to go into my local settings Json here",
    "start": "3012720",
    "end": "3019680"
  },
  {
    "text": "and I would increment the value by one and then I wouldn't have this issue okay",
    "start": "3019680",
    "end": "3024960"
  },
  {
    "text": "all right so let's go back to the problem and hand the problem and hand was awaiting orchestrator so here if I",
    "start": "3024960",
    "end": "3031920"
  },
  {
    "text": "wait on something which goes from call activity I think from the context that's okay but here if I try to wait on an",
    "start": "3031920",
    "end": "3039960"
  },
  {
    "text": "HTTP client it's going to fail all right so let's demonstrate that",
    "start": "3039960",
    "end": "3045240"
  },
  {
    "text": "if I go here and waiting orchestrator it's going to come here and then if I",
    "start": "3045240",
    "end": "3050760"
  },
  {
    "text": "press F5 it's going to crash and here too it's actually pretty clear what it says it says multi-threaded",
    "start": "3050760",
    "end": "3057420"
  },
  {
    "text": "execution was detected this can happen if the orchestrator function code awaits on the task that was not created by a",
    "start": "3057420",
    "end": "3063960"
  },
  {
    "text": "durable orchestration context method so you cannot do that actually you shouldn't do that anyway",
    "start": "3063960",
    "end": "3070200"
  },
  {
    "text": "why because the orchestrator is going to run many times so every time you're going to call an",
    "start": "3070200",
    "end": "3075900"
  },
  {
    "text": "HTTP request it doesn't make sense right you want to call it once and then be done with it okay so instead what you",
    "start": "3075900",
    "end": "3081240"
  },
  {
    "text": "need to do you can you need to wrap this in an activity so here inside",
    "start": "3081240",
    "end": "3087920"
  },
  {
    "text": "this this call get random name here this is actually an activity where I'm",
    "start": "3087920",
    "end": "3093480"
  },
  {
    "text": "wrapping the code to the HTTP client this is going to be executed only once it's going to return the random name",
    "start": "3093480",
    "end": "3099839"
  },
  {
    "text": "which is going to be serialized and every time I run here the orchestrator it's going to get the same value",
    "start": "3099839",
    "end": "3106380"
  },
  {
    "text": "okay so like this this is going to run fine and I don't have a problem",
    "start": "3106380",
    "end": "3111780"
  },
  {
    "text": "okay debugging the last one now this one is funny as well when you do a fan out fan in let's see",
    "start": "3111780",
    "end": "3118680"
  },
  {
    "text": "Majin that here I am running I am creating 10 of those tasks 10 of those",
    "start": "3118680",
    "end": "3125339"
  },
  {
    "text": "activities you see I don't have the await keyword here and now I'm running them all in parallel",
    "start": "3125339",
    "end": "3130680"
  },
  {
    "text": "and then I want to debug What's Happening Here as you can imagine it's not very easy",
    "start": "3130680",
    "end": "3136559"
  },
  {
    "text": "because I'm going to go into my orchestrator then I'm going to go into my HTTP into",
    "start": "3136559",
    "end": "3144720"
  },
  {
    "text": "my activity trigger then I'm going to have another activity trigger starting before the first one is complete then",
    "start": "3144720",
    "end": "3150420"
  },
  {
    "text": "I'm going to have a third one then I'm going to have a false one fifths then at some point the first one is going to",
    "start": "3150420",
    "end": "3156480"
  },
  {
    "text": "complete but is it really the first one I don't know it might be the second one that ends before the first one right so",
    "start": "3156480",
    "end": "3161940"
  },
  {
    "text": "those are the joy of you know parallel you know the two the most difficult",
    "start": "3161940",
    "end": "3167099"
  },
  {
    "text": "things in software programming right it's parallel code like multi-threaded code and naming stuff yeah so here we",
    "start": "3167099",
    "end": "3174780"
  },
  {
    "text": "are in the first case scenario which is really hard so essentially what I do here I always test",
    "start": "3174780",
    "end": "3181440"
  },
  {
    "text": "on one first okay and then I I put here a big to do",
    "start": "3181440",
    "end": "3187740"
  },
  {
    "text": "restore because if I forget that my production application is not going to run fine but at least like that I can",
    "start": "3187740",
    "end": "3193500"
  },
  {
    "text": "debug just one call of this activity check what's going on make sure it runs and then when I'm really satisfied that",
    "start": "3193500",
    "end": "3200160"
  },
  {
    "text": "it runs then I go and restore the loop I run it and then if it crashes again and I try to find out okay what activity is",
    "start": "3200160",
    "end": "3207240"
  },
  {
    "text": "the one that crash and I try to restore those those States those exact same States so it's a little bit tricky but",
    "start": "3207240",
    "end": "3214619"
  },
  {
    "text": "essentially uh yeah that's like a trick to do things",
    "start": "3214619",
    "end": "3219660"
  },
  {
    "text": "okay so I think we went through all the stuff I wanted to show you this code is available on GitHub so I'll give you the",
    "start": "3219660",
    "end": "3226740"
  },
  {
    "text": "the repo in a second let's go back to the slides",
    "start": "3226740",
    "end": "3232940"
  },
  {
    "text": "so what did we see we talked about Azure functions and again Azure functions are",
    "start": "3233099",
    "end": "3238440"
  },
  {
    "text": "really cool they are really convenient they help you get started on the problem very easily but they have limitations",
    "start": "3238440",
    "end": "3243839"
  },
  {
    "text": "and so those limitations you can overcome some of them most of them using durable functions especially the ones",
    "start": "3243839",
    "end": "3251040"
  },
  {
    "text": "who has a function is going to timeout after a while I have some durable",
    "start": "3251040",
    "end": "3256319"
  },
  {
    "text": "function application that I'm working on at the moment which is",
    "start": "3256319",
    "end": "3261359"
  },
  {
    "text": "um we go until 20 right here um I have a durable function application which is which I'm using at the moment",
    "start": "3261359",
    "end": "3268319"
  },
  {
    "text": "I'm querying some metrics for the shows that I'm producing I produce a show called learn live and I build a lot of",
    "start": "3268319",
    "end": "3274200"
  },
  {
    "text": "automation for that to help me create everything I need one of the problem is one of the problem I wanted to solve is",
    "start": "3274200",
    "end": "3280500"
  },
  {
    "text": "I need to get Matrix like how many viewers do I have how many uh people completed learn modules based on what I",
    "start": "3280500",
    "end": "3286799"
  },
  {
    "text": "did Etc and for every episode running a query like that takes about a minute or",
    "start": "3286799",
    "end": "3293280"
  },
  {
    "text": "two and I have I don't know I have um",
    "start": "3293280",
    "end": "3299180"
  },
  {
    "text": "70 episodes 80 episodes at the moment and as we go I have four per week right so every week I'm adding four or five",
    "start": "3299180",
    "end": "3305700"
  },
  {
    "text": "episodes so in in the in a year you can imagine I have hundreds of 50s old right so if I want to keep collecting that",
    "start": "3305700",
    "end": "3311880"
  },
  {
    "text": "manually it takes a super long time well here I created the durable function application I'm going to say start",
    "start": "3311880",
    "end": "3319500"
  },
  {
    "text": "it's going to be done when it's done I don't care I know that each call is not going to ex to to go into a timeout",
    "start": "3319500",
    "end": "3325079"
  },
  {
    "text": "because it takes only a minute or two to call the query but I really don't want to do it",
    "start": "3325079",
    "end": "3330240"
  },
  {
    "text": "manually one by one so I'm just creating this function it's going to get the whole list of my episode it's going to",
    "start": "3330240",
    "end": "3335280"
  },
  {
    "text": "call you know the queries 80 times 100 times 200 times and it's just going to send me",
    "start": "3335280",
    "end": "3340500"
  },
  {
    "text": "a message on teams when it's done done right that's cool I thought it in the morning I come back in the evening",
    "start": "3340500",
    "end": "3346559"
  },
  {
    "text": "it's finished so that is nice then we saw the anatomy",
    "start": "3346559",
    "end": "3351660"
  },
  {
    "text": "of a durable function application so how does it go essentially remember it starts with a normal function then it",
    "start": "3351660",
    "end": "3357000"
  },
  {
    "text": "calls an orchestrator function and then after that it calls activity functions and every time the orchestrator goes to",
    "start": "3357000",
    "end": "3362460"
  },
  {
    "text": "sleep so this is a little bit confusing then we saw patterns and then finally we saw the tips and tricks",
    "start": "3362460",
    "end": "3369420"
  },
  {
    "text": "if you want to learn more about that there is this learning path which is called Implement Azure functions and the",
    "start": "3369420",
    "end": "3377220"
  },
  {
    "text": "last module of that learning pass is about durable functions so this is going to allow you to try things out in the",
    "start": "3377220",
    "end": "3385079"
  },
  {
    "text": "web browser directly we give you what we call sandbox you can create your function application then you can try",
    "start": "3385079",
    "end": "3390599"
  },
  {
    "text": "things out by editing some code and it's quite convenient the whole path is one",
    "start": "3390599",
    "end": "3396240"
  },
  {
    "text": "hour 23 minutes according to what they say here but the third module is specifically about durable function so",
    "start": "3396240",
    "end": "3401700"
  },
  {
    "text": "if you want to run just a third module that works few additional",
    "start": "3401700",
    "end": "3407599"
  },
  {
    "text": "additional resources everything you need is down there so if you go to oh I made",
    "start": "3407599",
    "end": "3413520"
  },
  {
    "text": "a mistake actually is NDC portal 22-2 for this one I'll what I'll do is that I",
    "start": "3413520",
    "end": "3419880"
  },
  {
    "text": "will tweet the correctly to be sure that you have it all right so if you don't follow me my Twitter is on the next one",
    "start": "3419880",
    "end": "3426660"
  },
  {
    "text": "that's a cool way to start to get followers I say oh I made a mistake well follow me and then or I can also put it",
    "start": "3426660",
    "end": "3434099"
  },
  {
    "text": "I don't know if you're in the slack for this room there is a slack channel for this room so that I'm also going to put it there okay just to make sure because",
    "start": "3434099",
    "end": "3440339"
  },
  {
    "text": "I'm I cannot trust the QR code anymore now but anyway this is where you find",
    "start": "3440339",
    "end": "3445980"
  },
  {
    "text": "stuff the repo that I mentioned where you have all the code I showed you is there so you can download it and try it",
    "start": "3445980",
    "end": "3451799"
  },
  {
    "text": "out by yourself try it out locally okay it's easy to do or if you want to deploy that to Azure it works as well the",
    "start": "3451799",
    "end": "3458339"
  },
  {
    "text": "durable function patterns the multiple patterns that I mentioned we saw fanout fun in we saw the function chaining and",
    "start": "3458339",
    "end": "3464819"
  },
  {
    "text": "then we saw something where you know the monitoring of the state but there are more more patterns than that so this is",
    "start": "3464819",
    "end": "3470099"
  },
  {
    "text": "the last link here where you can go and find this finally that's it thank you very much",
    "start": "3470099",
    "end": "3475740"
  },
  {
    "text": "for your attention if you have questions I'm going to stick around and feel free to come and talk to me otherwise I'll",
    "start": "3475740",
    "end": "3481140"
  },
  {
    "text": "guess I'll see you at the party later hopefully you stay and yeah it was a pleasure talking to you today thank you",
    "start": "3481140",
    "end": "3486839"
  },
  {
    "text": "so much",
    "start": "3486839",
    "end": "3489140"
  }
]