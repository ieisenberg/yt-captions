[
  {
    "start": "0",
    "end": "61000"
  },
  {
    "text": "all right so it's 421 so we were",
    "start": "30",
    "end": "5580"
  },
  {
    "text": "officially a minute late so I can start so uh how's everyone doing today are",
    "start": "5580",
    "end": "11849"
  },
  {
    "text": "your brains pulsating with painful knowledge that's doing other Puttock",
    "start": "11849",
    "end": "17550"
  },
  {
    "text": "word things that I can't come up with off the top of my head everyone everyone's brain full well I'm sorry but",
    "start": "17550",
    "end": "24689"
  },
  {
    "text": "uh there's always room for webassembly so so this is my talk what's old is new",
    "start": "24689",
    "end": "31439"
  },
  {
    "text": "again an introduction and webassembly I actually picked this picture of a an old adding machine on purpose because it's",
    "start": "31439",
    "end": "39059"
  },
  {
    "text": "old and but it's kind of the you know adding and adding machines kind of the foundation of a lot of computing it's",
    "start": "39059",
    "end": "45360"
  },
  {
    "text": "mechanical but it's it's you know it's a it's a related piece of technology",
    "start": "45360",
    "end": "51539"
  },
  {
    "text": "around the progression of making numbers do our bidding with electronics so I I just thought and that looks kind of cool",
    "start": "51539",
    "end": "58559"
  },
  {
    "text": "so my name is guy Royce and the most",
    "start": "58559",
    "end": "63629"
  },
  {
    "start": "61000",
    "end": "174000"
  },
  {
    "text": "important thing you need to know about me is that I am NOT an expert on webassembly I'm a fan of webassembly",
    "start": "63629",
    "end": "69060"
  },
  {
    "text": "and so I have done stuff with it explored how it works so that I as a developer I can use it and understand it",
    "start": "69060",
    "end": "75360"
  },
  {
    "text": "at a lower level there's a lot of deeper knowledge about it that I'm not gonna have I actually gave this talk last week",
    "start": "75360",
    "end": "81330"
  },
  {
    "text": "and someone came up afterwards and said yeah hi I'm on the web assembly working",
    "start": "81330",
    "end": "86880"
  },
  {
    "text": "committee and I felt really stupid but",
    "start": "86880",
    "end": "92400"
  },
  {
    "text": "he just come up to thank me for you know talking about web assembly because it's it's an important topic to him I mean obviously it would be right and so I'm",
    "start": "92400",
    "end": "100799"
  },
  {
    "text": "coming at this as a developer and as a fan and I've made it do things and I understand how it works but there's you",
    "start": "100799",
    "end": "107130"
  },
  {
    "text": "know I hear conflicting information some people like well it's faster and then I was like well actually it's not",
    "start": "107130",
    "end": "112470"
  },
  {
    "text": "faster yet but it will be faster and it's like well but isn't this blazer it's like well this is the thing Blazers",
    "start": "112470",
    "end": "118619"
  },
  {
    "text": "built on top of so this is you know it's",
    "start": "118619",
    "end": "123810"
  },
  {
    "text": "a web stump we talk from a fan and my goal is to try and get underneath it to",
    "start": "123810",
    "end": "128910"
  },
  {
    "text": "get to the fundamental level of what web assembly does and so that you can build on top of that and build on top of",
    "start": "128910",
    "end": "134819"
  },
  {
    "text": "that understand what it's really doing so I work for data data robot as a developer evangelist so they pay me to",
    "start": "134819",
    "end": "141810"
  },
  {
    "text": "come out to events like this and give talks on things that aren't our product at all in exchange for me saying that",
    "start": "141810",
    "end": "146970"
  },
  {
    "text": "you should check us out and we're hiring so enough of that if you want to follow",
    "start": "146970",
    "end": "152939"
  },
  {
    "text": "me on Twitter there I am I'm at guy Royce on Twitter honestly if you just type guy Royce into Google I'm like the",
    "start": "152939",
    "end": "160019"
  },
  {
    "text": "only person with this name on the planet if you spell my last name wrong it will still find me so so if you want to",
    "start": "160019",
    "end": "166739"
  },
  {
    "text": "follow me I have my phone in airplane mode so feel free to say mean things for the next hour after that say nice things",
    "start": "166739",
    "end": "172459"
  },
  {
    "text": "so I'll start with the the question the unimaginative what is web assembly so",
    "start": "172459",
    "end": "179989"
  },
  {
    "start": "174000",
    "end": "261000"
  },
  {
    "text": "obviously everyone in this room is probably heard of web assembly if not for the very reason that they read it on the on the pamphlet but how many have",
    "start": "179989",
    "end": "186389"
  },
  {
    "text": "are familiar with web assembly played with it who's see in what context have you guys",
    "start": "186389",
    "end": "194159"
  },
  {
    "text": "done it feel like what blazer some people have done some blazer stuff what",
    "start": "194159",
    "end": "199709"
  },
  {
    "text": "about through rust okay two of you oh three of ya",
    "start": "199709",
    "end": "205230"
  },
  {
    "text": "good good who feels like they really understand what web assembly is that's",
    "start": "205230",
    "end": "214169"
  },
  {
    "text": "awesome I meant to start this talk out by saying that I'm a complete expert and you should listen to everything I say so",
    "start": "214169",
    "end": "224250"
  },
  {
    "text": "I like my definition of web assembly it's 50% web and 50% assembly you might",
    "start": "224250",
    "end": "230579"
  },
  {
    "text": "be looking at this and thinking guys kind of old to be a spongebob fan but I",
    "start": "230579",
    "end": "235650"
  },
  {
    "text": "have children so but it's kind of what it is right there's the web aspect and",
    "start": "235650",
    "end": "241139"
  },
  {
    "text": "there's the assembly aspect and those are the really the two pieces that make it up and it's assembly language for the web",
    "start": "241139",
    "end": "248459"
  },
  {
    "text": "and so I thought I'd talk about the web piece first because a web assembly like",
    "start": "248459",
    "end": "253739"
  },
  {
    "text": "any technology is trying to solve a problem right and the problem that web assembly is trying to solve is it's got",
    "start": "253739",
    "end": "260190"
  },
  {
    "text": "a few facets to it but the biggest part of it is what the hell JavaScript right",
    "start": "260190",
    "end": "266820"
  },
  {
    "start": "261000",
    "end": "468000"
  },
  {
    "text": "how many of you are JavaScript programmers everyone should raise their hand right how many of you go home at",
    "start": "266820",
    "end": "273820"
  },
  {
    "text": "night and cry I don't cry I drink but to",
    "start": "273820",
    "end": "279700"
  },
  {
    "text": "each their own but I mean you know javascript is a challenge to language so",
    "start": "279700",
    "end": "287680"
  },
  {
    "text": "we say and I like JavaScript I like it on ironically I run it a lot of people",
    "start": "287680",
    "end": "293290"
  },
  {
    "text": "it's like well let's get rid of JavaScript will do typescript and I'm like no I don't want to be a Java programmer anymore",
    "start": "293290",
    "end": "299160"
  },
  {
    "text": "now everyone leaves but I actually do like JavaScript as a language I like it",
    "start": "299160",
    "end": "305740"
  },
  {
    "text": "it's dynamic I like the way the closures work it's I enjoy it as a language but",
    "start": "305740",
    "end": "312340"
  },
  {
    "text": "it's got some weird corners so for example array is equal to not array",
    "start": "312340",
    "end": "320160"
  },
  {
    "text": "that's true right not a number triple equals not a number is false I'm pretty",
    "start": "320160",
    "end": "328120"
  },
  {
    "text": "sure that's not the definition of false I like that the number of min value is",
    "start": "328120",
    "end": "333880"
  },
  {
    "text": "greater than zero I wish that was true of my bank account [Music]",
    "start": "333880",
    "end": "341220"
  },
  {
    "text": "if you parse int the word firetruck it returns not a number which is completely true fire trucks are not numbers it was",
    "start": "341220",
    "end": "349260"
  },
  {
    "text": "also the only word I could think of that started with an F and ended in those letters it's like a joke grenade yeah",
    "start": "349260",
    "end": "359390"
  },
  {
    "text": "but if you do fire truck with a comma 16 on the end of it all of a sudden that's worth 15 because JavaScript actually",
    "start": "359390",
    "end": "368370"
  },
  {
    "text": "it's it's seam F in this thing that's hex is what's happening but that's kind of goofy behavior I like the console dot",
    "start": "368370",
    "end": "375510"
  },
  {
    "text": "log call that call duck call duck call that call that apply because every function has a call function on it and",
    "start": "375510",
    "end": "382380"
  },
  {
    "text": "so you can just chain them as many times as you want to want to do any does the same thing JavaScript weird math dot min",
    "start": "382380",
    "end": "388830"
  },
  {
    "text": "is greater than math dot max that returns true Java scripts got some weird",
    "start": "388830",
    "end": "393840"
  },
  {
    "text": "corners and you know I always felt like we could cut JavaScript a little bit of slack because the guy who created it did",
    "start": "393840",
    "end": "399330"
  },
  {
    "text": "it in like a week and you know I couldn't write a language in a week and so I mean actually his achievements",
    "start": "399330",
    "end": "406830"
  },
  {
    "text": "fairly impressive but it had some weird edge cases and so a part of the problem",
    "start": "406830",
    "end": "413550"
  },
  {
    "text": "that webassembly can solve is hey Java scripts weird maybe I could do something",
    "start": "413550",
    "end": "420060"
  },
  {
    "text": "else other than JavaScript because I'm in a browser right the nice thing about programming in the browser is is that I",
    "start": "420060",
    "end": "425190"
  },
  {
    "text": "can use any language I want as long as it's JavaScript and I know what you're",
    "start": "425190",
    "end": "431430"
  },
  {
    "text": "thinking and you're thinking well I can do typescript I can do I can do es6 and",
    "start": "431430",
    "end": "436470"
  },
  {
    "text": "I can transpile and I can do all this stuff and I can use Elm if I want there's a lot of languages there's a",
    "start": "436470",
    "end": "443330"
  },
  {
    "text": "remember CoffeeScript but that was popular for a couple years there there's",
    "start": "443330",
    "end": "448860"
  },
  {
    "text": "a lot of options and that's true you can but at the end of the day there's still just JavaScript so you're transpiling",
    "start": "448860",
    "end": "456060"
  },
  {
    "text": "that into javascript and so your errors are gonna be in JavaScript you can't get away without knowing the JavaScript even",
    "start": "456060",
    "end": "462060"
  },
  {
    "text": "if you're building in a language of trans files to it it's it's always going to be there",
    "start": "462060",
    "end": "468140"
  },
  {
    "start": "468000",
    "end": "515000"
  },
  {
    "text": "and you know it's easy to build a modern JavaScript application using something some more advanced version of Java",
    "start": "468680",
    "end": "474949"
  },
  {
    "text": "scripts that you want to use like es6 you know on Internet Explorer 6 you set",
    "start": "474949",
    "end": "481580"
  },
  {
    "text": "up this easy environment with all these tools and you're good to go alright and this is just sort of a list of tools",
    "start": "481580",
    "end": "486650"
  },
  {
    "text": "some of them are a little dated honestly but now actually setting up these JavaScript environments is kind of a",
    "start": "486650",
    "end": "492080"
  },
  {
    "text": "pain in the butt and I think I think it's kind of funny that the picture I selected with all these tools on it so",
    "start": "492080",
    "end": "497720"
  },
  {
    "text": "many of them are knives it's like I'm there's some subtle subconscious thing",
    "start": "497720",
    "end": "504380"
  },
  {
    "text": "going on there maybe I actually hate JavaScript but yes setting up these environments are kind of complicated",
    "start": "504380",
    "end": "512229"
  },
  {
    "text": "so that's one of the pain points but there's actually even a more fundamental",
    "start": "512229",
    "end": "518060"
  },
  {
    "text": "thing with JavaScript and just the way the browser works because it's an",
    "start": "518060",
    "end": "524690"
  },
  {
    "text": "interpreted language I've got to take that that javascript file and download it from the internet that takes time now I can minify it and",
    "start": "524690",
    "end": "531709"
  },
  {
    "text": "help reduce that time you know reduce that download time and that can help but then I've got a tokenize it I got to",
    "start": "531709",
    "end": "539240"
  },
  {
    "text": "turn it into a bunch of tokens and I got to take those tokens and then parse them to build it in you know the syntax tree",
    "start": "539240",
    "end": "546410"
  },
  {
    "text": "and then once I have that syntax tree I can execute that syntax tree and so I've",
    "start": "546410",
    "end": "551570"
  },
  {
    "text": "got to go through that compilation process every single time I go to run",
    "start": "551570",
    "end": "556640"
  },
  {
    "text": "that JavaScript code and that's time consuming and well wouldn't be nice if",
    "start": "556640",
    "end": "564470"
  },
  {
    "text": "we could compile the code for our browser instead of interpreting it so",
    "start": "564470",
    "end": "571070"
  },
  {
    "text": "that we could do that parsing and we could do that that lexing before and not",
    "start": "571070",
    "end": "578990"
  },
  {
    "text": "have to do it again if we could do some sort of compilation of our code for our browser above our JavaScript and you",
    "start": "578990",
    "end": "585589"
  },
  {
    "text": "know that would be that would be a silver bullet this jokes funny in America",
    "start": "585589",
    "end": "593740"
  },
  {
    "start": "587000",
    "end": "639000"
  },
  {
    "text": "it's a terrible American beer someone told me they knew what it was here they lied to me and the joke's on me but uh that would be a total solution to that",
    "start": "594379",
    "end": "601999"
  },
  {
    "text": "problem right I could solve the problem of JavaScript because I wouldn't have to",
    "start": "601999",
    "end": "607550"
  },
  {
    "text": "use JavaScript I could compile some other language to something that could run in the browser and it would be",
    "start": "607550",
    "end": "613369"
  },
  {
    "text": "compiled and so it would perform better and the tooling would be whatever the tooling is appropriate to that platform which honestly could be worse than what",
    "start": "613369",
    "end": "620749"
  },
  {
    "text": "we have in JavaScript but it could also be better and you could just use all these different you know your front-end",
    "start": "620749",
    "end": "628519"
  },
  {
    "text": "code could be written in the same language as your back-end code and it wouldn't have to be JavaScript that'd be",
    "start": "628519",
    "end": "634040"
  },
  {
    "text": "kind of amazing wouldn't it I think it would be and that's what assembly is",
    "start": "634040",
    "end": "642069"
  },
  {
    "start": "639000",
    "end": "652000"
  },
  {
    "text": "that is cake code compile it to a binary target that you can end use from browser",
    "start": "642069",
    "end": "651368"
  },
  {
    "start": "652000",
    "end": "795000"
  },
  {
    "text": "so I thought it might be worthwhile to talk a little bit about how",
    "start": "653079",
    "end": "658819"
  },
  {
    "text": "microprocessors work not in excruciating detail but how assembly language or machine could work works because a lot",
    "start": "658819",
    "end": "664939"
  },
  {
    "text": "of people haven't done this so I'm gonna be 47 in March and I'm young for having",
    "start": "664939",
    "end": "672980"
  },
  {
    "text": "done any kind of work in assembly at all all right how many people have been paid to write code in assembly language yeah",
    "start": "672980",
    "end": "679759"
  },
  {
    "text": "exactly right and some of you may have studied this in college and not looked at it since and so I thought and some of you",
    "start": "679759",
    "end": "687740"
  },
  {
    "text": "may be just newer to the field and haven't looked at it at all so I thought a review of how this stuff works would",
    "start": "687740",
    "end": "693709"
  },
  {
    "text": "be worthwhile so we all know that computers only talk in ones and zeroes and that's like the thing we tell our",
    "start": "693709",
    "end": "699110"
  },
  {
    "text": "kids about computers when they're fought you know five but it's true",
    "start": "699110",
    "end": "704449"
  },
  {
    "text": "on the right here I've got some machine code in binary this is actual machine",
    "start": "704449",
    "end": "710480"
  },
  {
    "text": "code it does do stuff on a 6502 microprocessor which was the one used in",
    "start": "710480",
    "end": "715910"
  },
  {
    "text": "the Apple to ease in the Commodore 64's and it takes those and those are there's",
    "start": "715910",
    "end": "721519"
  },
  {
    "text": "series of instructions that say things like take this value from this register and put it on",
    "start": "721519",
    "end": "726720"
  },
  {
    "text": "the accumulator and take this value here and add it to this other value here in memory and all these operations that do",
    "start": "726720",
    "end": "732420"
  },
  {
    "text": "things and you know these ones and zeros you know they're basically 5 volts and 0 volts go through that microprocessor",
    "start": "732420",
    "end": "739500"
  },
  {
    "text": "triggering different patterns and gates and it all does stuff and gives you output it's it's actually kind of",
    "start": "739500",
    "end": "745050"
  },
  {
    "text": "amazing that it all works but this binary code here that we're looking at is really hard to read but it is real",
    "start": "745050",
    "end": "752670"
  },
  {
    "text": "code and so to make it a little easier to read maybe we've represented as",
    "start": "752670",
    "end": "758850"
  },
  {
    "text": "hexadecimal here so on the on the Left we've got that binary code on the right I've got an arbitrary memory address",
    "start": "758850",
    "end": "766500"
  },
  {
    "text": "starting at 200 hex and then I've got just bytes we're representing that code",
    "start": "766500",
    "end": "771870"
  },
  {
    "text": "it's a little easier to read it's a little more human-friendly but only",
    "start": "771870",
    "end": "778139"
  },
  {
    "text": "barely I mean what's a zero right who",
    "start": "778139",
    "end": "784139"
  },
  {
    "text": "knows right what's the zero zero after it and so but this is the language that the machine",
    "start": "784139",
    "end": "789600"
  },
  {
    "text": "the microprocessor actually understands and so but humans don't understand it",
    "start": "789600",
    "end": "795959"
  },
  {
    "start": "795000",
    "end": "880000"
  },
  {
    "text": "and so we came up with this thing called assembly language yeah",
    "start": "795959",
    "end": "804809"
  },
  {
    "text": "and so yeah this is this is 6502 assembly language and if you look in",
    "start": "804809",
    "end": "812370"
  },
  {
    "text": "here you can see like for example the first one has load the Y ik register with the value of zero zero so stores",
    "start": "812370",
    "end": "819240"
  },
  {
    "text": "one byte so a zero means load Y a two is load X with zero zero and these are just",
    "start": "819240",
    "end": "826920"
  },
  {
    "text": "these are these are more meaningful mnemonics like here we got jump and then",
    "start": "826920",
    "end": "832589"
  },
  {
    "text": "we got loop there's a label this ties up to this label over here if you look on the code over here jump is for C and",
    "start": "832589",
    "end": "839550"
  },
  {
    "text": "then we want to jump to this spot so that's 207 and you can see here the",
    "start": "839550",
    "end": "845399"
  },
  {
    "text": "little endian notation because the second byte is the less significant number or the big endian big endian i",
    "start": "845399",
    "end": "852689"
  },
  {
    "text": "said that back fencepost there is sorry folks but so you can see that you know",
    "start": "852689",
    "end": "858660"
  },
  {
    "text": "that byte order is in not order the us humans would expect to see it and but these all translate to these",
    "start": "858660",
    "end": "865790"
  },
  {
    "text": "meaningful things and so this is a more meaningful way to program it's still really low level this is a double nested loop that's all",
    "start": "865790",
    "end": "874370"
  },
  {
    "text": "it does I think I did write this code in",
    "start": "874370",
    "end": "880360"
  },
  {
    "start": "880000",
    "end": "944000"
  },
  {
    "text": "fact it's the first assembly language program may ever wrote I still had it written on a piece of paper at my house",
    "start": "880360",
    "end": "886520"
  },
  {
    "text": "and I had my son take a picture of it and send it to me at work so I could put it in this talk and I literally wrote",
    "start": "886520",
    "end": "892339"
  },
  {
    "text": "the code in assembly by hand on the left looked up the opcodes on a piece of",
    "start": "892339",
    "end": "897830"
  },
  {
    "text": "paper and translated it over in hex and then I was doing this on a microprocessor board and there was a hex",
    "start": "897830",
    "end": "905630"
  },
  {
    "text": "keypad and a bunch of seven segment displays and when that thing booted it would ask you what address to start",
    "start": "905630",
    "end": "911660"
  },
  {
    "text": "executing and there was one of the addresses was the loader address you know then let me load a program in so I",
    "start": "911660",
    "end": "918770"
  },
  {
    "text": "trained I I compiled this I assembled it by hand and then I put all the hex digits in and when it was done it looped",
    "start": "918770",
    "end": "926180"
  },
  {
    "text": "and called some function called scan which was on a ROM I don't remember what raka scan did but I have the code still",
    "start": "926180",
    "end": "932630"
  },
  {
    "text": "so this is actual code that I wrote back in the 80s as a teenager and this was",
    "start": "932630",
    "end": "939980"
  },
  {
    "text": "used to be how people would create a right to assembly language I think they'd code on paper and trans pilot people started making assemblers to make",
    "start": "939980",
    "end": "946670"
  },
  {
    "start": "944000",
    "end": "996000"
  },
  {
    "text": "this easier but it turns out of Hanoi Minh hated them as a fun fact he said it",
    "start": "946670",
    "end": "951890"
  },
  {
    "text": "was a waste of a valuable scientific computing instrument to use it to do clerical work which i think is really",
    "start": "951890",
    "end": "958970"
  },
  {
    "text": "funny because what do you use your computer for right isn't that like",
    "start": "958970",
    "end": "966140"
  },
  {
    "text": "everything we do in our career is create as clerical work I worked for an",
    "start": "966140",
    "end": "971959"
  },
  {
    "text": "insurance company for 12 years it's all clerical work that's that's actually the",
    "start": "971959",
    "end": "977570"
  },
  {
    "text": "job and so really man he missed this one",
    "start": "977570",
    "end": "983740"
  },
  {
    "text": "but he wasn't a fan he actually yelled at some of his grad students because they had created an assembler and he",
    "start": "983740",
    "end": "990260"
  },
  {
    "text": "felt like that was a waste of resources so dude by hand of course Assembly's hard",
    "start": "990260",
    "end": "998839"
  },
  {
    "start": "996000",
    "end": "1041000"
  },
  {
    "text": "to read too and so things like see happened and so here we've got some C code which is doing the same thing",
    "start": "998839",
    "end": "1004470"
  },
  {
    "text": "except it's a lot more readable and we probably many of us here have done C if",
    "start": "1004470",
    "end": "1010749"
  },
  {
    "text": "you haven't done C we'll just pretend that's Java and because it doesn't look any different I'm sorry did I say job I",
    "start": "1010749",
    "end": "1018309"
  },
  {
    "text": "meant c-sharp I'm sorry I'm in JavaScript but yeah so we started",
    "start": "1018309",
    "end": "1025000"
  },
  {
    "text": "writing C code and then it would compile and parse all that stuff and give us that same binary and the world was great",
    "start": "1025000",
    "end": "1032500"
  },
  {
    "text": "programming was getting easier and easier but we're still a little these machine targeted binaries and so you",
    "start": "1032500",
    "end": "1042850"
  },
  {
    "start": "1041000",
    "end": "1113000"
  },
  {
    "text": "could run it on your 6502 microprocessor but there's a problem with this which is",
    "start": "1042850",
    "end": "1049330"
  },
  {
    "text": "that the only processor in the world was not the 6502 microprocessor there's a",
    "start": "1049330",
    "end": "1054700"
  },
  {
    "text": "lot of micro processors and they all have different instruction sets and some of the more big endian and some of them",
    "start": "1054700",
    "end": "1060789"
  },
  {
    "text": "were little endian and some of them had different registers and just different mechanisms they're just they're",
    "start": "1060789",
    "end": "1066639"
  },
  {
    "text": "different machines built by different engineers for different reasons the way they did it and so you'd have to write",
    "start": "1066639",
    "end": "1072009"
  },
  {
    "text": "your code at C and then compile it to one processor and another processor and another processor you can just compile",
    "start": "1072009",
    "end": "1078190"
  },
  {
    "text": "it once and use it in one place you could compile it to a lower processor",
    "start": "1078190",
    "end": "1083529"
  },
  {
    "text": "and a family and then it would run on more machines but the performance wouldn't be as good and so you saw this",
    "start": "1083529",
    "end": "1090490"
  },
  {
    "text": "on the Intel stuff where you could compile something that would run on an until 80 86 and that would run on a 286",
    "start": "1090490",
    "end": "1097750"
  },
  {
    "text": "and a 386 and a 46 but it wouldn't take advantage of the capabilities of that microprocessor to the fullest extent and",
    "start": "1097750",
    "end": "1104049"
  },
  {
    "text": "so it was a bit of a problem and you'd",
    "start": "1104049",
    "end": "1109120"
  },
  {
    "text": "have to deliver different versions of your binaries to different customers and",
    "start": "1109120",
    "end": "1114159"
  },
  {
    "start": "1113000",
    "end": "1204000"
  },
  {
    "text": "so someone came up with a brilliant idea to solve that problem that's the virtual microprocessor or the virtual machine",
    "start": "1114159",
    "end": "1119919"
  },
  {
    "text": "I personally first saw this for Java I know the idea predates it but I don't",
    "start": "1119919",
    "end": "1125860"
  },
  {
    "text": "know the details my introduction to this idea was Java that's probably true for a lot of us in here if not that it might be the the",
    "start": "1125860",
    "end": "1134110"
  },
  {
    "text": "common language runtime on dotnet same you know who stole the idea from Java who stole from whoever did it before but",
    "start": "1134110",
    "end": "1142540"
  },
  {
    "text": "the idea here is is that like all software problems it can be solved with a layer of abstraction right",
    "start": "1142540",
    "end": "1149380"
  },
  {
    "text": "this virtual microprocessor is a layer of abstraction on top of a physical microprocessor and so it's the same idea",
    "start": "1149380",
    "end": "1156820"
  },
  {
    "text": "but instead of having all these programs",
    "start": "1156820",
    "end": "1162100"
  },
  {
    "text": "compiled to virtual to specific processors you have the virtual machine",
    "start": "1162100",
    "end": "1167130"
  },
  {
    "text": "for each of the processors or families of processors and then you just write",
    "start": "1167130",
    "end": "1174190"
  },
  {
    "text": "your code in something that virtual machine understands and so this case now that's definitely Java code on the Left",
    "start": "1174190",
    "end": "1179200"
  },
  {
    "text": "right here because it's gonna run on the JVM here and if you look here you'll say",
    "start": "1179200",
    "end": "1186040"
  },
  {
    "text": "see the first four bytes are say cafe babe every Java binary every class file",
    "start": "1186040",
    "end": "1191800"
  },
  {
    "text": "starts with that and that solves a lot",
    "start": "1191800",
    "end": "1197680"
  },
  {
    "text": "of problems webassembly is exactly the same idea but in the",
    "start": "1197680",
    "end": "1204460"
  },
  {
    "start": "1204000",
    "end": "1760000"
  },
  {
    "text": "browser so I can write my code in a language I want I can compile it to a",
    "start": "1204460",
    "end": "1209740"
  },
  {
    "text": "byte code that isn't interpreted by a virtual machine that is running in the",
    "start": "1209740",
    "end": "1215440"
  },
  {
    "text": "browser so it's exactly the same idea but in the browser now I'll wait a",
    "start": "1215440",
    "end": "1223690"
  },
  {
    "text": "second I see someone taking a picture before I advance the slides so but that's what web assembly is it's the",
    "start": "1223690",
    "end": "1229750"
  },
  {
    "text": "same idea as what's all this new again right it's worthwhile to get a little",
    "start": "1229750",
    "end": "1238240"
  },
  {
    "text": "deeper into how web assembly works because this has all been sort of like review and sort of a history of how",
    "start": "1238240",
    "end": "1244060"
  },
  {
    "text": "these things work but at some point you got to get down to actual implementation",
    "start": "1244060",
    "end": "1250000"
  },
  {
    "text": "like I'm gonna have some file on a computer that needs to be served up somewhere and so this gives you an idea",
    "start": "1250000",
    "end": "1256720"
  },
  {
    "text": "of how wasm how simply fits into your applications so",
    "start": "1256720",
    "end": "1262159"
  },
  {
    "text": "we've got on in here with you get our big yellow browser here and on the Left we've got our classic triumvirate of web",
    "start": "1262159",
    "end": "1270320"
  },
  {
    "text": "frame web application technology we've got our CSS we've got our HTML we've got our JavaScript they're just files that",
    "start": "1270320",
    "end": "1276529"
  },
  {
    "text": "we download and they interact with the DOM and do all sorts of things the web",
    "start": "1276529",
    "end": "1282679"
  },
  {
    "text": "assembly binary that you have is just another file that your web page can download or your JavaScript usually well",
    "start": "1282679",
    "end": "1290690"
  },
  {
    "text": "specifically you can't embed it into the HTML yet that I know of you have to",
    "start": "1290690",
    "end": "1296179"
  },
  {
    "text": "explicitly get it from JavaScript but it's just another file it's it up it served up just like an image or a JSON a",
    "start": "1296179",
    "end": "1304179"
  },
  {
    "text": "JavaScript file and these arrows here are significant so our JavaScript as we",
    "start": "1304179",
    "end": "1311570"
  },
  {
    "text": "know can interact with the Dom with the HTML and it can also interact with the",
    "start": "1311570",
    "end": "1317450"
  },
  {
    "text": "web assembly module so when you instantiate one of these things it's got the exposés functions that JavaScript",
    "start": "1317450",
    "end": "1323360"
  },
  {
    "text": "can consume and the web assembly module can talk to JavaScript you will note",
    "start": "1323360",
    "end": "1329509"
  },
  {
    "text": "that there is not an arrow between the web assembly module and HTML obviously I",
    "start": "1329509",
    "end": "1336860"
  },
  {
    "text": "did that on purpose that's because the web assembly doesn't have the capability to talk to the Dom it is a pure machine",
    "start": "1336860",
    "end": "1346570"
  },
  {
    "text": "it's it's a pure binary target it doesn't know about the Dom or anything of the sort you can call JavaScript",
    "start": "1346570",
    "end": "1353240"
  },
  {
    "text": "functions it's handed but it can't and it can and those can manipulate the Dom so you can build bridges but the bridges",
    "start": "1353240",
    "end": "1359990"
  },
  {
    "text": "aren't built in",
    "start": "1359990",
    "end": "1362620"
  },
  {
    "text": "just a moment",
    "start": "1366530",
    "end": "1369920"
  },
  {
    "text": "so this is kind of saying something I said already they just toasted with other web content they're just files on",
    "start": "1372640",
    "end": "1378010"
  },
  {
    "text": "a on a web server mention the content type here needs to be application wasm I think Safari cares",
    "start": "1378010",
    "end": "1385840"
  },
  {
    "text": "about this other ones don't care as much it just depends on how picky the the implementation is and we instantiate",
    "start": "1385840",
    "end": "1392980"
  },
  {
    "text": "them from JavaScript so if you look here at this code on the bottom you've got a I'm using fetch to fetch the file name",
    "start": "1392980",
    "end": "1399580"
  },
  {
    "text": "and that returns a promise and so it gives me a response the response has an array buffer I get the bytes out of that",
    "start": "1399580",
    "end": "1408130"
  },
  {
    "text": "array buffer and then the byte array goes into web assembly doesn't Stan she",
    "start": "1408130",
    "end": "1413350"
  },
  {
    "text": "ate there is a way to shortcut this where you can do a streaming version of",
    "start": "1413350",
    "end": "1418630"
  },
  {
    "text": "it where you can download them and process the bytes at the same time and that's more efficient but I found that",
    "start": "1418630",
    "end": "1423880"
  },
  {
    "text": "it was a little flaky when I did it on Safari but it worked fine in Chrome and Firefox and I don't know about edge but so I did",
    "start": "1423880",
    "end": "1434020"
  },
  {
    "text": "it I did it the more the way that worked everywhere once that instantiates done it returns a",
    "start": "1434020",
    "end": "1439360"
  },
  {
    "text": "promise that then returns the module the web assembly module and then you can make use of that module so this is and this is this is a very complicated way",
    "start": "1439360",
    "end": "1446380"
  },
  {
    "text": "of calling new admittedly but it's where the technology is at right now it's",
    "start": "1446380",
    "end": "1453520"
  },
  {
    "text": "worth noting that this is version 1.0 and so this is a lot of this is very green and so this is a first cut",
    "start": "1453520",
    "end": "1458980"
  },
  {
    "text": "something that has a lot of potential now how many of you were around when the JVM was first released and coding I",
    "start": "1458980",
    "end": "1465400"
  },
  {
    "text": "assume you are all live remember how it was really slow and everyone's like this",
    "start": "1465400",
    "end": "1472990"
  },
  {
    "text": "is going nowhere it's slow it's like well but speed and performance wasn't really its key feature and they solved",
    "start": "1472990",
    "end": "1479320"
  },
  {
    "text": "the performance problem the key feature here is not how easy it is to new to",
    "start": "1479320",
    "end": "1484540"
  },
  {
    "text": "instantiate these things it's that we've got something that can run multiple languages in the browser the tooling to",
    "start": "1484540",
    "end": "1491679"
  },
  {
    "text": "make this easier will common is coming so the modules themselves are actually",
    "start": "1491679",
    "end": "1500380"
  },
  {
    "text": "really easy to use they literally just expose functions and you literally just call them",
    "start": "1500380",
    "end": "1506169"
  },
  {
    "text": "and so here we're you know I could say module de instance that exports fizzbuzz and pass in 15 and it returns a value",
    "start": "1506169",
    "end": "1514830"
  },
  {
    "text": "his buzz you'd think that except in the next slide I'm going to tell you that",
    "start": "1514830",
    "end": "1520679"
  },
  {
    "text": "webassembly doesn't support strings yeah",
    "start": "1520679",
    "end": "1527679"
  },
  {
    "text": "or enums webOS Emily only deals with with numbers actually which is kind of",
    "start": "1527679",
    "end": "1534909"
  },
  {
    "text": "what microprocessors do right they don't know what strings are see knows what a",
    "start": "1534909",
    "end": "1540279"
  },
  {
    "text": "string is but a microprocessor doesn't know what strings are it knows a raise",
    "start": "1540279",
    "end": "1545889"
  },
  {
    "text": "of it doesn't even know arrays it just knows memory and so there's no native string implementation for web assembly",
    "start": "1545889",
    "end": "1554519"
  },
  {
    "text": "which seems incredibly constraining but",
    "start": "1554519",
    "end": "1559659"
  },
  {
    "text": "your your language it's on top of that will provide those abstractions so here we've got calculate area returning the",
    "start": "1559659",
    "end": "1565690"
  },
  {
    "text": "thing and they just you just call them you just call the functions that's all there is to it you can also pass in",
    "start": "1565690",
    "end": "1574600"
  },
  {
    "text": "functions for them the web assembly modules to call you back on so here you've got this doubly nested object",
    "start": "1574600",
    "end": "1580480"
  },
  {
    "text": "where it's it you know imports imports and then your your functions and when",
    "start": "1580480",
    "end": "1586359"
  },
  {
    "text": "you instantiate there if you look down slide here we pass that imports object in as well and now that's a function",
    "start": "1586359",
    "end": "1593440"
  },
  {
    "text": "that's that web assembly module will have access to and it can call to notify you of things this would be if you",
    "start": "1593440",
    "end": "1600039"
  },
  {
    "text": "wanted to have your web assembly module interact with the Dom you'd write functions that would allow it to interact with the Dom and pass them in",
    "start": "1600039",
    "end": "1606190"
  },
  {
    "text": "this in this function or if you wanted your web assembly module interact with a",
    "start": "1606190",
    "end": "1611230"
  },
  {
    "text": "network be a similar sort of thing because again there's no networking API",
    "start": "1611230",
    "end": "1616539"
  },
  {
    "text": "inside of the web assembly just like there's no Dom it's completely samp it's it's very sandboxed but then when",
    "start": "1616539",
    "end": "1626980"
  },
  {
    "text": "you know for example if you call fizzbuzz callback presumably the FISMA with callback actually does a callback",
    "start": "1626980",
    "end": "1632289"
  },
  {
    "text": "and then this function would would get called I mentioned functions can only take",
    "start": "1632289",
    "end": "1639950"
  },
  {
    "text": "numbers there is a way to get around to this you can define shared memory blocks",
    "start": "1639950",
    "end": "1645830"
  },
  {
    "text": "and pass them in along with the imports and so in here I'm creating webassembly",
    "start": "1645830",
    "end": "1651800"
  },
  {
    "text": "dot memory module giving an initial size of 10 pages so that's 640k each page is 64 K so and",
    "start": "1651800",
    "end": "1660170"
  },
  {
    "text": "I thought I'd take a page from Bill Gates and assume that we would never need more than 640 K of memory in an",
    "start": "1660170",
    "end": "1666050"
  },
  {
    "text": "application and web assembly and so I set it to 10 so it will grow on its own",
    "start": "1666050",
    "end": "1671360"
  },
  {
    "text": "so if it needs to get bigger it will and then that shared memory is can be used",
    "start": "1671360",
    "end": "1678050"
  },
  {
    "text": "as a as an array as an array of bytes and then you can just go into that array",
    "start": "1678050",
    "end": "1683570"
  },
  {
    "text": "of bytes and look at them and change them and the web sent from JavaScript or from web assembly and so this is a way",
    "start": "1683570",
    "end": "1691760"
  },
  {
    "text": "of passing more complex data structures back and forth not really passing them you're just like hey look over there hey",
    "start": "1691760",
    "end": "1697640"
  },
  {
    "text": "yeah it's over there and you can do this with strings this is how you can do strings so you put a utf-8 encoded",
    "start": "1697640",
    "end": "1705350"
  },
  {
    "text": "string into a memory location and then if web assembly needs to return a string",
    "start": "1705350",
    "end": "1711380"
  },
  {
    "text": "it returns to the memory location it returns the B address within that that block of memory and so it is very C like",
    "start": "1711380",
    "end": "1719360"
  },
  {
    "text": "they were returning pointers right we're returning pointers to that string and so",
    "start": "1719360",
    "end": "1726470"
  },
  {
    "text": "it's very good it's kind of fun it's it I feel like that like I'm a young programmer again sometimes when I'm",
    "start": "1726470",
    "end": "1732740"
  },
  {
    "text": "doing this stuff but yes you can put any kind of data and you want there but keep",
    "start": "1732740",
    "end": "1739340"
  },
  {
    "text": "in mind and web assembly you can really only manipulate numbers and so complex structures are gonna be hard so you know",
    "start": "1739340",
    "end": "1747830"
  },
  {
    "text": "you're not gonna sell a bunch of JSON in there you're gonna you know that would be I would not want to write a JSON",
    "start": "1747830",
    "end": "1754790"
  },
  {
    "text": "parser in webassembly not in webassembly text format",
    "start": "1754790",
    "end": "1759880"
  },
  {
    "start": "1760000",
    "end": "1793000"
  },
  {
    "text": "to create these modules you've got a few options I just got a couple samples of code here you've got a unit from C and",
    "start": "1760599",
    "end": "1768349"
  },
  {
    "text": "so this is a basic visible calculator for C you'll note this for phys I returned negative 1 for buzz that",
    "start": "1768349",
    "end": "1774080"
  },
  {
    "text": "returned negative 2 and for fizzes they returned negative 3 because I can't return strings easily and so I went",
    "start": "1774080",
    "end": "1781489"
  },
  {
    "text": "ahead and just use numbers here instead but this is a basic implementation of this buzz you can compile this to web",
    "start": "1781489",
    "end": "1787700"
  },
  {
    "text": "assemble and I have in the past and and use it now here's the same code in rust",
    "start": "1787700",
    "end": "1797258"
  },
  {
    "start": "1793000",
    "end": "1837000"
  },
  {
    "text": "similar idea just it's rust code instead and I actually have rust working on my",
    "start": "1797739",
    "end": "1806539"
  },
  {
    "text": "macbook and so I'll show that to you in a moment but before we do that I want to show you",
    "start": "1806539",
    "end": "1811849"
  },
  {
    "text": "the web assembly text format because I've got two demos and depending on time I may cut one of them short one demo is",
    "start": "1811849",
    "end": "1818839"
  },
  {
    "text": "a simple little app I built which computes fizzbuzz and you can compute it using just pure JavaScript you can",
    "start": "1818839",
    "end": "1825649"
  },
  {
    "text": "compute it from rust and you can compute it from a web assembly text format and I",
    "start": "1825649",
    "end": "1832159"
  },
  {
    "text": "have created blasts and files for two of those three and then you can choose the ones you want here is the hard way that",
    "start": "1832159",
    "end": "1841429"
  },
  {
    "start": "1837000",
    "end": "1906000"
  },
  {
    "text": "doesn't look anything like the other ones so in webassembly you define a module that's the unit of azam as a web",
    "start": "1841429",
    "end": "1850489"
  },
  {
    "text": "assembly module you list all the functions you want to export and the",
    "start": "1850489",
    "end": "1855769"
  },
  {
    "text": "value in quotes there is the name of the function from Java scripts point of view",
    "start": "1855769",
    "end": "1860809"
  },
  {
    "text": "and the value with the dollar sign in front of it is just a simple pointing to this guy here we define a function it",
    "start": "1860809",
    "end": "1869599"
  },
  {
    "text": "takes parameter dollar a parameter dollar B and they're both 32-bit integers and it has a result of a 32-bit",
    "start": "1869599",
    "end": "1877549"
  },
  {
    "text": "integer and then and then you've got the body of the function here where we get",
    "start": "1877549",
    "end": "1883519"
  },
  {
    "text": "the two values we passed in and we add them and in a traditional machine that",
    "start": "1883519",
    "end": "1892879"
  },
  {
    "text": "I'm familiar with I have and did not do a lot of assembly language but on the 6502 we had these registers right we're saying load this",
    "start": "1892879",
    "end": "1899149"
  },
  {
    "text": "into the X register and add this to the accumulator and that kind of stuff",
    "start": "1899149",
    "end": "1904179"
  },
  {
    "text": "web assembly doesn't work like that it's stack based so when I come into the add",
    "start": "1904179",
    "end": "1910549"
  },
  {
    "start": "1906000",
    "end": "1974000"
  },
  {
    "text": "function my stack is empty and then I",
    "start": "1910549",
    "end": "1916429"
  },
  {
    "text": "call get local and that gets the dollar a value which I put a little comment there to say is arbitrarily a five and",
    "start": "1916429",
    "end": "1924350"
  },
  {
    "text": "get local takes it from the parameter and pushes it on the stack and then get",
    "start": "1924350",
    "end": "1931100"
  },
  {
    "text": "local B takes the next value and pushes it on the stack and now we get two values on our stack we call add an add",
    "start": "1931100",
    "end": "1941120"
  },
  {
    "text": "will pop off the 10 pop off the 5 add the numbers and push the answer back",
    "start": "1941120",
    "end": "1947510"
  },
  {
    "text": "onto the stack so this is how it's working internally and then whatever is left on the stack at the end is the",
    "start": "1947510",
    "end": "1953809"
  },
  {
    "text": "return value if you have too many things",
    "start": "1953809",
    "end": "1958820"
  },
  {
    "text": "on the stack or not enough things on the stack when you return it will throw an error well it'll just stop it'll say I",
    "start": "1958820",
    "end": "1965179"
  },
  {
    "text": "can't do this and it'll stop executing and give you an error that's hard to figure out because the tooling is not",
    "start": "1965179",
    "end": "1971059"
  },
  {
    "text": "quite there for debugging yet so that's kind of how it works internally so for",
    "start": "1971059",
    "end": "1977090"
  },
  {
    "start": "1974000",
    "end": "2252000"
  },
  {
    "text": "the quick demo here let me show you that",
    "start": "1977090",
    "end": "1984620"
  },
  {
    "text": "needs to be bigger",
    "start": "1984620",
    "end": "1987190"
  },
  {
    "text": "that's some of the code here so I've got this little app here where you can enter",
    "start": "1989750",
    "end": "1998360"
  },
  {
    "text": "a fizzbuzz value so if I put in like two and is buzz it says two because two is",
    "start": "1998360",
    "end": "2005309"
  },
  {
    "text": "the answer is everyone familiar with is buzz so it's it's a does everyone know",
    "start": "2005309",
    "end": "2012190"
  },
  {
    "text": "that it's a drinking game you didn't okay you're my new friend",
    "start": "2012190",
    "end": "2019289"
  },
  {
    "text": "so uh fizzbuzz was originally a drinking game the idea was you sat around a table and you you counted and you know and",
    "start": "2019289",
    "end": "2029769"
  },
  {
    "text": "then the rules for fizzbuzz or if it's a multiple of three you safe is it's a multiple five you say buzz and it's a",
    "start": "2029769",
    "end": "2035830"
  },
  {
    "text": "multiple of both you say fizzbuzz but if he got it wrong you had to take a drink which then led to you getting it wrong",
    "start": "2035830",
    "end": "2042669"
  },
  {
    "text": "more like all good drinking games right and so you know it's one two fizz for",
    "start": "2042669",
    "end": "2050169"
  },
  {
    "text": "buzz fizz seven eight is buzz and I'm",
    "start": "2050169",
    "end": "2058179"
  },
  {
    "text": "not drinking it I'm doing it wrong yeah",
    "start": "2058179",
    "end": "2064230"
  },
  {
    "text": "yeah I mean maybe when you play fizzbuzz you need to prime the pump and give everyone a couple shots first you know",
    "start": "2064230",
    "end": "2069510"
  },
  {
    "text": "it sounds like a great way to play fizzbuzz so you know so this is executing my JavaScript code which is",
    "start": "2069510",
    "end": "2076089"
  },
  {
    "text": "just it's not webassembly it's JavaScript I've got a rust version that I compiled here and if I put in say a",
    "start": "2076089",
    "end": "2082929"
  },
  {
    "text": "three there click the button and it shows fizz now if we look at the console",
    "start": "2082929",
    "end": "2088270"
  },
  {
    "text": "here if you can see this I've got a callback",
    "start": "2088270",
    "end": "2095539"
  },
  {
    "text": "here so if I click this here you see fizzbuzz callback as negative one so I'm",
    "start": "2095539",
    "end": "2100999"
  },
  {
    "text": "returning a negative one as a number because again webassembly doesn't want to do strings easily I do have a version",
    "start": "2100999",
    "end": "2106970"
  },
  {
    "text": "where I implement strings and I got a link to it at the end you guys can check it out later it took me two days to build fizzbuzz",
    "start": "2106970",
    "end": "2113210"
  },
  {
    "text": "with it so I don't recommend doing it the hard way yourself but you're welcome",
    "start": "2113210",
    "end": "2118279"
  },
  {
    "text": "to learn from my mistakes but this is calling the rust version and",
    "start": "2118279",
    "end": "2124489"
  },
  {
    "text": "in webassembly text format we can also call this and see buzz returns on - - -",
    "start": "2124489",
    "end": "2132559"
  },
  {
    "text": "and the code for all this is right here so if we look at fizzbuzz dot rust this",
    "start": "2132559",
    "end": "2139999"
  },
  {
    "text": "is the same code we had there you'll notice had in the slides but you'll notice it calls the callback here and",
    "start": "2139999",
    "end": "2147910"
  },
  {
    "text": "there's an unsafe or after and that's because we're leaving the safe space that rust creates for us and then I've",
    "start": "2147910",
    "end": "2154730"
  },
  {
    "text": "defined my callback here as an extern and so that allows it to work and if we look at my build is H this is this is",
    "start": "2154730",
    "end": "2162529"
  },
  {
    "text": "all out on github so you guys can look at it at your leisure but you can go",
    "start": "2162529",
    "end": "2169489"
  },
  {
    "text": "ahead and build this yourself there's some notes in there on the things you need to know to get it working but and",
    "start": "2169489",
    "end": "2175069"
  },
  {
    "text": "I'm not a rust expert by any measure but I was able to get this to work I'm the",
    "start": "2175069",
    "end": "2183559"
  },
  {
    "text": "web assembly modules that Russ is creating for me are huge and I think it's because all the debug symbols are",
    "start": "2183559",
    "end": "2189289"
  },
  {
    "text": "getting built in there and I'm I don't know enough about Russ to take those out but if I go here to the command line",
    "start": "2189289",
    "end": "2198130"
  },
  {
    "text": "let's control see this background is and",
    "start": "2198130",
    "end": "2203799"
  },
  {
    "text": "then I can go into rust and if I just",
    "start": "2203799",
    "end": "2208970"
  },
  {
    "text": "use flush build that SH and then I bring",
    "start": "2208970",
    "end": "2214789"
  },
  {
    "text": "it back up again is that readable enough with the black background blacks usually hard to see in these settings here and I didn't change",
    "start": "2214789",
    "end": "2220880"
  },
  {
    "text": "my prom that fizzbuzz that Wasden is now got a timestamp that's more now-ish and if i",
    "start": "2220880",
    "end": "2228320"
  },
  {
    "text": "go out and refresh the hard refresh this and run the rust version it's executing",
    "start": "2228320",
    "end": "2238190"
  },
  {
    "text": "that version and again you can check this code out online on github so the",
    "start": "2238190",
    "end": "2247370"
  },
  {
    "text": "webassembly text version of fizzbuzz is defined right here and so here's a",
    "start": "2247370",
    "end": "2253190"
  },
  {
    "start": "2252000",
    "end": "2389000"
  },
  {
    "text": "bigger program to take a look at so I've got my module I'm exporting fizzbuzz",
    "start": "2253190",
    "end": "2259300"
  },
  {
    "text": "binding to a function I'm importing fizzbuzz callback and giving it a name",
    "start": "2259300",
    "end": "2264680"
  },
  {
    "text": "that I can call and I'm setting the arguments is expecting and then here is",
    "start": "2264680",
    "end": "2272530"
  },
  {
    "text": "that stack based computing I'm shoving and under the stack I'm shoving 15 onto",
    "start": "2272650",
    "end": "2278300"
  },
  {
    "text": "the stack and I have a little function I wrote it's private it's an internal called is multiple and is multiple gets",
    "start": "2278300",
    "end": "2288350"
  },
  {
    "text": "the two values and puts them on the stack does a modulus remainder unsigned",
    "start": "2288350",
    "end": "2293420"
  },
  {
    "text": "and then says which pops these does the",
    "start": "2293420",
    "end": "2298460"
  },
  {
    "text": "division shoves the value back on and then equals zero looks at what's on the stack and says is it zero well then it's",
    "start": "2298460",
    "end": "2304940"
  },
  {
    "text": "zero is it not zero well I got that backwards if it's zero in sets of 1",
    "start": "2304940",
    "end": "2310790"
  },
  {
    "text": "otherwise it sets it to zero so it's it's making it boolean and then in here",
    "start": "2310790",
    "end": "2316250"
  },
  {
    "text": "the if statement says well if what's on the stack is zero or is 1 this is true so pop that shove my hard-coded value on",
    "start": "2316250",
    "end": "2325790"
  },
  {
    "text": "to the stack call callback shove it on to the stack again and return and it's",
    "start": "2325790",
    "end": "2331970"
  },
  {
    "text": "following in that process and so this is a lot of code for fizzbuzz so and then",
    "start": "2331970",
    "end": "2342200"
  },
  {
    "text": "we go down to 5 and 3 and then if it's neither of those when we return the heart and we return what we were handed",
    "start": "2342200",
    "end": "2347630"
  },
  {
    "text": "and so what I'm going to do and may that demo gods have mercy on my soul",
    "start": "2347630",
    "end": "2355549"
  },
  {
    "text": "as I am going to live code a fizzbuzz implementation test deriving it from",
    "start": "2355549",
    "end": "2361160"
  },
  {
    "text": "jasmine and in webassembly text format so yeah you got like this is gonna be",
    "start": "2361160",
    "end": "2373880"
  },
  {
    "text": "great we're gonna watch a crash and burn so I feel like I need to get talcum",
    "start": "2373880",
    "end": "2380720"
  },
  {
    "text": "powder on my hands okay so I have here a",
    "start": "2380720",
    "end": "2387319"
  },
  {
    "text": "little Jasmine test runner set up already see fizzbuzz spec is completely empty I've got a spec helper whose sole",
    "start": "2387319",
    "end": "2394790"
  },
  {
    "start": "2389000",
    "end": "2567000"
  },
  {
    "text": "purpose and life is to not randomize my tests because when they move around for a demo it's confusing I've got a little",
    "start": "2394790",
    "end": "2401510"
  },
  {
    "text": "wasm helper that I wrote here that loads a webassembly module and this should look like familiar code",
    "start": "2401510",
    "end": "2407530"
  },
  {
    "text": "it's the code I've shown on the slides already and so uh let's begin so we",
    "start": "2407530",
    "end": "2415490"
  },
  {
    "text": "don't need this guy but we do need to describe his buzz and I'm gonna use the",
    "start": "2415490",
    "end": "2430130"
  },
  {
    "text": "es6 style syntax and then I'm before each I'm gonna need a I'm gonna need one",
    "start": "2430130",
    "end": "2440599"
  },
  {
    "text": "of those need my webassembly module and so load wasm and i'm gonna load fizzbuzz",
    "start": "2440599",
    "end": "2454630"
  },
  {
    "text": "wasm and then that's going to give me",
    "start": "2454630",
    "end": "2462950"
  },
  {
    "text": "the module and I'm saying this subject",
    "start": "2462950",
    "end": "2468040"
  },
  {
    "text": "equals module and then",
    "start": "2468040",
    "end": "2473650"
  },
  {
    "text": "I called done and so if you're not familiar with jasmine done that's how",
    "start": "2474710",
    "end": "2480590"
  },
  {
    "text": "you do a synchronous testing in Jasmine so it'll wait until done is called before it starts running all the other tests it's I don't know why it always",
    "start": "2480590",
    "end": "2488660"
  },
  {
    "text": "does that I do not want an interface it returns one for returns the handed the",
    "start": "2488660",
    "end": "2498770"
  },
  {
    "text": "past was two passed in number and I was",
    "start": "2498770",
    "end": "2508550"
  },
  {
    "text": "an agile coach in a previous life and so I'm a TDD purist so that's why I'm writing my tests first so expect this",
    "start": "2508550",
    "end": "2518900"
  },
  {
    "text": "subject dot fizzbuzz value one to be the",
    "start": "2518900",
    "end": "2525530"
  },
  {
    "text": "one makes sense is that big enough for people in the back I can make it a",
    "start": "2525530",
    "end": "2531770"
  },
  {
    "text": "little bigger if we need to okay so let's run our tests and see if it fails for the expected reason that's okay so",
    "start": "2531770",
    "end": "2542060"
  },
  {
    "text": "it hangs and the reasons hanging is because it can't find the module yes see we've got a timeout async callback was",
    "start": "2542060",
    "end": "2548510"
  },
  {
    "text": "not booked within 500 milliseconds that seems like it was about five seconds so",
    "start": "2548510",
    "end": "2554300"
  },
  {
    "text": "let's go ahead and create a wack file how many people have seen the Gary",
    "start": "2554300",
    "end": "2560030"
  },
  {
    "text": "Bernhardt video with the the JavaScript yeah I always think of that when I'm doing web assembly this buzz doe at",
    "start": "2560030",
    "end": "2567550"
  },
  {
    "start": "2567000",
    "end": "2659000"
  },
  {
    "text": "there's actually a web assembly something toolkit that's called wabbit I",
    "start": "2567550",
    "end": "2574390"
  },
  {
    "text": "can't run what the B stands for off the top of my head now but okay module and",
    "start": "2574390",
    "end": "2582850"
  },
  {
    "text": "then we need to export said indent that",
    "start": "2582850",
    "end": "2589950"
  },
  {
    "text": "fizzbuzz and it was funk dollar fizzbuzz",
    "start": "2589950",
    "end": "2599270"
  },
  {
    "text": "and then funk dollar fizzbuzz per am",
    "start": "2599390",
    "end": "2606290"
  },
  {
    "text": "dollar n i 32 the result i 32 and so",
    "start": "2606290",
    "end": "2616890"
  },
  {
    "text": "right now all we need to do is say i 32 Const 1 because we're going to return a",
    "start": "2616890",
    "end": "2623610"
  },
  {
    "text": "hard coded 1 i should be able to right click on this I'm using a tool in a",
    "start": "2623610",
    "end": "2633710"
  },
  {
    "text": "extension for a visual studio code which is the web assembly I don't remember the",
    "start": "2633710",
    "end": "2639990"
  },
  {
    "text": "name of it but it sits in my next slide that allows me to save web assembly files to assemble them right from the",
    "start": "2639990",
    "end": "2647300"
  },
  {
    "text": "IDE the text editor which is super useful so you see it created a waggon",
    "start": "2647300",
    "end": "2652410"
  },
  {
    "text": "file here if I click on it it'll say that's binary but there's an option to",
    "start": "2652410",
    "end": "2658020"
  },
  {
    "text": "show web assembly and so that's the disassembled code of the code I just",
    "start": "2658020",
    "end": "2663570"
  },
  {
    "text": "assembled so it's very similar but not",
    "start": "2663570",
    "end": "2668790"
  },
  {
    "text": "exactly the same so let's see if that works hooray it works",
    "start": "2668790",
    "end": "2677060"
  },
  {
    "text": "[Applause] that's way too soon okay so we need to",
    "start": "2678510",
    "end": "2691859"
  },
  {
    "text": "create another failing test here returns other passed in numbers so let's pass in",
    "start": "2691859",
    "end": "2700240"
  },
  {
    "text": "a to I'm expect to get a two back that's gonna should complain that expected one",
    "start": "2700240",
    "end": "2706150"
  },
  {
    "text": "to be two and then in our implementation here what we need to do instead is call",
    "start": "2706150",
    "end": "2712540"
  },
  {
    "start": "2709000",
    "end": "2739000"
  },
  {
    "text": "get local dollar n so now it will return whatever you hand it we've created echo",
    "start": "2712540",
    "end": "2719700"
  },
  {
    "text": "and if I save this as webassembly",
    "start": "2719700",
    "end": "2725790"
  },
  {
    "text": "and rerun my tests now it handles all sorts of numbers so let's do something a",
    "start": "2727230",
    "end": "2733839"
  },
  {
    "text": "little more interesting well I'm going to split down and split this down so we",
    "start": "2733839",
    "end": "2738910"
  },
  {
    "text": "can see both of these at the same time I think that would maybe a little better it returns fizz actually is gonna return",
    "start": "2738910",
    "end": "2745869"
  },
  {
    "text": "negative one this is just copy that returns negative one for multiples of",
    "start": "2745869",
    "end": "2754050"
  },
  {
    "text": "three so if it passes in a three I",
    "start": "2754050",
    "end": "2759150"
  },
  {
    "text": "should get negative one right",
    "start": "2759150",
    "end": "2764849"
  },
  {
    "text": "expected three to be negative one that's the expected error so let's go into here and say we we need to do a modulus opera",
    "start": "2765829",
    "end": "2775260"
  },
  {
    "start": "2769000",
    "end": "2859000"
  },
  {
    "text": "we need to do a comparison and so so we'll get and and then we'll say I",
    "start": "2775260",
    "end": "2782730"
  },
  {
    "text": "thirty-two EQ and say hang on I'm",
    "start": "2782730",
    "end": "2790349"
  },
  {
    "text": "missing a step here I thirty-two Const 3 so he shoved the value passed into the",
    "start": "2790349",
    "end": "2797700"
  },
  {
    "text": "stack it's on the stack three is on top of that on the stack will call equals which will say are these two things on",
    "start": "2797700",
    "end": "2803579"
  },
  {
    "text": "the stack equal or not we'll push in a true or false then we can say if an end",
    "start": "2803579",
    "end": "2810650"
  },
  {
    "text": "and then then return and we want to say",
    "start": "2810650",
    "end": "2816000"
  },
  {
    "text": "I thirty-two Const minus one otherwise once the I get local dollar n so what",
    "start": "2816000",
    "end": "2826380"
  },
  {
    "text": "that's going to do is it's going to take the local on the cost so we're gonna do that comparison if that's true we're",
    "start": "2826380",
    "end": "2831480"
  },
  {
    "text": "gonna set it to minus one in return otherwise our stacks still empty and so",
    "start": "2831480",
    "end": "2836520"
  },
  {
    "text": "we need to take our local value and put back on there that makes sense okay good it made sense to me let me save that off",
    "start": "2836520",
    "end": "2848720"
  },
  {
    "text": "replace",
    "start": "2848720",
    "end": "2851720"
  },
  {
    "text": "hooray now I'm starting to feel a little smarter by the way I would not recommend",
    "start": "2854110",
    "end": "2860450"
  },
  {
    "start": "2859000",
    "end": "2884000"
  },
  {
    "text": "doing this for actual production code god this language it's a very verbose",
    "start": "2860450",
    "end": "2865570"
  },
  {
    "text": "it's cool that it exists and we can do this but I would not want to do this day in and day out so let's go ahead and say",
    "start": "2865570",
    "end": "2874820"
  },
  {
    "text": "it returns -1 for other multiples of 3 we pass in a 6",
    "start": "2874820",
    "end": "2882490"
  },
  {
    "text": "that'll fail for the expected reason and instead of doing this we need to say I",
    "start": "2882490",
    "end": "2890440"
  },
  {
    "start": "2884000",
    "end": "2939000"
  },
  {
    "text": "32 to ram underscore you calculate the remainder and then we can say equals",
    "start": "2890440",
    "end": "2896750"
  },
  {
    "text": "zero what's it on line seven down here",
    "start": "2896750",
    "end": "2906470"
  },
  {
    "text": "oh I got it yeah thank you it's like massive pair program that",
    "start": "2906470",
    "end": "2911660"
  },
  {
    "text": "people say pair programming doesn't work [Laughter]",
    "start": "2911660",
    "end": "2917530"
  },
  {
    "text": "it's amenable I'm gonna blame my keyboard because only a poor craftsman blames his tools so let's go ahead and",
    "start": "2917530",
    "end": "2925670"
  },
  {
    "text": "save this and actually that little",
    "start": "2925670",
    "end": "2934460"
  },
  {
    "text": "assembler will show you error so they would have caught it but thank you so now it's working for other multiples of",
    "start": "2934460",
    "end": "2940940"
  },
  {
    "start": "2939000",
    "end": "2994000"
  },
  {
    "text": "three and then you can imagine how this turns into five and fifteen but I did want to show another thing here and",
    "start": "2940940",
    "end": "2947000"
  },
  {
    "text": "we'll finish it out but this is kind of heavy syntax right I mean your line is",
    "start": "2947000",
    "end": "2954740"
  },
  {
    "text": "loading a thing under the stack there's actually a mechanism where you can use s expressions to make this more readable",
    "start": "2954740",
    "end": "2959960"
  },
  {
    "text": "and so I can take this guy here and wrap him in parenthesis and this guy here and",
    "start": "2959960",
    "end": "2965720"
  },
  {
    "text": "wrap him in parenthesis oops put those",
    "start": "2965720",
    "end": "2970790"
  },
  {
    "text": "on one line and rap then in parentheses and that's",
    "start": "2970790",
    "end": "2978220"
  },
  {
    "text": "starting to look like a function call so that's a little more of an intuitive syntax and so that should assemble",
    "start": "2978220",
    "end": "2988869"
  },
  {
    "text": "properly you know let's make sure this still works it still works you can do the same thing",
    "start": "2988869",
    "end": "2995859"
  },
  {
    "start": "2994000",
    "end": "3089000"
  },
  {
    "text": "with the if statement we say if I 32 dot equals Z then do stuff end it we don't",
    "start": "2995859",
    "end": "3011040"
  },
  {
    "text": "need that anymore",
    "start": "3011040",
    "end": "3013670"
  },
  {
    "text": "and then we can say return like that so",
    "start": "3017480",
    "end": "3029359"
  },
  {
    "text": "now it's starting to look like more familiar programming and then just for",
    "start": "3029359",
    "end": "3035380"
  },
  {
    "text": "completeness sake we can do this as well",
    "start": "3035380",
    "end": "3040750"
  },
  {
    "text": "yeah yeah it's that's really funny",
    "start": "3043690",
    "end": "3052190"
  },
  {
    "text": "actually I hadn't thought about that but I don't have a good answer yeah so that",
    "start": "3052190",
    "end": "3066290"
  },
  {
    "text": "should still work oh I broke something Oh yep yep it's it's inverting us",
    "start": "3066290",
    "end": "3077920"
  },
  {
    "text": "there we go and yeah so we could very easily then do",
    "start": "3088829",
    "end": "3094960"
  },
  {
    "start": "3089000",
    "end": "3209000"
  },
  {
    "text": "we'll do it really quick here I will cheat and write all my tests at once",
    "start": "3094960",
    "end": "3100589"
  },
  {
    "text": "even though the purist in me is dying a little bit on the inside so - - and then",
    "start": "3100589",
    "end": "3111790"
  },
  {
    "text": "returns - - for other multiples of 5 and we set that to 10 and that de - - and",
    "start": "3111790",
    "end": "3119460"
  },
  {
    "text": "then let's go ahead and do the whole shebang here turns - 3 for multiples of",
    "start": "3119460",
    "end": "3130000"
  },
  {
    "text": "3 and 5 nice 3 for other multiples of 3",
    "start": "3130000",
    "end": "3136930"
  },
  {
    "text": "and 5 pass in 15 pass in 30 passin 3 or",
    "start": "3136930",
    "end": "3144490"
  },
  {
    "text": "negative 3 here and then if we run these we should see lots of failures 4 of them and then we can pretty easily just take",
    "start": "3144490",
    "end": "3151900"
  },
  {
    "text": "this code here and I don't always reuse",
    "start": "3151900",
    "end": "3157059"
  },
  {
    "text": "code but when I do I copy and paste",
    "start": "3157059",
    "end": "3160859"
  },
  {
    "text": "that's right",
    "start": "3162960",
    "end": "3166260"
  },
  {
    "text": "oops you saw it go wrong and they make this 15 I'm deliberately doing this in",
    "start": "3169359",
    "end": "3176890"
  },
  {
    "text": "the right order so they don't have to deal with that save as well assembly binary",
    "start": "3176890",
    "end": "3184200"
  },
  {
    "text": "it did not complain and it all passes so I thank you [Applause]",
    "start": "3187810",
    "end": "3197070"
  },
  {
    "text": "now I feel smart so that is that's the",
    "start": "3197070",
    "end": "3202690"
  },
  {
    "text": "webassembly text format achievement unlocked so I mentioned there were some",
    "start": "3202690",
    "end": "3210550"
  },
  {
    "start": "3209000",
    "end": "3309000"
  },
  {
    "text": "links to articles here this is a lot of the stuff that I looked at when I was researching this to put this talk together the Mozilla developer Network",
    "start": "3210550",
    "end": "3217480"
  },
  {
    "text": "Sartre achill czar fantastic their stuffs just fantastic in general you should be using if you're doing any",
    "start": "3217480",
    "end": "3222490"
  },
  {
    "text": "JavaScript at all you should be using the Mozilla developer Network webassembly dot org is where the",
    "start": "3222490",
    "end": "3227860"
  },
  {
    "text": "standard lives was not the most consumable thing for some of the text format stuff it was sort of written in a",
    "start": "3227860",
    "end": "3235240"
  },
  {
    "text": "hey here's how you would write a compiler sort of fashion not a here's how we would program it in this on a daily basis because no one should be",
    "start": "3235240",
    "end": "3243130"
  },
  {
    "text": "programming in this in a daily basis the web assembly binary toolkit is a",
    "start": "3243130",
    "end": "3248560"
  },
  {
    "text": "command-line tool for building assemblers and disassemblers of web assemblies code the web assembly toolkit",
    "start": "3248560",
    "end": "3254470"
  },
  {
    "text": "for Visual Studio code is what I was using in this talk super useful got syntax highlighting - Russ got building",
    "start": "3254470",
    "end": "3261070"
  },
  {
    "text": "supports in scriptum is a tool that will take your C code and we'll build the HTML and the CSS and the JavaScript",
    "start": "3261070",
    "end": "3268240"
  },
  {
    "text": "bridges and the web assembly modules and turn your application into a web app",
    "start": "3268240",
    "end": "3274080"
  },
  {
    "text": "it's pretty neat that's I'm told that's what Blazers built on top of well",
    "start": "3274080",
    "end": "3279880"
  },
  {
    "text": "there's a whole bunch of other languages that are supported out there awesome wasm has a bunch of cool stuff",
    "start": "3279880",
    "end": "3285310"
  },
  {
    "text": "that's out there and this is all on my github account so that the links are active there so check it out why some",
    "start": "3285310",
    "end": "3292210"
  },
  {
    "text": "Explorer is fun because it lets you just copy and paste C code and generate a wizened file from that and web assembly",
    "start": "3292210",
    "end": "3300370"
  },
  {
    "text": "studio is actually a web-based IDE for this stuff so they're all fun and worth checking out",
    "start": "3300370",
    "end": "3305560"
  },
  {
    "text": "and there's the github links I promised there's internal web assembly which is",
    "start": "3305560",
    "end": "3310810"
  },
  {
    "start": "3309000",
    "end": "3359000"
  },
  {
    "text": "this talk these slides and the code of the the app that I showed you earlier is",
    "start": "3310810",
    "end": "3317800"
  },
  {
    "text": "all right there the super complicated implementation of fizzbuzz that I did for web assembly with full Model View",
    "start": "3317800",
    "end": "3325510"
  },
  {
    "text": "controller and and everything over-engineered fizzbuzz for the web in",
    "start": "3325510",
    "end": "3332540"
  },
  {
    "text": "webassembly took me two days to put together that's there i had to write to do that I had to",
    "start": "3332540",
    "end": "3338930"
  },
  {
    "text": "write integer 2 alpha ITA because I had",
    "start": "3338930",
    "end": "3345050"
  },
  {
    "text": "to turn an integer into a number or into a string like oh it's like C all over",
    "start": "3345050",
    "end": "3350690"
  },
  {
    "text": "again I'm having write this a little level stuff so a lot of interesting tidbits in there and a lot more syntax to make a little more accessible so",
    "start": "3350690",
    "end": "3356720"
  },
  {
    "text": "that's worth checking out and yeah that's pretty much all I've got I've got three minutes so I could take a question",
    "start": "3356720",
    "end": "3362540"
  },
  {
    "start": "3359000",
    "end": "3548000"
  },
  {
    "text": "or two if anyone's got any questions but I only take easy questions so sorry know",
    "start": "3362540",
    "end": "3369020"
  },
  {
    "text": "what you go ahead",
    "start": "3369020",
    "end": "3371470"
  },
  {
    "text": "yeah so the question is is in some of the earlier samples I was showing a",
    "start": "3385770",
    "end": "3391060"
  },
  {
    "text": "callback mechanism and is that something you would use for a synchronicity not",
    "start": "3391060",
    "end": "3396370"
  },
  {
    "text": "specifically it is the short answer it's just the way that webassembly can call into javascript and so I just",
    "start": "3396370",
    "end": "3404200"
  },
  {
    "text": "trying to show how that worked in that sample code more than anything there really isn't that I'm aware of any kind",
    "start": "3404200",
    "end": "3410560"
  },
  {
    "text": "of threading model going on there I mean it's JavaScript there really wasn't a threading model in there anyhow if you",
    "start": "3410560",
    "end": "3415720"
  },
  {
    "text": "wanted to do some sort of a synchronicity you'd probably I don't I don't know that you can do that in web assembly I think that's something that",
    "start": "3415720",
    "end": "3422020"
  },
  {
    "text": "have to happen outside so you call some function the from whether somebody's brought in",
    "start": "3422020",
    "end": "3427270"
  },
  {
    "text": "it does something asynchronous it's just going to return that asynchronous handler would probably have to call back",
    "start": "3427270",
    "end": "3434980"
  },
  {
    "text": "into the web assembly module lead-pipe do all that in JavaScript so I haven't you tried that that's a really",
    "start": "3434980",
    "end": "3440140"
  },
  {
    "text": "interesting question so yes sir",
    "start": "3440140",
    "end": "3444930"
  },
  {
    "text": "so the question is does web simply have legs yet and if so what would we use it",
    "start": "3451150",
    "end": "3456230"
  },
  {
    "text": "for in the future I think it will have legs I think they're short and stubby right now people are using it to build",
    "start": "3456230",
    "end": "3465140"
  },
  {
    "text": "production things I mean that's what blazer is it's built on top of this for the type of low level stuff there's a",
    "start": "3465140",
    "end": "3470299"
  },
  {
    "text": "lot of inconsistency in the ways different people are implementing it so it's new thoughts people are trying lots of things personally I probably wouldn't",
    "start": "3470299",
    "end": "3478220"
  },
  {
    "text": "put any production apps on this simply because it's still being it's still shaking out I think it has some enormous",
    "start": "3478220",
    "end": "3485569"
  },
  {
    "text": "potential for my pet thing that I want to use it for is I want to embed machine learning models into web assembly",
    "start": "3485569",
    "end": "3491480"
  },
  {
    "text": "modules so I can do machine learning in the browser so I could build models on some you know back-end service I do work",
    "start": "3491480",
    "end": "3498109"
  },
  {
    "text": "for data robot and and embed those into",
    "start": "3498109",
    "end": "3503299"
  },
  {
    "text": "the browser for future consumption so I think that's one particularly cool application that just that I think would be neat but there's like all like all",
    "start": "3503299",
    "end": "3511700"
  },
  {
    "text": "this sort of stuff there's all these cool applications that someone is going to think of that I'll never think of and but it's an enabling technology to allow",
    "start": "3511700",
    "end": "3519289"
  },
  {
    "text": "us to find that stuff so you had a question okay well I've got one minute",
    "start": "3519289",
    "end": "3525319"
  },
  {
    "text": "left so I think I'm just gonna say thanks for coming out again this is me feel free to tweet at me check out data",
    "start": "3525319",
    "end": "3532579"
  },
  {
    "text": "robot please and yeah that's all I got so thanks a lot [Applause]",
    "start": "3532579",
    "end": "3542489"
  }
]