[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "so before I go ahead and get started how many of you folks here are actually uh using",
    "start": "9280",
    "end": "15000"
  },
  {
    "text": "microservices production oh a couple uh how many of you are considering",
    "start": "15000",
    "end": "20199"
  },
  {
    "text": "it cool cool uh anyone here uh familiar with",
    "start": "20199",
    "end": "27119"
  },
  {
    "text": "F much fewer okay okay uh there's a fair amount of F# in this talk as well but I",
    "start": "27240",
    "end": "33040"
  },
  {
    "text": "will go over all the pieces that you guys will need so today is patterns and",
    "start": "33040",
    "end": "38480"
  },
  {
    "text": "practices for real world event driven microservices sometimes I throw a cloud-based in there there's a few other",
    "start": "38480",
    "end": "44480"
  },
  {
    "text": "you know good buzzwords that I I like to fill this title up with uh just to make it extra fun but to start off I'll",
    "start": "44480",
    "end": "50800"
  },
  {
    "start": "50000",
    "end": "235000"
  },
  {
    "text": "usually actually define all of these pieces so for real world I mean I work",
    "start": "50800",
    "end": "56480"
  },
  {
    "text": "at jet.com we are a shopping site we are competing with Amazon.com in the states",
    "start": "56480",
    "end": "63600"
  },
  {
    "text": "uh we aren't available even we're only available even in 48 states we're not available in Alaska and Hawaii yet but",
    "start": "63600",
    "end": "70400"
  },
  {
    "text": "we have over 25,000 orders per day 10.5 million items on the site uh we are the",
    "start": "70400",
    "end": "76080"
  },
  {
    "text": "number four marketplace worldwide we're behind Amazon I believe Walmart and",
    "start": "76080",
    "end": "81360"
  },
  {
    "text": "maybe um the other big one I forget uh but",
    "start": "81360",
    "end": "86400"
  },
  {
    "text": "we're number four uh for marketplace and 700",
    "start": "86400",
    "end": "91560"
  },
  {
    "text": "microservices i usually say 700 but that's a bit of a madeup number the last",
    "start": "91560",
    "end": "97759"
  },
  {
    "text": "year around this time I I was pretty comfortable in saying we had about 300 and you know as time went on I' I'd ping",
    "start": "97759",
    "end": "104159"
  },
  {
    "text": "the different teams and different developers and say well you know how many do you think we have now are we maybe up to 400 or are we at 450 at some",
    "start": "104159",
    "end": "110479"
  },
  {
    "text": "point everyone's like we don't know my team has 22 my team has 47 my team has",
    "start": "110479",
    "end": "116640"
  },
  {
    "text": "eight and so I sort of you know did averaged the numbers over all the teams and figured it's probably somewhere",
    "start": "116640",
    "end": "122880"
  },
  {
    "text": "between 400 and a thousand microservices 700 seems like a nice round number so we",
    "start": "122880",
    "end": "129200"
  },
  {
    "text": "have a lot of microservices and uh the the code",
    "start": "129200",
    "end": "134239"
  },
  {
    "text": "definitely for all of our microservices and the vast majority of our code in general is F maybe 90 95% of all of our",
    "start": "134239",
    "end": "141520"
  },
  {
    "text": "code we do use a lot of technologies",
    "start": "141520",
    "end": "147080"
  },
  {
    "text": "uh the we are very heavy users you'll see the the top section of Azure and if",
    "start": "147080",
    "end": "153760"
  },
  {
    "text": "you recall from the last slide we are taking on Amazon so we are not heavy users of AWS uh but we use you know",
    "start": "153760",
    "end": "161200"
  },
  {
    "text": "their websites active directory the the service bus topics the blob storage we use a lot of what Azure has to offer the",
    "start": "161200",
    "end": "170239"
  },
  {
    "text": "F section in the middle in green uh again the vast majority of our code is in F so packet and fake we use a lot of",
    "start": "170239",
    "end": "178800"
  },
  {
    "text": "if you haven't looked at packet and fake packet is a uh package manager which",
    "start": "178800",
    "end": "184400"
  },
  {
    "text": "sits on top of nuet and is absolutely wonderful fake is a build system also",
    "start": "184400",
    "end": "190080"
  },
  {
    "text": "fabulous and again absolutely wonderful uh but F#.data FS blog uh SQL provider",
    "start": "190080",
    "end": "196959"
  },
  {
    "text": "uh F async I know the SQL provider and F# async we actually have folks on staff who contribute very regularly are the",
    "start": "196959",
    "end": "203440"
  },
  {
    "text": "maintainers of both of those so we again we do a lot in the the F# space R and",
    "start": "203440",
    "end": "209280"
  },
  {
    "text": "Python for our our data science node and angular on our front end and then the bottom section of purple is sort of",
    "start": "209280",
    "end": "216480"
  },
  {
    "text": "everything else uh we use Go very heavily we have console and cfka again",
    "start": "216480",
    "end": "222920"
  },
  {
    "text": "microservices zamron SQL you know Apache Hintzes we're very much a right tool for",
    "start": "222920",
    "end": "229360"
  },
  {
    "text": "the job company and we use whatever makes sense",
    "start": "229360",
    "end": "235480"
  },
  {
    "start": "235000",
    "end": "400000"
  },
  {
    "text": "so microservices you know that's that is our real world we are you know very much",
    "start": "235480",
    "end": "240720"
  },
  {
    "text": "using all of these things in production it is a a very large site we do need to handle these things at scale so",
    "start": "240720",
    "end": "247640"
  },
  {
    "text": "microservices I found as I started speaking thinking about microservices that I really needed to define what a",
    "start": "247640",
    "end": "253439"
  },
  {
    "text": "microser is what that means to us in jet and for us for the the definition it's",
    "start": "253439",
    "end": "258720"
  },
  {
    "text": "an application of the single responsibility principle at the service level so if you don't know what that means a class should have one and only",
    "start": "258720",
    "end": "264720"
  },
  {
    "text": "one reason to change to us a microser isn't uh any one of these other you know",
    "start": "264720",
    "end": "270160"
  },
  {
    "text": "it's not just one function it's not you know the amount of code that a two pizza",
    "start": "270160",
    "end": "276160"
  },
  {
    "text": "team can write in just a week and a half you know it's none of those other metrics It's just simply the the",
    "start": "276160",
    "end": "282560"
  },
  {
    "text": "microsurface itself should the micros service itself should have one reason to",
    "start": "282560",
    "end": "288479"
  },
  {
    "text": "exist one one purpose the benefits of using microservices very very easy scalability",
    "start": "288479",
    "end": "296320"
  },
  {
    "text": "when you have such a small piece of code you can obviously scale that up and out very very quickly if you for independent",
    "start": "296320",
    "end": "304160"
  },
  {
    "text": "releaseability again a very small piece of code it's very easy to release just a single piece just that one piece of code",
    "start": "304160",
    "end": "310800"
  },
  {
    "text": "it's not going to affect nearly as many pieces you don't have to as run as many checks and tests and ver verifications",
    "start": "310800",
    "end": "317280"
  },
  {
    "text": "and and all of this before you release though you do need to run those th those",
    "start": "317280",
    "end": "322320"
  },
  {
    "text": "checks and verifications but it is a lot easier to work with a small piece of code there's also a more even",
    "start": "322320",
    "end": "329840"
  },
  {
    "text": "distribution of complexity and that excuse me that really means that it",
    "start": "329840",
    "end": "338720"
  },
  {
    "text": "we're shifting the the the complexity from the business logic to the infrastructure working with",
    "start": "338720",
    "end": "344240"
  },
  {
    "text": "microservices as the few of you who are know this is it's very you know it's very",
    "start": "344240",
    "end": "350800"
  },
  {
    "text": "difficult to do there's a lot of infrastructure there's a lot of you know infrastructure that you need",
    "start": "350800",
    "end": "357520"
  },
  {
    "text": "around those services you need to uh handle discoverability you need to",
    "start": "357520",
    "end": "362720"
  },
  {
    "text": "restart them at at will there's a a lot of things that you need there that that",
    "start": "362720",
    "end": "368240"
  },
  {
    "text": "really uh come into play and it that ends up being a lot heavier it still I",
    "start": "368240",
    "end": "373919"
  },
  {
    "text": "think is a lot more uh a lot less difficult than handling a giant monolithic solution one of those things",
    "start": "373919",
    "end": "380479"
  },
  {
    "text": "where you know it's been three years and 47 developers sort of all cross their fingers and over a week you",
    "start": "380479",
    "end": "387440"
  },
  {
    "text": "progressively release you know the website I've been involved in those and those are very difficult but having",
    "start": "387440",
    "end": "395039"
  },
  {
    "text": "having the infrastructure around microservices and using microservices is still a lot more simple than",
    "start": "395039",
    "end": "400280"
  },
  {
    "start": "400000",
    "end": "638000"
  },
  {
    "text": "that so cloud-based obviously we use Azure as I",
    "start": "400280",
    "end": "406080"
  },
  {
    "text": "mentioned um and if you're working with Azure Microsoft services are a very natural uh natural choice because it's",
    "start": "406080",
    "end": "413840"
  },
  {
    "text": "very easy to to loosely couple things and you know with the cloud and everything but cloud-based does mean you",
    "start": "413840",
    "end": "420000"
  },
  {
    "text": "know that you need to consider failures failures will be built into your system there'll be times when the servers are",
    "start": "420000",
    "end": "425360"
  },
  {
    "text": "down or your network is down and for that you really should have a chaos engineering program it's one of the it's",
    "start": "425360",
    "end": "432639"
  },
  {
    "text": "you know if availability matters then you should be testing for it it's really a a best practices sort of move so this",
    "start": "432639",
    "end": "438479"
  },
  {
    "text": "is my first uh pattern for for microservices and what is chaos",
    "start": "438479",
    "end": "444960"
  },
  {
    "text": "engineering a lot of folks think it's just wreaking havoc with your code because it's fun and you can and you",
    "start": "444960",
    "end": "451440"
  },
  {
    "text": "know really what could possibly go wrong if you decide to do that chaos engineering is really talking about",
    "start": "451440",
    "end": "458240"
  },
  {
    "text": "controlled experiments so small small changes to test out what would happen uh",
    "start": "458240",
    "end": "466319"
  },
  {
    "text": "because there will be inevitable failure there will be failures in your system the network will go down there will there will be lots and lots of issues",
    "start": "466319",
    "end": "472639"
  },
  {
    "text": "that you can't control because you are using a cloud provider and by doing those small tests",
    "start": "472639",
    "end": "479120"
  },
  {
    "text": "and building confidence in your system you start to you know you gain a few",
    "start": "479120",
    "end": "484840"
  },
  {
    "text": "benefits first you're awake if you're running a test that is bringing down a",
    "start": "484840",
    "end": "490240"
  },
  {
    "text": "specific service or a specific server the outages are going to happen when the when you know we're all awake",
    "start": "490240",
    "end": "497199"
  },
  {
    "text": "when we're ready to deal with a failure you know it's it's 10:00 a.m on a Tuesday morning and you've had your",
    "start": "497199",
    "end": "503800"
  },
  {
    "text": "coffee and you're you're ready and awake it's not 4:00 a.m and you've just been",
    "start": "503800",
    "end": "508960"
  },
  {
    "text": "paged and you have absolutely no idea what's going on and there's an error message and you have to wake up and understand everything and suddenly fix",
    "start": "508960",
    "end": "514719"
  },
  {
    "text": "it you're prepared you can handle this you know it's it's a lot easier at that at that",
    "start": "514719",
    "end": "521080"
  },
  {
    "text": "point and we found that folks also start to design for failure so you know that",
    "start": "521080",
    "end": "526640"
  },
  {
    "text": "these tests will happen if you're running a chaos engineering program i you know and you start thinking about",
    "start": "526640",
    "end": "534279"
  },
  {
    "text": "well you know if this service if the service actually goes down how should we handle that what should happen what what",
    "start": "534279",
    "end": "541120"
  },
  {
    "text": "should that look like you know upstream and downstream and and where where should we put in checks for all of that",
    "start": "541120",
    "end": "546480"
  },
  {
    "text": "so you start to think ahead and and handle all these issues you also you end up having much",
    "start": "546480",
    "end": "552640"
  },
  {
    "text": "healthier systems because you're dealing with these uh because you're pre-checking for",
    "start": "552640",
    "end": "560240"
  },
  {
    "text": "this uh so you end up having you know you're you're preventing later outages by by having a small a small thing go",
    "start": "561720",
    "end": "570000"
  },
  {
    "text": "wrong at 10 a.m on a Tuesday morning you're preventing a much bigger disaster from happening at 4 am you know six",
    "start": "570000",
    "end": "576880"
  },
  {
    "text": "weeks from now there's also a fair amount of self-service it's",
    "start": "576880",
    "end": "583839"
  },
  {
    "text": "it's similar to the designing for failure but once you start once you start doing",
    "start": "583839",
    "end": "590720"
  },
  {
    "text": "this once you start checking for failures once you start uh really thinking about how these things are",
    "start": "590720",
    "end": "596640"
  },
  {
    "text": "going to happen you sort of want to you you want to know if you know you want",
    "start": "596640",
    "end": "602000"
  },
  {
    "text": "your service to be the best one so you start thinking not just in advance for designing for failure but what is",
    "start": "602000",
    "end": "608800"
  },
  {
    "text": "everything that can go wrong not just the thing the four things that I know we test for but let's start getting",
    "start": "608800",
    "end": "614640"
  },
  {
    "text": "creative and what if uh you know an entire region in Azure Azure goes down or something ridiculous and what would",
    "start": "614640",
    "end": "621920"
  },
  {
    "text": "happen then and so you you we found some devs",
    "start": "621920",
    "end": "626959"
  },
  {
    "text": "start getting really sort of competitive with themselves to make their services better and better",
    "start": "626959",
    "end": "632640"
  },
  {
    "text": "uh and So that's you know chaos engineering obviously is is my first recommendation so jumping back now still",
    "start": "632640",
    "end": "640560"
  },
  {
    "start": "638000",
    "end": "798000"
  },
  {
    "text": "definitions event driven and event driven just basically",
    "start": "640560",
    "end": "646399"
  },
  {
    "text": "means the focus of your application code is reacting to actual events can be single events can be an entire stream of",
    "start": "646399",
    "end": "653360"
  },
  {
    "text": "events uh in our case it is a stream but it event driven just means",
    "start": "653360",
    "end": "660120"
  },
  {
    "text": "reacting events uh are any any significant change in",
    "start": "660120",
    "end": "666160"
  },
  {
    "text": "state that's happened in your domain should be past tense it should be immutable the you know the an event here",
    "start": "666160",
    "end": "673680"
  },
  {
    "text": "maybe all of you folks woke up this morning you got dressed you came to NDC",
    "start": "673680",
    "end": "678720"
  },
  {
    "text": "Sydney and you decided to come to my talk those things have happened you can't change your decision you can't",
    "start": "678720",
    "end": "684560"
  },
  {
    "text": "pretend that you decided not to come to NDC Sydney or to my talk you're all here like it that's that is immutable it's",
    "start": "684560",
    "end": "691200"
  },
  {
    "text": "it's a fact uh it's also the last one contains only",
    "start": "691200",
    "end": "696800"
  },
  {
    "text": "relevant you know the actual event itself only relevant data to the transaction it doesn't matter what color",
    "start": "696800",
    "end": "702160"
  },
  {
    "text": "shirt anyone is wearing here today the important thing is or the the important information for this event is that you",
    "start": "702160",
    "end": "708160"
  },
  {
    "text": "actually showed up that you're in this room that either you're at NDC Sydney or maybe you're at this hotel but you know",
    "start": "708160",
    "end": "714800"
  },
  {
    "text": "it it doesn't matter you know what color shirt you're wearing what what type of shoes that's all irrelevant data to this",
    "start": "714800",
    "end": "720880"
  },
  {
    "text": "actual the actual transaction and one confusing point the",
    "start": "720880",
    "end": "726000"
  },
  {
    "text": "term event tends to refer to both the actual event itself you know showing up at this talk as well as the notification",
    "start": "726000",
    "end": "732959"
  },
  {
    "text": "message that's passed around to the the rest of the system so as notification as",
    "start": "732959",
    "end": "739160"
  },
  {
    "text": "notification messages the excuse me the uh we have a simple",
    "start": "739160",
    "end": "745920"
  },
  {
    "text": "you know pushbased notification we have an event emitter and the events travel through an event channel and then are",
    "start": "745920",
    "end": "751279"
  },
  {
    "text": "consumed by an event consumer which is uh very similar to uh",
    "start": "751279",
    "end": "759320"
  },
  {
    "text": "reactive does anyone here actually use any of the RX extensions or uh cool a",
    "start": "759320",
    "end": "765920"
  },
  {
    "text": "couple people uh so the reactive manifesto if I can recall it was",
    "start": "765920",
    "end": "771959"
  },
  {
    "text": "uh modern applications should be responsive messaged driven resilient and",
    "start": "771959",
    "end": "777920"
  },
  {
    "text": "elastic um but basically you know event driven is a very reactive concept events",
    "start": "777920",
    "end": "784399"
  },
  {
    "text": "can be thought of as an observable and when they are you know the the microser input of you know when",
    "start": "784399",
    "end": "790639"
  },
  {
    "text": "you're reading these events you can be you can treat that stream of events as an observable and event source that so",
    "start": "790639",
    "end": "798880"
  },
  {
    "start": "798000",
    "end": "946000"
  },
  {
    "text": "does anyone here do event sourcing okay a couple people have the rest of you folks heard of event",
    "start": "798880",
    "end": "805480"
  },
  {
    "text": "sourcing couple folks okay so event sourcing slightly different than or",
    "start": "805480",
    "end": "810800"
  },
  {
    "text": "definitely different than event driven it's more about how you're modeling a domain it's it's a an append only",
    "start": "810800",
    "end": "818320"
  },
  {
    "text": "sequence of events uh you really just keep track of each of the events as they",
    "start": "818320",
    "end": "823519"
  },
  {
    "text": "happen so that you have you know one giant stream of events it keeps track of all of the state changes a excuse",
    "start": "823519",
    "end": "832800"
  },
  {
    "text": "me a very common uh way of explaining this is you know thinking about folks",
    "start": "833320",
    "end": "841120"
  },
  {
    "text": "uh customers when they move you can have a a standard database would only handle",
    "start": "841120",
    "end": "846959"
  },
  {
    "text": "the most recent customer address but an event log would you would see all of the",
    "start": "846959",
    "end": "853120"
  },
  {
    "text": "past events you'd see when the customer moved what the previous address had been uh and a flow of events through that and",
    "start": "853120",
    "end": "859839"
  },
  {
    "text": "you can end up replaying those streams",
    "start": "859839",
    "end": "864920"
  },
  {
    "text": "uh so you know a relational model will only have the the latest information but",
    "start": "864920",
    "end": "870240"
  },
  {
    "text": "you can end up replaying these streams very similar to an account history a ledger a bank statement sort of idea",
    "start": "870240",
    "end": "877040"
  },
  {
    "text": "where you can go back you know if you you are one of those people who who you know keeps every single statement that",
    "start": "877040",
    "end": "882399"
  },
  {
    "text": "you've ever had i used to be one of those people i am not that person anymore um but you can go back through",
    "start": "882399",
    "end": "888959"
  },
  {
    "text": "all of your statements and you know since the beginning of time from your you know when you started the bank",
    "start": "888959",
    "end": "894240"
  },
  {
    "text": "account and see exactly what happened and make sure that you know your version of the information is in sync with what",
    "start": "894240",
    "end": "900480"
  },
  {
    "text": "the bank's version of the information is but for example maybe the date here",
    "start": "900480",
    "end": "907079"
  },
  {
    "text": "uh maybe there's there's additional uh information you wanted to capture the time as well you know if you think of",
    "start": "907079",
    "end": "914000"
  },
  {
    "text": "all of this as just one giant stream of events you can replay all of that information and you know add on the time",
    "start": "914000",
    "end": "920800"
  },
  {
    "text": "assuming that that was captured to begin with and just cut off uh so you can you",
    "start": "920800",
    "end": "925920"
  },
  {
    "text": "know replay and adjust if you if you go through all of this say you you found a bug in the way this was handled if you",
    "start": "925920",
    "end": "931920"
  },
  {
    "text": "you know needed to update the SQL schema uh of the the tables that this information was writing to maybe you",
    "start": "931920",
    "end": "937600"
  },
  {
    "text": "needed to reindex your searching but there's lots of different reasons and ways that you might uh want to rerun",
    "start": "937600",
    "end": "944800"
  },
  {
    "text": "this event stream so how did Jet actually decide on",
    "start": "944800",
    "end": "950720"
  },
  {
    "start": "946000",
    "end": "1054000"
  },
  {
    "text": "microservices",
    "start": "950720",
    "end": "953720"
  },
  {
    "text": "and this is actually one of my favorite stories we didn't we decided on",
    "start": "956079",
    "end": "962680"
  },
  {
    "text": "F we sort of and I will tell that story soon actually next but once we had",
    "start": "962680",
    "end": "969600"
  },
  {
    "text": "decided on F we decided you know we uh F",
    "start": "969600",
    "end": "974720"
  },
  {
    "text": "being a functional language and you being immutable by default most well the vast majority of functions that",
    "start": "974720",
    "end": "982240"
  },
  {
    "text": "you're writing in F are proper functions they have inputs and they have proper outputs and the microservices to us are",
    "start": "982240",
    "end": "988800"
  },
  {
    "text": "just one large script so they act sort of like one big function there's some specific inputs there's specific outputs",
    "start": "988800",
    "end": "995199"
  },
  {
    "text": "they should be immutable in general and",
    "start": "995199",
    "end": "1001160"
  },
  {
    "text": "we we also named things you know if you're writing a bunch of microservices you don't want to name thing you know",
    "start": "1001160",
    "end": "1007360"
  },
  {
    "text": "have maybe you know an import new items so we have an an import skew service the",
    "start": "1007360",
    "end": "1013759"
  },
  {
    "text": "proper naming conventions dictate that you'd want to have have that called import SKUs not import service and we",
    "start": "1013759",
    "end": "1020639"
  },
  {
    "text": "were doing that because we weren't thinking of anything as services we were just thinking well this is the import skew script and this should be importing",
    "start": "1020639",
    "end": "1029360"
  },
  {
    "text": "SKS and it you know it has a few inputs of you know places to look a stream to",
    "start": "1029360",
    "end": "1035959"
  },
  {
    "text": "follow and you know specific outputs of you know the the SKS themselves perhaps",
    "start": "1035959",
    "end": "1042160"
  },
  {
    "text": "but there was no actual meeting where everyone sat down and said as a good architectural decision let's do",
    "start": "1042160",
    "end": "1047480"
  },
  {
    "text": "microservices we built a bunch of F scripts and accidentally woke up one day and had microservices",
    "start": "1047480",
    "end": "1054039"
  },
  {
    "start": "1054000",
    "end": "1378000"
  },
  {
    "text": "is so then why did we choose F# well",
    "start": "1054039",
    "end": "1061279"
  },
  {
    "text": "the the CTO attended a conference ages ago um well so first of all this the CTO",
    "start": "1062840",
    "end": "1069679"
  },
  {
    "text": "is a big uh Microsoft person had always worked with with C was very comfortable",
    "start": "1069679",
    "end": "1075760"
  },
  {
    "text": "there and so the original plan was was to just use C and he attended a a",
    "start": "1075760",
    "end": "1082440"
  },
  {
    "text": "conference years and years ago when when F was fairly new maybe 2012 and heard the same story that a lot",
    "start": "1082440",
    "end": "1089039"
  },
  {
    "text": "of folks have heard about how F is good for math and science and you know you should a lot of the banks use it for",
    "start": "1089039",
    "end": "1096080"
  },
  {
    "text": "financial purposes and you know that that's sort of F's sweet",
    "start": "1096080",
    "end": "1101880"
  },
  {
    "text": "spot and he decided that you know as part of the one of Jet's big uh things",
    "start": "1101880",
    "end": "1108480"
  },
  {
    "text": "is that we have a very interesting pricing engine it can it double checks which",
    "start": "1108480",
    "end": "1114080"
  },
  {
    "text": "merchants you're going to be purchasing from and if you're buying two or three things from the same merchant it will",
    "start": "1114080",
    "end": "1120480"
  },
  {
    "text": "bundle those together you can save a little bit on shipping uh or the merchant can save a little bit on shipping and we pass those savings on to",
    "start": "1120480",
    "end": "1127039"
  },
  {
    "text": "you but we don't you know we don't really know who you're going to we don't",
    "start": "1127039",
    "end": "1132720"
  },
  {
    "text": "know which merchants you're going to be purchasing from until we have the final basket because at that point then we do",
    "start": "1132720",
    "end": "1139120"
  },
  {
    "text": "all that matching and see see if we can get four things from one merchant and two from another as compared to you know",
    "start": "1139120",
    "end": "1146000"
  },
  {
    "text": "four individual items and two from a single merchant so that pricing engine",
    "start": "1146000",
    "end": "1151360"
  },
  {
    "text": "the the CTO realized is a really is a perfect fit for F seems like a natural",
    "start": "1151360",
    "end": "1156720"
  },
  {
    "text": "there's there's going to be a lot of mathy things there and so some of the very early developers the first you know",
    "start": "1156720",
    "end": "1163520"
  },
  {
    "text": "two or three were F developers uh well of the",
    "start": "1163520",
    "end": "1168559"
  },
  {
    "text": "first two or three developers four developers there was a an F# developer to work on the pricing engine and as you",
    "start": "1168559",
    "end": "1176480"
  },
  {
    "text": "know the the architectural discussions started to happen and as things you know moved along they started to have more and more",
    "start": "1176480",
    "end": "1183600"
  },
  {
    "text": "discussions about Well should we maybe be using F# for this piece over here what about this part over here there",
    "start": "1183600",
    "end": "1191280"
  },
  {
    "text": "where where does it really fit should it should the process be expanded or not and they started to realize that they",
    "start": "1191280",
    "end": "1198559"
  },
  {
    "text": "they weren't really sure and as a very very young startup they were like hm we",
    "start": "1198559",
    "end": "1203919"
  },
  {
    "text": "have time and let's just let's let's see where this goes we'll build one complete",
    "start": "1203919",
    "end": "1209919"
  },
  {
    "text": "solution in C# and one complete solution in F# and see which one is better so F#",
    "start": "1209919",
    "end": "1217520"
  },
  {
    "text": "obviously won but it was the so that there were several factors a lot of them are the",
    "start": "1217520",
    "end": "1223919"
  },
  {
    "text": "the same things that you hear about F there's you know less code leading to fewer bugs and you're able to to keep a",
    "start": "1223919",
    "end": "1231440"
  },
  {
    "text": "lot of that in your head and and all of these these good things that people do hear about uh do say legitimately about",
    "start": "1231440",
    "end": "1237240"
  },
  {
    "text": "F um the type system is really wonderful it double checks things for you but the",
    "start": "1237240",
    "end": "1243919"
  },
  {
    "text": "big thing the sort of the straw that broke the camel's back was our our crosscutting concerns library we you",
    "start": "1243919",
    "end": "1251919"
  },
  {
    "text": "know as one does you know we needed something to handle validation and logging and and all of those things and",
    "start": "1251919",
    "end": "1258640"
  },
  {
    "text": "the standard way of handling that in uh web API and a few other libraries is by",
    "start": "1258640",
    "end": "1264000"
  },
  {
    "text": "using attributes you inject an extra function call before your before your functions um and I know that that",
    "start": "1264000",
    "end": "1271360"
  },
  {
    "text": "several frameworks do this but we needed a way to handle these crosscutting concerns for services that weren't",
    "start": "1271360",
    "end": "1277840"
  },
  {
    "text": "always based on HTTP and that was really difficult to do in a generic way that wasn't something that that C# really",
    "start": "1277840",
    "end": "1284720"
  },
  {
    "text": "handled well at all but with F it ended up being just an extra uh for the folks",
    "start": "1284720",
    "end": "1292240"
  },
  {
    "text": "who know F um just an extra uh pipe statement you're just making an extra",
    "start": "1292240",
    "end": "1298240"
  },
  {
    "text": "function call and then continuing down the statement so I will show you guys some F# code in a minute but the the",
    "start": "1298240",
    "end": "1306240"
  },
  {
    "text": "concept of piping is very similar to PowerShell or if you've done any Unix shell scripting uh the the output from",
    "start": "1306240",
    "end": "1312400"
  },
  {
    "text": "the previous function is piped in as a parameter the last parameter to the the",
    "start": "1312400",
    "end": "1318000"
  },
  {
    "text": "part after the function or the the",
    "start": "1318000",
    "end": "1322240"
  },
  {
    "text": "pipe and that being able to just add a separate step in that pipeline made it",
    "start": "1324280",
    "end": "1331120"
  },
  {
    "text": "basically completely trivial to handle these concerns for us and that was sort of the the big reason we ended up",
    "start": "1331120",
    "end": "1338919"
  },
  {
    "text": "switching so a few reasons on why people chose F",
    "start": "1338919",
    "end": "1344080"
  },
  {
    "text": "uh in general first people love programming and functional people love functional programming the I don't know",
    "start": "1344080",
    "end": "1350799"
  },
  {
    "text": "if you folks saw the the recent sort of recent at this point um I think it was",
    "start": "1350799",
    "end": "1356120"
  },
  {
    "text": "April uh Stack Overflow survey but Swift F scala closure hasll are all you know",
    "start": "1356120",
    "end": "1363440"
  },
  {
    "text": "very high in the the list 70% of people just really love programming in that",
    "start": "1363440",
    "end": "1369360"
  },
  {
    "text": "language or 70% of the responders said they loved it doesn't seem quite right not sure where those 70% are coming from",
    "start": "1369360",
    "end": "1376320"
  },
  {
    "text": "but it's awesome people love it uh So productivity I know Yan is here he",
    "start": "1376320",
    "end": "1383039"
  },
  {
    "start": "1378000",
    "end": "1432000"
  },
  {
    "text": "actually spoke yesterday but when he was working for a company called GameSys I know they do uh some Facebook games i'm",
    "start": "1383039",
    "end": "1389679"
  },
  {
    "text": "not sure exactly which ones but obviously very very high numbers of users need to",
    "start": "1389679",
    "end": "1395280"
  },
  {
    "text": "be very available he discovered F thought \"This is really cool i think",
    "start": "1395280",
    "end": "1400559"
  },
  {
    "text": "it's going to solve some of my problems.\" And rewrote the entire back end of the project that he was working",
    "start": "1400559",
    "end": "1406159"
  },
  {
    "text": "on at work he was able to go from you know concept into production in six weeks and he replaced an entire team of",
    "start": "1406159",
    "end": "1413840"
  },
  {
    "text": "nine Java developers when I first heard his story I thought it was like four or five uh but apparently it was nine and",
    "start": "1413840",
    "end": "1420000"
  },
  {
    "text": "it only took six weeks but you know he was and he was able to maintain the",
    "start": "1420000",
    "end": "1425760"
  },
  {
    "text": "entire back end of this now himself so he is around if you guys want to talk to him about",
    "start": "1425760",
    "end": "1432120"
  },
  {
    "start": "1432000",
    "end": "1874000"
  },
  {
    "text": "that uh expanded feature set there's a lot of really interesting features in F that really have made it useful both for",
    "start": "1432120",
    "end": "1440159"
  },
  {
    "text": "microservices and for Jet in general to really you know scale up so quickly",
    "start": "1440159",
    "end": "1445520"
  },
  {
    "text": "first option types option types are a lot like nullables they're they're a lot more",
    "start": "1445520",
    "end": "1451520"
  },
  {
    "text": "powerful they uh first it's you know you can you can have an option type of",
    "start": "1451520",
    "end": "1457120"
  },
  {
    "text": "anything not just you know ins or bools or uh you can have an option of a string an option of a custom type an option of",
    "start": "1457120",
    "end": "1463919"
  },
  {
    "text": "entire function you can uh you can nest option types you can",
    "start": "1463919",
    "end": "1470240"
  },
  {
    "text": "have an option of an option of an option type it's not always pretty but you can do it",
    "start": "1470240",
    "end": "1475679"
  },
  {
    "text": "uh you can also there's uh you can use mapping and iterating and",
    "start": "1475679",
    "end": "1483520"
  },
  {
    "text": "and other other such functions over this so if you have you have an option type and you want to um maybe an array of",
    "start": "1483520",
    "end": "1491039"
  },
  {
    "text": "options and you want to to double check you can you can basically map the",
    "start": "1491039",
    "end": "1496320"
  },
  {
    "text": "entire thing and and keep the the null ones null and the the ones that exist exist and then this joke comes from when",
    "start": "1496320",
    "end": "1505120"
  },
  {
    "text": "you're using an option type to actually get to the value you need you're forced to handle that null check so because",
    "start": "1505120",
    "end": "1512799"
  },
  {
    "text": "you're forced to handle that null check you're basically obviating null reference exceptions entirely",
    "start": "1512799",
    "end": "1519639"
  },
  {
    "text": "there's also a really uh one of the most useful features especially in uh",
    "start": "1520080",
    "end": "1526000"
  },
  {
    "text": "bringing down uh you know reducing code size uh discriminated unions so on your",
    "start": "1526000",
    "end": "1534960"
  },
  {
    "text": "right uh we have a a discriminated union uh transport type if you think about if",
    "start": "1534960",
    "end": "1543480"
  },
  {
    "text": "you just think about car bus and bicycle then you can think of a discriminated union as sort of an enum type it works",
    "start": "1543480",
    "end": "1550400"
  },
  {
    "text": "very similarly when you add on the extra bit of information the make and model and route then it's a lot",
    "start": "1550400",
    "end": "1557080"
  },
  {
    "text": "more like a a simple object hierarchy so we have the the C# on the other on this",
    "start": "1557080",
    "end": "1562400"
  },
  {
    "text": "side there's a a transport a base class you know a car bus and bicycle each inherit from it obviously in C# this",
    "start": "1562400",
    "end": "1569600"
  },
  {
    "text": "would take four separate files the but they do contain basically",
    "start": "1569600",
    "end": "1575360"
  },
  {
    "text": "the exact same information i say basically the C# version still actually lacks structural equality you'd have to",
    "start": "1575360",
    "end": "1581919"
  },
  {
    "text": "override equality and comparison and get hash like it'd be complicated to add in all of that every time it's also not",
    "start": "1581919",
    "end": "1589200"
  },
  {
    "text": "properly immutable it's idiomatic but it uh there's still a private set so you",
    "start": "1589200",
    "end": "1595360"
  },
  {
    "text": "could set it uh the backing field technically probably should be",
    "start": "1595360",
    "end": "1600799"
  },
  {
    "text": "readon but the the F then has more happening in these four lines of",
    "start": "1600840",
    "end": "1607799"
  },
  {
    "text": "code it's also very very very easy to pattern match on and pattern matching I",
    "start": "1607799",
    "end": "1614000"
  },
  {
    "text": "know that C# I think seven was supposed to get some pattern matching i know they've scaled that back i don't know",
    "start": "1614000",
    "end": "1619200"
  },
  {
    "text": "exactly where that stands uh but the without any pattern matching in C#",
    "start": "1619200",
    "end": "1627600"
  },
  {
    "text": "then the only way we can have uh the only matching that we could do in say a switch statement would be on the top on",
    "start": "1627600",
    "end": "1634400"
  },
  {
    "text": "a constant uh whereas F has all of these other ways of interacting with your data",
    "start": "1634400",
    "end": "1639840"
  },
  {
    "text": "and handling you know just working with it to to faster and easier get to the",
    "start": "1639840",
    "end": "1645200"
  },
  {
    "text": "information that you actually need so this is what that would actually look like we have this get there via uh it",
    "start": "1645200",
    "end": "1653120"
  },
  {
    "text": "takes in a transport we'll match transport with the first case you have a car which is a you know takes a specific",
    "start": "1653120",
    "end": "1660240"
  },
  {
    "text": "making a model you have a bus which takes a specific route or a bicycle if I for example add on a train",
    "start": "1660240",
    "end": "1668240"
  },
  {
    "text": "because trains are also a valid type of transportation then we would the next time",
    "start": "1668240",
    "end": "1674720"
  },
  {
    "text": "um immediately if you're in the in the same file or every time you compile you'll get a warning that you have",
    "start": "1674720",
    "end": "1679760"
  },
  {
    "text": "incomplete pattern matched expressions so rather than having this pop up again",
    "start": "1679760",
    "end": "1684880"
  },
  {
    "text": "you know at 3:00 a.m when you've suddenly been paged and the you know the pager of duty alerts are going off like",
    "start": "1684880",
    "end": "1690520"
  },
  {
    "text": "crazy you just automatically know that you get a whole bunch of warnings when",
    "start": "1690520",
    "end": "1695760"
  },
  {
    "text": "you compile you can see those you can see all the places that you're supposed to update that code and the compiler just sort of has your back and is",
    "start": "1695760",
    "end": "1701840"
  },
  {
    "text": "watching out for you type providers are also one of my absolute most favorite uh features of F",
    "start": "1701840",
    "end": "1709279"
  },
  {
    "text": "this is like I mentioned we have one of the maintainers of the SQL provider that that works at",
    "start": "1709279",
    "end": "1714840"
  },
  {
    "text": "Jet type providers are also a really they're just really wonderful",
    "start": "1714840",
    "end": "1720480"
  },
  {
    "text": "they uh the first they're they're what really sold me on F it's uh and I I post",
    "start": "1720480",
    "end": "1728559"
  },
  {
    "text": "Julie's book not to make fun of Julie there's a lot of very hard work that went into her book and the 920 pages",
    "start": "1728559",
    "end": "1736240"
  },
  {
    "text": "length I think is valid to make sure that any framework is actually running and doing what you want it to do takes a",
    "start": "1736240",
    "end": "1742080"
  },
  {
    "text": "lot of effort to really make entity framework do what you actually wanted it to do to begin with but the so 920 pages",
    "start": "1742080",
    "end": "1750640"
  },
  {
    "text": "for Julie to to explain how to how to properly use entity framework and then 31 lines here we have uh really lines 13",
    "start": "1750640",
    "end": "1759279"
  },
  {
    "text": "and 14 are connecting to a type provider and then grabbing the the data context",
    "start": "1759279",
    "end": "1766080"
  },
  {
    "text": "so the the first line really just does all of that connection for you the starting at line 16 we have a",
    "start": "1766080",
    "end": "1773360"
  },
  {
    "text": "quick query starting at line 26 we're inserting information back into the database and it's it's almost trivial to",
    "start": "1773360",
    "end": "1780960"
  },
  {
    "text": "use the type providers because it really is only one or two lines of setup each time you have to you know include a library and then connect out to it type",
    "start": "1780960",
    "end": "1788480"
  },
  {
    "text": "providers also aren't just for SQL Server you can have a JSON type provider an XML type provider a CSV type provider",
    "start": "1788480",
    "end": "1794880"
  },
  {
    "text": "there's an R type provider for folks who are are working with data science which is has been really interesting and and",
    "start": "1794880",
    "end": "1803120"
  },
  {
    "text": "fun to use you can basically run our as long as you have R installed on your computer you can write a bunch of F",
    "start": "1803120",
    "end": "1808399"
  },
  {
    "text": "scripts and run R from F so again dep we do make heavy heavy use",
    "start": "1808399",
    "end": "1815360"
  },
  {
    "text": "of the SQL provider and it it has been really important units of measure",
    "start": "1815360",
    "end": "1820600"
  },
  {
    "text": "also and the I don't know if you folks remember this but there was",
    "start": "1820600",
    "end": "1826120"
  },
  {
    "text": "uh two of the teams on the the climate the the Mars climate orbiter didn't",
    "start": "1826120",
    "end": "1831360"
  },
  {
    "text": "actually communicate with each other well one was using metric one was using English English units and the entire",
    "start": "1831360",
    "end": "1837039"
  },
  {
    "text": "craft exploded because they didn't communicate this to each other whoops but units of measure don't necessarily",
    "start": "1837039",
    "end": "1843919"
  },
  {
    "text": "just have to be a scientific thing you know it doesn't have to all be meters and seconds they actually Jet uses them",
    "start": "1843919",
    "end": "1850159"
  },
  {
    "text": "in the the warehouse code to to verify you know",
    "start": "1850159",
    "end": "1855360"
  },
  {
    "text": "when when we're stocking products is this actually a single unit of something is an entire pallet of something you",
    "start": "1855360",
    "end": "1862080"
  },
  {
    "text": "know just because we say we have one of something doesn't mean we actually understand what that means we need a unit along with that so it can be used",
    "start": "1862080",
    "end": "1868799"
  },
  {
    "text": "for in a lot of cases to just make sure you you're really clear on what you're talking",
    "start": "1868799",
    "end": "1874120"
  },
  {
    "start": "1874000",
    "end": "2263000"
  },
  {
    "text": "about so F also I think personally is very very readable this is you know one",
    "start": "1874120",
    "end": "1880320"
  },
  {
    "text": "of my favorite examples of F being readable i'm kidding that's",
    "start": "1880320",
    "end": "1887080"
  },
  {
    "text": "Pearl but it is one of my favorite examples of Pearl not being readable uh so Ramon tweeted this uh a while ago but",
    "start": "1887080",
    "end": "1895919"
  },
  {
    "text": "he was basically doing a technical talk he had some F# in there and one of his cames his friends came along later was",
    "start": "1895919",
    "end": "1902880"
  },
  {
    "text": "like you said you were going to have code in that talk what up dude the this",
    "start": "1902880",
    "end": "1908000"
  },
  {
    "text": "is the actual code he had in his talk he had his entire domain model there and it's pretty clear what and that's what",
    "start": "1908000",
    "end": "1914080"
  },
  {
    "text": "the was in the actual tweet at the bottom of the picture he had but it's pretty clear what's actually happening here you have a discriminated union the",
    "start": "1914080",
    "end": "1921200"
  },
  {
    "text": "top a booking basic which is just your plane or a combo or the full pack you're getting a plane hotel and a car so",
    "start": "1921200",
    "end": "1927840"
  },
  {
    "text": "you're you're booking a you know travel the the type and and and the this is a",
    "start": "1927840",
    "end": "1934320"
  },
  {
    "text": "way of defining all of your types at once you don't have to say type in front of each one you can just say and and",
    "start": "1934320",
    "end": "1940159"
  },
  {
    "text": "they're all together but you know next we have a plane and the plane needs an outbound and a return both date times",
    "start": "1940159",
    "end": "1945519"
  },
  {
    "text": "and destination apparently you only need a destination country you don't need to know which city you're flying into that",
    "start": "1945519",
    "end": "1950640"
  },
  {
    "text": "seems complicated um but there's also a combo so you're either with the hotel or",
    "start": "1950640",
    "end": "1956159"
  },
  {
    "text": "with a car it's it's one kind of combo the hotel again needs an arrival and a departure and a country uh the car again",
    "start": "1956159",
    "end": "1964159"
  },
  {
    "text": "needs a from and a two for how long you're renting it and the country then the country specifically is a specific",
    "start": "1964159",
    "end": "1969840"
  },
  {
    "text": "name and an ISO an ISO code which is a",
    "start": "1969840",
    "end": "1975720"
  },
  {
    "text": "char tupole that's how you define the show the type for a tupole so again",
    "start": "1975720",
    "end": "1981440"
  },
  {
    "text": "that's pretty easy to glance at and actually see what's happening i have another story a friend of mine did a",
    "start": "1981440",
    "end": "1987679"
  },
  {
    "text": "very similar thing after uh you know a quick meeting he jotted down again like",
    "start": "1987679",
    "end": "1994240"
  },
  {
    "text": "this the the domain model for the the what they the the new feature that they",
    "start": "1994240",
    "end": "2000159"
  },
  {
    "text": "had just described and the business analyst who was in the meeting asked him to send around his notes so that the",
    "start": "2000159",
    "end": "2006559"
  },
  {
    "text": "rest of the business analysts on the wider team understood what they were building he's like \"It's not notes i",
    "start": "2006559",
    "end": "2011760"
  },
  {
    "text": "just actually wrote the domain model it was F.\" So very easy to read",
    "start": "2011760",
    "end": "2018559"
  },
  {
    "text": "and again as an example of shorter code uh which has been one of the the huge",
    "start": "2018559",
    "end": "2024159"
  },
  {
    "text": "ways that we're handling lots of feature lots of uh",
    "start": "2024159",
    "end": "2029200"
  },
  {
    "text": "being able to handle a a a large amount of functionality in a small thing like a microser",
    "start": "2029200",
    "end": "2035720"
  },
  {
    "text": "so this bit of code was an article that came out on code project uh a few months",
    "start": "2035720",
    "end": "2041679"
  },
  {
    "text": "ago a while ago now maybe six months that basically a",
    "start": "2041679",
    "end": "2048360"
  },
  {
    "text": "Somebody had taken a a bad example of C# and I will show you that code in a second it it was pretty awful it doesn't",
    "start": "2048960",
    "end": "2054960"
  },
  {
    "text": "describe anything you have no idea what's happening and had rewrote it to be fully refactored you know properly",
    "start": "2054960",
    "end": "2062000"
  },
  {
    "text": "properly worked out so you it was very well very descriptive very you understood exactly what was going on and",
    "start": "2062000",
    "end": "2067839"
  },
  {
    "text": "the original so this is the original code you can see you know it's a class one you're apparently calculating",
    "start": "2067839",
    "end": "2073040"
  },
  {
    "text": "something uh and the the original result is zero but there's some different types",
    "start": "2073040",
    "end": "2078800"
  },
  {
    "text": "that are involved and some years but it's really unclear what's actually supposed to be happening here so it was",
    "start": "2078800",
    "end": "2086079"
  },
  {
    "text": "refactored and cleaned up in C still and it went from 25 lines of code to 118",
    "start": "2086079",
    "end": "2093118"
  },
  {
    "text": "lines of code and they removed the tests and I get why why",
    "start": "2093119",
    "end": "2099480"
  },
  {
    "text": "why what is this and there's also you know there's an I loyalty discount calculator and an I account discount",
    "start": "2099480",
    "end": "2106079"
  },
  {
    "text": "calculator factory and it's just it's there's a lot of overhead for just",
    "start": "2106079",
    "end": "2112240"
  },
  {
    "text": "showing off this small bit of code there was also a second approach one guy saw this article and was like \"That was some",
    "start": "2112240",
    "end": "2118400"
  },
  {
    "text": "awful C# here's some better C#.\" So he rewrote it into 52 lines of code which is not bad he also caught an additional",
    "start": "2118400",
    "end": "2124880"
  },
  {
    "text": "error that the original expander didn't didn't properly catch but he noted that the factory method uh and and strategy",
    "start": "2124880",
    "end": "2132880"
  },
  {
    "text": "patterns were were totally irrelevant this is uh let's see Ralph Ralph",
    "start": "2132880",
    "end": "2138720"
  },
  {
    "text": "Westfall um in his blog post redid this so this was his bit of code and you can see it's",
    "start": "2138720",
    "end": "2145359"
  },
  {
    "text": "a a little easier to read a lot clearer to to properly understand but the F community someone",
    "start": "2145359",
    "end": "2152640"
  },
  {
    "text": "took this and rewrote this into 30 lines of code and here it's actually very",
    "start": "2152640",
    "end": "2158960"
  },
  {
    "text": "clear what's actually happening so the top we have we're taking a a year and just you know alisting that type it's",
    "start": "2158960",
    "end": "2165040"
  },
  {
    "text": "just an integer we have a unit of measure as a percent because what's actually happening is we're taking a",
    "start": "2165040",
    "end": "2171280"
  },
  {
    "text": "discount uh percentages off for customers who are valued so we have a",
    "start": "2171280",
    "end": "2176640"
  },
  {
    "text": "discriminated union which is an enum type uh or in this case acting as a so",
    "start": "2176640",
    "end": "2183200"
  },
  {
    "text": "simple valuable and most valuable and just basically you know there's there's another discriminated union for account",
    "start": "2183200",
    "end": "2189599"
  },
  {
    "text": "status if the customer is registered and how long they have been registered or if",
    "start": "2189599",
    "end": "2194960"
  },
  {
    "text": "they're unregistered and then the customer discount this is a shorthand way of pattern matching so we have you",
    "start": "2194960",
    "end": "2201599"
  },
  {
    "text": "know our function and then if it's a single then they get a 1% or a simple 1% discount valuable they get a 3% discount",
    "start": "2201599",
    "end": "2208640"
  },
  {
    "text": "you can see how you simply tag the units of measure here and very quickly can",
    "start": "2208640",
    "end": "2214160"
  },
  {
    "text": "just go through and and see at a glance that this is a percentage and not some other type of integer so the the year's",
    "start": "2214160",
    "end": "2221359"
  },
  {
    "text": "discount you know when the years are greater than five you get a natural 5% discount otherwise you multiply that and",
    "start": "2221359",
    "end": "2227760"
  },
  {
    "text": "you get you know 1 2 3 4% discount uh but I I won't continue on with the rest",
    "start": "2227760",
    "end": "2233839"
  },
  {
    "text": "of it the it comes down to the the very end the the price reduce the price by",
    "start": "2233839",
    "end": "2239280"
  },
  {
    "text": "the customer discount first and then pipe it in reduce the price by the year's discount next and again it it's",
    "start": "2239280",
    "end": "2246800"
  },
  {
    "text": "very clear 30 lines of code to see actually what's happening so the F way",
    "start": "2246800",
    "end": "2252240"
  },
  {
    "text": "also has a few tests you can very quickly get a few numbers and and you",
    "start": "2252240",
    "end": "2258320"
  },
  {
    "text": "know one two three four five lines of code also run some tests so final reason why to consider F",
    "start": "2258320",
    "end": "2266640"
  },
  {
    "start": "2263000",
    "end": "2277000"
  },
  {
    "text": "and why why we chose and why it's it's so important excuse me you definitely don't",
    "start": "2266640",
    "end": "2272240"
  },
  {
    "text": "need a PhD and NF has this reputation of being you know the complicated thing but",
    "start": "2272240",
    "end": "2278400"
  },
  {
    "start": "2277000",
    "end": "2309000"
  },
  {
    "text": "this is my friend Shawn and when Shawn was eight he spoke at NDC Oslo actually",
    "start": "2278400",
    "end": "2284320"
  },
  {
    "text": "as his first talk on F and it it was a lightning talk I believe but it wasn't",
    "start": "2284320",
    "end": "2290240"
  },
  {
    "text": "just a a little like here's my Hello World program and you should clap for me because I'm eight and that was adorable",
    "start": "2290240",
    "end": "2296880"
  },
  {
    "text": "and I gave a talk he actually did some very interesting things using 3D image modeling so you know he's eight and he",
    "start": "2296880",
    "end": "2304880"
  },
  {
    "text": "is very much able to handle this obviously he doesn't have a PhD so now the guidelines on actually",
    "start": "2304880",
    "end": "2312640"
  },
  {
    "start": "2309000",
    "end": "2409000"
  },
  {
    "text": "now that we have all of this background we can actually get into the proper guidelines and first you're going to hate me be",
    "start": "2312640",
    "end": "2319320"
  },
  {
    "text": "functional this is why I go and talk about F so much that F and microservices are such an easy natural fit just makes",
    "start": "2319320",
    "end": "2327040"
  },
  {
    "text": "so much sense the using data in data out transformations the beginning I said that it's it's really important to have",
    "start": "2327040",
    "end": "2333599"
  },
  {
    "text": "you know we we built our our services as appar scripts and they have inputs they",
    "start": "2333599",
    "end": "2339119"
  },
  {
    "text": "have outputs you know exactly you you need to know exactly what that transformation is in the meantime and",
    "start": "2339119",
    "end": "2345520"
  },
  {
    "text": "you know think about what that mapping should be there's also you know start prefer",
    "start": "2345520",
    "end": "2351040"
  },
  {
    "text": "mutability the if you're doing thing you know if you have inputs and you have",
    "start": "2351040",
    "end": "2356480"
  },
  {
    "text": "outputs and you're looking at that transformation you will naturally create an immutable general service and you know those two",
    "start": "2356480",
    "end": "2363359"
  },
  {
    "text": "things fit together very naturally very easy but avoid state changes and side effects and mutable data as much as you",
    "start": "2363359",
    "end": "2368960"
  },
  {
    "text": "feasibly can it's really really hard do to do anything excuse me uh concurrent and to",
    "start": "2368960",
    "end": "2375680"
  },
  {
    "text": "scale when you have a lot of mutable data running around and just mutation",
    "start": "2375680",
    "end": "2381200"
  },
  {
    "text": "makes things difficult treat functions as unit of work about passing around a single",
    "start": "2381200",
    "end": "2387040"
  },
  {
    "text": "function rather than you know passing around an object and again if you're",
    "start": "2387040",
    "end": "2392079"
  },
  {
    "text": "making things immutable and you're using these data in data out transformations that sort of comes along fairly",
    "start": "2392079",
    "end": "2397760"
  },
  {
    "text": "naturally the same thing with using recursion these four things it's difficult to do just one of them you",
    "start": "2397760",
    "end": "2404400"
  },
  {
    "text": "have to sort of jump in and and do all of them all at once uh but next don't try to abstract",
    "start": "2404400",
    "end": "2412720"
  },
  {
    "start": "2409000",
    "end": "2450000"
  },
  {
    "text": "microservices are small for a reason they're it's very easy to create a single microser that will connect to",
    "start": "2412720",
    "end": "2419200"
  },
  {
    "text": "event store and a single microser that will connect to zero MQ don't try to mix and match the two if you try to create",
    "start": "2419200",
    "end": "2425359"
  },
  {
    "text": "one service that handles all of these things you'll have to cater to the lowest common denominator and it's going",
    "start": "2425359",
    "end": "2431680"
  },
  {
    "text": "to do all of that sort of mediocrely for all services you're not going to be able to use the the unique features of you",
    "start": "2431680",
    "end": "2438320"
  },
  {
    "text": "know MSMQ because SQL Server doesn't necessarily have half of that stuff so",
    "start": "2438320",
    "end": "2446000"
  },
  {
    "text": "they're small write a single service for each one now where you can't actually remove",
    "start": "2446000",
    "end": "2452320"
  },
  {
    "text": "side effects because life you know they happen isolate them as best as you can",
    "start": "2452320",
    "end": "2457920"
  },
  {
    "text": "if you have say a submit order microser where you know somebody's just placed an order they've hit please buy this on the",
    "start": "2457920",
    "end": "2464560"
  },
  {
    "text": "shopping cart and you need to go and handle all this now you might want that to first update",
    "start": "2464560",
    "end": "2470880"
  },
  {
    "text": "SQL server and then second send a thank you for ordering email don't do this because as I talked",
    "start": "2470880",
    "end": "2479040"
  },
  {
    "start": "2476000",
    "end": "2508000"
  },
  {
    "text": "about all of our all of our service services are event sourced we're reading from an event stream if we go and replay",
    "start": "2479040",
    "end": "2485839"
  },
  {
    "text": "that and rerun you know that event stream and rehandle all these microservices when we do that we're",
    "start": "2485839",
    "end": "2491680"
  },
  {
    "text": "going to you know when we replay everything we're going to one update SQL again because maybe we've changed the",
    "start": "2491680",
    "end": "2497680"
  },
  {
    "text": "the SQL schema something like that but we're also going to resend all of those emails from all time back out to the",
    "start": "2497680",
    "end": "2505640"
  },
  {
    "text": "customers that's bad so separate them again microservices",
    "start": "2505640",
    "end": "2511440"
  },
  {
    "start": "2508000",
    "end": "2541000"
  },
  {
    "text": "should have one purpose one one small thing so set two separate microservices",
    "start": "2511440",
    "end": "2516640"
  },
  {
    "text": "one that inserts actually does the insert into SQL and one that sends the thank you thank you for ordering",
    "start": "2516640",
    "end": "2524318"
  },
  {
    "text": "email and then when you need to replay everything you'll replay the SQL service you don't need to mess with the the",
    "start": "2527160",
    "end": "2533520"
  },
  {
    "text": "thank you for ordering email uh service and you won't get snafoos like that one",
    "start": "2533520",
    "end": "2540880"
  },
  {
    "text": "also use a backup service so have two services in production",
    "start": "2540880",
    "end": "2547680"
  },
  {
    "start": "2541000",
    "end": "2639000"
  },
  {
    "text": "uh you know service one is running in production perfectly fine and normal backup service is uh in production up to",
    "start": "2547680",
    "end": "2554400"
  },
  {
    "text": "date but if you want to replay all of your events do so in your backup service",
    "start": "2554400",
    "end": "2560240"
  },
  {
    "text": "wait until that one is is up to speed and is ready to go then you can automatically switch over to that one",
    "start": "2560240",
    "end": "2565839"
  },
  {
    "text": "and have no downtime sort of like having a a staging server just flip that one on and you're",
    "start": "2565839",
    "end": "2572240"
  },
  {
    "text": "ready to go the important thing though is to stage a copy of you know any aggregate any data store that you have",
    "start": "2572240",
    "end": "2578480"
  },
  {
    "text": "until the stream is continued replaying if you're it's basically to isolate your side effects uh if you're doing",
    "start": "2578480",
    "end": "2585200"
  },
  {
    "text": "something like handling accounts maybe you're uh you have a",
    "start": "2585200",
    "end": "2591599"
  },
  {
    "text": "service that will will turn off and on accounts because you think they're fraud whatever maybe uh there are a few",
    "start": "2591599",
    "end": "2597359"
  },
  {
    "text": "customers that argued with it with you they weren't actually fraud you determined that they weren't and so you turned their accounts back on every time",
    "start": "2597359",
    "end": "2603440"
  },
  {
    "text": "you replay those events if you're doing that against a live database you're going to be turning those accounts off",
    "start": "2603440",
    "end": "2608880"
  },
  {
    "text": "and then back on again it might only take you know 30 seconds it might take",
    "start": "2608880",
    "end": "2614000"
  },
  {
    "text": "you know an hour a day depending on how much back data you have but you will be",
    "start": "2614000",
    "end": "2620480"
  },
  {
    "text": "turning somebody's account off and then back on again and if that happens to be at a time where they're trying to purchase something they're just going to",
    "start": "2620480",
    "end": "2626560"
  },
  {
    "text": "be really angry at you and you know having that so if you stage that run",
    "start": "2626560",
    "end": "2632160"
  },
  {
    "text": "through everything update as needed and then switch both pieces over to live at once you'll be much better",
    "start": "2632160",
    "end": "2638839"
  },
  {
    "text": "off so what do our services actually look like I mentioned they're actually f",
    "start": "2638839",
    "end": "2644040"
  },
  {
    "text": "scripts and they basically look like",
    "start": "2644040",
    "end": "2648880"
  },
  {
    "text": "this most importantly I've talked about how we need to have inputs and outputs and how an this this F script is sort of",
    "start": "2649480",
    "end": "2656480"
  },
  {
    "text": "like one giant function And this here we have our our inputs we have as an So",
    "start": "2656480",
    "end": "2663800"
  },
  {
    "text": "this this service is a a demo uh little service that I wrote up that connects to",
    "start": "2663800",
    "end": "2670160"
  },
  {
    "text": "some magical Nile website and does a price check on a specific item that's",
    "start": "2670160",
    "end": "2675440"
  },
  {
    "text": "sent in that's funny i know it's a terrible awful joke please",
    "start": "2675440",
    "end": "2681480"
  },
  {
    "text": "laugh um so yeah so Nile um there's an",
    "start": "2681480",
    "end": "2686560"
  },
  {
    "text": "input so we have a specific product that we're going to be sending in and saying \"Double check the price on this product.\" For the outputs we have two",
    "start": "2686560",
    "end": "2694079"
  },
  {
    "text": "cases a discriminated union the first case we send back the the full product information plus a decimal for what the",
    "start": "2694079",
    "end": "2700160"
  },
  {
    "text": "price was on the the external site we also have a failure case product",
    "start": "2700160",
    "end": "2705520"
  },
  {
    "text": "price check failed in which case we have you know a message some information about how what that failure was and how",
    "start": "2705520",
    "end": "2711280"
  },
  {
    "text": "that happened next we define how that input transforms to the output so again sort",
    "start": "2711280",
    "end": "2717040"
  },
  {
    "text": "of one giant function we have inputs we have outputs we have a transformation uh we have handle here's",
    "start": "2717040",
    "end": "2722480"
  },
  {
    "text": "where the real meat of the microser really is it's just a you know this is this is where that",
    "start": "2722480",
    "end": "2730000"
  },
  {
    "text": "transformation happens i've you know as this is a demo I'm just returning a successful case i'm automatically",
    "start": "2730000",
    "end": "2736160"
  },
  {
    "text": "creating that i I'm using an option type and specifically creating a a a valid or",
    "start": "2736160",
    "end": "2743040"
  },
  {
    "text": "a success case for an option but I have a skew and an my amazing product and a",
    "start": "2743040",
    "end": "2749839"
  },
  {
    "text": "cost per and then you know it's 3.96 uh on on the external",
    "start": "2749839",
    "end": "2756480"
  },
  {
    "text": "site then once we have how how that transformation happens we need to define",
    "start": "2757480",
    "end": "2763200"
  },
  {
    "text": "what we're actually going to do with this output we have this interpret function so we're sending in you know the output",
    "start": "2763200",
    "end": "2769680"
  },
  {
    "text": "and ID and we're doing our pattern matching here excuse me so we match the output",
    "start": "2769680",
    "end": "2775480"
  },
  {
    "text": "with first the successful a successful completion of the successful case and",
    "start": "2775480",
    "end": "2782480"
  },
  {
    "text": "maybe in this case we want to write to event store and it's you know just",
    "start": "2782480",
    "end": "2788400"
  },
  {
    "text": "continue on yes we actually were able to get this price we know exactly what's happening we connected out successfully",
    "start": "2788400",
    "end": "2793520"
  },
  {
    "text": "to the API and and have a valued value returned so in the next case we have a",
    "start": "2793520",
    "end": "2799599"
  },
  {
    "text": "successful completion of a failure case so we got got a response back but we got",
    "start": "2799599",
    "end": "2804720"
  },
  {
    "text": "a failure so we might want to log that maybe it's a failure we know how to deal",
    "start": "2804720",
    "end": "2810079"
  },
  {
    "text": "with maybe you know there's either a timeout or a specific a specific issue",
    "start": "2810079",
    "end": "2815200"
  },
  {
    "text": "there was you know extra space on the end and we know that we can just truncate it and try again but in this case we we might log",
    "start": "2815200",
    "end": "2823280"
  },
  {
    "text": "and or try again in the last case we actually received no response at all and we have absolutely no idea what happened",
    "start": "2823280",
    "end": "2829680"
  },
  {
    "text": "but something went terribly wrong so here again you know we have our options we have you know the success the success",
    "start": "2829680",
    "end": "2837119"
  },
  {
    "text": "cases to begin with but we have this third option where you know it just you know it completely failed and here we",
    "start": "2837119",
    "end": "2844160"
  },
  {
    "text": "might log the failure but we wouldn't have the additional information to know what actually happened",
    "start": "2844160",
    "end": "2850359"
  },
  {
    "text": "finally so we have an our event store q do consume which is one of our internal functions basically takes in a the",
    "start": "2850359",
    "end": "2859119"
  },
  {
    "text": "original product information decodes that properly sends the handle and interpret functions along to this",
    "start": "2859119",
    "end": "2865359"
  },
  {
    "text": "consume function and we're able to consume this stream of events properly",
    "start": "2865359",
    "end": "2870960"
  },
  {
    "text": "for our microser to be able to handle all that so being functional just means that this composition here is very very",
    "start": "2870960",
    "end": "2877920"
  },
  {
    "text": "easy and uh it works together and flows together really nicely so microservices also shouldn't",
    "start": "2877920",
    "end": "2886160"
  },
  {
    "text": "control their own life cycle it's we ended up rolling our own product",
    "start": "2886160",
    "end": "2891520"
  },
  {
    "text": "a lot of folks use Docker or console but you know scaling and availability and discoverability all of these things",
    "start": "2891520",
    "end": "2898240"
  },
  {
    "text": "really should be handled by outside products uh we were able to we rolled",
    "start": "2898240",
    "end": "2904640"
  },
  {
    "text": "our own we were able to deploy a new build in about 30 seconds rather than 15",
    "start": "2904640",
    "end": "2909839"
  },
  {
    "text": "minutes that it had been taking us we also wanted to scaling really should",
    "start": "2909839",
    "end": "2915040"
  },
  {
    "text": "include like a an entire VM with assorted or relevant related related",
    "start": "2915040",
    "end": "2921200"
  },
  {
    "text": "services um automatically rather than uh just scaling one or two services on",
    "start": "2921200",
    "end": "2926880"
  },
  {
    "text": "their own so we built a product that handles the top uh purple things in the",
    "start": "2926880",
    "end": "2933359"
  },
  {
    "text": "the top eight things we're working on the bottom three things and probably",
    "start": "2933359",
    "end": "2938559"
  },
  {
    "start": "2938000",
    "end": "3067000"
  },
  {
    "text": "will open source that when we're done we so the the product we built is called Torch at Jet all of our products are uh",
    "start": "2938559",
    "end": "2946160"
  },
  {
    "text": "named after superheroes so this is Torch who is fire",
    "start": "2946160",
    "end": "2952720"
  },
  {
    "text": "and not a you know a flashlight uh but each one of the",
    "start": "2952720",
    "end": "2961359"
  },
  {
    "text": "microservices has an associated YAML file that that helps Torch sort of understand what you know has a few",
    "start": "2961359",
    "end": "2967520"
  },
  {
    "text": "configuring options what version of torch there it should be using what that subsystem is you know what which things",
    "start": "2967520",
    "end": "2973760"
  },
  {
    "text": "should be scaled al together in that VM a name a description a version whether or not to auto start whether or not to",
    "start": "2973760",
    "end": "2980839"
  },
  {
    "text": "compile ha stands for high availability whether or not it's it's active active or active passive active active means",
    "start": "2980839",
    "end": "2987920"
  },
  {
    "text": "that all of their nodes are up at once and if one of them fails then the the",
    "start": "2987920",
    "end": "2992960"
  },
  {
    "text": "traffic that should have gone to that node will just be redistributed over the rest uh active passive means you have",
    "start": "2992960",
    "end": "2999440"
  },
  {
    "text": "two completely separate setups one is live and the other one is waiting for this the the live one to go",
    "start": "2999440",
    "end": "3006440"
  },
  {
    "text": "down uh but it is fully fully redundant the so we have a script path and a",
    "start": "3006440",
    "end": "3012960"
  },
  {
    "text": "library path a few arguments the you know if we want to to set up a specific JSON config this is really especially",
    "start": "3012960",
    "end": "3019760"
  },
  {
    "text": "useful for our uh data science group they can part of that JSON config tells",
    "start": "3019760",
    "end": "3025920"
  },
  {
    "text": "uh tells them how to transform that data into a specific Kafka topic and by modifying just a couple lines they can",
    "start": "3025920",
    "end": "3032559"
  },
  {
    "text": "completely transform how they're looking at that data so then YAML I thought was",
    "start": "3032559",
    "end": "3037760"
  },
  {
    "text": "really fun i I double checked what it actually meant to to make sure I knew what I was talking about yaml ain't",
    "start": "3037760",
    "end": "3042960"
  },
  {
    "text": "markup language so it's a recursive acronym which is always fun those make me happy but it also used to mean yet",
    "start": "3042960",
    "end": "3048880"
  },
  {
    "text": "another markup language which is the exact opposite of what it currently means but it was backronymed which is a",
    "start": "3048880",
    "end": "3054800"
  },
  {
    "text": "new word I learned to clarify so it's it's not like you know GitHub's markup",
    "start": "3054800",
    "end": "3060559"
  },
  {
    "text": "language it's you know data oriented markup language totally different",
    "start": "3060559",
    "end": "3066559"
  },
  {
    "text": "so in summary don't abstract if you have one",
    "start": "3066559",
    "end": "3072160"
  },
  {
    "start": "3067000",
    "end": "3195000"
  },
  {
    "text": "service and you want to you need you know you need to uh you know don't try",
    "start": "3072160",
    "end": "3077359"
  },
  {
    "text": "to have that cater to several several different things microservices are intended to be small so have a single",
    "start": "3077359",
    "end": "3083760"
  },
  {
    "text": "microser for each each specific thing be functional uh obviously I have talked at",
    "start": "3083760",
    "end": "3089200"
  },
  {
    "text": "at length about F# but it is it is it's very important to our",
    "start": "3089200",
    "end": "3094319"
  },
  {
    "text": "story and the the two things are so intermingled for us that that it's almost crucial we we wouldn't be able to",
    "start": "3094319",
    "end": "3100559"
  },
  {
    "text": "write microservices as easily as we do if we weren't you doing them in a very functional manner isolate your side",
    "start": "3100559",
    "end": "3106800"
  },
  {
    "text": "effects as best as you can um and you know where you can't separate separate",
    "start": "3106800",
    "end": "3113280"
  },
  {
    "text": "the service you know so you have one spec one specific service that handles just a specific side effect use a backup",
    "start": "3113280",
    "end": "3120720"
  },
  {
    "text": "service make sure you have something that's you know chugging along in production you can replay events into",
    "start": "3120720",
    "end": "3126079"
  },
  {
    "text": "that service and then just switch over as needed and you're ready and good to go use the consistent formatting it's I",
    "start": "3126079",
    "end": "3132640"
  },
  {
    "text": "showed you what our services look like and that doesn't have to work for you but it has been very useful to us to",
    "start": "3132640",
    "end": "3137839"
  },
  {
    "text": "have a similar format across teams folks can can jump in and you know we it's",
    "start": "3137839",
    "end": "3143119"
  },
  {
    "text": "very clear what what pieces of the microservices are meant to do excuse me use an outside product to",
    "start": "3143119",
    "end": "3150079"
  },
  {
    "text": "control your life cycle again we built our own but it you don't have to uh use",
    "start": "3150079",
    "end": "3155280"
  },
  {
    "text": "but use some sort of outside product don't try to handle this all on your own",
    "start": "3155280",
    "end": "3162079"
  },
  {
    "text": "and then uh make sure you have a chaos engineering program because anytime you're doing especially if it's you know",
    "start": "3162079",
    "end": "3167599"
  },
  {
    "text": "cloud-based microservices but anything that that's going to be this this this scaled this uh you know",
    "start": "3167599",
    "end": "3176000"
  },
  {
    "text": "is going to have failures is going to have uh issues you want to make sure you have confidence in that system and you",
    "start": "3176000",
    "end": "3181359"
  },
  {
    "text": "know exactly what's going to happen and especially with you know something like us a a website that's you know folks are",
    "start": "3181359",
    "end": "3187680"
  },
  {
    "text": "dependent on if something's going to go down you know we need to make sure that we're handling this correctly we can be",
    "start": "3187680",
    "end": "3192880"
  },
  {
    "text": "back up to speed as quickly as possible so for more information",
    "start": "3192880",
    "end": "3198240"
  },
  {
    "start": "3195000",
    "end": "3327000"
  },
  {
    "text": "definitely uh check out for microservices martinfer.com microservices.io both really good places",
    "start": "3198240",
    "end": "3204800"
  },
  {
    "text": "for F there's an Foundation f.org lots of really really good information on how",
    "start": "3204800",
    "end": "3210880"
  },
  {
    "text": "to get started uh once you join and it's free to join the foundation uh you can pay if you want but you don't have to",
    "start": "3210880",
    "end": "3217200"
  },
  {
    "text": "once you've joined you can join the f.org Slack channel there's there's a couple other Slack channels twitter is",
    "start": "3217200",
    "end": "3223680"
  },
  {
    "text": "also a really good place to get F but by far my favorite one is the F.org Slack channel it's a really good group of very",
    "start": "3223680",
    "end": "3230400"
  },
  {
    "text": "responsive people also Fun and Profit scott Flash scott Flash's explanations are",
    "start": "3230400",
    "end": "3237440"
  },
  {
    "text": "fabulous and right on point for event sourcing honestly pretty much anything Greg Young has ever spoken about but",
    "start": "3237440",
    "end": "3244400"
  },
  {
    "text": "these two talks in particular are are quite good and that's actually it but I",
    "start": "3244400",
    "end": "3249839"
  },
  {
    "text": "will leave up this slide if more folks want to take pictures and any questions yes",
    "start": "3249839",
    "end": "3257559"
  },
  {
    "text": "uh you mentioned that the teams use chaos engineering and you got a learn a lot of learnings from that",
    "start": "3260400",
    "end": "3266839"
  },
  {
    "text": "um how did they feed back into when you do development of new microservices so",
    "start": "3266839",
    "end": "3272800"
  },
  {
    "text": "do do they fit do you have templates or do they just have like sets of standards or",
    "start": "3272800",
    "end": "3279720"
  },
  {
    "text": "so uh yeah how does how does the team take take what we've learned from chaos engineering and and sort of bring that",
    "start": "3279839",
    "end": "3286119"
  },
  {
    "text": "in as far as I know uh the the teams",
    "start": "3286119",
    "end": "3291680"
  },
  {
    "text": "don't have any specific standards or or templates i I was on a team when I first",
    "start": "3291680",
    "end": "3297200"
  },
  {
    "text": "started and I've switched over to full-time evangelism so the team that I was on at the beginning did not but that",
    "start": "3297200",
    "end": "3303040"
  },
  {
    "text": "was also very much before we the the chaos uh program was even in place but",
    "start": "3303040",
    "end": "3309200"
  },
  {
    "text": "it's my understanding that we don't have anything specific it's sort of on the individual developers to you know",
    "start": "3309200",
    "end": "3314640"
  },
  {
    "text": "remember what happened last time anyone else all right thank you",
    "start": "3314640",
    "end": "3322640"
  },
  {
    "text": "guys very much",
    "start": "3322640",
    "end": "3326039"
  }
]