[
  {
    "text": "all right good afternoon everyone uh thanks for coming my name is Jimmy Bogard um I have to change this now",
    "start": "11480",
    "end": "18240"
  },
  {
    "text": "because I'm not on Twitter anymore so you can find me on Blue Sky at jimy bard.com I don't know how to say that",
    "start": "18240",
    "end": "23840"
  },
  {
    "text": "but like that's my blue sky handle um this presentation uh as well as the code example we'll be walking through later",
    "start": "23840",
    "end": "30240"
  },
  {
    "text": "is on my GitHub at github.com jbog there's a presentations repository and so that's where you find all my stuff",
    "start": "30240",
    "end": "35440"
  },
  {
    "text": "there um I blog occasionally less than I used to at Jimmy bard.com um and my day",
    "start": "35440",
    "end": "42239"
  },
  {
    "text": "job is as a consultant so a lot of things we'll be talking about today is from my experiences building complex",
    "start": "42239",
    "end": "48320"
  },
  {
    "text": "distributed systems for teams and then having to deal with a messiness of those realities um now this talk is not going",
    "start": "48320",
    "end": "54960"
  },
  {
    "text": "to be about uh consensus protocols so like things like raft or well that's the",
    "start": "54960",
    "end": "60239"
  },
  {
    "text": "only one I really know at the top of my head um this isn't about like distributed systems in terms of like a single database that's been distributed",
    "start": "60239",
    "end": "65960"
  },
  {
    "text": "out uh you know in more than one uh location this is more about like complex distributed systems where like",
    "start": "65960",
    "end": "72680"
  },
  {
    "text": "everything is its own little application doing its own individual job uh I used to title this uh about microservices but",
    "start": "72680",
    "end": "79960"
  },
  {
    "text": "like it really is not specific to microservices it's just distributed systems so scratch that is now just",
    "start": "79960",
    "end": "85680"
  },
  {
    "text": "consistency agreements and distributed systems now um I started my career in uh",
    "start": "85680",
    "end": "91920"
  },
  {
    "text": "a little bit of a simpler view of the world um where most the applications I was dealing with were really just kind",
    "start": "91920",
    "end": "98360"
  },
  {
    "text": "of full stack everything just runs in one single you know one single server and just it does the entire job um and",
    "start": "98360",
    "end": "104960"
  },
  {
    "text": "so in those days uh dealing with consistency was much simpler so I'd have",
    "start": "104960",
    "end": "110520"
  },
  {
    "text": "like the app and I'd have the database and when you wanted to make changes to",
    "start": "110520",
    "end": "116039"
  },
  {
    "text": "that right you just have an update statement uh update the thing and then it would do the thing and then come back",
    "start": "116039",
    "end": "121439"
  },
  {
    "text": "you could say okay did I did it write that thing correctly and usually everything would work okay right as long",
    "start": "121439",
    "end": "127640"
  },
  {
    "text": "as you've configured things correctly um it should all work okay and everything was",
    "start": "127640",
    "end": "133239"
  },
  {
    "text": "good um what if things got a little bit more complicated What If instead of just doing one thing at a time I was doing",
    "start": "133239",
    "end": "139200"
  },
  {
    "text": "two things so I'm trying to update two different records in the database this is one my first Lessons Learned as a",
    "start": "139200",
    "end": "144879"
  },
  {
    "text": "developer you know coming from just kind of doing kind of Kitty uh demo apps um",
    "start": "144879",
    "end": "150280"
  },
  {
    "text": "the first time where I did this were uh I made the two updates and I read the back everything looked okay um except if",
    "start": "150280",
    "end": "158120"
  },
  {
    "text": "something went wrong during this equation so I would do uh these two update statements and then something",
    "start": "158120",
    "end": "164200"
  },
  {
    "text": "would go wrong with the second update statement and that was at first sort of realization of oh wait this is like",
    "start": "164200",
    "end": "170319"
  },
  {
    "text": "partially succeeded partially failed and so of course the way we can manage this in a single uh a single system is to",
    "start": "170319",
    "end": "177400"
  },
  {
    "text": "Simply wrap that entire operation in a transaction and now both of those operations either succeed or fail",
    "start": "177400",
    "end": "183879"
  },
  {
    "text": "together um you know the the whole asset properties of the database ensure that uh this all succeeds or or it all fails",
    "start": "183879",
    "end": "191360"
  },
  {
    "text": "and everything looks great now my first sort of uh sort of",
    "start": "191360",
    "end": "197400"
  },
  {
    "text": "projects as a developer everything pretty pretty much looked like this we just had to make sure that when we were developing and writing stuff to the",
    "start": "197400",
    "end": "203720"
  },
  {
    "text": "database let's you know make sure we were wrapping things into transaction that was of course one of the things we would looked at code reviews to make",
    "start": "203720",
    "end": "209519"
  },
  {
    "text": "sure don't forget the transactions um but my next gig I joined like big Corp",
    "start": "209519",
    "end": "214840"
  },
  {
    "text": "it and that's why I realized that the real world is much messier than my simple systems where everything is just",
    "start": "214840",
    "end": "220920"
  },
  {
    "text": "a single process and just you know the single database uh so in this case I was",
    "start": "220920",
    "end": "226280"
  },
  {
    "text": "on um I was on a team that was an e-commerce platform and my team was was the cart checkout process so that you",
    "start": "226280",
    "end": "233159"
  },
  {
    "text": "know that that step where you click add to carts and place order and then after you hit place order some things happen",
    "start": "233159",
    "end": "238439"
  },
  {
    "text": "in the background to actually make it work uh that was my that was my first introduction to the the messiness and",
    "start": "238439",
    "end": "244079"
  },
  {
    "text": "the complexity of distributed systems so instead of having uh just this one",
    "start": "244079",
    "end": "249439"
  },
  {
    "text": "single database that that our app talk to uh it was multiple databases and so",
    "start": "249439",
    "end": "254640"
  },
  {
    "text": "we had this situation where I would you know write to one database make an update and then uh similarly do another",
    "start": "254640",
    "end": "261680"
  },
  {
    "text": "update to the other database um so in this case I'm I'm setting the order status and then deducting uh items from",
    "start": "261680",
    "end": "268680"
  },
  {
    "text": "the stock um database because theyve placed this order um and I wanted to make sure that",
    "start": "268680",
    "end": "274840"
  },
  {
    "text": "these both either all succeeded or all failed so we wrap it a transaction",
    "start": "274840",
    "end": "280320"
  },
  {
    "text": "right boo so the first time you try this you start to get these really strange",
    "start": "280320",
    "end": "285440"
  },
  {
    "text": "error messages um where it's like you know the error code starts with 8,000 and it's like a bunch of other numbers",
    "start": "285440",
    "end": "291520"
  },
  {
    "text": "after that uh and it basically tells you hey in order for you to do to do this",
    "start": "291520",
    "end": "297039"
  },
  {
    "text": "you need something else on top of these databases in order to ensure that both those things either succeed or fail and",
    "start": "297039",
    "end": "303039"
  },
  {
    "text": "that of course is our friend the Microsoft distributed transaction cord no",
    "start": "303039",
    "end": "308080"
  },
  {
    "text": "boo that's one of those things that like if you go to your Ops person the dev Ops person and say hey great news we can do",
    "start": "308080",
    "end": "316000"
  },
  {
    "text": "this this whole like transaction across databases thing but we just need you to enable this one awesome thing the",
    "start": "316000",
    "end": "322199"
  },
  {
    "text": "distributed transaction coordinator and they'll usually hate you after that because it's like we have to open up all",
    "start": "322199",
    "end": "327800"
  },
  {
    "text": "these random weird ports this transaction coordinator has to live somewhere to ensure that these two",
    "start": "327800",
    "end": "333280"
  },
  {
    "text": "things either succeed or fail um and but what we even with all that sort of stuff",
    "start": "333280",
    "end": "339080"
  },
  {
    "text": "put in place it does not have a bulletproof guarantee that both of these things will absolutely absolutely",
    "start": "339080",
    "end": "345000"
  },
  {
    "text": "succeed or absolutely fail it's not a bu it's the this uh being able to do distribute a transaction is not",
    "start": "345000",
    "end": "351800"
  },
  {
    "text": "foolproof um so no we we we can't do that and that's again one of those things that you you start googling",
    "start": "351800",
    "end": "357319"
  },
  {
    "text": "things distributor transaction it's all these very sad stack Overflow poose of like here's all this crazy stuff you",
    "start": "357319",
    "end": "362639"
  },
  {
    "text": "have to do uh to make it work so that was my first uh first introduction uh",
    "start": "362639",
    "end": "369599"
  },
  {
    "text": "trial by fire and how do I manage these uh these two updates across these two databases how do I ensure that either",
    "start": "369599",
    "end": "376560"
  },
  {
    "text": "they both succeed or they both fail um and so yeah you you you you get this error message saying you need to enable",
    "start": "376560",
    "end": "382919"
  },
  {
    "text": "this dumb thing uh the distributed transaction coiner so what what is this uh what is this thing this distributed",
    "start": "382919",
    "end": "388479"
  },
  {
    "text": "transaction um it's simply a uh database transaction in which two or more Network",
    "start": "388479",
    "end": "394720"
  },
  {
    "text": "hosts are involved now technically you don't have to be crossing the network",
    "start": "394720",
    "end": "399759"
  },
  {
    "text": "even if you're doing like two databases on the same server and like you're also on that server as well you still have to",
    "start": "399759",
    "end": "406199"
  },
  {
    "text": "enable this thing you cannot uh you without uh having this extra thing of a Distributive transaction you cannot have",
    "start": "406199",
    "end": "412800"
  },
  {
    "text": "a transaction uh against both databases at the same time uh this this protocol uh the most",
    "start": "412800",
    "end": "419240"
  },
  {
    "text": "common one in order to achieve this is known as two-phase commit or 2pc um and the way it works is this uh",
    "start": "419240",
    "end": "426759"
  },
  {
    "text": "we have resource a and resource B There is uh two databases we have our coordinator that is now this other thing",
    "start": "426759",
    "end": "433160"
  },
  {
    "text": "to the side that is managing these two individual transactions and it starts off the process in the first phase by",
    "start": "433160",
    "end": "440720"
  },
  {
    "text": "asking each database to prepare a transaction um and now this is not actually going to commit the transaction",
    "start": "440720",
    "end": "446879"
  },
  {
    "text": "yet I kind of think it in my head as like I want you you two people to go ahead and just put your finger in that",
    "start": "446879",
    "end": "451960"
  },
  {
    "text": "data and just hold it there for a second while I go ask the other database if it's okay and so they both put their",
    "start": "451960",
    "end": "457039"
  },
  {
    "text": "fingers down on the data and then say okay yes we we can uh we can commit this transaction that's the first phase of",
    "start": "457039",
    "end": "464680"
  },
  {
    "text": "the protocol is the prepare phase so each database then has to tell",
    "start": "464680",
    "end": "470319"
  },
  {
    "text": "the the transaction coordinator uh can you uh commit this transaction or not it's basically giving it a thumbs up or",
    "start": "470319",
    "end": "476199"
  },
  {
    "text": "a thumbs down and if the coordinator receives a thumbs up from everyone",
    "start": "476199",
    "end": "481639"
  },
  {
    "text": "involved uh in this distributed transaction then it's going to have the second phase of the commit protocol and",
    "start": "481639",
    "end": "487599"
  },
  {
    "text": "then tell every database okay now go ahead and commit this transaction um but again this is not a",
    "start": "487599",
    "end": "495039"
  },
  {
    "text": "foolproof uh protocol because you can still have something going wrong with the second phase of the process so I've",
    "start": "495039",
    "end": "501520"
  },
  {
    "text": "asked both resources to prepare the transaction they put their finger on the data and then I say okay resource a now",
    "start": "501520",
    "end": "508199"
  },
  {
    "text": "you can go ahead and commit the transaction action resource a goes ahead and commits it then I goes to Resource B and say commit that transaction but if",
    "start": "508199",
    "end": "514440"
  },
  {
    "text": "something goes wrong in this communication here something somehow then I can still have my system in an",
    "start": "514440",
    "end": "521240"
  },
  {
    "text": "invalid State now in the documentation of uh the DTC distributed transaction",
    "start": "521240",
    "end": "526519"
  },
  {
    "text": "coordinator and various other folks that have implemented this basically they say you can't ever let this happen like",
    "start": "526519",
    "end": "532560"
  },
  {
    "text": "don't do that don't ever let that little blowup thing down at the bottom ever happen and if it and and if you can",
    "start": "532560",
    "end": "538399"
  },
  {
    "text": "guarantee that that never happen happens then yes this protocol Works um but one thing that I know you know years of",
    "start": "538399",
    "end": "544440"
  },
  {
    "text": "building distributed systems is that sort of Murphy's Law anything that can go wrong will go wrong I think that's",
    "start": "544440",
    "end": "549600"
  },
  {
    "text": "Murphy's Law right yes uh and when we're dealing with distributed systems we have",
    "start": "549600",
    "end": "554920"
  },
  {
    "text": "to realize that we can have Network failures we can have hiccups things can just blink off and on again and you know",
    "start": "554920",
    "end": "562000"
  },
  {
    "text": "nothing we can really do to absolutely prevent that so we can still have the case uh where this can",
    "start": "562000",
    "end": "567720"
  },
  {
    "text": "occur now we we may say well How likely is that to occur and in systems where",
    "start": "567720",
    "end": "573600"
  },
  {
    "text": "I've uh built these kinds of things um it would be something like the five or six nines of of availability uptime and",
    "start": "573600",
    "end": "580600"
  },
  {
    "text": "guaranteeing these kinds of transactions but every once in a while a server would blink out or I more commonly like",
    "start": "580600",
    "end": "586640"
  },
  {
    "text": "someone updated DNS settings somewhere not me someone else did that and then something would break in this",
    "start": "586640",
    "end": "592000"
  },
  {
    "text": "communication and now I'm in this like in this halfway invalid State now there are people started",
    "start": "592000",
    "end": "600399"
  },
  {
    "text": "smarter than me they looked at this and said you know what we need here is more arrows and so we can have instead of",
    "start": "600399",
    "end": "605600"
  },
  {
    "text": "just a two-phase commit protocol how about a three-phase commit or a four-phase and like just keep asking",
    "start": "605600",
    "end": "611000"
  },
  {
    "text": "things over and over again until everything starts working again uh and the Wikipedia page on Two-Face commit goes into all these details of people",
    "start": "611000",
    "end": "617600"
  },
  {
    "text": "have tried really really really hard to be able to have transactions between more than one resource but eventually",
    "start": "617600",
    "end": "623120"
  },
  {
    "text": "come to the conclusion that it just is never foolproof it never is going to work 100% of the time one thing you also",
    "start": "623120",
    "end": "630200"
  },
  {
    "text": "notice here is that there's a lot more arrows right we've got another box over here to the side this coordinator thing",
    "start": "630200",
    "end": "637360"
  },
  {
    "text": "and then we've got all this communication going back and forth so this kind of protocol is also much more expensive than just a normal database",
    "start": "637360",
    "end": "644160"
  },
  {
    "text": "transaction and some of our testing that I did in terms of like I wanted to get rid of this uh transaction coordinator",
    "start": "644160",
    "end": "650600"
  },
  {
    "text": "because it was uh such a pain to deal with um we saw that there's something like a 10x uh throughput decrease",
    "start": "650600",
    "end": "658800"
  },
  {
    "text": "introduced in this coordinator into the mix so if I could do a th000 transactions per seconds now I'm down to",
    "start": "658800",
    "end": "664399"
  },
  {
    "text": "100 and that only gets worse the further these different boxes are from each other because I have to have I have to",
    "start": "664399",
    "end": "670800"
  },
  {
    "text": "make sure that you know all these different Communications have very low latency otherwise it's just adding more",
    "start": "670800",
    "end": "675839"
  },
  {
    "text": "and more um overhead to the mix here so even when I've put all of these things",
    "start": "675839",
    "end": "681760"
  },
  {
    "text": "on one box on one machine it was a drop of 10 10x throughput in my transactions",
    "start": "681760",
    "end": "687839"
  },
  {
    "text": "and if I started to move these further apart then that greatly increases over",
    "start": "687839",
    "end": "693440"
  },
  {
    "text": "time so like we we realize like well clearly uh we're doing something wrong",
    "start": "693440",
    "end": "698839"
  },
  {
    "text": "here what I would really love to do is like uh just get rid of this thing all together we also found that this only",
    "start": "698839",
    "end": "705839"
  },
  {
    "text": "this kind of uh this kind of arrangement really only works if you have explicit",
    "start": "705839",
    "end": "711480"
  },
  {
    "text": "control over everything in your environment like you define the networks you define the servers if you try to do",
    "start": "711480",
    "end": "716760"
  },
  {
    "text": "this in uh like cloud-based environments especially like uh Platformers a service based things it just doesn't work or if",
    "start": "716760",
    "end": "723680"
  },
  {
    "text": "you like try to do more um fancy things in your database for example uh if you turn on the always on feature in SQL",
    "start": "723680",
    "end": "731200"
  },
  {
    "text": "Server which is like the most expensive checkbox in that installation dialogue um if you try to turn that on that it",
    "start": "731200",
    "end": "737360"
  },
  {
    "text": "says oh we can't do Two-Face commit anymore because we can't make the guar these guarantees of this sort of always",
    "start": "737360",
    "end": "743199"
  },
  {
    "text": "on distributed nature or if you're an azer or any other cloud provider like you use their uh use Azure SQL or",
    "start": "743199",
    "end": "750800"
  },
  {
    "text": "whatever ad base is I don't remember what it's called um then you you don't have this ability to do this either they",
    "start": "750800",
    "end": "756440"
  },
  {
    "text": "will not like you can't call it Microsoft uh Amazon support and say hey guess what I need distributed",
    "start": "756440",
    "end": "762199"
  },
  {
    "text": "transactions can you go ahead and open up all these ports for me and they'll laugh and laugh um politely I guess uh",
    "start": "762199",
    "end": "768360"
  },
  {
    "text": "so we just we can't do this in these sort of environments um but it also uh uh",
    "start": "768360",
    "end": "775120"
  },
  {
    "text": "depending on the resources is less and less possible so the distributed trans action coordinator is available for us",
    "start": "775120",
    "end": "782120"
  },
  {
    "text": "if we use SQL server and msmq which again the queing technology we shouldn't",
    "start": "782120",
    "end": "787240"
  },
  {
    "text": "be using anymore um but that actually does support distributed transactions but as soon as I go to anything else in",
    "start": "787240",
    "end": "793560"
  },
  {
    "text": "this equation then there's no more distributed transactions uh or if we're doing something like a no SQL database",
    "start": "793560",
    "end": "798959"
  },
  {
    "text": "like Cosmos or something like that so um what looked really good on paper",
    "start": "798959",
    "end": "805199"
  },
  {
    "text": "at least seemed good on paper was having this transaction coordinator that can go",
    "start": "805199",
    "end": "810600"
  },
  {
    "text": "against these different resources and would guarantee absolutely that the database transaction between more than",
    "start": "810600",
    "end": "816199"
  },
  {
    "text": "one database would either succeed or for fail and so it can work in a single resource but not across identical",
    "start": "816199",
    "end": "823040"
  },
  {
    "text": "resources so if I have two SQL databases uh generally doesn't work uh disperate resources definitely doesn't work um and",
    "start": "823040",
    "end": "830560"
  },
  {
    "text": "then depending on your database we can even have the issue that inside a single database it may not guarantee",
    "start": "830560",
    "end": "837600"
  },
  {
    "text": "transactions across record so I may not even be able to have like a transaction against two rows in a",
    "start": "837600",
    "end": "843839"
  },
  {
    "text": "database depending on whatever that database is um so looking at we",
    "start": "843839",
    "end": "849279"
  },
  {
    "text": "basically came to the conclusion we cannot uh we cannot rely in this two-phase commit protocol anymore for",
    "start": "849279",
    "end": "854839"
  },
  {
    "text": "these more complex conversations between distributed systems so um we we looked at this and",
    "start": "854839",
    "end": "862360"
  },
  {
    "text": "said okay um how do I how do I then address this problem and so you start",
    "start": "862360",
    "end": "867800"
  },
  {
    "text": "googling and trying to figure like how do I get rid of this uh this two-phase commit protocol um and so in uh",
    "start": "867800",
    "end": "874040"
  },
  {
    "text": "distributed based systems uh in this example I've I'll be showing here um we are consuming messages from uh rabbit mq",
    "start": "874040",
    "end": "882120"
  },
  {
    "text": "or amqp protocol um we'll have multiple rights to the database and also",
    "start": "882120",
    "end": "887440"
  },
  {
    "text": "producing messages uh all within a single sort of transactional boundary of in",
    "start": "887440",
    "end": "893720"
  },
  {
    "text": "activity so it looks something like this we've got uh C code here where I've got",
    "start": "893720",
    "end": "901040"
  },
  {
    "text": "something where I'm updating an item in a database and then I'm updating an item down over here but that's a separate",
    "start": "901040",
    "end": "906639"
  },
  {
    "text": "database and then finally I publish the message out to say okay this thing has happened notifi Downstream systems that",
    "start": "906639",
    "end": "912800"
  },
  {
    "text": "they can now go then do their further processing so at this time we're looking at okay we can't be the first people",
    "start": "912800",
    "end": "919680"
  },
  {
    "text": "that have seen this problem in the wild of we cannot use this sort of uh Two-Face commit to even do sort of a",
    "start": "919680",
    "end": "926199"
  },
  {
    "text": "basic thing inside of a single uh a single application here um luckily uh I I tend to with any",
    "start": "926199",
    "end": "933639"
  },
  {
    "text": "kind of database stuff uh like this sort of thing I tend to go look to see what Pat Helens wrote about it because",
    "start": "933639",
    "end": "939319"
  },
  {
    "text": "usually he's already figured something like this out and luckily for us he did um he wrote this paper uh many years ago",
    "start": "939319",
    "end": "946480"
  },
  {
    "text": "called life beyond distributed transactions I'm like oh that's what I want I want to get Beyond this thing uh",
    "start": "946480",
    "end": "951680"
  },
  {
    "text": "an apostates opinion um which I had to go look up what that word meant but it's someone who believes something uh first",
    "start": "951680",
    "end": "959199"
  },
  {
    "text": "ly that no longer holds that to be true anymore and the reason why he called himself this apostate is because he was",
    "start": "959199",
    "end": "966000"
  },
  {
    "text": "one of the original developers and designers of the Microsoft distributed transaction coordinator so if like this",
    "start": "966000",
    "end": "972600"
  },
  {
    "text": "guy that helped build and design that thing says we can't do this anymore you notice too he worked at Amazon so that's",
    "start": "972600",
    "end": "979600"
  },
  {
    "text": "one of the reasons like going from Microsoft to Amazon like oh no we don't do distributed transactions here he's like great but we we still have to have",
    "start": "979600",
    "end": "987800"
  },
  {
    "text": "uh some way of coordin ating uh agreements and consistency between these different distributed systems these",
    "start": "987800",
    "end": "993639"
  },
  {
    "text": "different databases these different applications so how can we how can we um",
    "start": "993639",
    "end": "999000"
  },
  {
    "text": "have those uh kinds of guarantees when we cannot rely on this Two-Face commit",
    "start": "999000",
    "end": "1004480"
  },
  {
    "text": "protocol uh so in this paper um he's uh he had this described this Epiphany that",
    "start": "1004480",
    "end": "1010440"
  },
  {
    "text": "he had which was uh to assume a transactional boundary uh boundary of a single he calls it an aggregate um or an",
    "start": "1010440",
    "end": "1017880"
  },
  {
    "text": "entity these AR uh DDD terms but just think of like a single uh a single",
    "start": "1017880",
    "end": "1023240"
  },
  {
    "text": "record in the database assuma transactional boundary of that one thing so if it's like I don't know then",
    "start": "1023240",
    "end": "1030000"
  },
  {
    "text": "it's like you know assume a a transactional boundary of a single document if it's a seel than a single",
    "start": "1030000",
    "end": "1036558"
  },
  {
    "text": "row and if you make those sort of assumptions uh that you can only talk to sort of one record at a time then it",
    "start": "1036559",
    "end": "1043160"
  },
  {
    "text": "forces you to uh coordinate activities between multiple different records in a",
    "start": "1043160",
    "end": "1048558"
  },
  {
    "text": "different way so he described this idea that if I",
    "start": "1048559",
    "end": "1053960"
  },
  {
    "text": "have uh a transaction in one record over here and I need to affect a change in a",
    "start": "1053960",
    "end": "1059679"
  },
  {
    "text": "record over there then I need to have some way to communicate from this record to that record somehow that hey you also",
    "start": "1059679",
    "end": "1067320"
  },
  {
    "text": "need to do this thing and that communication to that other record is also part of the same business",
    "start": "1067320",
    "end": "1073600"
  },
  {
    "text": "transaction or database transaction of the original uh insert or update into",
    "start": "1073600",
    "end": "1079200"
  },
  {
    "text": "the first record so it looks something like this we have uh we have these two",
    "start": "1079200",
    "end": "1084520"
  },
  {
    "text": "entities and by the way we'll like right now it says messages flow we'll talk about like what the message is what is",
    "start": "1084520",
    "end": "1091039"
  },
  {
    "text": "flow and like how does this actually happen in practice but the idea is that in my sending entity when I write the",
    "start": "1091039",
    "end": "1098120"
  },
  {
    "text": "data to the database I also record as part of that this communication that I need to have then shuffled off to the",
    "start": "1098120",
    "end": "1104840"
  },
  {
    "text": "other entity so at that point in time I'm not immediately doing any kind of like publish or send or anything like",
    "start": "1104840",
    "end": "1111000"
  },
  {
    "text": "that I'm recording the intent to do that thing sometime in the future via uh some",
    "start": "1111000",
    "end": "1117039"
  },
  {
    "text": "kind of way of serializing that message into the database so in his presentation and in his uh paper he has all these like",
    "start": "1117039",
    "end": "1124039"
  },
  {
    "text": "lovely diagrams of like yeah I just got this thing here you've got uh you got um these entities with these these messages",
    "start": "1124039",
    "end": "1130039"
  },
  {
    "text": "that remember them um we also need to make sure that uh in this picture here",
    "start": "1130039",
    "end": "1135400"
  },
  {
    "text": "we've got a message being sent from one entity to the other we also have to make sure that the receiving entity uh does",
    "start": "1135400",
    "end": "1142039"
  },
  {
    "text": "not perform that activity twice and so this is known as item potency uh which is another great paper from Pat Helen",
    "start": "1142039",
    "end": "1147840"
  },
  {
    "text": "item potency is not a medical condition um so in that idea if I've got this if I",
    "start": "1147840",
    "end": "1153559"
  },
  {
    "text": "can only guarantee a transaction around this one entity and I'm sending a messages to the other entity I cannot",
    "start": "1153559",
    "end": "1158600"
  },
  {
    "text": "guarantee that that message is only delivered exactly once you either have",
    "start": "1158600",
    "end": "1163720"
  },
  {
    "text": "at least once or at most once but there's no exactly once uh exactly what",
    "start": "1163720",
    "end": "1169799"
  },
  {
    "text": "messaging communication here so I have to assume on the receiving entity that it could receive this this message that",
    "start": "1169799",
    "end": "1177240"
  },
  {
    "text": "uh from this other entity um at least one time and just assume that it could",
    "start": "1177240",
    "end": "1182640"
  },
  {
    "text": "be multiple times that I'm receiving this message so then how do I ensure that the receiving entity only processes",
    "start": "1182640",
    "end": "1189200"
  },
  {
    "text": "the message once so this is known as uh at least once messaging at least once delivery",
    "start": "1189200",
    "end": "1195799"
  },
  {
    "text": "exactly once processing and I'm always careful about making that distinction here because I do see like some message",
    "start": "1195799",
    "end": "1201320"
  },
  {
    "text": "Brokers out there in the world like we guarantee exactly once's messaging but they really mean is exactly once",
    "start": "1201320",
    "end": "1207760"
  },
  {
    "text": "processing so I just want to make sure that the receiving entity only actually does the side effect of this message the",
    "start": "1207760",
    "end": "1212880"
  },
  {
    "text": "first time so how do we do this um in our entities the way we can manage it is an",
    "start": "1212880",
    "end": "1219799"
  },
  {
    "text": "entity remembers the communication it's received so not only are we storing",
    "start": "1219799",
    "end": "1225320"
  },
  {
    "text": "messages that are outgoing to other entities but when an entity processes a message it's also going to keep track of",
    "start": "1225320",
    "end": "1231960"
  },
  {
    "text": "that message to say okay when I perform this activity let's go ahead and look up to see have I seen this message before",
    "start": "1231960",
    "end": "1238960"
  },
  {
    "text": "and if I have seen it before then hey nothing to do we can just move on with day um but if I haven't seen it before",
    "start": "1238960",
    "end": "1244480"
  },
  {
    "text": "okay then actually process the message so he had this lovely diagram of",
    "start": "1244480",
    "end": "1249600"
  },
  {
    "text": "like look you got these entities but these messages flowing anywhere and then I go look for the code behind this and there was none so I'm like oh fantastic",
    "start": "1249600",
    "end": "1256480"
  },
  {
    "text": "so he just like wrote a bunch of diagrams but like didn't actually like here's an example of actually how to do this sort of",
    "start": "1256480",
    "end": "1263280"
  },
  {
    "text": "thing um so I have had to implement this kind of thing myself in the past uh I",
    "start": "1263280",
    "end": "1269919"
  },
  {
    "text": "don't recommend implementing yourself because it's really hard to do and you'll probably screw it up uh I know I did um so I'll also be showing some",
    "start": "1269919",
    "end": "1276840"
  },
  {
    "text": "examples of uh thirdparty software that provides this kind of behavior out of the box um and then we'll dig into like",
    "start": "1276840",
    "end": "1283120"
  },
  {
    "text": "the nitty-gritty details of actually how it works behind the scenes okay so in my database now I've",
    "start": "1283120",
    "end": "1289960"
  },
  {
    "text": "got an aggregate or entity or record whatever you want to call it and this record includes my business data so this",
    "start": "1289960",
    "end": "1296919"
  },
  {
    "text": "is like the normal stuff you already put in the database um and it'll also include means of uh passing messages to",
    "start": "1296919",
    "end": "1304799"
  },
  {
    "text": "the other entity and this is known as an outbox so uh like basically the whole",
    "start": "1304799",
    "end": "1310760"
  },
  {
    "text": "point of this talk is the outbox pattern but it is uh it's one of those things that um you don't know that you",
    "start": "1310760",
    "end": "1317799"
  },
  {
    "text": "need until get until you encounter a complex distributed system and realize that I've got all these sort of phantom",
    "start": "1317799",
    "end": "1324120"
  },
  {
    "text": "updates or incorrect updates because uh we we're uh we don't have these sort of distributed transactions so the",
    "start": "1324120",
    "end": "1331120"
  },
  {
    "text": "Aggregates or the records include messages we want to send out the door in our outbox and they'll also include that",
    "start": "1331120",
    "end": "1338159"
  },
  {
    "text": "that memory of messages I've received in the past and we call this inbox so some",
    "start": "1338159",
    "end": "1344039"
  },
  {
    "text": "folks just call it the outbox pattern some people have inbox and outbox but we need both things we need a way to uh we",
    "start": "1344039",
    "end": "1351080"
  },
  {
    "text": "need a way to to communicate to other entities and save that data with our business transaction but we also need a",
    "start": "1351080",
    "end": "1357600"
  },
  {
    "text": "way to remember messages that we've received and processed so that when the next message comes in the door that uh",
    "start": "1357600",
    "end": "1363480"
  },
  {
    "text": "the next time that same message comes in the door we can have uh a way to check to make sure that we've already processed it or",
    "start": "1363480",
    "end": "1370159"
  },
  {
    "text": "not okay so um where the distributed systems part comes into play is if we",
    "start": "1370159",
    "end": "1376440"
  },
  {
    "text": "imagine that these Aggregates are not just two records in the same database but these are behind other systems so",
    "start": "1376440",
    "end": "1383240"
  },
  {
    "text": "there's like uh microservices or module no not modular mod but there there are",
    "start": "1383240",
    "end": "1388600"
  },
  {
    "text": "other systems out there that we have to coordinate with each other and we need to use this inbox in the outbox in order to uh in order to coordinate any kind of",
    "start": "1388600",
    "end": "1396000"
  },
  {
    "text": "activity between one or more of these systems so um in this case I've got uh",
    "start": "1396000",
    "end": "1403120"
  },
  {
    "text": "my my three services the initiating service is my is uh service a and the",
    "start": "1403120",
    "end": "1408919"
  },
  {
    "text": "receiving Services of the side effect are going to be uh B and C in this picture here so we uh when we were looking at",
    "start": "1408919",
    "end": "1416600"
  },
  {
    "text": "the distributive transaction coordinator we had this coordinator thing that was the that was the this external service",
    "start": "1416600",
    "end": "1422880"
  },
  {
    "text": "that was managing the communication and the uh the two phases of the two-phase",
    "start": "1422880",
    "end": "1427960"
  },
  {
    "text": "commit protocol so we still need something like that here in order to dispatch messages from entities to other",
    "start": "1427960",
    "end": "1435039"
  },
  {
    "text": "services there's nothing in our databases that will just automatically do this I know SQL server has like what",
    "start": "1435039",
    "end": "1441080"
  },
  {
    "text": "is that the broker no it had like some messaging thing built into it too but please don't use that um so we need",
    "start": "1441080",
    "end": "1447919"
  },
  {
    "text": "something here in order to facilitate uh taking messages out of these records and",
    "start": "1447919",
    "end": "1454200"
  },
  {
    "text": "then passing them through uh to these other services so we're going to do that uh via",
    "start": "1454200",
    "end": "1459919"
  },
  {
    "text": "dispatcher all right so the way this will work is it first starts off with a",
    "start": "1459919",
    "end": "1465799"
  },
  {
    "text": "transaction with uh inside services say and so in that service we will write the",
    "start": "1465799",
    "end": "1471960"
  },
  {
    "text": "business data like we normally would but then we're also going to in our same database transaction uh save the",
    "start": "1471960",
    "end": "1479120"
  },
  {
    "text": "messages that we're going to be sending to the other services now the way those messages look",
    "start": "1479120",
    "end": "1485080"
  },
  {
    "text": "behind the scenes they're not going to be exactly the same as like a like an amqp message um it'll just be some basic",
    "start": "1485080",
    "end": "1491799"
  },
  {
    "text": "information about here's the here's the body of the information and potentially here's the destinations where this",
    "start": "1491799",
    "end": "1497440"
  },
  {
    "text": "message should be sent so we have to make sure that our database can handle that kind of unstructured data uh I've used this kind",
    "start": "1497440",
    "end": "1504120"
  },
  {
    "text": "of pattern and pretty much you know every kind of database um so yeah if you",
    "start": "1504120",
    "end": "1509159"
  },
  {
    "text": "need to store it in adjacent column or if you need to put it in a separate table whatever that is uh we just have",
    "start": "1509159",
    "end": "1515360"
  },
  {
    "text": "to make sure that we can transact both of these things um together okay so that transaction",
    "start": "1515360",
    "end": "1522880"
  },
  {
    "text": "succeeds so my this initial service is done with its work like for and its view",
    "start": "1522880",
    "end": "1528640"
  },
  {
    "text": "of the world like it is good everything has been uh everything is successful in what it's been uh what it's been trying",
    "start": "1528640",
    "end": "1534960"
  },
  {
    "text": "to do here so once that transaction succeeds and you know can no longer be",
    "start": "1534960",
    "end": "1540520"
  },
  {
    "text": "rolled back because it's been committed now I need something to then take those messages out of these entities and then",
    "start": "1540520",
    "end": "1547880"
  },
  {
    "text": "pass them along into the other subsequent services and so that's going to be this this dispatcher um this",
    "start": "1547880",
    "end": "1554120"
  },
  {
    "text": "dispatcher will look for unsent messages and the outbox of the uh first database",
    "start": "1554120",
    "end": "1561399"
  },
  {
    "text": "and then it will translate those to on thewire messages so I will translate whatever was stored in the database into",
    "start": "1561399",
    "end": "1567440"
  },
  {
    "text": "an actual on thewire amqp message that will then be uh sent out to any other uh",
    "start": "1567440",
    "end": "1573200"
  },
  {
    "text": "any other services that then need to uh you know need to be involved in this overall business",
    "start": "1573200",
    "end": "1579279"
  },
  {
    "text": "transaction okay so I take the messages out I read the messages out and then at",
    "start": "1579279",
    "end": "1584960"
  },
  {
    "text": "this point I can then pass them along to uh each individ ual service now each individual service here is also in its",
    "start": "1584960",
    "end": "1592720"
  },
  {
    "text": "own you know its own individual system its own individual database and it also have its own individual transaction",
    "start": "1592720",
    "end": "1598960"
  },
  {
    "text": "boundaries so at this point micros service B receives the message uh it",
    "start": "1598960",
    "end": "1604039"
  },
  {
    "text": "will transact the data so it will do the changes it needs to do in its uh in its business database and store that message",
    "start": "1604039",
    "end": "1612039"
  },
  {
    "text": "that it received in its own inbox table or inbox record so at that point that",
    "start": "1612039",
    "end": "1618399"
  },
  {
    "text": "all succeeds or that all fails uh but again service a has already left the picture like we don't worry about",
    "start": "1618399",
    "end": "1624279"
  },
  {
    "text": "service a anymore now we're only dealing uh with service B so in this kind of picture um I'm",
    "start": "1624279",
    "end": "1632320"
  },
  {
    "text": "drawing more arrows here uh we also want to uh we also want to uh think through the the different failure modes of what",
    "start": "1632320",
    "end": "1638960"
  },
  {
    "text": "can go wrong in this kind of uh operation here now on the two-phase commit protocol it basically says in the",
    "start": "1638960",
    "end": "1646000"
  },
  {
    "text": "even Wikipedia like you cannot this uh these protocols fail if the protocol fails then you no longer have these",
    "start": "1646000",
    "end": "1652520"
  },
  {
    "text": "guarantees the only way this can actually work is if you can absolutely guarantee this but in our scenario we can have all sorts of failures here",
    "start": "1652520",
    "end": "1658640"
  },
  {
    "text": "because I'm only dealing with one service at a time I just need to ensure like the system can recover uh it",
    "start": "1658640",
    "end": "1664720"
  },
  {
    "text": "recover in in the case of any kind of failure here so what happens when thing",
    "start": "1664720",
    "end": "1670039"
  },
  {
    "text": "goes wrong when things thing goes wrong when things go wrong um now I'm also",
    "start": "1670039",
    "end": "1675440"
  },
  {
    "text": "very deliberate here when I use the word when because if you use the word if as an if things go wrong then most people",
    "start": "1675440",
    "end": "1682480"
  },
  {
    "text": "get like happy ear on and like if well that's such a remote possibility that it probably will never happen but like",
    "start": "1682480",
    "end": "1688600"
  },
  {
    "text": "everything goes wrong right like like how many times have it has a certificate error brought down some cloud provider",
    "start": "1688600",
    "end": "1695200"
  },
  {
    "text": "or some DNS error brought down an entire cloud provider like that's these things still happen and so if I like if",
    "start": "1695200",
    "end": "1701320"
  },
  {
    "text": "Microsoft and Amazon and Google cannot keep their stuff up at all times and like I have no chance so I will just",
    "start": "1701320",
    "end": "1707720"
  },
  {
    "text": "assume that things will go wrong and plan accordingly so back in this picture",
    "start": "1707720",
    "end": "1713840"
  },
  {
    "text": "service a is done service B is done and now I'm going to service C so what happens now uh when service C has some",
    "start": "1713840",
    "end": "1721840"
  },
  {
    "text": "sort of failure what could the failure be doesn't matter really like it could be",
    "start": "1721840",
    "end": "1727000"
  },
  {
    "text": "down it could be unresponsive there could even be an uh an error just like in the configuration of the network so I",
    "start": "1727000",
    "end": "1732880"
  },
  {
    "text": "cannot I cannot successfully dispatch this message to that other service now because these messages are",
    "start": "1732880",
    "end": "1740360"
  },
  {
    "text": "durable in my broker then I have some failure recovery mode sort of built in already because it's not like uh an HTTP",
    "start": "1740360",
    "end": "1748080"
  },
  {
    "text": "call where if you are making the call and the other side's not listening then you kind of lose that HTTP uh",
    "start": "1748080",
    "end": "1753840"
  },
  {
    "text": "communication altogether because I've got uh my messages stored in a broker then that also means that if something",
    "start": "1753840",
    "end": "1759919"
  },
  {
    "text": "goes wrong then I can retry that message so in this case we have some way of",
    "start": "1759919",
    "end": "1765600"
  },
  {
    "text": "storing the messages we need to retry um in another U you know typically it's in the broker itself and then we can uh",
    "start": "1765600",
    "end": "1773240"
  },
  {
    "text": "retry that message again we can we can try to dispatch that message again uh to our other",
    "start": "1773240",
    "end": "1779080"
  },
  {
    "text": "service so in retries uh again we cannot guarantee that messages have been delivered",
    "start": "1779080",
    "end": "1785399"
  },
  {
    "text": "exactly once so we want to make sure that they are processed only once so if I'm retrying this message I've pulled",
    "start": "1785399",
    "end": "1791039"
  },
  {
    "text": "out of this dispatcher um where I go let's go pull the message out again and let's go redispatch it to the other",
    "start": "1791039",
    "end": "1797159"
  },
  {
    "text": "services uh in this case uh microservice B here has already seen this message",
    "start": "1797159",
    "end": "1803159"
  },
  {
    "text": "before and it knows it's seen that message before because it's store that message in its inbox table in its",
    "start": "1803159",
    "end": "1808480"
  },
  {
    "text": "database and so for it to process the message the first thing it does is look up in its inbox to see have I seen this",
    "start": "1808480",
    "end": "1815360"
  },
  {
    "text": "message before and if I've seen this message before then nothing to do we can just move on with of life and we don't",
    "start": "1815360",
    "end": "1821399"
  },
  {
    "text": "we don't do any business data uh manipulation here we just successfully processed the message by doing nothing",
    "start": "1821399",
    "end": "1828600"
  },
  {
    "text": "now service C has not seen this message before so then it will go ahead and uh do its uh business data uh transaction",
    "start": "1828600",
    "end": "1836480"
  },
  {
    "text": "and store the incoming message in its own individual inbox and now um everything has",
    "start": "1836480",
    "end": "1845240"
  },
  {
    "text": "succeeded in terms of boxes and arrows on a screen the mechanics of this are",
    "start": "1845240",
    "end": "1850880"
  },
  {
    "text": "quite a bit more complicated um as you can imagine or I didn't imagine and then I tried doing it and then I imagined",
    "start": "1850880",
    "end": "1857039"
  },
  {
    "text": "like but after seeing a lot of failures uh from the edge cases here but we do have to worry about things like um you",
    "start": "1857039",
    "end": "1863279"
  },
  {
    "text": "can't have infinite memory we cannot remember every message forever you can say you can be like yeah just stick it",
    "start": "1863279",
    "end": "1869320"
  },
  {
    "text": "in a cfus scream somewhere even like cfus default behavior is to only keep what seven days or something of of",
    "start": "1869320",
    "end": "1875240"
  },
  {
    "text": "messages and streams uh and so we we cannot just we cannot store business",
    "start": "1875240",
    "end": "1880440"
  },
  {
    "text": "data and every possible interaction because that will just uh grow unbounded over time and so we have to have a way",
    "start": "1880440",
    "end": "1886600"
  },
  {
    "text": "to like forget messaging after a certain point so I won't be covering it today but that is a thing you have to worry",
    "start": "1886600",
    "end": "1891760"
  },
  {
    "text": "about in this sort of pattern uh you'll realize quickly that if you store every interaction then your database will just",
    "start": "1891760",
    "end": "1897480"
  },
  {
    "text": "explode uh in terms of size this also doesn't tell us",
    "start": "1897480",
    "end": "1902799"
  },
  {
    "text": "necessarily um how to deal uh with uh oh",
    "start": "1902799",
    "end": "1907840"
  },
  {
    "text": "yes I forgot the last step in this process once I've successfully dispatched the message uh to the broker",
    "start": "1907840",
    "end": "1913639"
  },
  {
    "text": "I can now remove that message from the outbox of the uh originating service",
    "start": "1913639",
    "end": "1919279"
  },
  {
    "text": "which again is its own individual transaction so in all these different uh",
    "start": "1919279",
    "end": "1925440"
  },
  {
    "text": "in all these different interactions I'm also trying to think through what happens if the process fails right here",
    "start": "1925440",
    "end": "1931559"
  },
  {
    "text": "what happens if the process fails right there what the process fails right here during the removal of that um from the",
    "start": "1931559",
    "end": "1938679"
  },
  {
    "text": "item from the outbox let's say that transaction failed then it'll retry to pull the message in the outbox and now",
    "start": "1938679",
    "end": "1944519"
  },
  {
    "text": "all the downstream Services have already received and remembered the message and so again the the side effects then only",
    "start": "1944519",
    "end": "1951320"
  },
  {
    "text": "happen once now the the next part is the",
    "start": "1951320",
    "end": "1957120"
  },
  {
    "text": "there's a bit more challenging part like this kind of mechanic is a technical challenge um and it's kind of fun to do",
    "start": "1957120",
    "end": "1962240"
  },
  {
    "text": "because like with these kind of infrastructure sort of uh infrastructure sort of stories or features that you",
    "start": "1962240",
    "end": "1968600"
  },
  {
    "text": "develop they're fun because like you're your own product owner so like you get to decide exactly what gets done so I I",
    "start": "1968600",
    "end": "1974760"
  },
  {
    "text": "did have fun building this kind of thing but the the next complicated part was like well the what is the nature then of",
    "start": "1974760",
    "end": "1981120"
  },
  {
    "text": "this communication between these different Services if I cannot guarantee that this entire operation succeeds or",
    "start": "1981120",
    "end": "1988159"
  },
  {
    "text": "fails I then have to design the communication and the the interactions",
    "start": "1988159",
    "end": "1993880"
  },
  {
    "text": "the conversations between each of these different uh each of these different",
    "start": "1993880",
    "end": "1999880"
  },
  {
    "text": "Services now there are a lot of different patterns in this space uh there used to be like just one",
    "start": "2001120",
    "end": "2007799"
  },
  {
    "text": "description of one pattern but as more and more people were doing these kinds of interactions you will start to see a",
    "start": "2007799",
    "end": "2013240"
  },
  {
    "text": "lot more uh descriptions of different ways of modeling these sort of interactions between different systems",
    "start": "2013240",
    "end": "2018720"
  },
  {
    "text": "so we have things like um you have things like a routing slip that you can use to have a message flow between",
    "start": "2018720",
    "end": "2024279"
  },
  {
    "text": "different Services uh you can use something like a saga to have a a long",
    "start": "2024279",
    "end": "2029679"
  },
  {
    "text": "transaction broken up into smaller transactions uh and then we also would use something like a orchestration or",
    "start": "2029679",
    "end": "2035440"
  },
  {
    "text": "choreography uh via process manager to be able to tile these different things together but the very first thing we",
    "start": "2035440",
    "end": "2041000"
  },
  {
    "text": "have to do is is describe the conversation between Services based on kind of real world uh business",
    "start": "2041000",
    "end": "2049398"
  },
  {
    "text": "requirements and so uh the example we we'll be looking at today is going to be complex agreements and conversation",
    "start": "2049399",
    "end": "2055560"
  },
  {
    "text": "patterns uh via sagas um now there's a bit of an overloaded term in here so like theet folks uh have a a different",
    "start": "2055560",
    "end": "2063520"
  },
  {
    "text": "thing called a saga in our land this is really a process manager The Saga I'm talking talking about here is the",
    "start": "2063520",
    "end": "2069679"
  },
  {
    "text": "original OG Saga definition which is a uh a complex transaction that is uh we",
    "start": "2069679",
    "end": "2077520"
  },
  {
    "text": "cannot have in a single bounded transaction we have to have that complex transaction broken up into a series of",
    "start": "2077520",
    "end": "2084320"
  },
  {
    "text": "smaller transactions and the canonical example here is I should update this because no one does this anymore like no",
    "start": "2084320",
    "end": "2089878"
  },
  {
    "text": "one calls a travel agent to like book a trip right that's not a thing we do anymore but that's the idea is like you",
    "start": "2089879",
    "end": "2095679"
  },
  {
    "text": "know if I want to book a holiday uh then what I will do is I for every one of the things I need to book as part of that",
    "start": "2095679",
    "end": "2102599"
  },
  {
    "text": "each one of those is in his own individual transaction right so I book a flight but I book a flight going to the",
    "start": "2102599",
    "end": "2109480"
  },
  {
    "text": "flight website and booking it through there then I go to a book a rental car I'll go to the rental car website and book that rental car there and finally",
    "start": "2109480",
    "end": "2116240"
  },
  {
    "text": "if I get a hotel then I'll go to the hotel website but those three different resources are not like transactionally",
    "start": "2116240",
    "end": "2122680"
  },
  {
    "text": "bound to each other and in fact like that would be almost impossible right if you were to imagine how would you do",
    "start": "2122680",
    "end": "2128200"
  },
  {
    "text": "this kind of uh operation using a distributed transaction using two-phase commit protocol that means we'd have to",
    "start": "2128200",
    "end": "2134280"
  },
  {
    "text": "get in a zoom meeting get the the flight person on the phone the rental car person on the phone the hotel person on",
    "start": "2134280",
    "end": "2139839"
  },
  {
    "text": "the phone all in one synchronous Zoom call and like all right we're going to book a trip rental car person can you",
    "start": "2139839",
    "end": "2146440"
  },
  {
    "text": "book this car and they're like yes I put my finger on the car uh Hotel person can you book this hotel room yes I'll put my",
    "start": "2146440",
    "end": "2152440"
  },
  {
    "text": "finger on that room they go to the flight person can you book me this flight yes I'll put my finger on the seat",
    "start": "2152440",
    "end": "2158200"
  },
  {
    "text": "I guess and they then if all of those people can agree that we can do this transaction they would say okay book it",
    "start": "2158200",
    "end": "2164200"
  },
  {
    "text": "book it book it but we never do that right we don't do that kind of like complex transaction usually in the real",
    "start": "2164200",
    "end": "2171560"
  },
  {
    "text": "world um I do have the sometimes if anyone here's like bought uh a flat or house or sold a flat or house you have",
    "start": "2171560",
    "end": "2179079"
  },
  {
    "text": "this uh this this agent that is doing the job of the transaction coordinator",
    "start": "2179079",
    "end": "2184359"
  },
  {
    "text": "they're like okay right uh buyer uh do you agree on this price and do you have your uh deposit yes okay but they'll put",
    "start": "2184359",
    "end": "2190640"
  },
  {
    "text": "that they'll like you put the finger on the check they'll go to the seller say hey do you still want to sell this",
    "start": "2190640",
    "end": "2196000"
  },
  {
    "text": "property they're like yes okay finger on each of these two things now we'll exchange the the check or whatever it is",
    "start": "2196000",
    "end": "2202359"
  },
  {
    "text": "and I usually have to like go to a conference room or some like uh some office to to to conduct this transaction",
    "start": "2202359",
    "end": "2208000"
  },
  {
    "text": "so there are cases where two-phase commit does happen in the real world but it's a pain right it's it's such a pain",
    "start": "2208000",
    "end": "2214880"
  },
  {
    "text": "to have to have all this communication coordination um and the idea with the Saga is that instead of us trying to",
    "start": "2214880",
    "end": "2221200"
  },
  {
    "text": "coordinate all these different things together instead what we'll do is have each step in the process both both",
    "start": "2221200",
    "end": "2226839"
  },
  {
    "text": "having a forward transaction which is to do the thing but also have a way to undo",
    "start": "2226839",
    "end": "2232160"
  },
  {
    "text": "the transaction this is not the same as a roll back like this the transaction is",
    "start": "2232160",
    "end": "2237520"
  },
  {
    "text": "already committed so I can't roll back what has already been committed instead what we have to do is find The Logical",
    "start": "2237520",
    "end": "2243079"
  },
  {
    "text": "undo from a business perspective of reversing whatever that first uh operation was so in this example I say",
    "start": "2243079",
    "end": "2251359"
  },
  {
    "text": "uh book the flight book the hotel uh book the car but if something goes wrong",
    "start": "2251359",
    "end": "2256400"
  },
  {
    "text": "with one of those then instead of me like rolling back the transaction we find what is The Logical undo for uh",
    "start": "2256400",
    "end": "2262640"
  },
  {
    "text": "booking a rental car well it's to cancel the reservation right so we cancel the reservation for the rental car we cancel",
    "start": "2262640",
    "end": "2268440"
  },
  {
    "text": "the reservation for the hotel and the system is back to its original state maybe so one thing I liked about",
    "start": "2268440",
    "end": "2275800"
  },
  {
    "text": "Saga is it's not when we're designed interactions from a business perspective it's not necessarily the case that the",
    "start": "2275800",
    "end": "2281599"
  },
  {
    "text": "the systems uh has to go back to the exact same state it was at the beginning the transaction because these are all",
    "start": "2281599",
    "end": "2287640"
  },
  {
    "text": "now business requirements this is like policies like the terms and conditions sort of stuff so uh in this case where",
    "start": "2287640",
    "end": "2294839"
  },
  {
    "text": "I'm where you know we we need to book a rental car um it may not be the case that the rental car allows us to cancel",
    "start": "2294839",
    "end": "2301720"
  },
  {
    "text": "reservations or they allow you to cancel a reservation but they'll charge you for it so like here's you know1 pound for",
    "start": "2301720",
    "end": "2308000"
  },
  {
    "text": "canceling the reservation so like your bank account is not back to its original starting point but like the reservation",
    "start": "2308000",
    "end": "2313839"
  },
  {
    "text": "has now been released so as we're going through these uh this sort of um design uh process a lot of these questions are",
    "start": "2313839",
    "end": "2320760"
  },
  {
    "text": "not technical questions they're more business questions about how should we handle this kind of situation here in",
    "start": "2320760",
    "end": "2326240"
  },
  {
    "text": "the case like we need to be able to like if someone reserves a car we have need to have some way to unreserve it or",
    "start": "2326240",
    "end": "2332000"
  },
  {
    "text": "cancel the reservations so we have to build that capability into our system to be able to perform these kinds of operations",
    "start": "2332000",
    "end": "2339440"
  },
  {
    "text": "not everything is cancelable either so sagas are great if you can cancel operations or have some way of rolling",
    "start": "2339520",
    "end": "2345240"
  },
  {
    "text": "things back but that's not always going to be the case there're going to be some resources where we can't undo those things and I did a whole talk on uh on",
    "start": "2345240",
    "end": "2352680"
  },
  {
    "text": "that as well about you know there's some kinds where we can't uh undo an operation or retry it we just may have to be like I can't do anything about it",
    "start": "2352680",
    "end": "2359359"
  },
  {
    "text": "so good examples like uh if one of my resources is like send grid I can't",
    "start": "2359359",
    "end": "2364560"
  },
  {
    "text": "unsend emails I can send an apology which is kind of like an undo I guess but I can't un I can't unsend that thing",
    "start": "2364560",
    "end": "2371319"
  },
  {
    "text": "so there there going to be cases where this kind of pattern uh will'll have some operation where we can't undo it and we have to just decide you know how",
    "start": "2371319",
    "end": "2377680"
  },
  {
    "text": "do we want to handle that situation all right so my real world example here that's I was having to uh",
    "start": "2377680",
    "end": "2385040"
  },
  {
    "text": "this is something from a a project I was working on uh was this e-commerce system where initially they had that single",
    "start": "2385040",
    "end": "2391440"
  },
  {
    "text": "block of code that was like uh save the order update the stock publish events",
    "start": "2391440",
    "end": "2397440"
  },
  {
    "text": "was the original code and something that the developers uh I was working with didn't realize like they they had",
    "start": "2397440",
    "end": "2402880"
  },
  {
    "text": "unknowingly entered into the messy world of distributed systems because it looks so easy to code when it's just like call",
    "start": "2402880",
    "end": "2409000"
  },
  {
    "text": "an API call an API publish the thing uh but in reality it's much more complicated so we had to walk through",
    "start": "2409000",
    "end": "2414480"
  },
  {
    "text": "these scenarios of saying like what happens if I have failures at each point of of this process and how can I",
    "start": "2414480",
    "end": "2420920"
  },
  {
    "text": "mitigate uh those sort of things so anyway it started out with um this uh",
    "start": "2420920",
    "end": "2427440"
  },
  {
    "text": "this original uh business requirement about the order it says the order can be fulfilled when the request is approved",
    "start": "2427440",
    "end": "2435280"
  },
  {
    "text": "so like I approve the order uh based on the like your that's a valid address that's a valid phone number it's a valid",
    "start": "2435280",
    "end": "2440920"
  },
  {
    "text": "email um it's not a country we don't want to ship to anymore that sort of thing so when I when I approve the order",
    "start": "2440920",
    "end": "2446480"
  },
  {
    "text": "request and I confirm the stock that's when the order can be fulfilled and finally shipped out the",
    "start": "2446480",
    "end": "2452920"
  },
  {
    "text": "door now in this case we have these different systems for each of these",
    "start": "2452920",
    "end": "2458119"
  },
  {
    "text": "different items so I've got an order request system I've got an order fulfillment system and I've got a stock",
    "start": "2458119",
    "end": "2463280"
  },
  {
    "text": "system and I need to design communication between each of these different operations in order to uh",
    "start": "2463280",
    "end": "2469359"
  },
  {
    "text": "fulfill that business requirement of when the order is approved and when the uh stock is confirmed then you can",
    "start": "2469359",
    "end": "2476040"
  },
  {
    "text": "fulfill the order so when I'm going through this process of Designing these interactions",
    "start": "2476040",
    "end": "2481760"
  },
  {
    "text": "I imagine that each one of these boxes in my distributed system is a human being and say well these are people",
    "start": "2481760",
    "end": "2487640"
  },
  {
    "text": "talking to each other what would be their communication back and forth in order to uh in order to be able to",
    "start": "2487640",
    "end": "2492880"
  },
  {
    "text": "fulfill this overall business requirement of of these different systems having these different data so",
    "start": "2492880",
    "end": "2500119"
  },
  {
    "text": "uh in our case uh we have the order request which is the thing that's you know when you click save on the website",
    "start": "2500119",
    "end": "2505520"
  },
  {
    "text": "that's what gets saved as the order request and now I need to notify the order fulfillment system hey an order",
    "start": "2505520",
    "end": "2511319"
  },
  {
    "text": "has been created go ahead and start the next part in the process now I could in this this very",
    "start": "2511319",
    "end": "2518079"
  },
  {
    "text": "first interaction we have to decide what is the nature of that communication between the order request system and the",
    "start": "2518079",
    "end": "2523200"
  },
  {
    "text": "order fulfillment system uh we could use API calls but again if I do API calls",
    "start": "2523200",
    "end": "2528920"
  },
  {
    "text": "then I have to worry about what if the API is down uh but typically for these kind of async sort of scenarios instead",
    "start": "2528920",
    "end": "2535440"
  },
  {
    "text": "what I'll do is uh leverage messaging so okay great let's do messaging what is the message what should the message say",
    "start": "2535440",
    "end": "2542800"
  },
  {
    "text": "what should it what it what it shouldn't imply what is the uh who owns the message what is it describing so I could",
    "start": "2542800",
    "end": "2549200"
  },
  {
    "text": "do it to where I say the order request system tells the order fulfillment system hey start fulfilling an",
    "start": "2549200",
    "end": "2555960"
  },
  {
    "text": "order but if you are people these are human beings the order request person the order fulfillment person they",
    "start": "2555960",
    "end": "2562079"
  },
  {
    "text": "probably don't like being told what to do like no no no no you just tell me like you just notify me when something",
    "start": "2562079",
    "end": "2568040"
  },
  {
    "text": "happened on your side and then I decide what to do on my side you don't get to tell me what to do so instead of a like",
    "start": "2568040",
    "end": "2573800"
  },
  {
    "text": "a directive or a command to this other uh box instead I will notify that other",
    "start": "2573800",
    "end": "2579599"
  },
  {
    "text": "system via an event so this is going to be our uh order created event the order",
    "start": "2579599",
    "end": "2585200"
  },
  {
    "text": "request service system when it saves that order to the database at that point",
    "start": "2585200",
    "end": "2590599"
  },
  {
    "text": "in time it will also persist that order created event into its outbox so I've",
    "start": "2590599",
    "end": "2596240"
  },
  {
    "text": "removed all the like little uh envelope looking things um and uh all the",
    "start": "2596240",
    "end": "2601760"
  },
  {
    "text": "different cues and stuff so now it's just sort of a macro level of how do we do this communication here so the order request system notifies the order",
    "start": "2601760",
    "end": "2609079"
  },
  {
    "text": "fulfillment system hey an order's been created and now you can go off and do whatever you need to",
    "start": "2609079",
    "end": "2615319"
  },
  {
    "text": "do so the order fulfillment system the little text just went from over there to over there behind the scenes this is",
    "start": "2615319",
    "end": "2622319"
  },
  {
    "text": "using uh a message broker and outbox to be able to to do that communication to guarantee that I will have that",
    "start": "2622319",
    "end": "2628760"
  },
  {
    "text": "communication flow from the order request system to the order fulfillment system all right so now the order",
    "start": "2628760",
    "end": "2634720"
  },
  {
    "text": "fulfillment side it's going to look to see okay I've got a I've got a notification that the order has been",
    "start": "2634720",
    "end": "2640559"
  },
  {
    "text": "created now I need to uh validate the stock but that's in a different system",
    "start": "2640559",
    "end": "2645720"
  },
  {
    "text": "that's in the stock system so I'm going to ask the stock system to uh to hold",
    "start": "2645720",
    "end": "2651440"
  },
  {
    "text": "the stock for uh this order fulfillment uh process so I will say hey I need",
    "start": "2651440",
    "end": "2658319"
  },
  {
    "text": "stock request for uh this skew for this skew and this skew for these quantities",
    "start": "2658319",
    "end": "2663760"
  },
  {
    "text": "and then the stock system receives each of these requests and and then we'll put the stock aside reserve the stock uh in",
    "start": "2663760",
    "end": "2670559"
  },
  {
    "text": "order to fulfill it some point in the future now stock system is not responsible for knowing when to ship or",
    "start": "2670559",
    "end": "2676079"
  },
  {
    "text": "not it knows how to put things aside but it's still ring on the order of fulfillment process to like finally",
    "start": "2676079",
    "end": "2681400"
  },
  {
    "text": "notifi hey now you can go ahead and uh confirm the stock or release the stock or ship the stock",
    "start": "2681400",
    "end": "2687480"
  },
  {
    "text": "whatever okay so stock receives these requests and will then communicate back",
    "start": "2687480",
    "end": "2693000"
  },
  {
    "text": "based on the feedback it sees from its system uh do I have enough stock or not so so let's say stock confirmed yes",
    "start": "2693000",
    "end": "2698760"
  },
  {
    "text": "stock confirmed yes stock confirmed yes again individual transactions going",
    "start": "2698760",
    "end": "2703960"
  },
  {
    "text": "against its business database each one of these messages then stored in its own individual outbox before being pro uh uh",
    "start": "2703960",
    "end": "2712559"
  },
  {
    "text": "passed along via this dispatcher to the uh Downstream service so again on this diagram it's just like boop boop boop",
    "start": "2712559",
    "end": "2719760"
  },
  {
    "text": "boop but behind the scenes outbox inbox uh all that sort of stuff okay so",
    "start": "2719760",
    "end": "2726760"
  },
  {
    "text": "now the order fulfillment system has received confirmation about all the different stock requests and now the",
    "start": "2726760",
    "end": "2732480"
  },
  {
    "text": "order fulfillment system is just waiting for the order request to be approved the order request system I",
    "start": "2732480",
    "end": "2739240"
  },
  {
    "text": "don't know like you click a button and you say confirm order whatever um again via a notification an event will notify",
    "start": "2739240",
    "end": "2746079"
  },
  {
    "text": "the order fulfillment system your order has now been approved so now that I've uh I have",
    "start": "2746079",
    "end": "2753960"
  },
  {
    "text": "successfully confirmed all the stock and I've also confirmed that the order has been approved now I can fulfill the",
    "start": "2753960",
    "end": "2760720"
  },
  {
    "text": "order for whatever that means like I don't know uh publish another event that maybe the uh the stock the the shipping",
    "start": "2760720",
    "end": "2767640"
  },
  {
    "text": "service then picks up and actually goes pulls the stock I don't know but uh we will notify someone else that the order",
    "start": "2767640",
    "end": "2773160"
  },
  {
    "text": "fulfillment is successful and we can now ship this order out the door so order oh yeah order request says",
    "start": "2773160",
    "end": "2780359"
  },
  {
    "text": "Okay order ful successful will update the stat of status of our order request to fulfilled and The Business",
    "start": "2780359",
    "end": "2787119"
  },
  {
    "text": "transaction is now succe is now successful now this is a lot more",
    "start": "2787119",
    "end": "2792440"
  },
  {
    "text": "complicated than everything in a database right like if I just had a single database with just different",
    "start": "2792440",
    "end": "2799160"
  },
  {
    "text": "tables maybe different schemas I could just do one transaction to do this entire operation but as soon as you",
    "start": "2799160",
    "end": "2804240"
  },
  {
    "text": "start moving things apart and distribute them now we have to uh design a",
    "start": "2804240",
    "end": "2809480"
  },
  {
    "text": "conversation and communication between these different services in order to fulfill the overall business need of uh",
    "start": "2809480",
    "end": "2816119"
  },
  {
    "text": "or the overall business rule of uh order an order can only be fulfilled when it's",
    "start": "2816119",
    "end": "2821319"
  },
  {
    "text": "been approved and the Stock's confirmed now with this picture",
    "start": "2821319",
    "end": "2827960"
  },
  {
    "text": "originally like I could have the single transaction uh look at all the data all at once but now I can have this sort of",
    "start": "2827960",
    "end": "2833359"
  },
  {
    "text": "partial success or partial failure um in that case we we would be looking at order",
    "start": "2833359",
    "end": "2838920"
  },
  {
    "text": "cancellations uh so an order can be cancelled when the stock is denied or",
    "start": "2838920",
    "end": "2844559"
  },
  {
    "text": "the request is rejected for whatever reason again this is not something I",
    "start": "2844559",
    "end": "2850440"
  },
  {
    "text": "really had to worry about when I was in a single database transaction but now again I have to I have to now design the",
    "start": "2850440",
    "end": "2855680"
  },
  {
    "text": "interactions of how do I manage these these partial success partial failure scenarios and be able to get things back",
    "start": "2855680",
    "end": "2861920"
  },
  {
    "text": "to where they used to be and so that's this part the next part here is the the reverse side of the Saga implementation",
    "start": "2861920",
    "end": "2868720"
  },
  {
    "text": "we did all these success Paths of saying uh you know order uh order stock",
    "start": "2868720",
    "end": "2873960"
  },
  {
    "text": "confirmed uh order approved now we got to go the other direction is what happens when one of these things goes",
    "start": "2873960",
    "end": "2880960"
  },
  {
    "text": "wrong so first one up is order can be canceled when first the stock is denied",
    "start": "2880960",
    "end": "2887000"
  },
  {
    "text": "and even here we can have a partial success and partial failure some of the stock could be confirmed but some of it",
    "start": "2887000",
    "end": "2892400"
  },
  {
    "text": "be can be denied and we need to be able to handle uh those more complex scenarios so in this case we've got our",
    "start": "2892400",
    "end": "2898960"
  },
  {
    "text": "three know uh back to our stock request uh uh requests over to our stock service",
    "start": "2898960",
    "end": "2905440"
  },
  {
    "text": "um the first one succeeds the second one succeeds the third one does not succeed",
    "start": "2905440",
    "end": "2910920"
  },
  {
    "text": "uh it failed successfully which was the uh request was denied and so the order of fulfillment service receives this",
    "start": "2910920",
    "end": "2917559"
  },
  {
    "text": "feedback that two succeeded but one failed so to deal with this scenario I",
    "start": "2917559",
    "end": "2923880"
  },
  {
    "text": "have to go back and look at what is The Logical undo from a business perspective of whatever has has has succeeded so far",
    "start": "2923880",
    "end": "2932119"
  },
  {
    "text": "so in this case I've got uh the order request I haven't heard from the order request yet so it could have been",
    "start": "2932119",
    "end": "2938319"
  },
  {
    "text": "approved it could not have been approved but I can't tell that from my vantage point in the order fulfillment side so I",
    "start": "2938319",
    "end": "2944559"
  },
  {
    "text": "will just notify the uh I will notify the order request um service to say hey",
    "start": "2944559",
    "end": "2950079"
  },
  {
    "text": "you need to cancel this order because reasons so um that will take care of the",
    "start": "2950079",
    "end": "2955240"
  },
  {
    "text": "order request side for the order uh for the stock side we have to look at what is The Logical undo of confirming stock",
    "start": "2955240",
    "end": "2962720"
  },
  {
    "text": "well in this case we can return the stock so in this uh in this communication we'll have a cancel order",
    "start": "2962720",
    "end": "2969680"
  },
  {
    "text": "request sent to the order request service and then stock return requested",
    "start": "2969680",
    "end": "2975000"
  },
  {
    "text": "uh requests to the stock service from a pattern perspective this",
    "start": "2975000",
    "end": "2980640"
  },
  {
    "text": "is starting to blend events and request response via messaging and that's okay that's a lot of what I'm doing when i'm",
    "start": "2980640",
    "end": "2986520"
  },
  {
    "text": "whiteboarding these kinds of interactions is going through like well does make more sense to be a request or an event or a command or request reply",
    "start": "2986520",
    "end": "2993760"
  },
  {
    "text": "or a command uh what is the right kind of interaction here and we will'll draw these different uh interactions out and",
    "start": "2993760",
    "end": "2999440"
  },
  {
    "text": "just kind of take a step back and say does this make sense like if these were people human beings performing this",
    "start": "2999440",
    "end": "3005079"
  },
  {
    "text": "would this make sense in their heads and there's not necessarily like ex exactly right or wrong answers here um you'll",
    "start": "3005079",
    "end": "3011920"
  },
  {
    "text": "you'll also run into trouble if you just say every message between every service must be an event which can work for a",
    "start": "3011920",
    "end": "3018400"
  },
  {
    "text": "lot of scenarios but there's going to be cases where uh publishing an event uh in order to enact change like makes the",
    "start": "3018400",
    "end": "3024720"
  },
  {
    "text": "interaction really messy so I'm looking like how messy is this interaction and does it kind of make sense from a uh",
    "start": "3024720",
    "end": "3029960"
  },
  {
    "text": "from a business perspective so um I sent a request to to the order request service to say go ahead and cancel that",
    "start": "3029960",
    "end": "3035920"
  },
  {
    "text": "order and stock service go ahead and return that stock and then each of those process uh each of those in turn so now",
    "start": "3035920",
    "end": "3043160"
  },
  {
    "text": "it's back to where it was before it's like the the overall systems state is",
    "start": "3043160",
    "end": "3048799"
  },
  {
    "text": "not exactly to where it was before at the beginning of the Saga uh but we have to look at that from a business",
    "start": "3048799",
    "end": "3054000"
  },
  {
    "text": "perspective about what makes sense from a requirement side that we would need to then uh kind of get things back into a a",
    "start": "3054000",
    "end": "3060960"
  },
  {
    "text": "good state so a canceled order is like not a happy State for the customer but",
    "start": "3060960",
    "end": "3066839"
  },
  {
    "text": "it's at least not having stock sitting on the shelf being held forever because that that order will never get",
    "start": "3066839",
    "end": "3072880"
  },
  {
    "text": "fulfilled all right what about the other side here um an order can be canceled when the stock is denied or the request",
    "start": "3072880",
    "end": "3079160"
  },
  {
    "text": "is rejected uh so again I have this scenario where um I don't necessarily know the the current state of everything",
    "start": "3079160",
    "end": "3085400"
  },
  {
    "text": "so I have to be able to handle these sort of edge cases here so in this case I get an event from the order request uh",
    "start": "3085400",
    "end": "3091760"
  },
  {
    "text": "service saying ORD been rejected the order fulfillment service then goes and looks at its uh its knowledge of where",
    "start": "3091760",
    "end": "3098280"
  },
  {
    "text": "things are and so if the stock has already been",
    "start": "3098280",
    "end": "3103480"
  },
  {
    "text": "confirmed all of it then I need to go tell the stock service go ahead and return that stock if it's not been",
    "start": "3103480",
    "end": "3110040"
  },
  {
    "text": "confirmed yet then I may need to wait to get notified from the stock service about what the state of things are um",
    "start": "3110040",
    "end": "3116640"
  },
  {
    "text": "you could probably like just put an API call in there I guess to just ask the stock service what the status is of things but again there can be problems",
    "start": "3116640",
    "end": "3123119"
  },
  {
    "text": "with that because uh messages have a way of being processed like asynchronously",
    "start": "3123119",
    "end": "3128760"
  },
  {
    "text": "which could mean like a day from now or a week from now hopefully not a week from now um but there's no guarantees",
    "start": "3128760",
    "end": "3134680"
  },
  {
    "text": "about when that timing of of when that message will be processed so I have to be able to handle these kind of like",
    "start": "3134680",
    "end": "3140200"
  },
  {
    "text": "muddy messy situations of not exactly know the state of everything and sort of wait for the information to come into me",
    "start": "3140200",
    "end": "3146720"
  },
  {
    "text": "before I then go and make decisions uh in my service so in this case let's just pretend that all the stock has been uh",
    "start": "3146720",
    "end": "3154760"
  },
  {
    "text": "confirmed and so now I'm sending out notifications to the stock Service uh to go ahead and return all that stock and",
    "start": "3154760",
    "end": "3161760"
  },
  {
    "text": "everything is successful well like we're we're back to where we were kind of the order has been canceled but uh or yeah I",
    "start": "3161760",
    "end": "3170440"
  },
  {
    "text": "guess the order was rejected uh but at least like we haven't we haven't put aside stock that will never be fulfilled here so from the customer perspective",
    "start": "3170440",
    "end": "3177640"
  },
  {
    "text": "maybe it's not a happy uh ending uh but from my system overall business system perspective we are back to where we",
    "start": "3177640",
    "end": "3184160"
  },
  {
    "text": "started it from all right so I was going to show a code example of this of this uh all",
    "start": "3184160",
    "end": "3192040"
  },
  {
    "text": "these different interactions and uh I will be showing this via where is",
    "start": "3192040",
    "end": "3199440"
  },
  {
    "text": "my jet brains right there it is is that big enough for the folks in",
    "start": "3199440",
    "end": "3204960"
  },
  {
    "text": "the back yeah yes can the gray hairs put thumbs up too yes okay good um so this",
    "start": "3204960",
    "end": "3212359"
  },
  {
    "text": "is the initial interaction here this is uh this is the the the action to go ahead and post uh to to post up your",
    "start": "3212359",
    "end": "3219760"
  },
  {
    "text": "sharping cart data and it will create the order for you and then do Downstream stuff initially this was the you know it",
    "start": "3219760",
    "end": "3227680"
  },
  {
    "text": "was save I save stuff to a database save stuff to a database and then publish a message out the door uh now we're just",
    "start": "3227680",
    "end": "3233480"
  },
  {
    "text": "doing the one thing that we can guarantee in this case I'm in the orders uh service yeah over over here um and",
    "start": "3233480",
    "end": "3242920"
  },
  {
    "text": "now the event I'm publishing out this uh this event right here is that order",
    "start": "3242920",
    "end": "3250319"
  },
  {
    "text": "created event that that we described in this initial interaction um but now when",
    "start": "3250319",
    "end": "3255960"
  },
  {
    "text": "I'm publish this publishing this event it will not actually publish this event right this second so even though it says",
    "start": "3255960",
    "end": "3262520"
  },
  {
    "text": "await message session to publish behind the scenes that will actually be temporarily storing that message in our",
    "start": "3262520",
    "end": "3268799"
  },
  {
    "text": "database before it actually goes out the door to uh be able to be sent uh uh to",
    "start": "3268799",
    "end": "3274680"
  },
  {
    "text": "the the downstream systems now the way I enabled This was um initially I had my own version that",
    "start": "3274680",
    "end": "3280559"
  },
  {
    "text": "did all the stuff for me um but that's a lot of infrastructure code to uh to manage um and so in this case I'm using",
    "start": "3280559",
    "end": "3287160"
  },
  {
    "text": "uh a product called ins service bus those folks are here over there somewhere so if you want to learn more about the details of how they",
    "start": "3287160",
    "end": "3293200"
  },
  {
    "text": "implemented this you can go talk to them uh but the way I enabled this in my system is actually very straightforward",
    "start": "3293200",
    "end": "3299200"
  },
  {
    "text": "I just had this enable outbox and that was basically all I needed to do so this",
    "start": "3299200",
    "end": "3304920"
  },
  {
    "text": "is this is not an easy thing to uh to be able to do yourself so uh I would encourage you to look for third-party uh",
    "start": "3304920",
    "end": "3311799"
  },
  {
    "text": "libraries to help you do this for you so in netland like uh inservice bus does this uh mass transit has this feature as",
    "start": "3311799",
    "end": "3319440"
  },
  {
    "text": "well um what other ones out there Rebus I think also supports this what other buses out there at least the those are",
    "start": "3319440",
    "end": "3326480"
  },
  {
    "text": "the most popular ones at least that I I know of um we do have to do some additional configuration that our our",
    "start": "3326480",
    "end": "3332720"
  },
  {
    "text": "broker or this this bus Library does need to have a connection to our business data and so in this case I was",
    "start": "3332720",
    "end": "3339280"
  },
  {
    "text": "using uh rabbit mq and Cosmos because why not um so I have to tell the broker",
    "start": "3339280",
    "end": "3348119"
  },
  {
    "text": "this is how you connect to my business data and inside of that uh database it will create the the structures it needs",
    "start": "3348119",
    "end": "3354559"
  },
  {
    "text": "to be able to store the messages in outbox so behind the scenes there will be an outbox table that gets uh that",
    "start": "3354559",
    "end": "3360359"
  },
  {
    "text": "gets persisted there um and then finally when we have the actual processing of this the order",
    "start": "3360359",
    "end": "3366520"
  },
  {
    "text": "fulfillment so we had this uh this order created event uh this order created",
    "start": "3366520",
    "end": "3372039"
  },
  {
    "text": "event is the message owned by the orders service because it it owns the the the",
    "start": "3372039",
    "end": "3378880"
  },
  {
    "text": "uh business knowledge of when an order is created so it owns this message as well that's over here in my order",
    "start": "3378880",
    "end": "3384400"
  },
  {
    "text": "contracts there's my order created event and inside of it it's got some uh kind",
    "start": "3384400",
    "end": "3389880"
  },
  {
    "text": "of basic set of information has the ID of the order as well as the list of uh",
    "start": "3389880",
    "end": "3395000"
  },
  {
    "text": "line items that you're going to get purchased that's uh for that as well um so that event gets published to",
    "start": "3395000",
    "end": "3404039"
  },
  {
    "text": "the order fulfillment Saga now this is called Saga because it infl The Saga",
    "start": "3404039",
    "end": "3409400"
  },
  {
    "text": "pattern but in and service bus this is a process manager that's what this thing is it's it's a code uh a code level uh",
    "start": "3409400",
    "end": "3417839"
  },
  {
    "text": "representation of a process manager so in my process manager I will",
    "start": "3417839",
    "end": "3424039"
  },
  {
    "text": "have all the messages that I need to worry about in terms of managing this overall business process and so that's",
    "start": "3424039",
    "end": "3429680"
  },
  {
    "text": "what all these different I am started by I am handled blah blah blah these are all the different events coming in that",
    "start": "3429680",
    "end": "3435160"
  },
  {
    "text": "we need to manage uh inside of this overall interaction so it starts off with just",
    "start": "3435160",
    "end": "3442359"
  },
  {
    "text": "handle and we out of the gate had to worry about what happens if I get this",
    "start": "3442359",
    "end": "3447720"
  },
  {
    "text": "message more than once what if the what if the the order's already been canceled because I could have received order",
    "start": "3447720",
    "end": "3453200"
  },
  {
    "text": "canel before order created like that can happen and we need to worry about this in these sort of async",
    "start": "3453200",
    "end": "3459839"
  },
  {
    "text": "scenarios uh we do like we capture all the information here and then we said we needed to send stock requests over to",
    "start": "3459839",
    "end": "3466559"
  },
  {
    "text": "the stock service and so that stock uh request message has the order ID the",
    "start": "3466559",
    "end": "3472280"
  },
  {
    "text": "product ID that you want to order and then the amount you've requested this this message is owned by",
    "start": "3472280",
    "end": "3477720"
  },
  {
    "text": "the inventory service and so it also has messages back to saying stock request confirmed or stock request",
    "start": "3477720",
    "end": "3485160"
  },
  {
    "text": "denied so as I get information in from these other events saying order approved",
    "start": "3485160",
    "end": "3492039"
  },
  {
    "text": "what I'll do is I'll keep track of what things I've uh from a business perspective uh I I'll I'll keep track of",
    "start": "3492039",
    "end": "3498160"
  },
  {
    "text": "what I've received here and then process the business logic of has the uh can I",
    "start": "3498160",
    "end": "3504480"
  },
  {
    "text": "fulfill this order or do I need to to cancel this order so here I have if data is if if I've canceled the order then I",
    "start": "3504480",
    "end": "3511000"
  },
  {
    "text": "got to process the cancellation which is complex stuff but basically cancel the order and return the stock and if it was",
    "start": "3511000",
    "end": "3519559"
  },
  {
    "text": "successful check for Success uh well I can't be canceled so well this uh this",
    "start": "3519559",
    "end": "3526599"
  },
  {
    "text": "order can't be canceled that is um and we had that business rule that says a stock uh an order is uh we can fulfill",
    "start": "3526599",
    "end": "3533319"
  },
  {
    "text": "an order when all the stocks are confirmed and orders approved that's represented by that line of code there",
    "start": "3533319",
    "end": "3539839"
  },
  {
    "text": "and then if both of those things are true then I can publish that order fulfillment successful but all this started out with",
    "start": "3539839",
    "end": "3547240"
  },
  {
    "text": "the Whiteboard diagram or Miro Myro whatever so we are designing these interaction so it comes time to the code",
    "start": "3547240",
    "end": "3553839"
  },
  {
    "text": "this is actually pretty simple the complex part was designing the conversation between all these different",
    "start": "3553839",
    "end": "3559400"
  },
  {
    "text": "systems and services all right so let go and wrap",
    "start": "3559400",
    "end": "3564440"
  },
  {
    "text": "things up here all right so in order for us to uh in",
    "start": "3564440",
    "end": "3572280"
  },
  {
    "text": "order for us to enable this this transactional outbox inbox pattern the first thing we have to do is find where",
    "start": "3572280",
    "end": "3578880"
  },
  {
    "text": "the transactional boundaries are in our system based on each database what is that transactional boundary that it has",
    "start": "3578880",
    "end": "3584559"
  },
  {
    "text": "so in SQL for example like we we can do multi-table transactions and so uh in",
    "start": "3584559",
    "end": "3590520"
  },
  {
    "text": "that database we'll have an outbox table and an inbox table although you can combine them um that will have the",
    "start": "3590520",
    "end": "3595640"
  },
  {
    "text": "messages I need to send out the door uh and we'll also store the messages we've",
    "start": "3595640",
    "end": "3601240"
  },
  {
    "text": "received all right so just some final lessons here our our picture became much",
    "start": "3601240",
    "end": "3606799"
  },
  {
    "text": "more complicated with all these different things going around the scene so this is uh this kind of distributed",
    "start": "3606799",
    "end": "3612640"
  },
  {
    "text": "system uh interaction is much more complicated than we had before but if you're in the case in the situation where you're kind of forced into the",
    "start": "3612640",
    "end": "3619680"
  },
  {
    "text": "situation of being in a distributed system world then we need to be able to use these kinds of patterns to help",
    "start": "3619680",
    "end": "3626480"
  },
  {
    "text": "guarantee that these overall business transactions can succeed or fail final lessons learn uh distributed",
    "start": "3626480",
    "end": "3633400"
  },
  {
    "text": "transactions are quote easy locally right it can run I can do distributed transactions on this laptop um but",
    "start": "3633400",
    "end": "3639599"
  },
  {
    "text": "they're hard or slimpossible when you're actually distributed which is ironic right there it's actually really really",
    "start": "3639599",
    "end": "3645599"
  },
  {
    "text": "hard to do distributed transactions in a distributed scenario so instead what we'll do is find the transactional",
    "start": "3645599",
    "end": "3650880"
  },
  {
    "text": "boundary of each of the different B business data items in our our distributed system and use outbox and",
    "start": "3650880",
    "end": "3656839"
  },
  {
    "text": "inbox patterns to coordinate the communication between these different services so if youall have more",
    "start": "3656839",
    "end": "3662640"
  },
  {
    "text": "questions about this I'll be hanging out afterwards at the inservice bus particular Booth so we can talk more",
    "start": "3662640",
    "end": "3667920"
  },
  {
    "text": "outbox inbox junk um otherwise I hope you all have a great rest of the conference and thank you for coming",
    "start": "3667920",
    "end": "3673920"
  },
  {
    "text": "[Applause]",
    "start": "3673920",
    "end": "3681359"
  },
  {
    "text": "he",
    "start": "3688559",
    "end": "3691119"
  }
]