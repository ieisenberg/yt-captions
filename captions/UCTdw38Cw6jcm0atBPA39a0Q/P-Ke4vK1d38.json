[
  {
    "text": "leave and hello my name is hakko uh i'm based in new zealand",
    "start": "5680",
    "end": "11519"
  },
  {
    "text": "i work at zero zero is everywhere but i work in the new zealand zero",
    "start": "11519",
    "end": "17119"
  },
  {
    "text": "and um well you guessed it i was born in the year of the monkey as the monkey face um",
    "start": "17119",
    "end": "24960"
  },
  {
    "text": "welcome to dude where's my class aka culture shock front end",
    "start": "24960",
    "end": "33119"
  },
  {
    "text": "and speaking of which um when i first came to new zealand i was kindly given this book called",
    "start": "35120",
    "end": "42960"
  },
  {
    "text": "culture shock new zealand and it was hilarious now one of my favorites from the book",
    "start": "42960",
    "end": "50399"
  },
  {
    "text": "it's um how there are always some kiwis or new zealanders",
    "start": "50399",
    "end": "56000"
  },
  {
    "text": "that's how we call ourselves kiwis who would walk in bare feet",
    "start": "56000",
    "end": "62079"
  },
  {
    "text": "anywhere anytime i mean it could be a gravelly road in biting cold winter",
    "start": "62079",
    "end": "68880"
  },
  {
    "text": "of course by biting coat i mean like 10 degrees celsius",
    "start": "68880",
    "end": "74080"
  },
  {
    "text": "you're gonna hate me and there you will see some kiwis walking in their feet and",
    "start": "74080",
    "end": "80560"
  },
  {
    "text": "naturally there would be small rocks or pointed objects lying around somewhere and the true kiwi",
    "start": "80560",
    "end": "88640"
  },
  {
    "text": "as they say should feel no such pain when they stepped on one of these things",
    "start": "88640",
    "end": "94799"
  },
  {
    "text": "and when you do see somebody all of a sudden all of a sudden grabbing their feet and crying out loud in tears you would",
    "start": "94799",
    "end": "102240"
  },
  {
    "text": "know these are the people like me who were just trying to fit in",
    "start": "102240",
    "end": "108880"
  },
  {
    "text": "despite the nonchalant comment from the kiwis new he's new",
    "start": "108880",
    "end": "116399"
  },
  {
    "text": "you know where i'm going with this front end backhand",
    "start": "116399",
    "end": "123439"
  },
  {
    "text": "um see what else hey what makes you",
    "start": "123439",
    "end": "128640"
  },
  {
    "text": "qualified to speak on this topic i would like to think it's because i've kind of been",
    "start": "128640",
    "end": "134800"
  },
  {
    "text": "burning it at both ends um i've been shifting focus um",
    "start": "134800",
    "end": "141760"
  },
  {
    "text": "between front end and back end and back on the front end of the last 80 years i mean the last few",
    "start": "141760",
    "end": "147520"
  },
  {
    "text": "years um i'm a bit nervous um now these frameworks and languages kind",
    "start": "147520",
    "end": "155040"
  },
  {
    "text": "of sum up my transition one side to the other you notice how i list languages for",
    "start": "155040",
    "end": "161519"
  },
  {
    "text": "front-end for languages for back-end and frameworks for front-end that's just",
    "start": "161519",
    "end": "167200"
  },
  {
    "text": "industry standard in case you haven't got the memo okay also it's important to clarify react",
    "start": "167200",
    "end": "174720"
  },
  {
    "text": "people insist react is not a framework it's just a library",
    "start": "174720",
    "end": "181200"
  },
  {
    "text": "now i thought you should know because of my experience from both ends it puts me in a very enviable",
    "start": "181200",
    "end": "188560"
  },
  {
    "text": "position in that i can make jokes about both front end and backhand developers",
    "start": "188560",
    "end": "194319"
  },
  {
    "text": "so here we go are you comfortable up there front-end developers",
    "start": "194319",
    "end": "201840"
  },
  {
    "text": "and this one poor lion what do you think is a man in a line",
    "start": "204239",
    "end": "210840"
  },
  {
    "text": "suit i mean it's not much better is it i'm sorry to have given you that thought",
    "start": "210840",
    "end": "217360"
  },
  {
    "text": "here it's a very artistic rendition of front end",
    "start": "217680",
    "end": "223519"
  },
  {
    "text": "and this rendition of backhand is a bit too objective i'm afraid",
    "start": "224400",
    "end": "231040"
  },
  {
    "text": "what's the typical backhand attitude towards front end",
    "start": "233040",
    "end": "238159"
  },
  {
    "text": "well it used to be something like this",
    "start": "238840",
    "end": "243519"
  },
  {
    "text": "why can't you be normal",
    "start": "246640",
    "end": "250239"
  },
  {
    "text": "well this a bit of sarcasm mind you not all back-end developers",
    "start": "252000",
    "end": "257680"
  },
  {
    "text": "these days know how to join tables okay because we build micro services",
    "start": "257680",
    "end": "264400"
  },
  {
    "text": "i'm sorry about the sockets tom i just can't help it the mental burden of being a developer",
    "start": "264400",
    "end": "270400"
  },
  {
    "text": "for so many years is tough and more sarcasm",
    "start": "270400",
    "end": "277680"
  },
  {
    "text": "and more gnarly comments now honestly i still think at some point",
    "start": "280800",
    "end": "286639"
  },
  {
    "text": "of time and maybe in the distant past some of these statements might have been plausible",
    "start": "286639",
    "end": "292560"
  },
  {
    "text": "maybe minus the attitude but not anymore",
    "start": "292560",
    "end": "297680"
  },
  {
    "text": "not called to say these things these days times have changed front end have revolutionized itself so",
    "start": "297680",
    "end": "304560"
  },
  {
    "text": "many times and i feel we need to look at look at with a fresh pair of eyes",
    "start": "304560",
    "end": "311120"
  },
  {
    "text": "every week some of the things they do are actually kind of cool for front end",
    "start": "311120",
    "end": "318240"
  },
  {
    "text": "and that it's what i want to share with you today",
    "start": "318240",
    "end": "323280"
  },
  {
    "text": "of course the front-end developers wouldn't want me to tell you they're called right they know they're cool and",
    "start": "323600",
    "end": "329199"
  },
  {
    "text": "possibly act on that assumption that's a joke",
    "start": "329199",
    "end": "334320"
  },
  {
    "text": "um i told you i could make jokes about both ends let's not get offended",
    "start": "334320",
    "end": "341759"
  },
  {
    "text": "so the content of this talk will look at a few shocking and usual",
    "start": "342560",
    "end": "348800"
  },
  {
    "text": "suspects of front end um quite a few anecdotes misconceptions",
    "start": "348800",
    "end": "354720"
  },
  {
    "text": "party tricks even there would be a few moments of disbelief",
    "start": "354720",
    "end": "360000"
  },
  {
    "text": "surprise epiphany or just good fun",
    "start": "360000",
    "end": "365520"
  },
  {
    "text": "i'll share a few code examples um quick demos some rationalization",
    "start": "365520",
    "end": "372880"
  },
  {
    "text": "you don't mind disclaimer very important there'll be a lot of opinions a few",
    "start": "372880",
    "end": "380639"
  },
  {
    "text": "facts everything will be limited by my personal experience",
    "start": "380639",
    "end": "385759"
  },
  {
    "text": "this is not an overview and you should be very warned this is not a completely renting session",
    "start": "385759",
    "end": "393360"
  },
  {
    "text": "uh credit may be given when not you or vice versa",
    "start": "393360",
    "end": "398800"
  },
  {
    "text": "and this is not to be taken seriously like everything front-end that's a joke no i mean i don't mean",
    "start": "398800",
    "end": "405840"
  },
  {
    "text": "front-end as a joke i mean that was a joke okay youth so",
    "start": "405840",
    "end": "413840"
  },
  {
    "text": "before i get started to write code for front-end in anger",
    "start": "413840",
    "end": "420560"
  },
  {
    "text": "some smart smartass in the team created the survey to see how confident we felt about",
    "start": "420560",
    "end": "426240"
  },
  {
    "text": "certain technologies as the most mostly backhandy developer",
    "start": "426240",
    "end": "431280"
  },
  {
    "text": "these were my answers mostly nine out of ten of course pretty",
    "start": "431280",
    "end": "437120"
  },
  {
    "text": "confident brave new world or do you sense a bit of uh disaster for me already",
    "start": "437120",
    "end": "444319"
  },
  {
    "text": "by the way you should totally do this survey for your team i guarantee you will love the results um",
    "start": "444319",
    "end": "451360"
  },
  {
    "text": "well let's see how i fared over the years without further ado let's get the journey underway um we'll start with",
    "start": "451360",
    "end": "458400"
  },
  {
    "text": "this easy target html",
    "start": "458400",
    "end": "464639"
  },
  {
    "text": "so on my first days i was given the task of writing a html file from scratch",
    "start": "464639",
    "end": "470639"
  },
  {
    "text": "the insulting right to an experienced developer i seriously thought we must have",
    "start": "470639",
    "end": "476800"
  },
  {
    "text": "automated such tedious tasks dreamweaver anyone",
    "start": "476800",
    "end": "482720"
  },
  {
    "text": "then i realize even in this age of modernization it's still needed sometimes to manually",
    "start": "482720",
    "end": "488960"
  },
  {
    "text": "write out a html doc never mind no problem boss um give me",
    "start": "488960",
    "end": "494639"
  },
  {
    "text": "five minutes and i shall just happily dive away you notice i said div away anecdotally",
    "start": "494639",
    "end": "502639"
  },
  {
    "text": "um with a new zealand accent we call developers endearment divs hello thieves",
    "start": "502639",
    "end": "510879"
  },
  {
    "text": "i love it okay five minutes later including a bit of watercolor talk",
    "start": "510879",
    "end": "515919"
  },
  {
    "text": "this is what i turned in and my colleagues were like um with the smirk",
    "start": "515919",
    "end": "521839"
  },
  {
    "text": "on their faces you guessed the bear came deep",
    "start": "521839",
    "end": "528480"
  },
  {
    "text": "turns out it's not good practice to call everything at div div would be the tag of last resort",
    "start": "530800",
    "end": "538959"
  },
  {
    "text": "professional html writers they're meticulous with what tech to choose",
    "start": "538959",
    "end": "546000"
  },
  {
    "text": "each tech should clearly express what the content will be therefore human beings as well as search",
    "start": "546000",
    "end": "552320"
  },
  {
    "text": "engines will have no problem understanding what exactly the tags are about",
    "start": "552320",
    "end": "558959"
  },
  {
    "text": "now there is this movement called semantic html tag it as you mean it",
    "start": "558959",
    "end": "566560"
  },
  {
    "text": "only if you do this we can get good seo results good good accessibility",
    "start": "566560",
    "end": "572880"
  },
  {
    "text": "expressive code readable code for developers we still need a div but remember to div",
    "start": "572880",
    "end": "579360"
  },
  {
    "text": "in small places only and div in moderation",
    "start": "579360",
    "end": "584240"
  },
  {
    "text": "so that was good outsold and so should you be",
    "start": "584800",
    "end": "589839"
  },
  {
    "text": "i would silly enough to start looking at page sources of famous websites and i tell you what i",
    "start": "589839",
    "end": "596080"
  },
  {
    "text": "don't really like what i found",
    "start": "596080",
    "end": "599839"
  },
  {
    "text": "mind you this is not just any website it's quite a famous website for",
    "start": "601839",
    "end": "606880"
  },
  {
    "text": "front-end development these days i mean come on people and you see front",
    "start": "606880",
    "end": "612160"
  },
  {
    "text": "end it's um complicated let's keep that in mind",
    "start": "612160",
    "end": "618399"
  },
  {
    "text": "but don't despair the header nav section main article aside and footer they're sweet",
    "start": "618399",
    "end": "625440"
  },
  {
    "text": "and really helpful so next time you find yourself diving away",
    "start": "625440",
    "end": "630880"
  },
  {
    "text": "think about semantic html let's quickly move on to a slightly more",
    "start": "630880",
    "end": "638880"
  },
  {
    "text": "interesting topic something we all love don't we",
    "start": "638880",
    "end": "644640"
  },
  {
    "text": "and i'm quite sure we're all quite confident about our css skills i was but once i started working on css",
    "start": "644640",
    "end": "653040"
  },
  {
    "text": "it's always a bit like this",
    "start": "653040",
    "end": "661839"
  },
  {
    "text": "i could watch that all day it's a bit long so i was assigned this um oxford",
    "start": "673600",
    "end": "680560"
  },
  {
    "text": "task one day to style the list of buff as parsley coma sar sage comma rosemary",
    "start": "680560",
    "end": "689279"
  },
  {
    "text": "comma and time as below this is a good example in semantic html",
    "start": "689279",
    "end": "697440"
  },
  {
    "text": "you have a ul tag but it's good for semantics but the",
    "start": "697440",
    "end": "703519"
  },
  {
    "text": "formatted text with uh oxford thomas is better for",
    "start": "703519",
    "end": "708640"
  },
  {
    "text": "reading see css is not just for looks how do you feel about this tiny task i",
    "start": "708640",
    "end": "714639"
  },
  {
    "text": "must say i felt pretty good so i rolled up my sleeves and stacked up a few sugary drinks and",
    "start": "714639",
    "end": "722160"
  },
  {
    "text": "there we go i partially saved rosemary in this list",
    "start": "722160",
    "end": "730160"
  },
  {
    "text": "is not formatted now what do i do well first of all i need to make this",
    "start": "730160",
    "end": "736880"
  },
  {
    "text": "whole thing one line so this is what i would do",
    "start": "736880",
    "end": "741920"
  },
  {
    "text": "still got my css skills beautiful now surely to add commas i need to show",
    "start": "741920",
    "end": "748800"
  },
  {
    "text": "off my javascript skills nine out of ten remember so",
    "start": "748800",
    "end": "755839"
  },
  {
    "text": "is i'll give you a few seconds to read over that no problem and voila okay",
    "start": "756839",
    "end": "764320"
  },
  {
    "text": "i can safely claim eight story points",
    "start": "764320",
    "end": "768639"
  },
  {
    "text": "however there was not liked by my front-end thieves how else would i do it they said",
    "start": "770160",
    "end": "778399"
  },
  {
    "text": "they want it done without any javascript because you know everybody hates javascript",
    "start": "778399",
    "end": "785279"
  },
  {
    "text": "so my beautiful javascript code is no good",
    "start": "785279",
    "end": "791839"
  },
  {
    "text": "and what i eventually did with the help of my leave friends",
    "start": "793360",
    "end": "802079"
  },
  {
    "text": "i can comment and comment properly",
    "start": "802639",
    "end": "806959"
  },
  {
    "text": "is this",
    "start": "809040",
    "end": "814320"
  },
  {
    "text": "give you a few seconds to read but this basically says for every list item",
    "start": "814320",
    "end": "821199"
  },
  {
    "text": "except the last one append a comma at the end",
    "start": "821199",
    "end": "829360"
  },
  {
    "text": "and for the very last list item put end in front",
    "start": "829360",
    "end": "837680"
  },
  {
    "text": "look here i can claim my points",
    "start": "839199",
    "end": "845199"
  },
  {
    "text": "they go magic couldn't write javascript",
    "start": "852560",
    "end": "859120"
  },
  {
    "text": "anecdotally if you remember that i'll show you again",
    "start": "862720",
    "end": "868000"
  },
  {
    "text": "that's a lot of code right that's it there's a similar selector if you look",
    "start": "869199",
    "end": "877199"
  },
  {
    "text": "at this if you can see my kaiser can you guess what front-end people call it",
    "start": "877199",
    "end": "885839"
  },
  {
    "text": "the owl selector",
    "start": "887440",
    "end": "890800"
  },
  {
    "text": "see front end is cute eh",
    "start": "893360",
    "end": "899040"
  },
  {
    "text": "okay another day i was asked to um do this task make this crazy looking",
    "start": "899040",
    "end": "904639"
  },
  {
    "text": "loading animation being a very experienced developer i knew at that moment",
    "start": "904639",
    "end": "910560"
  },
  {
    "text": "is my chance to show off my amazing animation editing skills right so i asked my boss hey can i get a",
    "start": "910560",
    "end": "917040"
  },
  {
    "text": "license to this animation software please and they looked at me and went you guessed it back end",
    "start": "917040",
    "end": "926079"
  },
  {
    "text": "now the answer to this deezing animation task is of course css again",
    "start": "926079",
    "end": "932639"
  },
  {
    "text": "just so you believe me",
    "start": "932639",
    "end": "935759"
  },
  {
    "text": "this is the code now look at html you have to forgive me for",
    "start": "938480",
    "end": "945519"
  },
  {
    "text": "my arbitrary choice of text that can contradict my previous slides a",
    "start": "945519",
    "end": "950959"
  },
  {
    "text": "little look there's no javascript well done hackle",
    "start": "950959",
    "end": "956880"
  },
  {
    "text": "currently is not very exciting that's because it's front end and that's a joke",
    "start": "956880",
    "end": "963920"
  },
  {
    "text": "it's because i disabled the animation of course if i do this to enable the animation",
    "start": "963920",
    "end": "971199"
  },
  {
    "text": "we'll see what will happen",
    "start": "971199",
    "end": "974240"
  },
  {
    "text": "whoa we see bubbles growing and shrinking",
    "start": "976399",
    "end": "983680"
  },
  {
    "text": "if i uncomment this piece of code",
    "start": "983680",
    "end": "988399"
  },
  {
    "text": "the bubbles would have a delay in their animation",
    "start": "988959",
    "end": "993279"
  },
  {
    "text": "how is the heart i'm so proud now of course that's all",
    "start": "994399",
    "end": "1002079"
  },
  {
    "text": "fancy the real trick is in this keyframe thing",
    "start": "1002079",
    "end": "1008320"
  },
  {
    "text": "you see it declares a few key points",
    "start": "1008320",
    "end": "1014079"
  },
  {
    "text": "that are relative to the duration of the animation each would represent a certain point in",
    "start": "1014079",
    "end": "1020639"
  },
  {
    "text": "time and each key point would have its own styles and the browser would take all these",
    "start": "1020639",
    "end": "1027918"
  },
  {
    "text": "things and create animations for us declarative i love that",
    "start": "1027919",
    "end": "1035600"
  },
  {
    "text": "so next time you want to build some simple animations think about css",
    "start": "1037439",
    "end": "1043678"
  },
  {
    "text": "i would be remiss not to mention there are people who took css to the extreme",
    "start": "1045839",
    "end": "1052240"
  },
  {
    "text": "and really show off what you can do with pure css for example you want to check out this",
    "start": "1052240",
    "end": "1058880"
  },
  {
    "text": "portrait by diana adrian",
    "start": "1058880",
    "end": "1063600"
  },
  {
    "text": "it's better to look at in the browser",
    "start": "1064320",
    "end": "1068159"
  },
  {
    "text": "look this is all divs or css could you believe it it's madness",
    "start": "1069520",
    "end": "1078080"
  },
  {
    "text": "what you can do with css so the moral of the story next time you",
    "start": "1078080",
    "end": "1083919"
  },
  {
    "text": "need a portrait done think about css",
    "start": "1083919",
    "end": "1088320"
  },
  {
    "text": "just takes a few years i guess what i've learned css can be ugly and",
    "start": "1089280",
    "end": "1096240"
  },
  {
    "text": "unpredictable because of the many-to-many relationships between rules and elements",
    "start": "1096240",
    "end": "1104400"
  },
  {
    "text": "there's no easy way to find out exactly what styles are applied to an element before runtime by",
    "start": "1104640",
    "end": "1110400"
  },
  {
    "text": "runtiming with the help of devtools as in browsers",
    "start": "1110400",
    "end": "1116000"
  },
  {
    "text": "scaling css is a massive challenge however there are solutions revolving",
    "start": "1116000",
    "end": "1122320"
  },
  {
    "text": "around scoping naming conventions and something strange called css in",
    "start": "1122320",
    "end": "1129520"
  },
  {
    "text": "javascript yak since we mentioned the javascript um",
    "start": "1129520",
    "end": "1137360"
  },
  {
    "text": "let's move very quickly to the dreaded topic of javascript one that makes",
    "start": "1137360",
    "end": "1142720"
  },
  {
    "text": "a lot of us also including the shutter a little in code sweat",
    "start": "1142720",
    "end": "1150960"
  },
  {
    "text": "and if you're one of these unlucky people like me you run into something like this one day",
    "start": "1150960",
    "end": "1157440"
  },
  {
    "text": "now within a top level function not a method within the class mind you",
    "start": "1157440",
    "end": "1164960"
  },
  {
    "text": "people write this dot name as a c-sharp programmer this confused",
    "start": "1164960",
    "end": "1172080"
  },
  {
    "text": "the hell out of me surely this is bad code let's see",
    "start": "1172080",
    "end": "1177360"
  },
  {
    "text": "in action actually",
    "start": "1177360",
    "end": "1180160"
  },
  {
    "text": "this is our code sure enough this won't work right",
    "start": "1183520",
    "end": "1189600"
  },
  {
    "text": "and let's give it a spin",
    "start": "1189600",
    "end": "1193840"
  },
  {
    "text": "see undefined doesn't work and i thought this must be useless",
    "start": "1200320",
    "end": "1208720"
  },
  {
    "text": "however then i learned the proper way to use this function is to bind an object to it and this",
    "start": "1208720",
    "end": "1216559"
  },
  {
    "text": "object will then become this so let's create a class",
    "start": "1216559",
    "end": "1224159"
  },
  {
    "text": "oh familiar a person with a name field create",
    "start": "1224159",
    "end": "1231600"
  },
  {
    "text": "a person and pass it to this bind of my name let's see what this does",
    "start": "1231600",
    "end": "1239279"
  },
  {
    "text": "oh there you go we got the name lucky but if we look at the function it",
    "start": "1242000",
    "end": "1248720"
  },
  {
    "text": "doesn't say this should only be person",
    "start": "1248720",
    "end": "1254080"
  },
  {
    "text": "it would be fair if we pass anything with an a to it",
    "start": "1254240",
    "end": "1258799"
  },
  {
    "text": "that's how we can do this",
    "start": "1260240",
    "end": "1263840"
  },
  {
    "text": "we've got hux",
    "start": "1265280",
    "end": "1268000"
  },
  {
    "text": "how do you feel so this is weird we got it man it doesn't make any sense",
    "start": "1272559",
    "end": "1280400"
  },
  {
    "text": "right here let me try to rationalize a little",
    "start": "1280400",
    "end": "1287360"
  },
  {
    "text": "this is relative it's contextual and if there's no context it cannot mean",
    "start": "1287360",
    "end": "1293120"
  },
  {
    "text": "anything and what does that mean it is very much like in real life",
    "start": "1293120",
    "end": "1299520"
  },
  {
    "text": "if i just say out of the blue this is good and you will ask me",
    "start": "1299520",
    "end": "1305919"
  },
  {
    "text": "what is good and so it happens javascript is much",
    "start": "1305919",
    "end": "1311200"
  },
  {
    "text": "like real life this means different things and used in different places",
    "start": "1311200",
    "end": "1316640"
  },
  {
    "text": "totally reasonable although not always easy to use won't you so here you go",
    "start": "1316640",
    "end": "1324159"
  },
  {
    "text": "a different way to do object oriented programming you just don't know what this is",
    "start": "1324159",
    "end": "1333679"
  },
  {
    "text": "if i take this a bit further it was a wise man once said about object oriented programming",
    "start": "1333679",
    "end": "1340559"
  },
  {
    "text": "and this he said this it's just a hidden first parameter to a method",
    "start": "1340559",
    "end": "1347760"
  },
  {
    "text": "and i think javascript takes this quite seriously and maybe a bit too far you'll see in",
    "start": "1347760",
    "end": "1354400"
  },
  {
    "text": "golang or c-sharp as an example there are similar ways to add a method to type so top left let's go lay",
    "start": "1354400",
    "end": "1363280"
  },
  {
    "text": "right that's c sharp extension methods",
    "start": "1363280",
    "end": "1368080"
  },
  {
    "text": "if you look at the top bottom one it's not very similar is it however if you look at the bottom",
    "start": "1369039",
    "end": "1376960"
  },
  {
    "text": "right one which is in typescript you'll see the similarity won't you",
    "start": "1376960",
    "end": "1382799"
  },
  {
    "text": "especially to the c-sharp version",
    "start": "1382799",
    "end": "1389520"
  },
  {
    "text": "making more sense there hopefully so this dynamic binding allows us to do things that are",
    "start": "1389520",
    "end": "1395840"
  },
  {
    "text": "not really possible in most other languages however with that said there are still",
    "start": "1395840",
    "end": "1402240"
  },
  {
    "text": "people who cannot deal with this pun intended",
    "start": "1402240",
    "end": "1407760"
  },
  {
    "text": "is it good or bad i don't know but it certainly makes interesting party talk",
    "start": "1407760",
    "end": "1413039"
  },
  {
    "text": "doesn't it",
    "start": "1413039",
    "end": "1417840"
  },
  {
    "text": "okay more party talk very popular topic these days",
    "start": "1419520",
    "end": "1426559"
  },
  {
    "text": "as a front-end developer if you don't carefully blurt out carrying on an hourly basis it cannot be",
    "start": "1426559",
    "end": "1432799"
  },
  {
    "text": "considered cool curry and partial applications this is how you would do it in most programming",
    "start": "1432799",
    "end": "1439039"
  },
  {
    "text": "languages as on the screen by nesting functions within functions each with one parameter only",
    "start": "1439039",
    "end": "1446400"
  },
  {
    "text": "the problem with this though is there's so much code to write bow retail carrying and partial",
    "start": "1446400",
    "end": "1452000"
  },
  {
    "text": "application that go hand in hand question is can i get partial application without carrying",
    "start": "1452000",
    "end": "1459760"
  },
  {
    "text": "well it's not impossible",
    "start": "1459760",
    "end": "1463600"
  },
  {
    "text": "there you go that's what we saw previously good old good old waka of carrying",
    "start": "1468720",
    "end": "1477440"
  },
  {
    "text": "we'll see how they run but at the bottom there's a strange thing that uses bind",
    "start": "1477440",
    "end": "1485440"
  },
  {
    "text": "on plus we'll give it now remember would be this and one",
    "start": "1485440",
    "end": "1493760"
  },
  {
    "text": "and we don't because this is not used here we don't",
    "start": "1493760",
    "end": "1499120"
  },
  {
    "text": "need a context after we bind it we should also be able to run it now",
    "start": "1499120",
    "end": "1506320"
  },
  {
    "text": "let me type that in and see if it works",
    "start": "1506320",
    "end": "1510799"
  },
  {
    "text": "ah gives us the same result",
    "start": "1512840",
    "end": "1517360"
  },
  {
    "text": "how do you feel about that",
    "start": "1518080",
    "end": "1521120"
  },
  {
    "text": "so see we get partial application for free",
    "start": "1523200",
    "end": "1529279"
  },
  {
    "text": "quite different isn't it so next time you find yourself handcrafting carried functions",
    "start": "1529279",
    "end": "1534880"
  },
  {
    "text": "think about binding javascript oh this is my favorite topic about",
    "start": "1534880",
    "end": "1540159"
  },
  {
    "text": "javascript now here's a flow for a client application with a feature that can can't be simpler",
    "start": "1540159",
    "end": "1546880"
  },
  {
    "text": "it gets a member profile on the server deserializes it to the member object so the client-side",
    "start": "1546880",
    "end": "1553760"
  },
  {
    "text": "code can understand and manipulate it the client's application then updates",
    "start": "1553760",
    "end": "1559360"
  },
  {
    "text": "the address to a beautiful ui i'm quite sure then it serializes it and puts it back",
    "start": "1559360",
    "end": "1564960"
  },
  {
    "text": "to the server pretty reasonable right until one day",
    "start": "1564960",
    "end": "1570720"
  },
  {
    "text": "somebody wants to add a new field called mobile to the member profile",
    "start": "1570720",
    "end": "1576399"
  },
  {
    "text": "but the client side has yet to be updated right but it's always in lag it doesn't know the existence of",
    "start": "1576559",
    "end": "1584320"
  },
  {
    "text": "this new field and you won't like what's going to happen next",
    "start": "1584320",
    "end": "1590480"
  },
  {
    "text": "well through deserialization and serialization by the time the put request arrives at the server",
    "start": "1590480",
    "end": "1597039"
  },
  {
    "text": "the mobile field is lost have you come across this before you have to",
    "start": "1597039",
    "end": "1603840"
  },
  {
    "text": "you know use different workarounds also for hacks such as using patch for put",
    "start": "1603840",
    "end": "1610320"
  },
  {
    "text": "or overloading null values with all sorts of meanings",
    "start": "1610320",
    "end": "1615360"
  },
  {
    "text": "this is quite a big problem in my opinion how we currently do serialization and deserialization let me explain a bit more",
    "start": "1615360",
    "end": "1623519"
  },
  {
    "text": "so this is what i consider an ideal pair of d serial d serialized and serialized functions",
    "start": "1625039",
    "end": "1630400"
  },
  {
    "text": "the gist is if we serialize an object into a string then deserialize it",
    "start": "1630400",
    "end": "1636320"
  },
  {
    "text": "we should get the exact same object back reasonable conversely if we deserialize the string",
    "start": "1636320",
    "end": "1643360"
  },
  {
    "text": "to an object and then serialize it we should get the exact same stream back shouldn't we",
    "start": "1643360",
    "end": "1650320"
  },
  {
    "text": "well sounds reasonable in fact is a lot of so-called lossless serializers out there they",
    "start": "1650799",
    "end": "1657520"
  },
  {
    "text": "can't really satisfy this seemingly simple criteria",
    "start": "1657520",
    "end": "1662799"
  },
  {
    "text": "now if this is not satisfied we've seen we will never be able to add a new",
    "start": "1663279",
    "end": "1668720"
  },
  {
    "text": "mobile field to our beautiful application without breaking the user experience at",
    "start": "1668720",
    "end": "1673919"
  },
  {
    "text": "least for a period of time good news is this is never a problem with javascript",
    "start": "1673919",
    "end": "1680399"
  },
  {
    "text": "well because json stands for javascript of object notation so if we are using json",
    "start": "1680399",
    "end": "1687840"
  },
  {
    "text": "and use javascript for both content and back end",
    "start": "1687840",
    "end": "1692880"
  },
  {
    "text": "no serialization or decentralization is ever needed our application just happily takes a",
    "start": "1692880",
    "end": "1699360"
  },
  {
    "text": "json does its thing gives us a json back no fuss no hassle",
    "start": "1699360",
    "end": "1706240"
  },
  {
    "text": "tell you what i personally know people or organizations choose",
    "start": "1706240",
    "end": "1712320"
  },
  {
    "text": "javascript just for this reason",
    "start": "1712320",
    "end": "1716000"
  },
  {
    "text": "if we go back to the previous notation as far as json concerned javascript has",
    "start": "1718320",
    "end": "1725360"
  },
  {
    "text": "lossless serialization and deserialization because javascript uses this identity function",
    "start": "1725360",
    "end": "1734080"
  },
  {
    "text": "which takes anything and just gives it back as it is now is this cheating well maybe is it",
    "start": "1734080",
    "end": "1741120"
  },
  {
    "text": "convenient most certainly so next time you",
    "start": "1741120",
    "end": "1746880"
  },
  {
    "text": "get fed up with serialization and decentralization think about javascript",
    "start": "1746880",
    "end": "1753840"
  },
  {
    "text": "okay that's enough javascript um let's go to react um well in fact react is a javascript",
    "start": "1754399",
    "end": "1761039"
  },
  {
    "text": "library remember they exist as a library not a",
    "start": "1761039",
    "end": "1766240"
  },
  {
    "text": "framework it's important if you uh want to um you know speak as a front-end developer if that matters",
    "start": "1766240",
    "end": "1776080"
  },
  {
    "text": "for one of my very first react tasks i opened the code and stared in complete",
    "start": "1776080",
    "end": "1782320"
  },
  {
    "text": "disbelief at something like this on the screen i couldn't believe what i was looking at",
    "start": "1782320",
    "end": "1790000"
  },
  {
    "text": "this is wrong on so many levels yuck now first of all",
    "start": "1790000",
    "end": "1796480"
  },
  {
    "text": "where is the view or template and why is there html in my controller",
    "start": "1796480",
    "end": "1804640"
  },
  {
    "text": "it took me quite a while to get over this initial short until a big realization came over me",
    "start": "1805120",
    "end": "1811360"
  },
  {
    "text": "and by looking back and my days with views and templates",
    "start": "1811360",
    "end": "1818159"
  },
  {
    "text": "the templating problem you see we start using templates with something",
    "start": "1820480",
    "end": "1827760"
  },
  {
    "text": "that is neat and tidy with html text only just data no code inside perfect yay",
    "start": "1827760",
    "end": "1837279"
  },
  {
    "text": "however one day we decided wouldn't our lives be much easier if we",
    "start": "1837279",
    "end": "1843840"
  },
  {
    "text": "can dynamically generate list item text from a collection of objects",
    "start": "1843840",
    "end": "1848880"
  },
  {
    "text": "right so we introduce a special syntax for loops",
    "start": "1848880",
    "end": "1855360"
  },
  {
    "text": "then effect statements and switch cases before you have a chance to reconsider",
    "start": "1855760",
    "end": "1861279"
  },
  {
    "text": "there's a new language to learn if you're lucky it might look like the same language that we use",
    "start": "1861279",
    "end": "1868320"
  },
  {
    "text": "but sometimes it's not even if it is would have various quirks and gotchas",
    "start": "1868320",
    "end": "1875519"
  },
  {
    "text": "it's a trap it's a trap now with that in mind",
    "start": "1875519",
    "end": "1883200"
  },
  {
    "text": "if we look it back up look back at this it's not that bad now tell you something these html tags",
    "start": "1883200",
    "end": "1890720"
  },
  {
    "text": "they're actually javascript functions in disguise so div is actually a function button is a function",
    "start": "1890720",
    "end": "1897440"
  },
  {
    "text": "and they play really nicely with the rest of our code no extra templating language to learn",
    "start": "1897440",
    "end": "1905600"
  },
  {
    "text": "what to believe right now what's also important here",
    "start": "1905600",
    "end": "1911360"
  },
  {
    "text": "is the html template becomes first class which means it's",
    "start": "1911360",
    "end": "1917519"
  },
  {
    "text": "malleable and it's up to any sort of manipulation we can do with any other codes values",
    "start": "1917519",
    "end": "1925360"
  },
  {
    "text": "variables all in all it turns out to be a pretty smart decision",
    "start": "1925360",
    "end": "1932080"
  },
  {
    "text": "and remember what i said about css being ugly and unpredictable well to make it",
    "start": "1932080",
    "end": "1938559"
  },
  {
    "text": "even more weird there are people who put css in javascript now",
    "start": "1938559",
    "end": "1945600"
  },
  {
    "text": "and css in js relish that thought never mind the angry",
    "start": "1945600",
    "end": "1953840"
  },
  {
    "text": "face is actually really really cool css and js it makes css much more predictable",
    "start": "1953840",
    "end": "1963120"
  },
  {
    "text": "so we'll let that go but there's something else that really connects me",
    "start": "1963120",
    "end": "1969120"
  },
  {
    "text": "there are nothing but naked functions everywhere no classes no name spaces",
    "start": "1969600",
    "end": "1976159"
  },
  {
    "text": "is madness dude where's my class i mean it was back in 2019",
    "start": "1976159",
    "end": "1983200"
  },
  {
    "text": "i understand we were less much less civilized back then right still we were not savages and um and",
    "start": "1983200",
    "end": "1990880"
  },
  {
    "text": "this was the most popular front-end framework library there is",
    "start": "1990880",
    "end": "1998559"
  },
  {
    "text": "so it took to the internet and found code snippets like this and i thought phew well at least",
    "start": "1998559",
    "end": "2005519"
  },
  {
    "text": "some people had good sense eventually it's a bit late but you know better than never i could",
    "start": "2005519",
    "end": "2012000"
  },
  {
    "text": "forgive and forget i'm a nice guy and then i found out this was actually the old way of writing",
    "start": "2012000",
    "end": "2018720"
  },
  {
    "text": "react what a blow and not for the first time",
    "start": "2018720",
    "end": "2024000"
  },
  {
    "text": "in my life i missed out on golden age that's our joke of course slowly i got",
    "start": "2024000",
    "end": "2030640"
  },
  {
    "text": "used to functions and i might say i really loved it since i got used to i don't really miss",
    "start": "2030640",
    "end": "2037039"
  },
  {
    "text": "the classes with react or the new functional react",
    "start": "2037039",
    "end": "2043120"
  },
  {
    "text": "you don't even have to look functions are everywhere in new code bases",
    "start": "2043120",
    "end": "2048560"
  },
  {
    "text": "you just don't find classes it's very very rare to find classes",
    "start": "2048560",
    "end": "2054240"
  },
  {
    "text": "now i really want to understand the reasoning behind this really bossy and backward",
    "start": "2054320",
    "end": "2061200"
  },
  {
    "text": "decision right and i found the introduction to hooks oh my god the bad things they can say",
    "start": "2061200",
    "end": "2066878"
  },
  {
    "text": "about javascript which we can all agree but also on classes which",
    "start": "2066879",
    "end": "2073118"
  },
  {
    "text": "a lot of us would be offended imagine the poop storm right what's amazing they pushed it through so",
    "start": "2073119",
    "end": "2080000"
  },
  {
    "text": "now we're all dealing with nothing but functions react",
    "start": "2080000",
    "end": "2085200"
  },
  {
    "text": "at least a new react as it stands if not single-handedly i think react had",
    "start": "2085200",
    "end": "2092000"
  },
  {
    "text": "a big role to play in switching the web front-end trend from mostly object-oriented to",
    "start": "2092000",
    "end": "2098480"
  },
  {
    "text": "functional programming this is quite exceptional in my opinion",
    "start": "2098480",
    "end": "2103599"
  },
  {
    "text": "think about it they've been functional programmers crying our hearts out trying to get more adoption",
    "start": "2103599",
    "end": "2110880"
  },
  {
    "text": "but at the end it's the javascript people did it who would have thought so",
    "start": "2110880",
    "end": "2117920"
  },
  {
    "text": "the moral is if you want to taste the functional programming just write some react",
    "start": "2117920",
    "end": "2124880"
  },
  {
    "text": "ironically because how well they made this move i personally knew",
    "start": "2125760",
    "end": "2132400"
  },
  {
    "text": "people who write functional react for a living without being aware now they may be",
    "start": "2132400",
    "end": "2138720"
  },
  {
    "text": "considered by others as functional programmers you tell them they're functional they'd",
    "start": "2138720",
    "end": "2144720"
  },
  {
    "text": "be like what [Music] i'm functional well you're certainly not",
    "start": "2144720",
    "end": "2150560"
  },
  {
    "text": "an object-oriented programmer anymore right they won't be happy seeing your face at their party",
    "start": "2150560",
    "end": "2157040"
  },
  {
    "text": "use functions every day come on you've got to pick a side dudes",
    "start": "2157040",
    "end": "2162640"
  },
  {
    "text": "just so you know react hooks um seems to have drawn inspirations for more traditional functional languages",
    "start": "2163359",
    "end": "2169920"
  },
  {
    "text": "such as this thing called algae bright effect from old camel so react really goes",
    "start": "2169920",
    "end": "2177520"
  },
  {
    "text": "very very deep so next time you want no doubt read some",
    "start": "2177520",
    "end": "2183200"
  },
  {
    "text": "react proposals the quiz came up",
    "start": "2183200",
    "end": "2190400"
  },
  {
    "text": "what is the biggest difference between coding for http server in a browser application",
    "start": "2190720",
    "end": "2201839"
  },
  {
    "text": "okay i'll go to the revelation state in my opinion of course",
    "start": "2201920",
    "end": "2208320"
  },
  {
    "text": "now hcp is supposed to be stateless the client side will keep states throughout the session",
    "start": "2208320",
    "end": "2215520"
  },
  {
    "text": "this has deep implications that we won't go into today",
    "start": "2215520",
    "end": "2222799"
  },
  {
    "text": "but let's think this interesting thought if i were to make b if i were to be",
    "start": "2224800",
    "end": "2230880"
  },
  {
    "text": "matchmaking classes and functions on one side",
    "start": "2230880",
    "end": "2236160"
  },
  {
    "text": "to http server and web client on the other state would be my main",
    "start": "2236160",
    "end": "2243520"
  },
  {
    "text": "consideration now class seems pretty good at holding",
    "start": "2243520",
    "end": "2248960"
  },
  {
    "text": "state and functions really good at being stateless on the other side",
    "start": "2248960",
    "end": "2254320"
  },
  {
    "text": "http it's supposed to be stateless and web client site of course it's stateful",
    "start": "2254320",
    "end": "2261599"
  },
  {
    "text": "well it's too obvious isn't it you know where the arrows are going",
    "start": "2261599",
    "end": "2267520"
  },
  {
    "text": "it's matchmating well um not really",
    "start": "2267520",
    "end": "2274560"
  },
  {
    "text": "it would seem people are not really thinking straight when such decisions are made if they're made at all software is weird",
    "start": "2275040",
    "end": "2285839"
  },
  {
    "text": "okay we mentioned state how can we manage state",
    "start": "2287760",
    "end": "2294319"
  },
  {
    "text": "navy design would look like this we have a centralized state which every",
    "start": "2294480",
    "end": "2300240"
  },
  {
    "text": "so popular these days the state will flow into components",
    "start": "2300240",
    "end": "2306480"
  },
  {
    "text": "the components receive user input and triggers event handlers or api calls",
    "start": "2306880",
    "end": "2313599"
  },
  {
    "text": "which in turn would result in state being updated",
    "start": "2313599",
    "end": "2318640"
  },
  {
    "text": "an updated state would trigger components to be notified and",
    "start": "2318640",
    "end": "2325599"
  },
  {
    "text": "the components could update themselves plain and simple there's just one",
    "start": "2325599",
    "end": "2331280"
  },
  {
    "text": "problem with this small this model there's only one state object and it's being updated",
    "start": "2331280",
    "end": "2339760"
  },
  {
    "text": "in place so it would be really hard to find out when and where the state has changed",
    "start": "2339760",
    "end": "2348720"
  },
  {
    "text": "so this may sound oversimplified i tell you what at one point of time",
    "start": "2349440",
    "end": "2354800"
  },
  {
    "text": "quite a few front-end frameworks or libraries had a major struggle struggle with",
    "start": "2354800",
    "end": "2361440"
  },
  {
    "text": "detecting state changes and there were some pretty pretty ugly workarounds",
    "start": "2361440",
    "end": "2368720"
  },
  {
    "text": "which is not the case with react now typical react applications manage",
    "start": "2368720",
    "end": "2374000"
  },
  {
    "text": "state in this interesting model i should note this",
    "start": "2374000",
    "end": "2379520"
  },
  {
    "text": "might not have originated from the react world inspirations could have come from other",
    "start": "2379520",
    "end": "2385680"
  },
  {
    "text": "places have you heard of a theory that says time is immutable",
    "start": "2385680",
    "end": "2391119"
  },
  {
    "text": "it's mind-boggling stuff but i i think people sort of took that seriously and took that",
    "start": "2391119",
    "end": "2397359"
  },
  {
    "text": "into front-end programming and we consider state immutable",
    "start": "2397359",
    "end": "2404480"
  },
  {
    "text": "if we do that a new model arises and it can be quite liberating mind you",
    "start": "2404480",
    "end": "2410319"
  },
  {
    "text": "and this is how it works every time we want to update the state instead of creating a new state",
    "start": "2410319",
    "end": "2418000"
  },
  {
    "text": "instead of updating a field in place we just create a new state a brand new one okay",
    "start": "2418000",
    "end": "2425200"
  },
  {
    "text": "and this new state will result in new components being created",
    "start": "2425200",
    "end": "2430880"
  },
  {
    "text": "and we only care about the newest ones we don't care about the old ones but what about the old ones those states and",
    "start": "2431200",
    "end": "2437680"
  },
  {
    "text": "old components well we don't care we just chalk them away and let the browser garbage collect",
    "start": "2437680",
    "end": "2443520"
  },
  {
    "text": "them so this is my interpretation of how",
    "start": "2443520",
    "end": "2448640"
  },
  {
    "text": "status management would react and a lot of front-end libraries and frameworks i dare say it's quite the",
    "start": "2448640",
    "end": "2456880"
  },
  {
    "text": "quantum leap in state management it's crazy isn't it just charcoal states away",
    "start": "2456880",
    "end": "2466079"
  },
  {
    "text": "yet another subtle aspect to this there's a thing called redux sagas",
    "start": "2466079",
    "end": "2473280"
  },
  {
    "text": "it kind of leads us leads us towards putting all side effecting operations",
    "start": "2473280",
    "end": "2479200"
  },
  {
    "text": "or more specifically api calls into a special place that is called use your",
    "start": "2479200",
    "end": "2485839"
  },
  {
    "text": "imagination sagas which are just a special form of functions really now one consequence",
    "start": "2485839",
    "end": "2492240"
  },
  {
    "text": "from doing this is now the rest of the application does not have to deal with the side effects",
    "start": "2492240",
    "end": "2499119"
  },
  {
    "text": "they just deal with we guessed it data take data and",
    "start": "2499119",
    "end": "2506000"
  },
  {
    "text": "output data and that simple thing really enables us",
    "start": "2506000",
    "end": "2511680"
  },
  {
    "text": "to push for something called purity which just means free of side",
    "start": "2511680",
    "end": "2518960"
  },
  {
    "text": "effects and it turns out purity is really really a nice character to have",
    "start": "2518960",
    "end": "2525359"
  },
  {
    "text": "for any coat not just front end another consequence of this design is",
    "start": "2525359",
    "end": "2532160"
  },
  {
    "text": "now we can swap out any side effects for another set of side effects easily",
    "start": "2532160",
    "end": "2537920"
  },
  {
    "text": "because they're in one place this can be utilized for integration testing to mock",
    "start": "2537920",
    "end": "2542960"
  },
  {
    "text": "out api calls and i must tell you it is a game changer",
    "start": "2542960",
    "end": "2548319"
  },
  {
    "text": "so next time you find yourself struggling with managing stage side effects or integration testing",
    "start": "2548319",
    "end": "2554560"
  },
  {
    "text": "think about react use testing when i was doing back end i",
    "start": "2554560",
    "end": "2561440"
  },
  {
    "text": "really love interfaces and walking i'd say i can't imagine writing a new test without walking",
    "start": "2561440",
    "end": "2567359"
  },
  {
    "text": "now because frontend is so functional i was quite lost for a while i wouldn't know how to start writing",
    "start": "2567359",
    "end": "2573040"
  },
  {
    "text": "green tests without mocking but soon i found out because",
    "start": "2573040",
    "end": "2579280"
  },
  {
    "text": "we use functions and functions are stateless most hopefully or even pure",
    "start": "2579280",
    "end": "2585920"
  },
  {
    "text": "the only thing i have to worry about is output by strong input so most of my tests become something",
    "start": "2585920",
    "end": "2592079"
  },
  {
    "text": "like this i kid you not 95 of my tests there's two lines of code",
    "start": "2592079",
    "end": "2599760"
  },
  {
    "text": "the focus of course is a buff it's how to make smart test cases and now i can try",
    "start": "2599760",
    "end": "2606800"
  },
  {
    "text": "really hard to break my code by giving as many test cases as possible",
    "start": "2606800",
    "end": "2612240"
  },
  {
    "text": "it's easier and definitely more fun i tell you i don't miss smoking at all",
    "start": "2612240",
    "end": "2620240"
  },
  {
    "text": "now if you keep writing unit tests like this one day you'll realize oh this is quite manual and tedious",
    "start": "2620240",
    "end": "2625839"
  },
  {
    "text": "really could there be a better way to do this well yes indeed there is a thing called",
    "start": "2625839",
    "end": "2632640"
  },
  {
    "text": "fast check which helps do something called property based testing",
    "start": "2632640",
    "end": "2639920"
  },
  {
    "text": "it just generates test data for us in a very smart sometimes even evil way to try to",
    "start": "2641680",
    "end": "2647839"
  },
  {
    "text": "break our code really cool you should totally check it out now to be fair property-based",
    "start": "2647839",
    "end": "2655119"
  },
  {
    "text": "testing is not really just a front-end thing it's with most mainstream languages but",
    "start": "2655119",
    "end": "2662160"
  },
  {
    "text": "again i can't learn it from the front end so next time you find yourself really",
    "start": "2662160",
    "end": "2667839"
  },
  {
    "text": "hate mocking think about functions and fast check",
    "start": "2667839",
    "end": "2672960"
  },
  {
    "text": "you have to move very quickly um this famous testing pyramid",
    "start": "2672960",
    "end": "2680240"
  },
  {
    "text": "i don't want to bore you with all the details but i want you to notice how unit test is with a sent sign and on",
    "start": "2680800",
    "end": "2687520"
  },
  {
    "text": "the top end-to-end test it with uh three dollar signs",
    "start": "2687520",
    "end": "2692480"
  },
  {
    "text": "well it just means if something is too expensive we shouldn't do too much of it i'm sorry to break this to you but",
    "start": "2693200",
    "end": "2699440"
  },
  {
    "text": "software is not too much different than shopping now the problem with this",
    "start": "2699440",
    "end": "2705520"
  },
  {
    "text": "is that unites is great it's cheap but it doesn't really give me quite the confidence that i need um",
    "start": "2705520",
    "end": "2713920"
  },
  {
    "text": "that i would get from integrated tests that my software works as a whole",
    "start": "2713920",
    "end": "2719839"
  },
  {
    "text": "what if i really need more confidence with more integrated tests",
    "start": "2719839",
    "end": "2725280"
  },
  {
    "text": "well the problem with end-to-end testing is that they need to talk to the browser",
    "start": "2725280",
    "end": "2732079"
  },
  {
    "text": "and because the browser lives in a separate process even when it's headless there's a lot of",
    "start": "2732079",
    "end": "2738160"
  },
  {
    "text": "inter process communication that is really expensive to create to run and to",
    "start": "2738160",
    "end": "2744839"
  },
  {
    "text": "maintain now for a long time tell you there was no alternatives what are we",
    "start": "2744839",
    "end": "2750319"
  },
  {
    "text": "stuck well not really here's an idea",
    "start": "2750319",
    "end": "2756400"
  },
  {
    "text": "what if we have an in-process browser well first of all it'd be much faster",
    "start": "2756400",
    "end": "2763920"
  },
  {
    "text": "because all communication would be in process now well secondly the browser becomes first",
    "start": "2763920",
    "end": "2770000"
  },
  {
    "text": "class something that i can that i can make me um that i can manipulate",
    "start": "2770000",
    "end": "2777200"
  },
  {
    "text": "the same way i manipulate my code remember the magic word first class",
    "start": "2777200",
    "end": "2784880"
  },
  {
    "text": "first class like a code not really so these adorable people make this",
    "start": "2786480",
    "end": "2792240"
  },
  {
    "text": "library called jstone they did exactly that it turned it made",
    "start": "2792240",
    "end": "2797599"
  },
  {
    "text": "it's a browser that you can call as a function it is you guessed it first",
    "start": "2797599",
    "end": "2802960"
  },
  {
    "text": "class so this these this is the example of tests you can",
    "start": "2802960",
    "end": "2808079"
  },
  {
    "text": "write some um react testing library which utilizes js dom",
    "start": "2808079",
    "end": "2814079"
  },
  {
    "text": "and you can see these tests use user events as if there is a screen",
    "start": "2814079",
    "end": "2821680"
  },
  {
    "text": "but in fact the browser has just a javascript function that you can call and it does",
    "start": "2821680",
    "end": "2828880"
  },
  {
    "text": "all the rendering and all the feedback for you in process truly amazing stuff",
    "start": "2828880",
    "end": "2835599"
  },
  {
    "text": "what follows is its diamond thing integration test becomes much cheaper it",
    "start": "2835599",
    "end": "2841760"
  },
  {
    "text": "becomes a scent as well so what do we do if we go be shopping it's a good thing well we",
    "start": "2841760",
    "end": "2849760"
  },
  {
    "text": "have to write more of them it'll be silly not to right so next next time you feel pain about",
    "start": "2849760",
    "end": "2856800"
  },
  {
    "text": "writing end-to-end tests think about jstorm and testing library",
    "start": "2856800",
    "end": "2862400"
  },
  {
    "text": "now some of you might have noticed what is that uh static pedestal at the bottom that is holding",
    "start": "2863119",
    "end": "2869200"
  },
  {
    "text": "the diamond what is that about okay to a certain",
    "start": "2869200",
    "end": "2874319"
  },
  {
    "text": "extent you have you might have expected this very much this means one thing to me",
    "start": "2874319",
    "end": "2879839"
  },
  {
    "text": "typescript has anybody told you that typescript",
    "start": "2879839",
    "end": "2885839"
  },
  {
    "text": "it's just like c sharp plus javascript or java plus javascript",
    "start": "2885839",
    "end": "2891440"
  },
  {
    "text": "well i was kind of told um and i was quite happy with that understanding for quite some time",
    "start": "2891440",
    "end": "2897520"
  },
  {
    "text": "until one day i bumped into something slightly disturbing",
    "start": "2897520",
    "end": "2905119"
  },
  {
    "text": "what is with this return type thing apparently it's very cold there's no",
    "start": "2905599",
    "end": "2913839"
  },
  {
    "text": "squiggly lines there but is it a type is it a type it",
    "start": "2913839",
    "end": "2920319"
  },
  {
    "text": "it's got type of make person which is a function in there how is that allowed certainly you can't",
    "start": "2920319",
    "end": "2927599"
  },
  {
    "text": "do this in c sharp or java i'm quite sure even in c sharp 9.",
    "start": "2927599",
    "end": "2933359"
  },
  {
    "text": "strange sense right and look at this piece of code this is",
    "start": "2933359",
    "end": "2941119"
  },
  {
    "text": "liberal use of magic strings right surely we should convert them to const",
    "start": "2941119",
    "end": "2948079"
  },
  {
    "text": "barcode bad code however it turned out that i cannot even",
    "start": "2950640",
    "end": "2957040"
  },
  {
    "text": "touch these values i'll show you why",
    "start": "2957040",
    "end": "2961359"
  },
  {
    "text": "you think if there are strings surely i can change it to another string oh no typescript doesn't like it",
    "start": "2966000",
    "end": "2974319"
  },
  {
    "text": "what does it say well this type should be just one of these values apparently this is not allowed",
    "start": "2974319",
    "end": "2982559"
  },
  {
    "text": "now before i explain more i want you to look at this okay only friday is nice",
    "start": "2982559",
    "end": "2991040"
  },
  {
    "text": "but if you look this weekday type thing is that a type is it a bunch of values",
    "start": "2991040",
    "end": "2999838"
  },
  {
    "text": "well it's hard to make sense of it right well it turns out it's kind of both it's both type and",
    "start": "3000480",
    "end": "3006400"
  },
  {
    "text": "values and once we use that as",
    "start": "3006400",
    "end": "3013040"
  },
  {
    "text": "to restrict the type of weekday the only values we can pass into this is",
    "start": "3013040",
    "end": "3019680"
  },
  {
    "text": "nice function well certainly not saturday why because saturday is not allowed here",
    "start": "3019680",
    "end": "3026800"
  },
  {
    "text": "so we have to pass who is that ease and this is called",
    "start": "3026800",
    "end": "3032880"
  },
  {
    "text": "a union type and the way you use string literals let's type is called",
    "start": "3032880",
    "end": "3039359"
  },
  {
    "text": "literal type quite new right so",
    "start": "3039359",
    "end": "3048240"
  },
  {
    "text": "back here it's a bit more than that um the action",
    "start": "3048800",
    "end": "3057440"
  },
  {
    "text": "action type is a union of many many actions and each would have a type field and",
    "start": "3057440",
    "end": "3064160"
  },
  {
    "text": "typescript is smart enough to guess okay this type",
    "start": "3064160",
    "end": "3069200"
  },
  {
    "text": "field must be of these values only that's why we can't simply put in any other value now",
    "start": "3069200",
    "end": "3076319"
  },
  {
    "text": "if i were being a good developer and try to make these",
    "start": "3076319",
    "end": "3081760"
  },
  {
    "text": "costs i would lose all the type safety and auto completion i could have done a",
    "start": "3081760",
    "end": "3088319"
  },
  {
    "text": "terrible thing so i'm sure glad that i didn't do that",
    "start": "3088319",
    "end": "3097359"
  },
  {
    "text": "so this is just um how the actions are built and you can see it's a bit more complex",
    "start": "3097359",
    "end": "3105040"
  },
  {
    "text": "than monday to friday we'll see another",
    "start": "3105040",
    "end": "3110559"
  },
  {
    "text": "classic example your payment types now you see shop for java or object or",
    "start": "3110559",
    "end": "3116160"
  },
  {
    "text": "into language and you think you have a base class or interface but then if you look at by cache it doesn't have",
    "start": "3116160",
    "end": "3123200"
  },
  {
    "text": "any field well because you know cash is cash you just keep people money right don't need a bank expiry",
    "start": "3123200",
    "end": "3131760"
  },
  {
    "text": "well in typescript it's done a bit differently",
    "start": "3134400",
    "end": "3139839"
  },
  {
    "text": "we kind of just write out these types as they are except with a type field",
    "start": "3142000",
    "end": "3149920"
  },
  {
    "text": "and we union them into one type and guess what when we use them so again",
    "start": "3150880",
    "end": "3160640"
  },
  {
    "text": "we type through guessed what this type field must be of these three values but here you also guessed",
    "start": "3160640",
    "end": "3168480"
  },
  {
    "text": "well since the type field is check it must be this payment type must be the",
    "start": "3168480",
    "end": "3175280"
  },
  {
    "text": "by cheque payment type so you can only have bank or type you can't have expiry",
    "start": "3175280",
    "end": "3182720"
  },
  {
    "text": "union types great isn't it if i try to passing",
    "start": "3183680",
    "end": "3189839"
  },
  {
    "text": "another type no not allowed so next time you run into awkward",
    "start": "3189839",
    "end": "3196640"
  },
  {
    "text": "solutions bass classes or tag interfaces think about typescript well another",
    "start": "3196640",
    "end": "3203119"
  },
  {
    "text": "thing with this this trick the union types is that you don't have to write tests",
    "start": "3203119",
    "end": "3209680"
  },
  {
    "text": "to validate the input because as we've seen if you put in the wrong type for payment",
    "start": "3209680",
    "end": "3216400"
  },
  {
    "text": "it will be rejected by the compiler let's go to right",
    "start": "3216400",
    "end": "3222800"
  },
  {
    "text": "well have you come across time type fatigue they have a nicely designed complex domain character",
    "start": "3222800",
    "end": "3229200"
  },
  {
    "text": "everyone's happy with but one day you have to make a slight adjustment to it for example this person type i'm going",
    "start": "3229200",
    "end": "3237040"
  },
  {
    "text": "to make a formatted person type that turns every field including less including nested",
    "start": "3237040",
    "end": "3243040"
  },
  {
    "text": "ones into strings it's formatted right now in c sharp how do i do that",
    "start": "3243040",
    "end": "3250880"
  },
  {
    "text": "well i kind of want to use person type so i will need to make a generic person",
    "start": "3250880",
    "end": "3258160"
  },
  {
    "text": "type that allows birthday to be either a date or a string but then what about",
    "start": "3258160",
    "end": "3265040"
  },
  {
    "text": "other many other fields of different types it'd be a very ugly very annoying",
    "start": "3265040",
    "end": "3271280"
  },
  {
    "text": "person type well it seems the only option we have is to duplicate",
    "start": "3271280",
    "end": "3276799"
  },
  {
    "text": "a lot of code and just write out the types again",
    "start": "3276799",
    "end": "3281680"
  },
  {
    "text": "or is that the only option we have well not necessarily",
    "start": "3282000",
    "end": "3287200"
  },
  {
    "text": "if you look at this replace type it has tons of ternary operators but",
    "start": "3287359",
    "end": "3294400"
  },
  {
    "text": "what it does is it allows you to replace a type t from to t2 within this t type",
    "start": "3294400",
    "end": "3302880"
  },
  {
    "text": "you can't do this in c sharp k actually a lot of other languages",
    "start": "3304000",
    "end": "3309040"
  },
  {
    "text": "wouldn't allow you to do this so have a person we've seen the formatted person won't turn to",
    "start": "3309040",
    "end": "3314880"
  },
  {
    "text": "everything into strings but this is not necessary why because we can use this replace type",
    "start": "3314880",
    "end": "3321839"
  },
  {
    "text": "and look everything is turned into a string magical don't you love it",
    "start": "3321839",
    "end": "3328400"
  },
  {
    "text": "so react typescript writes types for us as",
    "start": "3328400",
    "end": "3336079"
  },
  {
    "text": "well sure it tries really hard to please us doesn't it so next time you find yourself with a",
    "start": "3336079",
    "end": "3341440"
  },
  {
    "text": "bit of type fatigue think about typescript",
    "start": "3341440",
    "end": "3348160"
  },
  {
    "text": "what's the catch with typescript it can't all be roses red carpet or champagne right it's got to be a catch well there is",
    "start": "3348160",
    "end": "3355680"
  },
  {
    "text": "a few and this is one of them it's beautiful on the inside ugly on the",
    "start": "3355680",
    "end": "3360839"
  },
  {
    "text": "outside well in a way this just means there's no type safety guarantee on external data",
    "start": "3360839",
    "end": "3370000"
  },
  {
    "text": "which means when you receive some data you think it's in a certain type but there's no guarantee so",
    "start": "3370000",
    "end": "3376960"
  },
  {
    "text": "there are alternatives or solutions one is to use a open api to generate up-to-date sdks",
    "start": "3376960",
    "end": "3384720"
  },
  {
    "text": "another alternative is to use typescript schema validator generators to generate a validators phew",
    "start": "3384720",
    "end": "3391839"
  },
  {
    "text": "i said that cool what was that um in summary i think",
    "start": "3391839",
    "end": "3398799"
  },
  {
    "text": "web front end it's as complex as anything else not more so it's evolving in lightning",
    "start": "3398799",
    "end": "3405040"
  },
  {
    "text": "speed or better or for worse it's championing some really cool ideas",
    "start": "3405040",
    "end": "3412559"
  },
  {
    "text": "much more king from me turned into admiration to be honest and it's an exciting place to be",
    "start": "3412799",
    "end": "3419839"
  },
  {
    "text": "although i have to warn you once you get used to a lot of front-end goodies you might get a",
    "start": "3419839",
    "end": "3426079"
  },
  {
    "text": "reverse culture shock when you go back to some back-end technologies you'd be missing union",
    "start": "3426079",
    "end": "3433760"
  },
  {
    "text": "types for example so i would encourage especially",
    "start": "3433760",
    "end": "3441839"
  },
  {
    "text": "us back-end developers give it a go as they say it's going to add more",
    "start": "3441839",
    "end": "3446960"
  },
  {
    "text": "pathway to your brain wow i admire myself for my timing",
    "start": "3446960",
    "end": "3452400"
  },
  {
    "text": "but um on that note we're down for the talk thank you so much for um joining me",
    "start": "3452400",
    "end": "3459200"
  },
  {
    "text": "i hope you found something interesting from this um let me see if there's any",
    "start": "3459200",
    "end": "3466079"
  },
  {
    "text": "questions not that i have any time i don't know that's perfect but um",
    "start": "3466079",
    "end": "3472960"
  },
  {
    "text": "thank you very much enjoy the rest of the conference",
    "start": "3472960",
    "end": "3478720"
  },
  {
    "text": "that's me",
    "start": "3479200",
    "end": "3489838"
  },
  {
    "text": "you",
    "start": "3493520",
    "end": "3495599"
  }
]